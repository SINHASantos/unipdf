//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sanitize ;import (_d "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/core";);

// Optimize optimizes `objects` and returns updated list of objects.
func (_cf *Sanitizer )Optimize (objects []_c .PdfObject )([]_c .PdfObject ,error ){return _cf .processObjects (objects );};

// New returns a new sanitizer object.
func New (opts SanitizationOpts )*Sanitizer {return &Sanitizer {_be :opts }};

// GetSuspiciousObjects returns a count of each detected suspicious object.
func (_fee *Sanitizer )GetSuspiciousObjects ()map[string ]int {return _fee ._f };

// SanitizationOpts specifies the objects to be removed during sanitization.
type SanitizationOpts struct{

// JavaScript specifies wether JavaScript action should be removed. JavaScript Actions, section 12.6.4.16 of PDF32000_2008
JavaScript bool ;

// URI specifies if URI actions should be removed. 12.6.4.7 URI Actions, PDF32000_2008.
URI bool ;

// GoToR removes remote GoTo actions. 12.6.4.3 Remote Go-To Actions, PDF32000_2008.
GoToR bool ;

// GoTo specifies wether GoTo actions should be removed. 12.6.4.2 Go-To Actions, PDF32000_2008.
GoTo bool ;

// RenditionJS enables removing of `JS` entry from a Rendition Action.
// The `JS` entry has a value of text string or stream containing a JavaScript script that shall be executed when the action is triggered.
// 12.6.4.13 Rendition Actions Table 214, PDF32000_2008.
RenditionJS bool ;

// OpenAction removes OpenAction entry from the document catalog.
OpenAction bool ;

// Launch specifies wether Launch Action should be removed.
// A launch action launches an application or opens or prints a document.
// 12.6.4.5 Launch Actions, PDF32000_2008.
Launch bool ;};func (_bed *Sanitizer )analyze (_bgf []_c .PdfObject ){_fbf :=map[string ]int {};for _ ,_gcc :=range _bgf {switch _dg :=_gcc .(type ){case *_c .PdfIndirectObject :_dfg ,_bfe :=_c .GetDict (_dg .PdfObject );if _bfe {if _ef ,_dge :=_c .GetName (_dfg .Get ("\u0054\u0079\u0070\u0065"));
_dge &&*_ef =="\u0043a\u0074\u0061\u006c\u006f\u0067"{if _ ,_gf :=_c .GetIndirect (_dfg .Get ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"));_gf {_fbf ["\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"]++;};}else if _baaa ,_dce :=_c .GetName (_dfg .Get ("\u0053"));
_dce {_dgb :=_baaa .String ();if _dgb =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"||_dgb =="\u0055\u0052\u0049"||_dgb =="\u0047\u006f\u0054\u006f"||_dgb =="\u0047\u006f\u0054o\u0052"||_dgb =="\u004c\u0061\u0075\u006e\u0063\u0068"{_fbf [_dgb ]++;
}else if _dgb =="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn"{if _ ,_efe :=_c .GetStream (_dfg .Get ("\u004a\u0053"));_efe {_fbf [_dgb ]++;};};}else if _cfa :=_dfg .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_cfa !=nil {_fbf ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;
}else if _ae ,_aaa :=_c .GetIndirect (_dfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aaa {if _bfg ,_ff :=_c .GetDict (_ae .PdfObject );_ff {if _acf ,_bedb :=_c .GetDict (_bfg .Get ("\u0041\u0041"));_bedb {_aba :=_acf .Get ("\u004b");_fg ,_bcf :=_c .GetIndirect (_aba );
if _bcf {if _bdc ,_bag :=_c .GetDict (_fg .PdfObject );_bag {if _fef ,_gcg :=_c .GetName (_bdc .Get ("\u0053"));_gcg &&*_fef =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_fbf ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;
}else if _ ,_efg :=_c .GetString (_bdc .Get ("\u004a\u0053"));_efg {_fbf ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;}else {_fc :=_acf .Get ("\u0046");if _fc !=nil {_dgd ,_agg :=_c .GetIndirect (_fc );if _agg {if _bfa ,_aca :=_c .GetDict (_dgd .PdfObject );
_aca {if _eb ,_aeg :=_c .GetName (_bfa .Get ("\u0053"));_aeg {_gg :=_eb .String ();_fbf [_gg ]++;};};};};};};};};};};};};};_bed ._f =_fbf ;};

// Sanitizer represents a sanitizer object.
// It implements the Optimizer interface to access the objects field from the writer.
type Sanitizer struct{_be SanitizationOpts ;_f map[string ]int ;};func (_e *Sanitizer )processObjects (_cb []_c .PdfObject )([]_c .PdfObject ,error ){_ce :=[]_c .PdfObject {};_g :=_e ._be ;for _ ,_cc :=range _cb {switch _bg :=_cc .(type ){case *_c .PdfIndirectObject :_a ,_eg :=_c .GetDict (_bg );
if _eg {if _ab ,_dc :=_c .GetName (_a .Get ("\u0054\u0079\u0070\u0065"));_dc &&*_ab =="\u0043a\u0074\u0061\u006c\u006f\u0067"{if _ ,_bd :=_c .GetIndirect (_a .Get ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"));_bd &&_g .OpenAction {_a .Remove ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e");
};}else if _ec ,_ag :=_c .GetName (_a .Get ("\u0053"));_ag {switch *_ec {case "\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074":if _g .JavaScript {if _bb ,_ee :=_c .GetStream (_a .Get ("\u004a\u0053"));_ee {_ge :=[]byte {};_af ,_df :=_c .MakeStream (_ge ,nil );
if _df ==nil {*_bb =*_af ;};};_d .Log .Debug ("\u004a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u0020a\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070p\u0065\u0064\u002e");continue ;};case "\u0055\u0052\u0049":if _g .URI {_d .Log .Debug ("\u0055\u0052\u0049\u0020ac\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070\u0070\u0065\u0064\u002e");
continue ;};case "\u0047\u006f\u0054\u006f":if _g .GoTo {_d .Log .Debug ("G\u004fT\u004f\u0020\u0061\u0063\u0074\u0069\u006f\u006e \u0073\u006b\u0069\u0070pe\u0064\u002e");continue ;};case "\u0047\u006f\u0054o\u0052":if _g .GoToR {_d .Log .Debug ("R\u0065\u006d\u006f\u0074\u0065\u0020G\u006f\u0054\u004f\u0020\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u006bi\u0070p\u0065\u0064\u002e");
continue ;};case "\u004c\u0061\u0075\u006e\u0063\u0068":if _g .Launch {_d .Log .Debug ("\u004a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u0020a\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070p\u0065\u0064\u002e");continue ;};case "\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn":if _afa ,_dd :=_c .GetStream (_a .Get ("\u004a\u0053"));
_dd {_ecd :=[]byte {};_fe ,_ba :=_c .MakeStream (_ecd ,nil );if _ba ==nil {*_afa =*_fe ;};};};}else if _ad :=_a .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_ad !=nil &&_g .JavaScript {continue ;}else if _ddf ,_db :=_c .GetName (_a .Get ("\u0054\u0079\u0070\u0065"));
_db &&*_ddf =="\u0041\u006e\u006eo\u0074"&&_g .JavaScript {if _ea ,_gc :=_c .GetIndirect (_a .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gc {if _cd ,_fd :=_c .GetDict (_ea .PdfObject );_fd {if _egc ,_bbg :=_c .GetDict (_cd .Get ("\u0041\u0041"));_bbg {_adb ,_fb :=_c .GetIndirect (_egc .Get ("\u004b"));
if _fb {if _ecb ,_gea :=_c .GetDict (_adb .PdfObject );_gea {if _aa ,_bf :=_c .GetName (_ecb .Get ("\u0053"));_bf &&*_aa =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_ecb .Clear ();}else if _bgb :=_egc .Get ("\u0046");_bgb !=nil {if _eaa ,_bc :=_c .GetIndirect (_bgb );
_bc {if _de ,_gca :=_c .GetDict (_eaa .PdfObject );_gca {if _baf ,_baa :=_c .GetName (_de .Get ("\u0053"));_baa &&*_baf =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_de .Clear ();};};};};};};};};};};};case *_c .PdfObjectStream :_d .Log .Debug ("\u0070d\u0066\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073t\u0072e\u0061m\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_bg );
case *_c .PdfObjectStreams :_d .Log .Debug ("\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0074\u0072\u0065\u0061\u006d\u0073\u0020\u0074\u0079\u0070e\u0020\u0025\u0054",_bg );default:_d .Log .Debug ("u\u006e\u006b\u006e\u006fwn\u0020p\u0064\u0066\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0025\u0054",_bg );
};_ce =append (_ce ,_cc );};_e .analyze (_ce );return _ce ,nil ;};