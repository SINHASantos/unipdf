//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_c "bytes";_ec "errors";_ad "fmt";_d "github.com/unidoc/unipdf/v4/common";_cd "github.com/unidoc/unipdf/v4/contentstream";_cde "github.com/unidoc/unipdf/v4/contentstream/draw";_f "github.com/unidoc/unipdf/v4/core";_bc "github.com/unidoc/unipdf/v4/creator";
_g "github.com/unidoc/unipdf/v4/internal/precision";_a "github.com/unidoc/unipdf/v4/internal/textencoding";_ed "github.com/unidoc/unipdf/v4/model";_da "image";_bd "math";_e "strings";_cb "time";_cc "unicode";);

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ed .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};func _dbe (_fde *_ed .PdfFieldText ,_ea _ed .PdfColor )(*_f .PdfObjectString ,error ){_bec :=_cd .ContentStreamOperations {};_fdc :=_egf (_fde .PdfField );_ecd ,_agc :=_cd .NewContentStreamParser (_fdc ).Parse ();if _agc !=nil {return nil ,_agc ;
};for _ ,_ccad :=range *_ecd {if _ccad .Operand =="\u0067"||_ccad .Operand =="\u0072\u0067"{continue ;};_bec =append (_bec ,_ccad );};_gdd ,_dd :=_ea .(*_ed .PdfColorDeviceRGB );if !_dd {return nil ,_agc ;};_dc ,_bgc ,_gdc :=_f .MakeFloat (_gdd [0]),_f .MakeFloat (_gdd [1]),_f .MakeFloat (_gdd [2]);
_cdb :=&_cd .ContentStreamOperation {Params :[]_f .PdfObject {_dc ,_bgc ,_gdc },Operand :"\u0072\u0067"};_bec =append (_bec ,_cdb );_bgg :=_bec .String ();_bgg =_e .Replace (_bgg ,"\u000a","\u0020",-1);_bgg =_e .Trim (_bgg ,"\u0020");return _f .MakeHexString (_bgg ),nil ;
};func _egc (_bcb *_ed .PdfAcroForm ,_ccc *_ed .PdfAnnotationWidget ,_cfa *_ed .PdfFieldChoice ,_gbae AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_eage ,_ddd :=_f .GetArray (_ccc .Rect );if !_ddd {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_eecea ,_bggb :=_ed .NewPdfRectangle (*_eage );if _bggb !=nil {return nil ,_bggb ;};_gee ,_eaab :=_eecea .Width (),_eecea .Height ();_d .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_ccc .BS );
_dac ,_bggb :=_cd .NewContentStreamParser (_egf (_cfa .PdfField )).Parse ();if _bggb !=nil {return nil ,_bggb ;};_gcea ,_dbc :=_f .GetDict (_ccc .MK );if _dbc {_cabg ,_ :=_f .GetDict (_ccc .BS );_ecae :=_gbae .applyAppearanceCharacteristics (_gcea ,_cabg ,nil );
if _ecae !=nil {return nil ,_ecae ;};};_dcg :=_f .MakeDict ();for _ ,_bbc :=range _cfa .Opt .Elements (){if _gaf ,_gab :=_f .GetArray (_bbc );_gab &&_gaf .Len ()==2{_bbc =_gaf .Get (1);};var _gceb string ;if _bfc ,_gac :=_f .GetString (_bbc );_gac {_gceb =_bfc .Decoded ();
}else if _fgc ,_bae :=_f .GetName (_bbc );_bae {_gceb =_fgc .String ();}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_bbc );
return nil ,_ec .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_gceb )> 0{_dea ,_geee :=_dde (_cfa .PdfField ,_gee ,_eaab ,_gceb ,_gbae ,_dac ,_bcb .DR ,_gcea );if _geee !=nil {return nil ,_geee ;
};_dcg .Set (*_f .MakeName (_gceb ),_dea .ToPdfObject ());};};_ebg :=_f .MakeDict ();_ebg .Set ("\u004e",_dcg );return _ebg ,nil ;};

// FormSubmitActionOptions holds options for creating a form submit button.
type FormSubmitActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _cde .Rectangle ;

// Url specifies the URL where the fieds will be submitted.
Url string ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ed .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ed .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be submitted.
// This list may contain indirect object to fields or field names.
Fields *_f .PdfObjectArray ;

// IsExclusionList specifies that the fields contain in `Fields` array would not be submitted.
IsExclusionList bool ;

// IncludeEmptyFields specifies if all fields would be submitted even though it's value is empty.
IncludeEmptyFields bool ;

// SubmitAsPDF specifies that the document shall be submitted as PDF.
// If set then all the other flags shall be ignored.
SubmitAsPDF bool ;};const (_dbcg =1;_fbac =2;_aac =4;_caac =8;_bbga =16;_abb =32;_aef =64;_baac =128;_dcdd =256;_ecfcf =512;_bbd =1024;_gdgg =2048;_gegd =4096;);func _dde (_cac *_ed .PdfField ,_cfc ,_dcec float64 ,_ddg string ,_bgbd AppearanceStyle ,_bfdf *_cd .ContentStreamOperations ,_dcef *_ed .PdfPageResources ,_cggf *_f .PdfObjectDictionary )(*_ed .XObjectForm ,error ){_badc :=_ed .NewPdfPageResources ();
_gfac ,_beb :=_cfc ,_dcec ;_fdga :=_cd .NewContentCreator ();if _bgbd .BorderSize > 0{_ffaa (_fdga ,_bgbd ,_cfc ,_dcec );};if _bgbd .DrawAlignmentReticle {_ggcb :=_bgbd ;_ggcb .BorderSize =0.2;_gdfc (_fdga ,_ggcb ,_cfc ,_dcec );};_fdga .Add_BMC ("\u0054\u0078");
_fdga .Add_q ();_fdga .Add_BT ();_cfc ,_dcec =_bgbd .applyRotation (_cggf ,_cfc ,_dcec ,_fdga );_aea ,_ebf ,_daa :=_bgbd .processDA (_cac ,_bfdf ,_dcef ,_badc ,_fdga );if _daa !=nil {return nil ,_daa ;};_caaf :=_aea .Font ;_gcgbd :=_aea .Size ;_bbcf :=_f .MakeName (_aea .Name );
_gbc :=_gcgbd ==0;if _gbc &&_ebf {_gcgbd =_dcec *_bgbd .AutoFontSizeFraction ;};_cbed :=_caaf .Encoder ();if _cbed ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cbed =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_ddg )==0{return nil ,nil ;};_eddfcb :=_cda ;if _bgbd .MarginLeft !=nil {_eddfcb =*_bgbd .MarginLeft ;};_baea :=0.0;if _cbed !=nil {for _ ,_caea :=range _ddg {_becfa ,_gad :=_caaf .GetRuneMetrics (_caea );
if !_gad {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_caea );
continue ;};_baea +=_becfa .Wx ;};_ddg =string (_cbed .Encode (_ddg ));};if _gcgbd ==0||_gbc &&_baea > 0&&_eddfcb +_baea *_gcgbd /1000.0> _cfc {_gcgbd =0.95*1000.0*(_cfc -_eddfcb )/_baea ;};_ffef :=1.0*_gcgbd ;_dafc :=2.0;{_eae :=_ffef ;if _gbc &&_dafc +_eae > _dcec {_gcgbd =0.95*(_dcec -_dafc );
_ffef =1.0*_gcgbd ;_eae =_ffef ;};if _dcec > _eae {_dafc =(_dcec -_eae )/2.0;_dafc +=1.50;};};_fdga .Add_Tf (*_bbcf ,_gcgbd );_fdga .Add_Td (_eddfcb ,_dafc );_fdga .Add_Tj (*_f .MakeString (_ddg ));_fdga .Add_ET ();_fdga .Add_Q ();_fdga .Add_EMC ();_gcf :=_ed .NewXObjectForm ();
_gcf .Resources =_badc ;_gcf .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_gfac ,_beb });_gcf .SetContentStream (_fdga .Bytes (),_bcef ());return _gcf ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ed .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _cde .LineEndingStyle ;LineEndingStyle2 _cde .LineEndingStyle ;};func _bcef ()_f .StreamEncoder {return _f .NewFlateEncoder ()};
func _cgge (_cede []float64 )[]float64 {var (_bfgb =len (_cede );_eaef =make ([]float64 ,_bfgb );_fbde =make ([]float64 ,_bfgb ););_fcdc :=2.0;_eaef [0]=_cede [0]/_fcdc ;for _ddfe :=1;_ddfe < _bfgb ;_ddfe ++{_fbde [_ddfe ]=1/_fcdc ;if _ddfe < _bfgb -1{_fcdc =4.0;
}else {_fcdc =3.5;};_fcdc -=_fbde [_ddfe ];_eaef [_ddfe ]=(_cede [_ddfe ]-_eaef [_ddfe -1])/_fcdc ;};for _cgbd :=1;_cgbd < _bfgb ;_cgbd ++{_eaef [_bfgb -_cgbd -1]-=_fbde [_bfgb -_cgbd ]*_eaef [_bfgb -_cgbd ];};return _eaef ;};func _ffaa (_dfeb *_cd .ContentCreator ,_afc AppearanceStyle ,_dcgb ,_ddba float64 ){_dfeb .Add_q ().Add_re (0,0,_dcgb ,_ddba ).Add_w (_afc .BorderSize ).SetStrokingColor (_afc .BorderColor ).SetNonStrokingColor (_afc .FillColor ).Add_B ().Add_Q ();
};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_ecb FieldAppearance )Style ()AppearanceStyle {if _ecb ._egb !=nil {return *_ecb ._egb ;};_ggf :=_cda ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_ed .NewPdfColorDeviceGray (0),FillColor :_ed .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_ggf };
};func _bfcb (_fggd _da .Image ,_aebc string ,_bagb *SignatureFieldOpts ,_eee []float64 ,_adcc *_cd .ContentCreator )(*_f .PdfObjectName ,*_ed .XObjectImage ,error ){_cdebe ,_bfe :=_ed .DefaultImageHandler {}.NewImageFromGoImage (_fggd );if _bfe !=nil {return nil ,nil ,_bfe ;
};_cggg ,_bfe :=_ed .NewXObjectImageFromImage (_cdebe ,nil ,_bagb .Encoder );if _bfe !=nil {return nil ,nil ,_bfe ;};_baed ,_fdgb :=float64 (*_cggg .Width ),float64 (*_cggg .Height );_ffce :=_eee [2]-_eee [0];_feg :=_eee [3]-_eee [1];if _bagb .AutoSize {_eabf :=_bd .Min (_ffce /_baed ,_feg /_fdgb );
_baed *=_eabf ;_fdgb *=_eabf ;_eee [0]=_eee [0]+(_ffce /2)-(_baed /2);_eee [1]=_eee [1]+(_feg /2)-(_fdgb /2);};var _bbgf *_f .PdfObjectName ;if _cge ,_gfbb :=_f .GetName (_cggg .Name );_gfbb {_bbgf =_cge ;}else {_bbgf =_f .MakeName (_aebc );};if _adcc !=nil {_adcc .Add_q ().Translate (_eee [0],_eee [1]).Scale (_baed ,_fdgb ).Add_Do (*_bbgf ).Add_Q ();
}else {return nil ,nil ,_ec .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _bbgf ,_cggg ,nil ;};func _dbde (_ebea RectangleAnnotationDef )(*_f .PdfObjectDictionary ,*_ed .PdfRectangle ,error ){_bfca :=_ed .NewXObjectForm ();
_bfca .Resources =_ed .NewPdfPageResources ();_bcae :="";if _ebea .Opacity < 1.0{_aacc :=_f .MakeDict ();_aacc .Set ("\u0063\u0061",_f .MakeFloat (_ebea .Opacity ));_aacc .Set ("\u0043\u0041",_f .MakeFloat (_ebea .Opacity ));_fgbd :=_bfca .Resources .AddExtGState ("\u0067\u0073\u0031",_aacc );
if _fgbd !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fgbd ;};_bcae ="\u0067\u0073\u0031";};_fded ,_cebf ,_bbdg ,_fccd :=_adea (_ebea ,_bcae );
if _fccd !=nil {return nil ,nil ,_fccd ;};_fccd =_bfca .SetContentStream (_fded ,nil );if _fccd !=nil {return nil ,nil ,_fccd ;};_bfca .BBox =_cebf .ToPdfObject ();_fbba :=_f .MakeDict ();_fbba .Set ("\u004e",_bfca .ToPdfObject ());return _fbba ,_bbdg ,nil ;
};

// NewFormResetButtonField would create a reset button in specified page according to the parameter in `FormResetActionOptions`.
func NewFormResetButtonField (page *_ed .PdfPage ,opt FormResetActionOptions )(*_ed .PdfFieldButton ,error ){_bdad :=_ed .NewPdfActionResetForm ();_bdad .Fields =opt .Fields ;_bdad .Flags =_f .MakeInteger (0);if opt .IsExclusionList {_bdad .Flags =_f .MakeInteger (1);
};_acbd ,_daaf :=_edca (page ,opt .Rectangle ,"\u0062\u0074\u006e\u0052\u0065\u0073\u0065\u0074",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_bdad .ToPdfObject ());if _daaf !=nil {return nil ,_daaf ;};return _acbd ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ed .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ed .PdfFieldChoice ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ebd :=_ed .NewPdfField ();_ccg :=&_ed .PdfFieldChoice {};_ebd .SetContext (_ccg );_ccg .PdfField =_ebd ;_ccg .T =_f .MakeString (name );_ccg .Opt =_f .MakeArray ();for _ ,_acc :=range opt .Choices {_ccg .Opt .Append (_f .MakeString (_acc ));};_ccg .SetFlag (_ed .FieldFlagCombo );
_agde :=_ed .NewPdfAnnotationWidget ();_agde .Rect =_f .MakeArrayFromFloats (rect );_agde .P =page .ToPdfObject ();_agde .F =_f .MakeInteger (4);_agde .Parent =_ccg .ToPdfObject ();_ccg .Annotations =append (_ccg .Annotations ,_agde );return _ccg ,nil ;
};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_aacg ImageFieldAppearance )Style ()AppearanceStyle {if _aacg ._abgf !=nil {return *_aacg ._abgf ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_ed .NewPdfColorDeviceGray (0),FillColor :_ed .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _cg (_db CircleAnnotationDef ,_be string )([]byte ,*_ed .PdfRectangle ,*_ed .PdfRectangle ,error ){_edd :=_cde .Circle {X :_db .X ,Y :_db .Y ,Width :_db .Width ,Height :_db .Height ,FillEnabled :_db .FillEnabled ,FillColor :_db .FillColor ,BorderEnabled :_db .BorderEnabled ,BorderWidth :_db .BorderWidth ,BorderColor :_db .BorderColor ,Opacity :_db .Opacity };
_df ,_cbg ,_bdb :=_edd .Draw (_be );if _bdb !=nil {return nil ,nil ,nil ,_bdb ;};_eg :=&_ed .PdfRectangle {};_eg .Llx =_db .X +_cbg .Llx ;_eg .Lly =_db .Y +_cbg .Lly ;_eg .Urx =_db .X +_cbg .Urx ;_eg .Ury =_db .Y +_cbg .Ury ;return _df ,_cbg ,_eg ,nil ;
};const (_ece quadding =0;_gca quadding =1;_cca quadding =2;_cda float64 =2.0;);func _fba (_agg *_ed .PdfAnnotationWidget ,_eddfc *_ed .PdfFieldButton ,_abgd *_ed .PdfPageResources ,_abga AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_gfg ,_ddcd :=_f .GetArray (_agg .Rect );
if !_ddcd {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ga ,_bdae :=_ed .NewPdfRectangle (*_gfg );if _bdae !=nil {return nil ,_bdae ;};_abfe ,_edcb :=_ga .Width (),_ga .Height ();_adeeg ,_cead :=_abfe ,_edcb ;
_d .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_agg .BS );_cdeb ,_bdae :=_ed .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _bdae !=nil {return nil ,_bdae ;
};_fad ,_ffa :=_f .GetDict (_agg .MK );if _ffa {_dgdg ,_ :=_f .GetDict (_agg .BS );_ecbd :=_abga .applyAppearanceCharacteristics (_fad ,_dgdg ,_cdeb );if _ecbd !=nil {return nil ,_ecbd ;};};_fdee :=_ed .NewXObjectForm ();{_acg :=_cd .NewContentCreator ();
if _abga .BorderSize > 0{_ffaa (_acg ,_abga ,_abfe ,_edcb );};if _abga .DrawAlignmentReticle {_eeb :=_abga ;_eeb .BorderSize =0.2;_gdfc (_acg ,_eeb ,_abfe ,_edcb );};_abfe ,_edcb =_abga .applyRotation (_fad ,_abfe ,_edcb ,_acg );_fge :=_abga .AutoFontSizeFraction *_edcb ;
_ccab ,_bba :=_cdeb .GetRuneMetrics (_abga .CheckmarkRune );if !_bba {return nil ,_ec .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ead :=_cdeb .Encoder ();_geff :=_ead .Encode (string (_abga .CheckmarkRune ));
_cgca :=_ccab .Wx *_fge /1000.0;_dad :=705.0;_gccg :=_dad /1000.0*_fge ;_ccba :=_cda ;if _abga .MarginLeft !=nil {_ccba =*_abga .MarginLeft ;};_ecfc :=1.0;if _cgca < _abfe {_ccba =(_abfe -_cgca )/2.0;};if _gccg < _edcb {_ecfc =(_edcb -_gccg )/2.0;};_acg .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_fge ).Add_Td (_ccba ,_ecfc ).Add_Tj (*_f .MakeStringFromBytes (_geff )).Add_ET ().Add_Q ();
_fdee .Resources =_ed .NewPdfPageResources ();_fdee .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cdeb .ToPdfObject ());_fdee .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_adeeg ,_cead });_fdee .SetContentStream (_acg .Bytes (),_bcef ());};_edf :=_ed .NewXObjectForm ();
{_bgaa :=_cd .NewContentCreator ();if _abga .BorderSize > 0{_ffaa (_bgaa ,_abga ,_abfe ,_edcb );};_edf .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_adeeg ,_cead });_edf .SetContentStream (_bgaa .Bytes (),_bcef ());};_bef :=_f .PdfObjectName ("\u0059\u0065\u0073");
_bce ,_ffa :=_f .GetDict (_agg .PdfAnnotation .AP );if _ffa &&_bce !=nil {_faf :=_f .TraceToDirectObject (_bce .Get ("\u004e"));switch _eade :=_faf .(type ){case *_f .PdfObjectDictionary :_cga :=_eade .Keys ();for _ ,_ffc :=range _cga {if _ffc !="\u004f\u0066\u0066"{_bef =_ffc ;
};};};};_cbgb :=_f .MakeDict ();_cbgb .Set ("\u004f\u0066\u0066",_edf .ToPdfObject ());_cbgb .Set (_bef ,_fdee .ToPdfObject ());_gfd :=_f .MakeDict ();_gfd .Set ("\u004e",_cbgb );return _gfd ,nil ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_cde .Path ;

// Color is the color of the line. Default to black.
Color *_ed .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};func (_dee *AppearanceStyle )applyRotation (_gbg *_f .PdfObjectDictionary ,_bafc ,_eda float64 ,_gea *_cd .ContentCreator )(float64 ,float64 ){if !_dee .AllowMK {return _bafc ,_eda ;};if _gbg ==nil {return _bafc ,_eda ;};_badca ,_ :=_f .GetNumberAsFloat (_gbg .Get ("\u0052"));
if _badca ==0{return _bafc ,_eda ;};_dace :=-_badca ;_eba :=_cde .Path {Points :[]_cde .Point {_cde .NewPoint (0,0).Rotate (_dace ),_cde .NewPoint (_bafc ,0).Rotate (_dace ),_cde .NewPoint (0,_eda ).Rotate (_dace ),_cde .NewPoint (_bafc ,_eda ).Rotate (_dace )}}.GetBoundingBox ();
_gea .RotateDeg (_badca );_gea .Translate (_eba .X ,_eba .Y );return _eba .Width ,_eba .Height ;};func _ebb (_fed *_ed .PdfAnnotationWidget ,_becd *_ed .PdfFieldText ,_dcfc *_ed .PdfPageResources ,_cec AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_adee :=_ed .NewPdfPageResources ();
_fcgd ,_bfg :=_f .GetArray (_fed .Rect );if !_bfg {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cffd ,_dge :=_ed .NewPdfRectangle (*_fcgd );if _dge !=nil {return nil ,_dge ;};_dgec ,_cbgf :=_cffd .Width (),_cffd .Height ();
_egg ,_ffe :=_dgec ,_cbgf ;_gfb ,_eaf :=_f .GetDict (_fed .MK );if _eaf {_geb ,_ :=_f .GetDict (_fed .BS );_cabb :=_cec .applyAppearanceCharacteristics (_gfb ,_geb ,nil );if _cabb !=nil {return nil ,_cabb ;};};_feaf ,_eaf :=_f .GetIntVal (_becd .MaxLen );
if !_eaf {return nil ,_ec .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _feaf <=0{return nil ,_ec .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_acd :=_dgec /float64 (_feaf );
_eacf ,_dge :=_cd .NewContentStreamParser (_egf (_becd .PdfField )).Parse ();if _dge !=nil {return nil ,_dge ;};_fda :=_cd .NewContentCreator ();if _cec .BorderSize > 0{_ffaa (_fda ,_cec ,_dgec ,_cbgf );};if _cec .DrawAlignmentReticle {_bfa :=_cec ;_bfa .BorderSize =0.2;
_gdfc (_fda ,_bfa ,_dgec ,_cbgf );};_fda .Add_BMC ("\u0054\u0078");_fda .Add_q ();_ ,_cbgf =_cec .applyRotation (_gfb ,_dgec ,_cbgf ,_fda );_fda .Add_BT ();_bbf ,_gcgg ,_dge :=_cec .processDA (_becd .PdfField ,_eacf ,_dcfc ,_adee ,_fda );if _dge !=nil {return nil ,_dge ;
};_afa :=_bbf .Font ;_bdf :=_f .MakeName (_bbf .Name );_gef :=_bbf .Size ;_fdcd :=_gef ==0;if _fdcd &&_gcgg {_gef =_cbgf *_cec .AutoFontSizeFraction ;};_eddc :=_afa .Encoder ();if _eddc ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_eddc =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _cbb string ;if _ced ,_ecf :=_f .GetString (_becd .V );_ecf {_cbb =_ced .Decoded ();};_fda .Add_Tf (*_bdf ,_gef );var _gcc float64 ;for _ ,_deg :=range _cbb {_aeb ,_eced :=_afa .GetRuneMetrics (_deg );
if !_eced {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_deg );
continue ;};_aec :=_aeb .Wy ;if int (_aec )<=0{_aec =_aeb .Wx ;};if _aec > _gcc {_gcc =_aec ;};};if int (_gcc )==0{_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_gcc =1000;};_fcff ,_dge :=_afa .GetFontDescriptor ();if _dge !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _eddf float64 ;if _fcff !=nil {_eddf ,_dge =_fcff .GetCapHeight ();if _dge !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dge );
};};if int (_eddf )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_eddf =1000.0;};_age :=_eddf /1000.0*_gef ;_gba :=0.0;_fca :=1.0*_gef *(_gcc /1000.0);{_ggcc :=_fca ;if _fdcd &&_gba +_ggcc > _cbgf {_gef =0.95*(_cbgf -_gba );_age =_eddf /1000.0*_gef ;};if _cbgf > _age {_gba =(_cbgf -_age )/2.0;};};_fda .Add_Td (0,_gba );
if _eaaa ,_ffea :=_f .GetIntVal (_becd .Q );_ffea {switch _eaaa {case 2:if len (_cbb )< _feaf {_cef :=float64 (_feaf -len (_cbb ))*_acd ;_fda .Add_Td (_cef ,0);};};};for _eag ,_fdg :=range _cbb {_eegf :=_cda ;if _cec .MarginLeft !=nil {_eegf =*_cec .MarginLeft ;
};_bfd :=string (_fdg );if _eddc !=nil {_fee ,_becf :=_afa .GetRuneMetrics (_fdg );if !_becf {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fdg );
continue ;};_bfd =string (_eddc .Encode (_bfd ));_ceaf :=_gef *_fee .Wx /1000.0;_fbfb :=(_acd -_ceaf )/2;_eegf =_fbfb ;};_fda .Add_Td (_eegf ,0);_fda .Add_Tj (*_f .MakeString (_bfd ));if _eag !=len (_cbb )-1{_fda .Add_Td (_acd -_eegf ,0);};};_fda .Add_ET ();
_fda .Add_Q ();_fda .Add_EMC ();_dgc :=_ed .NewXObjectForm ();_dgc .Resources =_adee ;_dgc .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_egg ,_ffe });_dgc .SetContentStream (_fda .Bytes (),_bcef ());_aeg :=_f .MakeDict ();_aeg .Set ("\u004e",_dgc .ToPdfObject ());
return _aeg ,nil ;};func _gdcd (_eec *_ed .PdfAnnotationWidget ,_cbe *_ed .PdfFieldText ,_fbf *_ed .PdfPageResources ,_bgb AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_cfe :=_ed .NewPdfPageResources ();_gfa ,_ccf :=_f .GetArray (_eec .Rect );if !_ccf {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_cgc ,_gdca :=_ed .NewPdfRectangle (*_gfa );if _gdca !=nil {return nil ,_gdca ;};_ddb ,_ceg :=_cgc .Width (),_cgc .Height ();_cgg ,_gdf :=_ddb ,_ceg ;_dcc :=true ;_aad :=_ed .NewXObjectForm ();_aad .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_cgg ,_gdf });
if _eec .AP !=nil {if _bgbf ,_fa :=_f .GetDict (_eec .AP );_fa &&_bgbf !=nil {_adc :=_f .TraceToDirectObject (_bgbf .Get ("\u004e"));switch _fcd :=_adc .(type ){case *_f .PdfObjectStream :_agd ,_dgd :=_f .DecodeStream (_fcd );if _dgd !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_dgd .Error ());
break ;};_fce ,_dgd :=_cd .NewContentStreamParser (string (_agd )).Parse ();if _dgd !=nil {_d .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_dgd .Error ());
break ;};_ae :=_cd .NewContentStreamProcessor (*_fce );_ae .AddHandler (_cd .HandlerConditionEnumAllOperands ,"",func (_fg *_cd .ContentStreamOperation ,_gbe _cd .GraphicsState ,_dfac *_ed .PdfPageResources )error {if _fg .Operand =="\u0054\u006a"||_fg .Operand =="\u0054\u004a"{if len (_fg .Params )==1{if _dcf ,_fcf :=_f .GetString (_fg .Params [0]);
_fcf {_dcc =_e .TrimSpace (_dcf .Str ())=="";};return _cd .ErrEarlyExit ;};return nil ;};return nil ;});_ae .Process (_cfe );if !_dcc {if _cbf ,_fdfd :=_f .GetDict (_fcd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));_fdfd {_cfe ,_dgd =_ed .NewPdfPageResourcesFromDict (_cbf );
if _dgd !=nil {return nil ,_dgd ;};};if _eca ,_cfb :=_f .GetArray (_fcd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078"));_cfb {_aad .Matrix =_eca ;};_aad .SetContentStream (_agd ,_bcef ());};};};};if _dcc {_dff ,_ccb :=_f .GetDict (_eec .MK );if _ccb {_bgbc ,_ :=_f .GetDict (_eec .BS );
_cdec :=_bgb .applyAppearanceCharacteristics (_dff ,_bgbc ,nil );if _cdec !=nil {return nil ,_cdec ;};};_fab ,_def :=_cd .NewContentStreamParser (_egf (_cbe .PdfField )).Parse ();if _def !=nil {return nil ,_def ;};_dagc :=_cd .NewContentCreator ();if _bgb .BorderSize > 0{_ffaa (_dagc ,_bgb ,_ddb ,_ceg );
};if _bgb .DrawAlignmentReticle {_ggc :=_bgb ;_ggc .BorderSize =0.2;_gdfc (_dagc ,_ggc ,_ddb ,_ceg );};_dagc .Add_BMC ("\u0054\u0078");_dagc .Add_q ();_ddb ,_ceg =_bgb .applyRotation (_dff ,_ddb ,_ceg ,_dagc );_dagc .Add_BT ();_bga ,_ge ,_def :=_bgb .processDA (_cbe .PdfField ,_fab ,_fbf ,_cfe ,_dagc );
if _def !=nil {return nil ,_def ;};_bf :=_bga .Font ;_bge :=_bga .Size ;_abf :=_f .MakeName (_bga .Name );if _cbe .Flags ().Has (_ed .FieldFlagMultiline )&&_cbe .MaxLen !=nil {_d .Log .Debug ("\u004c\u006f\u006f\u006b\u0020\u0066\u006f\u0072\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0066\u006f\u0072 \u004e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
if _gfc ,_dab ,_gdb :=_eaff (_eec .PdfAnnotation .AP ,_fbf );_gdb {_abf =_gfc ;_bge =_dab ;_ge =true ;};};_cce :=_bge ==0;if _cce &&_ge {_bge =_ceg *_bgb .AutoFontSizeFraction ;};_dfg :=_bf .Encoder ();if _dfg ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dfg =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_dfe ,_def :=_bf .GetFontDescriptor ();if _def !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _bad string ;if _gcbf ,_dfeg :=_f .GetString (_cbe .V );_dfeg {_bad =_gcbf .Decoded ();};if len (_bad )==0{return nil ,nil ;};_ac :=[]string {_bad };_ddf :=false ;if _cbe .Flags ().Has (_ed .FieldFlagMultiline ){_ddf =true ;_bad =_e .Replace (_bad ,"\u000d\u000a","\u000a",-1);
_bad =_e .Replace (_bad ,"\u000d","\u000a",-1);_ac =_e .Split (_bad ,"\u000a");};_agdf :=make ([]string ,len (_ac ));copy (_agdf ,_ac );_cab :=_bgb .MultilineLineHeight ;_gdff :=0.0;_aag :=0;if _dfg !=nil {for _bge >=0{_geg :=make ([]string ,len (_ac ));
copy (_geg ,_ac );_cabe :=make ([]string ,len (_agdf ));copy (_cabe ,_agdf );_gdff =0.0;_aag =0;_ceaa :=len (_geg );_eac :=0;for _eac < _ceaa {var _dbfe float64 ;_ecaf :=-1;_cae :=_cda ;if _bgb .MarginLeft !=nil {_cae =*_bgb .MarginLeft ;};for _bgab ,_ecg :=range _geg [_eac ]{if _ecg ==' '{_ecaf =_bgab ;
};_aba ,_agdc :=_bf .GetRuneMetrics (_ecg );if !_agdc {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ecg );
continue ;};_dbfe =_cae ;_cae +=_aba .Wx ;if _ddf &&!_cce &&_bge *_cae /1000.0> _ddb {_bb :=_bgab ;_ff :=_bgab ;if _ecaf > 0{_bb =_ecaf +1;_ff =_ecaf ;};_cfg :=_geg [_eac ][_bb :];_fe :=_cabe [_eac ][_bb :];if _eac < len (_geg )-1{_geg =append (_geg [:_eac +1],_geg [_eac :]...);
_geg [_eac +1]=_cfg ;_cabe =append (_cabe [:_eac +1],_cabe [_eac :]...);_cabe [_eac +1]=_fe ;}else {_geg =append (_geg ,_cfg );_cabe =append (_cabe ,_fe );};_geg [_eac ]=_geg [_eac ][0:_ff ];_cabe [_eac ]=_cabe [_eac ][0:_ff ];_ceaa ++;_cae =_dbfe ;break ;
};};if _cae > _gdff {_gdff =_cae ;};_geg [_eac ]=string (_dfg .Encode (_geg [_eac ]));if len (_geg [_eac ])> 0{_aag ++;};_eac ++;};_dgdd :=_bge ;if _aag > 1{_dgdd *=_cab ;};_adg :=float64 (_aag )*_dgdd ;if _cce ||_adg <=_ceg {_ac =_geg ;_agdf =_cabe ;break ;
};_bge --;};};_cdad :=_cda ;if _bgb .MarginLeft !=nil {_cdad =*_bgb .MarginLeft ;};if _bge ==0||_cce &&_gdff > 0&&_cdad +_gdff *_bge /1000.0> _ddb {_bge =0.95*1000.0*(_ddb -_cdad )/_gdff ;};_eece :=_ece ;{if _bab ,_aff :=_f .GetIntVal (_cbe .Q );_aff {switch _bab {case 0:_eece =_ece ;
case 1:_eece =_gca ;case 2:_eece =_cca ;default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_bab );
};};};_aagf :=_bge ;if _ddf &&_aag > 1{_aagf =_cab *_bge ;};var _cbc float64 ;if _dfe !=nil {_cbc ,_def =_dfe .GetCapHeight ();if _def !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_def );
};};if int (_cbc )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cbc =1000;};_edg :=_cbc /1000.0*_bge ;_edgg :=0.0;{_dfc :=float64 (_aag )*_aagf ;if _cce &&_edgg +_dfc > _ceg {_bge =0.95*(_ceg -_edgg )/float64 (_aag );_aagf =_bge ;if _ddf &&_aag > 1{_aagf =_cab *_bge ;};_edg =_cbc /1000.0*_bge ;_dfc =float64 (_aag )*_aagf ;
};if _ceg > _dfc {if _ddf {if _bgb .MultilineVAlignMiddle {_gcgb :=(_ceg -(_dfc +_edg ))/2.0;_acb :=_gcgb +_dfc +_edg -_aagf ;_edgg =_acb ;if _aag > 1{_edgg =_edgg +(_dfc /_bge *float64 (_aag ))-_aagf -_edg ;};if _edgg < _dfc {_edgg =(_ceg -_edg )/2.0;
};}else {_edgg =_ceg -_aagf ;if _edgg > _bge {_eb :=0.0;if _ddf &&_bgb .MultilineLineHeight > 1&&_aag > 1{_eb =_bgb .MultilineLineHeight -1;};_edgg -=_bge *(0.5-_eb );};};}else {_edgg =(_ceg -_edg )/2.0;};};};if _bgb .TextColor !=nil {_dae :=_bgb .TextColor ;
_dbb ,_cbd :=_dae .(*_ed .PdfColorDeviceRGB );if !_cbd {_dbb =_ed .NewPdfColorDeviceRGB (0,0,0);};_dagc .Add_rg (_dbb .R (),_dbb .G (),_dbb .B ());}else {for _ ,_eaa :=range *_fab {if _eaa .Operand =="\u0072\u0067"||_eaa .Operand =="\u0067"{_dagc .AddOperand (*_eaa );
};};};_dagc .Add_Tf (*_abf ,_bge );_dagc .Add_Td (_cdad ,_edgg );_eed :=_cdad ;_cbec :=_cdad ;for _deb ,_fec :=range _ac {_adf :=0.0;for _ ,_acf :=range _agdf [_deb ]{_baf ,_dce :=_bf .GetRuneMetrics (_acf );if !_dce {continue ;};_adf +=_baf .Wx ;};_fea :=_adf /1000.0*_bge ;
_daf :=_ddb -_fea ;var _gda float64 ;switch _eece {case _ece :_gda =_eed ;case _gca :_gda =_daf /2;case _cca :_gda =_daf ;};_cdad =_gda -_cbec ;if _cdad > 0.0{_dagc .Add_Td (_cdad ,0);};_cbec =_gda ;_dagc .Add_Tj (*_f .MakeString (_fec ));if _deb < len (_ac )-1{_dagc .Add_Td (0,-_bge *_cab );
};};_dagc .Add_ET ();_dagc .Add_Q ();_dagc .Add_EMC ();_aad .SetContentStream (_dagc .Bytes (),_bcef ());};_aad .Resources =_cfe ;_aaa :=_f .MakeDict ();_aaa .Set ("\u004e",_aad .ToPdfObject ());return _aaa ,nil ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_ed .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_ed .PdfFieldButton ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bfad :=_ed .NewPdfField ();_cgae :=&_ed .PdfFieldButton {};_cgae .PdfField =_bfad ;_bfad .SetContext (_cgae );_cgae .SetType (_ed .ButtonTypePush );_cgae .T =_f .MakeString (name );_abdf :=_ed .NewPdfAnnotationWidget ();_abdf .Rect =_f .MakeArrayFromFloats (rect );
_abdf .P =page .ToPdfObject ();_abdf .F =_f .MakeInteger (4);_abdf .Parent =_cgae .ToPdfObject ();_fdfba :=rect [2]-rect [0];_aca :=rect [3]-rect [1];_fdcg :=opt ._edad ;_cacc :=_cd .NewContentCreator ();if _fdcg .BorderSize > 0{_ffaa (_cacc ,_fdcg ,_fdfba ,_aca );
};if _fdcg .DrawAlignmentReticle {_cgb :=_fdcg ;_cgb .BorderSize =0.2;_gdfc (_cacc ,_cgb ,_fdfba ,_aca );};_fggb ,_bgac :=_ebged (_fdfba ,_aca ,opt .Image ,_fdcg );if _bgac !=nil {return nil ,_bgac ;};_cfbb ,_afd :=_f .GetDict (_abdf .MK );if _afd {_cfbb .Set ("\u006c",_fggb .ToPdfObject ());
};_fadfb :=_f .MakeDict ();_fadfb .Set ("\u0046\u0052\u004d",_fggb .ToPdfObject ());_agbe :=_ed .NewPdfPageResources ();_agbe .ProcSet =_f .MakeArray (_f .MakeName ("\u0050\u0044\u0046"));_agbe .XObject =_fadfb ;_ggb :=_fdfba -2;_gbf :=_aca -2;_cacc .Add_q ();
_cacc .Add_re (1,1,_ggb ,_gbf );_cacc .Add_W ();_cacc .Add_n ();_ggb -=2;_gbf -=2;_cacc .Add_q ();_cacc .Add_re (2,2,_ggb ,_gbf );_cacc .Add_W ();_cacc .Add_n ();_fcacc :=_bd .Min (_ggb /float64 (opt .Image .Width ),_gbf /float64 (opt .Image .Height ));
_cacc .Add_cm (_fcacc ,0,0,_fcacc ,(_fdfba /2)-(float64 (opt .Image .Width )*_fcacc /2)+2,2);_cacc .Add_Do ("\u0046\u0052\u004d");_cacc .Add_Q ();_cacc .Add_Q ();_edae :=_ed .NewXObjectForm ();_edae .FormType =_f .MakeInteger (1);_edae .Resources =_agbe ;
_edae .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_fdfba ,_aca });_edae .Matrix =_f .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_edae .SetContentStream (_cacc .Bytes (),_bcef ());_gdba :=_f .MakeDict ();_gdba .Set ("\u004e",_edae .ToPdfObject ());
_abdf .AP =_gdba ;_cgae .Annotations =append (_cgae .Annotations ,_abdf );return _cgae ,nil ;};func _adea (_dbeb RectangleAnnotationDef ,_dfgc string )([]byte ,*_ed .PdfRectangle ,*_ed .PdfRectangle ,error ){_fcge :=_cde .Rectangle {X :0,Y :0,Width :_dbeb .Width ,Height :_dbeb .Height ,FillEnabled :_dbeb .FillEnabled ,FillColor :_dbeb .FillColor ,BorderEnabled :_dbeb .BorderEnabled ,BorderWidth :2*_dbeb .BorderWidth ,BorderColor :_dbeb .BorderColor ,Opacity :_dbeb .Opacity };
_fface ,_gccc ,_agbf :=_fcge .Draw (_dfgc );if _agbf !=nil {return nil ,nil ,nil ,_agbf ;};_eaee :=&_ed .PdfRectangle {};_eaee .Llx =_dbeb .X +_gccc .Llx ;_eaee .Lly =_dbeb .Y +_gccc .Lly ;_eaee .Urx =_dbeb .X +_gccc .Urx ;_eaee .Ury =_dbeb .Y +_gccc .Ury ;
return _fface ,_gccc ,_eaee ,nil ;};

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_ed .PdfAnnotation ,error ){_dgg :=_ed .NewPdfAnnotationInk ();_bbfea :=_f .MakeArray ();for _ ,_fafg :=range inkDef .Paths {if _fafg .Length ()==0{continue ;};_aaef :=[]float64 {};for _ ,_gade :=range _fafg .Points {_cefc :=_g .RoundDefault (_gade .X );
_gdcdc :=_g .RoundDefault (_gade .Y );_aaef =append (_aaef ,_cefc ,_gdcdc );};_bbfea .Append (_f .MakeArrayFromFloats (_aaef ));};_dgg .InkList =_bbfea ;if inkDef .Color ==nil {inkDef .Color =_ed .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_dgg .C =_f .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_efad ,_fgb ,_ecgc :=_fdbba (&inkDef );if _ecgc !=nil {return nil ,_ecgc ;};_dgg .AP =_efad ;_dgg .Rect =_f .MakeArrayFromFloats ([]float64 {_fgb .Llx ,_fgb .Lly ,_fgb .Urx ,_fgb .Ury });return _dgg .PdfAnnotation ,nil ;};func _gfaf (_baeae [][]_cde .CubicBezierCurve ,_befd *_ed .PdfColorDeviceRGB ,_bgde float64 )([]byte ,*_ed .PdfRectangle ,error ){_cged :=_cd .NewContentCreator ();
_cged .Add_q ().SetStrokingColor (_befd ).Add_w (_bgde );_eeaa :=_cde .NewCubicBezierPath ();for _ ,_aaab :=range _baeae {_eeaa .Curves =append (_eeaa .Curves ,_aaab ...);for _afb ,_egab :=range _aaab {if _afb ==0{_cged .Add_m (_egab .P0 .X ,_egab .P0 .Y );
}else {_cged .Add_l (_egab .P0 .X ,_egab .P0 .Y );};_cged .Add_c (_egab .P1 .X ,_egab .P1 .Y ,_egab .P2 .X ,_egab .P2 .Y ,_egab .P3 .X ,_egab .P3 .Y );};};_cged .Add_S ().Add_Q ();return _cged .Bytes (),_eeaa .GetBoundingBox ().ToPdfRectangle (),nil ;};
func _ebged (_gbd ,_gfaae float64 ,_cefa *_ed .Image ,_bgcb AppearanceStyle )(*_ed .XObjectForm ,error ){_bceb ,_eadf :=_ed .NewXObjectImageFromImage (_cefa ,nil ,_f .NewFlateEncoder ());if _eadf !=nil {return nil ,_eadf ;};_bceb .Decode =_f .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});
_bbe :=_ed .NewPdfPageResources ();_bbe .ProcSet =_f .MakeArray (_f .MakeName ("\u0050\u0044\u0046"),_f .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));_bbe .SetXObjectImageByName (_f .PdfObjectName ("\u0049\u006d\u0030"),_bceb );_ddcdc :=_cd .NewContentCreator ();
_ddcdc .Add_q ();_ddcdc .Add_cm (float64 (_cefa .Width ),0,0,float64 (_cefa .Height ),0,0);_ddcdc .Add_Do ("\u0049\u006d\u0030");_ddcdc .Add_Q ();_gcfe :=_ed .NewXObjectForm ();_gcfe .FormType =_f .MakeInteger (1);_gcfe .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,float64 (_cefa .Width ),float64 (_cefa .Height )});
_gcfe .Resources =_bbe ;_gcfe .SetContentStream (_ddcdc .Bytes (),_bcef ());return _gcfe ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_efd ImageFieldAppearance )WrapContentStream (page *_ed .PdfPage )error {_bage ,_ddaa :=page .GetAllContentStreams ();if _ddaa !=nil {return _ddaa ;};_bfaga :=_cd .NewContentStreamParser (_bage );_dcfa ,_ddaa :=_bfaga .Parse ();if _ddaa !=nil {return _ddaa ;
};_dcfa .WrapIfNeeded ();_cgbg :=[]string {_dcfa .String ()};return page .SetContentStreams (_cgbg ,_bcef ());};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ed .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ed .PdfFieldButton ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_debg ,_bcad :=_ed .NewStandard14Font (_ed .ZapfDingbatsName );if _bcad !=nil {return nil ,_bcad ;};_ebe :=_ed .NewPdfField ();_cbcf :=&_ed .PdfFieldButton {};_ebe .SetContext (_cbcf );_cbcf .PdfField =_ebe ;_cbcf .T =_f .MakeString (name );_cbcf .SetType (_ed .ButtonTypeCheckbox );
_acbg :="\u004f\u0066\u0066";if opt .Checked {_acbg ="\u0059\u0065\u0073";};_cbcf .V =_f .MakeName (_acbg );_bbgc :=_ed .NewPdfAnnotationWidget ();_bbgc .Rect =_f .MakeArrayFromFloats (rect );_bbgc .P =page .ToPdfObject ();_bbgc .F =_f .MakeInteger (4);
_bbgc .Parent =_cbcf .ToPdfObject ();_ecad :=rect [2]-rect [0];_dafe :=rect [3]-rect [1];var _afef _c .Buffer ;_afef .WriteString ("\u0071\u000a");_afef .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_afef .WriteString ("\u0042\u0054\u000a");
_afef .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_afef .WriteString ("\u0045\u0054\u000a");_afef .WriteString ("\u0051\u000a");_gcac :=_cd .NewContentCreator ();_gcac .Add_q ();_gcac .Add_rg (0,0,1);_gcac .Add_BT ();
_gcac .Add_Tf (*_f .MakeName ("\u005a\u0061\u0044\u0062"),12);_gcac .Add_Td (0,0);_gcac .Add_ET ();_gcac .Add_Q ();_deea :=_ed .NewXObjectForm ();_deea .SetContentStream (_gcac .Bytes (),_f .NewRawEncoder ());_deea .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_ecad ,_dafe });
_deea .Resources =_ed .NewPdfPageResources ();_deea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_debg .ToPdfObject ());_gcac =_cd .NewContentCreator ();_gcac .Add_q ();_gcac .Add_re (0,0,_ecad ,_dafe );_gcac .Add_W ().Add_n ();_gcac .Add_rg (0,0,1);
_gcac .Translate (0,3.0);_gcac .Add_BT ();_gcac .Add_Tf (*_f .MakeName ("\u005a\u0061\u0044\u0062"),12);_gcac .Add_Td (0,0);_gcac .Add_Tj (*_f .MakeString ("\u0034"));_gcac .Add_ET ();_gcac .Add_Q ();_bdga :=_ed .NewXObjectForm ();_bdga .SetContentStream (_gcac .Bytes (),_f .NewRawEncoder ());
_bdga .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_ecad ,_dafe });_bdga .Resources =_ed .NewPdfPageResources ();_bdga .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_debg .ToPdfObject ());_dfgf :=_f .MakeDict ();_dfgf .Set ("\u004f\u0066\u0066",_deea .ToPdfObject ());
_dfgf .Set ("\u0059\u0065\u0073",_bdga .ToPdfObject ());_dgbe :=_f .MakeDict ();_dgbe .Set ("\u004e",_dfgf );_bbgc .AP =_dgbe ;_bbgc .AS =_f .MakeName (_acbg );_cbcf .Annotations =append (_cbcf .Annotations ,_bbgc );return _cbcf ,nil ;};func (_dg *AppearanceFont )fillName (){if _dg .Font ==nil ||_dg .Name !=""{return ;
};_dag :=_dg .Font .FontDescriptor ();if _dag ==nil ||_dag .FontName ==nil {return ;};_dg .Name =_dag .FontName .String ();};

// SetStyle applies appearance `style` to `fa`.
func (_aab *FieldAppearance )SetStyle (style AppearanceStyle ){_aab ._egb =&style };func _edca (_ggbe *_ed .PdfPage ,_eacfg _cde .Rectangle ,_degg string ,_dgdc string ,_edbd _ed .PdfColor ,_acca *_ed .PdfFont ,_cbfea *float64 ,_aebf _f .PdfObject )(*_ed .PdfFieldButton ,error ){_ebed ,_afed :=_eacfg .X ,_eacfg .Y ;
_beff :=_eacfg .Width ;_fdd :=_eacfg .Height ;if _eacfg .FillColor ==nil {_eacfg .FillColor =_ed .NewPdfColorDeviceGray (0.7);};if _edbd ==nil {_edbd =_ed .NewPdfColorDeviceGray (0);};if _acca ==nil {_fbfd ,_cdca :=_ed .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
if _cdca !=nil {return nil ,_cdca ;};_acca =_fbfd ;};_daac :=_ed .NewPdfField ();_adgf :=&_ed .PdfFieldButton {};_daac .SetContext (_adgf );_adgf .PdfField =_daac ;_adgf .T =_f .MakeString (_degg );_adgf .SetType (_ed .ButtonTypePush );_adgf .V =_f .MakeName ("\u004f\u0066\u0066");
_adgf .Ff =_f .MakeInteger (4);_dgef :=_f .MakeDict ();_dgef .Set (*_f .MakeName ("\u0043\u0041"),_f .MakeString (_dgdc ));_ebdg ,_bfag :=_acca .GetFontDescriptor ();if _bfag !=nil {return nil ,_bfag ;};_dafg :=_f .MakeName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_cefb :=12.0;if _ebdg !=nil &&_ebdg .FontName !=nil {_dafg ,_ =_f .GetName (_ebdg .FontName );};if _cbfea !=nil {_cefb =*_cbfea ;};_fdec :=_cd .NewContentCreator ();_fdec .Add_q ();_fdec .SetNonStrokingColor (_eacfg .FillColor );_fdec .Add_re (0,0,_beff ,_fdd );
_fdec .Add_f ();_fdec .Add_Q ();_fdec .Add_q ();_fdec .Add_BT ();_bee :=0.0;for _ ,_aebca :=range _dgdc {_becda ,_ffb :=_acca .GetRuneMetrics (_aebca );if !_ffb {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_aebca );
continue ;};_bee +=_becda .Wx ;};_bee =_bee /1000.0*_cefb ;var _cgbf float64 ;if _ebdg !=nil {_cgbf ,_bfag =_ebdg .GetCapHeight ();if _bfag !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bfag );
};};if int (_cgbf )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cgbf =1000;};_fegg :=_cgbf /1000.0*_cefb ;_adab :=(_fdd -_fegg )/2.0;_abfaf :=(_beff -_bee )/2.0;_fdec .Add_Tf (*_dafg ,_cefb );_fdec .SetNonStrokingColor (_edbd );_fdec .Add_Td (_abfaf ,_adab );_fdec .Add_Tj (*_f .MakeString (_dgdc ));_fdec .Add_ET ();
_fdec .Add_Q ();_ecbg :=_ed .NewXObjectForm ();_ecbg .SetContentStream (_fdec .Bytes (),_f .NewRawEncoder ());_ecbg .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_beff ,_fdd });_ecbg .Resources =_ed .NewPdfPageResources ();_ecbg .Resources .SetFontByName (*_dafg ,_acca .ToPdfObject ());
_bgbdd :=_f .MakeDict ();_bgbdd .Set ("\u004e",_ecbg .ToPdfObject ());_gefd :=_ed .NewPdfAnnotationWidget ();_gefd .Rect =_f .MakeArrayFromFloats ([]float64 {_ebed ,_afed ,_ebed +_beff ,_afed +_fdd });_gefd .P =_ggbe .ToPdfObject ();_gefd .F =_f .MakeInteger (4);
_gefd .Parent =_adgf .ToPdfObject ();_gefd .A =_aebf ;_gefd .MK =_dgef ;_gefd .AP =_bgbdd ;_adgf .Annotations =append (_adgf .Annotations ,_gefd );return _adgf ,nil ;};func _bfdc (_efbc LineAnnotationDef )(*_f .PdfObjectDictionary ,*_ed .PdfRectangle ,error ){_gacb :=_ed .NewXObjectForm ();
_gacb .Resources =_ed .NewPdfPageResources ();_aeca :="";if _efbc .Opacity < 1.0{_ceag :=_f .MakeDict ();_ceag .Set ("\u0063\u0061",_f .MakeFloat (_efbc .Opacity ));_abfafc :=_gacb .Resources .AddExtGState ("\u0067\u0073\u0031",_ceag );if _abfafc !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_abfafc ;};_aeca ="\u0067\u0073\u0031";};_bafe ,_abef ,_ceee ,_abeab :=_cefbf (_efbc ,_aeca );if _abeab !=nil {return nil ,nil ,_abeab ;};_abeab =_gacb .SetContentStream (_bafe ,nil );if _abeab !=nil {return nil ,nil ,_abeab ;};_gacb .BBox =_abef .ToPdfObject ();
_efg :=_f .MakeDict ();_efg .Set ("\u004e",_gacb .ToPdfObject ());return _efg ,_ceee ,nil ;};func _egf (_bbg *_ed .PdfField )string {if _bbg ==nil {return "";};_fbd ,_cegg :=_bbg .GetContext ().(*_ed .PdfFieldText );if !_cegg {return _egf (_bbg .Parent );
};if _fbd .DA !=nil {return _fbd .DA .Str ();};return _egf (_fbd .Parent );};

// SetStyle applies appearance `style` to `fa`.
func (_afefc *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_afefc ._abgf =&style };

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ed .PdfAnnotation ,error ){_fgca :=_ed .NewPdfAnnotationLine ();_fgca .L =_f .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_aaaab :=_f .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_cde .LineEndingStyleArrow {_aaaab =_f .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_ffaaa :=_f .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_cde .LineEndingStyleArrow {_ffaaa =_f .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_fgca .LE =_f .MakeArray (_aaaab ,_ffaaa );if lineDef .Opacity < 1.0{_fgca .CA =_f .MakeFloat (lineDef .Opacity );};_bddf ,_aaefe ,_gefc :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_fgca .IC =_f .MakeArrayFromFloats ([]float64 {_bddf ,_aaefe ,_gefc });
_fgca .C =_f .MakeArrayFromFloats ([]float64 {_bddf ,_aaefe ,_gefc });_gddd :=_ed .NewBorderStyle ();_gddd .SetBorderWidth (lineDef .LineWidth );_fgca .BS =_gddd .ToPdfObject ();_gabab ,_bcac ,_abbg :=_bfdc (lineDef );if _abbg !=nil {return nil ,_abbg ;
};_fgca .AP =_gabab ;_fgca .Rect =_f .MakeArrayFromFloats ([]float64 {_bcac .Llx ,_bcac .Lly ,_bcac .Urx ,_bcac .Ury });return _fgca .PdfAnnotation ,nil ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_ed .Image ;_edad AppearanceStyle ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_egb *AppearanceStyle ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ed .PdfAnnotation ,error ){_ce :=_ed .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_gc ,_ee ,_ca :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ce .C =_f .MakeArrayFromFloats ([]float64 {_gc ,_ee ,_ca });
_ada :=_ed .NewBorderStyle ();_ada .SetBorderWidth (circDef .BorderWidth );_ce .BS =_ada .ToPdfObject ();};if circDef .FillEnabled {_bca ,_ab ,_ef :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ce .IC =_f .MakeArrayFromFloats ([]float64 {_bca ,_ab ,_ef });
}else {_ce .IC =_f .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ce .CA =_f .MakeFloat (circDef .Opacity );};_efe ,_gg ,_de :=_bda (circDef );if _de !=nil {return nil ,_de ;};_ce .AP =_efe ;_ce .Rect =_f .MakeArrayFromFloats ([]float64 {_gg .Llx ,_gg .Lly ,_gg .Urx ,_gg .Ury });
return _ce .PdfAnnotation ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ed .PdfAnnotation ,error ){_abac :=_ed .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_dcfce ,_becb ,_bdbc :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_abac .C =_f .MakeArrayFromFloats ([]float64 {_dcfce ,_becb ,_bdbc });_bbdb :=_ed .NewBorderStyle ();_bbdb .SetBorderWidth (rectDef .BorderWidth );_abac .BS =_bbdb .ToPdfObject ();};if rectDef .FillEnabled {_egabf ,_gged ,_ebedc :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_abac .IC =_f .MakeArrayFromFloats ([]float64 {_egabf ,_gged ,_ebedc });}else {_abac .IC =_f .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_abac .CA =_f .MakeFloat (rectDef .Opacity );};_dgbaa ,_bgbg ,_fbfbg :=_dbde (rectDef );if _fbfbg !=nil {return nil ,_fbfbg ;
};_abac .AP =_dgbaa ;_abac .Rect =_f .MakeArrayFromFloats ([]float64 {_bgbg .Llx ,_bgbg .Lly ,_bgbg .Urx ,_bgbg .Ury });return _abac .PdfAnnotation ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ed .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ed .PdfColorDeviceRGB ;Opacity float64 ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_gb FieldAppearance )GenerateAppearanceDict (form *_ed .PdfAcroForm ,field *_ed .PdfField ,wa *_ed .PdfAnnotationWidget )(*_f .PdfObjectDictionary ,error ){_d .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_af :=field .GetContext ().(*_ed .PdfFieldText );_afe ,_fb :=_f .GetDict (wa .AP );if _fb &&_gb .OnlyIfMissing &&(!_af ||!_gb .RegenerateTextFields ){_d .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _afe ,nil ;};if form .DR ==nil {form .DR =_ed .NewPdfPageResources ();};switch _abg :=field .GetContext ().(type ){case *_ed .PdfFieldText :_bcf :=_abg ;if _gce :=_egf (_bcf .PdfField );_gce ==""{_bcf .DA =form .DA ;};if _gb ._egb !=nil {if _gb ._egb .FieldColors !=nil &&_gb ._egb .FieldColors [field .PartialName ()]!=nil {_fcg :=_gb ._egb .FieldColors [field .PartialName ()];
_dfa ,_bdab :=_dbe (_bcf ,_fcg );if _bdab !=nil {return nil ,_bdab ;};_bcf .DA =_dfa ;}else if _gb ._egb .TextColor !=nil {_gde ,_gcg :=_dbe (_bcf ,_gb ._egb .TextColor );if _gcg !=nil {return nil ,_gcg ;};_bcf .DA =_gde ;};};switch {case _bcf .Flags ().Has (_ed .FieldFlagPassword ):return nil ,nil ;
case _bcf .Flags ().Has (_ed .FieldFlagFileSelect ):return nil ,nil ;case _bcf .Flags ().Has (_ed .FieldFlagComb ):if _bcf .MaxLen !=nil {_dagd ,_ag :=_ebb (wa ,_bcf ,form .DR ,_gb .Style ());if _ag !=nil {return nil ,_ag ;};return _dagd ,nil ;};};_bg ,_gf :=_gdcd (wa ,_bcf ,form .DR ,_gb .Style ());
if _gf !=nil {return nil ,_gf ;};return _bg ,nil ;case *_ed .PdfFieldButton :_fcc :=_abg ;if _fcc .IsCheckbox (){_bag ,_ade :=_fba (wa ,_fcc ,form .DR ,_gb .Style ());if _ade !=nil {return nil ,_ade ;};return _bag ,nil ;};_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_fcc .GetType ());
case *_ed .PdfFieldChoice :_ded :=_abg ;switch {case _ded .Flags ().Has (_ed .FieldFlagCombo ):_cea ,_eeg :=_egc (form ,wa ,_ded ,_gb .Style ());if _eeg !=nil {return nil ,_eeg ;};return _cea ,nil ;default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_ded .Flags ().String ());
};default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_abg );};return nil ,nil ;};

// FormResetActionOptions holds options for creating a form reset button.
type FormResetActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _cde .Rectangle ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ed .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ed .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be resetted.
// This list may contain indirect object to fields or field names.
Fields *_f .PdfObjectArray ;

// IsExclusionList specifies that the fields in the `Fields` array would be excluded form reset process.
IsExclusionList bool ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_abgf *AppearanceStyle ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _fcac (_beae []*SignatureLine ,_cabf *SignatureFieldOpts )(*_f .PdfObjectDictionary ,error ){if _cabf ==nil {_cabf =NewSignatureFieldOpts ();
};var _fgg error ;var _eadg *_f .PdfObjectName ;_affg :=_cabf .Font ;if _affg !=nil {_gfaa ,_ :=_affg .GetFontDescriptor ();if _gfaa !=nil {if _bbfe ,_dacb :=_gfaa .FontName .(*_f .PdfObjectName );_dacb {_eadg =_bbfe ;};};if _eadg ==nil {_eadg =_f .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _affg ,_fgg =_ed .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_fgg !=nil {return nil ,_fgg ;};_eadg =_f .MakeName ("\u0048\u0065\u006c\u0076");};_cfbe :=_cabf .FontSize ;if _cfbe <=0{_cfbe =10;};if _cabf .LineHeight <=0{_cabf .LineHeight =1;
};_adgb :=_cabf .LineHeight *_cfbe ;_agb ,_ega :=_affg .GetRuneMetrics (' ');if !_ega {return nil ,_ec .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_cbda :=_agb .Wx ;var _bdea float64 ;var _bgd []string ;for _ ,_dbfg :=range _beae {if _dbfg .Text ==""{continue ;};_caaa :=_dbfg .Text ;if _dbfg .Desc !=""{_caaa =_dbfg .Desc +"\u003a\u0020"+_caaa ;};_bgd =append (_bgd ,_caaa );var _cgd float64 ;for _ ,_gabc :=range _caaa {_gbef ,_gcba :=_affg .GetRuneMetrics (_gabc );
if !_gcba {continue ;};_cgd +=_gbef .Wx ;};if _cgd > _bdea {_bdea =_cgd ;};};_bdea =_bdea *_cfbe /1000.0;_ace :=float64 (len (_bgd ))*_adgb ;_aabe :=_cabf .Image !=nil ;_gabae :=_cabf .Rect ;if _gabae ==nil {_gabae =[]float64 {0,0,_bdea ,_ace };if _aabe {_gabae [2]=_bdea *2;
_gabae [3]=_ace *2;};_cabf .Rect =_gabae ;};_cbce :=_gabae [2]-_gabae [0];_cdf :=_gabae [3]-_gabae [1];_gffb ,_fadb :=_gabae ,_gabae ;var _cceda ,_gdce float64 ;if _aabe &&len (_bgd )> 0{if _cabf .ImagePosition <=SignatureImageRight {_cabfb :=[]float64 {_gabae [0],_gabae [1],_gabae [0]+(_cbce /2),_gabae [3]};
_cbfgf :=[]float64 {_gabae [0]+(_cbce /2),_gabae [1],_gabae [2],_gabae [3]};if _cabf .ImagePosition ==SignatureImageLeft {_gffb ,_fadb =_cabfb ,_cbfgf ;}else {_gffb ,_fadb =_cbfgf ,_cabfb ;};}else {_edb :=[]float64 {_gabae [0],_gabae [1],_gabae [2],_gabae [1]+(_cdf /2)};
_afca :=[]float64 {_gabae [0],_gabae [1]+(_cdf /2),_gabae [2],_gabae [3]};if _cabf .ImagePosition ==SignatureImageTop {_gffb ,_fadb =_afca ,_edb ;}else {_gffb ,_fadb =_edb ,_afca ;};};};_cceda =_fadb [2]-_fadb [0];_gdce =_fadb [3]-_fadb [1];var _bfdg float64 ;
if _cabf .AutoSize {if _bdea > _cceda ||_ace > _gdce {_agea :=_bd .Min (_cceda /_bdea ,_gdce /_ace );_cfbe *=_agea ;};_adgb =_cabf .LineHeight *_cfbe ;_bfdg +=(_gdce -float64 (len (_bgd ))*_adgb )/2;};_gcda :=_cd .NewContentCreator ();_dca :=_ed .NewPdfPageResources ();
_dca .SetFontByName (*_eadg ,_affg .ToPdfObject ());if _cabf .BorderSize <=0{_cabf .BorderSize =0;_cabf .BorderColor =_ed .NewPdfColorDeviceGray (1);};_gcda .Add_q ();if _cabf .FillColor !=nil {_gcda .SetNonStrokingColor (_cabf .FillColor );};if _cabf .BorderColor !=nil {_gcda .SetStrokingColor (_cabf .BorderColor );
};_eefe :="";if _cabf .FillOpacity < 1.0{_afcaf :=0;_eefe =_ad .Sprintf ("\u0047\u0053\u0025\u0064",_afcaf );for {_ ,_bdd :=_dca .GetExtGState (_f .PdfObjectName (_eefe ));if !_bdd {break ;};_afcaf ++;_eefe =_ad .Sprintf ("\u0047\u0053\u0025\u0064",_afcaf );
};_cbff :=_f .MakeDict ();_cbff .Set ("\u0063\u0061",_f .MakeFloat (_cabf .FillOpacity ));_affd :=_dca .AddExtGState (_f .PdfObjectName (_eefe ),_f .MakeIndirectObject (_cbff ));if _affd !=nil {_d .Log .Debug (_affd .Error ());}else {_gcda .Add_gs (_f .PdfObjectName (_eefe ));
};};_gcda .Add_w (_cabf .BorderSize ).Add_re (_gabae [0],_gabae [1],_cbce ,_cdf );if _cabf .FillColor !=nil &&_cabf .BorderColor !=nil {_gcda .Add_B ();}else if _cabf .FillColor !=nil {_gcda .Add_f ();}else if _cabf .BorderColor !=nil {_gcda .Add_S ();
};_gcda .Add_Q ();if _cabf .WatermarkImage !=nil {_abdc :=[]float64 {_gabae [0],_gabae [1],_gabae [2],_gabae [3]};_gcgd ,_bgee ,_ceff :=_bfcb (_cabf .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_cabf ,_abdc ,_gcda );
if _ceff !=nil {return nil ,_ceff ;};_dca .SetXObjectImageByName (*_gcgd ,_bgee );};_gcda .Add_q ();_gcda .Translate (_fadb [0],_fadb [3]-_adgb -_bfdg );_gcda .Add_BT ();_ebge :=_affg .Encoder ();for _ ,_becc :=range _bgd {var _cega []byte ;for _ ,_egd :=range _becc {if _cc .IsSpace (_egd ){if len (_cega )> 0{_gcda .SetNonStrokingColor (_cabf .TextColor ).Add_Tf (*_eadg ,_cfbe ).Add_TL (_adgb ).Add_TJ ([]_f .PdfObject {_f .MakeStringFromBytes (_cega )}...);
_cega =nil ;};_gcda .Add_Tf (*_eadg ,_cfbe ).Add_TL (_adgb ).Add_TJ ([]_f .PdfObject {_f .MakeFloat (-_cbda )}...);}else {_cega =append (_cega ,_ebge .Encode (string (_egd ))...);};};if len (_cega )> 0{_gcda .SetNonStrokingColor (_cabf .TextColor ).Add_Tf (*_eadg ,_cfbe ).Add_TL (_adgb ).Add_TJ ([]_f .PdfObject {_f .MakeStringFromBytes (_cega )}...);
};_gcda .Add_Td (0,-_adgb );};_gcda .Add_ET ();_gcda .Add_Q ();if _aabe {_dgba ,_aadd ,_eaea :=_bfcb (_cabf .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_cabf ,_gffb ,_gcda );if _eaea !=nil {return nil ,_eaea ;
};_dca .SetXObjectImageByName (*_dgba ,_aadd );};_ddge :=_ed .NewXObjectForm ();_ddge .Resources =_dca ;_ddge .BBox =_f .MakeArrayFromFloats (_gabae );_ddge .SetContentStream (_gcda .Bytes (),_bcef ());_bdg :=_f .MakeDict ();_bdg .Set ("\u004e",_ddge .ToPdfObject ());
return _bdg ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ed .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ed .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ec .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_adb ,_eacg :=_fcac (lines ,opts );if _eacg !=nil {return nil ,_eacg ;};_ffdc :=_ed .NewPdfFieldSignature (signature );_ffdc .Rect =_f .MakeArrayFromFloats (opts .Rect );_ffdc .AP =_adb ;return _ffdc ,nil ;};func (_ceea *AppearanceStyle )applyAppearanceCharacteristics (_eagd *_f .PdfObjectDictionary ,_fag *_f .PdfObjectDictionary ,_dcd *_ed .PdfFont )error {if !_ceea .AllowMK {return nil ;
};if CA ,_cbfg :=_f .GetString (_eagd .Get ("\u0043\u0041"));_cbfg &&_dcd !=nil {_abe :=CA .Bytes ();if len (_abe )!=0{_cgad :=[]rune (_dcd .Encoder ().Decode (_abe ));if len (_cgad )==1{_ceea .CheckmarkRune =_cgad [0];};};};if BC ,_baa :=_f .GetArray (_eagd .Get ("\u0042\u0043"));
_baa {_cdbe ,_gfdg :=BC .ToFloat64Array ();if _gfdg !=nil {return _gfdg ;};switch len (_cdbe ){case 1:_ceea .BorderColor =_ed .NewPdfColorDeviceGray (_cdbe [0]);case 3:_ceea .BorderColor =_ed .NewPdfColorDeviceRGB (_cdbe [0],_cdbe [1],_cdbe [2]);case 4:_ceea .BorderColor =_ed .NewPdfColorDeviceCMYK (_cdbe [0],_cdbe [1],_cdbe [2],_cdbe [3]);
default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cdbe ));
};if _fag !=nil {if _eab ,_ddbb :=_f .GetNumberAsFloat (_fag .Get ("\u0057"));_ddbb ==nil {_ceea .BorderSize =_eab ;};};};if BG ,_bea :=_f .GetArray (_eagd .Get ("\u0042\u0047"));_bea {_eede ,_eef :=BG .ToFloat64Array ();if _eef !=nil {return _eef ;};switch len (_eede ){case 1:_ceea .FillColor =_ed .NewPdfColorDeviceGray (_eede [0]);
case 3:_ceea .FillColor =_ed .NewPdfColorDeviceRGB (_eede [0],_eede [1],_eede [2]);case 4:_ceea .FillColor =_ed .NewPdfColorDeviceCMYK (_eede [0],_eede [1],_eede [2],_eede [3]);default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_eede ));
};};return nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;

// TextColor defines the color of the text in hex format. e.g #43fd23.
// If it has an invalid value a #000000 (black) color is taken as default
TextColor string ;

// FontName defines the font of the text. Helvetica font is the default one.
// It is recommended to use one of 14 standard PDF fonts.
FontName string ;

// FontSize defines the font size of the text, 12 is used by default.
FontSize int ;};func (_abd *AppearanceStyle )processDA (_gfcc *_ed .PdfField ,_dbba *_cd .ContentStreamOperations ,_eegff ,_ddcf *_ed .PdfPageResources ,_deec *_cd .ContentCreator )(*AppearanceFont ,bool ,error ){var _fdae *AppearanceFont ;var _bfgf bool ;
if _abd .Fonts !=nil {if _abd .Fonts .Fallback !=nil {_fdae =_abd .Fonts .Fallback ;};if _gced :=_abd .Fonts .FieldFallbacks ;_gced !=nil {if _cdc ,_ceb :=_gced [_gfcc .PartialName ()];_ceb {_fdae =_cdc ;}else if _dda ,_cacd :=_gfcc .FullName ();_cacd ==nil {if _efb ,_feda :=_gced [_dda ];
_feda {_fdae =_efb ;};};};if _fdae !=nil {_fdae .fillName ();};_bfgf =_abd .Fonts .ForceReplace ;};var _defa string ;var _eeca float64 ;var _gfdc bool ;if _dbba !=nil {for _ ,_eega :=range *_dbba {if _eega .Operand =="\u0054\u0066"&&len (_eega .Params )==2{if _bcd ,_cced :=_f .GetNameVal (_eega .Params [0]);
_cced {_defa =_bcd ;};if _cgf ,_gaba :=_f .GetNumberAsFloat (_eega .Params [1]);_gaba ==nil {_eeca =_cgf ;};_gfdc =true ;continue ;};_deec .AddOperand (*_eega );};};var _fcad *AppearanceFont ;var _dcefd _f .PdfObject ;if _bfgf &&_fdae !=nil {_fcad =_fdae ;
}else {if _eegff !=nil &&_defa !=""{if _fcb ,_aee :=_eegff .GetFontByName (*_f .MakeName (_defa ));_aee {if _fede ,_bfaf :=_ed .NewPdfFontFromPdfObject (_fcb );_bfaf ==nil {_dcefd =_fcb ;_fcad =&AppearanceFont {Name :_defa ,Font :_fede ,Size :_eeca };}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_bfaf );
};};};if _fcad ==nil &&_fdae !=nil {_fcad =_fdae ;};if _fcad ==nil {_beg ,_defe :=_ed .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _defe !=nil {return nil ,false ,_defe ;};_fcad =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_beg ,Size :_eeca };
};};if _fcad .Size <=0&&_abd .Fonts !=nil &&_abd .Fonts .FallbackSize > 0{_fcad .Size =_abd .Fonts .FallbackSize ;};_fccc :=*_f .MakeName (_fcad .Name );if _dcefd ==nil {_dcefd =_fcad .Font .ToPdfObject ();};if _eegff !=nil &&!_eegff .HasFontByName (_fccc ){_eegff .SetFontByName (_fccc ,_dcefd );
};if _ddcf !=nil &&!_ddcf .HasFontByName (_fccc ){_ddcf .SetFontByName (_fccc ,_dcefd );};return _fcad ,_gfdc ,nil ;};

// FileAnnotationDef holds base information for constructing an file attachment annotation.
type FileAnnotationDef struct{

// Bounding box of the annotation.
X float64 ;Y float64 ;Width float64 ;Height float64 ;

// EmbeddedFile is the file information to be attached.
EmbeddedFile *_ed .EmbeddedFile ;

// Author is the author of the attachment file.
Author string ;

// Subject is the subject of the attachment file.
Subject string ;

// Description of the file attachment that will be displayed as a comment on the PDF reader.
Description string ;

// IconName is The name of an icon that shall be used in displaying the annotation.
// Conforming readers shall provide predefined icon appearances for at least the following standard names:
//
// - Graph
// - PushPin
// - Paperclip
// - Tag
//
// Additional names may be supported as well. Default value: "PushPin".
IconName string ;

// Color is the color of the annotation.
Color *_ed .PdfColorDeviceRGB ;

// CreationDate is the date and time when the file attachment was created.
// If not set, the current time is used.
CreationDate *_cb .Time ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fdfc ImageFieldAppearance )GenerateAppearanceDict (form *_ed .PdfAcroForm ,field *_ed .PdfField ,wa *_ed .PdfAnnotationWidget )(*_f .PdfObjectDictionary ,error ){_ ,_ggg :=field .GetContext ().(*_ed .PdfFieldButton );if !_ggg {_d .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_gfae ,_fbee :=_f .GetDict (wa .AP );if _fbee &&_fdfc .OnlyIfMissing {_d .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _gfae ,nil ;};if form .DR ==nil {form .DR =_ed .NewPdfPageResources ();};switch _fdfe :=field .GetContext ().(type ){case *_ed .PdfFieldButton :if _fdfe .IsPush (){_fga ,_cdd :=_aecd (_fdfe ,wa ,_fdfc .Style ());if _cdd !=nil {return nil ,_cdd ;
};return _fga ,nil ;};};return nil ,nil ;};func _eegg (_eecec *InkAnnotationDef )([]byte ,*_ed .PdfRectangle ,error ){_bbge :=[][]_cde .CubicBezierCurve {};for _ ,_eea :=range _eecec .Paths {if _eea .Length ()==0{continue ;};_ffdd :=_eea .Points ;_gfe ,_aadf ,_adfb :=_dcgd (_ffdd );
if _adfb !=nil {return nil ,nil ,_adfb ;};if len (_gfe )!=len (_aadf ){return nil ,nil ,_ec .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_aaaa :=[]_cde .CubicBezierCurve {};for _dacbc :=0;_dacbc < len (_gfe );_dacbc ++{_aaaa =append (_aaaa ,_cde .CubicBezierCurve {P0 :_ffdd [_dacbc ],P1 :_gfe [_dacbc ],P2 :_aadf [_dacbc ],P3 :_ffdd [_dacbc +1]});};if len (_aaaa )> 0{_bbge =append (_bbge ,_aaaa );
};};_add ,_aaad ,_abea :=_gfaf (_bbge ,_eecec .Color ,_eecec .LineWidth );if _abea !=nil {return nil ,nil ,_abea ;};return _add ,_aaad ,nil ;};type quadding int ;func _dcgd (_cdcf []_cde .Point )(_dcae []_cde .Point ,_fdfdf []_cde .Point ,_dafb error ){_bfeb :=len (_cdcf )-1;
if len (_cdcf )< 1{return nil ,nil ,_ec .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _bfeb ==1{_eabdc :=_cde .Point {X :(2*_cdcf [0].X +_cdcf [1].X )/3,Y :(2*_cdcf [0].Y +_cdcf [1].Y )/3};_dcae =append (_dcae ,_eabdc );_fdfdf =append (_fdfdf ,_cde .Point {X :2*_eabdc .X -_cdcf [0].X ,Y :2*_eabdc .Y -_cdcf [0].Y });return _dcae ,_fdfdf ,nil ;
};_cfgc :=make ([]float64 ,_bfeb );for _gfge :=1;_gfge < _bfeb -1;_gfge ++{_cfgc [_gfge ]=4*_cdcf [_gfge ].X +2*_cdcf [_gfge +1].X ;};_cfgc [0]=_cdcf [0].X +2*_cdcf [1].X ;_cfgc [_bfeb -1]=(8*_cdcf [_bfeb -1].X +_cdcf [_bfeb ].X )/2.0;_deaf :=_cgge (_cfgc );
for _dgeb :=1;_dgeb < _bfeb -1;_dgeb ++{_cfgc [_dgeb ]=4*_cdcf [_dgeb ].Y +2*_cdcf [_dgeb +1].Y ;};_cfgc [0]=_cdcf [0].Y +2*_cdcf [1].Y ;_cfgc [_bfeb -1]=(8*_cdcf [_bfeb -1].Y +_cdcf [_bfeb ].Y )/2.0;_egac :=_cgge (_cfgc );_dcae =make ([]_cde .Point ,_bfeb );
_fdfdf =make ([]_cde .Point ,_bfeb );for _agf :=0;_agf < _bfeb ;_agf ++{_dcae [_agf ]=_cde .Point {X :_g .RoundDefault (_deaf [_agf ]),Y :_g .RoundDefault (_egac [_agf ])};if _agf < _bfeb -1{_fdfdf [_agf ]=_cde .Point {X :_g .RoundDefault (2*_cdcf [_agf +1].X -_deaf [_agf +1]),Y :_g .RoundDefault (2*_cdcf [_agf +1].Y -_egac [_agf +1])};
}else {_fdfdf [_agf ]=_cde .Point {X :_g .RoundDefault ((_cdcf [_bfeb ].X +_deaf [_bfeb -1])/2),Y :_g .RoundDefault ((_cdcf [_bfeb ].Y +_egac [_bfeb -1])/2)};};};return _dcae ,_fdfdf ,nil ;};func _cefbf (_cegb LineAnnotationDef ,_afbd string )([]byte ,*_ed .PdfRectangle ,*_ed .PdfRectangle ,error ){_cfdd :=_cde .Line {X1 :0,Y1 :0,X2 :_cegb .X2 -_cegb .X1 ,Y2 :_cegb .Y2 -_cegb .Y1 ,LineColor :_cegb .LineColor ,Opacity :_cegb .Opacity ,LineWidth :_cegb .LineWidth ,LineEndingStyle1 :_cegb .LineEndingStyle1 ,LineEndingStyle2 :_cegb .LineEndingStyle2 };
_cbcc ,_adaf ,_cfbg :=_cfdd .Draw (_afbd );if _cfbg !=nil {return nil ,nil ,nil ,_cfbg ;};_cbef :=&_ed .PdfRectangle {};_cbef .Llx =_cegb .X1 +_adaf .Llx ;_cbef .Lly =_cegb .Y1 +_adaf .Lly ;_cbef .Urx =_cegb .X1 +_adaf .Urx ;_cbef .Ury =_cegb .Y1 +_adaf .Ury ;
return _cbcc ,_adaf ,_cbef ,nil ;};

// CreateFileAttachmentAnnotation creates a file attachment annotation object that can be added to the annotation list of a PDF page.
func CreateFileAttachmentAnnotation (fileDef FileAnnotationDef )(*_ed .PdfAnnotation ,error ){_ccd :=_ed .NewPdfFileSpecFromEmbeddedFile (fileDef .EmbeddedFile );if fileDef .Color ==nil {fileDef .Color =_ed .NewPdfColorDeviceRGB (0.0,0.0,0.0);};if fileDef .Description ==""{fileDef .Description =fileDef .EmbeddedFile .Name ;
};if fileDef .CreationDate ==nil {_feb :=_cb .Now ();fileDef .CreationDate =&_feb ;};if fileDef .IconName ==""{fileDef .IconName ="\u0050u\u0073\u0068\u0050\u0069\u006e";};_gdg ,_daeg :=_ed .NewPdfDateFromTime (*fileDef .CreationDate );if _daeg !=nil {return nil ,_daeg ;
};_bagg :=_ed .NewPdfAnnotationFileAttachment ();_bagg .FS =_ccd .ToPdfObject ();_bagg .C =_f .MakeArrayFromFloats ([]float64 {fileDef .Color .R (),fileDef .Color .G (),fileDef .Color .B ()});_bagg .Contents =_f .MakeString (fileDef .Description );_bagg .CreationDate =_gdg .ToPdfObject ();
_bagg .M =_gdg .ToPdfObject ();_bagg .Name =_f .MakeName (fileDef .IconName );_bagg .Rect =_f .MakeArrayFromFloats ([]float64 {fileDef .X ,fileDef .Y ,fileDef .X +fileDef .Width ,fileDef .Y +fileDef .Height });_bagg .T =_f .MakeString (fileDef .Author );
_bagg .Subj =_f .MakeString (fileDef .Subject );return _bagg .PdfAnnotation ,nil ;};func _aecd (_bced *_ed .PdfFieldButton ,_bfce *_ed .PdfAnnotationWidget ,_bgfb AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_fdbb ,_bgba :=_f .GetArray (_bfce .Rect );
if !_bgba {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ffd ,_daae :=_ed .NewPdfRectangle (*_fdbb );if _daae !=nil {return nil ,_daae ;};_dfag ,_dege :=_ffd .Width (),_ffd .Height ();_ccef :=_cd .NewContentCreator ();
if _bgfb .BorderSize > 0{_ffaa (_ccef ,_bgfb ,_dfag ,_dege );};if _bgfb .DrawAlignmentReticle {_ged :=_bgfb ;_ged .BorderSize =0.2;_gdfc (_ccef ,_ged ,_dfag ,_dege );};_cfbc :=_bced .GetFillImage ();_aece ,_daae :=_ebged (_dfag ,_dege ,_cfbc ,_bgfb );if _daae !=nil {return nil ,_daae ;
};_ecda ,_cdfe :=_f .GetDict (_bfce .MK );if _cdfe {_ecda .Set ("\u006c",_aece .ToPdfObject ());};_aagg :=_f .MakeDict ();_aagg .Set ("\u0046\u0052\u004d",_aece .ToPdfObject ());_bafg :=_ed .NewPdfPageResources ();_bafg .ProcSet =_f .MakeArray (_f .MakeName ("\u0050\u0044\u0046"));
_bafg .XObject =_aagg ;_fae :=_dfag -2;_aedb :=_dege -2;_ccef .Add_q ();_ccef .Add_re (1,1,_fae ,_aedb );_ccef .Add_W ();_ccef .Add_n ();_fae -=2;_aedb -=2;_ccef .Add_q ();_ccef .Add_re (2,2,_fae ,_aedb );_ccef .Add_W ();_ccef .Add_n ();_bfdb :=_bd .Min (_fae /float64 (_cfbc .Width ),_aedb /float64 (_cfbc .Height ));
_ccef .Add_cm (_bfdb ,0,0,_bfdb ,(_dfag /2)-(float64 (_cfbc .Width )*_bfdb /2)+2,2);_ccef .Add_Do ("\u0046\u0052\u004d");_ccef .Add_Q ();_ccef .Add_Q ();_egbd :=_ed .NewXObjectForm ();_egbd .FormType =_f .MakeInteger (1);_egbd .Resources =_bafg ;_egbd .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_dfag ,_dege });
_egbd .Matrix =_f .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_egbd .SetContentStream (_ccef .Bytes (),_bcef ());_daee :=_f .MakeDict ();_daee .Set ("\u004e",_egbd .ToPdfObject ());return _daee ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ed .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ed .PdfColorDeviceRGB ;Opacity float64 ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ed .PdfColor ;FillColor _ed .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;TextColor _ed .PdfColor ;

// FieldColors holds separate set of appearance styles for fields.
FieldColors map[string ]_ed .PdfColor ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// NewFormSubmitButtonField would create a submit button in specified page according to the parameter in `FormSubmitActionOptions`.
func NewFormSubmitButtonField (page *_ed .PdfPage ,opt FormSubmitActionOptions )(*_ed .PdfFieldButton ,error ){_gebc :=int64 (_aac );if opt .IsExclusionList {_gebc |=_dbcg ;};if opt .IncludeEmptyFields {_gebc |=_fbac ;};if opt .SubmitAsPDF {_gebc |=_dcdd ;
};_ffac :=_ed .NewPdfActionSubmitForm ();_ffac .Flags =_f .MakeInteger (_gebc );_ffac .F =_ed .NewPdfFilespec ();if opt .Fields !=nil {_ffac .Fields =opt .Fields ;};_ffac .F .F =_f .MakeString (opt .Url );_ffac .F .FS =_f .MakeName ("\u0055\u0052\u004c");
_bfac ,_eegc :=_edca (page ,opt .Rectangle ,"\u0062t\u006e\u0053\u0075\u0062\u006d\u0069t",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_ffac .ToPdfObject ());if _eegc !=nil {return nil ,_eegc ;};return _bfac ,nil ;};func _gdfc (_fbb *_cd .ContentCreator ,_dgb AppearanceStyle ,_aadb ,_bde float64 ){_fbb .Add_q ().Add_re (0,0,_aadb ,_bde ).Add_re (0,_bde /2,_aadb ,_bde /2).Add_re (0,0,_aadb ,_bde ).Add_re (_aadb /2,0,_aadb /2,_bde ).Add_w (_dgb .BorderSize ).SetStrokingColor (_dgb .BorderColor ).SetNonStrokingColor (_dgb .FillColor ).Add_B ().Add_Q ();
};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ed .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ed .PdfFieldText ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gcaf :=_ed .NewPdfField ();_fcdd :=&_ed .PdfFieldText {};_gcaf .SetContext (_fcdd );_fcdd .PdfField =_gcaf ;_fcdd .T =_f .MakeString (name );
if opt .MaxLen > 0{_fcdd .MaxLen =_f .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_fcdd .V =_f .MakeString (opt .Value );};if opt .TextColor !=""{_eeda :=_bc .ColorRGBFromHex (opt .TextColor );_fdfb ,_cfgb ,_aae :=_eeda .ToRGB ();_abgb :=12;
if opt .FontSize > 0{_abgb =opt .FontSize ;};_gdde :="\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a";if opt .FontName !=""{_gdde =opt .FontName ;};_caad :=_ad .Sprintf ("/\u0025\u0073\u0020\u0025\u0064\u0020T\u0066\u0020\u0025\u002e\u0033\u0066\u0020\u0025\u002e3\u0066\u0020\u0025.\u0033f\u0020\u0072\u0067",_gdde ,_abgb ,_fdfb ,_cfgb ,_aae );
_fcdd .DA =_f .MakeString (_caad );};_gcaf .SetContext (_fcdd );_dcea :=_ed .NewPdfAnnotationWidget ();_dcea .Rect =_f .MakeArrayFromFloats (rect );_dcea .P =page .ToPdfObject ();_dcea .F =_f .MakeInteger (4);_dcea .Parent =_fcdd .ToPdfObject ();_fcdd .Annotations =append (_fcdd .Annotations ,_dcea );
return _fcdd ,nil ;};func _eaff (_eddff _f .PdfObject ,_cccg *_ed .PdfPageResources )(*_f .PdfObjectName ,float64 ,bool ){var (_dadg *_f .PdfObjectName ;_fbe float64 ;_eedg bool ;);if _bgea ,_caeb :=_f .GetDict (_eddff );_caeb &&_bgea !=nil {_eaca :=_f .TraceToDirectObject (_bgea .Get ("\u004e"));
switch _ddbbe :=_eaca .(type ){case *_f .PdfObjectStream :_fdb ,_cdfg :=_f .DecodeStream (_ddbbe );if _cdfg !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_cdfg .Error ());
return nil ,0,false ;};_eaed ,_cdfg :=_cd .NewContentStreamParser (string (_fdb )).Parse ();if _cdfg !=nil {_d .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_cdfg .Error ());
return nil ,0,false ;};_bgbdb :=_cd .NewContentStreamProcessor (*_eaed );_bgbdb .AddHandler (_cd .HandlerConditionEnumOperand ,"\u0054\u0066",func (_cfd *_cd .ContentStreamOperation ,_cgee _cd .GraphicsState ,_dceb *_ed .PdfPageResources )error {if len (_cfd .Params )==2{if _ffceg ,_ddfg :=_f .GetName (_cfd .Params [0]);
_ddfg {_dadg =_ffceg ;};if _aced ,_gdag :=_f .GetNumberAsFloat (_cfd .Params [1]);_gdag ==nil {_fbe =_aced ;};_eedg =true ;return _cd .ErrEarlyExit ;};return nil ;});_bgbdb .Process (_cccg );return _dadg ,_fbe ,_eedg ;};};return nil ,0,false ;};func _fdbba (_faa *InkAnnotationDef )(*_f .PdfObjectDictionary ,*_ed .PdfRectangle ,error ){_gadg :=_ed .NewXObjectForm ();
_aabc ,_afg ,_fbc :=_eegg (_faa );if _fbc !=nil {return nil ,nil ,_fbc ;};_fbc =_gadg .SetContentStream (_aabc ,nil );if _fbc !=nil {return nil ,nil ,_fbc ;};_gadg .BBox =_afg .ToPdfObject ();_gadg .Resources =_ed .NewPdfPageResources ();_gadg .Resources .ProcSet =_f .MakeArray (_f .MakeName ("\u0050\u0044\u0046"));
_ffefg :=_f .MakeDict ();_ffefg .Set ("\u004e",_gadg .ToPdfObject ());return _ffefg ,_afg ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ed .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ed .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ed .PdfColor ;

// FillOpacity sets the opacity of the background of the appearance annotation area.
// Range is 0.0 - 1.0. Default is 1.0, opaque.
FillOpacity float64 ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ed .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _da .Image ;

// Image represents the image used for the signature appearance.
Image _da .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _f .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ed .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ed .NewPdfColorDeviceGray (0),BorderColor :_ed .NewPdfColorDeviceGray (0),FillColor :_ed .NewPdfColorDeviceGray (1),FillOpacity :1.0,Encoder :_f .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};func _bda (_cf CircleAnnotationDef )(*_f .PdfObjectDictionary ,*_ed .PdfRectangle ,error ){_aa :=_ed .NewXObjectForm ();_aa .Resources =_ed .NewPdfPageResources ();_gcb :="";if _cf .Opacity < 1.0{_fd :=_f .MakeDict ();_fd .Set ("\u0063\u0061",_f .MakeFloat (_cf .Opacity ));
_fd .Set ("\u0043\u0041",_f .MakeFloat (_cf .Opacity ));_cff :=_aa .Resources .AddExtGState ("\u0067\u0073\u0031",_fd );if _cff !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_cff ;};_gcb ="\u0067\u0073\u0031";};_ba ,_fdf ,_gd ,_caf :=_cg (_cf ,_gcb );if _caf !=nil {return nil ,nil ,_caf ;};_caf =_aa .SetContentStream (_ba ,nil );if _caf !=nil {return nil ,nil ,_caf ;};_aa .BBox =_fdf .ToPdfObject ();_fc :=_f .MakeDict ();
_fc .Set ("\u004e",_aa .ToPdfObject ());return _fc ,_gd ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ebab FieldAppearance )WrapContentStream (page *_ed .PdfPage )error {_ddbg ,_efa :=page .GetAllContentStreams ();if _efa !=nil {return _efa ;};_eabd :=_cd .NewContentStreamParser (_ddbg );_gcd ,_efa :=_eabd .Parse ();if _efa !=nil {return _efa ;};
_gcd .WrapIfNeeded ();_cbfe :=[]string {_gcd .String ()};return page .SetContentStreams (_cbfe ,_bcef ());};