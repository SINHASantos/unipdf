//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_d "bytes";_ec "errors";_bc "fmt";_f "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/contentstream";_c "github.com/unidoc/unipdf/v3/contentstream/draw";_dd "github.com/unidoc/unipdf/v3/core";_b "github.com/unidoc/unipdf/v3/creator";
_fa "github.com/unidoc/unipdf/v3/internal/textencoding";_ge "github.com/unidoc/unipdf/v3/model";_da "image";_bb "math";_a "strings";_de "time";_fd "unicode";);func _becd (_bgfb *_ge .PdfField )string {if _bgfb ==nil {return "";};_dcfc ,_cdg :=_bgfb .GetContext ().(*_ge .PdfFieldText );
if !_cdg {return _becd (_bgfb .Parent );};if _dcfc .DA !=nil {return _dcfc .DA .Str ();};return _becd (_dcfc .Parent );};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ge .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ge .PdfColorDeviceRGB ;Opacity float64 ;};func _cbff (_adbcg _dd .PdfObject ,_bcfd *_ge .PdfPageResources )(*_dd .PdfObjectName ,float64 ,bool ){var (_adc *_dd .PdfObjectName ;
_cgfb float64 ;_fbc bool ;);if _afag ,_baeaa :=_dd .GetDict (_adbcg );_baeaa &&_afag !=nil {_bgde :=_dd .TraceToDirectObject (_afag .Get ("\u004e"));switch _gabb :=_bgde .(type ){case *_dd .PdfObjectStream :_egbef ,_dgf :=_dd .DecodeStream (_gabb );if _dgf !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_dgf .Error ());
return nil ,0,false ;};_ccbg ,_dgf :=_g .NewContentStreamParser (string (_egbef )).Parse ();if _dgf !=nil {_f .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_dgf .Error ());
return nil ,0,false ;};_feg :=_g .NewContentStreamProcessor (*_ccbg );_feg .AddHandler (_g .HandlerConditionEnumOperand ,"\u0054\u0066",func (_eaca *_g .ContentStreamOperation ,_adf _g .GraphicsState ,_dgag *_ge .PdfPageResources )error {if len (_eaca .Params )==2{if _ebag ,_abgd :=_dd .GetName (_eaca .Params [0]);
_abgd {_adc =_ebag ;};if _cbedf ,_gegfd :=_dd .GetNumberAsFloat (_eaca .Params [1]);_gegfd ==nil {_cgfb =_cbedf ;};_fbc =true ;return _g .ErrEarlyExit ;};return nil ;});_feg .Process (_bcfd );return _adc ,_cgfb ,_fbc ;};};return nil ,0,false ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fdc FieldAppearance )Style ()AppearanceStyle {if _fdc ._daa !=nil {return *_fdc ._daa ;};_dab :=_daag ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'âœ”',BorderSize :0.0,BorderColor :_ge .NewPdfColorDeviceGray (0),FillColor :_ge .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_dab };
};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ge .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ge .NewPdfColorDeviceGray (0),BorderColor :_ge .NewPdfColorDeviceGray (0),FillColor :_ge .NewPdfColorDeviceGray (1),Encoder :_dd .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};func _aada (_geac _da .Image ,_ddfe string ,_gdg *SignatureFieldOpts ,_bdb []float64 ,_efd *_g .ContentCreator )(*_dd .PdfObjectName ,*_ge .XObjectImage ,error ){_bffa ,_cgge :=_ge .DefaultImageHandler {}.NewImageFromGoImage (_geac );if _cgge !=nil {return nil ,nil ,_cgge ;
};_fba ,_cgge :=_ge .NewXObjectImageFromImage (_bffa ,nil ,_gdg .Encoder );if _cgge !=nil {return nil ,nil ,_cgge ;};_gfa ,_eef :=float64 (*_fba .Width ),float64 (*_fba .Height );_gcae :=_bdb [2]-_bdb [0];_fgge :=_bdb [3]-_bdb [1];if _gdg .AutoSize {_ffee :=_bb .Min (_gcae /_gfa ,_fgge /_eef );
_gfa *=_ffee ;_eef *=_ffee ;_bdb [0]=_bdb [0]+(_gcae /2)-(_gfa /2);_bdb [1]=_bdb [1]+(_fgge /2)-(_eef /2);};var _edcf *_dd .PdfObjectName ;if _egbb ,_bfe :=_dd .GetName (_fba .Name );_bfe {_edcf =_egbb ;}else {_edcf =_dd .MakeName (_ddfe );};if _efd !=nil {_efd .Add_q ().Translate (_bdb [0],_bdb [1]).Scale (_gfa ,_eef ).Add_Do (*_edcf ).Add_Q ();
}else {return nil ,nil ,_ec .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _edcf ,_fba ,nil ;};func _acf (_dec *_g .ContentCreator ,_bfa AppearanceStyle ,_fead ,_cge float64 ){_dec .Add_q ().Add_re (0,0,_fead ,_cge ).Add_w (_bfa .BorderSize ).SetStrokingColor (_bfa .BorderColor ).SetNonStrokingColor (_bfa .FillColor ).Add_B ().Add_Q ();
};func _efaf (_acbc *InkAnnotationDef )(*_dd .PdfObjectDictionary ,*_ge .PdfRectangle ,error ){_geab :=_ge .NewXObjectForm ();_cggcb ,_bfgd ,_cbea :=_befe (_acbc );if _cbea !=nil {return nil ,nil ,_cbea ;};_cbea =_geab .SetContentStream (_cggcb ,nil );
if _cbea !=nil {return nil ,nil ,_cbea ;};_geab .BBox =_bfgd .ToPdfObject ();_geab .Resources =_ge .NewPdfPageResources ();_geab .Resources .ProcSet =_dd .MakeArray (_dd .MakeName ("\u0050\u0044\u0046"));_bdddf :=_dd .MakeDict ();_bdddf .Set ("\u004e",_geab .ToPdfObject ());
return _bdddf ,_bfgd ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};const (_fbac =1;_aac =2;_bcaf =4;_egce =8;_bffc =16;_ffg =32;_dgeg =64;_ddfg =128;_fab =256;_fgf =512;_afaa =1024;_cbba =2048;_ggac =4096;);func _befe (_bcgg *InkAnnotationDef )([]byte ,*_ge .PdfRectangle ,error ){_abgdd :=[][]_c .CubicBezierCurve {};
for _ ,_bdac :=range _bcgg .Paths {if _bdac .Length ()==0{continue ;};_ffgc :=_bdac .Points ;_gbea ,_fffg ,_dfee :=_gbggf (_ffgc );if _dfee !=nil {return nil ,nil ,_dfee ;};if len (_gbea )!=len (_fffg ){return nil ,nil ,_ec .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_bedbb :=[]_c .CubicBezierCurve {};for _fbg :=0;_fbg < len (_gbea );_fbg ++{_bedbb =append (_bedbb ,_c .CubicBezierCurve {P0 :_ffgc [_fbg ],P1 :_gbea [_fbg ],P2 :_fffg [_fbg ],P3 :_ffgc [_fbg +1]});};if len (_bedbb )> 0{_abgdd =append (_abgdd ,_bedbb );
};};_cgda ,_gbgg ,_cfe :=_cfdc (_abgdd ,_bcgg .Color ,_bcgg .LineWidth );if _cfe !=nil {return nil ,nil ,_cfe ;};return _cgda ,_gbgg ,nil ;};

// NewFormSubmitButtonField would create a submit button in specified page according to the parameter in `FormSubmitActionOptions`.
func NewFormSubmitButtonField (page *_ge .PdfPage ,opt FormSubmitActionOptions )(*_ge .PdfFieldButton ,error ){_dbcd :=int64 (_bcaf );if opt .IsExclusionList {_dbcd |=_fbac ;};if opt .IncludeEmptyFields {_dbcd |=_aac ;};if opt .SubmitAsPDF {_dbcd |=_fab ;
};_dcfe :=_ge .NewPdfActionSubmitForm ();_dcfe .Flags =_dd .MakeInteger (_dbcd );_dcfe .F =_ge .NewPdfFilespec ();if opt .Fields !=nil {_dcfe .Fields =opt .Fields ;};_dcfe .F .F =_dd .MakeString (opt .Url );_dcfe .F .FS =_dd .MakeName ("\u0055\u0052\u004c");
_cgga ,_agae :=_fgbg (page ,opt .Rectangle ,"\u0062t\u006e\u0053\u0075\u0062\u006d\u0069t",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_dcfe .ToPdfObject ());if _agae !=nil {return nil ,_agae ;};return _cgga ,nil ;};func _dg (_gg CircleAnnotationDef ,_eda string )([]byte ,*_ge .PdfRectangle ,*_ge .PdfRectangle ,error ){_cbf :=_c .Circle {X :_gg .X ,Y :_gg .Y ,Width :_gg .Width ,Height :_gg .Height ,FillEnabled :_gg .FillEnabled ,FillColor :_gg .FillColor ,BorderEnabled :_gg .BorderEnabled ,BorderWidth :_gg .BorderWidth ,BorderColor :_gg .BorderColor ,Opacity :_gg .Opacity };
_gf ,_beb ,_ff :=_cbf .Draw (_eda );if _ff !=nil {return nil ,nil ,nil ,_ff ;};_ffe :=&_ge .PdfRectangle {};_ffe .Llx =_gg .X +_beb .Llx ;_ffe .Lly =_gg .Y +_beb .Lly ;_ffe .Urx =_gg .X +_beb .Urx ;_ffe .Ury =_gg .Y +_beb .Ury ;return _gf ,_beb ,_ffe ,nil ;
};

// FileAnnotationDef holds base information for constructing an file attachment annotation.
type FileAnnotationDef struct{

// Bounding box of the annotation.
X float64 ;Y float64 ;Width float64 ;Height float64 ;

// EmbeddedFile is the file information to be attached.
EmbeddedFile *_ge .EmbeddedFile ;

// Author is the author of the attachment file.
Author string ;

// Subject is the subject of the attachment file.
Subject string ;

// Description of the file attachment that will be displayed as a comment on the PDF reader.
Description string ;

// IconName is The name of an icon that shall be used in displaying the annotation.
// Conforming readers shall provide predefined icon appearances for at least the following standard names:
//
// - Graph
// - PushPin
// - Paperclip
// - Tag
//
// Additional names may be supported as well. Default value: "PushPin".
IconName string ;

// Color is the color of the annotation.
Color *_ge .PdfColorDeviceRGB ;

// CreationDate is the date and time when the file attachment was created.
// If not set, the current time is used.
CreationDate *_de .Time ;};

// NewFormResetButtonField would create a reset button in specified page according to the parameter in `FormResetActionOptions`.
func NewFormResetButtonField (page *_ge .PdfPage ,opt FormResetActionOptions )(*_ge .PdfFieldButton ,error ){_acff :=_ge .NewPdfActionResetForm ();_acff .Fields =opt .Fields ;_acff .Flags =_dd .MakeInteger (0);if opt .IsExclusionList {_acff .Flags =_dd .MakeInteger (1);
};_aee ,_dddf :=_fgbg (page ,opt .Rectangle ,"\u0062\u0074\u006e\u0052\u0065\u0073\u0065\u0074",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_acff .ToPdfObject ());if _dddf !=nil {return nil ,_dddf ;};return _aee ,nil ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_fcdd *AppearanceStyle ;};

// SetStyle applies appearance `style` to `fa`.
func (_cgb *FieldAppearance )SetStyle (style AppearanceStyle ){_cgb ._daa =&style };func _fegd (_eddb RectangleAnnotationDef )(*_dd .PdfObjectDictionary ,*_ge .PdfRectangle ,error ){_bcee :=_ge .NewXObjectForm ();_bcee .Resources =_ge .NewPdfPageResources ();
_cgegc :="";if _eddb .Opacity < 1.0{_edagb :=_dd .MakeDict ();_edagb .Set ("\u0063\u0061",_dd .MakeFloat (_eddb .Opacity ));_edagb .Set ("\u0043\u0041",_dd .MakeFloat (_eddb .Opacity ));_dcef :=_bcee .Resources .AddExtGState ("\u0067\u0073\u0031",_edagb );
if _dcef !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dcef ;};_cgegc ="\u0067\u0073\u0031";};_dcb ,_efed ,_ggba ,_fdge :=_egga (_eddb ,_cgegc );
if _fdge !=nil {return nil ,nil ,_fdge ;};_fdge =_bcee .SetContentStream (_dcb ,nil );if _fdge !=nil {return nil ,nil ,_fdge ;};_bcee .BBox =_efed .ToPdfObject ();_eggb :=_dd .MakeDict ();_eggb .Set ("\u004e",_bcee .ToPdfObject ());return _eggb ,_ggba ,nil ;
};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_daa *AppearanceStyle ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_geacc ImageFieldAppearance )GenerateAppearanceDict (form *_ge .PdfAcroForm ,field *_ge .PdfField ,wa *_ge .PdfAnnotationWidget )(*_dd .PdfObjectDictionary ,error ){_ ,_bbdg :=field .GetContext ().(*_ge .PdfFieldButton );if !_bbdg {_f .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_fcgc ,_cefg :=_dd .GetDict (wa .AP );if _cefg &&_geacc .OnlyIfMissing {_f .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _fcgc ,nil ;};if form .DR ==nil {form .DR =_ge .NewPdfPageResources ();};switch _bfbc :=field .GetContext ().(type ){case *_ge .PdfFieldButton :if _bfbc .IsPush (){_cdbf ,_egcg :=_gdgb (_bfbc ,wa ,_geacc .Style ());if _egcg !=nil {return nil ,_egcg ;
};return _cdbf ,nil ;};};return nil ,nil ;};func (_fbfd *AppearanceStyle )applyAppearanceCharacteristics (_abd *_dd .PdfObjectDictionary ,_gdc *_dd .PdfObjectDictionary ,_gbdg *_ge .PdfFont )error {if !_fbfd .AllowMK {return nil ;};if CA ,_cgcf :=_dd .GetString (_abd .Get ("\u0043\u0041"));
_cgcf &&_gbdg !=nil {_efgg :=CA .Bytes ();if len (_efgg )!=0{_baf :=[]rune (_gbdg .Encoder ().Decode (_efgg ));if len (_baf )==1{_fbfd .CheckmarkRune =_baf [0];};};};if BC ,_bbga :=_dd .GetArray (_abd .Get ("\u0042\u0043"));_bbga {_bege ,_ffeg :=BC .ToFloat64Array ();
if _ffeg !=nil {return _ffeg ;};switch len (_bege ){case 1:_fbfd .BorderColor =_ge .NewPdfColorDeviceGray (_bege [0]);case 3:_fbfd .BorderColor =_ge .NewPdfColorDeviceRGB (_bege [0],_bege [1],_bege [2]);case 4:_fbfd .BorderColor =_ge .NewPdfColorDeviceCMYK (_bege [0],_bege [1],_bege [2],_bege [3]);
default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bege ));
};if _gdc !=nil {if _gbda ,_gde :=_dd .GetNumberAsFloat (_gdc .Get ("\u0057"));_gde ==nil {_fbfd .BorderSize =_gbda ;};};};if BG ,_dfc :=_dd .GetArray (_abd .Get ("\u0042\u0047"));_dfc {_cfb ,_fgbf :=BG .ToFloat64Array ();if _fgbf !=nil {return _fgbf ;
};switch len (_cfb ){case 1:_fbfd .FillColor =_ge .NewPdfColorDeviceGray (_cfb [0]);case 3:_fbfd .FillColor =_ge .NewPdfColorDeviceRGB (_cfb [0],_cfb [1],_cfb [2]);case 4:_fbfd .FillColor =_ge .NewPdfColorDeviceCMYK (_cfb [0],_cfb [1],_cfb [2],_cfb [3]);
default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cfb ));
};};return nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ge .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ge .PdfFieldButton ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gedc ,_eaad :=_ge .NewStandard14Font (_ge .ZapfDingbatsName );if _eaad !=nil {return nil ,_eaad ;};_age :=_ge .NewPdfField ();_adgaa :=&_ge .PdfFieldButton {};_age .SetContext (_adgaa );_adgaa .PdfField =_age ;_adgaa .T =_dd .MakeString (name );_adgaa .SetType (_ge .ButtonTypeCheckbox );
_ecf :="\u004f\u0066\u0066";if opt .Checked {_ecf ="\u0059\u0065\u0073";};_adgaa .V =_dd .MakeName (_ecf );_dcged :=_ge .NewPdfAnnotationWidget ();_dcged .Rect =_dd .MakeArrayFromFloats (rect );_dcged .P =page .ToPdfObject ();_dcged .F =_dd .MakeInteger (4);
_dcged .Parent =_adgaa .ToPdfObject ();_gdb :=rect [2]-rect [0];_gcec :=rect [3]-rect [1];var _efbd _d .Buffer ;_efbd .WriteString ("\u0071\u000a");_efbd .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_efbd .WriteString ("\u0042\u0054\u000a");
_efbd .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_efbd .WriteString ("\u0045\u0054\u000a");_efbd .WriteString ("\u0051\u000a");_eeab :=_g .NewContentCreator ();_eeab .Add_q ();_eeab .Add_rg (0,0,1);_eeab .Add_BT ();
_eeab .Add_Tf (*_dd .MakeName ("\u005a\u0061\u0044\u0062"),12);_eeab .Add_Td (0,0);_eeab .Add_ET ();_eeab .Add_Q ();_debg :=_ge .NewXObjectForm ();_debg .SetContentStream (_eeab .Bytes (),_dd .NewRawEncoder ());_debg .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_gdb ,_gcec });
_debg .Resources =_ge .NewPdfPageResources ();_debg .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gedc .ToPdfObject ());_eeab =_g .NewContentCreator ();_eeab .Add_q ();_eeab .Add_re (0,0,_gdb ,_gcec );_eeab .Add_W ().Add_n ();_eeab .Add_rg (0,0,1);
_eeab .Translate (0,3.0);_eeab .Add_BT ();_eeab .Add_Tf (*_dd .MakeName ("\u005a\u0061\u0044\u0062"),12);_eeab .Add_Td (0,0);_eeab .Add_Tj (*_dd .MakeString ("\u0034"));_eeab .Add_ET ();_eeab .Add_Q ();_egefd :=_ge .NewXObjectForm ();_egefd .SetContentStream (_eeab .Bytes (),_dd .NewRawEncoder ());
_egefd .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_gdb ,_gcec });_egefd .Resources =_ge .NewPdfPageResources ();_egefd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gedc .ToPdfObject ());_ced :=_dd .MakeDict ();_ced .Set ("\u004f\u0066\u0066",_debg .ToPdfObject ());
_ced .Set ("\u0059\u0065\u0073",_egefd .ToPdfObject ());_ceffa :=_dd .MakeDict ();_ceffa .Set ("\u004e",_ced );_dcged .AP =_ceffa ;_dcged .AS =_dd .MakeName (_ecf );_adgaa .Annotations =append (_adgaa .Annotations ,_dcged );return _adgaa ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ge .PdfAnnotation ,error ){_aaaa :=_ge .NewPdfAnnotationLine ();_aaaa .L =_dd .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_acfe :=_dd .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_c .LineEndingStyleArrow {_acfe =_dd .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_baga :=_dd .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_c .LineEndingStyleArrow {_baga =_dd .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_aaaa .LE =_dd .MakeArray (_acfe ,_baga );if lineDef .Opacity < 1.0{_aaaa .CA =_dd .MakeFloat (lineDef .Opacity );};_feag ,_edcd ,_efaa :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_aaaa .IC =_dd .MakeArrayFromFloats ([]float64 {_feag ,_edcd ,_efaa });
_aaaa .C =_dd .MakeArrayFromFloats ([]float64 {_feag ,_edcd ,_efaa });_ffec :=_ge .NewBorderStyle ();_ffec .SetBorderWidth (lineDef .LineWidth );_aaaa .BS =_ffec .ToPdfObject ();_adgcg ,_bcgc ,_aecd :=_aeca (lineDef );if _aecd !=nil {return nil ,_aecd ;
};_aaaa .AP =_adgcg ;_aaaa .Rect =_dd .MakeArrayFromFloats ([]float64 {_bcgc .Llx ,_bcgc .Lly ,_bcgc .Urx ,_bcgc .Ury });return _aaaa .PdfAnnotation ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _gcf (_fae ,_gfc float64 ,_bddd *_ge .Image ,_cbbc AppearanceStyle )(*_ge .XObjectForm ,error ){_aedca ,_ccfg :=_ge .NewXObjectImageFromImage (_bddd ,nil ,_dd .NewFlateEncoder ());if _ccfg !=nil {return nil ,_ccfg ;
};_aedca .Decode =_dd .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_ecd :=_ge .NewPdfPageResources ();_ecd .ProcSet =_dd .MakeArray (_dd .MakeName ("\u0050\u0044\u0046"),_dd .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));_ecd .SetXObjectImageByName (_dd .PdfObjectName ("\u0049\u006d\u0030"),_aedca );
_dace :=_g .NewContentCreator ();_dace .Add_q ();_dace .Add_cm (float64 (_bddd .Width ),0,0,float64 (_bddd .Height ),0,0);_dace .Add_Do ("\u0049\u006d\u0030");_dace .Add_Q ();_cgff :=_ge .NewXObjectForm ();_cgff .FormType =_dd .MakeInteger (1);_cgff .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,float64 (_bddd .Width ),float64 (_bddd .Height )});
_cgff .Resources =_ecd ;_cgff .SetContentStream (_dace .Bytes (),_aadc ());return _cgff ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ge .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ge .PdfFieldText ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcfa :=_ge .NewPdfField ();_fgd :=&_ge .PdfFieldText {};_fcfa .SetContext (_fgd );_fgd .PdfField =_fcfa ;_fgd .T =_dd .MakeString (name );
if opt .MaxLen > 0{_fgd .MaxLen =_dd .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_fgd .V =_dd .MakeString (opt .Value );};if opt .TextColor !=""{_adab :=_b .ColorRGBFromHex (opt .TextColor );_egdc ,_adgc ,_adag :=_adab .ToRGB ();_aafe :=12;
if opt .FontSize > 0{_aafe =opt .FontSize ;};_cacf :="\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a";if opt .FontName !=""{_cacf =opt .FontName ;};_dgbc :=_bc .Sprintf ("/\u0025\u0073\u0020\u0025\u0064\u0020T\u0066\u0020\u0025\u002e\u0033\u0066\u0020\u0025\u002e3\u0066\u0020\u0025.\u0033f\u0020\u0072\u0067",_cacf ,_aafe ,_egdc ,_adgc ,_adag );
_fgd .DA =_dd .MakeString (_dgbc );};_fcfa .SetContext (_fgd );_ggf :=_ge .NewPdfAnnotationWidget ();_ggf .Rect =_dd .MakeArrayFromFloats (rect );_ggf .P =page .ToPdfObject ();_ggf .F =_dd .MakeInteger (4);_ggf .Parent =_fgd .ToPdfObject ();_fgd .Annotations =append (_fgd .Annotations ,_ggf );
return _fgd ,nil ;};func _cfdc (_gfga [][]_c .CubicBezierCurve ,_cedbg *_ge .PdfColorDeviceRGB ,_caab float64 )([]byte ,*_ge .PdfRectangle ,error ){_cadg :=_g .NewContentCreator ();_cadg .Add_q ().SetStrokingColor (_cedbg ).Add_w (_caab );_bafa :=_c .NewCubicBezierPath ();
for _ ,_gcab :=range _gfga {_bafa .Curves =append (_bafa .Curves ,_gcab ...);for _gbc ,_fbee :=range _gcab {if _gbc ==0{_cadg .Add_m (_fbee .P0 .X ,_fbee .P0 .Y );}else {_cadg .Add_l (_fbee .P0 .X ,_fbee .P0 .Y );};_cadg .Add_c (_fbee .P1 .X ,_fbee .P1 .Y ,_fbee .P2 .X ,_fbee .P2 .Y ,_fbee .P3 .X ,_fbee .P3 .Y );
};};_cadg .Add_S ().Add_Q ();return _cadg .Bytes (),_bafa .GetBoundingBox ().ToPdfRectangle (),nil ;};func (_geb *AppearanceFont )fillName (){if _geb .Font ==nil ||_geb .Name !=""{return ;};_daf :=_geb .Font .FontDescriptor ();if _daf ==nil ||_daf .FontName ==nil {return ;
};_geb .Name =_daf .FontName .String ();};func (_gbff *AppearanceStyle )processDA (_ggbce *_ge .PdfField ,_fcg *_g .ContentStreamOperations ,_facg ,_cgdd *_ge .PdfPageResources ,_bea *_g .ContentCreator )(*AppearanceFont ,bool ,error ){var _daae *AppearanceFont ;
var _eccf bool ;if _gbff .Fonts !=nil {if _gbff .Fonts .Fallback !=nil {_daae =_gbff .Fonts .Fallback ;};if _aef :=_gbff .Fonts .FieldFallbacks ;_aef !=nil {if _gcag ,_dfcf :=_aef [_ggbce .PartialName ()];_dfcf {_daae =_gcag ;}else if _bag ,_ggcg :=_ggbce .FullName ();
_ggcg ==nil {if _efga ,_eac :=_aef [_bag ];_eac {_daae =_efga ;};};};if _daae !=nil {_daae .fillName ();};_eccf =_gbff .Fonts .ForceReplace ;};var _fcfe string ;var _cgeg float64 ;var _egd bool ;if _fcg !=nil {for _ ,_cdgf :=range *_fcg {if _cdgf .Operand =="\u0054\u0066"&&len (_cdgf .Params )==2{if _bcfb ,_bfg :=_dd .GetNameVal (_cdgf .Params [0]);
_bfg {_fcfe =_bcfb ;};if _caga ,_cff :=_dd .GetNumberAsFloat (_cdgf .Params [1]);_cff ==nil {_cgeg =_caga ;};_egd =true ;continue ;};_bea .AddOperand (*_cdgf );};};var _decd *AppearanceFont ;var _geef _dd .PdfObject ;if _eccf &&_daae !=nil {_decd =_daae ;
}else {if _facg !=nil &&_fcfe !=""{if _cbgf ,_aaed :=_facg .GetFontByName (*_dd .MakeName (_fcfe ));_aaed {if _gaggg ,_bbb :=_ge .NewPdfFontFromPdfObject (_cbgf );_bbb ==nil {_geef =_cbgf ;_decd =&AppearanceFont {Name :_fcfe ,Font :_gaggg ,Size :_cgeg };
}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_bbb );
};};};if _decd ==nil &&_daae !=nil {_decd =_daae ;};if _decd ==nil {_fcbc ,_dced :=_ge .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _dced !=nil {return nil ,false ,_dced ;};_decd =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_fcbc ,Size :_cgeg };
};};if _decd .Size <=0&&_gbff .Fonts !=nil &&_gbff .Fonts .FallbackSize > 0{_decd .Size =_gbff .Fonts .FallbackSize ;};_gfg :=*_dd .MakeName (_decd .Name );if _geef ==nil {_geef =_decd .Font .ToPdfObject ();};if _facg !=nil &&!_facg .HasFontByName (_gfg ){_facg .SetFontByName (_gfg ,_geef );
};if _cgdd !=nil &&!_cgdd .HasFontByName (_gfg ){_cgdd .SetFontByName (_gfg ,_geef );};return _decd ,_egd ,nil ;};

// FormResetActionOptions holds options for creating a form reset button.
type FormResetActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _c .Rectangle ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ge .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ge .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be resetted.
// This list may contain indirect object to fields or field names.
Fields *_dd .PdfObjectArray ;

// IsExclusionList specifies that the fields in the `Fields` array would be excluded form reset process.
IsExclusionList bool ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_cf FieldAppearance )GenerateAppearanceDict (form *_ge .PdfAcroForm ,field *_ge .PdfField ,wa *_ge .PdfAnnotationWidget )(*_dd .PdfObjectDictionary ,error ){_f .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_edac :=field .GetContext ().(*_ge .PdfFieldText );_bdc ,_fga :=_dd .GetDict (wa .AP );if _fga &&_cf .OnlyIfMissing &&(!_edac ||!_cf .RegenerateTextFields ){_f .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _bdc ,nil ;};if form .DR ==nil {form .DR =_ge .NewPdfPageResources ();};switch _cc :=field .GetContext ().(type ){case *_ge .PdfFieldText :_ce :=_cc ;if _dfg :=_becd (_ce .PdfField );_dfg ==""{_ce .DA =form .DA ;};if _cf ._daa !=nil &&_cf ._daa .TextColor !=nil {_agc :=_g .ContentStreamOperations {};
_ac :=_becd (_ce .PdfField );_gcb ,_ece :=_g .NewContentStreamParser (_ac ).Parse ();if _ece !=nil {return nil ,_ece ;};for _ ,_aga :=range *_gcb {if _aga .Operand =="\u0067"||_aga .Operand =="\u0072\u0067"{continue ;};_agc =append (_agc ,_aga );};_cd :=_cf ._daa .TextColor ;
_gfd ,_dbd :=_cd .(*_ge .PdfColorDeviceRGB );if !_dbd {return nil ,_ece ;};_bcb ,_ae ,_ca :=_dd .MakeFloat (_gfd [0]),_dd .MakeFloat (_gfd [1]),_dd .MakeFloat (_gfd [2]);_dgg :=&_g .ContentStreamOperation {Params :[]_dd .PdfObject {_bcb ,_ae ,_ca },Operand :"\u0072\u0067"};
_agc =append (_agc ,_dgg );_ee :=_agc .String ();_ee =_a .Replace (_ee ,"\u000a","\u0020",-1);_ee =_a .Trim (_ee ,"\u0020");_ce .DA =_dd .MakeHexString (_ee );};switch {case _ce .Flags ().Has (_ge .FieldFlagPassword ):return nil ,nil ;case _ce .Flags ().Has (_ge .FieldFlagFileSelect ):return nil ,nil ;
case _ce .Flags ().Has (_ge .FieldFlagComb ):if _ce .MaxLen !=nil {_abf ,_cca :=_ddf (wa ,_ce ,form .DR ,_cf .Style ());if _cca !=nil {return nil ,_cca ;};return _abf ,nil ;};};_dc ,_ggb :=_eaa (wa ,_ce ,form .DR ,_cf .Style ());if _ggb !=nil {return nil ,_ggb ;
};return _dc ,nil ;case *_ge .PdfFieldButton :_acg :=_cc ;if _acg .IsCheckbox (){_ddb ,_fff :=_aeg (wa ,_acg ,form .DR ,_cf .Style ());if _fff !=nil {return nil ,_fff ;};return _ddb ,nil ;};_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_acg .GetType ());
case *_ge .PdfFieldChoice :_ccb :=_cc ;switch {case _ccb .Flags ().Has (_ge .FieldFlagCombo ):_ea ,_bf :=_adbc (form ,wa ,_ccb ,_cf .Style ());if _bf !=nil {return nil ,_bf ;};return _ea ,nil ;default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_ccb .Flags ().String ());
};default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cc );};return nil ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;

// TextColor defines the color of the text in hex format. e.g #43fd23.
// If it has an invalid value a #000000 (black) color is taken as default
TextColor string ;

// FontName defines the font of the text. Helvetica font is the default one.
// It is recommended to use one of 14 standard PDF fonts.
FontName string ;

// FontSize defines the font size of the text, 12 is used by default.
FontSize int ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_ge .Image ;_dafc AppearanceStyle ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_ge .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_ge .PdfFieldButton ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ggfc :=_ge .NewPdfField ();_fddg :=&_ge .PdfFieldButton {};_fddg .PdfField =_ggfc ;_ggfc .SetContext (_fddg );_fddg .SetType (_ge .ButtonTypePush );_fddg .T =_dd .MakeString (name );_ccbb :=_ge .NewPdfAnnotationWidget ();_ccbb .Rect =_dd .MakeArrayFromFloats (rect );
_ccbb .P =page .ToPdfObject ();_ccbb .F =_dd .MakeInteger (4);_ccbb .Parent =_fddg .ToPdfObject ();_cbfd :=rect [2]-rect [0];_bffb :=rect [3]-rect [1];_bac :=opt ._dafc ;_gdcd :=_g .NewContentCreator ();if _bac .BorderSize > 0{_acf (_gdcd ,_bac ,_cbfd ,_bffb );
};if _bac .DrawAlignmentReticle {_bggc :=_bac ;_bggc .BorderSize =0.2;_fbff (_gdcd ,_bggc ,_cbfd ,_bffb );};_caeb ,_fefb :=_gcf (_cbfd ,_bffb ,opt .Image ,_bac );if _fefb !=nil {return nil ,_fefb ;};_bdfc ,_bef :=_dd .GetDict (_ccbb .MK );if _bef {_bdfc .Set ("\u006c",_caeb .ToPdfObject ());
};_efef :=_dd .MakeDict ();_efef .Set ("\u0046\u0052\u004d",_caeb .ToPdfObject ());_aba :=_ge .NewPdfPageResources ();_aba .ProcSet =_dd .MakeArray (_dd .MakeName ("\u0050\u0044\u0046"));_aba .XObject =_efef ;_ceea :=_cbfd -2;_eccd :=_bffb -2;_gdcd .Add_q ();
_gdcd .Add_re (1,1,_ceea ,_eccd );_gdcd .Add_W ();_gdcd .Add_n ();_ceea -=2;_eccd -=2;_gdcd .Add_q ();_gdcd .Add_re (2,2,_ceea ,_eccd );_gdcd .Add_W ();_gdcd .Add_n ();_fade :=_bb .Min (_ceea /float64 (opt .Image .Width ),_eccd /float64 (opt .Image .Height ));
_gdcd .Add_cm (_fade ,0,0,_fade ,(_cbfd /2)-(float64 (opt .Image .Width )*_fade /2)+2,2);_gdcd .Add_Do ("\u0046\u0052\u004d");_gdcd .Add_Q ();_gdcd .Add_Q ();_fccd :=_ge .NewXObjectForm ();_fccd .FormType =_dd .MakeInteger (1);_fccd .Resources =_aba ;_fccd .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_cbfd ,_bffb });
_fccd .Matrix =_dd .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_fccd .SetContentStream (_gdcd .Bytes (),_aadc ());_cdca :=_dd .MakeDict ();_cdca .Set ("\u004e",_fccd .ToPdfObject ());_ccbb .AP =_cdca ;_fddg .Annotations =append (_fddg .Annotations ,_ccbb );
return _fddg ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _fgbg (_bgb *_ge .PdfPage ,_bfc _c .Rectangle ,_afdg string ,_abbbd string ,_adcd _ge .PdfColor ,_cbbab *_ge .PdfFont ,_efbg *float64 ,_gbbg _dd .PdfObject )(*_ge .PdfFieldButton ,error ){_eegb ,_aebg :=_bfc .X ,_bfc .Y ;_ecfd :=_bfc .Width ;
_cabe :=_bfc .Height ;if _bfc .FillColor ==nil {_bfc .FillColor =_ge .NewPdfColorDeviceGray (0.7);};if _adcd ==nil {_adcd =_ge .NewPdfColorDeviceGray (0);};if _cbbab ==nil {_ceeg ,_ccbe :=_ge .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
if _ccbe !=nil {return nil ,_ccbe ;};_cbbab =_ceeg ;};_bbbe :=_ge .NewPdfField ();_gagd :=&_ge .PdfFieldButton {};_bbbe .SetContext (_gagd );_gagd .PdfField =_bbbe ;_gagd .T =_dd .MakeString (_afdg );_gagd .SetType (_ge .ButtonTypePush );_gagd .V =_dd .MakeName ("\u004f\u0066\u0066");
_gagd .Ff =_dd .MakeInteger (4);_acc :=_dd .MakeDict ();_acc .Set (*_dd .MakeName ("\u0043\u0041"),_dd .MakeString (_abbbd ));_edcc ,_gedb :=_cbbab .GetFontDescriptor ();if _gedb !=nil {return nil ,_gedb ;};_fbca :=_dd .MakeName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_efgf :=12.0;if _edcc !=nil &&_edcc .FontName !=nil {_fbca ,_ =_dd .GetName (_edcc .FontName );};if _efbg !=nil {_efgf =*_efbg ;};_ffefb :=_g .NewContentCreator ();_ffefb .Add_q ();_ffefb .SetNonStrokingColor (_bfc .FillColor );_ffefb .Add_re (0,0,_ecfd ,_cabe );
_ffefb .Add_f ();_ffefb .Add_Q ();_ffefb .Add_q ();_ffefb .Add_BT ();_efde :=0.0;for _ ,_abea :=range _abbbd {_fagf ,_fddd :=_cbbab .GetRuneMetrics (_abea );if !_fddd {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_abea );
continue ;};_efde +=_fagf .Wx ;};_efde =_efde /1000.0*_efgf ;var _cdf float64 ;if _edcc !=nil {_cdf ,_gedb =_edcc .GetCapHeight ();if _gedb !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_gedb );
};};if int (_cdf )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cdf =1000;};_gdce :=_cdf /1000.0*_efgf ;_caf :=(_cabe -_gdce )/2.0;_aeae :=(_ecfd -_efde )/2.0;_ffefb .Add_Tf (*_fbca ,_efgf );_ffefb .SetNonStrokingColor (_adcd );_ffefb .Add_Td (_aeae ,_caf );_ffefb .Add_Tj (*_dd .MakeString (_abbbd ));_ffefb .Add_ET ();
_ffefb .Add_Q ();_cea :=_ge .NewXObjectForm ();_cea .SetContentStream (_ffefb .Bytes (),_dd .NewRawEncoder ());_cea .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_ecfd ,_cabe });_cea .Resources =_ge .NewPdfPageResources ();_cea .Resources .SetFontByName (*_fbca ,_cbbab .ToPdfObject ());
_gcc :=_dd .MakeDict ();_gcc .Set ("\u004e",_cea .ToPdfObject ());_acdf :=_ge .NewPdfAnnotationWidget ();_acdf .Rect =_dd .MakeArrayFromFloats ([]float64 {_eegb ,_aebg ,_eegb +_ecfd ,_aebg +_cabe });_acdf .P =_bgb .ToPdfObject ();_acdf .F =_dd .MakeInteger (4);
_acdf .Parent =_gagd .ToPdfObject ();_acdf .A =_gbbg ;_acdf .MK =_acc ;_acdf .AP =_gcc ;_gagd .Annotations =append (_gagd .Annotations ,_acdf );return _gagd ,nil ;};

// FormSubmitActionOptions holds options for creating a form submit button.
type FormSubmitActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _c .Rectangle ;

// Url specifies the URL where the fieds will be submitted.
Url string ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ge .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ge .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be submitted.
// This list may contain indirect object to fields or field names.
Fields *_dd .PdfObjectArray ;

// IsExclusionList specifies that the fields contain in `Fields` array would not be submitted.
IsExclusionList bool ;

// IncludeEmptyFields specifies if all fields would be submitted even though it's value is empty.
IncludeEmptyFields bool ;

// SubmitAsPDF specifies that the document shall be submitted as PDF.
// If set then all the other flags shall be ignored.
SubmitAsPDF bool ;};

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_ge .PdfAnnotation ,error ){_bbbd :=_ge .NewPdfAnnotationInk ();_cgfc :=_dd .MakeArray ();for _ ,_deagg :=range inkDef .Paths {if _deagg .Length ()==0{continue ;};_gbge :=[]float64 {};for _ ,_agf :=range _deagg .Points {_gbge =append (_gbge ,_agf .X ,_agf .Y );
};_cgfc .Append (_dd .MakeArrayFromFloats (_gbge ));};_bbbd .InkList =_cgfc ;if inkDef .Color ==nil {inkDef .Color =_ge .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_bbbd .C =_dd .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_ffb ,_egde ,_aadgc :=_efaf (&inkDef );if _aadgc !=nil {return nil ,_aadgc ;};_bbbd .AP =_ffb ;_bbbd .Rect =_dd .MakeArrayFromFloats ([]float64 {_egde .Llx ,_egde .Lly ,_egde .Urx ,_egde .Ury });return _bbbd .PdfAnnotation ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ge .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ge .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ge .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ge .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _da .Image ;

// Image represents the image used for the signature appearance.
Image _da .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _dd .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _be (_ga CircleAnnotationDef )(*_dd .PdfObjectDictionary ,*_ge .PdfRectangle ,error ){_ab :=_ge .NewXObjectForm ();_ab .Resources =_ge .NewPdfPageResources ();_fg :="";if _ga .Opacity < 1.0{_fag :=_dd .MakeDict ();
_fag .Set ("\u0063\u0061",_dd .MakeFloat (_ga .Opacity ));_fag .Set ("\u0043\u0041",_dd .MakeFloat (_ga .Opacity ));_gce :=_ab .Resources .AddExtGState ("\u0067\u0073\u0031",_fag );if _gce !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_gce ;};_fg ="\u0067\u0073\u0031";};_fe ,_fdg ,_gb ,_gag :=_dg (_ga ,_fg );if _gag !=nil {return nil ,nil ,_gag ;};_gag =_ab .SetContentStream (_fe ,nil );if _gag !=nil {return nil ,nil ,_gag ;};_ab .BBox =_fdg .ToPdfObject ();_fdf :=_dd .MakeDict ();
_fdf .Set ("\u004e",_ab .ToPdfObject ());return _fdf ,_gb ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ge .PdfAnnotation ,error ){_edba :=_ge .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_ebfe ,_cfac ,_accg :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_edba .C =_dd .MakeArrayFromFloats ([]float64 {_ebfe ,_cfac ,_accg });_dbb :=_ge .NewBorderStyle ();_dbb .SetBorderWidth (rectDef .BorderWidth );_edba .BS =_dbb .ToPdfObject ();};if rectDef .FillEnabled {_gebc ,_baca ,_dfeb :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_edba .IC =_dd .MakeArrayFromFloats ([]float64 {_gebc ,_baca ,_dfeb });}else {_edba .IC =_dd .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_edba .CA =_dd .MakeFloat (rectDef .Opacity );};_gcdg ,_cbd ,_fcac :=_fegd (rectDef );if _fcac !=nil {return nil ,_fcac ;
};_edba .AP =_gcdg ;_edba .Rect =_dd .MakeArrayFromFloats ([]float64 {_cbd .Llx ,_cbd .Lly ,_cbd .Urx ,_cbd .Ury });return _edba .PdfAnnotation ,nil ;};func _adbc (_dbe *_ge .PdfAcroForm ,_feed *_ge .PdfAnnotationWidget ,_fea *_ge .PdfFieldChoice ,_gadf AppearanceStyle )(*_dd .PdfObjectDictionary ,error ){_fgb ,_fcc :=_dd .GetArray (_feed .Rect );
if !_fcc {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ceef ,_eed :=_ge .NewPdfRectangle (*_fgb );if _eed !=nil {return nil ,_eed ;};_dac ,_bec :=_ceef .Width (),_ceef .Height ();_f .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_feed .BS );
_bbd ,_eed :=_g .NewContentStreamParser (_becd (_fea .PdfField )).Parse ();if _eed !=nil {return nil ,_eed ;};_cgd ,_acb :=_dd .GetDict (_feed .MK );if _acb {_cae ,_ :=_dd .GetDict (_feed .BS );_ggbc :=_gadf .applyAppearanceCharacteristics (_cgd ,_cae ,nil );
if _ggbc !=nil {return nil ,_ggbc ;};};_aecb :=_dd .MakeDict ();for _ ,_efcb :=range _fea .Opt .Elements (){if _gcda ,_fdeee :=_dd .GetArray (_efcb );_fdeee &&_gcda .Len ()==2{_efcb =_gcda .Get (1);};var _bgc string ;if _dddg ,_fef :=_dd .GetString (_efcb );
_fef {_bgc =_dddg .Decoded ();}else if _cde ,_abbg :=_dd .GetName (_efcb );_abbg {_bgc =_cde .String ();}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_efcb );
return nil ,_ec .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_bgc )> 0{_gefb ,_cgdg :=_bge (_fea .PdfField ,_dac ,_bec ,_bgc ,_gadf ,_bbd ,_dbe .DR ,_cgd );if _cgdg !=nil {return nil ,_cgdg ;
};_aecb .Set (*_dd .MakeName (_bgc ),_gefb .ToPdfObject ());};};_fca :=_dd .MakeDict ();_fca .Set ("\u004e",_aecb );return _fca ,nil ;};func _gbggf (_baef []_c .Point )(_eeda []_c .Point ,_cgdab []_c .Point ,_dgee error ){_gbgeg :=len (_baef )-1;if len (_baef )< 1{return nil ,nil ,_ec .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _gbgeg ==1{_ega :=_c .Point {X :(2*_baef [0].X +_baef [1].X )/3,Y :(2*_baef [0].Y +_baef [1].Y )/3};_eeda =append (_eeda ,_ega );_cgdab =append (_cgdab ,_c .Point {X :2*_ega .X -_baef [0].X ,Y :2*_ega .Y -_baef [0].Y });return _eeda ,_cgdab ,nil ;
};_adba :=make ([]float64 ,_gbgeg );for _facf :=1;_facf < _gbgeg -1;_facf ++{_adba [_facf ]=4*_baef [_facf ].X +2*_baef [_facf +1].X ;};_adba [0]=_baef [0].X +2*_baef [1].X ;_adba [_gbgeg -1]=(8*_baef [_gbgeg -1].X +_baef [_gbgeg ].X )/2.0;_fabb :=_ecgf (_adba );
for _ded :=1;_ded < _gbgeg -1;_ded ++{_adba [_ded ]=4*_baef [_ded ].Y +2*_baef [_ded +1].Y ;};_adba [0]=_baef [0].Y +2*_baef [1].Y ;_adba [_gbgeg -1]=(8*_baef [_gbgeg -1].Y +_baef [_gbgeg ].Y )/2.0;_ecec :=_ecgf (_adba );_eeda =make ([]_c .Point ,_gbgeg );
_cgdab =make ([]_c .Point ,_gbgeg );for _cfa :=0;_cfa < _gbgeg ;_cfa ++{_eeda [_cfa ]=_c .Point {X :_fabb [_cfa ],Y :_ecec [_cfa ]};if _cfa < _gbgeg -1{_cgdab [_cfa ]=_c .Point {X :2*_baef [_cfa +1].X -_fabb [_cfa +1],Y :2*_baef [_cfa +1].Y -_ecec [_cfa +1]};
}else {_cgdab [_cfa ]=_c .Point {X :(_baef [_gbgeg ].X +_fabb [_gbgeg -1])/2,Y :(_baef [_gbgeg ].Y +_ecec [_gbgeg -1])/2};};};return _eeda ,_cgdab ,nil ;};func _gdgb (_fege *_ge .PdfFieldButton ,_fdfg *_ge .PdfAnnotationWidget ,_bcg AppearanceStyle )(*_dd .PdfObjectDictionary ,error ){_aadcb ,_gdf :=_dd .GetArray (_fdfg .Rect );
if !_gdf {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fffd ,_ebeb :=_ge .NewPdfRectangle (*_aadcb );if _ebeb !=nil {return nil ,_ebeb ;};_adbbd ,_dbca :=_fffd .Width (),_fffd .Height ();_decc :=_g .NewContentCreator ();
if _bcg .BorderSize > 0{_acf (_decc ,_bcg ,_adbbd ,_dbca );};if _bcg .DrawAlignmentReticle {_beed :=_bcg ;_beed .BorderSize =0.2;_fbff (_decc ,_beed ,_adbbd ,_dbca );};_cfce :=_fege .GetFillImage ();_edag ,_ebeb :=_gcf (_adbbd ,_dbca ,_cfce ,_bcg );if _ebeb !=nil {return nil ,_ebeb ;
};_cedb ,_ffd :=_dd .GetDict (_fdfg .MK );if _ffd {_cedb .Set ("\u006c",_edag .ToPdfObject ());};_fcfd :=_dd .MakeDict ();_fcfd .Set ("\u0046\u0052\u004d",_edag .ToPdfObject ());_afc :=_ge .NewPdfPageResources ();_afc .ProcSet =_dd .MakeArray (_dd .MakeName ("\u0050\u0044\u0046"));
_afc .XObject =_fcfd ;_ddbe :=_adbbd -2;_gefg :=_dbca -2;_decc .Add_q ();_decc .Add_re (1,1,_ddbe ,_gefg );_decc .Add_W ();_decc .Add_n ();_ddbe -=2;_gefg -=2;_decc .Add_q ();_decc .Add_re (2,2,_ddbe ,_gefg );_decc .Add_W ();_decc .Add_n ();_eead :=_bb .Min (_ddbe /float64 (_cfce .Width ),_gefg /float64 (_cfce .Height ));
_decc .Add_cm (_eead ,0,0,_eead ,(_adbbd /2)-(float64 (_cfce .Width )*_eead /2)+2,2);_decc .Add_Do ("\u0046\u0052\u004d");_decc .Add_Q ();_decc .Add_Q ();_gbee :=_ge .NewXObjectForm ();_gbee .FormType =_dd .MakeInteger (1);_gbee .Resources =_afc ;_gbee .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_adbbd ,_dbca });
_gbee .Matrix =_dd .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_gbee .SetContentStream (_decc .Bytes (),_aadc ());_dgda :=_dd .MakeDict ();_dgda .Set ("\u004e",_gbee .ToPdfObject ());return _dgda ,nil ;};func _aadc ()_dd .StreamEncoder {return _dd .NewFlateEncoder ()};


// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_cbbe ImageFieldAppearance )Style ()AppearanceStyle {if _cbbe ._fcdd !=nil {return *_cbbe ._fcdd ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_ge .NewPdfColorDeviceGray (0),FillColor :_ge .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _ecgf (_ecdb []float64 )[]float64 {var (_gaggb =len (_ecdb );_cgab =make ([]float64 ,_gaggb );_eeaf =make ([]float64 ,_gaggb ););_gcbc :=2.0;_cgab [0]=_ecdb [0]/_gcbc ;for _dfea :=1;_dfea < _gaggb ;_dfea ++{_eeaf [_dfea ]=1/_gcbc ;if _dfea < _gaggb -1{_gcbc =4.0;
}else {_gcbc =3.5;};_gcbc -=_eeaf [_dfea ];_cgab [_dfea ]=(_ecdb [_dfea ]-_cgab [_dfea -1])/_gcbc ;};for _cagd :=1;_cagd < _gaggb ;_cagd ++{_cgab [_gaggb -_cagd -1]-=_eeaf [_gaggb -_cagd ]*_cgab [_gaggb -_cagd ];};return _cgab ;};func _egga (_bbcb RectangleAnnotationDef ,_bcfad string )([]byte ,*_ge .PdfRectangle ,*_ge .PdfRectangle ,error ){_dggc :=_c .Rectangle {X :0,Y :0,Width :_bbcb .Width ,Height :_bbcb .Height ,FillEnabled :_bbcb .FillEnabled ,FillColor :_bbcb .FillColor ,BorderEnabled :_bbcb .BorderEnabled ,BorderWidth :2*_bbcb .BorderWidth ,BorderColor :_bbcb .BorderColor ,Opacity :_bbcb .Opacity };
_bbdc ,_def ,_baaf :=_dggc .Draw (_bcfad );if _baaf !=nil {return nil ,nil ,nil ,_baaf ;};_ggd :=&_ge .PdfRectangle {};_ggd .Llx =_bbcb .X +_def .Llx ;_ggd .Lly =_bbcb .Y +_def .Lly ;_ggd .Urx =_bbcb .X +_def .Urx ;_ggd .Ury =_bbcb .Y +_def .Ury ;return _bbdc ,_def ,_ggd ,nil ;
};

// CreateFileAttachmentAnnotation creates a file attachment annotation object that can be added to the annotation list of a PDF page.
func CreateFileAttachmentAnnotation (fileDef FileAnnotationDef )(*_ge .PdfAnnotation ,error ){_beag :=_ge .NewPdfFileSpecFromEmbeddedFile (fileDef .EmbeddedFile );if fileDef .Color ==nil {fileDef .Color =_ge .NewPdfColorDeviceRGB (0.0,0.0,0.0);};if fileDef .Description ==""{fileDef .Description =fileDef .EmbeddedFile .Name ;
};if fileDef .CreationDate ==nil {_bebc :=_de .Now ();fileDef .CreationDate =&_bebc ;};if fileDef .IconName ==""{fileDef .IconName ="\u0050u\u0073\u0068\u0050\u0069\u006e";};_debf ,_gbb :=_ge .NewPdfDateFromTime (*fileDef .CreationDate );if _gbb !=nil {return nil ,_gbb ;
};_adgd :=_ge .NewPdfAnnotationFileAttachment ();_adgd .FS =_beag .ToPdfObject ();_adgd .C =_dd .MakeArrayFromFloats ([]float64 {fileDef .Color .R (),fileDef .Color .G (),fileDef .Color .B ()});_adgd .Contents =_dd .MakeString (fileDef .Description );_adgd .CreationDate =_debf .ToPdfObject ();
_adgd .M =_debf .ToPdfObject ();_adgd .Name =_dd .MakeName (fileDef .IconName );_adgd .Rect =_dd .MakeArrayFromFloats ([]float64 {fileDef .X ,fileDef .Y ,fileDef .X +fileDef .Width ,fileDef .Y +fileDef .Height });_adgd .T =_dd .MakeString (fileDef .Author );
_adgd .Subj =_dd .MakeString (fileDef .Subject );return _adgd .PdfAnnotation ,nil ;};func _eaa (_dga *_ge .PdfAnnotationWidget ,_dcf *_ge .PdfFieldText ,_abg *_ge .PdfPageResources ,_bcf AppearanceStyle )(*_dd .PdfObjectDictionary ,error ){_gba :=_ge .NewPdfPageResources ();
_fac ,_ddg :=_dd .GetArray (_dga .Rect );if !_ddg {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eg ,_ege :=_ge .NewPdfRectangle (*_fac );if _ege !=nil {return nil ,_ege ;};_agcd ,_bdf :=_eg .Width (),_eg .Height ();
_abb ,_dae :=_agcd ,_bdf ;_egf :=true ;_ecc :=_ge .NewXObjectForm ();_ecc .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_abb ,_dae });if _dga .AP !=nil {if _aa ,_bed :=_dd .GetDict (_dga .AP );_bed &&_aa !=nil {_cef :=_dd .TraceToDirectObject (_aa .Get ("\u004e"));
switch _bfd :=_cef .(type ){case *_dd .PdfObjectStream :_bde ,_bbf :=_dd .DecodeStream (_bfd );if _bbf !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_bbf .Error ());
break ;};_gee ,_bbf :=_g .NewContentStreamParser (string (_bde )).Parse ();if _bbf !=nil {_f .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_bbf .Error ());
break ;};_ef :=_g .NewContentStreamProcessor (*_gee );_ef .AddHandler (_g .HandlerConditionEnumAllOperands ,"",func (_cab *_g .ContentStreamOperation ,_eec _g .GraphicsState ,_ccg *_ge .PdfPageResources )error {if _cab .Operand =="\u0054\u006a"||_cab .Operand =="\u0054\u004a"{if len (_cab .Params )==1{if _ad ,_ba :=_dd .GetString (_cab .Params [0]);
_ba {_egf =_a .TrimSpace (_ad .Str ())=="";};return _g .ErrEarlyExit ;};return nil ;};return nil ;});_ef .Process (_gba );if !_egf {if _daef ,_dcc :=_dd .GetDict (_bfd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));_dcc {_gba ,_bbf =_ge .NewPdfPageResourcesFromDict (_daef );
if _bbf !=nil {return nil ,_bbf ;};};if _bga ,_egb :=_dd .GetArray (_bfd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078"));_egb {_ecc .Matrix =_bga ;};_ecc .SetContentStream (_bde ,_aadc ());};};};};if _egf {_efc ,_eb :=_dd .GetDict (_dga .MK );if _eb {_fbf ,_ :=_dd .GetDict (_dga .BS );
_fec :=_bcf .applyAppearanceCharacteristics (_efc ,_fbf ,nil );if _fec !=nil {return nil ,_fec ;};};_abbc ,_aad :=_g .NewContentStreamParser (_becd (_dcf .PdfField )).Parse ();if _aad !=nil {return nil ,_aad ;};_dcd :=_g .NewContentCreator ();if _bcf .BorderSize > 0{_acf (_dcd ,_bcf ,_agcd ,_bdf );
};if _bcf .DrawAlignmentReticle {_dca :=_bcf ;_dca .BorderSize =0.2;_fbff (_dcd ,_dca ,_agcd ,_bdf );};_dcd .Add_BMC ("\u0054\u0078");_dcd .Add_q ();_agcd ,_bdf =_bcf .applyRotation (_efc ,_agcd ,_bdf ,_dcd );_dcd .Add_BT ();_dggd ,_gga ,_aad :=_bcf .processDA (_dcf .PdfField ,_abbc ,_abg ,_gba ,_dcd );
if _aad !=nil {return nil ,_aad ;};_ada :=_dggd .Font ;_fgc :=_dggd .Size ;_fde :=_dd .MakeName (_dggd .Name );if _dcf .Flags ().Has (_ge .FieldFlagMultiline )&&_dcf .MaxLen !=nil {_f .Log .Debug ("\u004c\u006f\u006f\u006b\u0020\u0066\u006f\u0072\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0066\u006f\u0072 \u004e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
if _dee ,_aed ,_bfdf :=_cbff (_dga .PdfAnnotation .AP ,_abg );_bfdf {_fde =_dee ;_fgc =_aed ;_gga =true ;};};_aae :=_fgc ==0;if _aae &&_gga {_fgc =_bdf *_bcf .AutoFontSizeFraction ;};_bfb :=_ada .Encoder ();if _bfb ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bfb =_fa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_efcg ,_aad :=_ada .GetFontDescriptor ();if _aad !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _cec string ;if _fbd ,_bad :=_dd .GetString (_dcf .V );_bad {_cec =_fbd .Decoded ();};if len (_cec )==0{return nil ,nil ;};_aca :=[]string {_cec };_gad :=false ;if _dcf .Flags ().Has (_ge .FieldFlagMultiline ){_gad =true ;_cec =_a .Replace (_cec ,"\u000d\u000a","\u000a",-1);
_cec =_a .Replace (_cec ,"\u000d","\u000a",-1);_aca =_a .Split (_cec ,"\u000a");};_dea :=make ([]string ,len (_aca ));copy (_dea ,_aca );_aaf :=_bcf .MultilineLineHeight ;_gagc :=0.0;_ddba :=0;if _bfb !=nil {for _fgc >=0{_bcec :=make ([]string ,len (_aca ));
copy (_bcec ,_aca );_cga :=make ([]string ,len (_dea ));copy (_cga ,_dea );_gagc =0.0;_ddba =0;_cee :=len (_bcec );_bfbg :=0;for _bfbg < _cee {var _ebe float64 ;_bba :=-1;_bae :=_daag ;if _bcf .MarginLeft !=nil {_bae =*_bcf .MarginLeft ;};for _eeb ,_bgf :=range _bcec [_bfbg ]{if _bgf ==' '{_bba =_eeb ;
};_dgb ,_bgd :=_ada .GetRuneMetrics (_bgf );if !_bgd {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_bgf );
continue ;};_ebe =_bae ;_bae +=_dgb .Wx ;if _gad &&!_aae &&_fgc *_bae /1000.0> _agcd {_bgdg :=_eeb ;_bff :=_eeb ;if _bba > 0{_bgdg =_bba +1;_bff =_bba ;};_efe :=_bcec [_bfbg ][_bgdg :];_ggc :=_cga [_bfbg ][_bgdg :];if _bfbg < len (_bcec )-1{_bcec =append (_bcec [:_bfbg +1],_bcec [_bfbg :]...);
_bcec [_bfbg +1]=_efe ;_cga =append (_cga [:_bfbg +1],_cga [_bfbg :]...);_cga [_bfbg +1]=_ggc ;}else {_bcec =append (_bcec ,_efe );_cga =append (_cga ,_ggc );};_bcec [_bfbg ]=_bcec [_bfbg ][0:_bff ];_cga [_bfbg ]=_cga [_bfbg ][0:_bff ];_cee ++;_bae =_ebe ;
break ;};};if _bae > _gagc {_gagc =_bae ;};_bcec [_bfbg ]=string (_bfb .Encode (_bcec [_bfbg ]));if len (_bcec [_bfbg ])> 0{_ddba ++;};_bfbg ++;};_gd :=_fgc ;if _ddba > 1{_gd *=_aaf ;};_gcd :=float64 (_ddba )*_gd ;if _aae ||_gcd <=_bdf {_aca =_bcec ;_dea =_cga ;
break ;};_fgc --;};};_efg :=_daag ;if _bcf .MarginLeft !=nil {_efg =*_bcf .MarginLeft ;};if _fgc ==0||_aae &&_gagc > 0&&_efg +_gagc *_fgc /1000.0> _agcd {_fgc =0.95*1000.0*(_agcd -_efg )/_gagc ;};_dfe :=_fgg ;{if _ebeg ,_dcg :=_dd .GetIntVal (_dcf .Q );
_dcg {switch _ebeg {case 0:_dfe =_fgg ;case 1:_dfe =_gaf ;case 2:_dfe =_db ;default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_ebeg );
};};};_bca :=_fgc ;if _gad &&_ddba > 1{_bca =_aaf *_fgc ;};var _acd float64 ;if _efcg !=nil {_acd ,_aad =_efcg .GetCapHeight ();if _aad !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_aad );
};};if int (_acd )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_acd =1000;};_efb :=_acd /1000.0*_fgc ;_gbe :=0.0;{_cbg :=float64 (_ddba )*_bca ;if _aae &&_gbe +_cbg > _bdf {_fgc =0.95*(_bdf -_gbe )/float64 (_ddba );_bca =_fgc ;if _gad &&_ddba > 1{_bca =_aaf *_fgc ;};_efb =_acd /1000.0*_fgc ;_cbg =float64 (_ddba )*_bca ;
};if _bdf > _cbg {if _gad {if _bcf .MultilineVAlignMiddle {_eae :=(_bdf -(_cbg +_efb ))/2.0;_fge :=_eae +_cbg +_efb -_bca ;_gbe =_fge ;if _ddba > 1{_gbe =_gbe +(_cbg /_fgc *float64 (_ddba ))-_bca -_efb ;};if _gbe < _cbg {_gbe =(_bdf -_efb )/2.0;};}else {_gbe =_bdf -_bca ;
if _gbe > _fgc {_dcaf :=0.0;if _gad &&_bcf .MultilineLineHeight > 1&&_ddba > 1{_dcaf =_bcf .MultilineLineHeight -1;};_gbe -=_fgc *(0.5-_dcaf );};};}else {_gbe =(_bdf -_efb )/2.0;};};};if _bcf .TextColor !=nil {_adb :=_bcf .TextColor ;_fece ,_bedg :=_adb .(*_ge .PdfColorDeviceRGB );
if !_bedg {_fece =_ge .NewPdfColorDeviceRGB (0,0,0);};_dcd .Add_rg (_fece .R (),_fece .G (),_fece .B ());}else {for _ ,_daeg :=range *_abbc {if _daeg .Operand =="\u0072\u0067"||_daeg .Operand =="\u0067"{_dcd .AddOperand (*_daeg );};};};_dcd .Add_Tf (*_fde ,_fgc );
_dcd .Add_Td (_efg ,_gbe );_af :=_efg ;_ebf :=_efg ;for _fagb ,_cgg :=range _aca {_deag :=0.0;for _ ,_eeg :=range _dea [_fagb ]{_ccf ,_cdb :=_ada .GetRuneMetrics (_eeg );if !_cdb {continue ;};_deag +=_ccf .Wx ;};_fdfc :=_deag /1000.0*_fgc ;_eaf :=_agcd -_fdfc ;
var _ceb float64 ;switch _dfe {case _fgg :_ceb =_af ;case _gaf :_ceb =_eaf /2;case _db :_ceb =_eaf ;};_efg =_ceb -_ebf ;if _efg > 0.0{_dcd .Add_Td (_efg ,0);};_ebf =_ceb ;_dcd .Add_Tj (*_dd .MakeString (_cgg ));if _fagb < len (_aca )-1{_dcd .Add_Td (0,-_fgc *_aaf );
};};_dcd .Add_ET ();_dcd .Add_Q ();_dcd .Add_EMC ();_ecc .SetContentStream (_dcd .Bytes (),_aadc ());};_ecc .Resources =_gba ;_aab :=_dd .MakeDict ();_aab .Set ("\u004e",_ecc .ToPdfObject ());return _aab ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ede FieldAppearance )WrapContentStream (page *_ge .PdfPage )error {_gac ,_gbae :=page .GetAllContentStreams ();if _gbae !=nil {return _gbae ;};_cgcg :=_g .NewContentStreamParser (_gac );_eege ,_gbae :=_cgcg .Parse ();if _gbae !=nil {return _gbae ;
};_eege .WrapIfNeeded ();_bdcc :=[]string {_eege .String ()};return page .SetContentStreams (_bdcc ,_aadc ());};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ge .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ge .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ec .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_fabg ,_gbfe :=_aaee (lines ,opts );if _gbfe !=nil {return nil ,_gbfe ;};_daba :=_ge .NewPdfFieldSignature (signature );_daba .Rect =_dd .MakeArrayFromFloats (opts .Rect );_daba .AP =_fabg ;return _daba ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ge .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _c .LineEndingStyle ;LineEndingStyle2 _c .LineEndingStyle ;};func _aeg (_adga *_ge .PdfAnnotationWidget ,_aff *_ge .PdfFieldButton ,_cfd *_ge .PdfPageResources ,_bbfg AppearanceStyle )(*_dd .PdfObjectDictionary ,error ){_edg ,_fdcg :=_dd .GetArray (_adga .Rect );
if !_fdcg {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ggg ,_bbg :=_ge .NewPdfRectangle (*_edg );if _bbg !=nil {return nil ,_bbg ;};_geg ,_ffef :=_ggg .Width (),_ggg .Height ();_gec ,_aaa :=_geg ,_ffef ;
_f .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_adga .BS );_cdd ,_bbg :=_ge .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _bbg !=nil {return nil ,_bbg ;
};_egbf ,_beg :=_dd .GetDict (_adga .MK );if _beg {_gbgf ,_ :=_dd .GetDict (_adga .BS );_bccg :=_bbfg .applyAppearanceCharacteristics (_egbf ,_gbgf ,_cdd );if _bccg !=nil {return nil ,_bccg ;};};_ebb :=_ge .NewXObjectForm ();{_gbd :=_g .NewContentCreator ();
if _bbfg .BorderSize > 0{_acf (_gbd ,_bbfg ,_geg ,_ffef );};if _bbfg .DrawAlignmentReticle {_dfef :=_bbfg ;_dfef .BorderSize =0.2;_fbff (_gbd ,_dfef ,_geg ,_ffef );};_geg ,_ffef =_bbfg .applyRotation (_egbf ,_geg ,_ffef ,_gbd );_aeb :=_bbfg .AutoFontSizeFraction *_ffef ;
_cfg ,_dbdb :=_cdd .GetRuneMetrics (_bbfg .CheckmarkRune );if !_dbdb {return nil ,_ec .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fbe :=_cdd .Encoder ();_gef :=_fbe .Encode (string (_bbfg .CheckmarkRune ));
_eba :=_cfg .Wx *_aeb /1000.0;_dce :=705.0;_bdec :=_dce /1000.0*_aeb ;_fdee :=_daag ;if _bbfg .MarginLeft !=nil {_fdee =*_bbfg .MarginLeft ;};_gecf :=1.0;if _eba < _geg {_fdee =(_geg -_eba )/2.0;};if _bdec < _ffef {_gecf =(_ffef -_bdec )/2.0;};_gbd .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_aeb ).Add_Td (_fdee ,_gecf ).Add_Tj (*_dd .MakeStringFromBytes (_gef )).Add_ET ().Add_Q ();
_ebb .Resources =_ge .NewPdfPageResources ();_ebb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cdd .ToPdfObject ());_ebb .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_gec ,_aaa });_ebb .SetContentStream (_gbd .Bytes (),_aadc ());};_fbb :=_ge .NewXObjectForm ();
{_gae :=_g .NewContentCreator ();if _bbfg .BorderSize > 0{_acf (_gae ,_bbfg ,_geg ,_ffef );};_fbb .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_gec ,_aaa });_fbb .SetContentStream (_gae .Bytes (),_aadc ());};_ebbg :=_dd .PdfObjectName ("\u0059\u0065\u0073");
_aec ,_beg :=_dd .GetDict (_adga .PdfAnnotation .AP );if _beg &&_aec !=nil {_cag :=_dd .TraceToDirectObject (_aec .Get ("\u004e"));switch _ged :=_cag .(type ){case *_dd .PdfObjectDictionary :_ffc :=_ged .Keys ();for _ ,_efa :=range _ffc {if _efa !="\u004f\u0066\u0066"{_ebbg =_efa ;
};};};};_gfda :=_dd .MakeDict ();_gfda .Set ("\u004f\u0066\u0066",_fbb .ToPdfObject ());_gfda .Set (_ebbg ,_ebb .ToPdfObject ());_adbb :=_dd .MakeDict ();_adbb .Set ("\u004e",_gfda );return _adbb ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ge .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ge .PdfColorDeviceRGB ;Opacity float64 ;};

// SetStyle applies appearance `style` to `fa`.
func (_febc *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_febc ._fcdd =&style };

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ge .PdfAnnotation ,error ){_cb :=_ge .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fb ,_ag ,_cg :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_cb .C =_dd .MakeArrayFromFloats ([]float64 {_fb ,_ag ,_cg });
_bg :=_ge .NewBorderStyle ();_bg .SetBorderWidth (circDef .BorderWidth );_cb .BS =_bg .ToPdfObject ();};if circDef .FillEnabled {_ed ,_ddd ,_df :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_cb .IC =_dd .MakeArrayFromFloats ([]float64 {_ed ,_ddd ,_df });
}else {_cb .IC =_dd .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_cb .CA =_dd .MakeFloat (circDef .Opacity );};_bd ,_bce ,_gc :=_be (circDef );if _gc !=nil {return nil ,_gc ;};_cb .AP =_bd ;_cb .Rect =_dd .MakeArrayFromFloats ([]float64 {_bce .Llx ,_bce .Lly ,_bce .Urx ,_bce .Ury });
return _cb .PdfAnnotation ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ge .PdfColor ;FillColor _ge .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;TextColor _ge .PdfColor ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_c .Path ;

// Color is the color of the line. Default to black.
Color *_ge .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};type quadding int ;

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ge .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};func _fbff (_dgcf *_g .ContentCreator ,_fgee AppearanceStyle ,_cgf ,_gefbf float64 ){_dgcf .Add_q ().Add_re (0,0,_cgf ,_gefbf ).Add_re (0,_gefbf /2,_cgf ,_gefbf /2).Add_re (0,0,_cgf ,_gefbf ).Add_re (_cgf /2,0,_cgf /2,_gefbf ).Add_w (_fgee .BorderSize ).SetStrokingColor (_fgee .BorderColor ).SetNonStrokingColor (_fgee .FillColor ).Add_B ().Add_Q ();
};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ge .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ge .PdfFieldChoice ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gebd :=_ge .NewPdfField ();_bgce :=&_ge .PdfFieldChoice {};_gebd .SetContext (_bgce );_bgce .PdfField =_gebd ;_bgce .T =_dd .MakeString (name );_bgce .Opt =_dd .MakeArray ();for _ ,_gcdf :=range opt .Choices {_bgce .Opt .Append (_dd .MakeString (_gcdf ));
};_bgce .SetFlag (_ge .FieldFlagCombo );_ebae :=_ge .NewPdfAnnotationWidget ();_ebae .Rect =_dd .MakeArrayFromFloats (rect );_ebae .P =page .ToPdfObject ();_ebae .F =_dd .MakeInteger (4);_ebae .Parent =_bgce .ToPdfObject ();_bgce .Annotations =append (_bgce .Annotations ,_ebae );
return _bgce ,nil ;};const (_fgg quadding =0;_gaf quadding =1;_db quadding =2;_daag float64 =2.0;);func _bge (_feb *_ge .PdfField ,_deb ,_fggf float64 ,_edb string ,_aea AppearanceStyle ,_egef *_g .ContentStreamOperations ,_cba *_ge .PdfPageResources ,_cdc *_dd .PdfObjectDictionary )(*_ge .XObjectForm ,error ){_fgec :=_ge .NewPdfPageResources ();
_cda ,_cegc :=_deb ,_fggf ;_bbe :=_g .NewContentCreator ();if _aea .BorderSize > 0{_acf (_bbe ,_aea ,_deb ,_fggf );};if _aea .DrawAlignmentReticle {_bcecf :=_aea ;_bcecf .BorderSize =0.2;_fbff (_bbe ,_bcecf ,_deb ,_fggf );};_bbe .Add_BMC ("\u0054\u0078");
_bbe .Add_q ();_bbe .Add_BT ();_deb ,_fggf =_aea .applyRotation (_cdc ,_deb ,_fggf ,_bbe );_afe ,_adbd ,_abbb :=_aea .processDA (_feb ,_egef ,_cba ,_fgec ,_bbe );if _abbb !=nil {return nil ,_abbb ;};_gab :=_afe .Font ;_caed :=_afe .Size ;_gbf :=_dd .MakeName (_afe .Name );
_bfde :=_caed ==0;if _bfde &&_adbd {_caed =_fggf *_aea .AutoFontSizeFraction ;};_dgbg :=_gab .Encoder ();if _dgbg ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dgbg =_fa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_edb )==0{return nil ,nil ;};_aabf :=_daag ;if _aea .MarginLeft !=nil {_aabf =*_aea .MarginLeft ;};_gagg :=0.0;if _dgbg !=nil {for _ ,_ffcd :=range _edb {_bbaa ,_caeg :=_gab .GetRuneMetrics (_ffcd );
if !_caeg {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ffcd );
continue ;};_gagg +=_bbaa .Wx ;};_edb =string (_dgbg .Encode (_edb ));};if _caed ==0||_bfde &&_gagg > 0&&_aabf +_gagg *_caed /1000.0> _deb {_caed =0.95*1000.0*(_deb -_aabf )/_gagg ;};_baa :=1.0*_caed ;_dcge :=2.0;{_gdd :=_baa ;if _bfde &&_dcge +_gdd > _fggf {_caed =0.95*(_fggf -_dcge );
_baa =1.0*_caed ;_gdd =_baa ;};if _fggf > _gdd {_dcge =(_fggf -_gdd )/2.0;_dcge +=1.50;};};_bbe .Add_Tf (*_gbf ,_caed );_bbe .Add_Td (_aabf ,_dcge );_bbe .Add_Tj (*_dd .MakeString (_edb ));_bbe .Add_ET ();_bbe .Add_Q ();_bbe .Add_EMC ();_eea :=_ge .NewXObjectForm ();
_eea .Resources =_fgec ;_eea .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_cda ,_cegc });_eea .SetContentStream (_bbe .Bytes (),_aadc ());return _eea ,nil ;};func (_cdac *AppearanceStyle )applyRotation (_edda *_dd .PdfObjectDictionary ,_dcac ,_ace float64 ,_bfdfb *_g .ContentCreator )(float64 ,float64 ){if !_cdac .AllowMK {return _dcac ,_ace ;
};if _edda ==nil {return _dcac ,_ace ;};_dabf ,_ :=_dd .GetNumberAsFloat (_edda .Get ("\u0052"));if _dabf ==0{return _dcac ,_ace ;};_afg :=-_dabf ;_dfce :=_c .Path {Points :[]_c .Point {_c .NewPoint (0,0).Rotate (_afg ),_c .NewPoint (_dcac ,0).Rotate (_afg ),_c .NewPoint (0,_ace ).Rotate (_afg ),_c .NewPoint (_dcac ,_ace ).Rotate (_afg )}}.GetBoundingBox ();
_bfdfb .RotateDeg (_dabf );_bfdfb .Translate (_dfce .X ,_dfce .Y );return _dfce .Width ,_dfce .Height ;};func _aaee (_bfad []*SignatureLine ,_dccd *SignatureFieldOpts )(*_dd .PdfObjectDictionary ,error ){if _dccd ==nil {_dccd =NewSignatureFieldOpts ();
};var _bffd error ;var _eada *_dd .PdfObjectName ;_afbc :=_dccd .Font ;if _afbc !=nil {_bgfa ,_ :=_afbc .GetFontDescriptor ();if _bgfa !=nil {if _cac ,_aegc :=_bgfa .FontName .(*_dd .PdfObjectName );_aegc {_eada =_cac ;};};if _eada ==nil {_eada =_dd .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _afbc ,_bffd =_ge .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_bffd !=nil {return nil ,_bffd ;};_eada =_dd .MakeName ("\u0048\u0065\u006c\u0076");};_gea :=_dccd .FontSize ;if _gea <=0{_gea =10;};if _dccd .LineHeight <=0{_dccd .LineHeight =1;
};_ebfg :=_dccd .LineHeight *_gea ;_geaf ,_geca :=_afbc .GetRuneMetrics (' ');if !_geca {return nil ,_ec .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_dbc :=_geaf .Wx ;var _dacd float64 ;var _ecg []string ;for _ ,_aadg :=range _bfad {if _aadg .Text ==""{continue ;};_eee :=_aadg .Text ;if _aadg .Desc !=""{_eee =_aadg .Desc +"\u003a\u0020"+_eee ;};_ecg =append (_ecg ,_eee );var _caac float64 ;for _ ,_fbbf :=range _eee {_gddb ,_egfb :=_afbc .GetRuneMetrics (_fbbf );
if !_egfb {continue ;};_caac +=_gddb .Wx ;};if _caac > _dacd {_dacd =_caac ;};};_dacd =_dacd *_gea /1000.0;_egc :=float64 (len (_ecg ))*_ebfg ;_aedc :=_dccd .Image !=nil ;_eddd :=_dccd .Rect ;if _eddd ==nil {_eddd =[]float64 {0,0,_dacd ,_egc };if _aedc {_eddd [2]=_dacd *2;
_eddd [3]=_egc *2;};_dccd .Rect =_eddd ;};_bdd :=_eddd [2]-_eddd [0];_cdcc :=_eddd [3]-_eddd [1];_cfc ,_eggc :=_eddd ,_eddd ;var _dge ,_cdab float64 ;if _aedc &&len (_ecg )> 0{if _dccd .ImagePosition <=SignatureImageRight {_cbb :=[]float64 {_eddd [0],_eddd [1],_eddd [0]+(_bdd /2),_eddd [3]};
_cce :=[]float64 {_eddd [0]+(_bdd /2),_eddd [1],_eddd [2],_eddd [3]};if _dccd .ImagePosition ==SignatureImageLeft {_cfc ,_eggc =_cbb ,_cce ;}else {_cfc ,_eggc =_cce ,_cbb ;};}else {_cfbf :=[]float64 {_eddd [0],_eddd [1],_eddd [2],_eddd [1]+(_cdcc /2)};
_dff :=[]float64 {_eddd [0],_eddd [1]+(_cdcc /2),_eddd [2],_eddd [3]};if _dccd .ImagePosition ==SignatureImageTop {_cfc ,_eggc =_dff ,_cfbf ;}else {_cfc ,_eggc =_cfbf ,_dff ;};};};_dge =_eggc [2]-_eggc [0];_cdab =_eggc [3]-_eggc [1];var _gafc float64 ;
if _dccd .AutoSize {if _dacd > _dge ||_egc > _cdab {_bcfc :=_bb .Min (_dge /_dacd ,_cdab /_egc );_gea *=_bcfc ;};_ebfg =_dccd .LineHeight *_gea ;_gafc +=(_cdab -float64 (len (_ecg ))*_ebfg )/2;};_edeb :=_g .NewContentCreator ();_gegg :=_ge .NewPdfPageResources ();
_gegg .SetFontByName (*_eada ,_afbc .ToPdfObject ());if _dccd .BorderSize <=0{_dccd .BorderSize =0;_dccd .BorderColor =_ge .NewPdfColorDeviceGray (1);};_edeb .Add_q ();if _dccd .FillColor !=nil {_edeb .SetNonStrokingColor (_dccd .FillColor );};if _dccd .BorderColor !=nil {_edeb .SetStrokingColor (_dccd .BorderColor );
};_edeb .Add_w (_dccd .BorderSize ).Add_re (_eddd [0],_eddd [1],_bdd ,_cdcc );if _dccd .FillColor !=nil &&_dccd .BorderColor !=nil {_edeb .Add_B ();}else if _dccd .FillColor !=nil {_edeb .Add_f ();}else if _dccd .BorderColor !=nil {_edeb .Add_S ();};_edeb .Add_Q ();
if _dccd .WatermarkImage !=nil {_bggg :=[]float64 {_eddd [0],_eddd [1],_eddd [2],_eddd [3]};_dafa ,_faa ,_aabe :=_aada (_dccd .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_dccd ,_bggg ,_edeb );if _aabe !=nil {return nil ,_aabe ;
};_gegg .SetXObjectImageByName (*_dafa ,_faa );};_edeb .Add_q ();_edeb .Translate (_eggc [0],_eggc [3]-_ebfg -_gafc );_edeb .Add_BT ();_acbb :=_afbc .Encoder ();for _ ,_fagd :=range _ecg {var _baea []byte ;for _ ,_ccge :=range _fagd {if _fd .IsSpace (_ccge ){if len (_baea )> 0{_edeb .SetNonStrokingColor (_dccd .TextColor ).Add_Tf (*_eada ,_gea ).Add_TL (_ebfg ).Add_TJ ([]_dd .PdfObject {_dd .MakeStringFromBytes (_baea )}...);
_baea =nil ;};_edeb .Add_Tf (*_eada ,_gea ).Add_TL (_ebfg ).Add_TJ ([]_dd .PdfObject {_dd .MakeFloat (-_dbc )}...);}else {_baea =append (_baea ,_acbb .Encode (string (_ccge ))...);};};if len (_baea )> 0{_edeb .SetNonStrokingColor (_dccd .TextColor ).Add_Tf (*_eada ,_gea ).Add_TL (_ebfg ).Add_TJ ([]_dd .PdfObject {_dd .MakeStringFromBytes (_baea )}...);
};_edeb .Add_Td (0,-_ebfg );};_edeb .Add_ET ();_edeb .Add_Q ();if _aedc {_gegf ,_ebbc ,_bgggf :=_aada (_dccd .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_dccd ,_cfc ,_edeb );if _bgggf !=nil {return nil ,_bgggf ;
};_gegg .SetXObjectImageByName (*_gegf ,_ebbc );};_cad :=_ge .NewXObjectForm ();_cad .Resources =_gegg ;_cad .BBox =_dd .MakeArrayFromFloats (_eddd );_cad .SetContentStream (_edeb .Bytes (),_aadc ());_dabe :=_dd .MakeDict ();_dabe .Set ("\u004e",_cad .ToPdfObject ());
return _dabe ,nil ;};func _eaee (_aace LineAnnotationDef ,_dgcc string )([]byte ,*_ge .PdfRectangle ,*_ge .PdfRectangle ,error ){_ebab :=_c .Line {X1 :0,Y1 :0,X2 :_aace .X2 -_aace .X1 ,Y2 :_aace .Y2 -_aace .Y1 ,LineColor :_aace .LineColor ,Opacity :_aace .Opacity ,LineWidth :_aace .LineWidth ,LineEndingStyle1 :_aace .LineEndingStyle1 ,LineEndingStyle2 :_aace .LineEndingStyle2 };
_dccdf ,_faac ,_fgcf :=_ebab .Draw (_dgcc );if _fgcf !=nil {return nil ,nil ,nil ,_fgcf ;};_bbcd :=&_ge .PdfRectangle {};_bbcd .Llx =_aace .X1 +_faac .Llx ;_bbcd .Lly =_aace .Y1 +_faac .Lly ;_bbcd .Urx =_aace .X1 +_faac .Urx ;_bbcd .Ury =_aace .Y1 +_faac .Ury ;
return _dccdf ,_faac ,_bbcd ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _ddf (_adg *_ge .PdfAnnotationWidget ,_gda *_ge .PdfFieldText ,_fbdf *_ge .PdfPageResources ,_ceg AppearanceStyle )(*_dd .PdfObjectDictionary ,error ){_bgaf :=_ge .NewPdfPageResources ();_abe ,_bee :=_dd .GetArray (_adg .Rect );
if !_bee {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eab ,_afd :=_ge .NewPdfRectangle (*_abe );if _afd !=nil {return nil ,_afd ;};_fc ,_bda :=_eab .Width (),_eab .Height ();_bcfa ,_fdd :=_fc ,_bda ;_dgc ,_cbe :=_dd .GetDict (_adg .MK );
if _cbe {_cgc ,_ :=_dd .GetDict (_adg .BS );_afb :=_ceg .applyAppearanceCharacteristics (_dgc ,_cgc ,nil );if _afb !=nil {return nil ,_afb ;};};_ead ,_cbe :=_dd .GetIntVal (_gda .MaxLen );if !_cbe {return nil ,_ec .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if _ead <=0{return nil ,_ec .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fdca :=_fc /float64 (_ead );_edc ,_afd :=_g .NewContentStreamParser (_becd (_gda .PdfField )).Parse ();if _afd !=nil {return nil ,_afd ;
};_ecb :=_g .NewContentCreator ();if _ceg .BorderSize > 0{_acf (_ecb ,_ceg ,_fc ,_bda );};if _ceg .DrawAlignmentReticle {_dcgg :=_ceg ;_dcgg .BorderSize =0.2;_fbff (_ecb ,_dcgg ,_fc ,_bda );};_ecb .Add_BMC ("\u0054\u0078");_ecb .Add_q ();_ ,_bda =_ceg .applyRotation (_dgc ,_fc ,_bda ,_ecb );
_ecb .Add_BT ();_gagb ,_ffff ,_afd :=_ceg .processDA (_gda .PdfField ,_edc ,_fbdf ,_bgaf ,_ecb );if _afd !=nil {return nil ,_afd ;};_fce :=_gagb .Font ;_agb :=_dd .MakeName (_gagb .Name );_ebfc :=_gagb .Size ;_egg :=_ebfc ==0;if _egg &&_ffff {_ebfc =_bda *_ceg .AutoFontSizeFraction ;
};_fcd :=_fce .Encoder ();if _fcd ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_fcd =_fa .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _aedb string ;if _fcf ,_abfa :=_dd .GetString (_gda .V );_abfa {_aedb =_fcf .Decoded ();};_ecb .Add_Tf (*_agb ,_ebfc );var _fcb float64 ;for _ ,_ecbc :=range _aedb {_caa ,_fgcd :=_fce .GetRuneMetrics (_ecbc );
if !_fgcd {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_ecbc );
continue ;};_dgdb :=_caa .Wy ;if int (_dgdb )<=0{_dgdb =_caa .Wx ;};if _dgdb > _fcb {_fcb =_dgdb ;};};if int (_fcb )==0{_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_fcb =1000;};_ceed ,_afd :=_fce .GetFontDescriptor ();if _afd !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _gage float64 ;if _ceed !=nil {_gage ,_afd =_ceed .GetCapHeight ();if _afd !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_afd );
};};if int (_gage )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_gage =1000.0;};_bgag :=_gage /1000.0*_ebfc ;_dcga :=0.0;_gbg :=1.0*_ebfc *(_fcb /1000.0);{_abc :=_gbg ;if _egg &&_dcga +_abc > _bda {_ebfc =0.95*(_bda -_dcga );_bgag =_gage /1000.0*_ebfc ;};if _bda > _bgag {_dcga =(_bda -_bgag )/2.0;};};_ecb .Add_Td (0,_dcga );
if _bcff ,_ebed :=_dd .GetIntVal (_gda .Q );_ebed {switch _bcff {case 2:if len (_aedb )< _ead {_dag :=float64 (_ead -len (_aedb ))*_fdca ;_ecb .Add_Td (_dag ,0);};};};for _gcg ,_fbfc :=range _aedb {_cggc :=_daag ;if _ceg .MarginLeft !=nil {_cggc =*_ceg .MarginLeft ;
};_eca :=string (_fbfc );if _fcd !=nil {_fee ,_cebb :=_fce .GetRuneMetrics (_fbfc );if !_cebb {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fbfc );
continue ;};_eca =string (_fcd .Encode (_eca ));_cggd :=_ebfc *_fee .Wx /1000.0;_egbe :=(_fdca -_cggd )/2;_cggc =_egbe ;};_ecb .Add_Td (_cggc ,0);_ecb .Add_Tj (*_dd .MakeString (_eca ));if _gcg !=len (_aedb )-1{_ecb .Add_Td (_fdca -_cggc ,0);};};_ecb .Add_ET ();
_ecb .Add_Q ();_ecb .Add_EMC ();_gfe :=_ge .NewXObjectForm ();_gfe .Resources =_bgaf ;_gfe .BBox =_dd .MakeArrayFromFloats ([]float64 {0,0,_bcfa ,_fdd });_gfe .SetContentStream (_ecb .Bytes (),_aadc ());_ccfc :=_dd .MakeDict ();_ccfc .Set ("\u004e",_gfe .ToPdfObject ());
return _ccfc ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_cffa ImageFieldAppearance )WrapContentStream (page *_ge .PdfPage )error {_dcad ,_abcg :=page .GetAllContentStreams ();if _abcg !=nil {return _abcg ;};_ccec :=_g .NewContentStreamParser (_dcad );_eeca ,_abcg :=_ccec .Parse ();if _abcg !=nil {return _abcg ;
};_eeca .WrapIfNeeded ();_dafe :=[]string {_eeca .String ()};return page .SetContentStreams (_dafe ,_aadc ());};func _aeca (_efdd LineAnnotationDef )(*_dd .PdfObjectDictionary ,*_ge .PdfRectangle ,error ){_gced :=_ge .NewXObjectForm ();_gced .Resources =_ge .NewPdfPageResources ();
_fefbg :="";if _efdd .Opacity < 1.0{_cbbd :=_dd .MakeDict ();_cbbd .Set ("\u0063\u0061",_dd .MakeFloat (_efdd .Opacity ));_bdde :=_gced .Resources .AddExtGState ("\u0067\u0073\u0031",_cbbd );if _bdde !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_bdde ;};_fefbg ="\u0067\u0073\u0031";};_eegeb ,_gedg ,_bbc ,_fcgg :=_eaee (_efdd ,_fefbg );if _fcgg !=nil {return nil ,nil ,_fcgg ;};_fcgg =_gced .SetContentStream (_eegeb ,nil );if _fcgg !=nil {return nil ,nil ,_fcgg ;};_gced .BBox =_gedg .ToPdfObject ();
_gcce :=_dd .MakeDict ();_gcce .Set ("\u004e",_gced .ToPdfObject ());return _gcce ,_bbc ,nil ;};