//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_da "bytes";_bcf "errors";_f "fmt";_d "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/contentstream";_eg "github.com/unidoc/unipdf/v3/contentstream/draw";_bf "github.com/unidoc/unipdf/v3/core";_ec "github.com/unidoc/unipdf/v3/creator";
_b "github.com/unidoc/unipdf/v3/internal/precision";_fg "github.com/unidoc/unipdf/v3/internal/textencoding";_ae "github.com/unidoc/unipdf/v3/model";_bc "image";_gd "math";_eb "strings";_g "time";_df "unicode";);

// NewFormSubmitButtonField would create a submit button in specified page according to the parameter in `FormSubmitActionOptions`.
func NewFormSubmitButtonField (page *_ae .PdfPage ,opt FormSubmitActionOptions )(*_ae .PdfFieldButton ,error ){_bdb :=int64 (_dbf );if opt .IsExclusionList {_bdb |=_ebg ;};if opt .IncludeEmptyFields {_bdb |=_bbac ;};if opt .SubmitAsPDF {_bdb |=_cebg ;};
_ggac :=_ae .NewPdfActionSubmitForm ();_ggac .Flags =_bf .MakeInteger (_bdb );_ggac .F =_ae .NewPdfFilespec ();if opt .Fields !=nil {_ggac .Fields =opt .Fields ;};_ggac .F .F =_bf .MakeString (opt .Url );_ggac .F .FS =_bf .MakeName ("\u0055\u0052\u004c");
_ebfd ,_fde :=_ggde (page ,opt .Rectangle ,"\u0062t\u006e\u0053\u0075\u0062\u006d\u0069t",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_ggac .ToPdfObject ());if _fde !=nil {return nil ,_fde ;};return _ebfd ,nil ;};func _cgg (_agg *_ae .PdfAnnotationWidget ,_cac *_ae .PdfFieldText ,_cc *_ae .PdfPageResources ,_acb AppearanceStyle )(*_bf .PdfObjectDictionary ,error ){_ccf :=_ae .NewPdfPageResources ();
_fcbb ,_cba :=_bf .GetArray (_agg .Rect );if !_cba {return nil ,_bcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_aee ,_eec :=_ae .NewPdfRectangle (*_fcbb );if _eec !=nil {return nil ,_eec ;};_dgc ,_bgg :=_aee .Width (),_aee .Height ();
_eac ,_afc :=_dgc ,_bgg ;_bad :=true ;_ab :=_ae .NewXObjectForm ();_ab .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_eac ,_afc });if _agg .AP !=nil {if _ceb ,_cacd :=_bf .GetDict (_agg .AP );_cacd &&_ceb !=nil {_gg :=_bf .TraceToDirectObject (_ceb .Get ("\u004e"));
switch _adb :=_gg .(type ){case *_bf .PdfObjectStream :_de ,_afb :=_bf .DecodeStream (_adb );if _afb !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_afb .Error ());
break ;};_efb ,_afb :=_a .NewContentStreamParser (string (_de )).Parse ();if _afb !=nil {_d .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_afb .Error ());
break ;};_eae :=_a .NewContentStreamProcessor (*_efb );_eae .AddHandler (_a .HandlerConditionEnumAllOperands ,"",func (_gfb *_a .ContentStreamOperation ,_bfgf _a .GraphicsState ,_cd *_ae .PdfPageResources )error {if _gfb .Operand =="\u0054\u006a"||_gfb .Operand =="\u0054\u004a"{if len (_gfb .Params )==1{if _gad ,_abg :=_bf .GetString (_gfb .Params [0]);
_abg {_bad =_eb .TrimSpace (_gad .Str ())=="";};return _a .ErrEarlyExit ;};return nil ;};return nil ;});_eae .Process (_ccf );if !_bad {if _dd ,_eed :=_bf .GetDict (_adb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));_eed {_ccf ,_afb =_ae .NewPdfPageResourcesFromDict (_dd );
if _afb !=nil {return nil ,_afb ;};};if _cfb ,_bbc :=_bf .GetArray (_adb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078"));_bbc {_ab .Matrix =_cfb ;};_ab .SetContentStream (_de ,_bcdc ());};};};};if _bad {_gbg ,_gcd :=_bf .GetDict (_agg .MK );if _gcd {_gca ,_ :=_bf .GetDict (_agg .BS );
_effg :=_acb .applyAppearanceCharacteristics (_gbg ,_gca ,nil );if _effg !=nil {return nil ,_effg ;};};_dbe ,_cfg :=_a .NewContentStreamParser (_fgc (_cac .PdfField )).Parse ();if _cfg !=nil {return nil ,_cfg ;};_bfga :=_a .NewContentCreator ();if _acb .BorderSize > 0{_ddg (_bfga ,_acb ,_dgc ,_bgg );
};if _acb .DrawAlignmentReticle {_dea :=_acb ;_dea .BorderSize =0.2;_eea (_bfga ,_dea ,_dgc ,_bgg );};_bfga .Add_BMC ("\u0054\u0078");_bfga .Add_q ();_dgc ,_bgg =_acb .applyRotation (_gbg ,_dgc ,_bgg ,_bfga );_bfga .Add_BT ();_dee ,_fb ,_cfg :=_acb .processDA (_cac .PdfField ,_dbe ,_cc ,_ccf ,_bfga );
if _cfg !=nil {return nil ,_cfg ;};_bdag :=_dee .Font ;_ceg :=_dee .Size ;_aca :=_bf .MakeName (_dee .Name );if _cac .Flags ().Has (_ae .FieldFlagMultiline )&&_cac .MaxLen !=nil {_d .Log .Debug ("\u004c\u006f\u006f\u006b\u0020\u0066\u006f\u0072\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0066\u006f\u0072 \u004e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
if _dfcf ,_age ,_egc :=_badb (_agg .PdfAnnotation .AP ,_cc );_egc {_aca =_dfcf ;_ceg =_age ;_fb =true ;};};_agb :=_ceg ==0;if _agb &&_fb {_ceg =_bgg *_acb .AutoFontSizeFraction ;};_dc :=_bdag .Encoder ();if _dc ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dc =_fg .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_eca ,_cfg :=_bdag .GetFontDescriptor ();if _cfg !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _cebd string ;if _dfea ,_cce :=_bf .GetString (_cac .V );_cce {_cebd =_dfea .Decoded ();};if len (_cebd )==0{return nil ,nil ;};_cbaa :=[]string {_cebd };_gfg :=false ;if _cac .Flags ().Has (_ae .FieldFlagMultiline ){_gfg =true ;_cebd =_eb .Replace (_cebd ,"\u000d\u000a","\u000a",-1);
_cebd =_eb .Replace (_cebd ,"\u000d","\u000a",-1);_cbaa =_eb .Split (_cebd ,"\u000a");};_fbd :=make ([]string ,len (_cbaa ));copy (_fbd ,_cbaa );_eaf :=_acb .MultilineLineHeight ;_fa :=0.0;_aec :=0;if _dc !=nil {for _ceg >=0{_abe :=make ([]string ,len (_cbaa ));
copy (_abe ,_cbaa );_fca :=make ([]string ,len (_fbd ));copy (_fca ,_fbd );_fa =0.0;_aec =0;_dgda :=len (_abe );_dab :=0;for _dab < _dgda {var _efbe float64 ;_fcf :=-1;_efbeg :=_caf ;if _acb .MarginLeft !=nil {_efbeg =*_acb .MarginLeft ;};for _gbb ,_bcda :=range _abe [_dab ]{if _bcda ==' '{_fcf =_gbb ;
};_dbbg ,_feb :=_bdag .GetRuneMetrics (_bcda );if !_feb {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_bcda );
continue ;};_efbe =_efbeg ;_efbeg +=_dbbg .Wx ;if _gfg &&!_agb &&_ceg *_efbeg /1000.0> _dgc {_gcg :=_gbb ;_cbb :=_gbb ;if _fcf > 0{_gcg =_fcf +1;_cbb =_fcf ;};_agee :=_abe [_dab ][_gcg :];_gac :=_fca [_dab ][_gcg :];if _dab < len (_abe )-1{_abe =append (_abe [:_dab +1],_abe [_dab :]...);
_abe [_dab +1]=_agee ;_fca =append (_fca [:_dab +1],_fca [_dab :]...);_fca [_dab +1]=_gac ;}else {_abe =append (_abe ,_agee );_fca =append (_fca ,_gac );};_abe [_dab ]=_abe [_dab ][0:_cbb ];_fca [_dab ]=_fca [_dab ][0:_cbb ];_dgda ++;_efbeg =_efbe ;break ;
};};if _efbeg > _fa {_fa =_efbeg ;};_abe [_dab ]=string (_dc .Encode (_abe [_dab ]));if len (_abe [_dab ])> 0{_aec ++;};_dab ++;};_gedg :=_ceg ;if _aec > 1{_gedg *=_eaf ;};_efba :=float64 (_aec )*_gedg ;if _agb ||_efba <=_bgg {_cbaa =_abe ;_fbd =_fca ;
break ;};_ceg --;};};_cca :=_caf ;if _acb .MarginLeft !=nil {_cca =*_acb .MarginLeft ;};if _ceg ==0||_agb &&_fa > 0&&_cca +_fa *_ceg /1000.0> _dgc {_ceg =0.95*1000.0*(_dgc -_cca )/_fa ;};_gadb :=_gb ;{if _bbcf ,_cde :=_bf .GetIntVal (_cac .Q );_cde {switch _bbcf {case 0:_gadb =_gb ;
case 1:_gadb =_ffed ;case 2:_gadb =_bg ;default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_bbcf );
};};};_bdab :=_ceg ;if _gfg &&_aec > 1{_bdab =_eaf *_ceg ;};var _fcad float64 ;if _eca !=nil {_fcad ,_cfg =_eca .GetCapHeight ();if _cfg !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cfg );
};};if int (_fcad )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_fcad =1000;};_fga :=_fcad /1000.0*_ceg ;_bdg :=0.0;{_gce :=float64 (_aec )*_bdab ;if _agb &&_bdg +_gce > _bgg {_ceg =0.95*(_bgg -_bdg )/float64 (_aec );_bdab =_ceg ;if _gfg &&_aec > 1{_bdab =_eaf *_ceg ;};_fga =_fcad /1000.0*_ceg ;_gce =float64 (_aec )*_bdab ;
};if _bgg > _gce {if _gfg {if _acb .MultilineVAlignMiddle {_cgf :=(_bgg -(_gce +_fga ))/2.0;_bdgd :=_cgf +_gce +_fga -_bdab ;_bdg =_bdgd ;if _aec > 1{_bdg =_bdg +(_gce /_ceg *float64 (_aec ))-_bdab -_fga ;};if _bdg < _gce {_bdg =(_bgg -_fga )/2.0;};}else {_bdg =_bgg -_bdab ;
if _bdg > _ceg {_ccfb :=0.0;if _gfg &&_acb .MultilineLineHeight > 1&&_aec > 1{_ccfb =_acb .MultilineLineHeight -1;};_bdg -=_ceg *(0.5-_ccfb );};};}else {_bdg =(_bgg -_fga )/2.0;};};};if _acb .TextColor !=nil {_eedg :=_acb .TextColor ;_faa ,_eaeg :=_eedg .(*_ae .PdfColorDeviceRGB );
if !_eaeg {_faa =_ae .NewPdfColorDeviceRGB (0,0,0);};_bfga .Add_rg (_faa .R (),_faa .G (),_faa .B ());}else {for _ ,_fgg :=range *_dbe {if _fgg .Operand =="\u0072\u0067"||_fgg .Operand =="\u0067"{_bfga .AddOperand (*_fgg );};};};_bfga .Add_Tf (*_aca ,_ceg );
_bfga .Add_Td (_cca ,_bdg );_deac :=_cca ;_fag :=_cca ;for _dcd ,_gced :=range _cbaa {_bbe :=0.0;for _ ,_cdg :=range _fbd [_dcd ]{_fgge ,_fdc :=_bdag .GetRuneMetrics (_cdg );if !_fdc {continue ;};_bbe +=_fgge .Wx ;};_bff :=_bbe /1000.0*_ceg ;_dfef :=_dgc -_bff ;
var _gga float64 ;switch _gadb {case _gb :_gga =_deac ;case _ffed :_gga =_dfef /2;case _bg :_gga =_dfef ;};_cca =_gga -_fag ;if _cca > 0.0{_bfga .Add_Td (_cca ,0);};_fag =_gga ;_bfga .Add_Tj (*_bf .MakeString (_gced ));if _dcd < len (_cbaa )-1{_bfga .Add_Td (0,-_ceg *_eaf );
};};_bfga .Add_ET ();_bfga .Add_Q ();_bfga .Add_EMC ();_ab .SetContentStream (_bfga .Bytes (),_bcdc ());};_ab .Resources =_ccf ;_gab :=_bf .MakeDict ();_gab .Set ("\u004e",_ab .ToPdfObject ());return _gab ,nil ;};func _egae (_aae _bc .Image ,_dfgb string ,_gba *SignatureFieldOpts ,_feca []float64 ,_ecfa *_a .ContentCreator )(*_bf .PdfObjectName ,*_ae .XObjectImage ,error ){_fff ,_aaa :=_ae .DefaultImageHandler {}.NewImageFromGoImage (_aae );
if _aaa !=nil {return nil ,nil ,_aaa ;};_fgdc ,_aaa :=_ae .NewXObjectImageFromImage (_fff ,nil ,_gba .Encoder );if _aaa !=nil {return nil ,nil ,_aaa ;};_egce ,_fdd :=float64 (*_fgdc .Width ),float64 (*_fgdc .Height );_gaccf :=_feca [2]-_feca [0];_cebef :=_feca [3]-_feca [1];
if _gba .AutoSize {_gaage :=_gd .Min (_gaccf /_egce ,_cebef /_fdd );_egce *=_gaage ;_fdd *=_gaage ;_feca [0]=_feca [0]+(_gaccf /2)-(_egce /2);_feca [1]=_feca [1]+(_cebef /2)-(_fdd /2);};var _acec *_bf .PdfObjectName ;if _bdef ,_afbcf :=_bf .GetName (_fgdc .Name );
_afbcf {_acec =_bdef ;}else {_acec =_bf .MakeName (_dfgb );};if _ecfa !=nil {_ecfa .Add_q ().Translate (_feca [0],_feca [1]).Scale (_egce ,_fdd ).Add_Do (*_acec ).Add_Q ();}else {return nil ,nil ,_bcf .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _acec ,_fgdc ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_egd FieldAppearance )Style ()AppearanceStyle {if _egd ._ged !=nil {return *_egd ._ged ;};_cafe :=_caf ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_ae .NewPdfColorDeviceGray (0),FillColor :_ae .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_cafe };
};func _fgaa (_afbddd LineAnnotationDef ,_dfba string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_bdgc :=_eg .Line {X1 :0,Y1 :0,X2 :_afbddd .X2 -_afbddd .X1 ,Y2 :_afbddd .Y2 -_afbddd .Y1 ,LineColor :_afbddd .LineColor ,Opacity :_afbddd .Opacity ,LineWidth :_afbddd .LineWidth ,LineEndingStyle1 :_afbddd .LineEndingStyle1 ,LineEndingStyle2 :_afbddd .LineEndingStyle2 };
_edf ,_afee ,_ffbe :=_bdgc .Draw (_dfba );if _ffbe !=nil {return nil ,nil ,nil ,_ffbe ;};_bgdcf :=&_ae .PdfRectangle {};_bgdcf .Llx =_afbddd .X1 +_afee .Llx ;_bgdcf .Lly =_afbddd .Y1 +_afee .Lly ;_bgdcf .Urx =_afbddd .X1 +_afee .Urx ;_bgdcf .Ury =_afbddd .Y1 +_afee .Ury ;
return _edf ,_afee ,_bgdcf ,nil ;};func _egb (_dbb *_ae .PdfFieldText ,_aeb _ae .PdfColor )(*_bf .PdfObjectString ,error ){_bfg :=_a .ContentStreamOperations {};_ce :=_fgc (_dbb .PdfField );_fcd ,_fdf :=_a .NewContentStreamParser (_ce ).Parse ();if _fdf !=nil {return nil ,_fdf ;
};for _ ,_agf :=range *_fcd {if _agf .Operand =="\u0067"||_agf .Operand =="\u0072\u0067"{continue ;};_bfg =append (_bfg ,_agf );};_bbf ,_fdfa :=_aeb .(*_ae .PdfColorDeviceRGB );if !_fdfa {return nil ,_fdf ;};_dfa ,_aga ,_bfce :=_bf .MakeFloat (_bbf [0]),_bf .MakeFloat (_bbf [1]),_bf .MakeFloat (_bbf [2]);
_dadb :=&_a .ContentStreamOperation {Params :[]_bf .PdfObject {_dfa ,_aga ,_bfce },Operand :"\u0072\u0067"};_bfg =append (_bfg ,_dadb );_dfc :=_bfg .String ();_dfc =_eb .Replace (_dfc ,"\u000a","\u0020",-1);_dfc =_eb .Trim (_dfc ,"\u0020");return _bf .MakeHexString (_dfc ),nil ;
};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_eg .Path ;

// Color is the color of the line. Default to black.
Color *_ae .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};

// NewFormResetButtonField would create a reset button in specified page according to the parameter in `FormResetActionOptions`.
func NewFormResetButtonField (page *_ae .PdfPage ,opt FormResetActionOptions )(*_ae .PdfFieldButton ,error ){_aef :=_ae .NewPdfActionResetForm ();_aef .Fields =opt .Fields ;_aef .Flags =_bf .MakeInteger (0);if opt .IsExclusionList {_aef .Flags =_bf .MakeInteger (1);
};_effb ,_cddf :=_ggde (page ,opt .Rectangle ,"\u0062\u0074\u006e\u0052\u0065\u0073\u0065\u0074",opt .Label ,opt .LabelColor ,opt .Font ,opt .FontSize ,_aef .ToPdfObject ());if _cddf !=nil {return nil ,_cddf ;};return _effb ,nil ;};func _fgc (_ccc *_ae .PdfField )string {if _ccc ==nil {return "";
};_ebfa ,_cad :=_ccc .GetContext ().(*_ae .PdfFieldText );if !_cad {return _fgc (_ccc .Parent );};if _ebfa .DA !=nil {return _ebfa .DA .Str ();};return _fgc (_ebfa .Parent );};func _gcac (_cbgce []float64 )[]float64 {var (_cfcd =len (_cbgce );_daa =make ([]float64 ,_cfcd );
_cdcf =make ([]float64 ,_cfcd ););_gbcg :=2.0;_daa [0]=_cbgce [0]/_gbcg ;for _bfgb :=1;_bfgb < _cfcd ;_bfgb ++{_cdcf [_bfgb ]=1/_gbcg ;if _bfgb < _cfcd -1{_gbcg =4.0;}else {_gbcg =3.5;};_gbcg -=_cdcf [_bfgb ];_daa [_bfgb ]=(_cbgce [_bfgb ]-_daa [_bfgb -1])/_gbcg ;
};for _cdbg :=1;_cdbg < _cfcd ;_cdbg ++{_daa [_cfcd -_cdbg -1]-=_cdcf [_cfcd -_cdbg ]*_daa [_cfcd -_cdbg ];};return _daa ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ae .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;};func _adc (_egaa *InkAnnotationDef )([]byte ,*_ae .PdfRectangle ,error ){_dcfb :=[][]_eg .CubicBezierCurve {};
for _ ,_bcac :=range _egaa .Paths {if _bcac .Length ()==0{continue ;};_gdcd :=_bcac .Points ;_dacg ,_fgae ,_agga :=_dgfa (_gdcd );if _agga !=nil {return nil ,nil ,_agga ;};if len (_dacg )!=len (_fgae ){return nil ,nil ,_bcf .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_agd :=[]_eg .CubicBezierCurve {};for _ffee :=0;_ffee < len (_dacg );_ffee ++{_agd =append (_agd ,_eg .CubicBezierCurve {P0 :_gdcd [_ffee ],P1 :_dacg [_ffee ],P2 :_fgae [_ffee ],P3 :_gdcd [_ffee +1]});};if len (_agd )> 0{_dcfb =append (_dcfb ,_agd );
};};_fddd ,_eeae ,_eeccc :=_fdde (_dcfb ,_egaa .Color ,_egaa .LineWidth );if _eeccc !=nil {return nil ,nil ,_eeccc ;};return _fddd ,_eeae ,nil ;};func _bd (_ff CircleAnnotationDef )(*_bf .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_ef :=_ae .NewXObjectForm ();
_ef .Resources =_ae .NewPdfPageResources ();_ebf :="";if _ff .Opacity < 1.0{_cg :=_bf .MakeDict ();_cg .Set ("\u0063\u0061",_bf .MakeFloat (_ff .Opacity ));_cg .Set ("\u0043\u0041",_bf .MakeFloat (_ff .Opacity ));_bfa :=_ef .Resources .AddExtGState ("\u0067\u0073\u0031",_cg );
if _bfa !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bfa ;};_ebf ="\u0067\u0073\u0031";};_ffe ,_dad ,_ad ,_be :=_cga (_ff ,_ebf );
if _be !=nil {return nil ,nil ,_be ;};_be =_ef .SetContentStream (_ffe ,nil );if _be !=nil {return nil ,nil ,_be ;};_ef .BBox =_dad .ToPdfObject ();_ba :=_bf .MakeDict ();_ba .Set ("\u004e",_ef .ToPdfObject ());return _ba ,_ad ,nil ;};func _abcg (_ccgc LineAnnotationDef )(*_bf .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_dfgd :=_ae .NewXObjectForm ();
_dfgd .Resources =_ae .NewPdfPageResources ();_deb :="";if _ccgc .Opacity < 1.0{_bbcb :=_bf .MakeDict ();_bbcb .Set ("\u0063\u0061",_bf .MakeFloat (_ccgc .Opacity ));_dce :=_dfgd .Resources .AddExtGState ("\u0067\u0073\u0031",_bbcb );if _dce !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_dce ;};_deb ="\u0067\u0073\u0031";};_eacf ,_feac ,_bddf ,_fafcf :=_fgaa (_ccgc ,_deb );if _fafcf !=nil {return nil ,nil ,_fafcf ;};_fafcf =_dfgd .SetContentStream (_eacf ,nil );if _fafcf !=nil {return nil ,nil ,_fafcf ;};_dfgd .BBox =_feac .ToPdfObject ();
_gdd :=_bf .MakeDict ();_gdd .Set ("\u004e",_dfgd .ToPdfObject ());return _gdd ,_bddf ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ae .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ae .PdfFieldButton ,error ){if page ==nil {return nil ,_bcf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bcf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cgdcc ,_fbfd :=_ae .NewStandard14Font (_ae .ZapfDingbatsName );if _fbfd !=nil {return nil ,_fbfd ;};_ffg :=_ae .NewPdfField ();_abbc :=&_ae .PdfFieldButton {};_ffg .SetContext (_abbc );_abbc .PdfField =_ffg ;_abbc .T =_bf .MakeString (name );_abbc .SetType (_ae .ButtonTypeCheckbox );
_dge :="\u004f\u0066\u0066";if opt .Checked {_dge ="\u0059\u0065\u0073";};_abbc .V =_bf .MakeName (_dge );_aad :=_ae .NewPdfAnnotationWidget ();_aad .Rect =_bf .MakeArrayFromFloats (rect );_aad .P =page .ToPdfObject ();_aad .F =_bf .MakeInteger (4);_aad .Parent =_abbc .ToPdfObject ();
_faf :=rect [2]-rect [0];_gbae :=rect [3]-rect [1];var _fcfe _da .Buffer ;_fcfe .WriteString ("\u0071\u000a");_fcfe .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_fcfe .WriteString ("\u0042\u0054\u000a");_fcfe .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");
_fcfe .WriteString ("\u0045\u0054\u000a");_fcfe .WriteString ("\u0051\u000a");_edge :=_a .NewContentCreator ();_edge .Add_q ();_edge .Add_rg (0,0,1);_edge .Add_BT ();_edge .Add_Tf (*_bf .MakeName ("\u005a\u0061\u0044\u0062"),12);_edge .Add_Td (0,0);_edge .Add_ET ();
_edge .Add_Q ();_eafc :=_ae .NewXObjectForm ();_eafc .SetContentStream (_edge .Bytes (),_bf .NewRawEncoder ());_eafc .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_faf ,_gbae });_eafc .Resources =_ae .NewPdfPageResources ();_eafc .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cgdcc .ToPdfObject ());
_edge =_a .NewContentCreator ();_edge .Add_q ();_edge .Add_re (0,0,_faf ,_gbae );_edge .Add_W ().Add_n ();_edge .Add_rg (0,0,1);_edge .Translate (0,3.0);_edge .Add_BT ();_edge .Add_Tf (*_bf .MakeName ("\u005a\u0061\u0044\u0062"),12);_edge .Add_Td (0,0);
_edge .Add_Tj (*_bf .MakeString ("\u0034"));_edge .Add_ET ();_edge .Add_Q ();_gcfef :=_ae .NewXObjectForm ();_gcfef .SetContentStream (_edge .Bytes (),_bf .NewRawEncoder ());_gcfef .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_faf ,_gbae });_gcfef .Resources =_ae .NewPdfPageResources ();
_gcfef .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cgdcc .ToPdfObject ());_eda :=_bf .MakeDict ();_eda .Set ("\u004f\u0066\u0066",_eafc .ToPdfObject ());_eda .Set ("\u0059\u0065\u0073",_gcfef .ToPdfObject ());_cgef :=_bf .MakeDict ();_cgef .Set ("\u004e",_eda );
_aad .AP =_cgef ;_aad .AS =_bf .MakeName (_dge );_abbc .Annotations =append (_abbc .Annotations ,_aad );return _abbc ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_gbf *FieldAppearance )SetStyle (style AppearanceStyle ){_gbf ._ged =&style };

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ae .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_ceeb ImageFieldAppearance )Style ()AppearanceStyle {if _ceeb ._dcc !=nil {return *_ceeb ._dcc ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_ae .NewPdfColorDeviceGray (0),FillColor :_ae .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _eea (_dcf *_a .ContentCreator ,_fecf AppearanceStyle ,_fdg ,_edc float64 ){_dcf .Add_q ().Add_re (0,0,_fdg ,_edc ).Add_re (0,_edc /2,_fdg ,_edc /2).Add_re (0,0,_fdg ,_edc ).Add_re (_fdg /2,0,_fdg /2,_edc ).Add_w (_fecf .BorderSize ).SetStrokingColor (_fecf .BorderColor ).SetNonStrokingColor (_fecf .FillColor ).Add_B ().Add_Q ();
};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_ae .Image ;_gbd AppearanceStyle ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_edbc FieldAppearance )WrapContentStream (page *_ae .PdfPage )error {_eab ,_afe :=page .GetAllContentStreams ();if _afe !=nil {return _afe ;};_acaa :=_a .NewContentStreamParser (_eab );_ageec ,_afe :=_acaa .Parse ();if _afe !=nil {return _afe ;};
_ageec .WrapIfNeeded ();_baba :=[]string {_ageec .String ()};return page .SetContentStreams (_baba ,_bcdc ());};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ae .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ae .PdfFieldSignature ,error ){if signature ==nil {return nil ,_bcf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_agfe ,_bggb :=_bcb (lines ,opts );if _bggb !=nil {return nil ,_bggb ;};_cfd :=_ae .NewPdfFieldSignature (signature );_cfd .Rect =_bf .MakeArrayFromFloats (opts .Rect );_cfd .AP =_agfe ;return _cfd ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _abb (_dfb *_ae .PdfAcroForm ,_gaf *_ae .PdfAnnotationWidget ,_fab *_ae .PdfFieldChoice ,_gaccg AppearanceStyle )(*_bf .PdfObjectDictionary ,error ){_dbgc ,_gaff :=_bf .GetArray (_gaf .Rect );if !_gaff {return nil ,_bcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_cdfd ,_bbbf :=_ae .NewPdfRectangle (*_dbgc );if _bbbf !=nil {return nil ,_bbbf ;};_fbg ,_fad :=_cdfd .Width (),_cdfd .Height ();_d .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_gaf .BS );
_ceff ,_bbbf :=_a .NewContentStreamParser (_fgc (_fab .PdfField )).Parse ();if _bbbf !=nil {return nil ,_bbbf ;};_cgca ,_ccg :=_bf .GetDict (_gaf .MK );if _ccg {_egddb ,_ :=_bf .GetDict (_gaf .BS );_dbd :=_gaccg .applyAppearanceCharacteristics (_cgca ,_egddb ,nil );
if _dbd !=nil {return nil ,_dbd ;};};_cbg :=_bf .MakeDict ();for _ ,_eef :=range _fab .Opt .Elements (){if _bba ,_ceffb :=_bf .GetArray (_eef );_ceffb &&_bba .Len ()==2{_eef =_bba .Get (1);};var _dca string ;if _bcfg ,_cegg :=_bf .GetString (_eef );_cegg {_dca =_bcfg .Decoded ();
}else if _ceffd ,_bfbc :=_bf .GetName (_eef );_bfbc {_dca =_ceffd .String ();}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_eef );
return nil ,_bcf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_dca )> 0{_cbd ,_cgfg :=_aeg (_fab .PdfField ,_fbg ,_fad ,_dca ,_gaccg ,_ceff ,_dfb .DR ,_cgca );if _cgfg !=nil {return nil ,_cgfg ;
};_cbg .Set (*_bf .MakeName (_dca ),_cbd .ToPdfObject ());};};_cbaf :=_bf .MakeDict ();_cbaf .Set ("\u004e",_cbg );return _cbaf ,nil ;};func _bcb (_ddgc []*SignatureLine ,_ega *SignatureFieldOpts )(*_bf .PdfObjectDictionary ,error ){if _ega ==nil {_ega =NewSignatureFieldOpts ();
};var _dgf error ;var _ecdd *_bf .PdfObjectName ;_ffa :=_ega .Font ;if _ffa !=nil {_gcgc ,_ :=_ffa .GetFontDescriptor ();if _gcgc !=nil {if _cbac ,_eeg :=_gcgc .FontName .(*_bf .PdfObjectName );_eeg {_ecdd =_cbac ;};};if _ecdd ==nil {_ecdd =_bf .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _ffa ,_dgf =_ae .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_dgf !=nil {return nil ,_dgf ;};_ecdd =_bf .MakeName ("\u0048\u0065\u006c\u0076");};_dedd :=_ega .FontSize ;if _dedd <=0{_dedd =10;};if _ega .LineHeight <=0{_ega .LineHeight =1;
};_bccc :=_ega .LineHeight *_dedd ;_affe ,_ggc :=_ffa .GetRuneMetrics (' ');if !_ggc {return nil ,_bcf .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_efbb :=_affe .Wx ;var _fdbea float64 ;var _deae []string ;for _ ,_gebe :=range _ddgc {if _gebe .Text ==""{continue ;};_dcfa :=_gebe .Text ;if _gebe .Desc !=""{_dcfa =_gebe .Desc +"\u003a\u0020"+_dcfa ;};_deae =append (_deae ,_dcfa );var _gcf float64 ;
for _ ,_febg :=range _dcfa {_ecee ,_gcag :=_ffa .GetRuneMetrics (_febg );if !_gcag {continue ;};_gcf +=_ecee .Wx ;};if _gcf > _fdbea {_fdbea =_gcf ;};};_fdbea =_fdbea *_dedd /1000.0;_afbc :=float64 (len (_deae ))*_bccc ;_afdd :=_ega .Image !=nil ;_eecc :=_ega .Rect ;
if _eecc ==nil {_eecc =[]float64 {0,0,_fdbea ,_afbc };if _afdd {_eecc [2]=_fdbea *2;_eecc [3]=_afbc *2;};_ega .Rect =_eecc ;};_gcb :=_eecc [2]-_eecc [0];_bfdg :=_eecc [3]-_eecc [1];_fcac ,_bfca :=_eecc ,_eecc ;var _bfe ,_gbfe float64 ;if _afdd &&len (_deae )> 0{if _ega .ImagePosition <=SignatureImageRight {_aggc :=[]float64 {_eecc [0],_eecc [1],_eecc [0]+(_gcb /2),_eecc [3]};
_ade :=[]float64 {_eecc [0]+(_gcb /2),_eecc [1],_eecc [2],_eecc [3]};if _ega .ImagePosition ==SignatureImageLeft {_fcac ,_bfca =_aggc ,_ade ;}else {_fcac ,_bfca =_ade ,_aggc ;};}else {_bbccd :=[]float64 {_eecc [0],_eecc [1],_eecc [2],_eecc [1]+(_bfdg /2)};
_egdde :=[]float64 {_eecc [0],_eecc [1]+(_bfdg /2),_eecc [2],_eecc [3]};if _ega .ImagePosition ==SignatureImageTop {_fcac ,_bfca =_egdde ,_bbccd ;}else {_fcac ,_bfca =_bbccd ,_egdde ;};};};_bfe =_bfca [2]-_bfca [0];_gbfe =_bfca [3]-_bfca [1];var _gace float64 ;
if _ega .AutoSize {if _fdbea > _bfe ||_afbc > _gbfe {_cfef :=_gd .Min (_bfe /_fdbea ,_gbfe /_afbc );_dedd *=_cfef ;};_bccc =_ega .LineHeight *_dedd ;_gace +=(_gbfe -float64 (len (_deae ))*_bccc )/2;};_egg :=_a .NewContentCreator ();_cadf :=_ae .NewPdfPageResources ();
_cadf .SetFontByName (*_ecdd ,_ffa .ToPdfObject ());if _ega .BorderSize <=0{_ega .BorderSize =0;_ega .BorderColor =_ae .NewPdfColorDeviceGray (1);};_egg .Add_q ();if _ega .FillColor !=nil {_egg .SetNonStrokingColor (_ega .FillColor );};if _ega .BorderColor !=nil {_egg .SetStrokingColor (_ega .BorderColor );
};_egg .Add_w (_ega .BorderSize ).Add_re (_eecc [0],_eecc [1],_gcb ,_bfdg );if _ega .FillColor !=nil &&_ega .BorderColor !=nil {_egg .Add_B ();}else if _ega .FillColor !=nil {_egg .Add_f ();}else if _ega .BorderColor !=nil {_egg .Add_S ();};_egg .Add_Q ();
if _ega .WatermarkImage !=nil {_gfbcg :=[]float64 {_eecc [0],_eecc [1],_eecc [2],_eecc [3]};_aed ,_dgdec ,_bdge :=_egae (_ega .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_ega ,_gfbcg ,_egg );if _bdge !=nil {return nil ,_bdge ;
};_cadf .SetXObjectImageByName (*_aed ,_dgdec );};_egg .Add_q ();_egg .Translate (_bfca [0],_bfca [3]-_bccc -_gace );_egg .Add_BT ();_bfgc :=_ffa .Encoder ();for _ ,_cbcc :=range _deae {var _bbg []byte ;for _ ,_cdc :=range _cbcc {if _df .IsSpace (_cdc ){if len (_bbg )> 0{_egg .SetNonStrokingColor (_ega .TextColor ).Add_Tf (*_ecdd ,_dedd ).Add_TL (_bccc ).Add_TJ ([]_bf .PdfObject {_bf .MakeStringFromBytes (_bbg )}...);
_bbg =nil ;};_egg .Add_Tf (*_ecdd ,_dedd ).Add_TL (_bccc ).Add_TJ ([]_bf .PdfObject {_bf .MakeFloat (-_efbb )}...);}else {_bbg =append (_bbg ,_bfgc .Encode (string (_cdc ))...);};};if len (_bbg )> 0{_egg .SetNonStrokingColor (_ega .TextColor ).Add_Tf (*_ecdd ,_dedd ).Add_TL (_bccc ).Add_TJ ([]_bf .PdfObject {_bf .MakeStringFromBytes (_bbg )}...);
};_egg .Add_Td (0,-_bccc );};_egg .Add_ET ();_egg .Add_Q ();if _afdd {_aggd ,_adf ,_dgcd :=_egae (_ega .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_ega ,_fcac ,_egg );if _dgcd !=nil {return nil ,_dgcd ;};_cadf .SetXObjectImageByName (*_aggd ,_adf );
};_fgba :=_ae .NewXObjectForm ();_fgba .Resources =_cadf ;_fgba .BBox =_bf .MakeArrayFromFloats (_eecc );_fgba .SetContentStream (_egg .Bytes (),_bcdc ());_gcfe :=_bf .MakeDict ();_gcfe .Set ("\u004e",_fgba .ToPdfObject ());return _gcfe ,nil ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_ae .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_ae .PdfFieldButton ,error ){if page ==nil {return nil ,_bcf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bcf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gff :=_ae .NewPdfField ();_ffd :=&_ae .PdfFieldButton {};_ffd .PdfField =_gff ;_gff .SetContext (_ffd );_ffd .SetType (_ae .ButtonTypePush );_ffd .T =_bf .MakeString (name );_cag :=_ae .NewPdfAnnotationWidget ();_cag .Rect =_bf .MakeArrayFromFloats (rect );
_cag .P =page .ToPdfObject ();_cag .F =_bf .MakeInteger (4);_cag .Parent =_ffd .ToPdfObject ();_bbfb :=rect [2]-rect [0];_gdca :=rect [3]-rect [1];_bega :=opt ._gbd ;_aeced :=_a .NewContentCreator ();if _bega .BorderSize > 0{_ddg (_aeced ,_bega ,_bbfb ,_gdca );
};if _bega .DrawAlignmentReticle {_ddcf :=_bega ;_ddcf .BorderSize =0.2;_eea (_aeced ,_ddcf ,_bbfb ,_gdca );};_dda ,_babae :=_ebbg (_bbfb ,_gdca ,opt .Image ,_bega );if _babae !=nil {return nil ,_babae ;};_bcbb ,_bgc :=_bf .GetDict (_cag .MK );if _bgc {_bcbb .Set ("\u006c",_dda .ToPdfObject ());
};_ddbf :=_bf .MakeDict ();_ddbf .Set ("\u0046\u0052\u004d",_dda .ToPdfObject ());_eegg :=_ae .NewPdfPageResources ();_eegg .ProcSet =_bf .MakeArray (_bf .MakeName ("\u0050\u0044\u0046"));_eegg .XObject =_ddbf ;_aaeb :=_bbfb -2;_gfad :=_gdca -2;_aeced .Add_q ();
_aeced .Add_re (1,1,_aaeb ,_gfad );_aeced .Add_W ();_aeced .Add_n ();_aaeb -=2;_gfad -=2;_aeced .Add_q ();_aeced .Add_re (2,2,_aaeb ,_gfad );_aeced .Add_W ();_aeced .Add_n ();_bdgf :=_gd .Min (_aaeb /float64 (opt .Image .Width ),_gfad /float64 (opt .Image .Height ));
_aeced .Add_cm (_bdgf ,0,0,_bdgf ,(_bbfb /2)-(float64 (opt .Image .Width )*_bdgf /2)+2,2);_aeced .Add_Do ("\u0046\u0052\u004d");_aeced .Add_Q ();_aeced .Add_Q ();_gaeg :=_ae .NewXObjectForm ();_gaeg .FormType =_bf .MakeInteger (1);_gaeg .Resources =_eegg ;
_gaeg .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_bbfb ,_gdca });_gaeg .Matrix =_bf .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_gaeg .SetContentStream (_aeced .Bytes (),_bcdc ());_cfca :=_bf .MakeDict ();_cfca .Set ("\u004e",_gaeg .ToPdfObject ());
_cag .AP =_cfca ;_ffd .Annotations =append (_ffd .Annotations ,_cag );return _ffd ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ae .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ae .PdfFieldText ,error ){if page ==nil {return nil ,_bcf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bcf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_bcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_abaf :=_ae .NewPdfField ();_egbg :=&_ae .PdfFieldText {};_abaf .SetContext (_egbg );_egbg .PdfField =_abaf ;_egbg .T =_bf .MakeString (name );
if opt .MaxLen > 0{_egbg .MaxLen =_bf .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_egbg .V =_bf .MakeString (opt .Value );};if opt .TextColor !=""{_ccdg :=_ec .ColorRGBFromHex (opt .TextColor );_afgb ,_ddgd ,_ceab :=_ccdg .ToRGB ();_fccc :=12;
if opt .FontSize > 0{_fccc =opt .FontSize ;};_afbdd :="\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a";if opt .FontName !=""{_afbdd =opt .FontName ;};_cccg :=_f .Sprintf ("/\u0025\u0073\u0020\u0025\u0064\u0020T\u0066\u0020\u0025\u002e\u0033\u0066\u0020\u0025\u002e3\u0066\u0020\u0025.\u0033f\u0020\u0072\u0067",_afbdd ,_fccc ,_afgb ,_ddgd ,_ceab );
_egbg .DA =_bf .MakeString (_cccg );};_abaf .SetContext (_egbg );_fdbeag :=_ae .NewPdfAnnotationWidget ();_fdbeag .Rect =_bf .MakeArrayFromFloats (rect );_fdbeag .P =page .ToPdfObject ();_fdbeag .F =_bf .MakeInteger (4);_fdbeag .Parent =_egbg .ToPdfObject ();
_egbg .Annotations =append (_egbg .Annotations ,_fdbeag );return _egbg ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _badb (_cgdc _bf .PdfObject ,_fgab *_ae .PdfPageResources )(*_bf .PdfObjectName ,float64 ,bool ){var (_efdc *_bf .PdfObjectName ;_fdfc float64 ;_eaeb bool ;);if _ceca ,_gcc :=_bf .GetDict (_cgdc );_gcc &&_ceca !=nil {_cdfg :=_bf .TraceToDirectObject (_ceca .Get ("\u004e"));
switch _cge :=_cdfg .(type ){case *_bf .PdfObjectStream :_abf ,_bcff :=_bf .DecodeStream (_cge );if _bcff !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_bcff .Error ());
return nil ,0,false ;};_ddd ,_bcff :=_a .NewContentStreamParser (string (_abf )).Parse ();if _bcff !=nil {_d .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_bcff .Error ());
return nil ,0,false ;};_efg :=_a .NewContentStreamProcessor (*_ddd );_efg .AddHandler (_a .HandlerConditionEnumOperand ,"\u0054\u0066",func (_fda *_a .ContentStreamOperation ,_cggf _a .GraphicsState ,_gegf *_ae .PdfPageResources )error {if len (_fda .Params )==2{if _deg ,_eggd :=_bf .GetName (_fda .Params [0]);
_eggd {_efdc =_deg ;};if _aeed ,_bce :=_bf .GetNumberAsFloat (_fda .Params [1]);_bce ==nil {_fdfc =_aeed ;};_eaeb =true ;return _a .ErrEarlyExit ;};return nil ;});_efg .Process (_fgab );return _efdc ,_fdfc ,_eaeb ;};};return nil ,0,false ;};func (_cded *AppearanceStyle )processDA (_afd *_ae .PdfField ,_dfgg *_a .ContentStreamOperations ,_cgcf ,_fbfg *_ae .PdfPageResources ,_bde *_a .ContentCreator )(*AppearanceFont ,bool ,error ){var _ffc *AppearanceFont ;
var _fcaf bool ;if _cded .Fonts !=nil {if _cded .Fonts .Fallback !=nil {_ffc =_cded .Fonts .Fallback ;};if _gae :=_cded .Fonts .FieldFallbacks ;_gae !=nil {if _fagea ,_bab :=_gae [_afd .PartialName ()];_bab {_ffc =_fagea ;}else if _dcg ,_fbdc :=_afd .FullName ();
_fbdc ==nil {if _eeb ,_adba :=_gae [_dcg ];_adba {_ffc =_eeb ;};};};if _ffc !=nil {_ffc .fillName ();};_fcaf =_cded .Fonts .ForceReplace ;};var _cebe string ;var _ggg float64 ;var _cgfeg bool ;if _dfgg !=nil {for _ ,_ggaa :=range *_dfgg {if _ggaa .Operand =="\u0054\u0066"&&len (_ggaa .Params )==2{if _gge ,_dede :=_bf .GetNameVal (_ggaa .Params [0]);
_dede {_cebe =_gge ;};if _cea ,_edb :=_bf .GetNumberAsFloat (_ggaa .Params [1]);_edb ==nil {_ggg =_cea ;};_cgfeg =true ;continue ;};_bde .AddOperand (*_ggaa );};};var _aegcac *AppearanceFont ;var _dcff _bf .PdfObject ;if _fcaf &&_ffc !=nil {_aegcac =_ffc ;
}else {if _cgcf !=nil &&_cebe !=""{if _ecd ,_dcbf :=_cgcf .GetFontByName (*_bf .MakeName (_cebe ));_dcbf {if _ccdc ,_beg :=_ae .NewPdfFontFromPdfObject (_ecd );_beg ==nil {_dcff =_ecd ;_aegcac =&AppearanceFont {Name :_cebe ,Font :_ccdc ,Size :_ggg };}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_beg );
};};};if _aegcac ==nil &&_ffc !=nil {_aegcac =_ffc ;};if _aegcac ==nil {_adbg ,_gfgd :=_ae .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _gfgd !=nil {return nil ,false ,_gfgd ;};_aegcac =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_adbg ,Size :_ggg };
};};if _aegcac .Size <=0&&_cded .Fonts !=nil &&_cded .Fonts .FallbackSize > 0{_aegcac .Size =_cded .Fonts .FallbackSize ;};_bbdc :=*_bf .MakeName (_aegcac .Name );if _dcff ==nil {_dcff =_aegcac .Font .ToPdfObject ();};if _cgcf !=nil &&!_cgcf .HasFontByName (_bbdc ){_cgcf .SetFontByName (_bbdc ,_dcff );
};if _fbfg !=nil &&!_fbfg .HasFontByName (_bbdc ){_fbfg .SetFontByName (_bbdc ,_dcff );};return _aegcac ,_cgfeg ,nil ;};func _cga (_gaa CircleAnnotationDef ,_dag string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_dfe :=_eg .Circle {X :_gaa .X ,Y :_gaa .Y ,Width :_gaa .Width ,Height :_gaa .Height ,FillEnabled :_gaa .FillEnabled ,FillColor :_gaa .FillColor ,BorderEnabled :_gaa .BorderEnabled ,BorderWidth :_gaa .BorderWidth ,BorderColor :_gaa .BorderColor ,Opacity :_gaa .Opacity };
_cb ,_ca ,_ac :=_dfe .Draw (_dag );if _ac !=nil {return nil ,nil ,nil ,_ac ;};_gdc :=&_ae .PdfRectangle {};_gdc .Llx =_gaa .X +_ca .Llx ;_gdc .Lly =_gaa .Y +_ca .Lly ;_gdc .Urx =_gaa .X +_ca .Urx ;_gdc .Ury =_gaa .Y +_ca .Ury ;return _cb ,_ca ,_gdc ,nil ;
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_gaag FieldAppearance )GenerateAppearanceDict (form *_ae .PdfAcroForm ,field *_ae .PdfField ,wa *_ae .PdfAnnotationWidget )(*_bf .PdfObjectDictionary ,error ){_d .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_efa :=field .GetContext ().(*_ae .PdfFieldText );_gc ,_ed :=_bf .GetDict (wa .AP );if _ed &&_gaag .OnlyIfMissing &&(!_efa ||!_gaag .RegenerateTextFields ){_d .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _gc ,nil ;};if form .DR ==nil {form .DR =_ae .NewPdfPageResources ();};switch _cf :=field .GetContext ().(type ){case *_ae .PdfFieldText :_cab :=_cf ;if _db :=_fgc (_cab .PdfField );_db ==""{_cab .DA =form .DA ;};if _gaag ._ged !=nil {if _gaag ._ged .FieldColors !=nil &&_gaag ._ged .FieldColors [field .PartialName ()]!=nil {_dae :=_gaag ._ged .FieldColors [field .PartialName ()];
_eff ,_dgd :=_egb (_cab ,_dae );if _dgd !=nil {return nil ,_dgd ;};_cab .DA =_eff ;}else if _gaag ._ged .TextColor !=nil {_geg ,_agc :=_egb (_cab ,_gaag ._ged .TextColor );if _agc !=nil {return nil ,_agc ;};_cab .DA =_geg ;};};switch {case _cab .Flags ().Has (_ae .FieldFlagPassword ):return nil ,nil ;
case _cab .Flags ().Has (_ae .FieldFlagFileSelect ):return nil ,nil ;case _cab .Flags ().Has (_ae .FieldFlagComb ):if _cab .MaxLen !=nil {_efd ,_eba :=_cdb (wa ,_cab ,form .DR ,_gaag .Style ());if _eba !=nil {return nil ,_eba ;};return _efd ,nil ;};};_fec ,_cbc :=_cgg (wa ,_cab ,form .DR ,_gaag .Style ());
if _cbc !=nil {return nil ,_cbc ;};return _fec ,nil ;case *_ae .PdfFieldButton :_fd :=_cf ;if _fd .IsCheckbox (){_fgd ,_eaa :=_bcc (wa ,_fd ,form .DR ,_gaag .Style ());if _eaa !=nil {return nil ,_eaa ;};return _fgd ,nil ;};_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_fd .GetType ());
case *_ae .PdfFieldChoice :_dbg :=_cf ;switch {case _dbg .Flags ().Has (_ae .FieldFlagCombo ):_bda ,_bfc :=_abb (form ,wa ,_dbg ,_gaag .Style ());if _bfc !=nil {return nil ,_bfc ;};return _bda ,nil ;default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_dbg .Flags ().String ());
};default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cf );};return nil ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;
SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);func _bcdc ()_bf .StreamEncoder {return _bf .NewFlateEncoder ()};func (_fcb *AppearanceFont )fillName (){if _fcb .Font ==nil ||_fcb .Name !=""{return ;};_af :=_fcb .Font .FontDescriptor ();
if _af ==nil ||_af .FontName ==nil {return ;};_fcb .Name =_af .FontName .String ();};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fbfe ImageFieldAppearance )GenerateAppearanceDict (form *_ae .PdfAcroForm ,field *_ae .PdfField ,wa *_ae .PdfAnnotationWidget )(*_bf .PdfObjectDictionary ,error ){_ ,_dec :=field .GetContext ().(*_ae .PdfFieldButton );if !_dec {_d .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_fbca ,_cabf :=_bf .GetDict (wa .AP );if _cabf &&_fbfe .OnlyIfMissing {_d .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _fbca ,nil ;};if form .DR ==nil {form .DR =_ae .NewPdfPageResources ();};switch _dfefd :=field .GetContext ().(type ){case *_ae .PdfFieldButton :if _dfefd .IsPush (){_feag ,_adbc :=_eece (_dfefd ,wa ,_fbfe .Style ());if _adbc !=nil {return nil ,_adbc ;
};return _feag ,nil ;};};return nil ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ae .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ae .PdfFieldChoice ,error ){if page ==nil {return nil ,_bcf .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_bcf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_afeg :=_ae .NewPdfField ();_bcbd :=&_ae .PdfFieldChoice {};_afeg .SetContext (_bcbd );_bcbd .PdfField =_afeg ;_bcbd .T =_bf .MakeString (name );_bcbd .Opt =_bf .MakeArray ();for _ ,_dbcd :=range opt .Choices {_bcbd .Opt .Append (_bf .MakeString (_dbcd ));
};_bcbd .SetFlag (_ae .FieldFlagCombo );_cgde :=_ae .NewPdfAnnotationWidget ();_cgde .Rect =_bf .MakeArrayFromFloats (rect );_cgde .P =page .ToPdfObject ();_cgde .F =_bf .MakeInteger (4);_cgde .Parent =_bcbd .ToPdfObject ();_bcbd .Annotations =append (_bcbd .Annotations ,_cgde );
return _bcbd ,nil ;};func (_gee *AppearanceStyle )applyAppearanceCharacteristics (_daga *_bf .PdfObjectDictionary ,_afg *_bf .PdfObjectDictionary ,_gdb *_ae .PdfFont )error {if !_gee .AllowMK {return nil ;};if CA ,_aaca :=_bf .GetString (_daga .Get ("\u0043\u0041"));
_aaca &&_gdb !=nil {_gdf :=CA .Bytes ();if len (_gdf )!=0{_baf :=[]rune (_gdb .Encoder ().Decode (_gdf ));if len (_baf )==1{_gee .CheckmarkRune =_baf [0];};};};if BC ,_accg :=_bf .GetArray (_daga .Get ("\u0042\u0043"));_accg {_ggda ,_bef :=BC .ToFloat64Array ();
if _bef !=nil {return _bef ;};switch len (_ggda ){case 1:_gee .BorderColor =_ae .NewPdfColorDeviceGray (_ggda [0]);case 3:_gee .BorderColor =_ae .NewPdfColorDeviceRGB (_ggda [0],_ggda [1],_ggda [2]);case 4:_gee .BorderColor =_ae .NewPdfColorDeviceCMYK (_ggda [0],_ggda [1],_ggda [2],_ggda [3]);
default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_ggda ));
};if _afg !=nil {if _dfaa ,_cbgc :=_bf .GetNumberAsFloat (_afg .Get ("\u0057"));_cbgc ==nil {_gee .BorderSize =_dfaa ;};};};if BG ,_cbbd :=_bf .GetArray (_daga .Get ("\u0042\u0047"));_cbbd {_fgcb ,_cgd :=BG .ToFloat64Array ();if _cgd !=nil {return _cgd ;
};switch len (_fgcb ){case 1:_gee .FillColor =_ae .NewPdfColorDeviceGray (_fgcb [0]);case 3:_gee .FillColor =_ae .NewPdfColorDeviceRGB (_fgcb [0],_fgcb [1],_fgcb [2]);case 4:_gee .FillColor =_ae .NewPdfColorDeviceCMYK (_fgcb [0],_fgcb [1],_fgcb [2],_fgcb [3]);
default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_fgcb ));
};};return nil ;};func _eaae (_gdga RectangleAnnotationDef ,_ddce string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_ggee :=_eg .Rectangle {X :0,Y :0,Width :_gdga .Width ,Height :_gdga .Height ,FillEnabled :_gdga .FillEnabled ,FillColor :_gdga .FillColor ,BorderEnabled :_gdga .BorderEnabled ,BorderWidth :2*_gdga .BorderWidth ,BorderColor :_gdga .BorderColor ,Opacity :_gdga .Opacity };
_cfa ,_edcg ,_efaa :=_ggee .Draw (_ddce );if _efaa !=nil {return nil ,nil ,nil ,_efaa ;};_aeeag :=&_ae .PdfRectangle {};_aeeag .Llx =_gdga .X +_edcg .Llx ;_aeeag .Lly =_gdga .Y +_edcg .Lly ;_aeeag .Urx =_gdga .X +_edcg .Urx ;_aeeag .Ury =_gdga .Y +_edcg .Ury ;
return _cfa ,_edcg ,_aeeag ,nil ;};const (_ebg =1;_bbac =2;_dbf =4;_ddf =8;_ddfe =16;_aab =32;_ecaa =64;_daf =128;_cebg =256;_abc =512;_gfag =1024;_aeedd =2048;_aaed =4096;);func _fffd (_fcab *InkAnnotationDef )(*_bf .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_cegf :=_ae .NewXObjectForm ();
_bga ,_aacae ,_adac :=_adc (_fcab );if _adac !=nil {return nil ,nil ,_adac ;};_adac =_cegf .SetContentStream (_bga ,nil );if _adac !=nil {return nil ,nil ,_adac ;};_cegf .BBox =_aacae .ToPdfObject ();_cegf .Resources =_ae .NewPdfPageResources ();_cegf .Resources .ProcSet =_bf .MakeArray (_bf .MakeName ("\u0050\u0044\u0046"));
_cabe :=_bf .MakeDict ();_cabe .Set ("\u004e",_cegf .ToPdfObject ());return _cabe ,_aacae ,nil ;};

// FormResetActionOptions holds options for creating a form reset button.
type FormResetActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _eg .Rectangle ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ae .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ae .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be resetted.
// This list may contain indirect object to fields or field names.
Fields *_bf .PdfObjectArray ;

// IsExclusionList specifies that the fields in the `Fields` array would be excluded form reset process.
IsExclusionList bool ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_ged *AppearanceStyle ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_ae .PdfAnnotation ,error ){_ecfe :=_ae .NewPdfAnnotationInk ();_ggbd :=_bf .MakeArray ();for _ ,_bcde :=range inkDef .Paths {if _bcde .Length ()==0{continue ;};_bbeb :=[]float64 {};for _ ,_bfed :=range _bcde .Points {_bffb :=_b .RoundDefault (_bfed .X );
_baaa :=_b .RoundDefault (_bfed .Y );_bbeb =append (_bbeb ,_bffb ,_baaa );};_ggbd .Append (_bf .MakeArrayFromFloats (_bbeb ));};_ecfe .InkList =_ggbd ;if inkDef .Color ==nil {inkDef .Color =_ae .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_ecfe .C =_bf .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_ccda ,_gggc ,_fafc :=_fffd (&inkDef );if _fafc !=nil {return nil ,_fafc ;};_ecfe .AP =_ccda ;_ecfe .Rect =_bf .MakeArrayFromFloats ([]float64 {_gggc .Llx ,_gggc .Lly ,_gggc .Urx ,_gggc .Ury });return _ecfe .PdfAnnotation ,nil ;};const (_gb quadding =0;
_ffed quadding =1;_bg quadding =2;_caf float64 =2.0;);

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_dcc *AppearanceStyle ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// SetStyle applies appearance `style` to `fa`.
func (_gfgb *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_gfgb ._dcc =&style };func _ddg (_aegc *_a .ContentCreator ,_aegca AppearanceStyle ,_dgde ,_gbfa float64 ){_aegc .Add_q ().Add_re (0,0,_dgde ,_gbfa ).Add_w (_aegca .BorderSize ).SetStrokingColor (_aegca .BorderColor ).SetNonStrokingColor (_aegca .FillColor ).Add_B ().Add_Q ();
};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ae .PdfAnnotation ,error ){_cabbc :=_ae .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_bfee ,_babd ,_fdbeg :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_cabbc .C =_bf .MakeArrayFromFloats ([]float64 {_bfee ,_babd ,_fdbeg });_fcce :=_ae .NewBorderStyle ();_fcce .SetBorderWidth (rectDef .BorderWidth );_cabbc .BS =_fcce .ToPdfObject ();};if rectDef .FillEnabled {_fgda ,_dged ,_ccaba :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_cabbc .IC =_bf .MakeArrayFromFloats ([]float64 {_fgda ,_dged ,_ccaba });}else {_cabbc .IC =_bf .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_cabbc .CA =_bf .MakeFloat (rectDef .Opacity );};_gde ,_cgcac ,_bccb :=_gccd (rectDef );if _bccb !=nil {return nil ,_bccb ;
};_cabbc .AP =_gde ;_cabbc .Rect =_bf .MakeArrayFromFloats ([]float64 {_cgcac .Llx ,_cgcac .Lly ,_cgcac .Urx ,_cgcac .Ury });return _cabbc .PdfAnnotation ,nil ;};func _aeg (_fadc *_ae .PdfField ,_ecb ,_aece float64 ,_gcad string ,_bfgg AppearanceStyle ,_fdbe *_a .ContentStreamOperations ,_cbdb *_ae .PdfPageResources ,_dcad *_bf .PdfObjectDictionary )(*_ae .XObjectForm ,error ){_fage :=_ae .NewPdfPageResources ();
_ccad ,_cbca :=_ecb ,_aece ;_agbe :=_a .NewContentCreator ();if _bfgg .BorderSize > 0{_ddg (_agbe ,_bfgg ,_ecb ,_aece );};if _bfgg .DrawAlignmentReticle {_edg :=_bfgg ;_edg .BorderSize =0.2;_eea (_agbe ,_edg ,_ecb ,_aece );};_agbe .Add_BMC ("\u0054\u0078");
_agbe .Add_q ();_agbe .Add_BT ();_ecb ,_aece =_bfgg .applyRotation (_dcad ,_ecb ,_aece ,_agbe );_ccd ,_dfg ,_faab :=_bfgg .processDA (_fadc ,_fdbe ,_cbdb ,_fage ,_agbe );if _faab !=nil {return nil ,_faab ;};_gafb :=_ccd .Font ;_acc :=_ccd .Size ;_gec :=_bf .MakeName (_ccd .Name );
_ddb :=_acc ==0;if _ddb &&_dfg {_acc =_aece *_bfgg .AutoFontSizeFraction ;};_bcfb :=_gafb .Encoder ();if _bcfb ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bcfb =_fg .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_gcad )==0{return nil ,nil ;};_gcae :=_caf ;if _bfgg .MarginLeft !=nil {_gcae =*_bfgg .MarginLeft ;};_eag :=0.0;if _bcfb !=nil {for _ ,_dbea :=range _gcad {_ecc ,_cabb :=_gafb .GetRuneMetrics (_dbea );
if !_cabb {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_dbea );
continue ;};_eag +=_ecc .Wx ;};_gcad =string (_bcfb .Encode (_gcad ));};if _acc ==0||_ddb &&_eag > 0&&_gcae +_eag *_acc /1000.0> _ecb {_acc =0.95*1000.0*(_ecb -_gcae )/_eag ;};_ggd :=1.0*_acc ;_aacb :=2.0;{_dcba :=_ggd ;if _ddb &&_aacb +_dcba > _aece {_acc =0.95*(_aece -_aacb );
_ggd =1.0*_acc ;_dcba =_ggd ;};if _aece > _dcba {_aacb =(_aece -_dcba )/2.0;_aacb +=1.50;};};_agbe .Add_Tf (*_gec ,_acc );_agbe .Add_Td (_gcae ,_aacb );_agbe .Add_Tj (*_bf .MakeString (_gcad ));_agbe .Add_ET ();_agbe .Add_Q ();_agbe .Add_EMC ();_bea :=_ae .NewXObjectForm ();
_bea .Resources =_fage ;_bea .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_ccad ,_cbca });_bea .SetContentStream (_agbe .Bytes (),_bcdc ());return _bea ,nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ae .PdfAnnotation ,error ){_bcd :=_ae .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ee ,_dg ,_bfd :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_bcd .C =_bf .MakeArrayFromFloats ([]float64 {_ee ,_dg ,_bfd });
_c :=_ae .NewBorderStyle ();_c .SetBorderWidth (circDef .BorderWidth );_bcd .BS =_c .ToPdfObject ();};if circDef .FillEnabled {_fc ,_ea ,_gf :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_bcd .IC =_bf .MakeArrayFromFloats ([]float64 {_fc ,_ea ,_gf });
}else {_bcd .IC =_bf .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_bcd .CA =_bf .MakeFloat (circDef .Opacity );};_ga ,_ge ,_ag :=_bd (circDef );if _ag !=nil {return nil ,_ag ;};_bcd .AP =_ga ;_bcd .Rect =_bf .MakeArrayFromFloats ([]float64 {_ge .Llx ,_ge .Lly ,_ge .Urx ,_ge .Ury });
return _bcd .PdfAnnotation ,nil ;};func _eece (_gbgba *_ae .PdfFieldButton ,_ebe *_ae .PdfAnnotationWidget ,_efbd AppearanceStyle )(*_bf .PdfObjectDictionary ,error ){_cead ,_cfea :=_bf .GetArray (_ebe .Rect );if !_cfea {return nil ,_bcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_agec ,_ecdb :=_ae .NewPdfRectangle (*_cead );if _ecdb !=nil {return nil ,_ecdb ;};_afbb ,_bgde :=_agec .Width (),_agec .Height ();_deddc :=_a .NewContentCreator ();if _efbd .BorderSize > 0{_ddg (_deddc ,_efbd ,_afbb ,_bgde );};if _efbd .DrawAlignmentReticle {_abdbc :=_efbd ;
_abdbc .BorderSize =0.2;_eea (_deddc ,_abdbc ,_afbb ,_bgde );};_aefa :=_gbgba .GetFillImage ();_cdgb ,_ecdb :=_ebbg (_afbb ,_bgde ,_aefa ,_efbd );if _ecdb !=nil {return nil ,_ecdb ;};_eaeba ,_cbee :=_bf .GetDict (_ebe .MK );if _cbee {_eaeba .Set ("\u006c",_cdgb .ToPdfObject ());
};_gafa :=_bf .MakeDict ();_gafa .Set ("\u0046\u0052\u004d",_cdgb .ToPdfObject ());_bbbg :=_ae .NewPdfPageResources ();_bbbg .ProcSet =_bf .MakeArray (_bf .MakeName ("\u0050\u0044\u0046"));_bbbg .XObject =_gafa ;_fed :=_afbb -2;_bgf :=_bgde -2;_deddc .Add_q ();
_deddc .Add_re (1,1,_fed ,_bgf );_deddc .Add_W ();_deddc .Add_n ();_fed -=2;_bgf -=2;_deddc .Add_q ();_deddc .Add_re (2,2,_fed ,_bgf );_deddc .Add_W ();_deddc .Add_n ();_gdg :=_gd .Min (_fed /float64 (_aefa .Width ),_bgf /float64 (_aefa .Height ));_deddc .Add_cm (_gdg ,0,0,_gdg ,(_afbb /2)-(float64 (_aefa .Width )*_gdg /2)+2,2);
_deddc .Add_Do ("\u0046\u0052\u004d");_deddc .Add_Q ();_deddc .Add_Q ();_fcae :=_ae .NewXObjectForm ();_fcae .FormType =_bf .MakeInteger (1);_fcae .Resources =_bbbg ;_fcae .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_afbb ,_bgde });_fcae .Matrix =_bf .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});
_fcae .SetContentStream (_deddc .Bytes (),_bcdc ());_babg :=_bf .MakeDict ();_babg .Set ("\u004e",_fcae .ToPdfObject ());return _babg ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;

// TextColor defines the color of the text in hex format. e.g #43fd23.
// If it has an invalid value a #000000 (black) color is taken as default
TextColor string ;

// FontName defines the font of the text. Helvetica font is the default one.
// It is recommended to use one of 14 standard PDF fonts.
FontName string ;

// FontSize defines the font size of the text, 12 is used by default.
FontSize int ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bfea ImageFieldAppearance )WrapContentStream (page *_ae .PdfPage )error {_badf ,_ddff :=page .GetAllContentStreams ();if _ddff !=nil {return _ddff ;};_defd :=_a .NewContentStreamParser (_badf );_acae ,_ddff :=_defd .Parse ();if _ddff !=nil {return _ddff ;
};_acae .WrapIfNeeded ();_dedg :=[]string {_acae .String ()};return page .SetContentStreams (_dedg ,_bcdc ());};func (_gabe *AppearanceStyle )applyRotation (_fea *_bf .PdfObjectDictionary ,_gbca ,_fccd float64 ,_eaga *_a .ContentCreator )(float64 ,float64 ){if !_gabe .AllowMK {return _gbca ,_fccd ;
};if _fea ==nil {return _gbca ,_fccd ;};_edd ,_ :=_bf .GetNumberAsFloat (_fea .Get ("\u0052"));if _edd ==0{return _gbca ,_fccd ;};_bfdb :=-_edd ;_ebc :=_eg .Path {Points :[]_eg .Point {_eg .NewPoint (0,0).Rotate (_bfdb ),_eg .NewPoint (_gbca ,0).Rotate (_bfdb ),_eg .NewPoint (0,_fccd ).Rotate (_bfdb ),_eg .NewPoint (_gbca ,_fccd ).Rotate (_bfdb )}}.GetBoundingBox ();
_eaga .RotateDeg (_edd );_eaga .Translate (_ebc .X ,_ebc .Y );return _ebc .Width ,_ebc .Height ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// FormSubmitActionOptions holds options for creating a form submit button.
type FormSubmitActionOptions struct{

// Rectangle holds the button position, size, and color.
Rectangle _eg .Rectangle ;

// Url specifies the URL where the fieds will be submitted.
Url string ;

// Label specifies the text that would be displayed on the button.
Label string ;

// LabelColor specifies the button label color.
LabelColor _ae .PdfColor ;

// Font specifies a font used for rendering the button label.
// When omitted it will fallback to use a Helvetica font.
Font *_ae .PdfFont ;

// FontSize specifies the font size used in rendering the button label.
// The default font size is 12pt.
FontSize *float64 ;

// Fields specifies list of fields that could be submitted.
// This list may contain indirect object to fields or field names.
Fields *_bf .PdfObjectArray ;

// IsExclusionList specifies that the fields contain in `Fields` array would not be submitted.
IsExclusionList bool ;

// IncludeEmptyFields specifies if all fields would be submitted even though it's value is empty.
IncludeEmptyFields bool ;

// SubmitAsPDF specifies that the document shall be submitted as PDF.
// If set then all the other flags shall be ignored.
SubmitAsPDF bool ;};

// FileAnnotationDef holds base information for constructing an file attachment annotation.
type FileAnnotationDef struct{

// Bounding box of the annotation.
X float64 ;Y float64 ;Width float64 ;Height float64 ;

// EmbeddedFile is the file information to be attached.
EmbeddedFile *_ae .EmbeddedFile ;

// Author is the author of the attachment file.
Author string ;

// Subject is the subject of the attachment file.
Subject string ;

// Description of the file attachment that will be displayed as a comment on the PDF reader.
Description string ;

// IconName is The name of an icon that shall be used in displaying the annotation.
// Conforming readers shall provide predefined icon appearances for at least the following standard names:
//
// - Graph
// - PushPin
// - Paperclip
// - Tag
//
// Additional names may be supported as well. Default value: "PushPin".
IconName string ;

// Color is the color of the annotation.
Color *_ae .PdfColorDeviceRGB ;

// CreationDate is the date and time when the file attachment was created.
// If not set, the current time is used.
CreationDate *_g .Time ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ae .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;};func _ebbg (_dadd ,_eecg float64 ,_ebab *_ae .Image ,_fafe AppearanceStyle )(*_ae .XObjectForm ,error ){_ffcc ,_dacb :=_ae .NewXObjectImageFromImage (_ebab ,nil ,_bf .NewFlateEncoder ());
if _dacb !=nil {return nil ,_dacb ;};_ffcc .Decode =_bf .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_bgff :=_ae .NewPdfPageResources ();_bgff .ProcSet =_bf .MakeArray (_bf .MakeName ("\u0050\u0044\u0046"),_bf .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));
_bgff .SetXObjectImageByName (_bf .PdfObjectName ("\u0049\u006d\u0030"),_ffcc );_cfce :=_a .NewContentCreator ();_cfce .Add_q ();_cfce .Add_cm (float64 (_ebab .Width ),0,0,float64 (_ebab .Height ),0,0);_cfce .Add_Do ("\u0049\u006d\u0030");_cfce .Add_Q ();
_cgbg :=_ae .NewXObjectForm ();_cgbg .FormType =_bf .MakeInteger (1);_cgbg .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,float64 (_ebab .Width ),float64 (_ebab .Height )});_cgbg .Resources =_bgff ;_cgbg .SetContentStream (_cfce .Bytes (),_bcdc ());return _cgbg ,nil ;
};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ae .PdfAnnotation ,error ){_ccab :=_ae .NewPdfAnnotationLine ();_ccab .L =_bf .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_eaega :=_bf .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_eg .LineEndingStyleArrow {_eaega =_bf .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_aafc :=_bf .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_eg .LineEndingStyleArrow {_aafc =_bf .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_ccab .LE =_bf .MakeArray (_eaega ,_aafc );if lineDef .Opacity < 1.0{_ccab .CA =_bf .MakeFloat (lineDef .Opacity );};_dgfb ,_cdbag ,_aabb :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_ccab .IC =_bf .MakeArrayFromFloats ([]float64 {_dgfb ,_cdbag ,_aabb });
_ccab .C =_bf .MakeArrayFromFloats ([]float64 {_dgfb ,_cdbag ,_aabb });_agad :=_ae .NewBorderStyle ();_agad .SetBorderWidth (lineDef .LineWidth );_ccab .BS =_agad .ToPdfObject ();_bcgf ,_gdbf ,_febb :=_abcg (lineDef );if _febb !=nil {return nil ,_febb ;
};_ccab .AP =_bcgf ;_ccab .Rect =_bf .MakeArrayFromFloats ([]float64 {_gdbf .Llx ,_gdbf .Lly ,_gdbf .Urx ,_gdbf .Ury });return _ccab .PdfAnnotation ,nil ;};func _bcc (_bbb *_ae .PdfAnnotationWidget ,_cdd *_ae .PdfFieldButton ,_cgfe *_ae .PdfPageResources ,_gege AppearanceStyle )(*_bf .PdfObjectDictionary ,error ){_bcdg ,_abgg :=_bf .GetArray (_bbb .Rect );
if !_abgg {return nil ,_bcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gacc ,_cdda :=_ae .NewPdfRectangle (*_bcdg );if _cdda !=nil {return nil ,_cdda ;};_cdf ,_fcfd :=_gacc .Width (),_gacc .Height ();_abdb ,_aac :=_cdf ,_fcfd ;
_d .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_bbb .BS );_afbd ,_cdda :=_ae .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _cdda !=nil {return nil ,_cdda ;
};_cgc ,_bag :=_bf .GetDict (_bbb .MK );if _bag {_egdb ,_ :=_bf .GetDict (_bbb .BS );_bbd :=_gege .applyAppearanceCharacteristics (_cgc ,_egdb ,_afbd );if _bbd !=nil {return nil ,_bbd ;};};_gfe :=_ae .NewXObjectForm ();{_aaf :=_a .NewContentCreator ();
if _gege .BorderSize > 0{_ddg (_aaf ,_gege ,_cdf ,_fcfd );};if _gege .DrawAlignmentReticle {_fcc :=_gege ;_fcc .BorderSize =0.2;_eea (_aaf ,_fcc ,_cdf ,_fcfd );};_cdf ,_fcfd =_gege .applyRotation (_cgc ,_cdf ,_fcfd ,_aaf );_dga :=_gege .AutoFontSizeFraction *_fcfd ;
_faee ,_gefg :=_afbd .GetRuneMetrics (_gege .CheckmarkRune );if !_gefg {return nil ,_bcf .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dba :=_afbd .Encoder ();_dagd :=_dba .Encode (string (_gege .CheckmarkRune ));
_gfbc :=_faee .Wx *_dga /1000.0;_egf :=705.0;_acgc :=_egf /1000.0*_dga ;_eaff :=_caf ;if _gege .MarginLeft !=nil {_eaff =*_gege .MarginLeft ;};_fgb :=1.0;if _gfbc < _cdf {_eaff =(_cdf -_gfbc )/2.0;};if _acgc < _fcfd {_fgb =(_fcfd -_acgc )/2.0;};_aaf .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_dga ).Add_Td (_eaff ,_fgb ).Add_Tj (*_bf .MakeStringFromBytes (_dagd )).Add_ET ().Add_Q ();
_gfe .Resources =_ae .NewPdfPageResources ();_gfe .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_afbd .ToPdfObject ());_gfe .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_abdb ,_aac });_gfe .SetContentStream (_aaf .Bytes (),_bcdc ());};_bcg :=_ae .NewXObjectForm ();
{_adg :=_a .NewContentCreator ();if _gege .BorderSize > 0{_ddg (_adg ,_gege ,_cdf ,_fcfd );};_bcg .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_abdb ,_aac });_bcg .SetContentStream (_adg .Bytes (),_bcdc ());};_gfba :=_bf .PdfObjectName ("\u0059\u0065\u0073");
_aebd ,_bag :=_bf .GetDict (_bbb .PdfAnnotation .AP );if _bag &&_aebd !=nil {_cef :=_bf .TraceToDirectObject (_aebd .Get ("\u004e"));switch _ded :=_cef .(type ){case *_bf .PdfObjectDictionary :_ede :=_ded .Keys ();for _ ,_aebe :=range _ede {if _aebe !="\u004f\u0066\u0066"{_gfba =_aebe ;
};};};};_eafa :=_bf .MakeDict ();_eafa .Set ("\u004f\u0066\u0066",_bcg .ToPdfObject ());_eafa .Set (_gfba ,_gfe .ToPdfObject ());_afcfg :=_bf .MakeDict ();_afcfg .Set ("\u004e",_eafa );return _afcfg ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ae .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ae .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ae .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ae .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _bc .Image ;

// Image represents the image used for the signature appearance.
Image _bc .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _bf .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};type quadding int ;func _cdb (_bffc *_ae .PdfAnnotationWidget ,_egdd *_ae .PdfFieldText ,_bec *_ae .PdfPageResources ,_afcf AppearanceStyle )(*_bf .PdfObjectDictionary ,error ){_baa :=_ae .NewPdfPageResources ();
_fcbg ,_dfd :=_bf .GetArray (_bffc .Rect );if !_dfd {return nil ,_bcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bbcc ,_ggb :=_ae .NewPdfRectangle (*_fcbg );if _ggb !=nil {return nil ,_ggb ;};_fba ,_aa :=_bbcc .Width (),_bbcc .Height ();
_bgd ,_fae :=_fba ,_aa ;_gef ,_fef :=_bf .GetDict (_bffc .MK );if _fef {_gcdd ,_ :=_bf .GetDict (_bffc .BS );_gfa :=_afcf .applyAppearanceCharacteristics (_gef ,_gcdd ,nil );if _gfa !=nil {return nil ,_gfa ;};};_add ,_fef :=_bf .GetIntVal (_egdd .MaxLen );
if !_fef {return nil ,_bcf .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _add <=0{return nil ,_bcf .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cdba :=_fba /float64 (_add );
_ddc ,_ggb :=_a .NewContentStreamParser (_fgc (_egdd .PdfField )).Parse ();if _ggb !=nil {return nil ,_ggb ;};_fcg :=_a .NewContentCreator ();if _afcf .BorderSize > 0{_ddg (_fcg ,_afcf ,_fba ,_aa );};if _afcf .DrawAlignmentReticle {_fdb :=_afcf ;_fdb .BorderSize =0.2;
_eea (_fcg ,_fdb ,_fba ,_aa );};_fcg .Add_BMC ("\u0054\u0078");_fcg .Add_q ();_ ,_aa =_afcf .applyRotation (_gef ,_fba ,_aa ,_fcg );_fcg .Add_BT ();_agfd ,_bfb ,_ggb :=_afcf .processDA (_egdd .PdfField ,_ddc ,_bec ,_baa ,_fcg );if _ggb !=nil {return nil ,_ggb ;
};_def :=_agfd .Font ;_cee :=_bf .MakeName (_agfd .Name );_adda :=_agfd .Size ;_gabf :=_adda ==0;if _gabf &&_bfb {_adda =_aa *_afcf .AutoFontSizeFraction ;};_dcb :=_def .Encoder ();if _dcb ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_dcb =_fg .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ccec string ;if _aff ,_ace :=_bf .GetString (_egdd .V );_ace {_ccec =_aff .Decoded ();};_fcg .Add_Tf (*_cee ,_adda );var _aeea float64 ;for _ ,_bggc :=range _ccec {_ece ,_ggbb :=_def .GetRuneMetrics (_bggc );
if !_ggbb {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_bggc );
continue ;};_defe :=_ece .Wy ;if int (_defe )<=0{_defe =_ece .Wx ;};if _defe > _aeea {_aeea =_defe ;};};if int (_aeea )==0{_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_aeea =1000;};_fbf ,_ggb :=_def .GetFontDescriptor ();if _ggb !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _gfc float64 ;if _fbf !=nil {_gfc ,_ggb =_fbf .GetCapHeight ();if _ggb !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ggb );
};};if int (_gfc )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_gfc =1000.0;};_addf :=_gfc /1000.0*_adda ;_cfe :=0.0;_abd :=1.0*_adda *(_aeea /1000.0);{_dbc :=_abd ;if _gabf &&_cfe +_dbc > _aa {_adda =0.95*(_aa -_cfe );_addf =_gfc /1000.0*_adda ;};if _aa > _addf {_cfe =(_aa -_addf )/2.0;};};_fcg .Add_Td (0,_cfe );
if _geb ,_ggab :=_bf .GetIntVal (_egdd .Q );_ggab {switch _geb {case 2:if len (_ccec )< _add {_ccb :=float64 (_add -len (_ccec ))*_cdba ;_fcg .Add_Td (_ccb ,0);};};};for _acg ,_dfee :=range _ccec {_dfce :=_caf ;if _afcf .MarginLeft !=nil {_dfce =*_afcf .MarginLeft ;
};_agge :=string (_dfee );if _dcb !=nil {_cff ,_bdad :=_def .GetRuneMetrics (_dfee );if !_bdad {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_dfee );
continue ;};_agge =string (_dcb .Encode (_agge ));_fecd :=_adda *_cff .Wx /1000.0;_cgb :=(_cdba -_fecd )/2;_dfce =_cgb ;};_fcg .Add_Td (_dfce ,0);_fcg .Add_Tj (*_bf .MakeString (_agge ));if _acg !=len (_ccec )-1{_fcg .Add_Td (_cdba -_dfce ,0);};};_fcg .Add_ET ();
_fcg .Add_Q ();_fcg .Add_EMC ();_gbc :=_ae .NewXObjectForm ();_gbc .Resources =_baa ;_gbc .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_bgd ,_fae });_gbc .SetContentStream (_fcg .Bytes (),_bcdc ());_cbcf :=_bf .MakeDict ();_cbcf .Set ("\u004e",_gbc .ToPdfObject ());
return _cbcf ,nil ;};func _gccd (_bggcb RectangleAnnotationDef )(*_bf .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_abde :=_ae .NewXObjectForm ();_abde .Resources =_ae .NewPdfPageResources ();_eceee :="";if _bggcb .Opacity < 1.0{_bbgf :=_bf .MakeDict ();
_bbgf .Set ("\u0063\u0061",_bf .MakeFloat (_bggcb .Opacity ));_bbgf .Set ("\u0043\u0041",_bf .MakeFloat (_bggcb .Opacity ));_egba :=_abde .Resources .AddExtGState ("\u0067\u0073\u0031",_bbgf );if _egba !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_egba ;};_eceee ="\u0067\u0073\u0031";};_eegd ,_egcb ,_cbf ,_cbgg :=_eaae (_bggcb ,_eceee );if _cbgg !=nil {return nil ,nil ,_cbgg ;};_cbgg =_abde .SetContentStream (_eegd ,nil );if _cbgg !=nil {return nil ,nil ,_cbgg ;};_abde .BBox =_egcb .ToPdfObject ();
_eefe :=_bf .MakeDict ();_eefe .Set ("\u004e",_abde .ToPdfObject ());return _eefe ,_cbf ,nil ;};func _fdde (_ccgg [][]_eg .CubicBezierCurve ,_dbca *_ae .PdfColorDeviceRGB ,_febd float64 )([]byte ,*_ae .PdfRectangle ,error ){_bfad :=_a .NewContentCreator ();
_bfad .Add_q ().SetStrokingColor (_dbca ).Add_w (_febd );_ddcg :=_eg .NewCubicBezierPath ();for _ ,_cdbf :=range _ccgg {_ddcg .Curves =append (_ddcg .Curves ,_cdbf ...);for _dded ,_bgdc :=range _cdbf {if _dded ==0{_bfad .Add_m (_bgdc .P0 .X ,_bgdc .P0 .Y );
}else {_bfad .Add_l (_bgdc .P0 .X ,_bgdc .P0 .Y );};_bfad .Add_c (_bgdc .P1 .X ,_bgdc .P1 .Y ,_bgdc .P2 .X ,_bgdc .P2 .Y ,_bgdc .P3 .X ,_bgdc .P3 .Y );};};_bfad .Add_S ().Add_Q ();return _bfad .Bytes (),_ddcg .GetBoundingBox ().ToPdfRectangle (),nil ;};


// CreateFileAttachmentAnnotation creates a file attachment annotation object that can be added to the annotation list of a PDF page.
func CreateFileAttachmentAnnotation (fileDef FileAnnotationDef )(*_ae .PdfAnnotation ,error ){_edce :=_ae .NewPdfFileSpecFromEmbeddedFile (fileDef .EmbeddedFile );if fileDef .Color ==nil {fileDef .Color =_ae .NewPdfColorDeviceRGB (0.0,0.0,0.0);};if fileDef .Description ==""{fileDef .Description =fileDef .EmbeddedFile .Name ;
};if fileDef .CreationDate ==nil {_bcfgg :=_g .Now ();fileDef .CreationDate =&_bcfgg ;};if fileDef .IconName ==""{fileDef .IconName ="\u0050u\u0073\u0068\u0050\u0069\u006e";};_ebb ,_aba :=_ae .NewPdfDateFromTime (*fileDef .CreationDate );if _aba !=nil {return nil ,_aba ;
};_bca :=_ae .NewPdfAnnotationFileAttachment ();_bca .FS =_edce .ToPdfObject ();_bca .C =_bf .MakeArrayFromFloats ([]float64 {fileDef .Color .R (),fileDef .Color .G (),fileDef .Color .B ()});_bca .Contents =_bf .MakeString (fileDef .Description );_bca .CreationDate =_ebb .ToPdfObject ();
_bca .M =_ebb .ToPdfObject ();_bca .Name =_bf .MakeName (fileDef .IconName );_bca .Rect =_bf .MakeArrayFromFloats ([]float64 {fileDef .X ,fileDef .Y ,fileDef .X +fileDef .Width ,fileDef .Y +fileDef .Height });_bca .T =_bf .MakeString (fileDef .Author );
_bca .Subj =_bf .MakeString (fileDef .Subject );return _bca .PdfAnnotation ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _eg .LineEndingStyle ;LineEndingStyle2 _eg .LineEndingStyle ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ae .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ae .NewPdfColorDeviceGray (0),BorderColor :_ae .NewPdfColorDeviceGray (0),FillColor :_ae .NewPdfColorDeviceGray (1),Encoder :_bf .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};func _ggde (_adbd *_ae .PdfPage ,_aea _eg .Rectangle ,_ceea string ,_dddc string ,_gag _ae .PdfColor ,_bge *_ae .PdfFont ,_gcddg *float64 ,_fefe _bf .PdfObject )(*_ae .PdfFieldButton ,error ){_ggce ,_fggg :=_aea .X ,_aea .Y ;_deed :=_aea .Width ;_dac :=_aea .Height ;
if _aea .FillColor ==nil {_aea .FillColor =_ae .NewPdfColorDeviceGray (0.7);};if _gag ==nil {_gag =_ae .NewPdfColorDeviceGray (0);};if _bge ==nil {_dcgg ,_cbe :=_ae .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _cbe !=nil {return nil ,_cbe ;
};_bge =_dcgg ;};_begd :=_ae .NewPdfField ();_ffef :=&_ae .PdfFieldButton {};_begd .SetContext (_ffef );_ffef .PdfField =_begd ;_ffef .T =_bf .MakeString (_ceea );_ffef .SetType (_ae .ButtonTypePush );_ffef .V =_bf .MakeName ("\u004f\u0066\u0066");_ffef .Ff =_bf .MakeInteger (4);
_cffa :=_bf .MakeDict ();_cffa .Set (*_bf .MakeName ("\u0043\u0041"),_bf .MakeString (_dddc ));_faeb ,_ccdd :=_bge .GetFontDescriptor ();if _ccdd !=nil {return nil ,_ccdd ;};_dddb :=_bf .MakeName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_ffb :=12.0;
if _faeb !=nil &&_faeb .FontName !=nil {_dddb ,_ =_bf .GetName (_faeb .FontName );};if _gcddg !=nil {_ffb =*_gcddg ;};_cbdd :=_a .NewContentCreator ();_cbdd .Add_q ();_cbdd .SetNonStrokingColor (_aea .FillColor );_cbdd .Add_re (0,0,_deed ,_dac );_cbdd .Add_f ();
_cbdd .Add_Q ();_cbdd .Add_q ();_cbdd .Add_BT ();_bbea :=0.0;for _ ,_ccfa :=range _dddc {_fdgc ,_gbgb :=_bge .GetRuneMetrics (_ccfa );if !_gbgb {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ccfa );
continue ;};_bbea +=_fdgc .Wx ;};_bbea =_bbea /1000.0*_ffb ;var _cacg float64 ;if _faeb !=nil {_cacg ,_ccdd =_faeb .GetCapHeight ();if _ccdd !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ccdd );
};};if int (_cacg )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_cacg =1000;};_acbb :=_cacg /1000.0*_ffb ;_ada :=(_dac -_acbb )/2.0;_abef :=(_deed -_bbea )/2.0;_cbdd .Add_Tf (*_dddb ,_ffb );_cbdd .SetNonStrokingColor (_gag );_cbdd .Add_Td (_abef ,_ada );_cbdd .Add_Tj (*_bf .MakeString (_dddc ));_cbdd .Add_ET ();_cbdd .Add_Q ();
_ageg :=_ae .NewXObjectForm ();_ageg .SetContentStream (_cbdd .Bytes (),_bf .NewRawEncoder ());_ageg .BBox =_bf .MakeArrayFromFloats ([]float64 {0,0,_deed ,_dac });_ageg .Resources =_ae .NewPdfPageResources ();_ageg .Resources .SetFontByName (*_dddb ,_bge .ToPdfObject ());
_cgcc :=_bf .MakeDict ();_cgcc .Set ("\u004e",_ageg .ToPdfObject ());_efc :=_ae .NewPdfAnnotationWidget ();_efc .Rect =_bf .MakeArrayFromFloats ([]float64 {_ggce ,_fggg ,_ggce +_deed ,_fggg +_dac });_efc .P =_adbd .ToPdfObject ();_efc .F =_bf .MakeInteger (4);
_efc .Parent =_ffef .ToPdfObject ();_efc .A =_fefe ;_efc .MK =_cffa ;_efc .AP =_cgcc ;_ffef .Annotations =append (_ffef .Annotations ,_efc );return _ffef ,nil ;};func _dgfa (_gfd []_eg .Point )(_fgbf []_eg .Point ,_fbe []_eg .Point ,_fbce error ){_bagf :=len (_gfd )-1;
if len (_gfd )< 1{return nil ,nil ,_bcf .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _bagf ==1{_gbbf :=_eg .Point {X :(2*_gfd [0].X +_gfd [1].X )/3,Y :(2*_gfd [0].Y +_gfd [1].Y )/3};_fgbf =append (_fgbf ,_gbbf );_fbe =append (_fbe ,_eg .Point {X :2*_gbbf .X -_gfd [0].X ,Y :2*_gbbf .Y -_gfd [0].Y });return _fgbf ,_fbe ,nil ;};_feff :=make ([]float64 ,_bagf );
for _eegc :=1;_eegc < _bagf -1;_eegc ++{_feff [_eegc ]=4*_gfd [_eegc ].X +2*_gfd [_eegc +1].X ;};_feff [0]=_gfd [0].X +2*_gfd [1].X ;_feff [_bagf -1]=(8*_gfd [_bagf -1].X +_gfd [_bagf ].X )/2.0;_ecce :=_gcac (_feff );for _bfeae :=1;_bfeae < _bagf -1;_bfeae ++{_feff [_bfeae ]=4*_gfd [_bfeae ].Y +2*_gfd [_bfeae +1].Y ;
};_feff [0]=_gfd [0].Y +2*_gfd [1].Y ;_feff [_bagf -1]=(8*_gfd [_bagf -1].Y +_gfd [_bagf ].Y )/2.0;_fbdf :=_gcac (_feff );_fgbf =make ([]_eg .Point ,_bagf );_fbe =make ([]_eg .Point ,_bagf );for _eaad :=0;_eaad < _bagf ;_eaad ++{_fgbf [_eaad ]=_eg .Point {X :_b .RoundDefault (_ecce [_eaad ]),Y :_b .RoundDefault (_fbdf [_eaad ])};
if _eaad < _bagf -1{_fbe [_eaad ]=_eg .Point {X :_b .RoundDefault (2*_gfd [_eaad +1].X -_ecce [_eaad +1]),Y :_b .RoundDefault (2*_gfd [_eaad +1].Y -_fbdf [_eaad +1])};}else {_fbe [_eaad ]=_eg .Point {X :_b .RoundDefault ((_gfd [_bagf ].X +_ecce [_bagf -1])/2),Y :_b .RoundDefault ((_gfd [_bagf ].Y +_fbdf [_bagf -1])/2)};
};};return _fgbf ,_fbe ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ae .PdfColor ;FillColor _ae .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;TextColor _ae .PdfColor ;

// FieldColors holds separate set of appearance styles for fields.
FieldColors map[string ]_ae .PdfColor ;};