//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_g "errors";_e "github.com/unidoc/freetype/truetype";_ff "github.com/unidoc/unipdf/v3/core";_ce "github.com/unidoc/unipdf/v3/internal/cmap";_fb "github.com/unidoc/unipdf/v3/internal/textencoding";_b "github.com/unidoc/unipdf/v3/internal/transform";
_fg "github.com/unidoc/unipdf/v3/model";_db "golang.org/x/image/font";_c "image";_dg "image/color";_dgd "strconv";_f "strings";);type TextState struct{Tc float64 ;Tw float64 ;Th float64 ;Tl float64 ;Tf *TextFont ;Ts float64 ;Tm _b .Matrix ;Tlm _b .Matrix ;
Tr TextRenderingMode ;GlobalScale float64 ;};func NewTextFont (font *_fg .PdfFont ,size float64 )(*TextFont ,error ){_fab :=font .FontDescriptor ();if _fab ==nil {return nil ,_g .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");
};_bed ,_bdd :=_ff .GetStream (_fab .FontFile2 );if !_bdd {return nil ,_g .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_bdc ,_fba :=_ff .DecodeStream (_bed );
if _fba !=nil {return nil ,_fba ;};_gbb ,_fba :=_e .Parse (_bdc );if _fba !=nil {return nil ,_fba ;};_dgg :=font .FontDescriptor ().FontName .String ();_ffa :=len (_dgg )> 7&&_dgg [6]=='+';if _fab .Flags !=nil {_df ,_cab :=_dgd .Atoi (_fab .Flags .String ());
if _cab ==nil &&_df ==32{_ffa =false ;};};if !_gbb .HasCmap ()&&(!_f .Contains (font .Encoder ().String (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-")||!_ffa ){return nil ,_g .New ("\u006e\u006f c\u006d\u0061\u0070 \u0061\u006e\u0064\u0020enc\u006fdi\u006e\u0067\u0020\u0069\u0073\u0020\u006eot\u0020\u0069\u0064\u0065\u006e\u0074\u0069t\u0079");
};return &TextFont {Font :font ,Size :size ,_efce :_gbb },nil ;};type TextFont struct{Font *_fg .PdfFont ;Size float64 ;_efce *_e .Font ;_cff *_fg .PdfFont ;};func (_gaa *TextFont )WithSize (size float64 ,originalFont *_fg .PdfFont )*TextFont {return &TextFont {Font :_gaa .Font ,Size :size ,_efce :_gaa ._efce ,_cff :originalFont };
};func (_fcc *TextState )Reset (){_fcc .Tm =_b .IdentityMatrix ();_fcc .Tlm =_b .IdentityMatrix ()};type Gradient interface{Pattern ;AddColorStop (_bdg float64 ,_dgc _dg .Color );};type Pattern interface{ColorAt (_bd ,_ef int )_dg .Color ;};const (LineCapRound LineCap =iota ;
LineCapButt ;LineCapSquare ;);func (_ee *TextState )ProcTd (tx ,ty float64 ){_ee .Tlm .Concat (_b .TranslationMatrix (tx ,ty ));_ee .Tm =_ee .Tlm .Clone ();};func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_cbba ,_afe :=_fg .NewPdfFontFromTTFFile (filePath );
if _afe !=nil {return nil ,_afe ;};return NewTextFont (_cbba ,size );};type Context interface{Push ();Pop ();Matrix ()_b .Matrix ;SetMatrix (_ga _b .Matrix );Translate (_ffb ,_cc float64 );Scale (_ea ,_ge float64 );Rotate (_ccc float64 );MoveTo (_efe ,_ca float64 );
LineTo (_cccf ,_be float64 );CubicTo (_fgb ,_eac ,_de ,_bc ,_dc ,_dgce float64 );QuadraticTo (_cf ,_a ,_aa ,_gd float64 );NewSubPath ();ClosePath ();ClearPath ();Clip ();ClipPreserve ();ResetClip ();LineWidth ()float64 ;SetLineWidth (_ag float64 );SetLineCap (_aad LineCap );
SetLineJoin (_bg LineJoin );SetDash (_fgf ...float64 );SetDashOffset (_fa float64 );Fill ();FillPreserve ();Stroke ();StrokePreserve ();SetRGBA (_aga ,_gdf ,_gdc ,_da float64 );SetFillRGBA (_ae ,_cb ,_fff ,_dca float64 );SetFillStyle (_fbg Pattern );SetFillRule (_bf FillRule );
SetStrokeRGBA (_efc ,_aae ,_bcc ,_bgg float64 );SetStrokeStyle (_gf Pattern );FillPattern ()Pattern ;StrokePattern ()Pattern ;TextState ()*TextState ;DrawString (_bde string ,_ffg _db .Face ,_dcc ,_gc float64 );MeasureString (_dga string ,_gea _db .Face )(_af ,_bec float64 );
DrawRectangle (_ac ,_ba ,_cbb ,_afa float64 );DrawImage (_gg _c .Image ,_gb ,_ad int );DrawImageAnchored (_faa _c .Image ,_cd ,_aaef int ,_fae ,_ec float64 );Height ()int ;Width ()int ;};func (_bfg *TextState )Translate (tx ,ty float64 ){_bfg .Tm =_bfg .Tm .Mult (_b .TranslationMatrix (tx ,ty ));
};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;TextRenderingModeFillStroke ;TextRenderingModeInvisible ;TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);
type TextRenderingMode int ;type LineCap int ;type LineJoin int ;func (_gcfc *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_gcfc .Tw =aw ;_gcfc .Tc =ac ;_gcfc .ProcQ (data ,ctx );};func (_cbc *TextFont )BytesToCharcodes (data []byte )[]_fb .CharCode {if _cbc ._cff !=nil {return _cbc ._cff .BytesToCharcodes (data );
};return _cbc .Font .BytesToCharcodes (data );};func (_ab *TextFont )charcodeToRunesSimple (_ggc _fb .CharCode )(_fb .CharCode ,[]rune ){_afg :=[]_fb .CharCode {_ggc };if _ab .Font .IsSimple ()&&_ab ._efce !=nil {if _bfe :=_ab ._efce .Index (rune (_ggc ));
_bfe > 0{return _ggc ,[]rune {rune (_ggc )};};};if _ab ._efce !=nil &&!_ab ._efce .HasCmap ()&&_f .Contains (_ab .Font .Encoder ().String (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-"){if _gcf :=_ab ._efce .Index (rune (_ggc ));_gcf > 0{return _ggc ,[]rune {rune (_ggc )};
};};return _ggc ,_ab .Font .CharcodesToUnicode (_afg );};func (_bfea *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_bfea .Tm =_b .NewMatrix (a ,b ,c ,d ,e ,f );_bfea .Tlm =_bfea .Tm .Clone ();};func (_gfb *TextFont )CharcodeToRunes (charcode _fb .CharCode )(_fb .CharCode ,[]rune ){_dbg :=[]_fb .CharCode {charcode };
if _gfb ._cff ==nil ||_gfb ._cff ==_gfb .Font {return _gfb .charcodeToRunesSimple (charcode );};_cad :=_gfb ._cff .CharcodesToUnicode (_dbg );_dff ,_ :=_gfb .Font .RunesToCharcodeBytes (_cad );_dbb :=_gfb .Font .BytesToCharcodes (_dff );_gfc :=charcode ;
if len (_dbb )> 0&&_dbb [0]!=0{_gfc =_dbb [0];};if string (_cad )==string (_ce .MissingCodeRune )&&_gfb ._cff .BaseFont ()==_gfb .Font .BaseFont (){return _gfb .charcodeToRunesSimple (charcode );};return _gfc ,_cad ;};type FillRule int ;const (LineJoinRound LineJoin =iota ;
LineJoinBevel ;);const (FillRuleWinding FillRule =iota ;FillRuleEvenOdd ;);func (_acg *TextFont )GetCharMetrics (code _fb .CharCode )(float64 ,float64 ,bool ){if _geg ,_gge :=_acg .Font .GetCharMetrics (code );_gge &&_geg .Wx !=0{return _geg .Wx ,_geg .Wy ,_gge ;
};if _acg ._cff ==nil {return 0,0,false ;};_bdcd ,_ccf :=_acg ._cff .GetCharMetrics (code );return _bdcd .Wx ,_bdcd .Wy ,_ccf &&_bdcd .Wx !=0;};func (_gfe *TextState )ProcTf (font *TextFont ){_gfe .Tf =font };func (_bgf *TextFont )NewFace (size float64 )_db .Face {return _e .NewFace (_bgf ._efce ,&_e .Options {Size :size });
};func (_geae *TextState )ProcQ (data []byte ,ctx Context ){_geae .ProcTStar ();_geae .ProcTj (data ,ctx )};func (_bce *TextState )ProcTj (data []byte ,ctx Context ){_adf :=_bce .Tf .Size ;_fbae :=_bce .Th /100.0;_ffc :=_bce .GlobalScale ;_dbgb :=_b .NewMatrix (_adf *_fbae ,0,0,_adf ,0,_bce .Ts );
_aaa :=ctx .Matrix ();_dcb :=_aaa .Clone ().Mult (_bce .Tm .Clone ().Mult (_dbgb )).ScalingFactorY ();_fad :=_bce .Tf .NewFace (_dcb );_acb :=_bce .Tf .BytesToCharcodes (data );for _ ,_fgbc :=range _acb {_afgd ,_dfa :=_bce .Tf .CharcodeToRunes (_fgbc );
_baf :=string (_dfa );if _baf =="\u0000"{continue ;};_dcaa :=_aaa .Clone ().Mult (_bce .Tm .Clone ().Mult (_dbgb ));_eg :=_dcaa .ScalingFactorY ();_dcaa =_dcaa .Scale (1/_eg ,-1/_eg );if _bce .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_dcaa );ctx .DrawString (_baf ,_fad ,0,0);
ctx .SetMatrix (_aaa );};_fac :=0.0;if _baf =="\u0020"{_fac =_bce .Tw ;};_caa ,_ ,_ded :=_bce .Tf .GetCharMetrics (_afgd );if _ded {_caa =_caa *0.001*_adf ;}else {_caa ,_ =ctx .MeasureString (_baf ,_fad );_caa =_caa /_ffc ;};_gaf :=(_caa +_bce .Tc +_fac )*_fbae ;
_bce .Tm =_bce .Tm .Mult (_b .TranslationMatrix (_gaf ,0));};};func (_bdea *TextState )ProcTStar (){_bdea .ProcTd (0,-_bdea .Tl )};func NewTextState ()TextState {return TextState {Th :100,Tm :_b .IdentityMatrix (),Tlm :_b .IdentityMatrix ()};};func (_eb *TextState )ProcTD (tx ,ty float64 ){_eb .Tl =-ty ;
_eb .ProcTd (tx ,ty )};