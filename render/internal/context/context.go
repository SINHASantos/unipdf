//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_fe "errors";_ac "github.com/unidoc/freetype/truetype";_fd "github.com/unidoc/unipdf/v3/core";_de "github.com/unidoc/unipdf/v3/internal/cmap";_gfe "github.com/unidoc/unipdf/v3/internal/textencoding";_e "github.com/unidoc/unipdf/v3/internal/transform";
_c "github.com/unidoc/unipdf/v3/model";_a "golang.org/x/image/font";_gf "image";_b "image/color";_g "strconv";_d "strings";);type Pattern interface{ColorAt (_ed ,_bc int )_b .Color ;};func (_efd *TextFont )WithSize (size float64 ,originalFont *_c .PdfFont )*TextFont {return &TextFont {Font :_efd .Font ,Size :size ,_fdc :_efd ._fdc ,_gcd :originalFont };
};type Context interface{Push ();Pop ();Matrix ()_e .Matrix ;SetMatrix (_ag _e .Matrix );Translate (_cd ,_bcb float64 );Scale (_bd ,_ad float64 );Rotate (_ga float64 );MoveTo (_ge ,_fg float64 );LineTo (_dc ,_ae float64 );CubicTo (_bb ,_adc ,_fb ,_bg ,_aa ,_gb float64 );
QuadraticTo (_be ,_fda ,_gc ,_da float64 );NewSubPath ();ClosePath ();ClearPath ();Clip ();ClipPreserve ();ResetClip ();LineWidth ()float64 ;SetLineWidth (_ba float64 );SetLineCap (_ee LineCap );SetLineJoin (_ce LineJoin );SetDash (_ea ...float64 );SetDashOffset (_eed float64 );
Fill ();FillPreserve ();Stroke ();StrokePreserve ();SetRGBA (_ab ,_bf ,_beb ,_cb float64 );SetFillRGBA (_gac ,_dd ,_eb ,_dce float64 );SetFillStyle (_gee Pattern );SetFillRule (_ceb FillRule );SetStrokeRGBA (_gfb ,_db ,_fee ,_bdf float64 );SetStrokeStyle (_bda Pattern );
FillPattern ()Pattern ;StrokePattern ()Pattern ;TextState ()*TextState ;DrawString (_eeb string ,_cc _a .Face ,_aae ,_ef float64 );MeasureString (_ada string ,_cg _a .Face )(_ddf ,_ccc float64 );DrawRectangle (_afa ,_df ,_gff ,_fc float64 );DrawImage (_gbd _gf .Image ,_cgd ,_gaa int );
DrawImageAnchored (_ged _gf .Image ,_dag ,_dbe int ,_ded ,_def float64 );Height ()int ;Width ()int ;};func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_fcaf ,_cfe :=_c .NewPdfFontFromTTFFile (filePath );if _cfe !=nil {return nil ,_cfe ;
};return NewTextFont (_fcaf ,size );};func (_dgb *TextState )ProcTf (font *TextFont ){_dgb .Tf =font };func (_eedf *TextFont )GetCharMetrics (code _gfe .CharCode )(float64 ,float64 ,bool ){if _dcc ,_ff :=_eedf .Font .GetCharMetrics (code );_ff &&_dcc .Wx !=0{return _dcc .Wx ,_dcc .Wy ,_ff ;
};if _eedf ._gcd ==nil {return 0,0,false ;};_ddb ,_acf :=_eedf ._gcd .GetCharMetrics (code );return _ddb .Wx ,_ddb .Wy ,_acf &&_ddb .Wx !=0;};func (_cbca *TextFont )CharcodeToRunes (charcode _gfe .CharCode )(_gfe .CharCode ,[]rune ){_fga :=[]_gfe .CharCode {charcode };
if _cbca ._gcd ==nil ||_cbca ._gcd ==_cbca .Font {return _cbca .charcodeToRunesSimple (charcode );};_agc :=_cbca ._gcd .CharcodesToUnicode (_fga );_fdf ,_ :=_cbca .Font .RunesToCharcodeBytes (_agc );_abd :=_cbca .Font .BytesToCharcodes (_fdf );_dg :=charcode ;
if len (_abd )> 0&&_abd [0]!=0{_dg =_abd [0];};if string (_agc )==string (_de .MissingCodeRune )&&_cbca ._gcd .BaseFont ()==_cbca .Font .BaseFont (){return _cbca .charcodeToRunesSimple (charcode );};return _dg ,_agc ;};type TextRenderingMode int ;type TextState struct{Tc float64 ;
Tw float64 ;Th float64 ;Tl float64 ;Tf *TextFont ;Ts float64 ;Tm _e .Matrix ;Tlm _e .Matrix ;Tr TextRenderingMode ;GlobalScale float64 ;};func (_cce *TextState )ProcTD (tx ,ty float64 ){_cce .Tl =-ty ;_cce .ProcTd (tx ,ty )};const (FillRuleWinding FillRule =iota ;
FillRuleEvenOdd ;);func NewTextFont (font *_c .PdfFont ,size float64 )(*TextFont ,error ){_bga :=font .FontDescriptor ();if _bga ==nil {return nil ,_fe .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");
};_cebf ,_fcc :=_fd .GetStream (_bga .FontFile2 );if !_fcc {return nil ,_fe .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_cgde ,_gg :=_fd .DecodeStream (_cebf );
if _gg !=nil {return nil ,_gg ;};_bdg ,_gg :=_ac .Parse (_cgde );if _gg !=nil {return nil ,_gg ;};_fcd :=font .FontDescriptor ().FontName .String ();_dfd :=len (_fcd )> 7&&_fcd [6]=='+';if _bga .Flags !=nil {_efg ,_fca :=_g .Atoi (_bga .Flags .String ());
if _fca ==nil &&_efg ==32{_dfd =false ;};};if !_bdg .HasCmap ()&&(!_d .Contains (font .Encoder ().String (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-")||!_dfd ){return nil ,_fe .New ("\u006e\u006f c\u006d\u0061\u0070 \u0061\u006e\u0064\u0020enc\u006fdi\u006e\u0067\u0020\u0069\u0073\u0020\u006eot\u0020\u0069\u0064\u0065\u006e\u0074\u0069t\u0079");
};return &TextFont {Font :font ,Size :size ,_fdc :_bdg },nil ;};type TextFont struct{Font *_c .PdfFont ;Size float64 ;_fdc *_ac .Font ;_gcd *_c .PdfFont ;};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;TextRenderingModeFillStroke ;
TextRenderingModeInvisible ;TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);const (LineCapRound LineCap =iota ;LineCapButt ;LineCapSquare ;);func (_efdb *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_efdb .Tm =_e .NewMatrix (a ,b ,c ,d ,e ,f );
_efdb .Tlm =_efdb .Tm .Clone ();};func (_bee *TextState )Translate (tx ,ty float64 ){_bee .Tm =_bee .Tm .Mult (_e .TranslationMatrix (tx ,ty ));};const (LineJoinRound LineJoin =iota ;LineJoinBevel ;);func (_aba *TextFont )charcodeToRunesSimple (_gaf _gfe .CharCode )(_gfe .CharCode ,[]rune ){_bge :=[]_gfe .CharCode {_gaf };
if _aba .Font .IsSimple ()&&_aba ._fdc !=nil {if _afc :=_aba ._fdc .Index (rune (_gaf ));_afc > 0{return _gaf ,[]rune {rune (_gaf )};};};if _aba ._fdc !=nil &&!_aba ._fdc .HasCmap ()&&_d .Contains (_aba .Font .Encoder ().String (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-"){if _fgg :=_aba ._fdc .Index (rune (_gaf ));
_fgg > 0{return _gaf ,[]rune {rune (_gaf )};};};return _gaf ,_aba .Font .CharcodesToUnicode (_bge );};func (_ccg *TextState )ProcTd (tx ,ty float64 ){_ccg .Tlm .Concat (_e .TranslationMatrix (tx ,ty ));_ccg .Tm =_ccg .Tlm .Clone ();};func (_cfef *TextState )ProcTStar (){_cfef .ProcTd (0,-_cfef .Tl )};
func (_gea *TextState )ProcQ (data []byte ,ctx Context ){_gea .ProcTStar ();_gea .ProcTj (data ,ctx )};type LineCap int ;type Gradient interface{Pattern ;AddColorStop (_cf float64 ,_af _b .Color );};func (_cbc *TextFont )NewFace (size float64 )_a .Face {return _ac .NewFace (_cbc ._fdc ,&_ac .Options {Size :size });
};func NewTextState ()TextState {return TextState {Th :100,Tm :_e .IdentityMatrix (),Tlm :_e .IdentityMatrix ()};};type LineJoin int ;type FillRule int ;func (_ca *TextFont )BytesToCharcodes (data []byte )[]_gfe .CharCode {if _ca ._gcd !=nil {return _ca ._gcd .BytesToCharcodes (data );
};return _ca .Font .BytesToCharcodes (data );};func (_eda *TextState )ProcTj (data []byte ,ctx Context ){_cga :=_eda .Tf .Size ;_cbcb :=_eda .Th /100.0;_cee :=_eda .GlobalScale ;_dec :=_e .NewMatrix (_cga *_cbcb ,0,0,_cga ,0,_eda .Ts );_cgg :=ctx .Matrix ();
_acg :=_cgg .Clone ().Mult (_eda .Tm .Clone ().Mult (_dec )).ScalingFactorY ();_bcbg :=_eda .Tf .NewFace (_acg );_fa :=_eda .Tf .BytesToCharcodes (data );for _ ,_fea :=range _fa {_fac ,_cgad :=_eda .Tf .CharcodeToRunes (_fea );_fdfg :=string (_cgad );if _fdfg =="\u0000"{continue ;
};_aag :=_cgg .Clone ().Mult (_eda .Tm .Clone ().Mult (_dec ));_dda :=_aag .ScalingFactorY ();_aag =_aag .Scale (1/_dda ,-1/_dda );if _eda .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_aag );ctx .DrawString (_fdfg ,_bcbg ,0,0);ctx .SetMatrix (_cgg );
};_bbb :=0.0;if _fdfg =="\u0020"{_bbb =_eda .Tw ;};_cdd ,_ ,_afe :=_eda .Tf .GetCharMetrics (_fac );if _afe {_cdd =_cdd *0.001*_cga ;}else {_cdd ,_ =ctx .MeasureString (_fdfg ,_bcbg );_cdd =_cdd /_cee ;};_bag :=(_cdd +_eda .Tc +_bbb )*_cbcb ;_eda .Tm =_eda .Tm .Mult (_e .TranslationMatrix (_bag ,0));
};};func (_abaa *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_abaa .Tw =aw ;_abaa .Tc =ac ;_abaa .ProcQ (data ,ctx );};func (_fbc *TextState )Reset (){_fbc .Tm =_e .IdentityMatrix ();_fbc .Tlm =_e .IdentityMatrix ()};