//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_d "errors";_e "fmt";_acc "github.com/unidoc/freetype/raster";_bd "github.com/unidoc/unipdf/v3/common";_ac "github.com/unidoc/unipdf/v3/internal/transform";_dc "github.com/unidoc/unipdf/v3/render/internal/context";_ea "golang.org/x/image/draw";
_da "golang.org/x/image/font";_db "golang.org/x/image/math/f64";_ad "golang.org/x/image/math/fixed";_b "image";_cb "image/color";_ff "image/draw";_f "math";_fc "sort";_c "strings";);func NewContext (width ,height int )*Context {return NewContextForRGBA (_b .NewRGBA (_b .Rect (0,0,width ,height )));
};func (_cba *Context )SetFillRule (fillRule _dc .FillRule ){_cba ._ddee =fillRule };func (_dcf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_dcf ._bge {_dcf .MoveTo (x1 ,y1 );};_gfg ,_dcb :=_dcf ._aa .X ,_dcf ._aa .Y ;x1 ,y1 =_dcf .Transform (x1 ,y1 );
x2 ,y2 =_dcf .Transform (x2 ,y2 );x3 ,y3 =_dcf .Transform (x3 ,y3 );_fca :=_efff (_gfg ,_dcb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_gcba :=_abd (_dcf ._aa );for _ ,_ebd :=range _fca [1:]{_ggf :=_abd (_ebd );if _ggf ==_gcba {continue ;};_gcba =_ggf ;_dcf ._faa .Add1 (_ggf );
_dcf ._fdf .Add1 (_ggf );_dcf ._aa =_ebd ;};};type solidPattern struct{_adae _cb .Color };func (_ecd *Context )NewSubPath (){if _ecd ._bge {_ecd ._fdf .Add1 (_abd (_ecd ._dg ));};_ecd ._bge =false ;};func (_gae *Context )Transform (x ,y float64 )(_ccg ,_acba float64 ){return _gae ._dbf .Transform (x ,y )};
func _bfa (_dbab ,_gcf _cb .Color ,_dcbf float64 )_cb .Color {_bfe ,_cfeg ,_effg ,_afbg :=_dbab .RGBA ();_fgbc ,_gcfa ,_gge ,_dfcd :=_gcf .RGBA ();return _cb .RGBA {_aeb (_bfe ,_fgbc ,_dcbf ),_aeb (_cfeg ,_gcfa ,_dcbf ),_aeb (_effg ,_gge ,_dcbf ),_aeb (_afbg ,_dfcd ,_dcbf )};
};func _eae (_bad ,_cdgb ,_eff ,_dfd ,_fbaa ,_fbb ,_bg ,_ffa ,_ce float64 )(_dde ,_gcb float64 ){_dbb :=1-_ce ;_cg :=_dbb *_dbb *_dbb ;_fd :=3*_dbb *_dbb *_ce ;_bgf :=3*_dbb *_ce *_ce ;_bf :=_ce *_ce *_ce ;_dde =_cg *_bad +_fd *_eff +_bgf *_fbaa +_bf *_bg ;
_gcb =_cg *_cdgb +_fd *_dfd +_bgf *_fbb +_bf *_ffa ;return ;};func (_eeb *Context )SetRGB (r ,g ,b float64 ){_eeb .SetRGBA (r ,g ,b ,1)};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_dc .Gradient {_efa :=&linearGradient {_gega :x0 ,_aaa :y0 ,_baa :x1 ,_agf :y1 };
return _efa ;};func (_aaea *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_aaea .NewSubPath ();_aaea .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_f .Pi );_aaea .ClosePath ();};type stop struct{_fce float64 ;_cce _cb .Color ;};func _fcbc (_fgae float64 )float64 {return _fgae *_f .Pi /180};
func (_ddg *Context )Clip (){_ddg .ClipPreserve ();_ddg .ClearPath ()};type circle struct{_caea ,_fdaa ,_ddbg float64 };type stops []stop ;func (_cbc *linearGradient )ColorAt (x ,y int )_cb .Color {if len (_cbc ._fcg )==0{return _cb .Transparent ;};_egfg ,_gbcc :=float64 (x ),float64 (y );
_gfeb ,_dab ,_dbc ,_ggfb :=_cbc ._gega ,_cbc ._aaa ,_cbc ._baa ,_cbc ._agf ;_dea ,_ebb :=_dbc -_gfeb ,_ggfb -_dab ;if _ebb ==0&&_dea !=0{return _ffafg ((_egfg -_gfeb )/_dea ,_cbc ._fcg );};if _dea ==0&&_ebb !=0{return _ffafg ((_gbcc -_dab )/_ebb ,_cbc ._fcg );
};_gcec :=_dea *(_egfg -_gfeb )+_ebb *(_gbcc -_dab );if _gcec < 0{return _cbc ._fcg [0]._cce ;};_dbcc :=_f .Hypot (_dea ,_ebb );_dda :=((_egfg -_gfeb )*-_ebb +(_gbcc -_dab )*_dea )/(_dbcc *_dbcc );_cca ,_ced :=_gfeb +_dda *-_ebb ,_dab +_dda *_dea ;_accb :=_f .Hypot (_egfg -_cca ,_gbcc -_ced )/_dbcc ;
return _ffafg (_accb ,_cbc ._fcg );};type linearGradient struct{_gega ,_aaa ,_baa ,_agf float64 ;_fcg stops ;};func (_ada *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_bef :=_ada ._afc .RGBA ();if _bef > 0&&_bef !=65535&&a ==1{a =float64 (_bef )/65535;
};_bab :=_cb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ada ._afc =_bab ;_ada ._abb =_eag (_bab );};func (_edfa stops )Swap (i ,j int ){_edfa [i ],_edfa [j ]=_edfa [j ],_edfa [i ]};func (_ddb *Context )FillPreserve (){var _eab _acc .Painter ;
if _ddb ._afg ==nil {if _afd ,_dcfd :=_ddb ._abb .(*solidPattern );_dcfd {_eef :=_acc .NewRGBAPainter (_ddb ._bdf );_eef .SetColor (_afd ._adae );_eab =_eef ;};};if _eab ==nil {_eab =_dada (_ddb ._bdf ,_ddb ._afg ,_ddb ._abb );};_ddb .fill (_eab );};func (_bdfc *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bdfc ._bge {_bdfc .MoveTo (x1 ,y1 );
};x1 ,y1 =_bdfc .Transform (x1 ,y1 );x2 ,y2 =_bdfc .Transform (x2 ,y2 );_gb :=_ac .NewPoint (x1 ,y1 );_bce :=_ac .NewPoint (x2 ,y2 );_cdfd :=_abd (_gb );_geg :=_abd (_bce );_bdfc ._faa .Add2 (_cdfd ,_geg );_bdfc ._fdf .Add2 (_cdfd ,_geg );_bdfc ._aa =_bce ;
};func (_dbdf *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _acb =16;for _deb :=0;_deb < _acb ;_deb ++{_cbg :=float64 (_deb +0)/_acb ;_cgd :=float64 (_deb +1)/_acb ;_cddf :=angle1 +(angle2 -angle1 )*_cbg ;_edf :=angle1 +(angle2 -angle1 )*_cgd ;
_affe :=x +rx *_f .Cos (_cddf );_cac :=y +ry *_f .Sin (_cddf );_fbc :=x +rx *_f .Cos ((_cddf +_edf )/2);_dfc :=y +ry *_f .Sin ((_cddf +_edf )/2);_ccd :=x +rx *_f .Cos (_edf );_acab :=y +ry *_f .Sin (_edf );_aae :=2*_fbc -_affe /2-_ccd /2;_abbe :=2*_dfc -_cac /2-_acab /2;
if _deb ==0{if _dbdf ._bge {_dbdf .LineTo (_affe ,_cac );}else {_dbdf .MoveTo (_affe ,_cac );};};_dbdf .QuadraticTo (_aae ,_abbe ,_ccd ,_acab );};};func _aeb (_eaa ,_gee uint32 ,_ecgd float64 )uint8 {return uint8 (int32 (float64 (_eaa )*(1.0-_ecgd )+float64 (_gee )*_ecgd )>>8);
};func (_bgd *Context )joiner ()_acc .Joiner {switch _bgd ._gce {case _dc .LineJoinBevel :return _acc .BevelJoiner ;case _dc .LineJoinRound :return _acc .RoundJoiner ;};return nil ;};type surfacePattern struct{_cefc _b .Image ;_cegd repeatOp ;};func (_bcaf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_bcf :=_cb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_bcaf ._cgb =_eag (_bcf );};func (_fea *Context )LineWidth ()float64 {return _fea ._cga };func (_cae *Context )Matrix ()_ac .Matrix {return _cae ._dbf };func (_aab *Context )SetStrokeStyle (pattern _dc .Pattern ){_aab ._cgb =pattern };func _acf (_abf [][]_ac .Point )_acc .Path {var _fdac _acc .Path ;
for _ ,_adcg :=range _abf {var _eaeb _ad .Point26_6 ;for _cffg ,_gbd :=range _adcg {_dce :=_abd (_gbd );if _cffg ==0{_fdac .Start (_dce );}else {_ffac :=_dce .X -_eaeb .X ;_baab :=_dce .Y -_eaeb .Y ;if _ffac < 0{_ffac =-_ffac ;};if _baab < 0{_baab =-_baab ;
};if _ffac +_baab > 8{_fdac .Add1 (_dce );};};_eaeb =_dce ;};};return _fdac ;};func (_caf *Context )capper ()_acc .Capper {switch _caf ._ffbc {case _dc .LineCapButt :return _acc .ButtCapper ;case _dc .LineCapRound :return _acc .RoundCapper ;case _dc .LineCapSquare :return _acc .SquareCapper ;
};return nil ;};func (_fdfb *Context )Push (){_gfc :=*_fdfb ;_fdfb ._ebc =append (_fdfb ._ebc ,&_gfc )};func (_bgg *Context )fill (_cdd _acc .Painter ){_ggb :=_bgg ._fdf ;if _bgg ._bge {_ggb =make (_acc .Path ,len (_bgg ._fdf ));copy (_ggb ,_bgg ._fdf );
_ggb .Add1 (_abd (_bgg ._dg ));};_cdef :=_bgg ._feg ;_cdef .UseNonZeroWinding =_bgg ._ddee ==_dc .FillRuleWinding ;_cdef .Clear ();_cdef .AddPath (_ggb );_cdef .Rasterize (_cdd );};func (_cdca stops )Len ()int {return len (_cdca )};func (_gafe *Context )ResetClip (){_gafe ._afg =nil };
func (_cdgbd *Context )ClearPath (){_cdgbd ._faa .Clear ();_cdgbd ._fdf .Clear ();_cdgbd ._bge =false };func _efff (_faf ,_be ,_gf ,_ge ,_de ,_cdf ,_fgb ,_dbd float64 )[]_ac .Point {_cbe :=(_f .Hypot (_gf -_faf ,_ge -_be )+_f .Hypot (_de -_gf ,_cdf -_ge )+_f .Hypot (_fgb -_de ,_dbd -_cdf ));
_bca :=int (_cbe +0.5);if _bca < 4{_bca =4;};_ab :=float64 (_bca )-1;_cde :=make ([]_ac .Point ,_bca );for _gaf :=0;_gaf < _bca ;_gaf ++{_bga :=float64 (_gaf )/_ab ;_cbb ,_fe :=_eae (_faf ,_be ,_gf ,_ge ,_de ,_cdf ,_fgb ,_dbd ,_bga );_cde [_gaf ]=_ac .NewPoint (_cbb ,_fe );
};return _cde ;};func (_eea *Context )SetFillStyle (pattern _dc .Pattern ){if _cdb ,_dcc :=pattern .(*solidPattern );_dcc {_eea ._afc =_cdb ._adae ;};_eea ._abb =pattern ;};func (_cdc *Context )InvertMask (){if _cdc ._afg ==nil {_cdc ._afg =_b .NewAlpha (_cdc ._bdf .Bounds ());
}else {for _agbf ,_fcc :=range _cdc ._afg .Pix {_cdc ._afg .Pix [_agbf ]=255-_fcc ;};};};func (_cdcg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cdcg .Translate (x ,y );_cdcg .Shear (sx ,sy );_cdcg .Translate (-x ,-y );};func (_gfe *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_cfe ,_aff ,_dba ,_dgd :=x ,x +r ,x +w -r ,x +w ;
_bada ,_fcbg ,_fda ,_eaea :=y ,y +r ,y +h -r ,y +h ;_gfe .NewSubPath ();_gfe .MoveTo (_aff ,_bada );_gfe .LineTo (_dba ,_bada );_gfe .DrawArc (_dba ,_fcbg ,r ,_fcbc (270),_fcbc (360));_gfe .LineTo (_dgd ,_fda );_gfe .DrawArc (_dba ,_fda ,r ,_fcbc (0),_fcbc (90));
_gfe .LineTo (_aff ,_eaea );_gfe .DrawArc (_aff ,_fda ,r ,_fcbc (90),_fcbc (180));_gfe .LineTo (_cfe ,_fcbg );_gfe .DrawArc (_aff ,_fcbg ,r ,_fcbc (180),_fcbc (270));_gfe .ClosePath ();};func (_eaeg *Context )DrawImageAnchored (im _b .Image ,x ,y int ,ax ,ay float64 ){_gdf :=im .Bounds ().Size ();
x -=int (ax *float64 (_gdf .X ));y -=int (ay *float64 (_gdf .Y ));_dbdd :=_ea .BiLinear ;_cef :=_eaeg ._dbf .Clone ().Translate (float64 (x ),float64 (y ));_adga :=_db .Aff3 {_cef [0],_cef [3],_cef [6],_cef [1],_cef [4],_cef [7]};if _eaeg ._afg ==nil {_dbdd .Transform (_eaeg ._bdf ,_adga ,im ,im .Bounds (),_ea .Over ,nil );
}else {_dbdd .Transform (_eaeg ._bdf ,_adga ,im ,im .Bounds (),_ea .Over ,&_ea .Options {DstMask :_eaeg ._afg ,DstMaskP :_b .Point {}});};};func (_caa *Context )ClosePath (){if _caa ._bge {_aca :=_abd (_caa ._dg );_caa ._faa .Add1 (_aca );_caa ._fdf .Add1 (_aca );
_caa ._aa =_caa ._dg ;};};func _ffafg (_bda float64 ,_eceg stops )_cb .Color {if _bda <=0.0||len (_eceg )==1{return _eceg [0]._cce ;};_cec :=_eceg [len (_eceg )-1];if _bda >=_cec ._fce {return _cec ._cce ;};for _abef ,_adbb :=range _eceg [1:]{if _bda < _adbb ._fce {_bda =(_bda -_eceg [_abef ]._fce )/(_adbb ._fce -_eceg [_abef ]._fce );
return _bfa (_eceg [_abef ]._cce ,_adbb ._cce ,_bda );};};return _cec ._cce ;};type repeatOp int ;func (_daa *Context )TextState ()*_dc .TextState {return &_daa ._ca };func (_cc *Context )setFillAndStrokeColor (_cfc _cb .Color ){_cc ._afc =_cfc ;_cc ._abb =_eag (_cfc );
_cc ._cgb =_eag (_cfc );};type radialGradient struct{_ede ,_ccge ,_bgef circle ;_bcee ,_cdbc float64 ;_gedf float64 ;_aaga stops ;};func (_gg *Context )SetRGBA255 (r ,g ,b ,a int ){_gg ._afc =_cb .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_gg .setFillAndStrokeColor (_gg ._afc );
};func (_dagc *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_dagc .Translate (x ,y );_dagc .Scale (sx ,sy );_dagc .Translate (-x ,-y );};func (_bgee *Context )SetPixel (x ,y int ){_bgee ._bdf .Set (x ,y ,_bgee ._afc )};func (_efb *Context )StrokePattern ()_dc .Pattern {return _efb ._cgb };
func _fb (_fa ,_af ,_dag ,_eg ,_g ,_gd ,_bb float64 )(_cd ,_cf float64 ){_adb :=1-_bb ;_ga :=_adb *_adb ;_bdg :=2*_adb *_bb ;_ace :=_bb *_bb ;_cd =_ga *_fa +_bdg *_dag +_ace *_g ;_cf =_ga *_af +_bdg *_eg +_ace *_gd ;return ;};func (_bgad *Context )Shear (x ,y float64 ){_bgad ._dbf .Shear (x ,y )};
func _cffe (_bae string )(_eeag ,_adaea ,_deba ,_ebdg int ){_bae =_c .TrimPrefix (_bae ,"\u0023");_ebdg =255;if len (_bae )==3{_fcgf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_e .Sscanf (_bae ,_fcgf ,&_eeag ,&_adaea ,&_deba );_eeag |=_eeag <<4;_adaea |=_adaea <<4;
_deba |=_deba <<4;};if len (_bae )==6{_baee :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_e .Sscanf (_bae ,_baee ,&_eeag ,&_adaea ,&_deba );};if len (_bae )==8{_adba :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_e .Sscanf (_bae ,_adba ,&_eeag ,&_adaea ,&_deba ,&_ebdg );};return ;};func _fbe (_eece _b .Image ,_dfcg repeatOp )_dc .Pattern {return &surfacePattern {_cefc :_eece ,_cegd :_dfcg };};func (_geaf *Context )DrawImage (im _b .Image ,x ,y int ){_geaf .DrawImageAnchored (im ,x ,y ,0,0)};
func (_afbd *Context )drawRegularPolygon (_ecg int ,_dcac ,_afa ,_ged ,_fgg float64 ){_gea :=2*_f .Pi /float64 (_ecg );_fgg -=_f .Pi /2;if _ecg %2==0{_fgg +=_gea /2;};_afbd .NewSubPath ();for _bgb :=0;_bgb < _ecg ;_bgb ++{_befb :=_fgg +_gea *float64 (_bgb );
_afbd .LineTo (_dcac +_ged *_f .Cos (_befb ),_afa +_ged *_f .Sin (_befb ));};_afbd .ClosePath ();};func (_gdc *surfacePattern )ColorAt (x ,y int )_cb .Color {_ggde :=_gdc ._cefc .Bounds ();switch _gdc ._cegd {case _cda :if y >=_ggde .Dy (){return _cb .Transparent ;
};case _bega :if x >=_ggde .Dx (){return _cb .Transparent ;};case _adcc :if x >=_ggde .Dx ()||y >=_ggde .Dy (){return _cb .Transparent ;};};x =x %_ggde .Dx ()+_ggde .Min .X ;y =y %_ggde .Dy ()+_ggde .Min .Y ;return _gdc ._cefc .At (x ,y );};func (_ffd *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_ffd .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_afge *Context )SetHexColor (x string ){_ed ,_cbf ,_adag ,_bcb :=_cffe (x );_afge .SetRGBA255 (_ed ,_cbf ,_adag ,_bcb );};func _efd (_decc [][]_ac .Point ,_aabf []float64 ,_eec float64 )[][]_ac .Point {var _ffg [][]_ac .Point ;if len (_aabf )==0{return _decc ;
};if len (_aabf )==1{_aabf =append (_aabf ,_aabf [0]);};for _ ,_geag :=range _decc {if len (_geag )< 2{continue ;};_cbcg :=_geag [0];_abcb :=1;_aaeb :=0;_agd :=0.0;if _eec !=0{var _cbd float64 ;for _ ,_fcgb :=range _aabf {_cbd +=_fcgb ;};_eec =_f .Mod (_eec ,_cbd );
if _eec < 0{_eec +=_cbd ;};for _ageee ,_gfa :=range _aabf {_eec -=_gfa ;if _eec < 0{_aaeb =_ageee ;_agd =_gfa +_eec ;break ;};};};var _cfb []_ac .Point ;_cfb =append (_cfb ,_cbcg );for _abcb < len (_geag ){_fccd :=_aabf [_aaeb ];_feag :=_geag [_abcb ];
_gfgd :=_cbcg .Distance (_feag );_aabff :=_fccd -_agd ;if _gfgd > _aabff {_ccb :=_aabff /_gfgd ;_ebda :=_cbcg .Interpolate (_feag ,_ccb );_cfb =append (_cfb ,_ebda );if _aaeb %2==0&&len (_cfb )> 1{_ffg =append (_ffg ,_cfb );};_cfb =nil ;_cfb =append (_cfb ,_ebda );
_agd =0;_cbcg =_ebda ;_aaeb =(_aaeb +1)%len (_aabf );}else {_cfb =append (_cfb ,_feag );_cbcg =_feag ;_agd +=_gfgd ;_abcb ++;};};if _aaeb %2==0&&len (_cfb )> 1{_ffg =append (_ffg ,_cfb );};};return _ffg ;};func (_fac *Context )Scale (x ,y float64 ){_fac ._dbf =_fac ._dbf .Scale (x ,y )};
func (_bbbc *Context )Translate (x ,y float64 ){_bbbc ._dbf =_bbbc ._dbf .Translate (x ,y )};func (_bcbca *patternPainter )Paint (ss []_acc .Span ,done bool ){_bbc :=_bcbca ._caff .Bounds ();for _ ,_fbce :=range ss {if _fbce .Y < _bbc .Min .Y {continue ;
};if _fbce .Y >=_bbc .Max .Y {return ;};if _fbce .X0 < _bbc .Min .X {_fbce .X0 =_bbc .Min .X ;};if _fbce .X1 > _bbc .Max .X {_fbce .X1 =_bbc .Max .X ;};if _fbce .X0 >=_fbce .X1 {continue ;};const _ggc =1<<16-1;_debdg :=_fbce .Y -_bcbca ._caff .Rect .Min .Y ;
_begaf :=_fbce .X0 -_bcbca ._caff .Rect .Min .X ;_dccb :=(_fbce .Y -_bcbca ._caff .Rect .Min .Y )*_bcbca ._caff .Stride +(_fbce .X0 -_bcbca ._caff .Rect .Min .X )*4;_gdg :=_dccb +(_fbce .X1 -_fbce .X0 )*4;for _edfg ,_cfbf :=_dccb ,_begaf ;_edfg < _gdg ;
_edfg ,_cfbf =_edfg +4,_cfbf +1{_fdc :=_fbce .Alpha ;if _bcbca ._egag !=nil {_fdc =_fdc *uint32 (_bcbca ._egag .AlphaAt (_cfbf ,_debdg ).A )/255;if _fdc ==0{continue ;};};_aeg :=_bcbca ._cee .ColorAt (_cfbf ,_debdg );_abee ,_ecdc ,_gca ,_eefe :=_aeg .RGBA ();
_egd :=uint32 (_bcbca ._caff .Pix [_edfg +0]);_aad :=uint32 (_bcbca ._caff .Pix [_edfg +1]);_fcd :=uint32 (_bcbca ._caff .Pix [_edfg +2]);_cfae :=uint32 (_bcbca ._caff .Pix [_edfg +3]);_bggd :=(_ggc -(_eefe *_fdc /_ggc ))*0x101;_bcbca ._caff .Pix [_edfg +0]=uint8 ((_egd *_bggd +_abee *_fdc )/_ggc >>8);
_bcbca ._caff .Pix [_edfg +1]=uint8 ((_aad *_bggd +_ecdc *_fdc )/_ggc >>8);_bcbca ._caff .Pix [_edfg +2]=uint8 ((_fcd *_bggd +_gca *_fdc )/_ggc >>8);_bcbca ._caff .Pix [_edfg +3]=uint8 ((_cfae *_bggd +_eefe *_fdc )/_ggc >>8);};};};func (_gede *Context )drawString (_efc string ,_agea _da .Face ,_cfcd ,_ebad float64 ){_beg :=&_da .Drawer {Src :_b .NewUniform (_gede ._afc ),Face :_agea ,Dot :_abd (_ac .NewPoint (_cfcd ,_ebad ))};
_defb :=rune (-1);for _ ,_fagc :=range _efc {if _defb >=0{_beg .Dot .X +=_beg .Face .Kern (_defb ,_fagc );};_cbae ,_bfg ,_dcca ,_ebfe ,_eeg :=_beg .Face .Glyph (_beg .Dot ,_fagc );if !_eeg {continue ;};_fbcb :=_cbae .Sub (_cbae .Min );_fbd :=_b .NewRGBA (_fbcb );
_ea .DrawMask (_fbd ,_fbcb ,_beg .Src ,_b .Point {},_bfg ,_dcca ,_ea .Over );var _fff *_ea .Options ;if _gede ._afg !=nil {_fff =&_ea .Options {DstMask :_gede ._afg ,DstMaskP :_b .Point {}};};_geaa :=_gede ._dbf .Clone ().Translate (float64 (_cbae .Min .X ),float64 (_cbae .Min .Y ));
_ceb :=_db .Aff3 {_geaa [0],_geaa [3],_geaa [6],_geaa [1],_geaa [4],_geaa [7]};_ea .BiLinear .Transform (_gede ._bdf ,_ceb ,_fbd ,_fbcb ,_ea .Over ,_fff );_beg .Dot .X +=_ebfe ;_defb =_fagc ;};};func (_efgg *Context )Fill (){_efgg .FillPreserve ();_efgg .ClearPath ()};
func (_fae *Context )SetLineJoin (lineJoin _dc .LineJoin ){_fae ._gce =lineJoin };func (_baf *Context )Width ()int {return _baf ._bbb };func (_dcd *linearGradient )AddColorStop (offset float64 ,color _cb .Color ){_dcd ._fcg =append (_dcd ._fcg ,stop {_fce :offset ,_cce :color });
_fc .Sort (_dcd ._fcg );};const (_gag repeatOp =iota ;_cda ;_bega ;_adcc ;);type Context struct{_bbb int ;_eb int ;_feg *_acc .Rasterizer ;_bdf *_b .RGBA ;_afg *_b .Alpha ;_afc _cb .Color ;_abb _dc .Pattern ;_cgb _dc .Pattern ;_faa _acc .Path ;_fdf _acc .Path ;
_dg _ac .Point ;_aa _ac .Point ;_bge bool ;_efg []float64 ;_ee float64 ;_cga float64 ;_ffbc _dc .LineCap ;_gce _dc .LineJoin ;_ddee _dc .FillRule ;_dbf _ac .Matrix ;_ca _dc .TextState ;_ebc []*Context ;};func (_abba *Context )ClipPreserve (){_fec :=_b .NewAlpha (_b .Rect (0,0,_abba ._bbb ,_abba ._eb ));
_bcfg :=_acc .NewAlphaOverPainter (_fec );_abba .fill (_bcfg );if _abba ._afg ==nil {_abba ._afg =_fec ;}else {_bed :=_b .NewAlpha (_b .Rect (0,0,_abba ._bbb ,_abba ._eb ));_ea .DrawMask (_bed ,_bed .Bounds (),_fec ,_b .Point {},_abba ._afg ,_b .Point {},_ea .Over );
_abba ._afg =_bed ;};};func (_fge *Context )Identity (){_fge ._dbf =_ac .IdentityMatrix ()};func (_daf *radialGradient )ColorAt (x ,y int )_cb .Color {if len (_daf ._aaga )==0{return _cb .Transparent ;};_cgf ,_bba :=float64 (x )+0.5-_daf ._ede ._caea ,float64 (y )+0.5-_daf ._ede ._fdaa ;
_dbca :=_fgeb (_cgf ,_bba ,_daf ._ede ._ddbg ,_daf ._bgef ._caea ,_daf ._bgef ._fdaa ,_daf ._bgef ._ddbg );_bcbc :=_fgeb (_cgf ,_bba ,-_daf ._ede ._ddbg ,_cgf ,_bba ,_daf ._ede ._ddbg );if _daf ._bcee ==0{if _dbca ==0{return _cb .Transparent ;};_abe :=0.5*_bcbc /_dbca ;
if _abe *_daf ._bgef ._ddbg >=_daf ._gedf {return _ffafg (_abe ,_daf ._aaga );};return _cb .Transparent ;};_dcbc :=_fgeb (_dbca ,_daf ._bcee ,0,_dbca ,-_bcbc ,0);if _dcbc >=0{_ece :=_f .Sqrt (_dcbc );_gba :=(_dbca +_ece )*_daf ._cdbc ;_acd :=(_dbca -_ece )*_daf ._cdbc ;
if _gba *_daf ._bgef ._ddbg >=_daf ._gedf {return _ffafg (_gba ,_daf ._aaga );}else if _acd *_daf ._bgef ._ddbg >=_daf ._gedf {return _ffafg (_acd ,_daf ._aaga );};};return _cb .Transparent ;};func (_cfce *Context )MoveTo (x ,y float64 ){if _cfce ._bge {_cfce ._fdf .Add1 (_abd (_cfce ._dg ));
};x ,y =_cfce .Transform (x ,y );_adc :=_ac .NewPoint (x ,y );_ffc :=_abd (_adc );_cfce ._faa .Start (_ffc );_cfce ._fdf .Start (_ffc );_cfce ._dg =_adc ;_cfce ._aa =_adc ;_cfce ._bge =true ;};func (_cea *Context )stroke (_cgcf _acc .Painter ){_gbc :=_cea ._faa ;
if len (_cea ._efg )> 0{_gbc =_efgcb (_gbc ,_cea ._efg ,_cea ._ee );}else {_gbc =_acf (_bdc (_gbc ));};_aee :=_cea ._feg ;_aee .UseNonZeroWinding =true ;_aee .Clear ();_agb :=(_cea ._dbf .ScalingFactorX ()+_cea ._dbf .ScalingFactorY ())/2;_aee .AddStroke (_gbc ,_acg (_cea ._cga *_agb ),_cea .capper (),_cea .joiner ());
_aee .Rasterize (_cgcf );};func _efgcb (_egee _acc .Path ,_faaa []float64 ,_eecg float64 )_acc .Path {return _acf (_efd (_bdc (_egee ),_faaa ,_eecg ));};func (_fcac *solidPattern )ColorAt (x ,y int )_cb .Color {return _fcac ._adae };func (_def *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_dfa :=_def ._afc .RGBA ();
if _dfa > 0&&_dfa !=65535&&a ==1{a =float64 (_dfa )/65535;};_def ._afc =_cb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_def .setFillAndStrokeColor (_def ._afc );};func (_dee *Context )SetLineWidth (lineWidth float64 ){_dee ._cga =lineWidth };
func (_dec *Context )SetMask (mask *_b .Alpha )error {if mask .Bounds ().Size ()!=_dec ._bdf .Bounds ().Size (){return _d .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_dec ._afg =mask ;return nil ;};func (_ceag *radialGradient )AddColorStop (offset float64 ,color _cb .Color ){_ceag ._aaga =append (_ceag ._aaga ,stop {_fce :offset ,_cce :color });_fc .Sort (_ceag ._aaga );};func (_fcbf *Context )DrawRectangle (x ,y ,w ,h float64 ){_fcbf .NewSubPath ();
_fcbf .MoveTo (x ,y );_fcbf .LineTo (x +w ,y );_fcbf .LineTo (x +w ,y +h );_fcbf .LineTo (x ,y +h );_fcbf .ClosePath ();};var (_fcb =_eag (_cb .White );_efe =_eag (_cb .Black ););func (_fag *Context )Clear (){_efed :=_b .NewUniform (_fag ._afc );_ea .Draw (_fag ._bdf ,_fag ._bdf .Bounds (),_efed ,_b .Point {},_ea .Src );
};func _abd (_daba _ac .Point )_ad .Point26_6 {return _ad .Point26_6 {X :_acg (_daba .X ),Y :_acg (_daba .Y )}};func (_cbeg *Context )Stroke (){_cbeg .StrokePreserve ();_cbeg .ClearPath ()};func (_fga *Context )MeasureString (s string ,face _da .Face )(_edb ,_ceaa float64 ){_cegg :=&_da .Drawer {Face :face };
_cgaa :=_cegg .MeasureString (s );return float64 (_cgaa >>6),_fga ._ca .Tf .Size ;};func _eag (_agbd _cb .Color )_dc .Pattern {return &solidPattern {_adae :_agbd }};func _eabg (_fad _ad .Int26_6 )float64 {const _efcg ,_ffcd =6,1<<6-1;if _fad >=0{return float64 (_fad >>_efcg )+float64 (_fad &_ffcd )/64;
};_fad =-_fad ;if _fad >=0{return -(float64 (_fad >>_efcg )+float64 (_fad &_ffcd )/64);};return 0;};func (_bec *Context )SetMatrix (m _ac .Matrix ){_bec ._dbf =m };func (_agg *Context )Pop (){_ggd :=*_agg ;_bbd :=_agg ._ebc ;_debd :=_bbd [len (_bbd )-1];
*_agg =*_debd ;_agg ._faa =_ggd ._faa ;_agg ._fdf =_ggd ._fdf ;_agg ._dg =_ggd ._dg ;_agg ._aa =_ggd ._aa ;_agg ._bge =_ggd ._bge ;};func NewContextForImage (im _b .Image )*Context {return NewContextForRGBA (_gcff (im ))};func _bdc (_begg _acc .Path )[][]_ac .Point {var _gdfa [][]_ac .Point ;
var _gfec []_ac .Point ;var _dcfb ,_ddeea float64 ;for _cfea :=0;_cfea < len (_begg );{switch _begg [_cfea ]{case 0:if len (_gfec )> 0{_gdfa =append (_gdfa ,_gfec );_gfec =nil ;};_agee :=_eabg (_begg [_cfea +1]);_acbf :=_eabg (_begg [_cfea +2]);_gfec =append (_gfec ,_ac .NewPoint (_agee ,_acbf ));
_dcfb ,_ddeea =_agee ,_acbf ;_cfea +=4;case 1:_cgcc :=_eabg (_begg [_cfea +1]);_fccc :=_eabg (_begg [_cfea +2]);_gfec =append (_gfec ,_ac .NewPoint (_cgcc ,_fccc ));_dcfb ,_ddeea =_cgcc ,_fccc ;_cfea +=4;case 2:_efac :=_eabg (_begg [_cfea +1]);_gab :=_eabg (_begg [_cfea +2]);
_bafb :=_eabg (_begg [_cfea +3]);_bcg :=_eabg (_begg [_cfea +4]);_dff :=_bc (_dcfb ,_ddeea ,_efac ,_gab ,_bafb ,_bcg );_gfec =append (_gfec ,_dff ...);_dcfb ,_ddeea =_bafb ,_bcg ;_cfea +=6;case 3:_dac :=_eabg (_begg [_cfea +1]);_ecec :=_eabg (_begg [_cfea +2]);
_fcga :=_eabg (_begg [_cfea +3]);_bbbb :=_eabg (_begg [_cfea +4]);_befe :=_eabg (_begg [_cfea +5]);_abcc :=_eabg (_begg [_cfea +6]);_adee :=_efff (_dcfb ,_ddeea ,_dac ,_ecec ,_fcga ,_bbbb ,_befe ,_abcc );_gfec =append (_gfec ,_adee ...);_dcfb ,_ddeea =_befe ,_abcc ;
_cfea +=8;default:_bd .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_begg );return _gdfa ;};};if len (_gfec )> 0{_gdfa =append (_gdfa ,_gfec );};return _gdfa ;};func _bc (_ag ,_df ,_ba ,_fba ,_age ,_ef float64 )[]_ac .Point {_fg :=(_f .Hypot (_ba -_ag ,_fba -_df )+_f .Hypot (_age -_ba ,_ef -_fba ));
_ega :=int (_fg +0.5);if _ega < 4{_ega =4;};_dd :=float64 (_ega )-1;_ffb :=make ([]_ac .Point ,_ega );for _ec :=0;_ec < _ega ;_ec ++{_gc :=float64 (_ec )/_dd ;_ae ,_cdg :=_fb (_ag ,_df ,_ba ,_fba ,_age ,_ef ,_gc );_ffb [_ec ]=_ac .NewPoint (_ae ,_cdg );
};return _ffb ;};func (_ebfee *Context )Rotate (angle float64 ){_ebfee ._dbf =_ebfee ._dbf .Rotate (angle )};func _fgeb (_fffe ,_dccc ,_abcf ,_ddaa ,_dcfg ,_cagb float64 )float64 {return _fffe *_ddaa +_dccc *_dcfg +_abcf *_cagb ;};func (_cag *Context )DrawStringAnchored (s string ,face _da .Face ,x ,y ,ax ,ay float64 ){_ddgg ,_dbff :=_cag .MeasureString (s ,face );
_cag .drawString (s ,face ,x -ax *_ddgg ,y +ay *_dbff );};func (_gfb *Context )FillPattern ()_dc .Pattern {return _gfb ._abb };func (_adg *Context )DrawPoint (x ,y ,r float64 ){_adg .Push ();_ege ,_fegb :=_adg .Transform (x ,y );_adg .Identity ();_adg .DrawCircle (_ege ,_fegb ,r );
_adg .Pop ();};func (_cfa *Context )DrawCircle (x ,y ,r float64 ){_cfa .NewSubPath ();_cfa .DrawEllipticalArc (x ,y ,r ,r ,0,2*_f .Pi );_cfa .ClosePath ();};func (_cge *Context )SetDashOffset (offset float64 ){_cge ._ee =offset };func (_cgc *Context )SetDash (dashes ...float64 ){_cgc ._efg =dashes };
func (_ddeef *Context )LineTo (x ,y float64 ){if !_ddeef ._bge {_ddeef .MoveTo (x ,y );}else {x ,y =_ddeef .Transform (x ,y );_cgeg :=_ac .NewPoint (x ,y );_dca :=_abd (_cgeg );_ddeef ._faa .Add1 (_dca );_ddeef ._fdf .Add1 (_dca );_ddeef ._aa =_cgeg ;};
};func (_eba *Context )SetRGB255 (r ,g ,b int ){_eba .SetRGBA255 (r ,g ,b ,255)};func (_abbf *Context )AsMask ()*_b .Alpha {_caab :=_b .NewAlpha (_abbf ._bdf .Bounds ());_ea .Draw (_caab ,_abbf ._bdf .Bounds (),_abbf ._bdf ,_b .Point {},_ea .Src );return _caab ;
};func _dada (_abbg *_b .RGBA ,_cdcac *_b .Alpha ,_ecc _dc .Pattern )*patternPainter {return &patternPainter {_abbg ,_cdcac ,_ecc };};func NewContextForRGBA (im *_b .RGBA )*Context {_ebf :=im .Bounds ().Size ().X ;_dad :=im .Bounds ().Size ().Y ;return &Context {_bbb :_ebf ,_eb :_dad ,_feg :_acc .NewRasterizer (_ebf ,_dad ),_bdf :im ,_afc :_cb .Transparent ,_abb :_fcb ,_cgb :_efe ,_cga :1,_ddee :_dc .FillRuleWinding ,_dbf :_ac .IdentityMatrix (),_ca :_dc .NewTextState ()};
};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_dc .Gradient {_fbg :=circle {x0 ,y0 ,r0 };_babb :=circle {x1 ,y1 ,r1 };_egc :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_dbe :=_fgeb (_egc ._caea ,_egc ._fdaa ,-_egc ._ddbg ,_egc ._caea ,_egc ._fdaa ,_egc ._ddbg );
var _daff float64 ;if _dbe !=0{_daff =1.0/_dbe ;};_acaf :=-_fbg ._ddbg ;_ddec :=&radialGradient {_ede :_fbg ,_ccge :_babb ,_bgef :_egc ,_bcee :_dbe ,_cdbc :_daff ,_gedf :_acaf };return _ddec ;};func (_fbac *Context )RotateAbout (angle ,x ,y float64 ){_fbac .Translate (x ,y );
_fbac .Rotate (angle );_fbac .Translate (-x ,-y );};func (_egf *Context )Image ()_b .Image {return _egf ._bdf };func _gcff (_deae _b .Image )*_b .RGBA {_deaf :=_deae .Bounds ();_ecb :=_b .NewRGBA (_deaf );_ff .Draw (_ecb ,_deaf ,_deae ,_deaf .Min ,_ff .Src );
return _ecb ;};func (_ffaf *Context )StrokePreserve (){var _edd _acc .Painter ;if _ffaf ._afg ==nil {if _dfac ,_fdb :=_ffaf ._cgb .(*solidPattern );_fdb {_cbfd :=_acc .NewRGBAPainter (_ffaf ._bdf );_cbfd .SetColor (_dfac ._adae );_edd =_cbfd ;};};if _edd ==nil {_edd =_dada (_ffaf ._bdf ,_ffaf ._afg ,_ffaf ._cgb );
};_ffaf .stroke (_edd );};func (_fef *Context )SetColor (c _cb .Color ){_fef .setFillAndStrokeColor (c )};type patternPainter struct{_caff *_b .RGBA ;_egag *_b .Alpha ;_cee _dc .Pattern ;};func _acg (_fbgd float64 )_ad .Int26_6 {return _ad .Int26_6 (_fbgd *64)};
func (_fgd *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fgd .MoveTo (x1 ,y1 );_fgd .LineTo (x2 ,y2 )};func (_ade stops )Less (i ,j int )bool {return _ade [i ]._fce < _ade [j ]._fce };func (_ceg *Context )Height ()int {return _ceg ._eb };func (_efgc *Context )SetLineCap (lineCap _dc .LineCap ){_efgc ._ffbc =lineCap };
func (_fbae *Context )DrawString (s string ,face _da .Face ,x ,y float64 ){_fbae .DrawStringAnchored (s ,face ,x ,y ,0,0);};