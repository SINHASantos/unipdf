//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ge "errors";_e "fmt";_gf "github.com/unidoc/freetype/raster";_ag "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/transform";_cb "github.com/unidoc/unipdf/v3/render/internal/context";_f "golang.org/x/image/draw";
_acd "golang.org/x/image/font";_ed "golang.org/x/image/math/f64";_ba "golang.org/x/image/math/fixed";_ac "image";_c "image/color";_bg "image/draw";_a "math";_ga "sort";_g "strings";);func (_ce *Context )drawRegularPolygon (_bge int ,_acc ,_gfd ,_dfga ,_bda float64 ){_cee :=2*_a .Pi /float64 (_bge );
_bda -=_a .Pi /2;if _bge %2==0{_bda +=_cee /2;};_ce .NewSubPath ();for _cdf :=0;_cdf < _bge ;_cdf ++{_gfe :=_bda +_cee *float64 (_cdf );_ce .LineTo (_acc +_dfga *_a .Cos (_gfe ),_gfd +_dfga *_a .Sin (_gfe ));};_ce .ClosePath ();};func (_fee *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_fee .NewSubPath ();
_fee .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_fee .ClosePath ();};func (_gca *Context )FillPreserve (){var _eef _gf .Painter ;if _gca ._aac ==nil {if _fcb ,_dgd :=_gca ._fe .(*solidPattern );_dgd {_fea :=_gf .NewRGBAPainter (_gca ._fa );_fea .SetColor (_fcb ._bdfe );
_eef =_fea ;};};if _eef ==nil {_eef =_bfec (_gca ._fa ,_gca ._aac ,_gca ._fe );};_gca .fill (_eef );};func (_aged *Context )TextState ()*_cb .TextState {return &_aged ._aag };func (_gec *Context )LineWidth ()float64 {return _gec ._ebd };func _feee (_aaef [][]_d .Point ,_ddef []float64 ,_gag float64 )[][]_d .Point {var _gcfc [][]_d .Point ;
if len (_ddef )==0{return _aaef ;};if len (_ddef )==1{_ddef =append (_ddef ,_ddef [0]);};for _ ,_fba :=range _aaef {if len (_fba )< 2{continue ;};_dgg :=_fba [0];_fce :=1;_fcbc :=0;_dagd :=0.0;if _gag !=0{var _gcgd float64 ;for _ ,_eeg :=range _ddef {_gcgd +=_eeg ;
};_gag =_a .Mod (_gag ,_gcgd );if _gag < 0{_gag +=_gcgd ;};for _gfdc ,_cagge :=range _ddef {_gag -=_cagge ;if _gag < 0{_fcbc =_gfdc ;_dagd =_cagge +_gag ;break ;};};};var _adc []_d .Point ;_adc =append (_adc ,_dgg );for _fce < len (_fba ){_bbeb :=_ddef [_fcbc ];
_ggacc :=_fba [_fce ];_beged :=_dgg .Distance (_ggacc );_caec :=_bbeb -_dagd ;if _beged > _caec {_adg :=_caec /_beged ;_fcfe :=_dgg .Interpolate (_ggacc ,_adg );_adc =append (_adc ,_fcfe );if _fcbc %2==0&&len (_adc )> 1{_gcfc =append (_gcfc ,_adc );};_adc =nil ;
_adc =append (_adc ,_fcfe );_dagd =0;_dgg =_fcfe ;_fcbc =(_fcbc +1)%len (_ddef );}else {_adc =append (_adc ,_ggacc );_dgg =_ggacc ;_dagd +=_beged ;_fce ++;};};if _fcbc %2==0&&len (_adc )> 1{_gcfc =append (_gcfc ,_adc );};};return _gcfc ;};func (_bbe *Context )SetHexColor (x string ){_fef ,_fc ,_aae ,_fag :=_dcba (x );
_bbe .SetRGBA255 (_fef ,_fc ,_aae ,_fag );};func (_bfd *Context )Push (){_cbdd :=*_bfd ;_bfd ._cabb =append (_bfd ._cabb ,&_cbdd )};func (_fga *Context )Scale (x ,y float64 ){_fga ._acb =_fga ._acb .Scale (x ,y )};func (_gega *Context )SetMatrix (m _d .Matrix ){_gega ._acb =m };
func (_fec *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_fec .Translate (x ,y );_fec .Scale (sx ,sy );_fec .Translate (-x ,-y );};func (_gaeb *Context )SetFillRule (fillRule _cb .FillRule ){_gaeb ._eae =fillRule };func (_ebb *Context )RotateAbout (angle ,x ,y float64 ){_ebb .Translate (x ,y );
_ebb .Rotate (angle );_ebb .Translate (-x ,-y );};func _bfec (_faab *_ac .RGBA ,_bbfca *_ac .Alpha ,_dggd _cb .Pattern )*patternPainter {return &patternPainter {_faab ,_bbfca ,_dggd };};func (_bedb *Context )Rotate (angle float64 ){_bedb ._acb =_bedb ._acb .Rotate (angle )};
func _gaebc (_abca _gf .Path )[][]_d .Point {var _gaag [][]_d .Point ;var _dfcc []_d .Point ;var _fecc ,_aage float64 ;for _cgdb :=0;_cgdb < len (_abca );{switch _abca [_cgdb ]{case 0:if len (_dfcc )> 0{_gaag =append (_gaag ,_dfcc );_dfcc =nil ;};_bfbb :=_ccfd (_abca [_cgdb +1]);
_agd :=_ccfd (_abca [_cgdb +2]);_dfcc =append (_dfcc ,_d .NewPoint (_bfbb ,_agd ));_fecc ,_aage =_bfbb ,_agd ;_cgdb +=4;case 1:_acdf :=_ccfd (_abca [_cgdb +1]);_ggac :=_ccfd (_abca [_cgdb +2]);_dfcc =append (_dfcc ,_d .NewPoint (_acdf ,_ggac ));_fecc ,_aage =_acdf ,_ggac ;
_cgdb +=4;case 2:_dcc :=_ccfd (_abca [_cgdb +1]);_abdg :=_ccfd (_abca [_cgdb +2]);_eceg :=_ccfd (_abca [_cgdb +3]);_edfb :=_ccfd (_abca [_cgdb +4]);_cgf :=_fda (_fecc ,_aage ,_dcc ,_abdg ,_eceg ,_edfb );_dfcc =append (_dfcc ,_cgf ...);_fecc ,_aage =_eceg ,_edfb ;
_cgdb +=6;case 3:_edgc :=_ccfd (_abca [_cgdb +1]);_gcg :=_ccfd (_abca [_cgdb +2]);_ffg :=_ccfd (_abca [_cgdb +3]);_egg :=_ccfd (_abca [_cgdb +4]);_daee :=_ccfd (_abca [_cgdb +5]);_afff :=_ccfd (_abca [_cgdb +6]);_deef :=_aff (_fecc ,_aage ,_edgc ,_gcg ,_ffg ,_egg ,_daee ,_afff );
_dfcc =append (_dfcc ,_deef ...);_fecc ,_aage =_daee ,_afff ;_cgdb +=8;default:_ag .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_abca );return _gaag ;};};if len (_dfcc )> 0{_gaag =append (_gaag ,_dfcc );
};return _gaag ;};func (_bbcc *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gfgb :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bbcc ._ace =_faeff (_gfgb );};func _dceb (_gda float64 )float64 {return _gda *_a .Pi /180};func (_cabc *Context )DrawImage (im _ac .Image ,x ,y int ){_cabc .DrawImageAnchored (im ,x ,y ,0,0)};
func (_bfaf *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _dfg =16;for _dbe :=0;_dbe < _dfg ;_dbe ++{_cde :=float64 (_dbe +0)/_dfg ;_bfc :=float64 (_dbe +1)/_dfg ;_dfbg :=angle1 +(angle2 -angle1 )*_cde ;_bee :=angle1 +(angle2 -angle1 )*_bfc ;
_deb :=x +rx *_a .Cos (_dfbg );_eaa :=y +ry *_a .Sin (_dfbg );_ffef :=x +rx *_a .Cos ((_dfbg +_bee )/2);_ecdb :=y +ry *_a .Sin ((_dfbg +_bee )/2);_gdf :=x +rx *_a .Cos (_bee );_cagg :=y +ry *_a .Sin (_bee );_bfgf :=2*_ffef -_deb /2-_gdf /2;_cbgg :=2*_ecdb -_eaa /2-_cagg /2;
if _dbe ==0{if _bfaf ._bad {_bfaf .LineTo (_deb ,_eaa );}else {_bfaf .MoveTo (_deb ,_eaa );};};_bfaf .QuadraticTo (_bfgf ,_cbgg ,_gdf ,_cagg );};};func (_cfg *Context )SetRGB255 (r ,g ,b int ){_cfg .SetRGBA255 (r ,g ,b ,255)};func (_egd *Context )SetDashOffset (offset float64 ){_egd ._ece =offset };
func (_acae *Context )ClearPath (){_acae ._bbc .Clear ();_acae ._gab .Clear ();_acae ._bad =false };func (_dacd *Context )Clear (){_faga :=_ac .NewUniform (_dacd ._ecd );_f .Draw (_dacd ._fa ,_dacd ._fa .Bounds (),_faga ,_ac .Point {},_f .Src );};func (_acfd *Context )ResetClip (){_acfd ._aac =nil };
func (_acdd *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_bbcb :=_acdd ._ecd .RGBA ();if _bbcb > 0&&_bbcb !=65535&&a ==1{a =float64 (_bbcb )/65535;};_acdd ._ecd =_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_acdd .setFillAndStrokeColor (_acdd ._ecd );
};func (_cfb *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_cfb ._bad {_cfb .MoveTo (x1 ,y1 );};_dee ,_bdg :=_cfb ._gfgg .X ,_cfb ._gfgg .Y ;x1 ,y1 =_cfb .Transform (x1 ,y1 );x2 ,y2 =_cfb .Transform (x2 ,y2 );x3 ,y3 =_cfb .Transform (x3 ,y3 );
_bec :=_aff (_dee ,_bdg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_fgd :=_ffcd (_cfb ._gfgg );for _ ,_acf :=range _bec [1:]{_bfac :=_ffcd (_acf );if _bfac ==_fgd {continue ;};_fgd =_bfac ;_cfb ._bbc .Add1 (_bfac );_cfb ._gab .Add1 (_bfac );_cfb ._gfgg =_acf ;};};func (_ggf *Context )ClosePath (){if _ggf ._bad {_dbaf :=_ffcd (_ggf ._deg );
_ggf ._bbc .Add1 (_dbaf );_ggf ._gab .Add1 (_dbaf );_ggf ._gfgg =_ggf ._deg ;};};func (_bbg *Context )FillPattern ()_cb .Pattern {return _bbg ._fe };func (_aba *Context )ShearAbout (sx ,sy ,x ,y float64 ){_aba .Translate (x ,y );_aba .Shear (sx ,sy );_aba .Translate (-x ,-y );
};func (_ddc *Context )DrawString (s string ,face _acd .Face ,x ,y float64 ){_ddc .DrawStringAnchored (s ,face ,x ,y ,0,0);};const (_cac repeatOp =iota ;_ebe ;_fbcf ;_bfaff ;);func _bcfd (_gbg ,_cae ,_bfag ,_bca ,_fead ,_afb float64 )float64 {return _gbg *_bca +_cae *_fead +_bfag *_afb ;
};func _bcc (_dd ,_aa ,_fdf ,_bfa ,_gae ,_cad ,_cf ,_baf ,_af float64 )(_ddg ,_ef float64 ){_gea :=1-_af ;_bbf :=_gea *_gea *_gea ;_dbd :=3*_gea *_gea *_af ;_gg :=3*_gea *_af *_af ;_aga :=_af *_af *_af ;_ddg =_bbf *_dd +_dbd *_fdf +_gg *_gae +_aga *_cf ;
_ef =_bbf *_aa +_dbd *_bfa +_gg *_cad +_aga *_baf ;return ;};func (_bac stops )Less (i ,j int )bool {return _bac [i ]._dfbd < _bac [j ]._dfbd };func NewContext (width ,height int )*Context {return NewContextForRGBA (_ac .NewRGBA (_ac .Rect (0,0,width ,height )));
};func _fbaf (_cabbc _ac .Image ,_dacdg repeatOp )_cb .Pattern {return &surfacePattern {_eega :_cabbc ,_dbg :_dacdg };};type stop struct{_dfbd float64 ;_gcd _c .Color ;};func NewContextForRGBA (im *_ac .RGBA )*Context {_cd :=im .Bounds ().Size ().X ;_ffe :=im .Bounds ().Size ().Y ;
return &Context {_dbc :_cd ,_gee :_ffe ,_gde :_gf .NewRasterizer (_cd ,_ffe ),_fa :im ,_ecd :_c .Transparent ,_fe :_agc ,_ace :_bcf ,_ebd :1,_eae :_cb .FillRuleWinding ,_acb :_d .IdentityMatrix (),_aag :_cb .NewTextState ()};};func (_gdbc *Context )DrawCircle (x ,y ,r float64 ){_gdbc .NewSubPath ();
_gdbc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );_gdbc .ClosePath ();};func (_bfgc *Context )Pop (){_bdfc :=*_bfgc ;_dag :=_bfgc ._cabb ;_gabg :=_dag [len (_dag )-1];*_bfgc =*_gabg ;_bfgc ._bbc =_bdfc ._bbc ;_bfgc ._gab =_bdfc ._gab ;_bfgc ._deg =_bdfc ._deg ;
_bfgc ._gfgg =_bdfc ._gfgg ;_bfgc ._bad =_bdfc ._bad ;};func (_bdbe *Context )Identity (){_bdbe ._acb =_d .IdentityMatrix ()};func (_cdb *surfacePattern )ColorAt (x ,y int )_c .Color {_afc :=_cdb ._eega .Bounds ();switch _cdb ._dbg {case _ebe :if y >=_afc .Dy (){return _c .Transparent ;
};case _fbcf :if x >=_afc .Dx (){return _c .Transparent ;};case _bfaff :if x >=_afc .Dx ()||y >=_afc .Dy (){return _c .Transparent ;};};x =x %_afc .Dx ()+_afc .Min .X ;y =y %_afc .Dy ()+_afc .Min .Y ;return _cdb ._eega .At (x ,y );};func (_faf *solidPattern )ColorAt (x ,y int )_c .Color {return _faf ._bdfe };
func (_bccf *Context )Height ()int {return _bccf ._gee };func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_cb .Gradient {_abdc :=circle {x0 ,y0 ,r0 };_bbbc :=circle {x1 ,y1 ,r1 };_gfgbb :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_debf :=_bcfd (_gfgbb ._aab ,_gfgbb ._agb ,-_gfgbb ._faca ,_gfgbb ._aab ,_gfgbb ._agb ,_gfgbb ._faca );
var _cbc float64 ;if _debf !=0{_cbc =1.0/_debf ;};_ddgf :=-_abdc ._faca ;_cgbc :=&radialGradient {_caa :_abdc ,_ggag :_bbbc ,_cdef :_gfgbb ,_facd :_debf ,_accbe :_cbc ,_febf :_ddgf };return _cgbc ;};func (_egb *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_egb .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_dg *Context )SetRGB (r ,g ,b float64 ){_dg .SetRGBA (r ,g ,b ,1)};func (_eag *Context )SetStrokeStyle (pattern _cb .Pattern ){_eag ._ace =pattern };func (_cag *Context )SetFillStyle (pattern _cb .Pattern ){if _badd ,_ead :=pattern .(*solidPattern );
_ead {_cag ._ecd =_badd ._bdfe ;};_cag ._fe =pattern ;};type patternPainter struct{_dgfb *_ac .RGBA ;_debg *_ac .Alpha ;_dcac _cb .Pattern ;};func (_eefc *Context )DrawPoint (x ,y ,r float64 ){_eefc .Push ();_abc ,_gcf :=_eefc .Transform (x ,y );_eefc .Identity ();
_eefc .DrawCircle (_abc ,_gcf ,r );_eefc .Pop ();};type surfacePattern struct{_eega _ac .Image ;_dbg repeatOp ;};func (_fdec *Context )fill (_dcb _gf .Painter ){_cga :=_fdec ._gab ;if _fdec ._bad {_cga =make (_gf .Path ,len (_fdec ._gab ));copy (_cga ,_fdec ._gab );
_cga .Add1 (_ffcd (_fdec ._deg ));};_ccfc :=_fdec ._gde ;_ccfc .UseNonZeroWinding =_fdec ._eae ==_cb .FillRuleWinding ;_ccfc .Clear ();_ccfc .AddPath (_cga );_ccfc .Rasterize (_dcb );};func (_feba *Context )DrawRectangle (x ,y ,w ,h float64 ){_feba .NewSubPath ();
_feba .MoveTo (x ,y );_feba .LineTo (x +w ,y );_feba .LineTo (x +w ,y +h );_feba .LineTo (x ,y +h );_feba .ClosePath ();};func _ccfd (_cabg _ba .Int26_6 )float64 {const _geca ,_fad =6,1<<6-1;if _cabg >=0{return float64 (_cabg >>_geca )+float64 (_cabg &_fad )/64;
};_cabg =-_cabg ;if _cabg >=0{return -(float64 (_cabg >>_geca )+float64 (_cabg &_fad )/64);};return 0;};func _bbgb (_gfef [][]_d .Point )_gf .Path {var _aggf _gf .Path ;for _ ,_eade :=range _gfef {var _cef _ba .Point26_6 ;for _dca ,_bcae :=range _eade {_dadb :=_ffcd (_bcae );
if _dca ==0{_aggf .Start (_dadb );}else {_fbad :=_dadb .X -_cef .X ;_eacc :=_dadb .Y -_cef .Y ;if _fbad < 0{_fbad =-_fbad ;};if _eacc < 0{_eacc =-_eacc ;};if _fbad +_eacc > 8{_aggf .Add1 (_dadb );};};_cef =_dadb ;};};return _aggf ;};func (_gcc stops )Len ()int {return len (_gcc )};
func (_eadf *linearGradient )ColorAt (x ,y int )_c .Color {if len (_eadf ._bfcd )==0{return _c .Transparent ;};_ded ,_cbdae :=float64 (x ),float64 (y );_geb ,_dff ,_beab ,_bbb :=_eadf ._adb ,_eadf ._cdcg ,_eadf ._fbe ,_eadf ._fbc ;_egfg ,_accb :=_beab -_geb ,_bbb -_dff ;
if _accb ==0&&_egfg !=0{return _ebdd ((_ded -_geb )/_egfg ,_eadf ._bfcd );};if _egfg ==0&&_accb !=0{return _ebdd ((_cbdae -_dff )/_accb ,_eadf ._bfcd );};_beg :=_egfg *(_ded -_geb )+_accb *(_cbdae -_dff );if _beg < 0{return _eadf ._bfcd [0]._gcd ;};_efee :=_a .Hypot (_egfg ,_accb );
_dfa :=((_ded -_geb )*-_accb +(_cbdae -_dff )*_egfg )/(_efee *_efee );_fcfa ,_afe :=_geb +_dfa *-_accb ,_dff +_dfa *_egfg ;_eagc :=_a .Hypot (_ded -_fcfa ,_cbdae -_afe )/_efee ;return _ebdd (_eagc ,_eadf ._bfcd );};func (_efda *Context )StrokePreserve (){var _cgd _gf .Painter ;
if _efda ._aac ==nil {if _cage ,_bfe :=_efda ._ace .(*solidPattern );_bfe {_ged :=_gf .NewRGBAPainter (_efda ._fa );_ged .SetColor (_cage ._bdfe );_cgd =_ged ;};};if _cgd ==nil {_cgd =_bfec (_efda ._fa ,_efda ._aac ,_efda ._ace );};_efda .stroke (_cgd );
};type solidPattern struct{_bdfe _c .Color };type repeatOp int ;func (_dce *Context )setFillAndStrokeColor (_cgb _c .Color ){_dce ._ecd =_cgb ;_dce ._fe =_faeff (_cgb );_dce ._ace =_faeff (_cgb );};func (_eeff *Context )InvertMask (){if _eeff ._aac ==nil {_eeff ._aac =_ac .NewAlpha (_eeff ._fa .Bounds ());
}else {for _gaea ,_efdf :=range _eeff ._aac .Pix {_eeff ._aac .Pix [_gaea ]=255-_efdf ;};};};func (_gdea *Context )SetColor (c _c .Color ){_gdea .setFillAndStrokeColor (c )};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_cb .Gradient {_feaa :=&linearGradient {_adb :x0 ,_cdcg :y0 ,_fbe :x1 ,_fbc :y1 };
return _feaa ;};func _agae (_gbc _gf .Path ,_cefc []float64 ,_dbcf float64 )_gf .Path {return _bbgb (_feee (_gaebc (_gbc ),_cefc ,_dbcf ));};func (_dbb *Context )SetRGBA255 (r ,g ,b ,a int ){_dbb ._ecd =_c .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_dbb .setFillAndStrokeColor (_dbb ._ecd );};func (_ffd *Context )Shear (x ,y float64 ){_ffd ._acb .Shear (x ,y )};func (_fagf *Context )Transform (x ,y float64 )(_cgba ,_agg float64 ){return _fagf ._acb .Transform (x ,y );};func NewContextForImage (im _ac .Image )*Context {return NewContextForRGBA (_eeb (im ))};
func _fda (_ff ,_eg ,_egc ,_bae ,_bf ,_gdd float64 )[]_d .Point {_age :=(_a .Hypot (_egc -_ff ,_bae -_eg )+_a .Hypot (_bf -_egc ,_gdd -_bae ));_ca :=int (_age +0.5);if _ca < 4{_ca =4;};_abf :=float64 (_ca )-1;_ege :=make ([]_d .Point ,_ca );for _db :=0;
_db < _ca ;_db ++{_eac :=float64 (_db )/_abf ;_dc ,_gb :=_bc (_ff ,_eg ,_egc ,_bae ,_bf ,_gdd ,_eac );_ege [_db ]=_d .NewPoint (_dc ,_gb );};return _ege ;};func (_gfge *Context )Translate (x ,y float64 ){_gfge ._acb =_gfge ._acb .Translate (x ,y )};func (_bdb *Context )ClipPreserve (){_baad :=_ac .NewAlpha (_ac .Rect (0,0,_bdb ._dbc ,_bdb ._gee ));
_dcf :=_gf .NewAlphaOverPainter (_baad );_bdb .fill (_dcf );if _bdb ._aac ==nil {_bdb ._aac =_baad ;}else {_becc :=_ac .NewAlpha (_ac .Rect (0,0,_bdb ._dbc ,_bdb ._gee ));_f .DrawMask (_becc ,_becc .Bounds (),_baad ,_ac .Point {},_bdb ._aac ,_ac .Point {},_f .Over );
_bdb ._aac =_becc ;};};func (_dba *Context )SetLineJoin (lineJoin _cb .LineJoin ){_dba ._cc =lineJoin };func _afa (_ffcc ,_dadc uint32 ,_eff float64 )uint8 {return uint8 (int32 (float64 (_ffcc )*(1.0-_eff )+float64 (_dadc )*_eff )>>8);};func (_befg *Context )Stroke (){_befg .StrokePreserve ();
_befg .ClearPath ()};func (_acdg *Context )SetLineWidth (lineWidth float64 ){_acdg ._ebd =lineWidth };func (_fdd *Context )Clip (){_fdd .ClipPreserve ();_fdd .ClearPath ()};func (_ede *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_ede ._bad {_ede .MoveTo (x1 ,y1 );
};x1 ,y1 =_ede .Transform (x1 ,y1 );x2 ,y2 =_ede .Transform (x2 ,y2 );_bef :=_d .NewPoint (x1 ,y1 );_bab :=_d .NewPoint (x2 ,y2 );_ccf :=_ffcd (_bef );_gef :=_ffcd (_bab );_ede ._bbc .Add2 (_ccf ,_gef );_ede ._gab .Add2 (_ccf ,_gef );_ede ._gfgg =_bab ;
};func (_cbd *Context )joiner ()_gf .Joiner {switch _cbd ._cc {case _cb .LineJoinBevel :return _gf .BevelJoiner ;case _cb .LineJoinRound :return _gf .RoundJoiner ;};return nil ;};func (_dggf *patternPainter )Paint (ss []_gf .Span ,done bool ){_aaca :=_dggf ._dgfb .Bounds ();
for _ ,_daf :=range ss {if _daf .Y < _aaca .Min .Y {continue ;};if _daf .Y >=_aaca .Max .Y {return ;};if _daf .X0 < _aaca .Min .X {_daf .X0 =_aaca .Min .X ;};if _daf .X1 > _aaca .Max .X {_daf .X1 =_aaca .Max .X ;};if _daf .X0 >=_daf .X1 {continue ;};const _ddeb =1<<16-1;
_efc :=_daf .Y -_dggf ._dgfb .Rect .Min .Y ;_bbfc :=_daf .X0 -_dggf ._dgfb .Rect .Min .X ;_bdba :=(_daf .Y -_dggf ._dgfb .Rect .Min .Y )*_dggf ._dgfb .Stride +(_daf .X0 -_dggf ._dgfb .Rect .Min .X )*4;_gbgb :=_bdba +(_daf .X1 -_daf .X0 )*4;for _edfd ,_aaa :=_bdba ,_bbfc ;
_edfd < _gbgb ;_edfd ,_aaa =_edfd +4,_aaa +1{_ebc :=_daf .Alpha ;if _dggf ._debg !=nil {_ebc =_ebc *uint32 (_dggf ._debg .AlphaAt (_aaa ,_efc ).A )/255;if _ebc ==0{continue ;};};_dgb :=_dggf ._dcac .ColorAt (_aaa ,_efc );_abcd ,_fcec ,_dgfc ,_badf :=_dgb .RGBA ();
_aef :=uint32 (_dggf ._dgfb .Pix [_edfd +0]);_cgeb :=uint32 (_dggf ._dgfb .Pix [_edfd +1]);_ccd :=uint32 (_dggf ._dgfb .Pix [_edfd +2]);_baea :=uint32 (_dggf ._dgfb .Pix [_edfd +3]);_eaee :=(_ddeb -(_badf *_ebc /_ddeb ))*0x101;_dggf ._dgfb .Pix [_edfd +0]=uint8 ((_aef *_eaee +_abcd *_ebc )/_ddeb >>8);
_dggf ._dgfb .Pix [_edfd +1]=uint8 ((_cgeb *_eaee +_fcec *_ebc )/_ddeb >>8);_dggf ._dgfb .Pix [_edfd +2]=uint8 ((_ccd *_eaee +_dgfc *_ebc )/_ddeb >>8);_dggf ._dgfb .Pix [_edfd +3]=uint8 ((_baea *_eaee +_badf *_ebc )/_ddeb >>8);};};};func (_gefa *Context )AsMask ()*_ac .Alpha {_ffb :=_ac .NewAlpha (_gefa ._fa .Bounds ());
_f .Draw (_ffb ,_gefa ._fa .Bounds (),_gefa ._fa ,_ac .Point {},_f .Src );return _ffb ;};func (_gdb *Context )StrokePattern ()_cb .Pattern {return _gdb ._ace };func (_bbcg *Context )DrawStringAnchored (s string ,face _acd .Face ,x ,y ,ax ,ay float64 ){_fgdf ,_cgaa :=_bbcg .MeasureString (s ,face );
_bbcg .drawString (s ,face ,x -ax *_fgdf ,y +ay *_cgaa );};func (_dad *Context )SetDash (dashes ...float64 ){_dad ._egef =dashes };var (_agc =_faeff (_c .White );_bcf =_faeff (_c .Black ););func (_cbda *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cbda .MoveTo (x1 ,y1 );
_cbda .LineTo (x2 ,y2 )};func _ebdd (_edd float64 ,_afee stops )_c .Color {if _edd <=0.0||len (_afee )==1{return _afee [0]._gcd ;};_dfc :=_afee [len (_afee )-1];if _edd >=_dfc ._dfbd {return _dfc ._gcd ;};for _bbef ,_fcae :=range _afee [1:]{if _edd < _fcae ._dfbd {_edd =(_edd -_afee [_bbef ]._dfbd )/(_fcae ._dfbd -_afee [_bbef ]._dfbd );
return _ecdc (_afee [_bbef ]._gcd ,_fcae ._gcd ,_edd );};};return _dfc ._gcd ;};type Context struct{_dbc int ;_gee int ;_gde *_gf .Rasterizer ;_fa *_ac .RGBA ;_aac *_ac .Alpha ;_ecd _c .Color ;_fe _cb .Pattern ;_ace _cb .Pattern ;_bbc _gf .Path ;_gab _gf .Path ;
_deg _d .Point ;_gfgg _d .Point ;_bad bool ;_egef []float64 ;_ece float64 ;_ebd float64 ;_ggb _cb .LineCap ;_cc _cb .LineJoin ;_eae _cb .FillRule ;_acb _d .Matrix ;_aag _cb .TextState ;_cabb []*Context ;};func _eeb (_ffdf _ac .Image )*_ac .RGBA {_fefd :=_ffdf .Bounds ();
_fedc :=_ac .NewRGBA (_fefd );_bg .Draw (_fedc ,_fefd ,_ffdf ,_fefd .Min ,_bg .Src );return _fedc ;};func _bc (_gfg ,_fd ,_ec ,_aca ,_ad ,_ea ,_gc float64 )(_bb ,_ab float64 ){_cbg :=1-_gc ;_add :=_cbg *_cbg ;_de :=2*_cbg *_gc ;_gd :=_gc *_gc ;_bb =_add *_gfg +_de *_ec +_gd *_ad ;
_ab =_add *_fd +_de *_aca +_gd *_ea ;return ;};func (_fac *Context )drawString (_ccb string ,_gfea _acd .Face ,_fed ,_bfb float64 ){_faa :=&_acd .Drawer {Src :_ac .NewUniform (_fac ._ecd ),Face :_gfea ,Dot :_ffcd (_d .NewPoint (_fed ,_bfb ))};_cge :=rune (-1);
for _ ,_ebg :=range _ccb {if _cge >=0{_faa .Dot .X +=_faa .Face .Kern (_cge ,_ebg );};_befb ,_fb ,_ecea ,_bea ,_faef :=_faa .Face .Glyph (_faa .Dot ,_ebg );if !_faef {continue ;};_cfd :=_befb .Sub (_befb .Min );_efa :=_ac .NewRGBA (_cfd );_f .DrawMask (_efa ,_cfd ,_faa .Src ,_ac .Point {},_fb ,_ecea ,_f .Over );
var _abd *_f .Options ;if _fac ._aac !=nil {_abd =&_f .Options {DstMask :_fac ._aac ,DstMaskP :_ac .Point {}};};_bdf :=_fac ._acb .Clone ().Translate (float64 (_befb .Min .X ),float64 (_befb .Min .Y ));_bed :=_ed .Aff3 {_bdf [0],_bdf [3],_bdf [6],_bdf [1],_bdf [4],_bdf [7]};
_f .BiLinear .Transform (_fac ._fa ,_bed ,_efa ,_cfd ,_f .Over ,_abd );_faa .Dot .X +=_bea ;_cge =_ebg ;};};func (_feg *Context )Image ()_ac .Image {return _feg ._fa };func (_ebdg stops )Swap (i ,j int ){_ebdg [i ],_ebdg [j ]=_ebdg [j ],_ebdg [i ]};func (_efd *Context )MoveTo (x ,y float64 ){if _efd ._bad {_efd ._gab .Add1 (_ffcd (_efd ._deg ));
};x ,y =_efd .Transform (x ,y );_feb :=_d .NewPoint (x ,y );_dac :=_ffcd (_feb );_efd ._bbc .Start (_dac );_efd ._gab .Start (_dac );_efd ._deg =_feb ;_efd ._gfgg =_feb ;_efd ._bad =true ;};type radialGradient struct{_caa ,_ggag ,_cdef circle ;_facd ,_accbe float64 ;
_febf float64 ;_fefg stops ;};type stops []stop ;func (_cdg *Context )Width ()int {return _cdg ._dbc };func _aff (_bgg ,_egcc ,_egec ,_bfg ,_ee ,_ae ,_baa ,_cg float64 )[]_d .Point {_cfc :=(_a .Hypot (_egec -_bgg ,_bfg -_egcc )+_a .Hypot (_ee -_egec ,_ae -_bfg )+_a .Hypot (_baa -_ee ,_cg -_ae ));
_bd :=int (_cfc +0.5);if _bd < 4{_bd =4;};_bag :=float64 (_bd )-1;_gfb :=make ([]_d .Point ,_bd );for _da :=0;_da < _bd ;_da ++{_eb :=float64 (_da )/_bag ;_cab ,_be :=_bcc (_bgg ,_egcc ,_egec ,_bfg ,_ee ,_ae ,_baa ,_cg ,_eb );_gfb [_da ]=_d .NewPoint (_cab ,_be );
};return _gfb ;};func (_fae *Context )Fill (){_fae .FillPreserve ();_fae .ClearPath ()};func _ccda (_cbdad float64 )_ba .Int26_6 {return _ba .Int26_6 (_cbdad *64)};func (_egf *Context )SetMask (mask *_ac .Alpha )error {if mask .Bounds ().Size ()!=_egf ._fa .Bounds ().Size (){return _ge .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_egf ._aac =mask ;return nil ;};func (_dfb *Context )SetPixel (x ,y int ){_dfb ._fa .Set (x ,y ,_dfb ._ecd )};func (_gff *Context )MeasureString (s string ,face _acd .Face )(_bfgfd ,_gaef float64 ){_ccg :=&_acd .Drawer {Face :face };_cfe :=_ccg .MeasureString (s );
return float64 (_cfe >>6),_gff ._aag .Tf .Size ;};func (_fdg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_fg :=_fdg ._ecd .RGBA ();if _fg > 0&&_fg !=65535&&a ==1{a =float64 (_fg )/65535;};_eadd :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_fdg ._ecd =_eadd ;_fdg ._fe =_faeff (_eadd );};func (_aee *Context )LineTo (x ,y float64 ){if !_aee ._bad {_aee .MoveTo (x ,y );}else {x ,y =_aee .Transform (x ,y );_ecc :=_d .NewPoint (x ,y );_df :=_ffcd (_ecc );_aee ._bbc .Add1 (_df );_aee ._gab .Add1 (_df );
_aee ._gfgg =_ecc ;};};func (_agaf *Context )stroke (_gdc _gf .Painter ){_cbf :=_agaf ._bbc ;if len (_agaf ._egef )> 0{_cbf =_agae (_cbf ,_agaf ._egef ,_agaf ._ece );}else {_cbf =_bbgb (_gaebc (_cbf ));};_gfa :=_agaf ._gde ;_gfa .UseNonZeroWinding =true ;
_gfa .Clear ();_cgc :=(_agaf ._acb .ScalingFactorX ()+_agaf ._acb .ScalingFactorY ())/2;_gfa .AddStroke (_cbf ,_ccda (_agaf ._ebd *_cgc ),_agaf .capper (),_agaf .joiner ());_gfa .Rasterize (_gdc );};func (_aea *Context )SetLineCap (lineCap _cb .LineCap ){_aea ._ggb =lineCap };
func (_ebde *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_efe ,_geg ,_bfgd ,_cbdaa :=x ,x +r ,x +w -r ,x +w ;_fca ,_cfbb ,_ffc ,_dgf :=y ,y +r ,y +h -r ,y +h ;_ebde .NewSubPath ();_ebde .MoveTo (_geg ,_fca );_ebde .LineTo (_bfgd ,_fca );_ebde .DrawArc (_bfgd ,_cfbb ,r ,_dceb (270),_dceb (360));
_ebde .LineTo (_cbdaa ,_ffc );_ebde .DrawArc (_bfgd ,_ffc ,r ,_dceb (0),_dceb (90));_ebde .LineTo (_geg ,_dgf );_ebde .DrawArc (_geg ,_ffc ,r ,_dceb (90),_dceb (180));_ebde .LineTo (_efe ,_cfbb );_ebde .DrawArc (_geg ,_cfbb ,r ,_dceb (180),_dceb (270));
_ebde .ClosePath ();};type linearGradient struct{_adb ,_cdcg ,_fbe ,_fbc float64 ;_bfcd stops ;};func (_gad *Context )Matrix ()_d .Matrix {return _gad ._acb };func (_edf *Context )DrawImageAnchored (im _ac .Image ,x ,y int ,ax ,ay float64 ){_ggc :=im .Bounds ().Size ();
x -=int (ax *float64 (_ggc .X ));y -=int (ay *float64 (_ggc .Y ));_dde :=_f .BiLinear ;_gge :=_edf ._acb .Clone ().Translate (float64 (x ),float64 (y ));_caf :=_ed .Aff3 {_gge [0],_gge [3],_gge [6],_gge [1],_gge [4],_gge [7]};if _edf ._aac ==nil {_dde .Transform (_edf ._fa ,_caf ,im ,im .Bounds (),_f .Over ,nil );
}else {_dde .Transform (_edf ._fa ,_caf ,im ,im .Bounds (),_f .Over ,&_f .Options {DstMask :_edf ._aac ,DstMaskP :_ac .Point {}});};};func (_cgg *radialGradient )ColorAt (x ,y int )_c .Color {if len (_cgg ._fefg )==0{return _c .Transparent ;};_dgff ,_bfdf :=float64 (x )+0.5-_cgg ._caa ._aab ,float64 (y )+0.5-_cgg ._caa ._agb ;
_efb :=_bcfd (_dgff ,_bfdf ,_cgg ._caa ._faca ,_cgg ._cdef ._aab ,_cgg ._cdef ._agb ,_cgg ._cdef ._faca );_abae :=_bcfd (_dgff ,_bfdf ,-_cgg ._caa ._faca ,_dgff ,_bfdf ,_cgg ._caa ._faca );if _cgg ._facd ==0{if _efb ==0{return _c .Transparent ;};_cgeg :=0.5*_abae /_efb ;
if _cgeg *_cgg ._cdef ._faca >=_cgg ._febf {return _ebdd (_cgeg ,_cgg ._fefg );};return _c .Transparent ;};_cca :=_bcfd (_efb ,_cgg ._facd ,0,_efb ,-_abae ,0);if _cca >=0{_gadg :=_a .Sqrt (_cca );_gaaf :=(_efb +_gadg )*_cgg ._accbe ;_dcbc :=(_efb -_gadg )*_cgg ._accbe ;
if _gaaf *_cgg ._cdef ._faca >=_cgg ._febf {return _ebdd (_gaaf ,_cgg ._fefg );}else if _dcbc *_cgg ._cdef ._faca >=_cgg ._febf {return _ebdd (_dcbc ,_cgg ._fefg );};};return _c .Transparent ;};func (_ccae *radialGradient )AddColorStop (offset float64 ,color _c .Color ){_ccae ._fefg =append (_ccae ._fefg ,stop {_dfbd :offset ,_gcd :color });
_ga .Sort (_ccae ._fefg );};func (_gefe *Context )capper ()_gf .Capper {switch _gefe ._ggb {case _cb .LineCapButt :return _gf .ButtCapper ;case _cb .LineCapRound :return _gf .RoundCapper ;case _cb .LineCapSquare :return _gf .SquareCapper ;};return nil ;
};func _ecdc (_ecdg ,_ggg _c .Color ,_ega float64 )_c .Color {_gfbe ,_ggcd ,_gedf ,_bcg :=_ecdg .RGBA ();_bade ,_afg ,_ggba ,_dacg :=_ggg .RGBA ();return _c .RGBA {_afa (_gfbe ,_bade ,_ega ),_afa (_ggcd ,_afg ,_ega ),_afa (_gedf ,_ggba ,_ega ),_afa (_bcg ,_dacg ,_ega )};
};func _dcba (_gefg string )(_fff ,_ebgg ,_gaf ,_cbdb int ){_gefg =_g .TrimPrefix (_gefg ,"\u0023");_cbdb =255;if len (_gefg )==3{_gffe :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_e .Sscanf (_gefg ,_gffe ,&_fff ,&_ebgg ,&_gaf );_fff |=_fff <<4;_ebgg |=_ebgg <<4;
_gaf |=_gaf <<4;};if len (_gefg )==6{_ccga :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_e .Sscanf (_gefg ,_ccga ,&_fff ,&_ebgg ,&_gaf );};if len (_gefg )==8{_bdag :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_e .Sscanf (_gefg ,_bdag ,&_fff ,&_ebgg ,&_gaf ,&_cbdb );};return ;};type circle struct{_aab ,_agb ,_faca float64 };func (_dfe *linearGradient )AddColorStop (offset float64 ,color _c .Color ){_dfe ._bfcd =append (_dfe ._bfcd ,stop {_dfbd :offset ,_gcd :color });
_ga .Sort (_dfe ._bfcd );};func _ffcd (_dcebe _d .Point )_ba .Point26_6 {return _ba .Point26_6 {X :_ccda (_dcebe .X ),Y :_ccda (_dcebe .Y )};};func (_cdc *Context )NewSubPath (){if _cdc ._bad {_cdc ._gab .Add1 (_ffcd (_cdc ._deg ));};_cdc ._bad =false ;
};func _faeff (_fdfg _c .Color )_cb .Pattern {return &solidPattern {_bdfe :_fdfg }};