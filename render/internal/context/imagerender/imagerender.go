//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_b "errors";_cg "fmt";_d "github.com/unidoc/freetype/raster";_bc "github.com/unidoc/unipdf/v4/common";_aa "github.com/unidoc/unipdf/v4/internal/precision";_ag "github.com/unidoc/unipdf/v4/internal/transform";_ad "github.com/unidoc/unipdf/v4/render/internal/context";
_ee "golang.org/x/image/draw";_adf "golang.org/x/image/font";_aae "golang.org/x/image/math/f64";_fg "golang.org/x/image/math/fixed";_ed "image";_ae "image/color";_ca "image/draw";_a "math";_e "sort";_c "strings";);func (_acd stops )Less (i ,j int )bool {return _acd [i ]._ecb < _acd [j ]._ecb };
func (_aea *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _efe =16;for _efb :=0;_efb < _efe ;_efb ++{_cdge :=float64 (_efb +0)/_efe ;_acb :=float64 (_efb +1)/_efe ;_bdba :=angle1 +(angle2 -angle1 )*_cdge ;_eafe :=angle1 +(angle2 -angle1 )*_acb ;
_gdca :=x +rx *_a .Cos (_bdba );_ggb :=y +ry *_a .Sin (_bdba );_cddga :=x +rx *_a .Cos ((_bdba +_eafe )/2);_bafa :=y +ry *_a .Sin ((_bdba +_eafe )/2);_cef :=x +rx *_a .Cos (_eafe );_ffb :=y +ry *_a .Sin (_eafe );_dcb :=2*_cddga -_gdca /2-_cef /2;_edc :=2*_bafa -_ggb /2-_ffb /2;
if _efb ==0{if _aea ._bfb {_aea .LineTo (_gdca ,_ggb );}else {_aea .MoveTo (_gdca ,_ggb );};};_aea .QuadraticTo (_dcb ,_edc ,_cef ,_ffb );};};func (_abc *Context )MoveTo (x ,y float64 ){if _abc ._bfb {_abc ._df .Add1 (_daad (_abc ._ddc ));};x ,y =_abc .Transform (x ,y );
_fdb :=_ag .NewPoint (x ,y );_dag :=_daad (_fdb );_abc ._ggeg .Start (_dag );_abc ._df .Start (_dag );_abc ._ddc =_fdb ;_abc ._cdg =_fdb ;_abc ._bfb =true ;};func (_gde *Context )Identity (){_gde ._cab =_ag .IdentityMatrix ()};func NewContextForRGBA (im *_ed .RGBA )*Context {_gfg :=im .Bounds ().Size ().X ;
_bbe :=im .Bounds ().Size ().Y ;return &Context {_aad :_gfg ,_gdcg :_bbe ,_ccg :_d .NewRasterizer (_gfg ,_bbe ),_dbb :im ,_abe :_ae .Transparent ,_dec :_gdc ,_abb :_gca ,_fea :1,_efa :_ad .FillRuleWinding ,_cab :_ag .IdentityMatrix (),_dge :_ad .NewTextState ()};
};func (_dfd *Context )SetDash (dashes ...float64 ){_dfd ._cfb =dashes };func _agce (_daag [][]_ag .Point ,_aaa []float64 ,_agea float64 )[][]_ag .Point {var _cbfe [][]_ag .Point ;if len (_aaa )==0{return _daag ;};if len (_aaa )==1{_aaa =append (_aaa ,_aaa [0]);
};for _ ,_aceg :=range _daag {if len (_aceg )< 2{continue ;};_gegeb :=_aceg [0];_daf :=1;_cffd :=0;_ead :=0.0;if _agea !=0{var _gbfb float64 ;for _ ,_afd :=range _aaa {_gbfb +=_afd ;};_agea =_a .Mod (_agea ,_gbfb );if _agea < 0{_agea +=_gbfb ;};for _egg ,_ega :=range _aaa {_agea -=_ega ;
if _agea < 0{_cffd =_egg ;_ead =_ega +_agea ;break ;};};};var _eac []_ag .Point ;_eac =append (_eac ,_gegeb );for _daf < len (_aceg ){_ccb :=_aaa [_cffd ];_aga :=_aceg [_daf ];_fgdc :=_gegeb .Distance (_aga );_cac :=_ccb -_ead ;if _fgdc > _cac {_gdbf :=_cac /_fgdc ;
_gcag :=_gegeb .Interpolate (_aga ,_gdbf );_eac =append (_eac ,_gcag );if _cffd %2==0&&len (_eac )> 1{_cbfe =append (_cbfe ,_eac );};_eac =nil ;_eac =append (_eac ,_gcag );_ead =0;_gegeb =_gcag ;_cffd =(_cffd +1)%len (_aaa );}else {_eac =append (_eac ,_aga );
_gegeb =_aga ;_ead +=_fgdc ;_daf ++;};};if _cffd %2==0&&len (_eac )> 1{_cbfe =append (_cbfe ,_eac );};};return _cbfe ;};func (_eba *Context )SetDashOffset (offset float64 ){_eba ._dbg =offset };func _ebbb (_abfc _d .Path ,_eaef []float64 ,_ddg float64 )_d .Path {return _bgg (_agce (_aed (_abfc ),_eaef ,_ddg ));
};func _fgd (_gfb ,_fe ,_dde ,_aag ,_eca ,_ada ,_cf ,_ef ,_cfe float64 )(_da ,_bg float64 ){_geb :=1-_cfe ;_fge :=_geb *_geb *_geb ;_db :=3*_geb *_geb *_cfe ;_de :=3*_geb *_cfe *_cfe ;_cd :=_cfe *_cfe *_cfe ;_da =_fge *_gfb +_db *_dde +_de *_eca +_cd *_cf ;
_bg =_fge *_fe +_db *_aag +_de *_ada +_cd *_ef ;return ;};func (_bd *Context )Width ()int {return _bd ._aad };func (_dcc *Context )Clip (){_dcc .ClipPreserve ();_dcc .ClearPath ()};func (_eddf *radialGradient )ColorAt (x ,y int )_ae .Color {if len (_eddf ._cbbf )==0{return _ae .Transparent ;
};_dda ,_cefa :=float64 (x )+0.5-_eddf ._agc ._gae ,float64 (y )+0.5-_eddf ._agc ._cbfd ;_adcb :=_afe (_dda ,_cefa ,_eddf ._agc ._eaa ,_eddf ._eff ._gae ,_eddf ._eff ._cbfd ,_eddf ._eff ._eaa );_cfa :=_afe (_dda ,_cefa ,-_eddf ._agc ._eaa ,_dda ,_cefa ,_eddf ._agc ._eaa );
if _eddf ._bbd ==0{if _adcb ==0{return _ae .Transparent ;};_agbd :=0.5*_cfa /_adcb ;if _agbd *_eddf ._eff ._eaa >=_eddf ._efbd {return _ecaf (_agbd ,_eddf ._cbbf );};return _ae .Transparent ;};_febe :=_afe (_adcb ,_eddf ._bbd ,0,_adcb ,-_cfa ,0);if _febe >=0{_ccd :=_a .Sqrt (_febe );
_cebe :=(_adcb +_ccd )*_eddf ._cbg ;_dbe :=(_adcb -_ccd )*_eddf ._cbg ;if _cebe *_eddf ._eff ._eaa >=_eddf ._efbd {return _ecaf (_cebe ,_eddf ._cbbf );}else if _dbe *_eddf ._eff ._eaa >=_eddf ._efbd {return _ecaf (_dbe ,_eddf ._cbbf );};};return _ae .Transparent ;
};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_ad .Gradient {_gaf :=&linearGradient {_cge :x0 ,_fae :y0 ,_fdc :x1 ,_eaeb :y1 };return _gaf ;};func (_agb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_agb .Translate (x ,y );_agb .Scale (sx ,sy );_agb .Translate (-x ,-y );
};func _daad (_agag _ag .Point )_fg .Point26_6 {return _fg .Point26_6 {X :_cfdc (_agag .X ),Y :_cfdc (_agag .Y )}};func (_cddg *Context )AsMask ()*_ed .Alpha {_eda :=_ed .NewAlpha (_cddg ._dbb .Bounds ());_ee .Draw (_eda ,_cddg ._dbb .Bounds (),_cddg ._dbb ,_ed .Point {},_ee .Src );
return _eda ;};func (_dbbd *Context )RotateAbout (angle ,x ,y float64 ){_dbbd .Translate (x ,y );_dbbd .Rotate (angle );_dbbd .Translate (-x ,-y );};func _bgg (_begc [][]_ag .Point )_d .Path {var _gced _d .Path ;for _ ,_bab :=range _begc {var _gdgf _fg .Point26_6 ;
for _feg ,_agbc :=range _bab {_cfcb :=_daad (_agbc );if _feg ==0{_gced .Start (_cfcb );}else {_bgec :=_cfcb .X -_gdgf .X ;_dba :=_cfcb .Y -_gdgf .Y ;if _bgec < 0{_bgec =-_bgec ;};if _dba < 0{_dba =-_dba ;};if _bgec +_dba > 8{_gced .Add1 (_cfcb );};};_gdgf =_cfcb ;
};};return _gced ;};func (_cdf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_fa :=_ae .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cdf ._abb =_cgbc (_fa );};func (_fbd *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fbd ._bfb {_fbd .MoveTo (x1 ,y1 );
};_gege ,_aab :=_fbd ._cdg .X ,_fbd ._cdg .Y ;x1 ,y1 =_fbd .Transform (x1 ,y1 );x2 ,y2 =_fbd .Transform (x2 ,y2 );x3 ,y3 =_fbd .Transform (x3 ,y3 );_dfdde :=_eee (_gege ,_aab ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_dgb :=_daad (_fbd ._cdg );for _ ,_debb :=range _dfdde [1:]{_bef :=_daad (_debb );
if _bef ==_dgb {continue ;};_dgb =_bef ;_fbd ._ggeg .Add1 (_bef );_fbd ._df .Add1 (_bef );_fbd ._cdg =_debb ;};};type stops []stop ;func (_bfdb *Context )DrawCircle (x ,y ,r float64 ){_bfdb .NewSubPath ();_bfdb .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );
_bfdb .ClosePath ();};func (_cgae *Context )DrawString (s string ,face _adf .Face ,x ,y float64 ){_cgae .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_agf *Context )SetMask (mask *_ed .Alpha )error {if mask .Bounds ().Size ()!=_agf ._dbb .Bounds ().Size (){return _b .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_agf ._gdd =mask ;return nil ;};func _aadab (_gcae float64 )float64 {return _gcae *_a .Pi /180};func (_fdbc *patternPainter )Paint (ss []_d .Span ,done bool ){_fdba :=_fdbc ._abbfb .Bounds ();for _ ,_ebfg :=range ss {if _ebfg .Y < _fdba .Min .Y {continue ;
};if _ebfg .Y >=_fdba .Max .Y {return ;};if _ebfg .X0 < _fdba .Min .X {_ebfg .X0 =_fdba .Min .X ;};if _ebfg .X1 > _fdba .Max .X {_ebfg .X1 =_fdba .Max .X ;};if _ebfg .X0 >=_ebfg .X1 {continue ;};const _ebca =1<<16-1;_fadf :=_ebfg .Y -_fdbc ._abbfb .Rect .Min .Y ;
_fddg :=_ebfg .X0 -_fdbc ._abbfb .Rect .Min .X ;_faf :=(_ebfg .Y -_fdbc ._abbfb .Rect .Min .Y )*_fdbc ._abbfb .Stride +(_ebfg .X0 -_fdbc ._abbfb .Rect .Min .X )*4;_dae :=_faf +(_ebfg .X1 -_ebfg .X0 )*4;for _aege ,_cecef :=_faf ,_fddg ;_aege < _dae ;_aege ,_cecef =_aege +4,_cecef +1{_fcbb :=_ebfg .Alpha ;
if _fdbc ._gcg !=nil {_fcbb =_fcbb *uint32 (_fdbc ._gcg .AlphaAt (_cecef ,_fadf ).A )/255;if _fcbb ==0{continue ;};};_ecda :=_fdbc ._gac .ColorAt (_cecef ,_fadf );_dbd ,_gfd ,_cfge ,_gdbd :=_ecda .RGBA ();_defa :=uint32 (_fdbc ._abbfb .Pix [_aege +0]);
_ffdc :=uint32 (_fdbc ._abbfb .Pix [_aege +1]);_ecdc :=uint32 (_fdbc ._abbfb .Pix [_aege +2]);_eab :=uint32 (_fdbc ._abbfb .Pix [_aege +3]);_bgda :=(_ebca -(_gdbd *_fcbb /_ebca ))*0x101;_fdbc ._abbfb .Pix [_aege +0]=uint8 ((_defa *_bgda +_dbd *_fcbb )/_ebca >>8);
_fdbc ._abbfb .Pix [_aege +1]=uint8 ((_ffdc *_bgda +_gfd *_fcbb )/_ebca >>8);_fdbc ._abbfb .Pix [_aege +2]=uint8 ((_ecdc *_bgda +_cfge *_fcbb )/_ebca >>8);_fdbc ._abbfb .Pix [_aege +3]=uint8 ((_eab *_bgda +_gdbd *_fcbb )/_ebca >>8);};};};type surfacePattern struct{_gagbe _ed .Image ;
_baaf repeatOp ;};type stop struct{_ecb float64 ;_afgg _ae .Color ;};func (_ebf *Context )Shear (x ,y float64 ){_ebf ._cab .Shear (x ,y )};func _gaff (_bcb *_ed .RGBA ,_ffdcg *_ed .Alpha ,_cacb _ad .Pattern )*patternPainter {return &patternPainter {_bcb ,_ffdcg ,_cacb };
};func (_eeea *Context )Matrix ()_ag .Matrix {return _eeea ._cab };func (_dbc *Context )fill (_aec _d .Painter ){_ecd :=_dbc ._df ;if _dbc ._bfb {_ecd =make (_d .Path ,len (_dbc ._df ));copy (_ecd ,_dbc ._df );_ecd .Add1 (_daad (_dbc ._ddc ));};_abg :=_dbc ._ccg ;
_abg .UseNonZeroWinding =_dbc ._efa ==_ad .FillRuleWinding ;_abg .Clear ();_abg .AddPath (_ecd );_abg .Rasterize (_aec );};func _aed (_ccaa _d .Path )[][]_ag .Point {var _gceg [][]_ag .Point ;var _bccf []_ag .Point ;var _fbcg ,_bgf float64 ;for _abed :=0;
_abed < len (_ccaa );{switch _ccaa [_abed ]{case 0:if len (_bccf )> 0{_gceg =append (_gceg ,_bccf );_bccf =nil ;};_ddea :=_gbfc (_ccaa [_abed +1]);_dgdc :=_gbfc (_ccaa [_abed +2]);_bccf =append (_bccf ,_ag .NewPoint (_ddea ,_dgdc ));_fbcg ,_bgf =_ddea ,_dgdc ;
_abed +=4;case 1:_edac :=_gbfc (_ccaa [_abed +1]);_eafg :=_gbfc (_ccaa [_abed +2]);_bccf =append (_bccf ,_ag .NewPoint (_edac ,_eafg ));_fbcg ,_bgf =_edac ,_eafg ;_abed +=4;case 2:_adg :=_gbfc (_ccaa [_abed +1]);_cgc :=_gbfc (_ccaa [_abed +2]);_fcc :=_gbfc (_ccaa [_abed +3]);
_ece :=_gbfc (_ccaa [_abed +4]);_feaa :=_dc (_fbcg ,_bgf ,_adg ,_cgc ,_fcc ,_ece );_bccf =append (_bccf ,_feaa ...);_fbcg ,_bgf =_fcc ,_ece ;_abed +=6;case 3:_dcg :=_gbfc (_ccaa [_abed +1]);_ege :=_gbfc (_ccaa [_abed +2]);_daa :=_gbfc (_ccaa [_abed +3]);
_fde :=_gbfc (_ccaa [_abed +4]);_dfdg :=_gbfc (_ccaa [_abed +5]);_caeg :=_gbfc (_ccaa [_abed +6]);_bdfc :=_eee (_fbcg ,_bgf ,_dcg ,_ege ,_daa ,_fde ,_dfdg ,_caeg );_bccf =append (_bccf ,_bdfc ...);_fbcg ,_bgf =_dfdg ,_caeg ;_abed +=8;default:_bc .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_ccaa );
return _gceg ;};};if len (_bccf )> 0{_gceg =append (_gceg ,_bccf );};return _gceg ;};func (_cfca *Context )SetRGB255 (r ,g ,b int ){_cfca .SetRGBA255 (r ,g ,b ,255)};func (_gbg *Context )NewSubPath (){if _gbg ._bfb {_gbg ._df .Add1 (_daad (_gbg ._ddc ));
};_gbg ._bfb =false ;};func NewContextForImage (im _ed .Image )*Context {return NewContextForRGBA (_dbdf (im ))};func (_dab *Context )Stroke (){_dab .StrokePreserve ();_dab .ClearPath ()};type radialGradient struct{_agc ,_egf ,_eff circle ;_bbd ,_cbg float64 ;
_efbd float64 ;_cbbf stops ;};func (_dgbe *Context )DrawImageAnchored (im _ed .Image ,x ,y int ,ax ,ay float64 ){_gbb :=im .Bounds ().Size ();x -=int (ax *float64 (_gbb .X ));y -=int (ay *float64 (_gbb .Y ));_bdfe :=_ee .BiLinear ;_fcg :=_dgbe ._cab .Clone ().Translate (float64 (x ),float64 (y ));
_dfg :=_aae .Aff3 {_fcg [0],_fcg [3],_fcg [6],_fcg [1],_fcg [4],_fcg [7]};if _dgbe ._gdd ==nil {_bdfe .Transform (_dgbe ._dbb ,_dfg ,im ,im .Bounds (),_ee .Over ,nil );}else {_bdfe .Transform (_dgbe ._dbb ,_dfg ,im ,im .Bounds (),_ee .Over ,&_ee .Options {DstMask :_dgbe ._gdd ,DstMaskP :_ed .Point {}});
};};func (_cgb *Context )DrawImage (im _ed .Image ,x ,y int ){_cgb .DrawImageAnchored (im ,x ,y ,0,0)};func (_cee *Context )SetMatrix (m _ag .Matrix ){_cee ._cab =m };func (_ea *Context )SetFillRule (fillRule _ad .FillRule ){_ea ._efa =fillRule };func (_gab *Context )drawString (_cbc string ,_bafaa _adf .Face ,_dabe ,_gdge float64 ){_dcfd :=&_adf .Drawer {Src :_ed .NewUniform (_gab ._abe ),Face :_bafaa ,Dot :_daad (_ag .NewPoint (_dabe ,_gdge ))};
_aef :=rune (-1);for _ ,_baaa :=range _cbc {if _aef >=0{_dcfd .Dot .X +=_dcfd .Face .Kern (_aef ,_baaa );};_eedb ,_gdf ,_fdd ,_cga ,_bcc :=_dcfd .Face .Glyph (_dcfd .Dot ,_baaa );if !_bcc {continue ;};_gba :=_eedb .Sub (_eedb .Min );_cdc :=_ed .NewRGBA (_gba );
_ee .DrawMask (_cdc ,_gba ,_dcfd .Src ,_ed .Point {},_gdf ,_fdd ,_ee .Over );var _ebb *_ee .Options ;if _gab ._gdd !=nil {_ebb =&_ee .Options {DstMask :_gab ._gdd ,DstMaskP :_ed .Point {}};};_bge :=_gab ._cab .Clone ().Translate (float64 (_eedb .Min .X ),float64 (_eedb .Min .Y ));
_cgfb :=_aae .Aff3 {_bge [0],_bge [3],_bge [6],_bge [1],_bge [4],_bge [7]};_ee .BiLinear .Transform (_gab ._dbb ,_cgfb ,_cdc ,_gba ,_ee .Over ,_ebb );_dcfd .Dot .X +=_cga ;_aef =_baaa ;};};const (_gfe repeatOp =iota ;_ffcg ;_dggc ;_beff ;);func (_bae *Context )ResetClip (){_bae ._gdd =nil };
func _ecaf (_gffa float64 ,_gegg stops )_ae .Color {if _gffa <=0.0||len (_gegg )==1{return _gegg [0]._afgg ;};_faa :=_gegg [len (_gegg )-1];if _gffa >=_faa ._ecb {return _faa ._afgg ;};for _ddb ,_cfef :=range _gegg [1:]{if _gffa < _cfef ._ecb {_gffa =(_gffa -_gegg [_ddb ]._ecb )/(_cfef ._ecb -_gegg [_ddb ]._ecb );
return _aacf (_gegg [_ddb ]._afgg ,_cfef ._afgg ,_gffa );};};return _faa ._afgg ;};func (_eae *Context )setFillAndStrokeColor (_bba _ae .Color ){_eae ._abe =_bba ;_eae ._dec =_cgbc (_bba );_eae ._abb =_cgbc (_bba );};func _dbdf (_gbeac _ed .Image )*_ed .RGBA {_eaff :=_gbeac .Bounds ();
_bbf :=_ed .NewRGBA (_eaff );_ca .Draw (_bbf ,_eaff ,_gbeac ,_eaff .Min ,_ca .Src );return _bbf ;};func (_gagb *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_gagb .MoveTo (x1 ,y1 );_gagb .LineTo (x2 ,y2 )};func (_bca *Context )InvertMask (){if _bca ._gdd ==nil {_bca ._gdd =_ed .NewAlpha (_bca ._dbb .Bounds ());
}else {for _bag ,_baa :=range _bca ._gdd .Pix {_bca ._gdd .Pix [_bag ]=255-_baa ;};};};func (_gff *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gff .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_fff *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_cbbg ,_gbf ,_eaf ,_bcdg :=x ,x +r ,x +w -r ,x +w ;
_cff ,_gceb ,_add ,_bgdbd :=y ,y +r ,y +h -r ,y +h ;_fff .NewSubPath ();_fff .MoveTo (_gbf ,_cff );_fff .LineTo (_eaf ,_cff );_fff .DrawArc (_eaf ,_gceb ,r ,_aadab (270),_aadab (360));_fff .LineTo (_bcdg ,_add );_fff .DrawArc (_eaf ,_add ,r ,_aadab (0),_aadab (90));
_fff .LineTo (_gbf ,_bgdbd );_fff .DrawArc (_gbf ,_add ,r ,_aadab (90),_aadab (180));_fff .LineTo (_cbbg ,_gceb );_fff .DrawArc (_gbf ,_gceb ,r ,_aadab (180),_aadab (270));_fff .ClosePath ();};func (_dcf *Context )SetColor (c _ae .Color ){_dcf .setFillAndStrokeColor (c )};
func (_aadaf *Context )DrawStringAnchored (s string ,face _adf .Face ,x ,y ,ax ,ay float64 ){_cba ,_fcbe :=_aadaf .MeasureString (s ,face );_aadaf .drawString (s ,face ,x -ax *_cba ,y +ay *_fcbe );};func (_gdcab *Context )Rotate (angle float64 ){_gdcab ._cab =_gdcab ._cab .Rotate (angle )};
func (_bdd *Context )drawRegularPolygon (_dcba int ,_dbbc ,_ggee ,_gdg ,_cbf float64 ){_cgf :=2*_a .Pi /float64 (_dcba );_cbf -=_a .Pi /2;if _dcba %2==0{_cbf +=_cgf /2;};_bdd .NewSubPath ();for _cfba :=0;_cfba < _dcba ;_cfba ++{_egb :=_cbf +_cgf *float64 (_cfba );
_bdd .LineTo (_dbbc +_gdg *_a .Cos (_egb ),_ggee +_gdg *_a .Sin (_egb ));};_bdd .ClosePath ();};func _eee (_ade ,_eeg ,_ecg ,_af ,_fce ,_aeg ,_cfd ,_ce float64 )[]_ag .Point {_bf :=(_a .Hypot (_ecg -_ade ,_af -_eeg )+_a .Hypot (_fce -_ecg ,_aeg -_af )+_a .Hypot (_cfd -_fce ,_ce -_aeg ));
_fb :=int (_bf +0.5);if _fb < 4{_fb =4;};_fcb :=float64 (_fb )-1;_cae :=make ([]_ag .Point ,_fb );for _cdd :=0;_cdd < _fb ;_cdd ++{_gge :=float64 (_cdd )/_fcb ;_cad ,_def :=_fgd (_ade ,_eeg ,_ecg ,_af ,_fce ,_aeg ,_cfd ,_ce ,_gge );_cae [_cdd ]=_ag .NewPoint (_cad ,_def );
};return _cae ;};func (_bgcb *Context )DrawRectangle (x ,y ,w ,h float64 ){_bgcb .NewSubPath ();_bgcb .MoveTo (x ,y );_bgcb .LineTo (x +w ,y );_bgcb .LineTo (x +w ,y +h );_bgcb .LineTo (x ,y +h );_bgcb .ClosePath ();};type linearGradient struct{_cge ,_fae ,_fdc ,_eaeb float64 ;
_gffe stops ;};func (_abeg *Context )ClosePath (){if _abeg ._bfb {_dgd :=_daad (_abeg ._ddc );_abeg ._ggeg .Add1 (_dgd );_abeg ._df .Add1 (_dgd );_abeg ._cdg =_abeg ._ddc ;};};func (_ggg *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_ggg ._bfb {_ggg .MoveTo (x1 ,y1 );
};x1 ,y1 =_ggg .Transform (x1 ,y1 );x2 ,y2 =_ggg .Transform (x2 ,y2 );_ecf :=_ag .NewPoint (x1 ,y1 );_aeb :=_ag .NewPoint (x2 ,y2 );_dfdd :=_daad (_ecf );_abbf :=_daad (_aeb );_ggg ._ggeg .Add2 (_dfdd ,_abbf );_ggg ._df .Add2 (_dfdd ,_abbf );_ggg ._cdg =_aeb ;
};func (_gbaf *surfacePattern )ColorAt (x ,y int )_ae .Color {_defc :=_gbaf ._gagbe .Bounds ();switch _gbaf ._baaf {case _ffcg :if y >=_defc .Dy (){return _ae .Transparent ;};case _dggc :if x >=_defc .Dx (){return _ae .Transparent ;};case _beff :if x >=_defc .Dx ()||y >=_defc .Dy (){return _ae .Transparent ;
};};x =x %_defc .Dx ()+_defc .Min .X ;y =y %_defc .Dy ()+_defc .Min .Y ;return _gbaf ._gagbe .At (x ,y );};func _ccbb (_dgea string )(_dbde ,_ecad ,_defg ,_bgae int ){_dgea =_c .TrimPrefix (_dgea ,"\u0023");_bgae =255;if len (_dgea )==3{_agcf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";
_cg .Sscanf (_dgea ,_agcf ,&_dbde ,&_ecad ,&_defg );_dbde |=_dbde <<4;_ecad |=_ecad <<4;_defg |=_defg <<4;};if len (_dgea )==6{_befe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cg .Sscanf (_dgea ,_befe ,&_dbde ,&_ecad ,&_defg );
};if len (_dgea )==8{_eedc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cg .Sscanf (_dgea ,_eedc ,&_dbde ,&_ecad ,&_defg ,&_bgae );};return ;};type Context struct{_aad int ;_gdcg int ;_ccg *_d .Rasterizer ;
_dbb *_ed .RGBA ;_gdd *_ed .Alpha ;_abe _ae .Color ;_dec _ad .Pattern ;_abb _ad .Pattern ;_ggeg _d .Path ;_df _d .Path ;_ddc _ag .Point ;_cdg _ag .Point ;_bfb bool ;_cfb []float64 ;_dbg float64 ;_fea float64 ;_ceb _ad .LineCap ;_deb _ad .LineJoin ;_efa _ad .FillRule ;
_cab _ag .Matrix ;_dge _ad .TextState ;_bec []*Context ;};func (_dded *Context )SetRGB (r ,g ,b float64 ){_dded .SetRGBA (r ,g ,b ,1)};func (_dfga *solidPattern )ColorAt (x ,y int )_ae .Color {return _dfga ._ecbf };func (_aabd *Context )Push (){_gfc :=*_aabd ;
_aabd ._bec =append (_aabd ._bec ,&_gfc )};func (_edg stops )Len ()int {return len (_edg )};func (_adb *Context )SetStrokeStyle (pattern _ad .Pattern ){_adb ._abb =pattern };func _cfdc (_dee float64 )_fg .Int26_6 {_dee =_aa .RoundDefault (_dee );return _fg .Int26_6 (_dee *64)};
func _efbc (_aagd ,_gdb uint32 ,_aadd float64 )uint8 {return uint8 (int32 (float64 (_aagd )*(1.0-_aadd )+float64 (_gdb )*_aadd )>>8);};func (_gb *Context )SetRGBA255 (r ,g ,b ,a int ){_gb ._abe =_ae .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_gb .setFillAndStrokeColor (_gb ._abe );};func (_acfg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_acfg .Translate (x ,y );_acfg .Shear (sx ,sy );_acfg .Translate (-x ,-y );};func _cgbc (_cece _ae .Color )_ad .Pattern {return &solidPattern {_ecbf :_cece }};
func (_efg *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_abf :=_efg ._abe .RGBA ();if _abf > 0&&_abf !=65535&&a ==1{a =float64 (_abf )/65535;};_efg ._abe =_ae .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_efg .setFillAndStrokeColor (_efg ._abe );
};func (_eg *Context )StrokePattern ()_ad .Pattern {return _eg ._abb };func (_bdf *Context )FillPattern ()_ad .Pattern {return _bdf ._dec };func (_ff *Context )SetHexColor (x string ){_ffd ,_gdda ,_bgd ,_bbb :=_ccbb (x );_ff .SetRGBA255 (_ffd ,_gdda ,_bgd ,_bbb );
};func (_beaa *Context )DrawPoint (x ,y ,r float64 ){_beaa .Push ();_ecab ,_ggd :=_beaa .Transform (x ,y );_beaa .Identity ();_beaa .DrawCircle (_ecab ,_ggd ,r );_beaa .Pop ();};func (_adca *radialGradient )AddColorStop (offset float64 ,color _ae .Color ){_adca ._cbbf =append (_adca ._cbbf ,stop {_ecb :offset ,_afgg :color });
_e .Sort (_adca ._cbbf );};func (_gfge *Context )LineTo (x ,y float64 ){if !_gfge ._bfb {_gfge .MoveTo (x ,y );}else {x ,y =_gfge .Transform (x ,y );_abcd :=_ag .NewPoint (x ,y );_beca :=_daad (_abcd );_gfge ._ggeg .Add1 (_beca );_gfge ._df .Add1 (_beca );
_gfge ._cdg =_abcd ;};};func (_dfdb *Context )stroke (_adaf _d .Painter ){_ebd :=_dfdb ._ggeg ;if len (_dfdb ._cfb )> 0{_ebd =_ebbb (_ebd ,_dfdb ._cfb ,_dfdb ._dbg );}else {_ebd =_bgg (_aed (_ebd ));};_ccf :=_dfdb ._ccg ;_ccf .UseNonZeroWinding =true ;
_ccf .Clear ();_ac :=(_dfdb ._cab .ScalingFactorX ()+_dfdb ._cab .ScalingFactorY ())/2;_ccf .AddStroke (_ebd ,_cfdc (_dfdb ._fea *_ac ),_dfdb .capper (),_dfdb .joiner ());_ccf .Rasterize (_adaf );};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_ad .Gradient {_fgee :=circle {x0 ,y0 ,r0 };
_cgd :=circle {x1 ,y1 ,r1 };_efc :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_dfc :=_afe (_efc ._gae ,_efc ._cbfd ,-_efc ._eaa ,_efc ._gae ,_efc ._cbfd ,_efc ._eaa );var _ace float64 ;if _dfc !=0{_ace =1.0/_dfc ;};_bga :=-_fgee ._eaa ;_gfcd :=&radialGradient {_agc :_fgee ,_egf :_cgd ,_eff :_efc ,_bbd :_dfc ,_cbg :_ace ,_efbd :_bga };
return _gfcd ;};func (_cca *Context )Transform (x ,y float64 )(_dacd ,_bbbf float64 ){return _cca ._cab .Transform (x ,y )};func (_eag *Context )MeasureString (s string ,face _adf .Face )(_dbbe ,_dgba float64 ){_dbf :=&_adf .Drawer {Face :face };_bbbc :=_dbf .MeasureString (s );
return float64 (_bbbc >>6),_eag ._dge .Tf .Size ;};func (_bdb *Context )SetPixel (x ,y int ){_bdb ._dbb .Set (x ,y ,_bdb ._abe )};func (_fad *Context )Clear (){_bgcd :=_ed .NewUniform (_fad ._abe );_ee .Draw (_fad ._dbb ,_fad ._dbb .Bounds (),_bgcd ,_ed .Point {},_ee .Src );
};var (_gdc =_cgbc (_ae .White );_gca =_cgbc (_ae .Black ););func (_fbb *Context )LineWidth ()float64 {return _fbb ._fea };func (_gbe *Context )joiner ()_d .Joiner {switch _gbe ._deb {case _ad .LineJoinBevel :return _d .BevelJoiner ;case _ad .LineJoinRound :return _d .RoundJoiner ;
};return nil ;};func _dc (_dd ,_dg ,_gf ,_ec ,_eeb ,_cbb float64 )[]_ag .Point {_gd :=(_a .Hypot (_gf -_dd ,_ec -_dg )+_a .Hypot (_eeb -_gf ,_cbb -_ec ));_gg :=int (_gd +0.5);if _gg < 4{_gg =4;};_ba :=float64 (_gg )-1;_be :=make ([]_ag .Point ,_gg );for _fc :=0;
_fc < _gg ;_fc ++{_gce :=float64 (_fc )/_ba ;_dgg ,_bea :=_ab (_dd ,_dg ,_gf ,_ec ,_eeb ,_cbb ,_gce );_be [_fc ]=_ag .NewPoint (_dgg ,_bea );};return _be ;};func _afe (_abff ,_bdc ,_adea ,_cbd ,_ebbd ,_bdce float64 )float64 {return _abff *_cbd +_bdc *_ebbd +_adea *_bdce ;
};func _aacf (_ccc ,_ccdg _ae .Color ,_affg float64 )_ae .Color {_fgg ,_gcd ,_cgdg ,_edad :=_ccc .RGBA ();_bbag ,_cbe ,_cgg ,_eea :=_ccdg .RGBA ();return _ae .RGBA {_efbc (_fgg ,_bbag ,_affg ),_efbc (_gcd ,_cbe ,_affg ),_efbc (_cgdg ,_cgg ,_affg ),_efbc (_edad ,_eea ,_affg )};
};func (_baf *Context )SetLineJoin (lineJoin _ad .LineJoin ){_baf ._deb =lineJoin };type circle struct{_gae ,_cbfd ,_eaa float64 };func NewContext (width ,height int )*Context {return NewContextForRGBA (_ed .NewRGBA (_ed .Rect (0,0,width ,height )));};
func (_cfc *Context )SetFillStyle (pattern _ad .Pattern ){if _dac ,_cfg :=pattern .(*solidPattern );_cfg {_cfc ._abe =_dac ._ecbf ;};_cfc ._dec =pattern ;};type solidPattern struct{_ecbf _ae .Color };func _ab (_g ,_edd ,_gc ,_eef ,_gcb ,_cb ,_gcf float64 )(_eb ,_ge float64 ){_cc :=1-_gcf ;
_fd :=_cc *_cc ;_eed :=2*_cc *_gcf ;_bb :=_gcf *_gcf ;_eb =_fd *_g +_eed *_gc +_bb *_gcb ;_ge =_fd *_edd +_eed *_eef +_bb *_cb ;return ;};func (_fgc *Context )FillPreserve (){var _gcfb _d .Painter ;if _fgc ._gdd ==nil {if _bcd ,_bde :=_fgc ._dec .(*solidPattern );
_bde {_fcf :=_d .NewRGBAPainter (_fgc ._dbb );_fcf .SetColor (_bcd ._ecbf );_gcfb =_fcf ;};};if _gcfb ==nil {_gcfb =_gaff (_fgc ._dbb ,_fgc ._gdd ,_fgc ._dec );};_fgc .fill (_gcfb );};func (_gbgc stops )Swap (i ,j int ){_gbgc [i ],_gbgc [j ]=_gbgc [j ],_gbgc [i ]};
func (_gggb *Context )ClipPreserve (){_gag :=_ed .NewAlpha (_ed .Rect (0,0,_gggb ._aad ,_gggb ._gdcg ));_bfd :=_d .NewAlphaOverPainter (_gag );_gggb .fill (_bfd );if _gggb ._gdd ==nil {_gggb ._gdd =_gag ;}else {_gbgd :=_ed .NewAlpha (_ed .Rect (0,0,_gggb ._aad ,_gggb ._gdcg ));
_ee .DrawMask (_gbgd ,_gbgd .Bounds (),_gag ,_ed .Point {},_gggb ._gdd ,_ed .Point {},_ee .Over );_gggb ._gdd =_gbgd ;};};func (_aff *Context )SetLineCap (lineCap _ad .LineCap ){_aff ._ceb =lineCap };func _gbfc (_bgcbc _fg .Int26_6 )float64 {const _aee ,_bce =6,1<<6-1;
if _bgcbc >=0{return float64 (_bgcbc >>_aee )+float64 (_bgcbc &_bce )/64;};_bgcbc =-_bgcbc ;if _bgcbc >=0{return -(float64 (_bgcbc >>_aee )+float64 (_bgcbc &_bce )/64);};return 0;};func (_bac *Context )ClearPath (){_bac ._ggeg .Clear ();_bac ._df .Clear ();
_bac ._bfb =false };func (_age *Context )SetLineWidth (lineWidth float64 ){_age ._fea =lineWidth };func (_eebg *Context )TextState ()*_ad .TextState {return &_eebg ._dge };func (_efac *Context )Fill (){_efac .FillPreserve ();_efac .ClearPath ()};func (_acf *Context )StrokePreserve (){var _ced _d .Painter ;
if _acf ._gdd ==nil {if _bgc ,_gda :=_acf ._abb .(*solidPattern );_gda {_fda :=_d .NewRGBAPainter (_acf ._dbb );_fda .SetColor (_bgc ._ecbf );_ced =_fda ;};};if _ced ==nil {_ced =_gaff (_acf ._dbb ,_acf ._gdd ,_acf ._abb );};_acf .stroke (_ced );};type repeatOp int ;
func (_beg *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_beg .NewSubPath ();_beg .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_beg .ClosePath ();};func (_cfbc *linearGradient )AddColorStop (offset float64 ,color _ae .Color ){_cfbc ._gffe =append (_cfbc ._gffe ,stop {_ecb :offset ,_afgg :color });
_e .Sort (_cfbc ._gffe );};func (_fbe *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_geg :=_fbe ._abe .RGBA ();if _geg > 0&&_geg !=65535&&a ==1{a =float64 (_geg )/65535;};_fbbg :=_ae .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_fbe ._abe =_fbbg ;_fbe ._dec =_cgbc (_fbbg );};func (_gbea *Context )Translate (x ,y float64 ){_gbea ._cab =_gbea ._cab .Translate (x ,y )};func (_aada *Context )Image ()_ed .Image {return _aada ._dbb };func (_afg *Context )Height ()int {return _afg ._gdcg };
func (_feb *Context )Pop (){_afa :=*_feb ;_adc :=_feb ._bec ;_ebfe :=_adc [len (_adc )-1];*_feb =*_ebfe ;_feb ._ggeg =_afa ._ggeg ;_feb ._df =_afa ._df ;_feb ._ddc =_afa ._ddc ;_feb ._cdg =_afa ._cdg ;_feb ._bfb =_afa ._bfb ;};type patternPainter struct{_abbfb *_ed .RGBA ;
_gcg *_ed .Alpha ;_gac _ad .Pattern ;};func (_gcfg *Context )Scale (x ,y float64 ){_gcfg ._cab =_gcfg ._cab .Scale (x ,y )};func (_gcfd *linearGradient )ColorAt (x ,y int )_ae .Color {if len (_gcfd ._gffe )==0{return _ae .Transparent ;};_ebc ,_edaf :=float64 (x ),float64 (y );
_fdbb ,_dgf ,_eefc ,_ffc :=_gcfd ._cge ,_gcfd ._fae ,_gcfd ._fdc ,_gcfd ._eaeb ;_aac ,_abbg :=_eefc -_fdbb ,_ffc -_dgf ;if _abbg ==0&&_aac !=0{return _ecaf ((_ebc -_fdbb )/_aac ,_gcfd ._gffe );};if _aac ==0&&_abbg !=0{return _ecaf ((_edaf -_dgf )/_abbg ,_gcfd ._gffe );
};_eeeag :=_aac *(_ebc -_fdbb )+_abbg *(_edaf -_dgf );if _eeeag < 0{return _gcfd ._gffe [0]._afgg ;};_dbbeg :=_a .Hypot (_aac ,_abbg );_fbc :=((_ebc -_fdbb )*-_abbg +(_edaf -_dgf )*_aac )/(_dbbeg *_dbbeg );_gabe ,_bfa :=_fdbb +_fbc *-_abbg ,_dgf +_fbc *_aac ;
_cfbb :=_a .Hypot (_ebc -_gabe ,_edaf -_bfa )/_dbbeg ;return _ecaf (_cfbb ,_gcfd ._gffe );};func _egbg (_acc _ed .Image ,_bfbgb repeatOp )_ad .Pattern {return &surfacePattern {_gagbe :_acc ,_baaf :_bfbgb };};func (_bgdb *Context )capper ()_d .Capper {switch _bgdb ._ceb {case _ad .LineCapButt :return _d .ButtCapper ;
case _ad .LineCapRound :return _d .RoundCapper ;case _ad .LineCapSquare :return _d .SquareCapper ;};return nil ;};