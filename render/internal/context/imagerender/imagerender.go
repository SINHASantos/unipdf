//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_e "errors";_c "fmt";_aed "github.com/unidoc/freetype/raster";_d "github.com/unidoc/unipdf/v3/common";_ae "github.com/unidoc/unipdf/v3/internal/transform";_cg "github.com/unidoc/unipdf/v3/render/internal/context";_ad "golang.org/x/image/draw";
_gde "golang.org/x/image/font";_f "golang.org/x/image/math/f64";_gd "golang.org/x/image/math/fixed";_ac "image";_be "image/color";_ag "image/draw";_g "math";_ga "sort";_b "strings";);func (_cee *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_fed :=_cee ._agf .RGBA ();
if _fed > 0&&_fed !=65535&&a ==1{a =float64 (_fed )/65535;};_cee ._agf =_be .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cee .setFillAndStrokeColor (_cee ._agf );};type stops []stop ;func _ccbdc (_ffgad string )(_caee ,_afefe ,_dafa ,_eefg int ){_ffgad =_b .TrimPrefix (_ffgad ,"\u0023");
_eefg =255;if len (_ffgad )==3{_ggdb :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_c .Sscanf (_ffgad ,_ggdb ,&_caee ,&_afefe ,&_dafa );_caee |=_caee <<4;_afefe |=_afefe <<4;_dafa |=_dafa <<4;};if len (_ffgad )==6{_cbcb :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_c .Sscanf (_ffgad ,_cbcb ,&_caee ,&_afefe ,&_dafa );};if len (_ffgad )==8{_bbcdb :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_c .Sscanf (_ffgad ,_bbcdb ,&_caee ,&_afefe ,&_dafa ,&_eefg );};return ;};func (_dgf *Context )SetRGBA255 (r ,g ,b ,a int ){_dgf ._agf =_be .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_dgf .setFillAndStrokeColor (_dgf ._agf );};func (_cdd *Context )StrokePreserve (){var _fgg _aed .Painter ;if _cdd ._aab ==nil {if _fecg ,_egb :=_cdd ._def .(*solidPattern );_egb {_efe :=_aed .NewRGBAPainter (_cdd ._bff );_efe .SetColor (_fecg ._gaad );
_fgg =_efe ;};};if _fgg ==nil {_fgg =_bbf (_cdd ._bff ,_cdd ._aab ,_cdd ._def );};_cdd .stroke (_fgg );};func (_fac *radialGradient )ColorAt (x ,y int )_be .Color {if len (_fac ._fede )==0{return _be .Transparent ;};_dbca ,_gfgf :=float64 (x )+0.5-_fac ._dbf ._eefb ,float64 (y )+0.5-_fac ._dbf ._bcbg ;
_ggeb :=_eca (_dbca ,_gfgf ,_fac ._dbf ._dac ,_fac ._cga ._eefb ,_fac ._cga ._bcbg ,_fac ._cga ._dac );_bga :=_eca (_dbca ,_gfgf ,-_fac ._dbf ._dac ,_dbca ,_gfgf ,_fac ._dbf ._dac );if _fac ._adf ==0{if _ggeb ==0{return _be .Transparent ;};_cgeg :=0.5*_bga /_ggeb ;
if _cgeg *_fac ._cga ._dac >=_fac ._edgc {return _fccc (_cgeg ,_fac ._fede );};return _be .Transparent ;};_fafc :=_eca (_ggeb ,_fac ._adf ,0,_ggeb ,-_bga ,0);if _fafc >=0{_dcca :=_g .Sqrt (_fafc );_agcb :=(_ggeb +_dcca )*_fac ._cbff ;_bgb :=(_ggeb -_dcca )*_fac ._cbff ;
if _agcb *_fac ._cga ._dac >=_fac ._edgc {return _fccc (_agcb ,_fac ._fede );}else if _bgb *_fac ._cga ._dac >=_fac ._edgc {return _fccc (_bgb ,_fac ._fede );};};return _be .Transparent ;};func (_bag *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_bag .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_fcaf stops )Len ()int {return len (_fcaf )};func (_efdb *Context )Scale (x ,y float64 ){_efdb ._gfg =_efdb ._gfg .Scale (x ,y )};func (_fcd *Context )Width ()int {return _fcd ._fa };func (_beb *Context )SetColor (c _be .Color ){_beb .setFillAndStrokeColor (c )};
func (_cbd *Context )DrawCircle (x ,y ,r float64 ){_cbd .NewSubPath ();_cbd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_cbd .ClosePath ();};func (_aea *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_aea ._egf {_aea .MoveTo (x1 ,y1 );};x1 ,y1 =_aea .Transform (x1 ,y1 );
x2 ,y2 =_aea .Transform (x2 ,y2 );_gge :=_ae .NewPoint (x1 ,y1 );_cgfe :=_ae .NewPoint (x2 ,y2 );_aebg :=_fdfc (_gge );_ebg :=_fdfc (_cgfe );_aea ._bb .Add2 (_aebg ,_ebg );_aea ._dcb .Add2 (_aebg ,_ebg );_aea ._fg =_cgfe ;};func (_cbce *Context )DrawStringAnchored (s string ,face _gde .Face ,x ,y ,ax ,ay float64 ){_dbc ,_eaa :=_cbce .MeasureString (s ,face );
_cbce .drawString (s ,face ,x -ax *_dbc ,y +ay *_eaa );};func (_fe *Context )SetDash (dashes ...float64 ){_fe ._ede =dashes };func (_eae *linearGradient )ColorAt (x ,y int )_be .Color {if len (_eae ._gcfc )==0{return _be .Transparent ;};_aad ,_afef :=float64 (x ),float64 (y );
_fea ,_ced ,_gbb ,_eed :=_eae ._edf ,_eae ._ebdd ,_eae ._dgaa ,_eae ._ggae ;_gceg ,_bec :=_gbb -_fea ,_eed -_ced ;if _bec ==0&&_gceg !=0{return _fccc ((_aad -_fea )/_gceg ,_eae ._gcfc );};if _gceg ==0&&_bec !=0{return _fccc ((_afef -_ced )/_bec ,_eae ._gcfc );
};_fdgf :=_gceg *(_aad -_fea )+_bec *(_afef -_ced );if _fdgf < 0{return _eae ._gcfc [0]._ecgb ;};_dcac :=_g .Hypot (_gceg ,_bec );_cdcd :=((_aad -_fea )*-_bec +(_afef -_ced )*_gceg )/(_dcac *_dcac );_eef ,_beg :=_fea +_cdcd *-_bec ,_ced +_cdcd *_gceg ;
_ddeag :=_g .Hypot (_aad -_eef ,_afef -_beg )/_dcac ;return _fccc (_ddeag ,_eae ._gcfc );};func _bcf (_dgad ,_feda uint32 ,_cbgd float64 )uint8 {return uint8 (int32 (float64 (_dgad )*(1.0-_cbgd )+float64 (_feda )*_cbgd )>>8);};type radialGradient struct{_dbf ,_dcgd ,_cga circle ;
_adf ,_cbff float64 ;_edgc float64 ;_fede stops ;};func (_bbeg stops )Less (i ,j int )bool {return _bbeg [i ]._gdebc < _bbeg [j ]._gdebc };func _ab (_gae ,_fd ,_dd ,_gdd ,_ea ,_fc ,_df float64 )(_af ,_gf float64 ){_bc :=1-_df ;_acb :=_bc *_bc ;_acc :=2*_bc *_df ;
_gg :=_df *_df ;_af =_acb *_gae +_acc *_dd +_gg *_ea ;_gf =_acb *_fd +_acc *_gdd +_gg *_fc ;return ;};func (_efb *Context )SetMatrix (m _ae .Matrix ){_efb ._gfg =m };func (_bfb *Context )drawRegularPolygon (_ggc int ,_fgff ,_cbb ,_aeaa ,_dfa float64 ){_ddgg :=2*_g .Pi /float64 (_ggc );
_dfa -=_g .Pi /2;if _ggc %2==0{_dfa +=_ddgg /2;};_bfb .NewSubPath ();for _gdeg :=0;_gdeg < _ggc ;_gdeg ++{_ecd :=_dfa +_ddgg *float64 (_gdeg );_bfb .LineTo (_fgff +_aeaa *_g .Cos (_ecd ),_cbb +_aeaa *_g .Sin (_ecd ));};_bfb .ClosePath ();};func (_cfc *Context )Fill (){_cfc .FillPreserve ();
_cfc .ClearPath ()};type linearGradient struct{_edf ,_ebdd ,_dgaa ,_ggae float64 ;_gcfc stops ;};func _aa (_ce ,_eag ,_age ,_ade ,_cgb ,_dfb ,_cbg ,_acg ,_ggd float64 )(_cgf ,_bed float64 ){_ee :=1-_ggd ;_db :=_ee *_ee *_ee ;_bd :=3*_ee *_ee *_ggd ;_de :=3*_ee *_ggd *_ggd ;
_da :=_ggd *_ggd *_ggd ;_cgf =_db *_ce +_bd *_age +_de *_cgb +_da *_cbg ;_bed =_db *_eag +_bd *_ade +_de *_dfb +_da *_acg ;return ;};func _bfe (_gadc _aed .Path )[][]_ae .Point {var _dafb [][]_ae .Point ;var _gbf []_ae .Point ;var _bfa ,_bgc float64 ;for _baa :=0;
_baa < len (_gadc );{switch _gadc [_baa ]{case 0:if len (_gbf )> 0{_dafb =append (_dafb ,_gbf );_gbf =nil ;};_ecac :=_dgac (_gadc [_baa +1]);_bab :=_dgac (_gadc [_baa +2]);_gbf =append (_gbf ,_ae .NewPoint (_ecac ,_bab ));_bfa ,_bgc =_ecac ,_bab ;_baa +=4;
case 1:_ffa :=_dgac (_gadc [_baa +1]);_bad :=_dgac (_gadc [_baa +2]);_gbf =append (_gbf ,_ae .NewPoint (_ffa ,_bad ));_bfa ,_bgc =_ffa ,_bad ;_baa +=4;case 2:_bebf :=_dgac (_gadc [_baa +1]);_fbf :=_dgac (_gadc [_baa +2]);_degf :=_dgac (_gadc [_baa +3]);
_cbfa :=_dgac (_gadc [_baa +4]);_gcfa :=_eb (_bfa ,_bgc ,_bebf ,_fbf ,_degf ,_cbfa );_gbf =append (_gbf ,_gcfa ...);_bfa ,_bgc =_degf ,_cbfa ;_baa +=6;case 3:_fbe :=_dgac (_gadc [_baa +1]);_eddg :=_dgac (_gadc [_baa +2]);_bcg :=_dgac (_gadc [_baa +3]);
_bgbe :=_dgac (_gadc [_baa +4]);_gcdd :=_dgac (_gadc [_baa +5]);_eac :=_dgac (_gadc [_baa +6]);_cabc :=_ada (_bfa ,_bgc ,_fbe ,_eddg ,_bcg ,_bgbe ,_gcdd ,_eac );_gbf =append (_gbf ,_cabc ...);_bfa ,_bgc =_gcdd ,_eac ;_baa +=8;default:_d .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gadc );
return _dafb ;};};if len (_gbf )> 0{_dafb =append (_dafb ,_gbf );};return _dafb ;};func (_acaf *linearGradient )AddColorStop (offset float64 ,color _be .Color ){_acaf ._gcfc =append (_acaf ._gcfc ,stop {_gdebc :offset ,_ecgb :color });_ga .Sort (_acaf ._gcfc );
};func (_bgd *Context )stroke (_gce _aed .Painter ){_cab :=_bgd ._bb ;if len (_bgd ._ede )> 0{_cab =_gaf (_cab ,_bgd ._ede ,_bgd ._gc );}else {_cab =_cabcf (_bfe (_cab ));};_deg :=_bgd ._gba ;_deg .UseNonZeroWinding =true ;_deg .Clear ();_fce :=(_bgd ._gfg .ScalingFactorX ()+_bgd ._gfg .ScalingFactorY ())/2;
_deg .AddStroke (_cab ,_ecb (_bgd ._ege *_fce ),_bgd .capper (),_bgd .joiner ());_deg .Rasterize (_gce );};func (_fag *Context )SetRGB255 (r ,g ,b int ){_fag .SetRGBA255 (r ,g ,b ,255)};func (_edg *Context )ClosePath (){if _edg ._egf {_dag :=_fdfc (_edg ._eeg );
_edg ._bb .Add1 (_dag );_edg ._dcb .Add1 (_dag );_edg ._fg =_edg ._eeg ;};};func (_cde *Context )DrawPoint (x ,y ,r float64 ){_cde .Push ();_gdg ,_ddeb :=_cde .Transform (x ,y );_cde .Identity ();_cde .DrawCircle (_gdg ,_ddeb ,r );_cde .Pop ();};func (_aeb *Context )SetStrokeStyle (pattern _cg .Pattern ){_aeb ._def =pattern };
func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_cg .Gradient {_ddggf :=&linearGradient {_edf :x0 ,_ebdd :y0 ,_dgaa :x1 ,_ggae :y1 };return _ddggf ;};func (_ebe *Context )SetLineCap (lineCap _cg .LineCap ){_ebe ._fcb =lineCap };func (_bfg *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_bfg ._egf {_bfg .MoveTo (x1 ,y1 );
};_afb ,_dgd :=_bfg ._fg .X ,_bfg ._fg .Y ;x1 ,y1 =_bfg .Transform (x1 ,y1 );x2 ,y2 =_bfg .Transform (x2 ,y2 );x3 ,y3 =_bfg .Transform (x3 ,y3 );_dcc :=_ada (_afb ,_dgd ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bbc :=_fdfc (_bfg ._fg );for _ ,_ceff :=range _dcc [1:]{_edbg :=_fdfc (_ceff );
if _edbg ==_bbc {continue ;};_bbc =_edbg ;_bfg ._bb .Add1 (_edbg );_bfg ._dcb .Add1 (_edbg );_bfg ._fg =_ceff ;};};func (_fgb *Context )Rotate (angle float64 ){_fgb ._gfg =_fgb ._gfg .Rotate (angle )};func (_dfe *Context )SetLineJoin (lineJoin _cg .LineJoin ){_dfe ._ebd =lineJoin };
func _baf (_fge [][]_ae .Point ,_dbef []float64 ,_gbeg float64 )[][]_ae .Point {var _bffg [][]_ae .Point ;if len (_dbef )==0{return _fge ;};if len (_dbef )==1{_dbef =append (_dbef ,_dbef [0]);};for _ ,_feaf :=range _fge {if len (_feaf )< 2{continue ;};
_bge :=_feaf [0];_gccab :=1;_agac :=0;_gbbe :=0.0;if _gbeg !=0{var _ecc float64 ;for _ ,_bda :=range _dbef {_ecc +=_bda ;};_gbeg =_g .Mod (_gbeg ,_ecc );if _gbeg < 0{_gbeg +=_ecc ;};for _abdb ,_eaff :=range _dbef {_gbeg -=_eaff ;if _gbeg < 0{_agac =_abdb ;
_gbbe =_eaff +_gbeg ;break ;};};};var _abag []_ae .Point ;_abag =append (_abag ,_bge );for _gccab < len (_feaf ){_afbd :=_dbef [_agac ];_abagg :=_feaf [_gccab ];_ebac :=_bge .Distance (_abagg );_bffb :=_afbd -_gbbe ;if _ebac > _bffb {_cefb :=_bffb /_ebac ;
_gfee :=_bge .Interpolate (_abagg ,_cefb );_abag =append (_abag ,_gfee );if _agac %2==0&&len (_abag )> 1{_bffg =append (_bffg ,_abag );};_abag =nil ;_abag =append (_abag ,_gfee );_gbbe =0;_bge =_gfee ;_agac =(_agac +1)%len (_dbef );}else {_abag =append (_abag ,_abagg );
_bge =_abagg ;_gbbe +=_ebac ;_gccab ++;};};if _agac %2==0&&len (_abag )> 1{_bffg =append (_bffg ,_abag );};};return _bffg ;};func (_acf *Context )MoveTo (x ,y float64 ){if _acf ._egf {_acf ._dcb .Add1 (_fdfc (_acf ._eeg ));};x ,y =_acf .Transform (x ,y );
_ca :=_ae .NewPoint (x ,y );_fdd :=_fdfc (_ca );_acf ._bb .Start (_fdd );_acf ._dcb .Start (_fdd );_acf ._eeg =_ca ;_acf ._fg =_ca ;_acf ._egf =true ;};func (_dfba *Context )Transform (x ,y float64 )(_gage ,_add float64 ){return _dfba ._gfg .Transform (x ,y );
};func (_dbe *Context )DrawRectangle (x ,y ,w ,h float64 ){_dbe .NewSubPath ();_dbe .MoveTo (x ,y );_dbe .LineTo (x +w ,y );_dbe .LineTo (x +w ,y +h );_dbe .LineTo (x ,y +h );_dbe .ClosePath ();};func _eb (_dff ,_gb ,_cgd ,_ff ,_cd ,_ed float64 )[]_ae .Point {_bg :=(_g .Hypot (_cgd -_dff ,_ff -_gb )+_g .Hypot (_cd -_cgd ,_ed -_ff ));
_gac :=int (_bg +0.5);if _gac < 4{_gac =4;};_ddd :=float64 (_gac )-1;_cb :=make ([]_ae .Point ,_gac );for _edb :=0;_edb < _gac ;_edb ++{_ffg :=float64 (_edb )/_ddd ;_ef ,_ebf :=_ab (_dff ,_gb ,_cgd ,_ff ,_cd ,_ed ,_ffg );_cb [_edb ]=_ae .NewPoint (_ef ,_ebf );
};return _cb ;};func _ecb (_cgc float64 )_gd .Int26_6 {return _gd .Int26_6 (_cgc *64)};func (_aca *Context )Image ()_ac .Image {return _aca ._bff };func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_cg .Gradient {_ggaf :=circle {x0 ,y0 ,r0 };_cggb :=circle {x1 ,y1 ,r1 };
_beba :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_ggdf :=_eca (_beba ._eefb ,_beba ._bcbg ,-_beba ._dac ,_beba ._eefb ,_beba ._bcbg ,_beba ._dac );var _dcd float64 ;if _ggdf !=0{_dcd =1.0/_ggdf ;};_fcdf :=-_ggaf ._dac ;_aaec :=&radialGradient {_dbf :_ggaf ,_dcgd :_cggb ,_cga :_beba ,_adf :_ggdf ,_cbff :_dcd ,_edgc :_fcdf };
return _aaec ;};func (_fdg *Context )setFillAndStrokeColor (_aae _be .Color ){_fdg ._agf =_aae ;_fdg ._bedf =_gagc (_aae );_fdg ._def =_gagc (_aae );};func (_dfbb *radialGradient )AddColorStop (offset float64 ,color _be .Color ){_dfbb ._fede =append (_dfbb ._fede ,stop {_gdebc :offset ,_ecgb :color });
_ga .Sort (_dfbb ._fede );};func (_aaa *solidPattern )ColorAt (x ,y int )_be .Color {return _aaa ._gaad };func NewContextForRGBA (im *_ac .RGBA )*Context {_dbb :=im .Bounds ().Size ().X ;_eba :=im .Bounds ().Size ().Y ;return &Context {_fa :_dbb ,_bedg :_eba ,_gba :_aed .NewRasterizer (_dbb ,_eba ),_bff :im ,_agf :_be .Transparent ,_bedf :_cef ,_def :_dg ,_ege :1,_fca :_cg .FillRuleWinding ,_gfg :_ae .IdentityMatrix (),_ecg :_cg .NewTextState ()};
};func (_edc *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_cf :=_edc ._agf .RGBA ();if _cf > 0&&_cf !=65535&&a ==1{a =float64 (_cf )/65535;};_adab :=_be .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_edc ._agf =_adab ;_edc ._bedf =_gagc (_adab );
};func (_gcb *Context )Translate (x ,y float64 ){_gcb ._gfg =_gcb ._gfg .Translate (x ,y )};func (_gbcg *surfacePattern )ColorAt (x ,y int )_be .Color {_fcfa :=_gbcg ._bae .Bounds ();switch _gbcg ._dbfa {case _bcbc :if y >=_fcfa .Dy (){return _be .Transparent ;
};case _fga :if x >=_fcfa .Dx (){return _be .Transparent ;};case _fbfa :if x >=_fcfa .Dx ()||y >=_fcfa .Dy (){return _be .Transparent ;};};x =x %_fcfa .Dx ()+_fcfa .Min .X ;y =y %_fcfa .Dy ()+_fcfa .Min .Y ;return _gbcg ._bae .At (x ,y );};func (_dab *Context )LineWidth ()float64 {return _dab ._ege };
func (_agc *Context )NewSubPath (){if _agc ._egf {_agc ._dcb .Add1 (_fdfc (_agc ._eeg ));};_agc ._egf =false ;};func _dgac (_fefb _gd .Int26_6 )float64 {const _cdcc ,_bbbg =6,1<<6-1;if _fefb >=0{return float64 (_fefb >>_cdcc )+float64 (_fefb &_bbbg )/64;
};_fefb =-_fefb ;if _fefb >=0{return -(float64 (_fefb >>_cdcc )+float64 (_fefb &_bbbg )/64);};return 0;};func (_dde *Context )SetDashOffset (offset float64 ){_dde ._gc =offset };func _fdfc (_ffab _ae .Point )_gd .Point26_6 {return _gd .Point26_6 {X :_ecb (_ffab .X ),Y :_ecb (_ffab .Y )}};
const (_bbca repeatOp =iota ;_bcbc ;_fga ;_fbfa ;);type solidPattern struct{_gaad _be .Color };func (_cce *Context )TextState ()*_cg .TextState {return &_cce ._ecg };func (_bdf *Context )LineTo (x ,y float64 ){if !_bdf ._egf {_bdf .MoveTo (x ,y );}else {x ,y =_bdf .Transform (x ,y );
_bea :=_ae .NewPoint (x ,y );_gag :=_fdfc (_bea );_bdf ._bb .Add1 (_gag );_bdf ._dcb .Add1 (_gag );_bdf ._fg =_bea ;};};func (_bbd *Context )SetFillRule (fillRule _cg .FillRule ){_bbd ._fca =fillRule };func (_dgc *Context )Pop (){_egd :=*_dgc ;_bcbb :=_dgc ._daa ;
_gdeb :=_bcbb [len (_bcbb )-1];*_dgc =*_gdeb ;_dgc ._bb =_egd ._bb ;_dgc ._dcb =_egd ._dcb ;_dgc ._eeg =_egd ._eeg ;_dgc ._fg =_egd ._fg ;_dgc ._egf =_egd ._egf ;};func (_caf *Context )FillPreserve (){var _ba _aed .Painter ;if _caf ._aab ==nil {if _gcc ,_fcc :=_caf ._bedf .(*solidPattern );
_fcc {_egea :=_aed .NewRGBAPainter (_caf ._bff );_egea .SetColor (_gcc ._gaad );_ba =_egea ;};};if _ba ==nil {_ba =_bbf (_caf ._bff ,_caf ._aab ,_caf ._bedf );};_caf .fill (_ba );};func (_agd *Context )Matrix ()_ae .Matrix {return _agd ._gfg };func _cabcf (_bcab [][]_ae .Point )_aed .Path {var _efba _aed .Path ;
for _ ,_bcda :=range _bcab {var _abae _gd .Point26_6 ;for _fab ,_cgbe :=range _bcda {_cefg :=_fdfc (_cgbe );if _fab ==0{_efba .Start (_cefg );}else {_eddd :=_cefg .X -_abae .X ;_gdcf :=_cefg .Y -_abae .Y ;if _eddd < 0{_eddd =-_eddd ;};if _gdcf < 0{_gdcf =-_gdcf ;
};if _eddd +_gdcf > 8{_efba .Add1 (_cefg );};};_abae =_cefg ;};};return _efba ;};func _gaf (_cec _aed .Path ,_cgfd []float64 ,_bfed float64 )_aed .Path {return _cabcf (_baf (_bfe (_cec ),_cgfd ,_bfed ));};func (_egfa *Context )StrokePattern ()_cg .Pattern {return _egfa ._def };
func (_gcd *Context )ResetClip (){_gcd ._aab =nil };func (_aede *Context )joiner ()_aed .Joiner {switch _aede ._ebd {case _cg .LineJoinBevel :return _aed .BevelJoiner ;case _cg .LineJoinRound :return _aed .RoundJoiner ;};return nil ;};func (_gcaf *Context )DrawImageAnchored (im _ac .Image ,x ,y int ,ax ,ay float64 ){_ccc :=im .Bounds ().Size ();
x -=int (ax *float64 (_ccc .X ));y -=int (ay *float64 (_ccc .Y ));_fedb :=_ad .BiLinear ;_fddea :=_gcaf ._gfg .Clone ().Translate (float64 (x ),float64 (y ));_eafc :=_f .Aff3 {_fddea [0],_fddea [3],_fddea [6],_fddea [1],_fddea [4],_fddea [7]};if _gcaf ._aab ==nil {_fedb .Transform (_gcaf ._bff ,_eafc ,im ,im .Bounds (),_ad .Over ,nil );
}else {_fedb .Transform (_gcaf ._bff ,_eafc ,im ,im .Bounds (),_ad .Over ,&_ad .Options {DstMask :_gcaf ._aab ,DstMaskP :_ac .Point {}});};};func (_cfg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cfg .Translate (x ,y );_cfg .Shear (sx ,sy );_cfg .Translate (-x ,-y );
};func (_cceg *patternPainter )Paint (ss []_aed .Span ,done bool ){_defb :=_cceg ._gbag .Bounds ();for _ ,_fgea :=range ss {if _fgea .Y < _defb .Min .Y {continue ;};if _fgea .Y >=_defb .Max .Y {return ;};if _fgea .X0 < _defb .Min .X {_fgea .X0 =_defb .Min .X ;
};if _fgea .X1 > _defb .Max .X {_fgea .X1 =_defb .Max .X ;};if _fgea .X0 >=_fgea .X1 {continue ;};const _cbef =1<<16-1;_fcccb :=_fgea .Y -_cceg ._gbag .Rect .Min .Y ;_acbb :=_fgea .X0 -_cceg ._gbag .Rect .Min .X ;_dgb :=(_fgea .Y -_cceg ._gbag .Rect .Min .Y )*_cceg ._gbag .Stride +(_fgea .X0 -_cceg ._gbag .Rect .Min .X )*4;
_edga :=_dgb +(_fgea .X1 -_fgea .X0 )*4;for _eccc ,_egcg :=_dgb ,_acbb ;_eccc < _edga ;_eccc ,_egcg =_eccc +4,_egcg +1{_bbb :=_fgea .Alpha ;if _cceg ._efa !=nil {_bbb =_bbb *uint32 (_cceg ._efa .AlphaAt (_egcg ,_fcccb ).A )/255;if _bbb ==0{continue ;};
};_eee :=_cceg ._cdf .ColorAt (_egcg ,_fcccb );_eab ,_agb ,_cac ,_acbf :=_eee .RGBA ();_dbfe :=uint32 (_cceg ._gbag .Pix [_eccc +0]);_bfgc :=uint32 (_cceg ._gbag .Pix [_eccc +1]);_gfb :=uint32 (_cceg ._gbag .Pix [_eccc +2]);_dfbf :=uint32 (_cceg ._gbag .Pix [_eccc +3]);
_geb :=(_cbef -(_acbf *_bbb /_cbef ))*0x101;_cceg ._gbag .Pix [_eccc +0]=uint8 ((_dbfe *_geb +_eab *_bbb )/_cbef >>8);_cceg ._gbag .Pix [_eccc +1]=uint8 ((_bfgc *_geb +_agb *_bbb )/_cbef >>8);_cceg ._gbag .Pix [_eccc +2]=uint8 ((_gfb *_geb +_cac *_bbb )/_cbef >>8);
_cceg ._gbag .Pix [_eccc +3]=uint8 ((_dfbf *_geb +_acbf *_bbb )/_cbef >>8);};};};func (_ded *Context )drawString (_egcd string ,_gcca _gde .Face ,_ddc ,_fgffd float64 ){_dcg :=&_gde .Drawer {Src :_ac .NewUniform (_ded ._agf ),Face :_gcca ,Dot :_fdfc (_ae .NewPoint (_ddc ,_fgffd ))};
_ge :=rune (-1);for _ ,_gdc :=range _egcd {if _ge >=0{_dcg .Dot .X +=_dcg .Face .Kern (_ge ,_gdc );};_cbgb ,_ccb ,_ddea ,_gcae ,_egcb :=_dcg .Face .Glyph (_dcg .Dot ,_gdc );if !_egcb {continue ;};_dga :=_cbgb .Sub (_cbgb .Min );_ggg :=_ac .NewRGBA (_dga );
_ad .DrawMask (_ggg ,_dga ,_dcg .Src ,_ac .Point {},_ccb ,_ddea ,_ad .Over );var _ffgd *_ad .Options ;if _ded ._aab !=nil {_ffgd =&_ad .Options {DstMask :_ded ._aab ,DstMaskP :_ac .Point {}};};_ebgb :=_ded ._gfg .Clone ().Translate (float64 (_cbgb .Min .X ),float64 (_cbgb .Min .Y ));
_cfa :=_f .Aff3 {_ebgb [0],_ebgb [3],_ebgb [6],_ebgb [1],_ebgb [4],_ebgb [7]};_ad .BiLinear .Transform (_ded ._bff ,_cfa ,_ggg ,_dga ,_ad .Over ,_ffgd );_dcg .Dot .X +=_gcae ;_ge =_gdc ;};};func (_gca *Context )SetRGB (r ,g ,b float64 ){_gca .SetRGBA (r ,g ,b ,1)};
type patternPainter struct{_gbag *_ac .RGBA ;_efa *_ac .Alpha ;_cdf _cg .Pattern ;};type repeatOp int ;func (_gaec *Context )RotateAbout (angle ,x ,y float64 ){_gaec .Translate (x ,y );_gaec .Rotate (angle );_gaec .Translate (-x ,-y );};func (_cbf *Context )Clear (){_egc :=_ac .NewUniform (_cbf ._agf );
_ad .Draw (_cbf ._bff ,_cbf ._bff .Bounds (),_egc ,_ac .Point {},_ad .Src );};func _eca (_dgdd ,_ffba ,_gcg ,_bee ,_egde ,_ecf float64 )float64 {return _dgdd *_bee +_ffba *_egde +_gcg *_ecf ;};func (_fec *Context )FillPattern ()_cg .Pattern {return _fec ._bedf };
type stop struct{_gdebc float64 ;_ecgb _be .Color ;};func (_fade *Context )SetPixel (x ,y int ){_fade ._bff .Set (x ,y ,_fade ._agf )};func (_dagd *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_dagd .Translate (x ,y );_dagd .Scale (sx ,sy );_dagd .Translate (-x ,-y );
};func (_fgf *Context )SetHexColor (x string ){_bca ,_adac ,_edd ,_fad :=_ccbdc (x );_fgf .SetRGBA255 (_bca ,_adac ,_edd ,_fad );};func (_cae *Context )DrawImage (im _ac .Image ,x ,y int ){_cae .DrawImageAnchored (im ,x ,y ,0,0)};func (_egff *Context )ClipPreserve (){_eded :=_ac .NewAlpha (_ac .Rect (0,0,_egff ._fa ,_egff ._bedg ));
_ceg :=_aed .NewAlphaOverPainter (_eded );_egff .fill (_ceg );if _egff ._aab ==nil {_egff ._aab =_eded ;}else {_cdge :=_ac .NewAlpha (_ac .Rect (0,0,_egff ._fa ,_egff ._bedg ));_ad .DrawMask (_cdge ,_cdge .Bounds (),_eded ,_ac .Point {},_egff ._aab ,_ac .Point {},_ad .Over );
_egff ._aab =_cdge ;};};func (_dbbe *Context )Clip (){_dbbe .ClipPreserve ();_dbbe .ClearPath ()};func _beca (_fdfg _ac .Image )*_ac .RGBA {_feb :=_fdfg .Bounds ();_cfae :=_ac .NewRGBA (_feb );_ag .Draw (_cfae ,_feb ,_fdfg ,_feb .Min ,_ag .Src );return _cfae ;
};func (_ffga *Context )SetMask (mask *_ac .Alpha )error {if mask .Bounds ().Size ()!=_ffga ._bff .Bounds ().Size (){return _e .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_ffga ._aab =mask ;return nil ;};func (_cdc *Context )SetLineWidth (lineWidth float64 ){_cdc ._ege =lineWidth };func NewContext (width ,height int )*Context {return NewContextForRGBA (_ac .NewRGBA (_ac .Rect (0,0,width ,height )));};func (_aeag *Context )InvertMask (){if _aeag ._aab ==nil {_aeag ._aab =_ac .NewAlpha (_aeag ._bff .Bounds ());
}else {for _gbd ,_cefd :=range _aeag ._aab .Pix {_aeag ._aab .Pix [_gbd ]=255-_cefd ;};};};func (_bce *Context )DrawString (s string ,face _gde .Face ,x ,y float64 ){_bce .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_cgdd *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cefa =16;
for _cdgd :=0;_cdgd < _cefa ;_cdgd ++{_bbcd :=float64 (_cdgd +0)/_cefa ;_ffd :=float64 (_cdgd +1)/_cefa ;_bcb :=angle1 +(angle2 -angle1 )*_bbcd ;_dca :=angle1 +(angle2 -angle1 )*_ffd ;_cafe :=x +rx *_g .Cos (_bcb );_cdab :=y +ry *_g .Sin (_bcb );_cge :=x +rx *_g .Cos ((_bcb +_dca )/2);
_gfaf :=y +ry *_g .Sin ((_bcb +_dca )/2);_aaed :=x +rx *_g .Cos (_dca );_aga :=y +ry *_g .Sin (_dca );_bbe :=2*_cge -_cafe /2-_aaed /2;_ffb :=2*_gfaf -_cdab /2-_aga /2;if _cdgd ==0{if _cgdd ._egf {_cgdd .LineTo (_cafe ,_cdab );}else {_cgdd .MoveTo (_cafe ,_cdab );
};};_cgdd .QuadraticTo (_bbe ,_ffb ,_aaed ,_aga );};};func _faaf (_fcbe float64 )float64 {return _fcbe *_g .Pi /180};func (_aba *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_aba .MoveTo (x1 ,y1 );_aba .LineTo (x2 ,y2 )};func (_bgde *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_cda ,_egfe ,_gfd ,_faa :=x ,x +r ,x +w -r ,x +w ;
_bfd ,_cegd ,_daf ,_cgg :=y ,y +r ,y +h -r ,y +h ;_bgde .NewSubPath ();_bgde .MoveTo (_egfe ,_bfd );_bgde .LineTo (_gfd ,_bfd );_bgde .DrawArc (_gfd ,_cegd ,r ,_faaf (270),_faaf (360));_bgde .LineTo (_faa ,_daf );_bgde .DrawArc (_gfd ,_daf ,r ,_faaf (0),_faaf (90));
_bgde .LineTo (_egfe ,_cgg );_bgde .DrawArc (_egfe ,_daf ,r ,_faaf (90),_faaf (180));_bgde .LineTo (_cda ,_cegd );_bgde .DrawArc (_egfe ,_cegd ,r ,_faaf (180),_faaf (270));_bgde .ClosePath ();};func (_gcf *Context )capper ()_aed .Capper {switch _gcf ._fcb {case _cg .LineCapButt :return _aed .ButtCapper ;
case _cg .LineCapRound :return _aed .RoundCapper ;case _cg .LineCapSquare :return _aed .SquareCapper ;};return nil ;};func (_aeab *Context )Stroke (){_aeab .StrokePreserve ();_aeab .ClearPath ()};func _gagc (_cgfed _be .Color )_cg .Pattern {return &solidPattern {_gaad :_cgfed }};
func _bgbf (_egg ,_cgbf _be .Color ,_edgf float64 )_be .Color {_ffgdc ,_bdd ,_fde ,_bcd :=_egg .RGBA ();_gcaff ,_gacc ,_ffgf ,_ffgfe :=_cgbf .RGBA ();return _be .RGBA {_bcf (_ffgdc ,_gcaff ,_edgf ),_bcf (_bdd ,_gacc ,_edgf ),_bcf (_fde ,_ffgf ,_edgf ),_bcf (_bcd ,_ffgfe ,_edgf )};
};func (_ccf *Context )Push (){_gcaea :=*_ccf ;_ccf ._daa =append (_ccf ._daa ,&_gcaea )};func (_gdb *Context )MeasureString (s string ,face _gde .Face )(_ffgdd ,_gga float64 ){_gbe :=&_gde .Drawer {Face :face };_gbc :=_gbe .MeasureString (s );return float64 (_gbc >>6),_gdb ._ecg .Tf .Size ;
};func (_afe *Context )fill (_fdf _aed .Painter ){_dcf :=_afe ._dcb ;if _afe ._egf {_dcf =make (_aed .Path ,len (_afe ._dcb ));copy (_dcf ,_afe ._dcb );_dcf .Add1 (_fdfc (_afe ._eeg ));};_faf :=_afe ._gba ;_faf .UseNonZeroWinding =_afe ._fca ==_cg .FillRuleWinding ;
_faf .Clear ();_faf .AddPath (_dcf );_faf .Rasterize (_fdf );};func (_fbc *Context )ClearPath (){_fbc ._bb .Clear ();_fbc ._dcb .Clear ();_fbc ._egf =false };func (_bbdb *Context )Shear (x ,y float64 ){_bbdb ._gfg .Shear (x ,y )};func (_cfd *Context )Identity (){_cfd ._gfg =_ae .IdentityMatrix ()};
func NewContextForImage (im _ac .Image )*Context {return NewContextForRGBA (_beca (im ))};func _bbf (_ddgb *_ac .RGBA ,_afd *_ac .Alpha ,_efaa _cg .Pattern )*patternPainter {return &patternPainter {_ddgb ,_afd ,_efaa };};type Context struct{_fa int ;_bedg int ;
_gba *_aed .Rasterizer ;_bff *_ac .RGBA ;_aab *_ac .Alpha ;_agf _be .Color ;_bedf _cg .Pattern ;_def _cg .Pattern ;_bb _aed .Path ;_dcb _aed .Path ;_eeg _ae .Point ;_fg _ae .Point ;_egf bool ;_ede []float64 ;_gc float64 ;_ege float64 ;_fcb _cg .LineCap ;
_ebd _cg .LineJoin ;_fca _cg .FillRule ;_gfg _ae .Matrix ;_ecg _cg .TextState ;_daa []*Context ;};func _gafe (_fefa _ac .Image ,_ddga repeatOp )_cg .Pattern {return &surfacePattern {_bae :_fefa ,_dbfa :_ddga };};func (_gfc *Context )Height ()int {return _gfc ._bedg };
func _ada (_dc ,_aef ,_dae ,_ec ,_gfa ,_adb ,_ggf ,_cc float64 )[]_ae .Point {_bf :=(_g .Hypot (_dae -_dc ,_ec -_aef )+_g .Hypot (_gfa -_dae ,_adb -_ec )+_g .Hypot (_ggf -_gfa ,_cc -_adb ));_cdg :=int (_bf +0.5);if _cdg < 4{_cdg =4;};_efd :=float64 (_cdg )-1;
_eg :=make ([]_ae .Point ,_cdg );for _fdb :=0;_fdb < _cdg ;_fdb ++{_aee :=float64 (_fdb )/_efd ;_fb ,_agea :=_aa (_dc ,_aef ,_dae ,_ec ,_gfa ,_adb ,_ggf ,_cc ,_aee );_eg [_fdb ]=_ae .NewPoint (_fb ,_agea );};return _eg ;};func _fccc (_fef float64 ,_abd stops )_be .Color {if _fef <=0.0||len (_abd )==1{return _abd [0]._ecgb ;
};_ccbd :=_abd [len (_abd )-1];if _fef >=_ccbd ._gdebc {return _ccbd ._ecgb ;};for _abe ,_dacf :=range _abd [1:]{if _fef < _dacf ._gdebc {_fef =(_fef -_abd [_abe ]._gdebc )/(_dacf ._gdebc -_abd [_abe ]._gdebc );return _bgbf (_abd [_abe ]._ecgb ,_dacf ._ecgb ,_fef );
};};return _ccbd ._ecgb ;};func (_acgb *Context )SetFillStyle (pattern _cg .Pattern ){if _fgd ,_fcdc :=pattern .(*solidPattern );_fcdc {_acgb ._agf =_fgd ._gaad ;};_acgb ._bedf =pattern ;};func (_bfc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bfc .NewSubPath ();
_bfc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_bfc .ClosePath ();};type circle struct{_eefb ,_bcbg ,_dac float64 };var (_cef =_gagc (_be .White );_dg =_gagc (_be .Black ););func (_gad stops )Swap (i ,j int ){_gad [i ],_gad [j ]=_gad [j ],_gad [i ]};
type surfacePattern struct{_bae _ac .Image ;_dbfa repeatOp ;};func (_egee *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gfe :=_be .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_egee ._def =_gagc (_gfe );};func (_fdde *Context )AsMask ()*_ac .Alpha {_eaf :=_ac .NewAlpha (_fdde ._bff .Bounds ());
_ad .Draw (_eaf ,_fdde ._bff .Bounds (),_fdde ._bff ,_ac .Point {},_ad .Src );return _eaf ;};