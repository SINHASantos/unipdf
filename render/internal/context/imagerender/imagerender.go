//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_a "errors";_db "fmt";_cf "github.com/unidoc/freetype/raster";_dd "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/transform";_e "github.com/unidoc/unipdf/v3/render/internal/context";_eg "golang.org/x/image/draw";
_ca "golang.org/x/image/font";_ae "golang.org/x/image/math/f64";_cc "golang.org/x/image/math/fixed";_gc "image";_bb "image/color";_da "image/draw";_g "math";_gf "sort";_b "strings";);func (_gcgf *Context )SetLineJoin (lineJoin _e .LineJoin ){_gcgf ._fec =lineJoin };
func (_gcd *Context )setFillAndStrokeColor (_cgac _bb .Color ){_gcd ._abc =_cgac ;_gcd ._fd =_dcc (_cgac );_gcd ._afbb =_dcc (_cgac );};func (_edfg *Context )DrawStringAnchored (s string ,face _ca .Face ,x ,y ,ax ,ay float64 ){_aedb ,_dbd :=_edfg .MeasureString (s ,face );
_edfg .drawString (s ,face ,x -ax *_aedb ,y +ay *_dbd );};func (_cbd stops )Len ()int {return len (_cbd )};func (_eff *Context )joiner ()_cf .Joiner {switch _eff ._fec {case _e .LineJoinBevel :return _cf .BevelJoiner ;case _e .LineJoinRound :return _cf .RoundJoiner ;
};return nil ;};func (_gad *Context )ClosePath (){if _gad ._cge {_eead :=_dfcb (_gad ._ec );_gad ._cd .Add1 (_eead );_gad ._dad .Add1 (_eead );_gad ._bdc =_gad ._ec ;};};func (_cged *Context )fill (_bdf _cf .Painter ){_aag :=_cged ._dad ;if _cged ._cge {_aag =make (_cf .Path ,len (_cged ._dad ));
copy (_aag ,_cged ._dad );_aag .Add1 (_dfcb (_cged ._ec ));};_ebg :=_cged ._dge ;_ebg .UseNonZeroWinding =_cged ._dcd ==_e .FillRuleWinding ;_ebg .Clear ();_ebg .AddPath (_aag );_ebg .Rasterize (_bdf );};func (_edbb stops )Swap (i ,j int ){_edbb [i ],_edbb [j ]=_edbb [j ],_edbb [i ]};
func (_eeb *Context )NewSubPath (){if _eeb ._cge {_eeb ._dad .Add1 (_dfcb (_eeb ._ec ));};_eeb ._cge =false ;};type stop struct{_affc float64 ;_ecg _bb .Color ;};type Context struct{_gg int ;_ffb int ;_dge *_cf .Rasterizer ;_dbe *_gc .RGBA ;_egg *_gc .Alpha ;
_abc _bb .Color ;_fd _e .Pattern ;_afbb _e .Pattern ;_cd _cf .Path ;_dad _cf .Path ;_ec _c .Point ;_bdc _c .Point ;_cge bool ;_efgc []float64 ;_bef float64 ;_abe float64 ;_afd _e .LineCap ;_fec _e .LineJoin ;_dcd _e .FillRule ;_eeg _c .Matrix ;_dce _e .TextState ;
_ade []*Context ;};func _eadg (_fcba _cf .Path ,_dcge []float64 ,_gdgc float64 )_cf .Path {return _egb (_caca (_cacd (_fcba ),_dcge ,_gdgc ));};func (_cdd *Context )ClipPreserve (){_dcaa :=_gc .NewAlpha (_gc .Rect (0,0,_cdd ._gg ,_cdd ._ffb ));_egfc :=_cf .NewAlphaOverPainter (_dcaa );
_cdd .fill (_egfc );if _cdd ._egg ==nil {_cdd ._egg =_dcaa ;}else {_fdfd :=_gc .NewAlpha (_gc .Rect (0,0,_cdd ._gg ,_cdd ._ffb ));_eg .DrawMask (_fdfd ,_fdfd .Bounds (),_dcaa ,_gc .Point {},_cdd ._egg ,_gc .Point {},_eg .Over );_cdd ._egg =_fdfd ;};};func (_cdde *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _fcf =16;
for _edf :=0;_edf < _fcf ;_edf ++{_fdd :=float64 (_edf +0)/_fcf ;_gaa :=float64 (_edf +1)/_fcf ;_addg :=angle1 +(angle2 -angle1 )*_fdd ;_gbf :=angle1 +(angle2 -angle1 )*_gaa ;_fcb :=x +rx *_g .Cos (_addg );_cfc :=y +ry *_g .Sin (_addg );_dgec :=x +rx *_g .Cos ((_addg +_gbf )/2);
_cac :=y +ry *_g .Sin ((_addg +_gbf )/2);_eec :=x +rx *_g .Cos (_gbf );_aeca :=y +ry *_g .Sin (_gbf );_fca :=2*_dgec -_fcb /2-_eec /2;_dgc :=2*_cac -_cfc /2-_aeca /2;if _edf ==0{if _cdde ._cge {_cdde .LineTo (_fcb ,_cfc );}else {_cdde .MoveTo (_fcb ,_cfc );
};};_cdde .QuadraticTo (_fca ,_dgc ,_eec ,_aeca );};};func _ecb (_afbd _gc .Image ,_cffa repeatOp )_e .Pattern {return &surfacePattern {_gcge :_afbd ,_eag :_cffa };};func _dgf (_cgbd ,_caa ,_gce ,_gcbc ,_deef ,_bdge float64 )float64 {return _cgbd *_gcbc +_caa *_deef +_gce *_bdge ;
};func _ded (_cdefe ,_dgca _bb .Color ,_dcbb float64 )_bb .Color {_beaa ,_fdg ,_deg ,_gaef :=_cdefe .RGBA ();_bdbe ,_aecb ,_edaa ,_ebf :=_dgca .RGBA ();return _bb .RGBA {_fag (_beaa ,_bdbe ,_dcbb ),_fag (_fdg ,_aecb ,_dcbb ),_fag (_deg ,_edaa ,_dcbb ),_fag (_gaef ,_ebf ,_dcbb )};
};func _fdda (_dgdf _gc .Image )*_gc .RGBA {_dccg :=_dgdf .Bounds ();_ebga :=_gc .NewRGBA (_dccg );_da .Draw (_ebga ,_dccg ,_dgdf ,_dccg .Min ,_da .Src );return _ebga ;};func (_dcb *Context )MoveTo (x ,y float64 ){if _dcb ._cge {_dcb ._dad .Add1 (_dfcb (_dcb ._ec ));
};x ,y =_dcb .Transform (x ,y );_dcdb :=_c .NewPoint (x ,y );_ada :=_dfcb (_dcdb );_dcb ._cd .Start (_ada );_dcb ._dad .Start (_ada );_dcb ._ec =_dcdb ;_dcb ._bdc =_dcdb ;_dcb ._cge =true ;};func (_beb *Context )InvertMask (){if _beb ._egg ==nil {_beb ._egg =_gc .NewAlpha (_beb ._dbe .Bounds ());
}else {for _aegb ,_aab :=range _beb ._egg .Pix {_beb ._egg .Pix [_aegb ]=255-_aab ;};};};func _egab (_bafg string )(_bfb ,_edbe ,_begee ,_cgea int ){_bafg =_b .TrimPrefix (_bafg ,"\u0023");_cgea =255;if len (_bafg )==3{_bbc :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";
_db .Sscanf (_bafg ,_bbc ,&_bfb ,&_edbe ,&_begee );_bfb |=_bfb <<4;_edbe |=_edbe <<4;_begee |=_begee <<4;};if len (_bafg )==6{_cfe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_db .Sscanf (_bafg ,_cfe ,&_bfb ,&_edbe ,&_begee );
};if len (_bafg )==8{_adb :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_db .Sscanf (_bafg ,_adb ,&_bfb ,&_edbe ,&_begee ,&_cgea );};return ;};type stops []stop ;func (_deaf *Context )capper ()_cf .Capper {switch _deaf ._afd {case _e .LineCapButt :return _cf .ButtCapper ;
case _e .LineCapRound :return _cf .RoundCapper ;case _e .LineCapSquare :return _cf .SquareCapper ;};return nil ;};func (_bdg *Context )Rotate (angle float64 ){_bdg ._eeg =_bdg ._eeg .Rotate (angle )};func (_eef *Context )SetFillRule (fillRule _e .FillRule ){_eef ._dcd =fillRule };
func (_dee *Context )ClearPath (){_dee ._cd .Clear ();_dee ._dad .Clear ();_dee ._cge =false };func (_gbc *Context )AsMask ()*_gc .Alpha {_dgb :=_gc .NewAlpha (_gbc ._dbe .Bounds ());_eg .Draw (_dgb ,_gbc ._dbe .Bounds (),_gbc ._dbe ,_gc .Point {},_eg .Src );
return _dgb ;};func (_dceb *Context )ResetClip (){_dceb ._egg =nil };func (_bdfa *Context )drawRegularPolygon (_fgc int ,_babe ,_dgg ,_cfce ,_gga float64 ){_cgfd :=2*_g .Pi /float64 (_fgc );_gga -=_g .Pi /2;if _fgc %2==0{_gga +=_cgfd /2;};_bdfa .NewSubPath ();
for _afbf :=0;_afbf < _fgc ;_afbf ++{_gfa :=_gga +_cgfd *float64 (_afbf );_bdfa .LineTo (_babe +_cfce *_g .Cos (_gfa ),_dgg +_cfce *_g .Sin (_gfa ));};_bdfa .ClosePath ();};func (_feb *Context )SetLineCap (lineCap _e .LineCap ){_feb ._afd =lineCap };func (_aca *Context )StrokePreserve (){var _fae _cf .Painter ;
if _aca ._egg ==nil {if _ceb ,_bec :=_aca ._afbb .(*solidPattern );_bec {_ffg :=_cf .NewRGBAPainter (_aca ._dbe );_ffg .SetColor (_ceb ._bfc );_fae =_ffg ;};};if _fae ==nil {_fae =_aeeg (_aca ._dbe ,_aca ._egg ,_aca ._afbb );};_aca .stroke (_fae );};func (_cgb *Context )DrawCircle (x ,y ,r float64 ){_cgb .NewSubPath ();
_cgb .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_cgb .ClosePath ();};func (_cdef *Context )MeasureString (s string ,face _ca .Face )(_gab ,_cec float64 ){_aabf :=&_ca .Drawer {Face :face };_abfg :=_aabf .MeasureString (s );return float64 (_abfg >>6),_cdef ._dce .Tf .Size ;
};func (_edde *Context )SetHexColor (x string ){_dca ,_acg ,_dbeb ,_efb :=_egab (x );_edde .SetRGBA255 (_dca ,_acg ,_dbeb ,_efb );};type patternPainter struct{_cffed *_gc .RGBA ;_fee *_gc .Alpha ;_bdbc _e .Pattern ;};func _cgf (_bab ,_dde ,_bc ,_baa ,_ee ,_de ,_ab ,_afba float64 )[]_c .Point {_ddg :=(_g .Hypot (_bc -_bab ,_baa -_dde )+_g .Hypot (_ee -_bc ,_de -_baa )+_g .Hypot (_ab -_ee ,_afba -_de ));
_ffc :=int (_ddg +0.5);if _ffc < 4{_ffc =4;};_aec :=float64 (_ffc )-1;_gegd :=make ([]_c .Point ,_ffc );for _gff :=0;_gff < _ffc ;_gff ++{_egf :=float64 (_gff )/_aec ;_cga ,_fb :=_ga (_bab ,_dde ,_bc ,_baa ,_ee ,_de ,_ab ,_afba ,_egf );_gegd [_gff ]=_c .NewPoint (_cga ,_fb );
};return _gegd ;};func _ddb (_cb ,_ac ,_af ,_aeg ,_dba ,_ge ,_ba float64 )(_f ,_ed float64 ){_gfc :=1-_ba ;_gcg :=_gfc *_gfc ;_fc :=2*_gfc *_ba ;_ea :=_ba *_ba ;_f =_gcg *_cb +_fc *_af +_ea *_dba ;_ed =_gcg *_ac +_fc *_aeg +_ea *_ge ;return ;};func (_gaf *Context )FillPreserve (){var _bgf _cf .Painter ;
if _gaf ._egg ==nil {if _gafc ,_abg :=_gaf ._fd .(*solidPattern );_abg {_abd :=_cf .NewRGBAPainter (_gaf ._dbe );_abd .SetColor (_gafc ._bfc );_bgf =_abd ;};};if _bgf ==nil {_bgf =_aeeg (_gaf ._dbe ,_gaf ._egg ,_gaf ._fd );};_gaf .fill (_bgf );};func _ga (_cbg ,_gae ,_cg ,_bde ,_faf ,_cbb ,_gb ,_be ,_dg float64 )(_afb ,_ef float64 ){_efg :=1-_dg ;
_fe :=_efg *_efg *_efg ;_cbe :=3*_efg *_efg *_dg ;_daf :=3*_efg *_dg *_dg ;_geg :=_dg *_dg *_dg ;_afb =_fe *_cbg +_cbe *_cg +_daf *_faf +_geg *_gb ;_ef =_fe *_gae +_cbe *_bde +_daf *_cbb +_geg *_be ;return ;};func (_ggg *Context )drawString (_bdd string ,_becg _ca .Face ,_cffc ,_abce float64 ){_dafc :=&_ca .Drawer {Src :_gc .NewUniform (_ggg ._abc ),Face :_becg ,Dot :_dfcb (_c .NewPoint (_cffc ,_abce ))};
_ggf :=rune (-1);for _ ,_dae :=range _bdd {if _ggf >=0{_dafc .Dot .X +=_dafc .Face .Kern (_ggf ,_dae );};_gbca ,_bgc ,_cfac ,_dcae ,_geca :=_dafc .Face .Glyph (_dafc .Dot ,_dae );if !_geca {continue ;};_fdb :=_gbca .Sub (_gbca .Min );_dbce :=_gc .NewRGBA (_fdb );
_eg .DrawMask (_dbce ,_fdb ,_dafc .Src ,_gc .Point {},_bgc ,_cfac ,_eg .Over );var _fgcb *_eg .Options ;if _ggg ._egg !=nil {_fgcb =&_eg .Options {DstMask :_ggg ._egg ,DstMaskP :_gc .Point {}};};_ebb :=_ggg ._eeg .Clone ().Translate (float64 (_gbca .Min .X ),float64 (_gbca .Min .Y ));
_ccd :=_ae .Aff3 {_ebb [0],_ebb [3],_ebb [6],_ebb [1],_ebb [4],_ebb [7]};_eg .BiLinear .Transform (_ggg ._dbe ,_ccd ,_dbce ,_fdb ,_eg .Over ,_fgcb );_dafc .Dot .X +=_dcae ;_ggf =_dae ;};};func (_ag *Context )Push (){_fcg :=*_ag ;_ag ._ade =append (_ag ._ade ,&_fcg )};
type solidPattern struct{_bfc _bb .Color };func (_dga *Context )Pop (){_dbaf :=*_dga ;_efba :=_dga ._ade ;_fgb :=_efba [len (_efba )-1];*_dga =*_fgb ;_dga ._cd =_dbaf ._cd ;_dga ._dad =_dbaf ._dad ;_dga ._ec =_dbaf ._ec ;_dga ._bdc =_dbaf ._bdc ;_dga ._cge =_dbaf ._cge ;
};func (_ffd *Context )SetStrokeStyle (pattern _e .Pattern ){_ffd ._afbb =pattern };func NewContextForRGBA (im *_gc .RGBA )*Context {_ege :=im .Bounds ().Size ().X ;_abeb :=im .Bounds ().Size ().Y ;return &Context {_gg :_ege ,_ffb :_abeb ,_dge :_cf .NewRasterizer (_ege ,_abeb ),_dbe :im ,_abc :_bb .Transparent ,_fd :_bg ,_afbb :_egc ,_abe :1,_dcd :_e .FillRuleWinding ,_eeg :_c .IdentityMatrix (),_dce :_e .NewTextState ()};
};func (_efbf *Context )SetRGB (r ,g ,b float64 ){_efbf .SetRGBA (r ,g ,b ,1)};func _ebbf (_bfd float64 ,_edcb stops )_bb .Color {if _bfd <=0.0||len (_edcb )==1{return _edcb [0]._ecg ;};_fdc :=_edcb [len (_edcb )-1];if _bfd >=_fdc ._affc {return _fdc ._ecg ;
};for _gde ,_gee :=range _edcb [1:]{if _bfd < _gee ._affc {_bfd =(_bfd -_edcb [_gde ]._affc )/(_gee ._affc -_edcb [_gde ]._affc );return _ded (_edcb [_gde ]._ecg ,_gee ._ecg ,_bfd );};};return _fdc ._ecg ;};func (_dcf *patternPainter )Paint (ss []_cf .Span ,done bool ){_fdfa :=_dcf ._cffed .Bounds ();
for _ ,_abaf :=range ss {if _abaf .Y < _fdfa .Min .Y {continue ;};if _abaf .Y >=_fdfa .Max .Y {return ;};if _abaf .X0 < _fdfa .Min .X {_abaf .X0 =_fdfa .Min .X ;};if _abaf .X1 > _fdfa .Max .X {_abaf .X1 =_fdfa .Max .X ;};if _abaf .X0 >=_abaf .X1 {continue ;
};const _eega =1<<16-1;_gfec :=_abaf .Y -_dcf ._cffed .Rect .Min .Y ;_gega :=_abaf .X0 -_dcf ._cffed .Rect .Min .X ;_eaga :=(_abaf .Y -_dcf ._cffed .Rect .Min .Y )*_dcf ._cffed .Stride +(_abaf .X0 -_dcf ._cffed .Rect .Min .X )*4;_gcca :=_eaga +(_abaf .X1 -_abaf .X0 )*4;
for _bgd ,_gbbg :=_eaga ,_gega ;_bgd < _gcca ;_bgd ,_gbbg =_bgd +4,_gbbg +1{_ddag :=_abaf .Alpha ;if _dcf ._fee !=nil {_ddag =_ddag *uint32 (_dcf ._fee .AlphaAt (_gbbg ,_gfec ).A )/255;if _ddag ==0{continue ;};};_fbc :=_dcf ._bdbc .ColorAt (_gbbg ,_gfec );
_beab ,_ffbg ,_dbcb ,_gdd :=_fbc .RGBA ();_dcebf :=uint32 (_dcf ._cffed .Pix [_bgd +0]);_gfcc :=uint32 (_dcf ._cffed .Pix [_bgd +1]);_acbge :=uint32 (_dcf ._cffed .Pix [_bgd +2]);_baf :=uint32 (_dcf ._cffed .Pix [_bgd +3]);_fbb :=(_eega -(_gdd *_ddag /_eega ))*0x101;
_dcf ._cffed .Pix [_bgd +0]=uint8 ((_dcebf *_fbb +_beab *_ddag )/_eega >>8);_dcf ._cffed .Pix [_bgd +1]=uint8 ((_gfcc *_fbb +_ffbg *_ddag )/_eega >>8);_dcf ._cffed .Pix [_bgd +2]=uint8 ((_acbge *_fbb +_dbcb *_ddag )/_eega >>8);_dcf ._cffed .Pix [_bgd +3]=uint8 ((_baf *_fbb +_gdd *_ddag )/_eega >>8);
};};};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_e .Gradient {_gegde :=&linearGradient {_gcb :x0 ,_debf :y0 ,_cgad :x1 ,_aage :y1 };return _gegde ;};func (_gfg *Context )Clear (){_add :=_gc .NewUniform (_gfg ._abc );_eg .Draw (_gfg ._dbe ,_gfg ._dbe .Bounds (),_add ,_gc .Point {},_eg .Src );
};func (_fba *Context )Image ()_gc .Image {return _fba ._dbe };func (_ddab *Context )DrawPoint (x ,y ,r float64 ){_ddab .Push ();_addb ,_bf :=_ddab .Transform (x ,y );_ddab .Identity ();_ddab .DrawCircle (_addb ,_bf ,r );_ddab .Pop ();};func (_bga *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_gcfb :=_bga ._abc .RGBA ();
if _gcfb > 0&&_gcfb !=65535&&a ==1{a =float64 (_gcfb )/65535;};_dcg :=_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bga ._abc =_dcg ;_bga ._fd =_dcc (_dcg );};func (_afc *Context )SetDashOffset (offset float64 ){_afc ._bef =offset };
func _fgcf (_fcbe float64 )float64 {return _fcbe *_g .Pi /180};func (_efd stops )Less (i ,j int )bool {return _efd [i ]._affc < _efd [j ]._affc };func (_dff *linearGradient )AddColorStop (offset float64 ,color _bb .Color ){_dff ._gea =append (_dff ._gea ,stop {_affc :offset ,_ecg :color });
_gf .Sort (_dff ._gea );};func (_fgg *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_fgg ._cge {_fgg .MoveTo (x1 ,y1 );};x1 ,y1 =_fgg .Transform (x1 ,y1 );x2 ,y2 =_fgg .Transform (x2 ,y2 );_bce :=_c .NewPoint (x1 ,y1 );_fgd :=_c .NewPoint (x2 ,y2 );
_dfg :=_dfcb (_bce );_aed :=_dfcb (_fgd );_fgg ._cd .Add2 (_dfg ,_aed );_fgg ._dad .Add2 (_dfg ,_aed );_fgg ._bdc =_fgd ;};func (_gcfc *Context )DrawImageAnchored (im _gc .Image ,x ,y int ,ax ,ay float64 ){_fbg :=im .Bounds ().Size ();x -=int (ax *float64 (_fbg .X ));
y -=int (ay *float64 (_fbg .Y ));_edbg :=_eg .BiLinear ;_cfa :=_gcfc ._eeg .Clone ().Translate (float64 (x ),float64 (y ));_abdd :=_ae .Aff3 {_cfa [0],_cfa [3],_cfa [6],_cfa [1],_cfa [4],_cfa [7]};if _gcfc ._egg ==nil {_edbg .Transform (_gcfc ._dbe ,_abdd ,im ,im .Bounds (),_eg .Over ,nil );
}else {_edbg .Transform (_gcfc ._dbe ,_abdd ,im ,im .Bounds (),_eg .Over ,&_eg .Options {DstMask :_gcfc ._egg ,DstMaskP :_gc .Point {}});};};func (_fece *Context )SetLineWidth (lineWidth float64 ){_fece ._abe =lineWidth };func (_cgfdf *Context )Scale (x ,y float64 ){_cgfdf ._eeg =_cgfdf ._eeg .Scale (x ,y )};
func (_fgeg *Context )Matrix ()_c .Matrix {return _fgeg ._eeg };func (_dbc *Context )SetRGB255 (r ,g ,b int ){_dbc .SetRGBA255 (r ,g ,b ,255)};func (_dcaf *Context )ShearAbout (sx ,sy ,x ,y float64 ){_dcaf .Translate (x ,y );_dcaf .Shear (sx ,sy );_dcaf .Translate (-x ,-y );
};var (_bg =_dcc (_bb .White );_egc =_dcc (_bb .Black ););func (_caf *Context )stroke (_ebe _cf .Painter ){_eba :=_caf ._cd ;if len (_caf ._efgc )> 0{_eba =_eadg (_eba ,_caf ._efgc ,_caf ._bef );}else {_eba =_egb (_cacd (_eba ));};_bda :=_caf ._dge ;_bda .UseNonZeroWinding =true ;
_bda .Clear ();_bea :=(_caf ._eeg .ScalingFactorX ()+_caf ._eeg .ScalingFactorY ())/2;_bda .AddStroke (_eba ,_becb (_caf ._abe *_bea ),_caf .capper (),_caf .joiner ());_bda .Rasterize (_ebe );};func (_beg *Context )SetDash (dashes ...float64 ){_beg ._efgc =dashes };
func NewContextForImage (im _gc .Image )*Context {return NewContextForRGBA (_fdda (im ))};func (_fge *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fge ._cge {_fge .MoveTo (x1 ,y1 );};_gfe ,_abcd :=_fge ._bdc .X ,_fge ._bdc .Y ;x1 ,y1 =_fge .Transform (x1 ,y1 );
x2 ,y2 =_fge .Transform (x2 ,y2 );x3 ,y3 =_fge .Transform (x3 ,y3 );_aa :=_cgf (_gfe ,_abcd ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_adc :=_dfcb (_fge ._bdc );for _ ,_cfb :=range _aa [1:]{_gffb :=_dfcb (_cfb );if _gffb ==_adc {continue ;};_adc =_gffb ;_fge ._cd .Add1 (_gffb );
_fge ._dad .Add1 (_gffb );_fge ._bdc =_cfb ;};};func _egb (_dceac [][]_c .Point )_cf .Path {var _cedf _cf .Path ;for _ ,_ffgad :=range _dceac {var _gbb _cc .Point26_6 ;for _cgff ,_dagd :=range _ffgad {_ccaf :=_dfcb (_dagd );if _cgff ==0{_cedf .Start (_ccaf );
}else {_dadg :=_ccaf .X -_gbb .X ;_faa :=_ccaf .Y -_gbb .Y ;if _dadg < 0{_dadg =-_dadg ;};if _faa < 0{_faa =-_faa ;};if _dadg +_faa > 8{_cedf .Add1 (_ccaf );};};_gbb =_ccaf ;};};return _cedf ;};func (_bcg *Context )Width ()int {return _bcg ._gg };func (_aee *linearGradient )ColorAt (x ,y int )_bb .Color {if len (_aee ._gea )==0{return _bb .Transparent ;
};_bfab ,_gca :=float64 (x ),float64 (y );_cdeag ,_efc ,_deae ,_dcbc :=_aee ._gcb ,_aee ._debf ,_aee ._cgad ,_aee ._aage ;_dfb ,_gfb :=_deae -_cdeag ,_dcbc -_efc ;if _gfb ==0&&_dfb !=0{return _ebbf ((_bfab -_cdeag )/_dfb ,_aee ._gea );};if _dfb ==0&&_gfb !=0{return _ebbf ((_gca -_efc )/_gfb ,_aee ._gea );
};_cbec :=_dfb *(_bfab -_cdeag )+_gfb *(_gca -_efc );if _cbec < 0{return _aee ._gea [0]._ecg ;};_gd :=_g .Hypot (_dfb ,_gfb );_cae :=((_bfab -_cdeag )*-_gfb +(_gca -_efc )*_dfb )/(_gd *_gd );_faef ,_def :=_cdeag +_cae *-_gfb ,_efc +_cae *_dfb ;_aac :=_g .Hypot (_bfab -_faef ,_gca -_def )/_gd ;
return _ebbf (_aac ,_aee ._gea );};func NewContext (width ,height int )*Context {return NewContextForRGBA (_gc .NewRGBA (_gc .Rect (0,0,width ,height )));};func (_aad *Context )Transform (x ,y float64 )(_acc ,_becgc float64 ){return _aad ._eeg .Transform (x ,y )};
func (_dcea *Context )StrokePattern ()_e .Pattern {return _dcea ._afbb };func _cacd (_gbad _cf .Path )[][]_c .Point {var _geef [][]_c .Point ;var _abfb []_c .Point ;var _gdg ,_ddgg float64 ;for _dgfe :=0;_dgfe < len (_gbad );{switch _gbad [_dgfe ]{case 0:if len (_abfb )> 0{_geef =append (_geef ,_abfb );
_abfb =nil ;};_faeb :=_eagd (_gbad [_dgfe +1]);_fcea :=_eagd (_gbad [_dgfe +2]);_abfb =append (_abfb ,_c .NewPoint (_faeb ,_fcea ));_gdg ,_ddgg =_faeb ,_fcea ;_dgfe +=4;case 1:_dfd :=_eagd (_gbad [_dgfe +1]);_aadf :=_eagd (_gbad [_dgfe +2]);_abfb =append (_abfb ,_c .NewPoint (_dfd ,_aadf ));
_gdg ,_ddgg =_dfd ,_aadf ;_dgfe +=4;case 2:_bdcc :=_eagd (_gbad [_dgfe +1]);_cbgd :=_eagd (_gbad [_dgfe +2]);_gfbe :=_eagd (_gbad [_dgfe +3]);_adf :=_eagd (_gbad [_dgfe +4]);_accf :=_cca (_gdg ,_ddgg ,_bdcc ,_cbgd ,_gfbe ,_adf );_abfb =append (_abfb ,_accf ...);
_gdg ,_ddgg =_gfbe ,_adf ;_dgfe +=6;case 3:_ceda :=_eagd (_gbad [_dgfe +1]);_ggb :=_eagd (_gbad [_dgfe +2]);_bege :=_eagd (_gbad [_dgfe +3]);_fdgf :=_eagd (_gbad [_dgfe +4]);_bged :=_eagd (_gbad [_dgfe +5]);_efa :=_eagd (_gbad [_dgfe +6]);_eggb :=_cgf (_gdg ,_ddgg ,_ceda ,_ggb ,_bege ,_fdgf ,_bged ,_efa );
_abfb =append (_abfb ,_eggb ...);_gdg ,_ddgg =_bged ,_efa ;_dgfe +=8;default:_dd .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gbad );return _geef ;};};if len (_abfb )> 0{_geef =append (_geef ,_abfb );
};return _geef ;};func (_dced *Context )TextState ()*_e .TextState {return &_dced ._dce };func _aeeg (_bead *_gc .RGBA ,_bae *_gc .Alpha ,_eadd _e .Pattern )*patternPainter {return &patternPainter {_bead ,_bae ,_eadd };};func _becb (_ddba float64 )_cc .Int26_6 {return _cc .Int26_6 (_ddba *64)};
func (_abec *Context )LineWidth ()float64 {return _abec ._abe };func (_dafd *Context )Shear (x ,y float64 ){_dafd ._eeg .Shear (x ,y )};func (_eda *Context )SetRGBA255 (r ,g ,b ,a int ){_eda ._abc =_bb .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_eda .setFillAndStrokeColor (_eda ._abc );};func (_bdb *Context )Fill (){_bdb .FillPreserve ();_bdb .ClearPath ()};func (_ce *Context )Height ()int {return _ce ._ffb };func (_gcc *Context )Stroke (){_gcc .StrokePreserve ();_gcc .ClearPath ()};func (_ddfc *Context )DrawString (s string ,face _ca .Face ,x ,y float64 ){_ddfc .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func _caca (_gag [][]_c .Point ,_daa []float64 ,_bdef float64 )[][]_c .Point {var _ffga [][]_c .Point ;if len (_daa )==0{return _gag ;};if len (_daa )==1{_daa =append (_daa ,_daa [0]);};for _ ,_efe :=range _gag {if len (_efe )< 2{continue ;};_gda :=_efe [0];
_dbef :=1;_dgbg :=0;_cad :=0.0;if _bdef !=0{var _efdb float64 ;for _ ,_agg :=range _daa {_efdb +=_agg ;};_bdef =_g .Mod (_bdef ,_efdb );if _bdef < 0{_bdef +=_efdb ;};for _dgge ,_bca :=range _daa {_bdef -=_bca ;if _bdef < 0{_dgbg =_dgge ;_cad =_bca +_bdef ;
break ;};};};var _ccga []_c .Point ;_ccga =append (_ccga ,_gda );for _dbef < len (_efe ){_adff :=_daa [_dgbg ];_gead :=_efe [_dbef ];_dbca :=_gda .Distance (_gead );_bag :=_adff -_cad ;if _dbca > _bag {_acea :=_bag /_dbca ;_gef :=_gda .Interpolate (_gead ,_acea );
_ccga =append (_ccga ,_gef );if _dgbg %2==0&&len (_ccga )> 1{_ffga =append (_ffga ,_ccga );};_ccga =nil ;_ccga =append (_ccga ,_gef );_cad =0;_gda =_gef ;_dgbg =(_dgbg +1)%len (_daa );}else {_ccga =append (_ccga ,_gead );_gda =_gead ;_cad +=_dbca ;_dbef ++;
};};if _dgbg %2==0&&len (_ccga )> 1{_ffga =append (_ffga ,_ccga );};};return _ffga ;};func _eagd (_acef _cc .Int26_6 )float64 {const _agb ,_ecd =6,1<<6-1;if _acef >=0{return float64 (_acef >>_agb )+float64 (_acef &_ecd )/64;};_acef =-_acef ;if _acef >=0{return -(float64 (_acef >>_agb )+float64 (_acef &_ecd )/64);
};return 0;};func (_ccb *Context )RotateAbout (angle ,x ,y float64 ){_ccb .Translate (x ,y );_ccb .Rotate (angle );_ccb .Translate (-x ,-y );};func (_fab *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_fab .Translate (x ,y );_fab .Scale (sx ,sy );_fab .Translate (-x ,-y );
};func _dfcb (_gbadc _c .Point )_cc .Point26_6 {return _cc .Point26_6 {X :_becb (_gbadc .X ),Y :_becb (_gbadc .Y )};};type circle struct{_bcf ,_dfc ,_afe float64 };type surfacePattern struct{_gcge _gc .Image ;_eag repeatOp ;};func (_acb *Context )Clip (){_acb .ClipPreserve ();
_acb .ClearPath ()};func _fag (_dcafd ,_bgb uint32 ,_eged float64 )uint8 {return uint8 (int32 (float64 (_dcafd )*(1.0-_eged )+float64 (_bgb )*_eged )>>8);};func (_eea *Context )LineTo (x ,y float64 ){if !_eea ._cge {_eea .MoveTo (x ,y );}else {x ,y =_eea .Transform (x ,y );
_geb :=_c .NewPoint (x ,y );_eddc :=_dfcb (_geb );_eea ._cd .Add1 (_eddc );_eea ._dad .Add1 (_eddc );_eea ._bdc =_geb ;};};func (_cbeb *Context )SetFillStyle (pattern _e .Pattern ){if _cde ,_ccg :=pattern .(*solidPattern );_ccg {_cbeb ._abc =_cde ._bfc ;
};_cbeb ._fd =pattern ;};func (_gbd *Context )SetPixel (x ,y int ){_gbd ._dbe .Set (x ,y ,_gbd ._abc )};const (_ggaa repeatOp =iota ;_ggbc ;_cda ;_bbb ;);func _cca (_dc ,_fg ,_edd ,_bd ,_fa ,_edb float64 )[]_c .Point {_df :=(_g .Hypot (_edd -_dc ,_bd -_fg )+_g .Hypot (_fa -_edd ,_edb -_bd ));
_ad :=int (_df +0.5);if _ad < 4{_ad =4;};_gec :=float64 (_ad )-1;_ead :=make ([]_c .Point ,_ad );for _gcf :=0;_gcf < _ad ;_gcf ++{_dda :=float64 (_gcf )/_gec ;_ged ,_ff :=_ddb (_dc ,_fg ,_edd ,_bd ,_fa ,_edb ,_dda );_ead [_gcf ]=_c .NewPoint (_ged ,_ff );
};return _ead ;};func (_bff *Context )Translate (x ,y float64 ){_bff ._eeg =_bff ._eeg .Translate (x ,y )};func (_cgd *Context )SetMask (mask *_gc .Alpha )error {if mask .Bounds ().Size ()!=_cgd ._dbe .Bounds ().Size (){return _a .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_cgd ._egg =mask ;return nil ;};func (_aegg *Context )Identity (){_aegg ._eeg =_c .IdentityMatrix ()};type linearGradient struct{_gcb ,_debf ,_cgad ,_aage float64 ;_gea stops ;};func _dcc (_eabg _bb .Color )_e .Pattern {return &solidPattern {_bfc :_eabg }};
func (_bcae *solidPattern )ColorAt (x ,y int )_bb .Color {return _bcae ._bfc };func (_dgd *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_dgd .NewSubPath ();_dgd .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_dgd .ClosePath ();};func (_dea *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_cdea :=_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dea ._afbb =_dcc (_cdea );};func (_cdc *Context )SetMatrix (m _c .Matrix ){_cdc ._eeg =m };func (_cag *radialGradient )AddColorStop (offset float64 ,color _bb .Color ){_cag ._gfac =append (_cag ._gfac ,stop {_affc :offset ,_ecg :color });_gf .Sort (_cag ._gfac );
};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_e .Gradient {_caae :=circle {x0 ,y0 ,r0 };_dafcb :=circle {x1 ,y1 ,r1 };_ceef :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_bge :=_dgf (_ceef ._bcf ,_ceef ._dfc ,-_ceef ._afe ,_ceef ._bcf ,_ceef ._dfc ,_ceef ._afe );
var _abece float64 ;if _bge !=0{_abece =1.0/_bge ;};_bdgd :=-_caae ._afe ;_ace :=&radialGradient {_gfaa :_caae ,_dag :_dafcb ,_dcbca :_ceef ,_agd :_bge ,_acaf :_abece ,_ega :_bdgd };return _ace ;};type radialGradient struct{_gfaa ,_dag ,_dcbca circle ;
_agd ,_acaf float64 ;_ega float64 ;_gfac stops ;};func (_fce *Context )SetColor (c _bb .Color ){_fce .setFillAndStrokeColor (c )};func (_bad *surfacePattern )ColorAt (x ,y int )_bb .Color {_faaa :=_bad ._gcge .Bounds ();switch _bad ._eag {case _ggbc :if y >=_faaa .Dy (){return _bb .Transparent ;
};case _cda :if x >=_faaa .Dx (){return _bb .Transparent ;};case _bbb :if x >=_faaa .Dx ()||y >=_faaa .Dy (){return _bb .Transparent ;};};x =x %_faaa .Dx ()+_faaa .Min .X ;y =y %_faaa .Dy ()+_faaa .Min .Y ;return _bad ._gcge .At (x ,y );};func (_cbea *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_fdf :=_cbea ._abc .RGBA ();
if _fdf > 0&&_fdf !=65535&&a ==1{a =float64 (_fdf )/65535;};_cbea ._abc =_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cbea .setFillAndStrokeColor (_cbea ._abc );};func (_edc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_edc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_ceg *Context )DrawImage (im _gc .Image ,x ,y int ){_ceg .DrawImageAnchored (im ,x ,y ,0,0)};func (_aef *Context )DrawRectangle (x ,y ,w ,h float64 ){_aef .NewSubPath ();_aef .MoveTo (x ,y );_aef .LineTo (x +w ,y );_aef .LineTo (x +w ,y +h );_aef .LineTo (x ,y +h );
_aef .ClosePath ();};func (_fga *Context )FillPattern ()_e .Pattern {return _fga ._fd };func (_gaege *radialGradient )ColorAt (x ,y int )_bb .Color {if len (_gaege ._gfac )==0{return _bb .Transparent ;};_deee ,_dcba :=float64 (x )+0.5-_gaege ._gfaa ._bcf ,float64 (y )+0.5-_gaege ._gfaa ._dfc ;
_gba :=_dgf (_deee ,_dcba ,_gaege ._gfaa ._afe ,_gaege ._dcbca ._bcf ,_gaege ._dcbca ._dfc ,_gaege ._dcbca ._afe );_gaeb :=_dgf (_deee ,_dcba ,-_gaege ._gfaa ._afe ,_deee ,_dcba ,_gaege ._gfaa ._afe );if _gaege ._agd ==0{if _gba ==0{return _bb .Transparent ;
};_cffe :=0.5*_gaeb /_gba ;if _cffe *_gaege ._dcbca ._afe >=_gaege ._ega {return _ebbf (_cffe ,_gaege ._gfac );};return _bb .Transparent ;};_acbg :=_dgf (_gba ,_gaege ._agd ,0,_gba ,-_gaeb ,0);if _acbg >=0{_dged :=_g .Sqrt (_acbg );_cgec :=(_gba +_dged )*_gaege ._acaf ;
_bdce :=(_gba -_dged )*_gaege ._acaf ;if _cgec *_gaege ._dcbca ._afe >=_gaege ._ega {return _ebbf (_cgec ,_gaege ._gfac );}else if _bdce *_gaege ._dcbca ._afe >=_gaege ._ega {return _ebbf (_bdce ,_gaege ._gfac );};};return _bb .Transparent ;};type repeatOp int ;
func (_gadg *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_fea ,_abf ,_cee ,_cff :=x ,x +r ,x +w -r ,x +w ;_gaeg ,_cbf ,_eeag ,_bfa :=y ,y +r ,y +h -r ,y +h ;_gadg .NewSubPath ();_gadg .MoveTo (_abf ,_gaeg );_gadg .LineTo (_cee ,_gaeg );_gadg .DrawArc (_cee ,_cbf ,r ,_fgcf (270),_fgcf (360));
_gadg .LineTo (_cff ,_eeag );_gadg .DrawArc (_cee ,_eeag ,r ,_fgcf (0),_fgcf (90));_gadg .LineTo (_abf ,_bfa );_gadg .DrawArc (_abf ,_eeag ,r ,_fgcf (90),_fgcf (180));_gadg .LineTo (_fea ,_cbf );_gadg .DrawArc (_abf ,_cbf ,r ,_fgcf (180),_fgcf (270));_gadg .ClosePath ();
};func (_aff *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_aff .MoveTo (x1 ,y1 );_aff .LineTo (x2 ,y2 )};