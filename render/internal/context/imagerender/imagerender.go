//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ce "errors";_a "fmt";_db "github.com/unidoc/freetype/raster";_gd "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/internal/transform";_af "github.com/unidoc/unipdf/v3/render/internal/context";_ged "golang.org/x/image/draw";
_cf "golang.org/x/image/font";_d "golang.org/x/image/math/f64";_ceb "golang.org/x/image/math/fixed";_eb "image";_gea "image/color";_c "image/draw";_g "math";_b "sort";_ge "strings";);func (_fgbaf *Context )MeasureString (s string ,face _cf .Face )(_gag ,_dgg float64 ){_edge :=&_cf .Drawer {Face :face };
_ddfe :=_edge .MeasureString (s );return float64 (_ddfe >>6),_fgbaf ._feec .Tf .Size ;};type Context struct{_eda int ;_gec int ;_fee *_db .Rasterizer ;_cda *_eb .RGBA ;_ea *_eb .Alpha ;_fde _gea .Color ;_fda _af .Pattern ;_add _af .Pattern ;_dgc _db .Path ;
_fag _db .Path ;_fgb _cg .Point ;_cdf _cg .Point ;_age bool ;_gf []float64 ;_ecf float64 ;_fdeb float64 ;_ee _af .LineCap ;_ff _af .LineJoin ;_fagb _af .FillRule ;_ace _cg .Matrix ;_feec _af .TextState ;_cbd []*Context ;};func (_dc *Context )LineWidth ()float64 {return _dc ._fdeb };
func (_bff *Context )LineTo (x ,y float64 ){if !_bff ._age {_bff .MoveTo (x ,y );}else {x ,y =_bff .Transform (x ,y );_fff :=_cg .NewPoint (x ,y );_bcc :=_dgga (_fff );_bff ._dgc .Add1 (_bcc );_bff ._fag .Add1 (_bcc );_bff ._cdf =_fff ;};};func (_feed *Context )SetStrokeStyle (pattern _af .Pattern ){_feed ._add =pattern };
func (_bffa *Context )DrawRectangle (x ,y ,w ,h float64 ){_bffa .NewSubPath ();_bffa .MoveTo (x ,y );_bffa .LineTo (x +w ,y );_bffa .LineTo (x +w ,y +h );_bffa .LineTo (x ,y +h );_bffa .ClosePath ();};func (_cfgc *Context )StrokePreserve (){var _fgde _db .Painter ;
if _cfgc ._ea ==nil {if _gcf ,_dbe :=_cfgc ._add .(*solidPattern );_dbe {_cga :=_db .NewRGBAPainter (_cfgc ._cda );_cga .SetColor (_gcf ._ebgd );_fgde =_cga ;};};if _fgde ==nil {_fgde =_bbff (_cfgc ._cda ,_cfgc ._ea ,_cfgc ._add );};_cfgc .stroke (_fgde );
};func (_cbg *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_cbg .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_gfe *Context )Rotate (angle float64 ){_gfe ._ace =_gfe ._ace .Rotate (angle )};func (_fgdg *Context )SetFillRule (fillRule _af .FillRule ){_fgdg ._fagb =fillRule };
func (_efb *Context )DrawStringAnchored (s string ,face _cf .Face ,x ,y ,ax ,ay float64 ){_daae ,_ffe :=_efb .MeasureString (s ,face );_efb .drawString (s ,face ,x -ax *_daae ,y +ay *_ffe );};func (_fgg *Context )setFillAndStrokeColor (_fded _gea .Color ){_fgg ._fde =_fded ;
_fgg ._fda =_faea (_fded );_fgg ._add =_faea (_fded );};func (_ddf *Context )capper ()_db .Capper {switch _ddf ._ee {case _af .LineCapButt :return _db .ButtCapper ;case _af .LineCapRound :return _db .RoundCapper ;case _af .LineCapSquare :return _db .SquareCapper ;
};return nil ;};func _aceb (_cgc _db .Path ,_bgdf []float64 ,_cage float64 )_db .Path {return _bgba (_eaf (_ebba (_cgc ),_bgdf ,_cage ));};func (_fdfc *Context )DrawImage (im _eb .Image ,x ,y int ){_fdfc .DrawImageAnchored (im ,x ,y ,0,0)};func (_eba *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_ab :=_gea .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_eba ._add =_faea (_ab );};func _dfd (_ffc ,_dgcf ,_gfee ,_bed ,_acd ,_gcb float64 )float64 {return _ffc *_bed +_dgcf *_acd +_gfee *_gcb ;};func _ebdc (_dgd _eb .Image ,_fegg repeatOp )_af .Pattern {return &surfacePattern {_aecc :_dgd ,_cacdb :_fegg };
};func (_ade stops )Len ()int {return len (_ade )};func (_abd *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_abd .Translate (x ,y );_abd .Scale (sx ,sy );_abd .Translate (-x ,-y );};func (_gdd *Context )StrokePattern ()_af .Pattern {return _gdd ._add };
func NewContext (width ,height int )*Context {return NewContextForRGBA (_eb .NewRGBA (_eb .Rect (0,0,width ,height )));};func (_fafd *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fafd .MoveTo (x1 ,y1 );_fafd .LineTo (x2 ,y2 )};func (_fad *Context )DrawPoint (x ,y ,r float64 ){_fad .Push ();
_eff ,_gfb :=_fad .Transform (x ,y );_fad .Identity ();_fad .DrawCircle (_eff ,_gfb ,r );_fad .Pop ();};func (_cba *Context )Stroke (){_cba .StrokePreserve ();_cba .ClearPath ()};func (_cacd *Context )Pop (){_egf :=*_cacd ;_cbgd :=_cacd ._cbd ;_febc :=_cbgd [len (_cbgd )-1];
*_cacd =*_febc ;_cacd ._dgc =_egf ._dgc ;_cacd ._fag =_egf ._fag ;_cacd ._fgb =_egf ._fgb ;_cacd ._cdf =_egf ._cdf ;_cacd ._age =_egf ._age ;};func (_egce *Context )DrawString (s string ,face _cf .Face ,x ,y float64 ){_egce .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_fgbc *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_dea :=_fgbc ._fde .RGBA ();if _dea > 0&&_dea !=65535&&a ==1{a =float64 (_dea )/65535;};_fgbc ._fde =_gea .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fgbc .setFillAndStrokeColor (_fgbc ._fde );
};func (_aca *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_fga :=_aca ._fde .RGBA ();if _fga > 0&&_fga !=65535&&a ==1{a =float64 (_fga )/65535;};_badc :=_gea .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_aca ._fde =_badc ;
_aca ._fda =_faea (_badc );};func _gbe (_cb ,_da ,_aee ,_aa ,_fce ,_cfb ,_cd ,_aga float64 )[]_cg .Point {_efa :=(_g .Hypot (_aee -_cb ,_aa -_da )+_g .Hypot (_fce -_aee ,_cfb -_aa )+_g .Hypot (_cd -_fce ,_aga -_cfb ));_aed :=int (_efa +0.5);if _aed < 4{_aed =4;
};_ad :=float64 (_aed )-1;_dfb :=make ([]_cg .Point ,_aed );for _efgd :=0;_efgd < _aed ;_efgd ++{_gdg :=float64 (_efgd )/_ad ;_bad ,_dbcb :=_aeg (_cb ,_da ,_aee ,_aa ,_fce ,_cfb ,_cd ,_aga ,_gdg );_dfb [_efgd ]=_cg .NewPoint (_bad ,_dbcb );};return _dfb ;
};func _cbgda (_eded string )(_acgd ,_bdbb ,_fge ,_gee int ){_eded =_ge .TrimPrefix (_eded ,"\u0023");_gee =255;if len (_eded )==3{_beg :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_a .Sscanf (_eded ,_beg ,&_acgd ,&_bdbb ,&_fge );_acgd |=_acgd <<4;
_bdbb |=_bdbb <<4;_fge |=_fge <<4;};if len (_eded )==6{_bffag :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_a .Sscanf (_eded ,_bffag ,&_acgd ,&_bdbb ,&_fge );};if len (_eded )==8{_cgca :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_a .Sscanf (_eded ,_cgca ,&_acgd ,&_bdbb ,&_fge ,&_gee );};return ;};func (_bdd *Context )SetRGBA255 (r ,g ,b ,a int ){_bdd ._fde =_gea .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bdd .setFillAndStrokeColor (_bdd ._fde );};func (_gaf *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gaf ._age {_gaf .MoveTo (x1 ,y1 );
};x1 ,y1 =_gaf .Transform (x1 ,y1 );x2 ,y2 =_gaf .Transform (x2 ,y2 );_gcc :=_cg .NewPoint (x1 ,y1 );_faf :=_cg .NewPoint (x2 ,y2 );_acg :=_dgga (_gcc );_cge :=_dgga (_faf );_gaf ._dgc .Add2 (_acg ,_cge );_gaf ._fag .Add2 (_acg ,_cge );_gaf ._cdf =_faf ;
};func (_cebd *Context )SetLineCap (lineCap _af .LineCap ){_cebd ._ee =lineCap };func (_gfa *Context )joiner ()_db .Joiner {switch _gfa ._ff {case _af .LineJoinBevel :return _db .BevelJoiner ;case _af .LineJoinRound :return _db .RoundJoiner ;};return nil ;
};func (_dfbe *Context )MoveTo (x ,y float64 ){if _dfbe ._age {_dfbe ._fag .Add1 (_dgga (_dfbe ._fgb ));};x ,y =_dfbe .Transform (x ,y );_fdf :=_cg .NewPoint (x ,y );_dgca :=_dgga (_fdf );_dfbe ._dgc .Start (_dgca );_dfbe ._fag .Start (_dgca );_dfbe ._fgb =_fdf ;
_dfbe ._cdf =_fdf ;_dfbe ._age =true ;};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_af .Gradient {_agc :=circle {x0 ,y0 ,r0 };_bga :=circle {x1 ,y1 ,r1 };_aagc :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_cgg :=_dfd (_aagc ._adad ,_aagc ._cbf ,-_aagc ._bgf ,_aagc ._adad ,_aagc ._cbf ,_aagc ._bgf );
var _cab float64 ;if _cgg !=0{_cab =1.0/_cgg ;};_deaf :=-_agc ._bgf ;_gbfa :=&radialGradient {_bgd :_agc ,_cegba :_bga ,_dec :_aagc ,_gdb :_cgg ,_dcda :_cab ,_aggc :_deaf };return _gbfa ;};func (_cfe *Context )SetLineWidth (lineWidth float64 ){_cfe ._fdeb =lineWidth };
func (_adb *Context )SetPixel (x ,y int ){_adb ._cda .Set (x ,y ,_adb ._fde )};func (_gfda *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_fcb ,_fcg ,_feg ,_ggf :=x ,x +r ,x +w -r ,x +w ;_eef ,_caac ,_egc ,_gge :=y ,y +r ,y +h -r ,y +h ;_gfda .NewSubPath ();
_gfda .MoveTo (_fcg ,_eef );_gfda .LineTo (_feg ,_eef );_gfda .DrawArc (_feg ,_caac ,r ,_efff (270),_efff (360));_gfda .LineTo (_ggf ,_egc );_gfda .DrawArc (_feg ,_egc ,r ,_efff (0),_efff (90));_gfda .LineTo (_fcg ,_gge );_gfda .DrawArc (_fcg ,_egc ,r ,_efff (90),_efff (180));
_gfda .LineTo (_fcb ,_caac );_gfda .DrawArc (_fcg ,_caac ,r ,_efff (180),_efff (270));_gfda .ClosePath ();};func (_adf *Context )NewSubPath (){if _adf ._age {_adf ._fag .Add1 (_dgga (_adf ._fgb ));};_adf ._age =false ;};func (_cegb *Context )SetMatrix (m _cg .Matrix ){_cegb ._ace =m };
func (_dca *Context )ResetClip (){_dca ._ea =nil };func (_cec *Context )drawRegularPolygon (_aec int ,_dce ,_dgcg ,_gbeb ,_abe float64 ){_adbb :=2*_g .Pi /float64 (_aec );_abe -=_g .Pi /2;if _aec %2==0{_abe +=_adbb /2;};_cec .NewSubPath ();for _geca :=0;
_geca < _aec ;_geca ++{_dbfd :=_abe +_adbb *float64 (_geca );_cec .LineTo (_dce +_gbeb *_g .Cos (_dbfd ),_dgcg +_gbeb *_g .Sin (_dbfd ));};_cec .ClosePath ();};func (_bbf *Context )Translate (x ,y float64 ){_bbf ._ace =_bbf ._ace .Translate (x ,y )};type circle struct{_adad ,_cbf ,_bgf float64 };
func (_gcd stops )Less (i ,j int )bool {return _gcd [i ]._acggf < _gcd [j ]._acggf };func (_agg *Context )Fill (){_agg .FillPreserve ();_agg .ClearPath ()};type stops []stop ;type radialGradient struct{_bgd ,_cegba ,_dec circle ;_gdb ,_dcda float64 ;_aggc float64 ;
_fcbe stops ;};func (_afe *linearGradient )ColorAt (x ,y int )_gea .Color {if len (_afe ._abfg )==0{return _gea .Transparent ;};_cccd ,_dcce :=float64 (x ),float64 (y );_bea ,_gafe ,_cff ,_aedb :=_afe ._dcbc ,_afe ._cfab ,_afe ._fdebg ,_afe ._fdd ;_cefae ,_bafa :=_cff -_bea ,_aedb -_gafe ;
if _bafa ==0&&_cefae !=0{return _edga ((_cccd -_bea )/_cefae ,_afe ._abfg );};if _cefae ==0&&_bafa !=0{return _edga ((_dcce -_gafe )/_bafa ,_afe ._abfg );};_dga :=_cefae *(_cccd -_bea )+_bafa *(_dcce -_gafe );if _dga < 0{return _afe ._abfg [0]._bbaf ;};
_aefc :=_g .Hypot (_cefae ,_bafa );_bada :=((_cccd -_bea )*-_bafa +(_dcce -_gafe )*_cefae )/(_aefc *_aefc );_gaaa ,_gfef :=_bea +_bada *-_bafa ,_gafe +_bada *_cefae ;_efd :=_g .Hypot (_cccd -_gaaa ,_dcce -_gfef )/_aefc ;return _edga (_efd ,_afe ._abfg );
};func (_edfg *Context )drawString (_bef string ,_bde _cf .Face ,_eag ,_cefa float64 ){_ccc :=&_cf .Drawer {Src :_eb .NewUniform (_edfg ._fde ),Face :_bde ,Dot :_dgga (_cg .NewPoint (_eag ,_cefa ))};_bcbg :=rune (-1);for _ ,_aaa :=range _bef {if _bcbg >=0{_ccc .Dot .X +=_ccc .Face .Kern (_bcbg ,_aaa );
};_acc ,_dcb ,_fgba ,_dceb ,_fbf :=_ccc .Face .Glyph (_ccc .Dot ,_aaa );if !_fbf {continue ;};_cee :=_acc .Sub (_acc .Min );_affc :=_eb .NewRGBA (_cee );_ged .DrawMask (_affc ,_cee ,_ccc .Src ,_eb .Point {},_dcb ,_fgba ,_ged .Over );var _ggg *_ged .Options ;
if _edfg ._ea !=nil {_ggg =&_ged .Options {DstMask :_edfg ._ea ,DstMaskP :_eb .Point {}};};_dfe :=_edfg ._ace .Clone ().Translate (float64 (_acc .Min .X ),float64 (_acc .Min .Y ));_fcc :=_d .Aff3 {_dfe [0],_dfe [3],_dfe [6],_dfe [1],_dfe [4],_dfe [7]};
_ged .BiLinear .Transform (_edfg ._cda ,_fcc ,_affc ,_cee ,_ged .Over ,_ggg );_ccc .Dot .X +=_dceb ;_bcbg =_aaa ;};};func (_ebe *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _baf =16;for _afc :=0;_afc < _baf ;_afc ++{_eca :=float64 (_afc +0)/_baf ;
_bdc :=float64 (_afc +1)/_baf ;_acgg :=angle1 +(angle2 -angle1 )*_eca ;_cdfc :=angle1 +(angle2 -angle1 )*_bdc ;_geaf :=x +rx *_g .Cos (_acgg );_bbac :=y +ry *_g .Sin (_acgg );_dbcg :=x +rx *_g .Cos ((_acgg +_cdfc )/2);_bfe :=y +ry *_g .Sin ((_acgg +_cdfc )/2);
_bgc :=x +rx *_g .Cos (_cdfc );_ebef :=y +ry *_g .Sin (_cdfc );_cae :=2*_dbcg -_geaf /2-_bgc /2;_ebb :=2*_bfe -_bbac /2-_ebef /2;if _afc ==0{if _ebe ._age {_ebe .LineTo (_geaf ,_bbac );}else {_ebe .MoveTo (_geaf ,_bbac );};};_ebe .QuadraticTo (_cae ,_ebb ,_bgc ,_ebef );
};};type patternPainter struct{_cdb *_eb .RGBA ;_gbea *_eb .Alpha ;_addd _af .Pattern ;};func (_afb *radialGradient )AddColorStop (offset float64 ,color _gea .Color ){_afb ._fcbe =append (_afb ._fcbe ,stop {_acggf :offset ,_bbaf :color });_b .Sort (_afb ._fcbe );
};func (_fadd *Context )TextState ()*_af .TextState {return &_fadd ._feec };func (_cebf *Context )Transform (x ,y float64 )(_ddg ,_aecb float64 ){return _cebf ._ace .Transform (x ,y );};func (_bda *Context )DrawCircle (x ,y ,r float64 ){_bda .NewSubPath ();
_bda .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_bda .ClosePath ();};func _aeg (_ccd ,_fa ,_eg ,_de ,_ded ,_efg ,_bc ,_gc ,_gcg float64 )(_aef ,_ac float64 ){_bcb :=1-_gcg ;_ccg :=_bcb *_bcb *_bcb ;_edg :=3*_bcb *_bcb *_gcg ;_fgd :=3*_bcb *_gcg *_gcg ;
_cce :=_gcg *_gcg *_gcg ;_aef =_ccg *_ccd +_edg *_eg +_fgd *_ded +_cce *_bc ;_ac =_ccg *_fa +_edg *_de +_fgd *_efg +_cce *_gc ;return ;};func (_bab *Context )fill (_gdda _db .Painter ){_gbd :=_bab ._fag ;if _bab ._age {_gbd =make (_db .Path ,len (_bab ._fag ));
copy (_gbd ,_bab ._fag );_gbd .Add1 (_dgga (_bab ._fgb ));};_cdd :=_bab ._fee ;_cdd .UseNonZeroWinding =_bab ._fagb ==_af .FillRuleWinding ;_cdd .Clear ();_cdd .AddPath (_gbd );_cdd .Rasterize (_gdda );};func (_abb *Context )AsMask ()*_eb .Alpha {_gbb :=_eb .NewAlpha (_abb ._cda .Bounds ());
_ged .Draw (_gbb ,_abb ._cda .Bounds (),_abb ._cda ,_eb .Point {},_ged .Src );return _gbb ;};func (_caef *Context )ShearAbout (sx ,sy ,x ,y float64 ){_caef .Translate (x ,y );_caef .Shear (sx ,sy );_caef .Translate (-x ,-y );};func (_egbb *Context )Matrix ()_cg .Matrix {return _egbb ._ace };
func (_fgab *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fgab ._age {_fgab .MoveTo (x1 ,y1 );};_ebf ,_eab :=_fgab ._cdf .X ,_fgab ._cdf .Y ;x1 ,y1 =_fgab .Transform (x1 ,y1 );x2 ,y2 =_fgab .Transform (x2 ,y2 );x3 ,y3 =_fgab .Transform (x3 ,y3 );
_baab :=_gbe (_ebf ,_eab ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_eae :=_dgga (_fgab ._cdf );for _ ,_dbd :=range _baab [1:]{_fdg :=_dgga (_dbd );if _fdg ==_eae {continue ;};_eae =_fdg ;_fgab ._dgc .Add1 (_fdg );_fgab ._fag .Add1 (_fdg );_fgab ._cdf =_dbd ;};};type stop struct{_acggf float64 ;
_bbaf _gea .Color ;};func (_bba *Context )ClearPath (){_bba ._dgc .Clear ();_bba ._fag .Clear ();_bba ._age =false };func (_eea *Context )SetRGB (r ,g ,b float64 ){_eea .SetRGBA (r ,g ,b ,1)};func (_gfd *Context )SetRGB255 (r ,g ,b int ){_gfd .SetRGBA255 (r ,g ,b ,255)};
func (_cecc stops )Swap (i ,j int ){_cecc [i ],_cecc [j ]=_cecc [j ],_cecc [i ]};func _cdaf (_abc _ceb .Int26_6 )float64 {const _agfg ,_ceef =6,1<<6-1;if _abc >=0{return float64 (_abc >>_agfg )+float64 (_abc &_ceef )/64;};_abc =-_abc ;if _abc >=0{return -(float64 (_abc >>_agfg )+float64 (_abc &_ceef )/64);
};return 0;};func _adeg (_fead float64 )_ceb .Int26_6 {return _ceb .Int26_6 (_fead *64)};type solidPattern struct{_ebgd _gea .Color };func (_geb *Context )SetDash (dashes ...float64 ){_geb ._gf =dashes };func (_debc *Context )Clear (){_egb :=_eb .NewUniform (_debc ._fde );
_ged .Draw (_debc ._cda ,_debc ._cda .Bounds (),_egb ,_eb .Point {},_ged .Src );};func _faea (_ggfe _gea .Color )_af .Pattern {return &solidPattern {_ebgd :_ggfe }};type repeatOp int ;func (_bd *Context )SetFillStyle (pattern _af .Pattern ){if _ceg ,_aag :=pattern .(*solidPattern );
_aag {_bd ._fde =_ceg ._ebgd ;};_bd ._fda =pattern ;};func _dgga (_eabf _cg .Point )_ceb .Point26_6 {return _ceb .Point26_6 {X :_adeg (_eabf .X ),Y :_adeg (_eabf .Y )};};func (_aac *Context )Push (){_fdebb :=*_aac ;_aac ._cbd =append (_aac ._cbd ,&_fdebb )};
func _bgba (_afca [][]_cg .Point )_db .Path {var _dcaa _db .Path ;for _ ,_debe :=range _afca {var _afge _ceb .Point26_6 ;for _bcac ,_agec :=range _debe {_cecf :=_dgga (_agec );if _bcac ==0{_dcaa .Start (_cecf );}else {_edfa :=_cecf .X -_afge .X ;_cccf :=_cecf .Y -_afge .Y ;
if _edfa < 0{_edfa =-_edfa ;};if _cccf < 0{_cccf =-_cccf ;};if _edfa +_cccf > 8{_dcaa .Add1 (_cecf );};};_afge =_cecf ;};};return _dcaa ;};func _ebba (_fbb _db .Path )[][]_cg .Point {var _dee [][]_cg .Point ;var _baea []_cg .Point ;var _ccbc ,_gfcf float64 ;
for _eeb :=0;_eeb < len (_fbb );{switch _fbb [_eeb ]{case 0:if len (_baea )> 0{_dee =append (_dee ,_baea );_baea =nil ;};_efc :=_cdaf (_fbb [_eeb +1]);_acdg :=_cdaf (_fbb [_eeb +2]);_baea =append (_baea ,_cg .NewPoint (_efc ,_acdg ));_ccbc ,_gfcf =_efc ,_acdg ;
_eeb +=4;case 1:_ecg :=_cdaf (_fbb [_eeb +1]);_cgb :=_cdaf (_fbb [_eeb +2]);_baea =append (_baea ,_cg .NewPoint (_ecg ,_cgb ));_ccbc ,_gfcf =_ecg ,_cgb ;_eeb +=4;case 2:_deg :=_cdaf (_fbb [_eeb +1]);_gde :=_cdaf (_fbb [_eeb +2]);_dcbb :=_cdaf (_fbb [_eeb +3]);
_egca :=_cdaf (_fbb [_eeb +4]);_adg :=_ag (_ccbc ,_gfcf ,_deg ,_gde ,_dcbb ,_egca );_baea =append (_baea ,_adg ...);_ccbc ,_gfcf =_dcbb ,_egca ;_eeb +=6;case 3:_bfeab :=_cdaf (_fbb [_eeb +1]);_geg :=_cdaf (_fbb [_eeb +2]);_aadc :=_cdaf (_fbb [_eeb +3]);
_aace :=_cdaf (_fbb [_eeb +4]);_gccb :=_cdaf (_fbb [_eeb +5]);_cafd :=_cdaf (_fbb [_eeb +6]);_fffa :=_gbe (_ccbc ,_gfcf ,_bfeab ,_geg ,_aadc ,_aace ,_gccb ,_cafd );_baea =append (_baea ,_fffa ...);_ccbc ,_gfcf =_gccb ,_cafd ;_eeb +=8;default:_gd .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_fbb );
return _dee ;};};if len (_baea )> 0{_dee =append (_dee ,_baea );};return _dee ;};func NewContextForImage (im _eb .Image )*Context {return NewContextForRGBA (_ccdd (im ))};func (_dcd *Context )SetHexColor (x string ){_baa ,_afd ,_ccdc ,_cfg :=_cbgda (x );
_dcd .SetRGBA255 (_baa ,_afd ,_ccdc ,_cfg );};func _bbff (_dfda *_eb .RGBA ,_dbca *_eb .Alpha ,_afcab _af .Pattern )*patternPainter {return &patternPainter {_dfda ,_dbca ,_afcab };};const (_dbcc repeatOp =iota ;_cbfe ;_cbb ;_dcca ;);func (_aba *solidPattern )ColorAt (x ,y int )_gea .Color {return _aba ._ebgd };
func (_abda *patternPainter )Paint (ss []_db .Span ,done bool ){_affb :=_abda ._cdb .Bounds ();for _ ,_eebc :=range ss {if _eebc .Y < _affb .Min .Y {continue ;};if _eebc .Y >=_affb .Max .Y {return ;};if _eebc .X0 < _affb .Min .X {_eebc .X0 =_affb .Min .X ;
};if _eebc .X1 > _affb .Max .X {_eebc .X1 =_affb .Max .X ;};if _eebc .X0 >=_eebc .X1 {continue ;};const _fdgf =1<<16-1;_gdea :=_eebc .Y -_abda ._cdb .Rect .Min .Y ;_aeb :=_eebc .X0 -_abda ._cdb .Rect .Min .X ;_agea :=(_eebc .Y -_abda ._cdb .Rect .Min .Y )*_abda ._cdb .Stride +(_eebc .X0 -_abda ._cdb .Rect .Min .X )*4;
_cafc :=_agea +(_eebc .X1 -_eebc .X0 )*4;for _daaea ,_dfeg :=_agea ,_aeb ;_daaea < _cafc ;_daaea ,_dfeg =_daaea +4,_dfeg +1{_bbb :=_eebc .Alpha ;if _abda ._gbea !=nil {_bbb =_bbb *uint32 (_abda ._gbea .AlphaAt (_dfeg ,_gdea ).A )/255;if _bbb ==0{continue ;
};};_cdfd :=_abda ._addd .ColorAt (_dfeg ,_gdea );_bag ,_abg ,_gcdc ,_fage :=_cdfd .RGBA ();_gfgd :=uint32 (_abda ._cdb .Pix [_daaea +0]);_dfbd :=uint32 (_abda ._cdb .Pix [_daaea +1]);_bdca :=uint32 (_abda ._cdb .Pix [_daaea +2]);_afgg :=uint32 (_abda ._cdb .Pix [_daaea +3]);
_baaf :=(_fdgf -(_fage *_bbb /_fdgf ))*0x101;_abda ._cdb .Pix [_daaea +0]=uint8 ((_gfgd *_baaf +_bag *_bbb )/_fdgf >>8);_abda ._cdb .Pix [_daaea +1]=uint8 ((_dfbd *_baaf +_abg *_bbb )/_fdgf >>8);_abda ._cdb .Pix [_daaea +2]=uint8 ((_bdca *_baaf +_gcdc *_bbb )/_fdgf >>8);
_abda ._cdb .Pix [_daaea +3]=uint8 ((_afgg *_baaf +_fage *_bbb )/_fdgf >>8);};};};func (_ccb *Context )Clip (){_ccb .ClipPreserve ();_ccb .ClearPath ()};func (_gfbb *Context )Identity (){_gfbb ._ace =_cg .IdentityMatrix ()};func (_cfd *Context )SetMask (mask *_eb .Alpha )error {if mask .Bounds ().Size ()!=_cfd ._cda .Bounds ().Size (){return _ce .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_cfd ._ea =mask ;return nil ;};func _ag (_ba ,_ec ,_bg ,_f ,_ca ,_dbf float64 )[]_cg .Point {_fg :=(_g .Hypot (_bg -_ba ,_f -_ec )+_g .Hypot (_ca -_bg ,_dbf -_f ));_fc :=int (_fg +0.5);if _fc < 4{_fc =4;};_bb :=float64 (_fc )-1;_cc :=make ([]_cg .Point ,_fc );
for _fd :=0;_fd < _fc ;_fd ++{_fe :=float64 (_fd )/_bb ;_aff ,_fef :=_dd (_ba ,_ec ,_bg ,_f ,_ca ,_dbf ,_fe );_cc [_fd ]=_cg .NewPoint (_aff ,_fef );};return _cc ;};func _eaf (_cddf [][]_cg .Point ,_cegbb []float64 ,_bcbgc float64 )[][]_cg .Point {var _eada [][]_cg .Point ;
if len (_cegbb )==0{return _cddf ;};if len (_cegbb )==1{_cegbb =append (_cegbb ,_cegbb [0]);};for _ ,_bgeb :=range _cddf {if len (_bgeb )< 2{continue ;};_aaac :=_bgeb [0];_febf :=1;_ege :=0;_eeg :=0.0;if _bcbgc !=0{var _beac float64 ;for _ ,_cfabc :=range _cegbb {_beac +=_cfabc ;
};_bcbgc =_g .Mod (_bcbgc ,_beac );if _bcbgc < 0{_bcbgc +=_beac ;};for _gga ,_bgbf :=range _cegbb {_bcbgc -=_bgbf ;if _bcbgc < 0{_ege =_gga ;_eeg =_bgbf +_bcbgc ;break ;};};};var _cbc []_cg .Point ;_cbc =append (_cbc ,_aaac );for _febf < len (_bgeb ){_def :=_cegbb [_ege ];
_gggf :=_bgeb [_febf ];_ebd :=_aaac .Distance (_gggf );_cbcg :=_def -_eeg ;if _ebd > _cbcg {_gggb :=_cbcg /_ebd ;_badad :=_aaac .Interpolate (_gggf ,_gggb );_cbc =append (_cbc ,_badad );if _ege %2==0&&len (_cbc )> 1{_eada =append (_eada ,_cbc );};_cbc =nil ;
_cbc =append (_cbc ,_badad );_eeg =0;_aaac =_badad ;_ege =(_ege +1)%len (_cegbb );}else {_cbc =append (_cbc ,_gggf );_aaac =_gggf ;_eeg +=_ebd ;_febf ++;};};if _ege %2==0&&len (_cbc )> 1{_eada =append (_eada ,_cbc );};};return _eada ;};func _edga (_dad float64 ,_gca stops )_gea .Color {if _dad <=0.0||len (_gca )==1{return _gca [0]._bbaf ;
};_gfbe :=_gca [len (_gca )-1];if _dad >=_gfbe ._acggf {return _gfbe ._bbaf ;};for _bgg ,_fcd :=range _gca [1:]{if _dad < _fcd ._acggf {_dad =(_dad -_gca [_bgg ]._acggf )/(_fcd ._acggf -_gca [_bgg ]._acggf );return _eec (_gca [_bgg ]._bbaf ,_fcd ._bbaf ,_dad );
};};return _gfbe ._bbaf ;};type surfacePattern struct{_aecc _eb .Image ;_cacdb repeatOp ;};func (_cef *Context )SetDashOffset (offset float64 ){_cef ._ecf =offset };func (_egbg *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_egbg .NewSubPath ();_egbg .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );
_egbg .ClosePath ();};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_af .Gradient {_fcab :=&linearGradient {_dcbc :x0 ,_cfab :y0 ,_fdebg :x1 ,_fdd :y1 };return _fcab ;};func (_gece *Context )Height ()int {return _gece ._gec };func (_bdb *Context )DrawImageAnchored (im _eb .Image ,x ,y int ,ax ,ay float64 ){_cbda :=im .Bounds ().Size ();
x -=int (ax *float64 (_cbda .X ));y -=int (ay *float64 (_cbda .Y ));_cfa :=_ged .BiLinear ;_cag :=_bdb ._ace .Clone ().Translate (float64 (x ),float64 (y ));_fea :=_d .Aff3 {_cag [0],_cag [3],_cag [6],_cag [1],_cag [4],_cag [7]};if _bdb ._ea ==nil {_cfa .Transform (_bdb ._cda ,_fea ,im ,im .Bounds (),_ged .Over ,nil );
}else {_cfa .Transform (_bdb ._cda ,_fea ,im ,im .Bounds (),_ged .Over ,&_ged .Options {DstMask :_bdb ._ea ,DstMaskP :_eb .Point {}});};};func _fba (_gcgg ,_bfea uint32 ,_dccd float64 )uint8 {return uint8 (int32 (float64 (_gcgg )*(1.0-_dccd )+float64 (_bfea )*_dccd )>>8);
};func (_feb *Context )ClosePath (){if _feb ._age {_gdc :=_dgga (_feb ._fgb );_feb ._dgc .Add1 (_gdc );_feb ._fag .Add1 (_gdc );_feb ._cdf =_feb ._fgb ;};};func (_gbeg *Context )Image ()_eb .Image {return _gbeg ._cda };func NewContextForRGBA (im *_eb .RGBA )*Context {_dbfb :=im .Bounds ().Size ().X ;
_ebg :=im .Bounds ().Size ().Y ;return &Context {_eda :_dbfb ,_gec :_ebg ,_fee :_db .NewRasterizer (_dbfb ,_ebg ),_cda :im ,_fde :_gea .Transparent ,_fda :_dg ,_add :_gda ,_fdeb :1,_fagb :_af .FillRuleWinding ,_ace :_cg .IdentityMatrix (),_feec :_af .NewTextState ()};
};func (_gbff *Context )Scale (x ,y float64 ){_gbff ._ace =_gbff ._ace .Scale (x ,y )};type linearGradient struct{_dcbc ,_cfab ,_fdebg ,_fdd float64 ;_abfg stops ;};func (_daa *Context )stroke (_bae _db .Painter ){_ada :=_daa ._dgc ;if len (_daa ._gf )> 0{_ada =_aceb (_ada ,_daa ._gf ,_daa ._ecf );
}else {_ada =_bgba (_ebba (_ada ));};_afa :=_daa ._fee ;_afa .UseNonZeroWinding =true ;_afa .Clear ();_fae :=(_daa ._ace .ScalingFactorX ()+_daa ._ace .ScalingFactorY ())/2;_afa .AddStroke (_ada ,_adeg (_daa ._fdeb *_fae ),_daa .capper (),_daa .joiner ());
_afa .Rasterize (_bae );};func (_efge *Context )FillPreserve (){var _bgeg _db .Painter ;if _efge ._ea ==nil {if _fb ,_gaa :=_efge ._fda .(*solidPattern );_gaa {_daab :=_db .NewRGBAPainter (_efge ._cda );_daab .SetColor (_fb ._ebgd );_bgeg =_daab ;};};if _bgeg ==nil {_bgeg =_bbff (_efge ._cda ,_efge ._ea ,_efge ._fda );
};_efge .fill (_bgeg );};func _ccdd (_gfeb _eb .Image )*_eb .RGBA {_gce :=_gfeb .Bounds ();_fcef :=_eb .NewRGBA (_gce );_c .Draw (_fcef ,_gce ,_gfeb ,_gce .Min ,_c .Src );return _fcef ;};func _eec (_egd ,_cefaeg _gea .Color ,_bbcf float64 )_gea .Color {_ggfd ,_gfc ,_ece ,_edac :=_egd .RGBA ();
_afg ,_cad ,_gbed ,_bca :=_cefaeg .RGBA ();return _gea .RGBA {_fba (_ggfd ,_afg ,_bbcf ),_fba (_gfc ,_cad ,_bbcf ),_fba (_ece ,_gbed ,_bbcf ),_fba (_edac ,_bca ,_bbcf )};};func (_baba *surfacePattern )ColorAt (x ,y int )_gea .Color {_eagb :=_baba ._aecc .Bounds ();
switch _baba ._cacdb {case _cbfe :if y >=_eagb .Dy (){return _gea .Transparent ;};case _cbb :if x >=_eagb .Dx (){return _gea .Transparent ;};case _dcca :if x >=_eagb .Dx ()||y >=_eagb .Dy (){return _gea .Transparent ;};};x =x %_eagb .Dx ()+_eagb .Min .X ;
y =y %_eagb .Dy ()+_eagb .Min .Y ;return _baba ._aecc .At (x ,y );};var (_dg =_faea (_gea .White );_gda =_faea (_gea .Black ););func (_faff *linearGradient )AddColorStop (offset float64 ,color _gea .Color ){_faff ._abfg =append (_faff ._abfg ,stop {_acggf :offset ,_bbaf :color });
_b .Sort (_faff ._abfg );};func (_edf *Context )SetColor (c _gea .Color ){_edf .setFillAndStrokeColor (c )};func (_aad *Context )RotateAbout (angle ,x ,y float64 ){_aad .Translate (x ,y );_aad .Rotate (angle );_aad .Translate (-x ,-y );};func _dd (_df ,_ae ,_geae ,_ef ,_gb ,_dbg ,_ga float64 )(_be ,_bf float64 ){_gbf :=1-_ga ;
_gg :=_gbf *_gbf ;_dbc :=2*_gbf *_ga ;_ed :=_ga *_ga ;_be =_gg *_df +_dbc *_geae +_ed *_gb ;_bf =_gg *_ae +_dbc *_ef +_ed *_dbg ;return ;};func (_bgb *Context )FillPattern ()_af .Pattern {return _bgb ._fda };func (_eadb *radialGradient )ColorAt (x ,y int )_gea .Color {if len (_eadb ._fcbe )==0{return _gea .Transparent ;
};_efdf ,_dag :=float64 (x )+0.5-_eadb ._bgd ._adad ,float64 (y )+0.5-_eadb ._bgd ._cbf ;_dcceg :=_dfd (_efdf ,_dag ,_eadb ._bgd ._bgf ,_eadb ._dec ._adad ,_eadb ._dec ._cbf ,_eadb ._dec ._bgf );_gcfe :=_dfd (_efdf ,_dag ,-_eadb ._bgd ._bgf ,_efdf ,_dag ,_eadb ._bgd ._bgf );
if _eadb ._gdb ==0{if _dcceg ==0{return _gea .Transparent ;};_dcg :=0.5*_gcfe /_dcceg ;if _dcg *_eadb ._dec ._bgf >=_eadb ._aggc {return _edga (_dcg ,_eadb ._fcbe );};return _gea .Transparent ;};_dfbb :=_dfd (_dcceg ,_eadb ._gdb ,0,_dcceg ,-_gcfe ,0);if _dfbb >=0{_accc :=_g .Sqrt (_dfbb );
_cdab :=(_dcceg +_accc )*_eadb ._dcda ;_bbc :=(_dcceg -_accc )*_eadb ._dcda ;if _cdab *_eadb ._dec ._bgf >=_eadb ._aggc {return _edga (_cdab ,_eadb ._fcbe );}else if _bbc *_eadb ._dec ._bgf >=_eadb ._aggc {return _edga (_bbc ,_eadb ._fcbe );};};return _gea .Transparent ;
};func _efff (_aedf float64 )float64 {return _aedf *_g .Pi /180};func (_ffg *Context )Width ()int {return _ffg ._eda };func (_fca *Context )InvertMask (){if _fca ._ea ==nil {_fca ._ea =_eb .NewAlpha (_fca ._cda .Bounds ());}else {for _gfg ,_abf :=range _fca ._ea .Pix {_fca ._ea .Pix [_gfg ]=255-_abf ;
};};};func (_cac *Context )SetLineJoin (lineJoin _af .LineJoin ){_cac ._ff =lineJoin };func (_dcc *Context )Shear (x ,y float64 ){_dcc ._ace .Shear (x ,y )};func (_ede *Context )ClipPreserve (){_gac :=_eb .NewAlpha (_eb .Rect (0,0,_ede ._eda ,_ede ._gec ));
_caa :=_db .NewAlphaOverPainter (_gac );_ede .fill (_caa );if _ede ._ea ==nil {_ede ._ea =_gac ;}else {_cbe :=_eb .NewAlpha (_eb .Rect (0,0,_ede ._eda ,_ede ._gec ));_ged .DrawMask (_cbe ,_cbe .Bounds (),_gac ,_eb .Point {},_ede ._ea ,_eb .Point {},_ged .Over );
_ede ._ea =_cbe ;};};