//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_gb "errors";_cc "fmt";_e "github.com/unidoc/freetype/raster";_a "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/transform";_bd "github.com/unidoc/unipdf/v3/render/internal/context";_ba "golang.org/x/image/draw";
_dde "golang.org/x/image/font";_dc "golang.org/x/image/math/f64";_dd "golang.org/x/image/math/fixed";_f "image";_ca "image/color";_cb "image/draw";_g "math";_gd "sort";_c "strings";);func (_fbd *Context )DrawCircle (x ,y ,r float64 ){_fbd .NewSubPath ();
_fbd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_fbd .ClosePath ();};func _bdead (_gdge float64 )_dd .Int26_6 {return _dd .Int26_6 (_gdge *64)};func (_bde *Context )SetHexColor (x string ){_gcd ,_baa ,_bfcb ,_aae :=_eega (x );_bde .SetRGBA255 (_gcd ,_baa ,_bfcb ,_aae );
};func (_ead *Context )Clip (){_ead .ClipPreserve ();_ead .ClearPath ()};func (_dfgb *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_ff :=_dfgb ._ebb .RGBA ();if _ff > 0&&_ff !=65535&&a ==1{a =float64 (_ff )/65535;};_dfgb ._ebb =_ca .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dfgb .setFillAndStrokeColor (_dfgb ._ebb );};func (_abd *Context )Pop (){_baf :=*_abd ;_cfg :=_abd ._ebe ;_faf :=_cfg [len (_cfg )-1];*_abd =*_faf ;_abd ._afb =_baf ._afb ;_abd ._aa =_baf ._aa ;_abd ._dcc =_baf ._dcc ;_abd ._aab =_baf ._aab ;_abd ._dg =_baf ._dg ;
};func (_cbb *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_cbb ._dg {_cbb .MoveTo (x1 ,y1 );};_bbc ,_gecf :=_cbb ._aab .X ,_cbb ._aab .Y ;x1 ,y1 =_cbb .Transform (x1 ,y1 );x2 ,y2 =_cbb .Transform (x2 ,y2 );x3 ,y3 =_cbb .Transform (x3 ,y3 );_agb :=_eff (_bbc ,_gecf ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );
_dfbc :=_cbba (_cbb ._aab );for _ ,_bebb :=range _agb [1:]{_fcf :=_cbba (_bebb );if _fcf ==_dfbc {continue ;};_dfbc =_fcf ;_cbb ._afb .Add1 (_fcf );_cbb ._aa .Add1 (_fcf );_cbb ._aab =_bebb ;};};func (_dbfa *Context )SetDash (dashes ...float64 ){_dbfa ._da =dashes };
func _ceab (_aed float64 ,_cecc stops )_ca .Color {if _aed <=0.0||len (_cecc )==1{return _cecc [0]._cdc ;};_caa :=_cecc [len (_cecc )-1];if _aed >=_caa ._efa {return _caa ._cdc ;};for _afg ,_beed :=range _cecc [1:]{if _aed < _beed ._efa {_aed =(_aed -_cecc [_afg ]._efa )/(_beed ._efa -_cecc [_afg ]._efa );
return _eggbf (_cecc [_afg ]._cdc ,_beed ._cdc ,_aed );};};return _caa ._cdc ;};func (_dcb *Context )LineWidth ()float64 {return _dcb ._ece };func _ccda (_ggc [][]_b .Point )_e .Path {var _egfc _e .Path ;for _ ,_cbcd :=range _ggc {var _gabg _dd .Point26_6 ;
for _ggag ,_ggbf :=range _cbcd {_aga :=_cbba (_ggbf );if _ggag ==0{_egfc .Start (_aga );}else {_daee :=_aga .X -_gabg .X ;_ebg :=_aga .Y -_gabg .Y ;if _daee < 0{_daee =-_daee ;};if _ebg < 0{_ebg =-_ebg ;};if _daee +_ebg > 8{_egfc .Add1 (_aga );};};_gabg =_aga ;
};};return _egfc ;};func _egbf (_fedc _e .Path )[][]_b .Point {var _afd [][]_b .Point ;var _afbd []_b .Point ;var _beea ,_ageb float64 ;for _gcf :=0;_gcf < len (_fedc );{switch _fedc [_gcf ]{case 0:if len (_afbd )> 0{_afd =append (_afd ,_afbd );_afbd =nil ;
};_fgfg :=_caaf (_fedc [_gcf +1]);_bbf :=_caaf (_fedc [_gcf +2]);_afbd =append (_afbd ,_b .NewPoint (_fgfg ,_bbf ));_beea ,_ageb =_fgfg ,_bbf ;_gcf +=4;case 1:_dfgga :=_caaf (_fedc [_gcf +1]);_fdg :=_caaf (_fedc [_gcf +2]);_afbd =append (_afbd ,_b .NewPoint (_dfgga ,_fdg ));
_beea ,_ageb =_dfgga ,_fdg ;_gcf +=4;case 2:_cbc :=_caaf (_fedc [_gcf +1]);_cacag :=_caaf (_fedc [_gcf +2]);_aeg :=_caaf (_fedc [_gcf +3]);_ccab :=_caaf (_fedc [_gcf +4]);_dgdd :=_gc (_beea ,_ageb ,_cbc ,_cacag ,_aeg ,_ccab );_afbd =append (_afbd ,_dgdd ...);
_beea ,_ageb =_aeg ,_ccab ;_gcf +=6;case 3:_gfe :=_caaf (_fedc [_gcf +1]);_bgcd :=_caaf (_fedc [_gcf +2]);_fgga :=_caaf (_fedc [_gcf +3]);_eacg :=_caaf (_fedc [_gcf +4]);_cab :=_caaf (_fedc [_gcf +5]);_cabe :=_caaf (_fedc [_gcf +6]);_egeb :=_eff (_beea ,_ageb ,_gfe ,_bgcd ,_fgga ,_eacg ,_cab ,_cabe );
_afbd =append (_afbd ,_egeb ...);_beea ,_ageb =_cab ,_cabe ;_gcf +=8;default:_a .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_fedc );return _afd ;};};if len (_afbd )> 0{_afd =append (_afd ,_afbd );
};return _afd ;};func (_gfba *linearGradient )AddColorStop (offset float64 ,color _ca .Color ){_gfba ._abde =append (_gfba ._abde ,stop {_efa :offset ,_cdc :color });_gd .Sort (_gfba ._abde );};func (_gdga *Context )joiner ()_e .Joiner {switch _gdga ._bcfd {case _bd .LineJoinBevel :return _e .BevelJoiner ;
case _bd .LineJoinRound :return _e .RoundJoiner ;};return nil ;};func (_bae *Context )ClearPath (){_bae ._afb .Clear ();_bae ._aa .Clear ();_bae ._dg =false };func (_dea *Context )TextState ()*_bd .TextState {return &_dea ._egd };func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_bd .Gradient {_cgfc :=&linearGradient {_fadd :x0 ,_afba :y0 ,_ccaa :x1 ,_gag :y1 };
return _cgfc ;};func (_bfcc *Context )SetMask (mask *_f .Alpha )error {if mask .Bounds ().Size ()!=_bfcc ._eef .Bounds ().Size (){return _gb .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_bfcc ._dfd =mask ;return nil ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_f .NewRGBA (_f .Rect (0,0,width ,height )));};func (_dfb *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_dfb ._dg {_dfb .MoveTo (x1 ,y1 );};
x1 ,y1 =_dfb .Transform (x1 ,y1 );x2 ,y2 =_dfb .Transform (x2 ,y2 );_gegf :=_b .NewPoint (x1 ,y1 );_eefa :=_b .NewPoint (x2 ,y2 );_cgd :=_cbba (_gegf );_afe :=_cbba (_eefa );_dfb ._afb .Add2 (_cgd ,_afe );_dfb ._aa .Add2 (_cgd ,_afe );_dfb ._aab =_eefa ;
};func (_dbe *Context )drawString (_fda string ,_gab _dde .Face ,_bbba ,_gbgd float64 ){_ggef :=&_dde .Drawer {Src :_f .NewUniform (_dbe ._ebb ),Face :_gab ,Dot :_cbba (_b .NewPoint (_bbba ,_gbgd ))};_gfg :=rune (-1);for _ ,_gcba :=range _fda {if _gfg >=0{_ggef .Dot .X +=_ggef .Face .Kern (_gfg ,_gcba );
};_afbg ,_gff ,_adcd ,_cfd ,_fad :=_ggef .Face .Glyph (_ggef .Dot ,_gcba );if !_fad {continue ;};_gbb :=_afbg .Sub (_afbg .Min );_afea :=_f .NewRGBA (_gbb );_ba .DrawMask (_afea ,_gbb ,_ggef .Src ,_f .Point {},_gff ,_adcd ,_ba .Over );var _abg *_ba .Options ;
if _dbe ._dfd !=nil {_abg =&_ba .Options {DstMask :_dbe ._dfd ,DstMaskP :_f .Point {}};};_fbb :=_dbe ._cf .Clone ().Translate (float64 (_afbg .Min .X ),float64 (_afbg .Min .Y ));_gdf :=_dc .Aff3 {_fbb [0],_fbb [3],_fbb [6],_fbb [1],_fbb [4],_fbb [7]};_ba .BiLinear .Transform (_dbe ._eef ,_gdf ,_afea ,_gbb ,_ba .Over ,_abg );
_ggef .Dot .X +=_cfd ;_gfg =_gcba ;};};func (_eaa *Context )fill (_ggbd _e .Painter ){_gcgb :=_eaa ._aa ;if _eaa ._dg {_gcgb =make (_e .Path ,len (_eaa ._aa ));copy (_gcgb ,_eaa ._aa );_gcgb .Add1 (_cbba (_eaa ._dcc ));};_gce :=_eaa ._bcb ;_gce .UseNonZeroWinding =_eaa ._eeb ==_bd .FillRuleWinding ;
_gce .Clear ();_gce .AddPath (_gcgb );_gce .Rasterize (_ggbd );};func (_ab *Context )stroke (_agg _e .Painter ){_fce :=_ab ._afb ;if len (_ab ._da )> 0{_fce =_fde (_fce ,_ab ._da ,_ab ._geg );}else {_fce =_ccda (_egbf (_fce ));};_ffe :=_ab ._bcb ;_ffe .UseNonZeroWinding =true ;
_ffe .Clear ();_ebcc :=(_ab ._cf .ScalingFactorX ()+_ab ._cf .ScalingFactorY ())/2;_ffe .AddStroke (_fce ,_bdead (_ab ._ece *_ebcc ),_ab .capper (),_ab .joiner ());_ffe .Rasterize (_agg );};func (_adg *Context )drawRegularPolygon (_dgba int ,_dgd ,_gdee ,_agf ,_ebae float64 ){_ebfg :=2*_g .Pi /float64 (_dgba );
_ebae -=_g .Pi /2;if _dgba %2==0{_ebae +=_ebfg /2;};_adg .NewSubPath ();for _gef :=0;_gef < _dgba ;_gef ++{_gcb :=_ebae +_ebfg *float64 (_gef );_adg .LineTo (_dgd +_agf *_g .Cos (_gcb ),_gdee +_agf *_g .Sin (_gcb ));};_adg .ClosePath ();};type solidPattern struct{_adcc _ca .Color };
func (_ebdf *solidPattern )ColorAt (x ,y int )_ca .Color {return _ebdf ._adcc };func _cca (_gf ,_cg ,_df ,_bf ,_ga ,_ef ,_ea float64 )(_ae ,_ee float64 ){_cac :=1-_ea ;_ad :=_cac *_cac ;_eb :=2*_cac *_ea ;_eg :=_ea *_ea ;_ae =_ad *_gf +_eb *_df +_eg *_ga ;
_ee =_ad *_cg +_eb *_bf +_eg *_ef ;return ;};func (_afeb *Context )Clear (){_cggf :=_f .NewUniform (_afeb ._ebb );_ba .Draw (_afeb ._eef ,_afeb ._eef .Bounds (),_cggf ,_f .Point {},_ba .Src );};func (_beb *Context )LineTo (x ,y float64 ){if !_beb ._dg {_beb .MoveTo (x ,y );
}else {x ,y =_beb .Transform (x ,y );_ebc :=_b .NewPoint (x ,y );_ac :=_cbba (_ebc );_beb ._afb .Add1 (_ac );_beb ._aa .Add1 (_ac );_beb ._aab =_ebc ;};};func (_aded *radialGradient )AddColorStop (offset float64 ,color _ca .Color ){_aded ._fcfb =append (_aded ._fcfb ,stop {_efa :offset ,_cdc :color });
_gd .Sort (_aded ._fcfb );};func (_cgf *Context )SetLineCap (lineCap _bd .LineCap ){_cgf ._dda =lineCap };func _eggbf (_fgf ,_ggdd _ca .Color ,_efg float64 )_ca .Color {_fed ,_bda ,_fcfe ,_ccg :=_fgf .RGBA ();_cbac ,_afbe ,_ccf ,_bgf :=_ggdd .RGBA ();return _ca .RGBA {_acc (_fed ,_cbac ,_efg ),_acc (_bda ,_afbe ,_efg ),_acc (_fcfe ,_ccf ,_efg ),_acc (_ccg ,_bgf ,_efg )};
};func (_dac *Context )ClipPreserve (){_aaea :=_f .NewAlpha (_f .Rect (0,0,_dac ._caf ,_dac ._bg ));_eeg :=_e .NewAlphaOverPainter (_aaea );_dac .fill (_eeg );if _dac ._dfd ==nil {_dac ._dfd =_aaea ;}else {_cfba :=_f .NewAlpha (_f .Rect (0,0,_dac ._caf ,_dac ._bg ));
_ba .DrawMask (_cfba ,_cfba .Bounds (),_aaea ,_f .Point {},_dac ._dfd ,_f .Point {},_ba .Over );_dac ._dfd =_cfba ;};};func (_age *Context )SetLineWidth (lineWidth float64 ){_age ._ece =lineWidth };func (_dgb *Context )SetPixel (x ,y int ){_dgb ._eef .Set (x ,y ,_dgb ._ebb )};
func (_ggd *Context )StrokePattern ()_bd .Pattern {return _ggd ._ccc };func (_ged *Context )FillPreserve (){var _ebca _e .Painter ;if _ged ._dfd ==nil {if _fca ,_baaf :=_ged ._bef .(*solidPattern );_baaf {_abc :=_e .NewRGBAPainter (_ged ._eef );_abc .SetColor (_fca ._adcc );
_ebca =_abc ;};};if _ebca ==nil {_ebca =_dfbd (_ged ._eef ,_ged ._dfd ,_ged ._bef );};_ged .fill (_ebca );};func (_cfa *Context )SetStrokeStyle (pattern _bd .Pattern ){_cfa ._ccc =pattern };func (_fc *Context )SetColor (c _ca .Color ){_fc .setFillAndStrokeColor (c )};
func (_fggd *Context )Push (){_affc :=*_fggd ;_fggd ._ebe =append (_fggd ._ebe ,&_affc )};func (_bee *Context )SetFillRule (fillRule _bd .FillRule ){_bee ._eeb =fillRule };func (_fac *Context )Transform (x ,y float64 )(_gcee ,_gebf float64 ){return _fac ._cf .Transform (x ,y )};
type linearGradient struct{_fadd ,_afba ,_ccaa ,_gag float64 ;_abde stops ;};type stop struct{_efa float64 ;_cdc _ca .Color ;};func (_adcb *Context )SetMatrix (m _b .Matrix ){_adcb ._cf =m };func (_ccce *Context )SetFillStyle (pattern _bd .Pattern ){if _cgg ,_adf :=pattern .(*solidPattern );
_adf {_ccce ._ebb =_cgg ._adcc ;};_ccce ._bef =pattern ;};func (_fcag *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_fcag .NewSubPath ();_fcag .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_fcag .ClosePath ();};func (_dcg *Context )SetRGB255 (r ,g ,b int ){_dcg .SetRGBA255 (r ,g ,b ,255)};
func (_ebeb *Context )SetRGB (r ,g ,b float64 ){_ebeb .SetRGBA (r ,g ,b ,1)};const (_daef repeatOp =iota ;_agfb ;_aba ;_cfgg ;);func (_ggg *Context )FillPattern ()_bd .Pattern {return _ggg ._bef };func _caaf (_ddbc _dd .Int26_6 )float64 {const _fccf ,_bacd =6,1<<6-1;
if _ddbc >=0{return float64 (_ddbc >>_fccf )+float64 (_ddbc &_bacd )/64;};_ddbc =-_ddbc ;if _ddbc >=0{return -(float64 (_ddbc >>_fccf )+float64 (_ddbc &_bacd )/64);};return 0;};func (_ccd *Context )Translate (x ,y float64 ){_ccd ._cf =_ccd ._cf .Translate (x ,y )};
func (_eee *Context )DrawRectangle (x ,y ,w ,h float64 ){_eee .NewSubPath ();_eee .MoveTo (x ,y );_eee .LineTo (x +w ,y );_eee .LineTo (x +w ,y +h );_eee .LineTo (x ,y +h );_eee .ClosePath ();};func (_feeb *radialGradient )ColorAt (x ,y int )_ca .Color {if len (_feeb ._fcfb )==0{return _ca .Transparent ;
};_ggf ,_dbfe :=float64 (x )+0.5-_feeb ._fdd ._bdef ,float64 (y )+0.5-_feeb ._fdd ._ceca ;_ccdb :=_ddad (_ggf ,_dbfe ,_feeb ._fdd ._gebc ,_feeb ._bdbc ._bdef ,_feeb ._bdbc ._ceca ,_feeb ._bdbc ._gebc );_cfgc :=_ddad (_ggf ,_dbfe ,-_feeb ._fdd ._gebc ,_ggf ,_dbfe ,_feeb ._fdd ._gebc );
if _feeb ._bcbb ==0{if _ccdb ==0{return _ca .Transparent ;};_fgbb :=0.5*_cfgc /_ccdb ;if _fgbb *_feeb ._bdbc ._gebc >=_feeb ._caca {return _ceab (_fgbb ,_feeb ._fcfb );};return _ca .Transparent ;};_bdeg :=_ddad (_ccdb ,_feeb ._bcbb ,0,_ccdb ,-_cfgc ,0);
if _bdeg >=0{_cde :=_g .Sqrt (_bdeg );_adeg :=(_ccdb +_cde )*_feeb ._dgaa ;_bfb :=(_ccdb -_cde )*_feeb ._dgaa ;if _adeg *_feeb ._bdbc ._gebc >=_feeb ._caca {return _ceab (_adeg ,_feeb ._fcfb );}else if _bfb *_feeb ._bdbc ._gebc >=_feeb ._caca {return _ceab (_bfb ,_feeb ._fcfb );
};};return _ca .Transparent ;};func (_ccb *Context )AsMask ()*_f .Alpha {_cag :=_f .NewAlpha (_ccb ._eef .Bounds ());_ba .Draw (_cag ,_ccb ._eef .Bounds (),_ccb ._eef ,_f .Point {},_ba .Src );return _cag ;};func (_fgb *Context )Width ()int {return _fgb ._caf };
func (_dga *Context )Stroke (){_dga .StrokePreserve ();_dga .ClearPath ()};func (_cffc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cffc .Translate (x ,y );_cffc .Shear (sx ,sy );_cffc .Translate (-x ,-y );};func _dbgf (_ddbd _f .Image ,_abgc repeatOp )_bd .Pattern {return &surfacePattern {_gddgf :_ddbd ,_dgg :_abgc };
};func (_bea *Context )ResetClip (){_bea ._dfd =nil };func (_gffa stops )Less (i ,j int )bool {return _gffa [i ]._efa < _gffa [j ]._efa };func (_efb *Context )capper ()_e .Capper {switch _efb ._dda {case _bd .LineCapButt :return _e .ButtCapper ;case _bd .LineCapRound :return _e .RoundCapper ;
case _bd .LineCapSquare :return _e .SquareCapper ;};return nil ;};func (_ddd *Context )Rotate (angle float64 ){_ddd ._cf =_ddd ._cf .Rotate (angle )};func (_bgc *Context )DrawString (s string ,face _dde .Face ,x ,y float64 ){_bgc .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_affa stops )Swap (i ,j int ){_affa [i ],_affa [j ]=_affa [j ],_affa [i ]};func (_fb *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_dbg :=_ca .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fb ._ccc =_cbab (_dbg );};func (_eab *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_eab .MoveTo (x1 ,y1 );
_eab .LineTo (x2 ,y2 )};func (_efd *Context )DrawPoint (x ,y ,r float64 ){_efd .Push ();_gad ,_bcg :=_efd .Transform (x ,y );_efd .Identity ();_efd .DrawCircle (_gad ,_bcg ,r );_efd .Pop ();};func (_aad *Context )Image ()_f .Image {return _aad ._eef };
func (_edg *Context )Shear (x ,y float64 ){_edg ._cf .Shear (x ,y )};type patternPainter struct{_dfc *_f .RGBA ;_gcfa *_f .Alpha ;_dcca _bd .Pattern ;};func (_aade *Context )SetLineJoin (lineJoin _bd .LineJoin ){_aade ._bcfd =lineJoin };func (_gffb stops )Len ()int {return len (_gffb )};
func _efdc (_cccf [][]_b .Point ,_bacb []float64 ,_feee float64 )[][]_b .Point {var _gafb [][]_b .Point ;if len (_bacb )==0{return _cccf ;};if len (_bacb )==1{_bacb =append (_bacb ,_bacb [0]);};for _ ,_gaa :=range _cccf {if len (_gaa )< 2{continue ;};_faa :=_gaa [0];
_fbe :=1;_fgbbb :=0;_eda :=0.0;if _feee !=0{var _gdcb float64 ;for _ ,_gfc :=range _bacb {_gdcb +=_gfc ;};_feee =_g .Mod (_feee ,_gdcb );if _feee < 0{_feee +=_gdcb ;};for _agebd ,_ebdd :=range _bacb {_feee -=_ebdd ;if _feee < 0{_fgbbb =_agebd ;_eda =_ebdd +_feee ;
break ;};};};var _fabg []_b .Point ;_fabg =append (_fabg ,_faa );for _fbe < len (_gaa ){_gccf :=_bacb [_fgbbb ];_dbc :=_gaa [_fbe ];_bdg :=_faa .Distance (_dbc );_dca :=_gccf -_eda ;if _bdg > _dca {_edf :=_dca /_bdg ;_bgfe :=_faa .Interpolate (_dbc ,_edf );
_fabg =append (_fabg ,_bgfe );if _fgbbb %2==0&&len (_fabg )> 1{_gafb =append (_gafb ,_fabg );};_fabg =nil ;_fabg =append (_fabg ,_bgfe );_eda =0;_faa =_bgfe ;_fgbbb =(_fgbbb +1)%len (_bacb );}else {_fabg =append (_fabg ,_dbc );_faa =_dbc ;_eda +=_bdg ;
_fbe ++;};};if _fgbbb %2==0&&len (_fabg )> 1{_gafb =append (_gafb ,_fabg );};};return _gafb ;};func NewContextForImage (im _f .Image )*Context {return NewContextForRGBA (_bfe (im ))};func (_fcfd *surfacePattern )ColorAt (x ,y int )_ca .Color {_ffa :=_fcfd ._gddgf .Bounds ();
switch _fcfd ._dgg {case _agfb :if y >=_ffa .Dy (){return _ca .Transparent ;};case _aba :if x >=_ffa .Dx (){return _ca .Transparent ;};case _cfgg :if x >=_ffa .Dx ()||y >=_ffa .Dy (){return _ca .Transparent ;};};x =x %_ffa .Dx ()+_ffa .Min .X ;y =y %_ffa .Dy ()+_ffa .Min .Y ;
return _fcfd ._gddgf .At (x ,y );};type stops []stop ;func _bca (_fe ,_bdb ,_aff ,_db ,_bfa ,_fd ,_bfc ,_cd ,_egb float64 )(_gec ,_ag float64 ){_gee :=1-_egb ;_gdc :=_gee *_gee *_gee ;_dfg :=3*_gee *_gee *_egb ;_cdb :=3*_gee *_egb *_egb ;_fa :=_egb *_egb *_egb ;
_gec =_gdc *_fe +_dfg *_aff +_cdb *_bfa +_fa *_bfc ;_ag =_gdc *_bdb +_dfg *_db +_cdb *_fd +_fa *_cd ;return ;};type radialGradient struct{_fdd ,_edd ,_bdbc circle ;_bcbb ,_dgaa float64 ;_caca float64 ;_fcfb stops ;};func _cbba (_adb _b .Point )_dd .Point26_6 {return _dd .Point26_6 {X :_bdead (_adb .X ),Y :_bdead (_adb .Y )}};
type Context struct{_caf int ;_bg int ;_bcb *_e .Rasterizer ;_eef *_f .RGBA ;_dfd *_f .Alpha ;_ebb _ca .Color ;_bef _bd .Pattern ;_ccc _bd .Pattern ;_afb _e .Path ;_aa _e .Path ;_dcc _b .Point ;_aab _b .Point ;_dg bool ;_da []float64 ;_geg float64 ;_ece float64 ;
_dda _bd .LineCap ;_bcfd _bd .LineJoin ;_eeb _bd .FillRule ;_cf _b .Matrix ;_egd _bd .TextState ;_ebe []*Context ;};func NewContextForRGBA (im *_f .RGBA )*Context {_gfb :=im .Bounds ().Size ().X ;_gddg :=im .Bounds ().Size ().Y ;return &Context {_caf :_gfb ,_bg :_gddg ,_bcb :_e .NewRasterizer (_gfb ,_gddg ),_eef :im ,_ebb :_ca .Transparent ,_bef :_dce ,_ccc :_ddb ,_ece :1,_eeb :_bd .FillRuleWinding ,_cf :_b .IdentityMatrix (),_egd :_bd .NewTextState ()};
};func (_ddc *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_cfb :=_ddc ._ebb .RGBA ();if _cfb > 0&&_cfb !=65535&&a ==1{a =float64 (_cfb )/65535;};_ebf :=_ca .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ddc ._ebb =_ebf ;_ddc ._bef =_cbab (_ebf );
};func (_dacg *patternPainter )Paint (ss []_e .Span ,done bool ){_eeee :=_dacg ._dfc .Bounds ();for _ ,_gebg :=range ss {if _gebg .Y < _eeee .Min .Y {continue ;};if _gebg .Y >=_eeee .Max .Y {return ;};if _gebg .X0 < _eeee .Min .X {_gebg .X0 =_eeee .Min .X ;
};if _gebg .X1 > _eeee .Max .X {_gebg .X1 =_eeee .Max .X ;};if _gebg .X0 >=_gebg .X1 {continue ;};const _dff =1<<16-1;_cfggc :=_gebg .Y -_dacg ._dfc .Rect .Min .Y ;_fgbe :=_gebg .X0 -_dacg ._dfc .Rect .Min .X ;_ebfe :=(_gebg .Y -_dacg ._dfc .Rect .Min .Y )*_dacg ._dfc .Stride +(_gebg .X0 -_dacg ._dfc .Rect .Min .X )*4;
_bebbd :=_ebfe +(_gebg .X1 -_gebg .X0 )*4;for _gbbg ,_fccd :=_ebfe ,_fgbe ;_gbbg < _bebbd ;_gbbg ,_fccd =_gbbg +4,_fccd +1{_gbf :=_gebg .Alpha ;if _dacg ._gcfa !=nil {_gbf =_gbf *uint32 (_dacg ._gcfa .AlphaAt (_fccd ,_cfggc ).A )/255;if _gbf ==0{continue ;
};};_aeeg :=_dacg ._dcca .ColorAt (_fccd ,_cfggc );_agfe ,_fcd ,_agff ,_affd :=_aeeg .RGBA ();_adccb :=uint32 (_dacg ._dfc .Pix [_gbbg +0]);_dag :=uint32 (_dacg ._dfc .Pix [_gbbg +1]);_gbe :=uint32 (_dacg ._dfc .Pix [_gbbg +2]);_ggeg :=uint32 (_dacg ._dfc .Pix [_gbbg +3]);
_gaca :=(_dff -(_affd *_gbf /_dff ))*0x101;_dacg ._dfc .Pix [_gbbg +0]=uint8 ((_adccb *_gaca +_agfe *_gbf )/_dff >>8);_dacg ._dfc .Pix [_gbbg +1]=uint8 ((_dag *_gaca +_fcd *_gbf )/_dff >>8);_dacg ._dfc .Pix [_gbbg +2]=uint8 ((_gbe *_gaca +_agff *_gbf )/_dff >>8);
_dacg ._dfc .Pix [_gbbg +3]=uint8 ((_ggeg *_gaca +_affd *_gbf )/_dff >>8);};};};func (_bdd *Context )Height ()int {return _bdd ._bg };func (_ebbd *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_bac ,_gbg ,_bbg ,_fbc :=x ,x +r ,x +w -r ,x +w ;_dba ,_dae ,_bddf ,_cfc :=y ,y +r ,y +h -r ,y +h ;
_ebbd .NewSubPath ();_ebbd .MoveTo (_gbg ,_dba );_ebbd .LineTo (_bbg ,_dba );_ebbd .DrawArc (_bbg ,_dae ,r ,_bfag (270),_bfag (360));_ebbd .LineTo (_fbc ,_bddf );_ebbd .DrawArc (_bbg ,_bddf ,r ,_bfag (0),_bfag (90));_ebbd .LineTo (_gbg ,_cfc );_ebbd .DrawArc (_gbg ,_bddf ,r ,_bfag (90),_bfag (180));
_ebbd .LineTo (_bac ,_dae );_ebbd .DrawArc (_gbg ,_dae ,r ,_bfag (180),_bfag (270));_ebbd .ClosePath ();};func (_gga *Context )ClosePath (){if _gga ._dg {_adc :=_cbba (_gga ._dcc );_gga ._afb .Add1 (_adc );_gga ._aa .Add1 (_adc );_gga ._aab =_gga ._dcc ;
};};func _dfbd (_gefe *_f .RGBA ,_cgda *_f .Alpha ,_cbag _bd .Pattern )*patternPainter {return &patternPainter {_gefe ,_cgda ,_cbag };};func _cbab (_cccb _ca .Color )_bd .Pattern {return &solidPattern {_adcc :_cccb }};func (_deaf *Context )Matrix ()_b .Matrix {return _deaf ._cf };
type surfacePattern struct{_gddgf _f .Image ;_dgg repeatOp ;};func (_dcbe *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_dcbe .Translate (x ,y );_dcbe .Scale (sx ,sy );_dcbe .Translate (-x ,-y );};func _bfe (_bfce _f .Image )*_f .RGBA {_ccgc :=_bfce .Bounds ();
_gbd :=_f .NewRGBA (_ccgc );_cb .Draw (_gbd ,_ccgc ,_bfce ,_ccgc .Min ,_cb .Src );return _gbd ;};func _fde (_cfga _e .Path ,_aaab []float64 ,_aee float64 )_e .Path {return _ccda (_efdc (_egbf (_cfga ),_aaab ,_aee ));};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_bd .Gradient {_bag :=circle {x0 ,y0 ,r0 };
_bge :=circle {x1 ,y1 ,r1 };_aabc :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_egf :=_ddad (_aabc ._bdef ,_aabc ._ceca ,-_aabc ._gebc ,_aabc ._bdef ,_aabc ._ceca ,_aabc ._gebc );var _gfa float64 ;if _egf !=0{_gfa =1.0/_egf ;};_bgef :=-_bag ._gebc ;_abcb :=&radialGradient {_fdd :_bag ,_edd :_bge ,_bdbc :_aabc ,_bcbb :_egf ,_dgaa :_gfa ,_caca :_bgef };
return _abcb ;};func (_ggdg *linearGradient )ColorAt (x ,y int )_ca .Color {if len (_ggdg ._abde )==0{return _ca .Transparent ;};_eea ,_ebbg :=float64 (x ),float64 (y );_dbb ,_fcc ,_ddg ,_acb :=_ggdg ._fadd ,_ggdg ._afba ,_ggdg ._ccaa ,_ggdg ._gag ;_aaf ,_cea :=_ddg -_dbb ,_acb -_fcc ;
if _cea ==0&&_aaf !=0{return _ceab ((_eea -_dbb )/_aaf ,_ggdg ._abde );};if _aaf ==0&&_cea !=0{return _ceab ((_ebbg -_fcc )/_cea ,_ggdg ._abde );};_aada :=_aaf *(_eea -_dbb )+_cea *(_ebbg -_fcc );if _aada < 0{return _ggdg ._abde [0]._cdc ;};_ecdc :=_g .Hypot (_aaf ,_cea );
_bfad :=((_eea -_dbb )*-_cea +(_ebbg -_fcc )*_aaf )/(_ecdc *_ecdc );_dgbb ,_egae :=_dbb +_bfad *-_cea ,_fcc +_bfad *_aaf ;_bga :=_g .Hypot (_eea -_dgbb ,_ebbg -_egae )/_ecdc ;return _ceab (_bga ,_ggdg ._abde );};var (_dce =_cbab (_ca .White );_ddb =_cbab (_ca .Black );
);func (_beee *Context )setFillAndStrokeColor (_gdg _ca .Color ){_beee ._ebb =_gdg ;_beee ._bef =_cbab (_gdg );_beee ._ccc =_cbab (_gdg );};type repeatOp int ;func _eega (_agbb string )(_ffbg ,_fge ,_fcfde ,_agc int ){_agbb =_c .TrimPrefix (_agbb ,"\u0023");
_agc =255;if len (_agbb )==3{_daa :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_cc .Sscanf (_agbb ,_daa ,&_ffbg ,&_fge ,&_fcfde );_ffbg |=_ffbg <<4;_fge |=_fge <<4;_fcfde |=_fcfde <<4;};if len (_agbb )==6{_bdad :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_cc .Sscanf (_agbb ,_bdad ,&_ffbg ,&_fge ,&_fcfde );};if len (_agbb )==8{_ffg :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cc .Sscanf (_agbb ,_ffg ,&_ffbg ,&_fge ,&_fcfde ,&_agc );};return ;};func (_aec *Context )RotateAbout (angle ,x ,y float64 ){_aec .Translate (x ,y );
_aec .Rotate (angle );_aec .Translate (-x ,-y );};func (_cdf *Context )DrawImage (im _f .Image ,x ,y int ){_cdf .DrawImageAnchored (im ,x ,y ,0,0)};func (_fdb *Context )DrawStringAnchored (s string ,face _dde .Face ,x ,y ,ax ,ay float64 ){_abca ,_geb :=_fdb .MeasureString (s ,face );
_fdb .drawString (s ,face ,x -ax *_abca ,y +ay *_geb );};func (_cff *Context )SetDashOffset (offset float64 ){_cff ._geg =offset };func _ddad (_dcgc ,_dfgg ,_fabd ,_abe ,_gacf ,_gabf float64 )float64 {return _dcgc *_abe +_dfgg *_gacf +_fabd *_gabf ;};type circle struct{_bdef ,_ceca ,_gebc float64 };
func (_fee *Context )Fill (){_fee .FillPreserve ();_fee .ClearPath ()};func _acc (_eefd ,_ffb uint32 ,_ccaaa float64 )uint8 {return uint8 (int32 (float64 (_eefd )*(1.0-_ccaaa )+float64 (_ffb )*_ccaaa )>>8);};func (_fbg *Context )InvertMask (){if _fbg ._dfd ==nil {_fbg ._dfd =_f .NewAlpha (_fbg ._eef .Bounds ());
}else {for _gcge ,_bce :=range _fbg ._dfd .Pix {_fbg ._dfd .Pix [_gcge ]=255-_bce ;};};};func (_gde *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _ege =16;for _ade :=0;_ade < _ege ;_ade ++{_gaf :=float64 (_ade +0)/_ege ;_gbc :=float64 (_ade +1)/_ege ;
_eabf :=angle1 +(angle2 -angle1 )*_gaf ;_eggb :=angle1 +(angle2 -angle1 )*_gbc ;_gac :=x +rx *_g .Cos (_eabf );_gea :=y +ry *_g .Sin (_eabf );_gdeb :=x +rx *_g .Cos ((_eabf +_eggb )/2);_eba :=y +ry *_g .Sin ((_eabf +_eggb )/2);_effd :=x +rx *_g .Cos (_eggb );
_cba :=y +ry *_g .Sin (_eggb );_afee :=2*_gdeb -_gac /2-_effd /2;_bdea :=2*_eba -_gea /2-_cba /2;if _ade ==0{if _gde ._dg {_gde .LineTo (_gac ,_gea );}else {_gde .MoveTo (_gac ,_gea );};};_gde .QuadraticTo (_afee ,_bdea ,_effd ,_cba );};};func (_bbb *Context )SetRGBA255 (r ,g ,b ,a int ){_bbb ._ebb =_ca .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_bbb .setFillAndStrokeColor (_bbb ._ebb );};func (_ddaf *Context )Identity (){_ddaf ._cf =_b .IdentityMatrix ()};func (_efc *Context )StrokePreserve (){var _fag _e .Painter ;if _efc ._dfd ==nil {if _gge ,_eec :=_efc ._ccc .(*solidPattern );_eec {_ffee :=_e .NewRGBAPainter (_efc ._eef );
_ffee .SetColor (_gge ._adcc );_fag =_ffee ;};};if _fag ==nil {_fag =_dfbd (_efc ._eef ,_efc ._dfd ,_efc ._ccc );};_efc .stroke (_fag );};func _bfag (_abag float64 )float64 {return _abag *_g .Pi /180};func (_ggb *Context )MoveTo (x ,y float64 ){if _ggb ._dg {_ggb ._aa .Add1 (_cbba (_ggb ._dcc ));
};x ,y =_ggb .Transform (x ,y );_bgb :=_b .NewPoint (x ,y );_aaa :=_cbba (_bgb );_ggb ._afb .Start (_aaa );_ggb ._aa .Start (_aaa );_ggb ._dcc =_bgb ;_ggb ._aab =_bgb ;_ggb ._dg =true ;};func (_acg *Context )MeasureString (s string ,face _dde .Face )(_ccba ,_gdgb float64 ){_cec :=&_dde .Drawer {Face :face };
_ggea :=_cec .MeasureString (s );return float64 (_ggea >>6),_acg ._egd .Tf .Size ;};func _gc (_eaf ,_add ,_ce ,_bc ,_gg ,_efe float64 )[]_b .Point {_gcg :=(_g .Hypot (_ce -_eaf ,_bc -_add )+_g .Hypot (_gg -_ce ,_efe -_bc ));_ge :=int (_gcg +0.5);if _ge < 4{_ge =4;
};_gba :=float64 (_ge )-1;_gcc :=make ([]_b .Point ,_ge );for _ec :=0;_ec < _ge ;_ec ++{_af :=float64 (_ec )/_gba ;_cga ,_addc :=_cca (_eaf ,_add ,_ce ,_bc ,_gg ,_efe ,_af );_gcc [_ec ]=_b .NewPoint (_cga ,_addc );};return _gcc ;};func _eff (_eac ,_ceg ,_ebd ,_de ,_fec ,_fg ,_gccb ,_egg float64 )[]_b .Point {_bb :=(_g .Hypot (_ebd -_eac ,_de -_ceg )+_g .Hypot (_fec -_ebd ,_fg -_de )+_g .Hypot (_gccb -_fec ,_egg -_fg ));
_dbf :=int (_bb +0.5);if _dbf < 4{_dbf =4;};_gdd :=float64 (_dbf )-1;_ecd :=make ([]_b .Point ,_dbf );for _ed :=0;_ed < _dbf ;_ed ++{_bcf :=float64 (_ed )/_gdd ;_cbf ,_be :=_bca (_eac ,_ceg ,_ebd ,_de ,_fec ,_fg ,_gccb ,_egg ,_bcf );_ecd [_ed ]=_b .NewPoint (_cbf ,_be );
};return _ecd ;};func (_afc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_afc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_aaeae *Context )DrawImageAnchored (im _f .Image ,x ,y int ,ax ,ay float64 ){_bdda :=im .Bounds ().Size ();x -=int (ax *float64 (_bdda .X ));
y -=int (ay *float64 (_bdda .Y ));_dbd :=_ba .BiLinear ;_gceg :=_aaeae ._cf .Clone ().Translate (float64 (x ),float64 (y ));_bcbf :=_dc .Aff3 {_gceg [0],_gceg [3],_gceg [6],_gceg [1],_gceg [4],_gceg [7]};if _aaeae ._dfd ==nil {_dbd .Transform (_aaeae ._eef ,_bcbf ,im ,im .Bounds (),_ba .Over ,nil );
}else {_dbd .Transform (_aaeae ._eef ,_bcbf ,im ,im .Bounds (),_ba .Over ,&_ba .Options {DstMask :_aaeae ._dfd ,DstMaskP :_f .Point {}});};};func (_ggac *Context )Scale (x ,y float64 ){_ggac ._cf =_ggac ._cf .Scale (x ,y )};func (_ecdf *Context )NewSubPath (){if _ecdf ._dg {_ecdf ._aa .Add1 (_cbba (_ecdf ._dcc ));
};_ecdf ._dg =false ;};