//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_eb "github.com/unidoc/garabic";_b "golang.org/x/text/unicode/bidi";_g "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_bd :=_b .Paragraph {};_bd .SetString (text );_ba ,_gd :=_bd .Order ();if _gd !=nil {return "",_gd ;};for _ed :=0;_ed < _ba .NumRuns ();_ed ++{_bda :=_ba .Run (_ed );_d :=_bda .String ();if _bda .Direction ()==_b .RightToLeft {var (_c =_eb .Shape (_d );
_ef =[]rune (_c );_dc =make ([]rune ,len (_ef )););_cc :=0;for _gc :=len (_ef )-1;_gc >=0;_gc --{_dc [_cc ]=_ef [_gc ];_cc ++;};_d =string (_dc );text =_g .Replace (text ,_g .TrimSpace (_bda .String ()),_d ,1);};};return text ,nil ;};