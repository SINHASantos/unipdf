//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_g "github.com/unidoc/garabic";_d "golang.org/x/text/unicode/bidi";_f "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_a :=_d .Paragraph {};_a .SetString (text );_fb ,_ab :=_a .Order ();if _ab !=nil {return "",_ab ;};for _fa :=0;_fa < _fb .NumRuns ();_fa ++{_af :=_fb .Run (_fa );_ag :=_af .String ();if _af .Direction ()==_d .RightToLeft {var (_fc =_g .Shape (_ag );
_e =[]rune (_fc );_agd =make ([]rune ,len (_e )););_faf :=0;for _ca :=len (_e )-1;_ca >=0;_ca --{_agd [_faf ]=_e [_ca ];_faf ++;};_ag =string (_agd );text =_f .Replace (text ,_f .TrimSpace (_af .String ()),_ag ,1);};};return text ,nil ;};