//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_cc "github.com/unidoc/garabic";_ed "golang.org/x/text/unicode/bidi";_c "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_g :=_ed .Paragraph {};_g .SetString (text );_f ,_ca :=_g .Order ();if _ca !=nil {return "",_ca ;};for _ee :=0;_ee < _f .NumRuns ();_ee ++{_caf :=_f .Run (_ee );_b :=_caf .String ();if _caf .Direction ()==_ed .RightToLeft {var (_gg =_cc .Shape (_b );
_eg =[]rune (_gg );_eed =make ([]rune ,len (_eg )););_d :=0;for _ea :=len (_eg )-1;_ea >=0;_ea --{_eed [_d ]=_eg [_ea ];_d ++;};_b =string (_eed );text =_c .Replace (text ,_c .TrimSpace (_caf .String ()),_b ,1);};};return text ,nil ;};