//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_da "github.com/unidoc/garabic";_be "golang.org/x/text/unicode/bidi";_d "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_a :=_be .Paragraph {};_a .SetString (text );_c ,_g :=_a .Order ();if _g !=nil {return "",_g ;};for _ge :=0;_ge < _c .NumRuns ();_ge ++{_cd :=_c .Run (_ge );_dab :=_cd .String ();if _cd .Direction ()==_be .RightToLeft {var (_df =_da .Shape (_dab );
_gc =[]rune (_df );_gee =make ([]rune ,len (_gc )););_gb :=0;for _bec :=len (_gc )-1;_bec >=0;_bec --{_gee [_gb ]=_gc [_bec ];_gb ++;};_dab =string (_gee );text =_d .Replace (text ,_d .TrimSpace (_cd .String ()),_dab ,1);};};return text ,nil ;};