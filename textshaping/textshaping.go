//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_g "github.com/unidoc/garabic";_e "golang.org/x/text/unicode/bidi";_c "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_gf :=_e .Paragraph {};_gf .SetString (text );_cg ,_gfb :=_gf .Order ();if _gfb !=nil {return "",_gfb ;};for _gd :=0;_gd < _cg .NumRuns ();_gd ++{_fa :=_cg .Run (_gd );_b :=_fa .String ();if _fa .Direction ()==_e .RightToLeft {var (_a =_g .Shape (_b );
_ff =[]rune (_a );_ag =make ([]rune ,len (_ff )););_ad :=0;for _gde :=len (_ff )-1;_gde >=0;_gde --{_ag [_ad ]=_ff [_gde ];_ad ++;};_b =string (_ag );text =_c .Replace (text ,_c .TrimSpace (_fa .String ()),_b ,1);};};return text ,nil ;};