//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_f "github.com/unidoc/garabic";_fa "golang.org/x/text/unicode/bidi";_gd "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_d :=_fa .Paragraph {};_d .SetString (text );_ff ,_e :=_d .Order ();if _e !=nil {return "",_e ;};for _a :=0;_a < _ff .NumRuns ();_a ++{_b :=_ff .Run (_a );_eg :=_b .String ();if _b .Direction ()==_fa .RightToLeft {var (_bf =_f .Shape (_eg );
_ba =[]rune (_bf );_ee =make ([]rune ,len (_ba )););_ea :=0;for _fab :=len (_ba )-1;_fab >=0;_fab --{_ee [_ea ]=_ba [_fab ];_ea ++;};_eg =string (_ee );text =_gd .Replace (text ,_gd .TrimSpace (_b .String ()),_eg ,1);};};return text ,nil ;};