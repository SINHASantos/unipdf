//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package redactor ;import (_b "errors";_e "fmt";_gf "github.com/unidoc/unipdf/v3/common";_bg "github.com/unidoc/unipdf/v3/contentstream";_f "github.com/unidoc/unipdf/v3/core";_a "github.com/unidoc/unipdf/v3/creator";_ga "github.com/unidoc/unipdf/v3/extractor";
_ag "github.com/unidoc/unipdf/v3/model";_g "io";_be "regexp";_cb "sort";_gb "strings";);type regexMatcher struct{_cdgg RedactionTerm };func _ec (_gg *_bg .ContentStreamOperation ,_ced _f .PdfObject ,_agf []localSpanMarks )error {_gd ,_bed :=_f .GetArray (_gg .Params [0]);
_dg :=[]_f .PdfObject {};if !_bed {_gf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0054\u004a\u0020\u006f\u0070\u003d\u0025s\u0020G\u0065t\u0041r\u0072\u0061\u0079\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_gg );return _e .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_gg );
};_ged ,_agb :=_fga (_agf );if len (_agb )==1{_af :=_agb [0];_ccb :=_ged [_af ];if len (_ccb )==1{_ecc :=_ccb [0];_gcc :=_ecc ._adg ;_bc :=_gbf (_gcc );_beg ,_fg :=_deg (_ced ,_bc );if _fg !=nil {return _fg ;};_dbc ,_fg :=_fea (_ecc ,_gcc ,_bc ,_beg ,_af );
if _fg !=nil {return _fg ;};for _ ,_aga :=range _gd .Elements (){if _aga ==_ced {_dg =append (_dg ,_dbc ...);}else {_dg =append (_dg ,_aga );};};}else {_cgbf :=_ccb [0]._adg ;_ffe :=_gbf (_cgbf );_cac ,_gab :=_deg (_ced ,_ffe );if _gab !=nil {return _gab ;
};_aad ,_gab :=_bfcd (_cac ,_ccb );if _gab !=nil {return _gab ;};_dc :=_gdf (_aad );_aafg :=_fgaf (_cac ,_dc ,_ffe );for _ ,_abe :=range _gd .Elements (){if _abe ==_ced {_dg =append (_dg ,_aafg ...);}else {_dg =append (_dg ,_abe );};};};_gg .Params [0]=_f .MakeArray (_dg ...);
}else if len (_agb )> 1{_bec :=_agf [0];_gda :=_bec ._adg ;_ ,_bd :=_cgb (_gda );_bcf :=_gda .Elements ()[_bd ];_bfb :=_bcf .Font ;_ceda ,_ecb :=_deg (_ced ,_bfb );if _ecb !=nil {return _ecb ;};_bbg ,_ecb :=_bfcd (_ceda ,_agf );if _ecb !=nil {return _ecb ;
};_cba :=_gdf (_bbg );_df :=_fgaf (_ceda ,_cba ,_bfb );for _ ,_ffb :=range _gd .Elements (){if _ffb ==_ced {_dg =append (_dg ,_df ...);}else {_dg =append (_dg ,_ffb );};};_gg .Params [0]=_f .MakeArray (_dg ...);};return nil ;};func _efe (_abbb *_bg .ContentStreamOperations ,PdfObj _f .PdfObject )(*_bg .ContentStreamOperation ,int ,bool ){for _ccac ,_cfdd :=range *_abbb {_bgf :=_cfdd .Operand ;
if _bgf =="\u0054\u006a"{_feg :=_f .TraceToDirectObject (_cfdd .Params [0]);if _feg ==PdfObj {return _cfdd ,_ccac ,true ;};}else if _bgf =="\u0054\u004a"{_gef ,_adbe :=_f .GetArray (_cfdd .Params [0]);if !_adbe {return nil ,_ccac ,_adbe ;};for _ ,_dfec :=range _gef .Elements (){if _dfec ==PdfObj {return _cfdd ,_ccac ,true ;
};};}else if _bgf =="\u0022"{_bbga :=_f .TraceToDirectObject (_cfdd .Params [2]);if _bbga ==PdfObj {return _cfdd ,_ccac ,true ;};}else if _bgf =="\u0027"{_cdd :=_f .TraceToDirectObject (_cfdd .Params [0]);if _cdd ==PdfObj {return _cfdd ,_ccac ,true ;};
};};return nil ,-1,false ;};

// RectangleProps defines properties of the redaction rectangle to be drawn.
type RectangleProps struct{FillColor _a .Color ;BorderWidth float64 ;FillOpacity float64 ;};func _ebaa (_cbade int ,_abeg []int )bool {for _ ,_fba :=range _abeg {if _fba ==_cbade {return true ;};};return false ;};

// RedactionOptions is a collection of RedactionTerm objects.
type RedactionOptions struct{Terms []RedactionTerm ;};

// Write writes the content of `re.creator` to writer of type io.Writer interface.
func (_cggg *Redactor )Write (writer _g .Writer )error {return _cggg ._ege .Write (writer )};func _fea (_bfc localSpanMarks ,_ffg *_ga .TextMarkArray ,_abc *_ag .PdfFont ,_fgf ,_bab string )([]_f .PdfObject ,error ){_ecg :=_decgd (_ffg );Tj ,_fdfb :=_dbfe (_ffg );
if _fdfb !=nil {return nil ,_fdfb ;};_aced :=len (_fgf );_cdf :=len (_ecg );_bbc :=-1;_gfaf :=_f .MakeFloat (Tj );if _ecg !=_bab {_ebe :=_bfc ._eegd ;if _ebe ==0{_bbc =_gb .LastIndex (_fgf ,_ecg );}else {_bbc =_gb .Index (_fgf ,_ecg );};}else {_bbc =_gb .Index (_fgf ,_ecg );
};_ebd :=_bbc +_cdf ;_dcc :=[]_f .PdfObject {};if _bbc ==0&&_ebd ==_aced {_dcc =append (_dcc ,_gfaf );}else if _bbc ==0&&_ebd < _aced {_gbg :=_ac (_fgf [_ebd :],_abc );_fbc :=_f .MakeStringFromBytes (_gbg );_dcc =append (_dcc ,_gfaf ,_fbc );}else if _bbc > 0&&_ebd >=_aced {_cef :=_ac (_fgf [:_bbc ],_abc );
_fad :=_f .MakeStringFromBytes (_cef );_dcc =append (_dcc ,_fad ,_gfaf );}else if _bbc > 0&&_ebd < _aced {_ede :=_ac (_fgf [:_bbc ],_abc );_ded :=_ac (_fgf [_ebd :],_abc );_cbf :=_f .MakeStringFromBytes (_ede );_ece :=_f .MakeString (string (_ded ));_dcc =append (_dcc ,_cbf ,_gfaf ,_ece );
};return _dcc ,nil ;};func _fga (_bbgb []localSpanMarks )(map[string ][]localSpanMarks ,[]string ){_fgg :=make (map[string ][]localSpanMarks );_ba :=[]string {};for _ ,_eba :=range _bbgb {_fbf :=_eba ._faa ;if _geg ,_fdf :=_fgg [_fbf ];_fdf {_fgg [_fbf ]=append (_geg ,_eba );
}else {_fgg [_fbf ]=[]localSpanMarks {_eba };_ba =append (_ba ,_fbf );};};return _fgg ,_ba ;};func _abed (_ebc RedactionTerm )(*regexMatcher ,error ){return &regexMatcher {_cdgg :_ebc },nil };func _bfcd (_ccc string ,_ebbc []localSpanMarks )([]placeHolders ,error ){_afb :="";
_edf :=[]placeHolders {};for _adb ,_gaf :=range _ebbc {_cbbd :=_gaf ._adg ;_eef :=_gaf ._faa ;_eff :=_decgd (_cbbd );_ddf ,_fffc :=_dbfe (_cbbd );if _fffc !=nil {return nil ,_fffc ;};if _eff !=_afb {var _aaa []int ;if _adb ==0&&_eef !=_eff {_ggbf :=_gb .Index (_ccc ,_eff );
_aaa =[]int {_ggbf };}else if _adb ==len (_ebbc )-1{_aff :=_gb .LastIndex (_ccc ,_eff );_aaa =[]int {_aff };}else {_aaa =_cgbe (_ccc ,_eff );};_dgc :=placeHolders {_fe :_aaa ,_bf :_eff ,_cc :_ddf };_edf =append (_edf ,_dgc );};_afb =_eff ;};return _edf ,nil ;
};func _baa (_efb *_ga .TextMarkArray ,_afde int ,_gbc int )int {_cdaa :=_efb .Elements ();_decd :=_afde -1;_dagb :=_afde +1;_dgcc :=-1;if _decd >=0{_egea :=_cdaa [_decd ];_fcda :=_egea .ObjString ;_babe :=len (_fcda );_gfbf :=_egea .Index ;if _gfbf +1< _babe {_dgcc =_decd ;
return _dgcc ;};};if _dagb < len (_cdaa ){_ecf :=_cdaa [_dagb ];_edg :=_ecf .ObjString ;if _edg [0]!=_ecf .Text {_dgcc =_dagb ;return _dgcc ;};};return _dgcc ;};

// RedactionTerm holds the regexp pattern and the replacement string for the redaction process.
type RedactionTerm struct{Pattern *_be .Regexp ;};func _decgd (_bad *_ga .TextMarkArray )string {_dede :="";for _ ,_ggf :=range _bad .Elements (){_dede +=_ggf .Text ;};return _dede ;};func _gbf (_cf *_ga .TextMarkArray )*_ag .PdfFont {_ ,_ceea :=_cgb (_cf );
_dbca :=_cf .Elements ()[_ceea ];_agfd :=_dbca .Font ;return _agfd ;};type targetMap struct{_ceef string ;_gage [][]int ;};func _bge (_aadb *_ag .PdfFont ,_dbf _ga .TextMark )float64 {_eg :=0.001;_ebb :=_dbf .Th /100;if _aadb .Subtype ()=="\u0054\u0079\u0070e\u0033"{_eg =1;
};_dfe ,_gag :=_aadb .GetRuneMetrics (' ');if !_gag {_dfe ,_gag =_aadb .GetCharMetrics (32);};if !_gag {_dfe ,_ =_ag .DefaultFont ().GetRuneMetrics (' ');};_fb :=_eg *((_dfe .Wx *_dbf .FontSize +_dbf .Tc +_dbf .Tw )/_ebb );return _fb ;};func _dbfe (_cdb *_ga .TextMarkArray )(float64 ,error ){_bcb ,_eac :=_cdb .BBox ();
if !_eac {return 0.0,_e .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_cdb );
};_def :=_gc (_cdb );_gdc :=0.0;_ ,_agc :=_cgb (_cdb );_aba :=_cdb .Elements ()[_agc ];_decg :=_aba .Font ;if _def > 0{_gdc =_bge (_decg ,_aba );};_fdg :=(_bcb .Urx -_bcb .Llx );_fdg =_fdg +_gdc *float64 (_def );Tj :=_caac (_fdg ,_aba .FontSize ,_aba .Th );
return Tj ,nil ;};func _cg (_bb *_bg .ContentStreamOperations ,_fc map[_f .PdfObject ][]localSpanMarks )error {for _ab ,_db :=range _fc {if _ab ==nil {continue ;};_cca ,_ad ,_da :=_efe (_bb ,_ab );if !_da {_gf .Log .Debug ("Pd\u0066\u004fb\u006a\u0065\u0063\u0074\u0020\u0025\u0073\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0073\u0069\u0064\u0065\u0020\u0074\u0068\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073\u0074r\u0065a\u006d\u0020\u006f\u0070\u0065\u0072\u0061\u0074i\u006fn\u0020\u0025s",_ab ,_bb );
return nil ;};if _cca .Operand =="\u0054\u006a"{_bea :=_aac (_cca ,_ab ,_db );if _bea !=nil {return _bea ;};}else if _cca .Operand =="\u0054\u004a"{_dba :=_ec (_cca ,_ab ,_db );if _dba !=nil {return _dba ;};}else if _cca .Operand =="\u0027"||_cca .Operand =="\u0022"{_ff :=_aa (_bb ,_cca .Operand ,_ad );
if _ff !=nil {return _ff ;};_ff =_aac (_cca ,_ab ,_db );if _ff !=nil {return _ff ;};};};return nil ;};func _ffdg (_ebed ,_cbd targetMap )(bool ,[]int ){_bbfd :=_gb .Contains (_ebed ._ceef ,_cbd ._ceef );var _ccf []int ;for _ ,_gdcf :=range _ebed ._gage {for _aaag ,_afce :=range _cbd ._gage {if _afce [0]>=_gdcf [0]&&_afce [1]<=_gdcf [1]{_ccf =append (_ccf ,_aaag );
};};};return _bbfd ,_ccf ;};func _fgaf (_cbad string ,_add []replacement ,_caf *_ag .PdfFont )[]_f .PdfObject {_ggc :=[]_f .PdfObject {};_bfe :=0;_fbb :=_cbad ;for _gdb ,_aacd :=range _add {_fadd :=_aacd ._ea ;_fgb :=_aacd ._ee ;_eefe :=_aacd ._d ;_cfd :=_f .MakeFloat (_fgb );
if _bfe > _fadd ||_fadd ==-1{continue ;};_dcd :=_cbad [_bfe :_fadd ];_ada :=_ac (_dcd ,_caf );_egg :=_f .MakeStringFromBytes (_ada );_ggc =append (_ggc ,_egg );_ggc =append (_ggc ,_cfd );_efa :=_fadd +len (_eefe );_fbb =_cbad [_efa :];_bfe =_efa ;if _gdb ==len (_add )-1{_ada =_ac (_fbb ,_caf );
_egg =_f .MakeStringFromBytes (_ada );_ggc =append (_ggc ,_egg );};};return _ggc ;};

// Redact executes the redact operation on a pdf file and updates the content streams of all pages of the file.
func (_eegb *Redactor )Redact ()error {_fgff ,_deff :=_eegb ._daa .GetNumPages ();if _deff !=nil {return _e .Errorf ("\u0066\u0061\u0069\u006c\u0065\u0064 \u0074\u006f\u0020\u0067\u0065\u0074\u0020\u0074\u0068\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u006f\u0066\u0020P\u0061\u0067\u0065\u0073");
};_gegb :=_eegb ._fdd .FillColor ;_beab :=_eegb ._fdd .BorderWidth ;_gaeg :=_eegb ._fdd .FillOpacity ;for _aee :=1;_aee <=_fgff ;_aee ++{_ecga ,_dbfcd :=_eegb ._daa .GetPage (_aee );if _dbfcd !=nil {return _dbfcd ;};_dbcae ,_dbfcd :=_ga .New (_ecga );if _dbfcd !=nil {return _dbfcd ;
};_gca ,_ ,_ ,_dbfcd :=_dbcae .ExtractPageText ();if _dbfcd !=nil {return _dbfcd ;};_gdca :=_gca .GetContentStreamOps ();_ccbe ,_fag ,_dbfcd :=_eegb .redactPage (_gdca ,_ecga .Resources );if _fag ==nil {_gf .Log .Info ("N\u006f\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066\u006f\u0072\u0020t\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065d \u0070\u0061\u0074t\u0061r\u006e\u002e");
_fag =_gdca ;};_dfd :=_bg .ContentStreamOperation {Operand :"\u006e"};*_fag =append (*_fag ,&_dfd );_ecga .SetContentStreams ([]string {_fag .String ()},_f .NewFlateEncoder ());if _dbfcd !=nil {return _dbfcd ;};_bgb ,_dbfcd :=_ecga .GetMediaBox ();if _dbfcd !=nil {return _dbfcd ;
};if _ecga .MediaBox ==nil {_ecga .MediaBox =_bgb ;};if _gbgc :=_eegb ._ege .AddPage (_ecga );_gbgc !=nil {return _gbgc ;};_cb .Slice (_ccbe ,func (_fffe ,_agg int )bool {return _ccbe [_fffe ]._cdff < _ccbe [_agg ]._cdff });_fbe :=_bgb .Ury ;for _ ,_cad :=range _ccbe {_gac :=_cad ._ddb ;
_gabb :=_eegb ._ege .NewRectangle (_gac .Llx ,_fbe -_gac .Lly ,_gac .Urx -_gac .Llx ,-(_gac .Ury -_gac .Lly ));_gabb .SetFillColor (_gegb );_gabb .SetBorderWidth (_beab );_gabb .SetFillOpacity (_gaeg );if _dbfb :=_eegb ._ege .Draw (_gabb );_dbfb !=nil {return nil ;
};};};_eegb ._ege .SetOutlineTree (_eegb ._daa .GetOutlineTree ());return nil ;};func _ac (_eeg string ,_cgg *_ag .PdfFont )[]byte {_bff ,_bda :=_cgg .StringToCharcodeBytes (_eeg );if _bda !=0{_gf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0073\u006fm\u0065\u0020\u0072un\u0065\u0073\u0020\u0063\u006f\u0075l\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065d\u002e\u000a\u0009\u0025\u0073\u0020\u002d\u003e \u0025\u0076",_eeg ,_bff );
};return _bff ;};func _bbaf (_cgca *matchedIndex ,_afgc [][]int )[]*matchedIndex {_ggg :=[]*matchedIndex {};_eecf :=_cgca ._gdd ;_ccdb :=_eecf ;_cdc :=_cgca ._dccd ;_faab :=0;for _ ,_bbcc :=range _afgc {_fbcd :=_bbcc [0]-_eecf ;if _faab >=_fbcd {continue ;
};_dfgc :=_cdc [_faab :_fbcd ];_dgea :=&matchedIndex {_dccd :_dfgc ,_gdd :_ccdb ,_fbd :_bbcc [0]};if len (_gb .TrimSpace (_dfgc ))!=0{_ggg =append (_ggg ,_dgea );};_faab =_bbcc [1]-_eecf ;_ccdb =_eecf +_faab ;};_edac :=_cdc [_faab :];_bbgg :=&matchedIndex {_dccd :_edac ,_gdd :_ccdb ,_fbd :_cgca ._fbd };
if len (_gb .TrimSpace (_edac ))!=0{_ggg =append (_ggg ,_bbgg );};return _ggg ;};func _ebge (_dgef *matchedIndex ,_fbdg [][]int )(bool ,[][]int ){_dcaf :=[][]int {};for _ ,_dfac :=range _fbdg {if _dgef ._gdd < _dfac [0]&&_dgef ._fbd > _dfac [1]{_dcaf =append (_dcaf ,_dfac );
};};return len (_dcaf )> 0,_dcaf ;};func _aac (_dgf *_bg .ContentStreamOperation ,_caa _f .PdfObject ,_ed []localSpanMarks )error {var _afc *_f .PdfObjectArray ;_cae ,_aed :=_fga (_ed );if len (_aed )==1{_fff :=_aed [0];_caef :=_cae [_fff ];if len (_caef )==1{_dfa :=_caef [0];
_dga :=_dfa ._adg ;_bcg :=_gbf (_dga );_gfa ,_dag :=_deg (_caa ,_bcg );if _dag !=nil {return _dag ;};_fcg ,_dag :=_fea (_dfa ,_dga ,_bcg ,_gfa ,_fff );if _dag !=nil {return _dag ;};_afc =_f .MakeArray (_fcg ...);}else {_gcg :=_caef [0]._adg ;_adc :=_gbf (_gcg );
_dec ,_cgc :=_deg (_caa ,_adc );if _cgc !=nil {return _cgc ;};_ebbe ,_cgc :=_bfcd (_dec ,_caef );if _cgc !=nil {return _cgc ;};_cab :=_gdf (_ebbe );_ecbg :=_fgaf (_dec ,_cab ,_adc );_afc =_f .MakeArray (_ecbg ...);};}else if len (_aed )> 1{_ef :=_ed [0];
_dd :=_ef ._adg ;_ ,_dcg :=_cgb (_dd );_acd :=_dd .Elements ()[_dcg ];_egb :=_acd .Font ;_ffd ,_ace :=_deg (_caa ,_egb );if _ace !=nil {return _ace ;};_ebac ,_ace :=_bfcd (_ffd ,_ed );if _ace !=nil {return _ace ;};_gec :=_gdf (_ebac );_eee :=_fgaf (_ffd ,_gec ,_egb );
_afc =_f .MakeArray (_eee ...);};_dgf .Params [0]=_afc ;_dgf .Operand ="\u0054\u004a";return nil ;};type placeHolders struct{_fe []int ;_bf string ;_cc float64 ;};func _aa (_ca *_bg .ContentStreamOperations ,_gff string ,_fd int )error {_dbe :=_bg .ContentStreamOperations {};
var _fa _bg .ContentStreamOperation ;for _beaa ,_bfg :=range *_ca {if _beaa ==_fd {if _gff =="\u0027"{_gffe :=_bg .ContentStreamOperation {Operand :"\u0054\u002a"};_dbe =append (_dbe ,&_gffe );_fa .Params =_bfg .Params ;_fa .Operand ="\u0054\u006a";_dbe =append (_dbe ,&_fa );
}else if _gff =="\u0022"{_ce :=_bfg .Params [:2];Tc ,Tw :=_ce [0],_ce [1];_cd :=_bg .ContentStreamOperation {Params :[]_f .PdfObject {Tc },Operand :"\u0054\u0063"};_dbe =append (_dbe ,&_cd );_cd =_bg .ContentStreamOperation {Params :[]_f .PdfObject {Tw },Operand :"\u0054\u0077"};
_dbe =append (_dbe ,&_cd );_fa .Params =[]_f .PdfObject {_bfg .Params [2]};_fa .Operand ="\u0054\u006a";_dbe =append (_dbe ,&_fa );};};_dbe =append (_dbe ,_bfg );};*_ca =_dbe ;return nil ;};func _bac (_faga []int ,_bbe *_ga .TextMarkArray ,_ceg string )(*_ga .TextMarkArray ,matchedBBox ,error ){_gfda :=matchedBBox {};
_gce :=_faga [0];_dece :=_faga [1];_fdgd :=len (_ceg )-len (_gb .TrimLeft (_ceg ,"\u0020"));_dca :=len (_ceg )-len (_gb .TrimRight (_ceg ,"\u0020\u000a"));_gce =_gce +_fdgd ;_dece =_dece -_dca ;_ceg =_gb .Trim (_ceg ,"\u0020\u000a");_efg ,_adba :=_bbe .RangeOffset (_gce ,_dece );
if _adba !=nil {return nil ,_gfda ,_adba ;};_eegf ,_gcf :=_efg .BBox ();if !_gcf {return nil ,_gfda ,_e .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_efg );
};_gfda =matchedBBox {_cdff :_ceg ,_ddb :_eegf };return _efg ,_gfda ,nil ;};func _fgba (_bdf []*targetMap ){for _dfcb ,_ebbd :=range _bdf {for _gfe ,_dfga :=range _bdf {if _dfcb !=_gfe {_bcd ,_ccd :=_ffdg (*_ebbd ,*_dfga );if _bcd {_eefa (_dfga ,_ccd );
};};};};};func _gc (_ge *_ga .TextMarkArray )int {_fac :=0;_gae :=_ge .Elements ();if _gae [0].Text =="\u0020"{_fac ++;};if _gae [_ge .Len ()-1].Text =="\u0020"{_fac ++;};return _fac ;};

// WriteToFile writes the redacted document to file specified by `outputPath`.
func (_ffa *Redactor )WriteToFile (outputPath string )error {if _fde :=_ffa ._ege .WriteToFile (outputPath );_fde !=nil {return _e .Errorf ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074o\u0020\u0077\u0072\u0069\u0074\u0065\u0020t\u0068\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0066\u0069\u006c\u0065");
};return nil ;};func _cgb (_abb *_ga .TextMarkArray )(_f .PdfObject ,int ){var _eeb _f .PdfObject ;_aab :=-1;for _de ,_aaf :=range _abb .Elements (){_eeb =_aaf .DirectObject ;_aab =_de ;if _eeb !=nil {break ;};};return _eeb ,_aab ;};func _fcge (_bbdd []*matchedIndex )[]*targetMap {_dee :=make (map[string ][][]int );
_ebg :=[]*targetMap {};for _ ,_bcc :=range _bbdd {_acec :=_bcc ._dccd ;_bafa :=[]int {_bcc ._gdd ,_bcc ._fbd };if _edaf ,_eaf :=_dee [_acec ];_eaf {_dee [_acec ]=append (_edaf ,_bafa );}else {_dee [_acec ]=[][]int {_bafa };};};for _dfdd ,_fegg :=range _dee {_cafb :=&targetMap {_ceef :_dfdd ,_gage :_fegg };
_ebg =append (_ebg ,_cafb );};return _ebg ;};type matchedBBox struct{_ddb _ag .PdfRectangle ;_cdff string ;};func (_fge *Redactor )redactPage (_bfca *_bg .ContentStreamOperations ,_cbc *_ag .PdfPageResources )([]matchedBBox ,*_bg .ContentStreamOperations ,error ){_adf ,_afe :=_ga .NewFromContents (_bfca .String (),_cbc );
if _afe !=nil {return nil ,nil ,_afe ;};_dcdf ,_ ,_ ,_afe :=_adf .ExtractPageText ();if _afe !=nil {return nil ,nil ,_afe ;};_bfca =_dcdf .GetContentStreamOps ();_fcdf :=_dcdf .Marks ();_cccb :=_dcdf .Text ();_cccb ,_bbd :=_gbe (_cccb );_abef :=[]matchedBBox {};
_caeb :=make (map[_f .PdfObject ][]localSpanMarks );_fega :=[]*targetMap {};for _ ,_bee :=range _fge ._bbf .Terms {_cdg ,_bdd :=_abed (_bee );if _bdd !=nil {return nil ,nil ,_bdd ;};_adaa ,_bdd :=_cdg .match (_cccb );if _bdd !=nil {return nil ,nil ,_bdd ;
};_adaa =_bedd (_adaa ,_bbd );_dbg :=_fcge (_adaa );_fega =append (_fega ,_dbg ...);};_fgba (_fega );for _ ,_dab :=range _fega {_abad :=_dab ._ceef ;_aaade :=_dab ._gage ;_bfcg :=[]matchedBBox {};for _ ,_afee :=range _aaade {_afd ,_cadb ,_ddg :=_bac (_afee ,_fcdf ,_abad );
if _ddg !=nil {return nil ,nil ,_ddg ;};_cfe :=_ccda (_afd );for _gedc ,_dcb :=range _cfe {_dde :=localSpanMarks {_adg :_dcb ,_eegd :_gedc ,_faa :_abad };_eda ,_ :=_cgb (_dcb );if _ggbc ,_ggfe :=_caeb [_eda ];_ggfe {_caeb [_eda ]=append (_ggbc ,_dde );
}else {_caeb [_eda ]=[]localSpanMarks {_dde };};};_bfcg =append (_bfcg ,_cadb );};_abef =append (_abef ,_bfcg ...);};_afe =_cg (_bfca ,_caeb );if _afe !=nil {return nil ,nil ,_afe ;};return _abef ,_bfca ,nil ;};func _caac (_bbgaa ,_acea ,_gcgd float64 )float64 {_gcgd =_gcgd /100;
_fcd :=(-1000*_bbgaa )/(_acea *_gcgd );return _fcd ;};type matchedIndex struct{_gdd int ;_fbd int ;_dccd string ;};type replacement struct{_d string ;_ee float64 ;_ea int ;};type localSpanMarks struct{_adg *_ga .TextMarkArray ;_eegd int ;_faa string ;};


// New instantiates a Redactor object with given PdfReader and `regex` pattern.
func New (reader *_ag .PdfReader ,opts *RedactionOptions ,rectProps *RectangleProps )*Redactor {if rectProps ==nil {rectProps =RedactRectanglePropsNew ();};return &Redactor {_daa :reader ,_bbf :opts ,_ege :_a .New (),_fdd :rectProps };};func _eefa (_abba *targetMap ,_gedb []int ){var _ggd [][]int ;
for _fbbc ,_afg :=range _abba ._gage {if _ebaa (_fbbc ,_gedb ){continue ;};_ggd =append (_ggd ,_afg );};_abba ._gage =_ggd ;};

// RedactRectanglePropsNew return a new pointer to a default RectangleProps object.
func RedactRectanglePropsNew ()*RectangleProps {return &RectangleProps {FillColor :_a .ColorBlack ,BorderWidth :0.0,FillOpacity :1.0};};func _cgbe (_aeg ,_efc string )[]int {if len (_efc )==0{return nil ;};var _bgfb []int ;for _afbgb :=0;_afbgb < len (_aeg );
{_bdab :=_gb .Index (_aeg [_afbgb :],_efc );if _bdab < 0{return _bgfb ;};_bgfb =append (_bgfb ,_afbgb +_bdab );_afbgb +=_bdab +len (_efc );};return _bgfb ;};func _deg (_dfc _f .PdfObject ,_cda *_ag .PdfFont )(string ,error ){_cddf ,_gfd :=_f .GetStringBytes (_dfc );
if !_gfd {return "",_f .ErrTypeError ;};_dfb :=_cda .BytesToCharcodes (_cddf );_aaad ,_ccbd ,_caefa :=_cda .CharcodesToStrings (_dfb ,"");if _caefa > 0{_gf .Log .Debug ("\u0072\u0065nd\u0065\u0072\u0054e\u0078\u0074\u003a\u0020num\u0043ha\u0072\u0073\u003d\u0025\u0064\u0020\u006eum\u004d\u0069\u0073\u0073\u0065\u0073\u003d%\u0064",_ccbd ,_caefa );
};_gfb :=_gb .Join (_aaad ,"");return _gfb ,nil ;};func _gdf (_eaa []placeHolders )[]replacement {_dfg :=[]replacement {};for _ ,_dfaf :=range _eaa {_dbfc :=_dfaf ._fe ;_gcga :=_dfaf ._bf ;_dagc :=_dfaf ._cc ;for _ ,_bbb :=range _dbfc {_efd :=replacement {_d :_gcga ,_ee :_dagc ,_ea :_bbb };
_dfg =append (_dfg ,_efd );};};_cb .Slice (_dfg ,func (_bba ,_aabb int )bool {return _dfg [_bba ]._ea < _dfg [_aabb ]._ea });return _dfg ;};func (_gfdb *regexMatcher )match (_fbae string )([]*matchedIndex ,error ){_aacg :=_gfdb ._cdgg .Pattern ;if _aacg ==nil {return nil ,_b .New ("\u006e\u006f\u0020\u0070at\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006d\u0070\u0069\u006c\u0065\u0064");
};var (_egge =_aacg .FindAllStringIndex (_fbae ,-1);_eafc []*matchedIndex ;);for _ ,_efdd :=range _egge {_eafc =append (_eafc ,&matchedIndex {_gdd :_efdd [0],_fbd :_efdd [1],_dccd :_fbae [_efdd [0]:_efdd [1]]});};return _eafc ,nil ;};func _gbe (_ebea string )(string ,[][]int ){_efba :=_be .MustCompile ("\u005c\u006e");
_dcdfe :=_efba .FindAllStringIndex (_ebea ,-1);_dabb :=_efba .ReplaceAllString (_ebea ,"\u0020");return _dabb ,_dcdfe ;};func _bedd (_agbg []*matchedIndex ,_gaegc [][]int )[]*matchedIndex {_efbe :=[]*matchedIndex {};for _ ,_dcgd :=range _agbg {_ffgb ,_daf :=_ebge (_dcgd ,_gaegc );
if _ffgb {_eea :=_bbaf (_dcgd ,_daf );_efbe =append (_efbe ,_eea ...);}else {_efbe =append (_efbe ,_dcgd );};};return _efbe ;};func _ccda (_gccg *_ga .TextMarkArray )[]*_ga .TextMarkArray {_dge :=_gccg .Elements ();_acf :=len (_dge );var _gefd _f .PdfObject ;
_eega :=[]*_ga .TextMarkArray {};_cgcd :=&_ga .TextMarkArray {};_ceb :=-1;for _ddea ,_bgbg :=range _dge {_bgfg :=_bgbg .DirectObject ;_ceb =_bgbg .Index ;if _bgfg ==nil {_fec :=_baa (_gccg ,_ddea ,_ceb );if _gefd !=nil {if _fec ==-1||_fec > _ddea {_eega =append (_eega ,_cgcd );
_cgcd =&_ga .TextMarkArray {};};};}else if _bgfg !=nil &&_gefd ==nil {if _ceb ==0&&_ddea > 0{_eega =append (_eega ,_cgcd );_cgcd =&_ga .TextMarkArray {};};}else if _bgfg !=nil &&_gefd !=nil {if _bgfg !=_gefd {_eega =append (_eega ,_cgcd );_cgcd =&_ga .TextMarkArray {};
};};_gefd =_bgfg ;_cgcd .Append (_bgbg );if _ddea ==(_acf -1){_eega =append (_eega ,_cgcd );};};return _eega ;};

// Redactor represents a Redactor object.
type Redactor struct{_daa *_ag .PdfReader ;_bbf *RedactionOptions ;_ege *_a .Creator ;_fdd *RectangleProps ;};