//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_g "encoding/binary";_fb "errors";_db "fmt";_aa "github.com/unidoc/unipdf/v3/common";_fd "github.com/unidoc/unipdf/v3/internal/bitwise";_b "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fe "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_gb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_a "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_e "image";_f "io";_df "math";_dg "strings";_c "time";);func (_dcfgd *PageInformationSegment )Encode (w _fd .BinaryWriter )(_gbdd int ,_babe error ){const _egbg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_ccf :=make ([]byte ,4);_g .BigEndian .PutUint32 (_ccf ,uint32 (_dcfgd .PageBMWidth ));_gbdd ,_babe =w .Write (_ccf );if _babe !=nil {return _gbdd ,_fc .Wrap (_babe ,_egbg ,"\u0077\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_ccf ,uint32 (_dcfgd .PageBMHeight ));
var _bffb int ;_bffb ,_babe =w .Write (_ccf );if _babe !=nil {return _bffb +_gbdd ,_fc .Wrap (_babe ,_egbg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gbdd +=_bffb ;_g .BigEndian .PutUint32 (_ccf ,uint32 (_dcfgd .ResolutionX ));_bffb ,_babe =w .Write (_ccf );
if _babe !=nil {return _bffb +_gbdd ,_fc .Wrap (_babe ,_egbg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_gbdd +=_bffb ;_g .BigEndian .PutUint32 (_ccf ,uint32 (_dcfgd .ResolutionY ));if _bffb ,_babe =w .Write (_ccf );_babe !=nil {return _bffb +_gbdd ,_fc .Wrap (_babe ,_egbg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_gbdd +=_bffb ;if _babe =_dcfgd .encodeFlags (w );_babe !=nil {return _gbdd ,_fc .Wrap (_babe ,_egbg ,"");};_gbdd ++;if _bffb ,_babe =_dcfgd .encodeStripingInformation (w );_babe !=nil {return _gbdd ,_fc .Wrap (_babe ,_egbg ,"");};_gbdd +=_bffb ;return _gbdd ,nil ;
};func (_cgcf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dgaa ,_ggabb :=_cgcf ._dfcb .ReadBit ();if _ggabb !=nil {return _ggabb ;};if _dgaa ==1{_cgcf ._agae =true ;};return nil ;};type HalftoneRegion struct{_dgcf *_fd .Reader ;
_gdbg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ca .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ca .Bitmap ;Patterns []*_ca .Bitmap ;};func (_fabf *GenericRegion )parseHeader ()(_dgef error ){_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dgef !=nil {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dgef );
}else {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_dad int ;_cde uint64 ;);if _dgef =_fabf .RegionSegment .parseHeader ();_dgef !=nil {return _dgef ;};if _ ,_dgef =_fabf ._fee .ReadBits (3);_dgef !=nil {return _dgef ;};_dad ,_dgef =_fabf ._fee .ReadBit ();if _dgef !=nil {return _dgef ;};if _dad ==1{_fabf .UseExtTemplates =true ;
};_dad ,_dgef =_fabf ._fee .ReadBit ();if _dgef !=nil {return _dgef ;};if _dad ==1{_fabf .IsTPGDon =true ;};_cde ,_dgef =_fabf ._fee .ReadBits (2);if _dgef !=nil {return _dgef ;};_fabf .GBTemplate =byte (_cde &0xf);_dad ,_dgef =_fabf ._fee .ReadBit ();
if _dgef !=nil {return _dgef ;};if _dad ==1{_fabf .IsMMREncoded =true ;};if !_fabf .IsMMREncoded {_ced :=1;if _fabf .GBTemplate ==0{_ced =4;if _fabf .UseExtTemplates {_ced =12;};};if _dgef =_fabf .readGBAtPixels (_ced );_dgef !=nil {return _dgef ;};};if _dgef =_fabf .computeSegmentDataStructure ();
_dgef !=nil {return _dgef ;};_aa .Log .Trace ("\u0025\u0073",_fabf );return nil ;};func (_efg *GenericRefinementRegion )setParameters (_afae *_fe .DecoderStats ,_fbfg *_fe .Decoder ,_ggd int8 ,_dde ,_eceb uint32 ,_bdb *_ca .Bitmap ,_eeg ,_aba int32 ,_fed bool ,_add []int8 ,_degg []int8 ){_aa .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _afae !=nil {_efg ._ece =_afae ;};if _fbfg !=nil {_efg ._ee =_fbfg ;};_efg .TemplateID =_ggd ;_efg .RegionInfo .BitmapWidth =_dde ;_efg .RegionInfo .BitmapHeight =_eceb ;_efg .ReferenceBitmap =_bdb ;_efg .ReferenceDX =_eeg ;_efg .ReferenceDY =_aba ;
_efg .IsTPGROn =_fed ;_efg .GrAtX =_add ;_efg .GrAtY =_degg ;_efg .RegionBitmap =nil ;_aa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_efg );
};func (_gce *GenericRegion )overrideAtTemplate0b (_ggf ,_daa ,_bae ,_ggg ,_ccae ,_fcaf int )int {if _gce .GBAtOverride [0]{_ggf &=0xFFFD;if _gce .GBAtY [0]==0&&_gce .GBAtX [0]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [0]&0x1))<<1;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [0]),_bae +int (_gce .GBAtY [0])))<<1;};};if _gce .GBAtOverride [1]{_ggf &=0xDFFF;if _gce .GBAtY [1]==0&&_gce .GBAtX [1]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [1]&0x1))<<13;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [1]),_bae +int (_gce .GBAtY [1])))<<13;};};if _gce .GBAtOverride [2]{_ggf &=0xFDFF;if _gce .GBAtY [2]==0&&_gce .GBAtX [2]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [2]&0x1))<<9;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [2]),_bae +int (_gce .GBAtY [2])))<<9;};};if _gce .GBAtOverride [3]{_ggf &=0xBFFF;if _gce .GBAtY [3]==0&&_gce .GBAtX [3]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [3]&0x1))<<14;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [3]),_bae +int (_gce .GBAtY [3])))<<14;};};if _gce .GBAtOverride [4]{_ggf &=0xEFFF;if _gce .GBAtY [4]==0&&_gce .GBAtX [4]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [4]&0x1))<<12;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [4]),_bae +int (_gce .GBAtY [4])))<<12;};};if _gce .GBAtOverride [5]{_ggf &=0xFFDF;if _gce .GBAtY [5]==0&&_gce .GBAtX [5]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [5]&0x1))<<5;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [5]),_bae +int (_gce .GBAtY [5])))<<5;};};if _gce .GBAtOverride [6]{_ggf &=0xFFFB;if _gce .GBAtY [6]==0&&_gce .GBAtX [6]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [6]&0x1))<<2;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [6]),_bae +int (_gce .GBAtY [6])))<<2;};};if _gce .GBAtOverride [7]{_ggf &=0xFFF7;if _gce .GBAtY [7]==0&&_gce .GBAtX [7]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [7]&0x1))<<3;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [7]),_bae +int (_gce .GBAtY [7])))<<3;};};if _gce .GBAtOverride [8]{_ggf &=0xF7FF;if _gce .GBAtY [8]==0&&_gce .GBAtX [8]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [8]&0x1))<<11;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [8]),_bae +int (_gce .GBAtY [8])))<<11;};};if _gce .GBAtOverride [9]{_ggf &=0xFFEF;if _gce .GBAtY [9]==0&&_gce .GBAtX [9]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [9]&0x1))<<4;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [9]),_bae +int (_gce .GBAtY [9])))<<4;};};if _gce .GBAtOverride [10]{_ggf &=0x7FFF;if _gce .GBAtY [10]==0&&_gce .GBAtX [10]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [10]&0x1))<<15;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [10]),_bae +int (_gce .GBAtY [10])))<<15;};};if _gce .GBAtOverride [11]{_ggf &=0xFDFF;if _gce .GBAtY [11]==0&&_gce .GBAtX [11]>=-int8 (_ccae ){_ggf |=(_ggg >>uint (int8 (_fcaf )-_gce .GBAtX [11]&0x1))<<10;
}else {_ggf |=int (_gce .getPixel (_daa +int (_gce .GBAtX [11]),_bae +int (_gce .GBAtY [11])))<<10;};};return _ggf ;};func (_dbcd *TextRegion )blit (_cafg *_ca .Bitmap ,_dffc int64 )error {if _dbcd .IsTransposed ==0&&(_dbcd .ReferenceCorner ==2||_dbcd .ReferenceCorner ==3){_dbcd ._dfffg +=int64 (_cafg .Width -1);
}else if _dbcd .IsTransposed ==1&&(_dbcd .ReferenceCorner ==0||_dbcd .ReferenceCorner ==2){_dbcd ._dfffg +=int64 (_cafg .Height -1);};_dcagf :=_dbcd ._dfffg ;if _dbcd .IsTransposed ==1{_dcagf ,_dffc =_dffc ,_dcagf ;};switch _dbcd .ReferenceCorner {case 0:_dffc -=int64 (_cafg .Height -1);
case 2:_dffc -=int64 (_cafg .Height -1);_dcagf -=int64 (_cafg .Width -1);case 3:_dcagf -=int64 (_cafg .Width -1);};_fgda :=_ca .Blit (_cafg ,_dbcd .RegionBitmap ,int (_dcagf ),int (_dffc ),_dbcd .CombinationOperator );if _fgda !=nil {return _fgda ;};if _dbcd .IsTransposed ==0&&(_dbcd .ReferenceCorner ==0||_dbcd .ReferenceCorner ==1){_dbcd ._dfffg +=int64 (_cafg .Width -1);
};if _dbcd .IsTransposed ==1&&(_dbcd .ReferenceCorner ==1||_dbcd .ReferenceCorner ==3){_dbcd ._dfffg +=int64 (_cafg .Height -1);};return nil ;};func (_ededc *Header )writeReferredToCount (_ggbd _fd .BinaryWriter )(_gfa int ,_dfff error ){const _fec ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_ededc .RTSNumbers =make ([]int ,len (_ededc .RTSegments ));for _ceea ,_adfd :=range _ededc .RTSegments {_ededc .RTSNumbers [_ceea ]=int (_adfd .SegmentNumber );};if len (_ededc .RTSNumbers )<=4{var _ffcc byte ;if len (_ededc .RetainBits )>=1{_ffcc =_ededc .RetainBits [0];
};_ffcc |=byte (len (_ededc .RTSNumbers ))<<5;if _dfff =_ggbd .WriteByte (_ffcc );_dfff !=nil {return 0,_fc .Wrap (_dfff ,_fec ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fdbd :=uint32 (len (_ededc .RTSNumbers ));
_eddd :=make ([]byte ,4+_b .Ceil (len (_ededc .RTSNumbers )+1,8));_fdbd |=0x7<<29;_g .BigEndian .PutUint32 (_eddd ,_fdbd );copy (_eddd [1:],_ededc .RetainBits );_gfa ,_dfff =_ggbd .Write (_eddd );if _dfff !=nil {return 0,_fc .Wrap (_dfff ,_fec ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _gfa ,nil ;};func (_deag *HalftoneRegion )GetRegionBitmap ()(*_ca .Bitmap ,error ){if _deag .HalftoneRegionBitmap !=nil {return _deag .HalftoneRegionBitmap ,nil ;};var _fbfgg error ;_deag .HalftoneRegionBitmap =_ca .New (int (_deag .RegionSegment .BitmapWidth ),int (_deag .RegionSegment .BitmapHeight ));
if _deag .Patterns ==nil ||len (_deag .Patterns )==0{_deag .Patterns ,_fbfgg =_deag .GetPatterns ();if _fbfgg !=nil {return nil ,_fbfgg ;};};if _deag .HDefaultPixel ==1{_deag .HalftoneRegionBitmap .SetDefaultPixel ();};_cac :=_df .Ceil (_df .Log (float64 (len (_deag .Patterns )))/_df .Log (2));
_bfd :=int (_cac );var _bbbfd [][]int ;_bbbfd ,_fbfgg =_deag .grayScaleDecoding (_bfd );if _fbfgg !=nil {return nil ,_fbfgg ;};if _fbfgg =_deag .renderPattern (_bbbfd );_fbfgg !=nil {return nil ,_fbfgg ;};return _deag .HalftoneRegionBitmap ,nil ;};type templater interface{form (_fcd ,_bcdf ,_gfd ,_gab ,_dfc int16 )int16 ;
setIndex (_bgae *_fe .DecoderStats );};func (_eccc *GenericRefinementRegion )getPixel (_eeca *_ca .Bitmap ,_dec ,_aacf int )int {if _dec < 0||_dec >=_eeca .Width {return 0;};if _aacf < 0||_aacf >=_eeca .Height {return 0;};if _eeca .GetPixel (_dec ,_aacf ){return 1;
};return 0;};func (_ggad *PatternDictionary )setGbAtPixels (){if _ggad .HDTemplate ==0{_ggad .GBAtX =make ([]int8 ,4);_ggad .GBAtY =make ([]int8 ,4);_ggad .GBAtX [0]=-int8 (_ggad .HdpWidth );_ggad .GBAtY [0]=0;_ggad .GBAtX [1]=-3;_ggad .GBAtY [1]=-1;_ggad .GBAtX [2]=2;
_ggad .GBAtY [2]=-2;_ggad .GBAtX [3]=-2;_ggad .GBAtY [3]=-2;}else {_ggad .GBAtX =[]int8 {-int8 (_ggad .HdpWidth )};_ggad .GBAtY =[]int8 {0};};};func (_bccaaf *TextRegion )String ()string {_eada :=&_dg .Builder {};_eada .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_eada .WriteString (_bccaaf .RegionInfo .String ()+"\u000a");_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbrTemplate ));_eada .WriteString (_db .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbDsOffset ));
_eada .WriteString (_db .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bccaaf .DefaultPixel ));_eada .WriteString (_db .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bccaaf .CombinationOperator ));
_eada .WriteString (_db .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bccaaf .IsTransposed ));_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bccaaf .ReferenceCorner ));
_eada .WriteString (_db .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bccaaf .UseRefinement ));_eada .WriteString (_db .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bccaaf .IsHuffmanEncoded ));
if _bccaaf .IsHuffmanEncoded {_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbHuffRSize ));_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bccaaf .SbHuffRDY ));
_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bccaaf .SbHuffRDX ));_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bccaaf .SbHuffRDHeight ));
_eada .WriteString (_db .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbHuffRDWidth ));_eada .WriteString (_db .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbHuffDT ));
_eada .WriteString (_db .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbHuffDS ));_eada .WriteString (_db .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bccaaf .SbHuffFS ));
};_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bccaaf .SbrATX ));_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bccaaf .SbrATY ));
_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bccaaf .NumberOfSymbolInstances ));_eada .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bccaaf .SbrATX ));
return _eada .String ();};func (_eccdb *Header )CleanSegmentData (){if _eccdb .SegmentData !=nil {_eccdb .SegmentData =nil ;};};func (_ggef *TextRegion )Encode (w _fd .BinaryWriter )(_bddd int ,_decb error ){const _dfgd ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _bddd ,_decb =_ggef .RegionInfo .Encode (w );_decb !=nil {return _bddd ,_fc .Wrap (_decb ,_dfgd ,"");};var _afcf int ;if _afcf ,_decb =_ggef .encodeFlags (w );_decb !=nil {return _bddd ,_fc .Wrap (_decb ,_dfgd ,"");};_bddd +=_afcf ;if _afcf ,_decb =_ggef .encodeSymbols (w );
_decb !=nil {return _bddd ,_fc .Wrap (_decb ,_dfgd ,"");};_bddd +=_afcf ;return _bddd ,nil ;};func (_cfgc *PatternDictionary )readPatternWidthAndHeight ()error {_bebc ,_gdga :=_cfgc ._adga .ReadByte ();if _gdga !=nil {return _gdga ;};_cfgc .HdpWidth =_bebc ;
_bebc ,_gdga =_cfgc ._adga .ReadByte ();if _gdga !=nil {return _gdga ;};_cfgc .HdpHeight =_bebc ;return nil ;};func (_egge *SymbolDictionary )encodeATFlags (_dafed _fd .BinaryWriter )(_eace int ,_ggeaf error ){const _febg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _egge .IsHuffmanEncoded ||_egge .SdTemplate !=0{return 0,nil ;};_dedg :=4;if _egge .SdTemplate !=0{_dedg =1;};for _aee :=0;_aee < _dedg ;_aee ++{if _ggeaf =_dafed .WriteByte (byte (_egge .SdATX [_aee ]));_ggeaf !=nil {return _eace ,_fc .Wrapf (_ggeaf ,_febg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_aee );
};_eace ++;if _ggeaf =_dafed .WriteByte (byte (_egge .SdATY [_aee ]));_ggeaf !=nil {return _eace ,_fc .Wrapf (_ggeaf ,_febg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_aee );};_eace ++;};return _eace ,nil ;};func (_bfa *GenericRegion )GetRegionInfo ()*RegionSegment {return _bfa .RegionSegment };
func (_bccc *SymbolDictionary )getSbSymCodeLen ()int8 {_eegb :=int8 (_df .Ceil (_df .Log (float64 (_bccc ._abdb +_bccc .NumberOfNewSymbols ))/_df .Log (2)));if _bccc .IsHuffmanEncoded &&_eegb < 1{return 1;};return _eegb ;};func (_ebcf *RegionSegment )parseHeader ()error {const _gagf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_aa .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_aa .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_dbdde ,_geafd :=_ebcf ._ccag .ReadBits (32);if _geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"\u0077\u0069\u0064t\u0068");};_ebcf .BitmapWidth =uint32 (_dbdde &_df .MaxUint32 );_dbdde ,_geafd =_ebcf ._ccag .ReadBits (32);if _geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_ebcf .BitmapHeight =uint32 (_dbdde &_df .MaxUint32 );_dbdde ,_geafd =_ebcf ._ccag .ReadBits (32);if _geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ebcf .XLocation =uint32 (_dbdde &_df .MaxUint32 );
_dbdde ,_geafd =_ebcf ._ccag .ReadBits (32);if _geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ebcf .YLocation =uint32 (_dbdde &_df .MaxUint32 );if _ ,_geafd =_ebcf ._ccag .ReadBits (5);
_geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _geafd =_ebcf .readCombinationOperator ();_geafd !=nil {return _fc .Wrap (_geafd ,_gagf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_dcfg *GenericRegion )computeSegmentDataStructure ()error {_dcfg .DataOffset =_dcfg ._fee .AbsolutePosition ();_dcfg .DataHeaderLength =_dcfg .DataOffset -_dcfg .DataHeaderOffset ;_dcfg .DataLength =int64 (_dcfg ._fee .AbsoluteLength ())-_dcfg .DataHeaderLength ;
return nil ;};func (_ccaeg *Header )parse (_ageg Documenter ,_cbeg *_fd .Reader ,_ceda int64 ,_agbg OrganizationType )(_bdaa error ){const _gefb ="\u0070\u0061\u0072s\u0065";_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bdaa !=nil {_aa .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bdaa );}else {_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_bdaa =_cbeg .Seek (_ceda ,_f .SeekStart );if _bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bdaa =_ccaeg .readSegmentNumber (_cbeg );_bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");
};if _bdaa =_ccaeg .readHeaderFlags ();_bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");};var _gceg uint64 ;_gceg ,_bdaa =_ccaeg .readNumberOfReferredToSegments (_cbeg );if _bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");};_ccaeg .RTSNumbers ,_bdaa =_ccaeg .readReferredToSegmentNumbers (_cbeg ,int (_gceg ));
if _bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");};_bdaa =_ccaeg .readSegmentPageAssociation (_ageg ,_cbeg ,_gceg ,_ccaeg .RTSNumbers ...);if _bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");};if _ccaeg .Type !=TEndOfFile {if _bdaa =_ccaeg .readSegmentDataLength (_cbeg );
_bdaa !=nil {return _fc .Wrap (_bdaa ,_gefb ,"");};};_ccaeg .readDataStartOffset (_cbeg ,_agbg );_ccaeg .readHeaderLength (_cbeg ,_ceda );_aa .Log .Trace ("\u0025\u0073",_ccaeg );return nil ;};func (_bg *EndOfStripe )Init (h *Header ,r *_fd .Reader )error {_bg ._dcd =r ;
return _bg .parseHeader ()};func (_effg *GenericRegion )getPixel (_dfa ,_gcc int )int8 {if _dfa < 0||_dfa >=_effg .Bitmap .Width {return 0;};if _gcc < 0||_gcc >=_effg .Bitmap .Height {return 0;};if _effg .Bitmap .GetPixel (_dfa ,_gcc ){return 1;};return 0;
};func _dcff (_bcgb int )int {if _bcgb ==0{return 0;};_bcgb |=_bcgb >>1;_bcgb |=_bcgb >>2;_bcgb |=_bcgb >>4;_bcgb |=_bcgb >>8;_bcgb |=_bcgb >>16;return (_bcgb +1)>>1;};func (_gfef *GenericRegion )String ()string {_bfc :=&_dg .Builder {};_bfc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bfc .WriteString (_gfef .RegionSegment .String ()+"\u000a");_bfc .WriteString (_db .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gfef .UseExtTemplates ));_bfc .WriteString (_db .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gfef .IsTPGDon ));
_bfc .WriteString (_db .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gfef .GBTemplate ));_bfc .WriteString (_db .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gfef .IsMMREncoded ));
_bfc .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gfef .GBAtX ));_bfc .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gfef .GBAtY ));
_bfc .WriteString (_db .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gfef .GBAtOverride ));return _bfc .String ();};func (_defe *SymbolDictionary )encodeNumSyms (_fbef _fd .BinaryWriter )(_ebdf int ,_abga error ){const _fce ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_ccgf :=make ([]byte ,4);_g .BigEndian .PutUint32 (_ccgf ,_defe .NumberOfExportedSymbols );if _ebdf ,_abga =_fbef .Write (_ccgf );_abga !=nil {return _ebdf ,_fc .Wrap (_abga ,_fce ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_g .BigEndian .PutUint32 (_ccgf ,_defe .NumberOfNewSymbols );_fccf ,_abga :=_fbef .Write (_ccgf );if _abga !=nil {return _ebdf ,_fc .Wrap (_abga ,_fce ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ebdf +_fccf ,nil ;};func (_bbd *SymbolDictionary )setRetainedCodingContexts (_bfag *SymbolDictionary ){_bbd ._bdff =_bfag ._bdff ;
_bbd .IsHuffmanEncoded =_bfag .IsHuffmanEncoded ;_bbd .UseRefinementAggregation =_bfag .UseRefinementAggregation ;_bbd .SdTemplate =_bfag .SdTemplate ;_bbd .SdrTemplate =_bfag .SdrTemplate ;_bbd .SdATX =_bfag .SdATX ;_bbd .SdATY =_bfag .SdATY ;_bbd .SdrATX =_bfag .SdrATX ;
_bbd .SdrATY =_bfag .SdrATY ;_bbd ._acfg =_bfag ._acfg ;};func (_dabcb *TextRegion )initSymbols ()error {const _gdeff ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_bagcf :=range _dabcb .Header .RTSegments {if _bagcf ==nil {return _fc .Error (_gdeff ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _bagcf .Type ==0{_gedf ,_bgfc :=_bagcf .GetSegmentData ();if _bgfc !=nil {return _fc .Wrap (_bgfc ,_gdeff ,"");};_agdb ,_gdee :=_gedf .(*SymbolDictionary );if !_gdee {return _fc .Error (_gdeff ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_agdb ._fdf =_dabcb ._ddc ;_gbbc ,_bgfc :=_agdb .GetDictionary ();if _bgfc !=nil {return _fc .Wrap (_bgfc ,_gdeff ,"");};_dabcb .Symbols =append (_dabcb .Symbols ,_gbbc ...);};};_dabcb .NumberOfSymbols =uint32 (len (_dabcb .Symbols ));return nil ;};func (_gdd *GenericRefinementRegion )overrideAtTemplate0 (_gafd ,_afc ,_gea ,_beb ,_fgge int )int {if _gdd ._bce [0]{_gafd &=0xfff7;
if _gdd .GrAtY [0]==0&&int (_gdd .GrAtX [0])>=-_fgge {_gafd |=(_beb >>uint (7-(_fgge +int (_gdd .GrAtX [0])))&0x1)<<3;}else {_gafd |=_gdd .getPixel (_gdd .RegionBitmap ,_afc +int (_gdd .GrAtX [0]),_gea +int (_gdd .GrAtY [0]))<<3;};};if _gdd ._bce [1]{_gafd &=0xefff;
if _gdd .GrAtY [1]==0&&int (_gdd .GrAtX [1])>=-_fgge {_gafd |=(_beb >>uint (7-(_fgge +int (_gdd .GrAtX [1])))&0x1)<<12;}else {_gafd |=_gdd .getPixel (_gdd .ReferenceBitmap ,_afc +int (_gdd .GrAtX [1]),_gea +int (_gdd .GrAtY [1]));};};return _gafd ;};func (_cacdg *TextRegion )decodeDT ()(_adacg int64 ,_ddbd error ){if _cacdg .IsHuffmanEncoded {if _cacdg .SbHuffDT ==3{_adacg ,_ddbd =_cacdg ._fccfg .Decode (_cacdg ._bfbf );
if _ddbd !=nil {return 0,_ddbd ;};}else {var _edfac _bc .Tabler ;_edfac ,_ddbd =_bc .GetStandardTable (11+int (_cacdg .SbHuffDT ));if _ddbd !=nil {return 0,_ddbd ;};_adacg ,_ddbd =_edfac .Decode (_cacdg ._bfbf );if _ddbd !=nil {return 0,_ddbd ;};};}else {var _efca int32 ;
_efca ,_ddbd =_cacdg ._gcdaba .DecodeInt (_cacdg ._cfgaf );if _ddbd !=nil {return 0,_ddbd ;};_adacg =int64 (_efca );};_adacg *=int64 (_cacdg .SbStrips );return _adacg ,nil ;};var _ _bc .BasicTabler =&TableSegment {};func (_abac *SymbolDictionary )getSymbol (_gcbg int )(*_ca .Bitmap ,error ){const _ccbf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_bacd ,_gbagbf :=_abac ._agcf .GetBitmap (_abac ._fecd [_gcbg ]);if _gbagbf !=nil {return nil ,_fc .Wrap (_gbagbf ,_ccbf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bacd ,nil ;};func (_eae *GenericRegion )InitEncode (bm *_ca .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _adbd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fc .Error (_adbd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fc .Error (_adbd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_eae .Bitmap =bm ;_eae .GBTemplate =byte (template );switch _eae .GBTemplate {case 0:_eae .GBAtX =[]int8 {3,-3,2,-2};_eae .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_eae .GBAtX =[]int8 {3};_eae .GBAtY =[]int8 {-1};case 2,3:_eae .GBAtX =[]int8 {2};_eae .GBAtY =[]int8 {-1};
default:return _fc .Errorf (_adbd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_eae .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_eae .IsTPGDon =duplicateLineRemoval ;return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_cee *GenericRefinementRegion )updateOverride ()error {if _cee .GrAtX ==nil ||_cee .GrAtY ==nil {return _fb .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cee .GrAtX )!=len (_cee .GrAtY ){return _fb .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cee ._bce =make ([]bool ,len (_cee .GrAtX ));switch _cee .TemplateID {case 0:if _cee .GrAtX [0]!=-1&&_cee .GrAtY [0]!=-1{_cee ._bce [0]=true ;
_cee ._ef =true ;};if _cee .GrAtX [1]!=-1&&_cee .GrAtY [1]!=-1{_cee ._bce [1]=true ;_cee ._ef =true ;};case 1:_cee ._ef =false ;};return nil ;};func (_cade *TextRegion )decodeRI ()(int64 ,error ){if !_cade .UseRefinement {return 0,nil ;};if _cade .IsHuffmanEncoded {_cecef ,_edc :=_cade ._bfbf .ReadBit ();
return int64 (_cecef ),_edc ;};_faadd ,_dbddc :=_cade ._gcdaba .DecodeInt (_cade ._cacd );return int64 (_faadd ),_dbddc ;};func (_dgce *TableSegment )parseHeader ()error {var (_gdgbb int ;_cfed uint64 ;_efde error ;);_gdgbb ,_efde =_dgce ._cbabe .ReadBit ();
if _efde !=nil {return _efde ;};if _gdgbb ==1{return _db .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gdgbb );
};if _cfed ,_efde =_dgce ._cbabe .ReadBits (3);_efde !=nil {return _efde ;};_dgce ._efgba =(int32 (_cfed )+1)&0xf;if _cfed ,_efde =_dgce ._cbabe .ReadBits (3);_efde !=nil {return _efde ;};_dgce ._ccbgf =(int32 (_cfed )+1)&0xf;if _cfed ,_efde =_dgce ._cbabe .ReadBits (32);
_efde !=nil {return _efde ;};_dgce ._cdacd =int32 (_cfed &_df .MaxInt32 );if _cfed ,_efde =_dgce ._cbabe .ReadBits (32);_efde !=nil {return _efde ;};_dgce ._cfa =int32 (_cfed &_df .MaxInt32 );return nil ;};type OrganizationType uint8 ;func (_abge *GenericRegion )writeGBAtPixels (_bgaf _fd .BinaryWriter )(_effd int ,_fcdfa error ){const _cagb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _abge .UseMMR {return 0,nil ;};_dgc :=1;if _abge .GBTemplate ==0{_dgc =4;}else if _abge .UseExtTemplates {_dgc =12;};if len (_abge .GBAtX )!=_dgc {return 0,_fc .Errorf (_cagb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_abge .GBAtY )!=_dgc {return 0,_fc .Errorf (_cagb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _cgcd :=0;_cgcd < _dgc ;_cgcd ++{if _fcdfa =_bgaf .WriteByte (byte (_abge .GBAtX [_cgcd ]));_fcdfa !=nil {return _effd ,_fc .Wrap (_fcdfa ,_cagb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_effd ++;if _fcdfa =_bgaf .WriteByte (byte (_abge .GBAtY [_cgcd ]));
_fcdfa !=nil {return _effd ,_fc .Wrap (_fcdfa ,_cagb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_effd ++;};return _effd ,nil ;};func (_fbcba *SymbolDictionary )readAtPixels (_bcef int )error {_fbcba .SdATX =make ([]int8 ,_bcef );
_fbcba .SdATY =make ([]int8 ,_bcef );var (_ecag byte ;_cbcg error ;);for _fgad :=0;_fgad < _bcef ;_fgad ++{_ecag ,_cbcg =_fbcba ._cgcb .ReadByte ();if _cbcg !=nil {return _cbcg ;};_fbcba .SdATX [_fgad ]=int8 (_ecag );_ecag ,_cbcg =_fbcba ._cgcb .ReadByte ();
if _cbcg !=nil {return _cbcg ;};_fbcba .SdATY [_fgad ]=int8 (_ecag );};return nil ;};type Type int ;func (_agdd *Header )writeSegmentNumber (_gdae _fd .BinaryWriter )(_bdeb int ,_dcdb error ){_bcgc :=make ([]byte ,4);_g .BigEndian .PutUint32 (_bcgc ,_agdd .SegmentNumber );
if _bdeb ,_dcdb =_gdae .Write (_bcgc );_dcdb !=nil {return 0,_fc .Wrap (_dcdb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bdeb ,nil ;};func (_dcca *SymbolDictionary )decodeNewSymbols (_ceca ,_adce uint32 ,_fbad *_ca .Bitmap ,_dcee ,_efdc int32 )error {if _dcca ._acgfg ==nil {_dcca ._acgfg =_ffb (_dcca ._cgcb ,nil );
if _dcca ._bdff ==nil {var _gfg error ;_dcca ._bdff ,_gfg =_fe .New (_dcca ._cgcb );if _gfg !=nil {return _gfg ;};};if _dcca ._acfg ==nil {_dcca ._acfg =_fe .NewStats (65536,1);};};_dcca ._acgfg .setParameters (_dcca ._acfg ,_dcca ._bdff ,_dcca .SdrTemplate ,_ceca ,_adce ,_fbad ,_dcee ,_efdc ,false ,_dcca .SdrATX ,_dcca .SdrATY );
return _dcca .addSymbol (_dcca ._acgfg );};func (_bdf *GenericRegion )overrideAtTemplate1 (_ffa ,_cage ,_decde ,_bfeg ,_gfeff int )int {_ffa &=0x1FF7;if _bdf .GBAtY [0]==0&&_bdf .GBAtX [0]>=-int8 (_gfeff ){_ffa |=(_bfeg >>uint (7-(int8 (_gfeff )+_bdf .GBAtX [0]))&0x1)<<3;
}else {_ffa |=int (_bdf .getPixel (_cage +int (_bdf .GBAtX [0]),_decde +int (_bdf .GBAtY [0])))<<3;};return _ffa ;};func (_ffbg *SymbolDictionary )readNumberOfExportedSymbols ()error {_addf ,_gcgdc :=_ffbg ._cgcb .ReadBits (32);if _gcgdc !=nil {return _gcgdc ;
};_ffbg .NumberOfExportedSymbols =uint32 (_addf &_df .MaxUint32 );return nil ;};func (_fbee *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cegfg int64 ,_cbf ,_accf uint32 )(*_ca .Bitmap ,error ){if _cegfg ==0{_ecad :=_ca .New (int (_accf ),int (_cbf ));
var (_ddag byte ;_cabc error ;);for _adac :=0;_adac < len (_ecad .Data );_adac ++{_ddag ,_cabc =_fbee ._cgcb .ReadByte ();if _cabc !=nil {return nil ,_cabc ;};if _cabc =_ecad .SetByte (_adac ,_ddag );_cabc !=nil {return nil ,_cabc ;};};return _ecad ,nil ;
};if _fbee ._acgb ==nil {_fbee ._acgb =NewGenericRegion (_fbee ._cgcb );};_fbee ._acgb .setParameters (true ,_fbee ._cgcb .AbsolutePosition (),_cegfg ,_cbf ,_accf );_bfcf ,_eecge :=_fbee ._acgb .GetRegionBitmap ();if _eecge !=nil {return nil ,_eecge ;};
return _bfcf ,nil ;};func (_ddea *GenericRegion )overrideAtTemplate0a (_ccba ,_gdaf ,_dbfd ,_gdag ,_bgc ,_gbafa int )int {if _ddea .GBAtOverride [0]{_ccba &=0xFFEF;if _ddea .GBAtY [0]==0&&_ddea .GBAtX [0]>=-int8 (_bgc ){_ccba |=(_gdag >>uint (int8 (_gbafa )-_ddea .GBAtX [0]&0x1))<<4;
}else {_ccba |=int (_ddea .getPixel (_gdaf +int (_ddea .GBAtX [0]),_dbfd +int (_ddea .GBAtY [0])))<<4;};};if _ddea .GBAtOverride [1]{_ccba &=0xFBFF;if _ddea .GBAtY [1]==0&&_ddea .GBAtX [1]>=-int8 (_bgc ){_ccba |=(_gdag >>uint (int8 (_gbafa )-_ddea .GBAtX [1]&0x1))<<10;
}else {_ccba |=int (_ddea .getPixel (_gdaf +int (_ddea .GBAtX [1]),_dbfd +int (_ddea .GBAtY [1])))<<10;};};if _ddea .GBAtOverride [2]{_ccba &=0xF7FF;if _ddea .GBAtY [2]==0&&_ddea .GBAtX [2]>=-int8 (_bgc ){_ccba |=(_gdag >>uint (int8 (_gbafa )-_ddea .GBAtX [2]&0x1))<<11;
}else {_ccba |=int (_ddea .getPixel (_gdaf +int (_ddea .GBAtX [2]),_dbfd +int (_ddea .GBAtY [2])))<<11;};};if _ddea .GBAtOverride [3]{_ccba &=0x7FFF;if _ddea .GBAtY [3]==0&&_ddea .GBAtX [3]>=-int8 (_bgc ){_ccba |=(_gdag >>uint (int8 (_gbafa )-_ddea .GBAtX [3]&0x1))<<15;
}else {_ccba |=int (_ddea .getPixel (_gdaf +int (_ddea .GBAtX [3]),_dbfd +int (_ddea .GBAtY [3])))<<15;};};return _ccba ;};func (_bbba *GenericRefinementRegion )readAtPixels ()error {_bbba .GrAtX =make ([]int8 ,2);_bbba .GrAtY =make ([]int8 ,2);_ded ,_beba :=_bbba ._da .ReadByte ();
if _beba !=nil {return _beba ;};_bbba .GrAtX [0]=int8 (_ded );_ded ,_beba =_bbba ._da .ReadByte ();if _beba !=nil {return _beba ;};_bbba .GrAtY [0]=int8 (_ded );_ded ,_beba =_bbba ._da .ReadByte ();if _beba !=nil {return _beba ;};_bbba .GrAtX [1]=int8 (_ded );
_ded ,_beba =_bbba ._da .ReadByte ();if _beba !=nil {return _beba ;};_bbba .GrAtY [1]=int8 (_ded );return nil ;};func (_bbbeca *TextRegion )decodeSymbolInstances ()error {_fceb ,_abfab :=_bbbeca .decodeStripT ();if _abfab !=nil {return _abfab ;};var (_ebaab int64 ;
_fcg uint32 ;);for _fcg < _bbbeca .NumberOfSymbolInstances {_fea ,_dcea :=_bbbeca .decodeDT ();if _dcea !=nil {return _dcea ;};_fceb +=_fea ;var _cgcc int64 ;_cgdg :=true ;_bbbeca ._dfffg =0;for {if _cgdg {_cgcc ,_dcea =_bbbeca .decodeDfs ();if _dcea !=nil {return _dcea ;
};_ebaab +=_cgcc ;_bbbeca ._dfffg =_ebaab ;_cgdg =false ;}else {_eeefc ,_dcb :=_bbbeca .decodeIds ();if _fb .Is (_dcb ,_dc .ErrOOB ){break ;};if _dcb !=nil {return _dcb ;};if _fcg >=_bbbeca .NumberOfSymbolInstances {break ;};_bbbeca ._dfffg +=_eeefc +int64 (_bbbeca .SbDsOffset );
};_bcfc ,_gfee :=_bbbeca .decodeCurrentT ();if _gfee !=nil {return _gfee ;};_fcec :=_fceb +_bcfc ;_ebda ,_gfee :=_bbbeca .decodeID ();if _gfee !=nil {return _gfee ;};_cbee ,_gfee :=_bbbeca .decodeRI ();if _gfee !=nil {return _gfee ;};_beddg ,_gfee :=_bbbeca .decodeIb (_cbee ,_ebda );
if _gfee !=nil {return _gfee ;};if _gfee =_bbbeca .blit (_beddg ,_fcec );_gfee !=nil {return _gfee ;};_fcg ++;};};return nil ;};func (_cggga *TableSegment )HtLow ()int32 {return _cggga ._cdacd };func (_dedb *RegionSegment )String ()string {_eebe :=&_dg .Builder {};
_eebe .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_eebe .WriteString (_db .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dedb .BitmapWidth ,_dedb .BitmapHeight ));
_eebe .WriteString (_db .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dedb .XLocation ,_dedb .YLocation ));_eebe .WriteString (_db .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dedb .CombinaionOperator ));
return _eebe .String ();};func (_ggb *GenericRegion )overrideAtTemplate2 (_ecf ,_faff ,_begc ,_abed ,_bbag int )int {_ecf &=0x3FB;if _ggb .GBAtY [0]==0&&_ggb .GBAtX [0]>=-int8 (_bbag ){_ecf |=(_abed >>uint (7-(int8 (_bbag )+_ggb .GBAtX [0]))&0x1)<<2;}else {_ecf |=int (_ggb .getPixel (_faff +int (_ggb .GBAtX [0]),_begc +int (_ggb .GBAtY [0])))<<2;
};return _ecf ;};func (_gd *GenericRefinementRegion )decodeOptimized (_ea ,_fda ,_gbc ,_gff ,_ecb ,_fdb ,_ae int )error {var (_dd error ;_ecc int ;_gfe int ;);_cg :=_ea -int (_gd .ReferenceDY );if _abg :=int (-_gd .ReferenceDX );_abg > 0{_ecc =_abg ;};
_fgg :=_gd .ReferenceBitmap .GetByteIndex (_ecc ,_cg );if _gd .ReferenceDX > 0{_gfe =int (_gd .ReferenceDX );};_eb :=_gd .RegionBitmap .GetByteIndex (_gfe ,_ea );switch _gd .TemplateID {case 0:_dd =_gd .decodeTemplate (_ea ,_fda ,_gbc ,_gff ,_ecb ,_fdb ,_ae ,_eb ,_cg ,_fgg ,_gd ._faa );
case 1:_dd =_gd .decodeTemplate (_ea ,_fda ,_gbc ,_gff ,_ecb ,_fdb ,_ae ,_eb ,_cg ,_fgg ,_gd ._bf );};return _dd ;};func (_cdcd *PageInformationSegment )readResolution ()error {_cbbbb ,_baafc :=_cdcd ._dfcb .ReadBits (32);if _baafc !=nil {return _baafc ;
};_cdcd .ResolutionX =int (_cbbbb &_df .MaxInt32 );_cbbbb ,_baafc =_cdcd ._dfcb .ReadBits (32);if _baafc !=nil {return _baafc ;};_cdcd .ResolutionY =int (_cbbbb &_df .MaxInt32 );return nil ;};func (_dbc *GenericRegion )overrideAtTemplate3 (_dcgb ,_ageb ,_bdbf ,_ecd ,_fgb int )int {_dcgb &=0x3EF;
if _dbc .GBAtY [0]==0&&_dbc .GBAtX [0]>=-int8 (_fgb ){_dcgb |=(_ecd >>uint (7-(int8 (_fgb )+_dbc .GBAtX [0]))&0x1)<<4;}else {_dcgb |=int (_dbc .getPixel (_ageb +int (_dbc .GBAtX [0]),_bdbf +int (_dbc .GBAtY [0])))<<4;};return _dcgb ;};func (_gbab *TableSegment )HtPS ()int32 {return _gbab ._ccbgf };
func (_ffgf *Header )subInputReader ()(*_fd .Reader ,error ){_fge :=int (_ffgf .SegmentDataLength );if _ffgf .SegmentDataLength ==_df .MaxInt32 {_fge =-1;};return _ffgf .Reader .NewPartialReader (int (_ffgf .SegmentDataStartOffset ),_fge ,false );};func (_cfga *PageInformationSegment )readDefaultPixelValue ()error {_ffde ,_dfcd :=_cfga ._dfcb .ReadBit ();
if _dfcd !=nil {return _dfcd ;};_cfga .DefaultPixelValue =uint8 (_ffde &0xf);return nil ;};func (_bfcfc *TextRegion )GetRegionInfo ()*RegionSegment {return _bfcfc .RegionInfo };func (_fgdb *SymbolDictionary )String ()string {_bffg :=&_dg .Builder {};_bffg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_bffg .WriteString (_db .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fgdb .SdrTemplate ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fgdb .SdTemplate ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fgdb ._cdac ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fgdb ._eeaa ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fgdb .SdHuffAggInstanceSelection ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fgdb .SdHuffBMSizeSelection ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fgdb .SdHuffDecodeWidthSelection ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fgdb .SdHuffDecodeHeightSelection ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fgdb .UseRefinementAggregation ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fgdb .IsHuffmanEncoded ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fgdb .SdATX ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fgdb .SdATY ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fgdb .SdrATX ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fgdb .SdrATY ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fgdb .NumberOfExportedSymbols ));
_bffg .WriteString (_db .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fgdb .NumberOfNewSymbols ));_bffg .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fgdb ._abdb ));
_bffg .WriteString (_db .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fgdb ._aegd ));return _bffg .String ();};func NewHeader (d Documenter ,r *_fd .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bffc :=&Header {Reader :r };
if _geg :=_bffc .parse (d ,r ,offset ,organizationType );_geg !=nil {return nil ,_fc .Wrap (_geg ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bffc ,nil ;};func (_fgc *PatternDictionary )readGrayMax ()error {_abfd ,_fafe :=_fgc ._adga .ReadBits (32);
if _fafe !=nil {return _fafe ;};_fgc .GrayMax =uint32 (_abfd &_df .MaxUint32 );return nil ;};func (_fecb *SymbolDictionary )InitEncode (symbols *_ca .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bggf ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_fecb .SdATX =[]int8 {3,-3,2,-2};_fecb .SdATY =[]int8 {-1,-1,-2,-2};_fecb ._agcf =symbols ;_fecb ._fecd =make ([]int ,len (symbolList ));copy (_fecb ._fecd ,symbolList );if len (_fecb ._fecd )!=_fecb ._agcf .Size (){return _fc .Error (_bggf ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_fecb .NumberOfNewSymbols =uint32 (symbols .Size ());_fecb .NumberOfExportedSymbols =uint32 (symbols .Size ());_fecb ._abea =symbolMap ;_fecb ._dacb =unborderSymbols ;return nil ;};func (_cdacb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cdacb ._aedf ==nil {var (_dgf int ;
_bcee error ;);if _cdacb .SdHuffDecodeHeightSelection ==3{_dgf ++;};if _cdacb .SdHuffDecodeWidthSelection ==3{_dgf ++;};_cdacb ._aedf ,_bcee =_cdacb .getUserTable (_dgf );if _bcee !=nil {return 0,_bcee ;};};return _cdacb ._aedf .Decode (_cdacb ._cgcb );
};func (_fbgf *TextRegion )decodeRdw ()(int64 ,error ){const _cdaca ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _fbgf .IsHuffmanEncoded {if _fbgf .SbHuffRDWidth ==3{if _fbgf ._gbcde ==nil {var (_agec int ;_fbedb error ;);if _fbgf .SbHuffFS ==3{_agec ++;
};if _fbgf .SbHuffDS ==3{_agec ++;};if _fbgf .SbHuffDT ==3{_agec ++;};_fbgf ._gbcde ,_fbedb =_fbgf .getUserTable (_agec );if _fbedb !=nil {return 0,_fc .Wrap (_fbedb ,_cdaca ,"");};};return _fbgf ._gbcde .Decode (_fbgf ._bfbf );};_cbeee ,_fgeg :=_bc .GetStandardTable (14+int (_fbgf .SbHuffRDWidth ));
if _fgeg !=nil {return 0,_fc .Wrap (_fgeg ,_cdaca ,"");};return _cbeee .Decode (_fbgf ._bfbf );};_fgfa ,_ccfc :=_fbgf ._gcdaba .DecodeInt (_fbgf ._ccega );if _ccfc !=nil {return 0,_fc .Wrap (_ccfc ,_cdaca ,"");};return int64 (_fgfa ),nil ;};func (_eebb *PageInformationSegment )String ()string {_ccff :=&_dg .Builder {};
_ccff .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_ccff .WriteString (_db .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_eebb .PageBMHeight ));
_ccff .WriteString (_db .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_eebb .PageBMWidth ));_ccff .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_eebb .ResolutionX ));
_ccff .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_eebb .ResolutionY ));_ccff .WriteString (_db .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_eebb ._fdgb ));
_ccff .WriteString (_db .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_eebb ._agae ));_ccff .WriteString (_db .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_eebb .IsLossless ));
_ccff .WriteString (_db .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_eebb ._daga ));_ccff .WriteString (_db .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_eebb ._affb ));
_ccff .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_eebb .IsStripe ));_ccff .WriteString (_db .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_eebb .MaxStripeSize ));
return _ccff .String ();};func (_ggbc *GenericRegion )setParameters (_bccd bool ,_ebc ,_dbdb int64 ,_aga ,_aegb uint32 ){_ggbc .IsMMREncoded =_bccd ;_ggbc .DataOffset =_ebc ;_ggbc .DataLength =_dbdb ;_ggbc .RegionSegment .BitmapHeight =_aga ;_ggbc .RegionSegment .BitmapWidth =_aegb ;
_ggbc ._cged =nil ;_ggbc .Bitmap =nil ;};func (_acfc *SymbolDictionary )checkInput ()error {if _acfc .SdHuffDecodeHeightSelection ==2{_aa .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_acfc .SdHuffDecodeHeightSelection );
};if _acfc .SdHuffDecodeWidthSelection ==2{_aa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_acfc .SdHuffDecodeWidthSelection );
};if _acfc .IsHuffmanEncoded {if _acfc .SdTemplate !=0{_aa .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_acfc .SdTemplate );
};if !_acfc .UseRefinementAggregation {if !_acfc .UseRefinementAggregation {if _acfc ._cdac {_aa .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_acfc ._cdac =false ;};if _acfc ._eeaa {_aa .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_acfc ._eeaa =false ;};};};}else {if _acfc .SdHuffBMSizeSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_acfc .SdHuffBMSizeSelection =0;};if _acfc .SdHuffDecodeWidthSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_acfc .SdHuffDecodeWidthSelection =0;};if _acfc .SdHuffDecodeHeightSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_acfc .SdHuffDecodeHeightSelection =0;};};if !_acfc .UseRefinementAggregation {if _acfc .SdrTemplate !=0{_aa .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_acfc .SdrTemplate );
_acfc .SdrTemplate =0;};};if !_acfc .IsHuffmanEncoded ||!_acfc .UseRefinementAggregation {if _acfc .SdHuffAggInstanceSelection {_aa .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_acfc .SdHuffAggInstanceSelection );
};};return nil ;};func (_dgbg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dgbg .RegionSegment };type template0 struct{};func (_ccfd *PatternDictionary )checkInput ()error {if _ccfd .HdpHeight < 1||_ccfd .HdpWidth < 1{return _fb .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ccfd .IsMMREncoded {if _ccfd .HDTemplate !=0{_aa .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ddbcc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ddbcc .SdHuffAggInstanceSelection {_ceag ,_efea :=_bc .GetStandardTable (1);if _efea !=nil {return 0,_efea ;};return _ceag .Decode (_ddbcc ._cgcb );};if _ddbcc ._gdbfe ==nil {var (_bbaa int ;
_gbce error ;);if _ddbcc .SdHuffDecodeHeightSelection ==3{_bbaa ++;};if _ddbcc .SdHuffDecodeWidthSelection ==3{_bbaa ++;};if _ddbcc .SdHuffBMSizeSelection ==3{_bbaa ++;};_ddbcc ._gdbfe ,_gbce =_ddbcc .getUserTable (_bbaa );if _gbce !=nil {return 0,_gbce ;
};};return _ddbcc ._gdbfe .Decode (_ddbcc ._cgcb );};func (_acg *GenericRegion )Encode (w _fd .BinaryWriter )(_adg int ,_ddgac error ){const _fcc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _acg .Bitmap ==nil {return 0,_fc .Error (_fcc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_eecg ,_ddgac :=_acg .RegionSegment .Encode (w );if _ddgac !=nil {return 0,_fc .Wrap (_ddgac ,_fcc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_adg +=_eecg ;if _ddgac =w .SkipBits (4);_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _fdg int ;if _acg .IsTPGDon {_fdg =1;};if _ddgac =w .WriteBit (_fdg );_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fdg =0;if _ddgac =w .WriteBit (int (_acg .GBTemplate >>1)&0x01);_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ddgac =w .WriteBit (int (_acg .GBTemplate )&0x01);_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _acg .UseMMR {_fdg =1;};if _ddgac =w .WriteBit (_fdg );
_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_adg ++;if _eecg ,_ddgac =_acg .writeGBAtPixels (w );_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"");};_adg +=_eecg ;_bgg :=_a .New ();
if _ddgac =_bgg .EncodeBitmap (_acg .Bitmap ,_acg .IsTPGDon );_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"");};_bgg .Final ();var _gga int64 ;if _gga ,_ddgac =_bgg .WriteTo (w );_ddgac !=nil {return _adg ,_fc .Wrap (_ddgac ,_fcc ,"");};_adg +=int (_gga );
return _adg ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_aadc *TextRegion )decodeCurrentT ()(int64 ,error ){if _aadc .SbStrips !=1{if _aadc .IsHuffmanEncoded {_ggac ,_ccfeg :=_aadc ._bfbf .ReadBits (byte (_aadc .LogSBStrips ));return int64 (_ggac ),_ccfeg ;
};_dbeef ,_fdga :=_aadc ._gcdaba .DecodeInt (_aadc ._cfgfe );if _fdga !=nil {return 0,_fdga ;};return int64 (_dbeef ),nil ;};return 0,nil ;};func (_decg *SymbolDictionary )addSymbol (_fded Regioner )error {_fdeb ,_cae :=_fded .GetRegionBitmap ();if _cae !=nil {return _cae ;
};_decg ._defc [_decg ._aegd ]=_fdeb ;_decg ._abca =append (_decg ._abca ,_fdeb );_aa .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fdeb );
return nil ;};func (_dee *GenericRefinementRegion )parseHeader ()(_ebd error ){_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_cge :=_c .Now ();defer func (){if _ebd ==nil {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_cge ).Nanoseconds ());
}else {_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ebd );
};}();if _ebd =_dee .RegionInfo .parseHeader ();_ebd !=nil {return _ebd ;};_ ,_ebd =_dee ._da .ReadBits (6);if _ebd !=nil {return _ebd ;};_dee .IsTPGROn ,_ebd =_dee ._da .ReadBool ();if _ebd !=nil {return _ebd ;};var _ccd int ;_ccd ,_ebd =_dee ._da .ReadBit ();
if _ebd !=nil {return _ebd ;};_dee .TemplateID =int8 (_ccd );switch _dee .TemplateID {case 0:_dee .Template =_dee ._faa ;if _ebd =_dee .readAtPixels ();_ebd !=nil {return _ebd ;};case 1:_dee .Template =_dee ._bf ;};return nil ;};func (_deab *SymbolDictionary )decodeRefinedSymbol (_agcb ,_fefc uint32 )error {var (_fcbce int ;
_ggcf ,_edbb int32 ;);if _deab .IsHuffmanEncoded {_cbg ,_gdbd :=_deab ._cgcb .ReadBits (byte (_deab ._ddge ));if _gdbd !=nil {return _gdbd ;};_fcbce =int (_cbg );_cffd ,_gdbd :=_bc .GetStandardTable (15);if _gdbd !=nil {return _gdbd ;};_cgdd ,_gdbd :=_cffd .Decode (_deab ._cgcb );
if _gdbd !=nil {return _gdbd ;};_ggcf =int32 (_cgdd );_cgdd ,_gdbd =_cffd .Decode (_deab ._cgcb );if _gdbd !=nil {return _gdbd ;};_edbb =int32 (_cgdd );_cffd ,_gdbd =_bc .GetStandardTable (1);if _gdbd !=nil {return _gdbd ;};if _ ,_gdbd =_cffd .Decode (_deab ._cgcb );
_gdbd !=nil {return _gdbd ;};_deab ._cgcb .Align ();}else {_dcec ,_cfgf :=_deab ._bdff .DecodeIAID (uint64 (_deab ._ddge ),_deab ._fdf );if _cfgf !=nil {return _cfgf ;};_fcbce =int (_dcec );_ggcf ,_cfgf =_deab ._bdff .DecodeInt (_deab ._bgfg );if _cfgf !=nil {return _cfgf ;
};_edbb ,_cfgf =_deab ._bdff .DecodeInt (_deab ._ffff );if _cfgf !=nil {return _cfgf ;};};if _dgaf :=_deab .setSymbolsArray ();_dgaf !=nil {return _dgaf ;};_bagg :=_deab ._abca [_fcbce ];if _cbgf :=_deab .decodeNewSymbols (_agcb ,_fefc ,_bagg ,_ggcf ,_edbb );
_cbgf !=nil {return _cbgf ;};if _deab .IsHuffmanEncoded {_deab ._cgcb .Align ();};return nil ;};func (_ddff *TextRegion )encodeFlags (_fgcd _fd .BinaryWriter )(_gdf int ,_cdda error ){const _ecace ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cdda =_fgcd .WriteBit (int (_ddff .SbrTemplate ));_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cdda =_fgcd .WriteBits (uint64 (_ddff .SbDsOffset ),5);_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _cdda =_fgcd .WriteBit (int (_ddff .DefaultPixel ));_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cdda =_fgcd .WriteBits (uint64 (_ddff .CombinationOperator ),2);
_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cdda =_fgcd .WriteBit (int (_ddff .IsTransposed ));_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_cdda =_fgcd .WriteBits (uint64 (_ddff .ReferenceCorner ),2);_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cdda =_fgcd .WriteBits (uint64 (_ddff .LogSBStrips ),2);
_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bedb int ;if _ddff .UseRefinement {_bedb =1;};if _cdda =_fgcd .WriteBit (_bedb );_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bedb =0;if _ddff .IsHuffmanEncoded {_bedb =1;};if _cdda =_fgcd .WriteBit (_bedb );_cdda !=nil {return _gdf ,_fc .Wrap (_cdda ,_ecace ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gdf =2;return _gdf ,nil ;};func (_beece *TextRegion )getUserTable (_gadc int )(_bc .Tabler ,error ){const _aefb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _gcag int ;for _ ,_ebcc :=range _beece .Header .RTSegments {if _ebcc .Type ==53{if _gcag ==_gadc {_cgge ,_fdae :=_ebcc .GetSegmentData ();if _fdae !=nil {return nil ,_fdae ;};_baf ,_gedg :=_cgge .(*TableSegment );if !_gedg {_aa .Log .Debug (_db .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ebcc .SegmentNumber ));
return nil ,_fc .Error (_aefb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _bc .NewEncodedTable (_baf );};_gcag ++;};};return nil ,nil ;};func (_eecaf *TextRegion )checkInput ()error {const _cdeg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_eecaf .UseRefinement {if _eecaf .SbrTemplate !=0{_aa .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_eecaf .SbrTemplate =0;};};if _eecaf .SbHuffFS ==2||_eecaf .SbHuffRDWidth ==2||_eecaf .SbHuffRDHeight ==2||_eecaf .SbHuffRDX ==2||_eecaf .SbHuffRDY ==2{return _fc .Error (_cdeg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_eecaf .UseRefinement {if _eecaf .SbHuffRSize !=0{_aa .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_eecaf .SbHuffRSize =0;};if _eecaf .SbHuffRDY !=0{_aa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_eecaf .SbHuffRDY =0;};if _eecaf .SbHuffRDX !=0{_aa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_eecaf .SbHuffRDX =0;};if _eecaf .SbHuffRDWidth !=0{_aa .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_eecaf .SbHuffRDWidth =0;};if _eecaf .SbHuffRDHeight !=0{_aa .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_eecaf .SbHuffRDHeight =0;};
};return nil ;};func (_cdgf *HalftoneRegion )computeX (_gca ,_agfg int )int {return _cdgf .shiftAndFill (int (_cdgf .HGridX )+_gca *int (_cdgf .HRegionY )+_agfg *int (_cdgf .HRegionX ));};func (_gaebc *SymbolDictionary )decodeThroughTextRegion (_fbed ,_eafg ,_gfc uint32 )error {if _gaebc ._edga ==nil {_gaebc ._edga =_fgcgg (_gaebc ._cgcb ,nil );
_gaebc ._edga .setContexts (_gaebc ._acfg ,_fe .NewStats (512,1),_fe .NewStats (512,1),_fe .NewStats (512,1),_fe .NewStats (512,1),_gaebc ._fdf ,_fe .NewStats (512,1),_fe .NewStats (512,1),_fe .NewStats (512,1),_fe .NewStats (512,1));};if _ffcca :=_gaebc .setSymbolsArray ();
_ffcca !=nil {return _ffcca ;};_gaebc ._edga .setParameters (_gaebc ._bdff ,_gaebc .IsHuffmanEncoded ,true ,_fbed ,_eafg ,_gfc ,1,_gaebc ._abdb +_gaebc ._aegd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gaebc .SdrTemplate ,_gaebc .SdrATX ,_gaebc .SdrATY ,_gaebc ._abca ,_gaebc ._ddge );
return _gaebc .addSymbol (_gaebc ._edga );};func (_cab *template1 )setIndex (_ddb *_fe .DecoderStats ){_ddb .SetIndex (0x080)};func (_bebg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bebg ._agae };func (_eeae Type )String ()string {switch _eeae {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ege *GenericRegion )decodeSLTP ()(int ,error ){switch _ege .GBTemplate {case 0:_ege ._baa .SetIndex (0x9B25);
case 1:_ege ._baa .SetIndex (0x795);case 2:_ege ._baa .SetIndex (0xE5);case 3:_ege ._baa .SetIndex (0x195);};return _ege ._fgd .DecodeBit (_ege ._baa );};func (_bac *template0 )form (_aec ,_bbc ,_decd ,_eggf ,_gcd int16 )int16 {return (_aec <<10)|(_bbc <<7)|(_decd <<4)|(_eggf <<1)|_gcd ;
};func (_eegd *TableSegment )Init (h *Header ,r *_fd .Reader )error {_eegd ._cbabe =r ;return _eegd .parseHeader ();};func (_aece *TableSegment )HtOOB ()int32 {return _aece ._bcaa };func (_ga *EndOfStripe )parseHeader ()error {_ec ,_be :=_ga ._dcd .ReadBits (32);
if _be !=nil {return _be ;};_ga ._ge =int (_ec &_df .MaxInt32 );return nil ;};func (_bda *template1 )form (_eda ,_gac ,_cdd ,_aeb ,_befg int16 )int16 {return ((_eda &0x02)<<8)|(_gac <<6)|((_cdd &0x03)<<4)|(_aeb <<1)|_befg ;};func (_bgd *GenericRegion )setOverrideFlag (_cceg int ){_bgd .GBAtOverride [_cceg ]=true ;
_bgd ._efb =true ;};func (_beeb *Header )String ()string {_ggab :=&_dg .Builder {};_ggab .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_ggab .WriteString (_db .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_beeb .SegmentNumber ));
_ggab .WriteString (_db .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_beeb .Type ));_ggab .WriteString (_db .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_beeb .RetainFlag ));
_ggab .WriteString (_db .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_beeb .PageAssociation ));_ggab .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_beeb .PageAssociationFieldSize ));
_ggab .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gggf :=range _beeb .RTSNumbers {_ggab .WriteString (_db .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gggf ));};_ggab .WriteString (_db .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_beeb .HeaderLength ));
_ggab .WriteString (_db .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_beeb .SegmentDataLength ));_ggab .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_beeb .SegmentDataStartOffset ));
return _ggab .String ();};func (_gbccf *RegionSegment )Size ()int {return 17};var (_bccf Segmenter ;_aeca =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bccf },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bccf },TProfiles :func ()Segmenter {return _bccf },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bccf },TBitmap :func ()Segmenter {return _bccf }};
);func (_cddg *TextRegion )parseHeader ()error {var _bdef error ;_aa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _bdef !=nil {_aa .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bdef );
}else {_aa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bdef =_cddg .RegionInfo .parseHeader ();
_bdef !=nil {return _bdef ;};if _bdef =_cddg .readRegionFlags ();_bdef !=nil {return _bdef ;};if _cddg .IsHuffmanEncoded {if _bdef =_cddg .readHuffmanFlags ();_bdef !=nil {return _bdef ;};};if _bdef =_cddg .readUseRefinement ();_bdef !=nil {return _bdef ;
};if _bdef =_cddg .readAmountOfSymbolInstances ();_bdef !=nil {return _bdef ;};if _bdef =_cddg .getSymbols ();_bdef !=nil {return _bdef ;};if _bdef =_cddg .computeSymbolCodeLength ();_bdef !=nil {return _bdef ;};if _bdef =_cddg .checkInput ();_bdef !=nil {return _bdef ;
};_aa .Log .Trace ("\u0025\u0073",_cddg .String ());return nil ;};func (_geeff *SymbolDictionary )encodeFlags (_dgee _fd .BinaryWriter )(_bfcb int ,_bcca error ){const _aabg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bcca =_dgee .SkipBits (3);
_bcca !=nil {return 0,_fc .Wrap (_bcca ,_aabg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _gaaf int ;if _geeff .SdrTemplate > 0{_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_gaaf =0;if _geeff .SdTemplate > 1{_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gaaf =0;if _geeff .SdTemplate ==1||_geeff .SdTemplate ==3{_gaaf =1;
};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gaaf =0;if _geeff ._cdac {_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gaaf =0;if _geeff ._eeaa {_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gaaf =0;if _geeff .SdHuffAggInstanceSelection {_gaaf =1;
};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gaaf =int (_geeff .SdHuffBMSizeSelection );if _bcca =_dgee .WriteBit (_gaaf );
_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_gaaf =0;if _geeff .SdHuffDecodeWidthSelection > 1{_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_gaaf =0;switch _geeff .SdHuffDecodeWidthSelection {case 1,3:_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gaaf =0;if _geeff .SdHuffDecodeHeightSelection > 1{_gaaf =1;
};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gaaf =0;switch _geeff .SdHuffDecodeHeightSelection {case 1,3:_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );
_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gaaf =0;if _geeff .UseRefinementAggregation {_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_gaaf =0;if _geeff .IsHuffmanEncoded {_gaaf =1;};if _bcca =_dgee .WriteBit (_gaaf );_bcca !=nil {return _bfcb ,_fc .Wrap (_bcca ,_aabg ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_dagf *Header )readNumberOfReferredToSegments (_geefa *_fd .Reader )(uint64 ,error ){const _egba ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_ccg ,_afe :=_geefa .ReadBits (3);if _afe !=nil {return 0,_fc .Wrap (_afe ,_egba ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_ccg &=0xf;var _gddb []byte ;if _ccg <=4{_gddb =make ([]byte ,5);for _bgb :=0;_bgb <=4;_bgb ++{_ccad ,_aaa :=_geefa .ReadBit ();
if _aaa !=nil {return 0,_fc .Wrap (_aaa ,_egba ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gddb [_bgb ]=byte (_ccad );};}else {_ccg ,_afe =_geefa .ReadBits (29);if _afe !=nil {return 0,_afe ;};_ccg &=_df .MaxInt32 ;_efdf :=(_ccg +8)>>3;
_efdf <<=3;_gddb =make ([]byte ,_efdf );var _agc uint64 ;for _agc =0;_agc < _efdf ;_agc ++{_gafe ,_efgb :=_geefa .ReadBit ();if _efgb !=nil {return 0,_fc .Wrap (_efgb ,_egba ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gddb [_agc ]=byte (_gafe );
};};return _ccg ,nil ;};func (_cfff *HalftoneRegion )computeSegmentDataStructure ()error {_cfff .DataOffset =_cfff ._dgcf .AbsolutePosition ();_cfff .DataHeaderLength =_cfff .DataOffset -_cfff .DataHeaderOffset ;_cfff .DataLength =int64 (_cfff ._dgcf .AbsoluteLength ())-_cfff .DataHeaderLength ;
return nil ;};func (_baecg *TextRegion )setContexts (_baff *_fe .DecoderStats ,_cdag *_fe .DecoderStats ,_daaag *_fe .DecoderStats ,_fabg *_fe .DecoderStats ,_dfb *_fe .DecoderStats ,_gbgdb *_fe .DecoderStats ,_cedfa *_fe .DecoderStats ,_ecgea *_fe .DecoderStats ,_deeag *_fe .DecoderStats ,_cfb *_fe .DecoderStats ){_baecg ._cfgaf =_cdag ;
_baecg ._efec =_daaag ;_baecg ._bge =_fabg ;_baecg ._cfgfe =_dfb ;_baecg ._ccega =_cedfa ;_baecg ._ecda =_ecgea ;_baecg ._ddc =_gbgdb ;_baecg ._fbbce =_deeag ;_baecg ._dfaf =_cfb ;_baecg ._dbdaa =_baff ;};func (_fgac *TextRegion )createRegionBitmap ()error {_fgac .RegionBitmap =_ca .New (int (_fgac .RegionInfo .BitmapWidth ),int (_fgac .RegionInfo .BitmapHeight ));
if _fgac .DefaultPixel !=0{_fgac .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_gbec *RegionSegment )Encode (w _fd .BinaryWriter )(_ecea int ,_gbfe error ){const _gcdab ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_bedec :=make ([]byte ,4);_g .BigEndian .PutUint32 (_bedec ,_gbec .BitmapWidth );_ecea ,_gbfe =w .Write (_bedec );if _gbfe !=nil {return 0,_fc .Wrap (_gbfe ,_gcdab ,"\u0057\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_bedec ,_gbec .BitmapHeight );
var _abdf int ;_abdf ,_gbfe =w .Write (_bedec );if _gbfe !=nil {return 0,_fc .Wrap (_gbfe ,_gcdab ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ecea +=_abdf ;_g .BigEndian .PutUint32 (_bedec ,_gbec .XLocation );_abdf ,_gbfe =w .Write (_bedec );if _gbfe !=nil {return 0,_fc .Wrap (_gbfe ,_gcdab ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ecea +=_abdf ;_g .BigEndian .PutUint32 (_bedec ,_gbec .YLocation );_abdf ,_gbfe =w .Write (_bedec );if _gbfe !=nil {return 0,_fc .Wrap (_gbfe ,_gcdab ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ecea +=_abdf ;if _gbfe =w .WriteByte (byte (_gbec .CombinaionOperator )&0x07);
_gbfe !=nil {return 0,_fc .Wrap (_gbfe ,_gcdab ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ecea ++;return _ecea ,nil ;};func (_dbee *SymbolDictionary )decodeAggregate (_fcbd ,_gdgc uint32 )error {var (_feed int64 ;
_aadg error ;);if _dbee .IsHuffmanEncoded {_feed ,_aadg =_dbee .huffDecodeRefAggNInst ();if _aadg !=nil {return _aadg ;};}else {_cggg ,_fgeb :=_dbee ._bdff .DecodeInt (_dbee ._aead );if _fgeb !=nil {return _fgeb ;};_feed =int64 (_cggg );};if _feed > 1{return _dbee .decodeThroughTextRegion (_fcbd ,_gdgc ,uint32 (_feed ));
}else if _feed ==1{return _dbee .decodeRefinedSymbol (_fcbd ,_gdgc );};return nil ;};func (_aadb *SymbolDictionary )setCodingStatistics ()error {if _aadb ._ddgad ==nil {_aadb ._ddgad =_fe .NewStats (512,1);};if _aadb ._bcb ==nil {_aadb ._bcb =_fe .NewStats (512,1);
};if _aadb ._agbb ==nil {_aadb ._agbb =_fe .NewStats (512,1);};if _aadb ._aead ==nil {_aadb ._aead =_fe .NewStats (512,1);};if _aadb ._eefa ==nil {_aadb ._eefa =_fe .NewStats (512,1);};if _aadb .UseRefinementAggregation &&_aadb ._fdf ==nil {_aadb ._fdf =_fe .NewStats (1<<uint (_aadb ._ddge ),1);
_aadb ._bgfg =_fe .NewStats (512,1);_aadb ._ffff =_fe .NewStats (512,1);};if _aadb ._acfg ==nil {_aadb ._acfg =_fe .NewStats (65536,1);};if _aadb ._bdff ==nil {var _gdef error ;_aadb ._bdff ,_gdef =_fe .New (_aadb ._cgcb );if _gdef !=nil {return _gdef ;
};};return nil ;};func (_eed *Header )referenceSize ()uint {switch {case _eed .SegmentNumber <=255:return 1;case _eed .SegmentNumber <=65535:return 2;default:return 4;};};func (_ceb *PageInformationSegment )parseHeader ()(_cbbb error ){_aa .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _gfeg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _cbbb !=nil {_gfeg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cbbb .Error ();}else {_gfeg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_aa .Log .Trace (_gfeg );}();if _cbbb =_ceb .readWidthAndHeight ();
_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readResolution ();_cbbb !=nil {return _cbbb ;};_ ,_cbbb =_ceb ._dfcb .ReadBit ();if _cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readCombinationOperatorOverrideAllowed ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readRequiresAuxiliaryBuffer ();
_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readCombinationOperator ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readDefaultPixelValue ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readContainsRefinement ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readIsLossless ();
_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readIsStriped ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .readMaxStripeSize ();_cbbb !=nil {return _cbbb ;};if _cbbb =_ceb .checkInput ();_cbbb !=nil {return _cbbb ;};_aa .Log .Trace ("\u0025\u0073",_ceb );
return nil ;};type GenericRefinementRegion struct{_faa templater ;_bf templater ;_da *_fd .Reader ;_dfd *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ca .Bitmap ;ReferenceBitmap *_ca .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_ee *_fe .Decoder ;_ece *_fe .DecoderStats ;_ef bool ;_bce []bool ;};func (_cdgc *TextRegion )decodeStripT ()(_daad int64 ,_edag error ){if _cdgc .IsHuffmanEncoded {if _cdgc .SbHuffDT ==3{if _cdgc ._fccfg ==nil {var _abeb int ;
if _cdgc .SbHuffFS ==3{_abeb ++;};if _cdgc .SbHuffDS ==3{_abeb ++;};_cdgc ._fccfg ,_edag =_cdgc .getUserTable (_abeb );if _edag !=nil {return 0,_edag ;};};_daad ,_edag =_cdgc ._fccfg .Decode (_cdgc ._bfbf );if _edag !=nil {return 0,_edag ;};}else {var _fcbb _bc .Tabler ;
_fcbb ,_edag =_bc .GetStandardTable (11+int (_cdgc .SbHuffDT ));if _edag !=nil {return 0,_edag ;};_daad ,_edag =_fcbb .Decode (_cdgc ._bfbf );if _edag !=nil {return 0,_edag ;};};}else {var _dbfe int32 ;_dbfe ,_edag =_cdgc ._gcdaba .DecodeInt (_cdgc ._cfgaf );
if _edag !=nil {return 0,_edag ;};_daad =int64 (_dbfe );};_daad *=int64 (-_cdgc .SbStrips );return _daad ,nil ;};func (_ag *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ag .RegionInfo };type EndOfStripe struct{_dcd *_fd .Reader ;_ge int ;
};func (_dbcc *PageInformationSegment )Size ()int {return 19};func (_eeeb *HalftoneRegion )shiftAndFill (_bde int )int {_bde >>=8;if _bde < 0{_gcda :=int (_df .Log (float64 (_dcff (_bde )))/_df .Log (2));_dgbgb :=31-_gcda ;for _cfef :=1;_cfef < _dgbgb ;
_cfef ++{_bde |=1<<uint (31-_cfef );};};return _bde ;};func (_gaeb *PatternDictionary )extractPatterns (_ddfc *_ca .Bitmap )error {var _edfa int ;_cffe :=make ([]*_ca .Bitmap ,_gaeb .GrayMax +1);for _edfa <=int (_gaeb .GrayMax ){_eeaf :=int (_gaeb .HdpWidth )*_edfa ;
_acdc :=_e .Rect (_eeaf ,0,_eeaf +int (_gaeb .HdpWidth ),int (_gaeb .HdpHeight ));_gaea ,_gcbb :=_ca .Extract (_acdc ,_ddfc );if _gcbb !=nil {return _gcbb ;};_cffe [_edfa ]=_gaea ;_edfa ++;};_gaeb .Patterns =_cffe ;return nil ;};func (_fffa *PageInformationSegment )readWidthAndHeight ()error {_ecge ,_gfac :=_fffa ._dfcb .ReadBits (32);
if _gfac !=nil {return _gfac ;};_fffa .PageBMWidth =int (_ecge &_df .MaxInt32 );_ecge ,_gfac =_fffa ._dfcb .ReadBits (32);if _gfac !=nil {return _gfac ;};_fffa .PageBMHeight =int (_ecge &_df .MaxInt32 );return nil ;};func (_bedd *Header )writeReferredToSegments (_cegf _fd .BinaryWriter )(_cggca int ,_bgcf error ){const _adae ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_agag uint16 ;_gabg uint32 ;);_gceb :=_bedd .referenceSize ();_acf :=1;_agad :=make ([]byte ,_gceb );for _ ,_ade :=range _bedd .RTSNumbers {switch _gceb {case 4:_gabg =uint32 (_ade );_g .BigEndian .PutUint32 (_agad ,_gabg );_acf ,_bgcf =_cegf .Write (_agad );
if _bgcf !=nil {return 0,_fc .Wrap (_bgcf ,_adae ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_agag =uint16 (_ade );_g .BigEndian .PutUint16 (_agad ,_agag );_acf ,_bgcf =_cegf .Write (_agad );if _bgcf !=nil {return 0,_fc .Wrap (_bgcf ,_adae ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _bgcf =_cegf .WriteByte (byte (_ade ));_bgcf !=nil {return 0,_fc .Wrap (_bgcf ,_adae ,"\u0075\u0069\u006et\u0038");};};_cggca +=_acf ;};return _cggca ,nil ;};func (_gbeg *PatternDictionary )parseHeader ()error {_aa .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_aa .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_fgfce :=_gbeg ._adga .ReadBits (5);if _fgfce !=nil {return _fgfce ;};if _fgfce =_gbeg .readTemplate ();_fgfce !=nil {return _fgfce ;};if _fgfce =_gbeg .readIsMMREncoded ();_fgfce !=nil {return _fgfce ;};if _fgfce =_gbeg .readPatternWidthAndHeight ();
_fgfce !=nil {return _fgfce ;};if _fgfce =_gbeg .readGrayMax ();_fgfce !=nil {return _fgfce ;};if _fgfce =_gbeg .computeSegmentDataStructure ();_fgfce !=nil {return _fgfce ;};return _gbeg .checkInput ();};type TextRegion struct{_bfbf *_fd .Reader ;RegionInfo *RegionSegment ;
SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ca .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;
SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dfffg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ca .Bitmap ;Symbols []*_ca .Bitmap ;
_gcdaba *_fe .Decoder ;_gdgg *GenericRefinementRegion ;_cfgaf *_fe .DecoderStats ;_efec *_fe .DecoderStats ;_bge *_fe .DecoderStats ;_cfgfe *_fe .DecoderStats ;_cacd *_fe .DecoderStats ;_ccega *_fe .DecoderStats ;_ecda *_fe .DecoderStats ;_ddc *_fe .DecoderStats ;
_fbbce *_fe .DecoderStats ;_dfaf *_fe .DecoderStats ;_dbdaa *_fe .DecoderStats ;_abab int8 ;_fgcg *_bc .FixedSizeTable ;Header *Header ;_afgb _bc .Tabler ;_ccfe _bc .Tabler ;_fccfg _bc .Tabler ;_gbcde _bc .Tabler ;_gfgd _bc .Tabler ;_cafb _bc .Tabler ;
_babgd _bc .Tabler ;_dgaag _bc .Tabler ;_aafd ,_bfdd map[int ]int ;_aege []int ;_ecac *_ca .Points ;_dgea *_ca .Bitmaps ;_efcf *_b .IntSlice ;_eebd ,_febe int ;_dbedc *_ca .Boxes ;};func (_dcf *GenericRefinementRegion )Init (header *Header ,r *_fd .Reader )error {_dcf ._dfd =header ;
_dcf ._da =r ;_dcf .RegionInfo =NewRegionSegment (r );return _dcf .parseHeader ();};func (_dag *HalftoneRegion )Init (hd *Header ,r *_fd .Reader )error {_dag ._dgcf =r ;_dag ._gdbg =hd ;_dag .RegionSegment =NewRegionSegment (r );return _dag .parseHeader ();
};type Segmenter interface{Init (_ace *Header ,_faab *_fd .Reader )error ;};func (_fdebb *SymbolDictionary )readRefinementAtPixels (_fegd int )error {_fdebb .SdrATX =make ([]int8 ,_fegd );_fdebb .SdrATY =make ([]int8 ,_fegd );var (_deeab byte ;_afacd error ;
);for _agdg :=0;_agdg < _fegd ;_agdg ++{_deeab ,_afacd =_fdebb ._cgcb .ReadByte ();if _afacd !=nil {return _afacd ;};_fdebb .SdrATX [_agdg ]=int8 (_deeab );_deeab ,_afacd =_fdebb ._cgcb .ReadByte ();if _afacd !=nil {return _afacd ;};_fdebb .SdrATY [_agdg ]=int8 (_deeab );
};return nil ;};func (_cf *GenericRefinementRegion )decodeTypicalPredictedLine (_ega ,_adf ,_bd ,_fba ,_gafg ,_bga int )error {_cc :=_ega -int (_cf .ReferenceDY );_bcg :=_cf .ReferenceBitmap .GetByteIndex (0,_cc );_cd :=_cf .RegionBitmap .GetByteIndex (0,_ega );
var _fca error ;switch _cf .TemplateID {case 0:_fca =_cf .decodeTypicalPredictedLineTemplate0 (_ega ,_adf ,_bd ,_fba ,_gafg ,_bga ,_cd ,_cc ,_bcg );case 1:_fca =_cf .decodeTypicalPredictedLineTemplate1 (_ega ,_adf ,_bd ,_fba ,_gafg ,_bga ,_cd ,_cc ,_bcg );
};return _fca ;};type template1 struct{};func (_cfg *HalftoneRegion )GetPatterns ()([]*_ca .Bitmap ,error ){var (_cggf []*_ca .Bitmap ;_ecef error ;);for _ ,_cabf :=range _cfg ._gdbg .RTSegments {var _cafa Segmenter ;_cafa ,_ecef =_cabf .GetSegmentData ();
if _ecef !=nil {_aa .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ecef );return nil ,_ecef ;};_cfe ,_caag :=_cafa .(*PatternDictionary );if !_caag {_ecef =_db .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cafa );
return nil ,_ecef ;};var _fcafc []*_ca .Bitmap ;_fcafc ,_ecef =_cfe .GetDictionary ();if _ecef !=nil {_aa .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ecef );
return nil ,_ecef ;};_cggf =append (_cggf ,_fcafc ...);};return _cggf ,nil ;};func (_babg *PageInformationSegment )Init (h *Header ,r *_fd .Reader )(_abgf error ){_babg ._dfcb =r ;if _abgf =_babg .parseHeader ();_abgf !=nil {return _fc .Wrap (_abgf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_bfg *HalftoneRegion )computeY (_gbd ,_dbcb int )int {return _bfg .shiftAndFill (int (_bfg .HGridY )+_gbd *int (_bfg .HRegionX )-_dbcb *int (_bfg .HRegionY ));};func NewRegionSegment (r *_fd .Reader )*RegionSegment {return &RegionSegment {_ccag :r }};
func (_eee *HalftoneRegion )checkInput ()error {if _eee .IsMMREncoded {if _eee .HTemplate !=0{_aa .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_eee .HTemplate );
};if _eee .HSkipEnabled {_aa .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_eee .HSkipEnabled );
};};return nil ;};func (_bbb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cff ,_ff ,_ac ,_faf ,_cbc ,_ddg ,_bfe ,_dgd ,_cce int )(_gbf error ){var (_gg ,_gbb int ;_dac ,_fab int ;_ddga ,_eba int ;_ebaa byte ;);if _cff > 0{_ebaa ,_gbf =_bbb .RegionBitmap .GetByte (_bfe -_ac );
if _gbf !=nil {return _gbf ;};_dac =int (_ebaa );};if _dgd > 0&&_dgd <=_bbb .ReferenceBitmap .Height {_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce -_faf +_ddg );if _gbf !=nil {return _gbf ;};_fab =int (_ebaa )<<2;};if _dgd >=0&&_dgd < _bbb .ReferenceBitmap .Height {_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce +_ddg );
if _gbf !=nil {return _gbf ;};_ddga =int (_ebaa );};if _dgd > -2&&_dgd < _bbb .ReferenceBitmap .Height -1{_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce +_faf +_ddg );if _gbf !=nil {return _gbf ;};_eba =int (_ebaa );};_gg =((_dac >>5)&0x6)|((_eba >>2)&0x30)|(_ddga &0xc0)|(_fab &0x200);
_gbb =((_eba >>2)&0x70)|(_ddga &0xc0)|(_fab &0x700);var _aag int ;for _abc :=0;_abc < _cbc ;_abc =_aag {var (_ddd int ;_dcg int ;);_aag =_abc +8;if _ddd =_ff -_abc ;_ddd > 8{_ddd =8;};_cfd :=_aag < _ff ;_bede :=_aag < _bbb .ReferenceBitmap .Width ;_bba :=_ddg +1;
if _cff > 0{_ebaa =0;if _cfd {_ebaa ,_gbf =_bbb .RegionBitmap .GetByte (_bfe -_ac +1);if _gbf !=nil {return _gbf ;};};_dac =(_dac <<8)|int (_ebaa );};if _dgd > 0&&_dgd <=_bbb .ReferenceBitmap .Height {var _fff int ;if _bede {_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce -_faf +_bba );
if _gbf !=nil {return _gbf ;};_fff =int (_ebaa )<<2;};_fab =(_fab <<8)|_fff ;};if _dgd >=0&&_dgd < _bbb .ReferenceBitmap .Height {_ebaa =0;if _bede {_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce +_bba );if _gbf !=nil {return _gbf ;};};_ddga =(_ddga <<8)|int (_ebaa );
};if _dgd > -2&&_dgd < (_bbb .ReferenceBitmap .Height -1){_ebaa =0;if _bede {_ebaa ,_gbf =_bbb .ReferenceBitmap .GetByte (_cce +_faf +_bba );if _gbf !=nil {return _gbf ;};};_eba =(_eba <<8)|int (_ebaa );};for _gae :=0;_gae < _ddd ;_gae ++{var _ecce int ;
_fdc :=(_gbb >>4)&0x1ff;switch _fdc {case 0x1ff:_ecce =1;case 0x00:_ecce =0;default:_bbb ._ece .SetIndex (int32 (_gg ));_ecce ,_gbf =_bbb ._ee .DecodeBit (_bbb ._ece );if _gbf !=nil {return _gbf ;};};_ecbg :=uint (7-_gae );_dcg |=_ecce <<_ecbg ;_gg =((_gg &0x0d6)<<1)|_ecce |(_dac >>_ecbg +5)&0x002|((_eba >>_ecbg +2)&0x010)|((_ddga >>_ecbg )&0x040)|((_fab >>_ecbg )&0x200);
_gbb =((_gbb &0xdb)<<1)|((_eba >>_ecbg +2)&0x010)|((_ddga >>_ecbg )&0x080)|((_fab >>_ecbg )&0x400);};_gbf =_bbb .RegionBitmap .SetByte (_bfe ,byte (_dcg ));if _gbf !=nil {return _gbf ;};_bfe ++;_cce ++;};return nil ;};func (_fgf *GenericRegion )updateOverrideFlags ()error {const _fag ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fgf .GBAtX ==nil ||_fgf .GBAtY ==nil {return nil ;};if len (_fgf .GBAtX )!=len (_fgf .GBAtY ){return _fc .Errorf (_fag ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fgf .GBAtX ),len (_fgf .GBAtY ));
};_fgf .GBAtOverride =make ([]bool ,len (_fgf .GBAtX ));switch _fgf .GBTemplate {case 0:if !_fgf .UseExtTemplates {if _fgf .GBAtX [0]!=3||_fgf .GBAtY [0]!=-1{_fgf .setOverrideFlag (0);};if _fgf .GBAtX [1]!=-3||_fgf .GBAtY [1]!=-1{_fgf .setOverrideFlag (1);
};if _fgf .GBAtX [2]!=2||_fgf .GBAtY [2]!=-2{_fgf .setOverrideFlag (2);};if _fgf .GBAtX [3]!=-2||_fgf .GBAtY [3]!=-2{_fgf .setOverrideFlag (3);};}else {if _fgf .GBAtX [0]!=-2||_fgf .GBAtY [0]!=0{_fgf .setOverrideFlag (0);};if _fgf .GBAtX [1]!=0||_fgf .GBAtY [1]!=-2{_fgf .setOverrideFlag (1);
};if _fgf .GBAtX [2]!=-2||_fgf .GBAtY [2]!=-1{_fgf .setOverrideFlag (2);};if _fgf .GBAtX [3]!=-1||_fgf .GBAtY [3]!=-2{_fgf .setOverrideFlag (3);};if _fgf .GBAtX [4]!=1||_fgf .GBAtY [4]!=-2{_fgf .setOverrideFlag (4);};if _fgf .GBAtX [5]!=2||_fgf .GBAtY [5]!=-1{_fgf .setOverrideFlag (5);
};if _fgf .GBAtX [6]!=-3||_fgf .GBAtY [6]!=0{_fgf .setOverrideFlag (6);};if _fgf .GBAtX [7]!=-4||_fgf .GBAtY [7]!=0{_fgf .setOverrideFlag (7);};if _fgf .GBAtX [8]!=2||_fgf .GBAtY [8]!=-2{_fgf .setOverrideFlag (8);};if _fgf .GBAtX [9]!=3||_fgf .GBAtY [9]!=-1{_fgf .setOverrideFlag (9);
};if _fgf .GBAtX [10]!=-2||_fgf .GBAtY [10]!=-2{_fgf .setOverrideFlag (10);};if _fgf .GBAtX [11]!=-3||_fgf .GBAtY [11]!=-1{_fgf .setOverrideFlag (11);};};case 1:if _fgf .GBAtX [0]!=3||_fgf .GBAtY [0]!=-1{_fgf .setOverrideFlag (0);};case 2:if _fgf .GBAtX [0]!=2||_fgf .GBAtY [0]!=-1{_fgf .setOverrideFlag (0);
};case 3:if _fgf .GBAtX [0]!=2||_fgf .GBAtY [0]!=-1{_fgf .setOverrideFlag (0);};};return nil ;};func (_agddb *SymbolDictionary )GetDictionary ()([]*_ca .Bitmap ,error ){_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_aa .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_aa .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_agddb ._eaec ,_agddb ._defc );
}();if _agddb ._eaec ==nil {var _egag error ;if _agddb .UseRefinementAggregation {_agddb ._ddge =_agddb .getSbSymCodeLen ();};if !_agddb .IsHuffmanEncoded {if _egag =_agddb .setCodingStatistics ();_egag !=nil {return nil ,_egag ;};};_agddb ._defc =make ([]*_ca .Bitmap ,_agddb .NumberOfNewSymbols );
var _aeba []int ;if _agddb .IsHuffmanEncoded &&!_agddb .UseRefinementAggregation {_aeba =make ([]int ,_agddb .NumberOfNewSymbols );};if _egag =_agddb .setSymbolsArray ();_egag !=nil {return nil ,_egag ;};var _ccbd ,_ecgb int64 ;_agddb ._aegd =0;for _agddb ._aegd < _agddb .NumberOfNewSymbols {_ecgb ,_egag =_agddb .decodeHeightClassDeltaHeight ();
if _egag !=nil {return nil ,_egag ;};_ccbd +=_ecgb ;var _cege ,_adff uint32 ;_cedd :=int64 (_agddb ._aegd );for {var _fgfbc int64 ;_fgfbc ,_egag =_agddb .decodeDifferenceWidth ();if _fb .Is (_egag ,_dc .ErrOOB ){break ;};if _egag !=nil {return nil ,_egag ;
};if _agddb ._aegd >=_agddb .NumberOfNewSymbols {break ;};_cege +=uint32 (_fgfbc );_adff +=_cege ;if !_agddb .IsHuffmanEncoded ||_agddb .UseRefinementAggregation {if !_agddb .UseRefinementAggregation {_egag =_agddb .decodeDirectlyThroughGenericRegion (_cege ,uint32 (_ccbd ));
if _egag !=nil {return nil ,_egag ;};}else {_egag =_agddb .decodeAggregate (_cege ,uint32 (_ccbd ));if _egag !=nil {return nil ,_egag ;};};}else if _agddb .IsHuffmanEncoded &&!_agddb .UseRefinementAggregation {_aeba [_agddb ._aegd ]=int (_cege );};_agddb ._aegd ++;
};if _agddb .IsHuffmanEncoded &&!_agddb .UseRefinementAggregation {var _aggb int64 ;if _agddb .SdHuffBMSizeSelection ==0{var _fdcc _bc .Tabler ;_fdcc ,_egag =_bc .GetStandardTable (1);if _egag !=nil {return nil ,_egag ;};_aggb ,_egag =_fdcc .Decode (_agddb ._cgcb );
if _egag !=nil {return nil ,_egag ;};}else {_aggb ,_egag =_agddb .huffDecodeBmSize ();if _egag !=nil {return nil ,_egag ;};};_agddb ._cgcb .Align ();var _ccbae *_ca .Bitmap ;_ccbae ,_egag =_agddb .decodeHeightClassCollectiveBitmap (_aggb ,uint32 (_ccbd ),_adff );
if _egag !=nil {return nil ,_egag ;};_egag =_agddb .decodeHeightClassBitmap (_ccbae ,_cedd ,int (_ccbd ),_aeba );if _egag !=nil {return nil ,_egag ;};};};_gffge ,_egag :=_agddb .getToExportFlags ();if _egag !=nil {return nil ,_egag ;};_agddb .setExportedSymbols (_gffge );
};return _agddb ._eaec ,nil ;};func (_cfgd *TextRegion )decodeRdx ()(int64 ,error ){const _deabd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cfgd .IsHuffmanEncoded {if _cfgd .SbHuffRDX ==3{if _cfgd ._cafb ==nil {var (_bcce int ;_adee error ;);if _cfgd .SbHuffFS ==3{_bcce ++;
};if _cfgd .SbHuffDS ==3{_bcce ++;};if _cfgd .SbHuffDT ==3{_bcce ++;};if _cfgd .SbHuffRDWidth ==3{_bcce ++;};if _cfgd .SbHuffRDHeight ==3{_bcce ++;};_cfgd ._cafb ,_adee =_cfgd .getUserTable (_bcce );if _adee !=nil {return 0,_fc .Wrap (_adee ,_deabd ,"");
};};return _cfgd ._cafb .Decode (_cfgd ._bfbf );};_aabe ,_efgf :=_bc .GetStandardTable (14+int (_cfgd .SbHuffRDX ));if _efgf !=nil {return 0,_fc .Wrap (_efgf ,_deabd ,"");};return _aabe .Decode (_cfgd ._bfbf );};_cddf ,_aabef :=_cfgd ._gcdaba .DecodeInt (_cfgd ._fbbce );
if _aabef !=nil {return 0,_fc .Wrap (_aabef ,_deabd ,"");};return int64 (_cddf ),nil ;};func (_cef *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cef .IsHuffmanEncoded {return _cef .decodeHeightClassDeltaHeightWithHuffman ();};_ggdfb ,_gbfef :=_cef ._bdff .DecodeInt (_cef ._bcb );
if _gbfef !=nil {return 0,_gbfef ;};return int64 (_ggdfb ),nil ;};func (_fdedf *SymbolDictionary )getUserTable (_ged int )(_bc .Tabler ,error ){var _dgg int ;for _ ,_fbae :=range _fdedf .Header .RTSegments {if _fbae .Type ==53{if _dgg ==_ged {_fbgd ,_gfeb :=_fbae .GetSegmentData ();
if _gfeb !=nil {return nil ,_gfeb ;};_feba :=_fbgd .(_bc .BasicTabler );return _bc .NewEncodedTable (_feba );};_dgg ++;};};return nil ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_agg *Header )writeFlags (_ffef _fd .BinaryWriter )(_abeg error ){const _gcec ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_bbbec :=byte (_agg .Type );if _abeg =_ffef .WriteByte (_bbbec );_abeg !=nil {return _fc .Wrap (_abeg ,_gcec ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_agg .RetainFlag &&!_agg .PageAssociationFieldSize {return nil ;};if _abeg =_ffef .SkipBits (-8);_abeg !=nil {return _fc .Wrap (_abeg ,_gcec ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _dbae int ;if _agg .RetainFlag {_dbae =1;};if _abeg =_ffef .WriteBit (_dbae );_abeg !=nil {return _fc .Wrap (_abeg ,_gcec ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_dbae =0;if _agg .PageAssociationFieldSize {_dbae =1;
};if _abeg =_ffef .WriteBit (_dbae );_abeg !=nil {return _fc .Wrap (_abeg ,_gcec ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ffef .FinishByte ();return nil ;};func (_fdea *SymbolDictionary )readNumberOfNewSymbols ()error {_cbac ,_ddgag :=_fdea ._cgcb .ReadBits (32);
if _ddgag !=nil {return _ddgag ;};_fdea .NumberOfNewSymbols =uint32 (_cbac &_df .MaxUint32 );return nil ;};func _fgcgg (_ccefc *_fd .Reader ,_fgegb *Header )*TextRegion {_gfab :=&TextRegion {_bfbf :_ccefc ,Header :_fgegb ,RegionInfo :NewRegionSegment (_ccefc )};
return _gfab ;};func (_fcfe *TextRegion )getSymbols ()error {if _fcfe .Header .RTSegments !=nil {return _fcfe .initSymbols ();};return nil ;};func (_fgebg *TextRegion )decodeIds ()(int64 ,error ){const _cebf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _fgebg .IsHuffmanEncoded {if _fgebg .SbHuffDS ==3{if _fgebg ._ccfe ==nil {_efeb :=0;if _fgebg .SbHuffFS ==3{_efeb ++;};var _babea error ;_fgebg ._ccfe ,_babea =_fgebg .getUserTable (_efeb );if _babea !=nil {return 0,_fc .Wrap (_babea ,_cebf ,"");};};
return _fgebg ._ccfe .Decode (_fgebg ._bfbf );};_dbfb ,_cegfe :=_bc .GetStandardTable (8+int (_fgebg .SbHuffDS ));if _cegfe !=nil {return 0,_fc .Wrap (_cegfe ,_cebf ,"");};return _dbfb .Decode (_fgebg ._bfbf );};_cccda ,_bgcd :=_fgebg ._gcdaba .DecodeInt (_fgebg ._bge );
if _bgcd !=nil {return 0,_fc .Wrap (_bgcd ,_cebf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_cccda ),nil ;};func (_bdfc *GenericRegion )setParametersMMR (_ggea bool ,_dbdd ,_bcdff int64 ,_geee ,_bbbg uint32 ,_fbbcg byte ,_aaede ,_edfd bool ,_bad ,_dcde []int8 ){_bdfc .DataOffset =_dbdd ;
_bdfc .DataLength =_bcdff ;_bdfc .RegionSegment =&RegionSegment {};_bdfc .RegionSegment .BitmapHeight =_geee ;_bdfc .RegionSegment .BitmapWidth =_bbbg ;_bdfc .GBTemplate =_fbbcg ;_bdfc .IsMMREncoded =_ggea ;_bdfc .IsTPGDon =_aaede ;_bdfc .GBAtX =_bad ;
_bdfc .GBAtY =_dcde ;};type SymbolDictionary struct{_cgcb *_fd .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_cdac bool ;_eeaa bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_abdb uint32 ;_ceec []*_ca .Bitmap ;_aegd uint32 ;_defc []*_ca .Bitmap ;
_bbga _bc .Tabler ;_bfaf _bc .Tabler ;_aedf _bc .Tabler ;_gdbfe _bc .Tabler ;_eaec []*_ca .Bitmap ;_abca []*_ca .Bitmap ;_bdff *_fe .Decoder ;_edga *TextRegion ;_acgb *GenericRegion ;_acgfg *GenericRefinementRegion ;_acfg *_fe .DecoderStats ;_bcb *_fe .DecoderStats ;
_agbb *_fe .DecoderStats ;_aead *_fe .DecoderStats ;_eefa *_fe .DecoderStats ;_bgfg *_fe .DecoderStats ;_ffff *_fe .DecoderStats ;_ddgad *_fe .DecoderStats ;_fdf *_fe .DecoderStats ;_ddge int8 ;_agcf *_ca .Bitmaps ;_fecd []int ;_abea map[int ]int ;_dacb bool ;
};func (_fdee *Header )readDataStartOffset (_bgde *_fd .Reader ,_abgb OrganizationType ){if _abgb ==OSequential {_fdee .SegmentDataStartOffset =uint64 (_bgde .AbsolutePosition ());};};func (_agd *Header )writeSegmentDataLength (_gcca _fd .BinaryWriter )(_cedff int ,_bcea error ){_accb :=make ([]byte ,4);
_g .BigEndian .PutUint32 (_accb ,uint32 (_agd .SegmentDataLength ));if _cedff ,_bcea =_gcca .Write (_accb );_bcea !=nil {return 0,_fc .Wrap (_bcea ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _cedff ,nil ;};func (_affe *GenericRegion )readGBAtPixels (_gge int )error {const _bbe ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_affe .GBAtX =make ([]int8 ,_gge );_affe .GBAtY =make ([]int8 ,_gge );for _ffe :=0;
_ffe < _gge ;_ffe ++{_gaff ,_acgf :=_affe ._fee .ReadByte ();if _acgf !=nil {return _fc .Wrapf (_acgf ,_bbe ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ffe );};_affe .GBAtX [_ffe ]=int8 (_gaff );_gaff ,_acgf =_affe ._fee .ReadByte ();
if _acgf !=nil {return _fc .Wrapf (_acgf ,_bbe ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ffe );};_affe .GBAtY [_ffe ]=int8 (_gaff );};return nil ;};func (_cfde *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_acfgd :=range _cfde .Header .RTSegments {if _acfgd .Type ==0{_febac ,_edbc :=_acfgd .GetSegmentData ();
if _edbc !=nil {return _edbc ;};_ggee ,_gcecc :=_febac .(*SymbolDictionary );if !_gcecc {return _db .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_febac );
};_dabf ,_edbc :=_ggee .GetDictionary ();if _edbc !=nil {return _db .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_acfgd .SegmentNumber ,_edbc .Error ());
};_cfde ._ceec =append (_cfde ._ceec ,_dabf ...);_cfde ._abdb +=_ggee .NumberOfExportedSymbols ;};};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_dfg *GenericRegion )Init (h *Header ,r *_fd .Reader )error {_dfg .RegionSegment =NewRegionSegment (r );
_dfg ._fee =r ;return _dfg .parseHeader ();};func (_abce *Header )Encode (w _fd .BinaryWriter )(_fbcd int ,_begcb error ){const _baaf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _dcdc _fd .BinaryWriter ;_aa .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _begcb !=nil {_aa .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_begcb );}else {_aa .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_abce );
_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _abce .SegmentData !=nil {_fgbc ,_effb :=_abce .SegmentData .(SegmentEncoder );
if !_effb {return 0,_fc .Errorf (_baaf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_abce .SegmentData );
};_dcdc =_fd .BufferedMSB ();_fbcd ,_begcb =_fgbc .Encode (_dcdc );if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");};_abce .SegmentDataLength =uint64 (_fbcd );};if _abce .pageSize ()==4{_abce .PageAssociationFieldSize =true ;};var _dda int ;_dda ,_begcb =_abce .writeSegmentNumber (w );
if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");};_fbcd +=_dda ;if _begcb =_abce .writeFlags (w );_begcb !=nil {return _fbcd ,_fc .Wrap (_begcb ,_baaf ,"");};_fbcd ++;_dda ,_begcb =_abce .writeReferredToCount (w );if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");
};_fbcd +=_dda ;_dda ,_begcb =_abce .writeReferredToSegments (w );if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");};_fbcd +=_dda ;_dda ,_begcb =_abce .writeSegmentPageAssociation (w );if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");};_fbcd +=_dda ;
_dda ,_begcb =_abce .writeSegmentDataLength (w );if _begcb !=nil {return 0,_fc .Wrap (_begcb ,_baaf ,"");};_fbcd +=_dda ;_abce .HeaderLength =int64 (_fbcd )-int64 (_abce .SegmentDataLength );if _dcdc !=nil {if _ ,_begcb =w .Write (_dcdc .Data ());_begcb !=nil {return _fbcd ,_fc .Wrap (_begcb ,_baaf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _fbcd ,nil ;};func (_bfcc *SymbolDictionary )setSymbolsArray ()error {if _bfcc ._ceec ==nil {if _afbf :=_bfcc .retrieveImportSymbols ();_afbf !=nil {return _afbf ;};};if _bfcc ._abca ==nil {_bfcc ._abca =append (_bfcc ._abca ,_bfcc ._ceec ...);
};return nil ;};type GenericRegion struct{_fee *_fd .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;
GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_efb bool ;Bitmap *_ca .Bitmap ;_fgd *_fe .Decoder ;_baa *_fe .DecoderStats ;_cged *_gb .Decoder ;};func (_faaa *SymbolDictionary )Encode (w _fd .BinaryWriter )(_dgcfd int ,_ddgbd error ){const _acae ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _faaa ==nil {return 0,_fc .Error (_acae ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _dgcfd ,_ddgbd =_faaa .encodeFlags (w );
_ddgbd !=nil {return _dgcfd ,_fc .Wrap (_ddgbd ,_acae ,"");};_efgg ,_ddgbd :=_faaa .encodeATFlags (w );if _ddgbd !=nil {return _dgcfd ,_fc .Wrap (_ddgbd ,_acae ,"");};_dgcfd +=_efgg ;if _efgg ,_ddgbd =_faaa .encodeRefinementATFlags (w );_ddgbd !=nil {return _dgcfd ,_fc .Wrap (_ddgbd ,_acae ,"");
};_dgcfd +=_efgg ;if _efgg ,_ddgbd =_faaa .encodeNumSyms (w );_ddgbd !=nil {return _dgcfd ,_fc .Wrap (_ddgbd ,_acae ,"");};_dgcfd +=_efgg ;if _efgg ,_ddgbd =_faaa .encodeSymbols (w );_ddgbd !=nil {return _dgcfd ,_fc .Wrap (_ddgbd ,_acae ,"");};_dgcfd +=_efgg ;
return _dgcfd ,nil ;};var _ SegmentEncoder =&GenericRegion {};var _ SegmentEncoder =&RegionSegment {};func (_eccb *GenericRegion )decodeTemplate0a (_fbg ,_dfgg ,_acd int ,_dadd ,_cca int )(_bfad error ){const _cdfb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_ebb ,_deb int ;_gbag ,_aca int ;_facg byte ;_bdbe int ;);if _fbg >=1{_facg ,_bfad =_eccb .Bitmap .GetByte (_cca );if _bfad !=nil {return _fc .Wrap (_bfad ,_cdfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gbag =int (_facg );};if _fbg >=2{_facg ,_bfad =_eccb .Bitmap .GetByte (_cca -_eccb .Bitmap .RowStride );
if _bfad !=nil {return _fc .Wrap (_bfad ,_cdfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aca =int (_facg )<<6;};_ebb =(_gbag &0xf0)|(_aca &0x3800);for _edf :=0;_edf < _acd ;_edf =_bdbe {var (_fbd byte ;_ddbc int ;);_bdbe =_edf +8;if _feg :=_dfgg -_edf ;
_feg > 8{_ddbc =8;}else {_ddbc =_feg ;};if _fbg > 0{_gbag <<=8;if _bdbe < _dfgg {_facg ,_bfad =_eccb .Bitmap .GetByte (_cca +1);if _bfad !=nil {return _fc .Wrap (_bfad ,_cdfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gbag |=int (_facg );};
};if _fbg > 1{_ffd :=_cca -_eccb .Bitmap .RowStride +1;_aca <<=8;if _bdbe < _dfgg {_facg ,_bfad =_eccb .Bitmap .GetByte (_ffd );if _bfad !=nil {return _fc .Wrap (_bfad ,_cdfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aca |=int (_facg )<<6;
}else {_aca |=0;};};for _fbge :=0;_fbge < _ddbc ;_fbge ++{_abb :=uint (7-_fbge );if _eccb ._efb {_deb =_eccb .overrideAtTemplate0a (_ebb ,_edf +_fbge ,_fbg ,int (_fbd ),_fbge ,int (_abb ));_eccb ._baa .SetIndex (int32 (_deb ));}else {_eccb ._baa .SetIndex (int32 (_ebb ));
};var _gddd int ;_gddd ,_bfad =_eccb ._fgd .DecodeBit (_eccb ._baa );if _bfad !=nil {return _fc .Wrap (_bfad ,_cdfb ,"");};_fbd |=byte (_gddd )<<_abb ;_ebb =((_ebb &0x7bf7)<<1)|_gddd |((_gbag >>_abb )&0x10)|((_aca >>_abb )&0x800);};if _ecba :=_eccb .Bitmap .SetByte (_dadd ,_fbd );
_ecba !=nil {return _fc .Wrap (_ecba ,_cdfb ,"");};_dadd ++;_cca ++;};return nil ;};func (_faea *SymbolDictionary )readRegionFlags ()error {var (_dfca uint64 ;_cdfea int ;);_ ,_fbaee :=_faea ._cgcb .ReadBits (3);if _fbaee !=nil {return _fbaee ;};_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();
if _fbaee !=nil {return _fbaee ;};_faea .SdrTemplate =int8 (_cdfea );_dfca ,_fbaee =_faea ._cgcb .ReadBits (2);if _fbaee !=nil {return _fbaee ;};_faea .SdTemplate =int8 (_dfca &0xf);_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();if _fbaee !=nil {return _fbaee ;
};if _cdfea ==1{_faea ._cdac =true ;};_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();if _fbaee !=nil {return _fbaee ;};if _cdfea ==1{_faea ._eeaa =true ;};_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();if _fbaee !=nil {return _fbaee ;};if _cdfea ==1{_faea .SdHuffAggInstanceSelection =true ;
};_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();if _fbaee !=nil {return _fbaee ;};_faea .SdHuffBMSizeSelection =int8 (_cdfea );_dfca ,_fbaee =_faea ._cgcb .ReadBits (2);if _fbaee !=nil {return _fbaee ;};_faea .SdHuffDecodeWidthSelection =int8 (_dfca &0xf);_dfca ,_fbaee =_faea ._cgcb .ReadBits (2);
if _fbaee !=nil {return _fbaee ;};_faea .SdHuffDecodeHeightSelection =int8 (_dfca &0xf);_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();if _fbaee !=nil {return _fbaee ;};if _cdfea ==1{_faea .UseRefinementAggregation =true ;};_cdfea ,_fbaee =_faea ._cgcb .ReadBit ();
if _fbaee !=nil {return _fbaee ;};if _cdfea ==1{_faea .IsHuffmanEncoded =true ;};return nil ;};func (_cccf *PageInformationSegment )readContainsRefinement ()error {_cbec ,_aada :=_cccf ._dfcb .ReadBit ();if _aada !=nil {return _aada ;};if _cbec ==1{_cccf ._affb =true ;
};return nil ;};func (_cdf *GenericRegion )copyLineAbove (_abee int )error {_efa :=_abee *_cdf .Bitmap .RowStride ;_deea :=_efa -_cdf .Bitmap .RowStride ;for _acc :=0;_acc < _cdf .Bitmap .RowStride ;_acc ++{_bff ,_gcdg :=_cdf .Bitmap .GetByte (_deea );
if _gcdg !=nil {return _gcdg ;};_deea ++;if _gcdg =_cdf .Bitmap .SetByte (_efa ,_bff );_gcdg !=nil {return _gcdg ;};_efa ++;};return nil ;};func (_daffd *GenericRefinementRegion )getGrReference ()(*_ca .Bitmap ,error ){segments :=_daffd ._dfd .RTSegments ;
if len (segments )==0{return nil ,_fb .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_aac ,_ba :=segments [0].GetSegmentData ();
if _ba !=nil {return nil ,_ba ;};_eca ,_eg :=_aac .(Regioner );if !_eg {return nil ,_db .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_aac );
};return _eca .GetRegionBitmap ();};func (_ggbg *PageInformationSegment )checkInput ()error {if _ggbg .PageBMHeight ==_df .MaxInt32 {if !_ggbg .IsStripe {_aa .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_fd .Reader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_daf *GenericRefinementRegion )GetRegionBitmap ()(*_ca .Bitmap ,error ){var _eef error ;_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eef !=nil {_aa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eef );
}else {_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _daf .RegionBitmap !=nil {return _daf .RegionBitmap ,nil ;};_daff :=0;if _daf .ReferenceBitmap ==nil {_daf .ReferenceBitmap ,_eef =_daf .getGrReference ();if _eef !=nil {return nil ,_eef ;};};if _daf ._ee ==nil {_daf ._ee ,_eef =_fe .New (_daf ._da );
if _eef !=nil {return nil ,_eef ;};};if _daf ._ece ==nil {_daf ._ece =_fe .NewStats (8192,1);};_daf .RegionBitmap =_ca .New (int (_daf .RegionInfo .BitmapWidth ),int (_daf .RegionInfo .BitmapHeight ));if _daf .TemplateID ==0{if _eef =_daf .updateOverride ();
_eef !=nil {return nil ,_eef ;};};_gf :=(_daf .RegionBitmap .Width +7)&-8;var _ab int ;if _daf .IsTPGROn {_ab =int (-_daf .ReferenceDY )*_daf .ReferenceBitmap .RowStride ;};_dbg :=_ab +1;for _ad :=0;_ad < _daf .RegionBitmap .Height ;_ad ++{if _daf .IsTPGROn {_fg ,_gaf :=_daf .decodeSLTP ();
if _gaf !=nil {return nil ,_gaf ;};_daff ^=_fg ;};if _daff ==0{_eef =_daf .decodeOptimized (_ad ,_daf .RegionBitmap .Width ,_daf .RegionBitmap .RowStride ,_daf .ReferenceBitmap .RowStride ,_gf ,_ab ,_dbg );if _eef !=nil {return nil ,_eef ;};}else {_eef =_daf .decodeTypicalPredictedLine (_ad ,_daf .RegionBitmap .Width ,_daf .RegionBitmap .RowStride ,_daf .ReferenceBitmap .RowStride ,_gf ,_ab );
if _eef !=nil {return nil ,_eef ;};};};return _daf .RegionBitmap ,nil ;};func (_bace *HalftoneRegion )computeGrayScalePlanes (_cgb []*_ca .Bitmap ,_cbb int )([][]int ,error ){_fae :=make ([][]int ,_bace .HGridHeight );for _acbc :=0;_acbc < len (_fae );
_acbc ++{_fae [_acbc ]=make ([]int ,_bace .HGridWidth );};for _gaa :=0;_gaa < int (_bace .HGridHeight );_gaa ++{for _gec :=0;_gec < int (_bace .HGridWidth );_gec +=8{var _dceb int ;if _eaa :=int (_bace .HGridWidth )-_gec ;_eaa > 8{_dceb =8;}else {_dceb =_eaa ;
};_gace :=_cgb [0].GetByteIndex (_gec ,_gaa );for _dbed :=0;_dbed < _dceb ;_dbed ++{_cdfg :=_dbed +_gec ;_fae [_gaa ][_cdfg ]=0;for _ffba :=0;_ffba < _cbb ;_ffba ++{_bgfd ,_gbagb :=_cgb [_ffba ].GetByte (_gace );if _gbagb !=nil {return nil ,_gbagb ;};_edef :=_bgfd >>uint (7-_cdfg &7);
_fccb :=_edef &1;_gffg :=1<<uint (_ffba );_fad :=int (_fccb )*_gffg ;_fae [_gaa ][_cdfg ]+=_fad ;};};};};return _fae ,nil ;};type PatternDictionary struct{_adga *_fd .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ca .Bitmap ;GrayMax uint32 ;};func (_dgb *GenericRegion )setParametersWithAt (_gbe bool ,_ecbe byte ,_ecdg ,_gbfc bool ,_ceef ,_agbc []int8 ,_fdbc ,_cccd uint32 ,_bdbd *_fe .DecoderStats ,_dgad *_fe .Decoder ){_dgb .IsMMREncoded =_gbe ;
_dgb .GBTemplate =_ecbe ;_dgb .IsTPGDon =_ecdg ;_dgb .GBAtX =_ceef ;_dgb .GBAtY =_agbc ;_dgb .RegionSegment .BitmapHeight =_cccd ;_dgb .RegionSegment .BitmapWidth =_fdbc ;_dgb ._cged =nil ;_dgb .Bitmap =nil ;if _bdbd !=nil {_dgb ._baa =_bdbd ;};if _dgad !=nil {_dgb ._fgd =_dgad ;
};_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dgb );};func (_cgaa *HalftoneRegion )combineGrayscalePlanes (_gdbf []*_ca .Bitmap ,_adda int )error {_fbba :=0;
for _bea :=0;_bea < _gdbf [_adda ].Height ;_bea ++{for _fcab :=0;_fcab < _gdbf [_adda ].Width ;_fcab +=8{_fccc ,_eagg :=_gdbf [_adda +1].GetByte (_fbba );if _eagg !=nil {return _eagg ;};_egcf ,_eagg :=_gdbf [_adda ].GetByte (_fbba );if _eagg !=nil {return _eagg ;
};_eagg =_gdbf [_adda ].SetByte (_fbba ,_ca .CombineBytes (_egcf ,_fccc ,_ca .CmbOpXor ));if _eagg !=nil {return _eagg ;};_fbba ++;};};return nil ;};func (_adeb *PatternDictionary )computeSegmentDataStructure ()error {_adeb .DataOffset =_adeb ._adga .AbsolutePosition ();
_adeb .DataHeaderLength =_adeb .DataOffset -_adeb .DataHeaderOffset ;_adeb .DataLength =int64 (_adeb ._adga .AbsoluteLength ())-_adeb .DataHeaderLength ;return nil ;};func (_aaca *PageInformationSegment )encodeFlags (_gbdb _fd .BinaryWriter )(_bbeg error ){const _abbg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bbeg =_gbdb .SkipBits (1);_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _bbg int ;if _aaca .CombinationOperatorOverrideAllowed (){_bbg =1;};if _bbeg =_gbdb .WriteBit (_bbg );
_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_bbg =0;if _aaca ._daga {_bbg =1;
};if _bbeg =_gbdb .WriteBit (_bbg );_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bbeg =_gbdb .WriteBit ((int (_aaca ._fdgb )>>1)&0x01);
_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bbeg =_gbdb .WriteBit (int (_aaca ._fdgb )&0x01);
_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bbg =int (_aaca .DefaultPixelValue );
if _bbeg =_gbdb .WriteBit (_bbg );_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bbg =0;if _aaca ._affb {_bbg =1;
};if _bbeg =_gbdb .WriteBit (_bbg );_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bbg =0;if _aaca .IsLossless {_bbg =1;};if _bbeg =_gbdb .WriteBit (_bbg );
_bbeg !=nil {return _fc .Wrap (_bbeg ,_abbg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_eefe *TextRegion )encodeSymbols (_gabe _fd .BinaryWriter )(_gedeg int ,_bgafe error ){const _fbadg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_bfde :=make ([]byte ,4);_g .BigEndian .PutUint32 (_bfde ,_eefe .NumberOfSymbols );if _gedeg ,_bgafe =_gabe .Write (_bfde );_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_gegg ,_bgafe :=_ca .NewClassedPoints (_eefe ._ecac ,_eefe ._aege );if _bgafe !=nil {return 0,_fc .Wrap (_bgafe ,_fbadg ,"");};var _cddff ,_badgc int ;_adfc :=_a .New ();_adfc .Init ();if _bgafe =_adfc .EncodeInteger (_a .IADT ,0);_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_egef ,_bgafe :=_gegg .GroupByY ();if _bgafe !=nil {return 0,_fc .Wrap (_bgafe ,_fbadg ,"");};for _ ,_ecde :=range _egef {_bgfb :=int (_ecde .YAtIndex (0));_fafeb :=_bgfb -_cddff ;if _bgafe =_adfc .EncodeInteger (_a .IADT ,_fafeb );_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"");
};var _fabe int ;for _cdbd ,_aecg :=range _ecde .IntSlice {switch _cdbd {case 0:_bega :=int (_ecde .XAtIndex (_cdbd ))-_badgc ;if _bgafe =_adfc .EncodeInteger (_a .IAFS ,_bega );_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"");};_badgc +=_bega ;
_fabe =_badgc ;default:_dfce :=int (_ecde .XAtIndex (_cdbd ))-_fabe ;if _bgafe =_adfc .EncodeInteger (_a .IADS ,_dfce );_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"");};_fabe +=_dfce ;};_bddb ,_adcb :=_eefe ._efcf .Get (_aecg );if _adcb !=nil {return _gedeg ,_fc .Wrap (_adcb ,_fbadg ,"");
};_fcgf ,_adcee :=_eefe ._aafd [_bddb ];if !_adcee {_fcgf ,_adcee =_eefe ._bfdd [_bddb ];if !_adcee {return _gedeg ,_fc .Errorf (_fbadg ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bddb );
};};if _adcb =_adfc .EncodeIAID (_eefe ._febe ,_fcgf );_adcb !=nil {return _gedeg ,_fc .Wrap (_adcb ,_fbadg ,"");};};if _bgafe =_adfc .EncodeOOB (_a .IADS );_bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"");};};_adfc .Final ();_efbff ,_bgafe :=_adfc .WriteTo (_gabe );
if _bgafe !=nil {return _gedeg ,_fc .Wrap (_bgafe ,_fbadg ,"");};_gedeg +=int (_efbff );return _gedeg ,nil ;};func (_bcc *template0 )setIndex (_fef *_fe .DecoderStats ){_fef .SetIndex (0x100)};func (_gde *SymbolDictionary )encodeRefinementATFlags (_gdgb _fd .BinaryWriter )(_cdgga int ,_eagf error ){const _abcg ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gde .UseRefinementAggregation ||_gde .SdrTemplate !=0{return 0,nil ;};for _ddaa :=0;_ddaa < 2;_ddaa ++{if _eagf =_gdgb .WriteByte (byte (_gde .SdrATX [_ddaa ]));_eagf !=nil {return _cdgga ,_fc .Wrapf (_eagf ,_abcg ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ddaa );
};_cdgga ++;if _eagf =_gdgb .WriteByte (byte (_gde .SdrATY [_ddaa ]));_eagf !=nil {return _cdgga ,_fc .Wrapf (_eagf ,_abcg ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ddaa );};_cdgga ++;};return _cdgga ,nil ;};func (_cggd *HalftoneRegion )grayScaleDecoding (_ecff int )([][]int ,error ){var (_ebcg []int8 ;
_bcf []int8 ;);if !_cggd .IsMMREncoded {_ebcg =make ([]int8 ,4);_bcf =make ([]int8 ,4);if _cggd .HTemplate <=1{_ebcg [0]=3;}else if _cggd .HTemplate >=2{_ebcg [0]=2;};_bcf [0]=-1;_ebcg [1]=-3;_bcf [1]=-1;_ebcg [2]=2;_bcf [2]=-2;_ebcg [3]=-2;_bcf [3]=-2;
};_deee :=make ([]*_ca .Bitmap ,_ecff );_daag :=NewGenericRegion (_cggd ._dgcf );_daag .setParametersMMR (_cggd .IsMMREncoded ,_cggd .DataOffset ,_cggd .DataLength ,_cggd .HGridHeight ,_cggd .HGridWidth ,_cggd .HTemplate ,false ,_cggd .HSkipEnabled ,_ebcg ,_bcf );
_efac :=_ecff -1;var _daddg error ;_deee [_efac ],_daddg =_daag .GetRegionBitmap ();if _daddg !=nil {return nil ,_daddg ;};for _efac > 0{_efac --;_daag .Bitmap =nil ;_deee [_efac ],_daddg =_daag .GetRegionBitmap ();if _daddg !=nil {return nil ,_daddg ;
};if _daddg =_cggd .combineGrayscalePlanes (_deee ,_efac );_daddg !=nil {return nil ,_daddg ;};};return _cggd .computeGrayScalePlanes (_deee ,_ecff );};func (_faae *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gbcd ,_bagc uint32 )error {if _faae ._acgb ==nil {_faae ._acgb =NewGenericRegion (_faae ._cgcb );
};_faae ._acgb .setParametersWithAt (false ,byte (_faae .SdTemplate ),false ,false ,_faae .SdATX ,_faae .SdATY ,_gbcd ,_bagc ,_faae ._acfg ,_faae ._bdff );return _faae .addSymbol (_faae ._acgb );};func (_ccdb *SymbolDictionary )setAtPixels ()error {if _ccdb .IsHuffmanEncoded {return nil ;
};_fegf :=1;if _ccdb .SdTemplate ==0{_fegf =4;};if _feeb :=_ccdb .readAtPixels (_fegf );_feeb !=nil {return _feeb ;};return nil ;};func (_faad *SymbolDictionary )decodeHeightClassBitmap (_gdca *_ca .Bitmap ,_gbef int64 ,_bccaa int ,_dfde []int )error {for _ebbf :=_gbef ;
_ebbf < int64 (_faad ._aegd );_ebbf ++{var _fgab int ;for _fged :=_gbef ;_fged <=_ebbf -1;_fged ++{_fgab +=_dfde [_fged ];};_ddfa :=_e .Rect (_fgab ,0,_fgab +_dfde [_ebbf ],_bccaa );_afdec ,_cea :=_ca .Extract (_ddfa ,_gdca );if _cea !=nil {return _cea ;
};_faad ._defc [_ebbf ]=_afdec ;_faad ._abca =append (_faad ._abca ,_afdec );};return nil ;};func (_eab *GenericRefinementRegion )decodeTemplate (_ed ,_cbcf ,_gad ,_ccc ,_ccb ,_cgc ,_cba ,_fbb ,_gdb ,_adb int ,_egae templater )(_ebf error ){var (_deg ,_gcb ,_bag ,_bcd ,_bbbf int16 ;
_feb ,_gba ,_dge ,_aaeb int ;_dace byte ;);if _gdb >=1&&(_gdb -1)< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -_ccc );if _ebf !=nil {return _ebf ;};_feb =int (_dace );};if _gdb >=0&&(_gdb )< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb );
if _ebf !=nil {return _ebf ;};_gba =int (_dace );};if _gdb >=-1&&(_gdb +1)< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb +_ccc );if _ebf !=nil {return _ebf ;};_dge =int (_dace );};_adb ++;if _ed >=1{_dace ,_ebf =_eab .RegionBitmap .GetByte (_fbb -_gad );
if _ebf !=nil {return _ebf ;};_aaeb =int (_dace );};_fbb ++;_gafb :=_eab .ReferenceDX %8;_bef :=6+_gafb ;_dgeg :=_adb %_ccc ;if _bef >=0{if _bef < 8{_deg =int16 (_feb >>uint (_bef ))&0x07;};if _bef < 8{_gcb =int16 (_gba >>uint (_bef ))&0x07;};if _bef < 8{_bag =int16 (_dge >>uint (_bef ))&0x07;
};if _bef ==6&&_dgeg > 1{if _gdb >=1&&(_gdb -1)< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -_ccc -2);if _ebf !=nil {return _ebf ;};_deg |=int16 (_dace <<2)&0x04;};if _gdb >=0&&_gdb < _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -2);
if _ebf !=nil {return _ebf ;};_gcb |=int16 (_dace <<2)&0x04;};if _gdb >=-1&&_gdb +1< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb +_ccc -2);if _ebf !=nil {return _ebf ;};_bag |=int16 (_dace <<2)&0x04;};};if _bef ==0{_feb =0;
_gba =0;_dge =0;if _dgeg < _ccc -1{if _gdb >=1&&_gdb -1< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -_ccc );if _ebf !=nil {return _ebf ;};_feb =int (_dace );};if _gdb >=0&&_gdb < _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb );
if _ebf !=nil {return _ebf ;};_gba =int (_dace );};if _gdb >=-1&&_gdb +1< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb +_ccc );if _ebf !=nil {return _ebf ;};_dge =int (_dace );};};_adb ++;};}else {_deg =int16 (_feb <<1)&0x07;
_gcb =int16 (_gba <<1)&0x07;_bag =int16 (_dge <<1)&0x07;_feb =0;_gba =0;_dge =0;if _dgeg < _ccc -1{if _gdb >=1&&_gdb -1< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -_ccc );if _ebf !=nil {return _ebf ;};_feb =int (_dace );
};if _gdb >=0&&_gdb < _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb );if _ebf !=nil {return _ebf ;};_gba =int (_dace );};if _gdb >=-1&&_gdb +1< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb +_ccc );
if _ebf !=nil {return _ebf ;};_dge =int (_dace );};_adb ++;};_deg |=int16 ((_feb >>7)&0x07);_gcb |=int16 ((_gba >>7)&0x07);_bag |=int16 ((_dge >>7)&0x07);};_bcd =int16 (_aaeb >>6);_bbbf =0;_acb :=(2-_gafb )%8;_feb <<=uint (_acb );_gba <<=uint (_acb );_dge <<=uint (_acb );
_aaeb <<=2;var _caf int ;for _cbad :=0;_cbad < _cbcf ;_cbad ++{_age :=_cbad &0x07;_dafc :=_egae .form (_deg ,_gcb ,_bag ,_bcd ,_bbbf );if _eab ._ef {_dace ,_ebf =_eab .RegionBitmap .GetByte (_eab .RegionBitmap .GetByteIndex (_cbad ,_ed ));if _ebf !=nil {return _ebf ;
};_eab ._ece .SetIndex (int32 (_eab .overrideAtTemplate0 (int (_dafc ),_cbad ,_ed ,int (_dace ),_age )));}else {_eab ._ece .SetIndex (int32 (_dafc ));};_caf ,_ebf =_eab ._ee .DecodeBit (_eab ._ece );if _ebf !=nil {return _ebf ;};if _ebf =_eab .RegionBitmap .SetPixel (_cbad ,_ed ,byte (_caf ));
_ebf !=nil {return _ebf ;};_deg =((_deg <<1)|0x01&int16 (_feb >>7))&0x07;_gcb =((_gcb <<1)|0x01&int16 (_gba >>7))&0x07;_bag =((_bag <<1)|0x01&int16 (_dge >>7))&0x07;_bcd =((_bcd <<1)|0x01&int16 (_aaeb >>7))&0x07;_bbbf =int16 (_caf );if (_cbad -int (_eab .ReferenceDX ))%8==5{_feb =0;
_gba =0;_dge =0;if ((_cbad -int (_eab .ReferenceDX ))/8)+1< _eab .ReferenceBitmap .RowStride {if _gdb >=1&&(_gdb -1)< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb -_ccc );if _ebf !=nil {return _ebf ;};_feb =int (_dace );
};if _gdb >=0&&_gdb < _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb );if _ebf !=nil {return _ebf ;};_gba =int (_dace );};if _gdb >=-1&&(_gdb +1)< _eab .ReferenceBitmap .Height {_dace ,_ebf =_eab .ReferenceBitmap .GetByte (_adb +_ccc );
if _ebf !=nil {return _ebf ;};_dge =int (_dace );};};_adb ++;}else {_feb <<=1;_gba <<=1;_dge <<=1;};if _age ==5&&_ed >=1{if ((_cbad >>3)+1)>=_eab .RegionBitmap .RowStride {_aaeb =0;}else {_dace ,_ebf =_eab .RegionBitmap .GetByte (_fbb -_gad );if _ebf !=nil {return _ebf ;
};_aaeb =int (_dace );};_fbb ++;}else {_aaeb <<=1;};};return nil ;};func (_daagb *Header )readReferredToSegmentNumbers (_ededg *_fd .Reader ,_faffc int )([]int ,error ){const _fgbb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cgf :=make ([]int ,_faffc );if _faffc > 0{_daagb .RTSegments =make ([]*Header ,_faffc );var (_deeee uint64 ;_fcb error ;);for _eecc :=0;_eecc < _faffc ;_eecc ++{_deeee ,_fcb =_ededg .ReadBits (byte (_daagb .referenceSize ())<<3);if _fcb !=nil {return nil ,_fc .Wrapf (_fcb ,_fgbb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_eecc );
};_cgf [_eecc ]=int (_deeee &_df .MaxInt32 );};};return _cgf ,nil ;};var _ templater =&template0 {};func (_fdab *GenericRegion )Size ()int {return _fdab .RegionSegment .Size ()+1+2*len (_fdab .GBAtX )};func (_fddg *SymbolDictionary )setRefinementAtPixels ()error {if !_fddg .UseRefinementAggregation ||_fddg .SdrTemplate !=0{return nil ;
};if _fcbcf :=_fddg .readRefinementAtPixels (2);_fcbcf !=nil {return _fcbcf ;};return nil ;};func (_bbbga *TextRegion )symbolIDCodeLengths ()error {var (_afda []*_bc .Code ;_ddeda uint64 ;_agcfc _bc .Tabler ;_dbfec error ;);for _becg :=0;_becg < 35;_becg ++{_ddeda ,_dbfec =_bbbga ._bfbf .ReadBits (4);
if _dbfec !=nil {return _dbfec ;};_afag :=int (_ddeda &0xf);if _afag > 0{_afda =append (_afda ,_bc .NewCode (int32 (_afag ),0,int32 (_becg ),false ));};};_agcfc ,_dbfec =_bc .NewFixedSizeTable (_afda );if _dbfec !=nil {return _dbfec ;};var (_ceefb int64 ;
_ccef uint32 ;_bbdb []*_bc .Code ;_edcc int64 ;);for _ccef < _bbbga .NumberOfSymbols {_edcc ,_dbfec =_agcfc .Decode (_bbbga ._bfbf );if _dbfec !=nil {return _dbfec ;};if _edcc < 32{if _edcc > 0{_bbdb =append (_bbdb ,_bc .NewCode (int32 (_edcc ),0,int32 (_ccef ),false ));
};_ceefb =_edcc ;_ccef ++;}else {var _abgd ,_aabeb int64 ;switch _edcc {case 32:_ddeda ,_dbfec =_bbbga ._bfbf .ReadBits (2);if _dbfec !=nil {return _dbfec ;};_abgd =3+int64 (_ddeda );if _ccef > 0{_aabeb =_ceefb ;};case 33:_ddeda ,_dbfec =_bbbga ._bfbf .ReadBits (3);
if _dbfec !=nil {return _dbfec ;};_abgd =3+int64 (_ddeda );case 34:_ddeda ,_dbfec =_bbbga ._bfbf .ReadBits (7);if _dbfec !=nil {return _dbfec ;};_abgd =11+int64 (_ddeda );};for _gcfg :=0;_gcfg < int (_abgd );_gcfg ++{if _aabeb > 0{_bbdb =append (_bbdb ,_bc .NewCode (int32 (_aabeb ),0,int32 (_ccef ),false ));
};_ccef ++;};};};_bbbga ._bfbf .Align ();_bbbga ._fgcg ,_dbfec =_bc .NewFixedSizeTable (_bbdb );return _dbfec ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_efbf *SymbolDictionary )Init (h *Header ,r *_fd .Reader )error {_efbf .Header =h ;
_efbf ._cgcb =r ;return _efbf .parseHeader ();};func (_beea *TextRegion )readUseRefinement ()error {if !_beea .UseRefinement ||_beea .SbrTemplate !=0{return nil ;};var (_fbfggb byte ;_feda error ;);_beea .SbrATX =make ([]int8 ,2);_beea .SbrATY =make ([]int8 ,2);
_fbfggb ,_feda =_beea ._bfbf .ReadByte ();if _feda !=nil {return _feda ;};_beea .SbrATX [0]=int8 (_fbfggb );_fbfggb ,_feda =_beea ._bfbf .ReadByte ();if _feda !=nil {return _feda ;};_beea .SbrATY [0]=int8 (_fbfggb );_fbfggb ,_feda =_beea ._bfbf .ReadByte ();
if _feda !=nil {return _feda ;};_beea .SbrATX [1]=int8 (_fbfggb );_fbfggb ,_feda =_beea ._bfbf .ReadByte ();if _feda !=nil {return _feda ;};_beea .SbrATY [1]=int8 (_fbfggb );return nil ;};type TableSegment struct{_cbabe *_fd .Reader ;_bcaa int32 ;_ccbgf int32 ;
_efgba int32 ;_cdacd int32 ;_cfa int32 ;};func (_aaad *SymbolDictionary )encodeSymbols (_bfab _fd .BinaryWriter )(_agegd int ,_cbd error ){const _ccbg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_cgd :=_a .New ();_cgd .Init ();
_dabc ,_cbd :=_aaad ._agcf .SelectByIndexes (_aaad ._fecd );if _cbd !=nil {return 0,_fc .Wrap (_cbd ,_ccbg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cgga :=map[*_ca .Bitmap ]int {};for _geagf ,_fcdb :=range _dabc .Values {_cgga [_fcdb ]=_geagf ;};_dabc .SortByHeight ();
var _ccffc ,_deda int ;_afb ,_cbd :=_dabc .GroupByHeight ();if _cbd !=nil {return 0,_fc .Wrap (_cbd ,_ccbg ,"");};for _ ,_ggge :=range _afb .Values {_fcde :=_ggge .Values [0].Height ;_gaebg :=_fcde -_ccffc ;if _cbd =_cgd .EncodeInteger (_a .IADH ,_gaebg );
_cbd !=nil {return 0,_fc .Wrapf (_cbd ,_ccbg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_gaebg );};_ccffc =_fcde ;_bdec ,_egfb :=_ggge .GroupByWidth ();if _egfb !=nil {return 0,_fc .Wrapf (_egfb ,_ccbg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcde );
};var _fgaf int ;for _ ,_cffff :=range _bdec .Values {for _ ,_gabgc :=range _cffff .Values {_ecdd :=_gabgc .Width ;_bcad :=_ecdd -_fgaf ;if _egfb =_cgd .EncodeInteger (_a .IADW ,_bcad );_egfb !=nil {return 0,_fc .Wrapf (_egfb ,_ccbg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bcad );
};_fgaf +=_bcad ;if _egfb =_cgd .EncodeBitmap (_gabgc ,false );_egfb !=nil {return 0,_fc .Wrapf (_egfb ,_ccbg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fcde ,_ecdd );};_bdd :=_cgga [_gabgc ];_aaad ._abea [_bdd ]=_deda ;
_deda ++;};};if _egfb =_cgd .EncodeOOB (_a .IADW );_egfb !=nil {return 0,_fc .Wrap (_egfb ,_ccbg ,"\u0049\u0041\u0044\u0057");};};if _cbd =_cgd .EncodeInteger (_a .IAEX ,0);_cbd !=nil {return 0,_fc .Wrap (_cbd ,_ccbg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _cbd =_cgd .EncodeInteger (_a .IAEX ,len (_aaad ._fecd ));_cbd !=nil {return 0,_fc .Wrap (_cbd ,_ccbg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cgd .Final ();_dccc ,_cbd :=_cgd .WriteTo (_bfab );
if _cbd !=nil {return 0,_fc .Wrap (_cbd ,_ccbg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_dccc ),nil ;
};func (_bbeb *TextRegion )GetRegionBitmap ()(*_ca .Bitmap ,error ){if _bbeb .RegionBitmap !=nil {return _bbeb .RegionBitmap ,nil ;};if !_bbeb .IsHuffmanEncoded {if _fafec :=_bbeb .setCodingStatistics ();_fafec !=nil {return nil ,_fafec ;};};if _eecf :=_bbeb .createRegionBitmap ();
_eecf !=nil {return nil ,_eecf ;};if _egec :=_bbeb .decodeSymbolInstances ();_egec !=nil {return nil ,_egec ;};return _bbeb .RegionBitmap ,nil ;};func (_cdfeg *PatternDictionary )readTemplate ()error {_eaf ,_egbd :=_cdfeg ._adga .ReadBits (2);if _egbd !=nil {return _egbd ;
};_cdfeg .HDTemplate =byte (_eaf );return nil ;};func (_efcg *TextRegion )computeSymbolCodeLength ()error {if _efcg .IsHuffmanEncoded {return _efcg .symbolIDCodeLengths ();};_efcg ._abab =int8 (_df .Ceil (_df .Log (float64 (_efcg .NumberOfSymbols ))/_df .Log (2)));
return nil ;};func (_abd *PageInformationSegment )readCombinationOperator ()error {_face ,_cfefg :=_abd ._dfcb .ReadBits (2);if _cfefg !=nil {return _cfefg ;};_abd ._fdgb =_ca .CombinationOperator (int (_face ));return nil ;};func (_afab *PatternDictionary )readIsMMREncoded ()error {_afac ,_cgae :=_afab ._adga .ReadBit ();
if _cgae !=nil {return _cgae ;};if _afac !=0{_afab .IsMMREncoded =true ;};return nil ;};func (_cceb *Header )readSegmentNumber (_edd *_fd .Reader )error {const _deagd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_fbcb :=make ([]byte ,4);_ ,_caff :=_edd .Read (_fbcb );if _caff !=nil {return _fc .Wrap (_caff ,_deagd ,"");};_cceb .SegmentNumber =_g .BigEndian .Uint32 (_fbcb );return nil ;};func (_eeefe *TextRegion )readAmountOfSymbolInstances ()error {_defb ,_egfa :=_eeefe ._bfbf .ReadBits (32);
if _egfa !=nil {return _egfa ;};_eeefe .NumberOfSymbolInstances =uint32 (_defb &_df .MaxUint32 );_eead :=_eeefe .RegionInfo .BitmapWidth *_eeefe .RegionInfo .BitmapHeight ;if _eead < _eeefe .NumberOfSymbolInstances {_aa .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_eead ,_eeefe .NumberOfSymbolInstances );
_eeefe .NumberOfSymbolInstances =_eead ;};return nil ;};func (_gede *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ca .Points ,symbols *_ca .Bitmaps ,classIDs *_b .IntSlice ,boxes *_ca .Boxes ,width ,height ,symBits int ){_gede .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_gede ._aafd =globalSymbolsMap ;_gede ._bfdd =localSymbolsMap ;_gede ._aege =comps ;_gede ._ecac =inLL ;_gede ._dgea =symbols ;_gede ._efcf =classIDs ;_gede ._dbedc =boxes ;_gede ._febe =symBits ;};func (_bead *PatternDictionary )GetDictionary ()([]*_ca .Bitmap ,error ){if _bead .Patterns !=nil {return _bead .Patterns ,nil ;
};if !_bead .IsMMREncoded {_bead .setGbAtPixels ();};_bcdc :=NewGenericRegion (_bead ._adga );_bcdc .setParametersMMR (_bead .IsMMREncoded ,_bead .DataOffset ,_bead .DataLength ,uint32 (_bead .HdpHeight ),(_bead .GrayMax +1)*uint32 (_bead .HdpWidth ),_bead .HDTemplate ,false ,false ,_bead .GBAtX ,_bead .GBAtY );
_abfa ,_aabc :=_bcdc .GetRegionBitmap ();if _aabc !=nil {return nil ,_aabc ;};if _aabc =_bead .extractPatterns (_abfa );_aabc !=nil {return nil ,_aabc ;};return _bead .Patterns ,nil ;};func (_gfdb *TableSegment )HtHigh ()int32 {return _gfdb ._cfa };func _ffb (_ede *_fd .Reader ,_ffc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_da :_ede ,RegionInfo :NewRegionSegment (_ede ),_dfd :_ffc ,_faa :&template0 {},_bf :&template1 {}};
};func (_bfb *GenericRegion )decodeTemplate1 (_dcfe ,_cda ,_aeff int ,_aaf ,_gbcc int )(_ddbg error ){const _ecbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_dbe ,_fcdf int ;_gdc ,_eccd int ;_abbd byte ;_efe ,_baab int ;
);if _dcfe >=1{_abbd ,_ddbg =_bfb .Bitmap .GetByte (_gbcc );if _ddbg !=nil {return _fc .Wrap (_ddbg ,_ecbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gdc =int (_abbd );};if _dcfe >=2{_abbd ,_ddbg =_bfb .Bitmap .GetByte (_gbcc -_bfb .Bitmap .RowStride );
if _ddbg !=nil {return _fc .Wrap (_ddbg ,_ecbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_eccd =int (_abbd )<<5;};_dbe =((_gdc >>1)&0x1f8)|((_eccd >>1)&0x1e00);for _dcc :=0;_dcc < _aeff ;_dcc =_efe {var (_cdfe byte ;_aafg int ;);_efe =_dcc +8;
if _aea :=_cda -_dcc ;_aea > 8{_aafg =8;}else {_aafg =_aea ;};if _dcfe > 0{_gdc <<=8;if _efe < _cda {_abbd ,_ddbg =_bfb .Bitmap .GetByte (_gbcc +1);if _ddbg !=nil {return _fc .Wrap (_ddbg ,_ecbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gdc |=int (_abbd );
};};if _dcfe > 1{_eccd <<=8;if _efe < _cda {_abbd ,_ddbg =_bfb .Bitmap .GetByte (_gbcc -_bfb .Bitmap .RowStride +1);if _ddbg !=nil {return _fc .Wrap (_ddbg ,_ecbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_eccd |=int (_abbd )<<5;};};for _ggc :=0;
_ggc < _aafg ;_ggc ++{if _bfb ._efb {_fcdf =_bfb .overrideAtTemplate1 (_dbe ,_dcc +_ggc ,_dcfe ,int (_cdfe ),_ggc );_bfb ._baa .SetIndex (int32 (_fcdf ));}else {_bfb ._baa .SetIndex (int32 (_dbe ));};_baab ,_ddbg =_bfb ._fgd .DecodeBit (_bfb ._baa );if _ddbg !=nil {return _fc .Wrap (_ddbg ,_ecbf ,"");
};_cdfe |=byte (_baab )<<uint (7-_ggc );_gaef :=uint (8-_ggc );_dbe =((_dbe &0xefb)<<1)|_baab |((_gdc >>_gaef )&0x8)|((_eccd >>_gaef )&0x200);};if _geec :=_bfb .Bitmap .SetByte (_aaf ,_cdfe );_geec !=nil {return _fc .Wrap (_geec ,_ecbf ,"");};_aaf ++;_gbcc ++;
};return nil ;};func (_efgcc *TableSegment )StreamReader ()*_fd .Reader {return _efgcc ._cbabe };func (_ffdc *PageInformationSegment )encodeStripingInformation (_afde _fd .BinaryWriter )(_gfdg int ,_fbgb error ){const _gcfc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ffdc .IsStripe {if _gfdg ,_fbgb =_afde .Write ([]byte {0x00,0x00});_fbgb !=nil {return 0,_fc .Wrap (_fbgb ,_gcfc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gfdg ,nil ;};_dged :=make ([]byte ,2);_g .BigEndian .PutUint16 (_dged ,_ffdc .MaxStripeSize |1<<15);
if _gfdg ,_fbgb =_afde .Write (_dged );_fbgb !=nil {return 0,_fc .Wrapf (_fbgb ,_gcfc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ffdc .MaxStripeSize );};return _gfdg ,nil ;};func (_dcecb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dcecb .IsHuffmanEncoded {switch _dcecb .SdHuffDecodeWidthSelection {case 0:_fdbbb ,_fbeb :=_bc .GetStandardTable (2);
if _fbeb !=nil {return 0,_fbeb ;};return _fdbbb .Decode (_dcecb ._cgcb );case 1:_beed ,_acab :=_bc .GetStandardTable (3);if _acab !=nil {return 0,_acab ;};return _beed .Decode (_dcecb ._cgcb );case 3:if _dcecb ._bfaf ==nil {var _dagb int ;if _dcecb .SdHuffDecodeHeightSelection ==3{_dagb ++;
};_aeda ,_acec :=_dcecb .getUserTable (_dagb );if _acec !=nil {return 0,_acec ;};_dcecb ._bfaf =_aeda ;};return _dcecb ._bfaf .Decode (_dcecb ._cgcb );};}else {_gaab ,_ebba :=_dcecb ._bdff .DecodeInt (_dcecb ._agbb );if _ebba !=nil {return 0,_ebba ;};return int64 (_gaab ),nil ;
};return 0,nil ;};func (_ddbgc *Header )readHeaderFlags ()error {const _ggdf ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_cece ,_bdeg :=_ddbgc .Reader .ReadBit ();if _bdeg !=nil {return _fc .Wrap (_bdeg ,_ggdf ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _cece !=0{_ddbgc .RetainFlag =true ;};_cece ,_bdeg =_ddbgc .Reader .ReadBit ();if _bdeg !=nil {return _fc .Wrap (_bdeg ,_ggdf ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _cece !=0{_ddbgc .PageAssociationFieldSize =true ;
};_ffg ,_bdeg :=_ddbgc .Reader .ReadBits (6);if _bdeg !=nil {return _fc .Wrap (_bdeg ,_ggdf ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ddbgc .Type =Type (int (_ffg ));return nil ;};func (_cgag *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gcgd int ;
_dbcbc int32 ;_eega error ;_afaf =int32 (_cgag ._abdb +_cgag .NumberOfNewSymbols );_daac =make ([]int ,_afaf ););for _gebd :=int32 (0);_gebd < _afaf ;_gebd +=_dbcbc {if _cgag .IsHuffmanEncoded {_fggd ,_gbcdg :=_bc .GetStandardTable (1);if _gbcdg !=nil {return nil ,_gbcdg ;
};_baec ,_gbcdg :=_fggd .Decode (_cgag ._cgcb );if _gbcdg !=nil {return nil ,_gbcdg ;};_dbcbc =int32 (_baec );}else {_dbcbc ,_eega =_cgag ._bdff .DecodeInt (_cgag ._eefa );if _eega !=nil {return nil ,_eega ;};};if _dbcbc !=0{if _gebd +_dbcbc > _afaf {return nil ,_fc .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _aage :=_gebd ;_aage < _gebd +_dbcbc ;_aage ++{_daac [_aage ]=_gcgd ;};};if _gcgd ==0{_gcgd =1;}else {_gcgd =0;};};return _daac ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ca .Bitmap ,error );};func (_aff *GenericRegion )GetRegionBitmap ()(_dba *_ca .Bitmap ,_addc error ){if _aff .Bitmap !=nil {return _aff .Bitmap ,nil ;
};if _aff .IsMMREncoded {if _aff ._cged ==nil {_aff ._cged ,_addc =_gb .New (_aff ._fee ,int (_aff .RegionSegment .BitmapWidth ),int (_aff .RegionSegment .BitmapHeight ),_aff .DataOffset ,_aff .DataLength );if _addc !=nil {return nil ,_addc ;};};_aff .Bitmap ,_addc =_aff ._cged .UncompressMMR ();
return _aff .Bitmap ,_addc ;};if _addc =_aff .updateOverrideFlags ();_addc !=nil {return nil ,_addc ;};var _geef int ;if _aff ._fgd ==nil {_aff ._fgd ,_addc =_fe .New (_aff ._fee );if _addc !=nil {return nil ,_addc ;};};if _aff ._baa ==nil {_aff ._baa =_fe .NewStats (65536,1);
};_aff .Bitmap =_ca .New (int (_aff .RegionSegment .BitmapWidth ),int (_aff .RegionSegment .BitmapHeight ));_cga :=int (uint32 (_aff .Bitmap .Width +7)&(^uint32 (7)));for _agf :=0;_agf < _aff .Bitmap .Height ;_agf ++{if _aff .IsTPGDon {var _dbag int ;_dbag ,_addc =_aff .decodeSLTP ();
if _addc !=nil {return nil ,_addc ;};_geef ^=_dbag ;};if _geef ==1{if _agf > 0{if _addc =_aff .copyLineAbove (_agf );_addc !=nil {return nil ,_addc ;};};}else {if _addc =_aff .decodeLine (_agf ,_aff .Bitmap .Width ,_cga );_addc !=nil {return nil ,_addc ;
};};};return _aff .Bitmap ,nil ;};type RegionSegment struct{_ccag *_fd .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ca .CombinationOperator ;};func (_cfgae *PageInformationSegment )readIsStriped ()error {_edfc ,_badg :=_cfgae ._dfcb .ReadBit ();
if _badg !=nil {return _badg ;};if _edfc ==1{_cfgae .IsStripe =true ;};return nil ;};func (_egbdb *TableSegment )HtRS ()int32 {return _egbdb ._efgba };func (_agga *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _fcdc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _agga .SbHuffRSize ==0{_fbdd ,_edcg :=_bc .GetStandardTable (1);if _edcg !=nil {return 0,_fc .Wrap (_edcg ,_fcdc ,"");};return _fbdd .Decode (_agga ._bfbf );};if _agga ._dgaag ==nil {var (_bcbd int ;_eaeb error ;);if _agga .SbHuffFS ==3{_bcbd ++;};if _agga .SbHuffDS ==3{_bcbd ++;
};if _agga .SbHuffDT ==3{_bcbd ++;};if _agga .SbHuffRDWidth ==3{_bcbd ++;};if _agga .SbHuffRDHeight ==3{_bcbd ++;};if _agga .SbHuffRDX ==3{_bcbd ++;};if _agga .SbHuffRDY ==3{_bcbd ++;};_agga ._dgaag ,_eaeb =_agga .getUserTable (_bcbd );if _eaeb !=nil {return 0,_fc .Wrap (_eaeb ,_fcdc ,"");
};};_edgg ,_dbbg :=_agga ._dgaag .Decode (_agga ._bfbf );if _dbbg !=nil {return 0,_fc .Wrap (_dbbg ,_fcdc ,"");};return _edgg ,nil ;};func (_gecb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_adbb ,_baaa :=_gecb ._dfcb .ReadBit ();if _baaa !=nil {return _baaa ;
};if _adbb ==1{_gecb ._daga =true ;};return nil ;};func (_aeg *GenericRefinementRegion )String ()string {_adc :=&_dg .Builder {};_adc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_adc .WriteString (_aeg .RegionInfo .String ()+"\u000a");
_adc .WriteString (_db .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aeg .IsTPGROn ));_adc .WriteString (_db .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_aeg .TemplateID ));
_adc .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aeg .GrAtX ));_adc .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aeg .GrAtY ));
_adc .WriteString (_db .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_aeg .ReferenceDX ));_adc .WriteString (_db .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_aeg .ReferenceDY ));
return _adc .String ();};func (_eeb *GenericRegion )decodeLine (_agb ,_bab ,_fbc int )error {const _ada ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_bee :=_eeb .Bitmap .GetByteIndex (0,_agb );_gcdc :=_bee -_eeb .Bitmap .RowStride ;switch _eeb .GBTemplate {case 0:if !_eeb .UseExtTemplates {return _eeb .decodeTemplate0a (_agb ,_bab ,_fbc ,_bee ,_gcdc );
};return _eeb .decodeTemplate0b (_agb ,_bab ,_fbc ,_bee ,_gcdc );case 1:return _eeb .decodeTemplate1 (_agb ,_bab ,_fbc ,_bee ,_gcdc );case 2:return _eeb .decodeTemplate2 (_agb ,_bab ,_fbc ,_bee ,_gcdc );case 3:return _eeb .decodeTemplate3 (_agb ,_bab ,_fbc ,_bee ,_gcdc );
};return _fc .Errorf (_ada ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_eeb .GBTemplate );};func (_adcf *TextRegion )decodeID ()(int64 ,error ){if _adcf .IsHuffmanEncoded {if _adcf ._fgcg ==nil {_cfcd ,_dadc :=_adcf ._bfbf .ReadBits (byte (_adcf ._abab ));
return int64 (_cfcd ),_dadc ;};return _adcf ._fgcg .Decode (_adcf ._bfbf );};return _adcf ._gcdaba .DecodeIAID (uint64 (_adcf ._abab ),_adcf ._ddc );};func (_fa *EndOfStripe )LineNumber ()int {return _fa ._ge };type PageInformationSegment struct{_dfcb *_fd .Reader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_agae bool ;_fdgb _ca .CombinationOperator ;_daga bool ;DefaultPixelValue uint8 ;_affb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_edda *TextRegion )decodeDfs ()(int64 ,error ){if _edda .IsHuffmanEncoded {if _edda .SbHuffFS ==3{if _edda ._afgb ==nil {var _gfad error ;
_edda ._afgb ,_gfad =_edda .getUserTable (0);if _gfad !=nil {return 0,_gfad ;};};return _edda ._afgb .Decode (_edda ._bfbf );};_cgbb ,_bgdb :=_bc .GetStandardTable (6+int (_edda .SbHuffFS ));if _bgdb !=nil {return 0,_bgdb ;};return _cgbb .Decode (_edda ._bfbf );
};_aaebc ,_cbdd :=_edda ._gcdaba .DecodeInt (_edda ._efec );if _cbdd !=nil {return 0,_cbdd ;};return int64 (_aaebc ),nil ;};func (_dgcc *Header )GetSegmentData ()(Segmenter ,error ){var _daaa Segmenter ;if _dgcc .SegmentData !=nil {_daaa =_dgcc .SegmentData ;
};if _daaa ==nil {_gddf ,_ddbb :=_aeca [_dgcc .Type ];if !_ddbb {return nil ,_db .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dgcc .Type ,_dgcc .Type );
};_daaa =_gddf ();_aa .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dgcc .SegmentNumber ,_dgcc .SegmentDataStartOffset );
_eefb ,_bdg :=_dgcc .subInputReader ();if _bdg !=nil {return nil ,_bdg ;};if _edg :=_daaa .Init (_dgcc ,_eefb );_edg !=nil {_aa .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_edg ,_daaa );
return nil ,_edg ;};_dgcc .SegmentData =_daaa ;};return _daaa ,nil ;};func (_acgd *PageInformationSegment )readIsLossless ()error {_fbbg ,_adfa :=_acgd ._dfcb .ReadBit ();if _adfa !=nil {return _adfa ;};if _fbbg ==1{_acgd .IsLossless =true ;};return nil ;
};func (_dbb *PageInformationSegment )readMaxStripeSize ()error {_eeeba ,_eaca :=_dbb ._dfcb .ReadBits (15);if _eaca !=nil {return _eaca ;};_dbb .MaxStripeSize =uint16 (_eeeba &_df .MaxUint16 );return nil ;};func (_fdag *Header )readSegmentPageAssociation (_abag Documenter ,_bccg *_fd .Reader ,_cfee uint64 ,_cgfc ...int )(_deaf error ){const _bebf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fdag .PageAssociationFieldSize {_cbaf ,_bcaca :=_bccg .ReadBits (8);if _bcaca !=nil {return _fc .Wrap (_bcaca ,_bebf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fdag .PageAssociation =int (_cbaf &0xFF);}else {_gdbb ,_efgc :=_bccg .ReadBits (32);
if _efgc !=nil {return _fc .Wrap (_efgc ,_bebf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fdag .PageAssociation =int (_gdbb &_df .MaxInt32 );};if _cfee ==0{return nil ;};if _fdag .PageAssociation !=0{_dbab ,_afg :=_abag .GetPage (_fdag .PageAssociation );
if _afg !=nil {return _fc .Wrap (_afg ,_bebf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _bgbf int ;for _bbed :=uint64 (0);_bbed < _cfee ;_bbed ++{_bgbf =_cgfc [_bbed ];
_fdag .RTSegments [_bbed ],_afg =_dbab .GetSegment (_bgbf );if _afg !=nil {var _fgfb error ;_fdag .RTSegments [_bbed ],_fgfb =_abag .GetGlobalSegment (_bgbf );if _fgfb !=nil {return _fc .Wrapf (_afg ,_bebf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fdag .PageAssociation );
};};};return nil ;};for _gggd :=uint64 (0);_gggd < _cfee ;_gggd ++{_fdag .RTSegments [_gggd ],_deaf =_abag .GetGlobalSegment (_cgfc [_gggd ]);if _deaf !=nil {return _fc .Wrapf (_deaf ,_bebf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cgfc [_gggd ]);
};};return nil ;};func (_eea *Header )readHeaderLength (_gffc *_fd .Reader ,_facc int64 ){_eea .HeaderLength =_gffc .AbsolutePosition ()-_facc ;};func (_dbbc *SymbolDictionary )setExportedSymbols (_gdec []int ){for _gded :=uint32 (0);_gded < _dbbc ._abdb +_dbbc .NumberOfNewSymbols ;
_gded ++{if _gdec [_gded ]==1{var _egd *_ca .Bitmap ;if _gded < _dbbc ._abdb {_egd =_dbbc ._ceec [_gded ];}else {_egd =_dbbc ._defc [_gded -_dbbc ._abdb ];};_aa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_egd );
_dbbc ._eaec =append (_dbbc ._eaec ,_egd );};};};func (_fggb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _fggb .SdHuffDecodeHeightSelection {case 0:_dddf ,_fdfa :=_bc .GetStandardTable (4);if _fdfa !=nil {return 0,_fdfa ;
};return _dddf .Decode (_fggb ._cgcb );case 1:_becb ,_dfcc :=_bc .GetStandardTable (5);if _dfcc !=nil {return 0,_dfcc ;};return _becb .Decode (_fggb ._cgcb );case 3:if _fggb ._bbga ==nil {_cdef ,_affg :=_bc .GetStandardTable (0);if _affg !=nil {return 0,_affg ;
};_fggb ._bbga =_cdef ;};return _fggb ._bbga .Decode (_fggb ._cgcb );};return 0,nil ;};func (_dgff *TextRegion )setCodingStatistics ()error {if _dgff ._cfgaf ==nil {_dgff ._cfgaf =_fe .NewStats (512,1);};if _dgff ._efec ==nil {_dgff ._efec =_fe .NewStats (512,1);
};if _dgff ._bge ==nil {_dgff ._bge =_fe .NewStats (512,1);};if _dgff ._cfgfe ==nil {_dgff ._cfgfe =_fe .NewStats (512,1);};if _dgff ._cacd ==nil {_dgff ._cacd =_fe .NewStats (512,1);};if _dgff ._ccega ==nil {_dgff ._ccega =_fe .NewStats (512,1);};if _dgff ._ecda ==nil {_dgff ._ecda =_fe .NewStats (512,1);
};if _dgff ._ddc ==nil {_dgff ._ddc =_fe .NewStats (1<<uint (_dgff ._abab ),1);};if _dgff ._fbbce ==nil {_dgff ._fbbce =_fe .NewStats (512,1);};if _dgff ._dfaf ==nil {_dgff ._dfaf =_fe .NewStats (512,1);};if _dgff ._gcdaba ==nil {var _agdc error ;_dgff ._gcdaba ,_agdc =_fe .New (_dgff ._bfbf );
if _agdc !=nil {return _agdc ;};};return nil ;};func NewGenericRegion (r *_fd .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fee :r };};func (_fac *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_eec ,_cad ,_bed ,_cdc ,_abf ,_cb ,_af ,_gag ,_bec int )error {var (_aef ,_gc ,_bb ,_de ,_dga ,_dab int ;
_ead byte ;_cag error ;);if _eec > 0{_ead ,_cag =_fac .RegionBitmap .GetByte (_af -_bed );if _cag !=nil {return _cag ;};_bb =int (_ead );};if _gag > 0&&_gag <=_fac .ReferenceBitmap .Height {_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec -_cdc +_cb );
if _cag !=nil {return _cag ;};_de =int (_ead )<<4;};if _gag >=0&&_gag < _fac .ReferenceBitmap .Height {_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec +_cb );if _cag !=nil {return _cag ;};_dga =int (_ead )<<1;};if _gag > -2&&_gag < _fac .ReferenceBitmap .Height -1{_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec +_cdc +_cb );
if _cag !=nil {return _cag ;};_dab =int (_ead );};_aef =((_bb >>5)&0x6)|((_dab >>2)&0x30)|(_dga &0x180)|(_de &0xc00);var _cfc int ;for _eced :=0;_eced < _abf ;_eced =_cfc {var _bca int ;_cfc =_eced +8;var _ceg int ;if _ceg =_cad -_eced ;_ceg > 8{_ceg =8;
};_eff :=_cfc < _cad ;_fcag :=_cfc < _fac .ReferenceBitmap .Width ;_afa :=_cb +1;if _eec > 0{_ead =0;if _eff {_ead ,_cag =_fac .RegionBitmap .GetByte (_af -_bed +1);if _cag !=nil {return _cag ;};};_bb =(_bb <<8)|int (_ead );};if _gag > 0&&_gag <=_fac .ReferenceBitmap .Height {var _fde int ;
if _fcag {_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec -_cdc +_afa );if _cag !=nil {return _cag ;};_fde =int (_ead )<<4;};_de =(_de <<8)|_fde ;};if _gag >=0&&_gag < _fac .ReferenceBitmap .Height {var _dce int ;if _fcag {_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec +_afa );
if _cag !=nil {return _cag ;};_dce =int (_ead )<<1;};_dga =(_dga <<8)|_dce ;};if _gag > -2&&_gag < (_fac .ReferenceBitmap .Height -1){_ead =0;if _fcag {_ead ,_cag =_fac .ReferenceBitmap .GetByte (_bec +_cdc +_afa );if _cag !=nil {return _cag ;};};_dab =(_dab <<8)|int (_ead );
};for _cbe :=0;_cbe < _ceg ;_cbe ++{var _aae int ;_fbf :=false ;_egg :=(_aef >>4)&0x1ff;if _egg ==0x1ff{_fbf =true ;_aae =1;}else if _egg ==0x00{_fbf =true ;};if !_fbf {if _fac ._ef {_gc =_fac .overrideAtTemplate0 (_aef ,_eced +_cbe ,_eec ,_bca ,_cbe );
_fac ._ece .SetIndex (int32 (_gc ));}else {_fac ._ece .SetIndex (int32 (_aef ));};_aae ,_cag =_fac ._ee .DecodeBit (_fac ._ece );if _cag !=nil {return _cag ;};};_abe :=uint (7-_cbe );_bca |=_aae <<_abe ;_aef =((_aef &0xdb6)<<1)|_aae |(_bb >>_abe +5)&0x002|((_dab >>_abe +2)&0x010)|((_dga >>_abe )&0x080)|((_de >>_abe )&0x400);
};_cag =_fac .RegionBitmap .SetByte (_af ,byte (_bca ));if _cag !=nil {return _cag ;};_af ++;_bec ++;};return nil ;};func (_befd *GenericRegion )decodeTemplate3 (_dege ,_egfd ,_ebec int ,_caa ,_faag int )(_gbg error ){const _dacea ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_gefe ,_gbfd int ;_dbd int ;_eeff byte ;_fdbb ,_cfdf int ;);if _dege >=1{_eeff ,_gbg =_befd .Bitmap .GetByte (_faag );if _gbg !=nil {return _fc .Wrap (_gbg ,_dacea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dbd =int (_eeff );};_gefe =(_dbd >>1)&0x70;
for _ccec :=0;_ccec < _ebec ;_ccec =_fdbb {var (_gadf byte ;_fbe int ;);_fdbb =_ccec +8;if _gcg :=_egfd -_ccec ;_gcg > 8{_fbe =8;}else {_fbe =_gcg ;};if _dege >=1{_dbd <<=8;if _fdbb < _egfd {_eeff ,_gbg =_befd .Bitmap .GetByte (_faag +1);if _gbg !=nil {return _fc .Wrap (_gbg ,_dacea ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dbd |=int (_eeff );};};for _eac :=0;_eac < _fbe ;_eac ++{if _befd ._efb {_gbfd =_befd .overrideAtTemplate3 (_gefe ,_ccec +_eac ,_dege ,int (_gadf ),_eac );_befd ._baa .SetIndex (int32 (_gbfd ));}else {_befd ._baa .SetIndex (int32 (_gefe ));};_cfdf ,_gbg =_befd ._fgd .DecodeBit (_befd ._baa );
if _gbg !=nil {return _fc .Wrap (_gbg ,_dacea ,"");};_gadf |=byte (_cfdf )<<byte (7-_eac );_gefe =((_gefe &0x1f7)<<1)|_cfdf |((_dbd >>uint (8-_eac ))&0x010);};if _dece :=_befd .Bitmap .SetByte (_caa ,_gadf );_dece !=nil {return _fc .Wrap (_dece ,_dacea ,"");
};_caa ++;_faag ++;};return nil ;};func (_ggcb *PageInformationSegment )CombinationOperator ()_ca .CombinationOperator {return _ggcb ._fdgb ;};func (_cgbe *TextRegion )decodeRdh ()(int64 ,error ){const _fcbbg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _cgbe .IsHuffmanEncoded {if _cgbe .SbHuffRDHeight ==3{if _cgbe ._gfgd ==nil {var (_cgcbc int ;_dbca error ;);if _cgbe .SbHuffFS ==3{_cgcbc ++;};if _cgbe .SbHuffDS ==3{_cgcbc ++;};if _cgbe .SbHuffDT ==3{_cgcbc ++;};if _cgbe .SbHuffRDWidth ==3{_cgcbc ++;
};_cgbe ._gfgd ,_dbca =_cgbe .getUserTable (_cgcbc );if _dbca !=nil {return 0,_fc .Wrap (_dbca ,_fcbbg ,"");};};return _cgbe ._gfgd .Decode (_cgbe ._bfbf );};_fcef ,_ggcfd :=_bc .GetStandardTable (14+int (_cgbe .SbHuffRDHeight ));if _ggcfd !=nil {return 0,_fc .Wrap (_ggcfd ,_fcbbg ,"");
};return _fcef .Decode (_cgbe ._bfbf );};_edae ,_dgfa :=_cgbe ._gcdaba .DecodeInt (_cgbe ._ecda );if _dgfa !=nil {return 0,_fc .Wrap (_dgfa ,_fcbbg ,"");};return int64 (_edae ),nil ;};func (_baeb *RegionSegment )readCombinationOperator ()error {_cdgg ,_dcfb :=_baeb ._ccag .ReadBits (3);
if _dcfb !=nil {return _dcfb ;};_baeb .CombinaionOperator =_ca .CombinationOperator (_cdgg &0xF);return nil ;};func (_geag *Header )pageSize ()uint {if _geag .PageAssociation <=255{return 1;};return 4;};func (_aeab *GenericRegion )decodeTemplate2 (_fegb ,_cggc ,_eag int ,_geb ,_aebd int )(_egf error ){const _gef ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cbab ,_ebe int ;_efc ,_aaed int ;_fcf byte ;_agfc ,_bgga int ;);if _fegb >=1{_fcf ,_egf =_aeab .Bitmap .GetByte (_aebd );if _egf !=nil {return _fc .Wrap (_egf ,_gef ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_efc =int (_fcf );};if _fegb >=2{_fcf ,_egf =_aeab .Bitmap .GetByte (_aebd -_aeab .Bitmap .RowStride );if _egf !=nil {return _fc .Wrap (_egf ,_gef ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_aaed =int (_fcf )<<4;
};_cbab =(_efc >>3&0x7c)|(_aaed >>3&0x380);for _dae :=0;_dae < _eag ;_dae =_agfc {var (_bcac byte ;_cedf int ;);_agfc =_dae +8;if _gbaf :=_cggc -_dae ;_gbaf > 8{_cedf =8;}else {_cedf =_gbaf ;};if _fegb > 0{_efc <<=8;if _agfc < _cggc {_fcf ,_egf =_aeab .Bitmap .GetByte (_aebd +1);
if _egf !=nil {return _fc .Wrap (_egf ,_gef ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_efc |=int (_fcf );};};if _fegb > 1{_aaed <<=8;if _agfc < _cggc {_fcf ,_egf =_aeab .Bitmap .GetByte (_aebd -_aeab .Bitmap .RowStride +1);
if _egf !=nil {return _fc .Wrap (_egf ,_gef ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_aaed |=int (_fcf )<<4;};};for _bbbc :=0;_bbbc < _cedf ;_bbbc ++{_eegc :=uint (10-_bbbc );if _aeab ._efb {_ebe =_aeab .overrideAtTemplate2 (_cbab ,_dae +_bbbc ,_fegb ,int (_bcac ),_bbbc );
_aeab ._baa .SetIndex (int32 (_ebe ));}else {_aeab ._baa .SetIndex (int32 (_cbab ));};_bgga ,_egf =_aeab ._fgd .DecodeBit (_aeab ._baa );if _egf !=nil {return _fc .Wrap (_egf ,_gef ,"");};_bcac |=byte (_bgga <<uint (7-_bbbc ));_cbab =((_cbab &0x1bd)<<1)|_bgga |((_efc >>_eegc )&0x4)|((_aaed >>_eegc )&0x80);
};if _fga :=_aeab .Bitmap .SetByte (_geb ,_bcac );_fga !=nil {return _fc .Wrap (_fga ,_gef ,"");};_geb ++;_aebd ++;};return nil ;};func (_dbfbf *TextRegion )readRegionFlags ()error {var (_faee int ;_eeec uint64 ;_bfff error ;);_faee ,_bfff =_dbfbf ._bfbf .ReadBit ();
if _bfff !=nil {return _bfff ;};_dbfbf .SbrTemplate =int8 (_faee );_eeec ,_bfff =_dbfbf ._bfbf .ReadBits (5);if _bfff !=nil {return _bfff ;};_dbfbf .SbDsOffset =int8 (_eeec );if _dbfbf .SbDsOffset > 0x0f{_dbfbf .SbDsOffset -=0x20;};_faee ,_bfff =_dbfbf ._bfbf .ReadBit ();
if _bfff !=nil {return _bfff ;};_dbfbf .DefaultPixel =int8 (_faee );_eeec ,_bfff =_dbfbf ._bfbf .ReadBits (2);if _bfff !=nil {return _bfff ;};_dbfbf .CombinationOperator =_ca .CombinationOperator (int (_eeec )&0x3);_faee ,_bfff =_dbfbf ._bfbf .ReadBit ();
if _bfff !=nil {return _bfff ;};_dbfbf .IsTransposed =int8 (_faee );_eeec ,_bfff =_dbfbf ._bfbf .ReadBits (2);if _bfff !=nil {return _bfff ;};_dbfbf .ReferenceCorner =int16 (_eeec )&0x3;_eeec ,_bfff =_dbfbf ._bfbf .ReadBits (2);if _bfff !=nil {return _bfff ;
};_dbfbf .LogSBStrips =int16 (_eeec )&0x3;_dbfbf .SbStrips =1<<uint (_dbfbf .LogSBStrips );_faee ,_bfff =_dbfbf ._bfbf .ReadBit ();if _bfff !=nil {return _bfff ;};if _faee ==1{_dbfbf .UseRefinement =true ;};_faee ,_bfff =_dbfbf ._bfbf .ReadBit ();if _bfff !=nil {return _bfff ;
};if _faee ==1{_dbfbf .IsHuffmanEncoded =true ;};return nil ;};func (_gdde *Header )writeSegmentPageAssociation (_fadf _fd .BinaryWriter )(_gcce int ,_aegbf error ){const _dgdf ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gdde .pageSize ()!=4{if _aegbf =_fadf .WriteByte (byte (_gdde .PageAssociation ));_aegbf !=nil {return 0,_fc .Wrap (_aegbf ,_dgdf ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eaed :=make ([]byte ,4);
_g .BigEndian .PutUint32 (_eaed ,uint32 (_gdde .PageAssociation ));if _gcce ,_aegbf =_fadf .Write (_eaed );_aegbf !=nil {return 0,_fc .Wrap (_aegbf ,_dgdf ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _gcce ,nil ;
};func (_cbacd *SymbolDictionary )setInSyms ()error {if _cbacd .Header .RTSegments !=nil {return _cbacd .retrieveImportSymbols ();};_cbacd ._ceec =make ([]*_ca .Bitmap ,0);return nil ;};var _ templater =&template1 {};func (_bfcfg *SymbolDictionary )parseHeader ()(_ffab error ){_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ffab !=nil {_aa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ffab );
}else {_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ffab =_bfcfg .readRegionFlags ();_ffab !=nil {return _ffab ;};if _ffab =_bfcfg .setAtPixels ();_ffab !=nil {return _ffab ;};if _ffab =_bfcfg .setRefinementAtPixels ();_ffab !=nil {return _ffab ;};if _ffab =_bfcfg .readNumberOfExportedSymbols ();
_ffab !=nil {return _ffab ;};if _ffab =_bfcfg .readNumberOfNewSymbols ();_ffab !=nil {return _ffab ;};if _ffab =_bfcfg .setInSyms ();_ffab !=nil {return _ffab ;};if _bfcfg ._eeaa {_gegf :=_bfcfg .Header .RTSegments ;for _aadf :=len (_gegf )-1;_aadf >=0;
_aadf --{if _gegf [_aadf ].Type ==0{_faccc ,_bfea :=_gegf [_aadf ].SegmentData .(*SymbolDictionary );if !_bfea {_ffab =_db .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gegf [_aadf ]);
return _ffab ;};if _faccc ._eeaa {_bfcfg .setRetainedCodingContexts (_faccc );};break ;};};};if _ffab =_bfcfg .checkInput ();_ffab !=nil {return _ffab ;};return nil ;};func (_bfaa *TextRegion )Init (header *Header ,r *_fd .Reader )error {_bfaa .Header =header ;
_bfaa ._bfbf =r ;_bfaa .RegionInfo =NewRegionSegment (_bfaa ._bfbf );return _bfaa .parseHeader ();};func (_baafe *TextRegion )setParameters (_caffa *_fe .Decoder ,_abae ,_accd bool ,_dgab ,_fafc uint32 ,_fagc uint32 ,_fcga int8 ,_adgac uint32 ,_caea int8 ,_ecbfg _ca .CombinationOperator ,_bfef int8 ,_bgce int16 ,_eeac ,_bbbcg ,_abedg ,_gbfa ,_bgac ,_ebbc ,_beff ,_bdge ,_fbag ,_fbeg int8 ,_dcbf ,_aeddf []int8 ,_aefbg []*_ca .Bitmap ,_bcba int8 ){_baafe ._gcdaba =_caffa ;
_baafe .IsHuffmanEncoded =_abae ;_baafe .UseRefinement =_accd ;_baafe .RegionInfo .BitmapWidth =_dgab ;_baafe .RegionInfo .BitmapHeight =_fafc ;_baafe .NumberOfSymbolInstances =_fagc ;_baafe .SbStrips =_fcga ;_baafe .NumberOfSymbols =_adgac ;_baafe .DefaultPixel =_caea ;
_baafe .CombinationOperator =_ecbfg ;_baafe .IsTransposed =_bfef ;_baafe .ReferenceCorner =_bgce ;_baafe .SbDsOffset =_eeac ;_baafe .SbHuffFS =_bbbcg ;_baafe .SbHuffDS =_abedg ;_baafe .SbHuffDT =_gbfa ;_baafe .SbHuffRDWidth =_bgac ;_baafe .SbHuffRDHeight =_ebbc ;
_baafe .SbHuffRSize =_fbag ;_baafe .SbHuffRDX =_beff ;_baafe .SbHuffRDY =_bdge ;_baafe .SbrTemplate =_fbeg ;_baafe .SbrATX =_dcbf ;_baafe .SbrATY =_aeddf ;_baafe .Symbols =_aefbg ;_baafe ._abab =_bcba ;};func (_dafg *TextRegion )readHuffmanFlags ()error {var (_aedd int ;
_egcfc uint64 ;_bfge error ;);_ ,_bfge =_dafg ._bfbf .ReadBit ();if _bfge !=nil {return _bfge ;};_aedd ,_bfge =_dafg ._bfbf .ReadBit ();if _bfge !=nil {return _bfge ;};_dafg .SbHuffRSize =int8 (_aedd );_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;
};_dafg .SbHuffRDY =int8 (_egcfc )&0xf;_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;};_dafg .SbHuffRDX =int8 (_egcfc )&0xf;_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;};_dafg .SbHuffRDHeight =int8 (_egcfc )&0xf;
_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;};_dafg .SbHuffRDWidth =int8 (_egcfc )&0xf;_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;};_dafg .SbHuffDT =int8 (_egcfc )&0xf;_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);
if _bfge !=nil {return _bfge ;};_dafg .SbHuffDS =int8 (_egcfc )&0xf;_egcfc ,_bfge =_dafg ._bfbf .ReadBits (2);if _bfge !=nil {return _bfge ;};_dafg .SbHuffFS =int8 (_egcfc )&0xf;return nil ;};type SegmentEncoder interface{Encode (_dbda _fd .BinaryWriter )(_ecg int ,_adgf error );
};func (_afba *TextRegion )decodeIb (_geff ,_fegfg int64 )(*_ca .Bitmap ,error ){const _gbga ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fdfb error ;_efgbad *_ca .Bitmap ;);if _geff ==0{if int (_fegfg )> len (_afba .Symbols )-1{return nil ,_fc .Error (_gbga ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _afba .Symbols [int (_fegfg )],nil ;};var _cacf ,_eabe ,_caded ,_bcdcg int64 ;_cacf ,_fdfb =_afba .decodeRdw ();if _fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"");};_eabe ,_fdfb =_afba .decodeRdh ();if _fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"");
};_caded ,_fdfb =_afba .decodeRdx ();if _fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"");};_bcdcg ,_fdfb =_afba .decodeRdy ();if _fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"");};if _afba .IsHuffmanEncoded {if _ ,_fdfb =_afba .decodeSymInRefSize ();
_fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"");};_afba ._bfbf .Align ();};_cbbd :=_afba .Symbols [_fegfg ];_abcgg :=uint32 (_cbbd .Width );_efcff :=uint32 (_cbbd .Height );_dbbd :=int32 (uint32 (_cacf )>>1)+int32 (_caded );_dgdfg :=int32 (uint32 (_eabe )>>1)+int32 (_bcdcg );
if _afba ._gdgg ==nil {_afba ._gdgg =_ffb (_afba ._bfbf ,nil );};_afba ._gdgg .setParameters (_afba ._dbdaa ,_afba ._gcdaba ,_afba .SbrTemplate ,_abcgg +uint32 (_cacf ),_efcff +uint32 (_eabe ),_cbbd ,_dbbd ,_dgdfg ,false ,_afba .SbrATX ,_afba .SbrATY );
_efgbad ,_fdfb =_afba ._gdgg .GetRegionBitmap ();if _fdfb !=nil {return nil ,_fc .Wrap (_fdfb ,_gbga ,"\u0067\u0072\u0066");};if _afba .IsHuffmanEncoded {_afba ._bfbf .Align ();};return _efgbad ,nil ;};type Regioner interface{GetRegionBitmap ()(*_ca .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_dagbe *TextRegion )decodeRdy ()(int64 ,error ){const _cdb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _dagbe .IsHuffmanEncoded {if _dagbe .SbHuffRDY ==3{if _dagbe ._babgd ==nil {var (_cefa int ;_caga error ;
);if _dagbe .SbHuffFS ==3{_cefa ++;};if _dagbe .SbHuffDS ==3{_cefa ++;};if _dagbe .SbHuffDT ==3{_cefa ++;};if _dagbe .SbHuffRDWidth ==3{_cefa ++;};if _dagbe .SbHuffRDHeight ==3{_cefa ++;};if _dagbe .SbHuffRDX ==3{_cefa ++;};_dagbe ._babgd ,_caga =_dagbe .getUserTable (_cefa );
if _caga !=nil {return 0,_fc .Wrap (_caga ,_cdb ,"");};};return _dagbe ._babgd .Decode (_dagbe ._bfbf );};_cgbg ,_fabd :=_bc .GetStandardTable (14+int (_dagbe .SbHuffRDY ));if _fabd !=nil {return 0,_fabd ;};return _cgbg .Decode (_dagbe ._bfbf );};_gfcb ,_gaed :=_dagbe ._gcdaba .DecodeInt (_dagbe ._dfaf );
if _gaed !=nil {return 0,_fc .Wrap (_gaed ,_cdb ,"");};return int64 (_gfcb ),nil ;};func (_aab *HalftoneRegion )parseHeader ()error {if _ffea :=_aab .RegionSegment .parseHeader ();_ffea !=nil {return _ffea ;};_daeb ,_gdge :=_aab ._dgcf .ReadBit ();if _gdge !=nil {return _gdge ;
};_aab .HDefaultPixel =int8 (_daeb );_agff ,_gdge :=_aab ._dgcf .ReadBits (3);if _gdge !=nil {return _gdge ;};_aab .CombinationOperator =_ca .CombinationOperator (_agff &0xf);_daeb ,_gdge =_aab ._dgcf .ReadBit ();if _gdge !=nil {return _gdge ;};if _daeb ==1{_aab .HSkipEnabled =true ;
};_agff ,_gdge =_aab ._dgcf .ReadBits (2);if _gdge !=nil {return _gdge ;};_aab .HTemplate =byte (_agff &0xf);_daeb ,_gdge =_aab ._dgcf .ReadBit ();if _gdge !=nil {return _gdge ;};if _daeb ==1{_aab .IsMMREncoded =true ;};_agff ,_gdge =_aab ._dgcf .ReadBits (32);
if _gdge !=nil {return _gdge ;};_aab .HGridWidth =uint32 (_agff &_df .MaxUint32 );_agff ,_gdge =_aab ._dgcf .ReadBits (32);if _gdge !=nil {return _gdge ;};_aab .HGridHeight =uint32 (_agff &_df .MaxUint32 );_agff ,_gdge =_aab ._dgcf .ReadBits (32);if _gdge !=nil {return _gdge ;
};_aab .HGridX =int32 (_agff &_df .MaxInt32 );_agff ,_gdge =_aab ._dgcf .ReadBits (32);if _gdge !=nil {return _gdge ;};_aab .HGridY =int32 (_agff &_df .MaxInt32 );_agff ,_gdge =_aab ._dgcf .ReadBits (16);if _gdge !=nil {return _gdge ;};_aab .HRegionX =uint16 (_agff &_df .MaxUint16 );
_agff ,_gdge =_aab ._dgcf .ReadBits (16);if _gdge !=nil {return _gdge ;};_aab .HRegionY =uint16 (_agff &_df .MaxUint16 );if _gdge =_aab .computeSegmentDataStructure ();_gdge !=nil {return _gdge ;};return _aab .checkInput ();};func (_ce *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ce .Template .setIndex (_ce ._ece );
return _ce ._ee .DecodeBit (_ce ._ece );};func (_dcag *PatternDictionary )Init (h *Header ,r *_fd .Reader )error {_dcag ._adga =r ;return _dcag .parseHeader ();};func (_gcf *GenericRegion )decodeTemplate0b (_fbbc ,_geae ,_aad int ,_egb ,_cdg int )(_dbf error ){const _dff ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_gdg ,_dea int ;_ddgb ,_beg int ;_edb byte ;_gda int ;);if _fbbc >=1{_edb ,_dbf =_gcf .Bitmap .GetByte (_cdg );if _dbf !=nil {return _fc .Wrap (_dbf ,_dff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ddgb =int (_edb );};if _fbbc >=2{_edb ,_dbf =_gcf .Bitmap .GetByte (_cdg -_gcf .Bitmap .RowStride );
if _dbf !=nil {return _fc .Wrap (_dbf ,_dff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_beg =int (_edb )<<6;};_gdg =(_ddgb &0xf0)|(_beg &0x3800);for _dafe :=0;_dafe < _aad ;_dafe =_gda {var (_eded byte ;_gffe int ;);_gda =_dafe +8;if _geaf :=_geae -_dafe ;
_geaf > 8{_gffe =8;}else {_gffe =_geaf ;};if _fbbc > 0{_ddgb <<=8;if _gda < _geae {_edb ,_dbf =_gcf .Bitmap .GetByte (_cdg +1);if _dbf !=nil {return _fc .Wrap (_dbf ,_dff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ddgb |=int (_edb );};};if _fbbc > 1{_beg <<=8;
if _gda < _geae {_edb ,_dbf =_gcf .Bitmap .GetByte (_cdg -_gcf .Bitmap .RowStride +1);if _dbf !=nil {return _fc .Wrap (_dbf ,_dff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_beg |=int (_edb )<<6;};};for _egc :=0;_egc < _gffe ;_egc ++{_bbbe :=uint (7-_egc );
if _gcf ._efb {_dea =_gcf .overrideAtTemplate0b (_gdg ,_dafe +_egc ,_fbbc ,int (_eded ),_egc ,int (_bbbe ));_gcf ._baa .SetIndex (int32 (_dea ));}else {_gcf ._baa .SetIndex (int32 (_gdg ));};var _gabf int ;_gabf ,_dbf =_gcf ._fgd .DecodeBit (_gcf ._baa );
if _dbf !=nil {return _fc .Wrap (_dbf ,_dff ,"");};_eded |=byte (_gabf <<_bbbe );_gdg =((_gdg &0x7bf7)<<1)|_gabf |((_ddgb >>_bbbe )&0x10)|((_beg >>_bbbe )&0x800);};if _aged :=_gcf .Bitmap .SetByte (_egb ,_eded );_aged !=nil {return _fc .Wrap (_aged ,_dff ,"");
};_egb ++;_cdg ++;};return nil ;};func (_cfdd *HalftoneRegion )renderPattern (_efd [][]int )(_aed error ){var _eeef ,_gbgd int ;for _ddf :=0;_ddf < int (_cfdd .HGridHeight );_ddf ++{for _cec :=0;_cec < int (_cfdd .HGridWidth );_cec ++{_eeef =_cfdd .computeX (_ddf ,_cec );
_gbgd =_cfdd .computeY (_ddf ,_cec );_dccg :=_cfdd .Patterns [_efd [_ddf ][_cec ]];if _aed =_ca .Blit (_dccg ,_cfdd .HalftoneRegionBitmap ,_eeef +int (_cfdd .HGridX ),_gbgd +int (_cfdd .HGridY ),_cfdd .CombinationOperator );_aed !=nil {return _aed ;};};
};return nil ;};func (_abbc *Header )readSegmentDataLength (_gebb *_fd .Reader )(_fgfc error ){_abbc .SegmentDataLength ,_fgfc =_gebb .ReadBits (32);if _fgfc !=nil {return _fgfc ;};_abbc .SegmentDataLength &=_df .MaxInt32 ;return nil ;};