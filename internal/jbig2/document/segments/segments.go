//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_dd "encoding/binary";_ab "errors";_f "fmt";_gd "github.com/unidoc/unipdf/v3/common";_ac "github.com/unidoc/unipdf/v3/internal/bitwise";_da "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_gg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ee "image";_d "io";_a "math";_c "strings";_g "time";);func (_aaed *Header )writeSegmentNumber (_bedc _ac .BinaryWriter )(_ddad int ,_ffg error ){_dbgbe :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_dbgbe ,_aaed .SegmentNumber );if _ddad ,_ffg =_bedc .Write (_dbgbe );_ffg !=nil {return 0,_gg .Wrap (_ffg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _ddad ,nil ;};func (_gab *template1 )form (_dcbe ,_dcee ,_cccc ,_fed ,_gbd int16 )int16 {return ((_dcbe &0x02)<<8)|(_dcee <<6)|((_cccc &0x03)<<4)|(_fed <<1)|_gbd ;};func (_gbabe *PageInformationSegment )encodeFlags (_deee _ac .BinaryWriter )(_dggd error ){const _faeb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dggd =_deee .SkipBits (1);_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fea int ;if _gbabe .CombinationOperatorOverrideAllowed (){_fea =1;};if _dggd =_deee .WriteBit (_fea );
_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fea =0;if _gbabe ._abgb {_fea =1;
};if _dggd =_deee .WriteBit (_fea );_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _dggd =_deee .WriteBit ((int (_gbabe ._ebaf )>>1)&0x01);
_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _dggd =_deee .WriteBit (int (_gbabe ._ebaf )&0x01);
_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fea =int (_gbabe .DefaultPixelValue );
if _dggd =_deee .WriteBit (_fea );_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fea =0;if _gbabe ._bef {_fea =1;
};if _dggd =_deee .WriteBit (_fea );_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fea =0;if _gbabe .IsLossless {_fea =1;};if _dggd =_deee .WriteBit (_fea );
_dggd !=nil {return _gg .Wrap (_dggd ,_faeb ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_efdd *HalftoneRegion )combineGrayscalePlanes (_baegc []*_ge .Bitmap ,_aeb int )error {_adce :=0;
for _dgdc :=0;_dgdc < _baegc [_aeb ].Height ;_dgdc ++{for _gege :=0;_gege < _baegc [_aeb ].Width ;_gege +=8{_fbdb ,_gfba :=_baegc [_aeb +1].GetByte (_adce );if _gfba !=nil {return _gfba ;};_eegf ,_gfba :=_baegc [_aeb ].GetByte (_adce );if _gfba !=nil {return _gfba ;
};_gfba =_baegc [_aeb ].SetByte (_adce ,_ge .CombineBytes (_eegf ,_fbdb ,_ge .CmbOpXor ));if _gfba !=nil {return _gfba ;};_adce ++;};};return nil ;};type Regioner interface{GetRegionBitmap ()(*_ge .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_bfdb *Header )readHeaderLength (_gac *_ac .Reader ,_aedg int64 ){_bfdb .HeaderLength =_gac .AbsolutePosition ()-_aedg ;
};func (_accf *SymbolDictionary )String ()string {_bdae :=&_c .Builder {};_bdae .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bdae .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_accf .SdrTemplate ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_accf .SdTemplate ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_accf ._gfgc ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_accf ._fcf ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_accf .SdHuffAggInstanceSelection ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_accf .SdHuffBMSizeSelection ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_accf .SdHuffDecodeWidthSelection ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_accf .SdHuffDecodeHeightSelection ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_accf .UseRefinementAggregation ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_accf .IsHuffmanEncoded ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_accf .SdATX ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_accf .SdATY ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_accf .SdrATX ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_accf .SdrATY ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_accf .NumberOfExportedSymbols ));_bdae .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_accf .NumberOfNewSymbols ));
_bdae .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_accf ._agcb ));_bdae .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_accf ._gcagf ));
return _bdae .String ();};func (_aebe *SymbolDictionary )encodeATFlags (_gcef _ac .BinaryWriter )(_fefe int ,_bab error ){const _cbgdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _aebe .IsHuffmanEncoded ||_aebe .SdTemplate !=0{return 0,nil ;
};_fafe :=4;if _aebe .SdTemplate !=0{_fafe =1;};for _cad :=0;_cad < _fafe ;_cad ++{if _bab =_gcef .WriteByte (byte (_aebe .SdATX [_cad ]));_bab !=nil {return _fefe ,_gg .Wrapf (_bab ,_cbgdc ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_cad );};_fefe ++;
if _bab =_gcef .WriteByte (byte (_aebe .SdATY [_cad ]));_bab !=nil {return _fefe ,_gg .Wrapf (_bab ,_cbgdc ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_cad );};_fefe ++;};return _fefe ,nil ;};func (_agfd *TableSegment )Init (h *Header ,r *_ac .Reader )error {_agfd ._bbcg =r ;
return _agfd .parseHeader ();};func (_cbef *SymbolDictionary )decodeRefinedSymbol (_ggb ,_efca uint32 )error {var (_dfda int ;_agcde ,_ggfba int32 ;);if _cbef .IsHuffmanEncoded {_eafe ,_ecdd :=_cbef ._dcdd .ReadBits (byte (_cbef ._cedf ));if _ecdd !=nil {return _ecdd ;
};_dfda =int (_eafe );_egbe ,_ecdd :=_ba .GetStandardTable (15);if _ecdd !=nil {return _ecdd ;};_fdgg ,_ecdd :=_egbe .Decode (_cbef ._dcdd );if _ecdd !=nil {return _ecdd ;};_agcde =int32 (_fdgg );_fdgg ,_ecdd =_egbe .Decode (_cbef ._dcdd );if _ecdd !=nil {return _ecdd ;
};_ggfba =int32 (_fdgg );_egbe ,_ecdd =_ba .GetStandardTable (1);if _ecdd !=nil {return _ecdd ;};if _ ,_ecdd =_egbe .Decode (_cbef ._dcdd );_ecdd !=nil {return _ecdd ;};_cbef ._dcdd .Align ();}else {_baec ,_adada :=_cbef ._bega .DecodeIAID (uint64 (_cbef ._cedf ),_cbef ._accg );
if _adada !=nil {return _adada ;};_dfda =int (_baec );_agcde ,_adada =_cbef ._bega .DecodeInt (_cbef ._bcbe );if _adada !=nil {return _adada ;};_ggfba ,_adada =_cbef ._bega .DecodeInt (_cbef ._faca );if _adada !=nil {return _adada ;};};if _bdcc :=_cbef .setSymbolsArray ();
_bdcc !=nil {return _bdcc ;};_adedf :=_cbef ._ebbd [_dfda ];if _bfcbc :=_cbef .decodeNewSymbols (_ggb ,_efca ,_adedf ,_agcde ,_ggfba );_bfcbc !=nil {return _bfcbc ;};if _cbef .IsHuffmanEncoded {_cbef ._dcdd .Align ();};return nil ;};var _ SegmentEncoder =&GenericRegion {};
var _ SegmentEncoder =&RegionSegment {};func (_dgdff *RegionSegment )parseHeader ()error {const _eacca ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_gd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cegbc ,_face :=_dgdff ._ggfb .ReadBits (32);
if _face !=nil {return _gg .Wrap (_face ,_eacca ,"\u0077\u0069\u0064t\u0068");};_dgdff .BitmapWidth =uint32 (_cegbc &_a .MaxUint32 );_cegbc ,_face =_dgdff ._ggfb .ReadBits (32);if _face !=nil {return _gg .Wrap (_face ,_eacca ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dgdff .BitmapHeight =uint32 (_cegbc &_a .MaxUint32 );_cegbc ,_face =_dgdff ._ggfb .ReadBits (32);if _face !=nil {return _gg .Wrap (_face ,_eacca ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dgdff .XLocation =uint32 (_cegbc &_a .MaxUint32 );
_cegbc ,_face =_dgdff ._ggfb .ReadBits (32);if _face !=nil {return _gg .Wrap (_face ,_eacca ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dgdff .YLocation =uint32 (_cegbc &_a .MaxUint32 );if _ ,_face =_dgdff ._ggfb .ReadBits (5);_face !=nil {return _gg .Wrap (_face ,_eacca ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _face =_dgdff .readCombinationOperator ();_face !=nil {return _gg .Wrap (_face ,_eacca ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_afeb *SymbolDictionary )getUserTable (_cagf int )(_ba .Tabler ,error ){var _gfaa int ;
for _ ,_eaaa :=range _afeb .Header .RTSegments {if _eaaa .Type ==53{if _gfaa ==_cagf {_bdfa ,_adcbf :=_eaaa .GetSegmentData ();if _adcbf !=nil {return nil ,_adcbf ;};_acde :=_bdfa .(_ba .BasicTabler );return _ba .NewEncodedTable (_acde );};_gfaa ++;};};
return nil ,nil ;};func (_afga *SymbolDictionary )checkInput ()error {if _afga .SdHuffDecodeHeightSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_afga .SdHuffDecodeHeightSelection );
};if _afga .SdHuffDecodeWidthSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_afga .SdHuffDecodeWidthSelection );
};if _afga .IsHuffmanEncoded {if _afga .SdTemplate !=0{_gd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_afga .SdTemplate );
};if !_afga .UseRefinementAggregation {if !_afga .UseRefinementAggregation {if _afga ._gfgc {_gd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_afga ._gfgc =false ;};if _afga ._fcf {_gd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_afga ._fcf =false ;};};};}else {if _afga .SdHuffBMSizeSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_afga .SdHuffBMSizeSelection =0;};if _afga .SdHuffDecodeWidthSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_afga .SdHuffDecodeWidthSelection =0;};if _afga .SdHuffDecodeHeightSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_afga .SdHuffDecodeHeightSelection =0;};};if !_afga .UseRefinementAggregation {if _afga .SdrTemplate !=0{_gd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_afga .SdrTemplate );
_afga .SdrTemplate =0;};};if !_afga .IsHuffmanEncoded ||!_afga .UseRefinementAggregation {if _afga .SdHuffAggInstanceSelection {_gd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_afga .SdHuffAggInstanceSelection );
};};return nil ;};func (_ceeg *TableSegment )HtOOB ()int32 {return _ceeg ._bbaaa };func (_gbaf *SymbolDictionary )setCodingStatistics ()error {if _gbaf ._deeg ==nil {_gbaf ._deeg =_fb .NewStats (512,1);};if _gbaf ._acbd ==nil {_gbaf ._acbd =_fb .NewStats (512,1);
};if _gbaf ._accc ==nil {_gbaf ._accc =_fb .NewStats (512,1);};if _gbaf ._bccc ==nil {_gbaf ._bccc =_fb .NewStats (512,1);};if _gbaf ._abgf ==nil {_gbaf ._abgf =_fb .NewStats (512,1);};if _gbaf .UseRefinementAggregation &&_gbaf ._accg ==nil {_gbaf ._accg =_fb .NewStats (1<<uint (_gbaf ._cedf ),1);
_gbaf ._bcbe =_fb .NewStats (512,1);_gbaf ._faca =_fb .NewStats (512,1);};if _gbaf ._bfab ==nil {_gbaf ._bfab =_fb .NewStats (65536,1);};if _gbaf ._bega ==nil {var _gbcf error ;_gbaf ._bega ,_gbcf =_fb .New (_gbaf ._dcdd );if _gbcf !=nil {return _gbcf ;
};};return nil ;};func (_gfd *HalftoneRegion )parseHeader ()error {if _dbbg :=_gfd .RegionSegment .parseHeader ();_dbbg !=nil {return _dbbg ;};_faaf ,_abc :=_gfd ._geg .ReadBit ();if _abc !=nil {return _abc ;};_gfd .HDefaultPixel =int8 (_faaf );_ecgc ,_abc :=_gfd ._geg .ReadBits (3);
if _abc !=nil {return _abc ;};_gfd .CombinationOperator =_ge .CombinationOperator (_ecgc &0xf);_faaf ,_abc =_gfd ._geg .ReadBit ();if _abc !=nil {return _abc ;};if _faaf ==1{_gfd .HSkipEnabled =true ;};_ecgc ,_abc =_gfd ._geg .ReadBits (2);if _abc !=nil {return _abc ;
};_gfd .HTemplate =byte (_ecgc &0xf);_faaf ,_abc =_gfd ._geg .ReadBit ();if _abc !=nil {return _abc ;};if _faaf ==1{_gfd .IsMMREncoded =true ;};_ecgc ,_abc =_gfd ._geg .ReadBits (32);if _abc !=nil {return _abc ;};_gfd .HGridWidth =uint32 (_ecgc &_a .MaxUint32 );
_ecgc ,_abc =_gfd ._geg .ReadBits (32);if _abc !=nil {return _abc ;};_gfd .HGridHeight =uint32 (_ecgc &_a .MaxUint32 );_ecgc ,_abc =_gfd ._geg .ReadBits (32);if _abc !=nil {return _abc ;};_gfd .HGridX =int32 (_ecgc &_a .MaxInt32 );_ecgc ,_abc =_gfd ._geg .ReadBits (32);
if _abc !=nil {return _abc ;};_gfd .HGridY =int32 (_ecgc &_a .MaxInt32 );_ecgc ,_abc =_gfd ._geg .ReadBits (16);if _abc !=nil {return _abc ;};_gfd .HRegionX =uint16 (_ecgc &_a .MaxUint16 );_ecgc ,_abc =_gfd ._geg .ReadBits (16);if _abc !=nil {return _abc ;
};_gfd .HRegionY =uint16 (_ecgc &_a .MaxUint16 );if _abc =_gfd .computeSegmentDataStructure ();_abc !=nil {return _abc ;};return _gfd .checkInput ();};func (_cdae *HalftoneRegion )shiftAndFill (_gfdd int )int {_gfdd >>=8;if _gfdd < 0{_gde :=int (_a .Log (float64 (_faaa (_gfdd )))/_a .Log (2));
_gged :=31-_gde ;for _cgb :=1;_cgb < _gged ;_cgb ++{_gfdd |=1<<uint (31-_cgb );};};return _gfdd ;};func (_ggbb *TextRegion )createRegionBitmap ()error {_ggbb .RegionBitmap =_ge .New (int (_ggbb .RegionInfo .BitmapWidth ),int (_ggbb .RegionInfo .BitmapHeight ));
if _ggbb .DefaultPixel !=0{_ggbb .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_bfdg *PageInformationSegment )checkInput ()error {if _bfdg .PageBMHeight ==_a .MaxInt32 {if !_bfdg .IsStripe {_gd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_dbee *SymbolDictionary )readAtPixels (_eeed int )error {_dbee .SdATX =make ([]int8 ,_eeed );_dbee .SdATY =make ([]int8 ,_eeed );var (_cgba byte ;_afdf error ;);for _dgfb :=0;_dgfb < _eeed ;_dgfb ++{_cgba ,_afdf =_dbee ._dcdd .ReadByte ();
if _afdf !=nil {return _afdf ;};_dbee .SdATX [_dgfb ]=int8 (_cgba );_cgba ,_afdf =_dbee ._dcdd .ReadByte ();if _afdf !=nil {return _afdf ;};_dbee .SdATY [_dgfb ]=int8 (_cgba );};return nil ;};func (_efead *Header )referenceSize ()uint {switch {case _efead .SegmentNumber <=255:return 1;
case _efead .SegmentNumber <=65535:return 2;default:return 4;};};func (_daa *GenericRefinementRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){var _af error ;_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _af !=nil {_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_af );
}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _daa .RegionBitmap !=nil {return _daa .RegionBitmap ,nil ;};_aba :=0;if _daa .ReferenceBitmap ==nil {_daa .ReferenceBitmap ,_af =_daa .getGrReference ();if _af !=nil {return nil ,_af ;};};if _daa ._dg ==nil {_daa ._dg ,_af =_fb .New (_daa ._abg );
if _af !=nil {return nil ,_af ;};};if _daa ._ea ==nil {_daa ._ea =_fb .NewStats (8192,1);};_daa .RegionBitmap =_ge .New (int (_daa .RegionInfo .BitmapWidth ),int (_daa .RegionInfo .BitmapHeight ));if _daa .TemplateID ==0{if _af =_daa .updateOverride ();
_af !=nil {return nil ,_af ;};};_bg :=(_daa .RegionBitmap .Width +7)&-8;var _fd int ;if _daa .IsTPGROn {_fd =int (-_daa .ReferenceDY )*_daa .ReferenceBitmap .RowStride ;};_dcd :=_fd +1;for _cg :=0;_cg < _daa .RegionBitmap .Height ;_cg ++{if _daa .IsTPGROn {_bac ,_ef :=_daa .decodeSLTP ();
if _ef !=nil {return nil ,_ef ;};_aba ^=_bac ;};if _aba ==0{_af =_daa .decodeOptimized (_cg ,_daa .RegionBitmap .Width ,_daa .RegionBitmap .RowStride ,_daa .ReferenceBitmap .RowStride ,_bg ,_fd ,_dcd );if _af !=nil {return nil ,_af ;};}else {_af =_daa .decodeTypicalPredictedLine (_cg ,_daa .RegionBitmap .Width ,_daa .RegionBitmap .RowStride ,_daa .ReferenceBitmap .RowStride ,_bg ,_fd );
if _af !=nil {return nil ,_af ;};};};return _daa .RegionBitmap ,nil ;};func (_eddf *TextRegion )decodeIds ()(int64 ,error ){const _dbeda ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _eddf .IsHuffmanEncoded {if _eddf .SbHuffDS ==3{if _eddf ._gbgf ==nil {_befgc :=0;
if _eddf .SbHuffFS ==3{_befgc ++;};var _efffg error ;_eddf ._gbgf ,_efffg =_eddf .getUserTable (_befgc );if _efffg !=nil {return 0,_gg .Wrap (_efffg ,_dbeda ,"");};};return _eddf ._gbgf .Decode (_eddf ._fbdf );};_ggda ,_bdcg :=_ba .GetStandardTable (8+int (_eddf .SbHuffDS ));
if _bdcg !=nil {return 0,_gg .Wrap (_bdcg ,_dbeda ,"");};return _ggda .Decode (_eddf ._fbdf );};_gefc ,_agba :=_eddf ._fbfg .DecodeInt (_eddf ._dfgeff );if _agba !=nil {return 0,_gg .Wrap (_agba ,_dbeda ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_gefc ),nil ;
};func (_edca *TextRegion )Init (header *Header ,r *_ac .Reader )error {_edca .Header =header ;_edca ._fbdf =r ;_edca .RegionInfo =NewRegionSegment (_edca ._fbdf );return _edca .parseHeader ();};func (_geefd *TextRegion )encodeFlags (_feeg _ac .BinaryWriter )(_gaec int ,_bbgea error ){const _fggge ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bbgea =_feeg .WriteBit (int (_geefd .SbrTemplate ));_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bbgea =_feeg .WriteBits (uint64 (_geefd .SbDsOffset ),5);_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _bbgea =_feeg .WriteBit (int (_geefd .DefaultPixel ));_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bbgea =_feeg .WriteBits (uint64 (_geefd .CombinationOperator ),2);
_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bbgea =_feeg .WriteBit (int (_geefd .IsTransposed ));_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_bbgea =_feeg .WriteBits (uint64 (_geefd .ReferenceCorner ),2);_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bbgea =_feeg .WriteBits (uint64 (_geefd .LogSBStrips ),2);
_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ebab int ;if _geefd .UseRefinement {_ebab =1;};if _bbgea =_feeg .WriteBit (_ebab );_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_ebab =0;if _geefd .IsHuffmanEncoded {_ebab =1;};if _bbgea =_feeg .WriteBit (_ebab );_bbgea !=nil {return _gaec ,_gg .Wrap (_bbgea ,_fggge ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gaec =2;return _gaec ,nil ;};type OrganizationType uint8 ;
func (_cd *EndOfStripe )LineNumber ()int {return _cd ._bb };type PageInformationSegment struct{_efbd *_ac .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_fcbc bool ;_ebaf _ge .CombinationOperator ;_abgb bool ;DefaultPixelValue uint8 ;
_bef bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dgag *TextRegion )decodeRdw ()(int64 ,error ){const _gbbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _dgag .IsHuffmanEncoded {if _dgag .SbHuffRDWidth ==3{if _dgag ._cafg ==nil {var (_gaad int ;
_fffc error ;);if _dgag .SbHuffFS ==3{_gaad ++;};if _dgag .SbHuffDS ==3{_gaad ++;};if _dgag .SbHuffDT ==3{_gaad ++;};_dgag ._cafg ,_fffc =_dgag .getUserTable (_gaad );if _fffc !=nil {return 0,_gg .Wrap (_fffc ,_gbbb ,"");};};return _dgag ._cafg .Decode (_dgag ._fbdf );
};_ggaac ,_efef :=_ba .GetStandardTable (14+int (_dgag .SbHuffRDWidth ));if _efef !=nil {return 0,_gg .Wrap (_efef ,_gbbb ,"");};return _ggaac .Decode (_dgag ._fbdf );};_cada ,_cfde :=_dgag ._fbfg .DecodeInt (_dgag ._bffb );if _cfde !=nil {return 0,_gg .Wrap (_cfde ,_gbbb ,"");
};return int64 (_cada ),nil ;};func (_gagg *PageInformationSegment )readContainsRefinement ()error {_ecbe ,_gacf :=_gagg ._efbd .ReadBit ();if _gacf !=nil {return _gacf ;};if _ecbe ==1{_gagg ._bef =true ;};return nil ;};func (_geac *SymbolDictionary )getSymbol (_cbbf int )(*_ge .Bitmap ,error ){const _efgc ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_cbcea ,_daaa :=_geac ._fedd .GetBitmap (_geac ._cgcc [_cbbf ]);if _daaa !=nil {return nil ,_gg .Wrap (_daaa ,_efgc ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cbcea ,nil ;};func (_fgff *GenericRegion )GetRegionBitmap ()(_bebd *_ge .Bitmap ,_bga error ){if _fgff .Bitmap !=nil {return _fgff .Bitmap ,nil ;
};if _fgff .IsMMREncoded {if _fgff ._bbb ==nil {_fgff ._bbb ,_bga =_ae .New (_fgff ._dbgg ,int (_fgff .RegionSegment .BitmapWidth ),int (_fgff .RegionSegment .BitmapHeight ),_fgff .DataOffset ,_fgff .DataLength );if _bga !=nil {return nil ,_bga ;};};_fgff .Bitmap ,_bga =_fgff ._bbb .UncompressMMR ();
return _fgff .Bitmap ,_bga ;};if _bga =_fgff .updateOverrideFlags ();_bga !=nil {return nil ,_bga ;};var _dbeb int ;if _fgff ._dcaa ==nil {_fgff ._dcaa ,_bga =_fb .New (_fgff ._dbgg );if _bga !=nil {return nil ,_bga ;};};if _fgff ._ceb ==nil {_fgff ._ceb =_fb .NewStats (65536,1);
};_fgff .Bitmap =_ge .New (int (_fgff .RegionSegment .BitmapWidth ),int (_fgff .RegionSegment .BitmapHeight ));_dfe :=int (uint32 (_fgff .Bitmap .Width +7)&(^uint32 (7)));for _bfd :=0;_bfd < _fgff .Bitmap .Height ;_bfd ++{if _fgff .IsTPGDon {var _abd int ;
_abd ,_bga =_fgff .decodeSLTP ();if _bga !=nil {return nil ,_bga ;};_dbeb ^=_abd ;};if _dbeb ==1{if _bfd > 0{if _bga =_fgff .copyLineAbove (_bfd );_bga !=nil {return nil ,_bga ;};};}else {if _bga =_fgff .decodeLine (_bfd ,_fgff .Bitmap .Width ,_dfe );_bga !=nil {return nil ,_bga ;
};};};return _fgff .Bitmap ,nil ;};func (_gabg *PageInformationSegment )Encode (w _ac .BinaryWriter )(_gdfae int ,_gbab error ){const _gdbc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_degf :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_degf ,uint32 (_gabg .PageBMWidth ));_gdfae ,_gbab =w .Write (_degf );if _gbab !=nil {return _gdfae ,_gg .Wrap (_gbab ,_gdbc ,"\u0077\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_degf ,uint32 (_gabg .PageBMHeight ));
var _ebfd int ;_ebfd ,_gbab =w .Write (_degf );if _gbab !=nil {return _ebfd +_gdfae ,_gg .Wrap (_gbab ,_gdbc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gdfae +=_ebfd ;_dd .BigEndian .PutUint32 (_degf ,uint32 (_gabg .ResolutionX ));_ebfd ,_gbab =w .Write (_degf );
if _gbab !=nil {return _ebfd +_gdfae ,_gg .Wrap (_gbab ,_gdbc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_gdfae +=_ebfd ;_dd .BigEndian .PutUint32 (_degf ,uint32 (_gabg .ResolutionY ));if _ebfd ,_gbab =w .Write (_degf );_gbab !=nil {return _ebfd +_gdfae ,_gg .Wrap (_gbab ,_gdbc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_gdfae +=_ebfd ;if _gbab =_gabg .encodeFlags (w );_gbab !=nil {return _gdfae ,_gg .Wrap (_gbab ,_gdbc ,"");};_gdfae ++;if _ebfd ,_gbab =_gabg .encodeStripingInformation (w );_gbab !=nil {return _gdfae ,_gg .Wrap (_gbab ,_gdbc ,"");};_gdfae +=_ebfd ;return _gdfae ,nil ;
};func (_bgfcf *SymbolDictionary )setRefinementAtPixels ()error {if !_bgfcf .UseRefinementAggregation ||_bgfcf .SdrTemplate !=0{return nil ;};if _gcca :=_bgfcf .readRefinementAtPixels (2);_gcca !=nil {return _gcca ;};return nil ;};func (_egc *GenericRefinementRegion )decodeTemplate (_cag ,_dgf ,_bebc ,_gae ,_dab ,_bff ,_fgd ,_fff ,_bcg ,_aa int ,_ggaa templater )(_bgc error ){var (_gbg ,_bacf ,_dbc ,_cfg ,_add int16 ;
_bgd ,_fdg ,_dbb ,_cdf int ;_eac byte ;);if _bcg >=1&&(_bcg -1)< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -_gae );if _bgc !=nil {return _bgc ;};_bgd =int (_eac );};if _bcg >=0&&(_bcg )< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa );
if _bgc !=nil {return _bgc ;};_fdg =int (_eac );};if _bcg >=-1&&(_bcg +1)< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa +_gae );if _bgc !=nil {return _bgc ;};_dbb =int (_eac );};_aa ++;if _cag >=1{_eac ,_bgc =_egc .RegionBitmap .GetByte (_fff -_bebc );
if _bgc !=nil {return _bgc ;};_cdf =int (_eac );};_fff ++;_edae :=_egc .ReferenceDX %8;_feg :=6+_edae ;_dce :=_aa %_gae ;if _feg >=0{if _feg < 8{_gbg =int16 (_bgd >>uint (_feg ))&0x07;};if _feg < 8{_bacf =int16 (_fdg >>uint (_feg ))&0x07;};if _feg < 8{_dbc =int16 (_dbb >>uint (_feg ))&0x07;
};if _feg ==6&&_dce > 1{if _bcg >=1&&(_bcg -1)< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -_gae -2);if _bgc !=nil {return _bgc ;};_gbg |=int16 (_eac <<2)&0x04;};if _bcg >=0&&_bcg < _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -2);
if _bgc !=nil {return _bgc ;};_bacf |=int16 (_eac <<2)&0x04;};if _bcg >=-1&&_bcg +1< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa +_gae -2);if _bgc !=nil {return _bgc ;};_dbc |=int16 (_eac <<2)&0x04;};};if _feg ==0{_bgd =0;
_fdg =0;_dbb =0;if _dce < _gae -1{if _bcg >=1&&_bcg -1< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -_gae );if _bgc !=nil {return _bgc ;};_bgd =int (_eac );};if _bcg >=0&&_bcg < _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa );
if _bgc !=nil {return _bgc ;};_fdg =int (_eac );};if _bcg >=-1&&_bcg +1< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa +_gae );if _bgc !=nil {return _bgc ;};_dbb =int (_eac );};};_aa ++;};}else {_gbg =int16 (_bgd <<1)&0x07;
_bacf =int16 (_fdg <<1)&0x07;_dbc =int16 (_dbb <<1)&0x07;_bgd =0;_fdg =0;_dbb =0;if _dce < _gae -1{if _bcg >=1&&_bcg -1< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -_gae );if _bgc !=nil {return _bgc ;};_bgd =int (_eac );
};if _bcg >=0&&_bcg < _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa );if _bgc !=nil {return _bgc ;};_fdg =int (_eac );};if _bcg >=-1&&_bcg +1< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa +_gae );
if _bgc !=nil {return _bgc ;};_dbb =int (_eac );};_aa ++;};_gbg |=int16 ((_bgd >>7)&0x07);_bacf |=int16 ((_fdg >>7)&0x07);_dbc |=int16 ((_dbb >>7)&0x07);};_cfg =int16 (_cdf >>6);_add =0;_bgbe :=(2-_edae )%8;_bgd <<=uint (_bgbe );_fdg <<=uint (_bgbe );_dbb <<=uint (_bgbe );
_cdf <<=2;var _daf int ;for _dgfc :=0;_dgfc < _dgf ;_dgfc ++{_gef :=_dgfc &0x07;_cdfd :=_ggaa .form (_gbg ,_bacf ,_dbc ,_cfg ,_add );if _egc ._cf {_eac ,_bgc =_egc .RegionBitmap .GetByte (_egc .RegionBitmap .GetByteIndex (_dgfc ,_cag ));if _bgc !=nil {return _bgc ;
};_egc ._ea .SetIndex (int32 (_egc .overrideAtTemplate0 (int (_cdfd ),_dgfc ,_cag ,int (_eac ),_gef )));}else {_egc ._ea .SetIndex (int32 (_cdfd ));};_daf ,_bgc =_egc ._dg .DecodeBit (_egc ._ea );if _bgc !=nil {return _bgc ;};if _bgc =_egc .RegionBitmap .SetPixel (_dgfc ,_cag ,byte (_daf ));
_bgc !=nil {return _bgc ;};_gbg =((_gbg <<1)|0x01&int16 (_bgd >>7))&0x07;_bacf =((_bacf <<1)|0x01&int16 (_fdg >>7))&0x07;_dbc =((_dbc <<1)|0x01&int16 (_dbb >>7))&0x07;_cfg =((_cfg <<1)|0x01&int16 (_cdf >>7))&0x07;_add =int16 (_daf );if (_dgfc -int (_egc .ReferenceDX ))%8==5{_bgd =0;
_fdg =0;_dbb =0;if ((_dgfc -int (_egc .ReferenceDX ))/8)+1< _egc .ReferenceBitmap .RowStride {if _bcg >=1&&(_bcg -1)< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa -_gae );if _bgc !=nil {return _bgc ;};_bgd =int (_eac );
};if _bcg >=0&&_bcg < _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa );if _bgc !=nil {return _bgc ;};_fdg =int (_eac );};if _bcg >=-1&&(_bcg +1)< _egc .ReferenceBitmap .Height {_eac ,_bgc =_egc .ReferenceBitmap .GetByte (_aa +_gae );
if _bgc !=nil {return _bgc ;};_dbb =int (_eac );};};_aa ++;}else {_bgd <<=1;_fdg <<=1;_dbb <<=1;};if _gef ==5&&_cag >=1{if ((_dgfc >>3)+1)>=_egc .RegionBitmap .RowStride {_cdf =0;}else {_eac ,_bgc =_egc .RegionBitmap .GetByte (_fff -_bebc );if _bgc !=nil {return _bgc ;
};_cdf =int (_eac );};_fff ++;}else {_cdf <<=1;};};return nil ;};func (_fgb *GenericRefinementRegion )decodeTypicalPredictedLine (_afbc ,_bc ,_bba ,_ed ,_fga ,_bfa int )error {_fdd :=_afbc -int (_fgb .ReferenceDY );_fgc :=_fgb .ReferenceBitmap .GetByteIndex (0,_fdd );
_df :=_fgb .RegionBitmap .GetByteIndex (0,_afbc );var _db error ;switch _fgb .TemplateID {case 0:_db =_fgb .decodeTypicalPredictedLineTemplate0 (_afbc ,_bc ,_bba ,_ed ,_fga ,_bfa ,_df ,_fdd ,_fgc );case 1:_db =_fgb .decodeTypicalPredictedLineTemplate1 (_afbc ,_bc ,_bba ,_ed ,_fga ,_bfa ,_df ,_fdd ,_fgc );
};return _db ;};func (_fbe *GenericRefinementRegion )readAtPixels ()error {_fbe .GrAtX =make ([]int8 ,2);_fbe .GrAtY =make ([]int8 ,2);_gba ,_bfcb :=_fbe ._abg .ReadByte ();if _bfcb !=nil {return _bfcb ;};_fbe .GrAtX [0]=int8 (_gba );_gba ,_bfcb =_fbe ._abg .ReadByte ();
if _bfcb !=nil {return _bfcb ;};_fbe .GrAtY [0]=int8 (_gba );_gba ,_bfcb =_fbe ._abg .ReadByte ();if _bfcb !=nil {return _bfcb ;};_fbe .GrAtX [1]=int8 (_gba );_gba ,_bfcb =_fbe ._abg .ReadByte ();if _bfcb !=nil {return _bfcb ;};_fbe .GrAtY [1]=int8 (_gba );
return nil ;};func (_fee Type )String ()string {switch _fee {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_cdea *SymbolDictionary )readNumberOfExportedSymbols ()error {_cbdc ,_eacd :=_cdea ._dcdd .ReadBits (32);
if _eacd !=nil {return _eacd ;};_cdea .NumberOfExportedSymbols =uint32 (_cbdc &_a .MaxUint32 );return nil ;};func (_fdb *GenericRegion )getPixel (_fge ,_gad int )int8 {if _fge < 0||_fge >=_fdb .Bitmap .Width {return 0;};if _gad < 0||_gad >=_fdb .Bitmap .Height {return 0;
};if _fdb .Bitmap .GetPixel (_fge ,_gad ){return 1;};return 0;};func (_bfde *SymbolDictionary )decodeAggregate (_efge ,_dcg uint32 )error {var (_cbdg int64 ;_acgc error ;);if _bfde .IsHuffmanEncoded {_cbdg ,_acgc =_bfde .huffDecodeRefAggNInst ();if _acgc !=nil {return _acgc ;
};}else {_facag ,_dced :=_bfde ._bega .DecodeInt (_bfde ._bccc );if _dced !=nil {return _dced ;};_cbdg =int64 (_facag );};if _cbdg > 1{return _bfde .decodeThroughTextRegion (_efge ,_dcg ,uint32 (_cbdg ));}else if _cbdg ==1{return _bfde .decodeRefinedSymbol (_efge ,_dcg );
};return nil ;};func (_bad *GenericRefinementRegion )getGrReference ()(*_ge .Bitmap ,error ){segments :=_bad ._ddg .RTSegments ;if len (segments )==0{return nil ,_ab .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_bgf ,_aga :=segments [0].GetSegmentData ();if _aga !=nil {return nil ,_aga ;};_cbfa ,_dda :=_bgf .(Regioner );if !_dda {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bgf );
};return _cbfa .GetRegionBitmap ();};func (_efaba *SymbolDictionary )Encode (w _ac .BinaryWriter )(_bdbe int ,_eccfe error ){const _dfac ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _efaba ==nil {return 0,_gg .Error (_dfac ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bdbe ,_eccfe =_efaba .encodeFlags (w );
_eccfe !=nil {return _bdbe ,_gg .Wrap (_eccfe ,_dfac ,"");};_bgab ,_eccfe :=_efaba .encodeATFlags (w );if _eccfe !=nil {return _bdbe ,_gg .Wrap (_eccfe ,_dfac ,"");};_bdbe +=_bgab ;if _bgab ,_eccfe =_efaba .encodeRefinementATFlags (w );_eccfe !=nil {return _bdbe ,_gg .Wrap (_eccfe ,_dfac ,"");
};_bdbe +=_bgab ;if _bgab ,_eccfe =_efaba .encodeNumSyms (w );_eccfe !=nil {return _bdbe ,_gg .Wrap (_eccfe ,_dfac ,"");};_bdbe +=_bgab ;if _bgab ,_eccfe =_efaba .encodeSymbols (w );_eccfe !=nil {return _bdbe ,_gg .Wrap (_eccfe ,_dfac ,"");};_bdbe +=_bgab ;
return _bdbe ,nil ;};func (_ggef *SymbolDictionary )Init (h *Header ,r *_ac .Reader )error {_ggef .Header =h ;_ggef ._dcdd =r ;return _ggef .parseHeader ();};func (_acdc *SymbolDictionary )getSbSymCodeLen ()int8 {_gdbcg :=int8 (_a .Ceil (_a .Log (float64 (_acdc ._agcb +_acdc .NumberOfNewSymbols ))/_a .Log (2)));
if _acdc .IsHuffmanEncoded &&_gdbcg < 1{return 1;};return _gdbcg ;};func (_cbfg *PatternDictionary )checkInput ()error {if _cbfg .HdpHeight < 1||_cbfg .HdpWidth < 1{return _ab .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _cbfg .IsMMREncoded {if _cbfg .HDTemplate !=0{_gd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gc .RegionInfo };func (_gdaf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fgec ,_egaf :=_gdaf ._efbd .ReadBit ();if _egaf !=nil {return _egaf ;
};if _fgec ==1{_gdaf ._fcbc =true ;};return nil ;};func (_bfff *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fgbf int ;_degc int32 ;_ecgd error ;_eefaa =int32 (_bfff ._agcb +_bfff .NumberOfNewSymbols );_gbbc =make ([]int ,_eefaa ););for _dffe :=int32 (0);
_dffe < _eefaa ;_dffe +=_degc {if _bfff .IsHuffmanEncoded {_ecdfc ,_deef :=_ba .GetStandardTable (1);if _deef !=nil {return nil ,_deef ;};_gcc ,_deef :=_ecdfc .Decode (_bfff ._dcdd );if _deef !=nil {return nil ,_deef ;};_degc =int32 (_gcc );}else {_degc ,_ecgd =_bfff ._bega .DecodeInt (_bfff ._abgf );
if _ecgd !=nil {return nil ,_ecgd ;};};if _degc !=0{if _dffe +_degc > _eefaa {return nil ,_gg .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _gffa :=_dffe ;_gffa < _dffe +_degc ;_gffa ++{_gbbc [_gffa ]=_fgbf ;};};if _fgbf ==0{_fgbf =1;}else {_fgbf =0;};};return _gbbc ,nil ;};func (_gbee *Header )writeSegmentPageAssociation (_ccab _ac .BinaryWriter )(_bfaf int ,_fcg error ){const _ecff ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gbee .pageSize ()!=4{if _fcg =_ccab .WriteByte (byte (_gbee .PageAssociation ));_fcg !=nil {return 0,_gg .Wrap (_fcg ,_ecff ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cabc :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_cabc ,uint32 (_gbee .PageAssociation ));if _bfaf ,_fcg =_ccab .Write (_cabc );_fcg !=nil {return 0,_gg .Wrap (_fcg ,_ecff ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _bfaf ,nil ;
};func (_abge *TextRegion )parseHeader ()error {var _egdca error ;_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _egdca !=nil {_gd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_egdca );
}else {_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _egdca =_abge .RegionInfo .parseHeader ();
_egdca !=nil {return _egdca ;};if _egdca =_abge .readRegionFlags ();_egdca !=nil {return _egdca ;};if _abge .IsHuffmanEncoded {if _egdca =_abge .readHuffmanFlags ();_egdca !=nil {return _egdca ;};};if _egdca =_abge .readUseRefinement ();_egdca !=nil {return _egdca ;
};if _egdca =_abge .readAmountOfSymbolInstances ();_egdca !=nil {return _egdca ;};if _egdca =_abge .getSymbols ();_egdca !=nil {return _egdca ;};if _egdca =_abge .computeSymbolCodeLength ();_egdca !=nil {return _egdca ;};if _egdca =_abge .checkInput ();
_egdca !=nil {return _egdca ;};_gd .Log .Trace ("\u0025\u0073",_abge .String ());return nil ;};func (_adcb *GenericRegion )overrideAtTemplate2 (_cfc ,_fedc ,_bcac ,_bcgg ,_dag int )int {_cfc &=0x3FB;if _adcb .GBAtY [0]==0&&_adcb .GBAtX [0]>=-int8 (_dag ){_cfc |=(_bcgg >>uint (7-(int8 (_dag )+_adcb .GBAtX [0]))&0x1)<<2;
}else {_cfc |=int (_adcb .getPixel (_fedc +int (_adcb .GBAtX [0]),_bcac +int (_adcb .GBAtY [0])))<<2;};return _cfc ;};func (_efb *GenericRefinementRegion )updateOverride ()error {if _efb .GrAtX ==nil ||_efb .GrAtY ==nil {return _ab .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_efb .GrAtX )!=len (_efb .GrAtY ){return _ab .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_efb ._cbf =make ([]bool ,len (_efb .GrAtX ));switch _efb .TemplateID {case 0:if _efb .GrAtX [0]!=-1&&_efb .GrAtY [0]!=-1{_efb ._cbf [0]=true ;
_efb ._cf =true ;};if _efb .GrAtX [1]!=-1&&_efb .GrAtY [1]!=-1{_efb ._cbf [1]=true ;_efb ._cf =true ;};case 1:_efb ._cf =false ;};return nil ;};func (_effb *SymbolDictionary )addSymbol (_eea Regioner )error {_decg ,_dddg :=_eea .GetRegionBitmap ();if _dddg !=nil {return _dddg ;
};_effb ._decb [_effb ._gcagf ]=_decg ;_effb ._ebbd =append (_effb ._ebbd ,_decg );_gd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_decg );
return nil ;};func (_fdaa *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _fdaa .RegionSegment };func (_dagd *Header )String ()string {_bed :=&_c .Builder {};_bed .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_bed .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_dagd .SegmentNumber ));_bed .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_dagd .Type ));
_bed .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_dagd .RetainFlag ));_bed .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dagd .PageAssociation ));
_bed .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dagd .PageAssociationFieldSize ));
_bed .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ace :=range _dagd .RTSNumbers {_bed .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ace ));};_bed .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_dagd .HeaderLength ));
_bed .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_dagd .SegmentDataLength ));_bed .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_dagd .SegmentDataStartOffset ));
return _bed .String ();};func (_cfbf *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cdgg ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _cfbf .SbHuffRSize ==0{_ddccf ,_bbaf :=_ba .GetStandardTable (1);
if _bbaf !=nil {return 0,_gg .Wrap (_bbaf ,_cdgg ,"");};return _ddccf .Decode (_cfbf ._fbdf );};if _cfbf ._aggc ==nil {var (_dbbc int ;_ggcg error ;);if _cfbf .SbHuffFS ==3{_dbbc ++;};if _cfbf .SbHuffDS ==3{_dbbc ++;};if _cfbf .SbHuffDT ==3{_dbbc ++;};
if _cfbf .SbHuffRDWidth ==3{_dbbc ++;};if _cfbf .SbHuffRDHeight ==3{_dbbc ++;};if _cfbf .SbHuffRDX ==3{_dbbc ++;};if _cfbf .SbHuffRDY ==3{_dbbc ++;};_cfbf ._aggc ,_ggcg =_cfbf .getUserTable (_dbbc );if _ggcg !=nil {return 0,_gg .Wrap (_ggcg ,_cdgg ,"");
};};_fggd ,_gbbf :=_cfbf ._aggc .Decode (_cfbf ._fbdf );if _gbbf !=nil {return 0,_gg .Wrap (_gbbf ,_cdgg ,"");};return _fggd ,nil ;};func (_ecab *PageInformationSegment )readIsLossless ()error {_fdcf ,_gce :=_ecab ._efbd .ReadBit ();if _gce !=nil {return _gce ;
};if _fdcf ==1{_ecab .IsLossless =true ;};return nil ;};func (_affc *PatternDictionary )parseHeader ()error {_gd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_ggg :=_affc ._dac .ReadBits (5);if _ggg !=nil {return _ggg ;};if _ggg =_affc .readTemplate ();_ggg !=nil {return _ggg ;};if _ggg =_affc .readIsMMREncoded ();_ggg !=nil {return _ggg ;};if _ggg =_affc .readPatternWidthAndHeight ();_ggg !=nil {return _ggg ;
};if _ggg =_affc .readGrayMax ();_ggg !=nil {return _ggg ;};if _ggg =_affc .computeSegmentDataStructure ();_ggg !=nil {return _ggg ;};return _affc .checkInput ();};func (_dfgef *PageInformationSegment )Init (h *Header ,r *_ac .Reader )(_cbfd error ){_dfgef ._efbd =r ;
if _cbfd =_dfgef .parseHeader ();_cbfd !=nil {return _gg .Wrap (_cbfd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_bgfd *Header )pageSize ()uint {if _bgfd .PageAssociation <=255{return 1;
};return 4;};func (_dbccd *HalftoneRegion )checkInput ()error {if _dbccd .IsMMREncoded {if _dbccd .HTemplate !=0{_gd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dbccd .HTemplate );
};if _dbccd .HSkipEnabled {_gd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dbccd .HSkipEnabled );
};};return nil ;};func (_cbeb *PageInformationSegment )readDefaultPixelValue ()error {_agag ,_acgg :=_cbeb ._efbd .ReadBit ();if _acgg !=nil {return _acgg ;};_cbeb .DefaultPixelValue =uint8 (_agag &0xf);return nil ;};type EndOfStripe struct{_gf *_ac .Reader ;
_bb int ;};func (_bag *Header )readNumberOfReferredToSegments (_gcac *_ac .Reader )(uint64 ,error ){const _dade ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_cdd ,_begg :=_gcac .ReadBits (3);if _begg !=nil {return 0,_gg .Wrap (_begg ,_dade ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cdd &=0xf;var _adde []byte ;if _cdd <=4{_adde =make ([]byte ,5);for _eebe :=0;_eebe <=4;_eebe ++{_afedc ,_eefd :=_gcac .ReadBit ();
if _eefd !=nil {return 0,_gg .Wrap (_eefd ,_dade ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_adde [_eebe ]=byte (_afedc );};}else {_cdd ,_begg =_gcac .ReadBits (29);if _begg !=nil {return 0,_begg ;};_cdd &=_a .MaxInt32 ;_bffd :=(_cdd +8)>>3;
_bffd <<=3;_adde =make ([]byte ,_bffd );var _fefb uint64 ;for _fefb =0;_fefb < _bffd ;_fefb ++{_aagc ,_beaf :=_gcac .ReadBit ();if _beaf !=nil {return 0,_gg .Wrap (_beaf ,_dade ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_adde [_fefb ]=byte (_aagc );
};};return _cdd ,nil ;};func (_befg *PatternDictionary )readPatternWidthAndHeight ()error {_dceea ,_bebcc :=_befg ._dac .ReadByte ();if _bebcc !=nil {return _bebcc ;};_befg .HdpWidth =_dceea ;_dceea ,_bebcc =_befg ._dac .ReadByte ();if _bebcc !=nil {return _bebcc ;
};_befg .HdpHeight =_dceea ;return nil ;};func (_daed *TextRegion )readHuffmanFlags ()error {var (_beag int ;_gaga uint64 ;_ffgc error ;);_ ,_ffgc =_daed ._fbdf .ReadBit ();if _ffgc !=nil {return _ffgc ;};_beag ,_ffgc =_daed ._fbdf .ReadBit ();if _ffgc !=nil {return _ffgc ;
};_daed .SbHuffRSize =int8 (_beag );_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffRDY =int8 (_gaga )&0xf;_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffRDX =int8 (_gaga )&0xf;
_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffRDHeight =int8 (_gaga )&0xf;_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffRDWidth =int8 (_gaga )&0xf;_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);
if _ffgc !=nil {return _ffgc ;};_daed .SbHuffDT =int8 (_gaga )&0xf;_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffDS =int8 (_gaga )&0xf;_gaga ,_ffgc =_daed ._fbdf .ReadBits (2);if _ffgc !=nil {return _ffgc ;};_daed .SbHuffFS =int8 (_gaga )&0xf;
return nil ;};func (_cgf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cgf .Template .setIndex (_cgf ._ea );return _cgf ._dg .DecodeBit (_cgf ._ea );};func (_cdbf *TextRegion )decodeStripT ()(_bcbb int64 ,_aafg error ){if _cdbf .IsHuffmanEncoded {if _cdbf .SbHuffDT ==3{if _cdbf ._cafb ==nil {var _agdb int ;
if _cdbf .SbHuffFS ==3{_agdb ++;};if _cdbf .SbHuffDS ==3{_agdb ++;};_cdbf ._cafb ,_aafg =_cdbf .getUserTable (_agdb );if _aafg !=nil {return 0,_aafg ;};};_bcbb ,_aafg =_cdbf ._cafb .Decode (_cdbf ._fbdf );if _aafg !=nil {return 0,_aafg ;};}else {var _fbfb _ba .Tabler ;
_fbfb ,_aafg =_ba .GetStandardTable (11+int (_cdbf .SbHuffDT ));if _aafg !=nil {return 0,_aafg ;};_bcbb ,_aafg =_fbfb .Decode (_cdbf ._fbdf );if _aafg !=nil {return 0,_aafg ;};};}else {var _afag int32 ;_afag ,_aafg =_cdbf ._fbfg .DecodeInt (_cdbf ._edde );
if _aafg !=nil {return 0,_aafg ;};_bcbb =int64 (_afag );};_bcbb *=int64 (-_cdbf .SbStrips );return _bcbb ,nil ;};func (_fbaf *GenericRegion )parseHeader ()(_edege error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _edege !=nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_edege );
}else {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_agb int ;_efe uint64 ;);if _edege =_fbaf .RegionSegment .parseHeader ();_edege !=nil {return _edege ;};if _ ,_edege =_fbaf ._dbgg .ReadBits (3);_edege !=nil {return _edege ;};_agb ,_edege =_fbaf ._dbgg .ReadBit ();if _edege !=nil {return _edege ;
};if _agb ==1{_fbaf .UseExtTemplates =true ;};_agb ,_edege =_fbaf ._dbgg .ReadBit ();if _edege !=nil {return _edege ;};if _agb ==1{_fbaf .IsTPGDon =true ;};_efe ,_edege =_fbaf ._dbgg .ReadBits (2);if _edege !=nil {return _edege ;};_fbaf .GBTemplate =byte (_efe &0xf);
_agb ,_edege =_fbaf ._dbgg .ReadBit ();if _edege !=nil {return _edege ;};if _agb ==1{_fbaf .IsMMREncoded =true ;};if !_fbaf .IsMMREncoded {_fbd :=1;if _fbaf .GBTemplate ==0{_fbd =4;if _fbaf .UseExtTemplates {_fbd =12;};};if _edege =_fbaf .readGBAtPixels (_fbd );
_edege !=nil {return _edege ;};};if _edege =_fbaf .computeSegmentDataStructure ();_edege !=nil {return _edege ;};_gd .Log .Trace ("\u0025\u0073",_fbaf );return nil ;};var _ templater =&template1 {};func (_cbec *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cbec .IsHuffmanEncoded {return _cbec .decodeHeightClassDeltaHeightWithHuffman ();
};_egef ,_fbag :=_cbec ._bega .DecodeInt (_cbec ._acbd );if _fbag !=nil {return 0,_fbag ;};return int64 (_egef ),nil ;};func (_cfbe *TextRegion )getSymbols ()error {if _cfbe .Header .RTSegments !=nil {return _cfbe .initSymbols ();};return nil ;};func (_ggac *TextRegion )initSymbols ()error {const _bdfdc ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_ddgf :=range _ggac .Header .RTSegments {if _ddgf ==nil {return _gg .Error (_bdfdc ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ddgf .Type ==0{_faefb ,_fbed :=_ddgf .GetSegmentData ();if _fbed !=nil {return _gg .Wrap (_fbed ,_bdfdc ,"");};_debc ,_eaccb :=_faefb .(*SymbolDictionary );if !_eaccb {return _gg .Error (_bdfdc ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_debc ._accg =_ggac ._gagf ;_fgga ,_fbed :=_debc .GetDictionary ();if _fbed !=nil {return _gg .Wrap (_fbed ,_bdfdc ,"");};_ggac .Symbols =append (_ggac .Symbols ,_fgga ...);};};_ggac .NumberOfSymbols =uint32 (len (_ggac .Symbols ));return nil ;};func (_cfce *Header )readReferredToSegmentNumbers (_fac *_ac .Reader ,_dec int )([]int ,error ){const _gbgb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_fddc :=make ([]int ,_dec );if _dec > 0{_cfce .RTSegments =make ([]*Header ,_dec );var (_bgbef uint64 ;_ebbaa error ;);for _cggg :=0;_cggg < _dec ;_cggg ++{_bgbef ,_ebbaa =_fac .ReadBits (byte (_cfce .referenceSize ())<<3);if _ebbaa !=nil {return nil ,_gg .Wrapf (_ebbaa ,_gbgb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cggg );
};_fddc [_cggg ]=int (_bgbef &_a .MaxInt32 );};};return _fddc ,nil ;};func (_cfe *Header )subInputReader ()(*_ac .Reader ,error ){_cgggb :=int (_cfe .SegmentDataLength );if _cfe .SegmentDataLength ==_a .MaxInt32 {_cgggb =-1;};return _cfe .Reader .NewPartialReader (int (_cfe .SegmentDataStartOffset ),_cgggb ,false );
};func (_dad *EndOfStripe )parseHeader ()error {_ag ,_ec :=_dad ._gf .ReadBits (32);if _ec !=nil {return _ec ;};_dad ._bb =int (_ag &_a .MaxInt32 );return nil ;};func (_fgfe *TextRegion )encodeSymbols (_ddec _ac .BinaryWriter )(_dccb int ,_cbceb error ){const _bdced ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_eeef :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_eeef ,_fgfe .NumberOfSymbols );if _dccb ,_cbceb =_ddec .Write (_eeef );_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_gddf ,_cbceb :=_ge .NewClassedPoints (_fgfe ._gfbdc ,_fgfe ._ecac );if _cbceb !=nil {return 0,_gg .Wrap (_cbceb ,_bdced ,"");};var _ggbc ,_dceeae int ;_cecfg :=_dc .New ();_cecfg .Init ();if _cbceb =_cecfg .EncodeInteger (_dc .IADT ,0);_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dbdda ,_cbceb :=_gddf .GroupByY ();if _cbceb !=nil {return 0,_gg .Wrap (_cbceb ,_bdced ,"");};for _ ,_dgef :=range _dbdda {_bead :=int (_dgef .YAtIndex (0));_acea :=_bead -_ggbc ;if _cbceb =_cecfg .EncodeInteger (_dc .IADT ,_acea );_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"");
};var _cbabe int ;for _ebfa ,_afgb :=range _dgef .IntSlice {switch _ebfa {case 0:_bcfb :=int (_dgef .XAtIndex (_ebfa ))-_dceeae ;if _cbceb =_cecfg .EncodeInteger (_dc .IAFS ,_bcfb );_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"");};_dceeae +=_bcfb ;
_cbabe =_dceeae ;default:_bcgb :=int (_dgef .XAtIndex (_ebfa ))-_cbabe ;if _cbceb =_cecfg .EncodeInteger (_dc .IADS ,_bcgb );_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"");};_cbabe +=_bcgb ;};_dccc ,_gggg :=_fgfe ._fecb .Get (_afgb );if _gggg !=nil {return _dccb ,_gg .Wrap (_gggg ,_bdced ,"");
};_cfgb ,_cgfd :=_fgfe ._ebgf [_dccc ];if !_cgfd {_cfgb ,_cgfd =_fgfe ._gefd [_dccc ];if !_cgfd {return _dccb ,_gg .Errorf (_bdced ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_dccc );
};};if _gggg =_cecfg .EncodeIAID (_fgfe ._bfcg ,_cfgb );_gggg !=nil {return _dccb ,_gg .Wrap (_gggg ,_bdced ,"");};};if _cbceb =_cecfg .EncodeOOB (_dc .IADS );_cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"");};};_cecfg .Final ();_gegf ,_cbceb :=_cecfg .WriteTo (_ddec );
if _cbceb !=nil {return _dccb ,_gg .Wrap (_cbceb ,_bdced ,"");};_dccb +=int (_gegf );return _dccb ,nil ;};func (_geebe *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _geebe ._bbgg ==nil {var (_fcbfg int ;_baea error ;);if _geebe .SdHuffDecodeHeightSelection ==3{_fcbfg ++;
};if _geebe .SdHuffDecodeWidthSelection ==3{_fcbfg ++;};_geebe ._bbgg ,_baea =_geebe .getUserTable (_fcbfg );if _baea !=nil {return 0,_baea ;};};return _geebe ._bbgg .Decode (_geebe ._dcdd );};type EncodeInitializer interface{InitEncode ();};func (_eg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_aec ,_dgc ,_egb ,_bcb ,_dbe ,_cge ,_fe ,_ebf ,_aea int )error {var (_dbd ,_ce ,_cde ,_dgg ,_bgg ,_dcc int ;
_bee byte ;_gfb error ;);if _aec > 0{_bee ,_gfb =_eg .RegionBitmap .GetByte (_fe -_egb );if _gfb !=nil {return _gfb ;};_cde =int (_bee );};if _ebf > 0&&_ebf <=_eg .ReferenceBitmap .Height {_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea -_bcb +_cge );if _gfb !=nil {return _gfb ;
};_dgg =int (_bee )<<4;};if _ebf >=0&&_ebf < _eg .ReferenceBitmap .Height {_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea +_cge );if _gfb !=nil {return _gfb ;};_bgg =int (_bee )<<1;};if _ebf > -2&&_ebf < _eg .ReferenceBitmap .Height -1{_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea +_bcb +_cge );
if _gfb !=nil {return _gfb ;};_dcc =int (_bee );};_dbd =((_cde >>5)&0x6)|((_dcc >>2)&0x30)|(_bgg &0x180)|(_dgg &0xc00);var _afd int ;for _dba :=0;_dba < _dbe ;_dba =_afd {var _dfa int ;_afd =_dba +8;var _dcb int ;if _dcb =_dgc -_dba ;_dcb > 8{_dcb =8;};
_bcc :=_afd < _dgc ;_eda :=_afd < _eg .ReferenceBitmap .Width ;_gaa :=_cge +1;if _aec > 0{_bee =0;if _bcc {_bee ,_gfb =_eg .RegionBitmap .GetByte (_fe -_egb +1);if _gfb !=nil {return _gfb ;};};_cde =(_cde <<8)|int (_bee );};if _ebf > 0&&_ebf <=_eg .ReferenceBitmap .Height {var _bge int ;
if _eda {_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea -_bcb +_gaa );if _gfb !=nil {return _gfb ;};_bge =int (_bee )<<4;};_dgg =(_dgg <<8)|_bge ;};if _ebf >=0&&_ebf < _eg .ReferenceBitmap .Height {var _cbg int ;if _eda {_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea +_gaa );
if _gfb !=nil {return _gfb ;};_cbg =int (_bee )<<1;};_bgg =(_bgg <<8)|_cbg ;};if _ebf > -2&&_ebf < (_eg .ReferenceBitmap .Height -1){_bee =0;if _eda {_bee ,_gfb =_eg .ReferenceBitmap .GetByte (_aea +_bcb +_gaa );if _gfb !=nil {return _gfb ;};};_dcc =(_dcc <<8)|int (_bee );
};for _gb :=0;_gb < _dcb ;_gb ++{var _eed int ;_abad :=false ;_ebc :=(_dbd >>4)&0x1ff;if _ebc ==0x1ff{_abad =true ;_eed =1;}else if _ebc ==0x00{_abad =true ;};if !_abad {if _eg ._cf {_ce =_eg .overrideAtTemplate0 (_dbd ,_dba +_gb ,_aec ,_dfa ,_gb );_eg ._ea .SetIndex (int32 (_ce ));
}else {_eg ._ea .SetIndex (int32 (_dbd ));};_eed ,_gfb =_eg ._dg .DecodeBit (_eg ._ea );if _gfb !=nil {return _gfb ;};};_ebg :=uint (7-_gb );_dfa |=_eed <<_ebg ;_dbd =((_dbd &0xdb6)<<1)|_eed |(_cde >>_ebg +5)&0x002|((_dcc >>_ebg +2)&0x010)|((_bgg >>_ebg )&0x080)|((_dgg >>_ebg )&0x400);
};_gfb =_eg .RegionBitmap .SetByte (_fe ,byte (_dfa ));if _gfb !=nil {return _gfb ;};_fe ++;_aea ++;};return nil ;};func (_aagg *PageInformationSegment )String ()string {_aeag :=&_c .Builder {};_aeag .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_aeag .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_aagg .PageBMHeight ));_aeag .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_aagg .PageBMWidth ));
_aeag .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_aagg .ResolutionX ));_aeag .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_aagg .ResolutionY ));
_aeag .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_aagg ._ebaf ));_aeag .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_aagg ._fcbc ));
_aeag .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_aagg .IsLossless ));_aeag .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aagg ._abgb ));
_aeag .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_aagg ._bef ));_aeag .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_aagg .IsStripe ));
_aeag .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_aagg .MaxStripeSize ));return _aeag .String ();};func (_beceb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ge .Points ,symbols *_ge .Bitmaps ,classIDs *_da .IntSlice ,boxes *_ge .Boxes ,width ,height ,symBits int ){_beceb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_beceb ._ebgf =globalSymbolsMap ;_beceb ._gefd =localSymbolsMap ;_beceb ._ecac =comps ;_beceb ._gfbdc =inLL ;_beceb ._dabf =symbols ;_beceb ._fecb =classIDs ;_beceb ._geagd =boxes ;_beceb ._bfcg =symBits ;};func (_bde *Header )parse (_afeg Documenter ,_gdfe *_ac .Reader ,_adfbc int64 ,_fgfac OrganizationType )(_gagb error ){const _gfee ="\u0070\u0061\u0072s\u0065";
_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gagb !=nil {_gd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gagb );
}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gagb =_gdfe .Seek (_adfbc ,_d .SeekStart );
if _gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gagb =_bde .readSegmentNumber (_gdfe );_gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");};if _gagb =_bde .readHeaderFlags ();_gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");
};var _ebba uint64 ;_ebba ,_gagb =_bde .readNumberOfReferredToSegments (_gdfe );if _gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");};_bde .RTSNumbers ,_gagb =_bde .readReferredToSegmentNumbers (_gdfe ,int (_ebba ));if _gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");
};_gagb =_bde .readSegmentPageAssociation (_afeg ,_gdfe ,_ebba ,_bde .RTSNumbers ...);if _gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");};if _bde .Type !=TEndOfFile {if _gagb =_bde .readSegmentDataLength (_gdfe );_gagb !=nil {return _gg .Wrap (_gagb ,_gfee ,"");
};};_bde .readDataStartOffset (_gdfe ,_fgfac );_bde .readHeaderLength (_gdfe ,_adfbc );_gd .Log .Trace ("\u0025\u0073",_bde );return nil ;};func (_efd *GenericRegion )decodeTemplate2 (_ccd ,_gdff ,_bbfc int ,_abgc ,_bfag int )(_fede error ){const _cdbde ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_eagc ,_cdbe int ;_aad ,_cbfad int ;_gfg byte ;_eca ,_aee int ;);if _ccd >=1{_gfg ,_fede =_efd .Bitmap .GetByte (_bfag );if _fede !=nil {return _gg .Wrap (_fede ,_cdbde ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_aad =int (_gfg );};if _ccd >=2{_gfg ,_fede =_efd .Bitmap .GetByte (_bfag -_efd .Bitmap .RowStride );if _fede !=nil {return _gg .Wrap (_fede ,_cdbde ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cbfad =int (_gfg )<<4;
};_eagc =(_aad >>3&0x7c)|(_cbfad >>3&0x380);for _beee :=0;_beee < _bbfc ;_beee =_eca {var (_gca byte ;_fdfa int ;);_eca =_beee +8;if _ecc :=_gdff -_beee ;_ecc > 8{_fdfa =8;}else {_fdfa =_ecc ;};if _ccd > 0{_aad <<=8;if _eca < _gdff {_gfg ,_fede =_efd .Bitmap .GetByte (_bfag +1);
if _fede !=nil {return _gg .Wrap (_fede ,_cdbde ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_aad |=int (_gfg );};};if _ccd > 1{_cbfad <<=8;if _eca < _gdff {_gfg ,_fede =_efd .Bitmap .GetByte (_bfag -_efd .Bitmap .RowStride +1);
if _fede !=nil {return _gg .Wrap (_fede ,_cdbde ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cbfad |=int (_gfg )<<4;};};for _fddf :=0;_fddf < _fdfa ;_fddf ++{_dgcg :=uint (10-_fddf );if _efd ._cdbd {_cdbe =_efd .overrideAtTemplate2 (_eagc ,_beee +_fddf ,_ccd ,int (_gca ),_fddf );
_efd ._ceb .SetIndex (int32 (_cdbe ));}else {_efd ._ceb .SetIndex (int32 (_eagc ));};_aee ,_fede =_efd ._dcaa .DecodeBit (_efd ._ceb );if _fede !=nil {return _gg .Wrap (_fede ,_cdbde ,"");};_gca |=byte (_aee <<uint (7-_fddf ));_eagc =((_eagc &0x1bd)<<1)|_aee |((_aad >>_dgcg )&0x4)|((_cbfad >>_dgcg )&0x80);
};if _cbgf :=_efd .Bitmap .SetByte (_abgc ,_gca );_cbgf !=nil {return _gg .Wrap (_cbgf ,_cdbde ,"");};_abgc ++;_bfag ++;};return nil ;};func (_dcad *GenericRegion )updateOverrideFlags ()error {const _dfg ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dcad .GBAtX ==nil ||_dcad .GBAtY ==nil {return nil ;};if len (_dcad .GBAtX )!=len (_dcad .GBAtY ){return _gg .Errorf (_dfg ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dcad .GBAtX ),len (_dcad .GBAtY ));
};_dcad .GBAtOverride =make ([]bool ,len (_dcad .GBAtX ));switch _dcad .GBTemplate {case 0:if !_dcad .UseExtTemplates {if _dcad .GBAtX [0]!=3||_dcad .GBAtY [0]!=-1{_dcad .setOverrideFlag (0);};if _dcad .GBAtX [1]!=-3||_dcad .GBAtY [1]!=-1{_dcad .setOverrideFlag (1);
};if _dcad .GBAtX [2]!=2||_dcad .GBAtY [2]!=-2{_dcad .setOverrideFlag (2);};if _dcad .GBAtX [3]!=-2||_dcad .GBAtY [3]!=-2{_dcad .setOverrideFlag (3);};}else {if _dcad .GBAtX [0]!=-2||_dcad .GBAtY [0]!=0{_dcad .setOverrideFlag (0);};if _dcad .GBAtX [1]!=0||_dcad .GBAtY [1]!=-2{_dcad .setOverrideFlag (1);
};if _dcad .GBAtX [2]!=-2||_dcad .GBAtY [2]!=-1{_dcad .setOverrideFlag (2);};if _dcad .GBAtX [3]!=-1||_dcad .GBAtY [3]!=-2{_dcad .setOverrideFlag (3);};if _dcad .GBAtX [4]!=1||_dcad .GBAtY [4]!=-2{_dcad .setOverrideFlag (4);};if _dcad .GBAtX [5]!=2||_dcad .GBAtY [5]!=-1{_dcad .setOverrideFlag (5);
};if _dcad .GBAtX [6]!=-3||_dcad .GBAtY [6]!=0{_dcad .setOverrideFlag (6);};if _dcad .GBAtX [7]!=-4||_dcad .GBAtY [7]!=0{_dcad .setOverrideFlag (7);};if _dcad .GBAtX [8]!=2||_dcad .GBAtY [8]!=-2{_dcad .setOverrideFlag (8);};if _dcad .GBAtX [9]!=3||_dcad .GBAtY [9]!=-1{_dcad .setOverrideFlag (9);
};if _dcad .GBAtX [10]!=-2||_dcad .GBAtY [10]!=-2{_dcad .setOverrideFlag (10);};if _dcad .GBAtX [11]!=-3||_dcad .GBAtY [11]!=-1{_dcad .setOverrideFlag (11);};};case 1:if _dcad .GBAtX [0]!=3||_dcad .GBAtY [0]!=-1{_dcad .setOverrideFlag (0);};case 2:if _dcad .GBAtX [0]!=2||_dcad .GBAtY [0]!=-1{_dcad .setOverrideFlag (0);
};case 3:if _dcad .GBAtX [0]!=2||_dcad .GBAtY [0]!=-1{_dcad .setOverrideFlag (0);};};return nil ;};func (_eabb *PatternDictionary )readTemplate ()error {_eaeb ,_edfda :=_eabb ._dac .ReadBits (2);if _edfda !=nil {return _edfda ;};_eabb .HDTemplate =byte (_eaeb );
return nil ;};func (_cgfc *GenericRefinementRegion )overrideAtTemplate0 (_eeb ,_cc ,_cdfe ,_dgb ,_fce int )int {if _cgfc ._cbf [0]{_eeb &=0xfff7;if _cgfc .GrAtY [0]==0&&int (_cgfc .GrAtX [0])>=-_fce {_eeb |=(_dgb >>uint (7-(_fce +int (_cgfc .GrAtX [0])))&0x1)<<3;
}else {_eeb |=_cgfc .getPixel (_cgfc .RegionBitmap ,_cc +int (_cgfc .GrAtX [0]),_cdfe +int (_cgfc .GrAtY [0]))<<3;};};if _cgfc ._cbf [1]{_eeb &=0xefff;if _cgfc .GrAtY [1]==0&&int (_cgfc .GrAtX [1])>=-_fce {_eeb |=(_dgb >>uint (7-(_fce +int (_cgfc .GrAtX [1])))&0x1)<<12;
}else {_eeb |=_cgfc .getPixel (_cgfc .ReferenceBitmap ,_cc +int (_cgfc .GrAtX [1]),_cdfe +int (_cgfc .GrAtY [1]));};};return _eeb ;};func (_cda *GenericRegion )readGBAtPixels (_eae int )error {const _faa ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_cda .GBAtX =make ([]int8 ,_eae );_cda .GBAtY =make ([]int8 ,_eae );for _bged :=0;_bged < _eae ;_bged ++{_aed ,_edega :=_cda ._dbgg .ReadByte ();if _edega !=nil {return _gg .Wrapf (_edega ,_faa ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bged );
};_cda .GBAtX [_bged ]=int8 (_aed );_aed ,_edega =_cda ._dbgg .ReadByte ();if _edega !=nil {return _gg .Wrapf (_edega ,_faa ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bged );};_cda .GBAtY [_bged ]=int8 (_aed );};return nil ;
};type HalftoneRegion struct{_geg *_ac .Reader ;_edag *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ge .CombinationOperator ;HSkipEnabled bool ;
HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ge .Bitmap ;Patterns []*_ge .Bitmap ;};func (_geba *PageInformationSegment )readResolution ()error {_aadd ,_aadf :=_geba ._efbd .ReadBits (32);
if _aadf !=nil {return _aadf ;};_geba .ResolutionX =int (_aadd &_a .MaxInt32 );_aadd ,_aadf =_geba ._efbd .ReadBits (32);if _aadf !=nil {return _aadf ;};_geba .ResolutionY =int (_aadd &_a .MaxInt32 );return nil ;};type TextRegion struct{_fbdf *_ac .Reader ;
RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ge .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;
SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_geae int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ge .Bitmap ;Symbols []*_ge .Bitmap ;
_fbfg *_fb .Decoder ;_ggcb *GenericRefinementRegion ;_edde *_fb .DecoderStats ;_gffc *_fb .DecoderStats ;_dfgeff *_fb .DecoderStats ;_gffe *_fb .DecoderStats ;_cceeb *_fb .DecoderStats ;_bffb *_fb .DecoderStats ;_fffg *_fb .DecoderStats ;_gagf *_fb .DecoderStats ;
_gdef *_fb .DecoderStats ;_cbeg *_fb .DecoderStats ;_afdc *_fb .DecoderStats ;_dbbd int8 ;_aagb *_ba .FixedSizeTable ;Header *Header ;_acba _ba .Tabler ;_gbgf _ba .Tabler ;_cafb _ba .Tabler ;_cafg _ba .Tabler ;_gfdb _ba .Tabler ;_ddcc _ba .Tabler ;_geee _ba .Tabler ;
_aggc _ba .Tabler ;_ebgf ,_gefd map[int ]int ;_ecac []int ;_gfbdc *_ge .Points ;_dabf *_ge .Bitmaps ;_fecb *_da .IntSlice ;_fgbe ,_bfcg int ;_geagd *_ge .Boxes ;};func (_gfa *RegionSegment )Encode (w _ac .BinaryWriter )(_agffa int ,_bgae error ){const _ffcd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_cgcf :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_cgcf ,_gfa .BitmapWidth );_agffa ,_bgae =w .Write (_cgcf );if _bgae !=nil {return 0,_gg .Wrap (_bgae ,_ffcd ,"\u0057\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_cgcf ,_gfa .BitmapHeight );var _adab int ;
_adab ,_bgae =w .Write (_cgcf );if _bgae !=nil {return 0,_gg .Wrap (_bgae ,_ffcd ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_agffa +=_adab ;_dd .BigEndian .PutUint32 (_cgcf ,_gfa .XLocation );_adab ,_bgae =w .Write (_cgcf );if _bgae !=nil {return 0,_gg .Wrap (_bgae ,_ffcd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_agffa +=_adab ;_dd .BigEndian .PutUint32 (_cgcf ,_gfa .YLocation );_adab ,_bgae =w .Write (_cgcf );if _bgae !=nil {return 0,_gg .Wrap (_bgae ,_ffcd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_agffa +=_adab ;if _bgae =w .WriteByte (byte (_gfa .CombinaionOperator )&0x07);
_bgae !=nil {return 0,_gg .Wrap (_bgae ,_ffcd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_agffa ++;return _agffa ,nil ;};func (_bdfde *TextRegion )setParameters (_acgce *_fb .Decoder ,_acdg ,_aadb bool ,_feba ,_fbad uint32 ,_agad uint32 ,_ccabd int8 ,_cecfb uint32 ,_gdde int8 ,_efcg _ge .CombinationOperator ,_fdda int8 ,_cffe int16 ,_bcdb ,_fbbg ,_bfdfc ,_dea ,_babbf ,_gefa ,_ddaf ,_bcbdc ,_fdff ,_bfdfa int8 ,_adfd ,_bdcgg []int8 ,_efgfg []*_ge .Bitmap ,_gdfg int8 ){_bdfde ._fbfg =_acgce ;
_bdfde .IsHuffmanEncoded =_acdg ;_bdfde .UseRefinement =_aadb ;_bdfde .RegionInfo .BitmapWidth =_feba ;_bdfde .RegionInfo .BitmapHeight =_fbad ;_bdfde .NumberOfSymbolInstances =_agad ;_bdfde .SbStrips =_ccabd ;_bdfde .NumberOfSymbols =_cecfb ;_bdfde .DefaultPixel =_gdde ;
_bdfde .CombinationOperator =_efcg ;_bdfde .IsTransposed =_fdda ;_bdfde .ReferenceCorner =_cffe ;_bdfde .SbDsOffset =_bcdb ;_bdfde .SbHuffFS =_fbbg ;_bdfde .SbHuffDS =_bfdfc ;_bdfde .SbHuffDT =_dea ;_bdfde .SbHuffRDWidth =_babbf ;_bdfde .SbHuffRDHeight =_gefa ;
_bdfde .SbHuffRSize =_fdff ;_bdfde .SbHuffRDX =_ddaf ;_bdfde .SbHuffRDY =_bcbdc ;_bdfde .SbrTemplate =_bfdfa ;_bdfde .SbrATX =_adfd ;_bdfde .SbrATY =_bdcgg ;_bdfde .Symbols =_efgfg ;_bdfde ._dbbd =_gdfg ;};type SegmentEncoder interface{Encode (_gdc _ac .BinaryWriter )(_gfbc int ,_dge error );
};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bbbe *GenericRegion )decodeTemplate3 (_dgba ,_cbgdf ,_gfga int ,_ccda ,_adfa int )(_ccce error ){const _fdag ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_dgcgb ,_afed int ;_fbg int ;_afcf byte ;_bca ,_gdb int ;);if _dgba >=1{_afcf ,_ccce =_bbbe .Bitmap .GetByte (_adfa );if _ccce !=nil {return _gg .Wrap (_ccce ,_fdag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fbg =int (_afcf );};_dgcgb =(_fbg >>1)&0x70;
for _afde :=0;_afde < _gfga ;_afde =_bca {var (_ccg byte ;_dbae int ;);_bca =_afde +8;if _aff :=_cbgdf -_afde ;_aff > 8{_dbae =8;}else {_dbae =_aff ;};if _dgba >=1{_fbg <<=8;if _bca < _cbgdf {_afcf ,_ccce =_bbbe .Bitmap .GetByte (_adfa +1);if _ccce !=nil {return _gg .Wrap (_ccce ,_fdag ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fbg |=int (_afcf );};};for _cbdaa :=0;_cbdaa < _dbae ;_cbdaa ++{if _bbbe ._cdbd {_afed =_bbbe .overrideAtTemplate3 (_dgcgb ,_afde +_cbdaa ,_dgba ,int (_ccg ),_cbdaa );_bbbe ._ceb .SetIndex (int32 (_afed ));}else {_bbbe ._ceb .SetIndex (int32 (_dgcgb ));
};_gdb ,_ccce =_bbbe ._dcaa .DecodeBit (_bbbe ._ceb );if _ccce !=nil {return _gg .Wrap (_ccce ,_fdag ,"");};_ccg |=byte (_gdb )<<byte (7-_cbdaa );_dgcgb =((_dgcgb &0x1f7)<<1)|_gdb |((_fbg >>uint (8-_cbdaa ))&0x010);};if _gff :=_bbbe .Bitmap .SetByte (_ccda ,_ccg );
_gff !=nil {return _gg .Wrap (_gff ,_fdag ,"");};_ccda ++;_adfa ++;};return nil ;};func (_bcfe *SymbolDictionary )encodeSymbols (_abe _ac .BinaryWriter )(_aaa int ,_edfa error ){const _bdd ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_gbdec :=_dc .New ();_gbdec .Init ();_cfcd ,_edfa :=_bcfe ._fedd .SelectByIndexes (_bcfe ._cgcc );if _edfa !=nil {return 0,_gg .Wrap (_edfa ,_bdd ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ecbga :=map[*_ge .Bitmap ]int {};for _dabec ,_dffc :=range _cfcd .Values {_ecbga [_dffc ]=_dabec ;
};_cfcd .SortByHeight ();var _cgfe ,_cfbc int ;_fgcg ,_edfa :=_cfcd .GroupByHeight ();if _edfa !=nil {return 0,_gg .Wrap (_edfa ,_bdd ,"");};for _ ,_fdbf :=range _fgcg .Values {_cgge :=_fdbf .Values [0].Height ;_degb :=_cgge -_cgfe ;if _edfa =_gbdec .EncodeInteger (_dc .IADH ,_degb );
_edfa !=nil {return 0,_gg .Wrapf (_edfa ,_bdd ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_degb );};_cgfe =_cgge ;_fec ,_ggc :=_fdbf .GroupByWidth ();if _ggc !=nil {return 0,_gg .Wrapf (_ggc ,_bdd ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cgge );
};var _cega int ;for _ ,_gggd :=range _fec .Values {for _ ,_cbbd :=range _gggd .Values {_cgag :=_cbbd .Width ;_fbcc :=_cgag -_cega ;if _ggc =_gbdec .EncodeInteger (_dc .IADW ,_fbcc );_ggc !=nil {return 0,_gg .Wrapf (_ggc ,_bdd ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fbcc );
};_cega +=_fbcc ;if _ggc =_gbdec .EncodeBitmap (_cbbd ,false );_ggc !=nil {return 0,_gg .Wrapf (_ggc ,_bdd ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cgge ,_cgag );};_badb :=_ecbga [_cbbd ];_bcfe ._facg [_badb ]=_cfbc ;
_cfbc ++;};};if _ggc =_gbdec .EncodeOOB (_dc .IADW );_ggc !=nil {return 0,_gg .Wrap (_ggc ,_bdd ,"\u0049\u0041\u0044\u0057");};};if _edfa =_gbdec .EncodeInteger (_dc .IAEX ,0);_edfa !=nil {return 0,_gg .Wrap (_edfa ,_bdd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _edfa =_gbdec .EncodeInteger (_dc .IAEX ,len (_bcfe ._cgcc ));_edfa !=nil {return 0,_gg .Wrap (_edfa ,_bdd ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_gbdec .Final ();_beba ,_edfa :=_gbdec .WriteTo (_abe );
if _edfa !=nil {return 0,_gg .Wrap (_edfa ,_bdd ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_beba ),nil ;};func (_cfec *PatternDictionary )readGrayMax ()error {_eefe ,_cecf :=_cfec ._dac .ReadBits (32);if _cecf !=nil {return _cecf ;};_cfec .GrayMax =uint32 (_eefe &_a .MaxUint32 );return nil ;};func (_bebdc *Header )readSegmentNumber (_abde *_ac .Reader )error {const _bccd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_cfcc :=make ([]byte ,4);_ ,_bcaca :=_abde .Read (_cfcc );if _bcaca !=nil {return _gg .Wrap (_bcaca ,_bccd ,"");};_bebdc .SegmentNumber =_dd .BigEndian .Uint32 (_cfcc );return nil ;};func (_cebd *SymbolDictionary )readNumberOfNewSymbols ()error {_ecgb ,_cebb :=_cebd ._dcdd .ReadBits (32);
if _cebb !=nil {return _cebb ;};_cebd .NumberOfNewSymbols =uint32 (_ecgb &_a .MaxUint32 );return nil ;};func (_fcbf *PageInformationSegment )parseHeader ()(_gbbd error ){_gd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cfa ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gbbd !=nil {_cfa +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gbbd .Error ();}else {_cfa +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gd .Log .Trace (_cfa );}();if _gbbd =_fcbf .readWidthAndHeight ();
_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readResolution ();_gbbd !=nil {return _gbbd ;};_ ,_gbbd =_fcbf ._efbd .ReadBit ();if _gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readCombinationOperatorOverrideAllowed ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readRequiresAuxiliaryBuffer ();
_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readCombinationOperator ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readDefaultPixelValue ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readContainsRefinement ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readIsLossless ();
_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readIsStriped ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .readMaxStripeSize ();_gbbd !=nil {return _gbbd ;};if _gbbd =_fcbf .checkInput ();_gbbd !=nil {return _gbbd ;};_gd .Log .Trace ("\u0025\u0073",_fcbf );
return nil ;};func (_eebb *GenericRegion )decodeTemplate1 (_efbe ,_bggb ,_cgfg int ,_dccf ,_fbeac int )(_cgc error ){const _afgg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_cdfdc ,_cce int ;_cceg ,_eab int ;
_aab byte ;_gcdg ,_fegag int ;);if _efbe >=1{_aab ,_cgc =_eebb .Bitmap .GetByte (_fbeac );if _cgc !=nil {return _gg .Wrap (_cgc ,_afgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cceg =int (_aab );};if _efbe >=2{_aab ,_cgc =_eebb .Bitmap .GetByte (_fbeac -_eebb .Bitmap .RowStride );
if _cgc !=nil {return _gg .Wrap (_cgc ,_afgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_eab =int (_aab )<<5;};_cdfdc =((_cceg >>1)&0x1f8)|((_eab >>1)&0x1e00);for _feb :=0;_feb < _cgfg ;_feb =_gcdg {var (_baad byte ;_dedc int ;);_gcdg =_feb +8;
if _eefa :=_bggb -_feb ;_eefa > 8{_dedc =8;}else {_dedc =_eefa ;};if _efbe > 0{_cceg <<=8;if _gcdg < _bggb {_aab ,_cgc =_eebb .Bitmap .GetByte (_fbeac +1);if _cgc !=nil {return _gg .Wrap (_cgc ,_afgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_cceg |=int (_aab );};};if _efbe > 1{_eab <<=8;if _gcdg < _bggb {_aab ,_cgc =_eebb .Bitmap .GetByte (_fbeac -_eebb .Bitmap .RowStride +1);if _cgc !=nil {return _gg .Wrap (_cgc ,_afgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_eab |=int (_aab )<<5;
};};for _bdc :=0;_bdc < _dedc ;_bdc ++{if _eebb ._cdbd {_cce =_eebb .overrideAtTemplate1 (_cdfdc ,_feb +_bdc ,_efbe ,int (_baad ),_bdc );_eebb ._ceb .SetIndex (int32 (_cce ));}else {_eebb ._ceb .SetIndex (int32 (_cdfdc ));};_fegag ,_cgc =_eebb ._dcaa .DecodeBit (_eebb ._ceb );
if _cgc !=nil {return _gg .Wrap (_cgc ,_afgg ,"");};_baad |=byte (_fegag )<<uint (7-_bdc );_bbf :=uint (8-_bdc );_cdfdc =((_cdfdc &0xefb)<<1)|_fegag |((_cceg >>_bbf )&0x8)|((_eab >>_bbf )&0x200);};if _baeg :=_eebb .Bitmap .SetByte (_dccf ,_baad );_baeg !=nil {return _gg .Wrap (_baeg ,_afgg ,"");
};_dccf ++;_fbeac ++;};return nil ;};func (_aace *SymbolDictionary )decodeThroughTextRegion (_fcde ,_dbdab ,_dcca uint32 )error {if _aace ._cddb ==nil {_aace ._cddb =_acge (_aace ._dcdd ,nil );_aace ._cddb .setContexts (_aace ._bfab ,_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_aace ._accg ,_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1));
};if _fdfc :=_aace .setSymbolsArray ();_fdfc !=nil {return _fdfc ;};_aace ._cddb .setParameters (_aace ._bega ,_aace .IsHuffmanEncoded ,true ,_fcde ,_dbdab ,_dcca ,1,_aace ._agcb +_aace ._gcagf ,0,0,0,1,0,0,0,0,0,0,0,0,0,_aace .SdrTemplate ,_aace .SdrATX ,_aace .SdrATY ,_aace ._ebbd ,_aace ._cedf );
return _aace .addSymbol (_aace ._cddb );};func (_eceg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _eceg .SdHuffDecodeHeightSelection {case 0:_bdfg ,_aaga :=_ba .GetStandardTable (4);if _aaga !=nil {return 0,_aaga ;
};return _bdfg .Decode (_eceg ._dcdd );case 1:_agdg ,_cdaeg :=_ba .GetStandardTable (5);if _cdaeg !=nil {return 0,_cdaeg ;};return _agdg .Decode (_eceg ._dcdd );case 3:if _eceg ._bbgd ==nil {_ddfb ,_eee :=_ba .GetStandardTable (0);if _eee !=nil {return 0,_eee ;
};_eceg ._bbgd =_ddfb ;};return _eceg ._bbgd .Decode (_eceg ._dcdd );};return 0,nil ;};func (_fgf *GenericRegion )Encode (w _ac .BinaryWriter )(_dbdd int ,_dcbb error ){const _edc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _fgf .Bitmap ==nil {return 0,_gg .Error (_edc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_cbd ,_dcbb :=_fgf .RegionSegment .Encode (w );if _dcbb !=nil {return 0,_gg .Wrap (_dcbb ,_edc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dbdd +=_cbd ;if _dcbb =w .SkipBits (4);_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bgfg int ;if _fgf .IsTPGDon {_bgfg =1;};if _dcbb =w .WriteBit (_bgfg );
_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bgfg =0;if _dcbb =w .WriteBit (int (_fgf .GBTemplate >>1)&0x01);_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _dcbb =w .WriteBit (int (_fgf .GBTemplate )&0x01);_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _fgf .UseMMR {_bgfg =1;};if _dcbb =w .WriteBit (_bgfg );
_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dbdd ++;if _cbd ,_dcbb =_fgf .writeGBAtPixels (w );_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"");};_dbdd +=_cbd ;_bcca :=_dc .New ();
if _dcbb =_bcca .EncodeBitmap (_fgf .Bitmap ,_fgf .IsTPGDon );_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"");};_bcca .Final ();var _gfc int64 ;if _gfc ,_dcbb =_bcca .WriteTo (w );_dcbb !=nil {return _dbdd ,_gg .Wrap (_dcbb ,_edc ,"");};_dbdd +=int (_gfc );
return _dbdd ,nil ;};func (_dff *GenericRegion )Size ()int {return _dff .RegionSegment .Size ()+1+2*len (_dff .GBAtX )};func (_cdfa *TextRegion )blit (_dbad *_ge .Bitmap ,_cgfce int64 )error {if _cdfa .IsTransposed ==0&&(_cdfa .ReferenceCorner ==2||_cdfa .ReferenceCorner ==3){_cdfa ._geae +=int64 (_dbad .Width -1);
}else if _cdfa .IsTransposed ==1&&(_cdfa .ReferenceCorner ==0||_cdfa .ReferenceCorner ==2){_cdfa ._geae +=int64 (_dbad .Height -1);};_agfb :=_cdfa ._geae ;if _cdfa .IsTransposed ==1{_agfb ,_cgfce =_cgfce ,_agfb ;};switch _cdfa .ReferenceCorner {case 0:_cgfce -=int64 (_dbad .Height -1);
case 2:_cgfce -=int64 (_dbad .Height -1);_agfb -=int64 (_dbad .Width -1);case 3:_agfb -=int64 (_dbad .Width -1);};_bfcgf :=_ge .Blit (_dbad ,_cdfa .RegionBitmap ,int (_agfb ),int (_cgfce ),_cdfa .CombinationOperator );if _bfcgf !=nil {return _bfcgf ;};
if _cdfa .IsTransposed ==0&&(_cdfa .ReferenceCorner ==0||_cdfa .ReferenceCorner ==1){_cdfa ._geae +=int64 (_dbad .Width -1);};if _cdfa .IsTransposed ==1&&(_cdfa .ReferenceCorner ==1||_cdfa .ReferenceCorner ==3){_cdfa ._geae +=int64 (_dbad .Height -1);};
return nil ;};func (_ecb *GenericRefinementRegion )String ()string {_cgab :=&_c .Builder {};_cgab .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cgab .WriteString (_ecb .RegionInfo .String ()+"\u000a");
_cgab .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ecb .IsTPGROn ));_cgab .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ecb .TemplateID ));
_cgab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ecb .GrAtX ));_cgab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ecb .GrAtY ));
_cgab .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ecb .ReferenceDX ));_cgab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ecb .ReferenceDY ));
return _cgab .String ();};func (_bfg *TextRegion )readUseRefinement ()error {if !_bfg .UseRefinement ||_bfg .SbrTemplate !=0{return nil ;};var (_feaf byte ;_gccf error ;);_bfg .SbrATX =make ([]int8 ,2);_bfg .SbrATY =make ([]int8 ,2);_feaf ,_gccf =_bfg ._fbdf .ReadByte ();
if _gccf !=nil {return _gccf ;};_bfg .SbrATX [0]=int8 (_feaf );_feaf ,_gccf =_bfg ._fbdf .ReadByte ();if _gccf !=nil {return _gccf ;};_bfg .SbrATY [0]=int8 (_feaf );_feaf ,_gccf =_bfg ._fbdf .ReadByte ();if _gccf !=nil {return _gccf ;};_bfg .SbrATX [1]=int8 (_feaf );
_feaf ,_gccf =_bfg ._fbdf .ReadByte ();if _gccf !=nil {return _gccf ;};_bfg .SbrATY [1]=int8 (_feaf );return nil ;};func (_aae *GenericRegion )decodeSLTP ()(int ,error ){switch _aae .GBTemplate {case 0:_aae ._ceb .SetIndex (0x9B25);case 1:_aae ._ceb .SetIndex (0x795);
case 2:_aae ._ceb .SetIndex (0xE5);case 3:_aae ._ceb .SetIndex (0x195);};return _aae ._dcaa .DecodeBit (_aae ._ceb );};func (_afee *SymbolDictionary )readRefinementAtPixels (_ggage int )error {_afee .SdrATX =make ([]int8 ,_ggage );_afee .SdrATY =make ([]int8 ,_ggage );
var (_acgca byte ;_bffed error ;);for _acae :=0;_acae < _ggage ;_acae ++{_acgca ,_bffed =_afee ._dcdd .ReadByte ();if _bffed !=nil {return _bffed ;};_afee .SdrATX [_acae ]=int8 (_acgca );_acgca ,_bffed =_afee ._dcdd .ReadByte ();if _bffed !=nil {return _bffed ;
};_afee .SdrATY [_acae ]=int8 (_acgca );};return nil ;};func (_fbea *GenericRegion )copyLineAbove (_dbcb int )error {_fbee :=_dbcb *_fbea .Bitmap .RowStride ;_dada :=_fbee -_fbea .Bitmap .RowStride ;for _eeda :=0;_eeda < _fbea .Bitmap .RowStride ;_eeda ++{_efc ,_cef :=_fbea .Bitmap .GetByte (_dada );
if _cef !=nil {return _cef ;};_dada ++;if _cef =_fbea .Bitmap .SetByte (_fbee ,_efc );_cef !=nil {return _cef ;};_fbee ++;};return nil ;};func (_fbfe *HalftoneRegion )grayScaleDecoding (_aegc int )([][]int ,error ){var (_ebgc []int8 ;_aabd []int8 ;);if !_fbfe .IsMMREncoded {_ebgc =make ([]int8 ,4);
_aabd =make ([]int8 ,4);if _fbfe .HTemplate <=1{_ebgc [0]=3;}else if _fbfe .HTemplate >=2{_ebgc [0]=2;};_aabd [0]=-1;_ebgc [1]=-3;_aabd [1]=-1;_ebgc [2]=2;_aabd [2]=-2;_ebgc [3]=-2;_aabd [3]=-2;};_fde :=make ([]*_ge .Bitmap ,_aegc );_dadd :=NewGenericRegion (_fbfe ._geg );
_dadd .setParametersMMR (_fbfe .IsMMREncoded ,_fbfe .DataOffset ,_fbfe .DataLength ,_fbfe .HGridHeight ,_fbfe .HGridWidth ,_fbfe .HTemplate ,false ,_fbfe .HSkipEnabled ,_ebgc ,_aabd );_fceb :=_aegc -1;var _ecdf error ;_fde [_fceb ],_ecdf =_dadd .GetRegionBitmap ();
if _ecdf !=nil {return nil ,_ecdf ;};for _fceb > 0{_fceb --;_dadd .Bitmap =nil ;_fde [_fceb ],_ecdf =_dadd .GetRegionBitmap ();if _ecdf !=nil {return nil ,_ecdf ;};if _ecdf =_fbfe .combineGrayscalePlanes (_fde ,_fceb );_ecdf !=nil {return nil ,_ecdf ;};
};return _fbfe .computeGrayScalePlanes (_fde ,_aegc );};func (_gag *GenericRegion )decodeTemplate0b (_gdd ,_bgcg ,_afa int ,_agcd ,_fef int )(_bgce error ){const _fcd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_acd ,_gcfc int ;_aeca ,_gge int ;_eef byte ;_caa int ;);if _gdd >=1{_eef ,_bgce =_gag .Bitmap .GetByte (_fef );if _bgce !=nil {return _gg .Wrap (_bgce ,_fcd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aeca =int (_eef );};if _gdd >=2{_eef ,_bgce =_gag .Bitmap .GetByte (_fef -_gag .Bitmap .RowStride );
if _bgce !=nil {return _gg .Wrap (_bgce ,_fcd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gge =int (_eef )<<6;};_acd =(_aeca &0xf0)|(_gge &0x3800);for _abab :=0;_abab < _afa ;_abab =_caa {var (_afcc byte ;_bcd int ;);_caa =_abab +8;if _ddac :=_bgcg -_abab ;
_ddac > 8{_bcd =8;}else {_bcd =_ddac ;};if _gdd > 0{_aeca <<=8;if _caa < _bgcg {_eef ,_bgce =_gag .Bitmap .GetByte (_fef +1);if _bgce !=nil {return _gg .Wrap (_bgce ,_fcd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aeca |=int (_eef );};};if _gdd > 1{_gge <<=8;
if _caa < _bgcg {_eef ,_bgce =_gag .Bitmap .GetByte (_fef -_gag .Bitmap .RowStride +1);if _bgce !=nil {return _gg .Wrap (_bgce ,_fcd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gge |=int (_eef )<<6;};};for _aeg :=0;_aeg < _bcd ;_aeg ++{_fgfa :=uint (7-_aeg );
if _gag ._cdbd {_gcfc =_gag .overrideAtTemplate0b (_acd ,_abab +_aeg ,_gdd ,int (_afcc ),_aeg ,int (_fgfa ));_gag ._ceb .SetIndex (int32 (_gcfc ));}else {_gag ._ceb .SetIndex (int32 (_acd ));};var _gea int ;_gea ,_bgce =_gag ._dcaa .DecodeBit (_gag ._ceb );
if _bgce !=nil {return _gg .Wrap (_bgce ,_fcd ,"");};_afcc |=byte (_gea <<_fgfa );_acd =((_acd &0x7bf7)<<1)|_gea |((_aeca >>_fgfa )&0x10)|((_gge >>_fgfa )&0x800);};if _ecf :=_gag .Bitmap .SetByte (_agcd ,_afcc );_ecf !=nil {return _gg .Wrap (_ecf ,_fcd ,"");
};_agcd ++;_fef ++;};return nil ;};type PatternDictionary struct{_dac *_ac .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;
Patterns []*_ge .Bitmap ;GrayMax uint32 ;};func (_fceag *TextRegion )decodeID ()(int64 ,error ){if _fceag .IsHuffmanEncoded {if _fceag ._aagb ==nil {_adbf ,_ead :=_fceag ._fbdf .ReadBits (byte (_fceag ._dbbd ));return int64 (_adbf ),_ead ;};return _fceag ._aagb .Decode (_fceag ._fbdf );
};return _fceag ._fbfg .DecodeIAID (uint64 (_fceag ._dbbd ),_fceag ._gagf );};func (_gdge *TextRegion )symbolIDCodeLengths ()error {var (_gdfb []*_ba .Code ;_feec uint64 ;_bebe _ba .Tabler ;_ggcbc error ;);for _debd :=0;_debd < 35;_debd ++{_feec ,_ggcbc =_gdge ._fbdf .ReadBits (4);
if _ggcbc !=nil {return _ggcbc ;};_bcge :=int (_feec &0xf);if _bcge > 0{_gdfb =append (_gdfb ,_ba .NewCode (int32 (_bcge ),0,int32 (_debd ),false ));};};_bebe ,_ggcbc =_ba .NewFixedSizeTable (_gdfb );if _ggcbc !=nil {return _ggcbc ;};var (_agcdf int64 ;
_ecdcc uint32 ;_fcef []*_ba .Code ;_dgbbf int64 ;);for _ecdcc < _gdge .NumberOfSymbols {_dgbbf ,_ggcbc =_bebe .Decode (_gdge ._fbdf );if _ggcbc !=nil {return _ggcbc ;};if _dgbbf < 32{if _dgbbf > 0{_fcef =append (_fcef ,_ba .NewCode (int32 (_dgbbf ),0,int32 (_ecdcc ),false ));
};_agcdf =_dgbbf ;_ecdcc ++;}else {var _gfdg ,_ebfde int64 ;switch _dgbbf {case 32:_feec ,_ggcbc =_gdge ._fbdf .ReadBits (2);if _ggcbc !=nil {return _ggcbc ;};_gfdg =3+int64 (_feec );if _ecdcc > 0{_ebfde =_agcdf ;};case 33:_feec ,_ggcbc =_gdge ._fbdf .ReadBits (3);
if _ggcbc !=nil {return _ggcbc ;};_gfdg =3+int64 (_feec );case 34:_feec ,_ggcbc =_gdge ._fbdf .ReadBits (7);if _ggcbc !=nil {return _ggcbc ;};_gfdg =11+int64 (_feec );};for _dafeg :=0;_dafeg < int (_gfdg );_dafeg ++{if _ebfde > 0{_fcef =append (_fcef ,_ba .NewCode (int32 (_ebfde ),0,int32 (_ecdcc ),false ));
};_ecdcc ++;};};};_gdge ._fbdf .Align ();_gdge ._aagb ,_ggcbc =_ba .NewFixedSizeTable (_fcef );return _ggcbc ;};type SymbolDictionary struct{_dcdd *_ac .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_gfgc bool ;_fcf bool ;SdHuffAggInstanceSelection bool ;
SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;
Header *Header ;_agcb uint32 ;_befga []*_ge .Bitmap ;_gcagf uint32 ;_decb []*_ge .Bitmap ;_bbgd _ba .Tabler ;_bbece _ba .Tabler ;_bbgg _ba .Tabler ;_gdba _ba .Tabler ;_agae []*_ge .Bitmap ;_ebbd []*_ge .Bitmap ;_bega *_fb .Decoder ;_cddb *TextRegion ;_ccfa *GenericRegion ;
_beec *GenericRefinementRegion ;_bfab *_fb .DecoderStats ;_acbd *_fb .DecoderStats ;_accc *_fb .DecoderStats ;_bccc *_fb .DecoderStats ;_abgf *_fb .DecoderStats ;_bcbe *_fb .DecoderStats ;_faca *_fb .DecoderStats ;_deeg *_fb .DecoderStats ;_accg *_fb .DecoderStats ;
_cedf int8 ;_fedd *_ge .Bitmaps ;_cgcc []int ;_facg map[int ]int ;_bgbd bool ;};func (_eba *Header )CleanSegmentData (){if _eba .SegmentData !=nil {_eba .SegmentData =nil ;};};func (_bedcd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bedcd ._fcbc };
func (_dbgd *SymbolDictionary )decodeHeightClassBitmap (_ccgf *_ge .Bitmap ,_beeb int64 ,_cbgea int ,_fgcb []int )error {for _cdaf :=_beeb ;_cdaf < int64 (_dbgd ._gcagf );_cdaf ++{var _ebcec int ;for _agfa :=_beeb ;_agfa <=_cdaf -1;_agfa ++{_ebcec +=_fgcb [_agfa ];
};_cegbd :=_ee .Rect (_ebcec ,0,_ebcec +_fgcb [_cdaf ],_cbgea );_cacc ,_adabe :=_ge .Extract (_cegbd ,_ccgf );if _adabe !=nil {return _adabe ;};_dbgd ._decb [_cdaf ]=_cacc ;_dbgd ._ebbd =append (_dbgd ._ebbd ,_cacc );};return nil ;};func (_dbde *RegionSegment )String ()string {_fbec :=&_c .Builder {};
_fbec .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_fbec .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dbde .BitmapWidth ,_dbde .BitmapHeight ));
_fbec .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dbde .XLocation ,_dbde .YLocation ));_fbec .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dbde .CombinaionOperator ));
return _fbec .String ();};func (_dgbe *SymbolDictionary )decodeNewSymbols (_daaab ,_gfddc uint32 ,_caef *_ge .Bitmap ,_bada ,_dabg int32 )error {if _dgbe ._beec ==nil {_dgbe ._beec =_adf (_dgbe ._dcdd ,nil );if _dgbe ._bega ==nil {var _cbgg error ;_dgbe ._bega ,_cbgg =_fb .New (_dgbe ._dcdd );
if _cbgg !=nil {return _cbgg ;};};if _dgbe ._bfab ==nil {_dgbe ._bfab =_fb .NewStats (65536,1);};};_dgbe ._beec .setParameters (_dgbe ._bfab ,_dgbe ._bega ,_dgbe .SdrTemplate ,_daaab ,_gfddc ,_caef ,_bada ,_dabg ,false ,_dgbe .SdrATX ,_dgbe .SdrATY );return _dgbe .addSymbol (_dgbe ._beec );
};func (_egdcg *TextRegion )decodeRdy ()(int64 ,error ){const _adfc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _egdcg .IsHuffmanEncoded {if _egdcg .SbHuffRDY ==3{if _egdcg ._geee ==nil {var (_agfba int ;_gacfg error ;);if _egdcg .SbHuffFS ==3{_agfba ++;
};if _egdcg .SbHuffDS ==3{_agfba ++;};if _egdcg .SbHuffDT ==3{_agfba ++;};if _egdcg .SbHuffRDWidth ==3{_agfba ++;};if _egdcg .SbHuffRDHeight ==3{_agfba ++;};if _egdcg .SbHuffRDX ==3{_agfba ++;};_egdcg ._geee ,_gacfg =_egdcg .getUserTable (_agfba );if _gacfg !=nil {return 0,_gg .Wrap (_gacfg ,_adfc ,"");
};};return _egdcg ._geee .Decode (_egdcg ._fbdf );};_gega ,_dgad :=_ba .GetStandardTable (14+int (_egdcg .SbHuffRDY ));if _dgad !=nil {return 0,_dgad ;};return _gega .Decode (_egdcg ._fbdf );};_dfgc ,_fbaed :=_egdcg ._fbfg .DecodeInt (_egdcg ._cbeg );if _fbaed !=nil {return 0,_gg .Wrap (_fbaed ,_adfc ,"");
};return int64 (_dfgc ),nil ;};func (_cgcg *TableSegment )HtPS ()int32 {return _cgcg ._eeac };func _adf (_agf *_ac .Reader ,_ffb *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_abg :_agf ,RegionInfo :NewRegionSegment (_agf ),_ddg :_ffb ,_cb :&template0 {},_ddc :&template1 {}};
};func (_ff *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ceg ,_ca ,_fgaf ,_beb ,_dbg ,_cea ,_de ,_cdb ,_egg int )(_ded error ){var (_fba ,_ege int ;_cbgd ,_eeg int ;_fdf ,_cga int ;_acf byte ;);if _ceg > 0{_acf ,_ded =_ff .RegionBitmap .GetByte (_de -_fgaf );
if _ded !=nil {return _ded ;};_cbgd =int (_acf );};if _cdb > 0&&_cdb <=_ff .ReferenceBitmap .Height {_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg -_beb +_cea );if _ded !=nil {return _ded ;};_eeg =int (_acf )<<2;};if _cdb >=0&&_cdb < _ff .ReferenceBitmap .Height {_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg +_cea );
if _ded !=nil {return _ded ;};_fdf =int (_acf );};if _cdb > -2&&_cdb < _ff .ReferenceBitmap .Height -1{_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg +_beb +_cea );if _ded !=nil {return _ded ;};_cga =int (_acf );};_fba =((_cbgd >>5)&0x6)|((_cga >>2)&0x30)|(_fdf &0xc0)|(_eeg &0x200);
_ege =((_cga >>2)&0x70)|(_fdf &0xc0)|(_eeg &0x700);var _dcdb int ;for _gdf :=0;_gdf < _dbg ;_gdf =_dcdb {var (_agc int ;_cbe int ;);_dcdb =_gdf +8;if _agc =_ca -_gdf ;_agc > 8{_agc =8;};_ad :=_dcdb < _ca ;_bbg :=_dcdb < _ff .ReferenceBitmap .Width ;_edf :=_cea +1;
if _ceg > 0{_acf =0;if _ad {_acf ,_ded =_ff .RegionBitmap .GetByte (_de -_fgaf +1);if _ded !=nil {return _ded ;};};_cbgd =(_cbgd <<8)|int (_acf );};if _cdb > 0&&_cdb <=_ff .ReferenceBitmap .Height {var _baca int ;if _bbg {_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg -_beb +_edf );
if _ded !=nil {return _ded ;};_baca =int (_acf )<<2;};_eeg =(_eeg <<8)|_baca ;};if _cdb >=0&&_cdb < _ff .ReferenceBitmap .Height {_acf =0;if _bbg {_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg +_edf );if _ded !=nil {return _ded ;};};_fdf =(_fdf <<8)|int (_acf );
};if _cdb > -2&&_cdb < (_ff .ReferenceBitmap .Height -1){_acf =0;if _bbg {_acf ,_ded =_ff .ReferenceBitmap .GetByte (_egg +_beb +_edf );if _ded !=nil {return _ded ;};};_cga =(_cga <<8)|int (_acf );};for _ebb :=0;_ebb < _agc ;_ebb ++{var _fdc int ;_bbd :=(_ege >>4)&0x1ff;
switch _bbd {case 0x1ff:_fdc =1;case 0x00:_fdc =0;default:_ff ._ea .SetIndex (int32 (_fba ));_fdc ,_ded =_ff ._dg .DecodeBit (_ff ._ea );if _ded !=nil {return _ded ;};};_fgcc :=uint (7-_ebb );_cbe |=_fdc <<_fgcc ;_fba =((_fba &0x0d6)<<1)|_fdc |(_cbgd >>_fgcc +5)&0x002|((_cga >>_fgcc +2)&0x010)|((_fdf >>_fgcc )&0x040)|((_eeg >>_fgcc )&0x200);
_ege =((_ege &0xdb)<<1)|((_cga >>_fgcc +2)&0x010)|((_fdf >>_fgcc )&0x080)|((_eeg >>_fgcc )&0x400);};_ded =_ff .RegionBitmap .SetByte (_de ,byte (_cbe ));if _ded !=nil {return _ded ;};_de ++;_egg ++;};return nil ;};func (_cgdf *Header )readSegmentDataLength (_fdea *_ac .Reader )(_edfd error ){_cgdf .SegmentDataLength ,_edfd =_fdea .ReadBits (32);
if _edfd !=nil {return _edfd ;};_cgdf .SegmentDataLength &=_a .MaxInt32 ;return nil ;};type template0 struct{};func (_gcfca *RegionSegment )readCombinationOperator ()error {_cbcb ,_cffb :=_gcfca ._ggfb .ReadBits (3);if _cffb !=nil {return _cffb ;};_gcfca .CombinaionOperator =_ge .CombinationOperator (_cbcb &0xF);
return nil ;};func (_ffcf *TextRegion )checkInput ()error {const _efad ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_ffcf .UseRefinement {if _ffcf .SbrTemplate !=0{_gd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_ffcf .SbrTemplate =0;};};if _ffcf .SbHuffFS ==2||_ffcf .SbHuffRDWidth ==2||_ffcf .SbHuffRDHeight ==2||_ffcf .SbHuffRDX ==2||_ffcf .SbHuffRDY ==2{return _gg .Error (_efad ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ffcf .UseRefinement {if _ffcf .SbHuffRSize !=0{_gd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ffcf .SbHuffRSize =0;};if _ffcf .SbHuffRDY !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ffcf .SbHuffRDY =0;};if _ffcf .SbHuffRDX !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ffcf .SbHuffRDX =0;};if _ffcf .SbHuffRDWidth !=0{_gd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ffcf .SbHuffRDWidth =0;};if _ffcf .SbHuffRDHeight !=0{_gd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ffcf .SbHuffRDHeight =0;};};return nil ;
};type RegionSegment struct{_ggfb *_ac .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ge .CombinationOperator ;};func (_ddbc *TextRegion )getUserTable (_ddbgb int )(_ba .Tabler ,error ){const _bdaeg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _fbgd int ;for _ ,_aacg :=range _ddbc .Header .RTSegments {if _aacg .Type ==53{if _fbgd ==_ddbgb {_degfb ,_efgg :=_aacg .GetSegmentData ();if _efgg !=nil {return nil ,_efgg ;};_fcbe ,_bcgc :=_degfb .(*TableSegment );if !_bcgc {_gd .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_aacg .SegmentNumber ));
return nil ,_gg .Error (_bdaeg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ba .NewEncodedTable (_fcbe );};_fbgd ++;};};return nil ,nil ;};func (_aaf *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_egae :=range _aaf .Header .RTSegments {if _egae .Type ==0{_gdeb ,_gcdc :=_egae .GetSegmentData ();if _gcdc !=nil {return _gcdc ;
};_bbdc ,_cgcfc :=_gdeb .(*SymbolDictionary );if !_cgcfc {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gdeb );
};_geff ,_gcdc :=_bbdc .GetDictionary ();if _gcdc !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_egae .SegmentNumber ,_gcdc .Error ());
};_aaf ._befga =append (_aaf ._befga ,_geff ...);_aaf ._agcb +=_bbdc .NumberOfExportedSymbols ;};};return nil ;};func (_gfgd *TextRegion )readRegionFlags ()error {var (_ccge int ;_ccabc uint64 ;_dgagc error ;);_ccge ,_dgagc =_gfgd ._fbdf .ReadBit ();if _dgagc !=nil {return _dgagc ;
};_gfgd .SbrTemplate =int8 (_ccge );_ccabc ,_dgagc =_gfgd ._fbdf .ReadBits (5);if _dgagc !=nil {return _dgagc ;};_gfgd .SbDsOffset =int8 (_ccabc );if _gfgd .SbDsOffset > 0x0f{_gfgd .SbDsOffset -=0x20;};_ccge ,_dgagc =_gfgd ._fbdf .ReadBit ();if _dgagc !=nil {return _dgagc ;
};_gfgd .DefaultPixel =int8 (_ccge );_ccabc ,_dgagc =_gfgd ._fbdf .ReadBits (2);if _dgagc !=nil {return _dgagc ;};_gfgd .CombinationOperator =_ge .CombinationOperator (int (_ccabc )&0x3);_ccge ,_dgagc =_gfgd ._fbdf .ReadBit ();if _dgagc !=nil {return _dgagc ;
};_gfgd .IsTransposed =int8 (_ccge );_ccabc ,_dgagc =_gfgd ._fbdf .ReadBits (2);if _dgagc !=nil {return _dgagc ;};_gfgd .ReferenceCorner =int16 (_ccabc )&0x3;_ccabc ,_dgagc =_gfgd ._fbdf .ReadBits (2);if _dgagc !=nil {return _dgagc ;};_gfgd .LogSBStrips =int16 (_ccabc )&0x3;
_gfgd .SbStrips =1<<uint (_gfgd .LogSBStrips );_ccge ,_dgagc =_gfgd ._fbdf .ReadBit ();if _dgagc !=nil {return _dgagc ;};if _ccge ==1{_gfgd .UseRefinement =true ;};_ccge ,_dgagc =_gfgd ._fbdf .ReadBit ();if _dgagc !=nil {return _dgagc ;};if _ccge ==1{_gfgd .IsHuffmanEncoded =true ;
};return nil ;};func (_aacd *Header )writeReferredToSegments (_geag _ac .BinaryWriter )(_gfcc int ,_bgbeg error ){const _bbec ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_aage uint16 ;_dceg uint32 ;);_cbge :=_aacd .referenceSize ();_efab :=1;_fad :=make ([]byte ,_cbge );for _ ,_bbdd :=range _aacd .RTSNumbers {switch _cbge {case 4:_dceg =uint32 (_bbdd );_dd .BigEndian .PutUint32 (_fad ,_dceg );_efab ,_bgbeg =_geag .Write (_fad );
if _bgbeg !=nil {return 0,_gg .Wrap (_bgbeg ,_bbec ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_aage =uint16 (_bbdd );_dd .BigEndian .PutUint16 (_fad ,_aage );_efab ,_bgbeg =_geag .Write (_fad );if _bgbeg !=nil {return 0,_gg .Wrap (_bgbeg ,_bbec ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _bgbeg =_geag .WriteByte (byte (_bbdd ));_bgbeg !=nil {return 0,_gg .Wrap (_bgbeg ,_bbec ,"\u0075\u0069\u006et\u0038");};};_gfcc +=_efab ;};return _gfcc ,nil ;};func (_dccg *Header )readHeaderFlags ()error {const _bdce ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_bfdc ,_fefc :=_dccg .Reader .ReadBit ();if _fefc !=nil {return _gg .Wrap (_fefc ,_bdce ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bfdc !=0{_dccg .RetainFlag =true ;};_bfdc ,_fefc =_dccg .Reader .ReadBit ();if _fefc !=nil {return _gg .Wrap (_fefc ,_bdce ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _bfdc !=0{_dccg .PageAssociationFieldSize =true ;};_acgd ,_fefc :=_dccg .Reader .ReadBits (6);if _fefc !=nil {return _gg .Wrap (_fefc ,_bdce ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dccg .Type =Type (int (_acgd ));
return nil ;};func (_cfgg *GenericRegion )InitEncode (bm *_ge .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _afg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _gg .Error (_afg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gg .Error (_afg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_cfgg .Bitmap =bm ;_cfgg .GBTemplate =byte (template );switch _cfgg .GBTemplate {case 0:_cfgg .GBAtX =[]int8 {3,-3,2,-2};_cfgg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cfgg .GBAtX =[]int8 {3};_cfgg .GBAtY =[]int8 {-1};case 2,3:_cfgg .GBAtX =[]int8 {2};_cfgg .GBAtY =[]int8 {-1};
default:return _gg .Errorf (_afg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_cfgg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cfgg .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_deceb *TextRegion )decodeRdx ()(int64 ,error ){const _dffbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _deceb .IsHuffmanEncoded {if _deceb .SbHuffRDX ==3{if _deceb ._ddcc ==nil {var (_eceb int ;_gcdf error ;);if _deceb .SbHuffFS ==3{_eceb ++;};if _deceb .SbHuffDS ==3{_eceb ++;};if _deceb .SbHuffDT ==3{_eceb ++;};if _deceb .SbHuffRDWidth ==3{_eceb ++;
};if _deceb .SbHuffRDHeight ==3{_eceb ++;};_deceb ._ddcc ,_gcdf =_deceb .getUserTable (_eceb );if _gcdf !=nil {return 0,_gg .Wrap (_gcdf ,_dffbb ,"");};};return _deceb ._ddcc .Decode (_deceb ._fbdf );};_dege ,_ebfe :=_ba .GetStandardTable (14+int (_deceb .SbHuffRDX ));
if _ebfe !=nil {return 0,_gg .Wrap (_ebfe ,_dffbb ,"");};return _dege .Decode (_deceb ._fbdf );};_efgb ,_aedd :=_deceb ._fbfg .DecodeInt (_deceb ._gdef );if _aedd !=nil {return 0,_gg .Wrap (_aedd ,_dffbb ,"");};return int64 (_efgb ),nil ;};func (_ecdff *SymbolDictionary )decodeHeightClassCollectiveBitmap (_eebea int64 ,_cbbe ,_daec uint32 )(*_ge .Bitmap ,error ){if _eebea ==0{_ffda :=_ge .New (int (_daec ),int (_cbbe ));
var (_cfcb byte ;_edbe error ;);for _gddc :=0;_gddc < len (_ffda .Data );_gddc ++{_cfcb ,_edbe =_ecdff ._dcdd .ReadByte ();if _edbe !=nil {return nil ,_edbe ;};if _edbe =_ffda .SetByte (_gddc ,_cfcb );_edbe !=nil {return nil ,_edbe ;};};return _ffda ,nil ;
};if _ecdff ._ccfa ==nil {_ecdff ._ccfa =NewGenericRegion (_ecdff ._dcdd );};_ecdff ._ccfa .setParameters (true ,_ecdff ._dcdd .AbsolutePosition (),_eebea ,_cbbe ,_daec );_beabb ,_eafg :=_ecdff ._ccfa .GetRegionBitmap ();if _eafg !=nil {return nil ,_eafg ;
};return _beabb ,nil ;};func (_bfc *GenericRefinementRegion )Init (header *Header ,r *_ac .Reader )error {_bfc ._ddg =header ;_bfc ._abg =r ;_bfc .RegionInfo =NewRegionSegment (r );return _bfc .parseHeader ();};func (_fbae *SymbolDictionary )setAtPixels ()error {if _fbae .IsHuffmanEncoded {return nil ;
};_ceef :=1;if _fbae .SdTemplate ==0{_ceef =4;};if _geffa :=_fbae .readAtPixels (_ceef );_geffa !=nil {return _geffa ;};return nil ;};func (_gda *HalftoneRegion )renderPattern (_ccfc [][]int )(_bbbd error ){var _gbgd ,_fddg int ;for _fdfd :=0;_fdfd < int (_gda .HGridHeight );
_fdfd ++{for _gbec :=0;_gbec < int (_gda .HGridWidth );_gbec ++{_gbgd =_gda .computeX (_fdfd ,_gbec );_fddg =_gda .computeY (_fdfd ,_gbec );_ecge :=_gda .Patterns [_ccfc [_fdfd ][_gbec ]];if _bbbd =_ge .Blit (_ecge ,_gda .HalftoneRegionBitmap ,_gbgd +int (_gda .HGridX ),_fddg +int (_gda .HGridY ),_gda .CombinationOperator );
_bbbd !=nil {return _bbbd ;};};};return nil ;};func (_fbc *Header )writeFlags (_caea _ac .BinaryWriter )(_adcec error ){const _egbb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_dcf :=byte (_fbc .Type );
if _adcec =_caea .WriteByte (_dcf );_adcec !=nil {return _gg .Wrap (_adcec ,_egbb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_fbc .RetainFlag &&!_fbc .PageAssociationFieldSize {return nil ;};if _adcec =_caea .SkipBits (-8);_adcec !=nil {return _gg .Wrap (_adcec ,_egbb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fedb int ;if _fbc .RetainFlag {_fedb =1;};if _adcec =_caea .WriteBit (_fedb );_adcec !=nil {return _gg .Wrap (_adcec ,_egbb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fedb =0;if _fbc .PageAssociationFieldSize {_fedb =1;
};if _adcec =_caea .WriteBit (_fedb );_adcec !=nil {return _gg .Wrap (_adcec ,_egbb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_caea .FinishByte ();return nil ;};func (_agff *HalftoneRegion )computeSegmentDataStructure ()error {_agff .DataOffset =_agff ._geg .AbsolutePosition ();
_agff .DataHeaderLength =_agff .DataOffset -_agff .DataHeaderOffset ;_agff .DataLength =int64 (_agff ._geg .AbsoluteLength ())-_agff .DataHeaderLength ;return nil ;};func (_bcdd *GenericRegion )overrideAtTemplate3 (_abdb ,_bgag ,_ffd ,_ccca ,_ecd int )int {_abdb &=0x3EF;
if _bcdd .GBAtY [0]==0&&_bcdd .GBAtX [0]>=-int8 (_ecd ){_abdb |=(_ccca >>uint (7-(int8 (_ecd )+_bcdd .GBAtX [0]))&0x1)<<4;}else {_abdb |=int (_bcdd .getPixel (_bgag +int (_bcdd .GBAtX [0]),_ffd +int (_bcdd .GBAtY [0])))<<4;};return _abdb ;};type template1 struct{};
func (_eccaa *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gcee ,_cdbg uint32 )error {if _eccaa ._ccfa ==nil {_eccaa ._ccfa =NewGenericRegion (_eccaa ._dcdd );};_eccaa ._ccfa .setParametersWithAt (false ,byte (_eccaa .SdTemplate ),false ,false ,_eccaa .SdATX ,_eccaa .SdATY ,_gcee ,_cdbg ,_eccaa ._bfab ,_eccaa ._bega );
return _eccaa .addSymbol (_eccaa ._ccfa );};func (_ecca *Header )writeSegmentDataLength (_cdeg _ac .BinaryWriter )(_gbf int ,_ggd error ){_ebeg :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_ebeg ,uint32 (_ecca .SegmentDataLength ));if _gbf ,_ggd =_cdeg .Write (_ebeg );
_ggd !=nil {return 0,_gg .Wrap (_ggd ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _gbf ,nil ;};func (_aeagf *TextRegion )setContexts (_daade *_fb .DecoderStats ,_fdad *_fb .DecoderStats ,_cedb *_fb .DecoderStats ,_facd *_fb .DecoderStats ,_gcdfe *_fb .DecoderStats ,_ebae *_fb .DecoderStats ,_dafe *_fb .DecoderStats ,_egdb *_fb .DecoderStats ,_bdcede *_fb .DecoderStats ,_gcaa *_fb .DecoderStats ){_aeagf ._edde =_fdad ;
_aeagf ._gffc =_cedb ;_aeagf ._dfgeff =_facd ;_aeagf ._gffe =_gcdfe ;_aeagf ._bffb =_dafe ;_aeagf ._fffg =_egdb ;_aeagf ._gagf =_ebae ;_aeagf ._gdef =_bdcede ;_aeagf ._cbeg =_gcaa ;_aeagf ._afdc =_daade ;};func (_affce *SymbolDictionary )encodeNumSyms (_ccb _ac .BinaryWriter )(_effc int ,_febc error ){const _fgaab ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_fgafc :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_fgafc ,_affce .NumberOfExportedSymbols );if _effc ,_febc =_ccb .Write (_fgafc );_febc !=nil {return _effc ,_gg .Wrap (_febc ,_fgaab ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_dd .BigEndian .PutUint32 (_fgafc ,_affce .NumberOfNewSymbols );_bbeb ,_febc :=_ccb .Write (_fgafc );if _febc !=nil {return _effc ,_gg .Wrap (_febc ,_fgaab ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _effc +_bbeb ,nil ;
};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ge .Bitmap ,error );};func (_ced *PatternDictionary )GetDictionary ()([]*_ge .Bitmap ,error ){if _ced .Patterns !=nil {return _ced .Patterns ,nil ;};if !_ced .IsMMREncoded {_ced .setGbAtPixels ();
};_gaef :=NewGenericRegion (_ced ._dac );_gaef .setParametersMMR (_ced .IsMMREncoded ,_ced .DataOffset ,_ced .DataLength ,uint32 (_ced .HdpHeight ),(_ced .GrayMax +1)*uint32 (_ced .HdpWidth ),_ced .HDTemplate ,false ,false ,_ced .GBAtX ,_ced .GBAtY );_decf ,_bfdf :=_gaef .GetRegionBitmap ();
if _bfdf !=nil {return nil ,_bfdf ;};if _bfdf =_ced .extractPatterns (_decf );_bfdf !=nil {return nil ,_bfdf ;};return _ced .Patterns ,nil ;};func (_cgee *GenericRefinementRegion )getPixel (_bbc *_ge .Bitmap ,_ebe ,_eag int )int {if _ebe < 0||_ebe >=_bbc .Width {return 0;
};if _eag < 0||_eag >=_bbc .Height {return 0;};if _bbc .GetPixel (_ebe ,_eag ){return 1;};return 0;};func (_gaee *PageInformationSegment )readIsStriped ()error {_abag ,_cfae :=_gaee ._efbd .ReadBit ();if _cfae !=nil {return _cfae ;};if _abag ==1{_gaee .IsStripe =true ;
};return nil ;};func (_ggad *SymbolDictionary )setInSyms ()error {if _ggad .Header .RTSegments !=nil {return _ggad .retrieveImportSymbols ();};_ggad ._befga =make ([]*_ge .Bitmap ,0);return nil ;};func (_gfe *template0 )setIndex (_bdb *_fb .DecoderStats ){_bdb .SetIndex (0x100)};
func (_dbgb *GenericRegion )String ()string {_efa :=&_c .Builder {};_efa .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_efa .WriteString (_dbgb .RegionSegment .String ()+"\u000a");_efa .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dbgb .UseExtTemplates ));
_efa .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dbgb .IsTPGDon ));_efa .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dbgb .GBTemplate ));
_efa .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dbgb .IsMMREncoded ));_efa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dbgb .GBAtX ));
_efa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dbgb .GBAtY ));_efa .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dbgb .GBAtOverride ));
return _efa .String ();};func (_acec *TableSegment )HtLow ()int32 {return _acec ._agdge };var (_afac Segmenter ;_ecbd =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _afac },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _afac },TProfiles :func ()Segmenter {return _afac },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _afac },TBitmap :func ()Segmenter {return _afac }};
);func (_ecaf *HalftoneRegion )GetPatterns ()([]*_ge .Bitmap ,error ){var (_cdef []*_ge .Bitmap ;_bdcd error ;);for _ ,_agd :=range _ecaf ._edag .RTSegments {var _ega Segmenter ;_ega ,_bdcd =_agd .GetSegmentData ();if _bdcd !=nil {_gd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_bdcd );
return nil ,_bdcd ;};_ecfg ,_daeg :=_ega .(*PatternDictionary );if !_daeg {_bdcd =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ega );
return nil ,_bdcd ;};var _adad []*_ge .Bitmap ;_adad ,_bdcd =_ecfg .GetDictionary ();if _bdcd !=nil {_gd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bdcd );
return nil ,_bdcd ;};_cdef =append (_cdef ,_adad ...);};return _cdef ,nil ;};func (_dgde *SymbolDictionary )setSymbolsArray ()error {if _dgde ._befga ==nil {if _baaf :=_dgde .retrieveImportSymbols ();_baaf !=nil {return _baaf ;};};if _dgde ._ebbd ==nil {_dgde ._ebbd =append (_dgde ._ebbd ,_dgde ._befga ...);
};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_aaba *GenericRegion )setOverrideFlag (_gbb int ){_aaba .GBAtOverride [_gbb ]=true ;_aaba ._cdbd =true ;};func (_ebad *TableSegment )HtHigh ()int32 {return _ebad ._dbcf };
func (_ccbf *SymbolDictionary )setExportedSymbols (_eggfb []int ){for _dgcc :=uint32 (0);_dgcc < _ccbf ._agcb +_ccbf .NumberOfNewSymbols ;_dgcc ++{if _eggfb [_dgcc ]==1{var _daag *_ge .Bitmap ;if _dgcc < _ccbf ._agcb {_daag =_ccbf ._befga [_dgcc ];}else {_daag =_ccbf ._decb [_dgcc -_ccbf ._agcb ];
};_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_daag );_ccbf ._agae =append (_ccbf ._agae ,_daag );
};};};func (_bebg *GenericRegion )decodeTemplate0a (_addd ,_afe ,_dffb int ,_ece ,_fca int )(_fabf error ){const _def ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_fda ,_adc int ;_ecg ,_aaeg int ;_agfg byte ;
_faf int ;);if _addd >=1{_agfg ,_fabf =_bebg .Bitmap .GetByte (_fca );if _fabf !=nil {return _gg .Wrap (_fabf ,_def ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ecg =int (_agfg );};if _addd >=2{_agfg ,_fabf =_bebg .Bitmap .GetByte (_fca -_bebg .Bitmap .RowStride );
if _fabf !=nil {return _gg .Wrap (_fabf ,_def ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aaeg =int (_agfg )<<6;};_fda =(_ecg &0xf0)|(_aaeg &0x3800);for _ccfd :=0;_ccfd < _dffb ;_ccfd =_faf {var (_gbe byte ;_egcg int ;);_faf =_ccfd +8;if _efg :=_afe -_ccfd ;
_efg > 8{_egcg =8;}else {_egcg =_efg ;};if _addd > 0{_ecg <<=8;if _faf < _afe {_agfg ,_fabf =_bebg .Bitmap .GetByte (_fca +1);if _fabf !=nil {return _gg .Wrap (_fabf ,_def ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ecg |=int (_agfg );};};if _addd > 1{_eacc :=_fca -_bebg .Bitmap .RowStride +1;
_aaeg <<=8;if _faf < _afe {_agfg ,_fabf =_bebg .Bitmap .GetByte (_eacc );if _fabf !=nil {return _gg .Wrap (_fabf ,_def ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aaeg |=int (_agfg )<<6;}else {_aaeg |=0;};};for _adg :=0;_adg < _egcg ;_adg ++{_edg :=uint (7-_adg );
if _bebg ._cdbd {_adc =_bebg .overrideAtTemplate0a (_fda ,_ccfd +_adg ,_addd ,int (_gbe ),_adg ,int (_edg ));_bebg ._ceb .SetIndex (int32 (_adc ));}else {_bebg ._ceb .SetIndex (int32 (_fda ));};var _dbcc int ;_dbcc ,_fabf =_bebg ._dcaa .DecodeBit (_bebg ._ceb );
if _fabf !=nil {return _gg .Wrap (_fabf ,_def ,"");};_gbe |=byte (_dbcc )<<_edg ;_fda =((_fda &0x7bf7)<<1)|_dbcc |((_ecg >>_edg )&0x10)|((_aaeg >>_edg )&0x800);};if _bbe :=_bebg .Bitmap .SetByte (_ece ,_gbe );_bbe !=nil {return _gg .Wrap (_bbe ,_def ,"");
};_ece ++;_fca ++;};return nil ;};func _faaa (_bbee int )int {if _bbee ==0{return 0;};_bbee |=_bbee >>1;_bbee |=_bbee >>2;_bbee |=_bbee >>4;_bbee |=_bbee >>8;_bbee |=_bbee >>16;return (_bbee +1)>>1;};type Type int ;type Segmenter interface{Init (_gcb *Header ,_egec *_ac .Reader )error ;
};func _acge (_added *_ac .Reader ,_fccf *Header )*TextRegion {_gdgb :=&TextRegion {_fbdf :_added ,Header :_fccf ,RegionInfo :NewRegionSegment (_added )};return _gdgb ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fdce *GenericRefinementRegion )parseHeader ()(_gcf error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_cdg :=_g .Now ();defer func (){if _gcf ==nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_cdg ).Nanoseconds ());
}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gcf );
};}();if _gcf =_fdce .RegionInfo .parseHeader ();_gcf !=nil {return _gcf ;};_ ,_gcf =_fdce ._abg .ReadBits (6);if _gcf !=nil {return _gcf ;};_fdce .IsTPGROn ,_gcf =_fdce ._abg .ReadBool ();if _gcf !=nil {return _gcf ;};var _baa int ;_baa ,_gcf =_fdce ._abg .ReadBit ();
if _gcf !=nil {return _gcf ;};_fdce .TemplateID =int8 (_baa );switch _fdce .TemplateID {case 0:_fdce .Template =_fdce ._cb ;if _gcf =_fdce .readAtPixels ();_gcf !=nil {return _gcf ;};case 1:_fdce .Template =_fdce ._ddc ;};return nil ;};func (_bdfe *TextRegion )setCodingStatistics ()error {if _bdfe ._edde ==nil {_bdfe ._edde =_fb .NewStats (512,1);
};if _bdfe ._gffc ==nil {_bdfe ._gffc =_fb .NewStats (512,1);};if _bdfe ._dfgeff ==nil {_bdfe ._dfgeff =_fb .NewStats (512,1);};if _bdfe ._gffe ==nil {_bdfe ._gffe =_fb .NewStats (512,1);};if _bdfe ._cceeb ==nil {_bdfe ._cceeb =_fb .NewStats (512,1);};
if _bdfe ._bffb ==nil {_bdfe ._bffb =_fb .NewStats (512,1);};if _bdfe ._fffg ==nil {_bdfe ._fffg =_fb .NewStats (512,1);};if _bdfe ._gagf ==nil {_bdfe ._gagf =_fb .NewStats (1<<uint (_bdfe ._dbbd ),1);};if _bdfe ._gdef ==nil {_bdfe ._gdef =_fb .NewStats (512,1);
};if _bdfe ._cbeg ==nil {_bdfe ._cbeg =_fb .NewStats (512,1);};if _bdfe ._fbfg ==nil {var _bdef error ;_bdfe ._fbfg ,_bdef =_fb .New (_bdfe ._fbdf );if _bdef !=nil {return _bdef ;};};return nil ;};func (_ffc *GenericRegion )Init (h *Header ,r *_ac .Reader )error {_ffc .RegionSegment =NewRegionSegment (r );
_ffc ._dbgg =r ;return _ffc .parseHeader ();};func (_cbgbg *SymbolDictionary )InitEncode (symbols *_ge .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gfbb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cbgbg .SdATX =[]int8 {3,-3,2,-2};_cbgbg .SdATY =[]int8 {-1,-1,-2,-2};_cbgbg ._fedd =symbols ;_cbgbg ._cgcc =make ([]int ,len (symbolList ));copy (_cbgbg ._cgcc ,symbolList );if len (_cbgbg ._cgcc )!=_cbgbg ._fedd .Size (){return _gg .Error (_gfbb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cbgbg .NumberOfNewSymbols =uint32 (symbols .Size ());_cbgbg .NumberOfExportedSymbols =uint32 (symbols .Size ());_cbgbg ._facg =symbolMap ;_cbgbg ._bgbd =unborderSymbols ;return nil ;};func (_aged *TextRegion )String ()string {_adaf :=&_c .Builder {};
_adaf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_adaf .WriteString (_aged .RegionInfo .String ()+"\u000a");_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_aged .SbrTemplate ));
_adaf .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_aged .SbDsOffset ));_adaf .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_aged .DefaultPixel ));
_adaf .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_aged .CombinationOperator ));_adaf .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_aged .IsTransposed ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aged .ReferenceCorner ));_adaf .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_aged .UseRefinement ));
_adaf .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_aged .IsHuffmanEncoded ));if _aged .IsHuffmanEncoded {_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aged .SbHuffRSize ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_aged .SbHuffRDY ));_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_aged .SbHuffRDX ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_aged .SbHuffRDHeight ));_adaf .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_aged .SbHuffRDWidth ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_aged .SbHuffDT ));_adaf .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_aged .SbHuffDS ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_aged .SbHuffFS ));};_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aged .SbrATX ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_aged .SbrATY ));_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aged .NumberOfSymbolInstances ));
_adaf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aged .SbrATX ));return _adaf .String ();};func (_dfaa *SymbolDictionary )readRegionFlags ()error {var (_ffdg uint64 ;_acgbg int ;);_ ,_dbaea :=_dfaa ._dcdd .ReadBits (3);
if _dbaea !=nil {return _dbaea ;};_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();if _dbaea !=nil {return _dbaea ;};_dfaa .SdrTemplate =int8 (_acgbg );_ffdg ,_dbaea =_dfaa ._dcdd .ReadBits (2);if _dbaea !=nil {return _dbaea ;};_dfaa .SdTemplate =int8 (_ffdg &0xf);
_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();if _dbaea !=nil {return _dbaea ;};if _acgbg ==1{_dfaa ._gfgc =true ;};_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();if _dbaea !=nil {return _dbaea ;};if _acgbg ==1{_dfaa ._fcf =true ;};_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();
if _dbaea !=nil {return _dbaea ;};if _acgbg ==1{_dfaa .SdHuffAggInstanceSelection =true ;};_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();if _dbaea !=nil {return _dbaea ;};_dfaa .SdHuffBMSizeSelection =int8 (_acgbg );_ffdg ,_dbaea =_dfaa ._dcdd .ReadBits (2);
if _dbaea !=nil {return _dbaea ;};_dfaa .SdHuffDecodeWidthSelection =int8 (_ffdg &0xf);_ffdg ,_dbaea =_dfaa ._dcdd .ReadBits (2);if _dbaea !=nil {return _dbaea ;};_dfaa .SdHuffDecodeHeightSelection =int8 (_ffdg &0xf);_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();
if _dbaea !=nil {return _dbaea ;};if _acgbg ==1{_dfaa .UseRefinementAggregation =true ;};_acgbg ,_dbaea =_dfaa ._dcdd .ReadBit ();if _dbaea !=nil {return _dbaea ;};if _acgbg ==1{_dfaa .IsHuffmanEncoded =true ;};return nil ;};var _ templater =&template0 {};
func (_agfe *GenericRegion )overrideAtTemplate0b (_cbc ,_edd ,_adfb ,_dgbb ,_cdce ,_eggc int )int {if _agfe .GBAtOverride [0]{_cbc &=0xFFFD;if _agfe .GBAtY [0]==0&&_agfe .GBAtX [0]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [0]&0x1))<<1;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [0]),_adfb +int (_agfe .GBAtY [0])))<<1;};};if _agfe .GBAtOverride [1]{_cbc &=0xDFFF;if _agfe .GBAtY [1]==0&&_agfe .GBAtX [1]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [1]&0x1))<<13;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [1]),_adfb +int (_agfe .GBAtY [1])))<<13;};};if _agfe .GBAtOverride [2]{_cbc &=0xFDFF;if _agfe .GBAtY [2]==0&&_agfe .GBAtX [2]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [2]&0x1))<<9;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [2]),_adfb +int (_agfe .GBAtY [2])))<<9;};};if _agfe .GBAtOverride [3]{_cbc &=0xBFFF;if _agfe .GBAtY [3]==0&&_agfe .GBAtX [3]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [3]&0x1))<<14;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [3]),_adfb +int (_agfe .GBAtY [3])))<<14;};};if _agfe .GBAtOverride [4]{_cbc &=0xEFFF;if _agfe .GBAtY [4]==0&&_agfe .GBAtX [4]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [4]&0x1))<<12;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [4]),_adfb +int (_agfe .GBAtY [4])))<<12;};};if _agfe .GBAtOverride [5]{_cbc &=0xFFDF;if _agfe .GBAtY [5]==0&&_agfe .GBAtX [5]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [5]&0x1))<<5;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [5]),_adfb +int (_agfe .GBAtY [5])))<<5;};};if _agfe .GBAtOverride [6]{_cbc &=0xFFFB;if _agfe .GBAtY [6]==0&&_agfe .GBAtX [6]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [6]&0x1))<<2;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [6]),_adfb +int (_agfe .GBAtY [6])))<<2;};};if _agfe .GBAtOverride [7]{_cbc &=0xFFF7;if _agfe .GBAtY [7]==0&&_agfe .GBAtX [7]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [7]&0x1))<<3;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [7]),_adfb +int (_agfe .GBAtY [7])))<<3;};};if _agfe .GBAtOverride [8]{_cbc &=0xF7FF;if _agfe .GBAtY [8]==0&&_agfe .GBAtX [8]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [8]&0x1))<<11;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [8]),_adfb +int (_agfe .GBAtY [8])))<<11;};};if _agfe .GBAtOverride [9]{_cbc &=0xFFEF;if _agfe .GBAtY [9]==0&&_agfe .GBAtX [9]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [9]&0x1))<<4;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [9]),_adfb +int (_agfe .GBAtY [9])))<<4;};};if _agfe .GBAtOverride [10]{_cbc &=0x7FFF;if _agfe .GBAtY [10]==0&&_agfe .GBAtX [10]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [10]&0x1))<<15;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [10]),_adfb +int (_agfe .GBAtY [10])))<<15;};};if _agfe .GBAtOverride [11]{_cbc &=0xFDFF;if _agfe .GBAtY [11]==0&&_agfe .GBAtX [11]>=-int8 (_cdce ){_cbc |=(_dgbb >>uint (int8 (_eggc )-_agfe .GBAtX [11]&0x1))<<10;
}else {_cbc |=int (_agfe .getPixel (_edd +int (_agfe .GBAtX [11]),_adfb +int (_agfe .GBAtY [11])))<<10;};};return _cbc ;};func (_fdcc *TextRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){if _fdcc .RegionBitmap !=nil {return _fdcc .RegionBitmap ,nil ;};
if !_fdcc .IsHuffmanEncoded {if _cgea :=_fdcc .setCodingStatistics ();_cgea !=nil {return nil ,_cgea ;};};if _bdff :=_fdcc .createRegionBitmap ();_bdff !=nil {return nil ,_bdff ;};if _gfgb :=_fdcc .decodeSymbolInstances ();_gfgb !=nil {return nil ,_gfgb ;
};return _fdcc .RegionBitmap ,nil ;};func (_bcde *TextRegion )decodeRdh ()(int64 ,error ){const _dgea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bcde .IsHuffmanEncoded {if _bcde .SbHuffRDHeight ==3{if _bcde ._gfdb ==nil {var (_edgg int ;_bfddd error ;
);if _bcde .SbHuffFS ==3{_edgg ++;};if _bcde .SbHuffDS ==3{_edgg ++;};if _bcde .SbHuffDT ==3{_edgg ++;};if _bcde .SbHuffRDWidth ==3{_edgg ++;};_bcde ._gfdb ,_bfddd =_bcde .getUserTable (_edgg );if _bfddd !=nil {return 0,_gg .Wrap (_bfddd ,_dgea ,"");};
};return _bcde ._gfdb .Decode (_bcde ._fbdf );};_adff ,_afbb :=_ba .GetStandardTable (14+int (_bcde .SbHuffRDHeight ));if _afbb !=nil {return 0,_gg .Wrap (_afbb ,_dgea ,"");};return _adff .Decode (_bcde ._fbdf );};_dfea ,_ebegb :=_bcde ._fbfg .DecodeInt (_bcde ._fffg );
if _ebegb !=nil {return 0,_gg .Wrap (_ebegb ,_dgea ,"");};return int64 (_dfea ),nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader *_ac .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_fddce *TextRegion )Encode (w _ac .BinaryWriter )(_ceeb int ,_ccbb error ){const _egeb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _ceeb ,_ccbb =_fddce .RegionInfo .Encode (w );_ccbb !=nil {return _ceeb ,_gg .Wrap (_ccbb ,_egeb ,"");};var _cgec int ;if _cgec ,_ccbb =_fddce .encodeFlags (w );_ccbb !=nil {return _ceeb ,_gg .Wrap (_ccbb ,_egeb ,"");};_ceeb +=_cgec ;if _cgec ,_ccbb =_fddce .encodeSymbols (w );
_ccbb !=nil {return _ceeb ,_gg .Wrap (_ccbb ,_egeb ,"");};_ceeb +=_cgec ;return _ceeb ,nil ;};func (_gbc *Header )GetSegmentData ()(Segmenter ,error ){var _dcab Segmenter ;if _gbc .SegmentData !=nil {_dcab =_gbc .SegmentData ;};if _dcab ==nil {_acc ,_bbaa :=_ecbd [_gbc .Type ];
if !_bbaa {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gbc .Type ,_gbc .Type );};_dcab =_acc ();
_gd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gbc .SegmentNumber ,_gbc .SegmentDataStartOffset );
_afcb ,_ecea :=_gbc .subInputReader ();if _ecea !=nil {return nil ,_ecea ;};if _ecdc :=_dcab .Init (_gbc ,_afcb );_ecdc !=nil {_gd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ecdc ,_dcab );
return nil ,_ecdc ;};_gbc .SegmentData =_dcab ;};return _dcab ,nil ;};func (_fgef *PageInformationSegment )readWidthAndHeight ()error {_ebbg ,_cdfg :=_fgef ._efbd .ReadBits (32);if _cdfg !=nil {return _cdfg ;};_fgef .PageBMWidth =int (_ebbg &_a .MaxInt32 );
_ebbg ,_cdfg =_fgef ._efbd .ReadBits (32);if _cdfg !=nil {return _cdfg ;};_fgef .PageBMHeight =int (_ebbg &_a .MaxInt32 );return nil ;};func (_ecbgb *TableSegment )parseHeader ()error {var (_bfdda int ;_bece uint64 ;_cggc error ;);_bfdda ,_cggc =_ecbgb ._bbcg .ReadBit ();
if _cggc !=nil {return _cggc ;};if _bfdda ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bfdda );
};if _bece ,_cggc =_ecbgb ._bbcg .ReadBits (3);_cggc !=nil {return _cggc ;};_ecbgb ._bbge =(int32 (_bece )+1)&0xf;if _bece ,_cggc =_ecbgb ._bbcg .ReadBits (3);_cggc !=nil {return _cggc ;};_ecbgb ._eeac =(int32 (_bece )+1)&0xf;if _bece ,_cggc =_ecbgb ._bbcg .ReadBits (32);
_cggc !=nil {return _cggc ;};_ecbgb ._agdge =int32 (_bece &_a .MaxInt32 );if _bece ,_cggc =_ecbgb ._bbcg .ReadBits (32);_cggc !=nil {return _cggc ;};_ecbgb ._dbcf =int32 (_bece &_a .MaxInt32 );return nil ;};func (_deg *GenericRegion )overrideAtTemplate1 (_ddd ,_dbed ,_abdfg ,_edcf ,_dgcgg int )int {_ddd &=0x1FF7;
if _deg .GBAtY [0]==0&&_deg .GBAtX [0]>=-int8 (_dgcgg ){_ddd |=(_edcf >>uint (7-(int8 (_dgcgg )+_deg .GBAtX [0]))&0x1)<<3;}else {_ddd |=int (_deg .getPixel (_dbed +int (_deg .GBAtX [0]),_abdfg +int (_deg .GBAtY [0])))<<3;};return _ddd ;};func (_feff *GenericRegion )setParametersMMR (_aag bool ,_aeac ,_bce int64 ,_gfbd ,_bcgga uint32 ,_afbf byte ,_acgb ,_deb bool ,_eagg ,_cgg []int8 ){_feff .DataOffset =_aeac ;
_feff .DataLength =_bce ;_feff .RegionSegment =&RegionSegment {};_feff .RegionSegment .BitmapHeight =_gfbd ;_feff .RegionSegment .BitmapWidth =_bcgga ;_feff .GBTemplate =_afbf ;_feff .IsMMREncoded =_aag ;_feff .IsTPGDon =_acgb ;_feff .GBAtX =_eagg ;_feff .GBAtY =_cgg ;
};func (_gffb *SymbolDictionary )encodeRefinementATFlags (_fbfeg _ac .BinaryWriter )(_ebce int ,_gade error ){const _ccee ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gffb .UseRefinementAggregation ||_gffb .SdrTemplate !=0{return 0,nil ;};for _bec :=0;_bec < 2;_bec ++{if _gade =_fbfeg .WriteByte (byte (_gffb .SdrATX [_bec ]));_gade !=nil {return _ebce ,_gg .Wrapf (_gade ,_ccee ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_bec );
};_ebce ++;if _gade =_fbfeg .WriteByte (byte (_gffb .SdrATY [_bec ]));_gade !=nil {return _ebce ,_gg .Wrapf (_gade ,_ccee ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_bec );};_ebce ++;};return _ebce ,nil ;};func (_bcbd *SymbolDictionary )parseHeader ()(_dgab error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dgab !=nil {_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dgab );
}else {_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dgab =_bcbd .readRegionFlags ();_dgab !=nil {return _dgab ;};if _dgab =_bcbd .setAtPixels ();_dgab !=nil {return _dgab ;};if _dgab =_bcbd .setRefinementAtPixels ();_dgab !=nil {return _dgab ;};if _dgab =_bcbd .readNumberOfExportedSymbols ();_dgab !=nil {return _dgab ;
};if _dgab =_bcbd .readNumberOfNewSymbols ();_dgab !=nil {return _dgab ;};if _dgab =_bcbd .setInSyms ();_dgab !=nil {return _dgab ;};if _bcbd ._fcf {_gabgb :=_bcbd .Header .RTSegments ;for _edda :=len (_gabgb )-1;_edda >=0;_edda --{if _gabgb [_edda ].Type ==0{_geec ,_cgdeg :=_gabgb [_edda ].SegmentData .(*SymbolDictionary );
if !_cgdeg {_dgab =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gabgb [_edda ]);
return _dgab ;};if _geec ._fcf {_bcbd .setRetainedCodingContexts (_geec );};break ;};};};if _dgab =_bcbd .checkInput ();_dgab !=nil {return _dgab ;};return nil ;};func (_abf *PatternDictionary )readIsMMREncoded ()error {_gfbaf ,_dga :=_abf ._dac .ReadBit ();
if _dga !=nil {return _dga ;};if _gfbaf !=0{_abf .IsMMREncoded =true ;};return nil ;};func (_cee *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_cegg ,_egcd :=_cee ._efbd .ReadBit ();if _egcd !=nil {return _egcd ;};if _cegg ==1{_cee ._abgb =true ;
};return nil ;};func (_bedf *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bedf .IsHuffmanEncoded {switch _bedf .SdHuffDecodeWidthSelection {case 0:_cfcg ,_bgebe :=_ba .GetStandardTable (2);if _bgebe !=nil {return 0,_bgebe ;};return _cfcg .Decode (_bedf ._dcdd );
case 1:_ebge ,_cafc :=_ba .GetStandardTable (3);if _cafc !=nil {return 0,_cafc ;};return _ebge .Decode (_bedf ._dcdd );case 3:if _bedf ._bbece ==nil {var _cdcd int ;if _bedf .SdHuffDecodeHeightSelection ==3{_cdcd ++;};_eafd ,_ebac :=_bedf .getUserTable (_cdcd );
if _ebac !=nil {return 0,_ebac ;};_bedf ._bbece =_eafd ;};return _bedf ._bbece .Decode (_bedf ._dcdd );};}else {_dagb ,_fbab :=_bedf ._bega .DecodeInt (_bedf ._accc );if _fbab !=nil {return 0,_fbab ;};return int64 (_dagb ),nil ;};return 0,nil ;};type GenericRefinementRegion struct{_cb templater ;
_ddc templater ;_abg *_ac .Reader ;_ddg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ge .Bitmap ;ReferenceBitmap *_ge .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_dg *_fb .Decoder ;
_ea *_fb .DecoderStats ;_cf bool ;_cbf []bool ;};func (_ecae *HalftoneRegion )computeGrayScalePlanes (_cbca []*_ge .Bitmap ,_cfb int )([][]int ,error ){_fcc :=make ([][]int ,_ecae .HGridHeight );for _geeg :=0;_geeg < len (_fcc );_geeg ++{_fcc [_geeg ]=make ([]int ,_ecae .HGridWidth );
};for _eccf :=0;_eccf < int (_ecae .HGridHeight );_eccf ++{for _dbef :=0;_dbef < int (_ecae .HGridWidth );_dbef +=8{var _cac int ;if _cccac :=int (_ecae .HGridWidth )-_dbef ;_cccac > 8{_cac =8;}else {_cac =_cccac ;};_egbf :=_cbca [0].GetByteIndex (_dbef ,_eccf );
for _afad :=0;_afad < _cac ;_afad ++{_bea :=_afad +_dbef ;_fcc [_eccf ][_bea ]=0;for _fgfb :=0;_fgfb < _cfb ;_fgfb ++{_agbg ,_fegg :=_cbca [_fgfb ].GetByte (_egbf );if _fegg !=nil {return nil ,_fegg ;};_bbfe :=_agbg >>uint (7-_bea &7);_agg :=_bbfe &1;_ade :=1<<uint (_fgfb );
_efgf :=int (_agg )*_ade ;_fcc [_eccf ][_bea ]+=_efgf ;};};};};return _fcc ,nil ;};func (_gcda *Header )readSegmentPageAssociation (_ecda Documenter ,_cff *_ac .Reader ,_cbce uint64 ,_adb ...int )(_fbgf error ){const _abdeg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_gcda .PageAssociationFieldSize {_cfd ,_bdca :=_cff .ReadBits (8);if _bdca !=nil {return _gg .Wrap (_bdca ,_abdeg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gcda .PageAssociation =int (_cfd &0xFF);}else {_fdde ,_dfgb :=_cff .ReadBits (32);
if _dfgb !=nil {return _gg .Wrap (_dfgb ,_abdeg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gcda .PageAssociation =int (_fdde &_a .MaxInt32 );};if _cbce ==0{return nil ;};if _gcda .PageAssociation !=0{_ccac ,_egdd :=_ecda .GetPage (_gcda .PageAssociation );
if _egdd !=nil {return _gg .Wrap (_egdd ,_abdeg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ggag int ;for _deea :=uint64 (0);_deea < _cbce ;_deea ++{_ggag =_adb [_deea ];
_gcda .RTSegments [_deea ],_egdd =_ccac .GetSegment (_ggag );if _egdd !=nil {var _feggg error ;_gcda .RTSegments [_deea ],_feggg =_ecda .GetGlobalSegment (_ggag );if _feggg !=nil {return _gg .Wrapf (_egdd ,_abdeg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gcda .PageAssociation );
};};};return nil ;};for _edge :=uint64 (0);_edge < _cbce ;_edge ++{_gcda .RTSegments [_edge ],_fbgf =_ecda .GetGlobalSegment (_adb [_edge ]);if _fbgf !=nil {return _gg .Wrapf (_fbgf ,_abdeg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_adb [_edge ]);
};};return nil ;};func (_bfda *TextRegion )decodeCurrentT ()(int64 ,error ){if _bfda .SbStrips !=1{if _bfda .IsHuffmanEncoded {_bagg ,_cdec :=_bfda ._fbdf .ReadBits (byte (_bfda .LogSBStrips ));return int64 (_bagg ),_cdec ;};_febe ,_dcff :=_bfda ._fbfg .DecodeInt (_bfda ._gffe );
if _dcff !=nil {return 0,_dcff ;};return int64 (_febe ),nil ;};return 0,nil ;};type TableSegment struct{_bbcg *_ac .Reader ;_bbaaa int32 ;_eeac int32 ;_bbge int32 ;_agdge int32 ;_dbcf int32 ;};func (_ecbb *PageInformationSegment )Size ()int {return 19};
func (_cdbgf *TextRegion )GetRegionInfo ()*RegionSegment {return _cdbgf .RegionInfo };func (_gbeg *GenericRegion )overrideAtTemplate0a (_fae ,_abdf ,_egd ,_bffc ,_efea ,_dabe int )int {if _gbeg .GBAtOverride [0]{_fae &=0xFFEF;if _gbeg .GBAtY [0]==0&&_gbeg .GBAtX [0]>=-int8 (_efea ){_fae |=(_bffc >>uint (int8 (_dabe )-_gbeg .GBAtX [0]&0x1))<<4;
}else {_fae |=int (_gbeg .getPixel (_abdf +int (_gbeg .GBAtX [0]),_egd +int (_gbeg .GBAtY [0])))<<4;};};if _gbeg .GBAtOverride [1]{_fae &=0xFBFF;if _gbeg .GBAtY [1]==0&&_gbeg .GBAtX [1]>=-int8 (_efea ){_fae |=(_bffc >>uint (int8 (_dabe )-_gbeg .GBAtX [1]&0x1))<<10;
}else {_fae |=int (_gbeg .getPixel (_abdf +int (_gbeg .GBAtX [1]),_egd +int (_gbeg .GBAtY [1])))<<10;};};if _gbeg .GBAtOverride [2]{_fae &=0xF7FF;if _gbeg .GBAtY [2]==0&&_gbeg .GBAtX [2]>=-int8 (_efea ){_fae |=(_bffc >>uint (int8 (_dabe )-_gbeg .GBAtX [2]&0x1))<<11;
}else {_fae |=int (_gbeg .getPixel (_abdf +int (_gbeg .GBAtX [2]),_egd +int (_gbeg .GBAtY [2])))<<11;};};if _gbeg .GBAtOverride [3]{_fae &=0x7FFF;if _gbeg .GBAtY [3]==0&&_gbeg .GBAtX [3]>=-int8 (_efea ){_fae |=(_bffc >>uint (int8 (_dabe )-_gbeg .GBAtX [3]&0x1))<<15;
}else {_fae |=int (_gbeg .getPixel (_abdf +int (_gbeg .GBAtX [3]),_egd +int (_gbeg .GBAtY [3])))<<15;};};return _fae ;};func (_bfdd *GenericRegion )computeSegmentDataStructure ()error {_bfdd .DataOffset =_bfdd ._dbgg .AbsolutePosition ();_bfdd .DataHeaderLength =_bfdd .DataOffset -_bfdd .DataHeaderOffset ;
_bfdd .DataLength =int64 (_bfdd ._dbgg .AbsoluteLength ())-_bfdd .DataHeaderLength ;return nil ;};func (_bcf *HalftoneRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){if _bcf .HalftoneRegionBitmap !=nil {return _bcf .HalftoneRegionBitmap ,nil ;};var _gbdff error ;
_bcf .HalftoneRegionBitmap =_ge .New (int (_bcf .RegionSegment .BitmapWidth ),int (_bcf .RegionSegment .BitmapHeight ));if _bcf .Patterns ==nil ||(_bcf .Patterns !=nil &&len (_bcf .Patterns )==0){_bcf .Patterns ,_gbdff =_bcf .GetPatterns ();if _gbdff !=nil {return nil ,_gbdff ;
};};if _bcf .HDefaultPixel ==1{_bcf .HalftoneRegionBitmap .SetDefaultPixel ();};_dfge :=_a .Ceil (_a .Log (float64 (len (_bcf .Patterns )))/_a .Log (2));_egf :=int (_dfge );var _acb [][]int ;_acb ,_gbdff =_bcf .grayScaleDecoding (_egf );if _gbdff !=nil {return nil ,_gbdff ;
};if _gbdff =_bcf .renderPattern (_acb );_gbdff !=nil {return nil ,_gbdff ;};return _bcf .HalftoneRegionBitmap ,nil ;};func (_eaa *Header )writeReferredToCount (_ccag _ac .BinaryWriter )(_dde int ,_edbc error ){const _gcag ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_eaa .RTSNumbers =make ([]int ,len (_eaa .RTSegments ));for _gdfa ,_cdab :=range _eaa .RTSegments {_eaa .RTSNumbers [_gdfa ]=int (_cdab .SegmentNumber );};if len (_eaa .RTSNumbers )<=4{var _aecc byte ;if len (_eaa .RetainBits )>=1{_aecc =_eaa .RetainBits [0];
};_aecc |=byte (len (_eaa .RTSNumbers ))<<5;if _edbc =_ccag .WriteByte (_aecc );_edbc !=nil {return 0,_gg .Wrap (_edbc ,_gcag ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ggae :=uint32 (len (_eaa .RTSNumbers ));
_cffc :=make ([]byte ,4+_da .Ceil (len (_eaa .RTSNumbers )+1,8));_ggae |=0x7<<29;_dd .BigEndian .PutUint32 (_cffc ,_ggae );copy (_cffc [1:],_eaa .RetainBits );_dde ,_edbc =_ccag .Write (_cffc );if _edbc !=nil {return 0,_gg .Wrap (_edbc ,_gcag ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _dde ,nil ;};func (_gfeb *PageInformationSegment )encodeStripingInformation (_bacg _ac .BinaryWriter )(_addf int ,_ffbd error ){const _geab ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_gfeb .IsStripe {if _addf ,_ffbd =_bacg .Write ([]byte {0x00,0x00});_ffbd !=nil {return 0,_gg .Wrap (_ffbd ,_geab ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _addf ,nil ;};_deeb :=make ([]byte ,2);_dd .BigEndian .PutUint16 (_deeb ,_gfeb .MaxStripeSize |1<<15);
if _addf ,_ffbd =_bacg .Write (_deeb );_ffbd !=nil {return 0,_gg .Wrapf (_ffbd ,_geab ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_gfeb .MaxStripeSize );};return _addf ,nil ;};func (_bdba *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bdba .SdHuffAggInstanceSelection {_gceeb ,_ecbbe :=_ba .GetStandardTable (1);
if _ecbbe !=nil {return 0,_ecbbe ;};return _gceeb .Decode (_bdba ._dcdd );};if _bdba ._gdba ==nil {var (_cbab int ;_ged error ;);if _bdba .SdHuffDecodeHeightSelection ==3{_cbab ++;};if _bdba .SdHuffDecodeWidthSelection ==3{_cbab ++;};if _bdba .SdHuffBMSizeSelection ==3{_cbab ++;
};_bdba ._gdba ,_ged =_bdba .getUserTable (_cbab );if _ged !=nil {return 0,_ged ;};};return _bdba ._gdba .Decode (_bdba ._dcdd );};func (_bffe *HalftoneRegion )computeY (_bfca ,_dfd int )int {return _bffe .shiftAndFill (int (_bffe .HGridY )+_bfca *int (_bffe .HRegionX )-_dfd *int (_bffe .HRegionY ));
};func (_fag *PatternDictionary )computeSegmentDataStructure ()error {_fag .DataOffset =_fag ._dac .AbsolutePosition ();_fag .DataHeaderLength =_fag .DataOffset -_fag .DataHeaderOffset ;_fag .DataLength =int64 (_fag ._dac .AbsoluteLength ())-_fag .DataHeaderLength ;
return nil ;};func (_egdc *TextRegion )decodeSymbolInstances ()error {_fcgc ,_ecffb :=_egdc .decodeStripT ();if _ecffb !=nil {return _ecffb ;};var (_dgce int64 ;_bcccf uint32 ;);for _bcccf < _egdc .NumberOfSymbolInstances {_ecbdc ,_acaa :=_egdc .decodeDT ();
if _acaa !=nil {return _acaa ;};_fcgc +=_ecbdc ;var _bgaeg int64 ;_cfea :=true ;_egdc ._geae =0;for {if _cfea {_bgaeg ,_acaa =_egdc .decodeDfs ();if _acaa !=nil {return _acaa ;};_dgce +=_bgaeg ;_egdc ._geae =_dgce ;_cfea =false ;}else {_gdg ,_dfab :=_egdc .decodeIds ();
if _ab .Is (_dfab ,_b .ErrOOB ){break ;};if _dfab !=nil {return _dfab ;};if _bcccf >=_egdc .NumberOfSymbolInstances {break ;};_egdc ._geae +=_gdg +int64 (_egdc .SbDsOffset );};_bebb ,_ffed :=_egdc .decodeCurrentT ();if _ffed !=nil {return _ffed ;};_agcf :=_fcgc +_bebb ;
_gaaf ,_ffed :=_egdc .decodeID ();if _ffed !=nil {return _ffed ;};_eggd ,_ffed :=_egdc .decodeRI ();if _ffed !=nil {return _ffed ;};_fadf ,_ffed :=_egdc .decodeIb (_eggd ,_gaaf );if _ffed !=nil {return _ffed ;};if _ffed =_egdc .blit (_fadf ,_agcf );_ffed !=nil {return _ffed ;
};_bcccf ++;};};return nil ;};func (_dafc *SymbolDictionary )GetDictionary ()([]*_ge .Bitmap ,error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dafc ._agae ,_dafc ._decb );
}();if _dafc ._agae ==nil {var _dgbbd error ;if _dafc .UseRefinementAggregation {_dafc ._cedf =_dafc .getSbSymCodeLen ();};if !_dafc .IsHuffmanEncoded {if _dgbbd =_dafc .setCodingStatistics ();_dgbbd !=nil {return nil ,_dgbbd ;};};_dafc ._decb =make ([]*_ge .Bitmap ,_dafc .NumberOfNewSymbols );
var _bdcf []int ;if _dafc .IsHuffmanEncoded &&!_dafc .UseRefinementAggregation {_bdcf =make ([]int ,_dafc .NumberOfNewSymbols );};if _dgbbd =_dafc .setSymbolsArray ();_dgbbd !=nil {return nil ,_dgbbd ;};var _bgeb ,_ebbdc int64 ;_dafc ._gcagf =0;for _dafc ._gcagf < _dafc .NumberOfNewSymbols {_ebbdc ,_dgbbd =_dafc .decodeHeightClassDeltaHeight ();
if _dgbbd !=nil {return nil ,_dgbbd ;};_bgeb +=_ebbdc ;var _dbdc ,_fdcg uint32 ;_fcea :=int64 (_dafc ._gcagf );for {var _eagd int64 ;_eagd ,_dgbbd =_dafc .decodeDifferenceWidth ();if _ab .Is (_dgbbd ,_b .ErrOOB ){break ;};if _dgbbd !=nil {return nil ,_dgbbd ;
};if _dafc ._gcagf >=_dafc .NumberOfNewSymbols {break ;};_dbdc +=uint32 (_eagd );_fdcg +=_dbdc ;if !_dafc .IsHuffmanEncoded ||_dafc .UseRefinementAggregation {if !_dafc .UseRefinementAggregation {_dgbbd =_dafc .decodeDirectlyThroughGenericRegion (_dbdc ,uint32 (_bgeb ));
if _dgbbd !=nil {return nil ,_dgbbd ;};}else {_dgbbd =_dafc .decodeAggregate (_dbdc ,uint32 (_bgeb ));if _dgbbd !=nil {return nil ,_dgbbd ;};};}else if _dafc .IsHuffmanEncoded &&!_dafc .UseRefinementAggregation {_bdcf [_dafc ._gcagf ]=int (_dbdc );};_dafc ._gcagf ++;
};if _dafc .IsHuffmanEncoded &&!_dafc .UseRefinementAggregation {var _affb int64 ;if _dafc .SdHuffBMSizeSelection ==0{var _aded _ba .Tabler ;_aded ,_dgbbd =_ba .GetStandardTable (1);if _dgbbd !=nil {return nil ,_dgbbd ;};_affb ,_dgbbd =_aded .Decode (_dafc ._dcdd );
if _dgbbd !=nil {return nil ,_dgbbd ;};}else {_affb ,_dgbbd =_dafc .huffDecodeBmSize ();if _dgbbd !=nil {return nil ,_dgbbd ;};};_dafc ._dcdd .Align ();var _bgceb *_ge .Bitmap ;_bgceb ,_dgbbd =_dafc .decodeHeightClassCollectiveBitmap (_affb ,uint32 (_bgeb ),_fdcg );
if _dgbbd !=nil {return nil ,_dgbbd ;};_dgbbd =_dafc .decodeHeightClassBitmap (_bgceb ,_fcea ,int (_bgeb ),_bdcf );if _dgbbd !=nil {return nil ,_dgbbd ;};};};_eggf ,_dgbbd :=_dafc .getToExportFlags ();if _dgbbd !=nil {return nil ,_dgbbd ;};_dafc .setExportedSymbols (_eggf );
};return _dafc ._agae ,nil ;};func (_agac *GenericRefinementRegion )setParameters (_fced *_fb .DecoderStats ,_cdc *_fb .Decoder ,_ffe int8 ,_cba ,_fgaa uint32 ,_gee *_ge .Bitmap ,_fega ,_bgfc int32 ,_caf bool ,_fbf []int8 ,_aca []int8 ){_gd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fced !=nil {_agac ._ea =_fced ;};if _cdc !=nil {_agac ._dg =_cdc ;};_agac .TemplateID =_ffe ;_agac .RegionInfo .BitmapWidth =_cba ;_agac .RegionInfo .BitmapHeight =_fgaa ;_agac .ReferenceBitmap =_gee ;_agac .ReferenceDX =_fega ;_agac .ReferenceDY =_bgfc ;
_agac .IsTPGROn =_caf ;_agac .GrAtX =_fbf ;_agac .GrAtY =_aca ;_agac .RegionBitmap =nil ;_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_agac );
};func (_cgccf *TextRegion )readAmountOfSymbolInstances ()error {_cbdaf ,_ebeb :=_cgccf ._fbdf .ReadBits (32);if _ebeb !=nil {return _ebeb ;};_cgccf .NumberOfSymbolInstances =uint32 (_cbdaf &_a .MaxUint32 );_bgabg :=_cgccf .RegionInfo .BitmapWidth *_cgccf .RegionInfo .BitmapHeight ;
if _bgabg < _cgccf .NumberOfSymbolInstances {_gd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bgabg ,_cgccf .NumberOfSymbolInstances );
_cgccf .NumberOfSymbolInstances =_bgabg ;};return nil ;};func (_aaddd *PageInformationSegment )readCombinationOperator ()error {_ecgcc ,_cgde :=_aaddd ._efbd .ReadBits (2);if _cgde !=nil {return _cgde ;};_aaddd ._ebaf =_ge .CombinationOperator (int (_ecgcc ));
return nil ;};func (_gfcf *PatternDictionary )Init (h *Header ,r *_ac .Reader )error {_gfcf ._dac =r ;return _gfcf .parseHeader ();};func (_baff *TextRegion )decodeDT ()(_bgcbc int64 ,_cacb error ){if _baff .IsHuffmanEncoded {if _baff .SbHuffDT ==3{_bgcbc ,_cacb =_baff ._cafb .Decode (_baff ._fbdf );
if _cacb !=nil {return 0,_cacb ;};}else {var _fbb _ba .Tabler ;_fbb ,_cacb =_ba .GetStandardTable (11+int (_baff .SbHuffDT ));if _cacb !=nil {return 0,_cacb ;};_bgcbc ,_cacb =_fbb .Decode (_baff ._fbdf );if _cacb !=nil {return 0,_cacb ;};};}else {var _bgad int32 ;
_bgad ,_cacb =_baff ._fbfg .DecodeInt (_baff ._edde );if _cacb !=nil {return 0,_cacb ;};_bgcbc =int64 (_bgad );};_bgcbc *=int64 (_baff .SbStrips );return _bgcbc ,nil ;};func (_ebfc *Header )Encode (w _ac .BinaryWriter )(_dbda int ,_bcea error ){const _gaf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _cggd _ac .BinaryWriter ;_gd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bcea !=nil {_gd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bcea );
}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ebfc );_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _ebfc .SegmentData !=nil {_cdaa ,_cab :=_ebfc .SegmentData .(SegmentEncoder );if !_cab {return 0,_gg .Errorf (_gaf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ebfc .SegmentData );
};_cggd =_ac .BufferedMSB ();_dbda ,_bcea =_cdaa .Encode (_cggd );if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");};_ebfc .SegmentDataLength =uint64 (_dbda );};if _ebfc .pageSize ()==4{_ebfc .PageAssociationFieldSize =true ;};var _bbcd int ;_bbcd ,_bcea =_ebfc .writeSegmentNumber (w );
if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");};_dbda +=_bbcd ;if _bcea =_ebfc .writeFlags (w );_bcea !=nil {return _dbda ,_gg .Wrap (_bcea ,_gaf ,"");};_dbda ++;_bbcd ,_bcea =_ebfc .writeReferredToCount (w );if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");
};_dbda +=_bbcd ;_bbcd ,_bcea =_ebfc .writeReferredToSegments (w );if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");};_dbda +=_bbcd ;_bbcd ,_bcea =_ebfc .writeSegmentPageAssociation (w );if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");};_dbda +=_bbcd ;
_bbcd ,_bcea =_ebfc .writeSegmentDataLength (w );if _bcea !=nil {return 0,_gg .Wrap (_bcea ,_gaf ,"");};_dbda +=_bbcd ;_ebfc .HeaderLength =int64 (_dbda )-int64 (_ebfc .SegmentDataLength );if _cggd !=nil {if _ ,_bcea =w .Write (_cggd .Data ());_bcea !=nil {return _dbda ,_gg .Wrap (_bcea ,_gaf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _dbda ,nil ;};func (_ddbg *TextRegion )decodeDfs ()(int64 ,error ){if _ddbg .IsHuffmanEncoded {if _ddbg .SbHuffFS ==3{if _ddbg ._acba ==nil {var _fegf error ;_ddbg ._acba ,_fegf =_ddbg .getUserTable (0);if _fegf !=nil {return 0,_fegf ;};};return _ddbg ._acba .Decode (_ddbg ._fbdf );
};_fggg ,_caec :=_ba .GetStandardTable (6+int (_ddbg .SbHuffFS ));if _caec !=nil {return 0,_caec ;};return _fggg .Decode (_ddbg ._fbdf );};_addg ,_ddfc :=_ddbg ._fbfg .DecodeInt (_ddbg ._gffc );if _ddfc !=nil {return 0,_ddfc ;};return int64 (_addg ),nil ;
};func (_geb *template1 )setIndex (_ada *_fb .DecoderStats ){_ada .SetIndex (0x080)};var _ _ba .BasicTabler =&TableSegment {};func (_eddb *TableSegment )StreamReader ()*_ac .Reader {return _eddb ._bbcg };func (_defe *GenericRegion )writeGBAtPixels (_faef _ac .BinaryWriter )(_cgd int ,_cbdb error ){const _gbdd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _defe .UseMMR {return 0,nil ;};_dee :=1;if _defe .GBTemplate ==0{_dee =4;}else if _defe .UseExtTemplates {_dee =12;};if len (_defe .GBAtX )!=_dee {return 0,_gg .Errorf (_gbdd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_defe .GBAtY )!=_dee {return 0,_gg .Errorf (_gbdd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _gbde :=0;_gbde < _dee ;_gbde ++{if _cbdb =_faef .WriteByte (byte (_defe .GBAtX [_gbde ]));_cbdb !=nil {return _cgd ,_gg .Wrap (_cbdb ,_gbdd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cgd ++;if _cbdb =_faef .WriteByte (byte (_defe .GBAtY [_gbde ]));
_cbdb !=nil {return _cgd ,_gg .Wrap (_cbdb ,_gbdd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cgd ++;};return _cgd ,nil ;};func (_bgcb *HalftoneRegion )Init (hd *Header ,r *_ac .Reader )error {_bgcb ._geg =r ;_bgcb ._edag =hd ;
_bgcb .RegionSegment =NewRegionSegment (r );return _bgcb .parseHeader ();};func (_gga *GenericRefinementRegion )decodeOptimized (_fab ,_eb ,_eff ,_ga ,_fg ,_eaf ,_age int )error {var (_fc error ;_be int ;_ddf int ;);_bgb :=_fab -int (_gga .ReferenceDY );
if _afb :=int (-_gga .ReferenceDX );_afb > 0{_be =_afb ;};_bd :=_gga .ReferenceBitmap .GetByteIndex (_be ,_bgb );if _gga .ReferenceDX > 0{_ddf =int (_gga .ReferenceDX );};_cbb :=_gga .RegionBitmap .GetByteIndex (_ddf ,_fab );switch _gga .TemplateID {case 0:_fc =_gga .decodeTemplate (_fab ,_eb ,_eff ,_ga ,_fg ,_eaf ,_age ,_cbb ,_bgb ,_bd ,_gga ._cb );
case 1:_fc =_gga .decodeTemplate (_fab ,_eb ,_eff ,_ga ,_fg ,_eaf ,_age ,_cbb ,_bgb ,_bd ,_gga ._ddc );};return _fc ;};func (_ebea *template0 )form (_edeg ,_gcd ,_eebg ,_aac ,_fgce int16 )int16 {return (_edeg <<10)|(_gcd <<7)|(_eebg <<4)|(_aac <<1)|_fgce ;
};func (_aabdg *TableSegment )HtRS ()int32 {return _aabdg ._bbge };func NewGenericRegion (r *_ac .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dbgg :r };};func (_agda *TextRegion )decodeIb (_gbef ,_bdfd int64 )(*_ge .Bitmap ,error ){const _gfeg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_agbc error ;_acce *_ge .Bitmap ;);if _gbef ==0{if int (_bdfd )> len (_agda .Symbols )-1{return nil ,_gg .Error (_gfeg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _agda .Symbols [int (_bdfd )],nil ;};var _aced ,_gbcc ,_fgdg ,_dgcec int64 ;_aced ,_agbc =_agda .decodeRdw ();if _agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"");};_gbcc ,_agbc =_agda .decodeRdh ();if _agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"");
};_fgdg ,_agbc =_agda .decodeRdx ();if _agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"");};_dgcec ,_agbc =_agda .decodeRdy ();if _agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"");};if _agda .IsHuffmanEncoded {if _ ,_agbc =_agda .decodeSymInRefSize ();
_agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"");};_agda ._fbdf .Align ();};_gabd :=_agda .Symbols [_bdfd ];_aafa :=uint32 (_gabd .Width );_gcfa :=uint32 (_gabd .Height );_dgcb :=int32 (uint32 (_aced )>>1)+int32 (_fgdg );_cbgbd :=int32 (uint32 (_gbcc )>>1)+int32 (_dgcec );
if _agda ._ggcb ==nil {_agda ._ggcb =_adf (_agda ._fbdf ,nil );};_agda ._ggcb .setParameters (_agda ._afdc ,_agda ._fbfg ,_agda .SbrTemplate ,_aafa +uint32 (_aced ),_gcfa +uint32 (_gbcc ),_gabd ,_dgcb ,_cbgbd ,false ,_agda .SbrATX ,_agda .SbrATY );_acce ,_agbc =_agda ._ggcb .GetRegionBitmap ();
if _agbc !=nil {return nil ,_gg .Wrap (_agbc ,_gfeg ,"\u0067\u0072\u0066");};if _agda .IsHuffmanEncoded {_agda ._fbdf .Align ();};return _acce ,nil ;};func (_cfecc *TextRegion )computeSymbolCodeLength ()error {if _cfecc .IsHuffmanEncoded {return _cfecc .symbolIDCodeLengths ();
};_cfecc ._dbbd =int8 (_a .Ceil (_a .Log (float64 (_cfecc .NumberOfSymbols ))/_a .Log (2)));return nil ;};func (_cbda *GenericRegion )GetRegionInfo ()*RegionSegment {return _cbda .RegionSegment };func (_cfab *PatternDictionary )extractPatterns (_efff *_ge .Bitmap )error {var _edga int ;
_geeb :=make ([]*_ge .Bitmap ,_cfab .GrayMax +1);for _edga <=int (_cfab .GrayMax ){_fgda :=int (_cfab .HdpWidth )*_edga ;_ddba :=_ee .Rect (_fgda ,0,_fgda +int (_cfab .HdpWidth ),int (_cfab .HdpHeight ));_gdab ,_agcg :=_ge .Extract (_ddba ,_efff );if _agcg !=nil {return _agcg ;
};_geeb [_edga ]=_gdab ;_edga ++;};_cfab .Patterns =_geeb ;return nil ;};func (_bdf *GenericRegion )setParameters (_dae bool ,_cegb ,_ccde int64 ,_egca ,_bda uint32 ){_bdf .IsMMREncoded =_dae ;_bdf .DataOffset =_cegb ;_bdf .DataLength =_ccde ;_bdf .RegionSegment .BitmapHeight =_egca ;
_bdf .RegionSegment .BitmapWidth =_bda ;_bdf ._bbb =nil ;_bdf .Bitmap =nil ;};func (_gfge *PatternDictionary )setGbAtPixels (){if _gfge .HDTemplate ==0{_gfge .GBAtX =make ([]int8 ,4);_gfge .GBAtY =make ([]int8 ,4);_gfge .GBAtX [0]=-int8 (_gfge .HdpWidth );
_gfge .GBAtY [0]=0;_gfge .GBAtX [1]=-3;_gfge .GBAtY [1]=-1;_gfge .GBAtX [2]=2;_gfge .GBAtY [2]=-2;_gfge .GBAtX [3]=-2;_gfge .GBAtY [3]=-2;}else {_gfge .GBAtX =[]int8 {-int8 (_gfge .HdpWidth )};_gfge .GBAtY =[]int8 {0};};};func (_dacb *SymbolDictionary )encodeFlags (_caaf _ac .BinaryWriter )(_bceg int ,_afba error ){const _afaf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _afba =_caaf .SkipBits (3);_afba !=nil {return 0,_gg .Wrap (_afba ,_afaf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dgcf int ;if _dacb .SdrTemplate > 0{_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dgcf =0;if _dacb .SdTemplate > 1{_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgcf =0;if _dacb .SdTemplate ==1||_dacb .SdTemplate ==3{_dgcf =1;
};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgcf =0;if _dacb ._gfgc {_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dgcf =0;if _dacb ._fcf {_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dgcf =0;if _dacb .SdHuffAggInstanceSelection {_dgcf =1;
};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dgcf =int (_dacb .SdHuffBMSizeSelection );if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dgcf =0;if _dacb .SdHuffDecodeWidthSelection > 1{_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dgcf =0;switch _dacb .SdHuffDecodeWidthSelection {case 1,3:_dgcf =1;
};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dgcf =0;if _dacb .SdHuffDecodeHeightSelection > 1{_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );
_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dgcf =0;switch _dacb .SdHuffDecodeHeightSelection {case 1,3:_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dgcf =0;if _dacb .UseRefinementAggregation {_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dgcf =0;if _dacb .IsHuffmanEncoded {_dgcf =1;};if _afba =_caaf .WriteBit (_dgcf );
_afba !=nil {return _bceg ,_gg .Wrap (_afba ,_afaf ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cged *TextRegion )decodeRI ()(int64 ,error ){if !_cged .UseRefinement {return 0,nil ;};if _cged .IsHuffmanEncoded {_fded ,_cefe :=_cged ._fbdf .ReadBit ();
return int64 (_fded ),_cefe ;};_babb ,_cded :=_cged ._fbfg .DecodeInt (_cged ._cceeb );return int64 (_babb ),_cded ;};func NewRegionSegment (r *_ac .Reader )*RegionSegment {return &RegionSegment {_ggfb :r }};func (_bf *EndOfStripe )Init (h *Header ,r *_ac .Reader )error {_bf ._gf =r ;
return _bf .parseHeader ()};func (_afedf *RegionSegment )Size ()int {return 17};func (_daga *PageInformationSegment )readMaxStripeSize ()error {_beab ,_edfg :=_daga ._efbd .ReadBits (15);if _edfg !=nil {return _edfg ;};_daga .MaxStripeSize =uint16 (_beab &_a .MaxUint16 );
return nil ;};type GenericRegion struct{_dbgg *_ac .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;
GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cdbd bool ;Bitmap *_ge .Bitmap ;_dcaa *_fb .Decoder ;_ceb *_fb .DecoderStats ;_bbb *_ae .Decoder ;};func (_ccdc *PageInformationSegment )CombinationOperator ()_ge .CombinationOperator {return _ccdc ._ebaf ;
};func (_gbdfe *Header )readDataStartOffset (_eege *_ac .Reader ,_edb OrganizationType ){if _edb ==OSequential {_gbdfe .SegmentDataStartOffset =uint64 (_eege .AbsolutePosition ());};};func NewHeader (d Documenter ,r *_ac .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ddb :=&Header {Reader :r };
if _faec :=_ddb .parse (d ,r ,offset ,organizationType );_faec !=nil {return nil ,_gg .Wrap (_faec ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _ddb ,nil ;};type templater interface{form (_dgbd ,_beg ,_ccc ,_dca ,_cbgb int16 )int16 ;setIndex (_acfd *_fb .DecoderStats );
};func (_dffd *SymbolDictionary )setRetainedCodingContexts (_gfeed *SymbolDictionary ){_dffd ._bega =_gfeed ._bega ;_dffd .IsHuffmanEncoded =_gfeed .IsHuffmanEncoded ;_dffd .UseRefinementAggregation =_gfeed .UseRefinementAggregation ;_dffd .SdTemplate =_gfeed .SdTemplate ;
_dffd .SdrTemplate =_gfeed .SdrTemplate ;_dffd .SdATX =_gfeed .SdATX ;_dffd .SdATY =_gfeed .SdATY ;_dffd .SdrATX =_gfeed .SdrATX ;_dffd .SdrATY =_gfeed .SdrATY ;_dffd ._bfab =_gfeed ._bfab ;};func (_afc *GenericRegion )decodeLine (_begc ,_ecbg ,_ebbb int )error {const _bfce ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_bae :=_afc .Bitmap .GetByteIndex (0,_begc );_ccf :=_bae -_afc .Bitmap .RowStride ;switch _afc .GBTemplate {case 0:if !_afc .UseExtTemplates {return _afc .decodeTemplate0a (_begc ,_ecbg ,_ebbb ,_bae ,_ccf );};return _afc .decodeTemplate0b (_begc ,_ecbg ,_ebbb ,_bae ,_ccf );
case 1:return _afc .decodeTemplate1 (_begc ,_ecbg ,_ebbb ,_bae ,_ccf );case 2:return _afc .decodeTemplate2 (_begc ,_ecbg ,_ebbb ,_bae ,_ccf );case 3:return _afc .decodeTemplate3 (_begc ,_ecbg ,_ebbb ,_bae ,_ccf );};return _gg .Errorf (_bfce ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_afc .GBTemplate );
};func (_dgdf *HalftoneRegion )computeX (_fgg ,_afge int )int {return _dgdf .shiftAndFill (int (_dgdf .HGridX )+_fgg *int (_dgdf .HRegionY )+_afge *int (_dgdf .HRegionX ));};const (ORandom OrganizationType =iota ;OSequential ;);func (_cca *GenericRegion )setParametersWithAt (_dbgba bool ,_dgd byte ,_gbdf ,_cec bool ,_eegd ,_ggf []int8 ,_acg ,_bbgc uint32 ,_bbcc *_fb .DecoderStats ,_efbec *_fb .Decoder ){_cca .IsMMREncoded =_dbgba ;
_cca .GBTemplate =_dgd ;_cca .IsTPGDon =_gbdf ;_cca .GBAtX =_eegd ;_cca .GBAtY =_ggf ;_cca .RegionSegment .BitmapHeight =_bbgc ;_cca .RegionSegment .BitmapWidth =_acg ;_cca ._bbb =nil ;_cca .Bitmap =nil ;if _bbcc !=nil {_cca ._ceb =_bbcc ;};if _efbec !=nil {_cca ._dcaa =_efbec ;
};_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cca );};