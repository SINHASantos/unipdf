//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_a "encoding/binary";_ee "errors";_ea "fmt";_bc "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/bitwise";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ecb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_afb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_af "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_eb "image";_d "io";_e "math";_b "strings";_c "time";);func (_ceb *GenericRefinementRegion )GetRegionBitmap ()(*_bb .Bitmap ,error ){var _ca error ;
_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ca !=nil {_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ca );
}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ceb .RegionBitmap !=nil {return _ceb .RegionBitmap ,nil ;};_ed :=0;if _ceb .ReferenceBitmap ==nil {_ceb .ReferenceBitmap ,_ca =_ceb .getGrReference ();if _ca !=nil {return nil ,_ca ;};};if _ceb ._ce ==nil {_ceb ._ce ,_ca =_ecb .New (_ceb ._fe );
if _ca !=nil {return nil ,_ca ;};};if _ceb ._de ==nil {_ceb ._de =_ecb .NewStats (8192,1);};_ceb .RegionBitmap =_bb .New (int (_ceb .RegionInfo .BitmapWidth ),int (_ceb .RegionInfo .BitmapHeight ));if _ceb .TemplateID ==0{if _ca =_ceb .updateOverride ();
_ca !=nil {return nil ,_ca ;};};_gfa :=(_ceb .RegionBitmap .Width +7)&-8;var _ceg int ;if _ceb .IsTPGROn {_ceg =int (-_ceb .ReferenceDY )*_ceb .ReferenceBitmap .RowStride ;};_gg :=_ceg +1;for _bbf :=0;_bbf < _ceb .RegionBitmap .Height ;_bbf ++{if _ceb .IsTPGROn {_bec ,_fc :=_ceb .decodeSLTP ();
if _fc !=nil {return nil ,_fc ;};_ed ^=_bec ;};if _ed ==0{_ca =_ceb .decodeOptimized (_bbf ,_ceb .RegionBitmap .Width ,_ceb .RegionBitmap .RowStride ,_ceb .ReferenceBitmap .RowStride ,_gfa ,_ceg ,_gg );if _ca !=nil {return nil ,_ca ;};}else {_ca =_ceb .decodeTypicalPredictedLine (_bbf ,_ceb .RegionBitmap .Width ,_ceb .RegionBitmap .RowStride ,_ceb .ReferenceBitmap .RowStride ,_gfa ,_ceg );
if _ca !=nil {return nil ,_ca ;};};};return _ceb .RegionBitmap ,nil ;};func (_cbeb *SymbolDictionary )readAtPixels (_efgda int )error {_cbeb .SdATX =make ([]int8 ,_efgda );_cbeb .SdATY =make ([]int8 ,_efgda );var (_ggbg byte ;_aabg error ;);for _ceaf :=0;
_ceaf < _efgda ;_ceaf ++{_ggbg ,_aabg =_cbeb ._cgdga .ReadByte ();if _aabg !=nil {return _aabg ;};_cbeb .SdATX [_ceaf ]=int8 (_ggbg );_ggbg ,_aabg =_cbeb ._cgdga .ReadByte ();if _aabg !=nil {return _aabg ;};_cbeb .SdATY [_ceaf ]=int8 (_ggbg );};return nil ;
};func (_fba *HalftoneRegion )grayScaleDecoding (_cbbc int )([][]int ,error ){var (_aegd []int8 ;_eafa []int8 ;);if !_fba .IsMMREncoded {_aegd =make ([]int8 ,4);_eafa =make ([]int8 ,4);if _fba .HTemplate <=1{_aegd [0]=3;}else if _fba .HTemplate >=2{_aegd [0]=2;
};_eafa [0]=-1;_aegd [1]=-3;_eafa [1]=-1;_aegd [2]=2;_eafa [2]=-2;_aegd [3]=-2;_eafa [3]=-2;};_baa :=make ([]*_bb .Bitmap ,_cbbc );_fdeb :=NewGenericRegion (_fba ._dbge );_fdeb .setParametersMMR (_fba .IsMMREncoded ,_fba .DataOffset ,_fba .DataLength ,_fba .HGridHeight ,_fba .HGridWidth ,_fba .HTemplate ,false ,_fba .HSkipEnabled ,_aegd ,_eafa );
_cdde :=_cbbc -1;var _bdbc error ;_baa [_cdde ],_bdbc =_fdeb .GetRegionBitmap ();if _bdbc !=nil {return nil ,_bdbc ;};for _cdde > 0{_cdde --;_fdeb .Bitmap =nil ;_baa [_cdde ],_bdbc =_fdeb .GetRegionBitmap ();if _bdbc !=nil {return nil ,_bdbc ;};if _bdbc =_fba .combineGrayscalePlanes (_baa ,_cdde );
_bdbc !=nil {return nil ,_bdbc ;};};return _fba .computeGrayScalePlanes (_baa ,_cbbc );};func (_fddb *GenericRegion )parseHeader ()(_dcdf error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dcdf !=nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dcdf );
}else {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_efg int ;_ccec uint64 ;);if _dcdf =_fddb .RegionSegment .parseHeader ();_dcdf !=nil {return _dcdf ;};if _ ,_dcdf =_fddb ._cea .ReadBits (3);_dcdf !=nil {return _dcdf ;};_efg ,_dcdf =_fddb ._cea .ReadBit ();if _dcdf !=nil {return _dcdf ;};if _efg ==1{_fddb .UseExtTemplates =true ;
};_efg ,_dcdf =_fddb ._cea .ReadBit ();if _dcdf !=nil {return _dcdf ;};if _efg ==1{_fddb .IsTPGDon =true ;};_ccec ,_dcdf =_fddb ._cea .ReadBits (2);if _dcdf !=nil {return _dcdf ;};_fddb .GBTemplate =byte (_ccec &0xf);_efg ,_dcdf =_fddb ._cea .ReadBit ();
if _dcdf !=nil {return _dcdf ;};if _efg ==1{_fddb .IsMMREncoded =true ;};if !_fddb .IsMMREncoded {_aec :=1;if _fddb .GBTemplate ==0{_aec =4;if _fddb .UseExtTemplates {_aec =12;};};if _dcdf =_fddb .readGBAtPixels (_aec );_dcdf !=nil {return _dcdf ;};};if _dcdf =_fddb .computeSegmentDataStructure ();
_dcdf !=nil {return _dcdf ;};_bc .Log .Trace ("\u0025\u0073",_fddb );return nil ;};func (_ged *GenericRegion )overrideAtTemplate1 (_bdfc ,_bfeb ,_fga ,_cebe ,_ffge int )int {_bdfc &=0x1FF7;if _ged .GBAtY [0]==0&&_ged .GBAtX [0]>=-int8 (_ffge ){_bdfc |=(_cebe >>uint (7-(int8 (_ffge )+_ged .GBAtX [0]))&0x1)<<3;
}else {_bdfc |=int (_ged .getPixel (_bfeb +int (_ged .GBAtX [0]),_fga +int (_ged .GBAtY [0])))<<3;};return _bdfc ;};func (_afc *GenericRegion )overrideAtTemplate3 (_eegg ,_ddab ,_gac ,_ebgg ,_aaa int )int {_eegg &=0x3EF;if _afc .GBAtY [0]==0&&_afc .GBAtX [0]>=-int8 (_aaa ){_eegg |=(_ebgg >>uint (7-(int8 (_aaa )+_afc .GBAtX [0]))&0x1)<<4;
}else {_eegg |=int (_afc .getPixel (_ddab +int (_afc .GBAtX [0]),_gac +int (_afc .GBAtY [0])))<<4;};return _eegg ;};func (_faac *GenericRegion )setOverrideFlag (_efc int ){_faac .GBAtOverride [_efc ]=true ;_faac ._cfgc =true ;};func (_fgage *Header )readSegmentNumber (_defd *_g .Reader )error {const _eged ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_befg :=make ([]byte ,4);_ ,_eafda :=_defd .Read (_befg );if _eafda !=nil {return _cd .Wrap (_eafda ,_eged ,"");};_fgage .SegmentNumber =_a .BigEndian .Uint32 (_befg );return nil ;};func (_ddge *GenericRefinementRegion )updateOverride ()error {if _ddge .GrAtX ==nil ||_ddge .GrAtY ==nil {return _ee .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ddge .GrAtX )!=len (_ddge .GrAtY ){return _ee .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ddge ._eg =make ([]bool ,len (_ddge .GrAtX ));switch _ddge .TemplateID {case 0:if _ddge .GrAtX [0]!=-1&&_ddge .GrAtY [0]!=-1{_ddge ._eg [0]=true ;
_ddge ._bea =true ;};if _ddge .GrAtX [1]!=-1&&_ddge .GrAtY [1]!=-1{_ddge ._eg [1]=true ;_ddge ._bea =true ;};case 1:_ddge ._bea =false ;};return nil ;};func (_fdge *GenericRegion )copyLineAbove (_fddf int )error {_gcd :=_fddf *_fdge .Bitmap .RowStride ;
_bba :=_gcd -_fdge .Bitmap .RowStride ;for _abd :=0;_abd < _fdge .Bitmap .RowStride ;_abd ++{_gfb ,_ada :=_fdge .Bitmap .GetByte (_bba );if _ada !=nil {return _ada ;};_bba ++;if _ada =_fdge .Bitmap .SetByte (_gcd ,_gfb );_ada !=nil {return _ada ;};_gcd ++;
};return nil ;};func (_dffd *HalftoneRegion )computeSegmentDataStructure ()error {_dffd .DataOffset =_dffd ._dbge .AbsolutePosition ();_dffd .DataHeaderLength =_dffd .DataOffset -_dffd .DataHeaderOffset ;_dffd .DataLength =int64 (_dffd ._dbge .AbsoluteLength ())-_dffd .DataHeaderLength ;
return nil ;};func (_cacf *GenericRegion )overrideAtTemplate2 (_bcc ,_bgdg ,_daac ,_bcf ,_cgcc int )int {_bcc &=0x3FB;if _cacf .GBAtY [0]==0&&_cacf .GBAtX [0]>=-int8 (_cgcc ){_bcc |=(_bcf >>uint (7-(int8 (_cgcc )+_cacf .GBAtX [0]))&0x1)<<2;}else {_bcc |=int (_cacf .getPixel (_bgdg +int (_cacf .GBAtX [0]),_daac +int (_cacf .GBAtY [0])))<<2;
};return _bcc ;};func (_gef *Header )CleanSegmentData (){if _gef .SegmentData !=nil {_gef .SegmentData =nil ;};};func (_cbdg *Header )writeReferredToSegments (_gbcg _g .BinaryWriter )(_efab int ,_fbda error ){const _beaab ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_afcf uint16 ;_cfcb uint32 ;);_afga :=_cbdg .referenceSize ();_eggg :=1;_bbdae :=make ([]byte ,_afga );for _ ,_dcde :=range _cbdg .RTSNumbers {switch _afga {case 4:_cfcb =uint32 (_dcde );_a .BigEndian .PutUint32 (_bbdae ,_cfcb );_eggg ,_fbda =_gbcg .Write (_bbdae );
if _fbda !=nil {return 0,_cd .Wrap (_fbda ,_beaab ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_afcf =uint16 (_dcde );_a .BigEndian .PutUint16 (_bbdae ,_afcf );_eggg ,_fbda =_gbcg .Write (_bbdae );if _fbda !=nil {return 0,_cd .Wrap (_fbda ,_beaab ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _fbda =_gbcg .WriteByte (byte (_dcde ));_fbda !=nil {return 0,_cd .Wrap (_fbda ,_beaab ,"\u0075\u0069\u006et\u0038");};};_efab +=_eggg ;};return _efab ,nil ;};func (_bfd *PatternDictionary )readIsMMREncoded ()error {_befa ,_dgfa :=_bfd ._ffbe .ReadBit ();
if _dgfa !=nil {return _dgfa ;};if _befa !=0{_bfd .IsMMREncoded =true ;};return nil ;};func (_gdfd *SymbolDictionary )setExportedSymbols (_deg []int ){for _eaae :=uint32 (0);_eaae < _gdfd ._fcda +_gdfd .NumberOfNewSymbols ;_eaae ++{if _deg [_eaae ]==1{var _bgdfa *_bb .Bitmap ;
if _eaae < _gdfd ._fcda {_bgdfa =_gdfd ._feeg [_eaae ];}else {_bgdfa =_gdfd ._cdgd [_eaae -_gdfd ._fcda ];};_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bgdfa );
_gdfd ._bdg =append (_gdfd ._bdg ,_bgdfa );};};};func (_cgcd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gad ,_cbgee uint32 )error {if _cgcd ._cfgd ==nil {_cgcd ._cfgd =NewGenericRegion (_cgcd ._cgdga );};_cgcd ._cfgd .setParametersWithAt (false ,byte (_cgcd .SdTemplate ),false ,false ,_cgcd .SdATX ,_cgcd .SdATY ,_gad ,_cbgee ,_cgcd ._ebeg ,_cgcd ._dbgeb );
return _cgcd .addSymbol (_cgcd ._cfgd );};func (_gccg *HalftoneRegion )GetPatterns ()([]*_bb .Bitmap ,error ){var (_fgdc []*_bb .Bitmap ;_cfcf error ;);for _ ,_fdcfc :=range _gccg ._ggd .RTSegments {var _ecg Segmenter ;_ecg ,_cfcf =_fdcfc .GetSegmentData ();
if _cfcf !=nil {_bc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cfcf );return nil ,_cfcf ;};_acfc ,_eabfb :=_ecg .(*PatternDictionary );if !_eabfb {_cfcf =_ea .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ecg );
return nil ,_cfcf ;};var _bffb []*_bb .Bitmap ;_bffb ,_cfcf =_acfc .GetDictionary ();if _cfcf !=nil {_bc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cfcf );
return nil ,_cfcf ;};_fgdc =append (_fgdc ,_bffb ...);};return _fgdc ,nil ;};func (_caded *TextRegion )decodeRdx ()(int64 ,error ){const _feba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _caded .IsHuffmanEncoded {if _caded .SbHuffRDX ==3{if _caded ._gfge ==nil {var (_ggacf int ;
_eddb error ;);if _caded .SbHuffFS ==3{_ggacf ++;};if _caded .SbHuffDS ==3{_ggacf ++;};if _caded .SbHuffDT ==3{_ggacf ++;};if _caded .SbHuffRDWidth ==3{_ggacf ++;};if _caded .SbHuffRDHeight ==3{_ggacf ++;};_caded ._gfge ,_eddb =_caded .getUserTable (_ggacf );
if _eddb !=nil {return 0,_cd .Wrap (_eddb ,_feba ,"");};};return _caded ._gfge .Decode (_caded ._aafc );};_cbbe ,_caba :=_afb .GetStandardTable (14+int (_caded .SbHuffRDX ));if _caba !=nil {return 0,_cd .Wrap (_caba ,_feba ,"");};return _cbbe .Decode (_caded ._aafc );
};_baaa ,_agfe :=_caded ._eccgc .DecodeInt (_caded ._aeac );if _agfe !=nil {return 0,_cd .Wrap (_agfe ,_feba ,"");};return int64 (_baaa ),nil ;};var _ templater =&template1 {};func (_abaf *Header )subInputReader ()(*_g .Reader ,error ){_eggb :=int (_abaf .SegmentDataLength );
if _abaf .SegmentDataLength ==_e .MaxInt32 {_eggb =-1;};return _abaf .Reader .NewPartialReader (int (_abaf .SegmentDataStartOffset ),_eggb ,false );};func (_ebc *template0 )form (_fee ,_fbd ,_cedc ,_dfd ,_bad int16 )int16 {return (_fee <<10)|(_fbd <<7)|(_cedc <<4)|(_dfd <<1)|_bad ;
};func _gacb (_dfga int )int {if _dfga ==0{return 0;};_dfga |=_dfga >>1;_dfga |=_dfga >>2;_dfga |=_dfga >>4;_dfga |=_dfga >>8;_dfga |=_dfga >>16;return (_dfga +1)>>1;};func (_fdgdg *TextRegion )getSymbols ()error {if _fdgdg .Header .RTSegments !=nil {return _fdgdg .initSymbols ();
};return nil ;};func (_daacg *HalftoneRegion )Init (hd *Header ,r *_g .Reader )error {_daacg ._dbge =r ;_daacg ._ggd =hd ;_daacg .RegionSegment =NewRegionSegment (r );return _daacg .parseHeader ();};func (_edfbb *SymbolDictionary )readNumberOfNewSymbols ()error {_gacf ,_cadd :=_edfbb ._cgdga .ReadBits (32);
if _cadd !=nil {return _cadd ;};_edfbb .NumberOfNewSymbols =uint32 (_gacf &_e .MaxUint32 );return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_dbf *Header )readSegmentDataLength (_dcbcb *_g .Reader )(_bccf error ){_dbf .SegmentDataLength ,_bccf =_dcbcb .ReadBits (32);
if _bccf !=nil {return _bccf ;};_dbf .SegmentDataLength &=_e .MaxInt32 ;return nil ;};func (_fagf *PageInformationSegment )readMaxStripeSize ()error {_fgdcg ,_bfce :=_fagf ._gcdg .ReadBits (15);if _bfce !=nil {return _bfce ;};_fagf .MaxStripeSize =uint16 (_fgdcg &_e .MaxUint16 );
return nil ;};func (_faef *Header )String ()string {_dcbc :=&_b .Builder {};_dcbc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_dcbc .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_faef .SegmentNumber ));
_dcbc .WriteString (_ea .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_faef .Type ));_dcbc .WriteString (_ea .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_faef .RetainFlag ));
_dcbc .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_faef .PageAssociation ));_dcbc .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_faef .PageAssociationFieldSize ));
_dcbc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_egag :=range _faef .RTSNumbers {_dcbc .WriteString (_ea .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_egag ));};_dcbc .WriteString (_ea .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_faef .HeaderLength ));
_dcbc .WriteString (_ea .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_faef .SegmentDataLength ));_dcbc .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_faef .SegmentDataStartOffset ));
return _dcbc .String ();};func (_feb *GenericRegion )writeGBAtPixels (_gdfa _g .BinaryWriter )(_efd int ,_bbab error ){const _aag ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _feb .UseMMR {return 0,nil ;};_eaab :=1;
if _feb .GBTemplate ==0{_eaab =4;}else if _feb .UseExtTemplates {_eaab =12;};if len (_feb .GBAtX )!=_eaab {return 0,_cd .Errorf (_aag ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_feb .GBAtY )!=_eaab {return 0,_cd .Errorf (_aag ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bged :=0;_bged < _eaab ;_bged ++{if _bbab =_gdfa .WriteByte (byte (_feb .GBAtX [_bged ]));_bbab !=nil {return _efd ,_cd .Wrap (_bbab ,_aag ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_efd ++;if _bbab =_gdfa .WriteByte (byte (_feb .GBAtY [_bged ]));
_bbab !=nil {return _efd ,_cd .Wrap (_bbab ,_aag ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_efd ++;};return _efd ,nil ;};func (_gf *EndOfStripe )parseHeader ()error {_aa ,_dc :=_gf ._cg .ReadBits (32);if _dc !=nil {return _dc ;
};_gf ._be =int (_aa &_e .MaxInt32 );return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_bb .Bitmap ,error );};const (ORandom OrganizationType =iota ;OSequential ;);func (_effd *SymbolDictionary )checkInput ()error {if _effd .SdHuffDecodeHeightSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_effd .SdHuffDecodeHeightSelection );
};if _effd .SdHuffDecodeWidthSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_effd .SdHuffDecodeWidthSelection );
};if _effd .IsHuffmanEncoded {if _effd .SdTemplate !=0{_bc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_effd .SdTemplate );
};if !_effd .UseRefinementAggregation {if !_effd .UseRefinementAggregation {if _effd ._fgg {_bc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_effd ._fgg =false ;};if _effd ._gcea {_bc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_effd ._gcea =false ;};};};}else {if _effd .SdHuffBMSizeSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_effd .SdHuffBMSizeSelection =0;};if _effd .SdHuffDecodeWidthSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_effd .SdHuffDecodeWidthSelection =0;};if _effd .SdHuffDecodeHeightSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_effd .SdHuffDecodeHeightSelection =0;};};if !_effd .UseRefinementAggregation {if _effd .SdrTemplate !=0{_bc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_effd .SdrTemplate );
_effd .SdrTemplate =0;};};if !_effd .IsHuffmanEncoded ||!_effd .UseRefinementAggregation {if _effd .SdHuffAggInstanceSelection {_bc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_effd .SdHuffAggInstanceSelection );
};};return nil ;};type HalftoneRegion struct{_dbge *_g .Reader ;_ggd *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _bb .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_bb .Bitmap ;Patterns []*_bb .Bitmap ;};func (_dfb *GenericRegion )Encode (w _g .BinaryWriter )(_aca int ,_aeaa error ){const _cce ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dfb .Bitmap ==nil {return 0,_cd .Error (_cce ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_beg ,_aeaa :=_dfb .RegionSegment .Encode (w );if _aeaa !=nil {return 0,_cd .Wrap (_aeaa ,_cce ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_aca +=_beg ;if _aeaa =w .SkipBits (4);_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bag int ;if _dfb .IsTPGDon {_bag =1;};if _aeaa =w .WriteBit (_bag );
_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bag =0;if _aeaa =w .WriteBit (int (_dfb .GBTemplate >>1)&0x01);_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _aeaa =w .WriteBit (int (_dfb .GBTemplate )&0x01);_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dfb .UseMMR {_bag =1;};if _aeaa =w .WriteBit (_bag );
_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aca ++;if _beg ,_aeaa =_dfb .writeGBAtPixels (w );_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"");};_aca +=_beg ;_fbecf :=_ba .New ();
if _aeaa =_fbecf .EncodeBitmap (_dfb .Bitmap ,_dfb .IsTPGDon );_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"");};_fbecf .Final ();var _def int64 ;if _def ,_aeaa =_fbecf .WriteTo (w );_aeaa !=nil {return _aca ,_cd .Wrap (_aeaa ,_cce ,"");};_aca +=int (_def );
return _aca ,nil ;};func (_abdd *Header )readHeaderFlags ()error {const _agdg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_agc ,_gdgg :=_abdd .Reader .ReadBit ();if _gdgg !=nil {return _cd .Wrap (_gdgg ,_agdg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _agc !=0{_abdd .RetainFlag =true ;};_agc ,_gdgg =_abdd .Reader .ReadBit ();if _gdgg !=nil {return _cd .Wrap (_gdgg ,_agdg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _agc !=0{_abdd .PageAssociationFieldSize =true ;
};_fbge ,_gdgg :=_abdd .Reader .ReadBits (6);if _gdgg !=nil {return _cd .Wrap (_gdgg ,_agdg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_abdd .Type =Type (int (_fbge ));return nil ;};func (_gcaag *TableSegment )HtLow ()int32 {return _gcaag ._aggd };
type Type int ;func (_egbe *TextRegion )Init (header *Header ,r *_g .Reader )error {_egbe .Header =header ;_egbe ._aafc =r ;_egbe .RegionInfo =NewRegionSegment (_egbe ._aafc );return _egbe .parseHeader ();};func (_cgec *GenericRegion )setParametersMMR (_daef bool ,_egc ,_ade int64 ,_addf ,_ggad uint32 ,_babf byte ,_eabf ,_bfba bool ,_gdbg ,_ggea []int8 ){_cgec .DataOffset =_egc ;
_cgec .DataLength =_ade ;_cgec .RegionSegment =&RegionSegment {};_cgec .RegionSegment .BitmapHeight =_addf ;_cgec .RegionSegment .BitmapWidth =_ggad ;_cgec .GBTemplate =_babf ;_cgec .IsMMREncoded =_daef ;_cgec .IsTPGDon =_eabf ;_cgec .GBAtX =_gdbg ;_cgec .GBAtY =_ggea ;
};func NewRegionSegment (r *_g .Reader )*RegionSegment {return &RegionSegment {_aged :r }};func (_aeea *SymbolDictionary )encodeATFlags (_ebdf _g .BinaryWriter )(_accfg int ,_eeda error ){const _ebb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _aeea .IsHuffmanEncoded ||_aeea .SdTemplate !=0{return 0,nil ;};_aggg :=4;if _aeea .SdTemplate !=0{_aggg =1;};for _gega :=0;_gega < _aggg ;_gega ++{if _eeda =_ebdf .WriteByte (byte (_aeea .SdATX [_gega ]));_eeda !=nil {return _accfg ,_cd .Wrapf (_eeda ,_ebb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gega );
};_accfg ++;if _eeda =_ebdf .WriteByte (byte (_aeea .SdATY [_gega ]));_eeda !=nil {return _accfg ,_cd .Wrapf (_eeda ,_ebb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gega );};_accfg ++;};return _accfg ,nil ;};func (_gdcc *GenericRegion )decodeLine (_aee ,_gbg ,_cad int )error {const _cgddc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_gdf :=_gdcc .Bitmap .GetByteIndex (0,_aee );_abb :=_gdf -_gdcc .Bitmap .RowStride ;switch _gdcc .GBTemplate {case 0:if !_gdcc .UseExtTemplates {return _gdcc .decodeTemplate0a (_aee ,_gbg ,_cad ,_gdf ,_abb );};return _gdcc .decodeTemplate0b (_aee ,_gbg ,_cad ,_gdf ,_abb );
case 1:return _gdcc .decodeTemplate1 (_aee ,_gbg ,_cad ,_gdf ,_abb );case 2:return _gdcc .decodeTemplate2 (_aee ,_gbg ,_cad ,_gdf ,_abb );case 3:return _gdcc .decodeTemplate3 (_aee ,_gbg ,_cad ,_gdf ,_abb );};return _cd .Errorf (_cgddc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gdcc .GBTemplate );
};func (_affce *PageInformationSegment )Init (h *Header ,r *_g .Reader )(_bdfb error ){_affce ._gcdg =r ;if _bdfb =_affce .parseHeader ();_bdfb !=nil {return _cd .Wrap (_bdfb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_badae *Header )readReferredToSegmentNumbers (_edeg *_g .Reader ,_affc int )([]int ,error ){const _daba ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_ebcd :=make ([]int ,_affc );if _affc > 0{_badae .RTSegments =make ([]*Header ,_affc );var (_fcaf uint64 ;_ggae error ;);for _aecb :=0;_aecb < _affc ;_aecb ++{_fcaf ,_ggae =_edeg .ReadBits (byte (_badae .referenceSize ())<<3);if _ggae !=nil {return nil ,_cd .Wrapf (_ggae ,_daba ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_aecb );
};_ebcd [_aecb ]=int (_fcaf &_e .MaxInt32 );};};return _ebcd ,nil ;};func (_cbcg *PageInformationSegment )readDefaultPixelValue ()error {_gagc ,_afeg :=_cbcg ._gcdg .ReadBit ();if _afeg !=nil {return _afeg ;};_cbcg .DefaultPixelValue =uint8 (_gagc &0xf);
return nil ;};func (_bbea *SymbolDictionary )GetDictionary ()([]*_bb .Bitmap ,error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_bc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_bc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_bbea ._bdg ,_bbea ._cdgd );
}();if _bbea ._bdg ==nil {var _abg error ;if _bbea .UseRefinementAggregation {_bbea ._ddfg =_bbea .getSbSymCodeLen ();};if !_bbea .IsHuffmanEncoded {if _abg =_bbea .setCodingStatistics ();_abg !=nil {return nil ,_abg ;};};_bbea ._cdgd =make ([]*_bb .Bitmap ,_bbea .NumberOfNewSymbols );
var _fccfd []int ;if _bbea .IsHuffmanEncoded &&!_bbea .UseRefinementAggregation {_fccfd =make ([]int ,_bbea .NumberOfNewSymbols );};if _abg =_bbea .setSymbolsArray ();_abg !=nil {return nil ,_abg ;};var _efff ,_fadf int64 ;_bbea ._dgb =0;for _bbea ._dgb < _bbea .NumberOfNewSymbols {_fadf ,_abg =_bbea .decodeHeightClassDeltaHeight ();
if _abg !=nil {return nil ,_abg ;};_efff +=_fadf ;var _fdfe ,_fccc uint32 ;_bebf :=int64 (_bbea ._dgb );for {var _gffc int64 ;_gffc ,_abg =_bbea .decodeDifferenceWidth ();if _ee .Is (_abg ,_af .ErrOOB ){break ;};if _abg !=nil {return nil ,_abg ;};if _bbea ._dgb >=_bbea .NumberOfNewSymbols {break ;
};_fdfe +=uint32 (_gffc );_fccc +=_fdfe ;if !_bbea .IsHuffmanEncoded ||_bbea .UseRefinementAggregation {if !_bbea .UseRefinementAggregation {_abg =_bbea .decodeDirectlyThroughGenericRegion (_fdfe ,uint32 (_efff ));if _abg !=nil {return nil ,_abg ;};}else {_abg =_bbea .decodeAggregate (_fdfe ,uint32 (_efff ));
if _abg !=nil {return nil ,_abg ;};};}else if _bbea .IsHuffmanEncoded &&!_bbea .UseRefinementAggregation {_fccfd [_bbea ._dgb ]=int (_fdfe );};_bbea ._dgb ++;};if _bbea .IsHuffmanEncoded &&!_bbea .UseRefinementAggregation {var _caae int64 ;if _bbea .SdHuffBMSizeSelection ==0{var _baee _afb .Tabler ;
_baee ,_abg =_afb .GetStandardTable (1);if _abg !=nil {return nil ,_abg ;};_caae ,_abg =_baee .Decode (_bbea ._cgdga );if _abg !=nil {return nil ,_abg ;};}else {_caae ,_abg =_bbea .huffDecodeBmSize ();if _abg !=nil {return nil ,_abg ;};};_bbea ._cgdga .Align ();
var _bbaa *_bb .Bitmap ;_bbaa ,_abg =_bbea .decodeHeightClassCollectiveBitmap (_caae ,uint32 (_efff ),_fccc );if _abg !=nil {return nil ,_abg ;};_abg =_bbea .decodeHeightClassBitmap (_bbaa ,_bebf ,int (_efff ),_fccfd );if _abg !=nil {return nil ,_abg ;
};};};_cede ,_abg :=_bbea .getToExportFlags ();if _abg !=nil {return nil ,_abg ;};_bbea .setExportedSymbols (_cede );};return _bbea ._bdg ,nil ;};func (_cdbf *SymbolDictionary )getSymbol (_dbae int )(*_bb .Bitmap ,error ){const _becb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_caad ,_beba :=_cdbf ._efgeg .GetBitmap (_cdbf ._gcf [_dbae ]);if _beba !=nil {return nil ,_cd .Wrap (_beba ,_becb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _caad ,nil ;};func (_fcbdd *Header )referenceSize ()uint {switch {case _fcbdd .SegmentNumber <=255:return 1;
case _fcbdd .SegmentNumber <=65535:return 2;default:return 4;};};var (_eba Segmenter ;_decb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _eba },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _eba },TProfiles :func ()Segmenter {return _eba },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _eba },TBitmap :func ()Segmenter {return _eba }};
);func (_bceb *GenericRegion )setParametersWithAt (_dgaf bool ,_babg byte ,_fbfd ,_cfba bool ,_bcg ,_bada []int8 ,_gdg ,_afee uint32 ,_cdb *_ecb .DecoderStats ,_dbgc *_ecb .Decoder ){_bceb .IsMMREncoded =_dgaf ;_bceb .GBTemplate =_babg ;_bceb .IsTPGDon =_fbfd ;
_bceb .GBAtX =_bcg ;_bceb .GBAtY =_bada ;_bceb .RegionSegment .BitmapHeight =_afee ;_bceb .RegionSegment .BitmapWidth =_gdg ;_bceb ._ccff =nil ;_bceb .Bitmap =nil ;if _cdb !=nil {_bceb ._egge =_cdb ;};if _dbgc !=nil {_bceb ._dda =_dbgc ;};_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bceb );
};type PageInformationSegment struct{_gcdg *_g .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bfbd bool ;_cfd _bb .CombinationOperator ;_deb bool ;DefaultPixelValue uint8 ;_ccb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;
};func (_gbge *PageInformationSegment )Size ()int {return 19};func (_eacgb *TextRegion )decodeIds ()(int64 ,error ){const _eebea ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _eacgb .IsHuffmanEncoded {if _eacgb .SbHuffDS ==3{if _eacgb ._affg ==nil {_adaed :=0;
if _eacgb .SbHuffFS ==3{_adaed ++;};var _dgedg error ;_eacgb ._affg ,_dgedg =_eacgb .getUserTable (_adaed );if _dgedg !=nil {return 0,_cd .Wrap (_dgedg ,_eebea ,"");};};return _eacgb ._affg .Decode (_eacgb ._aafc );};_beeg ,_ebbc :=_afb .GetStandardTable (8+int (_eacgb .SbHuffDS ));
if _ebbc !=nil {return 0,_cd .Wrap (_ebbc ,_eebea ,"");};return _beeg .Decode (_eacgb ._aafc );};_bacc ,_eefa :=_eacgb ._eccgc .DecodeInt (_eacgb ._gfdc );if _eefa !=nil {return 0,_cd .Wrap (_eefa ,_eebea ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bacc ),nil ;
};func (_ae *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ae .RegionInfo };func (_dba *GenericRegion )getPixel (_cdaa ,_bcbb int )int8 {if _cdaa < 0||_cdaa >=_dba .Bitmap .Width {return 0;};if _bcbb < 0||_bcbb >=_dba .Bitmap .Height {return 0;
};if _dba .Bitmap .GetPixel (_cdaa ,_bcbb ){return 1;};return 0;};func (_faec *PageInformationSegment )Encode (w _g .BinaryWriter )(_fbfdb int ,_acae error ){const _aeeg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_fcbda :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fcbda ,uint32 (_faec .PageBMWidth ));_fbfdb ,_acae =w .Write (_fcbda );if _acae !=nil {return _fbfdb ,_cd .Wrap (_acae ,_aeeg ,"\u0077\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_fcbda ,uint32 (_faec .PageBMHeight ));
var _feda int ;_feda ,_acae =w .Write (_fcbda );if _acae !=nil {return _feda +_fbfdb ,_cd .Wrap (_acae ,_aeeg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fbfdb +=_feda ;_a .BigEndian .PutUint32 (_fcbda ,uint32 (_faec .ResolutionX ));_feda ,_acae =w .Write (_fcbda );
if _acae !=nil {return _feda +_fbfdb ,_cd .Wrap (_acae ,_aeeg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fbfdb +=_feda ;_a .BigEndian .PutUint32 (_fcbda ,uint32 (_faec .ResolutionY ));if _feda ,_acae =w .Write (_fcbda );
_acae !=nil {return _feda +_fbfdb ,_cd .Wrap (_acae ,_aeeg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fbfdb +=_feda ;if _acae =_faec .encodeFlags (w );_acae !=nil {return _fbfdb ,_cd .Wrap (_acae ,_aeeg ,"");};_fbfdb ++;
if _feda ,_acae =_faec .encodeStripingInformation (w );_acae !=nil {return _fbfdb ,_cd .Wrap (_acae ,_aeeg ,"");};_fbfdb +=_feda ;return _fbfdb ,nil ;};func (_gea *HalftoneRegion )computeY (_fgec ,_cee int )int {return _gea .shiftAndFill (int (_gea .HGridY )+_fgec *int (_gea .HRegionX )-_cee *int (_gea .HRegionY ));
};func (_gggg *HalftoneRegion )GetRegionBitmap ()(*_bb .Bitmap ,error ){if _gggg .HalftoneRegionBitmap !=nil {return _gggg .HalftoneRegionBitmap ,nil ;};var _ddaf error ;_gggg .HalftoneRegionBitmap =_bb .New (int (_gggg .RegionSegment .BitmapWidth ),int (_gggg .RegionSegment .BitmapHeight ));
if _gggg .Patterns ==nil ||(_gggg .Patterns !=nil &&len (_gggg .Patterns )==0){_gggg .Patterns ,_ddaf =_gggg .GetPatterns ();if _ddaf !=nil {return nil ,_ddaf ;};};if _gggg .HDefaultPixel ==1{_gggg .HalftoneRegionBitmap .SetDefaultPixel ();};_aagg :=_e .Ceil (_e .Log (float64 (len (_gggg .Patterns )))/_e .Log (2));
_afec :=int (_aagg );var _aeab [][]int ;_aeab ,_ddaf =_gggg .grayScaleDecoding (_afec );if _ddaf !=nil {return nil ,_ddaf ;};if _ddaf =_gggg .renderPattern (_aeab );_ddaf !=nil {return nil ,_ddaf ;};return _gggg .HalftoneRegionBitmap ,nil ;};func (_bdcf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_geec ,_dddd :=_bdcf ._gcdg .ReadBit ();
if _dddd !=nil {return _dddd ;};if _geec ==1{_bdcf ._deb =true ;};return nil ;};func (_dge *HalftoneRegion )computeX (_facc ,_adg int )int {return _dge .shiftAndFill (int (_dge .HGridX )+_facc *int (_dge .HRegionY )+_adg *int (_dge .HRegionX ));};func (_gafa *GenericRegion )updateOverrideFlags ()error {const _eeg ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gafa .GBAtX ==nil ||_gafa .GBAtY ==nil {return nil ;};if len (_gafa .GBAtX )!=len (_gafa .GBAtY ){return _cd .Errorf (_eeg ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gafa .GBAtX ),len (_gafa .GBAtY ));
};_gafa .GBAtOverride =make ([]bool ,len (_gafa .GBAtX ));switch _gafa .GBTemplate {case 0:if !_gafa .UseExtTemplates {if _gafa .GBAtX [0]!=3||_gafa .GBAtY [0]!=-1{_gafa .setOverrideFlag (0);};if _gafa .GBAtX [1]!=-3||_gafa .GBAtY [1]!=-1{_gafa .setOverrideFlag (1);
};if _gafa .GBAtX [2]!=2||_gafa .GBAtY [2]!=-2{_gafa .setOverrideFlag (2);};if _gafa .GBAtX [3]!=-2||_gafa .GBAtY [3]!=-2{_gafa .setOverrideFlag (3);};}else {if _gafa .GBAtX [0]!=-2||_gafa .GBAtY [0]!=0{_gafa .setOverrideFlag (0);};if _gafa .GBAtX [1]!=0||_gafa .GBAtY [1]!=-2{_gafa .setOverrideFlag (1);
};if _gafa .GBAtX [2]!=-2||_gafa .GBAtY [2]!=-1{_gafa .setOverrideFlag (2);};if _gafa .GBAtX [3]!=-1||_gafa .GBAtY [3]!=-2{_gafa .setOverrideFlag (3);};if _gafa .GBAtX [4]!=1||_gafa .GBAtY [4]!=-2{_gafa .setOverrideFlag (4);};if _gafa .GBAtX [5]!=2||_gafa .GBAtY [5]!=-1{_gafa .setOverrideFlag (5);
};if _gafa .GBAtX [6]!=-3||_gafa .GBAtY [6]!=0{_gafa .setOverrideFlag (6);};if _gafa .GBAtX [7]!=-4||_gafa .GBAtY [7]!=0{_gafa .setOverrideFlag (7);};if _gafa .GBAtX [8]!=2||_gafa .GBAtY [8]!=-2{_gafa .setOverrideFlag (8);};if _gafa .GBAtX [9]!=3||_gafa .GBAtY [9]!=-1{_gafa .setOverrideFlag (9);
};if _gafa .GBAtX [10]!=-2||_gafa .GBAtY [10]!=-2{_gafa .setOverrideFlag (10);};if _gafa .GBAtX [11]!=-3||_gafa .GBAtY [11]!=-1{_gafa .setOverrideFlag (11);};};case 1:if _gafa .GBAtX [0]!=3||_gafa .GBAtY [0]!=-1{_gafa .setOverrideFlag (0);};case 2:if _gafa .GBAtX [0]!=2||_gafa .GBAtY [0]!=-1{_gafa .setOverrideFlag (0);
};case 3:if _gafa .GBAtX [0]!=2||_gafa .GBAtY [0]!=-1{_gafa .setOverrideFlag (0);};};return nil ;};func (_dagg *Header )readHeaderLength (_cbbf *_g .Reader ,_fecf int64 ){_dagg .HeaderLength =_cbbf .AbsolutePosition ()-_fecf ;};func (_cdggb Type )String ()string {switch _cdggb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_beea *HalftoneRegion )computeGrayScalePlanes (_efa []*_bb .Bitmap ,_ddgc int )([][]int ,error ){_bcfa :=make ([][]int ,_beea .HGridHeight );
for _gccgf :=0;_gccgf < len (_bcfa );_gccgf ++{_bcfa [_gccgf ]=make ([]int ,_beea .HGridWidth );};for _eafd :=0;_eafd < int (_beea .HGridHeight );_eafd ++{for _acaa :=0;_acaa < int (_beea .HGridWidth );_acaa +=8{var _cdad int ;if _fgdcd :=int (_beea .HGridWidth )-_acaa ;
_fgdcd > 8{_cdad =8;}else {_cdad =_fgdcd ;};_fgea :=_efa [0].GetByteIndex (_acaa ,_eafd );for _ggc :=0;_ggc < _cdad ;_ggc ++{_ggde :=_ggc +_acaa ;_bcfa [_eafd ][_ggde ]=0;for _aad :=0;_aad < _ddgc ;_aad ++{_aga ,_eebf :=_efa [_aad ].GetByte (_fgea );if _eebf !=nil {return nil ,_eebf ;
};_cbge :=_aga >>uint (7-_ggde &7);_efe :=_cbge &1;_gdd :=1<<uint (_aad );_acbf :=int (_efe )*_gdd ;_bcfa [_eafd ][_ggde ]+=_acbf ;};};};};return _bcfa ,nil ;};func (_cffa *TableSegment )HtRS ()int32 {return _cffa ._cddb };func (_cfg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_eca ,_ecad ,_eeb ,_fad ,_ccf ,_cebc ,_ag ,_fg ,_ecbg int )error {var (_fea ,_afa ,_cgd ,_bbe ,_gce ,_deac int ;
_ecf byte ;_dgc error ;);if _eca > 0{_ecf ,_dgc =_cfg .RegionBitmap .GetByte (_ag -_eeb );if _dgc !=nil {return _dgc ;};_cgd =int (_ecf );};if _fg > 0&&_fg <=_cfg .ReferenceBitmap .Height {_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg -_fad +_cebc );
if _dgc !=nil {return _dgc ;};_bbe =int (_ecf )<<4;};if _fg >=0&&_fg < _cfg .ReferenceBitmap .Height {_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg +_cebc );if _dgc !=nil {return _dgc ;};_gce =int (_ecf )<<1;};if _fg > -2&&_fg < _cfg .ReferenceBitmap .Height -1{_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg +_fad +_cebc );
if _dgc !=nil {return _dgc ;};_deac =int (_ecf );};_fea =((_cgd >>5)&0x6)|((_deac >>2)&0x30)|(_gce &0x180)|(_bbe &0xc00);var _cba int ;for _ccd :=0;_ccd < _ccf ;_ccd =_cba {var _cca int ;_cba =_ccd +8;var _geb int ;if _geb =_ecad -_ccd ;_geb > 8{_geb =8;
};_gfag :=_cba < _ecad ;_ff :=_cba < _cfg .ReferenceBitmap .Width ;_ege :=_cebc +1;if _eca > 0{_ecf =0;if _gfag {_ecf ,_dgc =_cfg .RegionBitmap .GetByte (_ag -_eeb +1);if _dgc !=nil {return _dgc ;};};_cgd =(_cgd <<8)|int (_ecf );};if _fg > 0&&_fg <=_cfg .ReferenceBitmap .Height {var _ecfd int ;
if _ff {_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg -_fad +_ege );if _dgc !=nil {return _dgc ;};_ecfd =int (_ecf )<<4;};_bbe =(_bbe <<8)|_ecfd ;};if _fg >=0&&_fg < _cfg .ReferenceBitmap .Height {var _fdf int ;if _ff {_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg +_ege );
if _dgc !=nil {return _dgc ;};_fdf =int (_ecf )<<1;};_gce =(_gce <<8)|_fdf ;};if _fg > -2&&_fg < (_cfg .ReferenceBitmap .Height -1){_ecf =0;if _ff {_ecf ,_dgc =_cfg .ReferenceBitmap .GetByte (_ecbg +_fad +_ege );if _dgc !=nil {return _dgc ;};};_deac =(_deac <<8)|int (_ecf );
};for _abf :=0;_abf < _geb ;_abf ++{var _geee int ;_acee :=false ;_faa :=(_fea >>4)&0x1ff;if _faa ==0x1ff{_acee =true ;_geee =1;}else if _faa ==0x00{_acee =true ;};if !_acee {if _cfg ._bea {_afa =_cfg .overrideAtTemplate0 (_fea ,_ccd +_abf ,_eca ,_cca ,_abf );
_cfg ._de .SetIndex (int32 (_afa ));}else {_cfg ._de .SetIndex (int32 (_fea ));};_geee ,_dgc =_cfg ._ce .DecodeBit (_cfg ._de );if _dgc !=nil {return _dgc ;};};_fff :=uint (7-_abf );_cca |=_geee <<_fff ;_fea =((_fea &0xdb6)<<1)|_geee |(_cgd >>_fff +5)&0x002|((_deac >>_fff +2)&0x010)|((_gce >>_fff )&0x080)|((_bbe >>_fff )&0x400);
};_dgc =_cfg .RegionBitmap .SetByte (_ag ,byte (_cca ));if _dgc !=nil {return _dgc ;};_ag ++;_ecbg ++;};return nil ;};func (_bgdf *Header )writeSegmentPageAssociation (_dafc _g .BinaryWriter )(_ece int ,_dbgg error ){const _fdaea ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bgdf .pageSize ()!=4{if _dbgg =_dafc .WriteByte (byte (_bgdf .PageAssociation ));_dbgg !=nil {return 0,_cd .Wrap (_dbgg ,_fdaea ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_efbf :=make ([]byte ,4);
_a .BigEndian .PutUint32 (_efbf ,uint32 (_bgdf .PageAssociation ));if _ece ,_dbgg =_dafc .Write (_efbf );_dbgg !=nil {return 0,_cd .Wrap (_dbgg ,_fdaea ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ece ,nil ;
};func (_cb *EndOfStripe )Init (h *Header ,r *_g .Reader )error {_cb ._cg =r ;return _cb .parseHeader ()};func (_eeaa *SymbolDictionary )getSbSymCodeLen ()int8 {_bcead :=int8 (_e .Ceil (_e .Log (float64 (_eeaa ._fcda +_eeaa .NumberOfNewSymbols ))/_e .Log (2)));
if _eeaa .IsHuffmanEncoded &&_bcead < 1{return 1;};return _bcead ;};func (_bffg *Header )writeSegmentNumber (_afgc _g .BinaryWriter )(_cgbb int ,_gedef error ){_afgf :=make ([]byte ,4);_a .BigEndian .PutUint32 (_afgf ,_bffg .SegmentNumber );if _cgbb ,_gedef =_afgc .Write (_afgf );
_gedef !=nil {return 0,_cd .Wrap (_gedef ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _cgbb ,nil ;};type template0 struct{};func (_ccee *Header )readNumberOfReferredToSegments (_dee *_g .Reader )(uint64 ,error ){const _ggfa ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dag ,_cag :=_dee .ReadBits (3);if _cag !=nil {return 0,_cd .Wrap (_cag ,_ggfa ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dag &=0xf;var _acac []byte ;if _dag <=4{_acac =make ([]byte ,5);for _dcag :=0;_dcag <=4;_dcag ++{_cedg ,_ebda :=_dee .ReadBit ();
if _ebda !=nil {return 0,_cd .Wrap (_ebda ,_ggfa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_acac [_dcag ]=byte (_cedg );};}else {_dag ,_cag =_dee .ReadBits (29);if _cag !=nil {return 0,_cag ;};_dag &=_e .MaxInt32 ;_deaf :=(_dag +8)>>3;
_deaf <<=3;_acac =make ([]byte ,_deaf );var _fbece uint64 ;for _fbece =0;_fbece < _deaf ;_fbece ++{_adc ,_ede :=_dee .ReadBit ();if _ede !=nil {return 0,_cd .Wrap (_ede ,_ggfa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_acac [_fbece ]=byte (_adc );
};};return _dag ,nil ;};func (_fddg *SymbolDictionary )setAtPixels ()error {if _fddg .IsHuffmanEncoded {return nil ;};_cbec :=1;if _fddg .SdTemplate ==0{_cbec =4;};if _bbfa :=_fddg .readAtPixels (_cbec );_bbfa !=nil {return _bbfa ;};return nil ;};func (_dgbg *TableSegment )StreamReader ()*_g .Reader {return _dgbg ._aeda };
func (_ddgfd *TextRegion )decodeRI ()(int64 ,error ){if !_ddgfd .UseRefinement {return 0,nil ;};if _ddgfd .IsHuffmanEncoded {_dbef ,_fdfad :=_ddgfd ._aafc .ReadBit ();return int64 (_dbef ),_fdfad ;};_gddaf ,_agef :=_ddgfd ._eccgc .DecodeInt (_ddgfd ._dgab );
return int64 (_gddaf ),_agef ;};func (_cada *TextRegion )decodeRdy ()(int64 ,error ){const _adgf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cada .IsHuffmanEncoded {if _cada .SbHuffRDY ==3{if _cada ._bbg ==nil {var (_fcfg int ;_fded error ;);if _cada .SbHuffFS ==3{_fcfg ++;
};if _cada .SbHuffDS ==3{_fcfg ++;};if _cada .SbHuffDT ==3{_fcfg ++;};if _cada .SbHuffRDWidth ==3{_fcfg ++;};if _cada .SbHuffRDHeight ==3{_fcfg ++;};if _cada .SbHuffRDX ==3{_fcfg ++;};_cada ._bbg ,_fded =_cada .getUserTable (_fcfg );if _fded !=nil {return 0,_cd .Wrap (_fded ,_adgf ,"");
};};return _cada ._bbg .Decode (_cada ._aafc );};_dgdd ,_efbg :=_afb .GetStandardTable (14+int (_cada .SbHuffRDY ));if _efbg !=nil {return 0,_efbg ;};return _dgdd .Decode (_cada ._aafc );};_dfegb ,_badb :=_cada ._eccgc .DecodeInt (_cada ._bfcdb );if _badb !=nil {return 0,_cd .Wrap (_badb ,_adgf ,"");
};return int64 (_dfegb ),nil ;};func (_gdda *PageInformationSegment )readIsStriped ()error {_fbeg ,_fgce :=_gdda ._gcdg .ReadBit ();if _fgce !=nil {return _fgce ;};if _fbeg ==1{_gdda .IsStripe =true ;};return nil ;};func (_fddfg *Header )readDataStartOffset (_bbba *_g .Reader ,_dggce OrganizationType ){if _dggce ==OSequential {_fddfg .SegmentDataStartOffset =uint64 (_bbba .AbsolutePosition ());
};};func (_eac *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_acbb ,_dcb ,_fgd ,_fca ,_edg ,_bg ,_ffe ,_cbc ,_agb int )(_ffa error ){var (_eea ,_aea int ;_ced ,_fdfa int ;_fge ,_gge int ;_adf byte ;);if _acbb > 0{_adf ,_ffa =_eac .RegionBitmap .GetByte (_ffe -_fgd );
if _ffa !=nil {return _ffa ;};_ced =int (_adf );};if _cbc > 0&&_cbc <=_eac .ReferenceBitmap .Height {_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb -_fca +_bg );if _ffa !=nil {return _ffa ;};_fdfa =int (_adf )<<2;};if _cbc >=0&&_cbc < _eac .ReferenceBitmap .Height {_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb +_bg );
if _ffa !=nil {return _ffa ;};_fge =int (_adf );};if _cbc > -2&&_cbc < _eac .ReferenceBitmap .Height -1{_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb +_fca +_bg );if _ffa !=nil {return _ffa ;};_gge =int (_adf );};_eea =((_ced >>5)&0x6)|((_gge >>2)&0x30)|(_fge &0xc0)|(_fdfa &0x200);
_aea =((_gge >>2)&0x70)|(_fge &0xc0)|(_fdfa &0x700);var _eaf int ;for _daa :=0;_daa < _edg ;_daa =_eaf {var (_aaf int ;_cbd int ;);_eaf =_daa +8;if _aaf =_dcb -_daa ;_aaf > 8{_aaf =8;};_fbb :=_eaf < _dcb ;_ebf :=_eaf < _eac .ReferenceBitmap .Width ;_baf :=_bg +1;
if _acbb > 0{_adf =0;if _fbb {_adf ,_ffa =_eac .RegionBitmap .GetByte (_ffe -_fgd +1);if _ffa !=nil {return _ffa ;};};_ced =(_ced <<8)|int (_adf );};if _cbc > 0&&_cbc <=_eac .ReferenceBitmap .Height {var _faab int ;if _ebf {_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb -_fca +_baf );
if _ffa !=nil {return _ffa ;};_faab =int (_adf )<<2;};_fdfa =(_fdfa <<8)|_faab ;};if _cbc >=0&&_cbc < _eac .ReferenceBitmap .Height {_adf =0;if _ebf {_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb +_baf );if _ffa !=nil {return _ffa ;};};_fge =(_fge <<8)|int (_adf );
};if _cbc > -2&&_cbc < (_eac .ReferenceBitmap .Height -1){_adf =0;if _ebf {_adf ,_ffa =_eac .ReferenceBitmap .GetByte (_agb +_fca +_baf );if _ffa !=nil {return _ffa ;};};_gge =(_gge <<8)|int (_adf );};for _aedd :=0;_aedd < _aaf ;_aedd ++{var _bdc int ;
_eda :=(_aea >>4)&0x1ff;switch _eda {case 0x1ff:_bdc =1;case 0x00:_bdc =0;default:_eac ._de .SetIndex (int32 (_eea ));_bdc ,_ffa =_eac ._ce .DecodeBit (_eac ._de );if _ffa !=nil {return _ffa ;};};_bff :=uint (7-_aedd );_cbd |=_bdc <<_bff ;_eea =((_eea &0x0d6)<<1)|_bdc |(_ced >>_bff +5)&0x002|((_gge >>_bff +2)&0x010)|((_fge >>_bff )&0x040)|((_fdfa >>_bff )&0x200);
_aea =((_aea &0xdb)<<1)|((_gge >>_bff +2)&0x010)|((_fge >>_bff )&0x080)|((_fdfa >>_bff )&0x400);};_ffa =_eac .RegionBitmap .SetByte (_ffe ,byte (_cbd ));if _ffa !=nil {return _ffa ;};_ffe ++;_agb ++;};return nil ;};func (_daae *TextRegion )decodeCurrentT ()(int64 ,error ){if _daae .SbStrips !=1{if _daae .IsHuffmanEncoded {_gabd ,_fddc :=_daae ._aafc .ReadBits (byte (_daae .LogSBStrips ));
return int64 (_gabd ),_fddc ;};_feee ,_ffeg :=_daae ._eccgc .DecodeInt (_daae ._ggfd );if _ffeg !=nil {return 0,_ffeg ;};return int64 (_feee ),nil ;};return 0,nil ;};func (_cgde *GenericRegion )GetRegionInfo ()*RegionSegment {return _cgde .RegionSegment };
func (_dbgf *TextRegion )checkInput ()error {const _edfd ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_dbgf .UseRefinement {if _dbgf .SbrTemplate !=0{_bc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_dbgf .SbrTemplate =0;};};if _dbgf .SbHuffFS ==2||_dbgf .SbHuffRDWidth ==2||_dbgf .SbHuffRDHeight ==2||_dbgf .SbHuffRDX ==2||_dbgf .SbHuffRDY ==2{return _cd .Error (_edfd ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_dbgf .UseRefinement {if _dbgf .SbHuffRSize !=0{_bc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dbgf .SbHuffRSize =0;};if _dbgf .SbHuffRDY !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_dbgf .SbHuffRDY =0;};if _dbgf .SbHuffRDX !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_dbgf .SbHuffRDX =0;};if _dbgf .SbHuffRDWidth !=0{_bc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_dbgf .SbHuffRDWidth =0;};if _dbgf .SbHuffRDHeight !=0{_bc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_dbgf .SbHuffRDHeight =0;};};return nil ;
};func (_bbc *GenericRegion )decodeTemplate2 (_ccdf ,_dfgd ,_eed int ,_bef ,_cged int )(_eada error ){const _bgd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_afbc ,_bee int ;_cdd ,_gbe int ;_cff byte ;_beee ,_aegg int ;
);if _ccdf >=1{_cff ,_eada =_bbc .Bitmap .GetByte (_cged );if _eada !=nil {return _cd .Wrap (_eada ,_bgd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_cdd =int (_cff );};if _ccdf >=2{_cff ,_eada =_bbc .Bitmap .GetByte (_cged -_bbc .Bitmap .RowStride );
if _eada !=nil {return _cd .Wrap (_eada ,_bgd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gbe =int (_cff )<<4;};_afbc =(_cdd >>3&0x7c)|(_gbe >>3&0x380);for _cbb :=0;_cbb < _eed ;_cbb =_beee {var (_ecdd byte ;
_ggf int ;);_beee =_cbb +8;if _cdfg :=_dfgd -_cbb ;_cdfg > 8{_ggf =8;}else {_ggf =_cdfg ;};if _ccdf > 0{_cdd <<=8;if _beee < _dfgd {_cff ,_eada =_bbc .Bitmap .GetByte (_cged +1);if _eada !=nil {return _cd .Wrap (_eada ,_bgd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_cdd |=int (_cff );};};if _ccdf > 1{_gbe <<=8;if _beee < _dfgd {_cff ,_eada =_bbc .Bitmap .GetByte (_cged -_bbc .Bitmap .RowStride +1);if _eada !=nil {return _cd .Wrap (_eada ,_bgd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_gbe |=int (_cff )<<4;};};for _dbe :=0;_dbe < _ggf ;_dbe ++{_agd :=uint (10-_dbe );if _bbc ._cfgc {_bee =_bbc .overrideAtTemplate2 (_afbc ,_cbb +_dbe ,_ccdf ,int (_ecdd ),_dbe );_bbc ._egge .SetIndex (int32 (_bee ));}else {_bbc ._egge .SetIndex (int32 (_afbc ));
};_aegg ,_eada =_bbc ._dda .DecodeBit (_bbc ._egge );if _eada !=nil {return _cd .Wrap (_eada ,_bgd ,"");};_ecdd |=byte (_aegg <<uint (7-_dbe ));_afbc =((_afbc &0x1bd)<<1)|_aegg |((_cdd >>_agd )&0x4)|((_gbe >>_agd )&0x80);};if _cgc :=_bbc .Bitmap .SetByte (_bef ,_ecdd );
_cgc !=nil {return _cd .Wrap (_cgc ,_bgd ,"");};_bef ++;_cged ++;};return nil ;};type SymbolDictionary struct{_cgdga *_g .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_fgg bool ;_gcea bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;
SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_fcda uint32 ;_feeg []*_bb .Bitmap ;
_dgb uint32 ;_cdgd []*_bb .Bitmap ;_ecea _afb .Tabler ;_aeed _afb .Tabler ;_bgec _afb .Tabler ;_bedf _afb .Tabler ;_bdg []*_bb .Bitmap ;_dabb []*_bb .Bitmap ;_dbgeb *_ecb .Decoder ;_bbad *TextRegion ;_cfgd *GenericRegion ;_adde *GenericRefinementRegion ;
_ebeg *_ecb .DecoderStats ;_cadb *_ecb .DecoderStats ;_ecde *_ecb .DecoderStats ;_adca *_ecb .DecoderStats ;_ecfg *_ecb .DecoderStats ;_bda *_ecb .DecoderStats ;_efge *_ecb .DecoderStats ;_cgca *_ecb .DecoderStats ;_ccg *_ecb .DecoderStats ;_ddfg int8 ;
_efgeg *_bb .Bitmaps ;_gcf []int ;_dcaf map[int ]int ;_ecfga bool ;};type SegmentEncoder interface{Encode (_dddb _g .BinaryWriter )(_eece int ,_bde error );};func (_badf *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _badf ._bfbd };
func (_dgff *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dbga ,_fccf :=_dgff ._gcdg .ReadBit ();if _fccf !=nil {return _fccf ;};if _dbga ==1{_dgff ._bfbd =true ;};return nil ;};func (_gebd *PageInformationSegment )checkInput ()error {if _gebd .PageBMHeight ==_e .MaxInt32 {if !_gebd .IsStripe {_bc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_cfbc *Header )readSegmentPageAssociation (_cgae Documenter ,_adfa *_g .Reader ,_cgdg uint64 ,_gede ...int )(_fbba error ){const _gab ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_cfbc .PageAssociationFieldSize {_addc ,_baea :=_adfa .ReadBits (8);if _baea !=nil {return _cd .Wrap (_baea ,_gab ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfbc .PageAssociation =int (_addc &0xFF);}else {_gebg ,_bbce :=_adfa .ReadBits (32);
if _bbce !=nil {return _cd .Wrap (_bbce ,_gab ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfbc .PageAssociation =int (_gebg &_e .MaxInt32 );};if _cgdg ==0{return nil ;};if _cfbc .PageAssociation !=0{_eefc ,_ebcdg :=_cgae .GetPage (_cfbc .PageAssociation );
if _ebcdg !=nil {return _cd .Wrap (_ebcdg ,_gab ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ggac int ;for _ffeb :=uint64 (0);_ffeb < _cgdg ;_ffeb ++{_ggac =_gede [_ffeb ];
_cfbc .RTSegments [_ffeb ],_ebcdg =_eefc .GetSegment (_ggac );if _ebcdg !=nil {var _feac error ;_cfbc .RTSegments [_ffeb ],_feac =_cgae .GetGlobalSegment (_ggac );if _feac !=nil {return _cd .Wrapf (_ebcdg ,_gab ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_cfbc .PageAssociation );
};};};return nil ;};for _deee :=uint64 (0);_deee < _cgdg ;_deee ++{_cfbc .RTSegments [_deee ],_fbba =_cgae .GetGlobalSegment (_gede [_deee ]);if _fbba !=nil {return _cd .Wrapf (_fbba ,_gab ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gede [_deee ]);
};};return nil ;};func (_ddgg *HalftoneRegion )parseHeader ()error {if _ffb :=_ddgg .RegionSegment .parseHeader ();_ffb !=nil {return _ffb ;};_fbaf ,_bedaf :=_ddgg ._dbge .ReadBit ();if _bedaf !=nil {return _bedaf ;};_ddgg .HDefaultPixel =int8 (_fbaf );
_bgc ,_bedaf :=_ddgg ._dbge .ReadBits (3);if _bedaf !=nil {return _bedaf ;};_ddgg .CombinationOperator =_bb .CombinationOperator (_bgc &0xf);_fbaf ,_bedaf =_ddgg ._dbge .ReadBit ();if _bedaf !=nil {return _bedaf ;};if _fbaf ==1{_ddgg .HSkipEnabled =true ;
};_bgc ,_bedaf =_ddgg ._dbge .ReadBits (2);if _bedaf !=nil {return _bedaf ;};_ddgg .HTemplate =byte (_bgc &0xf);_fbaf ,_bedaf =_ddgg ._dbge .ReadBit ();if _bedaf !=nil {return _bedaf ;};if _fbaf ==1{_ddgg .IsMMREncoded =true ;};_bgc ,_bedaf =_ddgg ._dbge .ReadBits (32);
if _bedaf !=nil {return _bedaf ;};_ddgg .HGridWidth =uint32 (_bgc &_e .MaxUint32 );_bgc ,_bedaf =_ddgg ._dbge .ReadBits (32);if _bedaf !=nil {return _bedaf ;};_ddgg .HGridHeight =uint32 (_bgc &_e .MaxUint32 );_bgc ,_bedaf =_ddgg ._dbge .ReadBits (32);if _bedaf !=nil {return _bedaf ;
};_ddgg .HGridX =int32 (_bgc &_e .MaxInt32 );_bgc ,_bedaf =_ddgg ._dbge .ReadBits (32);if _bedaf !=nil {return _bedaf ;};_ddgg .HGridY =int32 (_bgc &_e .MaxInt32 );_bgc ,_bedaf =_ddgg ._dbge .ReadBits (16);if _bedaf !=nil {return _bedaf ;};_ddgg .HRegionX =uint16 (_bgc &_e .MaxUint16 );
_bgc ,_bedaf =_ddgg ._dbge .ReadBits (16);if _bedaf !=nil {return _bedaf ;};_ddgg .HRegionY =uint16 (_bgc &_e .MaxUint16 );if _bedaf =_ddgg .computeSegmentDataStructure ();_bedaf !=nil {return _bedaf ;};return _ddgg .checkInput ();};func (_aaga *Header )pageSize ()uint {if _aaga .PageAssociation <=255{return 1;
};return 4;};func (_gbfb *SymbolDictionary )readNumberOfExportedSymbols ()error {_geac ,_befb :=_gbfb ._cgdga .ReadBits (32);if _befb !=nil {return _befb ;};_gbfb .NumberOfExportedSymbols =uint32 (_geac &_e .MaxUint32 );return nil ;};func (_gee *GenericRefinementRegion )decodeOptimized (_aeg ,_ddg ,_fa ,_da ,_dg ,_aed ,_dgg int )error {var (_bbd error ;
_cf int ;_acd int ;);_ace :=_aeg -int (_gee .ReferenceDY );if _bd :=int (-_gee .ReferenceDX );_bd > 0{_cf =_bd ;};_gff :=_gee .ReferenceBitmap .GetByteIndex (_cf ,_ace );if _gee .ReferenceDX > 0{_acd =int (_gee .ReferenceDX );};_fd :=_gee .RegionBitmap .GetByteIndex (_acd ,_aeg );
switch _gee .TemplateID {case 0:_bbd =_gee .decodeTemplate (_aeg ,_ddg ,_fa ,_da ,_dg ,_aed ,_dgg ,_fd ,_ace ,_gff ,_gee ._ab );case 1:_bbd =_gee .decodeTemplate (_aeg ,_ddg ,_fa ,_da ,_dg ,_aed ,_dgg ,_fd ,_ace ,_gff ,_gee ._df );};return _bbd ;};var _ SegmentEncoder =&RegionSegment {};
func (_aede *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _deff ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _aede .SbHuffRSize ==0{_bfda ,_gcdeg :=_afb .GetStandardTable (1);if _gcdeg !=nil {return 0,_cd .Wrap (_gcdeg ,_deff ,"");
};return _bfda .Decode (_aede ._aafc );};if _aede ._ceba ==nil {var (_gaac int ;_facb error ;);if _aede .SbHuffFS ==3{_gaac ++;};if _aede .SbHuffDS ==3{_gaac ++;};if _aede .SbHuffDT ==3{_gaac ++;};if _aede .SbHuffRDWidth ==3{_gaac ++;};if _aede .SbHuffRDHeight ==3{_gaac ++;
};if _aede .SbHuffRDX ==3{_gaac ++;};if _aede .SbHuffRDY ==3{_gaac ++;};_aede ._ceba ,_facb =_aede .getUserTable (_gaac );if _facb !=nil {return 0,_cd .Wrap (_facb ,_deff ,"");};};_bdee ,_dcca :=_aede ._ceba .Decode (_aede ._aafc );if _dcca !=nil {return 0,_cd .Wrap (_dcca ,_deff ,"");
};return _bdee ,nil ;};func (_acba *TextRegion )readUseRefinement ()error {if !_acba .UseRefinement ||_acba .SbrTemplate !=0{return nil ;};var (_ccbaa byte ;_egbd error ;);_acba .SbrATX =make ([]int8 ,2);_acba .SbrATY =make ([]int8 ,2);_ccbaa ,_egbd =_acba ._aafc .ReadByte ();
if _egbd !=nil {return _egbd ;};_acba .SbrATX [0]=int8 (_ccbaa );_ccbaa ,_egbd =_acba ._aafc .ReadByte ();if _egbd !=nil {return _egbd ;};_acba .SbrATY [0]=int8 (_ccbaa );_ccbaa ,_egbd =_acba ._aafc .ReadByte ();if _egbd !=nil {return _egbd ;};_acba .SbrATX [1]=int8 (_ccbaa );
_ccbaa ,_egbd =_acba ._aafc .ReadByte ();if _egbd !=nil {return _egbd ;};_acba .SbrATY [1]=int8 (_ccbaa );return nil ;};func (_dcf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_edada int ;_eeaf int32 ;_gcddc error ;_bagd =int32 (_dcf ._fcda +_dcf .NumberOfNewSymbols );
_fgbf =make ([]int ,_bagd ););for _ccecf :=int32 (0);_ccecf < _bagd ;_ccecf +=_eeaf {if _dcf .IsHuffmanEncoded {_aac ,_dged :=_afb .GetStandardTable (1);if _dged !=nil {return nil ,_dged ;};_fdbg ,_dged :=_aac .Decode (_dcf ._cgdga );if _dged !=nil {return nil ,_dged ;
};_eeaf =int32 (_fdbg );}else {_eeaf ,_gcddc =_dcf ._dbgeb .DecodeInt (_dcf ._ecfg );if _gcddc !=nil {return nil ,_gcddc ;};};if _eeaf !=0{if _ccecf +_eeaf > _bagd {return nil ,_cd .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _bafe :=_ccecf ;_bafe < _ccecf +_eeaf ;_bafe ++{_fgbf [_bafe ]=_edada ;};};if _edada ==0{_edada =1;}else {_edada =0;};};return _fgbf ,nil ;};func (_afbf *template1 )form (_dcdg ,_egd ,_egg ,_ecc ,_aba int16 )int16 {return ((_dcdg &0x02)<<8)|(_egd <<6)|((_egg &0x03)<<4)|(_ecc <<1)|_aba ;
};func (_ccddc *TextRegion )decodeRdw ()(int64 ,error ){const _egeag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ccddc .IsHuffmanEncoded {if _ccddc .SbHuffRDWidth ==3{if _ccddc ._gfba ==nil {var (_cbfe int ;_fcca error ;);if _ccddc .SbHuffFS ==3{_cbfe ++;
};if _ccddc .SbHuffDS ==3{_cbfe ++;};if _ccddc .SbHuffDT ==3{_cbfe ++;};_ccddc ._gfba ,_fcca =_ccddc .getUserTable (_cbfe );if _fcca !=nil {return 0,_cd .Wrap (_fcca ,_egeag ,"");};};return _ccddc ._gfba .Decode (_ccddc ._aafc );};_bgfc ,_edggc :=_afb .GetStandardTable (14+int (_ccddc .SbHuffRDWidth ));
if _edggc !=nil {return 0,_cd .Wrap (_edggc ,_egeag ,"");};return _bgfc .Decode (_ccddc ._aafc );};_acbbe ,_bfbf :=_ccddc ._eccgc .DecodeInt (_ccddc ._ggef );if _bfbf !=nil {return 0,_cd .Wrap (_bfbf ,_egeag ,"");};return int64 (_acbbe ),nil ;};func (_ffbc *PatternDictionary )checkInput ()error {if _ffbc .HdpHeight < 1||_ffbc .HdpWidth < 1{return _ee .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ffbc .IsMMREncoded {if _ffbc .HDTemplate !=0{_bc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cafg *HalftoneRegion )checkInput ()error {if _cafg .IsMMREncoded {if _cafg .HTemplate !=0{_bc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_cafg .HTemplate );
};if _cafg .HSkipEnabled {_bc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_cafg .HSkipEnabled );
};};return nil ;};func (_fcbc *PageInformationSegment )readIsLossless ()error {_afgae ,_aecbd :=_fcbc ._gcdg .ReadBit ();if _aecbd !=nil {return _aecbd ;};if _afgae ==1{_fcbc .IsLossless =true ;};return nil ;};func (_ffgf *TextRegion )initSymbols ()error {const _gagg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_affga :=range _ffgf .Header .RTSegments {if _affga ==nil {return _cd .Error (_gagg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _affga .Type ==0{_bfdca ,_ccbe :=_affga .GetSegmentData ();if _ccbe !=nil {return _cd .Wrap (_ccbe ,_gagg ,"");};_bdea ,_fcde :=_bfdca .(*SymbolDictionary );if !_fcde {return _cd .Error (_gagg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bdea ._ccg =_ffgf ._efgae ;_daabd ,_ccbe :=_bdea .GetDictionary ();if _ccbe !=nil {return _cd .Wrap (_ccbe ,_gagg ,"");};_ffgf .Symbols =append (_ffgf .Symbols ,_daabd ...);};};_ffgf .NumberOfSymbols =uint32 (len (_ffgf .Symbols ));return nil ;};func (_daagg *TextRegion )decodeIb (_fdgc ,_dacde int64 )(*_bb .Bitmap ,error ){const _dggd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_cfce error ;_ggdg *_bb .Bitmap ;);if _fdgc ==0{if int (_dacde )> len (_daagg .Symbols )-1{return nil ,_cd .Error (_dggd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _daagg .Symbols [int (_dacde )],nil ;};var _feeea ,_aceee ,_bfbgb ,_cbbcb int64 ;_feeea ,_cfce =_daagg .decodeRdw ();if _cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"");};_aceee ,_cfce =_daagg .decodeRdh ();if _cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"");
};_bfbgb ,_cfce =_daagg .decodeRdx ();if _cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"");};_cbbcb ,_cfce =_daagg .decodeRdy ();if _cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"");};if _daagg .IsHuffmanEncoded {if _ ,_cfce =_daagg .decodeSymInRefSize ();
_cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"");};_daagg ._aafc .Align ();};_dcff :=_daagg .Symbols [_dacde ];_ddaa :=uint32 (_dcff .Width );_dcc :=uint32 (_dcff .Height );_gcca :=int32 (uint32 (_feeea )>>1)+int32 (_bfbgb );_afbd :=int32 (uint32 (_aceee )>>1)+int32 (_cbbcb );
if _daagg ._fedc ==nil {_daagg ._fedc =_cgg (_daagg ._aafc ,nil );};_daagg ._fedc .setParameters (_daagg ._abdae ,_daagg ._eccgc ,_daagg .SbrTemplate ,_ddaa +uint32 (_feeea ),_dcc +uint32 (_aceee ),_dcff ,_gcca ,_afbd ,false ,_daagg .SbrATX ,_daagg .SbrATY );
_ggdg ,_cfce =_daagg ._fedc .GetRegionBitmap ();if _cfce !=nil {return nil ,_cd .Wrap (_cfce ,_dggd ,"\u0067\u0072\u0066");};if _daagg .IsHuffmanEncoded {_daagg ._aafc .Align ();};return _ggdg ,nil ;};var _ templater =&template0 {};func (_gfgf *PageInformationSegment )readCombinationOperator ()error {_cgff ,_fdgg :=_gfgf ._gcdg .ReadBits (2);
if _fdgg !=nil {return _fdgg ;};_gfgf ._cfd =_bb .CombinationOperator (int (_cgff ));return nil ;};type TextRegion struct{_aafc *_g .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _bb .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_aagac int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_bb .Bitmap ;Symbols []*_bb .Bitmap ;_eccgc *_ecb .Decoder ;_fedc *GenericRefinementRegion ;_ffda *_ecb .DecoderStats ;_bedc *_ecb .DecoderStats ;
_gfdc *_ecb .DecoderStats ;_ggfd *_ecb .DecoderStats ;_dgab *_ecb .DecoderStats ;_ggef *_ecb .DecoderStats ;_acdc *_ecb .DecoderStats ;_efgae *_ecb .DecoderStats ;_aeac *_ecb .DecoderStats ;_bfcdb *_ecb .DecoderStats ;_abdae *_ecb .DecoderStats ;_eaagc int8 ;
_cegb *_afb .FixedSizeTable ;Header *Header ;_edaa _afb .Tabler ;_affg _afb .Tabler ;_bcga _afb .Tabler ;_gfba _afb .Tabler ;_ffcg _afb .Tabler ;_gfge _afb .Tabler ;_bbg _afb .Tabler ;_ceba _afb .Tabler ;_bgeb ,_bdca map[int ]int ;_bfbbc []int ;_cab *_bb .Points ;
_bdcag *_bb .Bitmaps ;_ggee *_ec .IntSlice ;_cbee ,_gebga int ;_bddd *_bb .Boxes ;};func (_agcf *RegionSegment )Size ()int {return 17};func (_gadc *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _gadc .IsHuffmanEncoded {switch _gadc .SdHuffDecodeWidthSelection {case 0:_fdgd ,_facd :=_afb .GetStandardTable (2);
if _facd !=nil {return 0,_facd ;};return _fdgd .Decode (_gadc ._cgdga );case 1:_abaaf ,_cde :=_afb .GetStandardTable (3);if _cde !=nil {return 0,_cde ;};return _abaaf .Decode (_gadc ._cgdga );case 3:if _gadc ._aeed ==nil {var _gcdgd int ;if _gadc .SdHuffDecodeHeightSelection ==3{_gcdgd ++;
};_defc ,_faee :=_gadc .getUserTable (_gcdgd );if _faee !=nil {return 0,_faee ;};_gadc ._aeed =_defc ;};return _gadc ._aeed .Decode (_gadc ._cgdga );};}else {_gdcg ,_gabc :=_gadc ._dbgeb .DecodeInt (_gadc ._ecde );if _gabc !=nil {return 0,_gabc ;};return int64 (_gdcg ),nil ;
};return 0,nil ;};func (_ggg *GenericRefinementRegion )readAtPixels ()error {_ggg .GrAtX =make ([]int8 ,2);_ggg .GrAtY =make ([]int8 ,2);_acdd ,_cgag :=_ggg ._fe .ReadByte ();if _cgag !=nil {return _cgag ;};_ggg .GrAtX [0]=int8 (_acdd );_acdd ,_cgag =_ggg ._fe .ReadByte ();
if _cgag !=nil {return _cgag ;};_ggg .GrAtY [0]=int8 (_acdd );_acdd ,_cgag =_ggg ._fe .ReadByte ();if _cgag !=nil {return _cgag ;};_ggg .GrAtX [1]=int8 (_acdd );_acdd ,_cgag =_ggg ._fe .ReadByte ();if _cgag !=nil {return _cgag ;};_ggg .GrAtY [1]=int8 (_acdd );
return nil ;};func (_adda *PatternDictionary )readPatternWidthAndHeight ()error {_bffc ,_afega :=_adda ._ffbe .ReadByte ();if _afega !=nil {return _afega ;};_adda .HdpWidth =_bffc ;_bffc ,_afega =_adda ._ffbe .ReadByte ();if _afega !=nil {return _afega ;
};_adda .HdpHeight =_bffc ;return nil ;};func (_faaga *RegionSegment )parseHeader ()error {const _ffed ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_bc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_dacd ,_abce :=_faaga ._aged .ReadBits (32);
if _abce !=nil {return _cd .Wrap (_abce ,_ffed ,"\u0077\u0069\u0064t\u0068");};_faaga .BitmapWidth =uint32 (_dacd &_e .MaxUint32 );_dacd ,_abce =_faaga ._aged .ReadBits (32);if _abce !=nil {return _cd .Wrap (_abce ,_ffed ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_faaga .BitmapHeight =uint32 (_dacd &_e .MaxUint32 );_dacd ,_abce =_faaga ._aged .ReadBits (32);if _abce !=nil {return _cd .Wrap (_abce ,_ffed ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faaga .XLocation =uint32 (_dacd &_e .MaxUint32 );
_dacd ,_abce =_faaga ._aged .ReadBits (32);if _abce !=nil {return _cd .Wrap (_abce ,_ffed ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faaga .YLocation =uint32 (_dacd &_e .MaxUint32 );if _ ,_abce =_faaga ._aged .ReadBits (5);_abce !=nil {return _cd .Wrap (_abce ,_ffed ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _abce =_faaga .readCombinationOperator ();_abce !=nil {return _cd .Wrap (_abce ,_ffed ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func _cgg (_cdffe *_g .Reader ,_dfcb *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fe :_cdffe ,RegionInfo :NewRegionSegment (_cdffe ),_bf :_dfcb ,_ab :&template0 {},_df :&template1 {}};
};func (_aaaf *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _aaaf .RegionSegment };func (_cabf *TextRegion )readRegionFlags ()error {var (_cfbcf int ;_cddc uint64 ;_bagc error ;);_cfbcf ,_bagc =_cabf ._aafc .ReadBit ();if _bagc !=nil {return _bagc ;
};_cabf .SbrTemplate =int8 (_cfbcf );_cddc ,_bagc =_cabf ._aafc .ReadBits (5);if _bagc !=nil {return _bagc ;};_cabf .SbDsOffset =int8 (_cddc );if _cabf .SbDsOffset > 0x0f{_cabf .SbDsOffset -=0x20;};_cfbcf ,_bagc =_cabf ._aafc .ReadBit ();if _bagc !=nil {return _bagc ;
};_cabf .DefaultPixel =int8 (_cfbcf );_cddc ,_bagc =_cabf ._aafc .ReadBits (2);if _bagc !=nil {return _bagc ;};_cabf .CombinationOperator =_bb .CombinationOperator (int (_cddc )&0x3);_cfbcf ,_bagc =_cabf ._aafc .ReadBit ();if _bagc !=nil {return _bagc ;
};_cabf .IsTransposed =int8 (_cfbcf );_cddc ,_bagc =_cabf ._aafc .ReadBits (2);if _bagc !=nil {return _bagc ;};_cabf .ReferenceCorner =int16 (_cddc )&0x3;_cddc ,_bagc =_cabf ._aafc .ReadBits (2);if _bagc !=nil {return _bagc ;};_cabf .LogSBStrips =int16 (_cddc )&0x3;
_cabf .SbStrips =1<<uint (_cabf .LogSBStrips );_cfbcf ,_bagc =_cabf ._aafc .ReadBit ();if _bagc !=nil {return _bagc ;};if _cfbcf ==1{_cabf .UseRefinement =true ;};_cfbcf ,_bagc =_cabf ._aafc .ReadBit ();if _bagc !=nil {return _bagc ;};if _cfbcf ==1{_cabf .IsHuffmanEncoded =true ;
};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_caca *HalftoneRegion )shiftAndFill (_gagb int )int {_gagb >>=8;if _gagb < 0{_bgeg :=int (_e .Log (float64 (_gacb (_gagb )))/_e .Log (2));
_agae :=31-_bgeg ;for _begc :=1;_begc < _agae ;_begc ++{_gagb |=1<<uint (31-_begc );};};return _gagb ;};func (_bfcd *SymbolDictionary )decodeThroughTextRegion (_dbee ,_eebbd ,_gafd uint32 )error {if _bfcd ._bbad ==nil {_bfcd ._bbad =_ecdeg (_bfcd ._cgdga ,nil );
_bfcd ._bbad .setContexts (_bfcd ._ebeg ,_ecb .NewStats (512,1),_ecb .NewStats (512,1),_ecb .NewStats (512,1),_ecb .NewStats (512,1),_bfcd ._ccg ,_ecb .NewStats (512,1),_ecb .NewStats (512,1),_ecb .NewStats (512,1),_ecb .NewStats (512,1));};if _ecab :=_bfcd .setSymbolsArray ();
_ecab !=nil {return _ecab ;};_bfcd ._bbad .setParameters (_bfcd ._dbgeb ,_bfcd .IsHuffmanEncoded ,true ,_dbee ,_eebbd ,_gafd ,1,_bfcd ._fcda +_bfcd ._dgb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bfcd .SdrTemplate ,_bfcd .SdrATX ,_bfcd .SdrATY ,_bfcd ._dabb ,_bfcd ._ddfg );
return _bfcd .addSymbol (_bfcd ._bbad );};func (_bbae *TextRegion )Encode (w _g .BinaryWriter )(_gfac int ,_egcd error ){const _egacd ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gfac ,_egcd =_bbae .RegionInfo .Encode (w );
_egcd !=nil {return _gfac ,_cd .Wrap (_egcd ,_egacd ,"");};var _dbcd int ;if _dbcd ,_egcd =_bbae .encodeFlags (w );_egcd !=nil {return _gfac ,_cd .Wrap (_egcd ,_egacd ,"");};_gfac +=_dbcd ;if _dbcd ,_egcd =_bbae .encodeSymbols (w );_egcd !=nil {return _gfac ,_cd .Wrap (_egcd ,_egacd ,"");
};_gfac +=_dbcd ;return _gfac ,nil ;};func (_acc *GenericRefinementRegion )setParameters (_dec *_ecb .DecoderStats ,_cbcf *_ecb .Decoder ,_dcd int8 ,_bfe ,_faag uint32 ,_aef *_bb .Bitmap ,_fdfb ,_bgge int32 ,_bdf bool ,_dfg []int8 ,_baeg []int8 ){_bc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _dec !=nil {_acc ._de =_dec ;};if _cbcf !=nil {_acc ._ce =_cbcf ;};_acc .TemplateID =_dcd ;_acc .RegionInfo .BitmapWidth =_bfe ;_acc .RegionInfo .BitmapHeight =_faag ;_acc .ReferenceBitmap =_aef ;_acc .ReferenceDX =_fdfb ;_acc .ReferenceDY =_bgge ;_acc .IsTPGROn =_bdf ;
_acc .GrAtX =_dfg ;_acc .GrAtY =_baeg ;_acc .RegionBitmap =nil ;_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_acc );
};func (_fcce *TextRegion )getUserTable (_ecae int )(_afb .Tabler ,error ){const _egfb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _fedf int ;for _ ,_cfee :=range _fcce .Header .RTSegments {if _cfee .Type ==53{if _fedf ==_ecae {_abdb ,_edbg :=_cfee .GetSegmentData ();
if _edbg !=nil {return nil ,_edbg ;};_effa ,_acaec :=_abdb .(*TableSegment );if !_acaec {_bc .Log .Debug (_ea .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cfee .SegmentNumber ));
return nil ,_cd .Error (_egfb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _afb .NewEncodedTable (_effa );};_fedf ++;};};return nil ,nil ;};func (_cefd *GenericRegion )decodeTemplate1 (_bfg ,_eccf ,_ead int ,_aecf ,_fgc int )(_decd error ){const _gbb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ecac ,_ffg int ;_cggg ,_fce int ;_add byte ;_ded ,_fecc int ;);if _bfg >=1{_add ,_decd =_cefd .Bitmap .GetByte (_fgc );if _decd !=nil {return _cd .Wrap (_decd ,_gbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cggg =int (_add );};if _bfg >=2{_add ,_decd =_cefd .Bitmap .GetByte (_fgc -_cefd .Bitmap .RowStride );
if _decd !=nil {return _cd .Wrap (_decd ,_gbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fce =int (_add )<<5;};_ecac =((_cggg >>1)&0x1f8)|((_fce >>1)&0x1e00);for _ddgf :=0;_ddgf < _ead ;_ddgf =_ded {var (_ega byte ;_faagg int ;);_ded =_ddgf +8;
if _geeb :=_eccf -_ddgf ;_geeb > 8{_faagg =8;}else {_faagg =_geeb ;};if _bfg > 0{_cggg <<=8;if _ded < _eccf {_add ,_decd =_cefd .Bitmap .GetByte (_fgc +1);if _decd !=nil {return _cd .Wrap (_decd ,_gbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_cggg |=int (_add );};};if _bfg > 1{_fce <<=8;if _ded < _eccf {_add ,_decd =_cefd .Bitmap .GetByte (_fgc -_cefd .Bitmap .RowStride +1);if _decd !=nil {return _cd .Wrap (_decd ,_gbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fce |=int (_add )<<5;
};};for _fda :=0;_fda < _faagg ;_fda ++{if _cefd ._cfgc {_ffg =_cefd .overrideAtTemplate1 (_ecac ,_ddgf +_fda ,_bfg ,int (_ega ),_fda );_cefd ._egge .SetIndex (int32 (_ffg ));}else {_cefd ._egge .SetIndex (int32 (_ecac ));};_fecc ,_decd =_cefd ._dda .DecodeBit (_cefd ._egge );
if _decd !=nil {return _cd .Wrap (_decd ,_gbb ,"");};_ega |=byte (_fecc )<<uint (7-_fda );_gbga :=uint (8-_fda );_ecac =((_ecac &0xefb)<<1)|_fecc |((_cggg >>_gbga )&0x8)|((_fce >>_gbga )&0x200);};if _dab :=_cefd .Bitmap .SetByte (_aecf ,_ega );_dab !=nil {return _cd .Wrap (_dab ,_gbb ,"");
};_aecf ++;_fgc ++;};return nil ;};func (_dfeg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ecfa int64 ,_gcaa ,_ecfb uint32 )(*_bb .Bitmap ,error ){if _ecfa ==0{_ebgc :=_bb .New (int (_ecfb ),int (_gcaa ));var (_dfbe byte ;_ddc error ;);for _daeff :=0;
_daeff < len (_ebgc .Data );_daeff ++{_dfbe ,_ddc =_dfeg ._cgdga .ReadByte ();if _ddc !=nil {return nil ,_ddc ;};if _ddc =_ebgc .SetByte (_daeff ,_dfbe );_ddc !=nil {return nil ,_ddc ;};};return _ebgc ,nil ;};if _dfeg ._cfgd ==nil {_dfeg ._cfgd =NewGenericRegion (_dfeg ._cgdga );
};_dfeg ._cfgd .setParameters (true ,_dfeg ._cgdga .AbsolutePosition (),_ecfa ,_gcaa ,_ecfb );_aaff ,_dacda :=_dfeg ._cfgd .GetRegionBitmap ();if _dacda !=nil {return nil ,_dacda ;};return _aaff ,nil ;};func (_aaef *PatternDictionary )computeSegmentDataStructure ()error {_aaef .DataOffset =_aaef ._ffbe .AbsolutePosition ();
_aaef .DataHeaderLength =_aaef .DataOffset -_aaef .DataHeaderOffset ;_aaef .DataLength =int64 (_aaef ._ffbe .AbsoluteLength ())-_aaef .DataHeaderLength ;return nil ;};func (_acdf *GenericRegion )computeSegmentDataStructure ()error {_acdf .DataOffset =_acdf ._cea .AbsolutePosition ();
_acdf .DataHeaderLength =_acdf .DataOffset -_acdf .DataHeaderOffset ;_acdf .DataLength =int64 (_acdf ._cea .AbsoluteLength ())-_acdf .DataHeaderLength ;return nil ;};func (_egga *PageInformationSegment )readContainsRefinement ()error {_ccc ,_bfge :=_egga ._gcdg .ReadBit ();
if _bfge !=nil {return _bfge ;};if _ccc ==1{_egga ._ccb =true ;};return nil ;};func (_fdec *TextRegion )GetRegionBitmap ()(*_bb .Bitmap ,error ){if _fdec .RegionBitmap !=nil {return _fdec .RegionBitmap ,nil ;};if !_fdec .IsHuffmanEncoded {if _gadb :=_fdec .setCodingStatistics ();
_gadb !=nil {return nil ,_gadb ;};};if _dagdg :=_fdec .createRegionBitmap ();_dagdg !=nil {return nil ,_dagdg ;};if _bbcb :=_fdec .decodeSymbolInstances ();_bbcb !=nil {return nil ,_bbcb ;};return _fdec .RegionBitmap ,nil ;};func (_edb *SymbolDictionary )Encode (w _g .BinaryWriter )(_cgaf int ,_abaa error ){const _bgfg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _edb ==nil {return 0,_cd .Error (_bgfg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _cgaf ,_abaa =_edb .encodeFlags (w );_abaa !=nil {return _cgaf ,_cd .Wrap (_abaa ,_bgfg ,"");
};_efdc ,_abaa :=_edb .encodeATFlags (w );if _abaa !=nil {return _cgaf ,_cd .Wrap (_abaa ,_bgfg ,"");};_cgaf +=_efdc ;if _efdc ,_abaa =_edb .encodeRefinementATFlags (w );_abaa !=nil {return _cgaf ,_cd .Wrap (_abaa ,_bgfg ,"");};_cgaf +=_efdc ;if _efdc ,_abaa =_edb .encodeNumSyms (w );
_abaa !=nil {return _cgaf ,_cd .Wrap (_abaa ,_bgfg ,"");};_cgaf +=_efdc ;if _efdc ,_abaa =_edb .encodeSymbols (w );_abaa !=nil {return _cgaf ,_cd .Wrap (_abaa ,_bgfg ,"");};_cgaf +=_efdc ;return _cgaf ,nil ;};func (_eff *GenericRefinementRegion )parseHeader ()(_eec error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fcbd :=_c .Now ();defer func (){if _eec ==nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_fcbd ).Nanoseconds ());
}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_eec );
};}();if _eec =_eff .RegionInfo .parseHeader ();_eec !=nil {return _eec ;};_ ,_eec =_eff ._fe .ReadBits (6);if _eec !=nil {return _eec ;};_eff .IsTPGROn ,_eec =_eff ._fe .ReadBool ();if _eec !=nil {return _eec ;};var _cfca int ;_cfca ,_eec =_eff ._fe .ReadBit ();
if _eec !=nil {return _eec ;};_eff .TemplateID =int8 (_cfca );switch _eff .TemplateID {case 0:_eff .Template =_eff ._ab ;if _eec =_eff .readAtPixels ();_eec !=nil {return _eec ;};case 1:_eff .Template =_eff ._df ;};return nil ;};func (_gfbg *TextRegion )decodeStripT ()(_daabc int64 ,_ffedd error ){if _gfbg .IsHuffmanEncoded {if _gfbg .SbHuffDT ==3{if _gfbg ._bcga ==nil {var _bdbd int ;
if _gfbg .SbHuffFS ==3{_bdbd ++;};if _gfbg .SbHuffDS ==3{_bdbd ++;};_gfbg ._bcga ,_ffedd =_gfbg .getUserTable (_bdbd );if _ffedd !=nil {return 0,_ffedd ;};};_daabc ,_ffedd =_gfbg ._bcga .Decode (_gfbg ._aafc );if _ffedd !=nil {return 0,_ffedd ;};}else {var _abfc _afb .Tabler ;
_abfc ,_ffedd =_afb .GetStandardTable (11+int (_gfbg .SbHuffDT ));if _ffedd !=nil {return 0,_ffedd ;};_daabc ,_ffedd =_abfc .Decode (_gfbg ._aafc );if _ffedd !=nil {return 0,_ffedd ;};};}else {var _babfa int32 ;_babfa ,_ffedd =_gfbg ._eccgc .DecodeInt (_gfbg ._ffda );
if _ffedd !=nil {return 0,_ffedd ;};_daabc =int64 (_babfa );};_daabc *=int64 (-_gfbg .SbStrips );return _daabc ,nil ;};func (_gdde *PatternDictionary )readGrayMax ()error {_acg ,_gced :=_gdde ._ffbe .ReadBits (32);if _gced !=nil {return _gced ;};_gdde .GrayMax =uint32 (_acg &_e .MaxUint32 );
return nil ;};func (_bcd *GenericRefinementRegion )Init (header *Header ,r *_g .Reader )error {_bcd ._bf =header ;_bcd ._fe =r ;_bcd .RegionInfo =NewRegionSegment (r );return _bcd .parseHeader ();};func (_ebg *GenericRefinementRegion )getGrReference ()(*_bb .Bitmap ,error ){segments :=_ebg ._bf .RTSegments ;
if len (segments )==0{return nil ,_ee .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_gd ,_cbg :=segments [0].GetSegmentData ();
if _cbg !=nil {return nil ,_cbg ;};_ef ,_ge :=_gd .(Regioner );if !_ge {return nil ,_ea .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gd );
};return _ef .GetRegionBitmap ();};func NewHeader (d Documenter ,r *_g .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_agde :=&Header {Reader :r };if _dfbc :=_agde .parse (d ,r ,offset ,organizationType );_dfbc !=nil {return nil ,_cd .Wrap (_dfbc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _agde ,nil ;};func (_adaa *GenericRegion )overrideAtTemplate0b (_dde ,_accb ,_ffad ,_ffdb ,_gde ,_afg int )int {if _adaa .GBAtOverride [0]{_dde &=0xFFFD;if _adaa .GBAtY [0]==0&&_adaa .GBAtX [0]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [0]&0x1))<<1;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [0]),_ffad +int (_adaa .GBAtY [0])))<<1;};};if _adaa .GBAtOverride [1]{_dde &=0xDFFF;if _adaa .GBAtY [1]==0&&_adaa .GBAtX [1]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [1]&0x1))<<13;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [1]),_ffad +int (_adaa .GBAtY [1])))<<13;};};if _adaa .GBAtOverride [2]{_dde &=0xFDFF;if _adaa .GBAtY [2]==0&&_adaa .GBAtX [2]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [2]&0x1))<<9;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [2]),_ffad +int (_adaa .GBAtY [2])))<<9;};};if _adaa .GBAtOverride [3]{_dde &=0xBFFF;if _adaa .GBAtY [3]==0&&_adaa .GBAtX [3]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [3]&0x1))<<14;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [3]),_ffad +int (_adaa .GBAtY [3])))<<14;};};if _adaa .GBAtOverride [4]{_dde &=0xEFFF;if _adaa .GBAtY [4]==0&&_adaa .GBAtX [4]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [4]&0x1))<<12;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [4]),_ffad +int (_adaa .GBAtY [4])))<<12;};};if _adaa .GBAtOverride [5]{_dde &=0xFFDF;if _adaa .GBAtY [5]==0&&_adaa .GBAtX [5]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [5]&0x1))<<5;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [5]),_ffad +int (_adaa .GBAtY [5])))<<5;};};if _adaa .GBAtOverride [6]{_dde &=0xFFFB;if _adaa .GBAtY [6]==0&&_adaa .GBAtX [6]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [6]&0x1))<<2;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [6]),_ffad +int (_adaa .GBAtY [6])))<<2;};};if _adaa .GBAtOverride [7]{_dde &=0xFFF7;if _adaa .GBAtY [7]==0&&_adaa .GBAtX [7]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [7]&0x1))<<3;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [7]),_ffad +int (_adaa .GBAtY [7])))<<3;};};if _adaa .GBAtOverride [8]{_dde &=0xF7FF;if _adaa .GBAtY [8]==0&&_adaa .GBAtX [8]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [8]&0x1))<<11;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [8]),_ffad +int (_adaa .GBAtY [8])))<<11;};};if _adaa .GBAtOverride [9]{_dde &=0xFFEF;if _adaa .GBAtY [9]==0&&_adaa .GBAtX [9]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [9]&0x1))<<4;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [9]),_ffad +int (_adaa .GBAtY [9])))<<4;};};if _adaa .GBAtOverride [10]{_dde &=0x7FFF;if _adaa .GBAtY [10]==0&&_adaa .GBAtX [10]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [10]&0x1))<<15;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [10]),_ffad +int (_adaa .GBAtY [10])))<<15;};};if _adaa .GBAtOverride [11]{_dde &=0xFDFF;if _adaa .GBAtY [11]==0&&_adaa .GBAtX [11]>=-int8 (_gde ){_dde |=(_ffdb >>uint (int8 (_afg )-_adaa .GBAtX [11]&0x1))<<10;
}else {_dde |=int (_adaa .getPixel (_accb +int (_adaa .GBAtX [11]),_ffad +int (_adaa .GBAtY [11])))<<10;};};return _dde ;};func (_ebcf *GenericRegion )decodeTemplate3 (_fgb ,_ddf ,_gbc int ,_bfc ,_fdb int )(_ccad error ){const _acdb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_gfbd ,_gec int ;_ccaf int ;_cfab byte ;_fgba ,_efga int ;);if _fgb >=1{_cfab ,_ccad =_ebcf .Bitmap .GetByte (_fdb );if _ccad !=nil {return _cd .Wrap (_ccad ,_acdb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ccaf =int (_cfab );};_gfbd =(_ccaf >>1)&0x70;
for _cadc :=0;_cadc < _gbc ;_cadc =_fgba {var (_eccc byte ;_dada int ;);_fgba =_cadc +8;if _eacg :=_ddf -_cadc ;_eacg > 8{_dada =8;}else {_dada =_eacg ;};if _fgb >=1{_ccaf <<=8;if _fgba < _ddf {_cfab ,_ccad =_ebcf .Bitmap .GetByte (_fdb +1);if _ccad !=nil {return _cd .Wrap (_ccad ,_acdb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_ccaf |=int (_cfab );};};for _bfbb :=0;_bfbb < _dada ;_bfbb ++{if _ebcf ._cfgc {_gec =_ebcf .overrideAtTemplate3 (_gfbd ,_cadc +_bfbb ,_fgb ,int (_eccc ),_bfbb );_ebcf ._egge .SetIndex (int32 (_gec ));}else {_ebcf ._egge .SetIndex (int32 (_gfbd ));};
_efga ,_ccad =_ebcf ._dda .DecodeBit (_ebcf ._egge );if _ccad !=nil {return _cd .Wrap (_ccad ,_acdb ,"");};_eccc |=byte (_efga )<<byte (7-_bfbb );_gfbd =((_gfbd &0x1f7)<<1)|_efga |((_ccaf >>uint (8-_bfbb ))&0x010);};if _gdad :=_ebcf .Bitmap .SetByte (_bfc ,_eccc );
_gdad !=nil {return _cd .Wrap (_gdad ,_acdb ,"");};_bfc ++;_fdb ++;};return nil ;};func (_fgff *PageInformationSegment )readWidthAndHeight ()error {_fbea ,_ffca :=_fgff ._gcdg .ReadBits (32);if _ffca !=nil {return _ffca ;};_fgff .PageBMWidth =int (_fbea &_e .MaxInt32 );
_fbea ,_ffca =_fgff ._gcdg .ReadBits (32);if _ffca !=nil {return _ffca ;};_fgff .PageBMHeight =int (_fbea &_e .MaxInt32 );return nil ;};func (_agdcd *TextRegion )setCodingStatistics ()error {if _agdcd ._ffda ==nil {_agdcd ._ffda =_ecb .NewStats (512,1);
};if _agdcd ._bedc ==nil {_agdcd ._bedc =_ecb .NewStats (512,1);};if _agdcd ._gfdc ==nil {_agdcd ._gfdc =_ecb .NewStats (512,1);};if _agdcd ._ggfd ==nil {_agdcd ._ggfd =_ecb .NewStats (512,1);};if _agdcd ._dgab ==nil {_agdcd ._dgab =_ecb .NewStats (512,1);
};if _agdcd ._ggef ==nil {_agdcd ._ggef =_ecb .NewStats (512,1);};if _agdcd ._acdc ==nil {_agdcd ._acdc =_ecb .NewStats (512,1);};if _agdcd ._efgae ==nil {_agdcd ._efgae =_ecb .NewStats (1<<uint (_agdcd ._eaagc ),1);};if _agdcd ._aeac ==nil {_agdcd ._aeac =_ecb .NewStats (512,1);
};if _agdcd ._bfcdb ==nil {_agdcd ._bfcdb =_ecb .NewStats (512,1);};if _agdcd ._eccgc ==nil {var _fdcfb error ;_agdcd ._eccgc ,_fdcfb =_ecb .New (_agdcd ._aafc );if _fdcfb !=nil {return _fdcfb ;};};return nil ;};type RegionSegment struct{_aged *_g .Reader ;
BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _bb .CombinationOperator ;};func (_eedg *Header )writeReferredToCount (_cfgb _g .BinaryWriter )(_cfabe int ,_bbfb error ){const _aagf ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_eedg .RTSNumbers =make ([]int ,len (_eedg .RTSegments ));for _bcde ,_daab :=range _eedg .RTSegments {_eedg .RTSNumbers [_bcde ]=int (_daab .SegmentNumber );};if len (_eedg .RTSNumbers )<=4{var _gaee byte ;if len (_eedg .RetainBits )>=1{_gaee =_eedg .RetainBits [0];
};_gaee |=byte (len (_eedg .RTSNumbers ))<<5;if _bbfb =_cfgb .WriteByte (_gaee );_bbfb !=nil {return 0,_cd .Wrap (_bbfb ,_aagf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_beb :=uint32 (len (_eedg .RTSNumbers ));
_fgbb :=make ([]byte ,4+_ec .Ceil (len (_eedg .RTSNumbers )+1,8));_beb |=0x7<<29;_a .BigEndian .PutUint32 (_fgbb ,_beb );copy (_fgbb [1:],_eedg .RetainBits );_cfabe ,_bbfb =_cfgb .Write (_fgbb );if _bbfb !=nil {return 0,_cd .Wrap (_bbfb ,_aagf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _cfabe ,nil ;};func (_aae *GenericRegion )decodeTemplate0a (_cggb ,_eebb ,_accd int ,_dga ,_agbf int )(_db error ){const _edgg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_dad ,_fgf int ;_bce ,_age int ;
_gcdb byte ;_acf int ;);if _cggb >=1{_gcdb ,_db =_aae .Bitmap .GetByte (_agbf );if _db !=nil {return _cd .Wrap (_db ,_edgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bce =int (_gcdb );};if _cggb >=2{_gcdb ,_db =_aae .Bitmap .GetByte (_agbf -_aae .Bitmap .RowStride );
if _db !=nil {return _cd .Wrap (_db ,_edgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_age =int (_gcdb )<<6;};_dad =(_bce &0xf0)|(_age &0x3800);for _ebe :=0;_ebe < _accd ;_ebe =_acf {var (_fbfb byte ;_afe int ;);_acf =_ebe +8;if _gcdc :=_eebb -_ebe ;
_gcdc > 8{_afe =8;}else {_afe =_gcdc ;};if _cggb > 0{_bce <<=8;if _acf < _eebb {_gcdb ,_db =_aae .Bitmap .GetByte (_agbf +1);if _db !=nil {return _cd .Wrap (_db ,_edgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bce |=int (_gcdb );};};if _cggb > 1{_faeg :=_agbf -_aae .Bitmap .RowStride +1;
_age <<=8;if _acf < _eebb {_gcdb ,_db =_aae .Bitmap .GetByte (_faeg );if _db !=nil {return _cd .Wrap (_db ,_edgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_age |=int (_gcdb )<<6;}else {_age |=0;};};for _dbg :=0;_dbg < _afe ;_dbg ++{_ecfe :=uint (7-_dbg );
if _aae ._cfgc {_fgf =_aae .overrideAtTemplate0a (_dad ,_ebe +_dbg ,_cggb ,int (_fbfb ),_dbg ,int (_ecfe ));_aae ._egge .SetIndex (int32 (_fgf ));}else {_aae ._egge .SetIndex (int32 (_dad ));};var _cef int ;_cef ,_db =_aae ._dda .DecodeBit (_aae ._egge );
if _db !=nil {return _cd .Wrap (_db ,_edgg ,"");};_fbfb |=byte (_cef )<<_ecfe ;_dad =((_dad &0x7bf7)<<1)|_cef |((_bce >>_ecfe )&0x10)|((_age >>_ecfe )&0x800);};if _dac :=_aae .Bitmap .SetByte (_dga ,_fbfb );_dac !=nil {return _cd .Wrap (_dac ,_edgg ,"");
};_dga ++;_agbf ++;};return nil ;};func (_afgab *SymbolDictionary )getUserTable (_ecagc int )(_afb .Tabler ,error ){var _eeceg int ;for _ ,_agda :=range _afgab .Header .RTSegments {if _agda .Type ==53{if _eeceg ==_ecagc {_ecbd ,_edeb :=_agda .GetSegmentData ();
if _edeb !=nil {return nil ,_edeb ;};_fdbd :=_ecbd .(_afb .BasicTabler );return _afb .NewEncodedTable (_fdbd );};_eeceg ++;};};return nil ,nil ;};func (_cac *GenericRegion )InitEncode (bm *_bb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fac ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cd .Error (_fac ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cd .Error (_fac ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_cac .Bitmap =bm ;_cac .GBTemplate =byte (template );switch _cac .GBTemplate {case 0:_cac .GBAtX =[]int8 {3,-3,2,-2};_cac .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cac .GBAtX =[]int8 {3};_cac .GBAtY =[]int8 {-1};case 2,3:_cac .GBAtX =[]int8 {2};_cac .GBAtY =[]int8 {-1};
default:return _cd .Errorf (_fac ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_cac .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cac .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_egda *HalftoneRegion )combineGrayscalePlanes (_gdadd []*_bb .Bitmap ,_dbd int )error {_cdgg :=0;
for _bbbc :=0;_bbbc < _gdadd [_dbd ].Height ;_bbbc ++{for _eccg :=0;_eccg < _gdadd [_dbd ].Width ;_eccg +=8{_cdae ,_afag :=_gdadd [_dbd +1].GetByte (_cdgg );if _afag !=nil {return _afag ;};_gae ,_afag :=_gdadd [_dbd ].GetByte (_cdgg );if _afag !=nil {return _afag ;
};_afag =_gdadd [_dbd ].SetByte (_cdgg ,_bb .CombineBytes (_gae ,_cdae ,_bb .CmbOpXor ));if _afag !=nil {return _afag ;};_cdgg ++;};};return nil ;};func (_gacd *PatternDictionary )parseHeader ()error {_bc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_bc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gfdd :=_gacd ._ffbe .ReadBits (5);if _gfdd !=nil {return _gfdd ;};if _gfdd =_gacd .readTemplate ();_gfdd !=nil {return _gfdd ;};if _gfdd =_gacd .readIsMMREncoded ();_gfdd !=nil {return _gfdd ;};if _gfdd =_gacd .readPatternWidthAndHeight ();_gfdd !=nil {return _gfdd ;
};if _gfdd =_gacd .readGrayMax ();_gfdd !=nil {return _gfdd ;};if _gfdd =_gacd .computeSegmentDataStructure ();_gfdd !=nil {return _gfdd ;};return _gacd .checkInput ();};func (_ebef *RegionSegment )readCombinationOperator ()error {_cbcd ,_bfbbg :=_ebef ._aged .ReadBits (3);
if _bfbbg !=nil {return _bfbbg ;};_ebef .CombinaionOperator =_bb .CombinationOperator (_cbcd &0xF);return nil ;};func (_efb *GenericRegion )setParameters (_feg bool ,_fdae ,_aeb int64 ,_beaa ,_gcc uint32 ){_efb .IsMMREncoded =_feg ;_efb .DataOffset =_fdae ;
_efb .DataLength =_aeb ;_efb .RegionSegment .BitmapHeight =_beaa ;_efb .RegionSegment .BitmapWidth =_gcc ;_efb ._ccff =nil ;_efb .Bitmap =nil ;};func (_fdgaf *SymbolDictionary )InitEncode (symbols *_bb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gccgc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_fdgaf .SdATX =[]int8 {3,-3,2,-2};_fdgaf .SdATY =[]int8 {-1,-1,-2,-2};_fdgaf ._efgeg =symbols ;_fdgaf ._gcf =make ([]int ,len (symbolList ));copy (_fdgaf ._gcf ,symbolList );if len (_fdgaf ._gcf )!=_fdgaf ._efgeg .Size (){return _cd .Error (_gccgc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_fdgaf .NumberOfNewSymbols =uint32 (symbols .Size ());_fdgaf .NumberOfExportedSymbols =uint32 (symbols .Size ());_fdgaf ._dcaf =symbolMap ;_fdgaf ._ecfga =unborderSymbols ;return nil ;};type PatternDictionary struct{_ffbe *_g .Reader ;DataHeaderOffset int64 ;
DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_bb .Bitmap ;GrayMax uint32 ;};type OrganizationType uint8 ;func (_dbad *TextRegion )decodeDfs ()(int64 ,error ){if _dbad .IsHuffmanEncoded {if _dbad .SbHuffFS ==3{if _dbad ._edaa ==nil {var _ggcb error ;
_dbad ._edaa ,_ggcb =_dbad .getUserTable (0);if _ggcb !=nil {return 0,_ggcb ;};};return _dbad ._edaa .Decode (_dbad ._aafc );};_egef ,_bbbd :=_afb .GetStandardTable (6+int (_dbad .SbHuffFS ));if _bbbd !=nil {return 0,_bbbd ;};return _egef .Decode (_dbad ._aafc );
};_eacb ,_aedc :=_dbad ._eccgc .DecodeInt (_dbad ._bedc );if _aedc !=nil {return 0,_aedc ;};return int64 (_eacb ),nil ;};type TableSegment struct{_aeda *_g .Reader ;_ffef int32 ;_cec int32 ;_cddb int32 ;_aggd int32 ;_cfdf int32 ;};func (_bdcb *TextRegion )decodeRdh ()(int64 ,error ){const _eacd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _bdcb .IsHuffmanEncoded {if _bdcb .SbHuffRDHeight ==3{if _bdcb ._ffcg ==nil {var (_cbbcc int ;_dcfec error ;);if _bdcb .SbHuffFS ==3{_cbbcc ++;};if _bdcb .SbHuffDS ==3{_cbbcc ++;};if _bdcb .SbHuffDT ==3{_cbbcc ++;};if _bdcb .SbHuffRDWidth ==3{_cbbcc ++;
};_bdcb ._ffcg ,_dcfec =_bdcb .getUserTable (_cbbcc );if _dcfec !=nil {return 0,_cd .Wrap (_dcfec ,_eacd ,"");};};return _bdcb ._ffcg .Decode (_bdcb ._aafc );};_efad ,_egdd :=_afb .GetStandardTable (14+int (_bdcb .SbHuffRDHeight ));if _egdd !=nil {return 0,_cd .Wrap (_egdd ,_eacd ,"");
};return _efad .Decode (_bdcb ._aafc );};_agea ,_cegg :=_bdcb ._eccgc .DecodeInt (_bdcb ._acdc );if _cegg !=nil {return 0,_cd .Wrap (_cegg ,_eacd ,"");};return int64 (_agea ),nil ;};func (_beed *TextRegion )decodeSymbolInstances ()error {_ebbd ,_edfbe :=_beed .decodeStripT ();
if _edfbe !=nil {return _edfbe ;};var (_aeff int64 ;_bcdea uint32 ;);for _bcdea < _beed .NumberOfSymbolInstances {_cbcff ,_ceda :=_beed .decodeDT ();if _ceda !=nil {return _ceda ;};_ebbd +=_cbcff ;var _fddba int64 ;_adab :=true ;_beed ._aagac =0;for {if _adab {_fddba ,_ceda =_beed .decodeDfs ();
if _ceda !=nil {return _ceda ;};_aeff +=_fddba ;_beed ._aagac =_aeff ;_adab =false ;}else {_gbcd ,_eefcd :=_beed .decodeIds ();if _ee .Is (_eefcd ,_af .ErrOOB ){break ;};if _eefcd !=nil {return _eefcd ;};if _bcdea >=_beed .NumberOfSymbolInstances {break ;
};_beed ._aagac +=_gbcd +int64 (_beed .SbDsOffset );};_faf ,_bagdb :=_beed .decodeCurrentT ();if _bagdb !=nil {return _bagdb ;};_bfbg :=_ebbd +_faf ;_eadg ,_bagdb :=_beed .decodeID ();if _bagdb !=nil {return _bagdb ;};_gaa ,_bagdb :=_beed .decodeRI ();
if _bagdb !=nil {return _bagdb ;};_aefa ,_bagdb :=_beed .decodeIb (_gaa ,_eadg );if _bagdb !=nil {return _bagdb ;};if _bagdb =_beed .blit (_aefa ,_bfbg );_bagdb !=nil {return _bagdb ;};_bcdea ++;};};return nil ;};func (_cbe *SymbolDictionary )decodeNewSymbols (_eggaa ,_fdef uint32 ,_gded *_bb .Bitmap ,_eddg ,_edgc int32 )error {if _cbe ._adde ==nil {_cbe ._adde =_cgg (_cbe ._cgdga ,nil );
if _cbe ._dbgeb ==nil {var _edda error ;_cbe ._dbgeb ,_edda =_ecb .New (_cbe ._cgdga );if _edda !=nil {return _edda ;};};if _cbe ._ebeg ==nil {_cbe ._ebeg =_ecb .NewStats (65536,1);};};_cbe ._adde .setParameters (_cbe ._ebeg ,_cbe ._dbgeb ,_cbe .SdrTemplate ,_eggaa ,_fdef ,_gded ,_eddg ,_edgc ,false ,_cbe .SdrATX ,_cbe .SdrATY );
return _cbe .addSymbol (_cbe ._adde );};type GenericRegion struct{_cea *_g .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;
IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cfgc bool ;Bitmap *_bb .Bitmap ;_dda *_ecb .Decoder ;_egge *_ecb .DecoderStats ;_ccff *_fb .Decoder ;};func (_deec *PageInformationSegment )CombinationOperator ()_bb .CombinationOperator {return _deec ._cfd };
func (_faaa *SymbolDictionary )parseHeader ()(_cdbe error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cdbe !=nil {_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cdbe );
}else {_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cdbe =_faaa .readRegionFlags ();_cdbe !=nil {return _cdbe ;};if _cdbe =_faaa .setAtPixels ();_cdbe !=nil {return _cdbe ;};if _cdbe =_faaa .setRefinementAtPixels ();_cdbe !=nil {return _cdbe ;};if _cdbe =_faaa .readNumberOfExportedSymbols ();_cdbe !=nil {return _cdbe ;
};if _cdbe =_faaa .readNumberOfNewSymbols ();_cdbe !=nil {return _cdbe ;};if _cdbe =_faaa .setInSyms ();_cdbe !=nil {return _cdbe ;};if _faaa ._gcea {_gbgab :=_faaa .Header .RTSegments ;for _ceaa :=len (_gbgab )-1;_ceaa >=0;_ceaa --{if _gbgab [_ceaa ].Type ==0{_gecg ,_ggfc :=_gbgab [_ceaa ].SegmentData .(*SymbolDictionary );
if !_ggfc {_cdbe =_ea .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gbgab [_ceaa ]);
return _cdbe ;};if _gecg ._gcea {_faaa .setRetainedCodingContexts (_gecg );};break ;};};};if _cdbe =_faaa .checkInput ();_cdbe !=nil {return _cdbe ;};return nil ;};func (_egcc *SymbolDictionary )readRegionFlags ()error {var (_cfeg uint64 ;_fdfc int ;);
_ ,_bfca :=_egcc ._cgdga .ReadBits (3);if _bfca !=nil {return _bfca ;};_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;};_egcc .SdrTemplate =int8 (_fdfc );_cfeg ,_bfca =_egcc ._cgdga .ReadBits (2);if _bfca !=nil {return _bfca ;};_egcc .SdTemplate =int8 (_cfeg &0xf);
_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;};if _fdfc ==1{_egcc ._fgg =true ;};_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;};if _fdfc ==1{_egcc ._gcea =true ;};_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();
if _bfca !=nil {return _bfca ;};if _fdfc ==1{_egcc .SdHuffAggInstanceSelection =true ;};_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;};_egcc .SdHuffBMSizeSelection =int8 (_fdfc );_cfeg ,_bfca =_egcc ._cgdga .ReadBits (2);if _bfca !=nil {return _bfca ;
};_egcc .SdHuffDecodeWidthSelection =int8 (_cfeg &0xf);_cfeg ,_bfca =_egcc ._cgdga .ReadBits (2);if _bfca !=nil {return _bfca ;};_egcc .SdHuffDecodeHeightSelection =int8 (_cfeg &0xf);_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;
};if _fdfc ==1{_egcc .UseRefinementAggregation =true ;};_fdfc ,_bfca =_egcc ._cgdga .ReadBit ();if _bfca !=nil {return _bfca ;};if _fdfc ==1{_egcc .IsHuffmanEncoded =true ;};return nil ;};func (_eebe *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _eebe ._bgec ==nil {var (_bcbg int ;
_cead error ;);if _eebe .SdHuffDecodeHeightSelection ==3{_bcbg ++;};if _eebe .SdHuffDecodeWidthSelection ==3{_bcbg ++;};_eebe ._bgec ,_cead =_eebe .getUserTable (_bcbg );if _cead !=nil {return 0,_cead ;};};return _eebe ._bgec .Decode (_eebe ._cgdga );};
func (_ccaa *PageInformationSegment )encodeFlags (_efae _g .BinaryWriter )(_aadg error ){const _gabg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _aadg =_efae .SkipBits (1);_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _dfeb int ;if _ccaa .CombinationOperatorOverrideAllowed (){_dfeb =1;};if _aadg =_efae .WriteBit (_dfeb );_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_dfeb =0;if _ccaa ._deb {_dfeb =1;};if _aadg =_efae .WriteBit (_dfeb );_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _aadg =_efae .WriteBit ((int (_ccaa ._cfd )>>1)&0x01);
_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _aadg =_efae .WriteBit (int (_ccaa ._cfd )&0x01);
_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dfeb =int (_ccaa .DefaultPixelValue );
if _aadg =_efae .WriteBit (_dfeb );_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dfeb =0;if _ccaa ._ccb {_dfeb =1;
};if _aadg =_efae .WriteBit (_dfeb );_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dfeb =0;if _ccaa .IsLossless {_dfeb =1;};if _aadg =_efae .WriteBit (_dfeb );
_aadg !=nil {return _cd .Wrap (_aadg ,_gabg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_gfc *SymbolDictionary )decodeRefinedSymbol (_bddc ,_baeb uint32 )error {var (_ggcd int ;
_aafg ,_ccbc int32 ;);if _gfc .IsHuffmanEncoded {_aebd ,_fcg :=_gfc ._cgdga .ReadBits (byte (_gfc ._ddfg ));if _fcg !=nil {return _fcg ;};_ggcd =int (_aebd );_cfaa ,_fcg :=_afb .GetStandardTable (15);if _fcg !=nil {return _fcg ;};_aegga ,_fcg :=_cfaa .Decode (_gfc ._cgdga );
if _fcg !=nil {return _fcg ;};_aafg =int32 (_aegga );_aegga ,_fcg =_cfaa .Decode (_gfc ._cgdga );if _fcg !=nil {return _fcg ;};_ccbc =int32 (_aegga );_cfaa ,_fcg =_afb .GetStandardTable (1);if _fcg !=nil {return _fcg ;};if _ ,_fcg =_cfaa .Decode (_gfc ._cgdga );
_fcg !=nil {return _fcg ;};_gfc ._cgdga .Align ();}else {_agf ,_cgegc :=_gfc ._dbgeb .DecodeIAID (uint64 (_gfc ._ddfg ),_gfc ._ccg );if _cgegc !=nil {return _cgegc ;};_ggcd =int (_agf );_aafg ,_cgegc =_gfc ._dbgeb .DecodeInt (_gfc ._bda );if _cgegc !=nil {return _cgegc ;
};_ccbc ,_cgegc =_gfc ._dbgeb .DecodeInt (_gfc ._efge );if _cgegc !=nil {return _cgegc ;};};if _bbeg :=_gfc .setSymbolsArray ();_bbeg !=nil {return _bbeg ;};_ggb :=_gfc ._dabb [_ggcd ];if _deae :=_gfc .decodeNewSymbols (_bddc ,_baeb ,_ggb ,_aafg ,_ccbc );
_deae !=nil {return _deae ;};if _gfc .IsHuffmanEncoded {_gfc ._cgdga .Align ();};return nil ;};func (_daace *SymbolDictionary )setRetainedCodingContexts (_bggd *SymbolDictionary ){_daace ._dbgeb =_bggd ._dbgeb ;_daace .IsHuffmanEncoded =_bggd .IsHuffmanEncoded ;
_daace .UseRefinementAggregation =_bggd .UseRefinementAggregation ;_daace .SdTemplate =_bggd .SdTemplate ;_daace .SdrTemplate =_bggd .SdrTemplate ;_daace .SdATX =_bggd .SdATX ;_daace .SdATY =_bggd .SdATY ;_daace .SdrATX =_bggd .SdrATX ;_daace .SdrATY =_bggd .SdrATY ;
_daace ._ebeg =_bggd ._ebeg ;};func (_gfbdc *TableSegment )Init (h *Header ,r *_g .Reader )error {_gfbdc ._aeda =r ;return _gfbdc .parseHeader ();};func (_ebd *template0 )setIndex (_bbda *_ecb .DecoderStats ){_bbda .SetIndex (0x100)};func (_aebdf *TextRegion )blit (_ffadc *_bb .Bitmap ,_ffbb int64 )error {if _aebdf .IsTransposed ==0&&(_aebdf .ReferenceCorner ==2||_aebdf .ReferenceCorner ==3){_aebdf ._aagac +=int64 (_ffadc .Width -1);
}else if _aebdf .IsTransposed ==1&&(_aebdf .ReferenceCorner ==0||_aebdf .ReferenceCorner ==2){_aebdf ._aagac +=int64 (_ffadc .Height -1);};_eebd :=_aebdf ._aagac ;if _aebdf .IsTransposed ==1{_eebd ,_ffbb =_ffbb ,_eebd ;};switch _aebdf .ReferenceCorner {case 0:_ffbb -=int64 (_ffadc .Height -1);
case 2:_ffbb -=int64 (_ffadc .Height -1);_eebd -=int64 (_ffadc .Width -1);case 3:_eebd -=int64 (_ffadc .Width -1);};_eeec :=_bb .Blit (_ffadc ,_aebdf .RegionBitmap ,int (_eebd ),int (_ffbb ),_aebdf .CombinationOperator );if _eeec !=nil {return _eeec ;};
if _aebdf .IsTransposed ==0&&(_aebdf .ReferenceCorner ==0||_aebdf .ReferenceCorner ==1){_aebdf ._aagac +=int64 (_ffadc .Width -1);};if _aebdf .IsTransposed ==1&&(_aebdf .ReferenceCorner ==1||_aebdf .ReferenceCorner ==3){_aebdf ._aagac +=int64 (_ffadc .Height -1);
};return nil ;};type GenericRefinementRegion struct{_ab templater ;_df templater ;_fe *_g .Reader ;_bf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_bb .Bitmap ;ReferenceBitmap *_bb .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_ce *_ecb .Decoder ;_de *_ecb .DecoderStats ;_bea bool ;_eg []bool ;};func (_acgd *TextRegion )computeSymbolCodeLength ()error {if _acgd .IsHuffmanEncoded {return _acgd .symbolIDCodeLengths ();};_acgd ._eaagc =int8 (_e .Ceil (_e .Log (float64 (_acgd .NumberOfSymbols ))/_e .Log (2)));
return nil ;};func (_agcg *PageInformationSegment )readResolution ()error {_dgdc ,_egb :=_agcg ._gcdg .ReadBits (32);if _egb !=nil {return _egb ;};_agcg .ResolutionX =int (_dgdc &_e .MaxInt32 );_dgdc ,_egb =_agcg ._gcdg .ReadBits (32);if _egb !=nil {return _egb ;
};_agcg .ResolutionY =int (_dgdc &_e .MaxInt32 );return nil ;};func (_abdg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _abdg .SdHuffDecodeHeightSelection {case 0:_bdcc ,_dagd :=_afb .GetStandardTable (4);if _dagd !=nil {return 0,_dagd ;
};return _bdcc .Decode (_abdg ._cgdga );case 1:_dbda ,_edfb :=_afb .GetStandardTable (5);if _edfb !=nil {return 0,_edfb ;};return _dbda .Decode (_abdg ._cgdga );case 3:if _abdg ._ecea ==nil {_cfe ,_gcdd :=_afb .GetStandardTable (0);if _gcdd !=nil {return 0,_gcdd ;
};_abdg ._ecea =_cfe ;};return _abdg ._ecea .Decode (_abdg ._cgdga );};return 0,nil ;};func (_gacab *RegionSegment )Encode (w _g .BinaryWriter )(_dbc int ,_bdd error ){const _egbg ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_fef :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fef ,_gacab .BitmapWidth );_dbc ,_bdd =w .Write (_fef );if _bdd !=nil {return 0,_cd .Wrap (_bdd ,_egbg ,"\u0057\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_fef ,_gacab .BitmapHeight );var _gbgf int ;
_gbgf ,_bdd =w .Write (_fef );if _bdd !=nil {return 0,_cd .Wrap (_bdd ,_egbg ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dbc +=_gbgf ;_a .BigEndian .PutUint32 (_fef ,_gacab .XLocation );_gbgf ,_bdd =w .Write (_fef );if _bdd !=nil {return 0,_cd .Wrap (_bdd ,_egbg ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_dbc +=_gbgf ;_a .BigEndian .PutUint32 (_fef ,_gacab .YLocation );_gbgf ,_bdd =w .Write (_fef );if _bdd !=nil {return 0,_cd .Wrap (_bdd ,_egbg ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dbc +=_gbgf ;if _bdd =w .WriteByte (byte (_gacab .CombinaionOperator )&0x07);
_bdd !=nil {return 0,_cd .Wrap (_bdd ,_egbg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dbc ++;return _dbc ,nil ;};type template1 struct{};func (_cfcg *TextRegion )decodeID ()(int64 ,error ){if _cfcg .IsHuffmanEncoded {if _cfcg ._cegb ==nil {_cbbff ,_cdgb :=_cfcg ._aafc .ReadBits (byte (_cfcg ._eaagc ));
return int64 (_cbbff ),_cdgb ;};return _cfcg ._cegb .Decode (_cfcg ._aafc );};return _cfcg ._eccgc .DecodeIAID (uint64 (_cfcg ._eaagc ),_cfcg ._efgae );};func (_defe *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_gbec :=range _defe .Header .RTSegments {if _gbec .Type ==0{_eddf ,_fece :=_gbec .GetSegmentData ();
if _fece !=nil {return _fece ;};_gfafg ,_dcfe :=_eddf .(*SymbolDictionary );if !_dcfe {return _ea .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_eddf );
};_eddff ,_fece :=_gfafg .GetDictionary ();if _fece !=nil {return _ea .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_gbec .SegmentNumber ,_fece .Error ());
};_defe ._feeg =append (_defe ._feeg ,_eddff ...);_defe ._fcda +=_gfafg .NumberOfExportedSymbols ;};};return nil ;};func (_fbee *PageInformationSegment )String ()string {_daag :=&_b .Builder {};_daag .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_daag .WriteString (_ea .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fbee .PageBMHeight ));_daag .WriteString (_ea .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fbee .PageBMWidth ));
_daag .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fbee .ResolutionX ));_daag .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fbee .ResolutionY ));
_daag .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fbee ._cfd ));_daag .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fbee ._bfbd ));
_daag .WriteString (_ea .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fbee .IsLossless ));_daag .WriteString (_ea .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fbee ._deb ));
_daag .WriteString (_ea .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fbee ._ccb ));_daag .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fbee .IsStripe ));
_daag .WriteString (_ea .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fbee .MaxStripeSize ));return _daag .String ();};func (_bge *GenericRegion )decodeTemplate0b (_bdb ,_daf ,_caf int ,_geg ,_egdf int )(_cefa error ){const _gdb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_accf ,_cda int ;_abbe ,_bfb int ;_fag byte ;_eaff int ;);if _bdb >=1{_fag ,_cefa =_bge .Bitmap .GetByte (_egdf );if _cefa !=nil {return _cd .Wrap (_cefa ,_gdb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abbe =int (_fag );};if _bdb >=2{_fag ,_cefa =_bge .Bitmap .GetByte (_egdf -_bge .Bitmap .RowStride );
if _cefa !=nil {return _cd .Wrap (_cefa ,_gdb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bfb =int (_fag )<<6;};_accf =(_abbe &0xf0)|(_bfb &0x3800);for _aceeg :=0;_aceeg < _caf ;_aceeg =_eaff {var (_bafc byte ;_fbbc int ;);_eaff =_aceeg +8;if _cge :=_daf -_aceeg ;
_cge > 8{_fbbc =8;}else {_fbbc =_cge ;};if _bdb > 0{_abbe <<=8;if _eaff < _daf {_fag ,_cefa =_bge .Bitmap .GetByte (_egdf +1);if _cefa !=nil {return _cd .Wrap (_cefa ,_gdb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abbe |=int (_fag );};};if _bdb > 1{_bfb <<=8;
if _eaff < _daf {_fag ,_cefa =_bge .Bitmap .GetByte (_egdf -_bge .Bitmap .RowStride +1);if _cefa !=nil {return _cd .Wrap (_cefa ,_gdb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bfb |=int (_fag )<<6;};};for _ddde :=0;_ddde < _fbbc ;_ddde ++{_fdga :=uint (7-_ddde );
if _bge ._cfgc {_cda =_bge .overrideAtTemplate0b (_accf ,_aceeg +_ddde ,_bdb ,int (_bafc ),_ddde ,int (_fdga ));_bge ._egge .SetIndex (int32 (_cda ));}else {_bge ._egge .SetIndex (int32 (_accf ));};var _bca int ;_bca ,_cefa =_bge ._dda .DecodeBit (_bge ._egge );
if _cefa !=nil {return _cd .Wrap (_cefa ,_gdb ,"");};_bafc |=byte (_bca <<_fdga );_accf =((_accf &0x7bf7)<<1)|_bca |((_abbe >>_fdga )&0x10)|((_bfb >>_fdga )&0x800);};if _dae :=_bge .Bitmap .SetByte (_geg ,_bafc );_dae !=nil {return _cd .Wrap (_dae ,_gdb ,"");
};_geg ++;_egdf ++;};return nil ;};func (_accbd *TextRegion )readAmountOfSymbolInstances ()error {_cega ,_edde :=_accbd ._aafc .ReadBits (32);if _edde !=nil {return _edde ;};_accbd .NumberOfSymbolInstances =uint32 (_cega &_e .MaxUint32 );_deafb :=_accbd .RegionInfo .BitmapWidth *_accbd .RegionInfo .BitmapHeight ;
if _deafb < _accbd .NumberOfSymbolInstances {_bc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_deafb ,_accbd .NumberOfSymbolInstances );
_accbd .NumberOfSymbolInstances =_deafb ;};return nil ;};func (_edd *GenericRegion )overrideAtTemplate0a (_cae ,_dfe ,_edf ,_abda ,_beda ,_efgb int )int {if _edd .GBAtOverride [0]{_cae &=0xFFEF;if _edd .GBAtY [0]==0&&_edd .GBAtX [0]>=-int8 (_beda ){_cae |=(_abda >>uint (int8 (_efgb )-_edd .GBAtX [0]&0x1))<<4;
}else {_cae |=int (_edd .getPixel (_dfe +int (_edd .GBAtX [0]),_edf +int (_edd .GBAtY [0])))<<4;};};if _edd .GBAtOverride [1]{_cae &=0xFBFF;if _edd .GBAtY [1]==0&&_edd .GBAtX [1]>=-int8 (_beda ){_cae |=(_abda >>uint (int8 (_efgb )-_edd .GBAtX [1]&0x1))<<10;
}else {_cae |=int (_edd .getPixel (_dfe +int (_edd .GBAtX [1]),_edf +int (_edd .GBAtY [1])))<<10;};};if _edd .GBAtOverride [2]{_cae &=0xF7FF;if _edd .GBAtY [2]==0&&_edd .GBAtX [2]>=-int8 (_beda ){_cae |=(_abda >>uint (int8 (_efgb )-_edd .GBAtX [2]&0x1))<<11;
}else {_cae |=int (_edd .getPixel (_dfe +int (_edd .GBAtX [2]),_edf +int (_edd .GBAtY [2])))<<11;};};if _edd .GBAtOverride [3]{_cae &=0x7FFF;if _edd .GBAtY [3]==0&&_edd .GBAtX [3]>=-int8 (_beda ){_cae |=(_abda >>uint (int8 (_efgb )-_edd .GBAtX [3]&0x1))<<15;
}else {_cae |=int (_edd .getPixel (_dfe +int (_edd .GBAtX [3]),_edf +int (_edd .GBAtY [3])))<<15;};};return _cae ;};func (_gcdf *SymbolDictionary )setCodingStatistics ()error {if _gcdf ._cgca ==nil {_gcdf ._cgca =_ecb .NewStats (512,1);};if _gcdf ._cadb ==nil {_gcdf ._cadb =_ecb .NewStats (512,1);
};if _gcdf ._ecde ==nil {_gcdf ._ecde =_ecb .NewStats (512,1);};if _gcdf ._adca ==nil {_gcdf ._adca =_ecb .NewStats (512,1);};if _gcdf ._ecfg ==nil {_gcdf ._ecfg =_ecb .NewStats (512,1);};if _gcdf .UseRefinementAggregation &&_gcdf ._ccg ==nil {_gcdf ._ccg =_ecb .NewStats (1<<uint (_gcdf ._ddfg ),1);
_gcdf ._bda =_ecb .NewStats (512,1);_gcdf ._efge =_ecb .NewStats (512,1);};if _gcdf ._ebeg ==nil {_gcdf ._ebeg =_ecb .NewStats (65536,1);};if _gcdf ._dbgeb ==nil {var _afge error ;_gcdf ._dbgeb ,_afge =_ecb .New (_gcdf ._cgdga );if _afge !=nil {return _afge ;
};};return nil ;};func (_fcd *GenericRegion )Init (h *Header ,r *_g .Reader )error {_fcd .RegionSegment =NewRegionSegment (r );_fcd ._cea =r ;return _fcd .parseHeader ();};func (_gebdd *SymbolDictionary )addSymbol (_gbdb Regioner )error {_fgfd ,_daacga :=_gbdb .GetRegionBitmap ();
if _daacga !=nil {return _daacga ;};_gebdd ._cdgd [_gebdd ._dgb ]=_fgfd ;_gebdd ._dabb =append (_gebdd ._dabb ,_fgfd );_bc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fgfd );
return nil ;};func (_bbfc *SymbolDictionary )encodeSymbols (_cbbd _g .BinaryWriter )(_aecfd int ,_agdc error ){const _ccgg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_fefa :=_ba .New ();_fefa .Init ();_fab ,_agdc :=_bbfc ._efgeg .SelectByIndexes (_bbfc ._gcf );
if _agdc !=nil {return 0,_cd .Wrap (_agdc ,_ccgg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ccda :=map[*_bb .Bitmap ]int {};for _ccdd ,_ffeeg :=range _fab .Values {_ccda [_ffeeg ]=_ccdd ;};_fab .SortByHeight ();var _gbd ,_ddfd int ;_gedd ,_agdc :=_fab .GroupByHeight ();
if _agdc !=nil {return 0,_cd .Wrap (_agdc ,_ccgg ,"");};for _ ,_acgg :=range _gedd .Values {_begf :=_acgg .Values [0].Height ;_cbgg :=_begf -_gbd ;if _agdc =_fefa .EncodeInteger (_ba .IADH ,_cbgg );_agdc !=nil {return 0,_cd .Wrapf (_agdc ,_ccgg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cbgg );
};_gbd =_begf ;_adfe ,_ddda :=_acgg .GroupByWidth ();if _ddda !=nil {return 0,_cd .Wrapf (_ddda ,_ccgg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_begf );};var _afed int ;for _ ,_fggf :=range _adfe .Values {for _ ,_bagf :=range _fggf .Values {_acfg :=_bagf .Width ;
_bdec :=_acfg -_afed ;if _ddda =_fefa .EncodeInteger (_ba .IADW ,_bdec );_ddda !=nil {return 0,_cd .Wrapf (_ddda ,_ccgg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bdec );};_afed +=_bdec ;if _ddda =_fefa .EncodeBitmap (_bagf ,false );
_ddda !=nil {return 0,_cd .Wrapf (_ddda ,_ccgg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_begf ,_acfg );};_gcff :=_ccda [_bagf ];_bbfc ._dcaf [_gcff ]=_ddfd ;_ddfd ++;};};if _ddda =_fefa .EncodeOOB (_ba .IADW );
_ddda !=nil {return 0,_cd .Wrap (_ddda ,_ccgg ,"\u0049\u0041\u0044\u0057");};};if _agdc =_fefa .EncodeInteger (_ba .IAEX ,0);_agdc !=nil {return 0,_cd .Wrap (_agdc ,_ccgg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _agdc =_fefa .EncodeInteger (_ba .IAEX ,len (_bbfc ._gcf ));_agdc !=nil {return 0,_cd .Wrap (_agdc ,_ccgg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fefa .Final ();_dbcb ,_agdc :=_fefa .WriteTo (_cbbd );
if _agdc !=nil {return 0,_cd .Wrap (_agdc ,_ccgg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_dbcb ),nil ;};func (_beab *GenericRegion )Size ()int {return _beab .RegionSegment .Size ()+1+2*len (_beab .GBAtX )};func (_dadd *TextRegion )decodeDT ()(_dbce int64 ,_ebca error ){if _dadd .IsHuffmanEncoded {if _dadd .SbHuffDT ==3{_dbce ,_ebca =_dadd ._bcga .Decode (_dadd ._aafc );
if _ebca !=nil {return 0,_ebca ;};}else {var _bcfae _afb .Tabler ;_bcfae ,_ebca =_afb .GetStandardTable (11+int (_dadd .SbHuffDT ));if _ebca !=nil {return 0,_ebca ;};_dbce ,_ebca =_bcfae .Decode (_dadd ._aafc );if _ebca !=nil {return 0,_ebca ;};};}else {var _facg int32 ;
_facg ,_ebca =_dadd ._eccgc .DecodeInt (_dadd ._ffda );if _ebca !=nil {return 0,_ebca ;};_dbce =int64 (_facg );};_dbce *=int64 (_dadd .SbStrips );return _dbce ,nil ;};func (_deeg *SymbolDictionary )String ()string {_bdcd :=&_b .Builder {};_bdcd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_bdcd .WriteString (_ea .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_deeg .SdrTemplate ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_deeg .SdTemplate ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_deeg ._fgg ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_deeg ._gcea ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_deeg .SdHuffAggInstanceSelection ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_deeg .SdHuffBMSizeSelection ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_deeg .SdHuffDecodeWidthSelection ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_deeg .SdHuffDecodeHeightSelection ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_deeg .UseRefinementAggregation ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_deeg .IsHuffmanEncoded ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_deeg .SdATX ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_deeg .SdATY ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_deeg .SdrATX ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_deeg .SdrATY ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_deeg .NumberOfExportedSymbols ));
_bdcd .WriteString (_ea .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_deeg .NumberOfNewSymbols ));_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_deeg ._fcda ));
_bdcd .WriteString (_ea .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_deeg ._dgb ));return _bdcd .String ();};func (_dfa *GenericRegion )String ()string {_gffe :=&_b .Builder {};
_gffe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gffe .WriteString (_dfa .RegionSegment .String ()+"\u000a");_gffe .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfa .UseExtTemplates ));
_gffe .WriteString (_ea .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfa .IsTPGDon ));_gffe .WriteString (_ea .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dfa .GBTemplate ));
_gffe .WriteString (_ea .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dfa .IsMMREncoded ));_gffe .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfa .GBAtX ));
_gffe .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfa .GBAtY ));_gffe .WriteString (_ea .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dfa .GBAtOverride ));
return _gffe .String ();};func (_agcfd *SymbolDictionary )readRefinementAtPixels (_ccef int )error {_agcfd .SdrATX =make ([]int8 ,_ccef );_agcfd .SdrATY =make ([]int8 ,_ccef );var (_gcaab byte ;_gabb error ;);for _adb :=0;_adb < _ccef ;_adb ++{_gcaab ,_gabb =_agcfd ._cgdga .ReadByte ();
if _gabb !=nil {return _gabb ;};_agcfd .SdrATX [_adb ]=int8 (_gcaab );_gcaab ,_gabb =_agcfd ._cgdga .ReadByte ();if _gabb !=nil {return _gabb ;};_agcfd .SdrATY [_adb ]=int8 (_gcaab );};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;
PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_g .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_egec *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _egec .IsHuffmanEncoded {return _egec .decodeHeightClassDeltaHeightWithHuffman ();
};_ddgcd ,_gccc :=_egec ._dbgeb .DecodeInt (_egec ._cadb );if _gccc !=nil {return 0,_gccc ;};return int64 (_ddgcd ),nil ;};func (_ggfe *TableSegment )parseHeader ()error {var (_ggba int ;_cfge uint64 ;_ecbe error ;);_ggba ,_ecbe =_ggfe ._aeda .ReadBit ();
if _ecbe !=nil {return _ecbe ;};if _ggba ==1{return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ggba );
};if _cfge ,_ecbe =_ggfe ._aeda .ReadBits (3);_ecbe !=nil {return _ecbe ;};_ggfe ._cddb =(int32 (_cfge )+1)&0xf;if _cfge ,_ecbe =_ggfe ._aeda .ReadBits (3);_ecbe !=nil {return _ecbe ;};_ggfe ._cec =(int32 (_cfge )+1)&0xf;if _cfge ,_ecbe =_ggfe ._aeda .ReadBits (32);
_ecbe !=nil {return _ecbe ;};_ggfe ._aggd =int32 (_cfge &_e .MaxInt32 );if _cfge ,_ecbe =_ggfe ._aeda .ReadBits (32);_ecbe !=nil {return _ecbe ;};_ggfe ._cfdf =int32 (_cfge &_e .MaxInt32 );return nil ;};func (_gb *GenericRefinementRegion )overrideAtTemplate0 (_gdc ,_cgdd ,_fbf ,_ffd ,_bbfd int )int {if _gb ._eg [0]{_gdc &=0xfff7;
if _gb .GrAtY [0]==0&&int (_gb .GrAtX [0])>=-_bbfd {_gdc |=(_ffd >>uint (7-(_bbfd +int (_gb .GrAtX [0])))&0x1)<<3;}else {_gdc |=_gb .getPixel (_gb .RegionBitmap ,_cgdd +int (_gb .GrAtX [0]),_fbf +int (_gb .GrAtY [0]))<<3;};};if _gb ._eg [1]{_gdc &=0xefff;
if _gb .GrAtY [1]==0&&int (_gb .GrAtX [1])>=-_bbfd {_gdc |=(_ffd >>uint (7-(_bbfd +int (_gb .GrAtX [1])))&0x1)<<12;}else {_gdc |=_gb .getPixel (_gb .ReferenceBitmap ,_cgdd +int (_gb .GrAtX [1]),_fbf +int (_gb .GrAtY [1]));};};return _gdc ;};func (_gbgc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gbgc .SdHuffAggInstanceSelection {_feegg ,_ddfa :=_afb .GetStandardTable (1);
if _ddfa !=nil {return 0,_ddfa ;};return _feegg .Decode (_gbgc ._cgdga );};if _gbgc ._bedf ==nil {var (_aaac int ;_aeggb error ;);if _gbgc .SdHuffDecodeHeightSelection ==3{_aaac ++;};if _gbgc .SdHuffDecodeWidthSelection ==3{_aaac ++;};if _gbgc .SdHuffBMSizeSelection ==3{_aaac ++;
};_gbgc ._bedf ,_aeggb =_gbgc .getUserTable (_aaac );if _aeggb !=nil {return 0,_aeggb ;};};return _gbgc ._bedf .Decode (_gbgc ._cgdga );};type EncodeInitializer interface{InitEncode ();};func (_gedb *PatternDictionary )readTemplate ()error {_eaad ,_gbcb :=_gedb ._ffbe .ReadBits (2);
if _gbcb !=nil {return _gbcb ;};_gedb .HDTemplate =byte (_eaad );return nil ;};var _ SegmentEncoder =&GenericRegion {};type Regioner interface{GetRegionBitmap ()(*_bb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_fffb *SymbolDictionary )setRefinementAtPixels ()error {if !_fffb .UseRefinementAggregation ||_fffb .SdrTemplate !=0{return nil ;
};if _gegf :=_fffb .readRefinementAtPixels (2);_gegf !=nil {return _gegf ;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_aaae *TextRegion )createRegionBitmap ()error {_aaae .RegionBitmap =_bb .New (int (_aaae .RegionInfo .BitmapWidth ),int (_aaae .RegionInfo .BitmapHeight ));
if _aaae .DefaultPixel !=0{_aaae .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_fbab *SymbolDictionary )encodeFlags (_agdd _g .BinaryWriter )(_bfdc int ,_bcea error ){const _bdfbd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bcea =_agdd .SkipBits (3);_bcea !=nil {return 0,_cd .Wrap (_bcea ,_bdfbd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cage int ;if _fbab .SdrTemplate > 0{_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_cage =0;if _fbab .SdTemplate > 1{_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cage =0;if _fbab .SdTemplate ==1||_fbab .SdTemplate ==3{_cage =1;
};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cage =0;if _fbab ._fgg {_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_cage =0;if _fbab ._gcea {_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cage =0;if _fbab .SdHuffAggInstanceSelection {_cage =1;
};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cage =int (_fbab .SdHuffBMSizeSelection );if _bcea =_agdd .WriteBit (_cage );
_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_cage =0;if _fbab .SdHuffDecodeWidthSelection > 1{_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_cage =0;switch _fbab .SdHuffDecodeWidthSelection {case 1,3:_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cage =0;if _fbab .SdHuffDecodeHeightSelection > 1{_cage =1;
};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cage =0;switch _fbab .SdHuffDecodeHeightSelection {case 1,3:_cage =1;};if _bcea =_agdd .WriteBit (_cage );
_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cage =0;if _fbab .UseRefinementAggregation {_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_cage =0;if _fbab .IsHuffmanEncoded {_cage =1;};if _bcea =_agdd .WriteBit (_cage );_bcea !=nil {return _bfdc ,_cd .Wrap (_bcea ,_bdfbd ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_gfgfc *PatternDictionary )extractPatterns (_cfbf *_bb .Bitmap )error {var _egcg int ;
_egf :=make ([]*_bb .Bitmap ,_gfgfc .GrayMax +1);for _egcg <=int (_gfgfc .GrayMax ){_fbgec :=int (_gfgfc .HdpWidth )*_egcg ;_dcg :=_eb .Rect (_fbgec ,0,_fbgec +int (_gfgfc .HdpWidth ),int (_gfgfc .HdpHeight ));_cgga ,_egfa :=_bb .Extract (_dcg ,_cfbf );
if _egfa !=nil {return _egfa ;};_egf [_egcg ]=_cgga ;_egcg ++;};_gfgfc .Patterns =_egf ;return nil ;};func (_gcdfe *TextRegion )setContexts (_fedfg *_ecb .DecoderStats ,_gfgfg *_ecb .DecoderStats ,_fcbf *_ecb .DecoderStats ,_fbdc *_ecb .DecoderStats ,_fcga *_ecb .DecoderStats ,_aadf *_ecb .DecoderStats ,_dbea *_ecb .DecoderStats ,_debg *_ecb .DecoderStats ,_gfae *_ecb .DecoderStats ,_ebdd *_ecb .DecoderStats ){_gcdfe ._ffda =_gfgfg ;
_gcdfe ._bedc =_fcbf ;_gcdfe ._gfdc =_fbdc ;_gcdfe ._ggfd =_fcga ;_gcdfe ._ggef =_dbea ;_gcdfe ._acdc =_debg ;_gcdfe ._efgae =_aadf ;_gcdfe ._aeac =_gfae ;_gcdfe ._bfcdb =_ebdd ;_gcdfe ._abdae =_fedfg ;};func (_dcafe *TextRegion )encodeSymbols (_gafad _g .BinaryWriter )(_fedac int ,_geaf error ){const _gbgee ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_febef :=make ([]byte ,4);_a .BigEndian .PutUint32 (_febef ,_dcafe .NumberOfSymbols );if _fedac ,_geaf =_gafad .Write (_febef );_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_cced ,_geaf :=_bb .NewClassedPoints (_dcafe ._cab ,_dcafe ._bfbbc );if _geaf !=nil {return 0,_cd .Wrap (_geaf ,_gbgee ,"");};var _cfad ,_ddddf int ;_bfde :=_ba .New ();_bfde .Init ();if _geaf =_bfde .EncodeInteger (_ba .IADT ,0);_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cfaad ,_geaf :=_cced .GroupByY ();if _geaf !=nil {return 0,_cd .Wrap (_geaf ,_gbgee ,"");};for _ ,_bdbb :=range _cfaad {_ccggf :=int (_bdbb .YAtIndex (0));_bfeg :=_ccggf -_cfad ;if _geaf =_bfde .EncodeInteger (_ba .IADT ,_bfeg );_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"");
};var _dgedf int ;for _fgfc ,_agaf :=range _bdbb .IntSlice {switch _fgfc {case 0:_agbc :=int (_bdbb .XAtIndex (_fgfc ))-_ddddf ;if _geaf =_bfde .EncodeInteger (_ba .IAFS ,_agbc );_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"");};_ddddf +=_agbc ;
_dgedf =_ddddf ;default:_afbb :=int (_bdbb .XAtIndex (_fgfc ))-_dgedf ;if _geaf =_bfde .EncodeInteger (_ba .IADS ,_afbb );_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"");};_dgedf +=_afbb ;};_deaa ,_bafeg :=_dcafe ._ggee .Get (_agaf );if _bafeg !=nil {return _fedac ,_cd .Wrap (_bafeg ,_gbgee ,"");
};_ddad ,_egdb :=_dcafe ._bgeb [_deaa ];if !_egdb {_ddad ,_egdb =_dcafe ._bdca [_deaa ];if !_egdb {return _fedac ,_cd .Errorf (_gbgee ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_deaa );
};};if _bafeg =_bfde .EncodeIAID (_dcafe ._gebga ,_ddad );_bafeg !=nil {return _fedac ,_cd .Wrap (_bafeg ,_gbgee ,"");};};if _geaf =_bfde .EncodeOOB (_ba .IADS );_geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"");};};_bfde .Final ();_ebed ,_geaf :=_bfde .WriteTo (_gafad );
if _geaf !=nil {return _fedac ,_cd .Wrap (_geaf ,_gbgee ,"");};_fedac +=int (_ebed );return _fedac ,nil ;};func (_feaf *TextRegion )parseHeader ()error {var _dcafb error ;_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _dcafb !=nil {_bc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_dcafb );
}else {_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _dcafb =_feaf .RegionInfo .parseHeader ();
_dcafb !=nil {return _dcafb ;};if _dcafb =_feaf .readRegionFlags ();_dcafb !=nil {return _dcafb ;};if _feaf .IsHuffmanEncoded {if _dcafb =_feaf .readHuffmanFlags ();_dcafb !=nil {return _dcafb ;};};if _dcafb =_feaf .readUseRefinement ();_dcafb !=nil {return _dcafb ;
};if _dcafb =_feaf .readAmountOfSymbolInstances ();_dcafb !=nil {return _dcafb ;};if _dcafb =_feaf .getSymbols ();_dcafb !=nil {return _dcafb ;};if _dcafb =_feaf .computeSymbolCodeLength ();_dcafb !=nil {return _dcafb ;};if _dcafb =_feaf .checkInput ();
_dcafb !=nil {return _dcafb ;};_bc .Log .Trace ("\u0025\u0073",_feaf .String ());return nil ;};func (_bcfd *Header )parse (_caa Documenter ,_aaeg *_g .Reader ,_fbgb int64 ,_adac OrganizationType )(_gfg error ){const _cade ="\u0070\u0061\u0072s\u0065";_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _gfg !=nil {_bc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gfg );}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_gfg =_aaeg .Seek (_fbgb ,_d .SeekStart );if _gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gfg =_bcfd .readSegmentNumber (_aaeg );_gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");
};if _gfg =_bcfd .readHeaderFlags ();_gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");};var _acad uint64 ;_acad ,_gfg =_bcfd .readNumberOfReferredToSegments (_aaeg );if _gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");};_bcfd .RTSNumbers ,_gfg =_bcfd .readReferredToSegmentNumbers (_aaeg ,int (_acad ));
if _gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");};_gfg =_bcfd .readSegmentPageAssociation (_caa ,_aaeg ,_acad ,_bcfd .RTSNumbers ...);if _gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");};if _bcfd .Type !=TEndOfFile {if _gfg =_bcfd .readSegmentDataLength (_aaeg );
_gfg !=nil {return _cd .Wrap (_gfg ,_cade ,"");};};_bcfd .readDataStartOffset (_aaeg ,_adac );_bcfd .readHeaderLength (_aaeg ,_fbgb );_bc .Log .Trace ("\u0025\u0073",_bcfd );return nil ;};func (_febe *Header )writeFlags (_baca _g .BinaryWriter )(_fcf error ){const _gaga ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_gcde :=byte (_febe .Type );if _fcf =_baca .WriteByte (_gcde );_fcf !=nil {return _cd .Wrap (_fcf ,_gaga ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_febe .RetainFlag &&!_febe .PageAssociationFieldSize {return nil ;};if _fcf =_baca .SkipBits (-8);_fcf !=nil {return _cd .Wrap (_fcf ,_gaga ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _abbc int ;if _febe .RetainFlag {_abbc =1;};if _fcf =_baca .WriteBit (_abbc );_fcf !=nil {return _cd .Wrap (_fcf ,_gaga ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_abbc =0;if _febe .PageAssociationFieldSize {_abbc =1;
};if _fcf =_baca .WriteBit (_abbc );_fcf !=nil {return _cd .Wrap (_fcf ,_gaga ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_baca .FinishByte ();return nil ;};func (_egcgg *TextRegion )GetRegionInfo ()*RegionSegment {return _egcgg .RegionInfo };
func (_afgd *PatternDictionary )Init (h *Header ,r *_g .Reader )error {_afgd ._ffbe =r ;return _afgd .parseHeader ();};func (_fcbfg *TextRegion )setParameters (_gcbd *_ecb .Decoder ,_baff ,_ggggb bool ,_ebee ,_fbdb uint32 ,_efag uint32 ,_ecba int8 ,_gdfb uint32 ,_bdba int8 ,_bded _bb .CombinationOperator ,_gfcd int8 ,_dgfe int16 ,_gdca ,_bdag ,_dcgg ,_eccfg ,_eeca ,_fdfbc ,_afcc ,_dagb ,_efec ,_fggg int8 ,_gfcf ,_bgb []int8 ,_dcaa []*_bb .Bitmap ,_bdda int8 ){_fcbfg ._eccgc =_gcbd ;
_fcbfg .IsHuffmanEncoded =_baff ;_fcbfg .UseRefinement =_ggggb ;_fcbfg .RegionInfo .BitmapWidth =_ebee ;_fcbfg .RegionInfo .BitmapHeight =_fbdb ;_fcbfg .NumberOfSymbolInstances =_efag ;_fcbfg .SbStrips =_ecba ;_fcbfg .NumberOfSymbols =_gdfb ;_fcbfg .DefaultPixel =_bdba ;
_fcbfg .CombinationOperator =_bded ;_fcbfg .IsTransposed =_gfcd ;_fcbfg .ReferenceCorner =_dgfe ;_fcbfg .SbDsOffset =_gdca ;_fcbfg .SbHuffFS =_bdag ;_fcbfg .SbHuffDS =_dcgg ;_fcbfg .SbHuffDT =_eccfg ;_fcbfg .SbHuffRDWidth =_eeca ;_fcbfg .SbHuffRDHeight =_fdfbc ;
_fcbfg .SbHuffRSize =_efec ;_fcbfg .SbHuffRDX =_afcc ;_fcbfg .SbHuffRDY =_dagb ;_fcbfg .SbrTemplate =_fggg ;_fcbfg .SbrATX =_gfcf ;_fcbfg .SbrATY =_bgb ;_fcbfg .Symbols =_dcaa ;_fcbfg ._eaagc =_bdda ;};func (_fbaa *Header )Encode (w _g .BinaryWriter )(_ddeg int ,_bdfd error ){const _fcdb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _fbbg _g .BinaryWriter ;_bc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bdfd !=nil {_bc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bdfd );
}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fbaa );_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _fbaa .SegmentData !=nil {_dgfb ,_dedg :=_fbaa .SegmentData .(SegmentEncoder );if !_dedg {return 0,_cd .Errorf (_fcdb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fbaa .SegmentData );
};_fbbg =_g .BufferedMSB ();_ddeg ,_bdfd =_dgfb .Encode (_fbbg );if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");};_fbaa .SegmentDataLength =uint64 (_ddeg );};if _fbaa .pageSize ()==4{_fbaa .PageAssociationFieldSize =true ;};var _dggc int ;_dggc ,_bdfd =_fbaa .writeSegmentNumber (w );
if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");};_ddeg +=_dggc ;if _bdfd =_fbaa .writeFlags (w );_bdfd !=nil {return _ddeg ,_cd .Wrap (_bdfd ,_fcdb ,"");};_ddeg ++;_dggc ,_bdfd =_fbaa .writeReferredToCount (w );if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");
};_ddeg +=_dggc ;_dggc ,_bdfd =_fbaa .writeReferredToSegments (w );if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");};_ddeg +=_dggc ;_dggc ,_bdfd =_fbaa .writeSegmentPageAssociation (w );if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");};_ddeg +=_dggc ;
_dggc ,_bdfd =_fbaa .writeSegmentDataLength (w );if _bdfd !=nil {return 0,_cd .Wrap (_bdfd ,_fcdb ,"");};_ddeg +=_dggc ;_fbaa .HeaderLength =int64 (_ddeg )-int64 (_fbaa .SegmentDataLength );if _fbbg !=nil {if _ ,_bdfd =w .Write (_fbbg .Data ());_bdfd !=nil {return _ddeg ,_cd .Wrap (_bdfd ,_fcdb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ddeg ,nil ;};func NewGenericRegion (r *_g .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cea :r };};func (_adae *GenericRegion )decodeSLTP ()(int ,error ){switch _adae .GBTemplate {case 0:_adae ._egge .SetIndex (0x9B25);
case 1:_adae ._egge .SetIndex (0x795);case 2:_adae ._egge .SetIndex (0xE5);case 3:_adae ._egge .SetIndex (0x195);};return _adae ._dda .DecodeBit (_adae ._egge );};type Segmenter interface{Init (_fbbge *Header ,_beeb *_g .Reader )error ;};func (_agee *TextRegion )encodeFlags (_accg _g .BinaryWriter )(_gacfb int ,_gfffa error ){const _fegf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gfffa =_accg .WriteBit (int (_agee .SbrTemplate ));_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_gfffa =_accg .WriteBits (uint64 (_agee .SbDsOffset ),5);_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _gfffa =_accg .WriteBit (int (_agee .DefaultPixel ));_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_gfffa =_accg .WriteBits (uint64 (_agee .CombinationOperator ),2);
_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _gfffa =_accg .WriteBit (int (_agee .IsTransposed ));_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_gfffa =_accg .WriteBits (uint64 (_agee .ReferenceCorner ),2);_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_gfffa =_accg .WriteBits (uint64 (_agee .LogSBStrips ),2);
_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bfbbb int ;if _agee .UseRefinement {_bfbbb =1;};if _gfffa =_accg .WriteBit (_bfbbb );_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bfbbb =0;if _agee .IsHuffmanEncoded {_bfbbb =1;};if _gfffa =_accg .WriteBit (_bfbbb );_gfffa !=nil {return _gacfb ,_cd .Wrap (_gfffa ,_fegf ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gacfb =2;return _gacfb ,nil ;};func (_bbef *PatternDictionary )setGbAtPixels (){if _bbef .HDTemplate ==0{_bbef .GBAtX =make ([]int8 ,4);
_bbef .GBAtY =make ([]int8 ,4);_bbef .GBAtX [0]=-int8 (_bbef .HdpWidth );_bbef .GBAtY [0]=0;_bbef .GBAtX [1]=-3;_bbef .GBAtY [1]=-1;_bbef .GBAtX [2]=2;_bbef .GBAtY [2]=-2;_bbef .GBAtX [3]=-2;_bbef .GBAtY [3]=-2;}else {_bbef .GBAtX =[]int8 {-int8 (_bbef .HdpWidth )};
_bbef .GBAtY =[]int8 {0};};};func (_gcfg *TextRegion )String ()string {_affgd :=&_b .Builder {};_affgd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_affgd .WriteString (_gcfg .RegionInfo .String ()+"\u000a");
_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gcfg .SbrTemplate ));_affgd .WriteString (_ea .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gcfg .SbDsOffset ));
_affgd .WriteString (_ea .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gcfg .DefaultPixel ));_affgd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gcfg .CombinationOperator ));
_affgd .WriteString (_ea .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gcfg .IsTransposed ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gcfg .ReferenceCorner ));
_affgd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gcfg .UseRefinement ));_affgd .WriteString (_ea .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gcfg .IsHuffmanEncoded ));
if _gcfg .IsHuffmanEncoded {_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gcfg .SbHuffRSize ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gcfg .SbHuffRDY ));
_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gcfg .SbHuffRDX ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gcfg .SbHuffRDHeight ));
_affgd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gcfg .SbHuffRDWidth ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gcfg .SbHuffDT ));
_affgd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gcfg .SbHuffDS ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gcfg .SbHuffFS ));
};_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcfg .SbrATX ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gcfg .SbrATY ));
_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gcfg .NumberOfSymbolInstances ));_affgd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcfg .SbrATX ));
return _affgd .String ();};func (_dbfc *PatternDictionary )GetDictionary ()([]*_bb .Bitmap ,error ){if _dbfc .Patterns !=nil {return _dbfc .Patterns ,nil ;};if !_dbfc .IsMMREncoded {_dbfc .setGbAtPixels ();};_eadb :=NewGenericRegion (_dbfc ._ffbe );_eadb .setParametersMMR (_dbfc .IsMMREncoded ,_dbfc .DataOffset ,_dbfc .DataLength ,uint32 (_dbfc .HdpHeight ),(_dbfc .GrayMax +1)*uint32 (_dbfc .HdpWidth ),_dbfc .HDTemplate ,false ,false ,_dbfc .GBAtX ,_dbfc .GBAtY );
_ccba ,_dagc :=_eadb .GetRegionBitmap ();if _dagc !=nil {return nil ,_dagc ;};if _dagc =_dbfc .extractPatterns (_ccba );_dagc !=nil {return nil ,_dagc ;};return _dbfc .Patterns ,nil ;};func (_fddd *SymbolDictionary )encodeNumSyms (_gggb _g .BinaryWriter )(_eee int ,_afd error ){const _egea ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_fcada :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fcada ,_fddd .NumberOfExportedSymbols );if _eee ,_afd =_gggb .Write (_fcada );_afd !=nil {return _eee ,_cd .Wrap (_afd ,_egea ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_a .BigEndian .PutUint32 (_fcada ,_fddd .NumberOfNewSymbols );_gfe ,_afd :=_gggb .Write (_fcada );if _afd !=nil {return _eee ,_cd .Wrap (_afd ,_egea ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _eee +_gfe ,nil ;};func (_gafaf *GenericRegion )readGBAtPixels (_fdcf int )error {const _eabb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_gafaf .GBAtX =make ([]int8 ,_fdcf );_gafaf .GBAtY =make ([]int8 ,_fdcf );for _cdac :=0;_cdac < _fdcf ;_cdac ++{_fbg ,_cgeg :=_gafaf ._cea .ReadByte ();if _cgeg !=nil {return _cd .Wrapf (_cgeg ,_eabb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdac );
};_gafaf .GBAtX [_cdac ]=int8 (_fbg );_fbg ,_cgeg =_gafaf ._cea .ReadByte ();if _cgeg !=nil {return _cd .Wrapf (_cgeg ,_eabb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdac );};_gafaf .GBAtY [_cdac ]=int8 (_fbg );};return nil ;
};func (_abac *RegionSegment )String ()string {_cege :=&_b .Builder {};_cege .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_cege .WriteString (_ea .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_abac .BitmapWidth ,_abac .BitmapHeight ));
_cege .WriteString (_ea .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_abac .XLocation ,_abac .YLocation ));_cege .WriteString (_ea .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_abac .CombinaionOperator ));
return _cege .String ();};func (_dbb *TableSegment )HtOOB ()int32 {return _dbb ._ffef };var _ _afb .BasicTabler =&TableSegment {};func (_afba *SymbolDictionary )setInSyms ()error {if _afba .Header .RTSegments !=nil {return _afba .retrieveImportSymbols ();
};_afba ._feeg =make ([]*_bb .Bitmap ,0);return nil ;};func (_abfb *TableSegment )HtHigh ()int32 {return _abfb ._cfdf };func (_gaca *HalftoneRegion )renderPattern (_bcfc [][]int )(_ddb error ){var _dgf ,_fed int ;for _fgag :=0;_fgag < int (_gaca .HGridHeight );
_fgag ++{for _aadd :=0;_aadd < int (_gaca .HGridWidth );_aadd ++{_dgf =_gaca .computeX (_fgag ,_aadd );_fed =_gaca .computeY (_fgag ,_aadd );_bbed :=_gaca .Patterns [_bcfc [_fgag ][_aadd ]];if _ddb =_bb .Blit (_bbed ,_gaca .HalftoneRegionBitmap ,_dgf +int (_gaca .HGridX ),_fed +int (_gaca .HGridY ),_gaca .CombinationOperator );
_ddb !=nil {return _ddb ;};};};return nil ;};func (_acbd *GenericRefinementRegion )getPixel (_bfae *_bb .Bitmap ,_ga ,_dfcd int )int {if _ga < 0||_ga >=_bfae .Width {return 0;};if _dfcd < 0||_dfcd >=_bfae .Height {return 0;};if _bfae .GetPixel (_ga ,_dfcd ){return 1;
};return 0;};func (_eecb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_bb .Points ,symbols *_bb .Bitmaps ,classIDs *_ec .IntSlice ,boxes *_bb .Boxes ,width ,height ,symBits int ){_eecb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_eecb ._bgeb =globalSymbolsMap ;_eecb ._bdca =localSymbolsMap ;_eecb ._bfbbc =comps ;_eecb ._cab =inLL ;_eecb ._bdcag =symbols ;_eecb ._ggee =classIDs ;_eecb ._bddd =boxes ;_eecb ._gebga =symBits ;};func (_ceeb *SymbolDictionary )encodeRefinementATFlags (_cgce _g .BinaryWriter )(_edec int ,_bccd error ){const _gcfb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_ceeb .UseRefinementAggregation ||_ceeb .SdrTemplate !=0{return 0,nil ;};for _abfg :=0;_abfg < 2;_abfg ++{if _bccd =_cgce .WriteByte (byte (_ceeb .SdrATX [_abfg ]));_bccd !=nil {return _edec ,_cd .Wrapf (_bccd ,_gcfb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_abfg );
};_edec ++;if _bccd =_cgce .WriteByte (byte (_ceeb .SdrATY [_abfg ]));_bccd !=nil {return _edec ,_cd .Wrapf (_bccd ,_gcfb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_abfg );};_edec ++;};return _edec ,nil ;};func (_cfa *template1 )setIndex (_fae *_ecb .DecoderStats ){_fae .SetIndex (0x080)};
func (_dfgg *Header )writeSegmentDataLength (_eccfd _g .BinaryWriter )(_eegc int ,_egac error ){_fbag :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fbag ,uint32 (_dfgg .SegmentDataLength ));if _eegc ,_egac =_eccfd .Write (_fbag );_egac !=nil {return 0,_cd .Wrap (_egac ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _eegc ,nil ;};func (_eagfd *SymbolDictionary )decodeAggregate (_abca ,_gfbb uint32 )error {var (_dcge int64 ;_aabe error ;);if _eagfd .IsHuffmanEncoded {_dcge ,_aabe =_eagfd .huffDecodeRefAggNInst ();if _aabe !=nil {return _aabe ;};}else {_egeg ,_eegf :=_eagfd ._dbgeb .DecodeInt (_eagfd ._adca );
if _eegf !=nil {return _eegf ;};_dcge =int64 (_egeg );};if _dcge > 1{return _eagfd .decodeThroughTextRegion (_abca ,_gfbb ,uint32 (_dcge ));}else if _dcge ==1{return _eagfd .decodeRefinedSymbol (_abca ,_gfbb );};return nil ;};func (_ac *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ac .Template .setIndex (_ac ._de );
return _ac ._ce .DecodeBit (_ac ._de );};func (_dgggg *SymbolDictionary )setSymbolsArray ()error {if _dgggg ._feeg ==nil {if _aabgb :=_dgggg .retrieveImportSymbols ();_aabgb !=nil {return _aabgb ;};};if _dgggg ._dabb ==nil {_dgggg ._dabb =append (_dgggg ._dabb ,_dgggg ._feeg ...);
};return nil ;};type EndOfStripe struct{_cg *_g .Reader ;_be int ;};func (_fbcd *TableSegment )HtPS ()int32 {return _fbcd ._cec };func (_dgcb *SymbolDictionary )decodeHeightClassBitmap (_eggc *_bb .Bitmap ,_dagf int64 ,_fbc int ,_eabe []int )error {for _fbcc :=_dagf ;
_fbcc < int64 (_dgcb ._dgb );_fbcc ++{var _bfaea int ;for _abced :=_dagf ;_abced <=_fbcc -1;_abced ++{_bfaea +=_eabe [_abced ];};_dfba :=_eb .Rect (_bfaea ,0,_bfaea +_eabe [_fbcc ],_fbc );_dgdb ,_gfaf :=_bb .Extract (_dfba ,_eggc );if _gfaf !=nil {return _gfaf ;
};_dgcb ._cdgd [_fbcc ]=_dgdb ;_dgcb ._dabb =append (_dgcb ._dabb ,_dgdb );};return nil ;};func (_ecacf *TextRegion )symbolIDCodeLengths ()error {var (_cafa []*_afb .Code ;_bddg uint64 ;_aaega _afb .Tabler ;_dccg error ;);for _acef :=0;_acef < 35;_acef ++{_bddg ,_dccg =_ecacf ._aafc .ReadBits (4);
if _dccg !=nil {return _dccg ;};_edbf :=int (_bddg &0xf);if _edbf > 0{_cafa =append (_cafa ,_afb .NewCode (int32 (_edbf ),0,int32 (_acef ),false ));};};_aaega ,_dccg =_afb .NewFixedSizeTable (_cafa );if _dccg !=nil {return _dccg ;};var (_edae int64 ;_bedab uint32 ;
_geag []*_afb .Code ;_deeb int64 ;);for _bedab < _ecacf .NumberOfSymbols {_deeb ,_dccg =_aaega .Decode (_ecacf ._aafc );if _dccg !=nil {return _dccg ;};if _deeb < 32{if _deeb > 0{_geag =append (_geag ,_afb .NewCode (int32 (_deeb ),0,int32 (_bedab ),false ));
};_edae =_deeb ;_bedab ++;}else {var _dacg ,_defda int64 ;switch _deeb {case 32:_bddg ,_dccg =_ecacf ._aafc .ReadBits (2);if _dccg !=nil {return _dccg ;};_dacg =3+int64 (_bddg );if _bedab > 0{_defda =_edae ;};case 33:_bddg ,_dccg =_ecacf ._aafc .ReadBits (3);
if _dccg !=nil {return _dccg ;};_dacg =3+int64 (_bddg );case 34:_bddg ,_dccg =_ecacf ._aafc .ReadBits (7);if _dccg !=nil {return _dccg ;};_dacg =11+int64 (_bddg );};for _bdfg :=0;_bdfg < int (_dacg );_bdfg ++{if _defda > 0{_geag =append (_geag ,_afb .NewCode (int32 (_defda ),0,int32 (_bedab ),false ));
};_bedab ++;};};};_ecacf ._aafc .Align ();_ecacf ._cegb ,_dccg =_afb .NewFixedSizeTable (_geag );return _dccg ;};func (_efgd *Header )GetSegmentData ()(Segmenter ,error ){var _ffee Segmenter ;if _efgd .SegmentData !=nil {_ffee =_efgd .SegmentData ;};if _ffee ==nil {_fegd ,_gaec :=_decb [_efgd .Type ];
if !_gaec {return nil ,_ea .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_efgd .Type ,_efgd .Type );};_ffee =_fegd ();
_bc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_efgd .SegmentNumber ,_efgd .SegmentDataStartOffset );
_aeca ,_eaag :=_efgd .subInputReader ();if _eaag !=nil {return nil ,_eaag ;};if _agbe :=_ffee .Init (_efgd ,_aeca );_agbe !=nil {_bc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_agbe ,_ffee );
return nil ,_agbe ;};_efgd .SegmentData =_ffee ;};return _ffee ,nil ;};func (_ecd *GenericRefinementRegion )decodeTypicalPredictedLine (_bae ,_acb ,_dea ,_cc ,_fdg ,_gc int )error {_abe :=_bae -int (_ecd .ReferenceDY );_gda :=_ecd .ReferenceBitmap .GetByteIndex (0,_abe );
_ad :=_ecd .RegionBitmap .GetByteIndex (0,_bae );var _eab error ;switch _ecd .TemplateID {case 0:_eab =_ecd .decodeTypicalPredictedLineTemplate0 (_bae ,_acb ,_dea ,_cc ,_fdg ,_gc ,_ad ,_abe ,_gda );case 1:_eab =_ecd .decodeTypicalPredictedLineTemplate1 (_bae ,_acb ,_dea ,_cc ,_fdg ,_gc ,_ad ,_abe ,_gda );
};return _eab ;};type templater interface{form (_gga ,_ddd ,_gaf ,_aegc ,_fdd int16 )int16 ;setIndex (_fdc *_ecb .DecoderStats );};func (_cdeb *TextRegion )readHuffmanFlags ()error {var (_dbab int ;_dbabe uint64 ;_befc error ;);_ ,_befc =_cdeb ._aafc .ReadBit ();
if _befc !=nil {return _befc ;};_dbab ,_befc =_cdeb ._aafc .ReadBit ();if _befc !=nil {return _befc ;};_cdeb .SbHuffRSize =int8 (_dbab );_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;};_cdeb .SbHuffRDY =int8 (_dbabe )&0xf;_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);
if _befc !=nil {return _befc ;};_cdeb .SbHuffRDX =int8 (_dbabe )&0xf;_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;};_cdeb .SbHuffRDHeight =int8 (_dbabe )&0xf;_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;
};_cdeb .SbHuffRDWidth =int8 (_dbabe )&0xf;_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;};_cdeb .SbHuffDT =int8 (_dbabe )&0xf;_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;};_cdeb .SbHuffDS =int8 (_dbabe )&0xf;
_dbabe ,_befc =_cdeb ._aafc .ReadBits (2);if _befc !=nil {return _befc ;};_cdeb .SbHuffFS =int8 (_dbabe )&0xf;return nil ;};func (_eagf *GenericRegion )GetRegionBitmap ()(_dgd *_bb .Bitmap ,_fec error ){if _eagf .Bitmap !=nil {return _eagf .Bitmap ,nil ;
};if _eagf .IsMMREncoded {if _eagf ._ccff ==nil {_eagf ._ccff ,_fec =_fb .New (_eagf ._cea ,int (_eagf .RegionSegment .BitmapWidth ),int (_eagf .RegionSegment .BitmapHeight ),_eagf .DataOffset ,_eagf .DataLength );if _fec !=nil {return nil ,_fec ;};};_eagf .Bitmap ,_fec =_eagf ._ccff .UncompressMMR ();
return _eagf .Bitmap ,_fec ;};if _fec =_eagf .updateOverrideFlags ();_fec !=nil {return nil ,_fec ;};var _abc int ;if _eagf ._dda ==nil {_eagf ._dda ,_fec =_ecb .New (_eagf ._cea );if _fec !=nil {return nil ,_fec ;};};if _eagf ._egge ==nil {_eagf ._egge =_ecb .NewStats (65536,1);
};_eagf .Bitmap =_bb .New (int (_eagf .RegionSegment .BitmapWidth ),int (_eagf .RegionSegment .BitmapHeight ));_gcb :=int (uint32 (_eagf .Bitmap .Width +7)&(^uint32 (7)));for _eae :=0;_eae < _eagf .Bitmap .Height ;_eae ++{if _eagf .IsTPGDon {var _bac int ;
_bac ,_fec =_eagf .decodeSLTP ();if _fec !=nil {return nil ,_fec ;};_abc ^=_bac ;};if _abc ==1{if _eae > 0{if _fec =_eagf .copyLineAbove (_eae );_fec !=nil {return nil ,_fec ;};};}else {if _fec =_eagf .decodeLine (_eae ,_eagf .Bitmap .Width ,_gcb );_fec !=nil {return nil ,_fec ;
};};};return _eagf .Bitmap ,nil ;};func (_gag *GenericRefinementRegion )String ()string {_gfff :=&_b .Builder {};_gfff .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gfff .WriteString (_gag .RegionInfo .String ()+"\u000a");
_gfff .WriteString (_ea .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gag .IsTPGROn ));_gfff .WriteString (_ea .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_gag .TemplateID ));
_gfff .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gag .GrAtX ));_gfff .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gag .GrAtY ));
_gfff .WriteString (_ea .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_gag .ReferenceDX ));_gfff .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_gag .ReferenceDY ));
return _gfff .String ();};func (_bfa *GenericRefinementRegion )decodeTemplate (_fde ,_cdf ,_gfd ,_bbb ,_fgee ,_fbbf ,_fcad ,_fffa ,_dfc ,_cdff int ,_cfc templater )(_bgf error ){var (_aab ,_daaa ,_cfb ,_aff ,_bcb int16 ;_bgfb ,_dca ,_dcad ,_bgg int ;_eag byte ;
);if _dfc >=1&&(_dfc -1)< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -_bbb );if _bgf !=nil {return _bgf ;};_bgfb =int (_eag );};if _dfc >=0&&(_dfc )< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff );
if _bgf !=nil {return _bgf ;};_dca =int (_eag );};if _dfc >=-1&&(_dfc +1)< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff +_bbb );if _bgf !=nil {return _bgf ;};_dcad =int (_eag );};_cdff ++;if _fde >=1{_eag ,_bgf =_bfa .RegionBitmap .GetByte (_fffa -_gfd );
if _bgf !=nil {return _bgf ;};_bgg =int (_eag );};_fffa ++;_cbf :=_bfa .ReferenceDX %8;_cgb :=6+_cbf ;_dff :=_cdff %_bbb ;if _cgb >=0{if _cgb < 8{_aab =int16 (_bgfb >>uint (_cgb ))&0x07;};if _cgb < 8{_daaa =int16 (_dca >>uint (_cgb ))&0x07;};if _cgb < 8{_cfb =int16 (_dcad >>uint (_cgb ))&0x07;
};if _cgb ==6&&_dff > 1{if _dfc >=1&&(_dfc -1)< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -_bbb -2);if _bgf !=nil {return _bgf ;};_aab |=int16 (_eag <<2)&0x04;};if _dfc >=0&&_dfc < _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -2);
if _bgf !=nil {return _bgf ;};_daaa |=int16 (_eag <<2)&0x04;};if _dfc >=-1&&_dfc +1< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff +_bbb -2);if _bgf !=nil {return _bgf ;};_cfb |=int16 (_eag <<2)&0x04;};};if _cgb ==0{_bgfb =0;
_dca =0;_dcad =0;if _dff < _bbb -1{if _dfc >=1&&_dfc -1< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -_bbb );if _bgf !=nil {return _bgf ;};_bgfb =int (_eag );};if _dfc >=0&&_dfc < _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff );
if _bgf !=nil {return _bgf ;};_dca =int (_eag );};if _dfc >=-1&&_dfc +1< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff +_bbb );if _bgf !=nil {return _bgf ;};_dcad =int (_eag );};};_cdff ++;};}else {_aab =int16 (_bgfb <<1)&0x07;
_daaa =int16 (_dca <<1)&0x07;_cfb =int16 (_dcad <<1)&0x07;_bgfb =0;_dca =0;_dcad =0;if _dff < _bbb -1{if _dfc >=1&&_dfc -1< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -_bbb );if _bgf !=nil {return _bgf ;};_bgfb =int (_eag );
};if _dfc >=0&&_dfc < _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff );if _bgf !=nil {return _bgf ;};_dca =int (_eag );};if _dfc >=-1&&_dfc +1< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff +_bbb );
if _bgf !=nil {return _bgf ;};_dcad =int (_eag );};_cdff ++;};_aab |=int16 ((_bgfb >>7)&0x07);_daaa |=int16 ((_dca >>7)&0x07);_cfb |=int16 ((_dcad >>7)&0x07);};_aff =int16 (_bgg >>6);_bcb =0;_fcb :=(2-_cbf )%8;_bgfb <<=uint (_fcb );_dca <<=uint (_fcb );
_dcad <<=uint (_fcb );_bgg <<=2;var _fbe int ;for _eaa :=0;_eaa < _cdf ;_eaa ++{_cdg :=_eaa &0x07;_ffc :=_cfc .form (_aab ,_daaa ,_cfb ,_aff ,_bcb );if _bfa ._bea {_eag ,_bgf =_bfa .RegionBitmap .GetByte (_bfa .RegionBitmap .GetByteIndex (_eaa ,_fde ));
if _bgf !=nil {return _bgf ;};_bfa ._de .SetIndex (int32 (_bfa .overrideAtTemplate0 (int (_ffc ),_eaa ,_fde ,int (_eag ),_cdg )));}else {_bfa ._de .SetIndex (int32 (_ffc ));};_fbe ,_bgf =_bfa ._ce .DecodeBit (_bfa ._de );if _bgf !=nil {return _bgf ;};if _bgf =_bfa .RegionBitmap .SetPixel (_eaa ,_fde ,byte (_fbe ));
_bgf !=nil {return _bgf ;};_aab =((_aab <<1)|0x01&int16 (_bgfb >>7))&0x07;_daaa =((_daaa <<1)|0x01&int16 (_dca >>7))&0x07;_cfb =((_cfb <<1)|0x01&int16 (_dcad >>7))&0x07;_aff =((_aff <<1)|0x01&int16 (_bgg >>7))&0x07;_bcb =int16 (_fbe );if (_eaa -int (_bfa .ReferenceDX ))%8==5{_bgfb =0;
_dca =0;_dcad =0;if ((_eaa -int (_bfa .ReferenceDX ))/8)+1< _bfa .ReferenceBitmap .RowStride {if _dfc >=1&&(_dfc -1)< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff -_bbb );if _bgf !=nil {return _bgf ;};_bgfb =int (_eag );
};if _dfc >=0&&_dfc < _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff );if _bgf !=nil {return _bgf ;};_dca =int (_eag );};if _dfc >=-1&&(_dfc +1)< _bfa .ReferenceBitmap .Height {_eag ,_bgf =_bfa .ReferenceBitmap .GetByte (_cdff +_bbb );
if _bgf !=nil {return _bgf ;};_dcad =int (_eag );};};_cdff ++;}else {_bgfb <<=1;_dca <<=1;_dcad <<=1;};if _cdg ==5&&_fde >=1{if ((_eaa >>3)+1)>=_bfa .RegionBitmap .RowStride {_bgg =0;}else {_eag ,_bgf =_bfa .RegionBitmap .GetByte (_fffa -_gfd );if _bgf !=nil {return _bgf ;
};_bgg =int (_eag );};_fffa ++;}else {_bgg <<=1;};};return nil ;};func (_dd *EndOfStripe )LineNumber ()int {return _dd ._be };func (_bafa *PageInformationSegment )encodeStripingInformation (_gca _g .BinaryWriter )(_dbff int ,_fdda error ){const _cgf ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bafa .IsStripe {if _dbff ,_fdda =_gca .Write ([]byte {0x00,0x00});_fdda !=nil {return 0,_cd .Wrap (_fdda ,_cgf ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dbff ,nil ;};_ceac :=make ([]byte ,2);_a .BigEndian .PutUint16 (_ceac ,_bafa .MaxStripeSize |1<<15);
if _dbff ,_fdda =_gca .Write (_ceac );_fdda !=nil {return 0,_cd .Wrapf (_fdda ,_cgf ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bafa .MaxStripeSize );};return _dbff ,nil ;};func _ecdeg (_ccgc *_g .Reader ,_fddgb *Header )*TextRegion {_eefe :=&TextRegion {_aafc :_ccgc ,Header :_fddgb ,RegionInfo :NewRegionSegment (_ccgc )};
return _eefe ;};func (_bbaf *SymbolDictionary )Init (h *Header ,r *_g .Reader )error {_bbaf .Header =h ;_bbaf ._cgdga =r ;return _bbaf .parseHeader ();};func (_eccca *PageInformationSegment )parseHeader ()(_agga error ){_bc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _dddba ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _agga !=nil {_dddba +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_agga .Error ();}else {_dddba +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_bc .Log .Trace (_dddba );}();if _agga =_eccca .readWidthAndHeight ();
_agga !=nil {return _agga ;};if _agga =_eccca .readResolution ();_agga !=nil {return _agga ;};_ ,_agga =_eccca ._gcdg .ReadBit ();if _agga !=nil {return _agga ;};if _agga =_eccca .readCombinationOperatorOverrideAllowed ();_agga !=nil {return _agga ;};if _agga =_eccca .readRequiresAuxiliaryBuffer ();
_agga !=nil {return _agga ;};if _agga =_eccca .readCombinationOperator ();_agga !=nil {return _agga ;};if _agga =_eccca .readDefaultPixelValue ();_agga !=nil {return _agga ;};if _agga =_eccca .readContainsRefinement ();_agga !=nil {return _agga ;};if _agga =_eccca .readIsLossless ();
_agga !=nil {return _agga ;};if _agga =_eccca .readIsStriped ();_agga !=nil {return _agga ;};if _agga =_eccca .readMaxStripeSize ();_agga !=nil {return _agga ;};if _agga =_eccca .checkInput ();_agga !=nil {return _agga ;};_bc .Log .Trace ("\u0025\u0073",_eccca );
return nil ;};