//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_gb "errors";_ca "fmt";_fb "github.com/unidoc/unipdf/v3/common";_dg "github.com/unidoc/unipdf/v3/internal/bitwise";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_f "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gcc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_egc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_dgd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gee "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_gc "image";_d "io";_g "math";_eg "strings";_ge "time";);func (_b *EndOfStripe )parseHeader ()error {_geb ,_ba :=_b ._dga .ReadBits (32);
if _ba !=nil {return _ba ;};_b ._cg =int (_geb &_g .MaxInt32 );return nil ;};func (_ffdb *SymbolDictionary )setExportedSymbols (_eage []int ){for _fabc :=uint32 (0);_fabc < _ffdb ._bgefe +_ffdb .NumberOfNewSymbols ;_fabc ++{if _eage [_fabc ]==1{var _dbfg *_dc .Bitmap ;
if _fabc < _ffdb ._bgefe {_dbfg =_ffdb ._ggccg [_fabc ];}else {_dbfg =_ffdb ._gdbg [_fabc -_ffdb ._bgefe ];};_fb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_dbfg );
_ffdb ._egfag =append (_ffdb ._egfag ,_dbfg );};};};func (_ggcd *PatternDictionary )checkInput ()error {if _ggcd .HdpHeight < 1||_ggcd .HdpWidth < 1{return _gb .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ggcd .IsMMREncoded {if _ggcd .HDTemplate !=0{_fb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ec *EndOfStripe )Init (h *Header ,r *_dg .Reader )error {_ec ._dga =r ;return _ec .parseHeader ()};func (_dafc *HalftoneRegion )grayScaleDecoding (_gfa int )([][]int ,error ){var (_cec []int8 ;_caaa []int8 ;);if !_dafc .IsMMREncoded {_cec =make ([]int8 ,4);
_caaa =make ([]int8 ,4);if _dafc .HTemplate <=1{_cec [0]=3;}else if _dafc .HTemplate >=2{_cec [0]=2;};_caaa [0]=-1;_cec [1]=-3;_caaa [1]=-1;_cec [2]=2;_caaa [2]=-2;_cec [3]=-2;_caaa [3]=-2;};_cca :=make ([]*_dc .Bitmap ,_gfa );_gcb :=NewGenericRegion (_dafc ._fage );
_gcb .setParametersMMR (_dafc .IsMMREncoded ,_dafc .DataOffset ,_dafc .DataLength ,_dafc .HGridHeight ,_dafc .HGridWidth ,_dafc .HTemplate ,false ,_dafc .HSkipEnabled ,_cec ,_caaa );_ebbg :=_gfa -1;var _dbeb error ;_cca [_ebbg ],_dbeb =_gcb .GetRegionBitmap ();
if _dbeb !=nil {return nil ,_dbeb ;};for _ebbg > 0{_ebbg --;_gcb .Bitmap =nil ;_cca [_ebbg ],_dbeb =_gcb .GetRegionBitmap ();if _dbeb !=nil {return nil ,_dbeb ;};if _dbeb =_dafc .combineGrayscalePlanes (_cca ,_ebbg );_dbeb !=nil {return nil ,_dbeb ;};};
return _dafc .computeGrayScalePlanes (_cca ,_gfa );};func (_daad *SymbolDictionary )getUserTable (_fafb int )(_gcc .Tabler ,error ){var _bddc int ;for _ ,_acba :=range _daad .Header .RTSegments {if _acba .Type ==53{if _bddc ==_fafb {_ffbdb ,_ggad :=_acba .GetSegmentData ();
if _ggad !=nil {return nil ,_ggad ;};_bbcc :=_ffbdb .(_gcc .BasicTabler );return _gcc .NewEncodedTable (_bbcc );};_bddc ++;};};return nil ,nil ;};func (_acge *GenericRefinementRegion )readAtPixels ()error {_acge .GrAtX =make ([]int8 ,2);_acge .GrAtY =make ([]int8 ,2);
_dff ,_bcb :=_acge ._fa .ReadByte ();if _bcb !=nil {return _bcb ;};_acge .GrAtX [0]=int8 (_dff );_dff ,_bcb =_acge ._fa .ReadByte ();if _bcb !=nil {return _bcb ;};_acge .GrAtY [0]=int8 (_dff );_dff ,_bcb =_acge ._fa .ReadByte ();if _bcb !=nil {return _bcb ;
};_acge .GrAtX [1]=int8 (_dff );_dff ,_bcb =_acge ._fa .ReadByte ();if _bcb !=nil {return _bcb ;};_acge .GrAtY [1]=int8 (_dff );return nil ;};func (_dbb *GenericRefinementRegion )parseHeader ()(_gcff error ){_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ffa :=_ge .Now ();defer func (){if _gcff ==nil {_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ge .Since (_ffa ).Nanoseconds ());
}else {_fb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gcff );
};}();if _gcff =_dbb .RegionInfo .parseHeader ();_gcff !=nil {return _gcff ;};_ ,_gcff =_dbb ._fa .ReadBits (6);if _gcff !=nil {return _gcff ;};_dbb .IsTPGROn ,_gcff =_dbb ._fa .ReadBool ();if _gcff !=nil {return _gcff ;};var _dag int ;_dag ,_gcff =_dbb ._fa .ReadBit ();
if _gcff !=nil {return _gcff ;};_dbb .TemplateID =int8 (_dag );switch _dbb .TemplateID {case 0:_dbb .Template =_dbb ._bd ;if _gcff =_dbb .readAtPixels ();_gcff !=nil {return _gcff ;};case 1:_dbb .Template =_dbb ._ef ;};return nil ;};func (_eb *GenericRefinementRegion )getGrReference ()(*_dc .Bitmap ,error ){segments :=_eb ._bf .RTSegments ;
if len (segments )==0{return nil ,_gb .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_dde ,_gf :=segments [0].GetSegmentData ();
if _gf !=nil {return nil ,_gf ;};_ga ,_gbc :=_dde .(Regioner );if !_gbc {return nil ,_ca .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dde );
};return _ga .GetRegionBitmap ();};func (_egbc *GenericRegion )setOverrideFlag (_gggg int ){_egbc .GBAtOverride [_gggg ]=true ;_egbc ._cgb =true ;};func (_cdfd *GenericRegion )decodeTemplate1 (_cgcc ,_ecfb ,_edg int ,_ceg ,_bbc int )(_bfc error ){const _fcbd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_eff ,_gbce int ;_bgae ,_bcf int ;_gggf byte ;_ffae ,_ege int ;);if _cgcc >=1{_gggf ,_bfc =_cdfd .Bitmap .GetByte (_bbc );if _bfc !=nil {return _dgd .Wrap (_bfc ,_fcbd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bgae =int (_gggf );};if _cgcc >=2{_gggf ,_bfc =_cdfd .Bitmap .GetByte (_bbc -_cdfd .Bitmap .RowStride );
if _bfc !=nil {return _dgd .Wrap (_bfc ,_fcbd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bcf =int (_gggf )<<5;};_eff =((_bgae >>1)&0x1f8)|((_bcf >>1)&0x1e00);for _eeda :=0;_eeda < _edg ;_eeda =_ffae {var (_gdeg byte ;_fab int ;);_ffae =_eeda +8;
if _fed :=_ecfb -_eeda ;_fed > 8{_fab =8;}else {_fab =_fed ;};if _cgcc > 0{_bgae <<=8;if _ffae < _ecfb {_gggf ,_bfc =_cdfd .Bitmap .GetByte (_bbc +1);if _bfc !=nil {return _dgd .Wrap (_bfc ,_fcbd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bgae |=int (_gggf );
};};if _cgcc > 1{_bcf <<=8;if _ffae < _ecfb {_gggf ,_bfc =_cdfd .Bitmap .GetByte (_bbc -_cdfd .Bitmap .RowStride +1);if _bfc !=nil {return _dgd .Wrap (_bfc ,_fcbd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bcf |=int (_gggf )<<5;};};for _ebfc :=0;
_ebfc < _fab ;_ebfc ++{if _cdfd ._cgb {_gbce =_cdfd .overrideAtTemplate1 (_eff ,_eeda +_ebfc ,_cgcc ,int (_gdeg ),_ebfc );_cdfd ._ccg .SetIndex (int32 (_gbce ));}else {_cdfd ._ccg .SetIndex (int32 (_eff ));};_ege ,_bfc =_cdfd ._fdd .DecodeBit (_cdfd ._ccg );
if _bfc !=nil {return _dgd .Wrap (_bfc ,_fcbd ,"");};_gdeg |=byte (_ege )<<uint (7-_ebfc );_aggbd :=uint (8-_ebfc );_eff =((_eff &0xefb)<<1)|_ege |((_bgae >>_aggbd )&0x8)|((_bcf >>_aggbd )&0x200);};if _bec :=_cdfd .Bitmap .SetByte (_ceg ,_gdeg );_bec !=nil {return _dgd .Wrap (_bec ,_fcbd ,"");
};_ceg ++;_bbc ++;};return nil ;};func (_eed *GenericRegion )Size ()int {return _eed .RegionSegment .Size ()+1+2*len (_eed .GBAtX )};func (_gbad *GenericRegion )overrideAtTemplate0b (_beab ,_caff ,_aced ,_baac ,_bfe ,_cdgb int )int {if _gbad .GBAtOverride [0]{_beab &=0xFFFD;
if _gbad .GBAtY [0]==0&&_gbad .GBAtX [0]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [0]&0x1))<<1;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [0]),_aced +int (_gbad .GBAtY [0])))<<1;};};if _gbad .GBAtOverride [1]{_beab &=0xDFFF;
if _gbad .GBAtY [1]==0&&_gbad .GBAtX [1]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [1]&0x1))<<13;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [1]),_aced +int (_gbad .GBAtY [1])))<<13;};};if _gbad .GBAtOverride [2]{_beab &=0xFDFF;
if _gbad .GBAtY [2]==0&&_gbad .GBAtX [2]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [2]&0x1))<<9;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [2]),_aced +int (_gbad .GBAtY [2])))<<9;};};if _gbad .GBAtOverride [3]{_beab &=0xBFFF;
if _gbad .GBAtY [3]==0&&_gbad .GBAtX [3]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [3]&0x1))<<14;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [3]),_aced +int (_gbad .GBAtY [3])))<<14;};};if _gbad .GBAtOverride [4]{_beab &=0xEFFF;
if _gbad .GBAtY [4]==0&&_gbad .GBAtX [4]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [4]&0x1))<<12;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [4]),_aced +int (_gbad .GBAtY [4])))<<12;};};if _gbad .GBAtOverride [5]{_beab &=0xFFDF;
if _gbad .GBAtY [5]==0&&_gbad .GBAtX [5]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [5]&0x1))<<5;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [5]),_aced +int (_gbad .GBAtY [5])))<<5;};};if _gbad .GBAtOverride [6]{_beab &=0xFFFB;
if _gbad .GBAtY [6]==0&&_gbad .GBAtX [6]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [6]&0x1))<<2;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [6]),_aced +int (_gbad .GBAtY [6])))<<2;};};if _gbad .GBAtOverride [7]{_beab &=0xFFF7;
if _gbad .GBAtY [7]==0&&_gbad .GBAtX [7]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [7]&0x1))<<3;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [7]),_aced +int (_gbad .GBAtY [7])))<<3;};};if _gbad .GBAtOverride [8]{_beab &=0xF7FF;
if _gbad .GBAtY [8]==0&&_gbad .GBAtX [8]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [8]&0x1))<<11;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [8]),_aced +int (_gbad .GBAtY [8])))<<11;};};if _gbad .GBAtOverride [9]{_beab &=0xFFEF;
if _gbad .GBAtY [9]==0&&_gbad .GBAtX [9]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [9]&0x1))<<4;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [9]),_aced +int (_gbad .GBAtY [9])))<<4;};};if _gbad .GBAtOverride [10]{_beab &=0x7FFF;
if _gbad .GBAtY [10]==0&&_gbad .GBAtX [10]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [10]&0x1))<<15;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [10]),_aced +int (_gbad .GBAtY [10])))<<15;};};if _gbad .GBAtOverride [11]{_beab &=0xFDFF;
if _gbad .GBAtY [11]==0&&_gbad .GBAtX [11]>=-int8 (_bfe ){_beab |=(_baac >>uint (int8 (_cdgb )-_gbad .GBAtX [11]&0x1))<<10;}else {_beab |=int (_gbad .getPixel (_caff +int (_gbad .GBAtX [11]),_aced +int (_gbad .GBAtY [11])))<<10;};};return _beab ;};func (_ecba *SymbolDictionary )setRefinementAtPixels ()error {if !_ecba .UseRefinementAggregation ||_ecba .SdrTemplate !=0{return nil ;
};if _cgbe :=_ecba .readRefinementAtPixels (2);_cgbe !=nil {return _cgbe ;};return nil ;};type Regioner interface{GetRegionBitmap ()(*_dc .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_ffacc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ffacc ._agcc };
func (_gdff *PageInformationSegment )checkInput ()error {if _gdff .PageBMHeight ==_g .MaxInt32 {if !_gdff .IsStripe {_fb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fafc *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _fafc .IsHuffmanEncoded {return _fafc .decodeHeightClassDeltaHeightWithHuffman ();};_gcdg ,_gbed :=_fafc ._eaed .DecodeInt (_fafc ._agdc );if _gbed !=nil {return 0,_gbed ;
};return int64 (_gcdg ),nil ;};func (_gfdbe *RegionSegment )Size ()int {return 17};func (_gea *GenericRegion )updateOverrideFlags ()error {const _ddf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gea .GBAtX ==nil ||_gea .GBAtY ==nil {return nil ;};if len (_gea .GBAtX )!=len (_gea .GBAtY ){return _dgd .Errorf (_ddf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gea .GBAtX ),len (_gea .GBAtY ));
};_gea .GBAtOverride =make ([]bool ,len (_gea .GBAtX ));switch _gea .GBTemplate {case 0:if !_gea .UseExtTemplates {if _gea .GBAtX [0]!=3||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};if _gea .GBAtX [1]!=-3||_gea .GBAtY [1]!=-1{_gea .setOverrideFlag (1);
};if _gea .GBAtX [2]!=2||_gea .GBAtY [2]!=-2{_gea .setOverrideFlag (2);};if _gea .GBAtX [3]!=-2||_gea .GBAtY [3]!=-2{_gea .setOverrideFlag (3);};}else {if _gea .GBAtX [0]!=-2||_gea .GBAtY [0]!=0{_gea .setOverrideFlag (0);};if _gea .GBAtX [1]!=0||_gea .GBAtY [1]!=-2{_gea .setOverrideFlag (1);
};if _gea .GBAtX [2]!=-2||_gea .GBAtY [2]!=-1{_gea .setOverrideFlag (2);};if _gea .GBAtX [3]!=-1||_gea .GBAtY [3]!=-2{_gea .setOverrideFlag (3);};if _gea .GBAtX [4]!=1||_gea .GBAtY [4]!=-2{_gea .setOverrideFlag (4);};if _gea .GBAtX [5]!=2||_gea .GBAtY [5]!=-1{_gea .setOverrideFlag (5);
};if _gea .GBAtX [6]!=-3||_gea .GBAtY [6]!=0{_gea .setOverrideFlag (6);};if _gea .GBAtX [7]!=-4||_gea .GBAtY [7]!=0{_gea .setOverrideFlag (7);};if _gea .GBAtX [8]!=2||_gea .GBAtY [8]!=-2{_gea .setOverrideFlag (8);};if _gea .GBAtX [9]!=3||_gea .GBAtY [9]!=-1{_gea .setOverrideFlag (9);
};if _gea .GBAtX [10]!=-2||_gea .GBAtY [10]!=-2{_gea .setOverrideFlag (10);};if _gea .GBAtX [11]!=-3||_gea .GBAtY [11]!=-1{_gea .setOverrideFlag (11);};};case 1:if _gea .GBAtX [0]!=3||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};case 2:if _gea .GBAtX [0]!=2||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);
};case 3:if _gea .GBAtX [0]!=2||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};};return nil ;};func (_dacdb *TextRegion )decodeRdx ()(int64 ,error ){const _aggd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _dacdb .IsHuffmanEncoded {if _dacdb .SbHuffRDX ==3{if _dacdb ._aefa ==nil {var (_gfef int ;
_fcbe error ;);if _dacdb .SbHuffFS ==3{_gfef ++;};if _dacdb .SbHuffDS ==3{_gfef ++;};if _dacdb .SbHuffDT ==3{_gfef ++;};if _dacdb .SbHuffRDWidth ==3{_gfef ++;};if _dacdb .SbHuffRDHeight ==3{_gfef ++;};_dacdb ._aefa ,_fcbe =_dacdb .getUserTable (_gfef );
if _fcbe !=nil {return 0,_dgd .Wrap (_fcbe ,_aggd ,"");};};return _dacdb ._aefa .Decode (_dacdb ._bgbd );};_faec ,_bfdga :=_gcc .GetStandardTable (14+int (_dacdb .SbHuffRDX ));if _bfdga !=nil {return 0,_dgd .Wrap (_bfdga ,_aggd ,"");};return _faec .Decode (_dacdb ._bgbd );
};_cfgc ,_ecfc :=_dacdb ._cfbf .DecodeInt (_dacdb ._dbdf );if _ecfc !=nil {return 0,_dgd .Wrap (_ecfc ,_aggd ,"");};return int64 (_cfgc ),nil ;};func (_cgab *Header )readHeaderLength (_fefg *_dg .Reader ,_dage int64 ){_cgab .HeaderLength =_fefg .AbsolutePosition ()-_dage ;
};func (_gffg *GenericRegion )getPixel (_gdfa ,_agdf int )int8 {if _gdfa < 0||_gdfa >=_gffg .Bitmap .Width {return 0;};if _agdf < 0||_agdf >=_gffg .Bitmap .Height {return 0;};if _gffg .Bitmap .GetPixel (_gdfa ,_agdf ){return 1;};return 0;};func (_fede *TextRegion )decodeRI ()(int64 ,error ){if !_fede .UseRefinement {return 0,nil ;
};if _fede .IsHuffmanEncoded {_bggb ,_efed :=_fede ._bgbd .ReadBit ();return int64 (_bggb ),_efed ;};_ccdb ,_cgcgc :=_fede ._cfbf .DecodeInt (_fede ._aacc );return int64 (_ccdb ),_cgcgc ;};func (_ebg *template0 )setIndex (_dac *_f .DecoderStats ){_dac .SetIndex (0x100)};
func (_feg *GenericRegion )copyLineAbove (_dfd int )error {_dea :=_dfd *_feg .Bitmap .RowStride ;_fcc :=_dea -_feg .Bitmap .RowStride ;for _gaf :=0;_gaf < _feg .Bitmap .RowStride ;_gaf ++{_fdf ,_ebbf :=_feg .Bitmap .GetByte (_fcc );if _ebbf !=nil {return _ebbf ;
};_fcc ++;if _ebbf =_feg .Bitmap .SetByte (_dea ,_fdf );_ebbf !=nil {return _ebbf ;};_dea ++;};return nil ;};func (_ggdg *Header )CleanSegmentData (){if _ggdg .SegmentData !=nil {_ggdg .SegmentData =nil ;};};type OrganizationType uint8 ;func (_afac *SymbolDictionary )readRefinementAtPixels (_fafa int )error {_afac .SdrATX =make ([]int8 ,_fafa );
_afac .SdrATY =make ([]int8 ,_fafa );var (_bcgd byte ;_bdge error ;);for _cggf :=0;_cggf < _fafa ;_cggf ++{_bcgd ,_bdge =_afac ._gbe .ReadByte ();if _bdge !=nil {return _bdge ;};_afac .SdrATX [_cggf ]=int8 (_bcgd );_bcgd ,_bdge =_afac ._gbe .ReadByte ();
if _bdge !=nil {return _bdge ;};_afac .SdrATY [_cggf ]=int8 (_bcgd );};return nil ;};type GenericRegion struct{_eac *_dg .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;
IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cgb bool ;Bitmap *_dc .Bitmap ;_fdd *_f .Decoder ;_ccg *_f .DecoderStats ;_agg *_egc .Decoder ;};func (_fcef *TextRegion )decodeSymbolInstances ()error {_fdfg ,_adgb :=_fcef .decodeStripT ();
if _adgb !=nil {return _adgb ;};var (_feaef int64 ;_ffff uint32 ;);for _ffff < _fcef .NumberOfSymbolInstances {_abgac ,_egffg :=_fcef .decodeDT ();if _egffg !=nil {return _egffg ;};_fdfg +=_abgac ;var _bfadg int64 ;_cbeg :=true ;_fcef ._bbdf =0;for {if _cbeg {_bfadg ,_egffg =_fcef .decodeDfs ();
if _egffg !=nil {return _egffg ;};_feaef +=_bfadg ;_fcef ._bbdf =_feaef ;_cbeg =false ;}else {_eaca ,_fbge :=_fcef .decodeIds ();if _gb .Is (_fbge ,_gee .ErrOOB ){break ;};if _fbge !=nil {return _fbge ;};if _ffff >=_fcef .NumberOfSymbolInstances {break ;
};_fcef ._bbdf +=_eaca +int64 (_fcef .SbDsOffset );};_dbec ,_accb :=_fcef .decodeCurrentT ();if _accb !=nil {return _accb ;};_gccea :=_fdfg +_dbec ;_bfeec ,_accb :=_fcef .decodeID ();if _accb !=nil {return _accb ;};_bfdg ,_accb :=_fcef .decodeRI ();if _accb !=nil {return _accb ;
};_gfag ,_accb :=_fcef .decodeIb (_bfdg ,_bfeec );if _accb !=nil {return _accb ;};if _accb =_fcef .blit (_gfag ,_gccea );_accb !=nil {return _accb ;};_ffff ++;};};return nil ;};func (_abf *TextRegion )decodeID ()(int64 ,error ){if _abf .IsHuffmanEncoded {if _abf ._cegg ==nil {_eaeea ,_dcb :=_abf ._bgbd .ReadBits (byte (_abf ._facfc ));
return int64 (_eaeea ),_dcb ;};return _abf ._cegg .Decode (_abf ._bgbd );};return _abf ._cfbf .DecodeIAID (uint64 (_abf ._facfc ),_abf ._gdba );};func (_cabc *SymbolDictionary )getSbSymCodeLen ()int8 {_gacfe :=int8 (_g .Ceil (_g .Log (float64 (_cabc ._bgefe +_cabc .NumberOfNewSymbols ))/_g .Log (2)));
if _cabc .IsHuffmanEncoded &&_gacfe < 1{return 1;};return _gacfe ;};type TextRegion struct{_bgbd *_dg .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _dc .CombinationOperator ;IsTransposed int8 ;
ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;
_bbdf int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_dc .Bitmap ;Symbols []*_dc .Bitmap ;_cfbf *_f .Decoder ;_cdgc *GenericRefinementRegion ;_fabg *_f .DecoderStats ;_geea *_f .DecoderStats ;_bgedd *_f .DecoderStats ;_gaea *_f .DecoderStats ;
_aacc *_f .DecoderStats ;_cgde *_f .DecoderStats ;_dgfa *_f .DecoderStats ;_gdba *_f .DecoderStats ;_dbdf *_f .DecoderStats ;_fbcd *_f .DecoderStats ;_edfc *_f .DecoderStats ;_facfc int8 ;_cegg *_gcc .FixedSizeTable ;Header *Header ;_eade _gcc .Tabler ;
_eadb _gcc .Tabler ;_facec _gcc .Tabler ;_afbad _gcc .Tabler ;_bfee _gcc .Tabler ;_aefa _gcc .Tabler ;_dcfcg _gcc .Tabler ;_bbcf _gcc .Tabler ;_aead ,_cagfa map[int ]int ;_dgda []int ;_bgfe *_dc .Points ;_cfage *_dc .Bitmaps ;_ecaf *_dd .IntSlice ;_dfg ,_efcf int ;
_eece *_dc .Boxes ;};func (_cgcg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cgcg .Template .setIndex (_cgcg ._a );return _cgcg ._df .DecodeBit (_cgcg ._a );};func (_abgd *HalftoneRegion )checkInput ()error {if _abgd .IsMMREncoded {if _abgd .HTemplate !=0{_fb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_abgd .HTemplate );
};if _abgd .HSkipEnabled {_fb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_abgd .HSkipEnabled );
};};return nil ;};type templater interface{form (_bbea ,_cfe ,_fcg ,_ced ,_fce int16 )int16 ;setIndex (_cffb *_f .DecoderStats );};func (_afb *HalftoneRegion )computeGrayScalePlanes (_ggb []*_dc .Bitmap ,_ddfc int )([][]int ,error ){_bbbf :=make ([][]int ,_afb .HGridHeight );
for _deg :=0;_deg < len (_bbbf );_deg ++{_bbbf [_deg ]=make ([]int ,_afb .HGridWidth );};for _bccf :=0;_bccf < int (_afb .HGridHeight );_bccf ++{for _cacec :=0;_cacec < int (_afb .HGridWidth );_cacec +=8{var _gfb int ;if _cfba :=int (_afb .HGridWidth )-_cacec ;
_cfba > 8{_gfb =8;}else {_gfb =_cfba ;};_ecef :=_ggb [0].GetByteIndex (_cacec ,_bccf );for _ged :=0;_ged < _gfb ;_ged ++{_egbea :=_ged +_cacec ;_bbbf [_bccf ][_egbea ]=0;for _fde :=0;_fde < _ddfc ;_fde ++{_aggc ,_beag :=_ggb [_fde ].GetByte (_ecef );if _beag !=nil {return nil ,_beag ;
};_ggge :=_aggc >>uint (7-_egbea &7);_bef :=_ggge &1;_gfea :=1<<uint (_fde );_fcdg :=int (_bef )*_gfea ;_bbbf [_bccf ][_egbea ]+=_fcdg ;};};};};return _bbbf ,nil ;};func (_bfec *PatternDictionary )setGbAtPixels (){if _bfec .HDTemplate ==0{_bfec .GBAtX =make ([]int8 ,4);
_bfec .GBAtY =make ([]int8 ,4);_bfec .GBAtX [0]=-int8 (_bfec .HdpWidth );_bfec .GBAtY [0]=0;_bfec .GBAtX [1]=-3;_bfec .GBAtY [1]=-1;_bfec .GBAtX [2]=2;_bfec .GBAtY [2]=-2;_bfec .GBAtX [3]=-2;_bfec .GBAtY [3]=-2;}else {_bfec .GBAtX =[]int8 {-int8 (_bfec .HdpWidth )};
_bfec .GBAtY =[]int8 {0};};};func (_abdb *SymbolDictionary )Encode (w _dg .BinaryWriter )(_fead int ,_abcf error ){const _dgcfe ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _abdb ==nil {return 0,_dgd .Error (_dgcfe ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fead ,_abcf =_abdb .encodeFlags (w );
_abcf !=nil {return _fead ,_dgd .Wrap (_abcf ,_dgcfe ,"");};_dfcc ,_abcf :=_abdb .encodeATFlags (w );if _abcf !=nil {return _fead ,_dgd .Wrap (_abcf ,_dgcfe ,"");};_fead +=_dfcc ;if _dfcc ,_abcf =_abdb .encodeRefinementATFlags (w );_abcf !=nil {return _fead ,_dgd .Wrap (_abcf ,_dgcfe ,"");
};_fead +=_dfcc ;if _dfcc ,_abcf =_abdb .encodeNumSyms (w );_abcf !=nil {return _fead ,_dgd .Wrap (_abcf ,_dgcfe ,"");};_fead +=_dfcc ;if _dfcc ,_abcf =_abdb .encodeSymbols (w );_abcf !=nil {return _fead ,_dgd .Wrap (_abcf ,_dgcfe ,"");};_fead +=_dfcc ;
return _fead ,nil ;};func (_gbd *Header )writeReferredToCount (_dabc _dg .BinaryWriter )(_dcggg int ,_agbe error ){const _eeeg ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_gbd .RTSNumbers =make ([]int ,len (_gbd .RTSegments ));
for _ccaf ,_dacf :=range _gbd .RTSegments {_gbd .RTSNumbers [_ccaf ]=int (_dacf .SegmentNumber );};if len (_gbd .RTSNumbers )<=4{var _bdga byte ;if len (_gbd .RetainBits )>=1{_bdga =_gbd .RetainBits [0];};_bdga |=byte (len (_gbd .RTSNumbers ))<<5;if _agbe =_dabc .WriteByte (_bdga );
_agbe !=nil {return 0,_dgd .Wrap (_agbe ,_eeeg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_bcef :=uint32 (len (_gbd .RTSNumbers ));_eccb :=make ([]byte ,4+_dd .Ceil (len (_gbd .RTSNumbers )+1,8));_bcef |=0x7<<29;
_e .BigEndian .PutUint32 (_eccb ,_bcef );copy (_eccb [1:],_gbd .RetainBits );_dcggg ,_agbe =_dabc .Write (_eccb );if _agbe !=nil {return 0,_dgd .Wrap (_agbe ,_eeeg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _dcggg ,nil ;
};func (_faa *GenericRegion )decodeTemplate0b (_ded ,_dee ,_ebaf int ,_bac ,_dgcg int )(_fegd error ){const _aaae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_cgd ,_agd int ;_bgf ,_abcd int ;_fbgb byte ;
_cdb int ;);if _ded >=1{_fbgb ,_fegd =_faa .Bitmap .GetByte (_dgcg );if _fegd !=nil {return _dgd .Wrap (_fegd ,_aaae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bgf =int (_fbgb );};if _ded >=2{_fbgb ,_fegd =_faa .Bitmap .GetByte (_dgcg -_faa .Bitmap .RowStride );
if _fegd !=nil {return _dgd .Wrap (_fegd ,_aaae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_abcd =int (_fbgb )<<6;};_cgd =(_bgf &0xf0)|(_abcd &0x3800);for _geeb :=0;_geeb < _ebaf ;_geeb =_cdb {var (_gccg byte ;_daa int ;);_cdb =_geeb +8;if _fbd :=_dee -_geeb ;
_fbd > 8{_daa =8;}else {_daa =_fbd ;};if _ded > 0{_bgf <<=8;if _cdb < _dee {_fbgb ,_fegd =_faa .Bitmap .GetByte (_dgcg +1);if _fegd !=nil {return _dgd .Wrap (_fegd ,_aaae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bgf |=int (_fbgb );};};if _ded > 1{_abcd <<=8;
if _cdb < _dee {_fbgb ,_fegd =_faa .Bitmap .GetByte (_dgcg -_faa .Bitmap .RowStride +1);if _fegd !=nil {return _dgd .Wrap (_fegd ,_aaae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_abcd |=int (_fbgb )<<6;};};for _def :=0;_def < _daa ;_def ++{_abbc :=uint (7-_def );
if _faa ._cgb {_agd =_faa .overrideAtTemplate0b (_cgd ,_geeb +_def ,_ded ,int (_gccg ),_def ,int (_abbc ));_faa ._ccg .SetIndex (int32 (_agd ));}else {_faa ._ccg .SetIndex (int32 (_cgd ));};var _gbf int ;_gbf ,_fegd =_faa ._fdd .DecodeBit (_faa ._ccg );
if _fegd !=nil {return _dgd .Wrap (_fegd ,_aaae ,"");};_gccg |=byte (_gbf <<_abbc );_cgd =((_cgd &0x7bf7)<<1)|_gbf |((_bgf >>_abbc )&0x10)|((_abcd >>_abbc )&0x800);};if _ddgf :=_faa .Bitmap .SetByte (_bac ,_gccg );_ddgf !=nil {return _dgd .Wrap (_ddgf ,_aaae ,"");
};_bac ++;_dgcg ++;};return nil ;};func (_eccbf *SymbolDictionary )setSymbolsArray ()error {if _eccbf ._ggccg ==nil {if _effd :=_eccbf .retrieveImportSymbols ();_effd !=nil {return _effd ;};};if _eccbf ._dadd ==nil {_eccbf ._dadd =append (_eccbf ._dadd ,_eccbf ._ggccg ...);
};return nil ;};func (_ac *GenericRefinementRegion )GetRegionBitmap ()(*_dc .Bitmap ,error ){var _cf error ;_fb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cf !=nil {_fb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cf );
}else {_fb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ac .RegionBitmap !=nil {return _ac .RegionBitmap ,nil ;};_fef :=0;if _ac .ReferenceBitmap ==nil {_ac .ReferenceBitmap ,_cf =_ac .getGrReference ();if _cf !=nil {return nil ,_cf ;};};if _ac ._df ==nil {_ac ._df ,_cf =_f .New (_ac ._fa );if _cf !=nil {return nil ,_cf ;
};};if _ac ._a ==nil {_ac ._a =_f .NewStats (8192,1);};_ac .RegionBitmap =_dc .New (int (_ac .RegionInfo .BitmapWidth ),int (_ac .RegionInfo .BitmapHeight ));if _ac .TemplateID ==0{if _cf =_ac .updateOverride ();_cf !=nil {return nil ,_cf ;};};_cgc :=(_ac .RegionBitmap .Width +7)&-8;
var _efb int ;if _ac .IsTPGROn {_efb =int (-_ac .ReferenceDY )*_ac .ReferenceBitmap .RowStride ;};_bg :=_efb +1;for _feb :=0;_feb < _ac .RegionBitmap .Height ;_feb ++{if _ac .IsTPGROn {_ea ,_cc :=_ac .decodeSLTP ();if _cc !=nil {return nil ,_cc ;};_fef ^=_ea ;
};if _fef ==0{_cf =_ac .decodeOptimized (_feb ,_ac .RegionBitmap .Width ,_ac .RegionBitmap .RowStride ,_ac .ReferenceBitmap .RowStride ,_cgc ,_efb ,_bg );if _cf !=nil {return nil ,_cf ;};}else {_cf =_ac .decodeTypicalPredictedLine (_feb ,_ac .RegionBitmap .Width ,_ac .RegionBitmap .RowStride ,_ac .ReferenceBitmap .RowStride ,_cgc ,_efb );
if _cf !=nil {return nil ,_cf ;};};};return _ac .RegionBitmap ,nil ;};func (_bcfe *TextRegion )setCodingStatistics ()error {if _bcfe ._fabg ==nil {_bcfe ._fabg =_f .NewStats (512,1);};if _bcfe ._geea ==nil {_bcfe ._geea =_f .NewStats (512,1);};if _bcfe ._bgedd ==nil {_bcfe ._bgedd =_f .NewStats (512,1);
};if _bcfe ._gaea ==nil {_bcfe ._gaea =_f .NewStats (512,1);};if _bcfe ._aacc ==nil {_bcfe ._aacc =_f .NewStats (512,1);};if _bcfe ._cgde ==nil {_bcfe ._cgde =_f .NewStats (512,1);};if _bcfe ._dgfa ==nil {_bcfe ._dgfa =_f .NewStats (512,1);};if _bcfe ._gdba ==nil {_bcfe ._gdba =_f .NewStats (1<<uint (_bcfe ._facfc ),1);
};if _bcfe ._dbdf ==nil {_bcfe ._dbdf =_f .NewStats (512,1);};if _bcfe ._fbcd ==nil {_bcfe ._fbcd =_f .NewStats (512,1);};if _bcfe ._cfbf ==nil {var _faeca error ;_bcfe ._cfbf ,_faeca =_f .New (_bcfe ._bgbd );if _faeca !=nil {return _faeca ;};};return nil ;
};type TableSegment struct{_bcfc *_dg .Reader ;_badg int32 ;_dcfcd int32 ;_dcdg int32 ;_adfg int32 ;_bebcc int32 ;};func (_deaf *SymbolDictionary )encodeSymbols (_fecag _dg .BinaryWriter )(_fegb int ,_afcb error ){const _cfga ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_cbac :=_ed .New ();_cbac .Init ();_agef ,_afcb :=_deaf ._befb .SelectByIndexes (_deaf ._dgae );if _afcb !=nil {return 0,_dgd .Wrap (_afcb ,_cfga ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_agbeg :=map[*_dc .Bitmap ]int {};for _egbbg ,_dgea :=range _agef .Values {_agbeg [_dgea ]=_egbbg ;
};_agef .SortByHeight ();var _dfed ,_fagf int ;_bebc ,_afcb :=_agef .GroupByHeight ();if _afcb !=nil {return 0,_dgd .Wrap (_afcb ,_cfga ,"");};for _ ,_ddaa :=range _bebc .Values {_bcca :=_ddaa .Values [0].Height ;_cgdf :=_bcca -_dfed ;if _afcb =_cbac .EncodeInteger (_ed .IADH ,_cgdf );
_afcb !=nil {return 0,_dgd .Wrapf (_afcb ,_cfga ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cgdf );};_dfed =_bcca ;_caef ,_agec :=_ddaa .GroupByWidth ();if _agec !=nil {return 0,_dgd .Wrapf (_agec ,_cfga ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bcca );
};var _efc int ;for _ ,_ddea :=range _caef .Values {for _ ,_gcagfd :=range _ddea .Values {_dcfcf :=_gcagfd .Width ;_ead :=_dcfcf -_efc ;if _agec =_cbac .EncodeInteger (_ed .IADW ,_ead );_agec !=nil {return 0,_dgd .Wrapf (_agec ,_cfga ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_ead );
};_efc +=_ead ;if _agec =_cbac .EncodeBitmap (_gcagfd ,false );_agec !=nil {return 0,_dgd .Wrapf (_agec ,_cfga ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_bcca ,_dcfcf );};_adeg :=_agbeg [_gcagfd ];
_deaf ._fcfc [_adeg ]=_fagf ;_fagf ++;};};if _agec =_cbac .EncodeOOB (_ed .IADW );_agec !=nil {return 0,_dgd .Wrap (_agec ,_cfga ,"\u0049\u0041\u0044\u0057");};};if _afcb =_cbac .EncodeInteger (_ed .IAEX ,0);_afcb !=nil {return 0,_dgd .Wrap (_afcb ,_cfga ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _afcb =_cbac .EncodeInteger (_ed .IAEX ,len (_deaf ._dgae ));_afcb !=nil {return 0,_dgd .Wrap (_afcb ,_cfga ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cbac .Final ();_dgbc ,_afcb :=_cbac .WriteTo (_fecag );
if _afcb !=nil {return 0,_dgd .Wrap (_afcb ,_cfga ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_dgbc ),nil ;};func (_cgcf *TextRegion )GetRegionInfo ()*RegionSegment {return _cgcf .RegionInfo };type Type int ;func (_bdg *HalftoneRegion )computeX (_dded ,_dffb int )int {return _bdg .shiftAndFill (int (_bdg .HGridX )+_dded *int (_bdg .HRegionY )+_dffb *int (_bdg .HRegionX ));
};func (_bcfb *PageInformationSegment )CombinationOperator ()_dc .CombinationOperator {return _bcfb ._dbcb ;};func (_cadcfb *SymbolDictionary )readNumberOfNewSymbols ()error {_caga ,_caaf :=_cadcfb ._gbe .ReadBits (32);if _caaf !=nil {return _caaf ;};_cadcfb .NumberOfNewSymbols =uint32 (_caga &_g .MaxUint32 );
return nil ;};func (_egeb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _egeb .IsHuffmanEncoded {switch _egeb .SdHuffDecodeWidthSelection {case 0:_dbd ,_abebe :=_gcc .GetStandardTable (2);if _abebe !=nil {return 0,_abebe ;};return _dbd .Decode (_egeb ._gbe );
case 1:_cbgd ,_dgcfa :=_gcc .GetStandardTable (3);if _dgcfa !=nil {return 0,_dgcfa ;};return _cbgd .Decode (_egeb ._gbe );case 3:if _egeb ._eacc ==nil {var _bgfc int ;if _egeb .SdHuffDecodeHeightSelection ==3{_bgfc ++;};_fcaa ,_eaee :=_egeb .getUserTable (_bgfc );
if _eaee !=nil {return 0,_eaee ;};_egeb ._eacc =_fcaa ;};return _egeb ._eacc .Decode (_egeb ._gbe );};}else {_deab ,_ggfe :=_egeb ._eaed .DecodeInt (_egeb ._dcge );if _ggfe !=nil {return 0,_ggfe ;};return int64 (_deab ),nil ;};return 0,nil ;};func (_dfea *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_dagb ,_cfae :=_dfea ._gcdec .ReadBit ();
if _cfae !=nil {return _cfae ;};if _dagb ==1{_dfea ._dfec =true ;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader *_dg .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_gfbd *TextRegion )encodeFlags (_ggcb _dg .BinaryWriter )(_gfbc int ,_bgac error ){const _ffga ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bgac =_ggcb .WriteBit (int (_gfbd .SbrTemplate ));_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bgac =_ggcb .WriteBits (uint64 (_gfbd .SbDsOffset ),5);_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _bgac =_ggcb .WriteBit (int (_gfbd .DefaultPixel ));_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bgac =_ggcb .WriteBits (uint64 (_gfbd .CombinationOperator ),2);
_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bgac =_ggcb .WriteBit (int (_gfbd .IsTransposed ));_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_bgac =_ggcb .WriteBits (uint64 (_gfbd .ReferenceCorner ),2);_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bgac =_ggcb .WriteBits (uint64 (_gfbd .LogSBStrips ),2);
_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _geab int ;if _gfbd .UseRefinement {_geab =1;};if _bgac =_ggcb .WriteBit (_geab );_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_geab =0;if _gfbd .IsHuffmanEncoded {_geab =1;};if _bgac =_ggcb .WriteBit (_geab );_bgac !=nil {return _gfbc ,_dgd .Wrap (_bgac ,_ffga ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gfbc =2;return _gfbc ,nil ;};func (_gcde *Header )writeFlags (_bddg _dg .BinaryWriter )(_fcde error ){const _edfd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_afdbg :=byte (_gcde .Type );if _fcde =_bddg .WriteByte (_afdbg );_fcde !=nil {return _dgd .Wrap (_fcde ,_edfd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gcde .RetainFlag &&!_gcde .PageAssociationFieldSize {return nil ;};if _fcde =_bddg .SkipBits (-8);_fcde !=nil {return _dgd .Wrap (_fcde ,_edfd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _dfbb int ;if _gcde .RetainFlag {_dfbb =1;};if _fcde =_bddg .WriteBit (_dfbb );_fcde !=nil {return _dgd .Wrap (_fcde ,_edfd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_dfbb =0;if _gcde .PageAssociationFieldSize {_dfbb =1;
};if _fcde =_bddg .WriteBit (_dfbb );_fcde !=nil {return _dgd .Wrap (_fcde ,_edfd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bddg .FinishByte ();return nil ;};func (_gcccf *SymbolDictionary )encodeATFlags (_fdag _dg .BinaryWriter )(_bbaf int ,_ccce error ){const _acae ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _gcccf .IsHuffmanEncoded ||_gcccf .SdTemplate !=0{return 0,nil ;};_fdcgf :=4;if _gcccf .SdTemplate !=0{_fdcgf =1;};for _beba :=0;_beba < _fdcgf ;_beba ++{if _ccce =_fdag .WriteByte (byte (_gcccf .SdATX [_beba ]));_ccce !=nil {return _bbaf ,_dgd .Wrapf (_ccce ,_acae ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_beba );
};_bbaf ++;if _ccce =_fdag .WriteByte (byte (_gcccf .SdATY [_beba ]));_ccce !=nil {return _bbaf ,_dgd .Wrapf (_ccce ,_acae ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_beba );};_bbaf ++;};return _bbaf ,nil ;};func (_cega *PatternDictionary )parseHeader ()error {_fb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_fb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_eedf :=_cega ._fgdf .ReadBits (5);if _eedf !=nil {return _eedf ;};if _eedf =_cega .readTemplate ();_eedf !=nil {return _eedf ;};if _eedf =_cega .readIsMMREncoded ();_eedf !=nil {return _eedf ;};if _eedf =_cega .readPatternWidthAndHeight ();_eedf !=nil {return _eedf ;
};if _eedf =_cega .readGrayMax ();_eedf !=nil {return _eedf ;};if _eedf =_cega .computeSegmentDataStructure ();_eedf !=nil {return _eedf ;};return _cega .checkInput ();};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );
};func (_aedc *PatternDictionary )readIsMMREncoded ()error {_cadc ,_degf :=_aedc ._fgdf .ReadBit ();if _degf !=nil {return _degf ;};if _cadc !=0{_aedc .IsMMREncoded =true ;};return nil ;};func (_efeg *Header )readSegmentPageAssociation (_eagb Documenter ,_gfdga *_dg .Reader ,_cgce uint64 ,_edded ...int )(_cafg error ){const _caaab ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_efeg .PageAssociationFieldSize {_cgba ,_dabe :=_gfdga .ReadBits (8);if _dabe !=nil {return _dgd .Wrap (_dabe ,_caaab ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_efeg .PageAssociation =int (_cgba &0xFF);}else {_fbdg ,_bgbc :=_gfdga .ReadBits (32);
if _bgbc !=nil {return _dgd .Wrap (_bgbc ,_caaab ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_efeg .PageAssociation =int (_fbdg &_g .MaxInt32 );};if _cgce ==0{return nil ;};if _efeg .PageAssociation !=0{_dgb ,_fdde :=_eagb .GetPage (_efeg .PageAssociation );
if _fdde !=nil {return _dgd .Wrap (_fdde ,_caaab ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cbdf int ;for _cada :=uint64 (0);_cada < _cgce ;_cada ++{_cbdf =_edded [_cada ];
_efeg .RTSegments [_cada ],_fdde =_dgb .GetSegment (_cbdf );if _fdde !=nil {var _adgg error ;_efeg .RTSegments [_cada ],_adgg =_eagb .GetGlobalSegment (_cbdf );if _adgg !=nil {return _dgd .Wrapf (_fdde ,_caaab ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_efeg .PageAssociation );
};};};return nil ;};for _gddae :=uint64 (0);_gddae < _cgce ;_gddae ++{_efeg .RTSegments [_gddae ],_cafg =_eagb .GetGlobalSegment (_edded [_gddae ]);if _cafg !=nil {return _dgd .Wrapf (_cafg ,_caaab ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_edded [_gddae ]);
};};return nil ;};func (_gba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dfb ,_cb ,_gcg ,_ebd ,_ad ,_efg ,_efe ,_fcb ,_cdf int )error {var (_af ,_gaa ,_de ,_cgf ,_bbe ,_gd int ;_fcd byte ;_gdf error ;);if _dfb > 0{_fcd ,_gdf =_gba .RegionBitmap .GetByte (_efe -_gcg );
if _gdf !=nil {return _gdf ;};_de =int (_fcd );};if _fcb > 0&&_fcb <=_gba .ReferenceBitmap .Height {_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf -_ebd +_efg );if _gdf !=nil {return _gdf ;};_cgf =int (_fcd )<<4;};if _fcb >=0&&_fcb < _gba .ReferenceBitmap .Height {_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf +_efg );
if _gdf !=nil {return _gdf ;};_bbe =int (_fcd )<<1;};if _fcb > -2&&_fcb < _gba .ReferenceBitmap .Height -1{_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf +_ebd +_efg );if _gdf !=nil {return _gdf ;};_gd =int (_fcd );};_af =((_de >>5)&0x6)|((_gd >>2)&0x30)|(_bbe &0x180)|(_cgf &0xc00);
var _cga int ;for _bbd :=0;_bbd < _ad ;_bbd =_cga {var _ae int ;_cga =_bbd +8;var _ebfd int ;if _ebfd =_cb -_bbd ;_ebfd > 8{_ebfd =8;};_ff :=_cga < _cb ;_gdd :=_cga < _gba .ReferenceBitmap .Width ;_ce :=_efg +1;if _dfb > 0{_fcd =0;if _ff {_fcd ,_gdf =_gba .RegionBitmap .GetByte (_efe -_gcg +1);
if _gdf !=nil {return _gdf ;};};_de =(_de <<8)|int (_fcd );};if _fcb > 0&&_fcb <=_gba .ReferenceBitmap .Height {var _abg int ;if _gdd {_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf -_ebd +_ce );if _gdf !=nil {return _gdf ;};_abg =int (_fcd )<<4;};_cgf =(_cgf <<8)|_abg ;
};if _fcb >=0&&_fcb < _gba .ReferenceBitmap .Height {var _cff int ;if _gdd {_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf +_ce );if _gdf !=nil {return _gdf ;};_cff =int (_fcd )<<1;};_bbe =(_bbe <<8)|_cff ;};if _fcb > -2&&_fcb < (_gba .ReferenceBitmap .Height -1){_fcd =0;
if _gdd {_fcd ,_gdf =_gba .ReferenceBitmap .GetByte (_cdf +_ebd +_ce );if _gdf !=nil {return _gdf ;};};_gd =(_gd <<8)|int (_fcd );};for _bbb :=0;_bbb < _ebfd ;_bbb ++{var _abe int ;_ffd :=false ;_afd :=(_af >>4)&0x1ff;if _afd ==0x1ff{_ffd =true ;_abe =1;
}else if _afd ==0x00{_ffd =true ;};if !_ffd {if _gba ._caa {_gaa =_gba .overrideAtTemplate0 (_af ,_bbd +_bbb ,_dfb ,_ae ,_bbb );_gba ._a .SetIndex (int32 (_gaa ));}else {_gba ._a .SetIndex (int32 (_af ));};_abe ,_gdf =_gba ._df .DecodeBit (_gba ._a );if _gdf !=nil {return _gdf ;
};};_fag :=uint (7-_bbb );_ae |=_abe <<_fag ;_af =((_af &0xdb6)<<1)|_abe |(_de >>_fag +5)&0x002|((_gd >>_fag +2)&0x010)|((_bbe >>_fag )&0x080)|((_cgf >>_fag )&0x400);};_gdf =_gba .RegionBitmap .SetByte (_efe ,byte (_ae ));if _gdf !=nil {return _gdf ;};
_efe ++;_cdf ++;};return nil ;};func (_gefc *Header )GetSegmentData ()(Segmenter ,error ){var _add Segmenter ;if _gefc .SegmentData !=nil {_add =_gefc .SegmentData ;};if _add ==nil {_acb ,_ddag :=_gcafc [_gefc .Type ];if !_ddag {return nil ,_ca .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gefc .Type ,_gefc .Type );
};_add =_acb ();_fb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gefc .SegmentNumber ,_gefc .SegmentDataStartOffset );
_ddff ,_bded :=_gefc .subInputReader ();if _bded !=nil {return nil ,_bded ;};if _aaef :=_add .Init (_gefc ,_ddff );_aaef !=nil {_fb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_aaef ,_add );
return nil ,_aaef ;};_gefc .SegmentData =_add ;};return _add ,nil ;};func (_cfef *GenericRegion )String ()string {_fefd :=&_eg .Builder {};_fefd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fefd .WriteString (_cfef .RegionSegment .String ()+"\u000a");
_fefd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cfef .UseExtTemplates ));_fefd .WriteString (_ca .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cfef .IsTPGDon ));
_fefd .WriteString (_ca .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cfef .GBTemplate ));_fefd .WriteString (_ca .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cfef .IsMMREncoded ));
_fefd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cfef .GBAtX ));_fefd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cfef .GBAtY ));
_fefd .WriteString (_ca .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cfef .GBAtOverride ));return _fefd .String ();};func (_ebcd *PageInformationSegment )readCombinationOperator ()error {_fcgf ,_afe :=_ebcd ._gcdec .ReadBits (2);
if _afe !=nil {return _afe ;};_ebcd ._dbcb =_dc .CombinationOperator (int (_fcgf ));return nil ;};func (_feda *TextRegion )Init (header *Header ,r *_dg .Reader )error {_feda .Header =header ;_feda ._bgbd =r ;_feda .RegionInfo =NewRegionSegment (_feda ._bgbd );
return _feda .parseHeader ();};type PageInformationSegment struct{_gcdec *_dg .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_agcc bool ;_dbcb _dc .CombinationOperator ;_dfec bool ;DefaultPixelValue uint8 ;_bccfb bool ;IsLossless bool ;
IsStripe bool ;MaxStripeSize uint16 ;};func (_dgcf *GenericRegion )GetRegionBitmap ()(_bbg *_dc .Bitmap ,_feff error ){if _dgcf .Bitmap !=nil {return _dgcf .Bitmap ,nil ;};if _dgcf .IsMMREncoded {if _dgcf ._agg ==nil {_dgcf ._agg ,_feff =_egc .New (_dgcf ._eac ,int (_dgcf .RegionSegment .BitmapWidth ),int (_dgcf .RegionSegment .BitmapHeight ),_dgcf .DataOffset ,_dgcf .DataLength );
if _feff !=nil {return nil ,_feff ;};};_dgcf .Bitmap ,_feff =_dgcf ._agg .UncompressMMR ();return _dgcf .Bitmap ,_feff ;};if _feff =_dgcf .updateOverrideFlags ();_feff !=nil {return nil ,_feff ;};var _ebc int ;if _dgcf ._fdd ==nil {_dgcf ._fdd ,_feff =_f .New (_dgcf ._eac );
if _feff !=nil {return nil ,_feff ;};};if _dgcf ._ccg ==nil {_dgcf ._ccg =_f .NewStats (65536,1);};_dgcf .Bitmap =_dc .New (int (_dgcf .RegionSegment .BitmapWidth ),int (_dgcf .RegionSegment .BitmapHeight ));_gff :=int (uint32 (_dgcf .Bitmap .Width +7)&(^uint32 (7)));
for _cace :=0;_cace < _dgcf .Bitmap .Height ;_cace ++{if _dgcf .IsTPGDon {var _bcc int ;_bcc ,_feff =_dgcf .decodeSLTP ();if _feff !=nil {return nil ,_feff ;};_ebc ^=_bcc ;};if _ebc ==1{if _cace > 0{if _feff =_dgcf .copyLineAbove (_cace );_feff !=nil {return nil ,_feff ;
};};}else {if _feff =_dgcf .decodeLine (_cace ,_dgcf .Bitmap .Width ,_gff );_feff !=nil {return nil ,_feff ;};};};return _dgcf .Bitmap ,nil ;};func (_dcfc *HalftoneRegion )GetRegionBitmap ()(*_dc .Bitmap ,error ){if _dcfc .HalftoneRegionBitmap !=nil {return _dcfc .HalftoneRegionBitmap ,nil ;
};var _gdgg error ;_dcfc .HalftoneRegionBitmap =_dc .New (int (_dcfc .RegionSegment .BitmapWidth ),int (_dcfc .RegionSegment .BitmapHeight ));if _dcfc .Patterns ==nil ||len (_dcfc .Patterns )==0{_dcfc .Patterns ,_gdgg =_dcfc .GetPatterns ();if _gdgg !=nil {return nil ,_gdgg ;
};};if _dcfc .HDefaultPixel ==1{_dcfc .HalftoneRegionBitmap .SetDefaultPixel ();};_agc :=_g .Ceil (_g .Log (float64 (len (_dcfc .Patterns )))/_g .Log (2));_ddb :=int (_agc );var _fecd [][]int ;_fecd ,_gdgg =_dcfc .grayScaleDecoding (_ddb );if _gdgg !=nil {return nil ,_gdgg ;
};if _gdgg =_dcfc .renderPattern (_fecd );_gdgg !=nil {return nil ,_gdgg ;};return _dcfc .HalftoneRegionBitmap ,nil ;};func (_dbeca *TextRegion )decodeRdh ()(int64 ,error ){const _dbbg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _dbeca .IsHuffmanEncoded {if _dbeca .SbHuffRDHeight ==3{if _dbeca ._bfee ==nil {var (_ggeg int ;
_cffe error ;);if _dbeca .SbHuffFS ==3{_ggeg ++;};if _dbeca .SbHuffDS ==3{_ggeg ++;};if _dbeca .SbHuffDT ==3{_ggeg ++;};if _dbeca .SbHuffRDWidth ==3{_ggeg ++;};_dbeca ._bfee ,_cffe =_dbeca .getUserTable (_ggeg );if _cffe !=nil {return 0,_dgd .Wrap (_cffe ,_dbbg ,"");
};};return _dbeca ._bfee .Decode (_dbeca ._bgbd );};_ebfbf ,_fgaa :=_gcc .GetStandardTable (14+int (_dbeca .SbHuffRDHeight ));if _fgaa !=nil {return 0,_dgd .Wrap (_fgaa ,_dbbg ,"");};return _ebfbf .Decode (_dbeca ._bgbd );};_dfcb ,_addf :=_dbeca ._cfbf .DecodeInt (_dbeca ._dgfa );
if _addf !=nil {return 0,_dgd .Wrap (_addf ,_dbbg ,"");};return int64 (_dfcb ),nil ;};func (_edff *GenericRegion )setParametersWithAt (_gab bool ,_bdec byte ,_acdde ,_feaf bool ,_dbe ,_adcg []int8 ,_aafbd ,_ggc uint32 ,_cgfa *_f .DecoderStats ,_cdbf *_f .Decoder ){_edff .IsMMREncoded =_gab ;
_edff .GBTemplate =_bdec ;_edff .IsTPGDon =_acdde ;_edff .GBAtX =_dbe ;_edff .GBAtY =_adcg ;_edff .RegionSegment .BitmapHeight =_ggc ;_edff .RegionSegment .BitmapWidth =_aafbd ;_edff ._agg =nil ;_edff .Bitmap =nil ;if _cgfa !=nil {_edff ._ccg =_cgfa ;};
if _cdbf !=nil {_edff ._fdd =_cdbf ;};_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_edff );
};func (_cbgc *SymbolDictionary )decodeRefinedSymbol (_gcdd ,_cfcd uint32 )error {var (_fdgc int ;_fdcf ,_bcag int32 ;);if _cbgc .IsHuffmanEncoded {_afcc ,_afbe :=_cbgc ._gbe .ReadBits (byte (_cbgc ._gac ));if _afbe !=nil {return _afbe ;};_fdgc =int (_afcc );
_eccbe ,_afbe :=_gcc .GetStandardTable (15);if _afbe !=nil {return _afbe ;};_bfbg ,_afbe :=_eccbe .Decode (_cbgc ._gbe );if _afbe !=nil {return _afbe ;};_fdcf =int32 (_bfbg );_bfbg ,_afbe =_eccbe .Decode (_cbgc ._gbe );if _afbe !=nil {return _afbe ;};_bcag =int32 (_bfbg );
_eccbe ,_afbe =_gcc .GetStandardTable (1);if _afbe !=nil {return _afbe ;};if _ ,_afbe =_eccbe .Decode (_cbgc ._gbe );_afbe !=nil {return _afbe ;};_cbgc ._gbe .Align ();}else {_cbde ,_eda :=_cbgc ._eaed .DecodeIAID (uint64 (_cbgc ._gac ),_cbgc ._fgdd );
if _eda !=nil {return _eda ;};_fdgc =int (_cbde );_fdcf ,_eda =_cbgc ._eaed .DecodeInt (_cbgc ._dgec );if _eda !=nil {return _eda ;};_bcag ,_eda =_cbgc ._eaed .DecodeInt (_cbgc ._eagcc );if _eda !=nil {return _eda ;};};if _dacg :=_cbgc .setSymbolsArray ();
_dacg !=nil {return _dacg ;};_cedb :=_cbgc ._dadd [_fdgc ];if _gcfed :=_cbgc .decodeNewSymbols (_gcdd ,_cfcd ,_cedb ,_fdcf ,_bcag );_gcfed !=nil {return _gcfed ;};if _cbgc .IsHuffmanEncoded {_cbgc ._gbe .Align ();};return nil ;};func (_ggfd *PageInformationSegment )readContainsRefinement ()error {_gga ,_cabd :=_ggfd ._gcdec .ReadBit ();
if _cabd !=nil {return _cabd ;};if _gga ==1{_ggfd ._bccfb =true ;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_ecfe *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ecfe ._acee ==nil {var (_bfbc int ;_acgd error ;);if _ecfe .SdHuffDecodeHeightSelection ==3{_bfbc ++;
};if _ecfe .SdHuffDecodeWidthSelection ==3{_bfbc ++;};_ecfe ._acee ,_acgd =_ecfe .getUserTable (_bfbc );if _acgd !=nil {return 0,_acgd ;};};return _ecfe ._acee .Decode (_ecfe ._gbe );};var _ templater =&template0 {};func (_bgb *GenericRegion )Encode (w _dg .BinaryWriter )(_abc int ,_aec error ){const _fdb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _bgb .Bitmap ==nil {return 0,_dgd .Error (_fdb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_abef ,_aec :=_bgb .RegionSegment .Encode (w );if _aec !=nil {return 0,_dgd .Wrap (_aec ,_fdb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_abc +=_abef ;if _aec =w .SkipBits (4);_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bfa int ;if _bgb .IsTPGDon {_bfa =1;};if _aec =w .WriteBit (_bfa );
_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bfa =0;if _aec =w .WriteBit (int (_bgb .GBTemplate >>1)&0x01);_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _aec =w .WriteBit (int (_bgb .GBTemplate )&0x01);_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bgb .UseMMR {_bfa =1;};if _aec =w .WriteBit (_bfa );
_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_abc ++;if _abef ,_aec =_bgb .writeGBAtPixels (w );_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"");};_abc +=_abef ;_dfbe :=_ed .New ();
if _aec =_dfbe .EncodeBitmap (_bgb .Bitmap ,_bgb .IsTPGDon );_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"");};_dfbe .Final ();var _abga int64 ;if _abga ,_aec =_dfbe .WriteTo (w );_aec !=nil {return _abc ,_dgd .Wrap (_aec ,_fdb ,"");};_abc +=int (_abga );
return _abc ,nil ;};func (_efff *SymbolDictionary )setRetainedCodingContexts (_bdgb *SymbolDictionary ){_efff ._eaed =_bdgb ._eaed ;_efff .IsHuffmanEncoded =_bdgb .IsHuffmanEncoded ;_efff .UseRefinementAggregation =_bdgb .UseRefinementAggregation ;_efff .SdTemplate =_bdgb .SdTemplate ;
_efff .SdrTemplate =_bdgb .SdrTemplate ;_efff .SdATX =_bdgb .SdATX ;_efff .SdATY =_bdgb .SdATY ;_efff .SdrATX =_bdgb .SdrATX ;_efff .SdrATY =_bdgb .SdrATY ;_efff ._ebfb =_bdgb ._ebfb ;};func (_egf *GenericRefinementRegion )decodeTemplate (_adb ,_fgg ,_fac ,_gdcg ,_efbb ,_gdda ,_fee ,_bda ,_eaf ,_aaf int ,_cea templater )(_gfd error ){var (_db ,_egg ,_aee ,_gcf ,_ebb int16 ;
_ccb ,_cfg ,_ace ,_dgc int ;_gecd byte ;);if _eaf >=1&&(_eaf -1)< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -_gdcg );if _gfd !=nil {return _gfd ;};_ccb =int (_gecd );};if _eaf >=0&&(_eaf )< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf );
if _gfd !=nil {return _gfd ;};_cfg =int (_gecd );};if _eaf >=-1&&(_eaf +1)< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf +_gdcg );if _gfd !=nil {return _gfd ;};_ace =int (_gecd );};_aaf ++;if _adb >=1{_gecd ,_gfd =_egf .RegionBitmap .GetByte (_bda -_fac );
if _gfd !=nil {return _gfd ;};_dgc =int (_gecd );};_bda ++;_fbc :=_egf .ReferenceDX %8;_dfc :=6+_fbc ;_efgf :=_aaf %_gdcg ;if _dfc >=0{if _dfc < 8{_db =int16 (_ccb >>uint (_dfc ))&0x07;};if _dfc < 8{_egg =int16 (_cfg >>uint (_dfc ))&0x07;};if _dfc < 8{_aee =int16 (_ace >>uint (_dfc ))&0x07;
};if _dfc ==6&&_efgf > 1{if _eaf >=1&&(_eaf -1)< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -_gdcg -2);if _gfd !=nil {return _gfd ;};_db |=int16 (_gecd <<2)&0x04;};if _eaf >=0&&_eaf < _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -2);
if _gfd !=nil {return _gfd ;};_egg |=int16 (_gecd <<2)&0x04;};if _eaf >=-1&&_eaf +1< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf +_gdcg -2);if _gfd !=nil {return _gfd ;};_aee |=int16 (_gecd <<2)&0x04;};};if _dfc ==0{_ccb =0;
_cfg =0;_ace =0;if _efgf < _gdcg -1{if _eaf >=1&&_eaf -1< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -_gdcg );if _gfd !=nil {return _gfd ;};_ccb =int (_gecd );};if _eaf >=0&&_eaf < _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf );
if _gfd !=nil {return _gfd ;};_cfg =int (_gecd );};if _eaf >=-1&&_eaf +1< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf +_gdcg );if _gfd !=nil {return _gfd ;};_ace =int (_gecd );};};_aaf ++;};}else {_db =int16 (_ccb <<1)&0x07;
_egg =int16 (_cfg <<1)&0x07;_aee =int16 (_ace <<1)&0x07;_ccb =0;_cfg =0;_ace =0;if _efgf < _gdcg -1{if _eaf >=1&&_eaf -1< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -_gdcg );if _gfd !=nil {return _gfd ;};_ccb =int (_gecd );
};if _eaf >=0&&_eaf < _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf );if _gfd !=nil {return _gfd ;};_cfg =int (_gecd );};if _eaf >=-1&&_eaf +1< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf +_gdcg );
if _gfd !=nil {return _gfd ;};_ace =int (_gecd );};_aaf ++;};_db |=int16 ((_ccb >>7)&0x07);_egg |=int16 ((_cfg >>7)&0x07);_aee |=int16 ((_ace >>7)&0x07);};_gcf =int16 (_dgc >>6);_ebb =0;_cgcb :=(2-_fbc )%8;_ccb <<=uint (_cgcb );_cfg <<=uint (_cgcb );_ace <<=uint (_cgcb );
_dgc <<=2;var _fggc int ;for _ggd :=0;_ggd < _fgg ;_ggd ++{_fbf :=_ggd &0x07;_acd :=_cea .form (_db ,_egg ,_aee ,_gcf ,_ebb );if _egf ._caa {_gecd ,_gfd =_egf .RegionBitmap .GetByte (_egf .RegionBitmap .GetByteIndex (_ggd ,_adb ));if _gfd !=nil {return _gfd ;
};_egf ._a .SetIndex (int32 (_egf .overrideAtTemplate0 (int (_acd ),_ggd ,_adb ,int (_gecd ),_fbf )));}else {_egf ._a .SetIndex (int32 (_acd ));};_fggc ,_gfd =_egf ._df .DecodeBit (_egf ._a );if _gfd !=nil {return _gfd ;};if _gfd =_egf .RegionBitmap .SetPixel (_ggd ,_adb ,byte (_fggc ));
_gfd !=nil {return _gfd ;};_db =((_db <<1)|0x01&int16 (_ccb >>7))&0x07;_egg =((_egg <<1)|0x01&int16 (_cfg >>7))&0x07;_aee =((_aee <<1)|0x01&int16 (_ace >>7))&0x07;_gcf =((_gcf <<1)|0x01&int16 (_dgc >>7))&0x07;_ebb =int16 (_fggc );if (_ggd -int (_egf .ReferenceDX ))%8==5{_ccb =0;
_cfg =0;_ace =0;if ((_ggd -int (_egf .ReferenceDX ))/8)+1< _egf .ReferenceBitmap .RowStride {if _eaf >=1&&(_eaf -1)< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf -_gdcg );if _gfd !=nil {return _gfd ;};_ccb =int (_gecd );
};if _eaf >=0&&_eaf < _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf );if _gfd !=nil {return _gfd ;};_cfg =int (_gecd );};if _eaf >=-1&&(_eaf +1)< _egf .ReferenceBitmap .Height {_gecd ,_gfd =_egf .ReferenceBitmap .GetByte (_aaf +_gdcg );
if _gfd !=nil {return _gfd ;};_ace =int (_gecd );};};_aaf ++;}else {_ccb <<=1;_cfg <<=1;_ace <<=1;};if _fbf ==5&&_adb >=1{if ((_ggd >>3)+1)>=_egf .RegionBitmap .RowStride {_dgc =0;}else {_gecd ,_gfd =_egf .RegionBitmap .GetByte (_bda -_fac );if _gfd !=nil {return _gfd ;
};_dgc =int (_gecd );};_bda ++;}else {_dgc <<=1;};};return nil ;};func (_ebcag *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_agdb int ;_cecec int32 ;_cbbd error ;_egcd =int32 (_ebcag ._bgefe +_ebcag .NumberOfNewSymbols );_bbgc =make ([]int ,_egcd );
);for _ebbfe :=int32 (0);_ebbfe < _egcd ;_ebbfe +=_cecec {if _ebcag .IsHuffmanEncoded {_fcfe ,_ffad :=_gcc .GetStandardTable (1);if _ffad !=nil {return nil ,_ffad ;};_edfdg ,_ffad :=_fcfe .Decode (_ebcag ._gbe );if _ffad !=nil {return nil ,_ffad ;};_cecec =int32 (_edfdg );
}else {_cecec ,_cbbd =_ebcag ._eaed .DecodeInt (_ebcag ._fggcc );if _cbbd !=nil {return nil ,_cbbd ;};};if _cecec !=0{if _ebbfe +_cecec > _egcd {return nil ,_dgd .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _edeg :=_ebbfe ;_edeg < _ebbfe +_cecec ;_edeg ++{_bbgc [_edeg ]=_agdb ;};};if _agdb ==0{_agdb =1;}else {_agdb =0;};};return _bbgc ,nil ;};func (_bdc *GenericRegion )InitEncode (bm *_dc .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _gccc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _dgd .Error (_gccc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dgd .Error (_gccc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_bdc .Bitmap =bm ;_bdc .GBTemplate =byte (template );switch _bdc .GBTemplate {case 0:_bdc .GBAtX =[]int8 {3,-3,2,-2};_bdc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_bdc .GBAtX =[]int8 {3};_bdc .GBAtY =[]int8 {-1};case 2,3:_bdc .GBAtX =[]int8 {2};_bdc .GBAtY =[]int8 {-1};
default:return _dgd .Errorf (_gccc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_bdc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_bdc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gcgc *SymbolDictionary )GetDictionary ()([]*_dc .Bitmap ,error ){_fb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_fb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_fb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gcgc ._egfag ,_gcgc ._gdbg );
}();if _gcgc ._egfag ==nil {var _fddce error ;if _gcgc .UseRefinementAggregation {_gcgc ._gac =_gcgc .getSbSymCodeLen ();};if !_gcgc .IsHuffmanEncoded {if _fddce =_gcgc .setCodingStatistics ();_fddce !=nil {return nil ,_fddce ;};};_gcgc ._gdbg =make ([]*_dc .Bitmap ,_gcgc .NumberOfNewSymbols );
var _fae []int ;if _gcgc .IsHuffmanEncoded &&!_gcgc .UseRefinementAggregation {_fae =make ([]int ,_gcgc .NumberOfNewSymbols );};if _fddce =_gcgc .setSymbolsArray ();_fddce !=nil {return nil ,_fddce ;};var _cbfd ,_acedb int64 ;_gcgc ._dgaba =0;for _gcgc ._dgaba < _gcgc .NumberOfNewSymbols {_acedb ,_fddce =_gcgc .decodeHeightClassDeltaHeight ();
if _fddce !=nil {return nil ,_fddce ;};_cbfd +=_acedb ;var _fafdb ,_ecaaa uint32 ;_cdgf :=int64 (_gcgc ._dgaba );for {var _ccca int64 ;_ccca ,_fddce =_gcgc .decodeDifferenceWidth ();if _gb .Is (_fddce ,_gee .ErrOOB ){break ;};if _fddce !=nil {return nil ,_fddce ;
};if _gcgc ._dgaba >=_gcgc .NumberOfNewSymbols {break ;};_fafdb +=uint32 (_ccca );_ecaaa +=_fafdb ;if !_gcgc .IsHuffmanEncoded ||_gcgc .UseRefinementAggregation {if !_gcgc .UseRefinementAggregation {_fddce =_gcgc .decodeDirectlyThroughGenericRegion (_fafdb ,uint32 (_cbfd ));
if _fddce !=nil {return nil ,_fddce ;};}else {_fddce =_gcgc .decodeAggregate (_fafdb ,uint32 (_cbfd ));if _fddce !=nil {return nil ,_fddce ;};};}else if _gcgc .IsHuffmanEncoded &&!_gcgc .UseRefinementAggregation {_fae [_gcgc ._dgaba ]=int (_fafdb );};_gcgc ._dgaba ++;
};if _gcgc .IsHuffmanEncoded &&!_gcgc .UseRefinementAggregation {var _fcag int64 ;if _gcgc .SdHuffBMSizeSelection ==0{var _bdf _gcc .Tabler ;_bdf ,_fddce =_gcc .GetStandardTable (1);if _fddce !=nil {return nil ,_fddce ;};_fcag ,_fddce =_bdf .Decode (_gcgc ._gbe );
if _fddce !=nil {return nil ,_fddce ;};}else {_fcag ,_fddce =_gcgc .huffDecodeBmSize ();if _fddce !=nil {return nil ,_fddce ;};};_gcgc ._gbe .Align ();var _cdef *_dc .Bitmap ;_cdef ,_fddce =_gcgc .decodeHeightClassCollectiveBitmap (_fcag ,uint32 (_cbfd ),_ecaaa );
if _fddce !=nil {return nil ,_fddce ;};_fddce =_gcgc .decodeHeightClassBitmap (_cdef ,_cdgf ,int (_cbfd ),_fae );if _fddce !=nil {return nil ,_fddce ;};};};_edbc ,_fddce :=_gcgc .getToExportFlags ();if _fddce !=nil {return nil ,_fddce ;};_gcgc .setExportedSymbols (_edbc );
};return _gcgc ._egfag ,nil ;};func (_gde *GenericRegion )Init (h *Header ,r *_dg .Reader )error {_gde .RegionSegment =NewRegionSegment (r );_gde ._eac =r ;return _gde .parseHeader ();};func (_gbbb *HalftoneRegion )combineGrayscalePlanes (_fabb []*_dc .Bitmap ,_feafa int )error {_bab :=0;
for _abd :=0;_abd < _fabb [_feafa ].Height ;_abd ++{for _eaec :=0;_eaec < _fabb [_feafa ].Width ;_eaec +=8{_bca ,_dgce :=_fabb [_feafa +1].GetByte (_bab );if _dgce !=nil {return _dgce ;};_eecf ,_dgce :=_fabb [_feafa ].GetByte (_bab );if _dgce !=nil {return _dgce ;
};_dgce =_fabb [_feafa ].SetByte (_bab ,_dc .CombineBytes (_eecf ,_bca ,_dc .CmbOpXor ));if _dgce !=nil {return _dgce ;};_bab ++;};};return nil ;};func (_aeca *TextRegion )setContexts (_gbag *_f .DecoderStats ,_abec *_f .DecoderStats ,_agac *_f .DecoderStats ,_fgaaa *_f .DecoderStats ,_eefb *_f .DecoderStats ,_ddge *_f .DecoderStats ,_cggff *_f .DecoderStats ,_cfagg *_f .DecoderStats ,_caeg *_f .DecoderStats ,_egcad *_f .DecoderStats ){_aeca ._fabg =_abec ;
_aeca ._geea =_agac ;_aeca ._bgedd =_fgaaa ;_aeca ._gaea =_eefb ;_aeca ._cgde =_cggff ;_aeca ._dgfa =_cfagg ;_aeca ._gdba =_ddge ;_aeca ._dbdf =_caeg ;_aeca ._fbcd =_egcad ;_aeca ._edfc =_gbag ;};func (_cceb *TextRegion )Encode (w _dg .BinaryWriter )(_eegg int ,_bgedf error ){const _bafe ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _eegg ,_bgedf =_cceb .RegionInfo .Encode (w );_bgedf !=nil {return _eegg ,_dgd .Wrap (_bgedf ,_bafe ,"");};var _bbdb int ;if _bbdb ,_bgedf =_cceb .encodeFlags (w );_bgedf !=nil {return _eegg ,_dgd .Wrap (_bgedf ,_bafe ,"");};_eegg +=_bbdb ;if _bbdb ,_bgedf =_cceb .encodeSymbols (w );
_bgedf !=nil {return _eegg ,_dgd .Wrap (_bgedf ,_bafe ,"");};_eegg +=_bbdb ;return _eegg ,nil ;};func (_fagc *TextRegion )readHuffmanFlags ()error {var (_fgbg int ;_dega uint64 ;_ebgdb error ;);_ ,_ebgdb =_fagc ._bgbd .ReadBit ();if _ebgdb !=nil {return _ebgdb ;
};_fgbg ,_ebgdb =_fagc ._bgbd .ReadBit ();if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffRSize =int8 (_fgbg );_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffRDY =int8 (_dega )&0xf;_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);
if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffRDX =int8 (_dega )&0xf;_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffRDHeight =int8 (_dega )&0xf;_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;
};_fagc .SbHuffRDWidth =int8 (_dega )&0xf;_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffDT =int8 (_dega )&0xf;_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffDS =int8 (_dega )&0xf;
_dega ,_ebgdb =_fagc ._bgbd .ReadBits (2);if _ebgdb !=nil {return _ebgdb ;};_fagc .SbHuffFS =int8 (_dega )&0xf;return nil ;};func NewHeader (d Documenter ,r *_dg .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_egbb :=&Header {Reader :r };
if _gaaf :=_egbb .parse (d ,r ,offset ,organizationType );_gaaf !=nil {return nil ,_dgd .Wrap (_gaaf ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _egbb ,nil ;};func (_bbcb *GenericRegion )decodeTemplate3 (_eafd ,_cgg ,_fddcd int ,_eagc ,_gbff int )(_geec error ){const _cdbc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_bbgf ,_aef int ;_cdbe int ;_dfa byte ;_eacg ,_dcag int ;);if _eafd >=1{_dfa ,_geec =_bbcb .Bitmap .GetByte (_gbff );if _geec !=nil {return _dgd .Wrap (_geec ,_cdbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cdbe =int (_dfa );};_bbgf =(_cdbe >>1)&0x70;
for _dfcg :=0;_dfcg < _fddcd ;_dfcg =_eacg {var (_ece byte ;_baea int ;);_eacg =_dfcg +8;if _aggg :=_cgg -_dfcg ;_aggg > 8{_baea =8;}else {_baea =_aggg ;};if _eafd >=1{_cdbe <<=8;if _eacg < _cgg {_dfa ,_geec =_bbcb .Bitmap .GetByte (_gbff +1);if _geec !=nil {return _dgd .Wrap (_geec ,_cdbc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_cdbe |=int (_dfa );};};for _edde :=0;_edde < _baea ;_edde ++{if _bbcb ._cgb {_aef =_bbcb .overrideAtTemplate3 (_bbgf ,_dfcg +_edde ,_eafd ,int (_ece ),_edde );_bbcb ._ccg .SetIndex (int32 (_aef ));}else {_bbcb ._ccg .SetIndex (int32 (_bbgf ));};_dcag ,_geec =_bbcb ._fdd .DecodeBit (_bbcb ._ccg );
if _geec !=nil {return _dgd .Wrap (_geec ,_cdbc ,"");};_ece |=byte (_dcag )<<byte (7-_edde );_bbgf =((_bbgf &0x1f7)<<1)|_dcag |((_cdbe >>uint (8-_edde ))&0x010);};if _ffg :=_bbcb .Bitmap .SetByte (_eagc ,_ece );_ffg !=nil {return _dgd .Wrap (_ffg ,_cdbc ,"");
};_eagc ++;_gbff ++;};return nil ;};func (_cadd *GenericRegion )overrideAtTemplate1 (_dfda ,_bcd ,_dab ,_eeed ,_ccgf int )int {_dfda &=0x1FF7;if _cadd .GBAtY [0]==0&&_cadd .GBAtX [0]>=-int8 (_ccgf ){_dfda |=(_eeed >>uint (7-(int8 (_ccgf )+_cadd .GBAtX [0]))&0x1)<<3;
}else {_dfda |=int (_cadd .getPixel (_bcd +int (_cadd .GBAtX [0]),_dab +int (_cadd .GBAtY [0])))<<3;};return _dfda ;};func (_dbg *Header )readSegmentNumber (_bcge *_dg .Reader )error {const _dacc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_ede :=make ([]byte ,4);_ ,_ffcb :=_bcge .Read (_ede );if _ffcb !=nil {return _dgd .Wrap (_ffcb ,_dacc ,"");};_dbg .SegmentNumber =_e .BigEndian .Uint32 (_ede );return nil ;};func (_abdc *HalftoneRegion )shiftAndFill (_fafd int )int {_fafd >>=8;if _fafd < 0{_gdb :=int (_g .Log (float64 (_efeb (_fafd )))/_g .Log (2));
_ceaf :=31-_gdb ;for _cdc :=1;_cdc < _ceaf ;_cdc ++{_fafd |=1<<uint (31-_cdc );};};return _fafd ;};func NewRegionSegment (r *_dg .Reader )*RegionSegment {return &RegionSegment {_cdfg :r }};func (_gbfff *SymbolDictionary )decodeAggregate (_fggb ,_bcea uint32 )error {var (_geaf int64 ;
_ddfd error ;);if _gbfff .IsHuffmanEncoded {_geaf ,_ddfd =_gbfff .huffDecodeRefAggNInst ();if _ddfd !=nil {return _ddfd ;};}else {_dedf ,_cadb :=_gbfff ._eaed .DecodeInt (_gbfff ._egdd );if _cadb !=nil {return _cadb ;};_geaf =int64 (_dedf );};if _geaf > 1{return _gbfff .decodeThroughTextRegion (_fggb ,_bcea ,uint32 (_geaf ));
}else if _geaf ==1{return _gbfff .decodeRefinedSymbol (_fggb ,_bcea );};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_acff *TableSegment )HtLow ()int32 {return _acff ._adfg };type template1 struct{};func (_ggaa *TextRegion )createRegionBitmap ()error {_ggaa .RegionBitmap =_dc .New (int (_ggaa .RegionInfo .BitmapWidth ),int (_ggaa .RegionInfo .BitmapHeight ));
if _ggaa .DefaultPixel !=0{_ggaa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_faaa *GenericRegion )decodeTemplate2 (_dgeb ,_fga ,_bbca int ,_abed ,_eagd int )(_dcfb error ){const _agdd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_ada ,_egd int ;_adf ,_aae int ;_fbe byte ;_edd ,_fcf int ;);if _dgeb >=1{_fbe ,_dcfb =_faaa .Bitmap .GetByte (_eagd );if _dcfb !=nil {return _dgd .Wrap (_dcfb ,_agdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_adf =int (_fbe );};if _dgeb >=2{_fbe ,_dcfb =_faaa .Bitmap .GetByte (_eagd -_faaa .Bitmap .RowStride );if _dcfb !=nil {return _dgd .Wrap (_dcfb ,_agdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_aae =int (_fbe )<<4;
};_ada =(_adf >>3&0x7c)|(_aae >>3&0x380);for _deec :=0;_deec < _bbca ;_deec =_edd {var (_cacd byte ;_fcea int ;);_edd =_deec +8;if _adg :=_fga -_deec ;_adg > 8{_fcea =8;}else {_fcea =_adg ;};if _dgeb > 0{_adf <<=8;if _edd < _fga {_fbe ,_dcfb =_faaa .Bitmap .GetByte (_eagd +1);
if _dcfb !=nil {return _dgd .Wrap (_dcfb ,_agdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_adf |=int (_fbe );};};if _dgeb > 1{_aae <<=8;if _edd < _fga {_fbe ,_dcfb =_faaa .Bitmap .GetByte (_eagd -_faaa .Bitmap .RowStride +1);
if _dcfb !=nil {return _dgd .Wrap (_dcfb ,_agdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_aae |=int (_fbe )<<4;};};for _eedb :=0;_eedb < _fcea ;_eedb ++{_cfa :=uint (10-_eedb );if _faaa ._cgb {_egd =_faaa .overrideAtTemplate2 (_ada ,_deec +_eedb ,_dgeb ,int (_cacd ),_eedb );
_faaa ._ccg .SetIndex (int32 (_egd ));}else {_faaa ._ccg .SetIndex (int32 (_ada ));};_fcf ,_dcfb =_faaa ._fdd .DecodeBit (_faaa ._ccg );if _dcfb !=nil {return _dgd .Wrap (_dcfb ,_agdd ,"");};_cacd |=byte (_fcf <<uint (7-_eedb ));_ada =((_ada &0x1bd)<<1)|_fcf |((_adf >>_cfa )&0x4)|((_aae >>_cfa )&0x80);
};if _faaf :=_faaa .Bitmap .SetByte (_abed ,_cacd );_faaf !=nil {return _dgd .Wrap (_faaf ,_agdd ,"");};_abed ++;_eagd ++;};return nil ;};func (_gffc *Header )readDataStartOffset (_fbga *_dg .Reader ,_gdca OrganizationType ){if _gdca ==OSequential {_gffc .SegmentDataStartOffset =uint64 (_fbga .AbsolutePosition ());
};};func (_ecfd *GenericRegion )overrideAtTemplate0a (_aag ,_cedc ,_fedf ,_dad ,_ebge ,_bfb int )int {if _ecfd .GBAtOverride [0]{_aag &=0xFFEF;if _ecfd .GBAtY [0]==0&&_ecfd .GBAtX [0]>=-int8 (_ebge ){_aag |=(_dad >>uint (int8 (_bfb )-_ecfd .GBAtX [0]&0x1))<<4;
}else {_aag |=int (_ecfd .getPixel (_cedc +int (_ecfd .GBAtX [0]),_fedf +int (_ecfd .GBAtY [0])))<<4;};};if _ecfd .GBAtOverride [1]{_aag &=0xFBFF;if _ecfd .GBAtY [1]==0&&_ecfd .GBAtX [1]>=-int8 (_ebge ){_aag |=(_dad >>uint (int8 (_bfb )-_ecfd .GBAtX [1]&0x1))<<10;
}else {_aag |=int (_ecfd .getPixel (_cedc +int (_ecfd .GBAtX [1]),_fedf +int (_ecfd .GBAtY [1])))<<10;};};if _ecfd .GBAtOverride [2]{_aag &=0xF7FF;if _ecfd .GBAtY [2]==0&&_ecfd .GBAtX [2]>=-int8 (_ebge ){_aag |=(_dad >>uint (int8 (_bfb )-_ecfd .GBAtX [2]&0x1))<<11;
}else {_aag |=int (_ecfd .getPixel (_cedc +int (_ecfd .GBAtX [2]),_fedf +int (_ecfd .GBAtY [2])))<<11;};};if _ecfd .GBAtOverride [3]{_aag &=0x7FFF;if _ecfd .GBAtY [3]==0&&_ecfd .GBAtX [3]>=-int8 (_ebge ){_aag |=(_dad >>uint (int8 (_bfb )-_ecfd .GBAtX [3]&0x1))<<15;
}else {_aag |=int (_ecfd .getPixel (_cedc +int (_ecfd .GBAtX [3]),_fedf +int (_ecfd .GBAtY [3])))<<15;};};return _aag ;};func (_ecd *EndOfStripe )LineNumber ()int {return _ecd ._cg };func (_acgf *Header )writeSegmentPageAssociation (_bfdb _dg .BinaryWriter )(_fccg int ,_agbac error ){const _bbae ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _acgf .pageSize ()!=4{if _agbac =_bfdb .WriteByte (byte (_acgf .PageAssociation ));_agbac !=nil {return 0,_dgd .Wrap (_agbac ,_bbae ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cdfdd :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_cdfdd ,uint32 (_acgf .PageAssociation ));if _fccg ,_agbac =_bfdb .Write (_cdfdd );_agbac !=nil {return 0,_dgd .Wrap (_agbac ,_bbae ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};
return _fccg ,nil ;};func (_ebea *TextRegion )decodeDfs ()(int64 ,error ){if _ebea .IsHuffmanEncoded {if _ebea .SbHuffFS ==3{if _ebea ._eade ==nil {var _decdc error ;_ebea ._eade ,_decdc =_ebea .getUserTable (0);if _decdc !=nil {return 0,_decdc ;};};return _ebea ._eade .Decode (_ebea ._bgbd );
};_gfeac ,_eaef :=_gcc .GetStandardTable (6+int (_ebea .SbHuffFS ));if _eaef !=nil {return 0,_eaef ;};return _gfeac .Decode (_ebea ._bgbd );};_dfag ,_ecga :=_ebea ._cfbf .DecodeInt (_ebea ._geea );if _ecga !=nil {return 0,_ecga ;};return int64 (_dfag ),nil ;
};func (_gbbf *SymbolDictionary )decodeHeightClassBitmap (_ebca *_dc .Bitmap ,_edfb int64 ,_cfbba int ,_ebfce []int )error {for _abeb :=_edfb ;_abeb < int64 (_gbbf ._dgaba );_abeb ++{var _cbea int ;for _dbba :=_edfb ;_dbba <=_abeb -1;_dbba ++{_cbea +=_ebfce [_dbba ];
};_aggf :=_gc .Rect (_cbea ,0,_cbea +_ebfce [_abeb ],_cfbba );_fdca ,_defd :=_dc .Extract (_aggf ,_ebca );if _defd !=nil {return _defd ;};_gbbf ._gdbg [_abeb ]=_fdca ;_gbbf ._dadd =append (_gbbf ._dadd ,_fdca );};return nil ;};func (_bfea *GenericRegion )overrideAtTemplate3 (_cagfg ,_afdb ,_cfgbg ,_egfa ,_abbf int )int {_cagfg &=0x3EF;
if _bfea .GBAtY [0]==0&&_bfea .GBAtX [0]>=-int8 (_abbf ){_cagfg |=(_egfa >>uint (7-(int8 (_abbf )+_bfea .GBAtX [0]))&0x1)<<4;}else {_cagfg |=int (_bfea .getPixel (_afdb +int (_bfea .GBAtX [0]),_cfgbg +int (_bfea .GBAtY [0])))<<4;};return _cagfg ;};func (_cfea *GenericRegion )decodeTemplate0a (_bged ,_caf ,_egbe int ,_cge ,_bde int )(_dbc error ){const _decd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_ffaa ,_ggg int ;_afa ,_fcba int ;_eba byte ;_bffa int ;);if _bged >=1{_eba ,_dbc =_cfea .Bitmap .GetByte (_bde );if _dbc !=nil {return _dgd .Wrap (_dbc ,_decd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_afa =int (_eba );};if _bged >=2{_eba ,_dbc =_cfea .Bitmap .GetByte (_bde -_cfea .Bitmap .RowStride );
if _dbc !=nil {return _dgd .Wrap (_dbc ,_decd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fcba =int (_eba )<<6;};_ffaa =(_afa &0xf0)|(_fcba &0x3800);for _bce :=0;_bce < _egbe ;_bce =_bffa {var (_fbfd byte ;_agb int ;);_bffa =_bce +8;if _fadd :=_caf -_bce ;
_fadd > 8{_agb =8;}else {_agb =_fadd ;};if _bged > 0{_afa <<=8;if _bffa < _caf {_eba ,_dbc =_cfea .Bitmap .GetByte (_bde +1);if _dbc !=nil {return _dgd .Wrap (_dbc ,_decd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_afa |=int (_eba );};};if _bged > 1{_cbb :=_bde -_cfea .Bitmap .RowStride +1;
_fcba <<=8;if _bffa < _caf {_eba ,_dbc =_cfea .Bitmap .GetByte (_cbb );if _dbc !=nil {return _dgd .Wrap (_dbc ,_decd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fcba |=int (_eba )<<6;}else {_fcba |=0;};};for _fddc :=0;_fddc < _agb ;_fddc ++{_ggdb :=uint (7-_fddc );
if _cfea ._cgb {_ggg =_cfea .overrideAtTemplate0a (_ffaa ,_bce +_fddc ,_bged ,int (_fbfd ),_fddc ,int (_ggdb ));_cfea ._ccg .SetIndex (int32 (_ggg ));}else {_cfea ._ccg .SetIndex (int32 (_ffaa ));};var _ffc int ;_ffc ,_dbc =_cfea ._fdd .DecodeBit (_cfea ._ccg );
if _dbc !=nil {return _dgd .Wrap (_dbc ,_decd ,"");};_fbfd |=byte (_ffc )<<_ggdb ;_ffaa =((_ffaa &0x7bf7)<<1)|_ffc |((_afa >>_ggdb )&0x10)|((_fcba >>_ggdb )&0x800);};if _bedf :=_cfea .Bitmap .SetByte (_cge ,_fbfd );_bedf !=nil {return _dgd .Wrap (_bedf ,_decd ,"");
};_cge ++;_bde ++;};return nil ;};func (_bdfb *TextRegion )GetRegionBitmap ()(*_dc .Bitmap ,error ){if _bdfb .RegionBitmap !=nil {return _bdfb .RegionBitmap ,nil ;};if !_bdfb .IsHuffmanEncoded {if _eeeb :=_bdfb .setCodingStatistics ();_eeeb !=nil {return nil ,_eeeb ;
};};if _ffadc :=_bdfb .createRegionBitmap ();_ffadc !=nil {return nil ,_ffadc ;};if _ebde :=_bdfb .decodeSymbolInstances ();_ebde !=nil {return nil ,_ebde ;};return _bdfb .RegionBitmap ,nil ;};func (_begb *RegionSegment )Encode (w _dg .BinaryWriter )(_bbaea int ,_eefa error ){const _dffg ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_fcca :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fcca ,_begb .BitmapWidth );_bbaea ,_eefa =w .Write (_fcca );if _eefa !=nil {return 0,_dgd .Wrap (_eefa ,_dffg ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_fcca ,_begb .BitmapHeight );var _fbbe int ;
_fbbe ,_eefa =w .Write (_fcca );if _eefa !=nil {return 0,_dgd .Wrap (_eefa ,_dffg ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_bbaea +=_fbbe ;_e .BigEndian .PutUint32 (_fcca ,_begb .XLocation );_fbbe ,_eefa =w .Write (_fcca );if _eefa !=nil {return 0,_dgd .Wrap (_eefa ,_dffg ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_bbaea +=_fbbe ;_e .BigEndian .PutUint32 (_fcca ,_begb .YLocation );_fbbe ,_eefa =w .Write (_fcca );if _eefa !=nil {return 0,_dgd .Wrap (_eefa ,_dffg ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbaea +=_fbbe ;if _eefa =w .WriteByte (byte (_begb .CombinaionOperator )&0x07);
_eefa !=nil {return 0,_dgd .Wrap (_eefa ,_dffg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_bbaea ++;return _bbaea ,nil ;};func (_baee *PageInformationSegment )readIsLossless ()error {_adab ,_bffg :=_baee ._gcdec .ReadBit ();
if _bffg !=nil {return _bffg ;};if _adab ==1{_baee .IsLossless =true ;};return nil ;};func (_fbbbf *SymbolDictionary )readRegionFlags ()error {var (_befa uint64 ;_bdaeb int ;);_ ,_fdfb :=_fbbbf ._gbe .ReadBits (3);if _fdfb !=nil {return _fdfb ;};_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();
if _fdfb !=nil {return _fdfb ;};_fbbbf .SdrTemplate =int8 (_bdaeb );_befa ,_fdfb =_fbbbf ._gbe .ReadBits (2);if _fdfb !=nil {return _fdfb ;};_fbbbf .SdTemplate =int8 (_befa &0xf);_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();if _fdfb !=nil {return _fdfb ;};if _bdaeb ==1{_fbbbf ._bfdcd =true ;
};_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();if _fdfb !=nil {return _fdfb ;};if _bdaeb ==1{_fbbbf ._efba =true ;};_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();if _fdfb !=nil {return _fdfb ;};if _bdaeb ==1{_fbbbf .SdHuffAggInstanceSelection =true ;};_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();
if _fdfb !=nil {return _fdfb ;};_fbbbf .SdHuffBMSizeSelection =int8 (_bdaeb );_befa ,_fdfb =_fbbbf ._gbe .ReadBits (2);if _fdfb !=nil {return _fdfb ;};_fbbbf .SdHuffDecodeWidthSelection =int8 (_befa &0xf);_befa ,_fdfb =_fbbbf ._gbe .ReadBits (2);if _fdfb !=nil {return _fdfb ;
};_fbbbf .SdHuffDecodeHeightSelection =int8 (_befa &0xf);_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();if _fdfb !=nil {return _fdfb ;};if _bdaeb ==1{_fbbbf .UseRefinementAggregation =true ;};_bdaeb ,_fdfb =_fbbbf ._gbe .ReadBit ();if _fdfb !=nil {return _fdfb ;
};if _bdaeb ==1{_fbbbf .IsHuffmanEncoded =true ;};return nil ;};func (_ccgd Type )String ()string {switch _ccgd {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fgf *HalftoneRegion )renderPattern (_eddg [][]int )(_bdaf error ){var _ceed ,_faddc int ;
for _fcdgb :=0;_fcdgb < int (_fgf .HGridHeight );_fcdgb ++{for _cgccc :=0;_cgccc < int (_fgf .HGridWidth );_cgccc ++{_ceed =_fgf .computeX (_fcdgb ,_cgccc );_faddc =_fgf .computeY (_fcdgb ,_cgccc );_gfdg :=_fgf .Patterns [_eddg [_fcdgb ][_cgccc ]];if _bdaf =_dc .Blit (_gfdg ,_fgf .HalftoneRegionBitmap ,_ceed +int (_fgf .HGridX ),_faddc +int (_fgf .HGridY ),_fgf .CombinationOperator );
_bdaf !=nil {return _bdaf ;};};};return nil ;};type GenericRefinementRegion struct{_bd templater ;_ef templater ;_fa *_dg .Reader ;_bf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_dc .Bitmap ;
ReferenceBitmap *_dc .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_df *_f .Decoder ;_a *_f .DecoderStats ;_caa bool ;_eca []bool ;};func (_edfgd *TableSegment )HtOOB ()int32 {return _edfgd ._badg };func (_fdge *TextRegion )setParameters (_eeab *_f .Decoder ,_ccba ,_ggfac bool ,_bcga ,_dfecd uint32 ,_adff uint32 ,_bacc int8 ,_fdce uint32 ,_dbaa int8 ,_ccgfc _dc .CombinationOperator ,_dafb int8 ,_gfbf int16 ,_begf ,_gafc ,_ccfae ,_dgbb ,_bcfad ,_degff ,_aaccb ,_ccff ,_cbec ,_feea int8 ,_bfbb ,_fadf []int8 ,_dbae []*_dc .Bitmap ,_dbgc int8 ){_fdge ._cfbf =_eeab ;
_fdge .IsHuffmanEncoded =_ccba ;_fdge .UseRefinement =_ggfac ;_fdge .RegionInfo .BitmapWidth =_bcga ;_fdge .RegionInfo .BitmapHeight =_dfecd ;_fdge .NumberOfSymbolInstances =_adff ;_fdge .SbStrips =_bacc ;_fdge .NumberOfSymbols =_fdce ;_fdge .DefaultPixel =_dbaa ;
_fdge .CombinationOperator =_ccgfc ;_fdge .IsTransposed =_dafb ;_fdge .ReferenceCorner =_gfbf ;_fdge .SbDsOffset =_begf ;_fdge .SbHuffFS =_gafc ;_fdge .SbHuffDS =_ccfae ;_fdge .SbHuffDT =_dgbb ;_fdge .SbHuffRDWidth =_bcfad ;_fdge .SbHuffRDHeight =_degff ;
_fdge .SbHuffRSize =_cbec ;_fdge .SbHuffRDX =_aaccb ;_fdge .SbHuffRDY =_ccff ;_fdge .SbrTemplate =_feea ;_fdge .SbrATX =_bfbb ;_fdge .SbrATY =_fadf ;_fdge .Symbols =_dbae ;_fdge ._facfc =_dbgc ;};func (_efcb *TextRegion )parseHeader ()error {var _edfad error ;
_fb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _edfad !=nil {_fb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_edfad );
}else {_fb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _edfad =_efcb .RegionInfo .parseHeader ();
_edfad !=nil {return _edfad ;};if _edfad =_efcb .readRegionFlags ();_edfad !=nil {return _edfad ;};if _efcb .IsHuffmanEncoded {if _edfad =_efcb .readHuffmanFlags ();_edfad !=nil {return _edfad ;};};if _edfad =_efcb .readUseRefinement ();_edfad !=nil {return _edfad ;
};if _edfad =_efcb .readAmountOfSymbolInstances ();_edfad !=nil {return _edfad ;};if _edfad =_efcb .getSymbols ();_edfad !=nil {return _edfad ;};if _edfad =_efcb .computeSymbolCodeLength ();_edfad !=nil {return _edfad ;};if _edfad =_efcb .checkInput ();
_edfad !=nil {return _edfad ;};_fb .Log .Trace ("\u0025\u0073",_efcb .String ());return nil ;};func (_aaaeg *SymbolDictionary )encodeNumSyms (_gbgf _dg .BinaryWriter )(_feec int ,_ggfa error ){const _fbca ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_bcad :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bcad ,_aaaeg .NumberOfExportedSymbols );if _feec ,_ggfa =_gbgf .Write (_bcad );_ggfa !=nil {return _feec ,_dgd .Wrap (_ggfa ,_fbca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_e .BigEndian .PutUint32 (_bcad ,_aaaeg .NumberOfNewSymbols );_ffacg ,_ggfa :=_gbgf .Write (_bcad );if _ggfa !=nil {return _feec ,_dgd .Wrap (_ggfa ,_fbca ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _feec +_ffacg ,nil ;
};func (_ddaf *PageInformationSegment )readDefaultPixelValue ()error {_fbdb ,_ggf :=_ddaf ._gcdec .ReadBit ();if _ggf !=nil {return _ggf ;};_ddaf .DefaultPixelValue =uint8 (_fbdb &0xf);return nil ;};func (_dfae *TextRegion )decodeIb (_fabd ,_efga int64 )(*_dc .Bitmap ,error ){const _dgcge ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_gdcdc error ;_edffc *_dc .Bitmap ;);if _fabd ==0{if int (_efga )> len (_dfae .Symbols )-1{return nil ,_dgd .Error (_dgcge ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _dfae .Symbols [int (_efga )],nil ;};var _bgfed ,_cgdg ,_cdfddg ,_cebd int64 ;_bgfed ,_gdcdc =_dfae .decodeRdw ();if _gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"");};_cgdg ,_gdcdc =_dfae .decodeRdh ();if _gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"");
};_cdfddg ,_gdcdc =_dfae .decodeRdx ();if _gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"");};_cebd ,_gdcdc =_dfae .decodeRdy ();if _gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"");};if _dfae .IsHuffmanEncoded {if _ ,_gdcdc =_dfae .decodeSymInRefSize ();
_gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"");};_dfae ._bgbd .Align ();};_fagb :=_dfae .Symbols [_efga ];_bbdce :=uint32 (_fagb .Width );_gfba :=uint32 (_fagb .Height );_fbda :=int32 (uint32 (_bgfed )>>1)+int32 (_cdfddg );_aefd :=int32 (uint32 (_cgdg )>>1)+int32 (_cebd );
if _dfae ._cdgc ==nil {_dfae ._cdgc =_feba (_dfae ._bgbd ,nil );};_dfae ._cdgc .setParameters (_dfae ._edfc ,_dfae ._cfbf ,_dfae .SbrTemplate ,_bbdce +uint32 (_bgfed ),_gfba +uint32 (_cgdg ),_fagb ,_fbda ,_aefd ,false ,_dfae .SbrATX ,_dfae .SbrATY );_edffc ,_gdcdc =_dfae ._cdgc .GetRegionBitmap ();
if _gdcdc !=nil {return nil ,_dgd .Wrap (_gdcdc ,_dgcge ,"\u0067\u0072\u0066");};if _dfae .IsHuffmanEncoded {_dfae ._bgbd .Align ();};return _edffc ,nil ;};func (_aebf *TextRegion )initSymbols ()error {const _aaeg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_cfcg :=range _aebf .Header .RTSegments {if _cfcg ==nil {return _dgd .Error (_aaeg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cfcg .Type ==0{_ffe ,_dgfe :=_cfcg .GetSegmentData ();if _dgfe !=nil {return _dgd .Wrap (_dgfe ,_aaeg ,"");};_dae ,_bacb :=_ffe .(*SymbolDictionary );if !_bacb {return _dgd .Error (_aaeg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dae ._fgdd =_aebf ._gdba ;_bdfbf ,_dgfe :=_dae .GetDictionary ();if _dgfe !=nil {return _dgd .Wrap (_dgfe ,_aaeg ,"");};_aebf .Symbols =append (_aebf .Symbols ,_bdfbf ...);};};_aebf .NumberOfSymbols =uint32 (len (_aebf .Symbols ));return nil ;};func (_ee *GenericRefinementRegion )getPixel (_eef *_dc .Bitmap ,_gfc ,_cfb int )int {if _gfc < 0||_gfc >=_eef .Width {return 0;
};if _cfb < 0||_cfb >=_eef .Height {return 0;};if _eef .GetPixel (_gfc ,_cfb ){return 1;};return 0;};func (_aac *GenericRefinementRegion )overrideAtTemplate0 (_aafb ,_efbc ,_bge ,_fbfa ,_dgdf int )int {if _aac ._eca [0]{_aafb &=0xfff7;if _aac .GrAtY [0]==0&&int (_aac .GrAtX [0])>=-_dgdf {_aafb |=(_fbfa >>uint (7-(_dgdf +int (_aac .GrAtX [0])))&0x1)<<3;
}else {_aafb |=_aac .getPixel (_aac .RegionBitmap ,_efbc +int (_aac .GrAtX [0]),_bge +int (_aac .GrAtY [0]))<<3;};};if _aac ._eca [1]{_aafb &=0xefff;if _aac .GrAtY [1]==0&&int (_aac .GrAtX [1])>=-_dgdf {_aafb |=(_fbfa >>uint (7-(_dgdf +int (_aac .GrAtX [1])))&0x1)<<12;
}else {_aafb |=_aac .getPixel (_aac .ReferenceBitmap ,_efbc +int (_aac .GrAtX [1]),_bge +int (_aac .GrAtY [1]));};};return _aafb ;};func NewGenericRegion (r *_dg .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_eac :r };
};func (_efa *Header )readHeaderFlags ()error {const _abdcg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_aaaf ,_ecc :=_efa .Reader .ReadBit ();if _ecc !=nil {return _dgd .Wrap (_ecc ,_abdcg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _aaaf !=0{_efa .RetainFlag =true ;};_aaaf ,_ecc =_efa .Reader .ReadBit ();if _ecc !=nil {return _dgd .Wrap (_ecc ,_abdcg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _aaaf !=0{_efa .PageAssociationFieldSize =true ;
};_afg ,_ecc :=_efa .Reader .ReadBits (6);if _ecc !=nil {return _dgd .Wrap (_ecc ,_abdcg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_efa .Type =Type (int (_afg ));return nil ;};func (_adfe *TableSegment )HtHigh ()int32 {return _adfe ._bebcc };
func (_edfg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _edfg .RegionSegment };func (_cdee *PatternDictionary )readGrayMax ()error {_daca ,_cbee :=_cdee ._fgdf .ReadBits (32);if _cbee !=nil {return _cbee ;};_cdee .GrayMax =uint32 (_daca &_g .MaxUint32 );
return nil ;};func (_gge *PageInformationSegment )readMaxStripeSize ()error {_febd ,_face :=_gge ._gcdec .ReadBits (15);if _face !=nil {return _face ;};_gge .MaxStripeSize =uint16 (_febd &_g .MaxUint16 );return nil ;};var _ templater =&template1 {};func (_bfaa *TextRegion )readUseRefinement ()error {if !_bfaa .UseRefinement ||_bfaa .SbrTemplate !=0{return nil ;
};var (_agag byte ;_gedg error ;);_bfaa .SbrATX =make ([]int8 ,2);_bfaa .SbrATY =make ([]int8 ,2);_agag ,_gedg =_bfaa ._bgbd .ReadByte ();if _gedg !=nil {return _gedg ;};_bfaa .SbrATX [0]=int8 (_agag );_agag ,_gedg =_bfaa ._bgbd .ReadByte ();if _gedg !=nil {return _gedg ;
};_bfaa .SbrATY [0]=int8 (_agag );_agag ,_gedg =_bfaa ._bgbd .ReadByte ();if _gedg !=nil {return _gedg ;};_bfaa .SbrATX [1]=int8 (_agag );_agag ,_gedg =_bfaa ._bgbd .ReadByte ();if _gedg !=nil {return _gedg ;};_bfaa .SbrATY [1]=int8 (_agag );return nil ;
};func (_cagg *Header )Encode (w _dg .BinaryWriter )(_feae int ,_bffcd error ){const _bdgd ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _aeb _dg .BinaryWriter ;_fb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bffcd !=nil {_fb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bffcd );}else {_fb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cagg );
_fb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _cagg .SegmentData !=nil {_bbf ,_beg :=_cagg .SegmentData .(SegmentEncoder );
if !_beg {return 0,_dgd .Errorf (_bdgd ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cagg .SegmentData );
};_aeb =_dg .BufferedMSB ();_feae ,_bffcd =_bbf .Encode (_aeb );if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");};_cagg .SegmentDataLength =uint64 (_feae );};if _cagg .pageSize ()==4{_cagg .PageAssociationFieldSize =true ;};var _fdbb int ;_fdbb ,_bffcd =_cagg .writeSegmentNumber (w );
if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");};_feae +=_fdbb ;if _bffcd =_cagg .writeFlags (w );_bffcd !=nil {return _feae ,_dgd .Wrap (_bffcd ,_bdgd ,"");};_feae ++;_fdbb ,_bffcd =_cagg .writeReferredToCount (w );if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");
};_feae +=_fdbb ;_fdbb ,_bffcd =_cagg .writeReferredToSegments (w );if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");};_feae +=_fdbb ;_fdbb ,_bffcd =_cagg .writeSegmentPageAssociation (w );if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");
};_feae +=_fdbb ;_fdbb ,_bffcd =_cagg .writeSegmentDataLength (w );if _bffcd !=nil {return 0,_dgd .Wrap (_bffcd ,_bdgd ,"");};_feae +=_fdbb ;_cagg .HeaderLength =int64 (_feae )-int64 (_cagg .SegmentDataLength );if _aeb !=nil {if _ ,_bffcd =w .Write (_aeb .Data ());
_bffcd !=nil {return _feae ,_dgd .Wrap (_bffcd ,_bdgd ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _feae ,nil ;};func (_ccc *PatternDictionary )readPatternWidthAndHeight ()error {_abaf ,_gcfeg :=_ccc ._fgdf .ReadByte ();
if _gcfeg !=nil {return _gcfeg ;};_ccc .HdpWidth =_abaf ;_abaf ,_gcfeg =_ccc ._fgdf .ReadByte ();if _gcfeg !=nil {return _gcfeg ;};_ccc .HdpHeight =_abaf ;return nil ;};func (_cef *GenericRefinementRegion )updateOverride ()error {if _cef .GrAtX ==nil ||_cef .GrAtY ==nil {return _gb .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cef .GrAtX )!=len (_cef .GrAtY ){return _gb .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cef ._eca =make ([]bool ,len (_cef .GrAtX ));switch _cef .TemplateID {case 0:if _cef .GrAtX [0]!=-1&&_cef .GrAtY [0]!=-1{_cef ._eca [0]=true ;
_cef ._caa =true ;};if _cef .GrAtX [1]!=-1&&_cef .GrAtY [1]!=-1{_cef ._eca [1]=true ;_cef ._caa =true ;};case 1:_cef ._caa =false ;};return nil ;};func (_dafg *HalftoneRegion )GetPatterns ()([]*_dc .Bitmap ,error ){var (_gfg []*_dc .Bitmap ;_cee error ;
);for _ ,_bfad :=range _dafg ._bgef .RTSegments {var _cbg Segmenter ;_cbg ,_cee =_bfad .GetSegmentData ();if _cee !=nil {_fb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cee );
return nil ,_cee ;};_gcdf ,_aggbf :=_cbg .(*PatternDictionary );if !_aggbf {_cee =_ca .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cbg );
return nil ,_cee ;};var _edgc []*_dc .Bitmap ;_edgc ,_cee =_gcdf .GetDictionary ();if _cee !=nil {_fb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cee );
return nil ,_cee ;};_gfg =append (_gfg ,_edgc ...);};return _gfg ,nil ;};func (_egef *Header )writeSegmentDataLength (_gaed _dg .BinaryWriter )(_baf int ,_ecaa error ){_dcc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dcc ,uint32 (_egef .SegmentDataLength ));
if _baf ,_ecaa =_gaed .Write (_dcc );_ecaa !=nil {return 0,_dgd .Wrap (_ecaa ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _baf ,nil ;
};func (_bedc *Header )String ()string {_gadf :=&_eg .Builder {};_gadf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gadf .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bedc .SegmentNumber ));
_gadf .WriteString (_ca .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bedc .Type ));_gadf .WriteString (_ca .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bedc .RetainFlag ));
_gadf .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bedc .PageAssociation ));_gadf .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bedc .PageAssociationFieldSize ));
_gadf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_eagcg :=range _bedc .RTSNumbers {_gadf .WriteString (_ca .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_eagcg ));};_gadf .WriteString (_ca .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bedc .HeaderLength ));
_gadf .WriteString (_ca .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bedc .SegmentDataLength ));_gadf .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bedc .SegmentDataStartOffset ));
return _gadf .String ();};func (_dfab *Header )parse (_dbcc Documenter ,_daac *_dg .Reader ,_egec int64 ,_gdbe OrganizationType )(_bdd error ){const _aggbc ="\u0070\u0061\u0072s\u0065";_fb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bdd !=nil {_fb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bdd );}else {_fb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_bdd =_daac .Seek (_egec ,_d .SeekStart );if _bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bdd =_dfab .readSegmentNumber (_daac );_bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");
};if _bdd =_dfab .readHeaderFlags ();_bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");};var _dba uint64 ;_dba ,_bdd =_dfab .readNumberOfReferredToSegments (_daac );if _bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");};_dfab .RTSNumbers ,_bdd =_dfab .readReferredToSegmentNumbers (_daac ,int (_dba ));
if _bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");};_bdd =_dfab .readSegmentPageAssociation (_dbcc ,_daac ,_dba ,_dfab .RTSNumbers ...);if _bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");};if _dfab .Type !=TEndOfFile {if _bdd =_dfab .readSegmentDataLength (_daac );
_bdd !=nil {return _dgd .Wrap (_bdd ,_aggbc ,"");};};_dfab .readDataStartOffset (_daac ,_gdbe );_dfab .readHeaderLength (_daac ,_egec );_fb .Log .Trace ("\u0025\u0073",_dfab );return nil ;};func (_egddb *SymbolDictionary )String ()string {_bccac :=&_eg .Builder {};
_bccac .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bccac .WriteString (_ca .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_egddb .SdrTemplate ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_egddb .SdTemplate ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_egddb ._bfdcd ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_egddb ._efba ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_egddb .SdHuffAggInstanceSelection ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_egddb .SdHuffBMSizeSelection ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_egddb .SdHuffDecodeWidthSelection ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_egddb .SdHuffDecodeHeightSelection ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_egddb .UseRefinementAggregation ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_egddb .IsHuffmanEncoded ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_egddb .SdATX ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_egddb .SdATY ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_egddb .SdrATX ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_egddb .SdrATY ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_egddb .NumberOfExportedSymbols ));
_bccac .WriteString (_ca .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_egddb .NumberOfNewSymbols ));_bccac .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_egddb ._bgefe ));
_bccac .WriteString (_ca .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_egddb ._dgaba ));return _bccac .String ();};func (_aacd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_aacd .SdHuffAggInstanceSelection {_egba ,_bbab :=_gcc .GetStandardTable (1);
if _bbab !=nil {return 0,_bbab ;};return _egba .Decode (_aacd ._gbe );};if _aacd ._fbba ==nil {var (_fbbad int ;_cbae error ;);if _aacd .SdHuffDecodeHeightSelection ==3{_fbbad ++;};if _aacd .SdHuffDecodeWidthSelection ==3{_fbbad ++;};if _aacd .SdHuffBMSizeSelection ==3{_fbbad ++;
};_aacd ._fbba ,_cbae =_aacd .getUserTable (_fbbad );if _cbae !=nil {return 0,_cbae ;};};return _aacd ._fbba .Decode (_aacd ._gbe );};func (_gcfd *HalftoneRegion )computeSegmentDataStructure ()error {_gcfd .DataOffset =_gcfd ._fage .AbsolutePosition ();
_gcfd .DataHeaderLength =_gcfd .DataOffset -_gcfd .DataHeaderOffset ;_gcfd .DataLength =int64 (_gcfd ._fage .AbsoluteLength ())-_gcfd .DataHeaderLength ;return nil ;};func (_eab *SymbolDictionary )encodeFlags (_efbf _dg .BinaryWriter )(_ebgec int ,_ddedd error ){const _aefe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ddedd =_efbf .SkipBits (3);_ddedd !=nil {return 0,_dgd .Wrap (_ddedd ,_aefe ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cfbb int ;if _eab .SdrTemplate > 0{_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_cfbb =0;if _eab .SdTemplate > 1{_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cfbb =0;if _eab .SdTemplate ==1||_eab .SdTemplate ==3{_cfbb =1;
};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cfbb =0;if _eab ._bfdcd {_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_cfbb =0;if _eab ._efba {_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cfbb =0;if _eab .SdHuffAggInstanceSelection {_cfbb =1;
};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cfbb =int (_eab .SdHuffBMSizeSelection );if _ddedd =_efbf .WriteBit (_cfbb );
_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_cfbb =0;if _eab .SdHuffDecodeWidthSelection > 1{_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_cfbb =0;switch _eab .SdHuffDecodeWidthSelection {case 1,3:_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cfbb =0;if _eab .SdHuffDecodeHeightSelection > 1{_cfbb =1;
};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cfbb =0;switch _eab .SdHuffDecodeHeightSelection {case 1,3:_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );
_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cfbb =0;if _eab .UseRefinementAggregation {_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_cfbb =0;if _eab .IsHuffmanEncoded {_cfbb =1;};if _ddedd =_efbf .WriteBit (_cfbb );_ddedd !=nil {return _ebgec ,_dgd .Wrap (_ddedd ,_aefe ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_adc *GenericRegion )decodeSLTP ()(int ,error ){switch _adc .GBTemplate {case 0:_adc ._ccg .SetIndex (0x9B25);
case 1:_adc ._ccg .SetIndex (0x795);case 2:_adc ._ccg .SetIndex (0xE5);case 3:_adc ._ccg .SetIndex (0x195);};return _adc ._fdd .DecodeBit (_adc ._ccg );};func (_cece *RegionSegment )String ()string {_eagda :=&_eg .Builder {};_eagda .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_eagda .WriteString (_ca .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cece .BitmapWidth ,_cece .BitmapHeight ));
_eagda .WriteString (_ca .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cece .XLocation ,_cece .YLocation ));_eagda .WriteString (_ca .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cece .CombinaionOperator ));
return _eagda .String ();};func (_fffb *PageInformationSegment )encodeFlags (_dbad _dg .BinaryWriter )(_cfc error ){const _dege ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfc =_dbad .SkipBits (1);_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _bfca int ;if _fffb .CombinationOperatorOverrideAllowed (){_bfca =1;};if _cfc =_dbad .WriteBit (_bfca );_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_bfca =0;if _fffb ._dfec {_bfca =1;};if _cfc =_dbad .WriteBit (_bfca );_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cfc =_dbad .WriteBit ((int (_fffb ._dbcb )>>1)&0x01);
_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cfc =_dbad .WriteBit (int (_fffb ._dbcb )&0x01);
_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bfca =int (_fffb .DefaultPixelValue );
if _cfc =_dbad .WriteBit (_bfca );_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bfca =0;if _fffb ._bccfb {_bfca =1;
};if _cfc =_dbad .WriteBit (_bfca );_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bfca =0;if _fffb .IsLossless {_bfca =1;};if _cfc =_dbad .WriteBit (_bfca );
_cfc !=nil {return _dgd .Wrap (_cfc ,_dege ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_decc *SymbolDictionary )Init (h *Header ,r *_dg .Reader )error {_decc .Header =h ;
_decc ._gbe =r ;return _decc .parseHeader ();};func (_faca *TableSegment )HtPS ()int32 {return _faca ._dcfcd };func (_ebcc *RegionSegment )readCombinationOperator ()error {_febb ,_cacef :=_ebcc ._cdfg .ReadBits (3);if _cacef !=nil {return _cacef ;};_ebcc .CombinaionOperator =_dc .CombinationOperator (_febb &0xF);
return nil ;};func (_fadb *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cda int64 ,_bgbca ,_edfgg uint32 )(*_dc .Bitmap ,error ){if _cda ==0{_dgg :=_dc .New (int (_edfgg ),int (_bgbca ));var (_dggb byte ;_ebgf error ;);for _aagc :=0;_aagc < len (_dgg .Data );
_aagc ++{_dggb ,_ebgf =_fadb ._gbe .ReadByte ();if _ebgf !=nil {return nil ,_ebgf ;};if _ebgf =_dgg .SetByte (_aagc ,_dggb );_ebgf !=nil {return nil ,_ebgf ;};};return _dgg ,nil ;};if _fadb ._cadcf ==nil {_fadb ._cadcf =NewGenericRegion (_fadb ._gbe );
};_fadb ._cadcf .setParameters (true ,_fadb ._gbe .AbsolutePosition (),_cda ,_bgbca ,_edfgg );_dccd ,_aafca :=_fadb ._cadcf .GetRegionBitmap ();if _aafca !=nil {return nil ,_aafca ;};return _dccd ,nil ;};func (_faaad *TextRegion )encodeSymbols (_eabb _dg .BinaryWriter )(_gggd int ,_ccfe error ){const _aebbf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_ccbf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_ccbf ,_faaad .NumberOfSymbols );if _gggd ,_ccfe =_eabb .Write (_ccbf );_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_addd ,_ccfe :=_dc .NewClassedPoints (_faaad ._bgfe ,_faaad ._dgda );if _ccfe !=nil {return 0,_dgd .Wrap (_ccfe ,_aebbf ,"");};var _ccfac ,_cgdb int ;_cedcdb :=_ed .New ();_cedcdb .Init ();if _ccfe =_cedcdb .EncodeInteger (_ed .IADT ,0);_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_beec ,_ccfe :=_addd .GroupByY ();if _ccfe !=nil {return 0,_dgd .Wrap (_ccfe ,_aebbf ,"");};for _ ,_abdba :=range _beec {_daccd :=int (_abdba .YAtIndex (0));_gffce :=_daccd -_ccfac ;if _ccfe =_cedcdb .EncodeInteger (_ed .IADT ,_gffce );_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"");
};var _ddda int ;for _gegd ,_aace :=range _abdba .IntSlice {switch _gegd {case 0:_eacb :=int (_abdba .XAtIndex (_gegd ))-_cgdb ;if _ccfe =_cedcdb .EncodeInteger (_ed .IAFS ,_eacb );_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"");};_cgdb +=_eacb ;
_ddda =_cgdb ;default:_abefd :=int (_abdba .XAtIndex (_gegd ))-_ddda ;if _ccfe =_cedcdb .EncodeInteger (_ed .IADS ,_abefd );_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"");};_ddda +=_abefd ;};_dfbf ,_ggef :=_faaad ._ecaf .Get (_aace );if _ggef !=nil {return _gggd ,_dgd .Wrap (_ggef ,_aebbf ,"");
};_bfebb ,_eced :=_faaad ._aead [_dfbf ];if !_eced {_bfebb ,_eced =_faaad ._cagfa [_dfbf ];if !_eced {return _gggd ,_dgd .Errorf (_aebbf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_dfbf );
};};if _ggef =_cedcdb .EncodeIAID (_faaad ._efcf ,_bfebb );_ggef !=nil {return _gggd ,_dgd .Wrap (_ggef ,_aebbf ,"");};};if _ccfe =_cedcdb .EncodeOOB (_ed .IADS );_ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"");};};_cedcdb .Final ();_gbfa ,_ccfe :=_cedcdb .WriteTo (_eabb );
if _ccfe !=nil {return _gggd ,_dgd .Wrap (_ccfe ,_aebbf ,"");};_gggd +=int (_gbfa );return _gggd ,nil ;};func (_efbba *TextRegion )readAmountOfSymbolInstances ()error {_egaa ,_bag :=_efbba ._bgbd .ReadBits (32);if _bag !=nil {return _bag ;};_efbba .NumberOfSymbolInstances =uint32 (_egaa &_g .MaxUint32 );
_bage :=_efbba .RegionInfo .BitmapWidth *_efbba .RegionInfo .BitmapHeight ;if _bage < _efbba .NumberOfSymbolInstances {_fb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bage ,_efbba .NumberOfSymbolInstances );
_efbba .NumberOfSymbolInstances =_bage ;};return nil ;};func (_gda *PageInformationSegment )readResolution ()error {_gcagf ,_ddbd :=_gda ._gcdec .ReadBits (32);if _ddbd !=nil {return _ddbd ;};_gda .ResolutionX =int (_gcagf &_g .MaxInt32 );_gcagf ,_ddbd =_gda ._gcdec .ReadBits (32);
if _ddbd !=nil {return _ddbd ;};_gda .ResolutionY =int (_gcagf &_g .MaxInt32 );return nil ;};type SegmentEncoder interface{Encode (_gcce _dg .BinaryWriter )(_afc int ,_gcaf error );};func (_eec *GenericRegion )readGBAtPixels (_eae int )error {const _gfe ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_eec .GBAtX =make ([]int8 ,_eae );_eec .GBAtY =make ([]int8 ,_eae );for _fccf :=0;_fccf < _eae ;_fccf ++{_cgec ,_cbe :=_eec ._eac .ReadByte ();if _cbe !=nil {return _dgd .Wrapf (_cbe ,_gfe ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fccf );
};_eec .GBAtX [_fccf ]=int8 (_cgec );_cgec ,_cbe =_eec ._eac .ReadByte ();if _cbe !=nil {return _dgd .Wrapf (_cbe ,_gfe ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fccf );};_eec .GBAtY [_fccf ]=int8 (_cgec );};return nil ;};
func (_gdec *SymbolDictionary )getSymbol (_cbed int )(*_dc .Bitmap ,error ){const _cce ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_dabee ,_afba :=_gdec ._befb .GetBitmap (_gdec ._dgae [_cbed ]);if _afba !=nil {return nil ,_dgd .Wrap (_afba ,_cce ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _dabee ,nil ;};func _adea (_cafd *_dg .Reader ,_eegd *Header )*TextRegion {_bggbf :=&TextRegion {_bgbd :_cafd ,Header :_eegd ,RegionInfo :NewRegionSegment (_cafd )};return _bggbf ;};func (_adgf *PatternDictionary )extractPatterns (_adbc *_dc .Bitmap )error {var _bege int ;
_ecca :=make ([]*_dc .Bitmap ,_adgf .GrayMax +1);for _bege <=int (_adgf .GrayMax ){_fdcg :=int (_adgf .HdpWidth )*_bege ;_ebac :=_gc .Rect (_fdcg ,0,_fdcg +int (_adgf .HdpWidth ),int (_adgf .HdpHeight ));_cde ,_fbdbc :=_dc .Extract (_ebac ,_adbc );if _fbdbc !=nil {return _fbdbc ;
};_ecca [_bege ]=_cde ;_bege ++;};_adgf .Patterns =_ecca ;return nil ;};func (_dgf *SymbolDictionary )parseHeader ()(_cfd error ){_fb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cfd !=nil {_fb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cfd );
}else {_fb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cfd =_dgf .readRegionFlags ();_cfd !=nil {return _cfd ;};if _cfd =_dgf .setAtPixels ();_cfd !=nil {return _cfd ;};if _cfd =_dgf .setRefinementAtPixels ();_cfd !=nil {return _cfd ;};if _cfd =_dgf .readNumberOfExportedSymbols ();_cfd !=nil {return _cfd ;
};if _cfd =_dgf .readNumberOfNewSymbols ();_cfd !=nil {return _cfd ;};if _cfd =_dgf .setInSyms ();_cfd !=nil {return _cfd ;};if _dgf ._efba {_gdcd :=_dgf .Header .RTSegments ;for _bbeg :=len (_gdcd )-1;_bbeg >=0;_bbeg --{if _gdcd [_bbeg ].Type ==0{_aegd ,_ggcdb :=_gdcd [_bbeg ].SegmentData .(*SymbolDictionary );
if !_ggcdb {_cfd =_ca .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gdcd [_bbeg ]);
return _cfd ;};if _aegd ._efba {_dgf .setRetainedCodingContexts (_aegd );};break ;};};};if _cfd =_dgf .checkInput ();_cfd !=nil {return _cfd ;};return nil ;};func (_fge *TextRegion )decodeIds ()(int64 ,error ){const _degd ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _fge .IsHuffmanEncoded {if _fge .SbHuffDS ==3{if _fge ._eadb ==nil {_fgaf :=0;if _fge .SbHuffFS ==3{_fgaf ++;};var _efgb error ;_fge ._eadb ,_efgb =_fge .getUserTable (_fgaf );if _efgb !=nil {return 0,_dgd .Wrap (_efgb ,_degd ,"");};};return _fge ._eadb .Decode (_fge ._bgbd );
};_gbbfa ,_gfac :=_gcc .GetStandardTable (8+int (_fge .SbHuffDS ));if _gfac !=nil {return 0,_dgd .Wrap (_gfac ,_degd ,"");};return _gbbfa .Decode (_fge ._bgbd );};_gage ,_fbbc :=_fge ._cfbf .DecodeInt (_fge ._bgedd );if _fbbc !=nil {return 0,_dgd .Wrap (_fbbc ,_degd ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_gage ),nil ;};func (_cabb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_dc .Points ,symbols *_dc .Bitmaps ,classIDs *_dd .IntSlice ,boxes *_dc .Boxes ,width ,height ,symBits int ){_cabb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cabb ._aead =globalSymbolsMap ;_cabb ._cagfa =localSymbolsMap ;_cabb ._dgda =comps ;_cabb ._bgfe =inLL ;_cabb ._cfage =symbols ;_cabb ._ecaf =classIDs ;_cabb ._eece =boxes ;_cabb ._efcf =symBits ;};func (_fad *GenericRefinementRegion )decodeTypicalPredictedLine (_edf ,_baag ,_bff ,_da ,_fgd ,_gec int )error {_fc :=_edf -int (_fad .ReferenceDY );
_cd :=_fad .ReferenceBitmap .GetByteIndex (0,_fc );_bea :=_fad .RegionBitmap .GetByteIndex (0,_edf );var _gef error ;switch _fad .TemplateID {case 0:_gef =_fad .decodeTypicalPredictedLineTemplate0 (_edf ,_baag ,_bff ,_da ,_fgd ,_gec ,_bea ,_fc ,_cd );case 1:_gef =_fad .decodeTypicalPredictedLineTemplate1 (_edf ,_baag ,_bff ,_da ,_fgd ,_gec ,_bea ,_fc ,_cd );
};return _gef ;};func (_aab *SymbolDictionary )checkInput ()error {if _aab .SdHuffDecodeHeightSelection ==2{_fb .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_aab .SdHuffDecodeHeightSelection );
};if _aab .SdHuffDecodeWidthSelection ==2{_fb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_aab .SdHuffDecodeWidthSelection );
};if _aab .IsHuffmanEncoded {if _aab .SdTemplate !=0{_fb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_aab .SdTemplate );};
if !_aab .UseRefinementAggregation {if !_aab .UseRefinementAggregation {if _aab ._bfdcd {_fb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_aab ._bfdcd =false ;};if _aab ._efba {_fb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_aab ._efba =false ;};};};}else {if _aab .SdHuffBMSizeSelection !=0{_fb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_aab .SdHuffBMSizeSelection =0;};if _aab .SdHuffDecodeWidthSelection !=0{_fb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_aab .SdHuffDecodeWidthSelection =0;};if _aab .SdHuffDecodeHeightSelection !=0{_fb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_aab .SdHuffDecodeHeightSelection =0;};};if !_aab .UseRefinementAggregation {if _aab .SdrTemplate !=0{_fb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_aab .SdrTemplate );
_aab .SdrTemplate =0;};};if !_aab .IsHuffmanEncoded ||!_aab .UseRefinementAggregation {if _aab .SdHuffAggInstanceSelection {_fb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_aab .SdHuffAggInstanceSelection );
};};return nil ;};func (_fcfa *SymbolDictionary )setCodingStatistics ()error {if _fcfa ._dbbb ==nil {_fcfa ._dbbb =_f .NewStats (512,1);};if _fcfa ._agdc ==nil {_fcfa ._agdc =_f .NewStats (512,1);};if _fcfa ._dcge ==nil {_fcfa ._dcge =_f .NewStats (512,1);
};if _fcfa ._egdd ==nil {_fcfa ._egdd =_f .NewStats (512,1);};if _fcfa ._fggcc ==nil {_fcfa ._fggcc =_f .NewStats (512,1);};if _fcfa .UseRefinementAggregation &&_fcfa ._fgdd ==nil {_fcfa ._fgdd =_f .NewStats (1<<uint (_fcfa ._gac ),1);_fcfa ._dgec =_f .NewStats (512,1);
_fcfa ._eagcc =_f .NewStats (512,1);};if _fcfa ._ebfb ==nil {_fcfa ._ebfb =_f .NewStats (65536,1);};if _fcfa ._eaed ==nil {var _cgcbe error ;_fcfa ._eaed ,_cgcbe =_f .New (_fcfa ._gbe );if _cgcbe !=nil {return _cgcbe ;};};return nil ;};func (_fbgc *PageInformationSegment )Init (h *Header ,r *_dg .Reader )(_gbge error ){_fbgc ._gcdec =r ;
if _gbge =_fbgc .parseHeader ();_gbge !=nil {return _dgd .Wrap (_gbge ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_dda *template0 )form (_cfgb ,_fdc ,_gbcd ,_efd ,_dgab int16 )int16 {return (_cfgb <<10)|(_fdc <<7)|(_gbcd <<4)|(_efd <<1)|_dgab ;
};type EndOfStripe struct{_dga *_dg .Reader ;_cg int ;};func (_cbab *PageInformationSegment )Encode (w _dg .BinaryWriter )(_dacd int ,_gfgc error ){const _fafg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cdd :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cdd ,uint32 (_cbab .PageBMWidth ));_dacd ,_gfgc =w .Write (_cdd );if _gfgc !=nil {return _dacd ,_dgd .Wrap (_gfgc ,_fafg ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_cdd ,uint32 (_cbab .PageBMHeight ));
var _bdb int ;_bdb ,_gfgc =w .Write (_cdd );if _gfgc !=nil {return _bdb +_dacd ,_dgd .Wrap (_gfgc ,_fafg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dacd +=_bdb ;_e .BigEndian .PutUint32 (_cdd ,uint32 (_cbab .ResolutionX ));_bdb ,_gfgc =w .Write (_cdd );
if _gfgc !=nil {return _bdb +_dacd ,_dgd .Wrap (_gfgc ,_fafg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dacd +=_bdb ;_e .BigEndian .PutUint32 (_cdd ,uint32 (_cbab .ResolutionY ));if _bdb ,_gfgc =w .Write (_cdd );_gfgc !=nil {return _bdb +_dacd ,_dgd .Wrap (_gfgc ,_fafg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dacd +=_bdb ;if _gfgc =_cbab .encodeFlags (w );_gfgc !=nil {return _dacd ,_dgd .Wrap (_gfgc ,_fafg ,"");};_dacd ++;if _bdb ,_gfgc =_cbab .encodeStripingInformation (w );_gfgc !=nil {return _dacd ,_dgd .Wrap (_gfgc ,_fafg ,"");};_dacd +=_bdb ;return _dacd ,nil ;
};var _ SegmentEncoder =&GenericRegion {};func (_ccfa *PageInformationSegment )encodeStripingInformation (_fdg _dg .BinaryWriter )(_ecb int ,_bgaac error ){const _ebgd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ccfa .IsStripe {if _ecb ,_bgaac =_fdg .Write ([]byte {0x00,0x00});_bgaac !=nil {return 0,_dgd .Wrap (_bgaac ,_ebgd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ecb ,nil ;};_gedc :=make ([]byte ,2);_e .BigEndian .PutUint16 (_gedc ,_ccfa .MaxStripeSize |1<<15);
if _ecb ,_bgaac =_fdg .Write (_gedc );_bgaac !=nil {return 0,_dgd .Wrapf (_bgaac ,_ebgd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ccfa .MaxStripeSize );};return _ecb ,nil ;};func (_ggdbc *TableSegment )HtRS ()int32 {return _ggdbc ._dcdg };
func (_dfce *GenericRegion )parseHeader ()(_cabf error ){_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cabf !=nil {_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cabf );
}else {_fb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cbf int ;_ddgd uint64 ;);if _cabf =_dfce .RegionSegment .parseHeader ();_cabf !=nil {return _cabf ;};if _ ,_cabf =_dfce ._eac .ReadBits (3);_cabf !=nil {return _cabf ;};_cbf ,_cabf =_dfce ._eac .ReadBit ();if _cabf !=nil {return _cabf ;};if _cbf ==1{_dfce .UseExtTemplates =true ;
};_cbf ,_cabf =_dfce ._eac .ReadBit ();if _cabf !=nil {return _cabf ;};if _cbf ==1{_dfce .IsTPGDon =true ;};_ddgd ,_cabf =_dfce ._eac .ReadBits (2);if _cabf !=nil {return _cabf ;};_dfce .GBTemplate =byte (_ddgd &0xf);_cbf ,_cabf =_dfce ._eac .ReadBit ();
if _cabf !=nil {return _cabf ;};if _cbf ==1{_dfce .IsMMREncoded =true ;};if !_dfce .IsMMREncoded {_acdd :=1;if _dfce .GBTemplate ==0{_acdd =4;if _dfce .UseExtTemplates {_acdd =12;};};if _cabf =_dfce .readGBAtPixels (_acdd );_cabf !=nil {return _cabf ;};
};if _cabf =_dfce .computeSegmentDataStructure ();_cabf !=nil {return _cabf ;};_fb .Log .Trace ("\u0025\u0073",_dfce );return nil ;};func (_cagc *HalftoneRegion )Init (hd *Header ,r *_dg .Reader )error {_cagc ._fage =r ;_cagc ._bgef =hd ;_cagc .RegionSegment =NewRegionSegment (r );
return _cagc .parseHeader ();};func (_cadg *TextRegion )decodeDT ()(_fccc int64 ,_agde error ){if _cadg .IsHuffmanEncoded {if _cadg .SbHuffDT ==3{_fccc ,_agde =_cadg ._facec .Decode (_cadg ._bgbd );if _agde !=nil {return 0,_agde ;};}else {var _ddgfg _gcc .Tabler ;
_ddgfg ,_agde =_gcc .GetStandardTable (11+int (_cadg .SbHuffDT ));if _agde !=nil {return 0,_agde ;};_fccc ,_agde =_ddgfg .Decode (_cadg ._bgbd );if _agde !=nil {return 0,_agde ;};};}else {var _eagba int32 ;_eagba ,_agde =_cadg ._cfbf .DecodeInt (_cadg ._fabg );
if _agde !=nil {return 0,_agde ;};_fccc =int64 (_eagba );};_fccc *=int64 (_cadg .SbStrips );return _fccc ,nil ;};func (_bbcd *PatternDictionary )Init (h *Header ,r *_dg .Reader )error {_bbcd ._fgdf =r ;return _bbcd .parseHeader ();};func (_ffac *GenericRegion )writeGBAtPixels (_fecc _dg .BinaryWriter )(_aba int ,_gcgg error ){const _bgedg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _ffac .UseMMR {return 0,nil ;};_gfdb :=1;if _ffac .GBTemplate ==0{_gfdb =4;}else if _ffac .UseExtTemplates {_gfdb =12;};if len (_ffac .GBAtX )!=_gfdb {return 0,_dgd .Errorf (_bgedg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_ffac .GBAtY )!=_gfdb {return 0,_dgd .Errorf (_bgedg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _dadc :=0;_dadc < _gfdb ;_dadc ++{if _gcgg =_fecc .WriteByte (byte (_ffac .GBAtX [_dadc ]));_gcgg !=nil {return _aba ,_dgd .Wrap (_gcgg ,_bgedg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_aba ++;if _gcgg =_fecc .WriteByte (byte (_ffac .GBAtY [_dadc ]));
_gcgg !=nil {return _aba ,_dgd .Wrap (_gcgg ,_bgedg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_aba ++;};return _aba ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;
TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_cbad *Header )readReferredToSegmentNumbers (_edfgb *_dg .Reader ,_adac int )([]int ,error ){const _fegc ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cbef :=make ([]int ,_adac );if _adac > 0{_cbad .RTSegments =make ([]*Header ,_adac );var (_eea uint64 ;_gae error ;);for _ddd :=0;_ddd < _adac ;_ddd ++{_eea ,_gae =_edfgb .ReadBits (byte (_cbad .referenceSize ())<<3);if _gae !=nil {return nil ,_dgd .Wrapf (_gae ,_fegc ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ddd );
};_cbef [_ddd ]=int (_eea &_g .MaxInt32 );};};return _cbef ,nil ;};func (_dcdc *PageInformationSegment )parseHeader ()(_ceb error ){_fb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _ebdc ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _ceb !=nil {_ebdc +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_ceb .Error ();}else {_ebdc +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fb .Log .Trace (_ebdc );}();if _ceb =_dcdc .readWidthAndHeight ();
_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readResolution ();_ceb !=nil {return _ceb ;};_ ,_ceb =_dcdc ._gcdec .ReadBit ();if _ceb !=nil {return _ceb ;};if _ceb =_dcdc .readCombinationOperatorOverrideAllowed ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readRequiresAuxiliaryBuffer ();
_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readCombinationOperator ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readDefaultPixelValue ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readContainsRefinement ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readIsLossless ();
_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readIsStriped ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .readMaxStripeSize ();_ceb !=nil {return _ceb ;};if _ceb =_dcdc .checkInput ();_ceb !=nil {return _ceb ;};_fb .Log .Trace ("\u0025\u0073",_dcdc );return nil ;
};func (_gfeg *TableSegment )Init (h *Header ,r *_dg .Reader )error {_gfeg ._bcfc =r ;return _gfeg .parseHeader ();};func (_fgec *TextRegion )decodeRdy ()(int64 ,error ){const _ebff ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fgec .IsHuffmanEncoded {if _fgec .SbHuffRDY ==3{if _fgec ._dcfcg ==nil {var (_gdcf int ;
_edca error ;);if _fgec .SbHuffFS ==3{_gdcf ++;};if _fgec .SbHuffDS ==3{_gdcf ++;};if _fgec .SbHuffDT ==3{_gdcf ++;};if _fgec .SbHuffRDWidth ==3{_gdcf ++;};if _fgec .SbHuffRDHeight ==3{_gdcf ++;};if _fgec .SbHuffRDX ==3{_gdcf ++;};_fgec ._dcfcg ,_edca =_fgec .getUserTable (_gdcf );
if _edca !=nil {return 0,_dgd .Wrap (_edca ,_ebff ,"");};};return _fgec ._dcfcg .Decode (_fgec ._bgbd );};_aabf ,_cedcd :=_gcc .GetStandardTable (14+int (_fgec .SbHuffRDY ));if _cedcd !=nil {return 0,_cedcd ;};return _aabf .Decode (_fgec ._bgbd );};_fada ,_ccfc :=_fgec ._cfbf .DecodeInt (_fgec ._fbcd );
if _ccfc !=nil {return 0,_dgd .Wrap (_ccfc ,_ebff ,"");};return int64 (_fada ),nil ;};func (_fedfb *Header )referenceSize ()uint {switch {case _fedfb .SegmentNumber <=255:return 1;case _fedfb .SegmentNumber <=65535:return 2;default:return 4;};};func (_gddaea *TextRegion )decodeRdw ()(int64 ,error ){const _fffe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _gddaea .IsHuffmanEncoded {if _gddaea .SbHuffRDWidth ==3{if _gddaea ._afbad ==nil {var (_bdecf int ;_eaeb error ;);if _gddaea .SbHuffFS ==3{_bdecf ++;};if _gddaea .SbHuffDS ==3{_bdecf ++;};if _gddaea .SbHuffDT ==3{_bdecf ++;};_gddaea ._afbad ,_eaeb =_gddaea .getUserTable (_bdecf );
if _eaeb !=nil {return 0,_dgd .Wrap (_eaeb ,_fffe ,"");};};return _gddaea ._afbad .Decode (_gddaea ._bgbd );};_aabe ,_bfcg :=_gcc .GetStandardTable (14+int (_gddaea .SbHuffRDWidth ));if _bfcg !=nil {return 0,_dgd .Wrap (_bfcg ,_fffe ,"");};return _aabe .Decode (_gddaea ._bgbd );
};_gcgd ,_ffce :=_gddaea ._cfbf .DecodeInt (_gddaea ._cgde );if _ffce !=nil {return 0,_dgd .Wrap (_ffce ,_fffe ,"");};return int64 (_gcgd ),nil ;};func (_gecf *HalftoneRegion )computeY (_fba ,_fcge int )int {return _gecf .shiftAndFill (int (_gecf .HGridY )+_fba *int (_gecf .HRegionX )-_fcge *int (_gecf .HRegionY ));
};func (_cacc *PatternDictionary )GetDictionary ()([]*_dc .Bitmap ,error ){if _cacc .Patterns !=nil {return _cacc .Patterns ,nil ;};if !_cacc .IsMMREncoded {_cacc .setGbAtPixels ();};_ade :=NewGenericRegion (_cacc ._fgdf );_ade .setParametersMMR (_cacc .IsMMREncoded ,_cacc .DataOffset ,_cacc .DataLength ,uint32 (_cacc .HdpHeight ),(_cacc .GrayMax +1)*uint32 (_cacc .HdpWidth ),_cacc .HDTemplate ,false ,false ,_cacc .GBAtX ,_cacc .GBAtY );
_gcea ,_eaecg :=_ade .GetRegionBitmap ();if _eaecg !=nil {return nil ,_eaecg ;};if _eaecg =_cacc .extractPatterns (_gcea );_eaecg !=nil {return nil ,_eaecg ;};return _cacc .Patterns ,nil ;};func (_cfgbe *HalftoneRegion )parseHeader ()error {if _ebbb :=_cfgbe .RegionSegment .parseHeader ();
_ebbb !=nil {return _ebbb ;};_cffa ,_fdbaf :=_cfgbe ._fage .ReadBit ();if _fdbaf !=nil {return _fdbaf ;};_cfgbe .HDefaultPixel =int8 (_cffa );_gfde ,_fdbaf :=_cfgbe ._fage .ReadBits (3);if _fdbaf !=nil {return _fdbaf ;};_cfgbe .CombinationOperator =_dc .CombinationOperator (_gfde &0xf);
_cffa ,_fdbaf =_cfgbe ._fage .ReadBit ();if _fdbaf !=nil {return _fdbaf ;};if _cffa ==1{_cfgbe .HSkipEnabled =true ;};_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (2);if _fdbaf !=nil {return _fdbaf ;};_cfgbe .HTemplate =byte (_gfde &0xf);_cffa ,_fdbaf =_cfgbe ._fage .ReadBit ();
if _fdbaf !=nil {return _fdbaf ;};if _cffa ==1{_cfgbe .IsMMREncoded =true ;};_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (32);if _fdbaf !=nil {return _fdbaf ;};_cfgbe .HGridWidth =uint32 (_gfde &_g .MaxUint32 );_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (32);if _fdbaf !=nil {return _fdbaf ;
};_cfgbe .HGridHeight =uint32 (_gfde &_g .MaxUint32 );_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (32);if _fdbaf !=nil {return _fdbaf ;};_cfgbe .HGridX =int32 (_gfde &_g .MaxInt32 );_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (32);if _fdbaf !=nil {return _fdbaf ;
};_cfgbe .HGridY =int32 (_gfde &_g .MaxInt32 );_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (16);if _fdbaf !=nil {return _fdbaf ;};_cfgbe .HRegionX =uint16 (_gfde &_g .MaxUint16 );_gfde ,_fdbaf =_cfgbe ._fage .ReadBits (16);if _fdbaf !=nil {return _fdbaf ;};
_cfgbe .HRegionY =uint16 (_gfde &_g .MaxUint16 );if _fdbaf =_cfgbe .computeSegmentDataStructure ();_fdbaf !=nil {return _fdbaf ;};return _cfgbe .checkInput ();};func (_bbgd *PageInformationSegment )String ()string {_bbcg :=&_eg .Builder {};_bbcg .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bbgd .PageBMHeight ));_bbcg .WriteString (_ca .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bbgd .PageBMWidth ));
_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bbgd .ResolutionX ));_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bbgd .ResolutionY ));
_bbcg .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bbgd ._dbcb ));_bbcg .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bbgd ._agcc ));
_bbcg .WriteString (_ca .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bbgd .IsLossless ));_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbgd ._dfec ));
_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bbgd ._bccfb ));_bbcg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bbgd .IsStripe ));
_bbcg .WriteString (_ca .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bbgd .MaxStripeSize ));return _bbcg .String ();};func (_dafcf *TextRegion )computeSymbolCodeLength ()error {if _dafcf .IsHuffmanEncoded {return _dafcf .symbolIDCodeLengths ();
};_dafcf ._facfc =int8 (_g .Ceil (_g .Log (float64 (_dafcf .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_bee *GenericRegion )setParametersMMR (_bcg bool ,_egfab ,_gce int64 ,_aad ,_bfaf uint32 ,_aeea byte ,_fdba ,_dfe bool ,_gdg ,_bfeb []int8 ){_bee .DataOffset =_egfab ;
_bee .DataLength =_gce ;_bee .RegionSegment =&RegionSegment {};_bee .RegionSegment .BitmapHeight =_aad ;_bee .RegionSegment .BitmapWidth =_bfaf ;_bee .GBTemplate =_aeea ;_bee .IsMMREncoded =_bcg ;_bee .IsTPGDon =_fdba ;_bee .GBAtX =_gdg ;_bee .GBAtY =_bfeb ;
};func (_dce *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_baeag ,_bbdc :=_dce ._gcdec .ReadBit ();if _bbdc !=nil {return _bbdc ;};if _baeag ==1{_dce ._agcc =true ;};return nil ;};func (_cbgcd *TableSegment )parseHeader ()error {var (_efbe int ;
_cgdc uint64 ;_bdgeb error ;);_efbe ,_bdgeb =_cbgcd ._bcfc .ReadBit ();if _bdgeb !=nil {return _bdgeb ;};if _efbe ==1{return _ca .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_efbe );
};if _cgdc ,_bdgeb =_cbgcd ._bcfc .ReadBits (3);_bdgeb !=nil {return _bdgeb ;};_cbgcd ._dcdg =(int32 (_cgdc )+1)&0xf;if _cgdc ,_bdgeb =_cbgcd ._bcfc .ReadBits (3);_bdgeb !=nil {return _bdgeb ;};_cbgcd ._dcfcd =(int32 (_cgdc )+1)&0xf;if _cgdc ,_bdgeb =_cbgcd ._bcfc .ReadBits (32);
_bdgeb !=nil {return _bdgeb ;};_cbgcd ._adfg =int32 (_cgdc &_g .MaxInt32 );if _cgdc ,_bdgeb =_cbgcd ._bcfc .ReadBits (32);_bdgeb !=nil {return _bdgeb ;};_cbgcd ._bebcc =int32 (_cgdc &_g .MaxInt32 );return nil ;};func (_gad *template1 )form (_eefc ,_bgge ,_eggc ,_bga ,_egb int16 )int16 {return ((_eefc &0x02)<<8)|(_bgge <<6)|((_eggc &0x03)<<4)|(_bga <<1)|_egb ;
};func (_aa *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bbba ,_dge ,_ddc ,_bae ,_cab ,_bc ,_aed ,_gca ,_eag int )(_gcd error ){var (_fff ,_cdg int ;_gecb ,_bed int ;_aea ,_bba int ;_ddg byte ;);if _bbba > 0{_ddg ,_gcd =_aa .RegionBitmap .GetByte (_aed -_ddc );
if _gcd !=nil {return _gcd ;};_gecb =int (_ddg );};if _gca > 0&&_gca <=_aa .ReferenceBitmap .Height {_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag -_bae +_bc );if _gcd !=nil {return _gcd ;};_bed =int (_ddg )<<2;};if _gca >=0&&_gca < _aa .ReferenceBitmap .Height {_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag +_bc );
if _gcd !=nil {return _gcd ;};_aea =int (_ddg );};if _gca > -2&&_gca < _aa .ReferenceBitmap .Height -1{_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag +_bae +_bc );if _gcd !=nil {return _gcd ;};_bba =int (_ddg );};_fff =((_gecb >>5)&0x6)|((_bba >>2)&0x30)|(_aea &0xc0)|(_bed &0x200);
_cdg =((_bba >>2)&0x70)|(_aea &0xc0)|(_bed &0x700);var _fca int ;for _fbg :=0;_fbg < _cab ;_fbg =_fca {var (_gg int ;_cba int ;);_fca =_fbg +8;if _gg =_dge -_fbg ;_gg > 8{_gg =8;};_dcg :=_fca < _dge ;_gcag :=_fca < _aa .ReferenceBitmap .Width ;_dca :=_bc +1;
if _bbba > 0{_ddg =0;if _dcg {_ddg ,_gcd =_aa .RegionBitmap .GetByte (_aed -_ddc +1);if _gcd !=nil {return _gcd ;};};_gecb =(_gecb <<8)|int (_ddg );};if _gca > 0&&_gca <=_aa .ReferenceBitmap .Height {var _gbb int ;if _gcag {_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag -_bae +_dca );
if _gcd !=nil {return _gcd ;};_gbb =int (_ddg )<<2;};_bed =(_bed <<8)|_gbb ;};if _gca >=0&&_gca < _aa .ReferenceBitmap .Height {_ddg =0;if _gcag {_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag +_dca );if _gcd !=nil {return _gcd ;};};_aea =(_aea <<8)|int (_ddg );
};if _gca > -2&&_gca < (_aa .ReferenceBitmap .Height -1){_ddg =0;if _gcag {_ddg ,_gcd =_aa .ReferenceBitmap .GetByte (_eag +_bae +_dca );if _gcd !=nil {return _gcd ;};};_bba =(_bba <<8)|int (_ddg );};for _gdc :=0;_gdc < _gg ;_gdc ++{var _ccf int ;_acg :=(_cdg >>4)&0x1ff;
switch _acg {case 0x1ff:_ccf =1;case 0x00:_ccf =0;default:_aa ._a .SetIndex (int32 (_fff ));_ccf ,_gcd =_aa ._df .DecodeBit (_aa ._a );if _gcd !=nil {return _gcd ;};};_dcgg :=uint (7-_gdc );_cba |=_ccf <<_dcgg ;_fff =((_fff &0x0d6)<<1)|_ccf |(_gecb >>_dcgg +5)&0x002|((_bba >>_dcgg +2)&0x010)|((_aea >>_dcgg )&0x040)|((_bed >>_dcgg )&0x200);
_cdg =((_cdg &0xdb)<<1)|((_bba >>_dcgg +2)&0x010)|((_aea >>_dcgg )&0x080)|((_bed >>_dcgg )&0x400);};_gcd =_aa .RegionBitmap .SetByte (_aed ,byte (_cba ));if _gcd !=nil {return _gcd ;};_aed ++;_eag ++;};return nil ;};func (_ebfbe *SymbolDictionary )InitEncode (symbols *_dc .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _efee ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_ebfbe .SdATX =[]int8 {3,-3,2,-2};_ebfbe .SdATY =[]int8 {-1,-1,-2,-2};_ebfbe ._befb =symbols ;_ebfbe ._dgae =make ([]int ,len (symbolList ));copy (_ebfbe ._dgae ,symbolList );if len (_ebfbe ._dgae )!=_ebfbe ._befb .Size (){return _dgd .Error (_efee ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_ebfbe .NumberOfNewSymbols =uint32 (symbols .Size ());_ebfbe .NumberOfExportedSymbols =uint32 (symbols .Size ());_ebfbe ._fcfc =symbolMap ;_ebfbe ._bdae =unborderSymbols ;return nil ;};func (_bcdg *SymbolDictionary )setAtPixels ()error {if _bcdg .IsHuffmanEncoded {return nil ;
};_afcg :=1;if _bcdg .SdTemplate ==0{_afcg =4;};if _gdbc :=_bcdg .readAtPixels (_afcg );_gdbc !=nil {return _gdbc ;};return nil ;};func (_ddbg *SymbolDictionary )readAtPixels (_egda int )error {_ddbg .SdATX =make ([]int8 ,_egda );_ddbg .SdATY =make ([]int8 ,_egda );
var (_gaec byte ;_gegg error ;);for _aded :=0;_aded < _egda ;_aded ++{_gaec ,_gegg =_ddbg ._gbe .ReadByte ();if _gegg !=nil {return _gegg ;};_ddbg .SdATX [_aded ]=int8 (_gaec );_gaec ,_gegg =_ddbg ._gbe .ReadByte ();if _gegg !=nil {return _gegg ;};_ddbg .SdATY [_aded ]=int8 (_gaec );
};return nil ;};type Segmenter interface{Init (_aafc *Header ,_aeg *_dg .Reader )error ;};func (_egcg *TextRegion )String ()string {_ccd :=&_eg .Builder {};_ccd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_ccd .WriteString (_egcg .RegionInfo .String ()+"\u000a");_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_egcg .SbrTemplate ));_ccd .WriteString (_ca .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_egcg .SbDsOffset ));
_ccd .WriteString (_ca .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_egcg .DefaultPixel ));_ccd .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_egcg .CombinationOperator ));
_ccd .WriteString (_ca .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_egcg .IsTransposed ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_egcg .ReferenceCorner ));
_ccd .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_egcg .UseRefinement ));_ccd .WriteString (_ca .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_egcg .IsHuffmanEncoded ));
if _egcg .IsHuffmanEncoded {_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_egcg .SbHuffRSize ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_egcg .SbHuffRDY ));
_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_egcg .SbHuffRDX ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_egcg .SbHuffRDHeight ));
_ccd .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_egcg .SbHuffRDWidth ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_egcg .SbHuffDT ));
_ccd .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_egcg .SbHuffDS ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_egcg .SbHuffFS ));
};_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_egcg .SbrATX ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_egcg .SbrATY ));
_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_egcg .NumberOfSymbolInstances ));_ccd .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_egcg .SbrATX ));
return _ccd .String ();};func (_gfec *SymbolDictionary )decodeDirectlyThroughGenericRegion (_agea ,_ddad uint32 )error {if _gfec ._cadcf ==nil {_gfec ._cadcf =NewGenericRegion (_gfec ._gbe );};_gfec ._cadcf .setParametersWithAt (false ,byte (_gfec .SdTemplate ),false ,false ,_gfec .SdATX ,_gfec .SdATY ,_agea ,_ddad ,_gfec ._ebfb ,_gfec ._eaed );
return _gfec .addSymbol (_gfec ._cadcf );};func (_bgg *GenericRefinementRegion )setParameters (_ag *_f .DecoderStats ,_fgde *_f .Decoder ,_bgee int8 ,_gbg ,_eee uint32 ,_facf *_dc .Bitmap ,_bffc ,_fcbf int32 ,_egfb bool ,_fd []int8 ,_acea []int8 ){_fb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ag !=nil {_bgg ._a =_ag ;};if _fgde !=nil {_bgg ._df =_fgde ;};_bgg .TemplateID =_bgee ;_bgg .RegionInfo .BitmapWidth =_gbg ;_bgg .RegionInfo .BitmapHeight =_eee ;_bgg .ReferenceBitmap =_facf ;_bgg .ReferenceDX =_bffc ;_bgg .ReferenceDY =_fcbf ;_bgg .IsTPGROn =_egfb ;
_bgg .GrAtX =_fd ;_bgg .GrAtY =_acea ;_bgg .RegionBitmap =nil ;_fb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bgg );
};func (_aga *GenericRegion )computeSegmentDataStructure ()error {_aga .DataOffset =_aga ._eac .AbsolutePosition ();_aga .DataHeaderLength =_aga .DataOffset -_aga .DataHeaderOffset ;_aga .DataLength =int64 (_aga ._eac .AbsoluteLength ())-_aga .DataHeaderLength ;
return nil ;};var (_deb Segmenter ;_gcafc =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _deb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _deb },TProfiles :func ()Segmenter {return _deb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _deb },TBitmap :func ()Segmenter {return _deb }};
);func (_dcd *GenericRegion )setParameters (_gcgb bool ,_fbb ,_faba int64 ,_geg ,_fbbb uint32 ){_dcd .IsMMREncoded =_gcgb ;_dcd .DataOffset =_fbb ;_dcd .DataLength =_faba ;_dcd .RegionSegment .BitmapHeight =_geg ;_dcd .RegionSegment .BitmapWidth =_fbbb ;
_dcd ._agg =nil ;_dcd .Bitmap =nil ;};func (_agbd *Header )readNumberOfReferredToSegments (_edfa *_dg .Reader )(uint64 ,error ){const _aaafe ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_bced ,_gaae :=_edfa .ReadBits (3);if _gaae !=nil {return 0,_dgd .Wrap (_gaae ,_aaafe ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_bced &=0xf;var _cbd []byte ;if _bced <=4{_cbd =make ([]byte ,5);for _ecfa :=0;_ecfa <=4;_ecfa ++{_ebcf ,_fdaa :=_edfa .ReadBit ();
if _fdaa !=nil {return 0,_dgd .Wrap (_fdaa ,_aaafe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbd [_ecfa ]=byte (_ebcf );};}else {_bced ,_gaae =_edfa .ReadBits (29);if _gaae !=nil {return 0,_gaae ;};_bced &=_g .MaxInt32 ;
_eeb :=(_bced +8)>>3;_eeb <<=3;_cbd =make ([]byte ,_eeb );var _edda uint64 ;for _edda =0;_edda < _eeb ;_edda ++{_bcdd ,_agba :=_edfa .ReadBit ();if _agba !=nil {return 0,_dgd .Wrap (_agba ,_aaafe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cbd [_edda ]=byte (_bcdd );};};return _bced ,nil ;};type PatternDictionary struct{_fgdf *_dg .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;
HdpWidth byte ;HdpHeight byte ;Patterns []*_dc .Bitmap ;GrayMax uint32 ;};func (_cfee *GenericRegion )GetRegionInfo ()*RegionSegment {return _cfee .RegionSegment };var _ _gcc .BasicTabler =&TableSegment {};func (_fade *SymbolDictionary )encodeRefinementATFlags (_cbbc _dg .BinaryWriter )(_edea int ,_egca error ){const _aagb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_fade .UseRefinementAggregation ||_fade .SdrTemplate !=0{return 0,nil ;};for _gcec :=0;_gcec < 2;_gcec ++{if _egca =_cbbc .WriteByte (byte (_fade .SdrATX [_gcec ]));_egca !=nil {return _edea ,_dgd .Wrapf (_egca ,_aagb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gcec );
};_edea ++;if _egca =_cbbc .WriteByte (byte (_fade .SdrATY [_gcec ]));_egca !=nil {return _edea ,_dgd .Wrapf (_egca ,_aagb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gcec );};_edea ++;};return _edea ,nil ;};type SymbolDictionary struct{_gbe *_dg .Reader ;
SdrTemplate int8 ;SdTemplate int8 ;_bfdcd bool ;_efba bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bgefe uint32 ;_ggccg []*_dc .Bitmap ;_dgaba uint32 ;_gdbg []*_dc .Bitmap ;_beb _gcc .Tabler ;_eacc _gcc .Tabler ;_acee _gcc .Tabler ;
_fbba _gcc .Tabler ;_egfag []*_dc .Bitmap ;_dadd []*_dc .Bitmap ;_eaed *_f .Decoder ;_caae *TextRegion ;_cadcf *GenericRegion ;_dbf *GenericRefinementRegion ;_ebfb *_f .DecoderStats ;_agdc *_f .DecoderStats ;_dcge *_f .DecoderStats ;_egdd *_f .DecoderStats ;
_fggcc *_f .DecoderStats ;_dgec *_f .DecoderStats ;_eagcc *_f .DecoderStats ;_dbbb *_f .DecoderStats ;_fgdd *_f .DecoderStats ;_gac int8 ;_befb *_dc .Bitmaps ;_dgae []int ;_fcfc map[int ]int ;_bdae bool ;};func (_deef *Header )subInputReader ()(*_dg .Reader ,error ){_gcfe :=int (_deef .SegmentDataLength );
if _deef .SegmentDataLength ==_g .MaxInt32 {_gcfe =-1;};return _deef .Reader .NewPartialReader (int (_deef .SegmentDataStartOffset ),_gcfe ,false );};func (_be *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _be .RegionInfo };type HalftoneRegion struct{_fage *_dg .Reader ;
_bgef *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _dc .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_dc .Bitmap ;Patterns []*_dc .Bitmap ;};func (_bfce *PageInformationSegment )readWidthAndHeight ()error {_gecfe ,_cbc :=_bfce ._gcdec .ReadBits (32);
if _cbc !=nil {return _cbc ;};_bfce .PageBMWidth =int (_gecfe &_g .MaxInt32 );_gecfe ,_cbc =_bfce ._gcdec .ReadBits (32);if _cbc !=nil {return _cbc ;};_bfce .PageBMHeight =int (_gecfe &_g .MaxInt32 );return nil ;};func (_dacfe *SymbolDictionary )decodeThroughTextRegion (_fgb ,_aaaa ,_cdgg uint32 )error {if _dacfe ._caae ==nil {_dacfe ._caae =_adea (_dacfe ._gbe ,nil );
_dacfe ._caae .setContexts (_dacfe ._ebfb ,_f .NewStats (512,1),_f .NewStats (512,1),_f .NewStats (512,1),_f .NewStats (512,1),_dacfe ._fgdd ,_f .NewStats (512,1),_f .NewStats (512,1),_f .NewStats (512,1),_f .NewStats (512,1));};if _defb :=_dacfe .setSymbolsArray ();
_defb !=nil {return _defb ;};_dacfe ._caae .setParameters (_dacfe ._eaed ,_dacfe .IsHuffmanEncoded ,true ,_fgb ,_aaaa ,_cdgg ,1,_dacfe ._bgefe +_dacfe ._dgaba ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dacfe .SdrTemplate ,_dacfe .SdrATX ,_dacfe .SdrATY ,_dacfe ._dadd ,_dacfe ._gac );
return _dacfe .addSymbol (_dacfe ._caae );};func (_ddeg *GenericRegion )overrideAtTemplate2 (_ccgb ,_faf ,_geac ,_eeec ,_caceb int )int {_ccgb &=0x3FB;if _ddeg .GBAtY [0]==0&&_ddeg .GBAtX [0]>=-int8 (_caceb ){_ccgb |=(_eeec >>uint (7-(int8 (_caceb )+_ddeg .GBAtX [0]))&0x1)<<2;
}else {_ccgb |=int (_ddeg .getPixel (_faf +int (_ddeg .GBAtX [0]),_geac +int (_ddeg .GBAtY [0])))<<2;};return _ccgb ;};func (_ggcc *Header )writeSegmentNumber (_gbae _dg .BinaryWriter )(_dfbd int ,_cae error ){_gded :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gded ,_ggcc .SegmentNumber );
if _dfbd ,_cae =_gbae .Write (_gded );_cae !=nil {return 0,_dgd .Wrap (_cae ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _dfbd ,nil ;};func (_fegcg *Header )writeReferredToSegments (_ccab _dg .BinaryWriter )(_age int ,_eaa error ){const _bgaa ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_dfbg uint16 ;_cbdd uint32 ;);_fbcg :=_fegcg .referenceSize ();_baca :=1;_cdgbc :=make ([]byte ,_fbcg );for _ ,_eeg :=range _fegcg .RTSNumbers {switch _fbcg {case 4:_cbdd =uint32 (_eeg );_e .BigEndian .PutUint32 (_cdgbc ,_cbdd );_baca ,_eaa =_ccab .Write (_cdgbc );
if _eaa !=nil {return 0,_dgd .Wrap (_eaa ,_bgaa ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_dfbg =uint16 (_eeg );_e .BigEndian .PutUint16 (_cdgbc ,_dfbg );_baca ,_eaa =_ccab .Write (_cdgbc );if _eaa !=nil {return 0,_dgd .Wrap (_eaa ,_bgaa ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _eaa =_ccab .WriteByte (byte (_eeg ));_eaa !=nil {return 0,_dgd .Wrap (_eaa ,_bgaa ,"\u0075\u0069\u006et\u0038");};};_age +=_baca ;};return _age ,nil ;};func (_ebe *Header )readSegmentDataLength (_ddga *_dg .Reader )(_gag error ){_ebe .SegmentDataLength ,_gag =_ddga .ReadBits (32);
if _gag !=nil {return _gag ;};_ebe .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_geggf *SymbolDictionary )setInSyms ()error {if _geggf .Header .RTSegments !=nil {return _geggf .retrieveImportSymbols ();};_geggf ._ggccg =make ([]*_dc .Bitmap ,0);
return nil ;};func (_cadbd *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _dbff ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _cadbd .SbHuffRSize ==0{_ggaf ,_dcae :=_gcc .GetStandardTable (1);if _dcae !=nil {return 0,_dgd .Wrap (_dcae ,_dbff ,"");
};return _ggaf .Decode (_cadbd ._bgbd );};if _cadbd ._bbcf ==nil {var (_ecce int ;_dageb error ;);if _cadbd .SbHuffFS ==3{_ecce ++;};if _cadbd .SbHuffDS ==3{_ecce ++;};if _cadbd .SbHuffDT ==3{_ecce ++;};if _cadbd .SbHuffRDWidth ==3{_ecce ++;};if _cadbd .SbHuffRDHeight ==3{_ecce ++;
};if _cadbd .SbHuffRDX ==3{_ecce ++;};if _cadbd .SbHuffRDY ==3{_ecce ++;};_cadbd ._bbcf ,_dageb =_cadbd .getUserTable (_ecce );if _dageb !=nil {return 0,_dgd .Wrap (_dageb ,_dbff ,"");};};_bgbda ,_aebb :=_cadbd ._bbcf .Decode (_cadbd ._bgbd );if _aebb !=nil {return 0,_dgd .Wrap (_aebb ,_dbff ,"");
};return _bgbda ,nil ;};func _efeb (_bgaf int )int {if _bgaf ==0{return 0;};_bgaf |=_bgaf >>1;_bgaf |=_bgaf >>2;_bgaf |=_bgaf >>4;_bgaf |=_bgaf >>8;_bgaf |=_bgaf >>16;return (_bgaf +1)>>1;};func (_bdcd *TextRegion )getSymbols ()error {if _bdcd .Header .RTSegments !=nil {return _bdcd .initSymbols ();
};return nil ;};func (_efdg *GenericRefinementRegion )String ()string {_fgdb :=&_eg .Builder {};_fgdb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fgdb .WriteString (_efdg .RegionInfo .String ()+"\u000a");
_fgdb .WriteString (_ca .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_efdg .IsTPGROn ));_fgdb .WriteString (_ca .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_efdg .TemplateID ));
_fgdb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_efdg .GrAtX ));_fgdb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_efdg .GrAtY ));
_fgdb .WriteString (_ca .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_efdg .ReferenceDX ));_fgdb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_efdg .ReferenceDY ));
return _fgdb .String ();};type RegionSegment struct{_cdfg *_dg .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _dc .CombinationOperator ;};func (_fe *GenericRefinementRegion )Init (header *Header ,r *_dg .Reader )error {_fe ._bf =header ;
_fe ._fa =r ;_fe .RegionInfo =NewRegionSegment (r );return _fe .parseHeader ();};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_dc .Bitmap ,error );};func (_aedb *SymbolDictionary )decodeNewSymbols (_bdgg ,_dfdg uint32 ,_dbge *_dc .Bitmap ,_ddee ,_eace int32 )error {if _aedb ._dbf ==nil {_aedb ._dbf =_feba (_aedb ._gbe ,nil );
if _aedb ._eaed ==nil {var _eddf error ;_aedb ._eaed ,_eddf =_f .New (_aedb ._gbe );if _eddf !=nil {return _eddf ;};};if _aedb ._ebfb ==nil {_aedb ._ebfb =_f .NewStats (65536,1);};};_aedb ._dbf .setParameters (_aedb ._ebfb ,_aedb ._eaed ,_aedb .SdrTemplate ,_bdgg ,_dfdg ,_dbge ,_ddee ,_eace ,false ,_aedb .SdrATX ,_aedb .SdrATY );
return _aedb .addSymbol (_aedb ._dbf );};func (_gagc *TextRegion )readRegionFlags ()error {var (_deee int ;_edec uint64 ;_gdegf error ;);_deee ,_gdegf =_gagc ._bgbd .ReadBit ();if _gdegf !=nil {return _gdegf ;};_gagc .SbrTemplate =int8 (_deee );_edec ,_gdegf =_gagc ._bgbd .ReadBits (5);
if _gdegf !=nil {return _gdegf ;};_gagc .SbDsOffset =int8 (_edec );if _gagc .SbDsOffset > 0x0f{_gagc .SbDsOffset -=0x20;};_deee ,_gdegf =_gagc ._bgbd .ReadBit ();if _gdegf !=nil {return _gdegf ;};_gagc .DefaultPixel =int8 (_deee );_edec ,_gdegf =_gagc ._bgbd .ReadBits (2);
if _gdegf !=nil {return _gdegf ;};_gagc .CombinationOperator =_dc .CombinationOperator (int (_edec )&0x3);_deee ,_gdegf =_gagc ._bgbd .ReadBit ();if _gdegf !=nil {return _gdegf ;};_gagc .IsTransposed =int8 (_deee );_edec ,_gdegf =_gagc ._bgbd .ReadBits (2);
if _gdegf !=nil {return _gdegf ;};_gagc .ReferenceCorner =int16 (_edec )&0x3;_edec ,_gdegf =_gagc ._bgbd .ReadBits (2);if _gdegf !=nil {return _gdegf ;};_gagc .LogSBStrips =int16 (_edec )&0x3;_gagc .SbStrips =1<<uint (_gagc .LogSBStrips );_deee ,_gdegf =_gagc ._bgbd .ReadBit ();
if _gdegf !=nil {return _gdegf ;};if _deee ==1{_gagc .UseRefinement =true ;};_deee ,_gdegf =_gagc ._bgbd .ReadBit ();if _gdegf !=nil {return _gdegf ;};if _deee ==1{_gagc .IsHuffmanEncoded =true ;};return nil ;};func (_agce *TextRegion )decodeStripT ()(_aeac int64 ,_bbed error ){if _agce .IsHuffmanEncoded {if _agce .SbHuffDT ==3{if _agce ._facec ==nil {var _bafa int ;
if _agce .SbHuffFS ==3{_bafa ++;};if _agce .SbHuffDS ==3{_bafa ++;};_agce ._facec ,_bbed =_agce .getUserTable (_bafa );if _bbed !=nil {return 0,_bbed ;};};_aeac ,_bbed =_agce ._facec .Decode (_agce ._bgbd );if _bbed !=nil {return 0,_bbed ;};}else {var _ebfe _gcc .Tabler ;
_ebfe ,_bbed =_gcc .GetStandardTable (11+int (_agce .SbHuffDT ));if _bbed !=nil {return 0,_bbed ;};_aeac ,_bbed =_ebfe .Decode (_agce ._bgbd );if _bbed !=nil {return 0,_bbed ;};};}else {var _gebd int32 ;_gebd ,_bbed =_agce ._cfbf .DecodeInt (_agce ._fabg );
if _bbed !=nil {return 0,_bbed ;};_aeac =int64 (_gebd );};_aeac *=int64 (-_agce .SbStrips );return _aeac ,nil ;};func (_dbeg *TextRegion )blit (_cefb *_dc .Bitmap ,_caee int64 )error {if _dbeg .IsTransposed ==0&&(_dbeg .ReferenceCorner ==2||_dbeg .ReferenceCorner ==3){_dbeg ._bbdf +=int64 (_cefb .Width -1);
}else if _dbeg .IsTransposed ==1&&(_dbeg .ReferenceCorner ==0||_dbeg .ReferenceCorner ==2){_dbeg ._bbdf +=int64 (_cefb .Height -1);};_ccgfg :=_dbeg ._bbdf ;if _dbeg .IsTransposed ==1{_ccgfg ,_caee =_caee ,_ccgfg ;};switch _dbeg .ReferenceCorner {case 0:_caee -=int64 (_cefb .Height -1);
case 2:_caee -=int64 (_cefb .Height -1);_ccgfg -=int64 (_cefb .Width -1);case 3:_ccgfg -=int64 (_cefb .Width -1);};_badb :=_dc .Blit (_cefb ,_dbeg .RegionBitmap ,int (_ccgfg ),int (_caee ),_dbeg .CombinationOperator );if _badb !=nil {return _badb ;};if _dbeg .IsTransposed ==0&&(_dbeg .ReferenceCorner ==0||_dbeg .ReferenceCorner ==1){_dbeg ._bbdf +=int64 (_cefb .Width -1);
};if _dbeg .IsTransposed ==1&&(_dbeg .ReferenceCorner ==1||_dbeg .ReferenceCorner ==3){_dbeg ._bbdf +=int64 (_cefb .Height -1);};return nil ;};func (_agf *PatternDictionary )readTemplate ()error {_ffb ,_bbec :=_agf ._fgdf .ReadBits (2);if _bbec !=nil {return _bbec ;
};_agf .HDTemplate =byte (_ffb );return nil ;};func (_bdcg *RegionSegment )parseHeader ()error {const _aca ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_fb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ecg ,_acf :=_bdcg ._cdfg .ReadBits (32);if _acf !=nil {return _dgd .Wrap (_acf ,_aca ,"\u0077\u0069\u0064t\u0068");
};_bdcg .BitmapWidth =uint32 (_ecg &_g .MaxUint32 );_ecg ,_acf =_bdcg ._cdfg .ReadBits (32);if _acf !=nil {return _dgd .Wrap (_acf ,_aca ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bdcg .BitmapHeight =uint32 (_ecg &_g .MaxUint32 );_ecg ,_acf =_bdcg ._cdfg .ReadBits (32);
if _acf !=nil {return _dgd .Wrap (_acf ,_aca ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bdcg .XLocation =uint32 (_ecg &_g .MaxUint32 );_ecg ,_acf =_bdcg ._cdfg .ReadBits (32);if _acf !=nil {return _dgd .Wrap (_acf ,_aca ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");
};_bdcg .YLocation =uint32 (_ecg &_g .MaxUint32 );if _ ,_acf =_bdcg ._cdfg .ReadBits (5);_acf !=nil {return _dgd .Wrap (_acf ,_aca ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _acf =_bdcg .readCombinationOperator ();_acf !=nil {return _dgd .Wrap (_acf ,_aca ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_afacb *TextRegion )decodeCurrentT ()(int64 ,error ){if _afacb .SbStrips !=1{if _afacb .IsHuffmanEncoded {_fefc ,_addb :=_afacb ._bgbd .ReadBits (byte (_afacb .LogSBStrips ));return int64 (_fefc ),_addb ;};_efbec ,_fegcf :=_afacb ._cfbf .DecodeInt (_afacb ._gaea );
if _fegcf !=nil {return 0,_fegcf ;};return int64 (_efbec ),nil ;};return 0,nil ;};type template0 struct{};func (_gbdc *PageInformationSegment )Size ()int {return 19};func (_gafg *GenericRegion )decodeLine (_cbag ,_eggce ,_aggb int )error {const _aafa ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_fddf :=_gafg .Bitmap .GetByteIndex (0,_cbag );_bggc :=_fddf -_gafg .Bitmap .RowStride ;switch _gafg .GBTemplate {case 0:if !_gafg .UseExtTemplates {return _gafg .decodeTemplate0a (_cbag ,_eggce ,_aggb ,_fddf ,_bggc );};return _gafg .decodeTemplate0b (_cbag ,_eggce ,_aggb ,_fddf ,_bggc );
case 1:return _gafg .decodeTemplate1 (_cbag ,_eggce ,_aggb ,_fddf ,_bggc );case 2:return _gafg .decodeTemplate2 (_cbag ,_eggce ,_aggb ,_fddf ,_bggc );case 3:return _gafg .decodeTemplate3 (_cbag ,_eggce ,_aggb ,_fddf ,_bggc );};return _dgd .Errorf (_aafa ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gafg .GBTemplate );
};func (_cggc *Header )pageSize ()uint {if _cggc .PageAssociation <=255{return 1;};return 4;};func (_acca *TextRegion )symbolIDCodeLengths ()error {var (_gfbcg []*_gcc .Code ;_caeb uint64 ;_cgee _gcc .Tabler ;_gfdc error ;);for _gbfc :=0;_gbfc < 35;_gbfc ++{_caeb ,_gfdc =_acca ._bgbd .ReadBits (4);
if _gfdc !=nil {return _gfdc ;};_fgfd :=int (_caeb &0xf);if _fgfd > 0{_gfbcg =append (_gfbcg ,_gcc .NewCode (int32 (_fgfd ),0,int32 (_gbfc ),false ));};};_cgee ,_gfdc =_gcc .NewFixedSizeTable (_gfbcg );if _gfdc !=nil {return _gfdc ;};var (_daddd int64 ;
_ddef uint32 ;_edcd []*_gcc .Code ;_cgfc int64 ;);for _ddef < _acca .NumberOfSymbols {_cgfc ,_gfdc =_cgee .Decode (_acca ._bgbd );if _gfdc !=nil {return _gfdc ;};if _cgfc < 32{if _cgfc > 0{_edcd =append (_edcd ,_gcc .NewCode (int32 (_cgfc ),0,int32 (_ddef ),false ));
};_daddd =_cgfc ;_ddef ++;}else {var _fedfa ,_deafg int64 ;switch _cgfc {case 32:_caeb ,_gfdc =_acca ._bgbd .ReadBits (2);if _gfdc !=nil {return _gfdc ;};_fedfa =3+int64 (_caeb );if _ddef > 0{_deafg =_daddd ;};case 33:_caeb ,_gfdc =_acca ._bgbd .ReadBits (3);
if _gfdc !=nil {return _gfdc ;};_fedfa =3+int64 (_caeb );case 34:_caeb ,_gfdc =_acca ._bgbd .ReadBits (7);if _gfdc !=nil {return _gfdc ;};_fedfa =11+int64 (_caeb );};for _eccaa :=0;_eccaa < int (_fedfa );_eccaa ++{if _deafg > 0{_edcd =append (_edcd ,_gcc .NewCode (int32 (_deafg ),0,int32 (_ddef ),false ));
};_ddef ++;};};};_acca ._bgbd .Align ();_acca ._cegg ,_gfdc =_gcc .NewFixedSizeTable (_edcd );return _gfdc ;};const (ORandom OrganizationType =iota ;OSequential ;);func _feba (_aaa *_dg .Reader ,_bfdc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fa :_aaa ,RegionInfo :NewRegionSegment (_aaa ),_bf :_bfdc ,_bd :&template0 {},_ef :&template1 {}};
};func (_gbbg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bece :=range _gbbg .Header .RTSegments {if _bece .Type ==0{_gcbd ,_adcbe :=_bece .GetSegmentData ();if _adcbe !=nil {return _adcbe ;};_adbg ,_dbgd :=_gcbd .(*SymbolDictionary );if !_dbgd {return _ca .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gcbd );
};_aefeb ,_adcbe :=_adbg .GetDictionary ();if _adcbe !=nil {return _ca .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bece .SegmentNumber ,_adcbe .Error ());
};_gbbg ._ggccg =append (_gbbg ._ggccg ,_aefeb ...);_gbbg ._bgefe +=_adbg .NumberOfExportedSymbols ;};};return nil ;};func (_efad *TextRegion )checkInput ()error {const _dgde ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_efad .UseRefinement {if _efad .SbrTemplate !=0{_fb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_efad .SbrTemplate =0;};};if _efad .SbHuffFS ==2||_efad .SbHuffRDWidth ==2||_efad .SbHuffRDHeight ==2||_efad .SbHuffRDX ==2||_efad .SbHuffRDY ==2{return _dgd .Error (_dgde ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_efad .UseRefinement {if _efad .SbHuffRSize !=0{_fb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_efad .SbHuffRSize =0;};if _efad .SbHuffRDY !=0{_fb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_efad .SbHuffRDY =0;};if _efad .SbHuffRDX !=0{_fb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_efad .SbHuffRDX =0;};if _efad .SbHuffRDWidth !=0{_fb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_efad .SbHuffRDWidth =0;};if _efad .SbHuffRDHeight !=0{_fb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_efad .SbHuffRDHeight =0;};};return nil ;
};func (_eddb *TextRegion )getUserTable (_cecd int )(_gcc .Tabler ,error ){const _ceeb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _cbfe int ;for _ ,_eefaa :=range _eddb .Header .RTSegments {if _eefaa .Type ==53{if _cbfe ==_cecd {_aaaeb ,_gfecf :=_eefaa .GetSegmentData ();
if _gfecf !=nil {return nil ,_gfecf ;};_fgee ,_ffcc :=_aaaeb .(*TableSegment );if !_ffcc {_fb .Log .Debug (_ca .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_eefaa .SegmentNumber ));
return nil ,_dgd .Error (_ceeb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gcc .NewEncodedTable (_fgee );};_cbfe ++;};};return nil ,nil ;};func (_fbfc *template1 )setIndex (_dec *_f .DecoderStats ){_dec .SetIndex (0x080)};func (_bdca *PageInformationSegment )readIsStriped ()error {_bcbf ,_bcae :=_bdca ._gcdec .ReadBit ();
if _bcae !=nil {return _bcae ;};if _bcbf ==1{_bdca .IsStripe =true ;};return nil ;};func (_cac *GenericRefinementRegion )decodeOptimized (_ecf ,_ab ,_fg ,_abb ,_cag ,_baa ,_acc int )error {var (_cagf error ;_bb int ;_fgc int ;);_ebf :=_ecf -int (_cac .ReferenceDY );
if _fec :=int (-_cac .ReferenceDX );_fec > 0{_bb =_fec ;};_bfd :=_cac .ReferenceBitmap .GetByteIndex (_bb ,_ebf );if _cac .ReferenceDX > 0{_fgc =int (_cac .ReferenceDX );};_fea :=_cac .RegionBitmap .GetByteIndex (_fgc ,_ecf );switch _cac .TemplateID {case 0:_cagf =_cac .decodeTemplate (_ecf ,_ab ,_fg ,_abb ,_cag ,_baa ,_acc ,_fea ,_ebf ,_bfd ,_cac ._bd );
case 1:_cagf =_cac .decodeTemplate (_ecf ,_ab ,_fg ,_abb ,_cag ,_baa ,_acc ,_fea ,_ebf ,_bfd ,_cac ._ef );};return _cagf ;};func (_gaff *PatternDictionary )computeSegmentDataStructure ()error {_gaff .DataOffset =_gaff ._fgdf .AbsolutePosition ();_gaff .DataHeaderLength =_gaff .DataOffset -_gaff .DataHeaderOffset ;
_gaff .DataLength =int64 (_gaff ._fgdf .AbsoluteLength ())-_gaff .DataHeaderLength ;return nil ;};func (_befd *SymbolDictionary )addSymbol (_ccfg Regioner )error {_bgc ,_agcca :=_ccfg .GetRegionBitmap ();if _agcca !=nil {return _agcca ;};_befd ._gdbg [_befd ._dgaba ]=_bgc ;
_befd ._dadd =append (_befd ._dadd ,_bgc );_fb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_bgc );return nil ;};func (_eggg *SymbolDictionary )readNumberOfExportedSymbols ()error {_ega ,_cbdb :=_eggg ._gbe .ReadBits (32);
if _cbdb !=nil {return _cbdb ;};_eggg .NumberOfExportedSymbols =uint32 (_ega &_g .MaxUint32 );return nil ;};func (_ccfb *TableSegment )StreamReader ()*_dg .Reader {return _ccfb ._bcfc };type EncodeInitializer interface{InitEncode ();};func (_dacae *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dacae .SdHuffDecodeHeightSelection {case 0:_cegc ,_dfee :=_gcc .GetStandardTable (4);
if _dfee !=nil {return 0,_dfee ;};return _cegc .Decode (_dacae ._gbe );case 1:_fcded ,_gacf :=_gcc .GetStandardTable (5);if _gacf !=nil {return 0,_gacf ;};return _fcded .Decode (_dacae ._gbe );case 3:if _dacae ._beb ==nil {_cgaf ,_fdcc :=_gcc .GetStandardTable (0);
if _fdcc !=nil {return 0,_fdcc ;};_dacae ._beb =_cgaf ;};return _dacae ._beb .Decode (_dacae ._gbe );};return 0,nil ;};