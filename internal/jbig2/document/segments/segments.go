//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_c "encoding/binary";_b "errors";_ca "fmt";_cb "github.com/unidoc/unipdf/v3/common";_dg "github.com/unidoc/unipdf/v3/internal/bitwise";_cabb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dcb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_bd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_gc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cab "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_a "image";_dc "io";_d "math";_cg "strings";_dd "time";);func (_ggbe *GenericRegion )GetRegionInfo ()*RegionSegment {return _ggbe .RegionSegment };
func (_ffdd *PageInformationSegment )parseHeader ()(_gcf error ){_cb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fdad ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gcf !=nil {_fdad +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gcf .Error ();}else {_fdad +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_cb .Log .Trace (_fdad );}();if _gcf =_ffdd .readWidthAndHeight ();
_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readResolution ();_gcf !=nil {return _gcf ;};_ ,_gcf =_ffdd ._dfa .ReadBit ();if _gcf !=nil {return _gcf ;};if _gcf =_ffdd .readCombinationOperatorOverrideAllowed ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readRequiresAuxiliaryBuffer ();
_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readCombinationOperator ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readDefaultPixelValue ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readContainsRefinement ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readIsLossless ();
_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readIsStriped ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .readMaxStripeSize ();_gcf !=nil {return _gcf ;};if _gcf =_ffdd .checkInput ();_gcf !=nil {return _gcf ;};_cb .Log .Trace ("\u0025\u0073",_ffdd );return nil ;
};func (_gce *HalftoneRegion )computeGrayScalePlanes (_dacea []*_dcb .Bitmap ,_fgfb int )([][]int ,error ){_gfda :=make ([][]int ,_gce .HGridHeight );for _ebg :=0;_ebg < len (_gfda );_ebg ++{_gfda [_ebg ]=make ([]int ,_gce .HGridWidth );};for _eebe :=0;
_eebe < int (_gce .HGridHeight );_eebe ++{for _agbc :=0;_agbc < int (_gce .HGridWidth );_agbc +=8{var _ecdgc int ;if _dcf :=int (_gce .HGridWidth )-_agbc ;_dcf > 8{_ecdgc =8;}else {_ecdgc =_dcf ;};_bfa :=_dacea [0].GetByteIndex (_agbc ,_eebe );for _bggbe :=0;
_bggbe < _ecdgc ;_bggbe ++{_gfef :=_bggbe +_agbc ;_gfda [_eebe ][_gfef ]=0;for _dfbf :=0;_dfbf < _fgfb ;_dfbf ++{_aafb ,_gbca :=_dacea [_dfbf ].GetByte (_bfa );if _gbca !=nil {return nil ,_gbca ;};_ebd :=_aafb >>uint (7-_gfef &7);_feagb :=_ebd &1;_bdae :=1<<uint (_dfbf );
_bdbe :=int (_feagb )*_bdae ;_gfda [_eebe ][_gfef ]+=_bdbe ;};};};};return _gfda ,nil ;};var _ templater =&template1 {};func (_cffba *TextRegion )decodeSymbolInstances ()error {_fffd ,_ggeg :=_cffba .decodeStripT ();if _ggeg !=nil {return _ggeg ;};var (_cacf int64 ;
_bccd uint32 ;);for _bccd < _cffba .NumberOfSymbolInstances {_cbcb ,_ggdd :=_cffba .decodeDT ();if _ggdd !=nil {return _ggdd ;};_fffd +=_cbcb ;var _gaccc int64 ;_caece :=true ;_cffba ._cgea =0;for {if _caece {_gaccc ,_ggdd =_cffba .decodeDfs ();if _ggdd !=nil {return _ggdd ;
};_cacf +=_gaccc ;_cffba ._cgea =_cacf ;_caece =false ;}else {_cbad ,_bfbd :=_cffba .decodeIds ();if _b .Is (_bfbd ,_cab .ErrOOB ){break ;};if _bfbd !=nil {return _bfbd ;};if _bccd >=_cffba .NumberOfSymbolInstances {break ;};_cffba ._cgea +=_cbad +int64 (_cffba .SbDsOffset );
};_gfce ,_cgeg :=_cffba .decodeCurrentT ();if _cgeg !=nil {return _cgeg ;};_aeaaa :=_fffd +_gfce ;_bada ,_cgeg :=_cffba .decodeID ();if _cgeg !=nil {return _cgeg ;};_gfcb ,_cgeg :=_cffba .decodeRI ();if _cgeg !=nil {return _cgeg ;};_dafa ,_cgeg :=_cffba .decodeIb (_gfcb ,_bada );
if _cgeg !=nil {return _cgeg ;};if _cgeg =_cffba .blit (_dafa ,_aeaaa );_cgeg !=nil {return _cgeg ;};_bccd ++;};};return nil ;};func (_dgg *GenericRefinementRegion )updateOverride ()error {if _dgg .GrAtX ==nil ||_dgg .GrAtY ==nil {return _b .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_dgg .GrAtX )!=len (_dgg .GrAtY ){return _b .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_dgg ._edg =make ([]bool ,len (_dgg .GrAtX ));switch _dgg .TemplateID {case 0:if _dgg .GrAtX [0]!=-1&&_dgg .GrAtY [0]!=-1{_dgg ._edg [0]=true ;
_dgg ._gea =true ;};if _dgg .GrAtX [1]!=-1&&_dgg .GrAtY [1]!=-1{_dgg ._edg [1]=true ;_dgg ._gea =true ;};case 1:_dgg ._gea =false ;};return nil ;};func (_ebad *TextRegion )Encode (w _dg .BinaryWriter )(_gbcd int ,_babc error ){const _ecab ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _gbcd ,_babc =_ebad .RegionInfo .Encode (w );_babc !=nil {return _gbcd ,_gc .Wrap (_babc ,_ecab ,"");};var _afdg int ;if _afdg ,_babc =_ebad .encodeFlags (w );_babc !=nil {return _gbcd ,_gc .Wrap (_babc ,_ecab ,"");};_gbcd +=_afdg ;if _afdg ,_babc =_ebad .encodeSymbols (w );
_babc !=nil {return _gbcd ,_gc .Wrap (_babc ,_ecab ,"");};_gbcd +=_afdg ;return _gbcd ,nil ;};func (_bee *HalftoneRegion )checkInput ()error {if _bee .IsMMREncoded {if _bee .HTemplate !=0{_cb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bee .HTemplate );
};if _bee .HSkipEnabled {_cb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bee .HSkipEnabled );
};};return nil ;};type Regioner interface{GetRegionBitmap ()(*_dcb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_egfc *GenericRegion )copyLineAbove (_dec int )error {_fabg :=_dec *_egfc .Bitmap .RowStride ;_fdg :=_fabg -_egfc .Bitmap .RowStride ;
for _bcf :=0;_bcf < _egfc .Bitmap .RowStride ;_bcf ++{_abg ,_dgcb :=_egfc .Bitmap .GetByte (_fdg );if _dgcb !=nil {return _dgcb ;};_fdg ++;if _dgcb =_egfc .Bitmap .SetByte (_fabg ,_abg );_dgcb !=nil {return _dgcb ;};_fabg ++;};return nil ;};func (_cdeb *Header )CleanSegmentData (){if _cdeb .SegmentData !=nil {_cdeb .SegmentData =nil ;
};};func (_ffcb *SymbolDictionary )getUserTable (_agbcd int )(_ac .Tabler ,error ){var _dgca int ;for _ ,_feec :=range _ffcb .Header .RTSegments {if _feec .Type ==53{if _dgca ==_agbcd {_adfa ,_gcaf :=_feec .GetSegmentData ();if _gcaf !=nil {return nil ,_gcaf ;
};_bbc :=_adfa .(_ac .BasicTabler );return _ac .NewEncodedTable (_bbc );};_dgca ++;};};return nil ,nil ;};func (_egbe *template0 )setIndex (_gbdg *_bd .DecoderStats ){_gbdg .SetIndex (0x100)};func (_acfd *GenericRegion )setParametersMMR (_afbe bool ,_geb ,_gcbd int64 ,_bacd ,_adeg uint32 ,_ccd byte ,_gdg ,_aae bool ,_fee ,_dbde []int8 ){_acfd .DataOffset =_geb ;
_acfd .DataLength =_gcbd ;_acfd .RegionSegment =&RegionSegment {};_acfd .RegionSegment .BitmapHeight =_bacd ;_acfd .RegionSegment .BitmapWidth =_adeg ;_acfd .GBTemplate =_ccd ;_acfd .IsMMREncoded =_afbe ;_acfd .IsTPGDon =_gdg ;_acfd .GBAtX =_fee ;_acfd .GBAtY =_dbde ;
};func (_ggcf *SymbolDictionary )addSymbol (_bgcf Regioner )error {_deddc ,_fge :=_bgcf .GetRegionBitmap ();if _fge !=nil {return _fge ;};_ggcf ._fcdee [_ggcf ._fefaf ]=_deddc ;_ggcf ._fcae =append (_ggcf ._fcae ,_deddc );_cb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_deddc );
return nil ;};func (_bebc *TextRegion )parseHeader ()error {var _bggf error ;_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _bggf !=nil {_cb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bggf );
}else {_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bggf =_bebc .RegionInfo .parseHeader ();
_bggf !=nil {return _bggf ;};if _bggf =_bebc .readRegionFlags ();_bggf !=nil {return _bggf ;};if _bebc .IsHuffmanEncoded {if _bggf =_bebc .readHuffmanFlags ();_bggf !=nil {return _bggf ;};};if _bggf =_bebc .readUseRefinement ();_bggf !=nil {return _bggf ;
};if _bggf =_bebc .readAmountOfSymbolInstances ();_bggf !=nil {return _bggf ;};if _bggf =_bebc .getSymbols ();_bggf !=nil {return _bggf ;};if _bggf =_bebc .computeSymbolCodeLength ();_bggf !=nil {return _bggf ;};if _bggf =_bebc .checkInput ();_bggf !=nil {return _bggf ;
};_cb .Log .Trace ("\u0025\u0073",_bebc .String ());return nil ;};func (_bga *Header )writeSegmentPageAssociation (_dbca _dg .BinaryWriter )(_aba int ,_acb error ){const _aegf ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bga .pageSize ()!=4{if _acb =_dbca .WriteByte (byte (_bga .PageAssociation ));_acb !=nil {return 0,_gc .Wrap (_acb ,_aegf ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_afbeb :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_afbeb ,uint32 (_bga .PageAssociation ));if _aba ,_acb =_dbca .Write (_afbeb );_acb !=nil {return 0,_gc .Wrap (_acb ,_aegf ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _aba ,nil ;
};func (_ebbc *HalftoneRegion )parseHeader ()error {if _ccc :=_ebbc .RegionSegment .parseHeader ();_ccc !=nil {return _ccc ;};_faea ,_ccg :=_ebbc ._fcdd .ReadBit ();if _ccg !=nil {return _ccg ;};_ebbc .HDefaultPixel =int8 (_faea );_dfdf ,_ccg :=_ebbc ._fcdd .ReadBits (3);
if _ccg !=nil {return _ccg ;};_ebbc .CombinationOperator =_dcb .CombinationOperator (_dfdf &0xf);_faea ,_ccg =_ebbc ._fcdd .ReadBit ();if _ccg !=nil {return _ccg ;};if _faea ==1{_ebbc .HSkipEnabled =true ;};_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (2);if _ccg !=nil {return _ccg ;
};_ebbc .HTemplate =byte (_dfdf &0xf);_faea ,_ccg =_ebbc ._fcdd .ReadBit ();if _ccg !=nil {return _ccg ;};if _faea ==1{_ebbc .IsMMREncoded =true ;};_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (32);if _ccg !=nil {return _ccg ;};_ebbc .HGridWidth =uint32 (_dfdf &_d .MaxUint32 );
_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (32);if _ccg !=nil {return _ccg ;};_ebbc .HGridHeight =uint32 (_dfdf &_d .MaxUint32 );_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (32);if _ccg !=nil {return _ccg ;};_ebbc .HGridX =int32 (_dfdf &_d .MaxInt32 );_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (32);
if _ccg !=nil {return _ccg ;};_ebbc .HGridY =int32 (_dfdf &_d .MaxInt32 );_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (16);if _ccg !=nil {return _ccg ;};_ebbc .HRegionX =uint16 (_dfdf &_d .MaxUint16 );_dfdf ,_ccg =_ebbc ._fcdd .ReadBits (16);if _ccg !=nil {return _ccg ;
};_ebbc .HRegionY =uint16 (_dfdf &_d .MaxUint16 );if _ccg =_ebbc .computeSegmentDataStructure ();_ccg !=nil {return _ccg ;};return _ebbc .checkInput ();};func (_de *EndOfStripe )LineNumber ()int {return _de ._e };func (_ccac *Header )GetSegmentData ()(Segmenter ,error ){var _edfe Segmenter ;
if _ccac .SegmentData !=nil {_edfe =_ccac .SegmentData ;};if _edfe ==nil {_fcde ,_abdd :=_eead [_ccac .Type ];if !_abdd {return nil ,_ca .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ccac .Type ,_ccac .Type );
};_edfe =_fcde ();_cb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ccac .SegmentNumber ,_ccac .SegmentDataStartOffset );
_eee ,_cbde :=_ccac .subInputReader ();if _cbde !=nil {return nil ,_cbde ;};if _fccd :=_edfe .Init (_ccac ,_eee );_fccd !=nil {_cb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fccd ,_edfe );
return nil ,_fccd ;};_ccac .SegmentData =_edfe ;};return _edfe ,nil ;};type template1 struct{};func (_dfbe *HalftoneRegion )computeY (_ggee ,_acga int )int {return _dfbe .shiftAndFill (int (_dfbe .HGridY )+_ggee *int (_dfbe .HRegionX )-_acga *int (_dfbe .HRegionY ));
};func (_gbea *GenericRegion )decodeTemplate2 (_efbc ,_bbee ,_def int ,_dag ,_dgcbb int )(_eaag error ){const _fbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_gge ,_ged int ;_egcg ,_dfgf int ;_bfd byte ;_bccf ,_eff int ;
);if _efbc >=1{_bfd ,_eaag =_gbea .Bitmap .GetByte (_dgcbb );if _eaag !=nil {return _gc .Wrap (_eaag ,_fbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_egcg =int (_bfd );};if _efbc >=2{_bfd ,_eaag =_gbea .Bitmap .GetByte (_dgcbb -_gbea .Bitmap .RowStride );
if _eaag !=nil {return _gc .Wrap (_eaag ,_fbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_dfgf =int (_bfd )<<4;};_gge =(_egcg >>3&0x7c)|(_dfgf >>3&0x380);for _ebe :=0;_ebe < _def ;_ebe =_bccf {var (_ecdf byte ;
_ebac int ;);_bccf =_ebe +8;if _babf :=_bbee -_ebe ;_babf > 8{_ebac =8;}else {_ebac =_babf ;};if _efbc > 0{_egcg <<=8;if _bccf < _bbee {_bfd ,_eaag =_gbea .Bitmap .GetByte (_dgcbb +1);if _eaag !=nil {return _gc .Wrap (_eaag ,_fbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_egcg |=int (_bfd );};};if _efbc > 1{_dfgf <<=8;if _bccf < _bbee {_bfd ,_eaag =_gbea .Bitmap .GetByte (_dgcbb -_gbea .Bitmap .RowStride +1);if _eaag !=nil {return _gc .Wrap (_eaag ,_fbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_dfgf |=int (_bfd )<<4;};};for _gfgd :=0;_gfgd < _ebac ;_gfgd ++{_egag :=uint (10-_gfgd );if _gbea ._bggb {_ged =_gbea .overrideAtTemplate2 (_gge ,_ebe +_gfgd ,_efbc ,int (_ecdf ),_gfgd );_gbea ._afb .SetIndex (int32 (_ged ));}else {_gbea ._afb .SetIndex (int32 (_gge ));
};_eff ,_eaag =_gbea ._dgab .DecodeBit (_gbea ._afb );if _eaag !=nil {return _gc .Wrap (_eaag ,_fbf ,"");};_ecdf |=byte (_eff <<uint (7-_gfgd ));_gge =((_gge &0x1bd)<<1)|_eff |((_egcg >>_egag )&0x4)|((_dfgf >>_egag )&0x80);};if _aee :=_gbea .Bitmap .SetByte (_dag ,_ecdf );
_aee !=nil {return _gc .Wrap (_aee ,_fbf ,"");};_dag ++;_dgcbb ++;};return nil ;};func (_bda *EndOfStripe )parseHeader ()error {_ddf ,_f :=_bda ._ge .ReadBits (32);if _f !=nil {return _f ;};_bda ._e =int (_ddf &_d .MaxInt32 );return nil ;};type TableSegment struct{_ffae *_dg .Reader ;
_edfg int32 ;_dccd int32 ;_fafd int32 ;_gfge int32 ;_edfee int32 ;};func (_gagd *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gagd .RegionSegment };func (_aadeg *Header )readDataStartOffset (_gfbe *_dg .Reader ,_eebea OrganizationType ){if _eebea ==OSequential {_aadeg .SegmentDataStartOffset =uint64 (_gfbe .AbsolutePosition ());
};};func (_afdf *SymbolDictionary )setRefinementAtPixels ()error {if !_afdf .UseRefinementAggregation ||_afdf .SdrTemplate !=0{return nil ;};if _dfcad :=_afdf .readRefinementAtPixels (2);_dfcad !=nil {return _dfcad ;};return nil ;};func (_bccec *PageInformationSegment )readContainsRefinement ()error {_gcbc ,_fabc :=_bccec ._dfa .ReadBit ();
if _fabc !=nil {return _fabc ;};if _gcbc ==1{_bccec ._egcf =true ;};return nil ;};func (_fdadc *TableSegment )HtOOB ()int32 {return _fdadc ._edfg };func (_gebf *RegionSegment )parseHeader ()error {const _cfcb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_cb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_cb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_cbgfg ,_dccc :=_gebf ._cbcg .ReadBits (32);if _dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"\u0077\u0069\u0064t\u0068");};_gebf .BitmapWidth =uint32 (_cbgfg &_d .MaxUint32 );_cbgfg ,_dccc =_gebf ._cbcg .ReadBits (32);if _dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_gebf .BitmapHeight =uint32 (_cbgfg &_d .MaxUint32 );_cbgfg ,_dccc =_gebf ._cbcg .ReadBits (32);if _dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gebf .XLocation =uint32 (_cbgfg &_d .MaxUint32 );
_cbgfg ,_dccc =_gebf ._cbcg .ReadBits (32);if _dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gebf .YLocation =uint32 (_cbgfg &_d .MaxUint32 );if _ ,_dccc =_gebf ._cbcg .ReadBits (5);_dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _dccc =_gebf .readCombinationOperator ();_dccc !=nil {return _gc .Wrap (_dccc ,_cfcb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_agge *TextRegion )encodeFlags (_afbbd _dg .BinaryWriter )(_ddbc int ,_eeeb error ){const _gfdc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eeeb =_afbbd .WriteBit (int (_agge .SbrTemplate ));_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_eeeb =_afbbd .WriteBits (uint64 (_agge .SbDsOffset ),5);_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _eeeb =_afbbd .WriteBit (int (_agge .DefaultPixel ));_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_eeeb =_afbbd .WriteBits (uint64 (_agge .CombinationOperator ),2);
_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _eeeb =_afbbd .WriteBit (int (_agge .IsTransposed ));_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_eeeb =_afbbd .WriteBits (uint64 (_agge .ReferenceCorner ),2);_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_eeeb =_afbbd .WriteBits (uint64 (_agge .LogSBStrips ),2);
_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _geee int ;if _agge .UseRefinement {_geee =1;};if _eeeb =_afbbd .WriteBit (_geee );_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_geee =0;if _agge .IsHuffmanEncoded {_geee =1;};if _eeeb =_afbbd .WriteBit (_geee );_eeeb !=nil {return _ddbc ,_gc .Wrap (_eeeb ,_gfdc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ddbc =2;return _ddbc ,nil ;};func (_gcd *GenericRefinementRegion )GetRegionBitmap ()(*_dcb .Bitmap ,error ){var _cf error ;
_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cf !=nil {_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cf );
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gcd .RegionBitmap !=nil {return _gcd .RegionBitmap ,nil ;};_ce :=0;if _gcd .ReferenceBitmap ==nil {_gcd .ReferenceBitmap ,_cf =_gcd .getGrReference ();if _cf !=nil {return nil ,_cf ;};};if _gcd ._dcbe ==nil {_gcd ._dcbe ,_cf =_bd .New (_gcd ._ed );
if _cf !=nil {return nil ,_cf ;};};if _gcd ._ea ==nil {_gcd ._ea =_bd .NewStats (8192,1);};_gcd .RegionBitmap =_dcb .New (int (_gcd .RegionInfo .BitmapWidth ),int (_gcd .RegionInfo .BitmapHeight ));if _gcd .TemplateID ==0{if _cf =_gcd .updateOverride ();
_cf !=nil {return nil ,_cf ;};};_bc :=(_gcd .RegionBitmap .Width +7)&-8;var _dga int ;if _gcd .IsTPGROn {_dga =int (-_gcd .ReferenceDY )*_gcd .ReferenceBitmap .RowStride ;};_ef :=_dga +1;for _df :=0;_df < _gcd .RegionBitmap .Height ;_df ++{if _gcd .IsTPGROn {_cga ,_eaa :=_gcd .decodeSLTP ();
if _eaa !=nil {return nil ,_eaa ;};_ce ^=_cga ;};if _ce ==0{_cf =_gcd .decodeOptimized (_df ,_gcd .RegionBitmap .Width ,_gcd .RegionBitmap .RowStride ,_gcd .ReferenceBitmap .RowStride ,_bc ,_dga ,_ef );if _cf !=nil {return nil ,_cf ;};}else {_cf =_gcd .decodeTypicalPredictedLine (_df ,_gcd .RegionBitmap .Width ,_gcd .RegionBitmap .RowStride ,_gcd .ReferenceBitmap .RowStride ,_bc ,_dga );
if _cf !=nil {return nil ,_cf ;};};};return _gcd .RegionBitmap ,nil ;};func (_facg *TextRegion )decodeStripT ()(_begd int64 ,_cddc error ){if _facg .IsHuffmanEncoded {if _facg .SbHuffDT ==3{if _facg ._dfcc ==nil {var _cecg int ;if _facg .SbHuffFS ==3{_cecg ++;
};if _facg .SbHuffDS ==3{_cecg ++;};_facg ._dfcc ,_cddc =_facg .getUserTable (_cecg );if _cddc !=nil {return 0,_cddc ;};};_begd ,_cddc =_facg ._dfcc .Decode (_facg ._gegd );if _cddc !=nil {return 0,_cddc ;};}else {var _ecbe _ac .Tabler ;_ecbe ,_cddc =_ac .GetStandardTable (11+int (_facg .SbHuffDT ));
if _cddc !=nil {return 0,_cddc ;};_begd ,_cddc =_ecbe .Decode (_facg ._gegd );if _cddc !=nil {return 0,_cddc ;};};}else {var _afdee int32 ;_afdee ,_cddc =_facg ._aeaf .DecodeInt (_facg ._ffdb );if _cddc !=nil {return 0,_cddc ;};_begd =int64 (_afdee );};
_begd *=int64 (-_facg .SbStrips );return _begd ,nil ;};func (_ceee *SymbolDictionary )checkInput ()error {if _ceee .SdHuffDecodeHeightSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ceee .SdHuffDecodeHeightSelection );
};if _ceee .SdHuffDecodeWidthSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ceee .SdHuffDecodeWidthSelection );
};if _ceee .IsHuffmanEncoded {if _ceee .SdTemplate !=0{_cb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ceee .SdTemplate );
};if !_ceee .UseRefinementAggregation {if !_ceee .UseRefinementAggregation {if _ceee ._aggbd {_cb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ceee ._aggbd =false ;};if _ceee ._abgc {_cb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ceee ._abgc =false ;};};};}else {if _ceee .SdHuffBMSizeSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ceee .SdHuffBMSizeSelection =0;};if _ceee .SdHuffDecodeWidthSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ceee .SdHuffDecodeWidthSelection =0;};if _ceee .SdHuffDecodeHeightSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ceee .SdHuffDecodeHeightSelection =0;};};if !_ceee .UseRefinementAggregation {if _ceee .SdrTemplate !=0{_cb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ceee .SdrTemplate );
_ceee .SdrTemplate =0;};};if !_ceee .IsHuffmanEncoded ||!_ceee .UseRefinementAggregation {if _ceee .SdHuffAggInstanceSelection {_cb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ceee .SdHuffAggInstanceSelection );
};};return nil ;};type Segmenter interface{Init (_daac *Header ,_ceef *_dg .Reader )error ;};func (_dfbc *Header )readHeaderLength (_dded *_dg .Reader ,_gcdc int64 ){_dfbc .HeaderLength =_dded .AbsolutePosition ()-_gcdc ;};func (_feab *SymbolDictionary )decodeAggregate (_dcce ,_cddg uint32 )error {var (_bebb int64 ;
_eggb error ;);if _feab .IsHuffmanEncoded {_bebb ,_eggb =_feab .huffDecodeRefAggNInst ();if _eggb !=nil {return _eggb ;};}else {_baac ,_gdeg :=_feab ._ggc .DecodeInt (_feab ._effed );if _gdeg !=nil {return _gdeg ;};_bebb =int64 (_baac );};if _bebb > 1{return _feab .decodeThroughTextRegion (_dcce ,_cddg ,uint32 (_bebb ));
}else if _bebb ==1{return _feab .decodeRefinedSymbol (_dcce ,_cddg );};return nil ;};func (_fafg *PatternDictionary )readTemplate ()error {_caeb ,_bfgc :=_fafg ._dbb .ReadBits (2);if _bfgc !=nil {return _bfgc ;};_fafg .HDTemplate =byte (_caeb );return nil ;
};func (_bdeg *HalftoneRegion )shiftAndFill (_ccfeg int )int {_ccfeg >>=8;if _ccfeg < 0{_gbef :=int (_d .Log (float64 (_bcba (_ccfeg )))/_d .Log (2));_eed :=31-_gbef ;for _ggde :=1;_ggde < _eed ;_ggde ++{_ccfeg |=1<<uint (31-_ggde );};};return _ccfeg ;
};func (_dcdb *PageInformationSegment )readMaxStripeSize ()error {_ffbga ,_bdgg :=_dcdb ._dfa .ReadBits (15);if _bdgg !=nil {return _bdgg ;};_dcdb .MaxStripeSize =uint16 (_ffbga &_d .MaxUint16 );return nil ;};type Type int ;func (_bef *Header )parse (_bcca Documenter ,_gdde *_dg .Reader ,_dccae int64 ,_cdcf OrganizationType )(_gecg error ){const _bcge ="\u0070\u0061\u0072s\u0065";
_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gecg !=nil {_cb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gecg );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gecg =_gdde .Seek (_dccae ,_dc .SeekStart );
if _gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gecg =_bef .readSegmentNumber (_gdde );_gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");};if _gecg =_bef .readHeaderFlags ();_gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");
};var _gbb uint64 ;_gbb ,_gecg =_bef .readNumberOfReferredToSegments (_gdde );if _gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");};_bef .RTSNumbers ,_gecg =_bef .readReferredToSegmentNumbers (_gdde ,int (_gbb ));if _gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");
};_gecg =_bef .readSegmentPageAssociation (_bcca ,_gdde ,_gbb ,_bef .RTSNumbers ...);if _gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");};if _bef .Type !=TEndOfFile {if _gecg =_bef .readSegmentDataLength (_gdde );_gecg !=nil {return _gc .Wrap (_gecg ,_bcge ,"");
};};_bef .readDataStartOffset (_gdde ,_cdcf );_bef .readHeaderLength (_gdde ,_dccae );_cb .Log .Trace ("\u0025\u0073",_bef );return nil ;};func (_ab *GenericRefinementRegion )Init (header *Header ,r *_dg .Reader )error {_ab ._fc =header ;_ab ._ed =r ;_ab .RegionInfo =NewRegionSegment (r );
return _ab .parseHeader ();};func NewRegionSegment (r *_dg .Reader )*RegionSegment {return &RegionSegment {_cbcg :r }};func (_efc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_efc .Template .setIndex (_efc ._ea );return _efc ._dcbe .DecodeBit (_efc ._ea );
};func (_gega *SymbolDictionary )readNumberOfExportedSymbols ()error {_bccae ,_aebe :=_gega ._cdcge .ReadBits (32);if _aebe !=nil {return _aebe ;};_gega .NumberOfExportedSymbols =uint32 (_bccae &_d .MaxUint32 );return nil ;};func (_gee *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_eefd :=range _gee .Header .RTSegments {if _eefd .Type ==0{_ggabd ,_ecae :=_eefd .GetSegmentData ();
if _ecae !=nil {return _ecae ;};_addg ,_ccfb :=_ggabd .(*SymbolDictionary );if !_ccfb {return _ca .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_ggabd );
};_facd ,_ecae :=_addg .GetDictionary ();if _ecae !=nil {return _ca .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_eefd .SegmentNumber ,_ecae .Error ());
};_gee ._aeeb =append (_gee ._aeeb ,_facd ...);_gee ._ffag +=_addg .NumberOfExportedSymbols ;};};return nil ;};func _ada (_ceg *_dg .Reader ,_fec *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ed :_ceg ,RegionInfo :NewRegionSegment (_ceg ),_fc :_fec ,_bde :&template0 {},_ec :&template1 {}};
};type GenericRefinementRegion struct{_bde templater ;_ec templater ;_ed *_dg .Reader ;_fc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_dcb .Bitmap ;ReferenceBitmap *_dcb .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_dcbe *_bd .Decoder ;_ea *_bd .DecoderStats ;_gea bool ;_edg []bool ;};var _ SegmentEncoder =&GenericRegion {};func (_fcac *SymbolDictionary )encodeSymbols (_agcd _dg .BinaryWriter )(_gbab int ,_fcaee error ){const _fgg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_gfc :=_ad .New ();_gfc .Init ();_begc ,_fcaee :=_fcac ._aefd .SelectByIndexes (_fcac ._eaaf );if _fcaee !=nil {return 0,_gc .Wrap (_fcaee ,_fgg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_aaea :=map[*_dcb .Bitmap ]int {};for _abgg ,_acaaa :=range _begc .Values {_aaea [_acaaa ]=_abgg ;
};_begc .SortByHeight ();var _bfae ,_gcfa int ;_bcbe ,_fcaee :=_begc .GroupByHeight ();if _fcaee !=nil {return 0,_gc .Wrap (_fcaee ,_fgg ,"");};for _ ,_agdc :=range _bcbe .Values {_fba :=_agdc .Values [0].Height ;_eege :=_fba -_bfae ;if _fcaee =_gfc .EncodeInteger (_ad .IADH ,_eege );
_fcaee !=nil {return 0,_gc .Wrapf (_fcaee ,_fgg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_eege );};_bfae =_fba ;_ffbb ,_eeed :=_agdc .GroupByWidth ();if _eeed !=nil {return 0,_gc .Wrapf (_eeed ,_fgg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fba );
};var _efbcc int ;for _ ,_ggba :=range _ffbb .Values {for _ ,_ebca :=range _ggba .Values {_adade :=_ebca .Width ;_acgg :=_adade -_efbcc ;if _eeed =_gfc .EncodeInteger (_ad .IADW ,_acgg );_eeed !=nil {return 0,_gc .Wrapf (_eeed ,_fgg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_acgg );
};_efbcc +=_acgg ;if _eeed =_gfc .EncodeBitmap (_ebca ,false );_eeed !=nil {return 0,_gc .Wrapf (_eeed ,_fgg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fba ,_adade );};_becb :=_aaea [_ebca ];_fcac ._dgfb [_becb ]=_gcfa ;
_gcfa ++;};};if _eeed =_gfc .EncodeOOB (_ad .IADW );_eeed !=nil {return 0,_gc .Wrap (_eeed ,_fgg ,"\u0049\u0041\u0044\u0057");};};if _fcaee =_gfc .EncodeInteger (_ad .IAEX ,0);_fcaee !=nil {return 0,_gc .Wrap (_fcaee ,_fgg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fcaee =_gfc .EncodeInteger (_ad .IAEX ,len (_fcac ._eaaf ));_fcaee !=nil {return 0,_gc .Wrap (_fcaee ,_fgg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_gfc .Final ();_cgde ,_fcaee :=_gfc .WriteTo (_agcd );
if _fcaee !=nil {return 0,_gc .Wrap (_fcaee ,_fgg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_cgde ),nil ;};func (_egebg *SymbolDictionary )InitEncode (symbols *_dcb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dcga ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_egebg .SdATX =[]int8 {3,-3,2,-2};_egebg .SdATY =[]int8 {-1,-1,-2,-2};_egebg ._aefd =symbols ;_egebg ._eaaf =make ([]int ,len (symbolList ));copy (_egebg ._eaaf ,symbolList );if len (_egebg ._eaaf )!=_egebg ._aefd .Size (){return _gc .Error (_dcga ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_egebg .NumberOfNewSymbols =uint32 (symbols .Size ());_egebg .NumberOfExportedSymbols =uint32 (symbols .Size ());_egebg ._dgfb =symbolMap ;_egebg ._gff =unborderSymbols ;return nil ;};func (_ddg *GenericRegion )computeSegmentDataStructure ()error {_ddg .DataOffset =_ddg ._agg .AbsolutePosition ();
_ddg .DataHeaderLength =_ddg .DataOffset -_ddg .DataHeaderOffset ;_ddg .DataLength =int64 (_ddg ._agg .AbsoluteLength ())-_ddg .DataHeaderLength ;return nil ;};func (_fde *GenericRegion )getPixel (_cgf ,_aaa int )int8 {if _cgf < 0||_cgf >=_fde .Bitmap .Width {return 0;
};if _aaa < 0||_aaa >=_fde .Bitmap .Height {return 0;};if _fde .Bitmap .GetPixel (_cgf ,_aaa ){return 1;};return 0;};func (_dbdf *TextRegion )GetRegionInfo ()*RegionSegment {return _dbdf .RegionInfo };func (_bacdg *Header )writeSegmentDataLength (_cfb _dg .BinaryWriter )(_fefc int ,_gdbe error ){_dfbcf :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_dfbcf ,uint32 (_bacdg .SegmentDataLength ));if _fefc ,_gdbe =_cfb .Write (_dfbcf );_gdbe !=nil {return 0,_gc .Wrap (_gdbe ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _fefc ,nil ;};var _ _ac .BasicTabler =&TableSegment {};func (_adadb *TextRegion )decodeRdy ()(int64 ,error ){const _eeeag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _adadb .IsHuffmanEncoded {if _adadb .SbHuffRDY ==3{if _adadb ._fccc ==nil {var (_dafaa int ;
_gcggcc error ;);if _adadb .SbHuffFS ==3{_dafaa ++;};if _adadb .SbHuffDS ==3{_dafaa ++;};if _adadb .SbHuffDT ==3{_dafaa ++;};if _adadb .SbHuffRDWidth ==3{_dafaa ++;};if _adadb .SbHuffRDHeight ==3{_dafaa ++;};if _adadb .SbHuffRDX ==3{_dafaa ++;};_adadb ._fccc ,_gcggcc =_adadb .getUserTable (_dafaa );
if _gcggcc !=nil {return 0,_gc .Wrap (_gcggcc ,_eeeag ,"");};};return _adadb ._fccc .Decode (_adadb ._gegd );};_cfbb ,_bgdg :=_ac .GetStandardTable (14+int (_adadb .SbHuffRDY ));if _bgdg !=nil {return 0,_bgdg ;};return _cfbb .Decode (_adadb ._gegd );};
_fgcf ,_ecgg :=_adadb ._aeaf .DecodeInt (_adadb ._ddec );if _ecgg !=nil {return 0,_gc .Wrap (_ecgg ,_eeeag ,"");};return int64 (_fgcf ),nil ;};func (_fca *Header )writeSegmentNumber (_gcba _dg .BinaryWriter )(_edd int ,_ebgd error ){_ecdc :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_ecdc ,_fca .SegmentNumber );if _edd ,_ebgd =_gcba .Write (_ecdc );_ebgd !=nil {return 0,_gc .Wrap (_ebgd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _edd ,nil ;};type templater interface{form (_gbe ,_aaf ,_dfee ,_fad ,_afd int16 )int16 ;setIndex (_aef *_bd .DecoderStats );};func (_fead *SymbolDictionary )setAtPixels ()error {if _fead .IsHuffmanEncoded {return nil ;};_dggg :=1;if _fead .SdTemplate ==0{_dggg =4;
};if _gbde :=_fead .readAtPixels (_dggg );_gbde !=nil {return _gbde ;};return nil ;};func (_eceg *GenericRegion )overrideAtTemplate3 (_faf ,_cbgf ,_acfe ,_bade ,_dae int )int {_faf &=0x3EF;if _eceg .GBAtY [0]==0&&_eceg .GBAtX [0]>=-int8 (_dae ){_faf |=(_bade >>uint (7-(int8 (_dae )+_eceg .GBAtX [0]))&0x1)<<4;
}else {_faf |=int (_eceg .getPixel (_cbgf +int (_eceg .GBAtX [0]),_acfe +int (_eceg .GBAtY [0])))<<4;};return _faf ;};func (_abab *TextRegion )decodeDfs ()(int64 ,error ){if _abab .IsHuffmanEncoded {if _abab .SbHuffFS ==3{if _abab ._bbff ==nil {var _dfeg error ;
_abab ._bbff ,_dfeg =_abab .getUserTable (0);if _dfeg !=nil {return 0,_dfeg ;};};return _abab ._bbff .Decode (_abab ._gegd );};_afgd ,_dcggg :=_ac .GetStandardTable (6+int (_abab .SbHuffFS ));if _dcggg !=nil {return 0,_dcggg ;};return _afgd .Decode (_abab ._gegd );
};_fdgd ,_afaf :=_abab ._aeaf .DecodeInt (_abab ._fbef );if _afaf !=nil {return 0,_afaf ;};return int64 (_fdgd ),nil ;};func (_dfdg *template0 )form (_afdc ,_fd ,_aea ,_caa ,_bcgf int16 )int16 {return (_afdc <<10)|(_fd <<7)|(_aea <<4)|(_caa <<1)|_bcgf ;
};func (_fabe *SymbolDictionary )readRefinementAtPixels (_feee int )error {_fabe .SdrATX =make ([]int8 ,_feee );_fabe .SdrATY =make ([]int8 ,_feee );var (_gcdf byte ;_cdcgec error ;);for _gedb :=0;_gedb < _feee ;_gedb ++{_gcdf ,_cdcgec =_fabe ._cdcge .ReadByte ();
if _cdcgec !=nil {return _cdcgec ;};_fabe .SdrATX [_gedb ]=int8 (_gcdf );_gcdf ,_cdcgec =_fabe ._cdcge .ReadByte ();if _cdcgec !=nil {return _cdcgec ;};_fabe .SdrATY [_gedb ]=int8 (_gcdf );};return nil ;};func (_afc *SymbolDictionary )getSbSymCodeLen ()int8 {_fadg :=int8 (_d .Ceil (_d .Log (float64 (_afc ._ffag +_afc .NumberOfNewSymbols ))/_d .Log (2)));
if _afc .IsHuffmanEncoded &&_fadg < 1{return 1;};return _fadg ;};func (_acef *HalftoneRegion )computeX (_ebc ,_eab int )int {return _acef .shiftAndFill (int (_acef .HGridX )+_ebc *int (_acef .HRegionY )+_eab *int (_acef .HRegionX ));};func (_aedd *SymbolDictionary )setSymbolsArray ()error {if _aedd ._aeeb ==nil {if _gbfgb :=_aedd .retrieveImportSymbols ();
_gbfgb !=nil {return _gbfgb ;};};if _aedd ._fcae ==nil {_aedd ._fcae =append (_aedd ._fcae ,_aedd ._aeeb ...);};return nil ;};func (_afdcd *SymbolDictionary )encodeATFlags (_decf _dg .BinaryWriter )(_aafg int ,_eadc error ){const _ecdeb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _afdcd .IsHuffmanEncoded ||_afdcd .SdTemplate !=0{return 0,nil ;};_dgfe :=4;if _afdcd .SdTemplate !=0{_dgfe =1;};for _eedc :=0;_eedc < _dgfe ;_eedc ++{if _eadc =_decf .WriteByte (byte (_afdcd .SdATX [_eedc ]));_eadc !=nil {return _aafg ,_gc .Wrapf (_eadc ,_ecdeb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_eedc );
};_aafg ++;if _eadc =_decf .WriteByte (byte (_afdcd .SdATY [_eedc ]));_eadc !=nil {return _aafg ,_gc .Wrapf (_eadc ,_ecdeb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_eedc );};_aafg ++;};return _aafg ,nil ;};var _ templater =&template0 {};func (_aace *RegionSegment )readCombinationOperator ()error {_cecd ,_eeggf :=_aace ._cbcg .ReadBits (3);
if _eeggf !=nil {return _eeggf ;};_aace .CombinaionOperator =_dcb .CombinationOperator (_cecd &0xF);return nil ;};func (_ebab *PageInformationSegment )encodeFlags (_dccfd _dg .BinaryWriter )(_ecec error ){const _cdf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ecec =_dccfd .SkipBits (1);_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _degg int ;if _ebab .CombinationOperatorOverrideAllowed (){_degg =1;};if _ecec =_dccfd .WriteBit (_degg );
_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_degg =0;if _ebab ._daacb {_degg =1;
};if _ecec =_dccfd .WriteBit (_degg );_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ecec =_dccfd .WriteBit ((int (_ebab ._ecfe )>>1)&0x01);
_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ecec =_dccfd .WriteBit (int (_ebab ._ecfe )&0x01);
_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_degg =int (_ebab .DefaultPixelValue );
if _ecec =_dccfd .WriteBit (_degg );_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_degg =0;if _ebab ._egcf {_degg =1;
};if _ecec =_dccfd .WriteBit (_degg );_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_degg =0;if _ebab .IsLossless {_degg =1;};if _ecec =_dccfd .WriteBit (_degg );
_ecec !=nil {return _gc .Wrap (_ecec ,_cdf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_caec *SymbolDictionary )readNumberOfNewSymbols ()error {_fdgf ,_bfga :=_caec ._cdcge .ReadBits (32);
if _bfga !=nil {return _bfga ;};_caec .NumberOfNewSymbols =uint32 (_fdgf &_d .MaxUint32 );return nil ;};func (_beg *GenericRegion )InitEncode (bm *_dcb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _egd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _gc .Error (_egd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gc .Error (_egd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_beg .Bitmap =bm ;_beg .GBTemplate =byte (template );switch _beg .GBTemplate {case 0:_beg .GBAtX =[]int8 {3,-3,2,-2};_beg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_beg .GBAtX =[]int8 {3};_beg .GBAtY =[]int8 {-1};case 2,3:_beg .GBAtX =[]int8 {2};_beg .GBAtY =[]int8 {-1};
default:return _gc .Errorf (_egd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_beg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_beg .IsTPGDon =duplicateLineRemoval ;return nil ;};type TextRegion struct{_gegd *_dg .Reader ;
RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _dcb .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;
SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_cgea int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_dcb .Bitmap ;Symbols []*_dcb .Bitmap ;
_aeaf *_bd .Decoder ;_gafd *GenericRefinementRegion ;_ffdb *_bd .DecoderStats ;_fbef *_bd .DecoderStats ;_geef *_bd .DecoderStats ;_adbbe *_bd .DecoderStats ;_acae *_bd .DecoderStats ;_bgfc *_bd .DecoderStats ;_dgeb *_bd .DecoderStats ;_gcca *_bd .DecoderStats ;
_cgdfc *_bd .DecoderStats ;_ddec *_bd .DecoderStats ;_eec *_bd .DecoderStats ;_gfbec int8 ;_abdc *_ac .FixedSizeTable ;Header *Header ;_bbff _ac .Tabler ;_egce _ac .Tabler ;_dfcc _ac .Tabler ;_dbbd _ac .Tabler ;_gbcgc _ac .Tabler ;_acde _ac .Tabler ;_fccc _ac .Tabler ;
_acdg _ac .Tabler ;_geaa ,_gddef map[int ]int ;_beda []int ;_acdd *_dcb .Points ;_deac *_dcb .Bitmaps ;_fdcb *_cabb .IntSlice ;_cfdf ,_ddef int ;_bbbbf *_dcb .Boxes ;};func (_bad *GenericRegion )decodeSLTP ()(int ,error ){switch _bad .GBTemplate {case 0:_bad ._afb .SetIndex (0x9B25);
case 1:_bad ._afb .SetIndex (0x795);case 2:_bad ._afb .SetIndex (0xE5);case 3:_bad ._afb .SetIndex (0x195);};return _bad ._dgab .DecodeBit (_bad ._afb );};func (_cedf *SymbolDictionary )encodeRefinementATFlags (_bbd _dg .BinaryWriter )(_ceea int ,_gfdgc error ){const _gbfg ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cedf .UseRefinementAggregation ||_cedf .SdrTemplate !=0{return 0,nil ;};for _ecgf :=0;_ecgf < 2;_ecgf ++{if _gfdgc =_bbd .WriteByte (byte (_cedf .SdrATX [_ecgf ]));_gfdgc !=nil {return _ceea ,_gc .Wrapf (_gfdgc ,_gbfg ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ecgf );
};_ceea ++;if _gfdgc =_bbd .WriteByte (byte (_cedf .SdrATY [_ecgf ]));_gfdgc !=nil {return _ceea ,_gc .Wrapf (_gfdgc ,_gbfg ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ecgf );};_ceea ++;};return _ceea ,nil ;};func (_afdaa *GenericRegion )decodeTemplate0a (_dce ,_bab ,_dbdg int ,_bfcb ,_cca int )(_ecfb error ){const _cad ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cada ,_cdc int ;_gdd ,_dcca int ;_cde byte ;_edcb int ;);if _dce >=1{_cde ,_ecfb =_afdaa .Bitmap .GetByte (_cca );if _ecfb !=nil {return _gc .Wrap (_ecfb ,_cad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gdd =int (_cde );};if _dce >=2{_cde ,_ecfb =_afdaa .Bitmap .GetByte (_cca -_afdaa .Bitmap .RowStride );
if _ecfb !=nil {return _gc .Wrap (_ecfb ,_cad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dcca =int (_cde )<<6;};_cada =(_gdd &0xf0)|(_dcca &0x3800);for _aefg :=0;_aefg < _dbdg ;_aefg =_edcb {var (_afgb byte ;_aeac int ;);_edcb =_aefg +8;if _ecad :=_bab -_aefg ;
_ecad > 8{_aeac =8;}else {_aeac =_ecad ;};if _dce > 0{_gdd <<=8;if _edcb < _bab {_cde ,_ecfb =_afdaa .Bitmap .GetByte (_cca +1);if _ecfb !=nil {return _gc .Wrap (_ecfb ,_cad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gdd |=int (_cde );};};
if _dce > 1{_ggf :=_cca -_afdaa .Bitmap .RowStride +1;_dcca <<=8;if _edcb < _bab {_cde ,_ecfb =_afdaa .Bitmap .GetByte (_ggf );if _ecfb !=nil {return _gc .Wrap (_ecfb ,_cad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dcca |=int (_cde )<<6;}else {_dcca |=0;
};};for _adc :=0;_adc < _aeac ;_adc ++{_ffd :=uint (7-_adc );if _afdaa ._bggb {_cdc =_afdaa .overrideAtTemplate0a (_cada ,_aefg +_adc ,_dce ,int (_afgb ),_adc ,int (_ffd ));_afdaa ._afb .SetIndex (int32 (_cdc ));}else {_afdaa ._afb .SetIndex (int32 (_cada ));
};var _cbab int ;_cbab ,_ecfb =_afdaa ._dgab .DecodeBit (_afdaa ._afb );if _ecfb !=nil {return _gc .Wrap (_ecfb ,_cad ,"");};_afgb |=byte (_cbab )<<_ffd ;_cada =((_cada &0x7bf7)<<1)|_cbab |((_gdd >>_ffd )&0x10)|((_dcca >>_ffd )&0x800);};if _bfg :=_afdaa .Bitmap .SetByte (_bfcb ,_afgb );
_bfg !=nil {return _gc .Wrap (_bfg ,_cad ,"");};_bfcb ++;_cca ++;};return nil ;};func (_egfb *SymbolDictionary )setExportedSymbols (_dede []int ){for _beegf :=uint32 (0);_beegf < _egfb ._ffag +_egfb .NumberOfNewSymbols ;_beegf ++{if _dede [_beegf ]==1{var _dega *_dcb .Bitmap ;
if _beegf < _egfb ._ffag {_dega =_egfb ._aeeb [_beegf ];}else {_dega =_egfb ._fcdee [_beegf -_egfb ._ffag ];};_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_dega );
_egfb ._caef =append (_egfb ._caef ,_dega );};};};func (_dff *PatternDictionary )computeSegmentDataStructure ()error {_dff .DataOffset =_dff ._dbb .AbsolutePosition ();_dff .DataHeaderLength =_dff .DataOffset -_dff .DataHeaderOffset ;_dff .DataLength =int64 (_dff ._dbb .AbsoluteLength ())-_dff .DataHeaderLength ;
return nil ;};func (_dccec *TextRegion )readRegionFlags ()error {var (_bceb int ;_agga uint64 ;_eeca error ;);_bceb ,_eeca =_dccec ._gegd .ReadBit ();if _eeca !=nil {return _eeca ;};_dccec .SbrTemplate =int8 (_bceb );_agga ,_eeca =_dccec ._gegd .ReadBits (5);
if _eeca !=nil {return _eeca ;};_dccec .SbDsOffset =int8 (_agga );if _dccec .SbDsOffset > 0x0f{_dccec .SbDsOffset -=0x20;};_bceb ,_eeca =_dccec ._gegd .ReadBit ();if _eeca !=nil {return _eeca ;};_dccec .DefaultPixel =int8 (_bceb );_agga ,_eeca =_dccec ._gegd .ReadBits (2);
if _eeca !=nil {return _eeca ;};_dccec .CombinationOperator =_dcb .CombinationOperator (int (_agga )&0x3);_bceb ,_eeca =_dccec ._gegd .ReadBit ();if _eeca !=nil {return _eeca ;};_dccec .IsTransposed =int8 (_bceb );_agga ,_eeca =_dccec ._gegd .ReadBits (2);
if _eeca !=nil {return _eeca ;};_dccec .ReferenceCorner =int16 (_agga )&0x3;_agga ,_eeca =_dccec ._gegd .ReadBits (2);if _eeca !=nil {return _eeca ;};_dccec .LogSBStrips =int16 (_agga )&0x3;_dccec .SbStrips =1<<uint (_dccec .LogSBStrips );_bceb ,_eeca =_dccec ._gegd .ReadBit ();
if _eeca !=nil {return _eeca ;};if _bceb ==1{_dccec .UseRefinement =true ;};_bceb ,_eeca =_dccec ._gegd .ReadBit ();if _eeca !=nil {return _eeca ;};if _bceb ==1{_dccec .IsHuffmanEncoded =true ;};return nil ;};var (_eddd Segmenter ;_eead =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _eddd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _eddd },TProfiles :func ()Segmenter {return _eddd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _eddd },TBitmap :func ()Segmenter {return _eddd }};
);type EndOfStripe struct{_ge *_dg .Reader ;_e int ;};func (_aege *HalftoneRegion )GetPatterns ()([]*_dcb .Bitmap ,error ){var (_fgfe []*_dcb .Bitmap ;_egeb error ;);for _ ,_gdf :=range _aege ._baf .RTSegments {var _efee Segmenter ;_efee ,_egeb =_gdf .GetSegmentData ();
if _egeb !=nil {_cb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_egeb );return nil ,_egeb ;};_ecadb ,_dcg :=_efee .(*PatternDictionary );if !_dcg {_egeb =_ca .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_efee );
return nil ,_egeb ;};var _ecb []*_dcb .Bitmap ;_ecb ,_egeb =_ecadb .GetDictionary ();if _egeb !=nil {_cb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_egeb );
return nil ,_egeb ;};_fgfe =append (_fgfe ,_ecb ...);};return _fgfe ,nil ;};func (_cbbe *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_afca int ;_eage int32 ;_dgba error ;_efec =int32 (_cbbe ._ffag +_cbbe .NumberOfNewSymbols );_cccb =make ([]int ,_efec );
);for _ggfe :=int32 (0);_ggfe < _efec ;_ggfe +=_eage {if _cbbe .IsHuffmanEncoded {_dgbad ,_fbgb :=_ac .GetStandardTable (1);if _fbgb !=nil {return nil ,_fbgb ;};_bbag ,_fbgb :=_dgbad .Decode (_cbbe ._cdcge );if _fbgb !=nil {return nil ,_fbgb ;};_eage =int32 (_bbag );
}else {_eage ,_dgba =_cbbe ._ggc .DecodeInt (_cbbe ._aec );if _dgba !=nil {return nil ,_dgba ;};};if _eage !=0{if _ggfe +_eage > _efec {return nil ,_gc .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _dbbb :=_ggfe ;_dbbb < _ggfe +_eage ;_dbbb ++{_cccb [_dbbb ]=_afca ;};};if _afca ==0{_afca =1;}else {_afca =0;};};return _cccb ,nil ;};func (_dea *Header )readSegmentNumber (_gfdg *_dg .Reader )error {const _abba ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_aade :=make ([]byte ,4);_ ,_gabc :=_gfdg .Read (_aade );if _gabc !=nil {return _gc .Wrap (_gabc ,_abba ,"");};_dea .SegmentNumber =_c .BigEndian .Uint32 (_aade );return nil ;};func (_cfgf *PageInformationSegment )readCombinationOperator ()error {_fgcg ,_fefa :=_cfgf ._dfa .ReadBits (2);
if _fefa !=nil {return _fefa ;};_cfgf ._ecfe =_dcb .CombinationOperator (int (_fgcg ));return nil ;};func (_gab *GenericRegion )overrideAtTemplate0b (_aeg ,_bbf ,_gefc ,_egac ,_abgd ,_baee int )int {if _gab .GBAtOverride [0]{_aeg &=0xFFFD;if _gab .GBAtY [0]==0&&_gab .GBAtX [0]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [0]&0x1))<<1;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [0]),_gefc +int (_gab .GBAtY [0])))<<1;};};if _gab .GBAtOverride [1]{_aeg &=0xDFFF;if _gab .GBAtY [1]==0&&_gab .GBAtX [1]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [1]&0x1))<<13;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [1]),_gefc +int (_gab .GBAtY [1])))<<13;};};if _gab .GBAtOverride [2]{_aeg &=0xFDFF;if _gab .GBAtY [2]==0&&_gab .GBAtX [2]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [2]&0x1))<<9;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [2]),_gefc +int (_gab .GBAtY [2])))<<9;};};if _gab .GBAtOverride [3]{_aeg &=0xBFFF;if _gab .GBAtY [3]==0&&_gab .GBAtX [3]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [3]&0x1))<<14;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [3]),_gefc +int (_gab .GBAtY [3])))<<14;};};if _gab .GBAtOverride [4]{_aeg &=0xEFFF;if _gab .GBAtY [4]==0&&_gab .GBAtX [4]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [4]&0x1))<<12;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [4]),_gefc +int (_gab .GBAtY [4])))<<12;};};if _gab .GBAtOverride [5]{_aeg &=0xFFDF;if _gab .GBAtY [5]==0&&_gab .GBAtX [5]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [5]&0x1))<<5;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [5]),_gefc +int (_gab .GBAtY [5])))<<5;};};if _gab .GBAtOverride [6]{_aeg &=0xFFFB;if _gab .GBAtY [6]==0&&_gab .GBAtX [6]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [6]&0x1))<<2;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [6]),_gefc +int (_gab .GBAtY [6])))<<2;};};if _gab .GBAtOverride [7]{_aeg &=0xFFF7;if _gab .GBAtY [7]==0&&_gab .GBAtX [7]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [7]&0x1))<<3;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [7]),_gefc +int (_gab .GBAtY [7])))<<3;};};if _gab .GBAtOverride [8]{_aeg &=0xF7FF;if _gab .GBAtY [8]==0&&_gab .GBAtX [8]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [8]&0x1))<<11;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [8]),_gefc +int (_gab .GBAtY [8])))<<11;};};if _gab .GBAtOverride [9]{_aeg &=0xFFEF;if _gab .GBAtY [9]==0&&_gab .GBAtX [9]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [9]&0x1))<<4;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [9]),_gefc +int (_gab .GBAtY [9])))<<4;};};if _gab .GBAtOverride [10]{_aeg &=0x7FFF;if _gab .GBAtY [10]==0&&_gab .GBAtX [10]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [10]&0x1))<<15;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [10]),_gefc +int (_gab .GBAtY [10])))<<15;};};if _gab .GBAtOverride [11]{_aeg &=0xFDFF;if _gab .GBAtY [11]==0&&_gab .GBAtX [11]>=-int8 (_abgd ){_aeg |=(_egac >>uint (int8 (_baee )-_gab .GBAtX [11]&0x1))<<10;
}else {_aeg |=int (_gab .getPixel (_bbf +int (_gab .GBAtX [11]),_gefc +int (_gab .GBAtY [11])))<<10;};};return _aeg ;};func (_eegb *PatternDictionary )readGrayMax ()error {_deda ,_aed :=_eegb ._dbb .ReadBits (32);if _aed !=nil {return _aed ;};_eegb .GrayMax =uint32 (_deda &_d .MaxUint32 );
return nil ;};func (_efdd *TextRegion )decodeIb (_fgbe ,_dee int64 )(*_dcb .Bitmap ,error ){const _ddggc ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gdfa error ;_dabdf *_dcb .Bitmap ;);if _fgbe ==0{if int (_dee )> len (_efdd .Symbols )-1{return nil ,_gc .Error (_ddggc ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _efdd .Symbols [int (_dee )],nil ;};var _aaage ,_efbe ,_bbabc ,_bacgb int64 ;_aaage ,_gdfa =_efdd .decodeRdw ();if _gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"");};_efbe ,_gdfa =_efdd .decodeRdh ();if _gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"");
};_bbabc ,_gdfa =_efdd .decodeRdx ();if _gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"");};_bacgb ,_gdfa =_efdd .decodeRdy ();if _gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"");};if _efdd .IsHuffmanEncoded {if _ ,_gdfa =_efdd .decodeSymInRefSize ();
_gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"");};_efdd ._gegd .Align ();};_daaa :=_efdd .Symbols [_dee ];_geefc :=uint32 (_daaa .Width );_acca :=uint32 (_daaa .Height );_fcfb :=int32 (uint32 (_aaage )>>1)+int32 (_bbabc );_ecade :=int32 (uint32 (_efbe )>>1)+int32 (_bacgb );
if _efdd ._gafd ==nil {_efdd ._gafd =_ada (_efdd ._gegd ,nil );};_efdd ._gafd .setParameters (_efdd ._eec ,_efdd ._aeaf ,_efdd .SbrTemplate ,_geefc +uint32 (_aaage ),_acca +uint32 (_efbe ),_daaa ,_fcfb ,_ecade ,false ,_efdd .SbrATX ,_efdd .SbrATY );_dabdf ,_gdfa =_efdd ._gafd .GetRegionBitmap ();
if _gdfa !=nil {return nil ,_gc .Wrap (_gdfa ,_ddggc ,"\u0067\u0072\u0066");};if _efdd .IsHuffmanEncoded {_efdd ._gegd .Align ();};return _dabdf ,nil ;};func (_cec *GenericRegion )Size ()int {return _cec .RegionSegment .Size ()+1+2*len (_cec .GBAtX )};
func (_aada *Header )String ()string {_abed :=&_cg .Builder {};_abed .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_abed .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_aada .SegmentNumber ));
_abed .WriteString (_ca .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_aada .Type ));_abed .WriteString (_ca .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_aada .RetainFlag ));
_abed .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aada .PageAssociation ));_abed .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aada .PageAssociationFieldSize ));
_abed .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gcgg :=range _aada .RTSNumbers {_abed .WriteString (_ca .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gcgg ));};_abed .WriteString (_ca .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_aada .HeaderLength ));
_abed .WriteString (_ca .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_aada .SegmentDataLength ));_abed .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_aada .SegmentDataStartOffset ));
return _abed .String ();};type OrganizationType uint8 ;func (_dcdc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dcdc .SdHuffDecodeHeightSelection {case 0:_gedc ,_dcgab :=_ac .GetStandardTable (4);if _dcgab !=nil {return 0,_dcgab ;
};return _gedc .Decode (_dcdc ._cdcge );case 1:_bce ,_fbfe :=_ac .GetStandardTable (5);if _fbfe !=nil {return 0,_fbfe ;};return _bce .Decode (_dcdc ._cdcge );case 3:if _dcdc ._aeaa ==nil {_cedbe ,_cadc :=_ac .GetStandardTable (0);if _cadc !=nil {return 0,_cadc ;
};_dcdc ._aeaa =_cedbe ;};return _dcdc ._aeaa .Decode (_dcdc ._cdcge );};return 0,nil ;};func (_acd *GenericRefinementRegion )readAtPixels ()error {_acd .GrAtX =make ([]int8 ,2);_acd .GrAtY =make ([]int8 ,2);_dgf ,_dbe :=_acd ._ed .ReadByte ();if _dbe !=nil {return _dbe ;
};_acd .GrAtX [0]=int8 (_dgf );_dgf ,_dbe =_acd ._ed .ReadByte ();if _dbe !=nil {return _dbe ;};_acd .GrAtY [0]=int8 (_dgf );_dgf ,_dbe =_acd ._ed .ReadByte ();if _dbe !=nil {return _dbe ;};_acd .GrAtX [1]=int8 (_dgf );_dgf ,_dbe =_acd ._ed .ReadByte ();
if _dbe !=nil {return _dbe ;};_acd .GrAtY [1]=int8 (_dgf );return nil ;};func (_ddedc *SymbolDictionary )setCodingStatistics ()error {if _ddedc ._faeb ==nil {_ddedc ._faeb =_bd .NewStats (512,1);};if _ddedc ._bfcbe ==nil {_ddedc ._bfcbe =_bd .NewStats (512,1);
};if _ddedc ._eeea ==nil {_ddedc ._eeea =_bd .NewStats (512,1);};if _ddedc ._effed ==nil {_ddedc ._effed =_bd .NewStats (512,1);};if _ddedc ._aec ==nil {_ddedc ._aec =_bd .NewStats (512,1);};if _ddedc .UseRefinementAggregation &&_ddedc ._fcgc ==nil {_ddedc ._fcgc =_bd .NewStats (1<<uint (_ddedc ._cfcg ),1);
_ddedc ._dcef =_bd .NewStats (512,1);_ddedc ._fbdda =_bd .NewStats (512,1);};if _ddedc ._aacge ==nil {_ddedc ._aacge =_bd .NewStats (65536,1);};if _ddedc ._ggc ==nil {var _gccb error ;_ddedc ._ggc ,_gccb =_bd .New (_ddedc ._cdcge );if _gccb !=nil {return _gccb ;
};};return nil ;};func (_fcfg *GenericRegion )GetRegionBitmap ()(_cdg *_dcb .Bitmap ,_feg error ){if _fcfg .Bitmap !=nil {return _fcfg .Bitmap ,nil ;};if _fcfg .IsMMREncoded {if _fcfg ._gbed ==nil {_fcfg ._gbed ,_feg =_ae .New (_fcfg ._agg ,int (_fcfg .RegionSegment .BitmapWidth ),int (_fcfg .RegionSegment .BitmapHeight ),_fcfg .DataOffset ,_fcfg .DataLength );
if _feg !=nil {return nil ,_feg ;};};_fcfg .Bitmap ,_feg =_fcfg ._gbed .UncompressMMR ();return _fcfg .Bitmap ,_feg ;};if _feg =_fcfg .updateOverrideFlags ();_feg !=nil {return nil ,_feg ;};var _dde int ;if _fcfg ._dgab ==nil {_fcfg ._dgab ,_feg =_bd .New (_fcfg ._agg );
if _feg !=nil {return nil ,_feg ;};};if _fcfg ._afb ==nil {_fcfg ._afb =_bd .NewStats (65536,1);};_fcfg .Bitmap =_dcb .New (int (_fcfg .RegionSegment .BitmapWidth ),int (_fcfg .RegionSegment .BitmapHeight ));_bbg :=int (uint32 (_fcfg .Bitmap .Width +7)&(^uint32 (7)));
for _gcb :=0;_gcb < _fcfg .Bitmap .Height ;_gcb ++{if _fcfg .IsTPGDon {var _bgc int ;_bgc ,_feg =_fcfg .decodeSLTP ();if _feg !=nil {return nil ,_feg ;};_dde ^=_bgc ;};if _dde ==1{if _gcb > 0{if _feg =_fcfg .copyLineAbove (_gcb );_feg !=nil {return nil ,_feg ;
};};}else {if _feg =_fcfg .decodeLine (_gcb ,_fcfg .Bitmap .Width ,_bbg );_feg !=nil {return nil ,_feg ;};};};return _fcfg .Bitmap ,nil ;};func (_beab *TextRegion )decodeDT ()(_cbfa int64 ,_gfcg error ){if _beab .IsHuffmanEncoded {if _beab .SbHuffDT ==3{_cbfa ,_gfcg =_beab ._dfcc .Decode (_beab ._gegd );
if _gfcg !=nil {return 0,_gfcg ;};}else {var _eafa _ac .Tabler ;_eafa ,_gfcg =_ac .GetStandardTable (11+int (_beab .SbHuffDT ));if _gfcg !=nil {return 0,_gfcg ;};_cbfa ,_gfcg =_eafa .Decode (_beab ._gegd );if _gfcg !=nil {return 0,_gfcg ;};};}else {var _eacf int32 ;
_eacf ,_gfcg =_beab ._aeaf .DecodeInt (_beab ._ffdb );if _gfcg !=nil {return 0,_gfcg ;};_cbfa =int64 (_eacf );};_cbfa *=int64 (_beab .SbStrips );return _cbfa ,nil ;};func (_bfff *PatternDictionary )parseHeader ()error {_cb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_cb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_cdgc :=_bfff ._dbb .ReadBits (5);if _cdgc !=nil {return _cdgc ;};if _cdgc =_bfff .readTemplate ();_cdgc !=nil {return _cdgc ;};if _cdgc =_bfff .readIsMMREncoded ();_cdgc !=nil {return _cdgc ;};if _cdgc =_bfff .readPatternWidthAndHeight ();_cdgc !=nil {return _cdgc ;
};if _cdgc =_bfff .readGrayMax ();_cdgc !=nil {return _cdgc ;};if _cdgc =_bfff .computeSegmentDataStructure ();_cdgc !=nil {return _cdgc ;};return _bfff .checkInput ();};func (_ecg *RegionSegment )Size ()int {return 17};func (_edcf *GenericRefinementRegion )decodeTypicalPredictedLine (_gef ,_dgaa ,_bg ,_be ,_cbb ,_gec int )error {_aa :=_gef -int (_edcf .ReferenceDY );
_cbg :=_edcf .ReferenceBitmap .GetByteIndex (0,_aa );_efe :=_edcf .RegionBitmap .GetByteIndex (0,_gef );var _eda error ;switch _edcf .TemplateID {case 0:_eda =_edcf .decodeTypicalPredictedLineTemplate0 (_gef ,_dgaa ,_bg ,_be ,_cbb ,_gec ,_efe ,_aa ,_cbg );
case 1:_eda =_edcf .decodeTypicalPredictedLineTemplate1 (_gef ,_dgaa ,_bg ,_be ,_cbb ,_gec ,_efe ,_aa ,_cbg );};return _eda ;};func (_badg *SymbolDictionary )setInSyms ()error {if _badg .Header .RTSegments !=nil {return _badg .retrieveImportSymbols ();
};_badg ._aeeb =make ([]*_dcb .Bitmap ,0);return nil ;};func (_ded *GenericRegion )decodeTemplate1 (_edbf ,_bcga ,_ccaf int ,_acgb ,_bcad int )(_bcgag error ){const _fcc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_gbgd ,_eeab int ;_fabb ,_dace int ;_efg byte ;_bcb ,_dfg int ;);if _edbf >=1{_efg ,_bcgag =_ded .Bitmap .GetByte (_bcad );if _bcgag !=nil {return _gc .Wrap (_bcgag ,_fcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fabb =int (_efg );};if _edbf >=2{_efg ,_bcgag =_ded .Bitmap .GetByte (_bcad -_ded .Bitmap .RowStride );
if _bcgag !=nil {return _gc .Wrap (_bcgag ,_fcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dace =int (_efg )<<5;};_gbgd =((_fabb >>1)&0x1f8)|((_dace >>1)&0x1e00);for _ebf :=0;_ebf < _ccaf ;_ebf =_bcb {var (_ebfa byte ;_efbfd int ;);_bcb =_ebf +8;
if _eegd :=_bcga -_ebf ;_eegd > 8{_efbfd =8;}else {_efbfd =_eegd ;};if _edbf > 0{_fabb <<=8;if _bcb < _bcga {_efg ,_bcgag =_ded .Bitmap .GetByte (_bcad +1);if _bcgag !=nil {return _gc .Wrap (_bcgag ,_fcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_fabb |=int (_efg );};};if _edbf > 1{_dace <<=8;if _bcb < _bcga {_efg ,_bcgag =_ded .Bitmap .GetByte (_bcad -_ded .Bitmap .RowStride +1);if _bcgag !=nil {return _gc .Wrap (_bcgag ,_fcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dace |=int (_efg )<<5;
};};for _cbe :=0;_cbe < _efbfd ;_cbe ++{if _ded ._bggb {_eeab =_ded .overrideAtTemplate1 (_gbgd ,_ebf +_cbe ,_edbf ,int (_ebfa ),_cbe );_ded ._afb .SetIndex (int32 (_eeab ));}else {_ded ._afb .SetIndex (int32 (_gbgd ));};_dfg ,_bcgag =_ded ._dgab .DecodeBit (_ded ._afb );
if _bcgag !=nil {return _gc .Wrap (_bcgag ,_fcc ,"");};_ebfa |=byte (_dfg )<<uint (7-_cbe );_afaa :=uint (8-_cbe );_gbgd =((_gbgd &0xefb)<<1)|_dfg |((_fabb >>_afaa )&0x8)|((_dace >>_afaa )&0x200);};if _eeabf :=_ded .Bitmap .SetByte (_acgb ,_ebfa );_eeabf !=nil {return _gc .Wrap (_eeabf ,_fcc ,"");
};_acgb ++;_bcad ++;};return nil ;};func (_fbfb *TextRegion )readUseRefinement ()error {if !_fbfb .UseRefinement ||_fbfb .SbrTemplate !=0{return nil ;};var (_fdge byte ;_deaac error ;);_fbfb .SbrATX =make ([]int8 ,2);_fbfb .SbrATY =make ([]int8 ,2);_fdge ,_deaac =_fbfb ._gegd .ReadByte ();
if _deaac !=nil {return _deaac ;};_fbfb .SbrATX [0]=int8 (_fdge );_fdge ,_deaac =_fbfb ._gegd .ReadByte ();if _deaac !=nil {return _deaac ;};_fbfb .SbrATY [0]=int8 (_fdge );_fdge ,_deaac =_fbfb ._gegd .ReadByte ();if _deaac !=nil {return _deaac ;};_fbfb .SbrATX [1]=int8 (_fdge );
_fdge ,_deaac =_fbfb ._gegd .ReadByte ();if _deaac !=nil {return _deaac ;};_fbfb .SbrATY [1]=int8 (_fdge );return nil ;};func (_eagab *TableSegment )HtLow ()int32 {return _eagab ._gfge };func (_abcg *SymbolDictionary )decodeHeightClassBitmap (_bfb *_dcb .Bitmap ,_eede int64 ,_aagf int ,_cdgb []int )error {for _cdfd :=_eede ;
_cdfd < int64 (_abcg ._fefaf );_cdfd ++{var _cfdb int ;for _aecb :=_eede ;_aecb <=_cdfd -1;_aecb ++{_cfdb +=_cdgb [_aecb ];};_bbef :=_a .Rect (_cfdb ,0,_cfdb +_cdgb [_cdfd ],_aagf );_dcbf ,_dfeee :=_dcb .Extract (_bbef ,_bfb );if _dfeee !=nil {return _dfeee ;
};_abcg ._fcdee [_cdfd ]=_dcbf ;_abcg ._fcae =append (_abcg ._fcae ,_dcbf );};return nil ;};func (_efge *HalftoneRegion )combineGrayscalePlanes (_caed []*_dcb .Bitmap ,_eggd int )error {_geaf :=0;for _dafe :=0;_dafe < _caed [_eggd ].Height ;_dafe ++{for _agb :=0;
_agb < _caed [_eggd ].Width ;_agb +=8{_cffda ,_gdgg :=_caed [_eggd +1].GetByte (_geaf );if _gdgg !=nil {return _gdgg ;};_cgdf ,_gdgg :=_caed [_eggd ].GetByte (_geaf );if _gdgg !=nil {return _gdgg ;};_gdgg =_caed [_eggd ].SetByte (_geaf ,_dcb .CombineBytes (_cgdf ,_cffda ,_dcb .CmbOpXor ));
if _gdgg !=nil {return _gdgg ;};_geaf ++;};};return nil ;};func (_ccfe *HalftoneRegion )renderPattern (_ddfg [][]int )(_gac error ){var _cbcf ,_eafd int ;for _eaff :=0;_eaff < int (_ccfe .HGridHeight );_eaff ++{for _ffg :=0;_ffg < int (_ccfe .HGridWidth );
_ffg ++{_cbcf =_ccfe .computeX (_eaff ,_ffg );_eafd =_ccfe .computeY (_eaff ,_ffg );_cda :=_ccfe .Patterns [_ddfg [_eaff ][_ffg ]];if _gac =_dcb .Blit (_cda ,_ccfe .HalftoneRegionBitmap ,_cbcf +int (_ccfe .HGridX ),_eafd +int (_ccfe .HGridY ),_ccfe .CombinationOperator );
_gac !=nil {return _gac ;};};};return nil ;};func (_bbca *TableSegment )Init (h *Header ,r *_dg .Reader )error {_bbca ._ffae =r ;return _bbca .parseHeader ();};func _ffaef (_edef *_dg .Reader ,_fagce *Header )*TextRegion {_ddfd :=&TextRegion {_gegd :_edef ,Header :_fagce ,RegionInfo :NewRegionSegment (_edef )};
return _ddfd ;};func (_eea *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bcd ,_ega ,_ead ,_bgd ,_eae ,_cgad ,_cge ,_ggd ,_dfe int )(_acf error ){var (_gagb ,_agc int ;_agd ,_aag int ;_abc ,_ffc int ;_egb byte ;);if _bcd > 0{_egb ,_acf =_eea .RegionBitmap .GetByte (_cge -_ead );
if _acf !=nil {return _acf ;};_agd =int (_egb );};if _ggd > 0&&_ggd <=_eea .ReferenceBitmap .Height {_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe -_bgd +_cgad );if _acf !=nil {return _acf ;};_aag =int (_egb )<<2;};if _ggd >=0&&_ggd < _eea .ReferenceBitmap .Height {_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe +_cgad );
if _acf !=nil {return _acf ;};_abc =int (_egb );};if _ggd > -2&&_ggd < _eea .ReferenceBitmap .Height -1{_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe +_bgd +_cgad );if _acf !=nil {return _acf ;};_ffc =int (_egb );};_gagb =((_agd >>5)&0x6)|((_ffc >>2)&0x30)|(_abc &0xc0)|(_aag &0x200);
_agc =((_ffc >>2)&0x70)|(_abc &0xc0)|(_aag &0x700);var _deg int ;for _abe :=0;_abe < _eae ;_abe =_deg {var (_ba int ;_bgg int ;);_deg =_abe +8;if _ba =_ega -_abe ;_ba > 8{_ba =8;};_fff :=_deg < _ega ;_gfe :=_deg < _eea .ReferenceBitmap .Width ;_geg :=_cgad +1;
if _bcd > 0{_egb =0;if _fff {_egb ,_acf =_eea .RegionBitmap .GetByte (_cge -_ead +1);if _acf !=nil {return _acf ;};};_agd =(_agd <<8)|int (_egb );};if _ggd > 0&&_ggd <=_eea .ReferenceBitmap .Height {var _fgb int ;if _gfe {_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe -_bgd +_geg );
if _acf !=nil {return _acf ;};_fgb =int (_egb )<<2;};_aag =(_aag <<8)|_fgb ;};if _ggd >=0&&_ggd < _eea .ReferenceBitmap .Height {_egb =0;if _gfe {_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe +_geg );if _acf !=nil {return _acf ;};};_abc =(_abc <<8)|int (_egb );
};if _ggd > -2&&_ggd < (_eea .ReferenceBitmap .Height -1){_egb =0;if _gfe {_egb ,_acf =_eea .ReferenceBitmap .GetByte (_dfe +_bgd +_geg );if _acf !=nil {return _acf ;};};_ffc =(_ffc <<8)|int (_egb );};for _ecd :=0;_ecd < _ba ;_ecd ++{var _eb int ;_bdeb :=(_agc >>4)&0x1ff;
switch _bdeb {case 0x1ff:_eb =1;case 0x00:_eb =0;default:_eea ._ea .SetIndex (int32 (_gagb ));_eb ,_acf =_eea ._dcbe .DecodeBit (_eea ._ea );if _acf !=nil {return _acf ;};};_aaga :=uint (7-_ecd );_bgg |=_eb <<_aaga ;_gagb =((_gagb &0x0d6)<<1)|_eb |(_agd >>_aaga +5)&0x002|((_ffc >>_aaga +2)&0x010)|((_abc >>_aaga )&0x040)|((_aag >>_aaga )&0x200);
_agc =((_agc &0xdb)<<1)|((_ffc >>_aaga +2)&0x010)|((_abc >>_aaga )&0x080)|((_aag >>_aaga )&0x400);};_acf =_eea .RegionBitmap .SetByte (_cge ,byte (_bgg ));if _acf !=nil {return _acf ;};_cge ++;_dfe ++;};return nil ;};func (_aabf *PageInformationSegment )readResolution ()error {_efac ,_dbg :=_aabf ._dfa .ReadBits (32);
if _dbg !=nil {return _dbg ;};_aabf .ResolutionX =int (_efac &_d .MaxInt32 );_efac ,_dbg =_aabf ._dfa .ReadBits (32);if _dbg !=nil {return _dbg ;};_aabf .ResolutionY =int (_efac &_d .MaxInt32 );return nil ;};func (_bbab *TextRegion )decodeRI ()(int64 ,error ){if !_bbab .UseRefinement {return 0,nil ;
};if _bbab .IsHuffmanEncoded {_gbfcf ,_bdcf :=_bbab ._gegd .ReadBit ();return int64 (_gbfcf ),_bdcf ;};_cefc ,_gged :=_bbab ._aeaf .DecodeInt (_bbab ._acae );return int64 (_cefc ),_gged ;};func (_dgbg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _dgbg ._gead ==nil {var (_bdgd int ;
_dgfg error ;);if _dgbg .SdHuffDecodeHeightSelection ==3{_bdgd ++;};if _dgbg .SdHuffDecodeWidthSelection ==3{_bdgd ++;};_dgbg ._gead ,_dgfg =_dgbg .getUserTable (_bdgd );if _dgfg !=nil {return 0,_dgfg ;};};return _dgbg ._gead .Decode (_dgbg ._cdcge );};
func (_ggbc *TableSegment )HtHigh ()int32 {return _ggbc ._edfee };func (_aafba Type )String ()string {switch _aafba {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_bcac *GenericRegion )decodeLine (_fgdb ,_cfa ,_ddfb int )error {const _daf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_adad :=_bcac .Bitmap .GetByteIndex (0,_fgdb );_cee :=_adad -_bcac .Bitmap .RowStride ;switch _bcac .GBTemplate {case 0:if !_bcac .UseExtTemplates {return _bcac .decodeTemplate0a (_fgdb ,_cfa ,_ddfb ,_adad ,_cee );};return _bcac .decodeTemplate0b (_fgdb ,_cfa ,_ddfb ,_adad ,_cee );
case 1:return _bcac .decodeTemplate1 (_fgdb ,_cfa ,_ddfb ,_adad ,_cee );case 2:return _bcac .decodeTemplate2 (_fgdb ,_cfa ,_ddfb ,_adad ,_cee );case 3:return _bcac .decodeTemplate3 (_fgdb ,_cfa ,_ddfb ,_adad ,_cee );};return _gc .Errorf (_daf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bcac .GBTemplate );
};func (_gceg *TextRegion )getUserTable (_ggbf int )(_ac .Tabler ,error ){const _cbbd ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _deeg int ;for _ ,_face :=range _gceg .Header .RTSegments {if _face .Type ==53{if _deeg ==_ggbf {_gadf ,_beef :=_face .GetSegmentData ();
if _beef !=nil {return nil ,_beef ;};_dcege ,_egbed :=_gadf .(*TableSegment );if !_egbed {_cb .Log .Debug (_ca .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_face .SegmentNumber ));
return nil ,_gc .Error (_cbbd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ac .NewEncodedTable (_dcege );};_deeg ++;};};return nil ,nil ;};func (_aegd *PageInformationSegment )Size ()int {return 19};func (_daga *Header )readSegmentDataLength (_fffc *_dg .Reader )(_dcgg error ){_daga .SegmentDataLength ,_dcgg =_fffc .ReadBits (32);
if _dcgg !=nil {return _dcgg ;};_daga .SegmentDataLength &=_d .MaxInt32 ;return nil ;};func (_gafg *PatternDictionary )GetDictionary ()([]*_dcb .Bitmap ,error ){if _gafg .Patterns !=nil {return _gafg .Patterns ,nil ;};if !_gafg .IsMMREncoded {_gafg .setGbAtPixels ();
};_fcca :=NewGenericRegion (_gafg ._dbb );_fcca .setParametersMMR (_gafg .IsMMREncoded ,_gafg .DataOffset ,_gafg .DataLength ,uint32 (_gafg .HdpHeight ),(_gafg .GrayMax +1)*uint32 (_gafg .HdpWidth ),_gafg .HDTemplate ,false ,false ,_gafg .GBAtX ,_gafg .GBAtY );
_fac ,_fbdb :=_fcca .GetRegionBitmap ();if _fbdb !=nil {return nil ,_fbdb ;};if _fbdb =_gafg .extractPatterns (_fac );_fbdb !=nil {return nil ,_fbdb ;};return _gafg .Patterns ,nil ;};func (_cgc *GenericRegion )decodeTemplate0b (_ecde ,_dge ,_gcc int ,_cae ,_baa int )(_bdb error ){const _fag ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ffa ,_gfg int ;_badb ,_bbgbf int ;_ege byte ;_eeaf int ;);if _ecde >=1{_ege ,_bdb =_cgc .Bitmap .GetByte (_baa );if _bdb !=nil {return _gc .Wrap (_bdb ,_fag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_badb =int (_ege );};if _ecde >=2{_ege ,_bdb =_cgc .Bitmap .GetByte (_baa -_cgc .Bitmap .RowStride );
if _bdb !=nil {return _gc .Wrap (_bdb ,_fag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bbgbf =int (_ege )<<6;};_ffa =(_badb &0xf0)|(_bbgbf &0x3800);for _dfb :=0;_dfb < _gcc ;_dfb =_eeaf {var (_egec byte ;_egdd int ;);_eeaf =_dfb +8;if _abd :=_dge -_dfb ;
_abd > 8{_egdd =8;}else {_egdd =_abd ;};if _ecde > 0{_badb <<=8;if _eeaf < _dge {_ege ,_bdb =_cgc .Bitmap .GetByte (_baa +1);if _bdb !=nil {return _gc .Wrap (_bdb ,_fag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_badb |=int (_ege );};};if _ecde > 1{_bbgbf <<=8;
if _eeaf < _dge {_ege ,_bdb =_cgc .Bitmap .GetByte (_baa -_cgc .Bitmap .RowStride +1);if _bdb !=nil {return _gc .Wrap (_bdb ,_fag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bbgbf |=int (_ege )<<6;};};for _gggc :=0;_gggc < _egdd ;_gggc ++{_dcbg :=uint (7-_gggc );
if _cgc ._bggb {_gfg =_cgc .overrideAtTemplate0b (_ffa ,_dfb +_gggc ,_ecde ,int (_egec ),_gggc ,int (_dcbg ));_cgc ._afb .SetIndex (int32 (_gfg ));}else {_cgc ._afb .SetIndex (int32 (_ffa ));};var _ggbd int ;_ggbd ,_bdb =_cgc ._dgab .DecodeBit (_cgc ._afb );
if _bdb !=nil {return _gc .Wrap (_bdb ,_fag ,"");};_egec |=byte (_ggbd <<_dcbg );_ffa =((_ffa &0x7bf7)<<1)|_ggbd |((_badb >>_dcbg )&0x10)|((_bbgbf >>_dcbg )&0x800);};if _deca :=_cgc .Bitmap .SetByte (_cae ,_egec );_deca !=nil {return _gc .Wrap (_deca ,_fag ,"");
};_cae ++;_baa ++;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_fcfad *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fcfad .SdHuffAggInstanceSelection {_gfbed ,_dacf :=_ac .GetStandardTable (1);if _dacf !=nil {return 0,_dacf ;
};return _gfbed .Decode (_fcfad ._cdcge );};if _fcfad ._bacg ==nil {var (_abcde int ;_feed error ;);if _fcfad .SdHuffDecodeHeightSelection ==3{_abcde ++;};if _fcfad .SdHuffDecodeWidthSelection ==3{_abcde ++;};if _fcfad .SdHuffBMSizeSelection ==3{_abcde ++;
};_fcfad ._bacg ,_feed =_fcfad .getUserTable (_abcde );if _feed !=nil {return 0,_feed ;};};return _fcfad ._bacg .Decode (_fcfad ._cdcge );};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_bcdg *PageInformationSegment )readWidthAndHeight ()error {_ccacb ,_dgfc :=_bcdg ._dfa .ReadBits (32);
if _dgfc !=nil {return _dgfc ;};_bcdg .PageBMWidth =int (_ccacb &_d .MaxInt32 );_ccacb ,_dgfc =_bcdg ._dfa .ReadBits (32);if _dgfc !=nil {return _dgfc ;};_bcdg .PageBMHeight =int (_ccacb &_d .MaxInt32 );return nil ;};func (_dbd *GenericRegion )Init (h *Header ,r *_dg .Reader )error {_dbd .RegionSegment =NewRegionSegment (r );
_dbd ._agg =r ;return _dbd .parseHeader ();};func (_ffbg *PageInformationSegment )readIsStriped ()error {_ddgg ,_bdgf :=_ffbg ._dfa .ReadBit ();if _bdgf !=nil {return _bdgf ;};if _ddgg ==1{_ffbg .IsStripe =true ;};return nil ;};func (_aeb *GenericRefinementRegion )decodeOptimized (_gf ,_gg ,_cba ,_edc ,_gbg ,_fe ,_ff int )error {var (_bf error ;
_gga int ;_ga int ;);_eca :=_gf -int (_aeb .ReferenceDY );if _ecf :=int (-_aeb .ReferenceDX );_ecf > 0{_gga =_ecf ;};_ddb :=_aeb .ReferenceBitmap .GetByteIndex (_gga ,_eca );if _aeb .ReferenceDX > 0{_ga =int (_aeb .ReferenceDX );};_dad :=_aeb .RegionBitmap .GetByteIndex (_ga ,_gf );
switch _aeb .TemplateID {case 0:_bf =_aeb .decodeTemplate (_gf ,_gg ,_cba ,_edc ,_gbg ,_fe ,_ff ,_dad ,_eca ,_ddb ,_aeb ._bde );case 1:_bf =_aeb .decodeTemplate (_gf ,_gg ,_cba ,_edc ,_gbg ,_fe ,_ff ,_dad ,_eca ,_ddb ,_aeb ._ec );};return _bf ;};func (_bcce *Header )pageSize ()uint {if _bcce .PageAssociation <=255{return 1;
};return 4;};func (_cgbe *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cgbe .IsHuffmanEncoded {switch _cgbe .SdHuffDecodeWidthSelection {case 0:_efad ,_befb :=_ac .GetStandardTable (2);if _befb !=nil {return 0,_befb ;};return _efad .Decode (_cgbe ._cdcge );
case 1:_ffdf ,_geab :=_ac .GetStandardTable (3);if _geab !=nil {return 0,_geab ;};return _ffdf .Decode (_cgbe ._cdcge );case 3:if _cgbe ._bacb ==nil {var _dbef int ;if _cgbe .SdHuffDecodeHeightSelection ==3{_dbef ++;};_dgff ,_afed :=_cgbe .getUserTable (_dbef );
if _afed !=nil {return 0,_afed ;};_cgbe ._bacb =_dgff ;};return _cgbe ._bacb .Decode (_cgbe ._cdcge );};}else {_acbc ,_gbfc :=_cgbe ._ggc .DecodeInt (_cgbe ._eeea );if _gbfc !=nil {return 0,_gbfc ;};return int64 (_acbc ),nil ;};return 0,nil ;};func (_eaga *SymbolDictionary )GetDictionary ()([]*_dcb .Bitmap ,error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_cb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_cb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_eaga ._caef ,_eaga ._fcdee );
}();if _eaga ._caef ==nil {var _dbaag error ;if _eaga .UseRefinementAggregation {_eaga ._cfcg =_eaga .getSbSymCodeLen ();};if !_eaga .IsHuffmanEncoded {if _dbaag =_eaga .setCodingStatistics ();_dbaag !=nil {return nil ,_dbaag ;};};_eaga ._fcdee =make ([]*_dcb .Bitmap ,_eaga .NumberOfNewSymbols );
var _caedb []int ;if _eaga .IsHuffmanEncoded &&!_eaga .UseRefinementAggregation {_caedb =make ([]int ,_eaga .NumberOfNewSymbols );};if _dbaag =_eaga .setSymbolsArray ();_dbaag !=nil {return nil ,_dbaag ;};var _ccacf ,_fbbe int64 ;_eaga ._fefaf =0;for _eaga ._fefaf < _eaga .NumberOfNewSymbols {_fbbe ,_dbaag =_eaga .decodeHeightClassDeltaHeight ();
if _dbaag !=nil {return nil ,_dbaag ;};_ccacf +=_fbbe ;var _eafde ,_cdd uint32 ;_fgcc :=int64 (_eaga ._fefaf );for {var _daed int64 ;_daed ,_dbaag =_eaga .decodeDifferenceWidth ();if _b .Is (_dbaag ,_cab .ErrOOB ){break ;};if _dbaag !=nil {return nil ,_dbaag ;
};if _eaga ._fefaf >=_eaga .NumberOfNewSymbols {break ;};_eafde +=uint32 (_daed );_cdd +=_eafde ;if !_eaga .IsHuffmanEncoded ||_eaga .UseRefinementAggregation {if !_eaga .UseRefinementAggregation {_dbaag =_eaga .decodeDirectlyThroughGenericRegion (_eafde ,uint32 (_ccacf ));
if _dbaag !=nil {return nil ,_dbaag ;};}else {_dbaag =_eaga .decodeAggregate (_eafde ,uint32 (_ccacf ));if _dbaag !=nil {return nil ,_dbaag ;};};}else if _eaga .IsHuffmanEncoded &&!_eaga .UseRefinementAggregation {_caedb [_eaga ._fefaf ]=int (_eafde );
};_eaga ._fefaf ++;};if _eaga .IsHuffmanEncoded &&!_eaga .UseRefinementAggregation {var _gabg int64 ;if _eaga .SdHuffBMSizeSelection ==0{var _abfb _ac .Tabler ;_abfb ,_dbaag =_ac .GetStandardTable (1);if _dbaag !=nil {return nil ,_dbaag ;};_gabg ,_dbaag =_abfb .Decode (_eaga ._cdcge );
if _dbaag !=nil {return nil ,_dbaag ;};}else {_gabg ,_dbaag =_eaga .huffDecodeBmSize ();if _dbaag !=nil {return nil ,_dbaag ;};};_eaga ._cdcge .Align ();var _gccfa *_dcb .Bitmap ;_gccfa ,_dbaag =_eaga .decodeHeightClassCollectiveBitmap (_gabg ,uint32 (_ccacf ),_cdd );
if _dbaag !=nil {return nil ,_dbaag ;};_dbaag =_eaga .decodeHeightClassBitmap (_gccfa ,_fgcc ,int (_ccacf ),_caedb );if _dbaag !=nil {return nil ,_dbaag ;};};};_afdb ,_dbaag :=_eaga .getToExportFlags ();if _dbaag !=nil {return nil ,_dbaag ;};_eaga .setExportedSymbols (_afdb );
};return _eaga ._caef ,nil ;};func (_afe *GenericRefinementRegion )parseHeader ()(_edgc error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_dfd :=_dd .Now ();defer func (){if _edgc ==nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_dd .Since (_dfd ).Nanoseconds ());
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_edgc );
};}();if _edgc =_afe .RegionInfo .parseHeader ();_edgc !=nil {return _edgc ;};_ ,_edgc =_afe ._ed .ReadBits (6);if _edgc !=nil {return _edgc ;};_afe .IsTPGROn ,_edgc =_afe ._ed .ReadBool ();if _edgc !=nil {return _edgc ;};var _aabd int ;_aabd ,_edgc =_afe ._ed .ReadBit ();
if _edgc !=nil {return _edgc ;};_afe .TemplateID =int8 (_aabd );switch _afe .TemplateID {case 0:_afe .Template =_afe ._bde ;if _edgc =_afe .readAtPixels ();_edgc !=nil {return _edgc ;};case 1:_afe .Template =_afe ._ec ;};return nil ;};func (_aede *SymbolDictionary )setRetainedCodingContexts (_bcgab *SymbolDictionary ){_aede ._ggc =_bcgab ._ggc ;
_aede .IsHuffmanEncoded =_bcgab .IsHuffmanEncoded ;_aede .UseRefinementAggregation =_bcgab .UseRefinementAggregation ;_aede .SdTemplate =_bcgab .SdTemplate ;_aede .SdrTemplate =_bcgab .SdrTemplate ;_aede .SdATX =_bcgab .SdATX ;_aede .SdATY =_bcgab .SdATY ;
_aede .SdrATX =_bcgab .SdrATX ;_aede .SdrATY =_bcgab .SdrATY ;_aede ._aacge =_bcgab ._aacge ;};func (_bdega *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bdff int64 ,_fgdc ,_bgdd uint32 )(*_dcb .Bitmap ,error ){if _bdff ==0{_gebd :=_dcb .New (int (_bgdd ),int (_fgdc ));
var (_fgbg byte ;_efegf error ;);for _ffgf :=0;_ffgf < len (_gebd .Data );_ffgf ++{_fgbg ,_efegf =_bdega ._cdcge .ReadByte ();if _efegf !=nil {return nil ,_efegf ;};if _efegf =_gebd .SetByte (_ffgf ,_fgbg );_efegf !=nil {return nil ,_efegf ;};};return _gebd ,nil ;
};if _bdega ._egcgd ==nil {_bdega ._egcgd =NewGenericRegion (_bdega ._cdcge );};_bdega ._egcgd .setParameters (true ,_bdega ._cdcge .AbsolutePosition (),_bdff ,_fgdc ,_bgdd );_fgaca ,_eeef :=_bdega ._egcgd .GetRegionBitmap ();if _eeef !=nil {return nil ,_eeef ;
};return _fgaca ,nil ;};func (_faeg *GenericRegion )updateOverrideFlags ()error {const _cbd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _faeg .GBAtX ==nil ||_faeg .GBAtY ==nil {return nil ;
};if len (_faeg .GBAtX )!=len (_faeg .GBAtY ){return _gc .Errorf (_cbd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_faeg .GBAtX ),len (_faeg .GBAtY ));
};_faeg .GBAtOverride =make ([]bool ,len (_faeg .GBAtX ));switch _faeg .GBTemplate {case 0:if !_faeg .UseExtTemplates {if _faeg .GBAtX [0]!=3||_faeg .GBAtY [0]!=-1{_faeg .setOverrideFlag (0);};if _faeg .GBAtX [1]!=-3||_faeg .GBAtY [1]!=-1{_faeg .setOverrideFlag (1);
};if _faeg .GBAtX [2]!=2||_faeg .GBAtY [2]!=-2{_faeg .setOverrideFlag (2);};if _faeg .GBAtX [3]!=-2||_faeg .GBAtY [3]!=-2{_faeg .setOverrideFlag (3);};}else {if _faeg .GBAtX [0]!=-2||_faeg .GBAtY [0]!=0{_faeg .setOverrideFlag (0);};if _faeg .GBAtX [1]!=0||_faeg .GBAtY [1]!=-2{_faeg .setOverrideFlag (1);
};if _faeg .GBAtX [2]!=-2||_faeg .GBAtY [2]!=-1{_faeg .setOverrideFlag (2);};if _faeg .GBAtX [3]!=-1||_faeg .GBAtY [3]!=-2{_faeg .setOverrideFlag (3);};if _faeg .GBAtX [4]!=1||_faeg .GBAtY [4]!=-2{_faeg .setOverrideFlag (4);};if _faeg .GBAtX [5]!=2||_faeg .GBAtY [5]!=-1{_faeg .setOverrideFlag (5);
};if _faeg .GBAtX [6]!=-3||_faeg .GBAtY [6]!=0{_faeg .setOverrideFlag (6);};if _faeg .GBAtX [7]!=-4||_faeg .GBAtY [7]!=0{_faeg .setOverrideFlag (7);};if _faeg .GBAtX [8]!=2||_faeg .GBAtY [8]!=-2{_faeg .setOverrideFlag (8);};if _faeg .GBAtX [9]!=3||_faeg .GBAtY [9]!=-1{_faeg .setOverrideFlag (9);
};if _faeg .GBAtX [10]!=-2||_faeg .GBAtY [10]!=-2{_faeg .setOverrideFlag (10);};if _faeg .GBAtX [11]!=-3||_faeg .GBAtY [11]!=-1{_faeg .setOverrideFlag (11);};};case 1:if _faeg .GBAtX [0]!=3||_faeg .GBAtY [0]!=-1{_faeg .setOverrideFlag (0);};case 2:if _faeg .GBAtX [0]!=2||_faeg .GBAtY [0]!=-1{_faeg .setOverrideFlag (0);
};case 3:if _faeg .GBAtX [0]!=2||_faeg .GBAtY [0]!=-1{_faeg .setOverrideFlag (0);};};return nil ;};func (_cace *SymbolDictionary )encodeNumSyms (_aebf _dg .BinaryWriter )(_gbcg int ,_feba error ){const _edaa ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_fbddb :=make ([]byte ,4);_c .BigEndian .PutUint32 (_fbddb ,_cace .NumberOfExportedSymbols );if _gbcg ,_feba =_aebf .Write (_fbddb );_feba !=nil {return _gbcg ,_gc .Wrap (_feba ,_edaa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_c .BigEndian .PutUint32 (_fbddb ,_cace .NumberOfNewSymbols );_bgb ,_feba :=_aebf .Write (_fbddb );if _feba !=nil {return _gbcg ,_gc .Wrap (_feba ,_edaa ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _gbcg +_bgb ,nil ;};func (_fecb *TextRegion )decodeRdw ()(int64 ,error ){const _dgdc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _fecb .IsHuffmanEncoded {if _fecb .SbHuffRDWidth ==3{if _fecb ._dbbd ==nil {var (_bcffg int ;_gfee error ;);if _fecb .SbHuffFS ==3{_bcffg ++;};if _fecb .SbHuffDS ==3{_bcffg ++;};if _fecb .SbHuffDT ==3{_bcffg ++;};_fecb ._dbbd ,_gfee =_fecb .getUserTable (_bcffg );
if _gfee !=nil {return 0,_gc .Wrap (_gfee ,_dgdc ,"");};};return _fecb ._dbbd .Decode (_fecb ._gegd );};_cfad ,_fgef :=_ac .GetStandardTable (14+int (_fecb .SbHuffRDWidth ));if _fgef !=nil {return 0,_gc .Wrap (_fgef ,_dgdc ,"");};return _cfad .Decode (_fecb ._gegd );
};_cggf ,_ccb :=_fecb ._aeaf .DecodeInt (_fecb ._bgfc );if _ccb !=nil {return 0,_gc .Wrap (_ccb ,_dgdc ,"");};return int64 (_cggf ),nil ;};func _bcba (_dccb int )int {if _dccb ==0{return 0;};_dccb |=_dccb >>1;_dccb |=_dccb >>2;_dccb |=_dccb >>4;_dccb |=_dccb >>8;
_dccb |=_dccb >>16;return (_dccb +1)>>1;};func (_gffa *SymbolDictionary )decodeThroughTextRegion (_cbca ,_cceb ,_cadd uint32 )error {if _gffa ._bbbe ==nil {_gffa ._bbbe =_ffaef (_gffa ._cdcge ,nil );_gffa ._bbbe .setContexts (_gffa ._aacge ,_bd .NewStats (512,1),_bd .NewStats (512,1),_bd .NewStats (512,1),_bd .NewStats (512,1),_gffa ._fcgc ,_bd .NewStats (512,1),_bd .NewStats (512,1),_bd .NewStats (512,1),_bd .NewStats (512,1));
};if _gabd :=_gffa .setSymbolsArray ();_gabd !=nil {return _gabd ;};_gffa ._bbbe .setParameters (_gffa ._ggc ,_gffa .IsHuffmanEncoded ,true ,_cbca ,_cceb ,_cadd ,1,_gffa ._ffag +_gffa ._fefaf ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gffa .SdrTemplate ,_gffa .SdrATX ,_gffa .SdrATY ,_gffa ._fcae ,_gffa ._cfcg );
return _gffa .addSymbol (_gffa ._bbbe );};func (_abde *TextRegion )decodeCurrentT ()(int64 ,error ){if _abde .SbStrips !=1{if _abde .IsHuffmanEncoded {_ggac ,_fece :=_abde ._gegd .ReadBits (byte (_abde .LogSBStrips ));return int64 (_ggac ),_fece ;};_gffe ,_bdea :=_abde ._aeaf .DecodeInt (_abde ._adbbe );
if _bdea !=nil {return 0,_bdea ;};return int64 (_gffe ),nil ;};return 0,nil ;};func (_cfaf *TextRegion )Init (header *Header ,r *_dg .Reader )error {_cfaf .Header =header ;_cfaf ._gegd =r ;_cfaf .RegionInfo =NewRegionSegment (_cfaf ._gegd );return _cfaf .parseHeader ();
};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_degd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _degd .IsHuffmanEncoded {return _degd .decodeHeightClassDeltaHeightWithHuffman ();
};_fccb ,_agdce :=_degd ._ggc .DecodeInt (_degd ._bfcbe );if _agdce !=nil {return 0,_agdce ;};return int64 (_fccb ),nil ;};func (_feeec *TextRegion )encodeSymbols (_cbgeg _dg .BinaryWriter )(_fbefb int ,_agaa error ){const _cdca ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_agad :=make ([]byte ,4);_c .BigEndian .PutUint32 (_agad ,_feeec .NumberOfSymbols );if _fbefb ,_agaa =_cbgeg .Write (_agad );_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_efdg ,_agaa :=_dcb .NewClassedPoints (_feeec ._acdd ,_feeec ._beda );if _agaa !=nil {return 0,_gc .Wrap (_agaa ,_cdca ,"");};var _egda ,_ecbcf int ;_affd :=_ad .New ();_affd .Init ();if _agaa =_affd .EncodeInteger (_ad .IADT ,0);_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bfcc ,_agaa :=_efdg .GroupByY ();if _agaa !=nil {return 0,_gc .Wrap (_agaa ,_cdca ,"");};for _ ,_ddga :=range _bfcc {_eceb :=int (_ddga .YAtIndex (0));_fcec :=_eceb -_egda ;if _agaa =_affd .EncodeInteger (_ad .IADT ,_fcec );_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"");
};var _cdcbd int ;for _cdff ,_abeda :=range _ddga .IntSlice {switch _cdff {case 0:_cbec :=int (_ddga .XAtIndex (_cdff ))-_ecbcf ;if _agaa =_affd .EncodeInteger (_ad .IAFS ,_cbec );_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"");};_ecbcf +=_cbec ;
_cdcbd =_ecbcf ;default:_affb :=int (_ddga .XAtIndex (_cdff ))-_cdcbd ;if _agaa =_affd .EncodeInteger (_ad .IADS ,_affb );_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"");};_cdcbd +=_affb ;};_aabb ,_daef :=_feeec ._fdcb .Get (_abeda );if _daef !=nil {return _fbefb ,_gc .Wrap (_daef ,_cdca ,"");
};_ffdbf ,_afcd :=_feeec ._geaa [_aabb ];if !_afcd {_ffdbf ,_afcd =_feeec ._gddef [_aabb ];if !_afcd {return _fbefb ,_gc .Errorf (_cdca ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_aabb );
};};if _daef =_affd .EncodeIAID (_feeec ._ddef ,_ffdbf );_daef !=nil {return _fbefb ,_gc .Wrap (_daef ,_cdca ,"");};};if _agaa =_affd .EncodeOOB (_ad .IADS );_agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"");};};_affd .Final ();_cbda ,_agaa :=_affd .WriteTo (_cbgeg );
if _agaa !=nil {return _fbefb ,_gc .Wrap (_agaa ,_cdca ,"");};_fbefb +=int (_cbda );return _fbefb ,nil ;};func (_aafa *GenericRefinementRegion )String ()string {_afg :=&_cg .Builder {};_afg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_afg .WriteString (_aafa .RegionInfo .String ()+"\u000a");_afg .WriteString (_ca .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aafa .IsTPGROn ));_afg .WriteString (_ca .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_aafa .TemplateID ));
_afg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aafa .GrAtX ));_afg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aafa .GrAtY ));
_afg .WriteString (_ca .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_aafa .ReferenceDX ));_afg .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_aafa .ReferenceDY ));
return _afg .String ();};func (_cbge *TextRegion )String ()string {_dgabc :=&_cg .Builder {};_dgabc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_dgabc .WriteString (_cbge .RegionInfo .String ()+"\u000a");
_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cbge .SbrTemplate ));_dgabc .WriteString (_ca .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cbge .SbDsOffset ));
_dgabc .WriteString (_ca .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cbge .DefaultPixel ));_dgabc .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cbge .CombinationOperator ));
_dgabc .WriteString (_ca .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cbge .IsTransposed ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cbge .ReferenceCorner ));
_dgabc .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cbge .UseRefinement ));_dgabc .WriteString (_ca .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cbge .IsHuffmanEncoded ));
if _cbge .IsHuffmanEncoded {_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cbge .SbHuffRSize ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cbge .SbHuffRDY ));
_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cbge .SbHuffRDX ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cbge .SbHuffRDHeight ));
_dgabc .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cbge .SbHuffRDWidth ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cbge .SbHuffDT ));
_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cbge .SbHuffDS ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cbge .SbHuffFS ));
};_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cbge .SbrATX ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cbge .SbrATY ));
_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cbge .NumberOfSymbolInstances ));_dgabc .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cbge .SbrATX ));
return _dgabc .String ();};func (_eeb *HalftoneRegion )Init (hd *Header ,r *_dg .Reader )error {_eeb ._fcdd =r ;_eeb ._baf =hd ;_eeb .RegionSegment =NewRegionSegment (r );return _eeb .parseHeader ();};func (_cffb *GenericRegion )overrideAtTemplate1 (_aacg ,_egbc ,_cabe ,_cfe ,_ccf int )int {_aacg &=0x1FF7;
if _cffb .GBAtY [0]==0&&_cffb .GBAtX [0]>=-int8 (_ccf ){_aacg |=(_cfe >>uint (7-(int8 (_ccf )+_cffb .GBAtX [0]))&0x1)<<3;}else {_aacg |=int (_cffb .getPixel (_egbc +int (_cffb .GBAtX [0]),_cabe +int (_cffb .GBAtY [0])))<<3;};return _aacg ;};func (_bbae *Header )subInputReader ()(*_dg .Reader ,error ){_gad :=int (_bbae .SegmentDataLength );
if _bbae .SegmentDataLength ==_d .MaxInt32 {_gad =-1;};return _bbae .Reader .NewPartialReader (int (_bbae .SegmentDataStartOffset ),_gad ,false );};func (_aead *GenericRegion )decodeTemplate3 (_eag ,_edfc ,_edba int ,_edag ,_egfa int )(_dgaf error ){const _afde ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_cbc ,_faa int ;_dbea int ;_dbc byte ;_gbc ,_dabd int ;);if _eag >=1{_dbc ,_dgaf =_aead .Bitmap .GetByte (_egfa );if _dgaf !=nil {return _gc .Wrap (_dgaf ,_afde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dbea =int (_dbc );};_cbc =(_dbea >>1)&0x70;
for _baed :=0;_baed < _edba ;_baed =_gbc {var (_bdde byte ;_bfda int ;);_gbc =_baed +8;if _ece :=_edfc -_baed ;_ece > 8{_bfda =8;}else {_bfda =_ece ;};if _eag >=1{_dbea <<=8;if _gbc < _edfc {_dbc ,_dgaf =_aead .Bitmap .GetByte (_egfa +1);if _dgaf !=nil {return _gc .Wrap (_dgaf ,_afde ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dbea |=int (_dbc );};};for _adg :=0;_adg < _bfda ;_adg ++{if _aead ._bggb {_faa =_aead .overrideAtTemplate3 (_cbc ,_baed +_adg ,_eag ,int (_bdde ),_adg );_aead ._afb .SetIndex (int32 (_faa ));}else {_aead ._afb .SetIndex (int32 (_cbc ));};_dabd ,_dgaf =_aead ._dgab .DecodeBit (_aead ._afb );
if _dgaf !=nil {return _gc .Wrap (_dgaf ,_afde ,"");};_bdde |=byte (_dabd )<<byte (7-_adg );_cbc =((_cbc &0x1f7)<<1)|_dabd |((_dbea >>uint (8-_adg ))&0x010);};if _fgc :=_aead .Bitmap .SetByte (_edag ,_bdde );_fgc !=nil {return _gc .Wrap (_fgc ,_afde ,"");
};_edag ++;_egfa ++;};return nil ;};func (_gefb *SymbolDictionary )String ()string {_daec :=&_cg .Builder {};_daec .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_daec .WriteString (_ca .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gefb .SdrTemplate ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gefb .SdTemplate ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gefb ._aggbd ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gefb ._abgc ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gefb .SdHuffAggInstanceSelection ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gefb .SdHuffBMSizeSelection ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gefb .SdHuffDecodeWidthSelection ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gefb .SdHuffDecodeHeightSelection ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gefb .UseRefinementAggregation ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gefb .IsHuffmanEncoded ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gefb .SdATX ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gefb .SdATY ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gefb .SdrATX ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gefb .SdrATY ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gefb .NumberOfExportedSymbols ));
_daec .WriteString (_ca .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gefb .NumberOfNewSymbols ));_daec .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gefb ._ffag ));
_daec .WriteString (_ca .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gefb ._fefaf ));return _daec .String ();};func (_gbgde *TextRegion )decodeRdh ()(int64 ,error ){const _gbce ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _gbgde .IsHuffmanEncoded {if _gbgde .SbHuffRDHeight ==3{if _gbgde ._gbcgc ==nil {var (_bcgfb int ;_ecaf error ;);if _gbgde .SbHuffFS ==3{_bcgfb ++;};if _gbgde .SbHuffDS ==3{_bcgfb ++;};if _gbgde .SbHuffDT ==3{_bcgfb ++;};if _gbgde .SbHuffRDWidth ==3{_bcgfb ++;
};_gbgde ._gbcgc ,_ecaf =_gbgde .getUserTable (_bcgfb );if _ecaf !=nil {return 0,_gc .Wrap (_ecaf ,_gbce ,"");};};return _gbgde ._gbcgc .Decode (_gbgde ._gegd );};_efaf ,_bedf :=_ac .GetStandardTable (14+int (_gbgde .SbHuffRDHeight ));if _bedf !=nil {return 0,_gc .Wrap (_bedf ,_gbce ,"");
};return _efaf .Decode (_gbgde ._gegd );};_fdfbd ,_aaac :=_gbgde ._aeaf .DecodeInt (_gbgde ._dgeb );if _aaac !=nil {return 0,_gc .Wrap (_aaac ,_gbce ,"");};return int64 (_fdfbd ),nil ;};func (_dbaae *Header )writeFlags (_cdcg _dg .BinaryWriter )(_bed error ){const _gadb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_efeed :=byte (_dbaae .Type );if _bed =_cdcg .WriteByte (_efeed );_bed !=nil {return _gc .Wrap (_bed ,_gadb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_dbaae .RetainFlag &&!_dbaae .PageAssociationFieldSize {return nil ;};if _bed =_cdcg .SkipBits (-8);_bed !=nil {return _gc .Wrap (_bed ,_gadb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _dege int ;if _dbaae .RetainFlag {_dege =1;};if _bed =_cdcg .WriteBit (_dege );_bed !=nil {return _gc .Wrap (_bed ,_gadb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_dege =0;if _dbaae .PageAssociationFieldSize {_dege =1;
};if _bed =_cdcg .WriteBit (_dege );_bed !=nil {return _gc .Wrap (_bed ,_gadb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cdcg .FinishByte ();return nil ;};func (_fagd *Header )readSegmentPageAssociation (_fbdg Documenter ,_affc *_dg .Reader ,_cggg uint64 ,_gfb ...int )(_acgf error ){const _gefcc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fagd .PageAssociationFieldSize {_afad ,_fcdb :=_affc .ReadBits (8);if _fcdb !=nil {return _gc .Wrap (_fcdb ,_gefcc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fagd .PageAssociation =int (_afad &0xFF);}else {_fadc ,_bfdc :=_affc .ReadBits (32);
if _bfdc !=nil {return _gc .Wrap (_bfdc ,_gefcc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fagd .PageAssociation =int (_fadc &_d .MaxInt32 );};if _cggg ==0{return nil ;};if _fagd .PageAssociation !=0{_abcd ,_bcgg :=_fbdg .GetPage (_fagd .PageAssociation );
if _bcgg !=nil {return _gc .Wrap (_bcgg ,_gefcc ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dedd int ;for _gaca :=uint64 (0);_gaca < _cggg ;_gaca ++{_dedd =_gfb [_gaca ];
_fagd .RTSegments [_gaca ],_bcgg =_abcd .GetSegment (_dedd );if _bcgg !=nil {var _beaf error ;_fagd .RTSegments [_gaca ],_beaf =_fbdg .GetGlobalSegment (_dedd );if _beaf !=nil {return _gc .Wrapf (_bcgg ,_gefcc ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fagd .PageAssociation );
};};};return nil ;};for _eegf :=uint64 (0);_eegf < _cggg ;_eegf ++{_fagd .RTSegments [_eegf ],_acgf =_fbdg .GetGlobalSegment (_gfb [_eegf ]);if _acgf !=nil {return _gc .Wrapf (_acgf ,_gefcc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gfb [_eegf ]);
};};return nil ;};func (_dgcg *TableSegment )HtRS ()int32 {return _dgcg ._fafd };type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader *_dg .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type template0 struct{};func (_ddfbd *Header )readHeaderFlags ()error {const _gdb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_ffda ,_gdfb :=_ddfbd .Reader .ReadBit ();if _gdfb !=nil {return _gc .Wrap (_gdfb ,_gdb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _ffda !=0{_ddfbd .RetainFlag =true ;};_ffda ,_gdfb =_ddfbd .Reader .ReadBit ();if _gdfb !=nil {return _gc .Wrap (_gdfb ,_gdb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _ffda !=0{_ddfbd .PageAssociationFieldSize =true ;};_eadg ,_gdfb :=_ddfbd .Reader .ReadBits (6);if _gdfb !=nil {return _gc .Wrap (_gdfb ,_gdb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ddfbd .Type =Type (int (_eadg ));
return nil ;};func (_bdfd *PageInformationSegment )checkInput ()error {if _bdfd .PageBMHeight ==_d .MaxInt32 {if !_bdfd .IsStripe {_cb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fga *Header )readNumberOfReferredToSegments (_aegg *_dg .Reader )(uint64 ,error ){const _bafe ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_adcd ,_daa :=_aegg .ReadBits (3);if _daa !=nil {return 0,_gc .Wrap (_daa ,_bafe ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_adcd &=0xf;var _ebffg []byte ;if _adcd <=4{_ebffg =make ([]byte ,5);for _eadd :=0;_eadd <=4;_eadd ++{_gddec ,_gda :=_aegg .ReadBit ();
if _gda !=nil {return 0,_gc .Wrap (_gda ,_bafe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ebffg [_eadd ]=byte (_gddec );};}else {_adcd ,_daa =_aegg .ReadBits (29);if _daa !=nil {return 0,_daa ;};_adcd &=_d .MaxInt32 ;_bdfb :=(_adcd +8)>>3;
_bdfb <<=3;_ebffg =make ([]byte ,_bdfb );var _eegg uint64 ;for _eegg =0;_eegg < _bdfb ;_eegg ++{_gbbc ,_bbfd :=_aegg .ReadBit ();if _bbfd !=nil {return 0,_gc .Wrap (_bbfd ,_bafe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ebffg [_eegg ]=byte (_gbbc );
};};return _adcd ,nil ;};func (_ddbe *TableSegment )HtPS ()int32 {return _ddbe ._dccd };var _ SegmentEncoder =&RegionSegment {};func (_gadd *PageInformationSegment )Encode (w _dg .BinaryWriter )(_fbe int ,_efda error ){const _ggab ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_agee :=make ([]byte ,4);_c .BigEndian .PutUint32 (_agee ,uint32 (_gadd .PageBMWidth ));_fbe ,_efda =w .Write (_agee );if _efda !=nil {return _fbe ,_gc .Wrap (_efda ,_ggab ,"\u0077\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_agee ,uint32 (_gadd .PageBMHeight ));
var _gecd int ;_gecd ,_efda =w .Write (_agee );if _efda !=nil {return _gecd +_fbe ,_gc .Wrap (_efda ,_ggab ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fbe +=_gecd ;_c .BigEndian .PutUint32 (_agee ,uint32 (_gadd .ResolutionX ));_gecd ,_efda =w .Write (_agee );
if _efda !=nil {return _gecd +_fbe ,_gc .Wrap (_efda ,_ggab ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fbe +=_gecd ;_c .BigEndian .PutUint32 (_agee ,uint32 (_gadd .ResolutionY ));if _gecd ,_efda =w .Write (_agee );_efda !=nil {return _gecd +_fbe ,_gc .Wrap (_efda ,_ggab ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_fbe +=_gecd ;if _efda =_gadd .encodeFlags (w );_efda !=nil {return _fbe ,_gc .Wrap (_efda ,_ggab ,"");};_fbe ++;if _gecd ,_efda =_gadd .encodeStripingInformation (w );_efda !=nil {return _fbe ,_gc .Wrap (_efda ,_ggab ,"");};_fbe +=_gecd ;return _fbe ,nil ;
};type SegmentEncoder interface{Encode (_dgdd _dg .BinaryWriter )(_abge int ,_ddd error );};func (_dced *PatternDictionary )setGbAtPixels (){if _dced .HDTemplate ==0{_dced .GBAtX =make ([]int8 ,4);_dced .GBAtY =make ([]int8 ,4);_dced .GBAtX [0]=-int8 (_dced .HdpWidth );
_dced .GBAtY [0]=0;_dced .GBAtX [1]=-3;_dced .GBAtY [1]=-1;_dced .GBAtX [2]=2;_dced .GBAtY [2]=-2;_dced .GBAtX [3]=-2;_dced .GBAtY [3]=-2;}else {_dced .GBAtX =[]int8 {-int8 (_dced .HdpWidth )};_dced .GBAtY =[]int8 {0};};};func (_ggaa *GenericRegion )readGBAtPixels (_bbbb int )error {const _gcbf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_ggaa .GBAtX =make ([]int8 ,_bbbb );_ggaa .GBAtY =make ([]int8 ,_bbbb );for _gfgb :=0;_gfgb < _bbbb ;_gfgb ++{_fbd ,_fgdba :=_ggaa ._agg .ReadByte ();if _fgdba !=nil {return _gc .Wrapf (_fgdba ,_gcbf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gfgb );
};_ggaa .GBAtX [_gfgb ]=int8 (_fbd );_fbd ,_fgdba =_ggaa ._agg .ReadByte ();if _fgdba !=nil {return _gc .Wrapf (_fgdba ,_gcbf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gfgb );};_ggaa .GBAtY [_gfgb ]=int8 (_fbd );};return nil ;
};func (_ccff *TableSegment )StreamReader ()*_dg .Reader {return _ccff ._ffae };type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gcega *TextRegion )setParameters (_ggda *_bd .Decoder ,_caf ,_geea bool ,_gdag ,_eafc uint32 ,_geeff uint32 ,_eebd int8 ,_gdca uint32 ,_ggec int8 ,_gdgf _dcb .CombinationOperator ,_acgc int8 ,_cgfa int16 ,_adeaa ,_efgg ,_dcfd ,_gcff ,_afdff ,_gddf ,_degb ,_dcdbb ,_gcbe ,_ceag int8 ,_ebfd ,_aebed []int8 ,_fdgfg []*_dcb .Bitmap ,_eccg int8 ){_gcega ._aeaf =_ggda ;
_gcega .IsHuffmanEncoded =_caf ;_gcega .UseRefinement =_geea ;_gcega .RegionInfo .BitmapWidth =_gdag ;_gcega .RegionInfo .BitmapHeight =_eafc ;_gcega .NumberOfSymbolInstances =_geeff ;_gcega .SbStrips =_eebd ;_gcega .NumberOfSymbols =_gdca ;_gcega .DefaultPixel =_ggec ;
_gcega .CombinationOperator =_gdgf ;_gcega .IsTransposed =_acgc ;_gcega .ReferenceCorner =_cgfa ;_gcega .SbDsOffset =_adeaa ;_gcega .SbHuffFS =_efgg ;_gcega .SbHuffDS =_dcfd ;_gcega .SbHuffDT =_gcff ;_gcega .SbHuffRDWidth =_afdff ;_gcega .SbHuffRDHeight =_gddf ;
_gcega .SbHuffRSize =_gcbe ;_gcega .SbHuffRDX =_degb ;_gcega .SbHuffRDY =_dcdbb ;_gcega .SbrTemplate =_ceag ;_gcega .SbrATX =_ebfd ;_gcega .SbrATY =_aebed ;_gcega .Symbols =_fdgfg ;_gcega ._gfbec =_eccg ;};func (_cagbf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_fcb ,_gcggc uint32 )error {if _cagbf ._egcgd ==nil {_cagbf ._egcgd =NewGenericRegion (_cagbf ._cdcge );
};_cagbf ._egcgd .setParametersWithAt (false ,byte (_cagbf .SdTemplate ),false ,false ,_cagbf .SdATX ,_cagbf .SdATY ,_fcb ,_gcggc ,_cagbf ._aacge ,_cagbf ._ggc );return _cagbf .addSymbol (_cagbf ._egcgd );};func (_bdcg *SymbolDictionary )decodeNewSymbols (_aaag ,_ecdd uint32 ,_fced *_dcb .Bitmap ,_cbdb ,_fgce int32 )error {if _bdcg ._ddggf ==nil {_bdcg ._ddggf =_ada (_bdcg ._cdcge ,nil );
if _bdcg ._ggc ==nil {var _agf error ;_bdcg ._ggc ,_agf =_bd .New (_bdcg ._cdcge );if _agf !=nil {return _agf ;};};if _bdcg ._aacge ==nil {_bdcg ._aacge =_bd .NewStats (65536,1);};};_bdcg ._ddggf .setParameters (_bdcg ._aacge ,_bdcg ._ggc ,_bdcg .SdrTemplate ,_aaag ,_ecdd ,_fced ,_cbdb ,_fgce ,false ,_bdcg .SdrATX ,_bdcg .SdrATY );
return _bdcg .addSymbol (_bdcg ._ddggf );};func (_ffedc *SymbolDictionary )parseHeader ()(_dcge error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dcge !=nil {_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dcge );
}else {_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dcge =_ffedc .readRegionFlags ();_dcge !=nil {return _dcge ;};if _dcge =_ffedc .setAtPixels ();_dcge !=nil {return _dcge ;};if _dcge =_ffedc .setRefinementAtPixels ();_dcge !=nil {return _dcge ;};if _dcge =_ffedc .readNumberOfExportedSymbols ();
_dcge !=nil {return _dcge ;};if _dcge =_ffedc .readNumberOfNewSymbols ();_dcge !=nil {return _dcge ;};if _dcge =_ffedc .setInSyms ();_dcge !=nil {return _dcge ;};if _ffedc ._abgc {_gefg :=_ffedc .Header .RTSegments ;for _dffe :=len (_gefg )-1;_dffe >=0;
_dffe --{if _gefg [_dffe ].Type ==0{_bcff ,_fbga :=_gefg [_dffe ].SegmentData .(*SymbolDictionary );if !_fbga {_dcge =_ca .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gefg [_dffe ]);
return _dcge ;};if _bcff ._abgc {_ffedc .setRetainedCodingContexts (_bcff );};break ;};};};if _dcge =_ffedc .checkInput ();_dcge !=nil {return _dcge ;};return nil ;};func (_bbb *template1 )form (_fae ,_eaf ,_afda ,_efbf ,_egcb int16 )int16 {return ((_fae &0x02)<<8)|(_eaf <<6)|((_afda &0x03)<<4)|(_efbf <<1)|_egcb ;
};func (_ebacb *PageInformationSegment )readDefaultPixelValue ()error {_fdea ,_beeg :=_ebacb ._dfa .ReadBit ();if _beeg !=nil {return _beeg ;};_ebacb .DefaultPixelValue =uint8 (_fdea &0xf);return nil ;};func (_dcbb *GenericRegion )overrideAtTemplate0a (_cagb ,_cea ,_cgfd ,_bfe ,_egecc ,_ecdg int )int {if _dcbb .GBAtOverride [0]{_cagb &=0xFFEF;
if _dcbb .GBAtY [0]==0&&_dcbb .GBAtX [0]>=-int8 (_egecc ){_cagb |=(_bfe >>uint (int8 (_ecdg )-_dcbb .GBAtX [0]&0x1))<<4;}else {_cagb |=int (_dcbb .getPixel (_cea +int (_dcbb .GBAtX [0]),_cgfd +int (_dcbb .GBAtY [0])))<<4;};};if _dcbb .GBAtOverride [1]{_cagb &=0xFBFF;
if _dcbb .GBAtY [1]==0&&_dcbb .GBAtX [1]>=-int8 (_egecc ){_cagb |=(_bfe >>uint (int8 (_ecdg )-_dcbb .GBAtX [1]&0x1))<<10;}else {_cagb |=int (_dcbb .getPixel (_cea +int (_dcbb .GBAtX [1]),_cgfd +int (_dcbb .GBAtY [1])))<<10;};};if _dcbb .GBAtOverride [2]{_cagb &=0xF7FF;
if _dcbb .GBAtY [2]==0&&_dcbb .GBAtX [2]>=-int8 (_egecc ){_cagb |=(_bfe >>uint (int8 (_ecdg )-_dcbb .GBAtX [2]&0x1))<<11;}else {_cagb |=int (_dcbb .getPixel (_cea +int (_dcbb .GBAtX [2]),_cgfd +int (_dcbb .GBAtY [2])))<<11;};};if _dcbb .GBAtOverride [3]{_cagb &=0x7FFF;
if _dcbb .GBAtY [3]==0&&_dcbb .GBAtX [3]>=-int8 (_egecc ){_cagb |=(_bfe >>uint (int8 (_ecdg )-_dcbb .GBAtX [3]&0x1))<<15;}else {_cagb |=int (_dcbb .getPixel (_cea +int (_dcbb .GBAtX [3]),_cgfd +int (_dcbb .GBAtY [3])))<<15;};};return _cagb ;};func (_fbbg *TextRegion )checkInput ()error {const _aaae ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_fbbg .UseRefinement {if _fbbg .SbrTemplate !=0{_cb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fbbg .SbrTemplate =0;};};if _fbbg .SbHuffFS ==2||_fbbg .SbHuffRDWidth ==2||_fbbg .SbHuffRDHeight ==2||_fbbg .SbHuffRDX ==2||_fbbg .SbHuffRDY ==2{return _gc .Error (_aaae ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_fbbg .UseRefinement {if _fbbg .SbHuffRSize !=0{_cb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fbbg .SbHuffRSize =0;};if _fbbg .SbHuffRDY !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_fbbg .SbHuffRDY =0;};if _fbbg .SbHuffRDX !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fbbg .SbHuffRDX =0;};if _fbbg .SbHuffRDWidth !=0{_cb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_fbbg .SbHuffRDWidth =0;};if _fbbg .SbHuffRDHeight !=0{_cb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fbbg .SbHuffRDHeight =0;};};return nil ;
};func (_ceaf *TextRegion )GetRegionBitmap ()(*_dcb .Bitmap ,error ){if _ceaf .RegionBitmap !=nil {return _ceaf .RegionBitmap ,nil ;};if !_ceaf .IsHuffmanEncoded {if _cdcb :=_ceaf .setCodingStatistics ();_cdcb !=nil {return nil ,_cdcb ;};};if _dage :=_ceaf .createRegionBitmap ();
_dage !=nil {return nil ,_dage ;};if _fggf :=_ceaf .decodeSymbolInstances ();_fggf !=nil {return nil ,_fggf ;};return _ceaf .RegionBitmap ,nil ;};func (_ccga *Header )Encode (w _dg .BinaryWriter )(_cfg int ,_feae error ){const _gaa ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _abea _dg .BinaryWriter ;_cb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _feae !=nil {_cb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_feae );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ccga );_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _ccga .SegmentData !=nil {_gddb ,_fabbb :=_ccga .SegmentData .(SegmentEncoder );if !_fabbb {return 0,_gc .Errorf (_gaa ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ccga .SegmentData );
};_abea =_dg .BufferedMSB ();_cfg ,_feae =_gddb .Encode (_abea );if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");};_ccga .SegmentDataLength =uint64 (_cfg );};if _ccga .pageSize ()==4{_ccga .PageAssociationFieldSize =true ;};var _cbdc int ;_cbdc ,_feae =_ccga .writeSegmentNumber (w );
if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");};_cfg +=_cbdc ;if _feae =_ccga .writeFlags (w );_feae !=nil {return _cfg ,_gc .Wrap (_feae ,_gaa ,"");};_cfg ++;_cbdc ,_feae =_ccga .writeReferredToCount (w );if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");
};_cfg +=_cbdc ;_cbdc ,_feae =_ccga .writeReferredToSegments (w );if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");};_cfg +=_cbdc ;_cbdc ,_feae =_ccga .writeSegmentPageAssociation (w );if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");};_cfg +=_cbdc ;
_cbdc ,_feae =_ccga .writeSegmentDataLength (w );if _feae !=nil {return 0,_gc .Wrap (_feae ,_gaa ,"");};_cfg +=_cbdc ;_ccga .HeaderLength =int64 (_cfg )-int64 (_ccga .SegmentDataLength );if _abea !=nil {if _ ,_feae =w .Write (_abea .Data ());_feae !=nil {return _cfg ,_gc .Wrap (_feae ,_gaa ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _cfg ,nil ;};func (_cbfad *TextRegion )decodeIds ()(int64 ,error ){const _ccfbg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cbfad .IsHuffmanEncoded {if _cbfad .SbHuffDS ==3{if _cbfad ._egce ==nil {_gdcc :=0;if _cbfad .SbHuffFS ==3{_gdcc ++;
};var _eebeg error ;_cbfad ._egce ,_eebeg =_cbfad .getUserTable (_gdcc );if _eebeg !=nil {return 0,_gc .Wrap (_eebeg ,_ccfbg ,"");};};return _cbfad ._egce .Decode (_cbfad ._gegd );};_aegc ,_fagf :=_ac .GetStandardTable (8+int (_cbfad .SbHuffDS ));if _fagf !=nil {return 0,_gc .Wrap (_fagf ,_ccfbg ,"");
};return _aegc .Decode (_cbfad ._gegd );};_fdfe ,_ffef :=_cbfad ._aeaf .DecodeInt (_cbfad ._geef );if _ffef !=nil {return 0,_gc .Wrap (_ffef ,_ccfbg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_fdfe ),nil ;};func (_gca *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gca .RegionInfo };
func (_bfge *TextRegion )blit (_gacc *_dcb .Bitmap ,_geffc int64 )error {if _bfge .IsTransposed ==0&&(_bfge .ReferenceCorner ==2||_bfge .ReferenceCorner ==3){_bfge ._cgea +=int64 (_gacc .Width -1);}else if _bfge .IsTransposed ==1&&(_bfge .ReferenceCorner ==0||_bfge .ReferenceCorner ==2){_bfge ._cgea +=int64 (_gacc .Height -1);
};_cfag :=_bfge ._cgea ;if _bfge .IsTransposed ==1{_cfag ,_geffc =_geffc ,_cfag ;};switch _bfge .ReferenceCorner {case 0:_geffc -=int64 (_gacc .Height -1);case 2:_geffc -=int64 (_gacc .Height -1);_cfag -=int64 (_gacc .Width -1);case 3:_cfag -=int64 (_gacc .Width -1);
};_ddba :=_dcb .Blit (_gacc ,_bfge .RegionBitmap ,int (_cfag ),int (_geffc ),_bfge .CombinationOperator );if _ddba !=nil {return _ddba ;};if _bfge .IsTransposed ==0&&(_bfge .ReferenceCorner ==0||_bfge .ReferenceCorner ==1){_bfge ._cgea +=int64 (_gacc .Width -1);
};if _bfge .IsTransposed ==1&&(_bfge .ReferenceCorner ==1||_bfge .ReferenceCorner ==3){_bfge ._cgea +=int64 (_gacc .Height -1);};return nil ;};func (_dfgfa *HalftoneRegion )grayScaleDecoding (_bece int )([][]int ,error ){var (_bbbd []int8 ;_ceaa []int8 ;
);if !_dfgfa .IsMMREncoded {_bbbd =make ([]int8 ,4);_ceaa =make ([]int8 ,4);if _dfgfa .HTemplate <=1{_bbbd [0]=3;}else if _dfgfa .HTemplate >=2{_bbbd [0]=2;};_ceaa [0]=-1;_bbbd [1]=-3;_ceaa [1]=-1;_bbbd [2]=2;_ceaa [2]=-2;_bbbd [3]=-2;_ceaa [3]=-2;};_aff :=make ([]*_dcb .Bitmap ,_bece );
_ffed :=NewGenericRegion (_dfgfa ._fcdd );_ffed .setParametersMMR (_dfgfa .IsMMREncoded ,_dfgfa .DataOffset ,_dfgfa .DataLength ,_dfgfa .HGridHeight ,_dfgfa .HGridWidth ,_dfgfa .HTemplate ,false ,_dfgfa .HSkipEnabled ,_bbbd ,_ceaa );_efga :=_bece -1;var _bdf error ;
_aff [_efga ],_bdf =_ffed .GetRegionBitmap ();if _bdf !=nil {return nil ,_bdf ;};for _efga > 0{_efga --;_ffed .Bitmap =nil ;_aff [_efga ],_bdf =_ffed .GetRegionBitmap ();if _bdf !=nil {return nil ,_bdf ;};if _bdf =_dfgfa .combineGrayscalePlanes (_aff ,_efga );
_bdf !=nil {return nil ,_bdf ;};};return _dfgfa .computeGrayScalePlanes (_aff ,_bece );};func NewGenericRegion (r *_dg .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_agg :r };};func (_effe *PageInformationSegment )encodeStripingInformation (_ffadb _dg .BinaryWriter )(_fbee int ,_agbg error ){const _fbb ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_effe .IsStripe {if _fbee ,_agbg =_ffadb .Write ([]byte {0x00,0x00});_agbg !=nil {return 0,_gc .Wrap (_agbg ,_fbb ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _fbee ,nil ;};_fcgge :=make ([]byte ,2);_c .BigEndian .PutUint16 (_fcgge ,_effe .MaxStripeSize |1<<15);
if _fbee ,_agbg =_ffadb .Write (_fcgge );_agbg !=nil {return 0,_gc .Wrapf (_agbg ,_fbb ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_effe .MaxStripeSize );};return _fbee ,nil ;};func (_cgb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dfad ,_acbf :=_cgb ._dfa .ReadBit ();
if _acbf !=nil {return _acbf ;};if _dfad ==1{_cgb ._dafd =true ;};return nil ;};type PatternDictionary struct{_dbb *_dg .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;
HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_dcb .Bitmap ;GrayMax uint32 ;};func (_agfg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _acge ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _agfg .SbHuffRSize ==0{_ebace ,_cgfg :=_ac .GetStandardTable (1);if _cgfg !=nil {return 0,_gc .Wrap (_cgfg ,_acge ,"");};return _ebace .Decode (_agfg ._gegd );};if _agfg ._acdg ==nil {var (_dbcf int ;_fgeg error ;);if _agfg .SbHuffFS ==3{_dbcf ++;};
if _agfg .SbHuffDS ==3{_dbcf ++;};if _agfg .SbHuffDT ==3{_dbcf ++;};if _agfg .SbHuffRDWidth ==3{_dbcf ++;};if _agfg .SbHuffRDHeight ==3{_dbcf ++;};if _agfg .SbHuffRDX ==3{_dbcf ++;};if _agfg .SbHuffRDY ==3{_dbcf ++;};_agfg ._acdg ,_fgeg =_agfg .getUserTable (_dbcf );
if _fgeg !=nil {return 0,_gc .Wrap (_fgeg ,_acge ,"");};};_fdbg ,_bfdf :=_agfg ._acdg .Decode (_agfg ._gegd );if _bfdf !=nil {return 0,_gc .Wrap (_bfdf ,_acge ,"");};return _fdbg ,nil ;};func (_egaf *TableSegment )parseHeader ()error {var (_gaad int ;_cgdg uint64 ;
_fgee error ;);_gaad ,_fgee =_egaf ._ffae .ReadBit ();if _fgee !=nil {return _fgee ;};if _gaad ==1{return _ca .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gaad );
};if _cgdg ,_fgee =_egaf ._ffae .ReadBits (3);_fgee !=nil {return _fgee ;};_egaf ._fafd =(int32 (_cgdg )+1)&0xf;if _cgdg ,_fgee =_egaf ._ffae .ReadBits (3);_fgee !=nil {return _fgee ;};_egaf ._dccd =(int32 (_cgdg )+1)&0xf;if _cgdg ,_fgee =_egaf ._ffae .ReadBits (32);
_fgee !=nil {return _fgee ;};_egaf ._gfge =int32 (_cgdg &_d .MaxInt32 );if _cgdg ,_fgee =_egaf ._ffae .ReadBits (32);_fgee !=nil {return _fgee ;};_egaf ._edfee =int32 (_cgdg &_d .MaxInt32 );return nil ;};func (_befc *TextRegion )initSymbols ()error {const _bcfe ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_dbab :=range _befc .Header .RTSegments {if _dbab ==nil {return _gc .Error (_bcfe ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _dbab .Type ==0{_egde ,_gbceg :=_dbab .GetSegmentData ();if _gbceg !=nil {return _gc .Wrap (_gbceg ,_bcfe ,"");};_cagf ,_ffba :=_egde .(*SymbolDictionary );if !_ffba {return _gc .Error (_bcfe ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cagf ._fcgc =_befc ._gcca ;_fgefe ,_gbceg :=_cagf .GetDictionary ();if _gbceg !=nil {return _gc .Wrap (_gbceg ,_bcfe ,"");};_befc .Symbols =append (_befc .Symbols ,_fgefe ...);};};_befc .NumberOfSymbols =uint32 (len (_befc .Symbols ));return nil ;};
func (_fgbb *TextRegion )computeSymbolCodeLength ()error {if _fgbb .IsHuffmanEncoded {return _fgbb .symbolIDCodeLengths ();};_fgbb ._gfbec =int8 (_d .Ceil (_d .Log (float64 (_fgbb .NumberOfSymbols ))/_d .Log (2)));return nil ;};func (_dfcd *GenericRegion )parseHeader ()(_acaa error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _acaa !=nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_acaa );
}else {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_feag int ;_gagc uint64 ;);if _acaa =_dfcd .RegionSegment .parseHeader ();_acaa !=nil {return _acaa ;};if _ ,_acaa =_dfcd ._agg .ReadBits (3);_acaa !=nil {return _acaa ;};_feag ,_acaa =_dfcd ._agg .ReadBit ();if _acaa !=nil {return _acaa ;};
if _feag ==1{_dfcd .UseExtTemplates =true ;};_feag ,_acaa =_dfcd ._agg .ReadBit ();if _acaa !=nil {return _acaa ;};if _feag ==1{_dfcd .IsTPGDon =true ;};_gagc ,_acaa =_dfcd ._agg .ReadBits (2);if _acaa !=nil {return _acaa ;};_dfcd .GBTemplate =byte (_gagc &0xf);
_feag ,_acaa =_dfcd ._agg .ReadBit ();if _acaa !=nil {return _acaa ;};if _feag ==1{_dfcd .IsMMREncoded =true ;};if !_dfcd .IsMMREncoded {_bcc :=1;if _dfcd .GBTemplate ==0{_bcc =4;if _dfcd .UseExtTemplates {_bcc =12;};};if _acaa =_dfcd .readGBAtPixels (_bcc );
_acaa !=nil {return _acaa ;};};if _acaa =_dfcd .computeSegmentDataStructure ();_acaa !=nil {return _acaa ;};_cb .Log .Trace ("\u0025\u0073",_dfcd );return nil ;};func (_dfcg *PatternDictionary )Init (h *Header ,r *_dg .Reader )error {_dfcg ._dbb =r ;return _dfcg .parseHeader ();
};func (_gcab *PatternDictionary )checkInput ()error {if _gcab .HdpHeight < 1||_gcab .HdpWidth < 1{return _b .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _gcab .IsMMREncoded {if _gcab .HDTemplate !=0{_cb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_efa *Header )writeReferredToCount (_fef _dg .BinaryWriter )(_efd int ,_add error ){const _efbg ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_efa .RTSNumbers =make ([]int ,len (_efa .RTSegments ));
for _ebgc ,_gcga :=range _efa .RTSegments {_efa .RTSNumbers [_ebgc ]=int (_gcga .SegmentNumber );};if len (_efa .RTSNumbers )<=4{var _adgf byte ;if len (_efa .RetainBits )>=1{_adgf =_efa .RetainBits [0];};_adgf |=byte (len (_efa .RTSNumbers ))<<5;if _add =_fef .WriteByte (_adgf );
_add !=nil {return 0,_gc .Wrap (_add ,_efbg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fdfb :=uint32 (len (_efa .RTSNumbers ));_fbde :=make ([]byte ,4+_cabb .Ceil (len (_efa .RTSNumbers )+1,8));_fdfb |=0x7<<29;
_c .BigEndian .PutUint32 (_fbde ,_fdfb );copy (_fbde [1:],_efa .RetainBits );_efd ,_add =_fef .Write (_fbde );if _add !=nil {return 0,_gc .Wrap (_add ,_efbg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _efd ,nil ;};type PageInformationSegment struct{_dfa *_dg .Reader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dafd bool ;_ecfe _dcb .CombinationOperator ;_daacb bool ;DefaultPixelValue uint8 ;_egcf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};type SymbolDictionary struct{_cdcge *_dg .Reader ;
SdrTemplate int8 ;SdTemplate int8 ;_aggbd bool ;_abgc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_ffag uint32 ;_aeeb []*_dcb .Bitmap ;_fefaf uint32 ;_fcdee []*_dcb .Bitmap ;_aeaa _ac .Tabler ;_bacb _ac .Tabler ;_gead _ac .Tabler ;
_bacg _ac .Tabler ;_caef []*_dcb .Bitmap ;_fcae []*_dcb .Bitmap ;_ggc *_bd .Decoder ;_bbbe *TextRegion ;_egcgd *GenericRegion ;_ddggf *GenericRefinementRegion ;_aacge *_bd .DecoderStats ;_bfcbe *_bd .DecoderStats ;_eeea *_bd .DecoderStats ;_effed *_bd .DecoderStats ;
_aec *_bd .DecoderStats ;_dcef *_bd .DecoderStats ;_fbdda *_bd .DecoderStats ;_faeb *_bd .DecoderStats ;_fcgc *_bd .DecoderStats ;_cfcg int8 ;_aefd *_dcb .Bitmaps ;_eaaf []int ;_dgfb map[int ]int ;_gff bool ;};func (_cffe *GenericRegion )setParametersWithAt (_aegb bool ,_adaa byte ,_bac ,_bff bool ,_gbee ,_bdg []int8 ,_cfab ,_gfa uint32 ,_cfc *_bd .DecoderStats ,_age *_bd .Decoder ){_cffe .IsMMREncoded =_aegb ;
_cffe .GBTemplate =_adaa ;_cffe .IsTPGDon =_bac ;_cffe .GBAtX =_gbee ;_cffe .GBAtY =_bdg ;_cffe .RegionSegment .BitmapHeight =_gfa ;_cffe .RegionSegment .BitmapWidth =_cfab ;_cffe ._gbed =nil ;_cffe .Bitmap =nil ;if _cfc !=nil {_cffe ._afb =_cfc ;};if _age !=nil {_cffe ._dgab =_age ;
};_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cffe );};func (_bbecd *RegionSegment )Encode (w _dg .BinaryWriter )(_ddgb int ,_cdce error ){const _gebb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_cbbb :=make ([]byte ,4);_c .BigEndian .PutUint32 (_cbbb ,_bbecd .BitmapWidth );_ddgb ,_cdce =w .Write (_cbbb );if _cdce !=nil {return 0,_gc .Wrap (_cdce ,_gebb ,"\u0057\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_cbbb ,_bbecd .BitmapHeight );var _efbdg int ;
_efbdg ,_cdce =w .Write (_cbbb );if _cdce !=nil {return 0,_gc .Wrap (_cdce ,_gebb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ddgb +=_efbdg ;_c .BigEndian .PutUint32 (_cbbb ,_bbecd .XLocation );_efbdg ,_cdce =w .Write (_cbbb );if _cdce !=nil {return 0,_gc .Wrap (_cdce ,_gebb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ddgb +=_efbdg ;_c .BigEndian .PutUint32 (_cbbb ,_bbecd .YLocation );_efbdg ,_cdce =w .Write (_cbbb );if _cdce !=nil {return 0,_gc .Wrap (_cdce ,_gebb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ddgb +=_efbdg ;if _cdce =w .WriteByte (byte (_bbecd .CombinaionOperator )&0x07);
_cdce !=nil {return 0,_gc .Wrap (_cdce ,_gebb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ddgb ++;return _ddgb ,nil ;};func (_gb *GenericRefinementRegion )getGrReference ()(*_dcb .Bitmap ,error ){segments :=_gb ._fc .RTSegments ;
if len (segments )==0{return nil ,_b .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_dca ,_da :=segments [0].GetSegmentData ();if _da !=nil {return nil ,_da ;
};_gbf ,_fa :=_dca .(Regioner );if !_fa {return nil ,_ca .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dca );
};return _gbf .GetRegionBitmap ();};func (_gcea *SymbolDictionary )Init (h *Header ,r *_dg .Reader )error {_gcea .Header =h ;_gcea ._cdcge =r ;return _gcea .parseHeader ();};func (_gcg *EndOfStripe )Init (h *Header ,r *_dg .Reader )error {_gcg ._ge =r ;
return _gcg .parseHeader ();};func (_effd *PageInformationSegment )readIsLossless ()error {_cfba ,_abac :=_effd ._dfa .ReadBit ();if _abac !=nil {return _abac ;};if _cfba ==1{_effd .IsLossless =true ;};return nil ;};func (_ggeb *GenericRegion )setParameters (_ebff bool ,_fgfd ,_cfee int64 ,_abbf ,_adea uint32 ){_ggeb .IsMMREncoded =_ebff ;
_ggeb .DataOffset =_fgfd ;_ggeb .DataLength =_cfee ;_ggeb .RegionSegment .BitmapHeight =_abbf ;_ggeb .RegionSegment .BitmapWidth =_adea ;_ggeb ._gbed =nil ;_ggeb .Bitmap =nil ;};func (_edfa *RegionSegment )String ()string {_aefe :=&_cg .Builder {};_aefe .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_aefe .WriteString (_ca .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_edfa .BitmapWidth ,_edfa .BitmapHeight ));
_aefe .WriteString (_ca .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_edfa .XLocation ,_edfa .YLocation ));_aefe .WriteString (_ca .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_edfa .CombinaionOperator ));
return _aefe .String ();};func (_cabd *GenericRegion )String ()string {_bbgb :=&_cg .Builder {};_bbgb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bbgb .WriteString (_cabd .RegionSegment .String ()+"\u000a");
_bbgb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cabd .UseExtTemplates ));_bbgb .WriteString (_ca .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cabd .IsTPGDon ));
_bbgb .WriteString (_ca .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cabd .GBTemplate ));_bbgb .WriteString (_ca .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cabd .IsMMREncoded ));
_bbgb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cabd .GBAtX ));_bbgb .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cabd .GBAtY ));
_bbgb .WriteString (_ca .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cabd .GBAtOverride ));return _bbgb .String ();};func (_ccafd *PageInformationSegment )CombinationOperator ()_dcb .CombinationOperator {return _ccafd ._ecfe ;
};func (_bbec *PatternDictionary )readPatternWidthAndHeight ()error {_dbbf ,_cgdd :=_bbec ._dbb .ReadByte ();if _cgdd !=nil {return _cgdd ;};_bbec .HdpWidth =_dbbf ;_dbbf ,_cgdd =_bbec ._dbb .ReadByte ();if _cgdd !=nil {return _cgdd ;};_bbec .HdpHeight =_dbbf ;
return nil ;};func (_ddab *TextRegion )setContexts (_dccfg *_bd .DecoderStats ,_dbfc *_bd .DecoderStats ,_dgbae *_bd .DecoderStats ,_afgf *_bd .DecoderStats ,_gbded *_bd .DecoderStats ,_agdg *_bd .DecoderStats ,_gdad *_bd .DecoderStats ,_fdd *_bd .DecoderStats ,_abeb *_bd .DecoderStats ,_fagc *_bd .DecoderStats ){_ddab ._ffdb =_dbfc ;
_ddab ._fbef =_dgbae ;_ddab ._geef =_afgf ;_ddab ._adbbe =_gbded ;_ddab ._bgfc =_gdad ;_ddab ._dgeb =_fdd ;_ddab ._gcca =_agdg ;_ddab ._cgdfc =_abeb ;_ddab ._ddec =_fagc ;_ddab ._eec =_dccfg ;};func (_dfca *template1 )setIndex (_cag *_bd .DecoderStats ){_cag .SetIndex (0x080)};
func (_afbf *SymbolDictionary )decodeRefinedSymbol (_egef ,_fbg uint32 )error {var (_cage int ;_eddb ,_eegc int32 ;);if _afbf .IsHuffmanEncoded {_afff ,_ffcd :=_afbf ._cdcge .ReadBits (byte (_afbf ._cfcg ));if _ffcd !=nil {return _ffcd ;};_cage =int (_afff );
_acfdb ,_ffcd :=_ac .GetStandardTable (15);if _ffcd !=nil {return _ffcd ;};_agdb ,_ffcd :=_acfdb .Decode (_afbf ._cdcge );if _ffcd !=nil {return _ffcd ;};_eddb =int32 (_agdb );_agdb ,_ffcd =_acfdb .Decode (_afbf ._cdcge );if _ffcd !=nil {return _ffcd ;
};_eegc =int32 (_agdb );_acfdb ,_ffcd =_ac .GetStandardTable (1);if _ffcd !=nil {return _ffcd ;};if _ ,_ffcd =_acfdb .Decode (_afbf ._cdcge );_ffcd !=nil {return _ffcd ;};_afbf ._cdcge .Align ();}else {_abag ,_egga :=_afbf ._ggc .DecodeIAID (uint64 (_afbf ._cfcg ),_afbf ._fcgc );
if _egga !=nil {return _egga ;};_cage =int (_abag );_eddb ,_egga =_afbf ._ggc .DecodeInt (_afbf ._dcef );if _egga !=nil {return _egga ;};_eegc ,_egga =_afbf ._ggc .DecodeInt (_afbf ._fbdda );if _egga !=nil {return _egga ;};};if _cgag :=_afbf .setSymbolsArray ();
_cgag !=nil {return _cgag ;};_fcce :=_afbf ._fcae [_cage ];if _aaaf :=_afbf .decodeNewSymbols (_egef ,_fbg ,_fcce ,_eddb ,_eegc );_aaaf !=nil {return _aaaf ;};if _afbf .IsHuffmanEncoded {_afbf ._cdcge .Align ();};return nil ;};func (_fab *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_fed ,_fg ,_fcf ,_fea ,_dab ,_adb ,_eg ,_ee ,_ade int )error {var (_gae ,_cef ,_ace ,_dabf ,_bca ,_gd int ;
_cgg byte ;_gag error ;);if _fed > 0{_cgg ,_gag =_fab .RegionBitmap .GetByte (_eg -_fcf );if _gag !=nil {return _gag ;};_ace =int (_cgg );};if _ee > 0&&_ee <=_fab .ReferenceBitmap .Height {_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade -_fea +_adb );
if _gag !=nil {return _gag ;};_dabf =int (_cgg )<<4;};if _ee >=0&&_ee < _fab .ReferenceBitmap .Height {_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade +_adb );if _gag !=nil {return _gag ;};_bca =int (_cgg )<<1;};if _ee > -2&&_ee < _fab .ReferenceBitmap .Height -1{_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade +_fea +_adb );
if _gag !=nil {return _gag ;};_gd =int (_cgg );};_gae =((_ace >>5)&0x6)|((_gd >>2)&0x30)|(_bca &0x180)|(_dabf &0xc00);var _gbd int ;for _cefg :=0;_cefg < _dab ;_cefg =_gbd {var _dabg int ;_gbd =_cefg +8;var _ffe int ;if _ffe =_fg -_cefg ;_ffe > 8{_ffe =8;
};_efb :=_gbd < _fg ;_bec :=_gbd < _fab .ReferenceBitmap .Width ;_ced :=_adb +1;if _fed > 0{_cgg =0;if _efb {_cgg ,_gag =_fab .RegionBitmap .GetByte (_eg -_fcf +1);if _gag !=nil {return _gag ;};};_ace =(_ace <<8)|int (_cgg );};if _ee > 0&&_ee <=_fab .ReferenceBitmap .Height {var _aab int ;
if _bec {_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade -_fea +_ced );if _gag !=nil {return _gag ;};_aab =int (_cgg )<<4;};_dabf =(_dabf <<8)|_aab ;};if _ee >=0&&_ee < _fab .ReferenceBitmap .Height {var _ag int ;if _bec {_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade +_ced );
if _gag !=nil {return _gag ;};_ag =int (_cgg )<<1;};_bca =(_bca <<8)|_ag ;};if _ee > -2&&_ee < (_fab .ReferenceBitmap .Height -1){_cgg =0;if _bec {_cgg ,_gag =_fab .ReferenceBitmap .GetByte (_ade +_fea +_ced );if _gag !=nil {return _gag ;};};_gd =(_gd <<8)|int (_cgg );
};for _fcg :=0;_fcg < _ffe ;_fcg ++{var _feb int ;_cd :=false ;_fce :=(_gae >>4)&0x1ff;if _fce ==0x1ff{_cd =true ;_feb =1;}else if _fce ==0x00{_cd =true ;};if !_cd {if _fab ._gea {_cef =_fab .overrideAtTemplate0 (_gae ,_cefg +_fcg ,_fed ,_dabg ,_fcg );
_fab ._ea .SetIndex (int32 (_cef ));}else {_fab ._ea .SetIndex (int32 (_gae ));};_feb ,_gag =_fab ._dcbe .DecodeBit (_fab ._ea );if _gag !=nil {return _gag ;};};_bb :=uint (7-_fcg );_dabg |=_feb <<_bb ;_gae =((_gae &0xdb6)<<1)|_feb |(_ace >>_bb +5)&0x002|((_gd >>_bb +2)&0x010)|((_bca >>_bb )&0x080)|((_dabf >>_bb )&0x400);
};_gag =_fab .RegionBitmap .SetByte (_eg ,byte (_dabg ));if _gag !=nil {return _gag ;};_eg ++;_ade ++;};return nil ;};func (_geac *GenericRefinementRegion )overrideAtTemplate0 (_fcd ,_dac ,_ede ,_egc ,_eeg int )int {if _geac ._edg [0]{_fcd &=0xfff7;if _geac .GrAtY [0]==0&&int (_geac .GrAtX [0])>=-_eeg {_fcd |=(_egc >>uint (7-(_eeg +int (_geac .GrAtX [0])))&0x1)<<3;
}else {_fcd |=_geac .getPixel (_geac .RegionBitmap ,_dac +int (_geac .GrAtX [0]),_ede +int (_geac .GrAtY [0]))<<3;};};if _geac ._edg [1]{_fcd &=0xefff;if _geac .GrAtY [1]==0&&int (_geac .GrAtX [1])>=-_eeg {_fcd |=(_egc >>uint (7-(_eeg +int (_geac .GrAtX [1])))&0x1)<<12;
}else {_fcd |=_geac .getPixel (_geac .ReferenceBitmap ,_dac +int (_geac .GrAtX [1]),_ede +int (_geac .GrAtY [1]));};};return _fcd ;};type HalftoneRegion struct{_fcdd *_dg .Reader ;_baf *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _dcb .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;
HRegionY uint16 ;HalftoneRegionBitmap *_dcb .Bitmap ;Patterns []*_dcb .Bitmap ;};func (_dfdfb *TextRegion )setCodingStatistics ()error {if _dfdfb ._ffdb ==nil {_dfdfb ._ffdb =_bd .NewStats (512,1);};if _dfdfb ._fbef ==nil {_dfdfb ._fbef =_bd .NewStats (512,1);
};if _dfdfb ._geef ==nil {_dfdfb ._geef =_bd .NewStats (512,1);};if _dfdfb ._adbbe ==nil {_dfdfb ._adbbe =_bd .NewStats (512,1);};if _dfdfb ._acae ==nil {_dfdfb ._acae =_bd .NewStats (512,1);};if _dfdfb ._bgfc ==nil {_dfdfb ._bgfc =_bd .NewStats (512,1);
};if _dfdfb ._dgeb ==nil {_dfdfb ._dgeb =_bd .NewStats (512,1);};if _dfdfb ._gcca ==nil {_dfdfb ._gcca =_bd .NewStats (1<<uint (_dfdfb ._gfbec ),1);};if _dfdfb ._cgdfc ==nil {_dfdfb ._cgdfc =_bd .NewStats (512,1);};if _dfdfb ._ddec ==nil {_dfdfb ._ddec =_bd .NewStats (512,1);
};if _dfdfb ._aeaf ==nil {var _aaee error ;_dfdfb ._aeaf ,_aaee =_bd .New (_dfdfb ._gegd );if _aaee !=nil {return _aaee ;};};return nil ;};func (_bebca *TextRegion )readAmountOfSymbolInstances ()error {_bfgg ,_gacf :=_bebca ._gegd .ReadBits (32);if _gacf !=nil {return _gacf ;
};_bebca .NumberOfSymbolInstances =uint32 (_bfgg &_d .MaxUint32 );_aaacf :=_bebca .RegionInfo .BitmapWidth *_bebca .RegionInfo .BitmapHeight ;if _aaacf < _bebca .NumberOfSymbolInstances {_cb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_aaacf ,_bebca .NumberOfSymbolInstances );
_bebca .NumberOfSymbolInstances =_aaacf ;};return nil ;};type GenericRegion struct{_agg *_dg .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;
GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bggb bool ;Bitmap *_dcb .Bitmap ;_dgab *_bd .Decoder ;_afb *_bd .DecoderStats ;_gbed *_ae .Decoder ;};func (_degec *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_dcb .Points ,symbols *_dcb .Bitmaps ,classIDs *_cabb .IntSlice ,boxes *_dcb .Boxes ,width ,height ,symBits int ){_degec .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_degec ._geaa =globalSymbolsMap ;_degec ._gddef =localSymbolsMap ;_degec ._beda =comps ;_degec ._acdd =inLL ;_degec ._deac =symbols ;_degec ._fdcb =classIDs ;_degec ._bbbbf =boxes ;_degec ._ddef =symBits ;};func (_eabg *SymbolDictionary )readAtPixels (_aadcd int )error {_eabg .SdATX =make ([]int8 ,_aadcd );
_eabg .SdATY =make ([]int8 ,_aadcd );var (_gfed byte ;_dbgb error ;);for _decaa :=0;_decaa < _aadcd ;_decaa ++{_gfed ,_dbgb =_eabg ._cdcge .ReadByte ();if _dbgb !=nil {return _dbgb ;};_eabg .SdATX [_decaa ]=int8 (_gfed );_gfed ,_dbgb =_eabg ._cdcge .ReadByte ();
if _dbgb !=nil {return _dbgb ;};_eabg .SdATY [_decaa ]=int8 (_gfed );};return nil ;};func (_edaf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_deaa ,_cegd :=_edaf ._dfa .ReadBit ();if _cegd !=nil {return _cegd ;};if _deaa ==1{_edaf ._daacb =true ;
};return nil ;};func (_cbbae *HalftoneRegion )GetRegionBitmap ()(*_dcb .Bitmap ,error ){if _cbbae .HalftoneRegionBitmap !=nil {return _cbbae .HalftoneRegionBitmap ,nil ;};var _aga error ;_cbbae .HalftoneRegionBitmap =_dcb .New (int (_cbbae .RegionSegment .BitmapWidth ),int (_cbbae .RegionSegment .BitmapHeight ));
if _cbbae .Patterns ==nil ||(_cbbae .Patterns !=nil &&len (_cbbae .Patterns )==0){_cbbae .Patterns ,_aga =_cbbae .GetPatterns ();if _aga !=nil {return nil ,_aga ;};};if _cbbae .HDefaultPixel ==1{_cbbae .HalftoneRegionBitmap .SetDefaultPixel ();};_bcfc :=_d .Ceil (_d .Log (float64 (len (_cbbae .Patterns )))/_d .Log (2));
_fbc :=int (_bcfc );var _aaec [][]int ;_aaec ,_aga =_cbbae .grayScaleDecoding (_fbc );if _aga !=nil {return nil ,_aga ;};if _aga =_cbbae .renderPattern (_aaec );_aga !=nil {return nil ,_aga ;};return _cbbae .HalftoneRegionBitmap ,nil ;};func (_dfaa *TextRegion )getSymbols ()error {if _dfaa .Header .RTSegments !=nil {return _dfaa .initSymbols ();
};return nil ;};func (_eedb *SymbolDictionary )Encode (w _dg .BinaryWriter )(_gcabd int ,_gddg error ){const _adf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _eedb ==nil {return 0,_gc .Error (_adf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _gcabd ,_gddg =_eedb .encodeFlags (w );_gddg !=nil {return _gcabd ,_gc .Wrap (_gddg ,_adf ,"");};_dbag ,_gddg :=_eedb .encodeATFlags (w );if _gddg !=nil {return _gcabd ,_gc .Wrap (_gddg ,_adf ,"");};_gcabd +=_dbag ;if _dbag ,_gddg =_eedb .encodeRefinementATFlags (w );
_gddg !=nil {return _gcabd ,_gc .Wrap (_gddg ,_adf ,"");};_gcabd +=_dbag ;if _dbag ,_gddg =_eedb .encodeNumSyms (w );_gddg !=nil {return _gcabd ,_gc .Wrap (_gddg ,_adf ,"");};_gcabd +=_dbag ;if _dbag ,_gddg =_eedb .encodeSymbols (w );_gddg !=nil {return _gcabd ,_gc .Wrap (_gddg ,_adf ,"");
};_gcabd +=_dbag ;return _gcabd ,nil ;};func (_ffad *Header )readReferredToSegmentNumbers (_fbdd *_dg .Reader ,_bgf int )([]int ,error ){const _fafb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_bdbde :=make ([]int ,_bgf );if _bgf > 0{_ffad .RTSegments =make ([]*Header ,_bgf );var (_dgfd uint64 ;_fdc error ;);for _cedb :=0;_cedb < _bgf ;_cedb ++{_dgfd ,_fdc =_fbdd .ReadBits (byte (_ffad .referenceSize ())<<3);if _fdc !=nil {return nil ,_gc .Wrapf (_fdc ,_fafb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cedb );
};_bdbde [_cedb ]=int (_dgfd &_d .MaxInt32 );};};return _bdbde ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_dcb .Bitmap ,error );};func (_gcdb *GenericRefinementRegion )setParameters (_cc *_bd .DecoderStats ,_dba *_bd .Decoder ,_acc int8 ,_ggb ,_dfc uint32 ,_cede *_dcb .Bitmap ,_bfce ,_eefg int32 ,_cce bool ,_eba []int8 ,_efbd []int8 ){_cb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _cc !=nil {_gcdb ._ea =_cc ;};if _dba !=nil {_gcdb ._dcbe =_dba ;};_gcdb .TemplateID =_acc ;_gcdb .RegionInfo .BitmapWidth =_ggb ;_gcdb .RegionInfo .BitmapHeight =_dfc ;_gcdb .ReferenceBitmap =_cede ;_gcdb .ReferenceDX =_bfce ;_gcdb .ReferenceDY =_eefg ;
_gcdb .IsTPGROn =_cce ;_gcdb .GrAtX =_eba ;_gcdb .GrAtY =_efbd ;_gcdb .RegionBitmap =nil ;_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gcdb );
};func (_egaca *SymbolDictionary )readRegionFlags ()error {var (_agfd uint64 ;_dfaf int ;);_ ,_gdec :=_egaca ._cdcge .ReadBits (3);if _gdec !=nil {return _gdec ;};_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;};_egaca .SdrTemplate =int8 (_dfaf );
_agfd ,_gdec =_egaca ._cdcge .ReadBits (2);if _gdec !=nil {return _gdec ;};_egaca .SdTemplate =int8 (_agfd &0xf);_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;};if _dfaf ==1{_egaca ._aggbd =true ;};_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();
if _gdec !=nil {return _gdec ;};if _dfaf ==1{_egaca ._abgc =true ;};_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;};if _dfaf ==1{_egaca .SdHuffAggInstanceSelection =true ;};_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;
};_egaca .SdHuffBMSizeSelection =int8 (_dfaf );_agfd ,_gdec =_egaca ._cdcge .ReadBits (2);if _gdec !=nil {return _gdec ;};_egaca .SdHuffDecodeWidthSelection =int8 (_agfd &0xf);_agfd ,_gdec =_egaca ._cdcge .ReadBits (2);if _gdec !=nil {return _gdec ;};_egaca .SdHuffDecodeHeightSelection =int8 (_agfd &0xf);
_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;};if _dfaf ==1{_egaca .UseRefinementAggregation =true ;};_dfaf ,_gdec =_egaca ._cdcge .ReadBit ();if _gdec !=nil {return _gdec ;};if _dfaf ==1{_egaca .IsHuffmanEncoded =true ;};return nil ;
};func NewHeader (d Documenter ,r *_dg .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fdf :=&Header {Reader :r };if _eac :=_fdf .parse (d ,r ,offset ,organizationType );_eac !=nil {return nil ,_gc .Wrap (_eac ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _fdf ,nil ;};func (_baga *SymbolDictionary )getSymbol (_gefdd int )(*_dcb .Bitmap ,error ){const _dccad ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_bbad ,_bdgge :=_baga ._aefd .GetBitmap (_baga ._eaaf [_gefdd ]);if _bdgge !=nil {return nil ,_gc .Wrap (_bdgge ,_dccad ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _bbad ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_cdgd *TextRegion )decodeRdx ()(int64 ,error ){const _dabb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cdgd .IsHuffmanEncoded {if _cdgd .SbHuffRDX ==3{if _cdgd ._acde ==nil {var (_egddf int ;
_ceff error ;);if _cdgd .SbHuffFS ==3{_egddf ++;};if _cdgd .SbHuffDS ==3{_egddf ++;};if _cdgd .SbHuffDT ==3{_egddf ++;};if _cdgd .SbHuffRDWidth ==3{_egddf ++;};if _cdgd .SbHuffRDHeight ==3{_egddf ++;};_cdgd ._acde ,_ceff =_cdgd .getUserTable (_egddf );
if _ceff !=nil {return 0,_gc .Wrap (_ceff ,_dabb ,"");};};return _cdgd ._acde .Decode (_cdgd ._gegd );};_dbf ,_adgg :=_ac .GetStandardTable (14+int (_cdgd .SbHuffRDX ));if _adgg !=nil {return 0,_gc .Wrap (_adgg ,_dabb ,"");};return _dbf .Decode (_cdgd ._gegd );
};_cccc ,_dagc :=_cdgd ._aeaf .DecodeInt (_cdgd ._cgdfc );if _dagc !=nil {return 0,_gc .Wrap (_dagc ,_dabb ,"");};return int64 (_cccc ),nil ;};func (_adef *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _adef ._dafd };func (_gbeae *PatternDictionary )readIsMMREncoded ()error {_gfba ,_dgfcb :=_gbeae ._dbb .ReadBit ();
if _dgfcb !=nil {return _dgfcb ;};if _gfba !=0{_gbeae .IsMMREncoded =true ;};return nil ;};func (_edb *GenericRefinementRegion )decodeTemplate (_bea ,_ebb ,_db ,_bdd ,_deb ,_aad ,_cfd ,_aadc ,_abb ,_aac int ,_aca templater )(_af error ){var (_cggc ,_egf ,_edae ,_fgd ,_ggg int16 ;
_cgd ,_eef ,_dda ,_cbf int ;_afa byte ;);if _abb >=1&&(_abb -1)< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -_bdd );if _af !=nil {return _af ;};_cgd =int (_afa );};if _abb >=0&&(_abb )< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac );
if _af !=nil {return _af ;};_eef =int (_afa );};if _abb >=-1&&(_abb +1)< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac +_bdd );if _af !=nil {return _af ;};_dda =int (_afa );};_aac ++;if _bea >=1{_afa ,_af =_edb .RegionBitmap .GetByte (_aadc -_db );
if _af !=nil {return _af ;};_cbf =int (_afa );};_aadc ++;_gdc :=_edb .ReferenceDX %8;_gfd :=6+_gdc ;_cff :=_aac %_bdd ;if _gfd >=0{if _gfd < 8{_cggc =int16 (_cgd >>uint (_gfd ))&0x07;};if _gfd < 8{_egf =int16 (_eef >>uint (_gfd ))&0x07;};if _gfd < 8{_edae =int16 (_dda >>uint (_gfd ))&0x07;
};if _gfd ==6&&_cff > 1{if _abb >=1&&(_abb -1)< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -_bdd -2);if _af !=nil {return _af ;};_cggc |=int16 (_afa <<2)&0x04;};if _abb >=0&&_abb < _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -2);
if _af !=nil {return _af ;};_egf |=int16 (_afa <<2)&0x04;};if _abb >=-1&&_abb +1< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac +_bdd -2);if _af !=nil {return _af ;};_edae |=int16 (_afa <<2)&0x04;};};if _gfd ==0{_cgd =0;
_eef =0;_dda =0;if _cff < _bdd -1{if _abb >=1&&_abb -1< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -_bdd );if _af !=nil {return _af ;};_cgd =int (_afa );};if _abb >=0&&_abb < _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac );
if _af !=nil {return _af ;};_eef =int (_afa );};if _abb >=-1&&_abb +1< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac +_bdd );if _af !=nil {return _af ;};_dda =int (_afa );};};_aac ++;};}else {_cggc =int16 (_cgd <<1)&0x07;
_egf =int16 (_eef <<1)&0x07;_edae =int16 (_dda <<1)&0x07;_cgd =0;_eef =0;_dda =0;if _cff < _bdd -1{if _abb >=1&&_abb -1< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -_bdd );if _af !=nil {return _af ;};_cgd =int (_afa );
};if _abb >=0&&_abb < _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac );if _af !=nil {return _af ;};_eef =int (_afa );};if _abb >=-1&&_abb +1< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac +_bdd );
if _af !=nil {return _af ;};_dda =int (_afa );};_aac ++;};_cggc |=int16 ((_cgd >>7)&0x07);_egf |=int16 ((_eef >>7)&0x07);_edae |=int16 ((_dda >>7)&0x07);};_fgd =int16 (_cbf >>6);_ggg =0;_fcfa :=(2-_gdc )%8;_cgd <<=uint (_fcfa );_eef <<=uint (_fcfa );_dda <<=uint (_fcfa );
_cbf <<=2;var _egaa int ;for _bae :=0;_bae < _ebb ;_bae ++{_bfc :=_bae &0x07;_feac :=_aca .form (_cggc ,_egf ,_edae ,_fgd ,_ggg );if _edb ._gea {_afa ,_af =_edb .RegionBitmap .GetByte (_edb .RegionBitmap .GetByteIndex (_bae ,_bea ));if _af !=nil {return _af ;
};_edb ._ea .SetIndex (int32 (_edb .overrideAtTemplate0 (int (_feac ),_bae ,_bea ,int (_afa ),_bfc )));}else {_edb ._ea .SetIndex (int32 (_feac ));};_egaa ,_af =_edb ._dcbe .DecodeBit (_edb ._ea );if _af !=nil {return _af ;};if _af =_edb .RegionBitmap .SetPixel (_bae ,_bea ,byte (_egaa ));
_af !=nil {return _af ;};_cggc =((_cggc <<1)|0x01&int16 (_cgd >>7))&0x07;_egf =((_egf <<1)|0x01&int16 (_eef >>7))&0x07;_edae =((_edae <<1)|0x01&int16 (_dda >>7))&0x07;_fgd =((_fgd <<1)|0x01&int16 (_cbf >>7))&0x07;_ggg =int16 (_egaa );if (_bae -int (_edb .ReferenceDX ))%8==5{_cgd =0;
_eef =0;_dda =0;if ((_bae -int (_edb .ReferenceDX ))/8)+1< _edb .ReferenceBitmap .RowStride {if _abb >=1&&(_abb -1)< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac -_bdd );if _af !=nil {return _af ;};_cgd =int (_afa );};
if _abb >=0&&_abb < _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac );if _af !=nil {return _af ;};_eef =int (_afa );};if _abb >=-1&&(_abb +1)< _edb .ReferenceBitmap .Height {_afa ,_af =_edb .ReferenceBitmap .GetByte (_aac +_bdd );
if _af !=nil {return _af ;};_dda =int (_afa );};};_aac ++;}else {_cgd <<=1;_eef <<=1;_dda <<=1;};if _bfc ==5&&_bea >=1{if ((_bae >>3)+1)>=_edb .RegionBitmap .RowStride {_cbf =0;}else {_afa ,_af =_edb .RegionBitmap .GetByte (_aadc -_db );if _af !=nil {return _af ;
};_cbf =int (_afa );};_aadc ++;}else {_cbf <<=1;};};return nil ;};func (_acfb *TextRegion )decodeID ()(int64 ,error ){if _acfb .IsHuffmanEncoded {if _acfb ._abdc ==nil {_ecfg ,_gbba :=_acfb ._gegd .ReadBits (byte (_acfb ._gfbec ));return int64 (_ecfg ),_gbba ;
};return _acfb ._abdc .Decode (_acfb ._gegd );};return _acfb ._aeaf .DecodeIAID (uint64 (_acfb ._gfbec ),_acfb ._gcca );};func (_bdad *TextRegion )readHuffmanFlags ()error {var (_eafdeb int ;_fgag uint64 ;_beba error ;);_ ,_beba =_bdad ._gegd .ReadBit ();
if _beba !=nil {return _beba ;};_eafdeb ,_beba =_bdad ._gegd .ReadBit ();if _beba !=nil {return _beba ;};_bdad .SbHuffRSize =int8 (_eafdeb );_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;};_bdad .SbHuffRDY =int8 (_fgag )&0xf;_fgag ,_beba =_bdad ._gegd .ReadBits (2);
if _beba !=nil {return _beba ;};_bdad .SbHuffRDX =int8 (_fgag )&0xf;_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;};_bdad .SbHuffRDHeight =int8 (_fgag )&0xf;_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;
};_bdad .SbHuffRDWidth =int8 (_fgag )&0xf;_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;};_bdad .SbHuffDT =int8 (_fgag )&0xf;_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;};_bdad .SbHuffDS =int8 (_fgag )&0xf;
_fgag ,_beba =_bdad ._gegd .ReadBits (2);if _beba !=nil {return _beba ;};_bdad .SbHuffFS =int8 (_fgag )&0xf;return nil ;};func (_bafa *SymbolDictionary )encodeFlags (_beb _dg .BinaryWriter )(_gecdf int ,_bfgf error ){const _gdbd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bfgf =_beb .SkipBits (3);_bfgf !=nil {return 0,_gc .Wrap (_bfgf ,_gdbd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cedg int ;if _bafa .SdrTemplate > 0{_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_cedg =0;if _bafa .SdTemplate > 1{_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cedg =0;if _bafa .SdTemplate ==1||_bafa .SdTemplate ==3{_cedg =1;
};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cedg =0;if _bafa ._aggbd {_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_cedg =0;if _bafa ._abgc {_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cedg =0;if _bafa .SdHuffAggInstanceSelection {_cedg =1;
};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cedg =int (_bafa .SdHuffBMSizeSelection );if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_cedg =0;if _bafa .SdHuffDecodeWidthSelection > 1{_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cedg =0;switch _bafa .SdHuffDecodeWidthSelection {case 1,3:_cedg =1;
};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cedg =0;if _bafa .SdHuffDecodeHeightSelection > 1{_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );
_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cedg =0;switch _bafa .SdHuffDecodeHeightSelection {case 1,3:_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_cedg =0;if _bafa .UseRefinementAggregation {_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_cedg =0;if _bafa .IsHuffmanEncoded {_cedg =1;};if _bfgf =_beb .WriteBit (_cedg );
_bfgf !=nil {return _gecdf ,_gc .Wrap (_bfgf ,_gdbd ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_afbb *GenericRegion )Encode (w _dg .BinaryWriter )(_dccf int ,_fgf error ){const _edf ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _afbb .Bitmap ==nil {return 0,_gc .Error (_edf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_fb ,_fgf :=_afbb .RegionSegment .Encode (w );if _fgf !=nil {return 0,_gc .Wrap (_fgf ,_edf ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dccf +=_fb ;if _fgf =w .SkipBits (4);_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _cbba int ;if _afbb .IsTPGDon {_cbba =1;};if _fgf =w .WriteBit (_cbba );
_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cbba =0;if _fgf =w .WriteBit (int (_afbb .GBTemplate >>1)&0x01);_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fgf =w .WriteBit (int (_afbb .GBTemplate )&0x01);_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _afbb .UseMMR {_cbba =1;};if _fgf =w .WriteBit (_cbba );
_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dccf ++;if _fb ,_fgf =_afbb .writeGBAtPixels (w );_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"");};_dccf +=_fb ;_gcac :=_ad .New ();
if _fgf =_gcac .EncodeBitmap (_afbb .Bitmap ,_afbb .IsTPGDon );_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"");};_gcac .Final ();var _acg int64 ;if _acg ,_fgf =_gcac .WriteTo (w );_fgf !=nil {return _dccf ,_gc .Wrap (_fgf ,_edf ,"");};_dccf +=int (_acg );
return _dccf ,nil ;};func (_dfdgc *PageInformationSegment )String ()string {_affa :=&_cg .Builder {};_affa .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_affa .WriteString (_ca .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_dfdgc .PageBMHeight ));_affa .WriteString (_ca .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_dfdgc .PageBMWidth ));
_affa .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_dfdgc .ResolutionX ));_affa .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_dfdgc .ResolutionY ));
_affa .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_dfdgc ._ecfe ));_affa .WriteString (_ca .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_dfdgc ._dafd ));
_affa .WriteString (_ca .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_dfdgc .IsLossless ));_affa .WriteString (_ca .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dfdgc ._daacb ));
_affa .WriteString (_ca .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_dfdgc ._egcf ));_affa .WriteString (_ca .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_dfdgc .IsStripe ));
_affa .WriteString (_ca .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_dfdgc .MaxStripeSize ));return _affa .String ();};func (_gbfa *GenericRegion )overrideAtTemplate2 (_dcdg ,_fdb ,_dafc ,_efgd ,_adbg int )int {_dcdg &=0x3FB;
if _gbfa .GBAtY [0]==0&&_gbfa .GBAtX [0]>=-int8 (_adbg ){_dcdg |=(_efgd >>uint (7-(int8 (_adbg )+_gbfa .GBAtX [0]))&0x1)<<2;}else {_dcdg |=int (_gbfa .getPixel (_fdb +int (_gbfa .GBAtX [0]),_dafc +int (_gbfa .GBAtY [0])))<<2;};return _dcdg ;};func (_egbcb *HalftoneRegion )computeSegmentDataStructure ()error {_egbcb .DataOffset =_egbcb ._fcdd .AbsolutePosition ();
_egbcb .DataHeaderLength =_egbcb .DataOffset -_egbcb .DataHeaderOffset ;_egbcb .DataLength =int64 (_egbcb ._fcdd .AbsoluteLength ())-_egbcb .DataHeaderLength ;return nil ;};func (_ecbc *PatternDictionary )extractPatterns (_bdc *_dcb .Bitmap )error {var _adbb int ;
_bag :=make ([]*_dcb .Bitmap ,_ecbc .GrayMax +1);for _adbb <=int (_ecbc .GrayMax ){_fegf :=int (_ecbc .HdpWidth )*_adbb ;_abead :=_a .Rect (_fegf ,0,_fegf +int (_ecbc .HdpWidth ),int (_ecbc .HdpHeight ));_dceg ,_gefd :=_dcb .Extract (_abead ,_bdc );if _gefd !=nil {return _gefd ;
};_bag [_adbb ]=_dceg ;_adbb ++;};_ecbc .Patterns =_bag ;return nil ;};func (_gccf *Header )writeReferredToSegments (_faff _dg .BinaryWriter )(_ccde int ,_dgb error ){const _dgd ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_bacdd uint16 ;_eeee uint32 ;);_bcfb :=_gccf .referenceSize ();_cedeb :=1;_gba :=make ([]byte ,_bcfb );for _ ,_efcc :=range _gccf .RTSNumbers {switch _bcfb {case 4:_eeee =uint32 (_efcc );_c .BigEndian .PutUint32 (_gba ,_eeee );_cedeb ,_dgb =_faff .Write (_gba );
if _dgb !=nil {return 0,_gc .Wrap (_dgb ,_dgd ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_bacdd =uint16 (_efcc );_c .BigEndian .PutUint16 (_gba ,_bacdd );_cedeb ,_dgb =_faff .Write (_gba );if _dgb !=nil {return 0,_gc .Wrap (_dgb ,_dgd ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _dgb =_faff .WriteByte (byte (_efcc ));_dgb !=nil {return 0,_gc .Wrap (_dgb ,_dgd ,"\u0075\u0069\u006et\u0038");};};_ccde +=_cedeb ;};return _ccde ,nil ;};type RegionSegment struct{_cbcg *_dg .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;
XLocation uint32 ;YLocation uint32 ;CombinaionOperator _dcb .CombinationOperator ;};func (_acdc *TextRegion )symbolIDCodeLengths ()error {var (_fcbd []*_ac .Code ;_efdc uint64 ;_afdd _ac .Tabler ;_bfbg error ;);for _fdce :=0;_fdce < 35;_fdce ++{_efdc ,_bfbg =_acdc ._gegd .ReadBits (4);
if _bfbg !=nil {return _bfbg ;};_beefc :=int (_efdc &0xf);if _beefc > 0{_fcbd =append (_fcbd ,_ac .NewCode (int32 (_beefc ),0,int32 (_fdce ),false ));};};_afdd ,_bfbg =_ac .NewFixedSizeTable (_fcbd );if _bfbg !=nil {return _bfbg ;};var (_babg int64 ;_gfbc uint32 ;
_ggeeg []*_ac .Code ;_efde int64 ;);for _gfbc < _acdc .NumberOfSymbols {_efde ,_bfbg =_afdd .Decode (_acdc ._gegd );if _bfbg !=nil {return _bfbg ;};if _efde < 32{if _efde > 0{_ggeeg =append (_ggeeg ,_ac .NewCode (int32 (_efde ),0,int32 (_gfbc ),false ));
};_babg =_efde ;_gfbc ++;}else {var _ggff ,_dedee int64 ;switch _efde {case 32:_efdc ,_bfbg =_acdc ._gegd .ReadBits (2);if _bfbg !=nil {return _bfbg ;};_ggff =3+int64 (_efdc );if _gfbc > 0{_dedee =_babg ;};case 33:_efdc ,_bfbg =_acdc ._gegd .ReadBits (3);
if _bfbg !=nil {return _bfbg ;};_ggff =3+int64 (_efdc );case 34:_efdc ,_bfbg =_acdc ._gegd .ReadBits (7);if _bfbg !=nil {return _bfbg ;};_ggff =11+int64 (_efdc );};for _fbff :=0;_fbff < int (_ggff );_fbff ++{if _dedee > 0{_ggeeg =append (_ggeeg ,_ac .NewCode (int32 (_dedee ),0,int32 (_gfbc ),false ));
};_gfbc ++;};};};_acdc ._gegd .Align ();_acdc ._abdc ,_bfbg =_ac .NewFixedSizeTable (_ggeeg );return _bfbg ;};func (_dfef *GenericRefinementRegion )getPixel (_fcgg *_dcb .Bitmap ,_dcc ,_bcg int )int {if _dcc < 0||_dcc >=_fcgg .Width {return 0;};if _bcg < 0||_bcg >=_fcgg .Height {return 0;
};if _fcgg .GetPixel (_dcc ,_bcg ){return 1;};return 0;};func (_gafe *TextRegion )createRegionBitmap ()error {_gafe .RegionBitmap =_dcb .New (int (_gafe .RegionInfo .BitmapWidth ),int (_gafe .RegionInfo .BitmapHeight ));if _gafe .DefaultPixel !=0{_gafe .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_ffb *Header )referenceSize ()uint {switch {case _ffb .SegmentNumber <=255:return 1;case _ffb .SegmentNumber <=65535:return 2;default:return 4;};};func (_cffd *GenericRegion )writeGBAtPixels (_bba _dg .BinaryWriter )(_fda int ,_egg error ){const _faaa ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _cffd .UseMMR {return 0,nil ;};_ddbf :=1;if _cffd .GBTemplate ==0{_ddbf =4;}else if _cffd .UseExtTemplates {_ddbf =12;};if len (_cffd .GBAtX )!=_ddbf {return 0,_gc .Errorf (_faaa ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_cffd .GBAtY )!=_ddbf {return 0,_gc .Errorf (_faaa ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ecc :=0;_ecc < _ddbf ;_ecc ++{if _egg =_bba .WriteByte (byte (_cffd .GBAtX [_ecc ]));_egg !=nil {return _fda ,_gc .Wrap (_egg ,_faaa ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fda ++;if _egg =_bba .WriteByte (byte (_cffd .GBAtY [_ecc ]));
_egg !=nil {return _fda ,_gc .Wrap (_egg ,_faaa ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fda ++;};return _fda ,nil ;};func (_geff *PageInformationSegment )Init (h *Header ,r *_dg .Reader )(_dccfa error ){_geff ._dfa =r ;if _dccfa =_geff .parseHeader ();
_dccfa !=nil {return _gc .Wrap (_dccfa ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_abbd *GenericRegion )setOverrideFlag (_cadf int ){_abbd .GBAtOverride [_cadf ]=true ;
_abbd ._bggb =true ;};