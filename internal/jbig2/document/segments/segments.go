//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_g "encoding/binary";_gd "errors";_ea "fmt";_fg "github.com/unidoc/unipdf/v4/common";_ab "github.com/unidoc/unipdf/v4/internal/bitwise";_cc "github.com/unidoc/unipdf/v4/internal/jbig2/basic";_bg "github.com/unidoc/unipdf/v4/internal/jbig2/bitmap";
_gc "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/arithmetic";_abd "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/huffman";_fc "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/mmr";_d "github.com/unidoc/unipdf/v4/internal/jbig2/encoder/arithmetic";
_f "github.com/unidoc/unipdf/v4/internal/jbig2/errors";_ae "github.com/unidoc/unipdf/v4/internal/jbig2/internal";_b "image";_c "io";_a "math";_cfb "strings";_cf "time";);func (_caac *GenericRefinementRegion )overrideAtTemplate0 (_gfd ,_dca ,_cbb ,_agee ,_efa int )int {if _caac ._edd [0]{_gfd &=0xfff7;
if _caac .GrAtY [0]==0&&int (_caac .GrAtX [0])>=-_efa {_gfd |=(_agee >>uint (7-(_efa +int (_caac .GrAtX [0])))&0x1)<<3;}else {_gfd |=_caac .getPixel (_caac .RegionBitmap ,_dca +int (_caac .GrAtX [0]),_cbb +int (_caac .GrAtY [0]))<<3;};};if _caac ._edd [1]{_gfd &=0xefff;
if _caac .GrAtY [1]==0&&int (_caac .GrAtX [1])>=-_efa {_gfd |=(_agee >>uint (7-(_efa +int (_caac .GrAtX [1])))&0x1)<<12;}else {_gfd |=_caac .getPixel (_caac .ReferenceBitmap ,_dca +int (_caac .GrAtX [1]),_cbb +int (_caac .GrAtY [1]));};};return _gfd ;};
func (_dec *GenericRefinementRegion )decodeTypicalPredictedLine (_ef ,_ceg ,_bb ,_bab ,_fbd ,_eff int )error {_geg :=_ef -int (_dec .ReferenceDY );_dg :=_dec .ReferenceBitmap .GetByteIndex (0,_geg );_dd :=_dec .RegionBitmap .GetByteIndex (0,_ef );var _aeg error ;
switch _dec .TemplateID {case 0:_aeg =_dec .decodeTypicalPredictedLineTemplate0 (_ef ,_ceg ,_bb ,_bab ,_fbd ,_eff ,_dd ,_geg ,_dg );case 1:_aeg =_dec .decodeTypicalPredictedLineTemplate1 (_ef ,_ceg ,_bb ,_bab ,_fbd ,_eff ,_dd ,_geg ,_dg );};return _aeg ;
};func (_fdee *PageInformationSegment )readWidthAndHeight ()error {_gfff ,_gfdb :=_fdee ._fcbf .ReadBits (32);if _gfdb !=nil {return _gfdb ;};_fdee .PageBMWidth =int (_gfff &_a .MaxInt32 );_gfff ,_gfdb =_fdee ._fcbf .ReadBits (32);if _gfdb !=nil {return _gfdb ;
};_fdee .PageBMHeight =int (_gfff &_a .MaxInt32 );return nil ;};func (_dgb *GenericRegion )InitEncode (bm *_bg .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _gegc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _f .Error (_gegc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _f .Error (_gegc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dgb .Bitmap =bm ;_dgb .GBTemplate =byte (template );switch _dgb .GBTemplate {case 0:_dgb .GBAtX =[]int8 {3,-3,2,-2};_dgb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dgb .GBAtX =[]int8 {3};_dgb .GBAtY =[]int8 {-1};case 2,3:_dgb .GBAtX =[]int8 {2};_dgb .GBAtY =[]int8 {-1};
default:return _f .Errorf (_gegc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dgb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dgb .IsTPGDon =duplicateLineRemoval ;return nil ;};type EndOfStripe struct{_cfa *_ab .Reader ;
_fe int ;};func (_aceb *TextRegion )decodeRdx ()(int64 ,error ){const _cgeg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _aceb .IsHuffmanEncoded {if _aceb .SbHuffRDX ==3{if _aceb ._fbbg ==nil {var (_ffaf int ;_ccef error ;);if _aceb .SbHuffFS ==3{_ffaf ++;
};if _aceb .SbHuffDS ==3{_ffaf ++;};if _aceb .SbHuffDT ==3{_ffaf ++;};if _aceb .SbHuffRDWidth ==3{_ffaf ++;};if _aceb .SbHuffRDHeight ==3{_ffaf ++;};_aceb ._fbbg ,_ccef =_aceb .getUserTable (_ffaf );if _ccef !=nil {return 0,_f .Wrap (_ccef ,_cgeg ,"");
};};return _aceb ._fbbg .Decode (_aceb ._aeeba );};_dbgf ,_cffd :=_abd .GetStandardTable (14+int (_aceb .SbHuffRDX ));if _cffd !=nil {return 0,_f .Wrap (_cffd ,_cgeg ,"");};return _dbgf .Decode (_aceb ._aeeba );};_gfgd ,_efaef :=_aceb ._cgfb .DecodeInt (_aceb ._aga );
if _efaef !=nil {return 0,_f .Wrap (_efaef ,_cgeg ,"");};return int64 (_gfgd ),nil ;};func (_bgb *GenericRegion )computeSegmentDataStructure ()error {_bgb .DataOffset =_bgb ._dgf .AbsolutePosition ();_bgb .DataHeaderLength =_bgb .DataOffset -_bgb .DataHeaderOffset ;
_bgb .DataLength =int64 (_bgb ._dgf .AbsoluteLength ())-_bgb .DataHeaderLength ;return nil ;};func (_eddg *GenericRegion )overrideAtTemplate0b (_bdgf ,_fgf ,_fbbc ,_fda ,_ebe ,_gdcb int )int {if _eddg .GBAtOverride [0]{_bdgf &=0xFFFD;if _eddg .GBAtY [0]==0&&_eddg .GBAtX [0]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [0]&0x1))<<1;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [0]),_fbbc +int (_eddg .GBAtY [0])))<<1;};};if _eddg .GBAtOverride [1]{_bdgf &=0xDFFF;if _eddg .GBAtY [1]==0&&_eddg .GBAtX [1]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [1]&0x1))<<13;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [1]),_fbbc +int (_eddg .GBAtY [1])))<<13;};};if _eddg .GBAtOverride [2]{_bdgf &=0xFDFF;if _eddg .GBAtY [2]==0&&_eddg .GBAtX [2]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [2]&0x1))<<9;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [2]),_fbbc +int (_eddg .GBAtY [2])))<<9;};};if _eddg .GBAtOverride [3]{_bdgf &=0xBFFF;if _eddg .GBAtY [3]==0&&_eddg .GBAtX [3]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [3]&0x1))<<14;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [3]),_fbbc +int (_eddg .GBAtY [3])))<<14;};};if _eddg .GBAtOverride [4]{_bdgf &=0xEFFF;if _eddg .GBAtY [4]==0&&_eddg .GBAtX [4]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [4]&0x1))<<12;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [4]),_fbbc +int (_eddg .GBAtY [4])))<<12;};};if _eddg .GBAtOverride [5]{_bdgf &=0xFFDF;if _eddg .GBAtY [5]==0&&_eddg .GBAtX [5]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [5]&0x1))<<5;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [5]),_fbbc +int (_eddg .GBAtY [5])))<<5;};};if _eddg .GBAtOverride [6]{_bdgf &=0xFFFB;if _eddg .GBAtY [6]==0&&_eddg .GBAtX [6]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [6]&0x1))<<2;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [6]),_fbbc +int (_eddg .GBAtY [6])))<<2;};};if _eddg .GBAtOverride [7]{_bdgf &=0xFFF7;if _eddg .GBAtY [7]==0&&_eddg .GBAtX [7]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [7]&0x1))<<3;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [7]),_fbbc +int (_eddg .GBAtY [7])))<<3;};};if _eddg .GBAtOverride [8]{_bdgf &=0xF7FF;if _eddg .GBAtY [8]==0&&_eddg .GBAtX [8]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [8]&0x1))<<11;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [8]),_fbbc +int (_eddg .GBAtY [8])))<<11;};};if _eddg .GBAtOverride [9]{_bdgf &=0xFFEF;if _eddg .GBAtY [9]==0&&_eddg .GBAtX [9]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [9]&0x1))<<4;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [9]),_fbbc +int (_eddg .GBAtY [9])))<<4;};};if _eddg .GBAtOverride [10]{_bdgf &=0x7FFF;if _eddg .GBAtY [10]==0&&_eddg .GBAtX [10]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [10]&0x1))<<15;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [10]),_fbbc +int (_eddg .GBAtY [10])))<<15;};};if _eddg .GBAtOverride [11]{_bdgf &=0xFDFF;if _eddg .GBAtY [11]==0&&_eddg .GBAtX [11]>=-int8 (_ebe ){_bdgf |=(_fda >>uint (int8 (_gdcb )-_eddg .GBAtX [11]&0x1))<<10;
}else {_bdgf |=int (_eddg .getPixel (_fgf +int (_eddg .GBAtX [11]),_fbbc +int (_eddg .GBAtY [11])))<<10;};};return _bdgf ;};func (_efdf *SymbolDictionary )readNumberOfNewSymbols ()error {_bfcc ,_aabc :=_efdf ._dgff .ReadBits (32);if _aabc !=nil {return _aabc ;
};_efdf .NumberOfNewSymbols =uint32 (_bfcc &_a .MaxUint32 );return nil ;};func (_cbedd *TextRegion )getSymbols ()error {if _cbedd .Header .RTSegments !=nil {return _cbedd .initSymbols ();};return nil ;};func (_cba *GenericRegion )decodeTemplate1 (_cffg ,_bag ,_eef int ,_fcc ,_afd int )(_dgbd error ){const _ffag ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_cdc ,_baaf int ;_eead ,_dccb int ;_dda byte ;_cbag ,_abag int ;);if _cffg >=1{_dda ,_dgbd =_cba .Bitmap .GetByte (_afd );if _dgbd !=nil {return _f .Wrap (_dgbd ,_ffag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eead =int (_dda );};if _cffg >=2{_dda ,_dgbd =_cba .Bitmap .GetByte (_afd -_cba .Bitmap .RowStride );
if _dgbd !=nil {return _f .Wrap (_dgbd ,_ffag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dccb =int (_dda )<<5;};_cdc =((_eead >>1)&0x1f8)|((_dccb >>1)&0x1e00);for _gda :=0;_gda < _eef ;_gda =_cbag {var (_gdab byte ;_ccbg int ;);_cbag =_gda +8;
if _gegcc :=_bag -_gda ;_gegcc > 8{_ccbg =8;}else {_ccbg =_gegcc ;};if _cffg > 0{_eead <<=8;if _cbag < _bag {_dda ,_dgbd =_cba .Bitmap .GetByte (_afd +1);if _dgbd !=nil {return _f .Wrap (_dgbd ,_ffag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_eead |=int (_dda );};};if _cffg > 1{_dccb <<=8;if _cbag < _bag {_dda ,_dgbd =_cba .Bitmap .GetByte (_afd -_cba .Bitmap .RowStride +1);if _dgbd !=nil {return _f .Wrap (_dgbd ,_ffag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dccb |=int (_dda )<<5;
};};for _cfe :=0;_cfe < _ccbg ;_cfe ++{if _cba ._efeg {_baaf =_cba .overrideAtTemplate1 (_cdc ,_gda +_cfe ,_cffg ,int (_gdab ),_cfe );_cba ._ceb .SetIndex (int32 (_baaf ));}else {_cba ._ceb .SetIndex (int32 (_cdc ));};_abag ,_dgbd =_cba ._geffb .DecodeBit (_cba ._ceb );
if _dgbd !=nil {return _f .Wrap (_dgbd ,_ffag ,"");};_gdab |=byte (_abag )<<uint (7-_cfe );_ebda :=uint (8-_cfe );_cdc =((_cdc &0xefb)<<1)|_abag |((_eead >>_ebda )&0x8)|((_dccb >>_ebda )&0x200);};if _fdec :=_cba .Bitmap .SetByte (_fcc ,_gdab );_fdec !=nil {return _f .Wrap (_fdec ,_ffag ,"");
};_fcc ++;_afd ++;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_dcge *HalftoneRegion )grayScaleDecoding (_gebg int )([][]int ,error ){var (_bdgg []int8 ;_agge []int8 ;);if !_dcge .IsMMREncoded {_bdgg =make ([]int8 ,4);_agge =make ([]int8 ,4);
if _dcge .HTemplate <=1{_bdgg [0]=3;}else if _dcge .HTemplate >=2{_bdgg [0]=2;};_agge [0]=-1;_bdgg [1]=-3;_agge [1]=-1;_bdgg [2]=2;_agge [2]=-2;_bdgg [3]=-2;_agge [3]=-2;};_efd :=make ([]*_bg .Bitmap ,_gebg );_acg :=NewGenericRegion (_dcge ._efcb );_acg .setParametersMMR (_dcge .IsMMREncoded ,_dcge .DataOffset ,_dcge .DataLength ,_dcge .HGridHeight ,_dcge .HGridWidth ,_dcge .HTemplate ,false ,_dcge .HSkipEnabled ,_bdgg ,_agge );
_agb :=_gebg -1;var _cdeg error ;_efd [_agb ],_cdeg =_acg .GetRegionBitmap ();if _cdeg !=nil {return nil ,_cdeg ;};for _agb > 0{_agb --;_acg .Bitmap =nil ;_efd [_agb ],_cdeg =_acg .GetRegionBitmap ();if _cdeg !=nil {return nil ,_cdeg ;};if _cdeg =_dcge .combineGrayscalePlanes (_efd ,_agb );
_cdeg !=nil {return nil ,_cdeg ;};};return _dcge .computeGrayScalePlanes (_efd ,_gebg );};func (_ebdgg *TextRegion )GetRegionBitmap ()(*_bg .Bitmap ,error ){if _ebdgg .RegionBitmap !=nil {return _ebdgg .RegionBitmap ,nil ;};if !_ebdgg .IsHuffmanEncoded {if _ggfg :=_ebdgg .setCodingStatistics ();
_ggfg !=nil {return nil ,_ggfg ;};};if _gabb :=_ebdgg .createRegionBitmap ();_gabb !=nil {return nil ,_gabb ;};if _cgccf :=_ebdgg .decodeSymbolInstances ();_cgccf !=nil {return nil ,_cgccf ;};return _ebdgg .RegionBitmap ,nil ;};func (_gdcbd *PageInformationSegment )Encode (w _ab .BinaryWriter )(_ggbbe int ,_afeg error ){const _bbfa ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_daeb :=make ([]byte ,4);_g .BigEndian .PutUint32 (_daeb ,uint32 (_gdcbd .PageBMWidth ));_ggbbe ,_afeg =w .Write (_daeb );if _afeg !=nil {return _ggbbe ,_f .Wrap (_afeg ,_bbfa ,"\u0077\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_daeb ,uint32 (_gdcbd .PageBMHeight ));
var _bfbbf int ;_bfbbf ,_afeg =w .Write (_daeb );if _afeg !=nil {return _bfbbf +_ggbbe ,_f .Wrap (_afeg ,_bbfa ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ggbbe +=_bfbbf ;_g .BigEndian .PutUint32 (_daeb ,uint32 (_gdcbd .ResolutionX ));_bfbbf ,_afeg =w .Write (_daeb );
if _afeg !=nil {return _bfbbf +_ggbbe ,_f .Wrap (_afeg ,_bbfa ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ggbbe +=_bfbbf ;_g .BigEndian .PutUint32 (_daeb ,uint32 (_gdcbd .ResolutionY ));if _bfbbf ,_afeg =w .Write (_daeb );
_afeg !=nil {return _bfbbf +_ggbbe ,_f .Wrap (_afeg ,_bbfa ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ggbbe +=_bfbbf ;if _afeg =_gdcbd .encodeFlags (w );_afeg !=nil {return _ggbbe ,_f .Wrap (_afeg ,_bbfa ,"");};_ggbbe ++;
if _bfbbf ,_afeg =_gdcbd .encodeStripingInformation (w );_afeg !=nil {return _ggbbe ,_f .Wrap (_afeg ,_bbfa ,"");};_ggbbe +=_bfbbf ;return _ggbbe ,nil ;};func (_ebbb *Header )pageSize ()uint {if _ebbb .PageAssociation <=255{return 1;};return 4;};func (_bebag *Header )readSegmentPageAssociation (_dedef Documenter ,_eecf *_ab .Reader ,_ebbee uint64 ,_adaa ...int )(_fgbf error ){const _degg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_bebag .PageAssociationFieldSize {_accd ,_ffgb :=_eecf .ReadBits (8);if _ffgb !=nil {return _f .Wrap (_ffgb ,_degg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bebag .PageAssociation =int (_accd &0xFF);}else {_fagd ,_gdbb :=_eecf .ReadBits (32);
if _gdbb !=nil {return _f .Wrap (_gdbb ,_degg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bebag .PageAssociation =int (_fagd &_a .MaxInt32 );};if _ebbee ==0{return nil ;};if _bebag .PageAssociation !=0{_cbegg ,_ecab :=_dedef .GetPage (_bebag .PageAssociation );
if _ecab !=nil {return _f .Wrap (_ecab ,_degg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _gce int ;for _acd :=uint64 (0);_acd < _ebbee ;_acd ++{_gce =_adaa [_acd ];
_bebag .RTSegments [_acd ],_ecab =_cbegg .GetSegment (_gce );if _ecab !=nil {var _cegg error ;_bebag .RTSegments [_acd ],_cegg =_dedef .GetGlobalSegment (_gce );if _cegg !=nil {return _f .Wrapf (_ecab ,_degg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bebag .PageAssociation );
};};};return nil ;};for _edbc :=uint64 (0);_edbc < _ebbee ;_edbc ++{_bebag .RTSegments [_edbc ],_fgbf =_dedef .GetGlobalSegment (_adaa [_edbc ]);if _fgbf !=nil {return _f .Wrapf (_fgbf ,_degg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_adaa [_edbc ]);
};};return nil ;};func (_dgd *GenericRefinementRegion )readAtPixels ()error {_dgd .GrAtX =make ([]int8 ,2);_dgd .GrAtY =make ([]int8 ,2);_bcd ,_cef :=_dgd ._af .ReadByte ();if _cef !=nil {return _cef ;};_dgd .GrAtX [0]=int8 (_bcd );_bcd ,_cef =_dgd ._af .ReadByte ();
if _cef !=nil {return _cef ;};_dgd .GrAtY [0]=int8 (_bcd );_bcd ,_cef =_dgd ._af .ReadByte ();if _cef !=nil {return _cef ;};_dgd .GrAtX [1]=int8 (_bcd );_bcd ,_cef =_dgd ._af .ReadByte ();if _cef !=nil {return _cef ;};_dgd .GrAtY [1]=int8 (_bcd );return nil ;
};func (_ecf *GenericRefinementRegion )parseHeader ()(_bef error ){_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fegc :=_cf .Now ();defer func (){if _bef ==nil {_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_cf .Since (_fegc ).Nanoseconds ());
}else {_fg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_bef );
};}();if _bef =_ecf .RegionInfo .parseHeader ();_bef !=nil {return _bef ;};_ ,_bef =_ecf ._af .ReadBits (6);if _bef !=nil {return _bef ;};_ecf .IsTPGROn ,_bef =_ecf ._af .ReadBool ();if _bef !=nil {return _bef ;};var _fef int ;_fef ,_bef =_ecf ._af .ReadBit ();
if _bef !=nil {return _bef ;};_ecf .TemplateID =int8 (_fef );switch _ecf .TemplateID {case 0:_ecf .Template =_ecf ._gbb ;if _bef =_ecf .readAtPixels ();_bef !=nil {return _bef ;};case 1:_ecf .Template =_ecf ._ag ;};return nil ;};var (_ Regioner =&TextRegion {};
_ Segmenter =&TextRegion {};);func (_fefa *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_dead :=range _fefa .Header .RTSegments {if _dead .Type ==0{_gbfa ,_gagc :=_dead .GetSegmentData ();if _gagc !=nil {return _gagc ;};_dbde ,_aeae :=_gbfa .(*SymbolDictionary );
if !_aeae {return _ea .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gbfa );
};_ebed ,_gagc :=_dbde .GetDictionary ();if _gagc !=nil {return _ea .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_dead .SegmentNumber ,_gagc .Error ());
};_fefa ._babb =append (_fefa ._babb ,_ebed ...);_fefa ._ggcc +=_dbde .NumberOfExportedSymbols ;};};return nil ;};func (_abad *SymbolDictionary )encodeRefinementATFlags (_beca _ab .BinaryWriter )(_eba int ,_bbdf error ){const _ddcd ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_abad .UseRefinementAggregation ||_abad .SdrTemplate !=0{return 0,nil ;};for _efebb :=0;_efebb < 2;_efebb ++{if _bbdf =_beca .WriteByte (byte (_abad .SdrATX [_efebb ]));_bbdf !=nil {return _eba ,_f .Wrapf (_bbdf ,_ddcd ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_efebb );
};_eba ++;if _bbdf =_beca .WriteByte (byte (_abad .SdrATY [_efebb ]));_bbdf !=nil {return _eba ,_f .Wrapf (_bbdf ,_ddcd ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_efebb );};_eba ++;};return _eba ,nil ;};func (_gegcg *TextRegion )readRegionFlags ()error {var (_efbbf int ;
_dbge uint64 ;_dedd error ;);_efbbf ,_dedd =_gegcg ._aeeba .ReadBit ();if _dedd !=nil {return _dedd ;};_gegcg .SbrTemplate =int8 (_efbbf );_dbge ,_dedd =_gegcg ._aeeba .ReadBits (5);if _dedd !=nil {return _dedd ;};_gegcg .SbDsOffset =int8 (_dbge );if _gegcg .SbDsOffset > 0x0f{_gegcg .SbDsOffset -=0x20;
};_efbbf ,_dedd =_gegcg ._aeeba .ReadBit ();if _dedd !=nil {return _dedd ;};_gegcg .DefaultPixel =int8 (_efbbf );_dbge ,_dedd =_gegcg ._aeeba .ReadBits (2);if _dedd !=nil {return _dedd ;};_gegcg .CombinationOperator =_bg .CombinationOperator (int (_dbge )&0x3);
_efbbf ,_dedd =_gegcg ._aeeba .ReadBit ();if _dedd !=nil {return _dedd ;};_gegcg .IsTransposed =int8 (_efbbf );_dbge ,_dedd =_gegcg ._aeeba .ReadBits (2);if _dedd !=nil {return _dedd ;};_gegcg .ReferenceCorner =int16 (_dbge )&0x3;_dbge ,_dedd =_gegcg ._aeeba .ReadBits (2);
if _dedd !=nil {return _dedd ;};_gegcg .LogSBStrips =int16 (_dbge )&0x3;_gegcg .SbStrips =1<<uint (_gegcg .LogSBStrips );_efbbf ,_dedd =_gegcg ._aeeba .ReadBit ();if _dedd !=nil {return _dedd ;};if _efbbf ==1{_gegcg .UseRefinement =true ;};_efbbf ,_dedd =_gegcg ._aeeba .ReadBit ();
if _dedd !=nil {return _dedd ;};if _efbbf ==1{_gegcg .IsHuffmanEncoded =true ;};return nil ;};func (_afad *Header )parse (_gfcc Documenter ,_degf *_ab .Reader ,_eccb int64 ,_ffac OrganizationType )(_dbcg error ){const _fdgf ="\u0070\u0061\u0072s\u0065";
_fg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dbcg !=nil {_fg .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dbcg );
}else {_fg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_dbcg =_degf .Seek (_eccb ,_c .SeekStart );
if _dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _dbcg =_afad .readSegmentNumber (_degf );_dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");};if _dbcg =_afad .readHeaderFlags ();_dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");
};var _dee uint64 ;_dee ,_dbcg =_afad .readNumberOfReferredToSegments (_degf );if _dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");};_afad .RTSNumbers ,_dbcg =_afad .readReferredToSegmentNumbers (_degf ,int (_dee ));if _dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");
};_dbcg =_afad .readSegmentPageAssociation (_gfcc ,_degf ,_dee ,_afad .RTSNumbers ...);if _dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");};if _afad .Type !=TEndOfFile {if _dbcg =_afad .readSegmentDataLength (_degf );_dbcg !=nil {return _f .Wrap (_dbcg ,_fdgf ,"");
};};_afad .readDataStartOffset (_degf ,_ffac );_afad .readHeaderLength (_degf ,_eccb );_fg .Log .Trace ("\u0025\u0073",_afad );return nil ;};func (_fcef *TextRegion )setParameters (_gdf *_gc .Decoder ,_cbbbe ,_aeab bool ,_cbbgf ,_gfccg uint32 ,_ebad uint32 ,_gdgg int8 ,_cffgf uint32 ,_eacf int8 ,_eebc _bg .CombinationOperator ,_acdd int8 ,_baef int16 ,_gfcd ,_ebbf ,_bagbc ,_ddgd ,_efcd ,_gfbb ,_cfac ,_fbcc ,_ccba ,_dbdc int8 ,_ddbae ,_adcf []int8 ,_gebge []*_bg .Bitmap ,_fcfb int8 ){_fcef ._cgfb =_gdf ;
_fcef .IsHuffmanEncoded =_cbbbe ;_fcef .UseRefinement =_aeab ;_fcef .RegionInfo .BitmapWidth =_cbbgf ;_fcef .RegionInfo .BitmapHeight =_gfccg ;_fcef .NumberOfSymbolInstances =_ebad ;_fcef .SbStrips =_gdgg ;_fcef .NumberOfSymbols =_cffgf ;_fcef .DefaultPixel =_eacf ;
_fcef .CombinationOperator =_eebc ;_fcef .IsTransposed =_acdd ;_fcef .ReferenceCorner =_baef ;_fcef .SbDsOffset =_gfcd ;_fcef .SbHuffFS =_ebbf ;_fcef .SbHuffDS =_bagbc ;_fcef .SbHuffDT =_ddgd ;_fcef .SbHuffRDWidth =_efcd ;_fcef .SbHuffRDHeight =_gfbb ;
_fcef .SbHuffRSize =_ccba ;_fcef .SbHuffRDX =_cfac ;_fcef .SbHuffRDY =_fbcc ;_fcef .SbrTemplate =_dbdc ;_fcef .SbrATX =_ddbae ;_fcef .SbrATY =_adcf ;_fcef .Symbols =_gebge ;_fcef ._cfbcd =_fcfb ;};func (_fcbe *SymbolDictionary )readRegionFlags ()error {var (_fbfc uint64 ;
_beec int ;);_ ,_debf :=_fcbe ._dgff .ReadBits (3);if _debf !=nil {return _debf ;};_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};_fcbe .SdrTemplate =int8 (_beec );_fbfc ,_debf =_fcbe ._dgff .ReadBits (2);if _debf !=nil {return _debf ;
};_fcbe .SdTemplate =int8 (_fbfc &0xf);_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};if _beec ==1{_fcbe ._beaad =true ;};_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};if _beec ==1{_fcbe ._faff =true ;};
_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};if _beec ==1{_fcbe .SdHuffAggInstanceSelection =true ;};_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};_fcbe .SdHuffBMSizeSelection =int8 (_beec );_fbfc ,_debf =_fcbe ._dgff .ReadBits (2);
if _debf !=nil {return _debf ;};_fcbe .SdHuffDecodeWidthSelection =int8 (_fbfc &0xf);_fbfc ,_debf =_fcbe ._dgff .ReadBits (2);if _debf !=nil {return _debf ;};_fcbe .SdHuffDecodeHeightSelection =int8 (_fbfc &0xf);_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;
};if _beec ==1{_fcbe .UseRefinementAggregation =true ;};_beec ,_debf =_fcbe ._dgff .ReadBit ();if _debf !=nil {return _debf ;};if _beec ==1{_fcbe .IsHuffmanEncoded =true ;};return nil ;};func (_bdggc *TextRegion )encodeSymbols (_dabae _ab .BinaryWriter )(_dfae int ,_afce error ){const _bgff ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_dbdf :=make ([]byte ,4);_g .BigEndian .PutUint32 (_dbdf ,_bdggc .NumberOfSymbols );if _dfae ,_afce =_dabae .Write (_dbdf );_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fgga ,_afce :=_bg .NewClassedPoints (_bdggc ._agcg ,_bdggc ._becca );if _afce !=nil {return 0,_f .Wrap (_afce ,_bgff ,"");};var _bdfgc ,_eaaff int ;_bagda :=_d .New ();_bagda .Init ();if _afce =_bagda .EncodeInteger (_d .IADT ,0);_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_gaae ,_afce :=_fgga .GroupByY ();if _afce !=nil {return 0,_f .Wrap (_afce ,_bgff ,"");};for _ ,_debb :=range _gaae {_cedd :=int (_debb .YAtIndex (0));_beccc :=_cedd -_bdfgc ;if _afce =_bagda .EncodeInteger (_d .IADT ,_beccc );_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"");
};var _beab int ;for _dcaag ,_gaec :=range _debb .IntSlice {switch _dcaag {case 0:_egdd :=int (_debb .XAtIndex (_dcaag ))-_eaaff ;if _afce =_bagda .EncodeInteger (_d .IAFS ,_egdd );_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"");};_eaaff +=_egdd ;
_beab =_eaaff ;default:_bacf :=int (_debb .XAtIndex (_dcaag ))-_beab ;if _afce =_bagda .EncodeInteger (_d .IADS ,_bacf );_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"");};_beab +=_bacf ;};_cffgd ,_aecab :=_bdggc ._dggf .Get (_gaec );if _aecab !=nil {return _dfae ,_f .Wrap (_aecab ,_bgff ,"");
};_cfgc ,_afde :=_bdggc ._egegd [_cffgd ];if !_afde {_cfgc ,_afde =_bdggc ._fcbg [_cffgd ];if !_afde {return _dfae ,_f .Errorf (_bgff ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cffgd );
};};if _aecab =_bagda .EncodeIAID (_bdggc ._eacd ,_cfgc );_aecab !=nil {return _dfae ,_f .Wrap (_aecab ,_bgff ,"");};};if _afce =_bagda .EncodeOOB (_d .IADS );_afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"");};};_bagda .Final ();_gfca ,_afce :=_bagda .WriteTo (_dabae );
if _afce !=nil {return _dfae ,_f .Wrap (_afce ,_bgff ,"");};_dfae +=int (_gfca );return _dfae ,nil ;};func (_ebcg *GenericRegion )getPixel (_fgd ,_gffd int )int8 {if _fgd < 0||_fgd >=_ebcg .Bitmap .Width {return 0;};if _gffd < 0||_gffd >=_ebcg .Bitmap .Height {return 0;
};if _ebcg .Bitmap .GetPixel (_fgd ,_gffd ){return 1;};return 0;};func (_gbag *TextRegion )decodeRdh ()(int64 ,error ){const _adfgg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _gbag .IsHuffmanEncoded {if _gbag .SbHuffRDHeight ==3{if _gbag ._geed ==nil {var (_bgec int ;
_gbec error ;);if _gbag .SbHuffFS ==3{_bgec ++;};if _gbag .SbHuffDS ==3{_bgec ++;};if _gbag .SbHuffDT ==3{_bgec ++;};if _gbag .SbHuffRDWidth ==3{_bgec ++;};_gbag ._geed ,_gbec =_gbag .getUserTable (_bgec );if _gbec !=nil {return 0,_f .Wrap (_gbec ,_adfgg ,"");
};};return _gbag ._geed .Decode (_gbag ._aeeba );};_aecbg ,_befa :=_abd .GetStandardTable (14+int (_gbag .SbHuffRDHeight ));if _befa !=nil {return 0,_f .Wrap (_befa ,_adfgg ,"");};return _aecbg .Decode (_gbag ._aeeba );};_bbgc ,_fcba :=_gbag ._cgfb .DecodeInt (_gbag ._dcfa );
if _fcba !=nil {return 0,_f .Wrap (_fcba ,_adfgg ,"");};return int64 (_bbgc ),nil ;};func (_feea *TextRegion )decodeStripT ()(_fgba int64 ,_babag error ){if _feea .IsHuffmanEncoded {if _feea .SbHuffDT ==3{if _feea ._faaf ==nil {var _ebbgg int ;if _feea .SbHuffFS ==3{_ebbgg ++;
};if _feea .SbHuffDS ==3{_ebbgg ++;};_feea ._faaf ,_babag =_feea .getUserTable (_ebbgg );if _babag !=nil {return 0,_babag ;};};_fgba ,_babag =_feea ._faaf .Decode (_feea ._aeeba );if _babag !=nil {return 0,_babag ;};}else {var _aegef _abd .Tabler ;_aegef ,_babag =_abd .GetStandardTable (11+int (_feea .SbHuffDT ));
if _babag !=nil {return 0,_babag ;};_fgba ,_babag =_aegef .Decode (_feea ._aeeba );if _babag !=nil {return 0,_babag ;};};}else {var _ecea int32 ;_ecea ,_babag =_feea ._cgfb .DecodeInt (_feea ._accda );if _babag !=nil {return 0,_babag ;};_fgba =int64 (_ecea );
};_fgba *=int64 (-_feea .SbStrips );return _fgba ,nil ;};func (_adb *HalftoneRegion )GetRegionBitmap ()(*_bg .Bitmap ,error ){if _adb .HalftoneRegionBitmap !=nil {return _adb .HalftoneRegionBitmap ,nil ;};var _afac error ;_adb .HalftoneRegionBitmap =_bg .New (int (_adb .RegionSegment .BitmapWidth ),int (_adb .RegionSegment .BitmapHeight ));
if _adb .Patterns ==nil ||(_adb .Patterns !=nil &&len (_adb .Patterns )==0){_adb .Patterns ,_afac =_adb .GetPatterns ();if _afac !=nil {return nil ,_afac ;};};if _adb .HDefaultPixel ==1{_adb .HalftoneRegionBitmap .SetDefaultPixel ();};_ggba :=_a .Ceil (_a .Log (float64 (len (_adb .Patterns )))/_a .Log (2));
_dgfee :=int (_ggba );var _ffaa [][]int ;_ffaa ,_afac =_adb .grayScaleDecoding (_dgfee );if _afac !=nil {return nil ,_afac ;};if _afac =_adb .renderPattern (_ffaa );_afac !=nil {return nil ,_afac ;};return _adb .HalftoneRegionBitmap ,nil ;};func (_bgeg *GenericRefinementRegion )getPixel (_baa *_bg .Bitmap ,_cga ,_bce int )int {if _cga < 0||_cga >=_baa .Width {return 0;
};if _bce < 0||_bce >=_baa .Height {return 0;};if _baa .GetPixel (_cga ,_bce ){return 1;};return 0;};var (_fgfg Segmenter ;_fgc =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fgfg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fgfg },TProfiles :func ()Segmenter {return _fgfg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fgfg },TBitmap :func ()Segmenter {return _fgfg }};
);func (_gagb *SymbolDictionary )encodeATFlags (_afade _ab .BinaryWriter )(_gfec int ,_feb error ){const _agbb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _gagb .IsHuffmanEncoded ||_gagb .SdTemplate !=0{return 0,nil ;
};_affc :=4;if _gagb .SdTemplate !=0{_affc =1;};for _afdf :=0;_afdf < _affc ;_afdf ++{if _feb =_afade .WriteByte (byte (_gagb .SdATX [_afdf ]));_feb !=nil {return _gfec ,_f .Wrapf (_feb ,_agbb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_afdf );};_gfec ++;
if _feb =_afade .WriteByte (byte (_gagb .SdATY [_afdf ]));_feb !=nil {return _gfec ,_f .Wrapf (_feb ,_agbb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_afdf );};_gfec ++;};return _gfec ,nil ;};func (_agbc *SymbolDictionary )decodeNewSymbols (_aeeb ,_cfga uint32 ,_gacgd *_bg .Bitmap ,_bggd ,_gdce int32 )error {if _agbc ._gfgga ==nil {_agbc ._gfgga =_gge (_agbc ._dgff ,nil );
if _agbc ._eccd ==nil {var _ecdc error ;_agbc ._eccd ,_ecdc =_gc .New (_agbc ._dgff );if _ecdc !=nil {return _ecdc ;};};if _agbc ._caacd ==nil {_agbc ._caacd =_gc .NewStats (65536,1);};};_agbc ._gfgga .setParameters (_agbc ._caacd ,_agbc ._eccd ,_agbc .SdrTemplate ,_aeeb ,_cfga ,_gacgd ,_bggd ,_gdce ,false ,_agbc .SdrATX ,_agbc .SdrATY );
return _agbc .addSymbol (_agbc ._gfgga );};func (_aeca *GenericRegion )GetRegionInfo ()*RegionSegment {return _aeca .RegionSegment };func (_daba *PatternDictionary )readTemplate ()error {_gga ,_dfac :=_daba ._cgcbf .ReadBits (2);if _dfac !=nil {return _dfac ;
};_daba .HDTemplate =byte (_gga );return nil ;};func (_bba *template0 )setIndex (_efff *_gc .DecoderStats ){_efff .SetIndex (0x100)};func (_fefc *TableSegment )HtPS ()int32 {return _fefc ._gbdc };func (_ccg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_fdcg ,_cafa :=_ccg ._fcbf .ReadBit ();
if _cafa !=nil {return _cafa ;};if _fdcg ==1{_ccg ._egcc =true ;};return nil ;};func (_eece *HalftoneRegion )computeX (_aaa ,_cag int )int {return _eece .shiftAndFill (int (_eece .HGridX )+_aaa *int (_eece .HRegionY )+_cag *int (_eece .HRegionX ));};func (_ccgc *TextRegion )decodeIds ()(int64 ,error ){const _cdcc ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _ccgc .IsHuffmanEncoded {if _ccgc .SbHuffDS ==3{if _ccgc ._geae ==nil {_gebd :=0;if _ccgc .SbHuffFS ==3{_gebd ++;};var _cfd error ;_ccgc ._geae ,_cfd =_ccgc .getUserTable (_gebd );if _cfd !=nil {return 0,_f .Wrap (_cfd ,_cdcc ,"");};};return _ccgc ._geae .Decode (_ccgc ._aeeba );
};_aada ,_begdd :=_abd .GetStandardTable (8+int (_ccgc .SbHuffDS ));if _begdd !=nil {return 0,_f .Wrap (_begdd ,_cdcc ,"");};return _aada .Decode (_ccgc ._aeeba );};_gaaa ,_ecef :=_ccgc ._cgfb .DecodeInt (_ccgc ._dbfa );if _ecef !=nil {return 0,_f .Wrap (_ecef ,_cdcc ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_gaaa ),nil ;};func (_gfde *SymbolDictionary )setAtPixels ()error {if _gfde .IsHuffmanEncoded {return nil ;};_eede :=1;if _gfde .SdTemplate ==0{_eede =4;};if _edge :=_gfde .readAtPixels (_eede );_edge !=nil {return _edge ;};return nil ;
};func (_fgff *Header )readNumberOfReferredToSegments (_fffb *_ab .Reader )(uint64 ,error ){const _dfdfa ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_caafg ,_dba :=_fffb .ReadBits (3);if _dba !=nil {return 0,_f .Wrap (_dba ,_dfdfa ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_caafg &=0xf;var _caca []byte ;if _caafg <=4{_caca =make ([]byte ,5);for _dcbd :=0;_dcbd <=4;_dcbd ++{_fffbc ,_aegb :=_fffb .ReadBit ();
if _aegb !=nil {return 0,_f .Wrap (_aegb ,_dfdfa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caca [_dcbd ]=byte (_fffbc );};}else {_caafg ,_dba =_fffb .ReadBits (29);if _dba !=nil {return 0,_dba ;};_caafg &=_a .MaxInt32 ;
_efcf :=(_caafg +8)>>3;_efcf <<=3;_caca =make ([]byte ,_efcf );var _bcaga uint64 ;for _bcaga =0;_bcaga < _efcf ;_bcaga ++{_bgad ,_gab :=_fffb .ReadBit ();if _gab !=nil {return 0,_f .Wrap (_gab ,_dfdfa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_caca [_bcaga ]=byte (_bgad );};};return _caafg ,nil ;};func (_gaa *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _gaa .SdHuffDecodeHeightSelection {case 0:_adga ,_cfcf :=_abd .GetStandardTable (4);if _cfcf !=nil {return 0,_cfcf ;
};return _adga .Decode (_gaa ._dgff );case 1:_bfac ,_egfbb :=_abd .GetStandardTable (5);if _egfbb !=nil {return 0,_egfbb ;};return _bfac .Decode (_gaa ._dgff );case 3:if _gaa ._aecd ==nil {_bfee ,_aace :=_abd .GetStandardTable (0);if _aace !=nil {return 0,_aace ;
};_gaa ._aecd =_bfee ;};return _gaa ._aecd .Decode (_gaa ._dgff );};return 0,nil ;};func (_bdbb *Header )writeSegmentNumber (_aafg _ab .BinaryWriter )(_bbgb int ,_cbcde error ){_bdde :=make ([]byte ,4);_g .BigEndian .PutUint32 (_bdde ,_bdbb .SegmentNumber );
if _bbgb ,_cbcde =_aafg .Write (_bdde );_cbcde !=nil {return 0,_f .Wrap (_cbcde ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bbgb ,nil ;};var _ templater =&template1 {};
func (_fae Type )String ()string {switch _fae {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_aacfb *SymbolDictionary )encodeFlags (_eafc _ab .BinaryWriter )(_ccgg int ,_adff error ){const _feafa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _adff =_eafc .SkipBits (3);_adff !=nil {return 0,_f .Wrap (_adff ,_feafa ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _gafg int ;if _aacfb .SdrTemplate > 0{_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_gafg =0;if _aacfb .SdTemplate > 1{_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gafg =0;if _aacfb .SdTemplate ==1||_aacfb .SdTemplate ==3{_gafg =1;
};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gafg =0;if _aacfb ._beaad {_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gafg =0;if _aacfb ._faff {_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gafg =0;if _aacfb .SdHuffAggInstanceSelection {_gafg =1;
};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gafg =int (_aacfb .SdHuffBMSizeSelection );if _adff =_eafc .WriteBit (_gafg );
_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_gafg =0;if _aacfb .SdHuffDecodeWidthSelection > 1{_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_gafg =0;switch _aacfb .SdHuffDecodeWidthSelection {case 1,3:_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gafg =0;if _aacfb .SdHuffDecodeHeightSelection > 1{_gafg =1;
};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gafg =0;switch _aacfb .SdHuffDecodeHeightSelection {case 1,3:_gafg =1;};if _adff =_eafc .WriteBit (_gafg );
_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gafg =0;if _aacfb .UseRefinementAggregation {_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_gafg =0;if _aacfb .IsHuffmanEncoded {_gafg =1;};if _adff =_eafc .WriteBit (_gafg );_adff !=nil {return _ccgg ,_f .Wrap (_adff ,_feafa ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cg *EndOfStripe )LineNumber ()int {return _cg ._fe };
func (_gb *EndOfStripe )parseHeader ()error {_ed ,_bd :=_gb ._cfa .ReadBits (32);if _bd !=nil {return _bd ;};_gb ._fe =int (_ed &_a .MaxInt32 );return nil ;};func (_dccd *GenericRegion )parseHeader ()(_dfg error ){_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dfg !=nil {_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dfg );
}else {_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_ecd int ;_dga uint64 ;);if _dfg =_dccd .RegionSegment .parseHeader ();_dfg !=nil {return _dfg ;};if _ ,_dfg =_dccd ._dgf .ReadBits (3);_dfg !=nil {return _dfg ;};_ecd ,_dfg =_dccd ._dgf .ReadBit ();if _dfg !=nil {return _dfg ;};if _ecd ==1{_dccd .UseExtTemplates =true ;
};_ecd ,_dfg =_dccd ._dgf .ReadBit ();if _dfg !=nil {return _dfg ;};if _ecd ==1{_dccd .IsTPGDon =true ;};_dga ,_dfg =_dccd ._dgf .ReadBits (2);if _dfg !=nil {return _dfg ;};_dccd .GBTemplate =byte (_dga &0xf);_ecd ,_dfg =_dccd ._dgf .ReadBit ();if _dfg !=nil {return _dfg ;
};if _ecd ==1{_dccd .IsMMREncoded =true ;};if !_dccd .IsMMREncoded {_gac :=1;if _dccd .GBTemplate ==0{_gac =4;if _dccd .UseExtTemplates {_gac =12;};};if _dfg =_dccd .readGBAtPixels (_gac );_dfg !=nil {return _dfg ;};};if _dfg =_dccd .computeSegmentDataStructure ();
_dfg !=nil {return _dfg ;};_fg .Log .Trace ("\u0025\u0073",_dccd );return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};type OrganizationType uint8 ;func (_ddbea *TextRegion )symbolIDCodeLengths ()error {var (_fbe []*_abd .Code ;
_dgfc uint64 ;_decb _abd .Tabler ;_fbge error ;);for _adbf :=0;_adbf < 35;_adbf ++{_dgfc ,_fbge =_ddbea ._aeeba .ReadBits (4);if _fbge !=nil {return _fbge ;};_befge :=int (_dgfc &0xf);if _befge > 0{_fbe =append (_fbe ,_abd .NewCode (int32 (_befge ),0,int32 (_adbf ),false ));
};};_decb ,_fbge =_abd .NewFixedSizeTable (_fbe );if _fbge !=nil {return _fbge ;};var (_eggd int64 ;_bbdgd uint32 ;_bcde []*_abd .Code ;_ffda int64 ;);for _bbdgd < _ddbea .NumberOfSymbols {_ffda ,_fbge =_decb .Decode (_ddbea ._aeeba );if _fbge !=nil {return _fbge ;
};if _ffda < 32{if _ffda > 0{_bcde =append (_bcde ,_abd .NewCode (int32 (_ffda ),0,int32 (_bbdgd ),false ));};_eggd =_ffda ;_bbdgd ++;}else {var _dedec ,_bfad int64 ;switch _ffda {case 32:_dgfc ,_fbge =_ddbea ._aeeba .ReadBits (2);if _fbge !=nil {return _fbge ;
};_dedec =3+int64 (_dgfc );if _bbdgd > 0{_bfad =_eggd ;};case 33:_dgfc ,_fbge =_ddbea ._aeeba .ReadBits (3);if _fbge !=nil {return _fbge ;};_dedec =3+int64 (_dgfc );case 34:_dgfc ,_fbge =_ddbea ._aeeba .ReadBits (7);if _fbge !=nil {return _fbge ;};_dedec =11+int64 (_dgfc );
};for _ebfd :=0;_ebfd < int (_dedec );_ebfd ++{if _bfad > 0{_bcde =append (_bcde ,_abd .NewCode (int32 (_bfad ),0,int32 (_bbdgd ),false ));};_bbdgd ++;};};};_ddbea ._aeeba .Align ();_ddbea ._cdfcc ,_fbge =_abd .NewFixedSizeTable (_bcde );return _fbge ;
};func (_adbe *Header )readSegmentNumber (_fccg *_ab .Reader )error {const _dgaa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_cabg :=make ([]byte ,4);_ ,_efaad :=_fccg .Read (_cabg );if _efaad !=nil {return _f .Wrap (_efaad ,_dgaa ,"");
};_adbe .SegmentNumber =_g .BigEndian .Uint32 (_cabg );return nil ;};func (_fgcf *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _fgcf ._fgae };func (_ceegd *TableSegment )HtHigh ()int32 {return _ceegd ._acga };type PageInformationSegment struct{_fcbf *_ab .Reader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_fgae bool ;_eged _bg .CombinationOperator ;_egcc bool ;DefaultPixelValue uint8 ;_cdac bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gdba *GenericRegion )setOverrideFlag (_fgac int ){_gdba .GBAtOverride [_fgac ]=true ;
_gdba ._efeg =true ;};func (_dag *GenericRefinementRegion )getGrReference ()(*_bg .Bitmap ,error ){segments :=_dag ._dc .RTSegments ;if len (segments )==0{return nil ,_gd .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_dcf ,_cfc :=segments [0].GetSegmentData ();if _cfc !=nil {return nil ,_cfc ;};_aac ,_dad :=_dcf .(Regioner );if !_dad {return nil ,_ea .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dcf );
};return _aac .GetRegionBitmap ();};func (_caega *SymbolDictionary )decodeRefinedSymbol (_ggebb ,_gdca uint32 )error {var (_ddda int ;_degc ,_dbgg int32 ;);if _caega .IsHuffmanEncoded {_dedb ,_cacf :=_caega ._dgff .ReadBits (byte (_caega ._bccb ));if _cacf !=nil {return _cacf ;
};_ddda =int (_dedb );_dbede ,_cacf :=_abd .GetStandardTable (15);if _cacf !=nil {return _cacf ;};_bgcd ,_cacf :=_dbede .Decode (_caega ._dgff );if _cacf !=nil {return _cacf ;};_degc =int32 (_bgcd );_bgcd ,_cacf =_dbede .Decode (_caega ._dgff );if _cacf !=nil {return _cacf ;
};_dbgg =int32 (_bgcd );_dbede ,_cacf =_abd .GetStandardTable (1);if _cacf !=nil {return _cacf ;};if _ ,_cacf =_dbede .Decode (_caega ._dgff );_cacf !=nil {return _cacf ;};_caega ._dgff .Align ();}else {_dada ,_fggf :=_caega ._eccd .DecodeIAID (uint64 (_caega ._bccb ),_caega ._ebbg );
if _fggf !=nil {return _fggf ;};_ddda =int (_dada );_degc ,_fggf =_caega ._eccd .DecodeInt (_caega ._dbdb );if _fggf !=nil {return _fggf ;};_dbgg ,_fggf =_caega ._eccd .DecodeInt (_caega ._gafd );if _fggf !=nil {return _fggf ;};};if _cbad :=_caega .setSymbolsArray ();
_cbad !=nil {return _cbad ;};_fdge :=_caega ._aabd [_ddda ];if _affce :=_caega .decodeNewSymbols (_ggebb ,_gdca ,_fdge ,_degc ,_dbgg );_affce !=nil {return _affce ;};if _caega .IsHuffmanEncoded {_caega ._dgff .Align ();};return nil ;};func (_fab *GenericRegion )readGBAtPixels (_dbf int )error {const _ggcb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_fab .GBAtX =make ([]int8 ,_dbf );_fab .GBAtY =make ([]int8 ,_dbf );for _gfe :=0;_gfe < _dbf ;_gfe ++{_cae ,_efbb :=_fab ._dgf .ReadByte ();if _efbb !=nil {return _f .Wrapf (_efbb ,_ggcb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gfe );
};_fab .GBAtX [_gfe ]=int8 (_cae );_cae ,_efbb =_fab ._dgf .ReadByte ();if _efbb !=nil {return _f .Wrapf (_efbb ,_ggcb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gfe );};_fab .GBAtY [_gfe ]=int8 (_cae );};return nil ;};func (_bee *Header )readHeaderFlags ()error {const _acac ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_gdd ,_afgag :=_bee .Reader .ReadBit ();if _afgag !=nil {return _f .Wrap (_afgag ,_acac ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _gdd !=0{_bee .RetainFlag =true ;};_gdd ,_afgag =_bee .Reader .ReadBit ();if _afgag !=nil {return _f .Wrap (_afgag ,_acac ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _gdd !=0{_bee .PageAssociationFieldSize =true ;};_adfb ,_afgag :=_bee .Reader .ReadBits (6);if _afgag !=nil {return _f .Wrap (_afgag ,_acac ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_bee .Type =Type (int (_adfb ));return nil ;
};func (_cbeg *GenericRegion )overrideAtTemplate2 (_fdda ,_ege ,_cddb ,_aafd ,_agf int )int {_fdda &=0x3FB;if _cbeg .GBAtY [0]==0&&_cbeg .GBAtX [0]>=-int8 (_agf ){_fdda |=(_aafd >>uint (7-(int8 (_agf )+_cbeg .GBAtX [0]))&0x1)<<2;}else {_fdda |=int (_cbeg .getPixel (_ege +int (_cbeg .GBAtX [0]),_cddb +int (_cbeg .GBAtY [0])))<<2;
};return _fdda ;};func (_bcef *Header )writeSegmentPageAssociation (_bacd _ab .BinaryWriter )(_ebg int ,_gedb error ){const _deb ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bcef .pageSize ()!=4{if _gedb =_bacd .WriteByte (byte (_bcef .PageAssociation ));_gedb !=nil {return 0,_f .Wrap (_gedb ,_deb ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dggc :=make ([]byte ,4);
_g .BigEndian .PutUint32 (_dggc ,uint32 (_bcef .PageAssociation ));if _ebg ,_gedb =_bacd .Write (_dggc );_gedb !=nil {return 0,_f .Wrap (_gedb ,_deb ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ebg ,nil ;
};func (_baba *PatternDictionary )checkInput ()error {if _baba .HdpHeight < 1||_baba .HdpWidth < 1{return _gd .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _baba .IsMMREncoded {if _baba .HDTemplate !=0{_fg .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ddbgd *SymbolDictionary )addSymbol (_dcbbf Regioner )error {_gfcbf ,_dgca :=_dcbbf .GetRegionBitmap ();if _dgca !=nil {return _dgca ;};_ddbgd ._ddc [_ddbgd ._dbbeb ]=_gfcbf ;_ddbgd ._aabd =append (_ddbgd ._aabd ,_gfcbf );_fg .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gfcbf );
return nil ;};func (_dacgb *TextRegion )decodeIb (_fdba ,_ccgb int64 )(*_bg .Bitmap ,error ){const _dgeb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_aaeag error ;_ecdg *_bg .Bitmap ;);if _fdba ==0{if int (_ccgb )> len (_dacgb .Symbols )-1{return nil ,_f .Error (_dgeb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _dacgb .Symbols [int (_ccgb )],nil ;};var _dbgb ,_ccc ,_eefe ,_gaeag int64 ;_dbgb ,_aaeag =_dacgb .decodeRdw ();if _aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"");};_ccc ,_aaeag =_dacgb .decodeRdh ();if _aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"");
};_eefe ,_aaeag =_dacgb .decodeRdx ();if _aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"");};_gaeag ,_aaeag =_dacgb .decodeRdy ();if _aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"");};if _dacgb .IsHuffmanEncoded {if _ ,_aaeag =_dacgb .decodeSymInRefSize ();
_aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"");};_dacgb ._aeeba .Align ();};_fbag :=_dacgb .Symbols [_ccgb ];_ggec :=uint32 (_fbag .Width );_bdfd :=uint32 (_fbag .Height );_geeb :=int32 (uint32 (_dbgb )>>1)+int32 (_eefe );_gcga :=int32 (uint32 (_ccc )>>1)+int32 (_gaeag );
if _dacgb ._fdeda ==nil {_dacgb ._fdeda =_gge (_dacgb ._aeeba ,nil );};_dacgb ._fdeda .setParameters (_dacgb ._ebec ,_dacgb ._cgfb ,_dacgb .SbrTemplate ,_ggec +uint32 (_dbgb ),_bdfd +uint32 (_ccc ),_fbag ,_geeb ,_gcga ,false ,_dacgb .SbrATX ,_dacgb .SbrATY );
_ecdg ,_aaeag =_dacgb ._fdeda .GetRegionBitmap ();if _aaeag !=nil {return nil ,_f .Wrap (_aaeag ,_dgeb ,"\u0067\u0072\u0066");};if _dacgb .IsHuffmanEncoded {_dacgb ._aeeba .Align ();};return _ecdg ,nil ;};func (_dcc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_dcc .Template .setIndex (_dcc ._gf );
return _dcc ._edc .DecodeBit (_dcc ._gf );};func (_ecgce *SymbolDictionary )readNumberOfExportedSymbols ()error {_ddgc ,_dbfd :=_ecgce ._dgff .ReadBits (32);if _dbfd !=nil {return _dbfd ;};_ecgce .NumberOfExportedSymbols =uint32 (_ddgc &_a .MaxUint32 );
return nil ;};func (_egcg *TextRegion )decodeSymbolInstances ()error {_fead ,_ecbf :=_egcg .decodeStripT ();if _ecbf !=nil {return _ecbf ;};var (_gefg int64 ;_dege uint32 ;);for _dege < _egcg .NumberOfSymbolInstances {_egab ,_fgfb :=_egcg .decodeDT ();
if _fgfb !=nil {return _fgfb ;};_fead +=_egab ;var _egac int64 ;_dgab :=true ;_egcg ._dbgd =0;for {if _dgab {_egac ,_fgfb =_egcg .decodeDfs ();if _fgfb !=nil {return _fgfb ;};_gefg +=_egac ;_egcg ._dbgd =_gefg ;_dgab =false ;}else {_fgfc ,_cdabc :=_egcg .decodeIds ();
if _gd .Is (_cdabc ,_ae .ErrOOB ){break ;};if _cdabc !=nil {return _cdabc ;};if _dege >=_egcg .NumberOfSymbolInstances {break ;};_egcg ._dbgd +=_fgfc +int64 (_egcg .SbDsOffset );};_adea ,_eeed :=_egcg .decodeCurrentT ();if _eeed !=nil {return _eeed ;};
_ddcg :=_fead +_adea ;_bfag ,_eeed :=_egcg .decodeID ();if _eeed !=nil {return _eeed ;};_afcb ,_eeed :=_egcg .decodeRI ();if _eeed !=nil {return _eeed ;};_bcaf ,_eeed :=_egcg .decodeIb (_afcb ,_bfag );if _eeed !=nil {return _eeed ;};if _eeed =_egcg .blit (_bcaf ,_ddcg );
_eeed !=nil {return _eeed ;};_dege ++;};};return nil ;};func (_eafb *HalftoneRegion )computeSegmentDataStructure ()error {_eafb .DataOffset =_eafb ._efcb .AbsolutePosition ();_eafb .DataHeaderLength =_eafb .DataOffset -_eafb .DataHeaderOffset ;_eafb .DataLength =int64 (_eafb ._efcb .AbsoluteLength ())-_eafb .DataHeaderLength ;
return nil ;};type Segmenter interface{Init (_ffagg *Header ,_aed *_ab .Reader )error ;};func (_fgbc *SymbolDictionary )decodeHeightClassBitmap (_bddd *_bg .Bitmap ,_ebggd int64 ,_ggf int ,_abcb []int )error {for _cecg :=_ebggd ;_cecg < int64 (_fgbc ._dbbeb );
_cecg ++{var _fcbb int ;for _cgbc :=_ebggd ;_cgbc <=_cecg -1;_cgbc ++{_fcbb +=_abcb [_cgbc ];};_afff :=_b .Rect (_fcbb ,0,_fcbb +_abcb [_cecg ],_ggf );_eggae ,_gcbb :=_bg .Extract (_afff ,_bddd );if _gcbb !=nil {return _gcbb ;};_fgbc ._ddc [_cecg ]=_eggae ;
_fgbc ._aabd =append (_fgbc ._aabd ,_eggae );};return nil ;};func (_bgdd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bgdd .IsHuffmanEncoded {return _bgdd .decodeHeightClassDeltaHeightWithHuffman ();};_edag ,_eeae :=_bgdd ._eccd .DecodeInt (_bgdd ._ffbd );
if _eeae !=nil {return 0,_eeae ;};return int64 (_edag ),nil ;};func (_gbba *Header )Encode (w _ab .BinaryWriter )(_fded int ,_baac error ){const _eedf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fgdb _ab .BinaryWriter ;_fg .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _baac !=nil {_fg .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_baac );}else {_fg .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_gbba );
_fg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _gbba .SegmentData !=nil {_ddd ,_dacg :=_gbba .SegmentData .(SegmentEncoder );
if !_dacg {return 0,_f .Errorf (_eedf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_gbba .SegmentData );
};_fgdb =_ab .BufferedMSB ();_fded ,_baac =_ddd .Encode (_fgdb );if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");};_gbba .SegmentDataLength =uint64 (_fded );};if _gbba .pageSize ()==4{_gbba .PageAssociationFieldSize =true ;};var _edff int ;_edff ,_baac =_gbba .writeSegmentNumber (w );
if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");};_fded +=_edff ;if _baac =_gbba .writeFlags (w );_baac !=nil {return _fded ,_f .Wrap (_baac ,_eedf ,"");};_fded ++;_edff ,_baac =_gbba .writeReferredToCount (w );if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");
};_fded +=_edff ;_edff ,_baac =_gbba .writeReferredToSegments (w );if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");};_fded +=_edff ;_edff ,_baac =_gbba .writeSegmentPageAssociation (w );if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");};_fded +=_edff ;
_edff ,_baac =_gbba .writeSegmentDataLength (w );if _baac !=nil {return 0,_f .Wrap (_baac ,_eedf ,"");};_fded +=_edff ;_gbba .HeaderLength =int64 (_fded )-int64 (_gbba .SegmentDataLength );if _fgdb !=nil {if _ ,_baac =w .Write (_fgdb .Data ());_baac !=nil {return _fded ,_f .Wrap (_baac ,_eedf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _fded ,nil ;};func (_dff *SymbolDictionary )readRefinementAtPixels (_fegg int )error {_dff .SdrATX =make ([]int8 ,_fegg );_dff .SdrATY =make ([]int8 ,_fegg );var (_bgee byte ;_fba error ;);for _ffba :=0;_ffba < _fegg ;_ffba ++{_bgee ,_fba =_dff ._dgff .ReadByte ();
if _fba !=nil {return _fba ;};_dff .SdrATX [_ffba ]=int8 (_bgee );_bgee ,_fba =_dff ._dgff .ReadByte ();if _fba !=nil {return _fba ;};_dff .SdrATY [_ffba ]=int8 (_bgee );};return nil ;};func (_cdb *GenericRegion )setParametersWithAt (_acc bool ,_dgae byte ,_efae ,_eee bool ,_badcg ,_eced []int8 ,_gbaf ,_ddaf uint32 ,_cbed *_gc .DecoderStats ,_cea *_gc .Decoder ){_cdb .IsMMREncoded =_acc ;
_cdb .GBTemplate =_dgae ;_cdb .IsTPGDon =_efae ;_cdb .GBAtX =_badcg ;_cdb .GBAtY =_eced ;_cdb .RegionSegment .BitmapHeight =_ddaf ;_cdb .RegionSegment .BitmapWidth =_gbaf ;_cdb ._baca =nil ;_cdb .Bitmap =nil ;if _cbed !=nil {_cdb ._ceb =_cbed ;};if _cea !=nil {_cdb ._geffb =_cea ;
};_fg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cdb );};func (_babbe *TextRegion )decodeID ()(int64 ,error ){if _babbe .IsHuffmanEncoded {if _babbe ._cdfcc ==nil {_bbca ,_ceag :=_babbe ._aeeba .ReadBits (byte (_babbe ._cfbcd ));
return int64 (_bbca ),_ceag ;};return _babbe ._cdfcc .Decode (_babbe ._aeeba );};return _babbe ._cgfb .DecodeIAID (uint64 (_babbe ._cfbcd ),_babbe ._gbg );};func (_ba *GenericRefinementRegion )decodeOptimized (_eag ,_ge ,_bac ,_egg ,_fed ,_gfc ,_gcf int )error {var (_de error ;
_abc int ;_ff int ;);_ce :=_eag -int (_ba .ReferenceDY );if _gdg :=int (-_ba .ReferenceDX );_gdg > 0{_abc =_gdg ;};_edb :=_ba .ReferenceBitmap .GetByteIndex (_abc ,_ce );if _ba .ReferenceDX > 0{_ff =int (_ba .ReferenceDX );};_cd :=_ba .RegionBitmap .GetByteIndex (_ff ,_eag );
switch _ba .TemplateID {case 0:_de =_ba .decodeTemplate (_eag ,_ge ,_bac ,_egg ,_fed ,_gfc ,_gcf ,_cd ,_ce ,_edb ,_ba ._gbb );case 1:_de =_ba .decodeTemplate (_eag ,_ge ,_bac ,_egg ,_fed ,_gfc ,_gcf ,_cd ,_ce ,_edb ,_ba ._ag );};return _de ;};func (_bcb *GenericRegion )Encode (w _ab .BinaryWriter )(_cffa int ,_eeb error ){const _cec ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _bcb .Bitmap ==nil {return 0,_f .Error (_cec ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_fbg ,_eeb :=_bcb .RegionSegment .Encode (w );if _eeb !=nil {return 0,_f .Wrap (_eeb ,_cec ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_cffa +=_fbg ;if _eeb =w .SkipBits (4);_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _beb int ;if _bcb .IsTPGDon {_beb =1;};if _eeb =w .WriteBit (_beb );
_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_beb =0;if _eeb =w .WriteBit (int (_bcb .GBTemplate >>1)&0x01);_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _eeb =w .WriteBit (int (_bcb .GBTemplate )&0x01);_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bcb .UseMMR {_beb =1;};if _eeb =w .WriteBit (_beb );
_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_cffa ++;if _fbg ,_eeb =_bcb .writeGBAtPixels (w );_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"");};_cffa +=_fbg ;_afcg :=_d .New ();
if _eeb =_afcg .EncodeBitmap (_bcb .Bitmap ,_bcb .IsTPGDon );_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"");};_afcg .Final ();var _fbgf int64 ;if _fbgf ,_eeb =_afcg .WriteTo (w );_eeb !=nil {return _cffa ,_f .Wrap (_eeb ,_cec ,"");};_cffa +=int (_fbgf );
return _cffa ,nil ;};func (_fcfc *SymbolDictionary )checkInput ()error {if _fcfc .SdHuffDecodeHeightSelection ==2{_fg .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_fcfc .SdHuffDecodeHeightSelection );
};if _fcfc .SdHuffDecodeWidthSelection ==2{_fg .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fcfc .SdHuffDecodeWidthSelection );
};if _fcfc .IsHuffmanEncoded {if _fcfc .SdTemplate !=0{_fg .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fcfc .SdTemplate );
};if !_fcfc .UseRefinementAggregation {if !_fcfc .UseRefinementAggregation {if _fcfc ._beaad {_fg .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_fcfc ._beaad =false ;};if _fcfc ._faff {_fg .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_fcfc ._faff =false ;};};};}else {if _fcfc .SdHuffBMSizeSelection !=0{_fg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcfc .SdHuffBMSizeSelection =0;};if _fcfc .SdHuffDecodeWidthSelection !=0{_fg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcfc .SdHuffDecodeWidthSelection =0;};if _fcfc .SdHuffDecodeHeightSelection !=0{_fg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcfc .SdHuffDecodeHeightSelection =0;};};if !_fcfc .UseRefinementAggregation {if _fcfc .SdrTemplate !=0{_fg .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fcfc .SdrTemplate );
_fcfc .SdrTemplate =0;};};if !_fcfc .IsHuffmanEncoded ||!_fcfc .UseRefinementAggregation {if _fcfc .SdHuffAggInstanceSelection {_fg .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fcfc .SdHuffAggInstanceSelection );
};};return nil ;};type template1 struct{};var _ SegmentEncoder =&RegionSegment {};func (_feee *Header )writeFlags (_bbgf _ab .BinaryWriter )(_gbbd error ){const _babfg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_dgda :=byte (_feee .Type );if _gbbd =_bbgf .WriteByte (_dgda );_gbbd !=nil {return _f .Wrap (_gbbd ,_babfg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_feee .RetainFlag &&!_feee .PageAssociationFieldSize {return nil ;};if _gbbd =_bbgf .SkipBits (-8);_gbbd !=nil {return _f .Wrap (_gbbd ,_babfg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _bcc int ;if _feee .RetainFlag {_bcc =1;};if _gbbd =_bbgf .WriteBit (_bcc );_gbbd !=nil {return _f .Wrap (_gbbd ,_babfg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bcc =0;if _feee .PageAssociationFieldSize {_bcc =1;
};if _gbbd =_bbgf .WriteBit (_bcc );_gbbd !=nil {return _f .Wrap (_gbbd ,_babfg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bbgf .FinishByte ();return nil ;};func (_daca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ebdd int64 ,_bddc ,_baec uint32 )(*_bg .Bitmap ,error ){if _ebdd ==0{_edg :=_bg .New (int (_baec ),int (_bddc ));
var (_ebab byte ;_ecbg error ;);for _cfcbf :=0;_cfcbf < len (_edg .Data );_cfcbf ++{_ebab ,_ecbg =_daca ._dgff .ReadByte ();if _ecbg !=nil {return nil ,_ecbg ;};if _ecbg =_edg .SetByte (_cfcbf ,_ebab );_ecbg !=nil {return nil ,_ecbg ;};};return _edg ,nil ;
};if _daca ._bddb ==nil {_daca ._bddb =NewGenericRegion (_daca ._dgff );};_daca ._bddb .setParameters (true ,_daca ._dgff .AbsolutePosition (),_ebdd ,_bddc ,_baec );_cdfc ,_ceeca :=_daca ._bddb .GetRegionBitmap ();if _ceeca !=nil {return nil ,_ceeca ;};
return _cdfc ,nil ;};type templater interface{form (_gee ,_cda ,_faf ,_eggc ,_bggc int16 )int16 ;setIndex (_dbe *_gc .DecoderStats );};func (_fggd *SymbolDictionary )decodeThroughTextRegion (_fffg ,_gbde ,_dagd uint32 )error {if _fggd ._ggda ==nil {_fggd ._ggda =_bebfb (_fggd ._dgff ,nil );
_fggd ._ggda .setContexts (_fggd ._caacd ,_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_fggd ._ebbg ,_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1));};if _bgge :=_fggd .setSymbolsArray ();
_bgge !=nil {return _bgge ;};_fggd ._ggda .setParameters (_fggd ._eccd ,_fggd .IsHuffmanEncoded ,true ,_fffg ,_gbde ,_dagd ,1,_fggd ._ggcc +_fggd ._dbbeb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_fggd .SdrTemplate ,_fggd .SdrATX ,_fggd .SdrATY ,_fggd ._aabd ,_fggd ._bccb );
return _fggd .addSymbol (_fggd ._ggda );};func (_gefca *TextRegion )encodeFlags (_affg _ab .BinaryWriter )(_cgce int ,_egda error ){const _ddfa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _egda =_affg .WriteBit (int (_gefca .SbrTemplate ));
_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_egda =_affg .WriteBits (uint64 (_gefca .SbDsOffset ),5);_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _egda =_affg .WriteBit (int (_gefca .DefaultPixel ));_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_egda =_affg .WriteBits (uint64 (_gefca .CombinationOperator ),2);
_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _egda =_affg .WriteBit (int (_gefca .IsTransposed ));_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_egda =_affg .WriteBits (uint64 (_gefca .ReferenceCorner ),2);_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_egda =_affg .WriteBits (uint64 (_gefca .LogSBStrips ),2);
_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bgbc int ;if _gefca .UseRefinement {_bgbc =1;};if _egda =_affg .WriteBit (_bgbc );_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bgbc =0;if _gefca .IsHuffmanEncoded {_bgbc =1;};if _egda =_affg .WriteBit (_bgbc );_egda !=nil {return _cgce ,_f .Wrap (_egda ,_ddfa ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_cgce =2;return _cgce ,nil ;};func (_gabe *TextRegion )decodeCurrentT ()(int64 ,error ){if _gabe .SbStrips !=1{if _gabe .IsHuffmanEncoded {_cdacb ,_ddae :=_gabe ._aeeba .ReadBits (byte (_gabe .LogSBStrips ));
return int64 (_cdacb ),_ddae ;};_cagag ,_dbec :=_gabe ._cgfb .DecodeInt (_gabe ._bbdcb );if _dbec !=nil {return 0,_dbec ;};return int64 (_cagag ),nil ;};return 0,nil ;};func (_fbgc *Header )writeSegmentDataLength (_gfb _ab .BinaryWriter )(_bggf int ,_egga error ){_acca :=make ([]byte ,4);
_g .BigEndian .PutUint32 (_acca ,uint32 (_fbgc .SegmentDataLength ));if _bggf ,_egga =_gfb .Write (_acca );_egga !=nil {return 0,_f .Wrap (_egga ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _bggf ,nil ;};func (_eceb *SymbolDictionary )Init (h *Header ,r *_ab .Reader )error {_eceb .Header =h ;_eceb ._dgff =r ;return _eceb .parseHeader ();};func (_ecae *TextRegion )GetRegionInfo ()*RegionSegment {return _ecae .RegionInfo };func (_bfea *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bfea .SdHuffAggInstanceSelection {_ffbf ,_gfgfc :=_abd .GetStandardTable (1);
if _gfgfc !=nil {return 0,_gfgfc ;};return _ffbf .Decode (_bfea ._dgff );};if _bfea ._bcbag ==nil {var (_fdgg int ;_ebbba error ;);if _bfea .SdHuffDecodeHeightSelection ==3{_fdgg ++;};if _bfea .SdHuffDecodeWidthSelection ==3{_fdgg ++;};if _bfea .SdHuffBMSizeSelection ==3{_fdgg ++;
};_bfea ._bcbag ,_ebbba =_bfea .getUserTable (_fdgg );if _ebbba !=nil {return 0,_ebbba ;};};return _bfea ._bcbag .Decode (_bfea ._dgff );};func (_eaaab *PageInformationSegment )Size ()int {return 19};func (_efggc *PageInformationSegment )readResolution ()error {_baceb ,_ffff :=_efggc ._fcbf .ReadBits (32);
if _ffff !=nil {return _ffff ;};_efggc .ResolutionX =int (_baceb &_a .MaxInt32 );_baceb ,_ffff =_efggc ._fcbf .ReadBits (32);if _ffff !=nil {return _ffff ;};_efggc .ResolutionY =int (_baceb &_a .MaxInt32 );return nil ;};func (_cdef *SymbolDictionary )GetDictionary ()([]*_bg .Bitmap ,error ){_fg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_fg .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_fg .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cdef ._beff ,_cdef ._ddc );
}();if _cdef ._beff ==nil {var _gacc error ;if _cdef .UseRefinementAggregation {_cdef ._bccb =_cdef .getSbSymCodeLen ();};if !_cdef .IsHuffmanEncoded {if _gacc =_cdef .setCodingStatistics ();_gacc !=nil {return nil ,_gacc ;};};_cdef ._ddc =make ([]*_bg .Bitmap ,_cdef .NumberOfNewSymbols );
var _cefe []int ;if _cdef .IsHuffmanEncoded &&!_cdef .UseRefinementAggregation {_cefe =make ([]int ,_cdef .NumberOfNewSymbols );};if _gacc =_cdef .setSymbolsArray ();_gacc !=nil {return nil ,_gacc ;};var _agdd ,_bggcge int64 ;_cdef ._dbbeb =0;for _cdef ._dbbeb < _cdef .NumberOfNewSymbols {_bggcge ,_gacc =_cdef .decodeHeightClassDeltaHeight ();
if _gacc !=nil {return nil ,_gacc ;};_agdd +=_bggcge ;var _ffbde ,_fede uint32 ;_edab :=int64 (_cdef ._dbbeb );for {var _aedf int64 ;_aedf ,_gacc =_cdef .decodeDifferenceWidth ();if _gd .Is (_gacc ,_ae .ErrOOB ){break ;};if _gacc !=nil {return nil ,_gacc ;
};if _cdef ._dbbeb >=_cdef .NumberOfNewSymbols {break ;};_ffbde +=uint32 (_aedf );_fede +=_ffbde ;if !_cdef .IsHuffmanEncoded ||_cdef .UseRefinementAggregation {if !_cdef .UseRefinementAggregation {_gacc =_cdef .decodeDirectlyThroughGenericRegion (_ffbde ,uint32 (_agdd ));
if _gacc !=nil {return nil ,_gacc ;};}else {_gacc =_cdef .decodeAggregate (_ffbde ,uint32 (_agdd ));if _gacc !=nil {return nil ,_gacc ;};};}else if _cdef .IsHuffmanEncoded &&!_cdef .UseRefinementAggregation {_cefe [_cdef ._dbbeb ]=int (_ffbde );};_cdef ._dbbeb ++;
};if _cdef .IsHuffmanEncoded &&!_cdef .UseRefinementAggregation {var _geffc int64 ;if _cdef .SdHuffBMSizeSelection ==0{var _geea _abd .Tabler ;_geea ,_gacc =_abd .GetStandardTable (1);if _gacc !=nil {return nil ,_gacc ;};_geffc ,_gacc =_geea .Decode (_cdef ._dgff );
if _gacc !=nil {return nil ,_gacc ;};}else {_geffc ,_gacc =_cdef .huffDecodeBmSize ();if _gacc !=nil {return nil ,_gacc ;};};_cdef ._dgff .Align ();var _ceef *_bg .Bitmap ;_ceef ,_gacc =_cdef .decodeHeightClassCollectiveBitmap (_geffc ,uint32 (_agdd ),_fede );
if _gacc !=nil {return nil ,_gacc ;};_gacc =_cdef .decodeHeightClassBitmap (_ceef ,_edab ,int (_agdd ),_cefe );if _gacc !=nil {return nil ,_gacc ;};};};_ffffa ,_gacc :=_cdef .getToExportFlags ();if _gacc !=nil {return nil ,_gacc ;};_cdef .setExportedSymbols (_ffffa );
};return _cdef ._beff ,nil ;};func (_bcee *PageInformationSegment )readContainsRefinement ()error {_gfee ,_cead :=_bcee ._fcbf .ReadBit ();if _cead !=nil {return _cead ;};if _gfee ==1{_bcee ._cdac =true ;};return nil ;};func (_fdf *HalftoneRegion )shiftAndFill (_caeg int )int {_caeg >>=8;
if _caeg < 0{_efac :=int (_a .Log (float64 (_ada (_caeg )))/_a .Log (2));_aacg :=31-_efac ;for _bagd :=1;_bagd < _aacg ;_bagd ++{_caeg |=1<<uint (31-_bagd );};};return _caeg ;};func (_aafga *TableSegment )HtLow ()int32 {return _aafga ._dafb };func (_ebdc *Header )readHeaderLength (_cegd *_ab .Reader ,_bdba int64 ){_ebdc .HeaderLength =_cegd .AbsolutePosition ()-_bdba ;
};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_dcbb *PageInformationSegment )encodeStripingInformation (_gcec _ab .BinaryWriter )(_gbcc int ,_gfge error ){const _decf ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_dcbb .IsStripe {if _gbcc ,_gfge =_gcec .Write ([]byte {0x00,0x00});_gfge !=nil {return 0,_f .Wrap (_gfge ,_decf ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gbcc ,nil ;};_fbde :=make ([]byte ,2);_g .BigEndian .PutUint16 (_fbde ,_dcbb .MaxStripeSize |1<<15);
if _gbcc ,_gfge =_gcec .Write (_fbde );_gfge !=nil {return 0,_f .Wrapf (_gfge ,_decf ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_dcbb .MaxStripeSize );};return _gbcc ,nil ;};func (_dbeg *Header )readReferredToSegmentNumbers (_cbbg *_ab .Reader ,_bda int )([]int ,error ){const _aecb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_fcdb :=make ([]int ,_bda );if _bda > 0{_dbeg .RTSegments =make ([]*Header ,_bda );var (_cfag uint64 ;_ggd error ;);for _fdfa :=0;_fdfa < _bda ;_fdfa ++{_cfag ,_ggd =_cbbg .ReadBits (byte (_dbeg .referenceSize ())<<3);if _ggd !=nil {return nil ,_f .Wrapf (_ggd ,_aecb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_fdfa );
};_fcdb [_fdfa ]=int (_cfag &_a .MaxInt32 );};};return _fcdb ,nil ;};func (_abf *Header )GetSegmentData ()(Segmenter ,error ){var _bcag Segmenter ;if _abf .SegmentData !=nil {_bcag =_abf .SegmentData ;};if _bcag ==nil {_gfa ,_cbg :=_fgc [_abf .Type ];if !_cbg {return nil ,_ea .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_abf .Type ,_abf .Type );
};_bcag =_gfa ();_fg .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_abf .SegmentNumber ,_abf .SegmentDataStartOffset );
_bged ,_dgbdg :=_abf .subInputReader ();if _dgbdg !=nil {return nil ,_dgbdg ;};if _fgeg :=_bcag .Init (_abf ,_bged );_fgeg !=nil {_fg .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fgeg ,_bcag );
return nil ,_fgeg ;};_abf .SegmentData =_bcag ;};return _bcag ,nil ;};func (_cegc *GenericRegion )decodeTemplate0b (_aca ,_dbbd ,_bcfa int ,_bggg ,_ddbf int )(_aeee error ){const _efaa ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_gbfc ,_gag int ;_fbf ,_bfb int ;_ggbb byte ;_gbee int ;);if _aca >=1{_ggbb ,_aeee =_cegc .Bitmap .GetByte (_ddbf );if _aeee !=nil {return _f .Wrap (_aeee ,_efaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fbf =int (_ggbb );};if _aca >=2{_ggbb ,_aeee =_cegc .Bitmap .GetByte (_ddbf -_cegc .Bitmap .RowStride );
if _aeee !=nil {return _f .Wrap (_aeee ,_efaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bfb =int (_ggbb )<<6;};_gbfc =(_fbf &0xf0)|(_bfb &0x3800);for _bdb :=0;_bdb < _bcfa ;_bdb =_gbee {var (_abcgg byte ;_bga int ;);_gbee =_bdb +8;if _ecfb :=_dbbd -_bdb ;
_ecfb > 8{_bga =8;}else {_bga =_ecfb ;};if _aca > 0{_fbf <<=8;if _gbee < _dbbd {_ggbb ,_aeee =_cegc .Bitmap .GetByte (_ddbf +1);if _aeee !=nil {return _f .Wrap (_aeee ,_efaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fbf |=int (_ggbb );};};
if _aca > 1{_bfb <<=8;if _gbee < _dbbd {_ggbb ,_aeee =_cegc .Bitmap .GetByte (_ddbf -_cegc .Bitmap .RowStride +1);if _aeee !=nil {return _f .Wrap (_aeee ,_efaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bfb |=int (_ggbb )<<6;};};for _cedc :=0;
_cedc < _bga ;_cedc ++{_fff :=uint (7-_cedc );if _cegc ._efeg {_gag =_cegc .overrideAtTemplate0b (_gbfc ,_bdb +_cedc ,_aca ,int (_abcgg ),_cedc ,int (_fff ));_cegc ._ceb .SetIndex (int32 (_gag ));}else {_cegc ._ceb .SetIndex (int32 (_gbfc ));};var _gged int ;
_gged ,_aeee =_cegc ._geffb .DecodeBit (_cegc ._ceb );if _aeee !=nil {return _f .Wrap (_aeee ,_efaa ,"");};_abcgg |=byte (_gged <<_fff );_gbfc =((_gbfc &0x7bf7)<<1)|_gged |((_fbf >>_fff )&0x10)|((_bfb >>_fff )&0x800);};if _bede :=_cegc .Bitmap .SetByte (_bggg ,_abcgg );
_bede !=nil {return _f .Wrap (_bede ,_efaa ,"");};_bggg ++;_ddbf ++;};return nil ;};func (_cdd *template1 )form (_gefc ,_gea ,_beg ,_bff ,_ac int16 )int16 {return ((_gefc &0x02)<<8)|(_gea <<6)|((_beg &0x03)<<4)|(_bff <<1)|_ac ;};func (_dfdd *HalftoneRegion )combineGrayscalePlanes (_fffc []*_bg .Bitmap ,_becc int )error {_gad :=0;
for _dcaa :=0;_dcaa < _fffc [_becc ].Height ;_dcaa ++{for _dede :=0;_dede < _fffc [_becc ].Width ;_dede +=8{_aacb ,_gedd :=_fffc [_becc +1].GetByte (_gad );if _gedd !=nil {return _gedd ;};_cee ,_gedd :=_fffc [_becc ].GetByte (_gad );if _gedd !=nil {return _gedd ;
};_gedd =_fffc [_becc ].SetByte (_gad ,_bg .CombineBytes (_cee ,_aacb ,_bg .CmbOpXor ));if _gedd !=nil {return _gedd ;};_gad ++;};};return nil ;};func (_deea *SymbolDictionary )getSbSymCodeLen ()int8 {_dfab :=int8 (_a .Ceil (_a .Log (float64 (_deea ._ggcc +_deea .NumberOfNewSymbols ))/_a .Log (2)));
if _deea .IsHuffmanEncoded &&_dfab < 1{return 1;};return _dfab ;};func (_aaf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cce ,_gg ,_gdc ,_bge ,_ffe ,_bbb ,_dbd ,_egb ,_ec int )(_fa error ){var (_adc ,_ade int ;_ece ,_cb int ;_ecg ,_dgc int ;
_adfg byte ;);if _cce > 0{_adfg ,_fa =_aaf .RegionBitmap .GetByte (_dbd -_gdc );if _fa !=nil {return _fa ;};_ece =int (_adfg );};if _egb > 0&&_egb <=_aaf .ReferenceBitmap .Height {_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec -_bge +_bbb );if _fa !=nil {return _fa ;
};_cb =int (_adfg )<<2;};if _egb >=0&&_egb < _aaf .ReferenceBitmap .Height {_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec +_bbb );if _fa !=nil {return _fa ;};_ecg =int (_adfg );};if _egb > -2&&_egb < _aaf .ReferenceBitmap .Height -1{_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec +_bge +_bbb );
if _fa !=nil {return _fa ;};_dgc =int (_adfg );};_adc =((_ece >>5)&0x6)|((_dgc >>2)&0x30)|(_ecg &0xc0)|(_cb &0x200);_ade =((_dgc >>2)&0x70)|(_ecg &0xc0)|(_cb &0x700);var _eca int ;for _age :=0;_age < _ffe ;_age =_eca {var (_dbc int ;_cbf int ;);_eca =_age +8;
if _dbc =_gg -_age ;_dbc > 8{_dbc =8;};_efe :=_eca < _gg ;_aea :=_eca < _aaf .ReferenceBitmap .Width ;_ebd :=_bbb +1;if _cce > 0{_adfg =0;if _efe {_adfg ,_fa =_aaf .RegionBitmap .GetByte (_dbd -_gdc +1);if _fa !=nil {return _fa ;};};_ece =(_ece <<8)|int (_adfg );
};if _egb > 0&&_egb <=_aaf .ReferenceBitmap .Height {var _bdfg int ;if _aea {_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec -_bge +_ebd );if _fa !=nil {return _fa ;};_bdfg =int (_adfg )<<2;};_cb =(_cb <<8)|_bdfg ;};if _egb >=0&&_egb < _aaf .ReferenceBitmap .Height {_adfg =0;
if _aea {_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec +_ebd );if _fa !=nil {return _fa ;};};_ecg =(_ecg <<8)|int (_adfg );};if _egb > -2&&_egb < (_aaf .ReferenceBitmap .Height -1){_adfg =0;if _aea {_adfg ,_fa =_aaf .ReferenceBitmap .GetByte (_ec +_bge +_ebd );
if _fa !=nil {return _fa ;};};_dgc =(_dgc <<8)|int (_adfg );};for _egc :=0;_egc < _dbc ;_egc ++{var _cbfd int ;_feg :=(_ade >>4)&0x1ff;switch _feg {case 0x1ff:_cbfd =1;case 0x00:_cbfd =0;default:_aaf ._gf .SetIndex (int32 (_adc ));_cbfd ,_fa =_aaf ._edc .DecodeBit (_aaf ._gf );
if _fa !=nil {return _fa ;};};_ccf :=uint (7-_egc );_cbf |=_cbfd <<_ccf ;_adc =((_adc &0x0d6)<<1)|_cbfd |(_ece >>_ccf +5)&0x002|((_dgc >>_ccf +2)&0x010)|((_ecg >>_ccf )&0x040)|((_cb >>_ccf )&0x200);_ade =((_ade &0xdb)<<1)|((_dgc >>_ccf +2)&0x010)|((_ecg >>_ccf )&0x080)|((_cb >>_ccf )&0x400);
};_fa =_aaf .RegionBitmap .SetByte (_dbd ,byte (_cbf ));if _fa !=nil {return _fa ;};_dbd ++;_ec ++;};return nil ;};func (_eaf *template1 )setIndex (_aba *_gc .DecoderStats ){_aba .SetIndex (0x080)};func (_aeda *TextRegion )String ()string {_gbfcd :=&_cfb .Builder {};
_gbfcd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_gbfcd .WriteString (_aeda .RegionInfo .String ()+"\u000a");_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_aeda .SbrTemplate ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_aeda .SbDsOffset ));_gbfcd .WriteString (_ea .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_aeda .DefaultPixel ));
_gbfcd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_aeda .CombinationOperator ));_gbfcd .WriteString (_ea .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_aeda .IsTransposed ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aeda .ReferenceCorner ));_gbfcd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_aeda .UseRefinement ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_aeda .IsHuffmanEncoded ));if _aeda .IsHuffmanEncoded {_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aeda .SbHuffRSize ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_aeda .SbHuffRDY ));_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_aeda .SbHuffRDX ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_aeda .SbHuffRDHeight ));_gbfcd .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_aeda .SbHuffRDWidth ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_aeda .SbHuffDT ));_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_aeda .SbHuffDS ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_aeda .SbHuffFS ));};_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aeda .SbrATX ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_aeda .SbrATY ));_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aeda .NumberOfSymbolInstances ));
_gbfcd .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aeda .SbrATX ));return _gbfcd .String ();};type TextRegion struct{_aeeba *_ab .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;
DefaultPixel int8 ;CombinationOperator _bg .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;
SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dbgd int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_bg .Bitmap ;Symbols []*_bg .Bitmap ;_cgfb *_gc .Decoder ;_fdeda *GenericRefinementRegion ;
_accda *_gc .DecoderStats ;_cdgf *_gc .DecoderStats ;_dbfa *_gc .DecoderStats ;_bbdcb *_gc .DecoderStats ;_bgede *_gc .DecoderStats ;_fecbe *_gc .DecoderStats ;_dcfa *_gc .DecoderStats ;_gbg *_gc .DecoderStats ;_aga *_gc .DecoderStats ;_gefb *_gc .DecoderStats ;
_ebec *_gc .DecoderStats ;_cfbcd int8 ;_cdfcc *_abd .FixedSizeTable ;Header *Header ;_gec _abd .Tabler ;_geae _abd .Tabler ;_faaf _abd .Tabler ;_afeae _abd .Tabler ;_geed _abd .Tabler ;_fbbg _abd .Tabler ;_cbbb _abd .Tabler ;_fdac _abd .Tabler ;_egegd ,_fcbg map[int ]int ;
_becca []int ;_agcg *_bg .Points ;_adge *_bg .Bitmaps ;_dggf *_cc .IntSlice ;_effb ,_eacd int ;_dggcd *_bg .Boxes ;};var _ _abd .BasicTabler =&TableSegment {};func (_cdfg *GenericRegion )updateOverrideFlags ()error {const _fgda ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cdfg .GBAtX ==nil ||_cdfg .GBAtY ==nil {return nil ;};if len (_cdfg .GBAtX )!=len (_cdfg .GBAtY ){return _f .Errorf (_fgda ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cdfg .GBAtX ),len (_cdfg .GBAtY ));
};_cdfg .GBAtOverride =make ([]bool ,len (_cdfg .GBAtX ));switch _cdfg .GBTemplate {case 0:if !_cdfg .UseExtTemplates {if _cdfg .GBAtX [0]!=3||_cdfg .GBAtY [0]!=-1{_cdfg .setOverrideFlag (0);};if _cdfg .GBAtX [1]!=-3||_cdfg .GBAtY [1]!=-1{_cdfg .setOverrideFlag (1);
};if _cdfg .GBAtX [2]!=2||_cdfg .GBAtY [2]!=-2{_cdfg .setOverrideFlag (2);};if _cdfg .GBAtX [3]!=-2||_cdfg .GBAtY [3]!=-2{_cdfg .setOverrideFlag (3);};}else {if _cdfg .GBAtX [0]!=-2||_cdfg .GBAtY [0]!=0{_cdfg .setOverrideFlag (0);};if _cdfg .GBAtX [1]!=0||_cdfg .GBAtY [1]!=-2{_cdfg .setOverrideFlag (1);
};if _cdfg .GBAtX [2]!=-2||_cdfg .GBAtY [2]!=-1{_cdfg .setOverrideFlag (2);};if _cdfg .GBAtX [3]!=-1||_cdfg .GBAtY [3]!=-2{_cdfg .setOverrideFlag (3);};if _cdfg .GBAtX [4]!=1||_cdfg .GBAtY [4]!=-2{_cdfg .setOverrideFlag (4);};if _cdfg .GBAtX [5]!=2||_cdfg .GBAtY [5]!=-1{_cdfg .setOverrideFlag (5);
};if _cdfg .GBAtX [6]!=-3||_cdfg .GBAtY [6]!=0{_cdfg .setOverrideFlag (6);};if _cdfg .GBAtX [7]!=-4||_cdfg .GBAtY [7]!=0{_cdfg .setOverrideFlag (7);};if _cdfg .GBAtX [8]!=2||_cdfg .GBAtY [8]!=-2{_cdfg .setOverrideFlag (8);};if _cdfg .GBAtX [9]!=3||_cdfg .GBAtY [9]!=-1{_cdfg .setOverrideFlag (9);
};if _cdfg .GBAtX [10]!=-2||_cdfg .GBAtY [10]!=-2{_cdfg .setOverrideFlag (10);};if _cdfg .GBAtX [11]!=-3||_cdfg .GBAtY [11]!=-1{_cdfg .setOverrideFlag (11);};};case 1:if _cdfg .GBAtX [0]!=3||_cdfg .GBAtY [0]!=-1{_cdfg .setOverrideFlag (0);};case 2:if _cdfg .GBAtX [0]!=2||_cdfg .GBAtY [0]!=-1{_cdfg .setOverrideFlag (0);
};case 3:if _cdfg .GBAtX [0]!=2||_cdfg .GBAtY [0]!=-1{_cdfg .setOverrideFlag (0);};};return nil ;};func (_cgcba *GenericRefinementRegion )updateOverride ()error {if _cgcba .GrAtX ==nil ||_cgcba .GrAtY ==nil {return _gd .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cgcba .GrAtX )!=len (_cgcba .GrAtY ){return _gd .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cgcba ._edd =make ([]bool ,len (_cgcba .GrAtX ));switch _cgcba .TemplateID {case 0:if _cgcba .GrAtX [0]!=-1&&_cgcba .GrAtY [0]!=-1{_cgcba ._edd [0]=true ;
_cgcba ._cge =true ;};if _cgcba .GrAtX [1]!=-1&&_cgcba .GrAtY [1]!=-1{_cgcba ._edd [1]=true ;_cgcba ._cge =true ;};case 1:_cgcba ._cge =false ;};return nil ;};type TableSegment struct{_gebgd *_ab .Reader ;_ddfc int32 ;_gbdc int32 ;_bfbfd int32 ;_dafb int32 ;
_acga int32 ;};func (_afc *GenericRefinementRegion )GetRegionBitmap ()(*_bg .Bitmap ,error ){var _ee error ;_fg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ee !=nil {_fg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ee );
}else {_fg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _afc .RegionBitmap !=nil {return _afc .RegionBitmap ,nil ;};_eg :=0;if _afc .ReferenceBitmap ==nil {_afc .ReferenceBitmap ,_ee =_afc .getGrReference ();if _ee !=nil {return nil ,_ee ;};};if _afc ._edc ==nil {_afc ._edc ,_ee =_gc .New (_afc ._af );
if _ee !=nil {return nil ,_ee ;};};if _afc ._gf ==nil {_afc ._gf =_gc .NewStats (8192,1);};_afc .RegionBitmap =_bg .New (int (_afc .RegionInfo .BitmapWidth ),int (_afc .RegionInfo .BitmapHeight ));if _afc .TemplateID ==0{if _ee =_afc .updateOverride ();
_ee !=nil {return nil ,_ee ;};};_fb :=(_afc .RegionBitmap .Width +7)&-8;var _be int ;if _afc .IsTPGROn {_be =int (-_afc .ReferenceDY )*_afc .ReferenceBitmap .RowStride ;};_da :=_be +1;for _aae :=0;_aae < _afc .RegionBitmap .Height ;_aae ++{if _afc .IsTPGROn {_ad ,_adf :=_afc .decodeSLTP ();
if _adf !=nil {return nil ,_adf ;};_eg ^=_ad ;};if _eg ==0{_ee =_afc .decodeOptimized (_aae ,_afc .RegionBitmap .Width ,_afc .RegionBitmap .RowStride ,_afc .ReferenceBitmap .RowStride ,_fb ,_be ,_da );if _ee !=nil {return nil ,_ee ;};}else {_ee =_afc .decodeTypicalPredictedLine (_aae ,_afc .RegionBitmap .Width ,_afc .RegionBitmap .RowStride ,_afc .ReferenceBitmap .RowStride ,_fb ,_be );
if _ee !=nil {return nil ,_ee ;};};};return _afc .RegionBitmap ,nil ;};func (_gcdd *SymbolDictionary )InitEncode (symbols *_bg .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ecfg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gcdd .SdATX =[]int8 {3,-3,2,-2};_gcdd .SdATY =[]int8 {-1,-1,-2,-2};_gcdd ._aafb =symbols ;_gcdd ._bbab =make ([]int ,len (symbolList ));copy (_gcdd ._bbab ,symbolList );if len (_gcdd ._bbab )!=_gcdd ._aafb .Size (){return _f .Error (_ecfg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gcdd .NumberOfNewSymbols =uint32 (symbols .Size ());_gcdd .NumberOfExportedSymbols =uint32 (symbols .Size ());_gcdd ._gfgc =symbolMap ;_gcdd ._afgc =unborderSymbols ;return nil ;};func (_cbc *template0 )form (_beaa ,_ecfd ,_fca ,_bbdc ,_ebdg int16 )int16 {return (_beaa <<10)|(_ecfd <<7)|(_fca <<4)|(_bbdc <<1)|_ebdg ;
};func (_fdga *HalftoneRegion )computeY (_eeag ,_dfa int )int {return _fdga .shiftAndFill (int (_fdga .HGridY )+_eeag *int (_fdga .HRegionX )-_dfa *int (_fdga .HRegionY ));};func (_acge *SymbolDictionary )String ()string {_gbbb :=&_cfb .Builder {};_gbbb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_gbbb .WriteString (_ea .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_acge .SdrTemplate ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_acge .SdTemplate ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_acge ._beaad ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_acge ._faff ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_acge .SdHuffAggInstanceSelection ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_acge .SdHuffBMSizeSelection ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_acge .SdHuffDecodeWidthSelection ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_acge .SdHuffDecodeHeightSelection ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_acge .UseRefinementAggregation ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_acge .IsHuffmanEncoded ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_acge .SdATX ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_acge .SdATY ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_acge .SdrATX ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_acge .SdrATY ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_acge .NumberOfExportedSymbols ));
_gbbb .WriteString (_ea .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_acge .NumberOfNewSymbols ));_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_acge ._ggcc ));
_gbbb .WriteString (_ea .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_acge ._dbbeb ));return _gbbb .String ();};func (_dgef *GenericRegion )overrideAtTemplate1 (_gcg ,_bbbg ,_dgfe ,_bgf ,_aadf int )int {_gcg &=0x1FF7;
if _dgef .GBAtY [0]==0&&_dgef .GBAtX [0]>=-int8 (_aadf ){_gcg |=(_bgf >>uint (7-(int8 (_aadf )+_dgef .GBAtX [0]))&0x1)<<3;}else {_gcg |=int (_dgef .getPixel (_bbbg +int (_dgef .GBAtX [0]),_dgfe +int (_dgef .GBAtY [0])))<<3;};return _gcg ;};func (_dbg *SymbolDictionary )Encode (w _ab .BinaryWriter )(_gaed int ,_effca error ){const _ecedg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _dbg ==nil {return 0,_f .Error (_ecedg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _gaed ,_effca =_dbg .encodeFlags (w );_effca !=nil {return _gaed ,_f .Wrap (_effca ,_ecedg ,"");
};_acgc ,_effca :=_dbg .encodeATFlags (w );if _effca !=nil {return _gaed ,_f .Wrap (_effca ,_ecedg ,"");};_gaed +=_acgc ;if _acgc ,_effca =_dbg .encodeRefinementATFlags (w );_effca !=nil {return _gaed ,_f .Wrap (_effca ,_ecedg ,"");};_gaed +=_acgc ;if _acgc ,_effca =_dbg .encodeNumSyms (w );
_effca !=nil {return _gaed ,_f .Wrap (_effca ,_ecedg ,"");};_gaed +=_acgc ;if _acgc ,_effca =_dbg .encodeSymbols (w );_effca !=nil {return _gaed ,_f .Wrap (_effca ,_ecedg ,"");};_gaed +=_acgc ;return _gaed ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_bg .Bitmap ,error );};func (_becg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _becg .RegionSegment };func (_aegg *PatternDictionary )readIsMMREncoded ()error {_addc ,_efgd :=_aegg ._cgcbf .ReadBit ();if _efgd !=nil {return _efgd ;
};if _addc !=0{_aegg .IsMMREncoded =true ;};return nil ;};func (_bdfa *TableSegment )StreamReader ()*_ab .Reader {return _bdfa ._gebgd };func (_fabd *TextRegion )setCodingStatistics ()error {if _fabd ._accda ==nil {_fabd ._accda =_gc .NewStats (512,1);
};if _fabd ._cdgf ==nil {_fabd ._cdgf =_gc .NewStats (512,1);};if _fabd ._dbfa ==nil {_fabd ._dbfa =_gc .NewStats (512,1);};if _fabd ._bbdcb ==nil {_fabd ._bbdcb =_gc .NewStats (512,1);};if _fabd ._bgede ==nil {_fabd ._bgede =_gc .NewStats (512,1);};if _fabd ._fecbe ==nil {_fabd ._fecbe =_gc .NewStats (512,1);
};if _fabd ._dcfa ==nil {_fabd ._dcfa =_gc .NewStats (512,1);};if _fabd ._gbg ==nil {_fabd ._gbg =_gc .NewStats (1<<uint (_fabd ._cfbcd ),1);};if _fabd ._aga ==nil {_fabd ._aga =_gc .NewStats (512,1);};if _fabd ._gefb ==nil {_fabd ._gefb =_gc .NewStats (512,1);
};if _fabd ._cgfb ==nil {var _ecba error ;_fabd ._cgfb ,_ecba =_gc .New (_fabd ._aeeba );if _ecba !=nil {return _ecba ;};};return nil ;};func (_edbg *SymbolDictionary )setRetainedCodingContexts (_bbgg *SymbolDictionary ){_edbg ._eccd =_bbgg ._eccd ;_edbg .IsHuffmanEncoded =_bbgg .IsHuffmanEncoded ;
_edbg .UseRefinementAggregation =_bbgg .UseRefinementAggregation ;_edbg .SdTemplate =_bbgg .SdTemplate ;_edbg .SdrTemplate =_bbgg .SdrTemplate ;_edbg .SdATX =_bbgg .SdATX ;_edbg .SdATY =_bbgg .SdATY ;_edbg .SdrATX =_bbgg .SdrATX ;_edbg .SdrATY =_bbgg .SdrATY ;
_edbg ._caacd =_bbgg ._caacd ;};func (_cebg *GenericRegion )Init (h *Header ,r *_ab .Reader )error {_cebg .RegionSegment =NewRegionSegment (r );_cebg ._dgf =r ;return _cebg .parseHeader ();};func (_gfaa *SymbolDictionary )encodeNumSyms (_cacd _ab .BinaryWriter )(_aecf int ,_beae error ){const _daff ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_beaf :=make ([]byte ,4);_g .BigEndian .PutUint32 (_beaf ,_gfaa .NumberOfExportedSymbols );if _aecf ,_beae =_cacd .Write (_beaf );_beae !=nil {return _aecf ,_f .Wrap (_beae ,_daff ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_g .BigEndian .PutUint32 (_beaf ,_gfaa .NumberOfNewSymbols );_edaeb ,_beae :=_cacd .Write (_beaf );if _beae !=nil {return _aecf ,_f .Wrap (_beae ,_daff ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _aecf +_edaeb ,nil ;};func (_bdab *SymbolDictionary )setExportedSymbols (_cbgb []int ){for _ccd :=uint32 (0);
_ccd < _bdab ._ggcc +_bdab .NumberOfNewSymbols ;_ccd ++{if _cbgb [_ccd ]==1{var _bffd *_bg .Bitmap ;if _ccd < _bdab ._ggcc {_bffd =_bdab ._babb [_ccd ];}else {_bffd =_bdab ._ddc [_ccd -_bdab ._ggcc ];};_fg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bffd );
_bdab ._beff =append (_bdab ._beff ,_bffd );};};};type Type int ;func (_gaea *HalftoneRegion )Init (hd *Header ,r *_ab .Reader )error {_gaea ._efcb =r ;_gaea ._bbaf =hd ;_gaea .RegionSegment =NewRegionSegment (r );return _gaea .parseHeader ();};func (_efg *GenericRegion )GetRegionBitmap ()(_egbc *_bg .Bitmap ,_gcb error ){if _efg .Bitmap !=nil {return _efg .Bitmap ,nil ;
};if _efg .IsMMREncoded {if _efg ._baca ==nil {_efg ._baca ,_gcb =_fc .New (_efg ._dgf ,int (_efg .RegionSegment .BitmapWidth ),int (_efg .RegionSegment .BitmapHeight ),_efg .DataOffset ,_efg .DataLength );if _gcb !=nil {return nil ,_gcb ;};};_efg .Bitmap ,_gcb =_efg ._baca .UncompressMMR ();
return _efg .Bitmap ,_gcb ;};if _gcb =_efg .updateOverrideFlags ();_gcb !=nil {return nil ,_gcb ;};var _cfgf int ;if _efg ._geffb ==nil {_efg ._geffb ,_gcb =_gc .New (_efg ._dgf );if _gcb !=nil {return nil ,_gcb ;};};if _efg ._ceb ==nil {_efg ._ceb =_gc .NewStats (65536,1);
};_efg .Bitmap =_bg .New (int (_efg .RegionSegment .BitmapWidth ),int (_efg .RegionSegment .BitmapHeight ));_eeac :=int (uint32 (_efg .Bitmap .Width +7)&(^uint32 (7)));for _eddb :=0;_eddb < _efg .Bitmap .Height ;_eddb ++{if _efg .IsTPGDon {var _eaga int ;
_eaga ,_gcb =_efg .decodeSLTP ();if _gcb !=nil {return nil ,_gcb ;};_cfgf ^=_eaga ;};if _cfgf ==1{if _eddb > 0{if _gcb =_efg .copyLineAbove (_eddb );_gcb !=nil {return nil ,_gcb ;};};}else {if _gcb =_efg .decodeLine (_eddb ,_efg .Bitmap .Width ,_eeac );
_gcb !=nil {return nil ,_gcb ;};};};return _efg .Bitmap ,nil ;};func (_bcefe *TableSegment )HtRS ()int32 {return _bcefe ._bfbfd };func (_ddg *GenericRefinementRegion )decodeTemplate (_ddb ,_caa ,_dfe ,_bed ,_gae ,_eea ,_ffb ,_gef ,_aad ,_bea int ,_ddba templater )(_bbd error ){var (_gff ,_agga ,_cfg ,_eaa ,_dfd int16 ;
_cff ,_afe ,_dbca ,_aggg int ;_babf byte ;);if _aad >=1&&(_aad -1)< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -_bed );if _bbd !=nil {return _bbd ;};_cff =int (_babf );};if _aad >=0&&(_aad )< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea );
if _bbd !=nil {return _bbd ;};_afe =int (_babf );};if _aad >=-1&&(_aad +1)< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea +_bed );if _bbd !=nil {return _bbd ;};_dbca =int (_babf );};_bea ++;if _ddb >=1{_babf ,_bbd =_ddg .RegionBitmap .GetByte (_gef -_dfe );
if _bbd !=nil {return _bbd ;};_aggg =int (_babf );};_gef ++;_aege :=_ddg .ReferenceDX %8;_eec :=6+_aege ;_fd :=_bea %_bed ;if _eec >=0{if _eec < 8{_gff =int16 (_cff >>uint (_eec ))&0x07;};if _eec < 8{_agga =int16 (_afe >>uint (_eec ))&0x07;};if _eec < 8{_cfg =int16 (_dbca >>uint (_eec ))&0x07;
};if _eec ==6&&_fd > 1{if _aad >=1&&(_aad -1)< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -_bed -2);if _bbd !=nil {return _bbd ;};_gff |=int16 (_babf <<2)&0x04;};if _aad >=0&&_aad < _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -2);
if _bbd !=nil {return _bbd ;};_agga |=int16 (_babf <<2)&0x04;};if _aad >=-1&&_aad +1< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea +_bed -2);if _bbd !=nil {return _bbd ;};_cfg |=int16 (_babf <<2)&0x04;};};if _eec ==0{_cff =0;
_afe =0;_dbca =0;if _fd < _bed -1{if _aad >=1&&_aad -1< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -_bed );if _bbd !=nil {return _bbd ;};_cff =int (_babf );};if _aad >=0&&_aad < _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea );
if _bbd !=nil {return _bbd ;};_afe =int (_babf );};if _aad >=-1&&_aad +1< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea +_bed );if _bbd !=nil {return _bbd ;};_dbca =int (_babf );};};_bea ++;};}else {_gff =int16 (_cff <<1)&0x07;
_agga =int16 (_afe <<1)&0x07;_cfg =int16 (_dbca <<1)&0x07;_cff =0;_afe =0;_dbca =0;if _fd < _bed -1{if _aad >=1&&_aad -1< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -_bed );if _bbd !=nil {return _bbd ;};_cff =int (_babf );
};if _aad >=0&&_aad < _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea );if _bbd !=nil {return _bbd ;};_afe =int (_babf );};if _aad >=-1&&_aad +1< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea +_bed );
if _bbd !=nil {return _bbd ;};_dbca =int (_babf );};_bea ++;};_gff |=int16 ((_cff >>7)&0x07);_agga |=int16 ((_afe >>7)&0x07);_cfg |=int16 ((_dbca >>7)&0x07);};_eaa =int16 (_aggg >>6);_dfd =0;_daf :=(2-_aege )%8;_cff <<=uint (_daf );_afe <<=uint (_daf );
_dbca <<=uint (_daf );_aggg <<=2;var _bgc int ;for _ccb :=0;_ccb < _caa ;_ccb ++{_geff :=_ccb &0x07;_agc :=_ddba .form (_gff ,_agga ,_cfg ,_eaa ,_dfd );if _ddg ._cge {_babf ,_bbd =_ddg .RegionBitmap .GetByte (_ddg .RegionBitmap .GetByteIndex (_ccb ,_ddb ));
if _bbd !=nil {return _bbd ;};_ddg ._gf .SetIndex (int32 (_ddg .overrideAtTemplate0 (int (_agc ),_ccb ,_ddb ,int (_babf ),_geff )));}else {_ddg ._gf .SetIndex (int32 (_agc ));};_bgc ,_bbd =_ddg ._edc .DecodeBit (_ddg ._gf );if _bbd !=nil {return _bbd ;
};if _bbd =_ddg .RegionBitmap .SetPixel (_ccb ,_ddb ,byte (_bgc ));_bbd !=nil {return _bbd ;};_gff =((_gff <<1)|0x01&int16 (_cff >>7))&0x07;_agga =((_agga <<1)|0x01&int16 (_afe >>7))&0x07;_cfg =((_cfg <<1)|0x01&int16 (_dbca >>7))&0x07;_eaa =((_eaa <<1)|0x01&int16 (_aggg >>7))&0x07;
_dfd =int16 (_bgc );if (_ccb -int (_ddg .ReferenceDX ))%8==5{_cff =0;_afe =0;_dbca =0;if ((_ccb -int (_ddg .ReferenceDX ))/8)+1< _ddg .ReferenceBitmap .RowStride {if _aad >=1&&(_aad -1)< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea -_bed );
if _bbd !=nil {return _bbd ;};_cff =int (_babf );};if _aad >=0&&_aad < _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea );if _bbd !=nil {return _bbd ;};_afe =int (_babf );};if _aad >=-1&&(_aad +1)< _ddg .ReferenceBitmap .Height {_babf ,_bbd =_ddg .ReferenceBitmap .GetByte (_bea +_bed );
if _bbd !=nil {return _bbd ;};_dbca =int (_babf );};};_bea ++;}else {_cff <<=1;_afe <<=1;_dbca <<=1;};if _geff ==5&&_ddb >=1{if ((_ccb >>3)+1)>=_ddg .RegionBitmap .RowStride {_aggg =0;}else {_babf ,_bbd =_ddg .RegionBitmap .GetByte (_gef -_dfe );if _bbd !=nil {return _bbd ;
};_aggg =int (_babf );};_gef ++;}else {_aggg <<=1;};};return nil ;};type SegmentEncoder interface{Encode (_dbbe _ab .BinaryWriter )(_fcgc int ,_dgba error );};var _ templater =&template0 {};type GenericRegion struct{_dgf *_ab .Reader ;DataHeaderOffset int64 ;
DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_efeg bool ;Bitmap *_bg .Bitmap ;
_geffb *_gc .Decoder ;_ceb *_gc .DecoderStats ;_baca *_fc .Decoder ;};func (_cfge *TextRegion )blit (_acea *_bg .Bitmap ,_dcfd int64 )error {if _cfge .IsTransposed ==0&&(_cfge .ReferenceCorner ==2||_cfge .ReferenceCorner ==3){_cfge ._dbgd +=int64 (_acea .Width -1);
}else if _cfge .IsTransposed ==1&&(_cfge .ReferenceCorner ==0||_cfge .ReferenceCorner ==2){_cfge ._dbgd +=int64 (_acea .Height -1);};_gecg :=_cfge ._dbgd ;if _cfge .IsTransposed ==1{_gecg ,_dcfd =_dcfd ,_gecg ;};switch _cfge .ReferenceCorner {case 0:_dcfd -=int64 (_acea .Height -1);
case 2:_dcfd -=int64 (_acea .Height -1);_gecg -=int64 (_acea .Width -1);case 3:_gecg -=int64 (_acea .Width -1);};_ddbgg :=_bg .Blit (_acea ,_cfge .RegionBitmap ,int (_gecg ),int (_dcfd ),_cfge .CombinationOperator );if _ddbgg !=nil {return _ddbgg ;};if _cfge .IsTransposed ==0&&(_cfge .ReferenceCorner ==0||_cfge .ReferenceCorner ==1){_cfge ._dbgd +=int64 (_acea .Width -1);
};if _cfge .IsTransposed ==1&&(_cfge .ReferenceCorner ==1||_cfge .ReferenceCorner ==3){_cfge ._dbgd +=int64 (_acea .Height -1);};return nil ;};func (_fagdb *TextRegion )parseHeader ()error {var _ebfe error ;_fg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _ebfe !=nil {_fg .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ebfe );
}else {_fg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ebfe =_fagdb .RegionInfo .parseHeader ();
_ebfe !=nil {return _ebfe ;};if _ebfe =_fagdb .readRegionFlags ();_ebfe !=nil {return _ebfe ;};if _fagdb .IsHuffmanEncoded {if _ebfe =_fagdb .readHuffmanFlags ();_ebfe !=nil {return _ebfe ;};};if _ebfe =_fagdb .readUseRefinement ();_ebfe !=nil {return _ebfe ;
};if _ebfe =_fagdb .readAmountOfSymbolInstances ();_ebfe !=nil {return _ebfe ;};if _ebfe =_fagdb .getSymbols ();_ebfe !=nil {return _ebfe ;};if _ebfe =_fagdb .computeSymbolCodeLength ();_ebfe !=nil {return _ebfe ;};if _ebfe =_fagdb .checkInput ();_ebfe !=nil {return _ebfe ;
};_fg .Log .Trace ("\u0025\u0073",_fagdb .String ());return nil ;};func (_dfbb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dfbb .IsHuffmanEncoded {switch _dfbb .SdHuffDecodeWidthSelection {case 0:_fabf ,_aef :=_abd .GetStandardTable (2);
if _aef !=nil {return 0,_aef ;};return _fabf .Decode (_dfbb ._dgff );case 1:_bbad ,_agde :=_abd .GetStandardTable (3);if _agde !=nil {return 0,_agde ;};return _bbad .Decode (_dfbb ._dgff );case 3:if _dfbb ._baaaa ==nil {var _cbd int ;if _dfbb .SdHuffDecodeHeightSelection ==3{_cbd ++;
};_abe ,_ccgf :=_dfbb .getUserTable (_cbd );if _ccgf !=nil {return 0,_ccgf ;};_dfbb ._baaaa =_abe ;};return _dfbb ._baaaa .Decode (_dfbb ._dgff );};}else {_geeaa ,_bfg :=_dfbb ._eccd .DecodeInt (_dfbb ._cefdc );if _bfg !=nil {return 0,_bfg ;};return int64 (_geeaa ),nil ;
};return 0,nil ;};func (_befg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _befg ._gcfc ==nil {var (_fdedc int ;_ceggf error ;);if _befg .SdHuffDecodeHeightSelection ==3{_fdedc ++;};if _befg .SdHuffDecodeWidthSelection ==3{_fdedc ++;};_befg ._gcfc ,_ceggf =_befg .getUserTable (_fdedc );
if _ceggf !=nil {return 0,_ceggf ;};};return _befg ._gcfc .Decode (_befg ._dgff );};func _bebfb (_efbg *_ab .Reader ,_bggge *Header )*TextRegion {_geda :=&TextRegion {_aeeba :_efbg ,Header :_bggge ,RegionInfo :NewRegionSegment (_efbg )};return _geda ;};
func (_cagb *Header )writeReferredToSegments (_edbcf _ab .BinaryWriter )(_fcbd int ,_aegbc error ){const _edfb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_bbc uint16 ;
_caf uint32 ;);_dabf :=_cagb .referenceSize ();_dafd :=1;_fcg :=make ([]byte ,_dabf );for _ ,_gfea :=range _cagb .RTSNumbers {switch _dabf {case 4:_caf =uint32 (_gfea );_g .BigEndian .PutUint32 (_fcg ,_caf );_dafd ,_aegbc =_edbcf .Write (_fcg );if _aegbc !=nil {return 0,_f .Wrap (_aegbc ,_edfb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");
};case 2:_bbc =uint16 (_gfea );_g .BigEndian .PutUint16 (_fcg ,_bbc );_dafd ,_aegbc =_edbcf .Write (_fcg );if _aegbc !=nil {return 0,_f .Wrap (_aegbc ,_edfb ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _aegbc =_edbcf .WriteByte (byte (_gfea ));
_aegbc !=nil {return 0,_f .Wrap (_aegbc ,_edfb ,"\u0075\u0069\u006et\u0038");};};_fcbd +=_dafd ;};return _fcbd ,nil ;};func (_dedgg *TableSegment )Init (h *Header ,r *_ab .Reader )error {_dedgg ._gebgd =r ;return _dedgg .parseHeader ();};type SymbolDictionary struct{_dgff *_ab .Reader ;
SdrTemplate int8 ;SdTemplate int8 ;_beaad bool ;_faff bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_ggcc uint32 ;_babb []*_bg .Bitmap ;_dbbeb uint32 ;_ddc []*_bg .Bitmap ;_aecd _abd .Tabler ;_baaaa _abd .Tabler ;_gcfc _abd .Tabler ;
_bcbag _abd .Tabler ;_beff []*_bg .Bitmap ;_aabd []*_bg .Bitmap ;_eccd *_gc .Decoder ;_ggda *TextRegion ;_bddb *GenericRegion ;_gfgga *GenericRefinementRegion ;_caacd *_gc .DecoderStats ;_ffbd *_gc .DecoderStats ;_cefdc *_gc .DecoderStats ;_eaaf *_gc .DecoderStats ;
_defe *_gc .DecoderStats ;_dbdb *_gc .DecoderStats ;_gafd *_gc .DecoderStats ;_bgbe *_gc .DecoderStats ;_ebbg *_gc .DecoderStats ;_bccb int8 ;_aafb *_bg .Bitmaps ;_bbab []int ;_gfgc map[int ]int ;_afgc bool ;};func (_eeec *RegionSegment )Encode (w _ab .BinaryWriter )(_efgc int ,_bae error ){const _gacaa ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_dabcc :=make ([]byte ,4);_g .BigEndian .PutUint32 (_dabcc ,_eeec .BitmapWidth );_efgc ,_bae =w .Write (_dabcc );if _bae !=nil {return 0,_f .Wrap (_bae ,_gacaa ,"\u0057\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_dabcc ,_eeec .BitmapHeight );var _gacgf int ;
_gacgf ,_bae =w .Write (_dabcc );if _bae !=nil {return 0,_f .Wrap (_bae ,_gacaa ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_efgc +=_gacgf ;_g .BigEndian .PutUint32 (_dabcc ,_eeec .XLocation );_gacgf ,_bae =w .Write (_dabcc );if _bae !=nil {return 0,_f .Wrap (_bae ,_gacaa ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_efgc +=_gacgf ;_g .BigEndian .PutUint32 (_dabcc ,_eeec .YLocation );_gacgf ,_bae =w .Write (_dabcc );if _bae !=nil {return 0,_f .Wrap (_bae ,_gacaa ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_efgc +=_gacgf ;if _bae =w .WriteByte (byte (_eeec .CombinaionOperator )&0x07);
_bae !=nil {return 0,_f .Wrap (_bae ,_gacaa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_efgc ++;return _efgc ,nil ;};func (_bbac *TextRegion )initSymbols ()error {const _fgbb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_bbgd :=range _bbac .Header .RTSegments {if _bbgd ==nil {return _f .Error (_fgbb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _bbgd .Type ==0{_dcbc ,_abcf :=_bbgd .GetSegmentData ();if _abcf !=nil {return _f .Wrap (_abcf ,_fgbb ,"");};_gecb ,_gefa :=_dcbc .(*SymbolDictionary );if !_gefa {return _f .Error (_fgbb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gecb ._ebbg =_bbac ._gbg ;_gddg ,_abcf :=_gecb .GetDictionary ();if _abcf !=nil {return _f .Wrap (_abcf ,_fgbb ,"");};_bbac .Symbols =append (_bbac .Symbols ,_gddg ...);};};_bbac .NumberOfSymbols =uint32 (len (_bbac .Symbols ));return nil ;};func (_ceeg *SymbolDictionary )setRefinementAtPixels ()error {if !_ceeg .UseRefinementAggregation ||_ceeg .SdrTemplate !=0{return nil ;
};if _gcdc :=_ceeg .readRefinementAtPixels (2);_gcdc !=nil {return _gcdc ;};return nil ;};func (_eed *HalftoneRegion )parseHeader ()error {if _begf :=_eed .RegionSegment .parseHeader ();_begf !=nil {return _begf ;};_ddbg ,_agba :=_eed ._efcb .ReadBit ();
if _agba !=nil {return _agba ;};_eed .HDefaultPixel =int8 (_ddbg );_dgg ,_agba :=_eed ._efcb .ReadBits (3);if _agba !=nil {return _agba ;};_eed .CombinationOperator =_bg .CombinationOperator (_dgg &0xf);_ddbg ,_agba =_eed ._efcb .ReadBit ();if _agba !=nil {return _agba ;
};if _ddbg ==1{_eed .HSkipEnabled =true ;};_dgg ,_agba =_eed ._efcb .ReadBits (2);if _agba !=nil {return _agba ;};_eed .HTemplate =byte (_dgg &0xf);_ddbg ,_agba =_eed ._efcb .ReadBit ();if _agba !=nil {return _agba ;};if _ddbg ==1{_eed .IsMMREncoded =true ;
};_dgg ,_agba =_eed ._efcb .ReadBits (32);if _agba !=nil {return _agba ;};_eed .HGridWidth =uint32 (_dgg &_a .MaxUint32 );_dgg ,_agba =_eed ._efcb .ReadBits (32);if _agba !=nil {return _agba ;};_eed .HGridHeight =uint32 (_dgg &_a .MaxUint32 );_dgg ,_agba =_eed ._efcb .ReadBits (32);
if _agba !=nil {return _agba ;};_eed .HGridX =int32 (_dgg &_a .MaxInt32 );_dgg ,_agba =_eed ._efcb .ReadBits (32);if _agba !=nil {return _agba ;};_eed .HGridY =int32 (_dgg &_a .MaxInt32 );_dgg ,_agba =_eed ._efcb .ReadBits (16);if _agba !=nil {return _agba ;
};_eed .HRegionX =uint16 (_dgg &_a .MaxUint16 );_dgg ,_agba =_eed ._efcb .ReadBits (16);if _agba !=nil {return _agba ;};_eed .HRegionY =uint16 (_dgg &_a .MaxUint16 );if _agba =_eed .computeSegmentDataStructure ();_agba !=nil {return _agba ;};return _eed .checkInput ();
};const (ORandom OrganizationType =iota ;OSequential ;);func (_eda *GenericRegion )copyLineAbove (_abcg int )error {_bad :=_abcg *_eda .Bitmap .RowStride ;_bfa :=_bad -_eda .Bitmap .RowStride ;for _fea :=0;_fea < _eda .Bitmap .RowStride ;_fea ++{_bcbg ,_cfbc :=_eda .Bitmap .GetByte (_bfa );
if _cfbc !=nil {return _cfbc ;};_bfa ++;if _cfbc =_eda .Bitmap .SetByte (_bad ,_bcbg );_cfbc !=nil {return _cfbc ;};_bad ++;};return nil ;};func (_deg *GenericRefinementRegion )String ()string {_fge :=&_cfb .Builder {};_fge .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_fge .WriteString (_deg .RegionInfo .String ()+"\u000a");_fge .WriteString (_ea .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_deg .IsTPGROn ));_fge .WriteString (_ea .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_deg .TemplateID ));
_fge .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_deg .GrAtX ));_fge .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_deg .GrAtY ));
_fge .WriteString (_ea .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_deg .ReferenceDX ));_fge .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_deg .ReferenceDY ));
return _fge .String ();};func (_cefb *Header )subInputReader ()(*_ab .Reader ,error ){_deda :=int (_cefb .SegmentDataLength );if _cefb .SegmentDataLength ==_a .MaxInt32 {_deda =-1;};return _cefb .Reader .NewPartialReader (int (_cefb .SegmentDataStartOffset ),_deda ,false );
};func (_gbfg *RegionSegment )parseHeader ()error {const _eecfe ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fg .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_fg .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cdbd ,_gcdf :=_gbfg ._fgcg .ReadBits (32);
if _gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"\u0077\u0069\u0064t\u0068");};_gbfg .BitmapWidth =uint32 (_cdbd &_a .MaxUint32 );_cdbd ,_gcdf =_gbfg ._fgcg .ReadBits (32);if _gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_gbfg .BitmapHeight =uint32 (_cdbd &_a .MaxUint32 );_cdbd ,_gcdf =_gbfg ._fgcg .ReadBits (32);if _gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbfg .XLocation =uint32 (_cdbd &_a .MaxUint32 );
_cdbd ,_gcdf =_gbfg ._fgcg .ReadBits (32);if _gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbfg .YLocation =uint32 (_cdbd &_a .MaxUint32 );if _ ,_gcdf =_gbfg ._fgcg .ReadBits (5);_gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _gcdf =_gbfg .readCombinationOperator ();_gcdf !=nil {return _f .Wrap (_gcdf ,_eecfe ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gacg *PatternDictionary )GetDictionary ()([]*_bg .Bitmap ,error ){if _gacg .Patterns !=nil {return _gacg .Patterns ,nil ;
};if !_gacg .IsMMREncoded {_gacg .setGbAtPixels ();};_acf :=NewGenericRegion (_gacg ._cgcbf );_acf .setParametersMMR (_gacg .IsMMREncoded ,_gacg .DataOffset ,_gacg .DataLength ,uint32 (_gacg .HdpHeight ),(_gacg .GrayMax +1)*uint32 (_gacg .HdpWidth ),_gacg .HDTemplate ,false ,false ,_gacg .GBAtX ,_gacg .GBAtY );
_gdeb ,_ddfd :=_acf .GetRegionBitmap ();if _ddfd !=nil {return nil ,_ddfd ;};if _ddfd =_gacg .extractPatterns (_gdeb );_ddfd !=nil {return nil ,_ddfd ;};return _gacg .Patterns ,nil ;};func (_fbba *PageInformationSegment )readDefaultPixelValue ()error {_dabg ,_cafc :=_fbba ._fcbf .ReadBit ();
if _cafc !=nil {return _cafc ;};_fbba .DefaultPixelValue =uint8 (_dabg &0xf);return nil ;};func (_bgfb *PageInformationSegment )readIsStriped ()error {_fddf ,_cefd :=_bgfb ._fcbf .ReadBit ();if _cefd !=nil {return _cefd ;};if _fddf ==1{_bgfb .IsStripe =true ;
};return nil ;};func (_eeab *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_bg .Points ,symbols *_bg .Bitmaps ,classIDs *_cc .IntSlice ,boxes *_bg .Boxes ,width ,height ,symBits int ){_eeab .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_eeab ._egegd =globalSymbolsMap ;_eeab ._fcbg =localSymbolsMap ;_eeab ._becca =comps ;_eeab ._agcg =inLL ;_eeab ._adge =symbols ;_eeab ._dggf =classIDs ;_eeab ._dggcd =boxes ;_eeab ._eacd =symBits ;};func (_feda *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _beged ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _feda .SbHuffRSize ==0{_fgcfb ,_bbfab :=_abd .GetStandardTable (1);if _bbfab !=nil {return 0,_f .Wrap (_bbfab ,_beged ,"");};return _fgcfb .Decode (_feda ._aeeba );};if _feda ._fdac ==nil {var (_bbba int ;_egbdb error ;);if _feda .SbHuffFS ==3{_bbba ++;
};if _feda .SbHuffDS ==3{_bbba ++;};if _feda .SbHuffDT ==3{_bbba ++;};if _feda .SbHuffRDWidth ==3{_bbba ++;};if _feda .SbHuffRDHeight ==3{_bbba ++;};if _feda .SbHuffRDX ==3{_bbba ++;};if _feda .SbHuffRDY ==3{_bbba ++;};_feda ._fdac ,_egbdb =_feda .getUserTable (_bbba );
if _egbdb !=nil {return 0,_f .Wrap (_egbdb ,_beged ,"");};};_gaab ,_bbece :=_feda ._fdac .Decode (_feda ._aeeba );if _bbece !=nil {return 0,_f .Wrap (_bbece ,_beged ,"");};return _gaab ,nil ;};func NewGenericRegion (r *_ab .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dgf :r };
};func (_dcgd *SymbolDictionary )getSymbol (_ede int )(*_bg .Bitmap ,error ){const _fcea ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_bcfg ,_fffa :=_dcgd ._aafb .GetBitmap (_dcgd ._bbab [_ede ]);if _fffa !=nil {return nil ,_f .Wrap (_fffa ,_fcea ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _bcfg ,nil ;};func (_fcgd *TextRegion )decodeRdw ()(int64 ,error ){const _cad ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _fcgd .IsHuffmanEncoded {if _fcgd .SbHuffRDWidth ==3{if _fcgd ._afeae ==nil {var (_bcbgd int ;_ggac error ;);if _fcgd .SbHuffFS ==3{_bcbgd ++;
};if _fcgd .SbHuffDS ==3{_bcbgd ++;};if _fcgd .SbHuffDT ==3{_bcbgd ++;};_fcgd ._afeae ,_ggac =_fcgd .getUserTable (_bcbgd );if _ggac !=nil {return 0,_f .Wrap (_ggac ,_cad ,"");};};return _fcgd ._afeae .Decode (_fcgd ._aeeba );};_abee ,_bgbb :=_abd .GetStandardTable (14+int (_fcgd .SbHuffRDWidth ));
if _bgbb !=nil {return 0,_f .Wrap (_bgbb ,_cad ,"");};return _abee .Decode (_fcgd ._aeeba );};_aced ,_ccffa :=_fcgd ._cgfb .DecodeInt (_fcgd ._fecbe );if _ccffa !=nil {return 0,_f .Wrap (_ccffa ,_cad ,"");};return int64 (_aced ),nil ;};func (_ddbc *PageInformationSegment )readMaxStripeSize ()error {_adddd ,_babfgg :=_ddbc ._fcbf .ReadBits (15);
if _babfgg !=nil {return _babfgg ;};_ddbc .MaxStripeSize =uint16 (_adddd &_a .MaxUint16 );return nil ;};func (_dbaf *TextRegion )getUserTable (_becga int )(_abd .Tabler ,error ){const _fdaf ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _aece int ;for _ ,_cabga :=range _dbaf .Header .RTSegments {if _cabga .Type ==53{if _aece ==_becga {_fccd ,_fbfcb :=_cabga .GetSegmentData ();if _fbfcb !=nil {return nil ,_fbfcb ;};_eadb ,_cage :=_fccd .(*TableSegment );if !_cage {_fg .Log .Debug (_ea .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cabga .SegmentNumber ));
return nil ,_f .Error (_fdaf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _abd .NewEncodedTable (_eadb );};_aece ++;};};return nil ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_dfce *HalftoneRegion )computeGrayScalePlanes (_cgbb []*_bg .Bitmap ,_gcgg int )([][]int ,error ){_gdge :=make ([][]int ,_dfce .HGridHeight );
for _egf :=0;_egf < len (_gdge );_egf ++{_gdge [_egf ]=make ([]int ,_dfce .HGridWidth );};for _fcb :=0;_fcb < int (_dfce .HGridHeight );_fcb ++{for _fega :=0;_fega < int (_dfce .HGridWidth );_fega +=8{var _dea int ;if _bdc :=int (_dfce .HGridWidth )-_fega ;
_bdc > 8{_dea =8;}else {_dea =_bdc ;};_egfb :=_cgbb [0].GetByteIndex (_fega ,_fcb );for _gde :=0;_gde < _dea ;_gde ++{_fdc :=_gde +_fega ;_gdge [_fcb ][_fdc ]=0;for _fdg :=0;_fdg < _gcgg ;_fdg ++{_fcdd ,_dedg :=_cgbb [_fdg ].GetByte (_egfb );if _dedg !=nil {return nil ,_dedg ;
};_gaca :=_fcdd >>uint (7-_fdc &7);_beba :=_gaca &1;_dac :=1<<uint (_fdg );_fcdeg :=int (_beba )*_dac ;_gdge [_fcb ][_fdc ]+=_fcdeg ;};};};};return _gdge ,nil ;};func (_bfef *PatternDictionary )setGbAtPixels (){if _bfef .HDTemplate ==0{_bfef .GBAtX =make ([]int8 ,4);
_bfef .GBAtY =make ([]int8 ,4);_bfef .GBAtX [0]=-int8 (_bfef .HdpWidth );_bfef .GBAtY [0]=0;_bfef .GBAtX [1]=-3;_bfef .GBAtY [1]=-1;_bfef .GBAtX [2]=2;_bfef .GBAtY [2]=-2;_bfef .GBAtX [3]=-2;_bfef .GBAtY [3]=-2;}else {_bfef .GBAtX =[]int8 {-int8 (_bfef .HdpWidth )};
_bfef .GBAtY =[]int8 {0};};};func NewHeader (d Documenter ,r *_ab .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_gebc :=&Header {Reader :r };if _ffdf :=_gebc .parse (d ,r ,offset ,organizationType );_ffdf !=nil {return nil ,_f .Wrap (_ffdf ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _gebc ,nil ;};type GenericRefinementRegion struct{_gbb templater ;_ag templater ;_af *_ab .Reader ;_dc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_bg .Bitmap ;
ReferenceBitmap *_bg .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_edc *_gc .Decoder ;_gf *_gc .DecoderStats ;_cge bool ;_edd []bool ;};func (_aggac *GenericRegion )decodeTemplate3 (_agd ,_add ,_bgce int ,_ebbe ,_gfdd int )(_geffe error ){const _efb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_bfe ,_eeg int ;_dgbg int ;_cfcb byte ;_cgb ,_fga int ;);if _agd >=1{_cfcb ,_geffe =_aggac .Bitmap .GetByte (_gfdd );if _geffe !=nil {return _f .Wrap (_geffe ,_efb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dgbg =int (_cfcb );};_bfe =(_dgbg >>1)&0x70;
for _addg :=0;_addg < _bgce ;_addg =_cgb {var (_def byte ;_gdaf int ;);_cgb =_addg +8;if _ded :=_add -_addg ;_ded > 8{_gdaf =8;}else {_gdaf =_ded ;};if _agd >=1{_dgbg <<=8;if _cgb < _add {_cfcb ,_geffe =_aggac .Bitmap .GetByte (_gfdd +1);if _geffe !=nil {return _f .Wrap (_geffe ,_efb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dgbg |=int (_cfcb );};};for _ecc :=0;_ecc < _gdaf ;_ecc ++{if _aggac ._efeg {_eeg =_aggac .overrideAtTemplate3 (_bfe ,_addg +_ecc ,_agd ,int (_def ),_ecc );_aggac ._ceb .SetIndex (int32 (_eeg ));}else {_aggac ._ceb .SetIndex (int32 (_bfe ));};_fga ,_geffe =_aggac ._geffb .DecodeBit (_aggac ._ceb );
if _geffe !=nil {return _f .Wrap (_geffe ,_efb ,"");};_def |=byte (_fga )<<byte (7-_ecc );_bfe =((_bfe &0x1f7)<<1)|_fga |((_dgbg >>uint (8-_ecc ))&0x010);};if _bace :=_aggac .Bitmap .SetByte (_ebbe ,_def );_bace !=nil {return _f .Wrap (_bace ,_efb ,"");
};_ebbe ++;_gfdd ++;};return nil ;};func (_caaa *HalftoneRegion )checkInput ()error {if _caaa .IsMMREncoded {if _caaa .HTemplate !=0{_fg .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_caaa .HTemplate );
};if _caaa .HSkipEnabled {_fg .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_caaa .HSkipEnabled );
};};return nil ;};func (_gbd *GenericRefinementRegion )Init (header *Header ,r *_ab .Reader )error {_gbd ._dc =header ;_gbd ._af =r ;_gbd .RegionInfo =NewRegionSegment (r );return _gbd .parseHeader ();};func (_fege *TextRegion )readHuffmanFlags ()error {var (_dbgdd int ;
_adab uint64 ;_bgggf error ;);_ ,_bgggf =_fege ._aeeba .ReadBit ();if _bgggf !=nil {return _bgggf ;};_dbgdd ,_bgggf =_fege ._aeeba .ReadBit ();if _bgggf !=nil {return _bgggf ;};_fege .SbHuffRSize =int8 (_dbgdd );_adab ,_bgggf =_fege ._aeeba .ReadBits (2);
if _bgggf !=nil {return _bgggf ;};_fege .SbHuffRDY =int8 (_adab )&0xf;_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;};_fege .SbHuffRDX =int8 (_adab )&0xf;_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;
};_fege .SbHuffRDHeight =int8 (_adab )&0xf;_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;};_fege .SbHuffRDWidth =int8 (_adab )&0xf;_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;};_fege .SbHuffDT =int8 (_adab )&0xf;
_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;};_fege .SbHuffDS =int8 (_adab )&0xf;_adab ,_bgggf =_fege ._aeeba .ReadBits (2);if _bgggf !=nil {return _bgggf ;};_fege .SbHuffFS =int8 (_adab )&0xf;return nil ;};func _ada (_cefc int )int {if _cefc ==0{return 0;
};_cefc |=_cefc >>1;_cefc |=_cefc >>2;_cefc |=_cefc >>4;_cefc |=_cefc >>8;_cefc |=_cefc >>16;return (_cefc +1)>>1;};func (_cggg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_eddbe ,_caga :=_cggg ._fcbf .ReadBit ();if _caga !=nil {return _caga ;
};if _eddbe ==1{_cggg ._fgae =true ;};return nil ;};func (_abcd *HalftoneRegion )GetPatterns ()([]*_bg .Bitmap ,error ){var (_edfd []*_bg .Bitmap ;_cgaa error ;);for _ ,_ageg :=range _abcd ._bbaf .RTSegments {var _fgb Segmenter ;_fgb ,_cgaa =_ageg .GetSegmentData ();
if _cgaa !=nil {_fg .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cgaa );return nil ,_cgaa ;};_eeacf ,_bggcg :=_fgb .(*PatternDictionary );if !_bggcg {_cgaa =_ea .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fgb );
return nil ,_cgaa ;};var _fag []*_bg .Bitmap ;_fag ,_cgaa =_eeacf .GetDictionary ();if _cgaa !=nil {_fg .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cgaa );
return nil ,_cgaa ;};_edfd =append (_edfd ,_fag ...);};return _edfd ,nil ;};func (_egca *TextRegion )setContexts (_ccdd *_gc .DecoderStats ,_cbfg *_gc .DecoderStats ,_dfbe *_gc .DecoderStats ,_ggfd *_gc .DecoderStats ,_cbede *_gc .DecoderStats ,_dgbac *_gc .DecoderStats ,_gagd *_gc .DecoderStats ,_agcd *_gc .DecoderStats ,_dgdc *_gc .DecoderStats ,_dbbgb *_gc .DecoderStats ){_egca ._accda =_cbfg ;
_egca ._cdgf =_dfbe ;_egca ._dbfa =_ggfd ;_egca ._bbdcb =_cbede ;_egca ._fecbe =_gagd ;_egca ._dcfa =_agcd ;_egca ._gbg =_dgbac ;_egca ._aga =_dgdc ;_egca ._gefb =_dbbgb ;_egca ._ebec =_ccdd ;};func (_db *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _db .RegionInfo };
func (_gcag *TextRegion )createRegionBitmap ()error {_gcag .RegionBitmap =_bg .New (int (_gcag .RegionInfo .BitmapWidth ),int (_gcag .RegionInfo .BitmapHeight ));if _gcag .DefaultPixel !=0{_gcag .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_afa *GenericRegion )setParametersMMR (_egbf bool ,_efgg ,_abb int64 ,_dae ,_bcg uint32 ,_ggbbc byte ,_ffdb ,_ecaf bool ,_ceaf ,_edfe []int8 ){_afa .DataOffset =_efgg ;
_afa .DataLength =_abb ;_afa .RegionSegment =&RegionSegment {};_afa .RegionSegment .BitmapHeight =_dae ;_afa .RegionSegment .BitmapWidth =_bcg ;_afa .GBTemplate =_ggbbc ;_afa .IsMMREncoded =_egbf ;_afa .IsTPGDon =_ffdb ;_afa .GBAtX =_ceaf ;_afa .GBAtY =_edfe ;
};func (_df *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bgg ,_ffd ,_bdf ,_aag ,_geb ,_dfb ,_eb ,_cde ,_gbf int )error {var (_ged ,_gcc ,_bgd ,_ced ,_cged ,_efc int ;_effc byte ;_eagb error ;);if _bgg > 0{_effc ,_eagb =_df .RegionBitmap .GetByte (_eb -_bdf );
if _eagb !=nil {return _eagb ;};_bgd =int (_effc );};if _cde > 0&&_cde <=_df .ReferenceBitmap .Height {_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf -_aag +_dfb );if _eagb !=nil {return _eagb ;};_ced =int (_effc )<<4;};if _cde >=0&&_cde < _df .ReferenceBitmap .Height {_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf +_dfb );
if _eagb !=nil {return _eagb ;};_cged =int (_effc )<<1;};if _cde > -2&&_cde < _df .ReferenceBitmap .Height -1{_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf +_aag +_dfb );if _eagb !=nil {return _eagb ;};_efc =int (_effc );};_ged =((_bgd >>5)&0x6)|((_efc >>2)&0x30)|(_cged &0x180)|(_ced &0xc00);
var _agg int ;for _bc :=0;_bc < _geb ;_bc =_agg {var _fbb int ;_agg =_bc +8;var _gbc int ;if _gbc =_ffd -_bc ;_gbc > 8{_gbc =8;};_cgc :=_agg < _ffd ;_cgcb :=_agg < _df .ReferenceBitmap .Width ;_ga :=_dfb +1;if _bgg > 0{_effc =0;if _cgc {_effc ,_eagb =_df .RegionBitmap .GetByte (_eb -_bdf +1);
if _eagb !=nil {return _eagb ;};};_bgd =(_bgd <<8)|int (_effc );};if _cde > 0&&_cde <=_df .ReferenceBitmap .Height {var _ca int ;if _cgcb {_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf -_aag +_ga );if _eagb !=nil {return _eagb ;};_ca =int (_effc )<<4;
};_ced =(_ced <<8)|_ca ;};if _cde >=0&&_cde < _df .ReferenceBitmap .Height {var _ddf int ;if _cgcb {_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf +_ga );if _eagb !=nil {return _eagb ;};_ddf =int (_effc )<<1;};_cged =(_cged <<8)|_ddf ;};if _cde > -2&&_cde < (_df .ReferenceBitmap .Height -1){_effc =0;
if _cgcb {_effc ,_eagb =_df .ReferenceBitmap .GetByte (_gbf +_aag +_ga );if _eagb !=nil {return _eagb ;};};_efc =(_efc <<8)|int (_effc );};for _cab :=0;_cab < _gbc ;_cab ++{var _cgg int ;_cac :=false ;_ffa :=(_ged >>4)&0x1ff;if _ffa ==0x1ff{_cac =true ;
_cgg =1;}else if _ffa ==0x00{_cac =true ;};if !_cac {if _df ._cge {_gcc =_df .overrideAtTemplate0 (_ged ,_bc +_cab ,_bgg ,_fbb ,_cab );_df ._gf .SetIndex (int32 (_gcc ));}else {_df ._gf .SetIndex (int32 (_ged ));};_cgg ,_eagb =_df ._edc .DecodeBit (_df ._gf );
if _eagb !=nil {return _eagb ;};};_gaf :=uint (7-_cab );_fbb |=_cgg <<_gaf ;_ged =((_ged &0xdb6)<<1)|_cgg |(_bgd >>_gaf +5)&0x002|((_efc >>_gaf +2)&0x010)|((_cged >>_gaf )&0x080)|((_ced >>_gaf )&0x400);};_eagb =_df .RegionBitmap .SetByte (_eb ,byte (_fbb ));
if _eagb !=nil {return _eagb ;};_eb ++;_gbf ++;};return nil ;};func (_edcc *TextRegion )computeSymbolCodeLength ()error {if _edcc .IsHuffmanEncoded {return _edcc .symbolIDCodeLengths ();};_edcc ._cfbcd =int8 (_a .Ceil (_a .Log (float64 (_edcc .NumberOfSymbols ))/_a .Log (2)));
return nil ;};func (_egd *PageInformationSegment )encodeFlags (_caed _ab .BinaryWriter )(_ffgd error ){const _cdab ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ffgd =_caed .SkipBits (1);_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _ebgg int ;if _egd .CombinationOperatorOverrideAllowed (){_ebgg =1;};if _ffgd =_caed .WriteBit (_ebgg );_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_ebgg =0;if _egd ._egcc {_ebgg =1;};if _ffgd =_caed .WriteBit (_ebgg );_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ffgd =_caed .WriteBit ((int (_egd ._eged )>>1)&0x01);
_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ffgd =_caed .WriteBit (int (_egd ._eged )&0x01);
_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ebgg =int (_egd .DefaultPixelValue );
if _ffgd =_caed .WriteBit (_ebgg );_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ebgg =0;if _egd ._cdac {_ebgg =1;
};if _ffgd =_caed .WriteBit (_ebgg );_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ebgg =0;if _egd .IsLossless {_ebgg =1;};if _ffgd =_caed .WriteBit (_ebgg );
_ffgd !=nil {return _f .Wrap (_ffgd ,_cdab ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type PatternDictionary struct{_cgcbf *_ab .Reader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_bg .Bitmap ;GrayMax uint32 ;};func (_dgcf *SymbolDictionary )setInSyms ()error {if _dgcf .Header .RTSegments !=nil {return _dgcf .retrieveImportSymbols ();
};_dgcf ._babb =make ([]*_bg .Bitmap ,0);return nil ;};func (_bggb *TextRegion )Init (header *Header ,r *_ab .Reader )error {_bggb .Header =header ;_bggb ._aeeba =r ;_bggb .RegionInfo =NewRegionSegment (_bggb ._aeeba );return _bggb .parseHeader ();};func (_afdg *Header )String ()string {_aab :=&_cfb .Builder {};
_aab .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_aab .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_afdg .SegmentNumber ));
_aab .WriteString (_ea .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_afdg .Type ));_aab .WriteString (_ea .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_afdg .RetainFlag ));
_aab .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_afdg .PageAssociation ));_aab .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_afdg .PageAssociationFieldSize ));
_aab .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bcfc :=range _afdg .RTSNumbers {_aab .WriteString (_ea .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bcfc ));};_aab .WriteString (_ea .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_afdg .HeaderLength ));
_aab .WriteString (_ea .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_afdg .SegmentDataLength ));_aab .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_afdg .SegmentDataStartOffset ));
return _aab .String ();};func (_fec *GenericRefinementRegion )setParameters (_gbe *_gc .DecoderStats ,_ceff *_gc .Decoder ,_baad int8 ,_adg ,_fcd uint32 ,_eaaa *_bg .Bitmap ,_ffc ,_dcb int32 ,_bf bool ,_dfdf []int8 ,_daga []int8 ){_fg .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gbe !=nil {_fec ._gf =_gbe ;};if _ceff !=nil {_fec ._edc =_ceff ;};_fec .TemplateID =_baad ;_fec .RegionInfo .BitmapWidth =_adg ;_fec .RegionInfo .BitmapHeight =_fcd ;_fec .ReferenceBitmap =_eaaa ;_fec .ReferenceDX =_ffc ;_fec .ReferenceDY =_dcb ;_fec .IsTPGROn =_bf ;
_fec .GrAtX =_dfdf ;_fec .GrAtY =_daga ;_fec .RegionBitmap =nil ;_fg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fec );
};func (_eade *SymbolDictionary )encodeSymbols (_geec _ab .BinaryWriter )(_gfcb int ,_gfce error ){const _cca ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_gfddd :=_d .New ();_gfddd .Init ();_dde ,_gfce :=_eade ._aafb .SelectByIndexes (_eade ._bbab );
if _gfce !=nil {return 0,_f .Wrap (_gfce ,_cca ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ebf :=map[*_bg .Bitmap ]int {};for _fbbf ,_ceec :=range _dde .Values {_ebf [_ceec ]=_fbbf ;};_dde .SortByHeight ();var _daa ,_fgdd int ;_ecag ,_gfce :=_dde .GroupByHeight ();
if _gfce !=nil {return 0,_f .Wrap (_gfce ,_cca ,"");};for _ ,_cedce :=range _ecag .Values {_begef :=_cedce .Values [0].Height ;_cdfa :=_begef -_daa ;if _gfce =_gfddd .EncodeInteger (_d .IADH ,_cdfa );_gfce !=nil {return 0,_f .Wrapf (_gfce ,_cca ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cdfa );
};_daa =_begef ;_bbdg ,_bacac :=_cedce .GroupByWidth ();if _bacac !=nil {return 0,_f .Wrapf (_bacac ,_cca ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_begef );};var _bfff int ;for _ ,_gddd :=range _bbdg .Values {for _ ,_bfc :=range _gddd .Values {_eadeb :=_bfc .Width ;
_cbbf :=_eadeb -_bfff ;if _bacac =_gfddd .EncodeInteger (_d .IADW ,_cbbf );_bacac !=nil {return 0,_f .Wrapf (_bacac ,_cca ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cbbf );};_bfff +=_cbbf ;if _bacac =_gfddd .EncodeBitmap (_bfc ,false );
_bacac !=nil {return 0,_f .Wrapf (_bacac ,_cca ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_begef ,_eadeb );};_dgfg :=_ebf [_bfc ];_eade ._gfgc [_dgfg ]=_fgdd ;_fgdd ++;};};if _bacac =_gfddd .EncodeOOB (_d .IADW );
_bacac !=nil {return 0,_f .Wrap (_bacac ,_cca ,"\u0049\u0041\u0044\u0057");};};if _gfce =_gfddd .EncodeInteger (_d .IAEX ,0);_gfce !=nil {return 0,_f .Wrap (_gfce ,_cca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gfce =_gfddd .EncodeInteger (_d .IAEX ,len (_eade ._bbab ));_gfce !=nil {return 0,_f .Wrap (_gfce ,_cca ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_gfddd .Final ();_bebf ,_gfce :=_gfddd .WriteTo (_geec );
if _gfce !=nil {return 0,_f .Wrap (_gfce ,_cca ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_bebf ),nil ;
};func (_aaed *TableSegment )parseHeader ()error {var (_cdfe int ;_ddgff uint64 ;_egbgc error ;);_cdfe ,_egbgc =_aaed ._gebgd .ReadBit ();if _egbgc !=nil {return _egbgc ;};if _cdfe ==1{return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cdfe );
};if _ddgff ,_egbgc =_aaed ._gebgd .ReadBits (3);_egbgc !=nil {return _egbgc ;};_aaed ._bfbfd =(int32 (_ddgff )+1)&0xf;if _ddgff ,_egbgc =_aaed ._gebgd .ReadBits (3);_egbgc !=nil {return _egbgc ;};_aaed ._gbdc =(int32 (_ddgff )+1)&0xf;if _ddgff ,_egbgc =_aaed ._gebgd .ReadBits (32);
_egbgc !=nil {return _egbgc ;};_aaed ._dafb =int32 (_ddgff &_a .MaxInt32 );if _ddgff ,_egbgc =_aaed ._gebgd .ReadBits (32);_egbgc !=nil {return _egbgc ;};_aaed ._acga =int32 (_ddgff &_a .MaxInt32 );return nil ;};func (_fbgcf *TextRegion )Encode (w _ab .BinaryWriter )(_fbc int ,_daeg error ){const _abcgf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _fbc ,_daeg =_fbgcf .RegionInfo .Encode (w );_daeg !=nil {return _fbc ,_f .Wrap (_daeg ,_abcgf ,"");};var _egccb int ;if _egccb ,_daeg =_fbgcf .encodeFlags (w );_daeg !=nil {return _fbc ,_f .Wrap (_daeg ,_abcgf ,"");};_fbc +=_egccb ;if _egccb ,_daeg =_fbgcf .encodeSymbols (w );
_daeg !=nil {return _fbc ,_f .Wrap (_daeg ,_abcgf ,"");};_fbc +=_egccb ;return _fbc ,nil ;};func (_aeec *TextRegion )checkInput ()error {const _gfgeb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_aeec .UseRefinement {if _aeec .SbrTemplate !=0{_fg .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_aeec .SbrTemplate =0;};};if _aeec .SbHuffFS ==2||_aeec .SbHuffRDWidth ==2||_aeec .SbHuffRDHeight ==2||_aeec .SbHuffRDX ==2||_aeec .SbHuffRDY ==2{return _f .Error (_gfgeb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_aeec .UseRefinement {if _aeec .SbHuffRSize !=0{_fg .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_aeec .SbHuffRSize =0;};if _aeec .SbHuffRDY !=0{_fg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_aeec .SbHuffRDY =0;};if _aeec .SbHuffRDX !=0{_fg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_aeec .SbHuffRDX =0;};if _aeec .SbHuffRDWidth !=0{_fg .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_aeec .SbHuffRDWidth =0;};if _aeec .SbHuffRDHeight !=0{_fg .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_aeec .SbHuffRDHeight =0;};};return nil ;
};func (_egef *PageInformationSegment )CombinationOperator ()_bg .CombinationOperator {return _egef ._eged ;};func (_abcc *GenericRegion )overrideAtTemplate3 (_bec ,_dcg ,_cbcd ,_ecgc ,_dbbdf int )int {_bec &=0x3EF;if _abcc .GBAtY [0]==0&&_abcc .GBAtX [0]>=-int8 (_dbbdf ){_bec |=(_ecgc >>uint (7-(int8 (_dbbdf )+_abcc .GBAtX [0]))&0x1)<<4;
}else {_bec |=int (_abcc .getPixel (_dcg +int (_abcc .GBAtX [0]),_cbcd +int (_abcc .GBAtY [0])))<<4;};return _bec ;};func (_cgge *PatternDictionary )extractPatterns (_gaeg *_bg .Bitmap )error {var _adda int ;_cdgc :=make ([]*_bg .Bitmap ,_cgge .GrayMax +1);
for _adda <=int (_cgge .GrayMax ){_deeg :=int (_cgge .HdpWidth )*_adda ;_gfffb :=_b .Rect (_deeg ,0,_deeg +int (_cgge .HdpWidth ),int (_cgge .HdpHeight ));_bbcg ,_eeee :=_bg .Extract (_gfffb ,_gaeg );if _eeee !=nil {return _eeee ;};_cdgc [_adda ]=_bbcg ;
_adda ++;};_cgge .Patterns =_cdgc ;return nil ;};func (_cgd *TextRegion )readUseRefinement ()error {if !_cgd .UseRefinement ||_cgd .SbrTemplate !=0{return nil ;};var (_dgbf byte ;_fgfba error ;);_cgd .SbrATX =make ([]int8 ,2);_cgd .SbrATY =make ([]int8 ,2);
_dgbf ,_fgfba =_cgd ._aeeba .ReadByte ();if _fgfba !=nil {return _fgfba ;};_cgd .SbrATX [0]=int8 (_dgbf );_dgbf ,_fgfba =_cgd ._aeeba .ReadByte ();if _fgfba !=nil {return _fgfba ;};_cgd .SbrATY [0]=int8 (_dgbf );_dgbf ,_fgfba =_cgd ._aeeba .ReadByte ();
if _fgfba !=nil {return _fgfba ;};_cgd .SbrATX [1]=int8 (_dgbf );_dgbf ,_fgfba =_cgd ._aeeba .ReadByte ();if _fgfba !=nil {return _fgfba ;};_cgd .SbrATY [1]=int8 (_dgbf );return nil ;};func (_fegcd *TableSegment )HtOOB ()int32 {return _fegcd ._ddfc };func (_eae *GenericRegion )decodeTemplate2 (_fcde ,_aggf ,_ggbd int ,_gebb ,_ebb int )(_ggg error ){const _edae ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_abdg ,_afg int ;_dge ,_ebc int ;_cfce byte ;_geeg ,_aeb int ;);if _fcde >=1{_cfce ,_ggg =_eae .Bitmap .GetByte (_ebb );if _ggg !=nil {return _f .Wrap (_ggg ,_edae ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_dge =int (_cfce );};if _fcde >=2{_cfce ,_ggg =_eae .Bitmap .GetByte (_ebb -_eae .Bitmap .RowStride );if _ggg !=nil {return _f .Wrap (_ggg ,_edae ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ebc =int (_cfce )<<4;
};_abdg =(_dge >>3&0x7c)|(_ebc >>3&0x380);for _bdgc :=0;_bdgc < _ggbd ;_bdgc =_geeg {var (_caaf byte ;_gbeb int ;);_geeg =_bdgc +8;if _ggc :=_aggf -_bdgc ;_ggc > 8{_gbeb =8;}else {_gbeb =_ggc ;};if _fcde > 0{_dge <<=8;if _geeg < _aggf {_cfce ,_ggg =_eae .Bitmap .GetByte (_ebb +1);
if _ggg !=nil {return _f .Wrap (_ggg ,_edae ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_dge |=int (_cfce );};};if _fcde > 1{_ebc <<=8;if _geeg < _aggf {_cfce ,_ggg =_eae .Bitmap .GetByte (_ebb -_eae .Bitmap .RowStride +1);
if _ggg !=nil {return _f .Wrap (_ggg ,_edae ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_ebc |=int (_cfce )<<4;};};for _afga :=0;_afga < _gbeb ;_afga ++{_dfc :=uint (10-_afga );if _eae ._efeg {_afg =_eae .overrideAtTemplate2 (_abdg ,_bdgc +_afga ,_fcde ,int (_caaf ),_afga );
_eae ._ceb .SetIndex (int32 (_afg ));}else {_eae ._ceb .SetIndex (int32 (_abdg ));};_aeb ,_ggg =_eae ._geffb .DecodeBit (_eae ._ceb );if _ggg !=nil {return _f .Wrap (_ggg ,_edae ,"");};_caaf |=byte (_aeb <<uint (7-_afga ));_abdg =((_abdg &0x1bd)<<1)|_aeb |((_dge >>_dfc )&0x4)|((_ebc >>_dfc )&0x80);
};if _cfgg :=_eae .Bitmap .SetByte (_gebb ,_caaf );_cfgg !=nil {return _f .Wrap (_cfgg ,_edae ,"");};_gebb ++;_ebb ++;};return nil ;};func (_afgd *Header )writeReferredToCount (_bgbd _ab .BinaryWriter )(_afdga int ,_bbec error ){const _eegc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_afgd .RTSNumbers =make ([]int ,len (_afgd .RTSegments ));for _fecb ,_cgcc :=range _afgd .RTSegments {_afgd .RTSNumbers [_fecb ]=int (_cgcc .SegmentNumber );};if len (_afgd .RTSNumbers )<=4{var _ecb byte ;if len (_afgd .RetainBits )>=1{_ecb =_afgd .RetainBits [0];
};_ecb |=byte (len (_afgd .RTSNumbers ))<<5;if _bbec =_bgbd .WriteByte (_ecb );_bbec !=nil {return 0,_f .Wrap (_bbec ,_eegc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_dgde :=uint32 (len (_afgd .RTSNumbers ));
_dgagg :=make ([]byte ,4+_cc .Ceil (len (_afgd .RTSNumbers )+1,8));_dgde |=0x7<<29;_g .BigEndian .PutUint32 (_dgagg ,_dgde );copy (_dgagg [1:],_afgd .RetainBits );_afdga ,_bbec =_bgbd .Write (_dgagg );if _bbec !=nil {return 0,_f .Wrap (_bbec ,_eegc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _afdga ,nil ;};type Regioner interface{GetRegionBitmap ()(*_bg .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_ead *PageInformationSegment )readCombinationOperator ()error {_acag ,_eafd :=_ead ._fcbf .ReadBits (2);if _eafd !=nil {return _eafd ;
};_ead ._eged =_bg .CombinationOperator (int (_acag ));return nil ;};func (_cdae *SymbolDictionary )decodeDirectlyThroughGenericRegion (_egde ,_cdbda uint32 )error {if _cdae ._bddb ==nil {_cdae ._bddb =NewGenericRegion (_cdae ._dgff );};_cdae ._bddb .setParametersWithAt (false ,byte (_cdae .SdTemplate ),false ,false ,_cdae .SdATX ,_cdae .SdATY ,_egde ,_cdbda ,_cdae ._caacd ,_cdae ._eccd );
return _cdae .addSymbol (_cdae ._bddb );};func (_bebae *PatternDictionary )Init (h *Header ,r *_ab .Reader )error {_bebae ._cgcbf =r ;return _bebae .parseHeader ();};func (_fgbd *TextRegion )readAmountOfSymbolInstances ()error {_bedea ,_fgab :=_fgbd ._aeeba .ReadBits (32);
if _fgab !=nil {return _fgab ;};_fgbd .NumberOfSymbolInstances =uint32 (_bedea &_a .MaxUint32 );_aggd :=_fgbd .RegionInfo .BitmapWidth *_fgbd .RegionInfo .BitmapHeight ;if _aggd < _fgbd .NumberOfSymbolInstances {_fg .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_aggd ,_fgbd .NumberOfSymbolInstances );
_fgbd .NumberOfSymbolInstances =_aggd ;};return nil ;};func (_faa *PageInformationSegment )parseHeader ()(_cdca error ){_fg .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _faee ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _cdca !=nil {_faee +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cdca .Error ();}else {_faee +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fg .Log .Trace (_faee );}();if _cdca =_faa .readWidthAndHeight ();
_cdca !=nil {return _cdca ;};if _cdca =_faa .readResolution ();_cdca !=nil {return _cdca ;};_ ,_cdca =_faa ._fcbf .ReadBit ();if _cdca !=nil {return _cdca ;};if _cdca =_faa .readCombinationOperatorOverrideAllowed ();_cdca !=nil {return _cdca ;};if _cdca =_faa .readRequiresAuxiliaryBuffer ();
_cdca !=nil {return _cdca ;};if _cdca =_faa .readCombinationOperator ();_cdca !=nil {return _cdca ;};if _cdca =_faa .readDefaultPixelValue ();_cdca !=nil {return _cdca ;};if _cdca =_faa .readContainsRefinement ();_cdca !=nil {return _cdca ;};if _cdca =_faa .readIsLossless ();
_cdca !=nil {return _cdca ;};if _cdca =_faa .readIsStriped ();_cdca !=nil {return _cdca ;};if _cdca =_faa .readMaxStripeSize ();_cdca !=nil {return _cdca ;};if _cdca =_faa .checkInput ();_cdca !=nil {return _cdca ;};_fg .Log .Trace ("\u0025\u0073",_faa );
return nil ;};type HalftoneRegion struct{_efcb *_ab .Reader ;_bbaf *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _bg .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_bg .Bitmap ;Patterns []*_bg .Bitmap ;};func (_aaee *PageInformationSegment )readIsLossless ()error {_aff ,_bacaa :=_aaee ._fcbf .ReadBit ();
if _bacaa !=nil {return _bacaa ;};if _aff ==1{_aaee .IsLossless =true ;};return nil ;};func (_ceca *GenericRegion )decodeLine (_cfbg ,_aaea ,_fdd int )error {const _aee ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_gcfg :=_ceca .Bitmap .GetByteIndex (0,_cfbg );
_bcf :=_gcfg -_ceca .Bitmap .RowStride ;switch _ceca .GBTemplate {case 0:if !_ceca .UseExtTemplates {return _ceca .decodeTemplate0a (_cfbg ,_aaea ,_fdd ,_gcfg ,_bcf );};return _ceca .decodeTemplate0b (_cfbg ,_aaea ,_fdd ,_gcfg ,_bcf );case 1:return _ceca .decodeTemplate1 (_cfbg ,_aaea ,_fdd ,_gcfg ,_bcf );
case 2:return _ceca .decodeTemplate2 (_cfbg ,_aaea ,_fdd ,_gcfg ,_bcf );case 3:return _ceca .decodeTemplate3 (_cfbg ,_aaea ,_fdd ,_gcfg ,_bcf );};return _f .Errorf (_aee ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_ceca .GBTemplate );
};func (_bcba *Header )readSegmentDataLength (_abbc *_ab .Reader )(_aacf error ){_bcba .SegmentDataLength ,_aacf =_abbc .ReadBits (32);if _aacf !=nil {return _aacf ;};_bcba .SegmentDataLength &=_a .MaxInt32 ;return nil ;};func (_bbe *GenericRegion )setParameters (_ffg bool ,_dbbg ,_bfbb int64 ,_aadfa ,_efeb uint32 ){_bbe .IsMMREncoded =_ffg ;
_bbe .DataOffset =_dbbg ;_bbe .DataLength =_bfbb ;_bbe .RegionSegment .BitmapHeight =_aadfa ;_bbe .RegionSegment .BitmapWidth =_efeb ;_bbe ._baca =nil ;_bbe .Bitmap =nil ;};func (_bgfba *SymbolDictionary )decodeAggregate (_ccae ,_gbef uint32 )error {var (_ddeb int64 ;
_acb error ;);if _bgfba .IsHuffmanEncoded {_ddeb ,_acb =_bgfba .huffDecodeRefAggNInst ();if _acb !=nil {return _acb ;};}else {_dbed ,_bceg :=_bgfba ._eccd .DecodeInt (_bgfba ._eaaf );if _bceg !=nil {return _bceg ;};_ddeb =int64 (_dbed );};if _ddeb > 1{return _bgfba .decodeThroughTextRegion (_ccae ,_gbef ,uint32 (_ddeb ));
}else if _ddeb ==1{return _bgfba .decodeRefinedSymbol (_ccae ,_gbef );};return nil ;};func (_aa *EndOfStripe )Init (h *Header ,r *_ab .Reader )error {_aa ._cfa =r ;return _aa .parseHeader ()};func (_fdb *GenericRegion )String ()string {_edf :=&_cfb .Builder {};
_edf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_edf .WriteString (_fdb .RegionSegment .String ()+"\u000a");_edf .WriteString (_ea .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fdb .UseExtTemplates ));
_edf .WriteString (_ea .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fdb .IsTPGDon ));_edf .WriteString (_ea .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fdb .GBTemplate ));
_edf .WriteString (_ea .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fdb .IsMMREncoded ));_edf .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fdb .GBAtX ));
_edf .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fdb .GBAtY ));_edf .WriteString (_ea .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fdb .GBAtOverride ));
return _edf .String ();};func (_cgf *SymbolDictionary )parseHeader ()(_edffc error ){_fg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _edffc !=nil {_fg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_edffc );
}else {_fg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _edffc =_cgf .readRegionFlags ();_edffc !=nil {return _edffc ;};if _edffc =_cgf .setAtPixels ();_edffc !=nil {return _edffc ;};if _edffc =_cgf .setRefinementAtPixels ();_edffc !=nil {return _edffc ;};if _edffc =_cgf .readNumberOfExportedSymbols ();
_edffc !=nil {return _edffc ;};if _edffc =_cgf .readNumberOfNewSymbols ();_edffc !=nil {return _edffc ;};if _edffc =_cgf .setInSyms ();_edffc !=nil {return _edffc ;};if _cgf ._faff {_ecbb :=_cgf .Header .RTSegments ;for _effcg :=len (_ecbb )-1;_effcg >=0;
_effcg --{if _ecbb [_effcg ].Type ==0{_gbcf ,_fbfb :=_ecbb [_effcg ].SegmentData .(*SymbolDictionary );if !_fbfb {_edffc =_ea .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ecbb [_effcg ]);
return _edffc ;};if _gbcf ._faff {_cgf .setRetainedCodingContexts (_gbcf );};break ;};};};if _edffc =_cgf .checkInput ();_edffc !=nil {return _edffc ;};return nil ;};func (_fdfe *PatternDictionary )readPatternWidthAndHeight ()error {_bebe ,_cgef :=_fdfe ._cgcbf .ReadByte ();
if _cgef !=nil {return _cgef ;};_fdfe .HdpWidth =_bebe ;_bebe ,_cgef =_fdfe ._cgcbf .ReadByte ();if _cgef !=nil {return _cgef ;};_fdfe .HdpHeight =_bebe ;return nil ;};func (_fcf *GenericRegion )decodeSLTP ()(int ,error ){switch _fcf .GBTemplate {case 0:_fcf ._ceb .SetIndex (0x9B25);
case 1:_fcf ._ceb .SetIndex (0x795);case 2:_fcf ._ceb .SetIndex (0xE5);case 3:_fcf ._ceb .SetIndex (0x195);};return _fcf ._geffb .DecodeBit (_fcf ._ceb );};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;
RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_ab .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_ace *GenericRegion )overrideAtTemplate0a (_egbd ,_gebba ,_ggeb ,_bbg ,_abaa ,_gba int )int {if _ace .GBAtOverride [0]{_egbd &=0xFFEF;
if _ace .GBAtY [0]==0&&_ace .GBAtX [0]>=-int8 (_abaa ){_egbd |=(_bbg >>uint (int8 (_gba )-_ace .GBAtX [0]&0x1))<<4;}else {_egbd |=int (_ace .getPixel (_gebba +int (_ace .GBAtX [0]),_ggeb +int (_ace .GBAtY [0])))<<4;};};if _ace .GBAtOverride [1]{_egbd &=0xFBFF;
if _ace .GBAtY [1]==0&&_ace .GBAtX [1]>=-int8 (_abaa ){_egbd |=(_bbg >>uint (int8 (_gba )-_ace .GBAtX [1]&0x1))<<10;}else {_egbd |=int (_ace .getPixel (_gebba +int (_ace .GBAtX [1]),_ggeb +int (_ace .GBAtY [1])))<<10;};};if _ace .GBAtOverride [2]{_egbd &=0xF7FF;
if _ace .GBAtY [2]==0&&_ace .GBAtX [2]>=-int8 (_abaa ){_egbd |=(_bbg >>uint (int8 (_gba )-_ace .GBAtX [2]&0x1))<<11;}else {_egbd |=int (_ace .getPixel (_gebba +int (_ace .GBAtX [2]),_ggeb +int (_ace .GBAtY [2])))<<11;};};if _ace .GBAtOverride [3]{_egbd &=0x7FFF;
if _ace .GBAtY [3]==0&&_ace .GBAtX [3]>=-int8 (_abaa ){_egbd |=(_bbg >>uint (int8 (_gba )-_ace .GBAtX [3]&0x1))<<15;}else {_egbd |=int (_ace .getPixel (_gebba +int (_ace .GBAtX [3]),_ggeb +int (_ace .GBAtY [3])))<<15;};};return _egbd ;};func (_bde *PatternDictionary )computeSegmentDataStructure ()error {_bde .DataOffset =_bde ._cgcbf .AbsolutePosition ();
_bde .DataHeaderLength =_bde .DataOffset -_bde .DataHeaderOffset ;_bde .DataLength =int64 (_bde ._cgcbf .AbsoluteLength ())-_bde .DataHeaderLength ;return nil ;};func (_dcff *SymbolDictionary )readAtPixels (_bdgfb int )error {_dcff .SdATX =make ([]int8 ,_bdgfb );
_dcff .SdATY =make ([]int8 ,_bdgfb );var (_edbd byte ;_abda error ;);for _bffb :=0;_bffb < _bdgfb ;_bffb ++{_edbd ,_abda =_dcff ._dgff .ReadByte ();if _abda !=nil {return _abda ;};_dcff .SdATX [_bffb ]=int8 (_edbd );_edbd ,_abda =_dcff ._dgff .ReadByte ();
if _abda !=nil {return _abda ;};_dcff .SdATY [_bffb ]=int8 (_edbd );};return nil ;};func (_bgfg *GenericRegion )writeGBAtPixels (_addd _ab .BinaryWriter )(_cabc int ,_dbfg error ){const _dabc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _bgfg .UseMMR {return 0,nil ;};_ggbbf :=1;if _bgfg .GBTemplate ==0{_ggbbf =4;}else if _bgfg .UseExtTemplates {_ggbbf =12;};if len (_bgfg .GBAtX )!=_ggbbf {return 0,_f .Errorf (_dabc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bgfg .GBAtY )!=_ggbbf {return 0,_f .Errorf (_dabc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ggcbg :=0;_ggcbg < _ggbbf ;_ggcbg ++{if _dbfg =_addd .WriteByte (byte (_bgfg .GBAtX [_ggcbg ]));_dbfg !=nil {return _cabc ,_f .Wrap (_dbfg ,_dabc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cabc ++;if _dbfg =_addd .WriteByte (byte (_bgfg .GBAtY [_ggcbg ]));
_dbfg !=nil {return _cabc ,_f .Wrap (_dbfg ,_dabc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cabc ++;};return _cabc ,nil ;};func (_beaff *TextRegion )decodeRdy ()(int64 ,error ){const _bdeb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _beaff .IsHuffmanEncoded {if _beaff .SbHuffRDY ==3{if _beaff ._cbbb ==nil {var (_fffd int ;_dbbc error ;);if _beaff .SbHuffFS ==3{_fffd ++;};if _beaff .SbHuffDS ==3{_fffd ++;};if _beaff .SbHuffDT ==3{_fffd ++;};if _beaff .SbHuffRDWidth ==3{_fffd ++;
};if _beaff .SbHuffRDHeight ==3{_fffd ++;};if _beaff .SbHuffRDX ==3{_fffd ++;};_beaff ._cbbb ,_dbbc =_beaff .getUserTable (_fffd );if _dbbc !=nil {return 0,_f .Wrap (_dbbc ,_bdeb ,"");};};return _beaff ._cbbb .Decode (_beaff ._aeeba );};_bcbc ,_cfbcdc :=_abd .GetStandardTable (14+int (_beaff .SbHuffRDY ));
if _cfbcdc !=nil {return 0,_cfbcdc ;};return _bcbc .Decode (_beaff ._aeeba );};_ddbe ,_dedeb :=_beaff ._cgfb .DecodeInt (_beaff ._gefb );if _dedeb !=nil {return 0,_f .Wrap (_dedeb ,_bdeb ,"");};return int64 (_ddbe ),nil ;};type template0 struct{};func (_fagc *TextRegion )decodeRI ()(int64 ,error ){if !_fagc .UseRefinement {return 0,nil ;
};if _fagc .IsHuffmanEncoded {_gfggg ,_edfg :=_fagc ._aeeba .ReadBit ();return int64 (_gfggg ),_edfg ;};_ddgce ,_eeef :=_fagc ._cgfb .DecodeInt (_fagc ._bgede );return int64 (_ddgce ),_eeef ;};type RegionSegment struct{_fgcg *_ab .Reader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _bg .CombinationOperator ;};func (_bece *SymbolDictionary )setSymbolsArray ()error {if _bece ._babb ==nil {if _gbff :=_bece .retrieveImportSymbols ();_gbff !=nil {return _gbff ;
};};if _bece ._aabd ==nil {_bece ._aabd =append (_bece ._aabd ,_bece ._babb ...);};return nil ;};func (_egge *RegionSegment )Size ()int {return 17};func (_gabf *PageInformationSegment )Init (h *Header ,r *_ab .Reader )(_egeg error ){_gabf ._fcbf =r ;if _egeg =_gabf .parseHeader ();
_egeg !=nil {return _f .Wrap (_egeg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_bege *GenericRegion )Size ()int {return _bege .RegionSegment .Size ()+1+2*len (_bege .GBAtX )};
func (_cdcf *Header )CleanSegmentData (){if _cdcf .SegmentData !=nil {_cdcf .SegmentData =nil ;};};func NewRegionSegment (r *_ab .Reader )*RegionSegment {return &RegionSegment {_fgcg :r }};func (_cdaa *SymbolDictionary )setCodingStatistics ()error {if _cdaa ._bgbe ==nil {_cdaa ._bgbe =_gc .NewStats (512,1);
};if _cdaa ._ffbd ==nil {_cdaa ._ffbd =_gc .NewStats (512,1);};if _cdaa ._cefdc ==nil {_cdaa ._cefdc =_gc .NewStats (512,1);};if _cdaa ._eaaf ==nil {_cdaa ._eaaf =_gc .NewStats (512,1);};if _cdaa ._defe ==nil {_cdaa ._defe =_gc .NewStats (512,1);};if _cdaa .UseRefinementAggregation &&_cdaa ._ebbg ==nil {_cdaa ._ebbg =_gc .NewStats (1<<uint (_cdaa ._bccb ),1);
_cdaa ._dbdb =_gc .NewStats (512,1);_cdaa ._gafd =_gc .NewStats (512,1);};if _cdaa ._caacd ==nil {_cdaa ._caacd =_gc .NewStats (65536,1);};if _cdaa ._eccd ==nil {var _afb error ;_cdaa ._eccd ,_afb =_gc .New (_cdaa ._dgff );if _afb !=nil {return _afb ;};
};return nil ;};func (_dfcb *Header )readDataStartOffset (_cfcd *_ab .Reader ,_afea OrganizationType ){if _afea ==OSequential {_dfcb .SegmentDataStartOffset =uint64 (_cfcd .AbsolutePosition ());};};func (_fgg *PageInformationSegment )String ()string {_fddg :=&_cfb .Builder {};
_fddg .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_fddg .WriteString (_ea .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fgg .PageBMHeight ));
_fddg .WriteString (_ea .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fgg .PageBMWidth ));_fddg .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fgg .ResolutionX ));
_fddg .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fgg .ResolutionY ));_fddg .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fgg ._eged ));
_fddg .WriteString (_ea .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fgg ._fgae ));_fddg .WriteString (_ea .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fgg .IsLossless ));
_fddg .WriteString (_ea .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fgg ._egcc ));_fddg .WriteString (_ea .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fgg ._cdac ));
_fddg .WriteString (_ea .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fgg .IsStripe ));_fddg .WriteString (_ea .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fgg .MaxStripeSize ));
return _fddg .String ();};func _gge (_dbb *_ab .Reader ,_cbe *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_af :_dbb ,RegionInfo :NewRegionSegment (_dbb ),_dc :_cbe ,_gbb :&template0 {},_ag :&template1 {}};};func (_ddgf *PatternDictionary )parseHeader ()error {_fg .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_fg .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bdcf :=_ddgf ._cgcbf .ReadBits (5);if _bdcf !=nil {return _bdcf ;};if _bdcf =_ddgf .readTemplate ();_bdcf !=nil {return _bdcf ;};if _bdcf =_ddgf .readIsMMREncoded ();_bdcf !=nil {return _bdcf ;};if _bdcf =_ddgf .readPatternWidthAndHeight ();_bdcf !=nil {return _bdcf ;
};if _bdcf =_ddgf .readGrayMax ();_bdcf !=nil {return _bdcf ;};if _bdcf =_ddgf .computeSegmentDataStructure ();_bdcf !=nil {return _bdcf ;};return _ddgf .checkInput ();};func (_dggd *SymbolDictionary )getUserTable (_efec int )(_abd .Tabler ,error ){var _fgfa int ;
for _ ,_badd :=range _dggd .Header .RTSegments {if _badd .Type ==53{if _fgfa ==_efec {_bgbdf ,_fbgd :=_badd .GetSegmentData ();if _fbgd !=nil {return nil ,_fbgd ;};_bfaa :=_bgbdf .(_abd .BasicTabler );return _abd .NewEncodedTable (_bfaa );};_fgfa ++;};
};return nil ,nil ;};func (_dedge *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_edbf int ;_gfgf int32 ;_aagg error ;_bfbf =int32 (_dedge ._ggcc +_dedge .NumberOfNewSymbols );_gbbdg =make ([]int ,_bfbf ););for _dcged :=int32 (0);_dcged < _bfbf ;
_dcged +=_gfgf {if _dedge .IsHuffmanEncoded {_dadb ,_aegc :=_abd .GetStandardTable (1);if _aegc !=nil {return nil ,_aegc ;};_ffgg ,_aegc :=_dadb .Decode (_dedge ._dgff );if _aegc !=nil {return nil ,_aegc ;};_gfgf =int32 (_ffgg );}else {_gfgf ,_aagg =_dedge ._eccd .DecodeInt (_dedge ._defe );
if _aagg !=nil {return nil ,_aagg ;};};if _gfgf !=0{if _dcged +_gfgf > _bfbf {return nil ,_f .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _eedg :=_dcged ;_eedg < _dcged +_gfgf ;_eedg ++{_gbbdg [_eedg ]=_edbf ;};};if _edbf ==0{_edbf =1;}else {_edbf =0;};};return _gbbdg ,nil ;};func (_dcad *RegionSegment )String ()string {_bdbae :=&_cfb .Builder {};_bdbae .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_bdbae .WriteString (_ea .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dcad .BitmapWidth ,_dcad .BitmapHeight ));
_bdbae .WriteString (_ea .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dcad .XLocation ,_dcad .YLocation ));_bdbae .WriteString (_ea .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dcad .CombinaionOperator ));
return _bdbae .String ();};func (_cdf *GenericRegion )decodeTemplate0a (_fee ,_eab ,_cbee int ,_gdb ,_ddgg int )(_cced error ){const _bbf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_ggb ,_geaf int ;_gfg ,_badc int ;
_gcfb byte ;_dgce int ;);if _fee >=1{_gcfb ,_cced =_cdf .Bitmap .GetByte (_ddgg );if _cced !=nil {return _f .Wrap (_cced ,_bbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gfg =int (_gcfb );};if _fee >=2{_gcfb ,_cced =_cdf .Bitmap .GetByte (_ddgg -_cdf .Bitmap .RowStride );
if _cced !=nil {return _f .Wrap (_cced ,_bbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_badc =int (_gcfb )<<6;};_ggb =(_gfg &0xf0)|(_badc &0x3800);for _ega :=0;_ega < _cbee ;_ega =_dgce {var (_ecad byte ;_ecada int ;);_dgce =_ega +8;if _egbg :=_eab -_ega ;
_egbg > 8{_ecada =8;}else {_ecada =_egbg ;};if _fee > 0{_gfg <<=8;if _dgce < _eab {_gcfb ,_cced =_cdf .Bitmap .GetByte (_ddgg +1);if _cced !=nil {return _f .Wrap (_cced ,_bbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gfg |=int (_gcfb );};
};if _fee > 1{_adeb :=_ddgg -_cdf .Bitmap .RowStride +1;_badc <<=8;if _dgce < _eab {_gcfb ,_cced =_cdf .Bitmap .GetByte (_adeb );if _cced !=nil {return _f .Wrap (_cced ,_bbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_badc |=int (_gcfb )<<6;
}else {_badc |=0;};};for _feaf :=0;_feaf < _ecada ;_feaf ++{_dab :=uint (7-_feaf );if _cdf ._efeg {_geaf =_cdf .overrideAtTemplate0a (_ggb ,_ega +_feaf ,_fee ,int (_ecad ),_feaf ,int (_dab ));_cdf ._ceb .SetIndex (int32 (_geaf ));}else {_cdf ._ceb .SetIndex (int32 (_ggb ));
};var _fde int ;_fde ,_cced =_cdf ._geffb .DecodeBit (_cdf ._ceb );if _cced !=nil {return _f .Wrap (_cced ,_bbf ,"");};_ecad |=byte (_fde )<<_dab ;_ggb =((_ggb &0x7bf7)<<1)|_fde |((_gfg >>_dab )&0x10)|((_badc >>_dab )&0x800);};if _bca :=_cdf .Bitmap .SetByte (_gdb ,_ecad );
_bca !=nil {return _f .Wrap (_bca ,_bbf ,"");};_gdb ++;_ddgg ++;};return nil ;};func (_bgdg *HalftoneRegion )renderPattern (_geag [][]int )(_bgga error ){var _dfcd ,_bdbf int ;for _fce :=0;_fce < int (_bgdg .HGridHeight );_fce ++{for _gcd :=0;_gcd < int (_bgdg .HGridWidth );
_gcd ++{_dfcd =_bgdg .computeX (_fce ,_gcd );_bdbf =_bgdg .computeY (_fce ,_gcd );_gca :=_bgdg .Patterns [_geag [_fce ][_gcd ]];if _bgga =_bg .Blit (_gca ,_bgdg .HalftoneRegionBitmap ,_dfcd +int (_bgdg .HGridX ),_bdbf +int (_bgdg .HGridY ),_bgdg .CombinationOperator );
_bgga !=nil {return _bgga ;};};};return nil ;};func (_dfba *TextRegion )decodeDT ()(_dged int64 ,_ccff error ){if _dfba .IsHuffmanEncoded {if _dfba .SbHuffDT ==3{_dged ,_ccff =_dfba ._faaf .Decode (_dfba ._aeeba );if _ccff !=nil {return 0,_ccff ;};}else {var _bcefg _abd .Tabler ;
_bcefg ,_ccff =_abd .GetStandardTable (11+int (_dfba .SbHuffDT ));if _ccff !=nil {return 0,_ccff ;};_dged ,_ccff =_bcefg .Decode (_dfba ._aeeba );if _ccff !=nil {return 0,_ccff ;};};}else {var _gdef int32 ;_gdef ,_ccff =_dfba ._cgfb .DecodeInt (_dfba ._accda );
if _ccff !=nil {return 0,_ccff ;};_dged =int64 (_gdef );};_dged *=int64 (_dfba .SbStrips );return _dged ,nil ;};func (_bfeb *PageInformationSegment )checkInput ()error {if _bfeb .PageBMHeight ==_a .MaxInt32 {if !_bfeb .IsStripe {_fg .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_cdg *Header )referenceSize ()uint {switch {case _cdg .SegmentNumber <=255:return 1;case _cdg .SegmentNumber <=65535:return 2;default:return 4;};};func (_gcca *PatternDictionary )readGrayMax ()error {_bgggb ,_gcae :=_gcca ._cgcbf .ReadBits (32);
if _gcae !=nil {return _gcae ;};_gcca .GrayMax =uint32 (_bgggb &_a .MaxUint32 );return nil ;};func (_cefbc *TextRegion )decodeDfs ()(int64 ,error ){if _cefbc .IsHuffmanEncoded {if _cefbc .SbHuffFS ==3{if _cefbc ._gec ==nil {var _gccc error ;_cefbc ._gec ,_gccc =_cefbc .getUserTable (0);
if _gccc !=nil {return 0,_gccc ;};};return _cefbc ._gec .Decode (_cefbc ._aeeba );};_fddfb ,_edce :=_abd .GetStandardTable (6+int (_cefbc .SbHuffFS ));if _edce !=nil {return 0,_edce ;};return _fddfb .Decode (_cefbc ._aeeba );};_dagab ,_gcea :=_cefbc ._cgfb .DecodeInt (_cefbc ._cdgf );
if _gcea !=nil {return 0,_gcea ;};return int64 (_dagab ),nil ;};func (_eaac *RegionSegment )readCombinationOperator ()error {_egege ,_bagb :=_eaac ._fgcg .ReadBits (3);if _bagb !=nil {return _bagb ;};_eaac .CombinaionOperator =_bg .CombinationOperator (_egege &0xF);
return nil ;};