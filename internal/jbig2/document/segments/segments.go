//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_dd "encoding/binary";_ac "errors";_ad "fmt";_be "github.com/unidoc/unipdf/v4/common";_e "github.com/unidoc/unipdf/v4/internal/bitwise";_fe "github.com/unidoc/unipdf/v4/internal/jbig2/basic";_cf "github.com/unidoc/unipdf/v4/internal/jbig2/bitmap";
_b "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/arithmetic";_fg "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/huffman";_ce "github.com/unidoc/unipdf/v4/internal/jbig2/decoder/mmr";_db "github.com/unidoc/unipdf/v4/internal/jbig2/encoder/arithmetic";
_gg "github.com/unidoc/unipdf/v4/internal/jbig2/errors";_ag "github.com/unidoc/unipdf/v4/internal/jbig2/internal";_d "image";_f "io";_a "math";_c "strings";_ga "time";);func (_bcee *HalftoneRegion )computeSegmentDataStructure ()error {_bcee .DataOffset =_bcee ._cgad .AbsolutePosition ();
_bcee .DataHeaderLength =_bcee .DataOffset -_bcee .DataHeaderOffset ;_bcee .DataLength =int64 (_bcee ._cgad .AbsoluteLength ())-_bcee .DataHeaderLength ;return nil ;};func (_fddeb *TextRegion )checkInput ()error {const _gdadg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_fddeb .UseRefinement {if _fddeb .SbrTemplate !=0{_be .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fddeb .SbrTemplate =0;};};if _fddeb .SbHuffFS ==2||_fddeb .SbHuffRDWidth ==2||_fddeb .SbHuffRDHeight ==2||_fddeb .SbHuffRDX ==2||_fddeb .SbHuffRDY ==2{return _gg .Error (_gdadg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_fddeb .UseRefinement {if _fddeb .SbHuffRSize !=0{_be .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fddeb .SbHuffRSize =0;};if _fddeb .SbHuffRDY !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_fddeb .SbHuffRDY =0;};if _fddeb .SbHuffRDX !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fddeb .SbHuffRDX =0;};if _fddeb .SbHuffRDWidth !=0{_be .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_fddeb .SbHuffRDWidth =0;};if _fddeb .SbHuffRDHeight !=0{_be .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fddeb .SbHuffRDHeight =0;};
};return nil ;};type template1 struct{};func (_ggd *GenericRegion )decodeTemplate0a (_egca ,_ecb ,_dgec int ,_ceag ,_dgb int )(_eefge error ){const _adb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_fdde ,_bbfd int ;
_gabc ,_afd int ;_daac byte ;_gag int ;);if _egca >=1{_daac ,_eefge =_ggd .Bitmap .GetByte (_dgb );if _eefge !=nil {return _gg .Wrap (_eefge ,_adb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gabc =int (_daac );};if _egca >=2{_daac ,_eefge =_ggd .Bitmap .GetByte (_dgb -_ggd .Bitmap .RowStride );
if _eefge !=nil {return _gg .Wrap (_eefge ,_adb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afd =int (_daac )<<6;};_fdde =(_gabc &0xf0)|(_afd &0x3800);for _ceaf :=0;_ceaf < _dgec ;_ceaf =_gag {var (_aee byte ;_cfgcd int ;);_gag =_ceaf +8;if _bagc :=_ecb -_ceaf ;
_bagc > 8{_cfgcd =8;}else {_cfgcd =_bagc ;};if _egca > 0{_gabc <<=8;if _gag < _ecb {_daac ,_eefge =_ggd .Bitmap .GetByte (_dgb +1);if _eefge !=nil {return _gg .Wrap (_eefge ,_adb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gabc |=int (_daac );
};};if _egca > 1{_cfcc :=_dgb -_ggd .Bitmap .RowStride +1;_afd <<=8;if _gag < _ecb {_daac ,_eefge =_ggd .Bitmap .GetByte (_cfcc );if _eefge !=nil {return _gg .Wrap (_eefge ,_adb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afd |=int (_daac )<<6;
}else {_afd |=0;};};for _efa :=0;_efa < _cfgcd ;_efa ++{_dgg :=uint (7-_efa );if _ggd ._cda {_bbfd =_ggd .overrideAtTemplate0a (_fdde ,_ceaf +_efa ,_egca ,int (_aee ),_efa ,int (_dgg ));_ggd ._gdg .SetIndex (int32 (_bbfd ));}else {_ggd ._gdg .SetIndex (int32 (_fdde ));
};var _gcgd int ;_gcgd ,_eefge =_ggd ._gdb .DecodeBit (_ggd ._gdg );if _eefge !=nil {return _gg .Wrap (_eefge ,_adb ,"");};_aee |=byte (_gcgd )<<_dgg ;_fdde =((_fdde &0x7bf7)<<1)|_gcgd |((_gabc >>_dgg )&0x10)|((_afd >>_dgg )&0x800);};if _egf :=_ggd .Bitmap .SetByte (_ceag ,_aee );
_egf !=nil {return _gg .Wrap (_egf ,_adb ,"");};_ceag ++;_dgb ++;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cbg *template1 )setIndex (_adcc *_b .DecoderStats ){_adcc .SetIndex (0x080)};func (_ffbc *SymbolDictionary )readNumberOfNewSymbols ()error {_dceg ,_afca :=_ffbc ._bbagd .ReadBits (32);
if _afca !=nil {return _afca ;};_ffbc .NumberOfNewSymbols =uint32 (_dceg &_a .MaxUint32 );return nil ;};func (_begc *PageInformationSegment )readIsStriped ()error {_afec ,_egacd :=_begc ._bagf .ReadBit ();if _egacd !=nil {return _egacd ;};if _afec ==1{_begc .IsStripe =true ;
};return nil ;};func (_geefd *GenericRegion )String ()string {_bbe :=&_c .Builder {};_bbe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bbe .WriteString (_geefd .RegionSegment .String ()+"\u000a");
_bbe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_geefd .UseExtTemplates ));_bbe .WriteString (_ad .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_geefd .IsTPGDon ));
_bbe .WriteString (_ad .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_geefd .GBTemplate ));_bbe .WriteString (_ad .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_geefd .IsMMREncoded ));
_bbe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_geefd .GBAtX ));_bbe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_geefd .GBAtY ));
_bbe .WriteString (_ad .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_geefd .GBAtOverride ));return _bbe .String ();};func (_eab *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _eab .RegionSegment };
func (_fdbc *Header )pageSize ()uint {if _fdbc .PageAssociation <=255{return 1;};return 4;};func (_cadaa *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cadaa .IsHuffmanEncoded {switch _cadaa .SdHuffDecodeWidthSelection {case 0:_febbc ,_afg :=_fg .GetStandardTable (2);
if _afg !=nil {return 0,_afg ;};return _febbc .Decode (_cadaa ._bbagd );case 1:_dca ,_dcdf :=_fg .GetStandardTable (3);if _dcdf !=nil {return 0,_dcdf ;};return _dca .Decode (_cadaa ._bbagd );case 3:if _cadaa ._fcbg ==nil {var _fca int ;if _cadaa .SdHuffDecodeHeightSelection ==3{_fca ++;
};_ggab ,_gceg :=_cadaa .getUserTable (_fca );if _gceg !=nil {return 0,_gceg ;};_cadaa ._fcbg =_ggab ;};return _cadaa ._fcbg .Decode (_cadaa ._bbagd );};}else {_bcaec ,_aecd :=_cadaa ._cbgf .DecodeInt (_cadaa ._afcd );if _aecd !=nil {return 0,_aecd ;};
return int64 (_bcaec ),nil ;};return 0,nil ;};func (_ggdfc *PageInformationSegment )readCombinationOperator ()error {_aeega ,_eaba :=_ggdfc ._bagf .ReadBits (2);if _eaba !=nil {return _eaba ;};_ggdfc ._aegg =_cf .CombinationOperator (int (_aeega ));return nil ;
};func _eeff (_agbc int )int {if _agbc ==0{return 0;};_agbc |=_agbc >>1;_agbc |=_agbc >>2;_agbc |=_agbc >>4;_agbc |=_agbc >>8;_agbc |=_agbc >>16;return (_agbc +1)>>1;};func (_ccgb *RegionSegment )parseHeader ()error {const _abfb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_be .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_be .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_egdae ,_gfaa :=_ccgb ._gdac .ReadBits (32);if _gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"\u0077\u0069\u0064t\u0068");};_ccgb .BitmapWidth =uint32 (_egdae &_a .MaxUint32 );_egdae ,_gfaa =_ccgb ._gdac .ReadBits (32);if _gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_ccgb .BitmapHeight =uint32 (_egdae &_a .MaxUint32 );_egdae ,_gfaa =_ccgb ._gdac .ReadBits (32);if _gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ccgb .XLocation =uint32 (_egdae &_a .MaxUint32 );
_egdae ,_gfaa =_ccgb ._gdac .ReadBits (32);if _gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ccgb .YLocation =uint32 (_egdae &_a .MaxUint32 );if _ ,_gfaa =_ccgb ._gdac .ReadBits (5);_gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _gfaa =_ccgb .readCombinationOperator ();_gfaa !=nil {return _gg .Wrap (_gfaa ,_abfb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gddce *RegionSegment )String ()string {_dadcc :=&_c .Builder {};
_dadcc .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_dadcc .WriteString (_ad .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_gddce .BitmapWidth ,_gddce .BitmapHeight ));
_dadcc .WriteString (_ad .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_gddce .XLocation ,_gddce .YLocation ));_dadcc .WriteString (_ad .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_gddce .CombinaionOperator ));
return _dadcc .String ();};func (_ffg *HalftoneRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _ffg .HalftoneRegionBitmap !=nil {return _ffg .HalftoneRegionBitmap ,nil ;};var _eeb error ;_ffg .HalftoneRegionBitmap =_cf .New (int (_ffg .RegionSegment .BitmapWidth ),int (_ffg .RegionSegment .BitmapHeight ));
if _ffg .Patterns ==nil ||(_ffg .Patterns !=nil &&len (_ffg .Patterns )==0){_ffg .Patterns ,_eeb =_ffg .GetPatterns ();if _eeb !=nil {return nil ,_eeb ;};};if _ffg .HDefaultPixel ==1{_ffg .HalftoneRegionBitmap .SetDefaultPixel ();};_agde :=_a .Ceil (_a .Log (float64 (len (_ffg .Patterns )))/_a .Log (2));
_gfe :=int (_agde );var _eaac [][]int ;_eaac ,_eeb =_ffg .grayScaleDecoding (_gfe );if _eeb !=nil {return nil ,_eeb ;};if _eeb =_ffg .renderPattern (_eaac );_eeb !=nil {return nil ,_eeb ;};return _ffg .HalftoneRegionBitmap ,nil ;};type Segmenter interface{Init (_agdea *Header ,_dgaa *_e .Reader )error ;
};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_ceac *TableSegment )HtHigh ()int32 {return _ceac ._fbeb };func (_dfe *Header )readHeaderLength (_ebfe *_e .Reader ,_dae int64 ){_dfe .HeaderLength =_ebfe .AbsolutePosition ()-_dae ;
};func (_gaff *GenericRegion )overrideAtTemplate2 (_gdd ,_bcae ,_becc ,_afeg ,_cccg int )int {_gdd &=0x3FB;if _gaff .GBAtY [0]==0&&_gaff .GBAtX [0]>=-int8 (_cccg ){_gdd |=(_afeg >>uint (7-(int8 (_cccg )+_gaff .GBAtX [0]))&0x1)<<2;}else {_gdd |=int (_gaff .getPixel (_bcae +int (_gaff .GBAtX [0]),_becc +int (_gaff .GBAtY [0])))<<2;
};return _gdd ;};type template0 struct{};func (_cfgc *GenericRegion )copyLineAbove (_eeg int )error {_fec :=_eeg *_cfgc .Bitmap .RowStride ;_cdc :=_fec -_cfgc .Bitmap .RowStride ;for _aecf :=0;_aecf < _cfgc .Bitmap .RowStride ;_aecf ++{_dfd ,_efg :=_cfgc .Bitmap .GetByte (_cdc );
if _efg !=nil {return _efg ;};_cdc ++;if _efg =_cfgc .Bitmap .SetByte (_fec ,_dfd );_efg !=nil {return _efg ;};_fec ++;};return nil ;};func (_cada *HalftoneRegion )renderPattern (_dba [][]int )(_bdbb error ){var _ggcgg ,_cefc int ;for _ggff :=0;_ggff < int (_cada .HGridHeight );
_ggff ++{for _bgde :=0;_bgde < int (_cada .HGridWidth );_bgde ++{_ggcgg =_cada .computeX (_ggff ,_bgde );_cefc =_cada .computeY (_ggff ,_bgde );_fdba :=_cada .Patterns [_dba [_ggff ][_bgde ]];if _bdbb =_cf .Blit (_fdba ,_cada .HalftoneRegionBitmap ,_ggcgg +int (_cada .HGridX ),_cefc +int (_cada .HGridY ),_cada .CombinationOperator );
_bdbb !=nil {return _bdbb ;};};};return nil ;};func (_ebeg *GenericRefinementRegion )updateOverride ()error {if _ebeg .GrAtX ==nil ||_ebeg .GrAtY ==nil {return _ac .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ebeg .GrAtX )!=len (_ebeg .GrAtY ){return _ac .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ebeg ._fb =make ([]bool ,len (_ebeg .GrAtX ));switch _ebeg .TemplateID {case 0:if _ebeg .GrAtX [0]!=-1&&_ebeg .GrAtY [0]!=-1{_ebeg ._fb [0]=true ;
_ebeg ._cg =true ;};if _ebeg .GrAtX [1]!=-1&&_ebeg .GrAtY [1]!=-1{_ebeg ._fb [1]=true ;_ebeg ._cg =true ;};case 1:_ebeg ._cg =false ;};return nil ;};type Regioner interface{GetRegionBitmap ()(*_cf .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_eee *GenericRefinementRegion )decodeTemplate (_bag ,_aba ,_fcc ,_ec ,_bfdd ,_aagc ,_cgfa ,_efcf ,_gee ,_dce int ,_dea templater )(_aad error ){var (_geg ,_bebe ,_ebc ,_cace ,_dbfg int16 ;
_gab ,_ebee ,_ffb ,_gabd int ;_caab byte ;);if _gee >=1&&(_gee -1)< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -_ec );if _aad !=nil {return _aad ;};_gab =int (_caab );};if _gee >=0&&(_gee )< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce );
if _aad !=nil {return _aad ;};_ebee =int (_caab );};if _gee >=-1&&(_gee +1)< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce +_ec );if _aad !=nil {return _aad ;};_ffb =int (_caab );};_dce ++;if _bag >=1{_caab ,_aad =_eee .RegionBitmap .GetByte (_efcf -_fcc );
if _aad !=nil {return _aad ;};_gabd =int (_caab );};_efcf ++;_acbe :=_eee .ReferenceDX %8;_badc :=6+_acbe ;_fcg :=_dce %_ec ;if _badc >=0{if _badc < 8{_geg =int16 (_gab >>uint (_badc ))&0x07;};if _badc < 8{_bebe =int16 (_ebee >>uint (_badc ))&0x07;};if _badc < 8{_ebc =int16 (_ffb >>uint (_badc ))&0x07;
};if _badc ==6&&_fcg > 1{if _gee >=1&&(_gee -1)< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -_ec -2);if _aad !=nil {return _aad ;};_geg |=int16 (_caab <<2)&0x04;};if _gee >=0&&_gee < _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -2);
if _aad !=nil {return _aad ;};_bebe |=int16 (_caab <<2)&0x04;};if _gee >=-1&&_gee +1< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce +_ec -2);if _aad !=nil {return _aad ;};_ebc |=int16 (_caab <<2)&0x04;};};if _badc ==0{_gab =0;
_ebee =0;_ffb =0;if _fcg < _ec -1{if _gee >=1&&_gee -1< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -_ec );if _aad !=nil {return _aad ;};_gab =int (_caab );};if _gee >=0&&_gee < _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce );
if _aad !=nil {return _aad ;};_ebee =int (_caab );};if _gee >=-1&&_gee +1< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce +_ec );if _aad !=nil {return _aad ;};_ffb =int (_caab );};};_dce ++;};}else {_geg =int16 (_gab <<1)&0x07;
_bebe =int16 (_ebee <<1)&0x07;_ebc =int16 (_ffb <<1)&0x07;_gab =0;_ebee =0;_ffb =0;if _fcg < _ec -1{if _gee >=1&&_gee -1< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -_ec );if _aad !=nil {return _aad ;};_gab =int (_caab );
};if _gee >=0&&_gee < _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce );if _aad !=nil {return _aad ;};_ebee =int (_caab );};if _gee >=-1&&_gee +1< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce +_ec );
if _aad !=nil {return _aad ;};_ffb =int (_caab );};_dce ++;};_geg |=int16 ((_gab >>7)&0x07);_bebe |=int16 ((_ebee >>7)&0x07);_ebc |=int16 ((_ffb >>7)&0x07);};_cace =int16 (_gabd >>6);_dbfg =0;_age :=(2-_acbe )%8;_gab <<=uint (_age );_ebee <<=uint (_age );
_ffb <<=uint (_age );_gabd <<=2;var _bbf int ;for _ggg :=0;_ggg < _aba ;_ggg ++{_ade :=_ggg &0x07;_gb :=_dea .form (_geg ,_bebe ,_ebc ,_cace ,_dbfg );if _eee ._cg {_caab ,_aad =_eee .RegionBitmap .GetByte (_eee .RegionBitmap .GetByteIndex (_ggg ,_bag ));
if _aad !=nil {return _aad ;};_eee ._df .SetIndex (int32 (_eee .overrideAtTemplate0 (int (_gb ),_ggg ,_bag ,int (_caab ),_ade )));}else {_eee ._df .SetIndex (int32 (_gb ));};_bbf ,_aad =_eee ._edc .DecodeBit (_eee ._df );if _aad !=nil {return _aad ;};if _aad =_eee .RegionBitmap .SetPixel (_ggg ,_bag ,byte (_bbf ));
_aad !=nil {return _aad ;};_geg =((_geg <<1)|0x01&int16 (_gab >>7))&0x07;_bebe =((_bebe <<1)|0x01&int16 (_ebee >>7))&0x07;_ebc =((_ebc <<1)|0x01&int16 (_ffb >>7))&0x07;_cace =((_cace <<1)|0x01&int16 (_gabd >>7))&0x07;_dbfg =int16 (_bbf );if (_ggg -int (_eee .ReferenceDX ))%8==5{_gab =0;
_ebee =0;_ffb =0;if ((_ggg -int (_eee .ReferenceDX ))/8)+1< _eee .ReferenceBitmap .RowStride {if _gee >=1&&(_gee -1)< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce -_ec );if _aad !=nil {return _aad ;};_gab =int (_caab );
};if _gee >=0&&_gee < _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce );if _aad !=nil {return _aad ;};_ebee =int (_caab );};if _gee >=-1&&(_gee +1)< _eee .ReferenceBitmap .Height {_caab ,_aad =_eee .ReferenceBitmap .GetByte (_dce +_ec );
if _aad !=nil {return _aad ;};_ffb =int (_caab );};};_dce ++;}else {_gab <<=1;_ebee <<=1;_ffb <<=1;};if _ade ==5&&_bag >=1{if ((_ggg >>3)+1)>=_eee .RegionBitmap .RowStride {_gabd =0;}else {_caab ,_aad =_eee .RegionBitmap .GetByte (_efcf -_fcc );if _aad !=nil {return _aad ;
};_gabd =int (_caab );};_efcf ++;}else {_gabd <<=1;};};return nil ;};func (_agebb *SymbolDictionary )setExportedSymbols (_agcf []int ){for _febgg :=uint32 (0);_febgg < _agebb ._aca +_agebb .NumberOfNewSymbols ;_febgg ++{if _agcf [_febgg ]==1{var _faae *_cf .Bitmap ;
if _febgg < _agebb ._aca {_faae =_agebb ._gabe [_febgg ];}else {_faae =_agebb ._fagb [_febgg -_agebb ._aca ];};_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_faae );
_agebb ._egef =append (_agebb ._egef ,_faae );};};};func (_bbag *Header )GetSegmentData ()(Segmenter ,error ){var _gcfb Segmenter ;if _bbag .SegmentData !=nil {_gcfb =_bbag .SegmentData ;};if _gcfb ==nil {_adfgc ,_ffbb :=_aaf [_bbag .Type ];if !_ffbb {return nil ,_ad .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bbag .Type ,_bbag .Type );
};_gcfb =_adfgc ();_be .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bbag .SegmentNumber ,_bbag .SegmentDataStartOffset );
_afbc ,_abab :=_bbag .subInputReader ();if _abab !=nil {return nil ,_abab ;};if _deb :=_gcfb .Init (_bbag ,_afbc );_deb !=nil {_be .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_deb ,_gcfb );
return nil ,_deb ;};_bbag .SegmentData =_gcfb ;};return _gcfb ,nil ;};func (_bcad *Header )readSegmentNumber (_bfa *_e .Reader )error {const _ddgb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_aadga :=make ([]byte ,4);
_ ,_edaa :=_bfa .Read (_aadga );if _edaa !=nil {return _gg .Wrap (_edaa ,_ddgb ,"");};_bcad .SegmentNumber =_dd .BigEndian .Uint32 (_aadga );return nil ;};func (_afa *HalftoneRegion )checkInput ()error {if _afa .IsMMREncoded {if _afa .HTemplate !=0{_be .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_afa .HTemplate );
};if _afa .HSkipEnabled {_be .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_afa .HSkipEnabled );
};};return nil ;};func (_gegg *HalftoneRegion )GetPatterns ()([]*_cf .Bitmap ,error ){var (_ffaf []*_cf .Bitmap ;_bgfc error ;);for _ ,_ggcg :=range _gegg ._egac .RTSegments {var _caf Segmenter ;_caf ,_bgfc =_ggcg .GetSegmentData ();if _bgfc !=nil {_be .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_bgfc );
return nil ,_bgfc ;};_ace ,_ebd :=_caf .(*PatternDictionary );if !_ebd {_bgfc =_ad .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_caf );
return nil ,_bgfc ;};var _afee []*_cf .Bitmap ;_afee ,_bgfc =_ace .GetDictionary ();if _bgfc !=nil {_be .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bgfc );
return nil ,_bgfc ;};_ffaf =append (_ffaf ,_afee ...);};return _ffaf ,nil ;};func (_cgd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cgd .RegionInfo };type TextRegion struct{_ceba *_e .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;
SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cf .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;
SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gfea int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cf .Bitmap ;Symbols []*_cf .Bitmap ;_geab *_b .Decoder ;_cecb *GenericRefinementRegion ;
_gdab *_b .DecoderStats ;_bcbf *_b .DecoderStats ;_cdgbf *_b .DecoderStats ;_bcde *_b .DecoderStats ;_ceg *_b .DecoderStats ;_bdeb *_b .DecoderStats ;_ggbf *_b .DecoderStats ;_ggae *_b .DecoderStats ;_ddbdg *_b .DecoderStats ;_bcgg *_b .DecoderStats ;_gdag *_b .DecoderStats ;
_eeedb int8 ;_fgac *_fg .FixedSizeTable ;Header *Header ;_ceebb _fg .Tabler ;_ggaf _fg .Tabler ;_adccf _fg .Tabler ;_eaaef _fg .Tabler ;_ecba _fg .Tabler ;_gfeag _fg .Tabler ;_abg _fg .Tabler ;_eaab _fg .Tabler ;_eea ,_cbcc map[int ]int ;_ggee []int ;_deff *_cf .Points ;
_fbga *_cf .Bitmaps ;_daad *_fe .IntSlice ;_ggcc ,_caef int ;_efbf *_cf .Boxes ;};func (_ebca *GenericRegion )overrideAtTemplate1 (_edec ,_fbca ,_gege ,_cfe ,_agcef int )int {_edec &=0x1FF7;if _ebca .GBAtY [0]==0&&_ebca .GBAtX [0]>=-int8 (_agcef ){_edec |=(_cfe >>uint (7-(int8 (_agcef )+_ebca .GBAtX [0]))&0x1)<<3;
}else {_edec |=int (_ebca .getPixel (_fbca +int (_ebca .GBAtX [0]),_gege +int (_ebca .GBAtY [0])))<<3;};return _edec ;};func (_badd *RegionSegment )readCombinationOperator ()error {_fgec ,_ged :=_badd ._gdac .ReadBits (3);if _ged !=nil {return _ged ;};
_badd .CombinaionOperator =_cf .CombinationOperator (_fgec &0xF);return nil ;};func (_ccc *GenericRegion )decodeTemplate1 (_gagb ,_gdf ,_gbcc int ,_afe ,_cecc int )(_bde error ){const _ebac ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ddb ,_fea int ;_cfgae ,_adaa int ;_fdcf byte ;_adca ,_fecg int ;);if _gagb >=1{_fdcf ,_bde =_ccc .Bitmap .GetByte (_cecc );if _bde !=nil {return _gg .Wrap (_bde ,_ebac ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfgae =int (_fdcf );};if _gagb >=2{_fdcf ,_bde =_ccc .Bitmap .GetByte (_cecc -_ccc .Bitmap .RowStride );
if _bde !=nil {return _gg .Wrap (_bde ,_ebac ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_adaa =int (_fdcf )<<5;};_ddb =((_cfgae >>1)&0x1f8)|((_adaa >>1)&0x1e00);for _cab :=0;_cab < _gbcc ;_cab =_adca {var (_aecc byte ;_gadf int ;);_adca =_cab +8;
if _bcg :=_gdf -_cab ;_bcg > 8{_gadf =8;}else {_gadf =_bcg ;};if _gagb > 0{_cfgae <<=8;if _adca < _gdf {_fdcf ,_bde =_ccc .Bitmap .GetByte (_cecc +1);if _bde !=nil {return _gg .Wrap (_bde ,_ebac ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cfgae |=int (_fdcf );
};};if _gagb > 1{_adaa <<=8;if _adca < _gdf {_fdcf ,_bde =_ccc .Bitmap .GetByte (_cecc -_ccc .Bitmap .RowStride +1);if _bde !=nil {return _gg .Wrap (_bde ,_ebac ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_adaa |=int (_fdcf )<<5;};};for _dfb :=0;
_dfb < _gadf ;_dfb ++{if _ccc ._cda {_fea =_ccc .overrideAtTemplate1 (_ddb ,_cab +_dfb ,_gagb ,int (_aecc ),_dfb );_ccc ._gdg .SetIndex (int32 (_fea ));}else {_ccc ._gdg .SetIndex (int32 (_ddb ));};_fecg ,_bde =_ccc ._gdb .DecodeBit (_ccc ._gdg );if _bde !=nil {return _gg .Wrap (_bde ,_ebac ,"");
};_aecc |=byte (_fecg )<<uint (7-_dfb );_gcc :=uint (8-_dfb );_ddb =((_ddb &0xefb)<<1)|_fecg |((_cfgae >>_gcc )&0x8)|((_adaa >>_gcc )&0x200);};if _gdfb :=_ccc .Bitmap .SetByte (_afe ,_aecc );_gdfb !=nil {return _gg .Wrap (_gdfb ,_ebac ,"");};_afe ++;_cecc ++;
};return nil ;};func (_aaga *TextRegion )readRegionFlags ()error {var (_abga int ;_gdgf uint64 ;_geed error ;);_abga ,_geed =_aaga ._ceba .ReadBit ();if _geed !=nil {return _geed ;};_aaga .SbrTemplate =int8 (_abga );_gdgf ,_geed =_aaga ._ceba .ReadBits (5);
if _geed !=nil {return _geed ;};_aaga .SbDsOffset =int8 (_gdgf );if _aaga .SbDsOffset > 0x0f{_aaga .SbDsOffset -=0x20;};_abga ,_geed =_aaga ._ceba .ReadBit ();if _geed !=nil {return _geed ;};_aaga .DefaultPixel =int8 (_abga );_gdgf ,_geed =_aaga ._ceba .ReadBits (2);
if _geed !=nil {return _geed ;};_aaga .CombinationOperator =_cf .CombinationOperator (int (_gdgf )&0x3);_abga ,_geed =_aaga ._ceba .ReadBit ();if _geed !=nil {return _geed ;};_aaga .IsTransposed =int8 (_abga );_gdgf ,_geed =_aaga ._ceba .ReadBits (2);if _geed !=nil {return _geed ;
};_aaga .ReferenceCorner =int16 (_gdgf )&0x3;_gdgf ,_geed =_aaga ._ceba .ReadBits (2);if _geed !=nil {return _geed ;};_aaga .LogSBStrips =int16 (_gdgf )&0x3;_aaga .SbStrips =1<<uint (_aaga .LogSBStrips );_abga ,_geed =_aaga ._ceba .ReadBit ();if _geed !=nil {return _geed ;
};if _abga ==1{_aaga .UseRefinement =true ;};_abga ,_geed =_aaga ._ceba .ReadBit ();if _geed !=nil {return _geed ;};if _abga ==1{_aaga .IsHuffmanEncoded =true ;};return nil ;};func (_dggf *PageInformationSegment )readResolution ()error {_aceg ,_bead :=_dggf ._bagf .ReadBits (32);
if _bead !=nil {return _bead ;};_dggf .ResolutionX =int (_aceg &_a .MaxInt32 );_aceg ,_bead =_dggf ._bagf .ReadBits (32);if _bead !=nil {return _bead ;};_dggf .ResolutionY =int (_aceg &_a .MaxInt32 );return nil ;};func (_gbb *GenericRegion )decodeTemplate3 (_bbc ,_afc ,_bgg int ,_adeb ,_aga int )(_ebfb error ){const _egb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_abc ,_cdgd int ;_fgaf int ;_dbb byte ;_ggbb ,_cdd int ;);if _bbc >=1{_dbb ,_ebfb =_gbb .Bitmap .GetByte (_aga );if _ebfb !=nil {return _gg .Wrap (_ebfb ,_egb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgaf =int (_dbb );};_abc =(_fgaf >>1)&0x70;
for _adfg :=0;_adfg < _bgg ;_adfg =_ggbb {var (_gcb byte ;_bace int ;);_ggbb =_adfg +8;if _ffeg :=_afc -_adfg ;_ffeg > 8{_bace =8;}else {_bace =_ffeg ;};if _bbc >=1{_fgaf <<=8;if _ggbb < _afc {_dbb ,_ebfb =_gbb .Bitmap .GetByte (_aga +1);if _ebfb !=nil {return _gg .Wrap (_ebfb ,_egb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fgaf |=int (_dbb );};};for _aeg :=0;_aeg < _bace ;_aeg ++{if _gbb ._cda {_cdgd =_gbb .overrideAtTemplate3 (_abc ,_adfg +_aeg ,_bbc ,int (_gcb ),_aeg );_gbb ._gdg .SetIndex (int32 (_cdgd ));}else {_gbb ._gdg .SetIndex (int32 (_abc ));};_cdd ,_ebfb =_gbb ._gdb .DecodeBit (_gbb ._gdg );
if _ebfb !=nil {return _gg .Wrap (_ebfb ,_egb ,"");};_gcb |=byte (_cdd )<<byte (7-_aeg );_abc =((_abc &0x1f7)<<1)|_cdd |((_fgaf >>uint (8-_aeg ))&0x010);};if _bec :=_gbb .Bitmap .SetByte (_adeb ,_gcb );_bec !=nil {return _gg .Wrap (_bec ,_egb ,"");};_adeb ++;
_aga ++;};return nil ;};func (_bdd *GenericRegion )computeSegmentDataStructure ()error {_bdd .DataOffset =_bdd ._dcee .AbsolutePosition ();_bdd .DataHeaderLength =_bdd .DataOffset -_bdd .DataHeaderOffset ;_bdd .DataLength =int64 (_bdd ._dcee .AbsoluteLength ())-_bdd .DataHeaderLength ;
return nil ;};func (_fddd *Header )writeReferredToCount (_ecee _e .BinaryWriter )(_cedb int ,_ffgba error ){const _acca ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_fddd .RTSNumbers =make ([]int ,len (_fddd .RTSegments ));
for _dggd ,_ggcb :=range _fddd .RTSegments {_fddd .RTSNumbers [_dggd ]=int (_ggcb .SegmentNumber );};if len (_fddd .RTSNumbers )<=4{var _adfc byte ;if len (_fddd .RetainBits )>=1{_adfc =_fddd .RetainBits [0];};_adfc |=byte (len (_fddd .RTSNumbers ))<<5;
if _ffgba =_ecee .WriteByte (_adfc );_ffgba !=nil {return 0,_gg .Wrap (_ffgba ,_acca ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ccdag :=uint32 (len (_fddd .RTSNumbers ));_gcdd :=make ([]byte ,4+_fe .Ceil (len (_fddd .RTSNumbers )+1,8));
_ccdag |=0x7<<29;_dd .BigEndian .PutUint32 (_gcdd ,_ccdag );copy (_gcdd [1:],_fddd .RetainBits );_cedb ,_ffgba =_ecee .Write (_gcdd );if _ffgba !=nil {return 0,_gg .Wrap (_ffgba ,_acca ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};
return _cedb ,nil ;};func (_efef *PatternDictionary )checkInput ()error {if _efef .HdpHeight < 1||_efef .HdpWidth < 1{return _ac .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _efef .IsMMREncoded {if _efef .HDTemplate !=0{_be .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_dbfe *SymbolDictionary )addSymbol (_agaea Regioner )error {_aedcb ,_acegf :=_agaea .GetRegionBitmap ();if _acegf !=nil {return _acegf ;};_dbfe ._fagb [_dbfe ._bbeb ]=_aedcb ;_dbfe ._edcce =append (_dbfe ._edcce ,_aedcb );_be .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_aedcb );
return nil ;};func (_ebad *Header )writeSegmentDataLength (_acf _e .BinaryWriter )(_gfc int ,_gcgf error ){_egea :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_egea ,uint32 (_ebad .SegmentDataLength ));if _gfc ,_gcgf =_acf .Write (_egea );_gcgf !=nil {return 0,_gg .Wrap (_gcgf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _gfc ,nil ;};func (_fgbe *TextRegion )symbolIDCodeLengths ()error {var (_badcd []*_fg .Code ;_fada uint64 ;_adae _fg .Tabler ;_aggff error ;);for _efeg :=0;_efeg < 35;_efeg ++{_fada ,_aggff =_fgbe ._ceba .ReadBits (4);if _aggff !=nil {return _aggff ;
};_efdde :=int (_fada &0xf);if _efdde > 0{_badcd =append (_badcd ,_fg .NewCode (int32 (_efdde ),0,int32 (_efeg ),false ));};};_adae ,_aggff =_fg .NewFixedSizeTable (_badcd );if _aggff !=nil {return _aggff ;};var (_cdbdd int64 ;_ccff uint32 ;_ebgbc []*_fg .Code ;
_eaece int64 ;);for _ccff < _fgbe .NumberOfSymbols {_eaece ,_aggff =_adae .Decode (_fgbe ._ceba );if _aggff !=nil {return _aggff ;};if _eaece < 32{if _eaece > 0{_ebgbc =append (_ebgbc ,_fg .NewCode (int32 (_eaece ),0,int32 (_ccff ),false ));};_cdbdd =_eaece ;
_ccff ++;}else {var _fafg ,_cfafa int64 ;switch _eaece {case 32:_fada ,_aggff =_fgbe ._ceba .ReadBits (2);if _aggff !=nil {return _aggff ;};_fafg =3+int64 (_fada );if _ccff > 0{_cfafa =_cdbdd ;};case 33:_fada ,_aggff =_fgbe ._ceba .ReadBits (3);if _aggff !=nil {return _aggff ;
};_fafg =3+int64 (_fada );case 34:_fada ,_aggff =_fgbe ._ceba .ReadBits (7);if _aggff !=nil {return _aggff ;};_fafg =11+int64 (_fada );};for _fabe :=0;_fabe < int (_fafg );_fabe ++{if _cfafa > 0{_ebgbc =append (_ebgbc ,_fg .NewCode (int32 (_cfafa ),0,int32 (_ccff ),false ));
};_ccff ++;};};};_fgbe ._ceba .Align ();_fgbe ._fgac ,_aggff =_fg .NewFixedSizeTable (_ebgbc );return _aggff ;};func (_addg *Header )readDataStartOffset (_abfa *_e .Reader ,_dgebd OrganizationType ){if _dgebd ==OSequential {_addg .SegmentDataStartOffset =uint64 (_abfa .AbsolutePosition ());
};};func (_dbge *RegionSegment )Encode (w _e .BinaryWriter )(_ffbd int ,_bafdb error ){const _feea ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_dbcg :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_dbcg ,_dbge .BitmapWidth );
_ffbd ,_bafdb =w .Write (_dbcg );if _bafdb !=nil {return 0,_gg .Wrap (_bafdb ,_feea ,"\u0057\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_dbcg ,_dbge .BitmapHeight );var _cdca int ;_cdca ,_bafdb =w .Write (_dbcg );if _bafdb !=nil {return 0,_gg .Wrap (_bafdb ,_feea ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_ffbd +=_cdca ;_dd .BigEndian .PutUint32 (_dbcg ,_dbge .XLocation );_cdca ,_bafdb =w .Write (_dbcg );if _bafdb !=nil {return 0,_gg .Wrap (_bafdb ,_feea ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ffbd +=_cdca ;_dd .BigEndian .PutUint32 (_dbcg ,_dbge .YLocation );
_cdca ,_bafdb =w .Write (_dbcg );if _bafdb !=nil {return 0,_gg .Wrap (_bafdb ,_feea ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ffbd +=_cdca ;if _bafdb =w .WriteByte (byte (_dbge .CombinaionOperator )&0x07);_bafdb !=nil {return 0,_gg .Wrap (_bafdb ,_feea ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_ffbd ++;return _ffbd ,nil ;};func (_fdga *Header )String ()string {_edag :=&_c .Builder {};_edag .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_edag .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fdga .SegmentNumber ));
_edag .WriteString (_ad .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fdga .Type ));_edag .WriteString (_ad .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fdga .RetainFlag ));
_edag .WriteString (_ad .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fdga .PageAssociation ));_edag .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fdga .PageAssociationFieldSize ));
_edag .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_feae :=range _fdga .RTSNumbers {_edag .WriteString (_ad .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_feae ));};_edag .WriteString (_ad .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fdga .HeaderLength ));
_edag .WriteString (_ad .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fdga .SegmentDataLength ));_edag .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fdga .SegmentDataStartOffset ));
return _edag .String ();};func (_de *EndOfStripe )parseHeader ()error {_bb ,_ef :=_de ._ee .ReadBits (32);if _ef !=nil {return _ef ;};_de ._fd =int (_bb &_a .MaxInt32 );return nil ;};func (_dfdc *HalftoneRegion )shiftAndFill (_gfdd int )int {_gfdd >>=8;
if _gfdd < 0{_dfac :=int (_a .Log (float64 (_eeff (_gfdd )))/_a .Log (2));_ebec :=31-_dfac ;for _ffd :=1;_ffd < _ebec ;_ffd ++{_gfdd |=1<<uint (31-_ffd );};};return _gfdd ;};func (_ggda *SymbolDictionary )readAtPixels (_ceaed int )error {_ggda .SdATX =make ([]int8 ,_ceaed );
_ggda .SdATY =make ([]int8 ,_ceaed );var (_bdcfd byte ;_bdcg error ;);for _cbbd :=0;_cbbd < _ceaed ;_cbbd ++{_bdcfd ,_bdcg =_ggda ._bbagd .ReadByte ();if _bdcg !=nil {return _bdcg ;};_ggda .SdATX [_cbbd ]=int8 (_bdcfd );_bdcfd ,_bdcg =_ggda ._bbagd .ReadByte ();
if _bdcg !=nil {return _bdcg ;};_ggda .SdATY [_cbbd ]=int8 (_bdcfd );};return nil ;};func (_dabc *TextRegion )decodeDfs ()(int64 ,error ){if _dabc .IsHuffmanEncoded {if _dabc .SbHuffFS ==3{if _dabc ._ceebb ==nil {var _beccb error ;_dabc ._ceebb ,_beccb =_dabc .getUserTable (0);
if _beccb !=nil {return 0,_beccb ;};};return _dabc ._ceebb .Decode (_dabc ._ceba );};_gfeaga ,_gdddd :=_fg .GetStandardTable (6+int (_dabc .SbHuffFS ));if _gdddd !=nil {return 0,_gdddd ;};return _gfeaga .Decode (_dabc ._ceba );};_ecdc ,_agbdg :=_dabc ._geab .DecodeInt (_dabc ._bcbf );
if _agbdg !=nil {return 0,_agbdg ;};return int64 (_ecdc ),nil ;};func (_acce *TableSegment )StreamReader ()*_e .Reader {return _acce ._ageg };type EndOfStripe struct{_ee *_e .Reader ;_fd int ;};func _cbae (_fdac *_e .Reader ,_dgebg *Header )*TextRegion {_ffce :=&TextRegion {_ceba :_fdac ,Header :_dgebg ,RegionInfo :NewRegionSegment (_fdac )};
return _ffce ;};func (_cdac *GenericRegion )updateOverrideFlags ()error {const _gdgd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cdac .GBAtX ==nil ||_cdac .GBAtY ==nil {return nil ;};if len (_cdac .GBAtX )!=len (_cdac .GBAtY ){return _gg .Errorf (_gdgd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cdac .GBAtX ),len (_cdac .GBAtY ));
};_cdac .GBAtOverride =make ([]bool ,len (_cdac .GBAtX ));switch _cdac .GBTemplate {case 0:if !_cdac .UseExtTemplates {if _cdac .GBAtX [0]!=3||_cdac .GBAtY [0]!=-1{_cdac .setOverrideFlag (0);};if _cdac .GBAtX [1]!=-3||_cdac .GBAtY [1]!=-1{_cdac .setOverrideFlag (1);
};if _cdac .GBAtX [2]!=2||_cdac .GBAtY [2]!=-2{_cdac .setOverrideFlag (2);};if _cdac .GBAtX [3]!=-2||_cdac .GBAtY [3]!=-2{_cdac .setOverrideFlag (3);};}else {if _cdac .GBAtX [0]!=-2||_cdac .GBAtY [0]!=0{_cdac .setOverrideFlag (0);};if _cdac .GBAtX [1]!=0||_cdac .GBAtY [1]!=-2{_cdac .setOverrideFlag (1);
};if _cdac .GBAtX [2]!=-2||_cdac .GBAtY [2]!=-1{_cdac .setOverrideFlag (2);};if _cdac .GBAtX [3]!=-1||_cdac .GBAtY [3]!=-2{_cdac .setOverrideFlag (3);};if _cdac .GBAtX [4]!=1||_cdac .GBAtY [4]!=-2{_cdac .setOverrideFlag (4);};if _cdac .GBAtX [5]!=2||_cdac .GBAtY [5]!=-1{_cdac .setOverrideFlag (5);
};if _cdac .GBAtX [6]!=-3||_cdac .GBAtY [6]!=0{_cdac .setOverrideFlag (6);};if _cdac .GBAtX [7]!=-4||_cdac .GBAtY [7]!=0{_cdac .setOverrideFlag (7);};if _cdac .GBAtX [8]!=2||_cdac .GBAtY [8]!=-2{_cdac .setOverrideFlag (8);};if _cdac .GBAtX [9]!=3||_cdac .GBAtY [9]!=-1{_cdac .setOverrideFlag (9);
};if _cdac .GBAtX [10]!=-2||_cdac .GBAtY [10]!=-2{_cdac .setOverrideFlag (10);};if _cdac .GBAtX [11]!=-3||_cdac .GBAtY [11]!=-1{_cdac .setOverrideFlag (11);};};case 1:if _cdac .GBAtX [0]!=3||_cdac .GBAtY [0]!=-1{_cdac .setOverrideFlag (0);};case 2:if _cdac .GBAtX [0]!=2||_cdac .GBAtY [0]!=-1{_cdac .setOverrideFlag (0);
};case 3:if _cdac .GBAtX [0]!=2||_cdac .GBAtY [0]!=-1{_cdac .setOverrideFlag (0);};};return nil ;};func (_ed *EndOfStripe )LineNumber ()int {return _ed ._fd };type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cf .Bitmap ,error );};
func (_ddfg *TextRegion )readHuffmanFlags ()error {var (_cdcag int ;_dbac uint64 ;_gcbb error ;);_ ,_gcbb =_ddfg ._ceba .ReadBit ();if _gcbb !=nil {return _gcbb ;};_cdcag ,_gcbb =_ddfg ._ceba .ReadBit ();if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffRSize =int8 (_cdcag );
_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffRDY =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffRDX =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);
if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffRDHeight =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffRDWidth =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;
};_ddfg .SbHuffDT =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffDS =int8 (_dbac )&0xf;_dbac ,_gcbb =_ddfg ._ceba .ReadBits (2);if _gcbb !=nil {return _gcbb ;};_ddfg .SbHuffFS =int8 (_dbac )&0xf;
return nil ;};func (_cgfe *SymbolDictionary )getSymbol (_facb int )(*_cf .Bitmap ,error ){const _ceccg ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_eadb ,_eecd :=_cgfe ._eefd .GetBitmap (_cgfe ._gegea [_facb ]);if _eecd !=nil {return nil ,_gg .Wrap (_eecd ,_ceccg ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _eadb ,nil ;};func (_ggfa *PatternDictionary )readPatternWidthAndHeight ()error {_ggaa ,_bdg :=_ggfa ._dggb .ReadByte ();if _bdg !=nil {return _bdg ;};_ggfa .HdpWidth =_ggaa ;_ggaa ,_bdg =_ggfa ._dggb .ReadByte ();if _bdg !=nil {return _bdg ;};
_ggfa .HdpHeight =_ggaa ;return nil ;};func (_aae *SymbolDictionary )setCodingStatistics ()error {if _aae ._bdbd ==nil {_aae ._bdbd =_b .NewStats (512,1);};if _aae ._aeba ==nil {_aae ._aeba =_b .NewStats (512,1);};if _aae ._afcd ==nil {_aae ._afcd =_b .NewStats (512,1);
};if _aae ._ddbd ==nil {_aae ._ddbd =_b .NewStats (512,1);};if _aae ._cgcb ==nil {_aae ._cgcb =_b .NewStats (512,1);};if _aae .UseRefinementAggregation &&_aae ._bgff ==nil {_aae ._bgff =_b .NewStats (1<<uint (_aae ._fgf ),1);_aae ._gagd =_b .NewStats (512,1);
_aae ._egcf =_b .NewStats (512,1);};if _aae ._gbd ==nil {_aae ._gbd =_b .NewStats (65536,1);};if _aae ._cbgf ==nil {var _adcce error ;_aae ._cbgf ,_adcce =_b .New (_aae ._bbagd );if _adcce !=nil {return _adcce ;};};return nil ;};type GenericRefinementRegion struct{_cae templater ;
_fgg templater ;_gga *_e .Reader ;_bf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cf .Bitmap ;ReferenceBitmap *_cf .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_edc *_b .Decoder ;
_df *_b .DecoderStats ;_cg bool ;_fb []bool ;};func (_gafd *GenericRegion )GetRegionInfo ()*RegionSegment {return _gafd .RegionSegment };func (_dafc *HalftoneRegion )parseHeader ()error {if _caeg :=_dafc .RegionSegment .parseHeader ();_caeg !=nil {return _caeg ;
};_cba ,_ecfe :=_dafc ._cgad .ReadBit ();if _ecfe !=nil {return _ecfe ;};_dafc .HDefaultPixel =int8 (_cba );_abaa ,_ecfe :=_dafc ._cgad .ReadBits (3);if _ecfe !=nil {return _ecfe ;};_dafc .CombinationOperator =_cf .CombinationOperator (_abaa &0xf);_cba ,_ecfe =_dafc ._cgad .ReadBit ();
if _ecfe !=nil {return _ecfe ;};if _cba ==1{_dafc .HSkipEnabled =true ;};_abaa ,_ecfe =_dafc ._cgad .ReadBits (2);if _ecfe !=nil {return _ecfe ;};_dafc .HTemplate =byte (_abaa &0xf);_cba ,_ecfe =_dafc ._cgad .ReadBit ();if _ecfe !=nil {return _ecfe ;};
if _cba ==1{_dafc .IsMMREncoded =true ;};_abaa ,_ecfe =_dafc ._cgad .ReadBits (32);if _ecfe !=nil {return _ecfe ;};_dafc .HGridWidth =uint32 (_abaa &_a .MaxUint32 );_abaa ,_ecfe =_dafc ._cgad .ReadBits (32);if _ecfe !=nil {return _ecfe ;};_dafc .HGridHeight =uint32 (_abaa &_a .MaxUint32 );
_abaa ,_ecfe =_dafc ._cgad .ReadBits (32);if _ecfe !=nil {return _ecfe ;};_dafc .HGridX =int32 (_abaa &_a .MaxInt32 );_abaa ,_ecfe =_dafc ._cgad .ReadBits (32);if _ecfe !=nil {return _ecfe ;};_dafc .HGridY =int32 (_abaa &_a .MaxInt32 );_abaa ,_ecfe =_dafc ._cgad .ReadBits (16);
if _ecfe !=nil {return _ecfe ;};_dafc .HRegionX =uint16 (_abaa &_a .MaxUint16 );_abaa ,_ecfe =_dafc ._cgad .ReadBits (16);if _ecfe !=nil {return _ecfe ;};_dafc .HRegionY =uint16 (_abaa &_a .MaxUint16 );if _ecfe =_dafc .computeSegmentDataStructure ();_ecfe !=nil {return _ecfe ;
};return _dafc .checkInput ();};func (_aedf *PatternDictionary )readGrayMax ()error {_fggdd ,_bbgc :=_aedf ._dggb .ReadBits (32);if _bbgc !=nil {return _bbgc ;};_aedf .GrayMax =uint32 (_fggdd &_a .MaxUint32 );return nil ;};func (_bdfcf *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _fggdad ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _bdfcf .SbHuffRSize ==0{_edge ,_faebd :=_fg .GetStandardTable (1);if _faebd !=nil {return 0,_gg .Wrap (_faebd ,_fggdad ,"");};return _edge .Decode (_bdfcf ._ceba );};if _bdfcf ._eaab ==nil {var (_fbbea int ;_eabc error ;);if _bdfcf .SbHuffFS ==3{_fbbea ++;
};if _bdfcf .SbHuffDS ==3{_fbbea ++;};if _bdfcf .SbHuffDT ==3{_fbbea ++;};if _bdfcf .SbHuffRDWidth ==3{_fbbea ++;};if _bdfcf .SbHuffRDHeight ==3{_fbbea ++;};if _bdfcf .SbHuffRDX ==3{_fbbea ++;};if _bdfcf .SbHuffRDY ==3{_fbbea ++;};_bdfcf ._eaab ,_eabc =_bdfcf .getUserTable (_fbbea );
if _eabc !=nil {return 0,_gg .Wrap (_eabc ,_fggdad ,"");};};_ggfe ,_aeggf :=_bdfcf ._eaab .Decode (_bdfcf ._ceba );if _aeggf !=nil {return 0,_gg .Wrap (_aeggf ,_fggdad ,"");};return _ggfe ,nil ;};func (_gbba *Header )readReferredToSegmentNumbers (_bcec *_e .Reader ,_cgde int )([]int ,error ){const _baag ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cdgb :=make ([]int ,_cgde );if _cgde > 0{_gbba .RTSegments =make ([]*Header ,_cgde );var (_ffee uint64 ;_gcgb error ;);for _bbbg :=0;_bbbg < _cgde ;_bbbg ++{_ffee ,_gcgb =_bcec .ReadBits (byte (_gbba .referenceSize ())<<3);if _gcgb !=nil {return nil ,_gg .Wrapf (_gcgb ,_baag ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bbbg );
};_cdgb [_bbbg ]=int (_ffee &_a .MaxInt32 );};};return _cdgb ,nil ;};func (_bafb *PatternDictionary )parseHeader ()error {_be .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_be .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_abbf :=_bafb ._dggb .ReadBits (5);if _abbf !=nil {return _abbf ;};if _abbf =_bafb .readTemplate ();_abbf !=nil {return _abbf ;};if _abbf =_bafb .readIsMMREncoded ();_abbf !=nil {return _abbf ;};if _abbf =_bafb .readPatternWidthAndHeight ();_abbf !=nil {return _abbf ;
};if _abbf =_bafb .readGrayMax ();_abbf !=nil {return _abbf ;};if _abbf =_bafb .computeSegmentDataStructure ();_abbf !=nil {return _abbf ;};return _bafb .checkInput ();};var _ SegmentEncoder =&RegionSegment {};func (_bafd *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_afcf ,_aegc :=_bafd ._bagf .ReadBit ();
if _aegc !=nil {return _aegc ;};if _afcf ==1{_bafd ._gefa =true ;};return nil ;};func (_dbbd *SymbolDictionary )Encode (w _e .BinaryWriter )(_bcd int ,_fgcf error ){const _aeea ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _dbbd ==nil {return 0,_gg .Error (_aeea ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bcd ,_fgcf =_dbbd .encodeFlags (w );_fgcf !=nil {return _bcd ,_gg .Wrap (_fgcf ,_aeea ,"");
};_bfea ,_fgcf :=_dbbd .encodeATFlags (w );if _fgcf !=nil {return _bcd ,_gg .Wrap (_fgcf ,_aeea ,"");};_bcd +=_bfea ;if _bfea ,_fgcf =_dbbd .encodeRefinementATFlags (w );_fgcf !=nil {return _bcd ,_gg .Wrap (_fgcf ,_aeea ,"");};_bcd +=_bfea ;if _bfea ,_fgcf =_dbbd .encodeNumSyms (w );
_fgcf !=nil {return _bcd ,_gg .Wrap (_fgcf ,_aeea ,"");};_bcd +=_bfea ;if _bfea ,_fgcf =_dbbd .encodeSymbols (w );_fgcf !=nil {return _bcd ,_gg .Wrap (_fgcf ,_aeea ,"");};_bcd +=_bfea ;return _bcd ,nil ;};func (_ecc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ecc ._bbaf };
func (_agg *Header )readSegmentPageAssociation (_fgdg Documenter ,_dga *_e .Reader ,_eed uint64 ,_gaeg ...int )(_ggdd error ){const _fdgg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_agg .PageAssociationFieldSize {_ebdf ,_gfdgb :=_dga .ReadBits (8);if _gfdgb !=nil {return _gg .Wrap (_gfdgb ,_fdgg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_agg .PageAssociation =int (_ebdf &0xFF);}else {_ddf ,_edaag :=_dga .ReadBits (32);
if _edaag !=nil {return _gg .Wrap (_edaag ,_fdgg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_agg .PageAssociation =int (_ddf &_a .MaxInt32 );};if _eed ==0{return nil ;};if _agg .PageAssociation !=0{_ccac ,_bbfa :=_fgdg .GetPage (_agg .PageAssociation );
if _bbfa !=nil {return _gg .Wrap (_bbfa ,_fdgg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ccda int ;for _cffa :=uint64 (0);_cffa < _eed ;_cffa ++{_ccda =_gaeg [_cffa ];
_agg .RTSegments [_cffa ],_bbfa =_ccac .GetSegment (_ccda );if _bbfa !=nil {var _bcbg error ;_agg .RTSegments [_cffa ],_bcbg =_fgdg .GetGlobalSegment (_ccda );if _bcbg !=nil {return _gg .Wrapf (_bbfa ,_fdgg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_agg .PageAssociation );
};};};return nil ;};for _aefa :=uint64 (0);_aefa < _eed ;_aefa ++{_agg .RTSegments [_aefa ],_ggdd =_fgdg .GetGlobalSegment (_gaeg [_aefa ]);if _ggdd !=nil {return _gg .Wrapf (_ggdd ,_fdgg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gaeg [_aefa ]);
};};return nil ;};var _ templater =&template1 {};func (_egc *GenericRefinementRegion )getGrReference ()(*_cf .Bitmap ,error ){segments :=_egc ._bf .RTSegments ;if len (segments )==0{return nil ,_ac .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cfg ,_gae :=segments [0].GetSegmentData ();if _gae !=nil {return nil ,_gae ;};_dg ,_bee :=_cfg .(Regioner );if !_bee {return nil ,_ad .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cfg );
};return _dg .GetRegionBitmap ();};func (_gca *GenericRefinementRegion )decodeTypicalPredictedLine (_cgc ,_ada ,_efc ,_feb ,_cd ,_bgf int )error {_fda :=_cgc -int (_gca .ReferenceDY );_daa :=_gca .ReferenceBitmap .GetByteIndex (0,_fda );_fab :=_gca .RegionBitmap .GetByteIndex (0,_cgc );
var _dfa error ;switch _gca .TemplateID {case 0:_dfa =_gca .decodeTypicalPredictedLineTemplate0 (_cgc ,_ada ,_efc ,_feb ,_cd ,_bgf ,_fab ,_fda ,_daa );case 1:_dfa =_gca .decodeTypicalPredictedLineTemplate1 (_cgc ,_ada ,_efc ,_feb ,_cd ,_bgf ,_fab ,_fda ,_daa );
};return _dfa ;};type OrganizationType uint8 ;func (_fef *GenericRegion )InitEncode (bm *_cf .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _abe ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _gg .Error (_abe ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gg .Error (_abe ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fef .Bitmap =bm ;_fef .GBTemplate =byte (template );switch _fef .GBTemplate {case 0:_fef .GBAtX =[]int8 {3,-3,2,-2};_fef .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fef .GBAtX =[]int8 {3};_fef .GBAtY =[]int8 {-1};case 2,3:_fef .GBAtX =[]int8 {2};_fef .GBAtY =[]int8 {-1};
default:return _gg .Errorf (_abe ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fef .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fef .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_aeeg *Header )readSegmentDataLength (_aea *_e .Reader )(_abf error ){_aeeg .SegmentDataLength ,_abf =_aea .ReadBits (32);
if _abf !=nil {return _abf ;};_aeeg .SegmentDataLength &=_a .MaxInt32 ;return nil ;};func (_adcfb *PageInformationSegment )readWidthAndHeight ()error {_ffbe ,_deaf :=_adcfb ._bagf .ReadBits (32);if _deaf !=nil {return _deaf ;};_adcfb .PageBMWidth =int (_ffbe &_a .MaxInt32 );
_ffbe ,_deaf =_adcfb ._bagf .ReadBits (32);if _deaf !=nil {return _deaf ;};_adcfb .PageBMHeight =int (_ffbe &_a .MaxInt32 );return nil ;};func (_gfgg *HalftoneRegion )Init (hd *Header ,r *_e .Reader )error {_gfgg ._cgad =r ;_gfgg ._egac =hd ;_gfgg .RegionSegment =NewRegionSegment (r );
return _gfgg .parseHeader ();};func (_cffe *TextRegion )getSymbols ()error {if _cffe .Header .RTSegments !=nil {return _cffe .initSymbols ();};return nil ;};func NewHeader (d Documenter ,r *_e .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bcc :=&Header {Reader :r };
if _bgec :=_bcc .parse (d ,r ,offset ,organizationType );_bgec !=nil {return nil ,_gg .Wrap (_bgec ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bcc ,nil ;};func (_fefa *PageInformationSegment )Encode (w _e .BinaryWriter )(_eff int ,_fdcg error ){const _gdfe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_eaae :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_eaae ,uint32 (_fefa .PageBMWidth ));_eff ,_fdcg =w .Write (_eaae );if _fdcg !=nil {return _eff ,_gg .Wrap (_fdcg ,_gdfe ,"\u0077\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_eaae ,uint32 (_fefa .PageBMHeight ));
var _ddbg int ;_ddbg ,_fdcg =w .Write (_eaae );if _fdcg !=nil {return _ddbg +_eff ,_gg .Wrap (_fdcg ,_gdfe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_eff +=_ddbg ;_dd .BigEndian .PutUint32 (_eaae ,uint32 (_fefa .ResolutionX ));_ddbg ,_fdcg =w .Write (_eaae );
if _fdcg !=nil {return _ddbg +_eff ,_gg .Wrap (_fdcg ,_gdfe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_eff +=_ddbg ;_dd .BigEndian .PutUint32 (_eaae ,uint32 (_fefa .ResolutionY ));if _ddbg ,_fdcg =w .Write (_eaae );_fdcg !=nil {return _ddbg +_eff ,_gg .Wrap (_fdcg ,_gdfe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_eff +=_ddbg ;if _fdcg =_fefa .encodeFlags (w );_fdcg !=nil {return _eff ,_gg .Wrap (_fdcg ,_gdfe ,"");};_eff ++;if _ddbg ,_fdcg =_fefa .encodeStripingInformation (w );_fdcg !=nil {return _eff ,_gg .Wrap (_fdcg ,_gdfe ,"");};_eff +=_ddbg ;return _eff ,nil ;
};func (_ca *EndOfStripe )Init (h *Header ,r *_e .Reader )error {_ca ._ee =r ;return _ca .parseHeader ()};func (_agec *GenericRegion )writeGBAtPixels (_ggdf _e .BinaryWriter )(_fege int ,_ece error ){const _ega ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _agec .UseMMR {return 0,nil ;};_cfcg :=1;if _agec .GBTemplate ==0{_cfcg =4;}else if _agec .UseExtTemplates {_cfcg =12;};if len (_agec .GBAtX )!=_cfcg {return 0,_gg .Errorf (_ega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_agec .GBAtY )!=_cfcg {return 0,_gg .Errorf (_ega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bdf :=0;_bdf < _cfcg ;_bdf ++{if _ece =_ggdf .WriteByte (byte (_agec .GBAtX [_bdf ]));_ece !=nil {return _fege ,_gg .Wrap (_ece ,_ega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fege ++;if _ece =_ggdf .WriteByte (byte (_agec .GBAtY [_bdf ]));
_ece !=nil {return _fege ,_gg .Wrap (_ece ,_ega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fege ++;};return _fege ,nil ;};func (_baac *TextRegion )blit (_acg *_cf .Bitmap ,_cccf int64 )error {if _baac .IsTransposed ==0&&(_baac .ReferenceCorner ==2||_baac .ReferenceCorner ==3){_baac ._gfea +=int64 (_acg .Width -1);
}else if _baac .IsTransposed ==1&&(_baac .ReferenceCorner ==0||_baac .ReferenceCorner ==2){_baac ._gfea +=int64 (_acg .Height -1);};_ecfd :=_baac ._gfea ;if _baac .IsTransposed ==1{_ecfd ,_cccf =_cccf ,_ecfd ;};switch _baac .ReferenceCorner {case 0:_cccf -=int64 (_acg .Height -1);
case 2:_cccf -=int64 (_acg .Height -1);_ecfd -=int64 (_acg .Width -1);case 3:_ecfd -=int64 (_acg .Width -1);};_eafd :=_cf .Blit (_acg ,_baac .RegionBitmap ,int (_ecfd ),int (_cccf ),_baac .CombinationOperator );if _eafd !=nil {return _eafd ;};if _baac .IsTransposed ==0&&(_baac .ReferenceCorner ==0||_baac .ReferenceCorner ==1){_baac ._gfea +=int64 (_acg .Width -1);
};if _baac .IsTransposed ==1&&(_baac .ReferenceCorner ==1||_baac .ReferenceCorner ==3){_baac ._gfea +=int64 (_acg .Height -1);};return nil ;};func (_edcca *PatternDictionary )readIsMMREncoded ()error {_dgf ,_decg :=_edcca ._dggb .ReadBit ();if _decg !=nil {return _decg ;
};if _dgf !=0{_edcca .IsMMREncoded =true ;};return nil ;};func (_gfec *TableSegment )HtPS ()int32 {return _gfec ._cedad };type SymbolDictionary struct{_bbagd *_e .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_dab bool ;_cdee bool ;SdHuffAggInstanceSelection bool ;
SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;
Header *Header ;_aca uint32 ;_gabe []*_cf .Bitmap ;_bbeb uint32 ;_fagb []*_cf .Bitmap ;_dgde _fg .Tabler ;_fcbg _fg .Tabler ;_dbeb _fg .Tabler ;_ggffc _fg .Tabler ;_egef []*_cf .Bitmap ;_edcce []*_cf .Bitmap ;_cbgf *_b .Decoder ;_gcgg *TextRegion ;_bgag *GenericRegion ;
_cbbc *GenericRefinementRegion ;_gbd *_b .DecoderStats ;_aeba *_b .DecoderStats ;_afcd *_b .DecoderStats ;_ddbd *_b .DecoderStats ;_cgcb *_b .DecoderStats ;_gagd *_b .DecoderStats ;_egcf *_b .DecoderStats ;_bdbd *_b .DecoderStats ;_bgff *_b .DecoderStats ;
_fgf int8 ;_eefd *_cf .Bitmaps ;_gegea []int ;_caed map[int ]int ;_aac bool ;};func (_eeed *SymbolDictionary )decodeHeightClassBitmap (_dcba *_cf .Bitmap ,_cefa int64 ,_baaa int ,_facf []int )error {for _ffae :=_cefa ;_ffae < int64 (_eeed ._bbeb );_ffae ++{var _ddge int ;
for _bbafd :=_cefa ;_bbafd <=_ffae -1;_bbafd ++{_ddge +=_facf [_bbafd ];};_ceeg :=_d .Rect (_ddge ,0,_ddge +_facf [_ffae ],_baaa );_eceb ,_bdgc :=_cf .Extract (_ceeg ,_dcba );if _bdgc !=nil {return _bdgc ;};_eeed ._fagb [_ffae ]=_eceb ;_eeed ._edcce =append (_eeed ._edcce ,_eceb );
};return nil ;};func (_aedc *SymbolDictionary )encodeFlags (_gbde _e .BinaryWriter )(_ccaf int ,_dcf error ){const _fad ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcf =_gbde .SkipBits (3);_dcf !=nil {return 0,_gg .Wrap (_dcf ,_fad ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _dbfgb int ;if _aedc .SdrTemplate > 0{_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dbfgb =0;if _aedc .SdTemplate > 1{_dbfgb =1;
};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dbfgb =0;if _aedc .SdTemplate ==1||_aedc .SdTemplate ==3{_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );
_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dbfgb =0;if _aedc ._dab {_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dbfgb =0;if _aedc ._cdee {_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dbfgb =0;if _aedc .SdHuffAggInstanceSelection {_dbfgb =1;
};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dbfgb =int (_aedc .SdHuffBMSizeSelection );if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dbfgb =0;if _aedc .SdHuffDecodeWidthSelection > 1{_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dbfgb =0;switch _aedc .SdHuffDecodeWidthSelection {case 1,3:_dbfgb =1;
};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dbfgb =0;if _aedc .SdHuffDecodeHeightSelection > 1{_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );
_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dbfgb =0;switch _aedc .SdHuffDecodeHeightSelection {case 1,3:_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dbfgb =0;if _aedc .UseRefinementAggregation {_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dbfgb =0;if _aedc .IsHuffmanEncoded {_dbfgb =1;};if _dcf =_gbde .WriteBit (_dbfgb );
_dcf !=nil {return _ccaf ,_gg .Wrap (_dcf ,_fad ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_egdb *TextRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _egdb .RegionBitmap !=nil {return _egdb .RegionBitmap ,nil ;};if !_egdb .IsHuffmanEncoded {if _gfeb :=_egdb .setCodingStatistics ();
_gfeb !=nil {return nil ,_gfeb ;};};if _dceeg :=_egdb .createRegionBitmap ();_dceeg !=nil {return nil ,_dceeg ;};if _dfdg :=_egdb .decodeSymbolInstances ();_dfdg !=nil {return nil ,_dfdg ;};return _egdb .RegionBitmap ,nil ;};func (_eef *GenericRefinementRegion )parseHeader ()(_ede error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_bfe :=_ga .Now ();defer func (){if _ede ==nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ga .Since (_bfe ).Nanoseconds ());
}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ede );
};}();if _ede =_eef .RegionInfo .parseHeader ();_ede !=nil {return _ede ;};_ ,_ede =_eef ._gga .ReadBits (6);if _ede !=nil {return _ede ;};_eef .IsTPGROn ,_ede =_eef ._gga .ReadBool ();if _ede !=nil {return _ede ;};var _bbbb int ;_bbbb ,_ede =_eef ._gga .ReadBit ();
if _ede !=nil {return _ede ;};_eef .TemplateID =int8 (_bbbb );switch _eef .TemplateID {case 0:_eef .Template =_eef ._cae ;if _ede =_eef .readAtPixels ();_ede !=nil {return _ede ;};case 1:_eef .Template =_eef ._fgg ;};return nil ;};func (_eecg *PageInformationSegment )checkInput ()error {if _eecg .PageBMHeight ==_a .MaxInt32 {if !_eecg .IsStripe {_be .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_dfgc *TextRegion )GetRegionInfo ()*RegionSegment {return _dfgc .RegionInfo };type Type int ;func (_ecdg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bdfdfg ,_dbcb uint32 )error {if _ecdg ._bgag ==nil {_ecdg ._bgag =NewGenericRegion (_ecdg ._bbagd );
};_ecdg ._bgag .setParametersWithAt (false ,byte (_ecdg .SdTemplate ),false ,false ,_ecdg .SdATX ,_ecdg .SdATY ,_bdfdfg ,_dbcb ,_ecdg ._gbd ,_ecdg ._cbgf );return _ecdg .addSymbol (_ecdg ._bgag );};func (_bgbd *TextRegion )createRegionBitmap ()error {_bgbd .RegionBitmap =_cf .New (int (_bgbd .RegionInfo .BitmapWidth ),int (_bgbd .RegionInfo .BitmapHeight ));
if _bgbd .DefaultPixel !=0{_bgbd .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_baab *PageInformationSegment )Init (h *Header ,r *_e .Reader )(_cdb error ){_baab ._bagf =r ;if _cdb =_baab .parseHeader ();_cdb !=nil {return _gg .Wrap (_cdb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_fbaf *SymbolDictionary )getSbSymCodeLen ()int8 {_ceae :=int8 (_a .Ceil (_a .Log (float64 (_fbaf ._aca +_fbaf .NumberOfNewSymbols ))/_a .Log (2)));if _fbaf .IsHuffmanEncoded &&_ceae < 1{return 1;};return _ceae ;};func (_febb *PatternDictionary )extractPatterns (_fbce *_cf .Bitmap )error {var _bbfe int ;
_egfb :=make ([]*_cf .Bitmap ,_febb .GrayMax +1);for _bbfe <=int (_febb .GrayMax ){_beca :=int (_febb .HdpWidth )*_bbfe ;_fafc :=_d .Rect (_beca ,0,_beca +int (_febb .HdpWidth ),int (_febb .HdpHeight ));_ceef ,_gfgb :=_cf .Extract (_fafc ,_fbce );if _gfgb !=nil {return _gfgb ;
};_egfb [_bbfe ]=_ceef ;_bbfe ++;};_febb .Patterns =_egfb ;return nil ;};func (_facd *GenericRegion )setOverrideFlag (_dbef int ){_facd .GBAtOverride [_dbef ]=true ;_facd ._cda =true ;};func (_fbda *HalftoneRegion )grayScaleDecoding (_agbd int )([][]int ,error ){var (_bagd []int8 ;
_dbbf []int8 ;);if !_fbda .IsMMREncoded {_bagd =make ([]int8 ,4);_dbbf =make ([]int8 ,4);if _fbda .HTemplate <=1{_bagd [0]=3;}else if _fbda .HTemplate >=2{_bagd [0]=2;};_dbbf [0]=-1;_bagd [1]=-3;_dbbf [1]=-1;_bagd [2]=2;_dbbf [2]=-2;_bagd [3]=-2;_dbbf [3]=-2;
};_dbfb :=make ([]*_cf .Bitmap ,_agbd );_beg :=NewGenericRegion (_fbda ._cgad );_beg .setParametersMMR (_fbda .IsMMREncoded ,_fbda .DataOffset ,_fbda .DataLength ,_fbda .HGridHeight ,_fbda .HGridWidth ,_fbda .HTemplate ,false ,_fbda .HSkipEnabled ,_bagd ,_dbbf );
_gcbg :=_agbd -1;var _fcf error ;_dbfb [_gcbg ],_fcf =_beg .GetRegionBitmap ();if _fcf !=nil {return nil ,_fcf ;};for _gcbg > 0{_gcbg --;_beg .Bitmap =nil ;_dbfb [_gcbg ],_fcf =_beg .GetRegionBitmap ();if _fcf !=nil {return nil ,_fcf ;};if _fcf =_fbda .combineGrayscalePlanes (_dbfb ,_gcbg );
_fcf !=nil {return nil ,_fcf ;};};return _fbda .computeGrayScalePlanes (_dbfb ,_agbd );};func (_gcfg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fbbd int ;_cfaf int32 ;_dccd error ;_edea =int32 (_gcfg ._aca +_gcfg .NumberOfNewSymbols );
_cgeg =make ([]int ,_edea ););for _aadcg :=int32 (0);_aadcg < _edea ;_aadcg +=_cfaf {if _gcfg .IsHuffmanEncoded {_gbee ,_fce :=_fg .GetStandardTable (1);if _fce !=nil {return nil ,_fce ;};_fefage ,_fce :=_gbee .Decode (_gcfg ._bbagd );if _fce !=nil {return nil ,_fce ;
};_cfaf =int32 (_fefage );}else {_cfaf ,_dccd =_gcfg ._cbgf .DecodeInt (_gcfg ._cgcb );if _dccd !=nil {return nil ,_dccd ;};};if _cfaf !=0{if _aadcg +_cfaf > _edea {return nil ,_gg .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _effa :=_aadcg ;_effa < _aadcg +_cfaf ;_effa ++{_cgeg [_effa ]=_fbbd ;};};if _fbbd ==0{_fbbd =1;}else {_fbbd =0;};};return _cgeg ,nil ;};func (_fcgg *GenericRegion )setParameters (_gde bool ,_aaag ,_gegd int64 ,_adab ,_dac uint32 ){_fcgg .IsMMREncoded =_gde ;
_fcgg .DataOffset =_aaag ;_fcgg .DataLength =_gegd ;_fcgg .RegionSegment .BitmapHeight =_adab ;_fcgg .RegionSegment .BitmapWidth =_dac ;_fcgg ._bc =nil ;_fcgg .Bitmap =nil ;};func (_acd *HalftoneRegion )computeY (_agae ,_dacf int )int {return _acd .shiftAndFill (int (_acd .HGridY )+_agae *int (_acd .HRegionX )-_dacf *int (_acd .HRegionY ));
};type EncodeInitializer interface{InitEncode ();};func (_abed *TableSegment )Init (h *Header ,r *_e .Reader )error {_abed ._ageg =r ;return _abed .parseHeader ();};func (_dddf *PageInformationSegment )parseHeader ()(_cdag error ){_be .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _eaaeb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _cdag !=nil {_eaaeb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cdag .Error ();}else {_eaaeb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_be .Log .Trace (_eaaeb );}();if _cdag =_dddf .readWidthAndHeight ();
_cdag !=nil {return _cdag ;};if _cdag =_dddf .readResolution ();_cdag !=nil {return _cdag ;};_ ,_cdag =_dddf ._bagf .ReadBit ();if _cdag !=nil {return _cdag ;};if _cdag =_dddf .readCombinationOperatorOverrideAllowed ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .readRequiresAuxiliaryBuffer ();
_cdag !=nil {return _cdag ;};if _cdag =_dddf .readCombinationOperator ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .readDefaultPixelValue ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .readContainsRefinement ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .readIsLossless ();
_cdag !=nil {return _cdag ;};if _cdag =_dddf .readIsStriped ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .readMaxStripeSize ();_cdag !=nil {return _cdag ;};if _cdag =_dddf .checkInput ();_cdag !=nil {return _cdag ;};_be .Log .Trace ("\u0025\u0073",_dddf );
return nil ;};var (_ceaa Segmenter ;_aaf =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _ceaa },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _ceaa },TProfiles :func ()Segmenter {return _ceaa },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _ceaa },TBitmap :func ()Segmenter {return _ceaa }};
);func (_bddgg *SymbolDictionary )decodeRefinedSymbol (_dbad ,_edgf uint32 )error {var (_eadf int ;_ecec ,_faca int32 ;);if _bddgg .IsHuffmanEncoded {_bgdad ,_ddce :=_bddgg ._bbagd .ReadBits (byte (_bddgg ._fgf ));if _ddce !=nil {return _ddce ;};_eadf =int (_bgdad );
_fegfe ,_ddce :=_fg .GetStandardTable (15);if _ddce !=nil {return _ddce ;};_faggc ,_ddce :=_fegfe .Decode (_bddgg ._bbagd );if _ddce !=nil {return _ddce ;};_ecec =int32 (_faggc );_faggc ,_ddce =_fegfe .Decode (_bddgg ._bbagd );if _ddce !=nil {return _ddce ;
};_faca =int32 (_faggc );_fegfe ,_ddce =_fg .GetStandardTable (1);if _ddce !=nil {return _ddce ;};if _ ,_ddce =_fegfe .Decode (_bddgg ._bbagd );_ddce !=nil {return _ddce ;};_bddgg ._bbagd .Align ();}else {_gaba ,_gefg :=_bddgg ._cbgf .DecodeIAID (uint64 (_bddgg ._fgf ),_bddgg ._bgff );
if _gefg !=nil {return _gefg ;};_eadf =int (_gaba );_ecec ,_gefg =_bddgg ._cbgf .DecodeInt (_bddgg ._gagd );if _gefg !=nil {return _gefg ;};_faca ,_gefg =_bddgg ._cbgf .DecodeInt (_bddgg ._egcf );if _gefg !=nil {return _gefg ;};};if _aadc :=_bddgg .setSymbolsArray ();
_aadc !=nil {return _aadc ;};_fbdb :=_bddgg ._edcce [_eadf ];if _efecc :=_bddgg .decodeNewSymbols (_dbad ,_edgf ,_fbdb ,_ecec ,_faca );_efecc !=nil {return _efecc ;};if _bddgg .IsHuffmanEncoded {_bddgg ._bbagd .Align ();};return nil ;};type PatternDictionary struct{_dggb *_e .Reader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cf .Bitmap ;GrayMax uint32 ;};func (_gdgg *SymbolDictionary )setRetainedCodingContexts (_fgae *SymbolDictionary ){_gdgg ._cbgf =_fgae ._cbgf ;
_gdgg .IsHuffmanEncoded =_fgae .IsHuffmanEncoded ;_gdgg .UseRefinementAggregation =_fgae .UseRefinementAggregation ;_gdgg .SdTemplate =_fgae .SdTemplate ;_gdgg .SdrTemplate =_fgae .SdrTemplate ;_gdgg .SdATX =_fgae .SdATX ;_gdgg .SdATY =_fgae .SdATY ;_gdgg .SdrATX =_fgae .SdrATX ;
_gdgg .SdrATY =_fgae .SdrATY ;_gdgg ._gbd =_fgae ._gbd ;};func (_bef *GenericRegion )decodeSLTP ()(int ,error ){switch _bef .GBTemplate {case 0:_bef ._gdg .SetIndex (0x9B25);case 1:_bef ._gdg .SetIndex (0x795);case 2:_bef ._gdg .SetIndex (0xE5);case 3:_bef ._gdg .SetIndex (0x195);
};return _bef ._gdb .DecodeBit (_bef ._gdg );};func (_eec *GenericRegion )decodeTemplate0b (_bge ,_fbgc ,_bdcf int ,_daf ,_adf int )(_aef error ){const _cad ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_gdbd ,_eaa int ;
_dcbd ,_gfa int ;_fga byte ;_dee int ;);if _bge >=1{_fga ,_aef =_eec .Bitmap .GetByte (_adf );if _aef !=nil {return _gg .Wrap (_aef ,_cad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dcbd =int (_fga );};if _bge >=2{_fga ,_aef =_eec .Bitmap .GetByte (_adf -_eec .Bitmap .RowStride );
if _aef !=nil {return _gg .Wrap (_aef ,_cad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gfa =int (_fga )<<6;};_gdbd =(_dcbd &0xf0)|(_gfa &0x3800);for _cfbf :=0;_cfbf < _bdcf ;_cfbf =_dee {var (_edf byte ;_fcgb int ;);_dee =_cfbf +8;if _ggfc :=_fbgc -_cfbf ;
_ggfc > 8{_fcgb =8;}else {_fcgb =_ggfc ;};if _bge > 0{_dcbd <<=8;if _dee < _fbgc {_fga ,_aef =_eec .Bitmap .GetByte (_adf +1);if _aef !=nil {return _gg .Wrap (_aef ,_cad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dcbd |=int (_fga );};};if _bge > 1{_gfa <<=8;
if _dee < _fbgc {_fga ,_aef =_eec .Bitmap .GetByte (_adf -_eec .Bitmap .RowStride +1);if _aef !=nil {return _gg .Wrap (_aef ,_cad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gfa |=int (_fga )<<6;};};for _efcfa :=0;_efcfa < _fcgb ;_efcfa ++{_fde :=uint (7-_efcfa );
if _eec ._cda {_eaa =_eec .overrideAtTemplate0b (_gdbd ,_cfbf +_efcfa ,_bge ,int (_edf ),_efcfa ,int (_fde ));_eec ._gdg .SetIndex (int32 (_eaa ));}else {_eec ._gdg .SetIndex (int32 (_gdbd ));};var _bce int ;_bce ,_aef =_eec ._gdb .DecodeBit (_eec ._gdg );
if _aef !=nil {return _gg .Wrap (_aef ,_cad ,"");};_edf |=byte (_bce <<_fde );_gdbd =((_gdbd &0x7bf7)<<1)|_bce |((_dcbd >>_fde )&0x10)|((_gfa >>_fde )&0x800);};if _dbfd :=_eec .Bitmap .SetByte (_daf ,_edf );_dbfd !=nil {return _gg .Wrap (_dbfd ,_cad ,"");
};_daf ++;_adf ++;};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_cdbd *SymbolDictionary )readRegionFlags ()error {var (_egag uint64 ;_ccec int ;);_ ,_cfd :=_cdbd ._bbagd .ReadBits (3);if _cfd !=nil {return _cfd ;};_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();
if _cfd !=nil {return _cfd ;};_cdbd .SdrTemplate =int8 (_ccec );_egag ,_cfd =_cdbd ._bbagd .ReadBits (2);if _cfd !=nil {return _cfd ;};_cdbd .SdTemplate =int8 (_egag &0xf);_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();if _cfd !=nil {return _cfd ;};if _ccec ==1{_cdbd ._dab =true ;
};_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();if _cfd !=nil {return _cfd ;};if _ccec ==1{_cdbd ._cdee =true ;};_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();if _cfd !=nil {return _cfd ;};if _ccec ==1{_cdbd .SdHuffAggInstanceSelection =true ;};_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();
if _cfd !=nil {return _cfd ;};_cdbd .SdHuffBMSizeSelection =int8 (_ccec );_egag ,_cfd =_cdbd ._bbagd .ReadBits (2);if _cfd !=nil {return _cfd ;};_cdbd .SdHuffDecodeWidthSelection =int8 (_egag &0xf);_egag ,_cfd =_cdbd ._bbagd .ReadBits (2);if _cfd !=nil {return _cfd ;
};_cdbd .SdHuffDecodeHeightSelection =int8 (_egag &0xf);_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();if _cfd !=nil {return _cfd ;};if _ccec ==1{_cdbd .UseRefinementAggregation =true ;};_ccec ,_cfd =_cdbd ._bbagd .ReadBit ();if _cfd !=nil {return _cfd ;};if _ccec ==1{_cdbd .IsHuffmanEncoded =true ;
};return nil ;};func (_bdcb *PatternDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){if _bdcb .Patterns !=nil {return _bdcb .Patterns ,nil ;};if !_bdcb .IsMMREncoded {_bdcb .setGbAtPixels ();};_bfbfe :=NewGenericRegion (_bdcb ._dggb );_bfbfe .setParametersMMR (_bdcb .IsMMREncoded ,_bdcb .DataOffset ,_bdcb .DataLength ,uint32 (_bdcb .HdpHeight ),(_bdcb .GrayMax +1)*uint32 (_bdcb .HdpWidth ),_bdcb .HDTemplate ,false ,false ,_bdcb .GBAtX ,_bdcb .GBAtY );
_bccf ,_ded :=_bfbfe .GetRegionBitmap ();if _ded !=nil {return nil ,_ded ;};if _ded =_bdcb .extractPatterns (_bccf );_ded !=nil {return nil ,_ded ;};return _bdcb .Patterns ,nil ;};func (_cfcb *SymbolDictionary )decodeHeightClassCollectiveBitmap (_dfca int64 ,_cfaec ,_cgdc uint32 )(*_cf .Bitmap ,error ){if _dfca ==0{_bcab :=_cf .New (int (_cgdc ),int (_cfaec ));
var (_edef byte ;_abdf error ;);for _ggcad :=0;_ggcad < len (_bcab .Data );_ggcad ++{_edef ,_abdf =_cfcb ._bbagd .ReadByte ();if _abdf !=nil {return nil ,_abdf ;};if _abdf =_bcab .SetByte (_ggcad ,_edef );_abdf !=nil {return nil ,_abdf ;};};return _bcab ,nil ;
};if _cfcb ._bgag ==nil {_cfcb ._bgag =NewGenericRegion (_cfcb ._bbagd );};_cfcb ._bgag .setParameters (true ,_cfcb ._bbagd .AbsolutePosition (),_dfca ,_cfaec ,_cgdc );_gggg ,_efbd :=_cfcb ._bgag .GetRegionBitmap ();if _efbd !=nil {return nil ,_efbd ;};
return _gggg ,nil ;};func (_fbd *GenericRegion )Init (h *Header ,r *_e .Reader )error {_fbd .RegionSegment =NewRegionSegment (r );_fbd ._dcee =r ;return _fbd .parseHeader ();};func (_dda *GenericRegion )getPixel (_bfc ,_aefd int )int8 {if _bfc < 0||_bfc >=_dda .Bitmap .Width {return 0;
};if _aefd < 0||_aefd >=_dda .Bitmap .Height {return 0;};if _dda .Bitmap .GetPixel (_bfc ,_aefd ){return 1;};return 0;};func (_faed *PageInformationSegment )readDefaultPixelValue ()error {_cgba ,_afbb :=_faed ._bagf .ReadBit ();if _afbb !=nil {return _afbb ;
};_faed .DefaultPixelValue =uint8 (_cgba &0xf);return nil ;};func (_efaa *SymbolDictionary )readRefinementAtPixels (_fbdg int )error {_efaa .SdrATX =make ([]int8 ,_fbdg );_efaa .SdrATY =make ([]int8 ,_fbdg );var (_bbcd byte ;_fdeb error ;);for _fddf :=0;
_fddf < _fbdg ;_fddf ++{_bbcd ,_fdeb =_efaa ._bbagd .ReadByte ();if _fdeb !=nil {return _fdeb ;};_efaa .SdrATX [_fddf ]=int8 (_bbcd );_bbcd ,_fdeb =_efaa ._bbagd .ReadByte ();if _fdeb !=nil {return _fdeb ;};_efaa .SdrATY [_fddf ]=int8 (_bbcd );};return nil ;
};func (_gcba *TextRegion )parseHeader ()error {var _eged error ;_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _eged !=nil {_be .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_eged );
}else {_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _eged =_gcba .RegionInfo .parseHeader ();
_eged !=nil {return _eged ;};if _eged =_gcba .readRegionFlags ();_eged !=nil {return _eged ;};if _gcba .IsHuffmanEncoded {if _eged =_gcba .readHuffmanFlags ();_eged !=nil {return _eged ;};};if _eged =_gcba .readUseRefinement ();_eged !=nil {return _eged ;
};if _eged =_gcba .readAmountOfSymbolInstances ();_eged !=nil {return _eged ;};if _eged =_gcba .getSymbols ();_eged !=nil {return _eged ;};if _eged =_gcba .computeSymbolCodeLength ();_eged !=nil {return _eged ;};if _eged =_gcba .checkInput ();_eged !=nil {return _eged ;
};_be .Log .Trace ("\u0025\u0073",_gcba .String ());return nil ;};func (_fcad *TextRegion )initSymbols ()error {const _bcaa ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dbege :=range _fcad .Header .RTSegments {if _dbege ==nil {return _gg .Error (_bcaa ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _dbege .Type ==0{_eefa ,_ddaa :=_dbege .GetSegmentData ();if _ddaa !=nil {return _gg .Wrap (_ddaa ,_bcaa ,"");};_ecbad ,_bgdg :=_eefa .(*SymbolDictionary );if !_bgdg {return _gg .Error (_bcaa ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ecbad ._bgff =_fcad ._ggae ;_cdea ,_ddaa :=_ecbad .GetDictionary ();if _ddaa !=nil {return _gg .Wrap (_ddaa ,_bcaa ,"");};_fcad .Symbols =append (_fcad .Symbols ,_cdea ...);};};_fcad .NumberOfSymbols =uint32 (len (_fcad .Symbols ));return nil ;};func (_gade *GenericRegion )setParametersWithAt (_agbg bool ,_dgga byte ,_ecf ,_aaad bool ,_eda ,_gdc []int8 ,_ceb ,_bbg uint32 ,_bdce *_b .DecoderStats ,_ddgf *_b .Decoder ){_gade .IsMMREncoded =_agbg ;
_gade .GBTemplate =_dgga ;_gade .IsTPGDon =_ecf ;_gade .GBAtX =_eda ;_gade .GBAtY =_gdc ;_gade .RegionSegment .BitmapHeight =_bbg ;_gade .RegionSegment .BitmapWidth =_ceb ;_gade ._bc =nil ;_gade .Bitmap =nil ;if _bdce !=nil {_gade ._gdg =_bdce ;};if _ddgf !=nil {_gade ._gdb =_ddgf ;
};_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gade );};func (_cbe *TextRegion )setCodingStatistics ()error {if _cbe ._gdab ==nil {_cbe ._gdab =_b .NewStats (512,1);
};if _cbe ._bcbf ==nil {_cbe ._bcbf =_b .NewStats (512,1);};if _cbe ._cdgbf ==nil {_cbe ._cdgbf =_b .NewStats (512,1);};if _cbe ._bcde ==nil {_cbe ._bcde =_b .NewStats (512,1);};if _cbe ._ceg ==nil {_cbe ._ceg =_b .NewStats (512,1);};if _cbe ._bdeb ==nil {_cbe ._bdeb =_b .NewStats (512,1);
};if _cbe ._ggbf ==nil {_cbe ._ggbf =_b .NewStats (512,1);};if _cbe ._ggae ==nil {_cbe ._ggae =_b .NewStats (1<<uint (_cbe ._eeedb ),1);};if _cbe ._ddbdg ==nil {_cbe ._ddbdg =_b .NewStats (512,1);};if _cbe ._bcgg ==nil {_cbe ._bcgg =_b .NewStats (512,1);
};if _cbe ._geab ==nil {var _dfdd error ;_cbe ._geab ,_dfdd =_b .New (_cbe ._ceba );if _dfdd !=nil {return _dfdd ;};};return nil ;};func (_agf *SymbolDictionary )InitEncode (symbols *_cf .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _adea ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_agf .SdATX =[]int8 {3,-3,2,-2};_agf .SdATY =[]int8 {-1,-1,-2,-2};_agf ._eefd =symbols ;_agf ._gegea =make ([]int ,len (symbolList ));copy (_agf ._gegea ,symbolList );if len (_agf ._gegea )!=_agf ._eefd .Size (){return _gg .Error (_adea ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_agf .NumberOfNewSymbols =uint32 (symbols .Size ());_agf .NumberOfExportedSymbols =uint32 (symbols .Size ());_agf ._caed =symbolMap ;_agf ._aac =unborderSymbols ;return nil ;};func (_bddg *GenericRegion )readGBAtPixels (_dfbd int )error {const _fac ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_bddg .GBAtX =make ([]int8 ,_dfbd );_bddg .GBAtY =make ([]int8 ,_dfbd );for _fagg :=0;_fagg < _dfbd ;_fagg ++{_cge ,_fdda :=_bddg ._dcee .ReadByte ();if _fdda !=nil {return _gg .Wrapf (_fdda ,_fac ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fagg );
};_bddg .GBAtX [_fagg ]=int8 (_cge );_cge ,_fdda =_bddg ._dcee .ReadByte ();if _fdda !=nil {return _gg .Wrapf (_fdda ,_fac ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fagg );};_bddg .GBAtY [_fagg ]=int8 (_cge );};return nil ;
};type PageInformationSegment struct{_bagf *_e .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bbaf bool ;_aegg _cf .CombinationOperator ;_gefa bool ;DefaultPixelValue uint8 ;_gggf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;
};func (_afb *template1 )form (_fag ,_cde ,_bfbf ,_gef ,_cdf int16 )int16 {return ((_fag &0x02)<<8)|(_cde <<6)|((_bfbf &0x03)<<4)|(_gef <<1)|_cdf ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;
RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_e .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_fdag *Header )readNumberOfReferredToSegments (_gdfd *_e .Reader )(uint64 ,error ){const _ggca ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dccg ,_fffg :=_gdfd .ReadBits (3);if _fffg !=nil {return 0,_gg .Wrap (_fffg ,_ggca ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dccg &=0xf;var _gce []byte ;if _dccg <=4{_gce =make ([]byte ,5);for _bab :=0;_bab <=4;_bab ++{_aedb ,_ecgd :=_gdfd .ReadBit ();
if _ecgd !=nil {return 0,_gg .Wrap (_ecgd ,_ggca ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gce [_bab ]=byte (_aedb );};}else {_dccg ,_fffg =_gdfd .ReadBits (29);if _fffg !=nil {return 0,_fffg ;};_dccg &=_a .MaxInt32 ;_edbb :=(_dccg +8)>>3;
_edbb <<=3;_gce =make ([]byte ,_edbb );var _dec uint64 ;for _dec =0;_dec < _edbb ;_dec ++{_fba ,_ceda :=_gdfd .ReadBit ();if _ceda !=nil {return 0,_gg .Wrap (_ceda ,_ggca ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gce [_dec ]=byte (_fba );
};};return _dccg ,nil ;};func (_acbea *TextRegion )setParameters (_ddga *_b .Decoder ,_dbda ,_cbfc bool ,_bdbac ,_eecc uint32 ,_bbfda uint32 ,_gfaf int8 ,_cadg uint32 ,_aggfg int8 ,_abeda _cf .CombinationOperator ,_cadaaa int8 ,_dceea int16 ,_aebaf ,_cbbg ,_ffgbb ,_fbdd ,_eagb ,_cebd ,_bcbd ,_gcgc ,_gdaa ,_gaef int8 ,_abgc ,_fgfg []int8 ,_eacb []*_cf .Bitmap ,_gdddg int8 ){_acbea ._geab =_ddga ;
_acbea .IsHuffmanEncoded =_dbda ;_acbea .UseRefinement =_cbfc ;_acbea .RegionInfo .BitmapWidth =_bdbac ;_acbea .RegionInfo .BitmapHeight =_eecc ;_acbea .NumberOfSymbolInstances =_bbfda ;_acbea .SbStrips =_gfaf ;_acbea .NumberOfSymbols =_cadg ;_acbea .DefaultPixel =_aggfg ;
_acbea .CombinationOperator =_abeda ;_acbea .IsTransposed =_cadaaa ;_acbea .ReferenceCorner =_dceea ;_acbea .SbDsOffset =_aebaf ;_acbea .SbHuffFS =_cbbg ;_acbea .SbHuffDS =_ffgbb ;_acbea .SbHuffDT =_fbdd ;_acbea .SbHuffRDWidth =_eagb ;_acbea .SbHuffRDHeight =_cebd ;
_acbea .SbHuffRSize =_gdaa ;_acbea .SbHuffRDX =_bcbd ;_acbea .SbHuffRDY =_gcgc ;_acbea .SbrTemplate =_gaef ;_acbea .SbrATX =_abgc ;_acbea .SbrATY =_fgfg ;_acbea .Symbols =_eacb ;_acbea ._eeedb =_gdddg ;};func (_ecge *Header )referenceSize ()uint {switch {case _ecge .SegmentNumber <=255:return 1;
case _ecge .SegmentNumber <=65535:return 2;default:return 4;};};func (_edga *TextRegion )encodeFlags (_addgd _e .BinaryWriter )(_addf int ,_fgbc error ){const _gega ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fgbc =_addgd .WriteBit (int (_edga .SbrTemplate ));
_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_fgbc =_addgd .WriteBits (uint64 (_edga .SbDsOffset ),5);_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _fgbc =_addgd .WriteBit (int (_edga .DefaultPixel ));_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_fgbc =_addgd .WriteBits (uint64 (_edga .CombinationOperator ),2);
_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _fgbc =_addgd .WriteBit (int (_edga .IsTransposed ));_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_fgbc =_addgd .WriteBits (uint64 (_edga .ReferenceCorner ),2);_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_fgbc =_addgd .WriteBits (uint64 (_edga .LogSBStrips ),2);
_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bagdg int ;if _edga .UseRefinement {_bagdg =1;};if _fgbc =_addgd .WriteBit (_bagdg );_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bagdg =0;if _edga .IsHuffmanEncoded {_bagdg =1;};if _fgbc =_addgd .WriteBit (_bagdg );_fgbc !=nil {return _addf ,_gg .Wrap (_fgbc ,_gega ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_addf =2;return _addf ,nil ;};func (_ccad *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ddeg :=range _ccad .Header .RTSegments {if _ddeg .Type ==0{_fade ,_gfeg :=_ddeg .GetSegmentData ();
if _gfeg !=nil {return _gfeg ;};_caaga ,_aabe :=_fade .(*SymbolDictionary );if !_aabe {return _ad .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_fade );
};_gagg ,_gfeg :=_caaga .GetDictionary ();if _gfeg !=nil {return _ad .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ddeg .SegmentNumber ,_gfeg .Error ());
};_ccad ._gabe =append (_ccad ._gabe ,_gagg ...);_ccad ._aca +=_caaga .NumberOfExportedSymbols ;};};return nil ;};func (_gddc *GenericRegion )overrideAtTemplate3 (_edcc ,_egbe ,_addb ,_dfc ,_edbf int )int {_edcc &=0x3EF;if _gddc .GBAtY [0]==0&&_gddc .GBAtX [0]>=-int8 (_edbf ){_edcc |=(_dfc >>uint (7-(int8 (_edbf )+_gddc .GBAtX [0]))&0x1)<<4;
}else {_edcc |=int (_gddc .getPixel (_egbe +int (_gddc .GBAtX [0]),_addb +int (_gddc .GBAtY [0])))<<4;};return _edcc ;};func (_dbcd *SymbolDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_be .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_be .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dbcd ._egef ,_dbcd ._fagb );
}();if _dbcd ._egef ==nil {var _cccd error ;if _dbcd .UseRefinementAggregation {_dbcd ._fgf =_dbcd .getSbSymCodeLen ();};if !_dbcd .IsHuffmanEncoded {if _cccd =_dbcd .setCodingStatistics ();_cccd !=nil {return nil ,_cccd ;};};_dbcd ._fagb =make ([]*_cf .Bitmap ,_dbcd .NumberOfNewSymbols );
var _fgdd []int ;if _dbcd .IsHuffmanEncoded &&!_dbcd .UseRefinementAggregation {_fgdd =make ([]int ,_dbcd .NumberOfNewSymbols );};if _cccd =_dbcd .setSymbolsArray ();_cccd !=nil {return nil ,_cccd ;};var _cbgc ,_eedb int64 ;_dbcd ._bbeb =0;for _dbcd ._bbeb < _dbcd .NumberOfNewSymbols {_eedb ,_cccd =_dbcd .decodeHeightClassDeltaHeight ();
if _cccd !=nil {return nil ,_cccd ;};_cbgc +=_eedb ;var _fcbe ,_bgda uint32 ;_affg :=int64 (_dbcd ._bbeb );for {var _bbcc int64 ;_bbcc ,_cccd =_dbcd .decodeDifferenceWidth ();if _ac .Is (_cccd ,_ag .ErrOOB ){break ;};if _cccd !=nil {return nil ,_cccd ;
};if _dbcd ._bbeb >=_dbcd .NumberOfNewSymbols {break ;};_fcbe +=uint32 (_bbcc );_bgda +=_fcbe ;if !_dbcd .IsHuffmanEncoded ||_dbcd .UseRefinementAggregation {if !_dbcd .UseRefinementAggregation {_cccd =_dbcd .decodeDirectlyThroughGenericRegion (_fcbe ,uint32 (_cbgc ));
if _cccd !=nil {return nil ,_cccd ;};}else {_cccd =_dbcd .decodeAggregate (_fcbe ,uint32 (_cbgc ));if _cccd !=nil {return nil ,_cccd ;};};}else if _dbcd .IsHuffmanEncoded &&!_dbcd .UseRefinementAggregation {_fgdd [_dbcd ._bbeb ]=int (_fcbe );};_dbcd ._bbeb ++;
};if _dbcd .IsHuffmanEncoded &&!_dbcd .UseRefinementAggregation {var _bdfd int64 ;if _dbcd .SdHuffBMSizeSelection ==0{var _geca _fg .Tabler ;_geca ,_cccd =_fg .GetStandardTable (1);if _cccd !=nil {return nil ,_cccd ;};_bdfd ,_cccd =_geca .Decode (_dbcd ._bbagd );
if _cccd !=nil {return nil ,_cccd ;};}else {_bdfd ,_cccd =_dbcd .huffDecodeBmSize ();if _cccd !=nil {return nil ,_cccd ;};};_dbcd ._bbagd .Align ();var _edca *_cf .Bitmap ;_edca ,_cccd =_dbcd .decodeHeightClassCollectiveBitmap (_bdfd ,uint32 (_cbgc ),_bgda );
if _cccd !=nil {return nil ,_cccd ;};_cccd =_dbcd .decodeHeightClassBitmap (_edca ,_affg ,int (_cbgc ),_fgdd );if _cccd !=nil {return nil ,_cccd ;};};};_dbbe ,_cccd :=_dbcd .getToExportFlags ();if _cccd !=nil {return nil ,_cccd ;};_dbcd .setExportedSymbols (_dbbe );
};return _dbcd ._egef ,nil ;};func (_cfgbb *SymbolDictionary )decodeNewSymbols (_dbfa ,_dbeg uint32 ,_febe *_cf .Bitmap ,_bcga ,_bccc int32 )error {if _cfgbb ._cbbc ==nil {_cfgbb ._cbbc =_cfga (_cfgbb ._bbagd ,nil );if _cfgbb ._cbgf ==nil {var _fdfa error ;
_cfgbb ._cbgf ,_fdfa =_b .New (_cfgbb ._bbagd );if _fdfa !=nil {return _fdfa ;};};if _cfgbb ._gbd ==nil {_cfgbb ._gbd =_b .NewStats (65536,1);};};_cfgbb ._cbbc .setParameters (_cfgbb ._gbd ,_cfgbb ._cbgf ,_cfgbb .SdrTemplate ,_dbfa ,_dbeg ,_febe ,_bcga ,_bccc ,false ,_cfgbb .SdrATX ,_cfgbb .SdrATY );
return _cfgbb .addSymbol (_cfgbb ._cbbc );};func (_fggc *PageInformationSegment )encodeStripingInformation (_febg _e .BinaryWriter )(_badg int ,_fgee error ){const _ead ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_fggc .IsStripe {if _badg ,_fgee =_febg .Write ([]byte {0x00,0x00});_fgee !=nil {return 0,_gg .Wrap (_fgee ,_ead ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _badg ,nil ;};_adec :=make ([]byte ,2);_dd .BigEndian .PutUint16 (_adec ,_fggc .MaxStripeSize |1<<15);
if _badg ,_fgee =_febg .Write (_adec );_fgee !=nil {return 0,_gg .Wrapf (_fgee ,_ead ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fggc .MaxStripeSize );};return _badg ,nil ;};func (_dcbb *TextRegion )decodeID ()(int64 ,error ){if _dcbb .IsHuffmanEncoded {if _dcbb ._fgac ==nil {_dabfb ,_gdfba :=_dcbb ._ceba .ReadBits (byte (_dcbb ._eeedb ));
return int64 (_dabfb ),_gdfba ;};return _dcbb ._fgac .Decode (_dcbb ._ceba );};return _dcbb ._geab .DecodeIAID (uint64 (_dcbb ._eeedb ),_dcbb ._ggae );};func (_cefb *PageInformationSegment )CombinationOperator ()_cf .CombinationOperator {return _cefb ._aegg ;
};func (_cccgc *TextRegion )decodeCurrentT ()(int64 ,error ){if _cccgc .SbStrips !=1{if _cccgc .IsHuffmanEncoded {_cdcb ,_fbfc :=_cccgc ._ceba .ReadBits (byte (_cccgc .LogSBStrips ));return int64 (_cdcb ),_fbfc ;};_edeb ,_beaa :=_cccgc ._geab .DecodeInt (_cccgc ._bcde );
if _beaa !=nil {return 0,_beaa ;};return int64 (_edeb ),nil ;};return 0,nil ;};type SegmentEncoder interface{Encode (_deeg _e .BinaryWriter )(_aggf int ,_afdf error );};func (_dbfaa *TextRegion )setContexts (_dffc *_b .DecoderStats ,_bagfa *_b .DecoderStats ,_gba *_b .DecoderStats ,_gdgda *_b .DecoderStats ,_caaa *_b .DecoderStats ,_aeccf *_b .DecoderStats ,_bgee *_b .DecoderStats ,_bdfb *_b .DecoderStats ,_egaff *_b .DecoderStats ,_ceagb *_b .DecoderStats ){_dbfaa ._gdab =_bagfa ;
_dbfaa ._bcbf =_gba ;_dbfaa ._cdgbf =_gdgda ;_dbfaa ._bcde =_caaa ;_dbfaa ._bdeb =_bgee ;_dbfaa ._ggbf =_bdfb ;_dbfaa ._ggae =_aeccf ;_dbfaa ._ddbdg =_egaff ;_dbfaa ._bcgg =_ceagb ;_dbfaa ._gdag =_dffc ;};func (_fefag *SymbolDictionary )String ()string {_bdfdf :=&_c .Builder {};
_bdfdf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bdfdf .WriteString (_ad .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fefag .SdrTemplate ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fefag .SdTemplate ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fefag ._dab ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fefag ._cdee ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fefag .SdHuffAggInstanceSelection ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fefag .SdHuffBMSizeSelection ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fefag .SdHuffDecodeWidthSelection ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fefag .SdHuffDecodeHeightSelection ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fefag .UseRefinementAggregation ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fefag .IsHuffmanEncoded ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fefag .SdATX ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fefag .SdATY ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fefag .SdrATX ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fefag .SdrATY ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fefag .NumberOfExportedSymbols ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fefag .NumberOfNewSymbols ));_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fefag ._aca ));
_bdfdf .WriteString (_ad .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fefag ._bbeb ));return _bdfdf .String ();};func (_cadb *TextRegion )decodeIb (_dfeg ,_ceed int64 )(*_cf .Bitmap ,error ){const _eaaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_gfed error ;_cgga *_cf .Bitmap ;);if _dfeg ==0{if int (_ceed )> len (_cadb .Symbols )-1{return nil ,_gg .Error (_eaaf ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _cadb .Symbols [int (_ceed )],nil ;};var _cade ,_cbgb ,_eddd ,_dfgg int64 ;_cade ,_gfed =_cadb .decodeRdw ();if _gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"");};_cbgb ,_gfed =_cadb .decodeRdh ();if _gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"");
};_eddd ,_gfed =_cadb .decodeRdx ();if _gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"");};_dfgg ,_gfed =_cadb .decodeRdy ();if _gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"");};if _cadb .IsHuffmanEncoded {if _ ,_gfed =_cadb .decodeSymInRefSize ();
_gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"");};_cadb ._ceba .Align ();};_bcccg :=_cadb .Symbols [_ceed ];_ebcd :=uint32 (_bcccg .Width );_daba :=uint32 (_bcccg .Height );_agdb :=int32 (uint32 (_cade )>>1)+int32 (_eddd );_ggbbg :=int32 (uint32 (_cbgb )>>1)+int32 (_dfgg );
if _cadb ._cecb ==nil {_cadb ._cecb =_cfga (_cadb ._ceba ,nil );};_cadb ._cecb .setParameters (_cadb ._gdag ,_cadb ._geab ,_cadb .SbrTemplate ,_ebcd +uint32 (_cade ),_daba +uint32 (_cbgb ),_bcccg ,_agdb ,_ggbbg ,false ,_cadb .SbrATX ,_cadb .SbrATY );_cgga ,_gfed =_cadb ._cecb .GetRegionBitmap ();
if _gfed !=nil {return nil ,_gg .Wrap (_gfed ,_eaaf ,"\u0067\u0072\u0066");};if _cadb .IsHuffmanEncoded {_cadb ._ceba .Align ();};return _cgga ,nil ;};func (_cfgb *PageInformationSegment )readContainsRefinement ()error {_ccge ,_adaba :=_cfgb ._bagf .ReadBit ();
if _adaba !=nil {return _adaba ;};if _ccge ==1{_cfgb ._gggf =true ;};return nil ;};func (_cfgd *PatternDictionary )computeSegmentDataStructure ()error {_cfgd .DataOffset =_cfgd ._dggb .AbsolutePosition ();_cfgd .DataHeaderLength =_cfgd .DataOffset -_cfgd .DataHeaderOffset ;
_cfgd .DataLength =int64 (_cfgd ._dggb .AbsoluteLength ())-_cfgd .DataHeaderLength ;return nil ;};func (_faba *GenericRegion )overrideAtTemplate0a (_bece ,_fcb ,_bded ,_gfb ,_bcea ,_aff int )int {if _faba .GBAtOverride [0]{_bece &=0xFFEF;if _faba .GBAtY [0]==0&&_faba .GBAtX [0]>=-int8 (_bcea ){_bece |=(_gfb >>uint (int8 (_aff )-_faba .GBAtX [0]&0x1))<<4;
}else {_bece |=int (_faba .getPixel (_fcb +int (_faba .GBAtX [0]),_bded +int (_faba .GBAtY [0])))<<4;};};if _faba .GBAtOverride [1]{_bece &=0xFBFF;if _faba .GBAtY [1]==0&&_faba .GBAtX [1]>=-int8 (_bcea ){_bece |=(_gfb >>uint (int8 (_aff )-_faba .GBAtX [1]&0x1))<<10;
}else {_bece |=int (_faba .getPixel (_fcb +int (_faba .GBAtX [1]),_bded +int (_faba .GBAtY [1])))<<10;};};if _faba .GBAtOverride [2]{_bece &=0xF7FF;if _faba .GBAtY [2]==0&&_faba .GBAtX [2]>=-int8 (_bcea ){_bece |=(_gfb >>uint (int8 (_aff )-_faba .GBAtX [2]&0x1))<<11;
}else {_bece |=int (_faba .getPixel (_fcb +int (_faba .GBAtX [2]),_bded +int (_faba .GBAtY [2])))<<11;};};if _faba .GBAtOverride [3]{_bece &=0x7FFF;if _faba .GBAtY [3]==0&&_faba .GBAtX [3]>=-int8 (_bcea ){_bece |=(_gfb >>uint (int8 (_aff )-_faba .GBAtX [3]&0x1))<<15;
}else {_bece |=int (_faba .getPixel (_fcb +int (_faba .GBAtX [3]),_bded +int (_faba .GBAtY [3])))<<15;};};return _bece ;};func (_agceg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _agceg .IsHuffmanEncoded {return _agceg .decodeHeightClassDeltaHeightWithHuffman ();
};_ggabb ,_fbbe :=_agceg ._cbgf .DecodeInt (_agceg ._aeba );if _fbbe !=nil {return 0,_fbbe ;};return int64 (_ggabb ),nil ;};func (_abeg *TextRegion )decodeRdw ()(int64 ,error ){const _agcfd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _abeg .IsHuffmanEncoded {if _abeg .SbHuffRDWidth ==3{if _abeg ._eaaef ==nil {var (_cfdg int ;
_bcf error ;);if _abeg .SbHuffFS ==3{_cfdg ++;};if _abeg .SbHuffDS ==3{_cfdg ++;};if _abeg .SbHuffDT ==3{_cfdg ++;};_abeg ._eaaef ,_bcf =_abeg .getUserTable (_cfdg );if _bcf !=nil {return 0,_gg .Wrap (_bcf ,_agcfd ,"");};};return _abeg ._eaaef .Decode (_abeg ._ceba );
};_eadg ,_fbebf :=_fg .GetStandardTable (14+int (_abeg .SbHuffRDWidth ));if _fbebf !=nil {return 0,_gg .Wrap (_fbebf ,_agcfd ,"");};return _eadg .Decode (_abeg ._ceba );};_gacb ,_feffd :=_abeg ._geab .DecodeInt (_abeg ._bdeb );if _feffd !=nil {return 0,_gg .Wrap (_feffd ,_agcfd ,"");
};return int64 (_gacb ),nil ;};func (_edg *GenericRefinementRegion )String ()string {_aeb :=&_c .Builder {};_aeb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_aeb .WriteString (_edg .RegionInfo .String ()+"\u000a");
_aeb .WriteString (_ad .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_edg .IsTPGROn ));_aeb .WriteString (_ad .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_edg .TemplateID ));
_aeb .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_edg .GrAtX ));_aeb .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_edg .GrAtY ));
_aeb .WriteString (_ad .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_edg .ReferenceDX ));_aeb .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_edg .ReferenceDY ));
return _aeb .String ();};func (_cfae *PageInformationSegment )readIsLossless ()error {_bgabd ,_cdcd :=_cfae ._bagf .ReadBit ();if _cdcd !=nil {return _cdcd ;};if _bgabd ==1{_cfae .IsLossless =true ;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};
);func (_cfeac *PageInformationSegment )Size ()int {return 19};func (_fdf *HalftoneRegion )combineGrayscalePlanes (_ddef []*_cf .Bitmap ,_fabc int )error {_egba :=0;for _eecac :=0;_eecac < _ddef [_fabc ].Height ;_eecac ++{for _acba :=0;_acba < _ddef [_fabc ].Width ;
_acba +=8{_dcbe ,_feef :=_ddef [_fabc +1].GetByte (_egba );if _feef !=nil {return _feef ;};_gac ,_feef :=_ddef [_fabc ].GetByte (_egba );if _feef !=nil {return _feef ;};_feef =_ddef [_fabc ].SetByte (_egba ,_cf .CombineBytes (_gac ,_dcbe ,_cf .CmbOpXor ));
if _feef !=nil {return _feef ;};_egba ++;};};return nil ;};func (_ceaec *TextRegion )Encode (w _e .BinaryWriter )(_abdb int ,_abfaf error ){const _gggd ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _abdb ,_abfaf =_ceaec .RegionInfo .Encode (w );_abfaf !=nil {return _abdb ,_gg .Wrap (_abfaf ,_gggd ,"");};var _gggdb int ;if _gggdb ,_abfaf =_ceaec .encodeFlags (w );_abfaf !=nil {return _abdb ,_gg .Wrap (_abfaf ,_gggd ,"");};_abdb +=_gggdb ;if _gggdb ,_abfaf =_ceaec .encodeSymbols (w );
_abfaf !=nil {return _abdb ,_gg .Wrap (_abfaf ,_gggd ,"");};_abdb +=_gggdb ;return _abdb ,nil ;};func (_bgfd *TextRegion )computeSymbolCodeLength ()error {if _bgfd .IsHuffmanEncoded {return _bgfd .symbolIDCodeLengths ();};_bgfd ._eeedb =int8 (_a .Ceil (_a .Log (float64 (_bgfd .NumberOfSymbols ))/_a .Log (2)));
return nil ;};func (_cfcfa *SymbolDictionary )encodeATFlags (_dagg _e .BinaryWriter )(_egbc int ,_ccfd error ){const _dbaf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cfcfa .IsHuffmanEncoded ||_cfcfa .SdTemplate !=0{return 0,nil ;
};_fagc :=4;if _cfcfa .SdTemplate !=0{_fagc =1;};for _ddec :=0;_ddec < _fagc ;_ddec ++{if _ccfd =_dagg .WriteByte (byte (_cfcfa .SdATX [_ddec ]));_ccfd !=nil {return _egbc ,_gg .Wrapf (_ccfd ,_dbaf ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ddec );
};_egbc ++;if _ccfd =_dagg .WriteByte (byte (_cfcfa .SdATY [_ddec ]));_ccfd !=nil {return _egbc ,_gg .Wrapf (_ccfd ,_dbaf ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ddec );};_egbc ++;};return _egbc ,nil ;};func (_ccae *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ccae .SdHuffDecodeHeightSelection {case 0:_bbagf ,_ebcf :=_fg .GetStandardTable (4);
if _ebcf !=nil {return 0,_ebcf ;};return _bbagf .Decode (_ccae ._bbagd );case 1:_bbbe ,_fcbeb :=_fg .GetStandardTable (5);if _fcbeb !=nil {return 0,_fcbeb ;};return _bbbe .Decode (_ccae ._bbagd );case 3:if _ccae ._dgde ==nil {_gbe ,_efgc :=_fg .GetStandardTable (0);
if _efgc !=nil {return 0,_efgc ;};_ccae ._dgde =_gbe ;};return _ccae ._dgde .Decode (_ccae ._bbagd );};return 0,nil ;};func (_dfacg *SymbolDictionary )decodeAggregate (_gff ,_geff uint32 )error {var (_bfdb int64 ;_edbe error ;);if _dfacg .IsHuffmanEncoded {_bfdb ,_edbe =_dfacg .huffDecodeRefAggNInst ();
if _edbe !=nil {return _edbe ;};}else {_gdfed ,_afbcf :=_dfacg ._cbgf .DecodeInt (_dfacg ._ddbd );if _afbcf !=nil {return _afbcf ;};_bfdb =int64 (_gdfed );};if _bfdb > 1{return _dfacg .decodeThroughTextRegion (_gff ,_geff ,uint32 (_bfdb ));}else if _bfdb ==1{return _dfacg .decodeRefinedSymbol (_gff ,_geff );
};return nil ;};func (_bgcf *GenericRegion )overrideAtTemplate0b (_feg ,_cdce ,_agd ,_gcdc ,_cgcd ,_eafe int )int {if _bgcf .GBAtOverride [0]{_feg &=0xFFFD;if _bgcf .GBAtY [0]==0&&_bgcf .GBAtX [0]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [0]&0x1))<<1;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [0]),_agd +int (_bgcf .GBAtY [0])))<<1;};};if _bgcf .GBAtOverride [1]{_feg &=0xDFFF;if _bgcf .GBAtY [1]==0&&_bgcf .GBAtX [1]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [1]&0x1))<<13;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [1]),_agd +int (_bgcf .GBAtY [1])))<<13;};};if _bgcf .GBAtOverride [2]{_feg &=0xFDFF;if _bgcf .GBAtY [2]==0&&_bgcf .GBAtX [2]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [2]&0x1))<<9;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [2]),_agd +int (_bgcf .GBAtY [2])))<<9;};};if _bgcf .GBAtOverride [3]{_feg &=0xBFFF;if _bgcf .GBAtY [3]==0&&_bgcf .GBAtX [3]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [3]&0x1))<<14;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [3]),_agd +int (_bgcf .GBAtY [3])))<<14;};};if _bgcf .GBAtOverride [4]{_feg &=0xEFFF;if _bgcf .GBAtY [4]==0&&_bgcf .GBAtX [4]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [4]&0x1))<<12;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [4]),_agd +int (_bgcf .GBAtY [4])))<<12;};};if _bgcf .GBAtOverride [5]{_feg &=0xFFDF;if _bgcf .GBAtY [5]==0&&_bgcf .GBAtX [5]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [5]&0x1))<<5;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [5]),_agd +int (_bgcf .GBAtY [5])))<<5;};};if _bgcf .GBAtOverride [6]{_feg &=0xFFFB;if _bgcf .GBAtY [6]==0&&_bgcf .GBAtX [6]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [6]&0x1))<<2;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [6]),_agd +int (_bgcf .GBAtY [6])))<<2;};};if _bgcf .GBAtOverride [7]{_feg &=0xFFF7;if _bgcf .GBAtY [7]==0&&_bgcf .GBAtX [7]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [7]&0x1))<<3;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [7]),_agd +int (_bgcf .GBAtY [7])))<<3;};};if _bgcf .GBAtOverride [8]{_feg &=0xF7FF;if _bgcf .GBAtY [8]==0&&_bgcf .GBAtX [8]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [8]&0x1))<<11;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [8]),_agd +int (_bgcf .GBAtY [8])))<<11;};};if _bgcf .GBAtOverride [9]{_feg &=0xFFEF;if _bgcf .GBAtY [9]==0&&_bgcf .GBAtX [9]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [9]&0x1))<<4;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [9]),_agd +int (_bgcf .GBAtY [9])))<<4;};};if _bgcf .GBAtOverride [10]{_feg &=0x7FFF;if _bgcf .GBAtY [10]==0&&_bgcf .GBAtX [10]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [10]&0x1))<<15;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [10]),_agd +int (_bgcf .GBAtY [10])))<<15;};};if _bgcf .GBAtOverride [11]{_feg &=0xFDFF;if _bgcf .GBAtY [11]==0&&_bgcf .GBAtX [11]>=-int8 (_cgcd ){_feg |=(_gcdc >>uint (int8 (_eafe )-_bgcf .GBAtX [11]&0x1))<<10;
}else {_feg |=int (_bgcf .getPixel (_cdce +int (_bgcf .GBAtX [11]),_agd +int (_bgcf .GBAtY [11])))<<10;};};return _feg ;};func (_fee *template0 )form (_ecg ,_abde ,_bfb ,_ccb ,_agc int16 )int16 {return (_ecg <<10)|(_abde <<7)|(_bfb <<4)|(_ccb <<1)|_agc ;
};func (_begb *SymbolDictionary )checkInput ()error {if _begb .SdHuffDecodeHeightSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_begb .SdHuffDecodeHeightSelection );
};if _begb .SdHuffDecodeWidthSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_begb .SdHuffDecodeWidthSelection );
};if _begb .IsHuffmanEncoded {if _begb .SdTemplate !=0{_be .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_begb .SdTemplate );
};if !_begb .UseRefinementAggregation {if !_begb .UseRefinementAggregation {if _begb ._dab {_be .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_begb ._dab =false ;};if _begb ._cdee {_be .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_begb ._cdee =false ;};};};}else {if _begb .SdHuffBMSizeSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_begb .SdHuffBMSizeSelection =0;};if _begb .SdHuffDecodeWidthSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_begb .SdHuffDecodeWidthSelection =0;};if _begb .SdHuffDecodeHeightSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_begb .SdHuffDecodeHeightSelection =0;};};if !_begb .UseRefinementAggregation {if _begb .SdrTemplate !=0{_be .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_begb .SdrTemplate );
_begb .SdrTemplate =0;};};if !_begb .IsHuffmanEncoded ||!_begb .UseRefinementAggregation {if _begb .SdHuffAggInstanceSelection {_be .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_begb .SdHuffAggInstanceSelection );
};};return nil ;};func (_cdg *GenericRefinementRegion )readAtPixels ()error {_cdg .GrAtX =make ([]int8 ,2);_cdg .GrAtY =make ([]int8 ,2);_bgb ,_dadc :=_cdg ._gga .ReadByte ();if _dadc !=nil {return _dadc ;};_cdg .GrAtX [0]=int8 (_bgb );_bgb ,_dadc =_cdg ._gga .ReadByte ();
if _dadc !=nil {return _dadc ;};_cdg .GrAtY [0]=int8 (_bgb );_bgb ,_dadc =_cdg ._gga .ReadByte ();if _dadc !=nil {return _dadc ;};_cdg .GrAtX [1]=int8 (_bgb );_bgb ,_dadc =_cdg ._gga .ReadByte ();if _dadc !=nil {return _dadc ;};_cdg .GrAtY [1]=int8 (_bgb );
return nil ;};func (_cbb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ffa ,_caa ,_caag ,_bbb ,_bdb ,_gda ,_dbg ,_febf ,_fae int )(_ggc error ){var (_ddc ,_cec int ;_gfd ,_fbg int ;_bad ,_abd int ;_dde byte ;);if _ffa > 0{_dde ,_ggc =_cbb .RegionBitmap .GetByte (_dbg -_caag );
if _ggc !=nil {return _ggc ;};_gfd =int (_dde );};if _febf > 0&&_febf <=_cbb .ReferenceBitmap .Height {_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae -_bbb +_gda );if _ggc !=nil {return _ggc ;};_fbg =int (_dde )<<2;};if _febf >=0&&_febf < _cbb .ReferenceBitmap .Height {_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae +_gda );
if _ggc !=nil {return _ggc ;};_bad =int (_dde );};if _febf > -2&&_febf < _cbb .ReferenceBitmap .Height -1{_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae +_bbb +_gda );if _ggc !=nil {return _ggc ;};_abd =int (_dde );};_ddc =((_gfd >>5)&0x6)|((_abd >>2)&0x30)|(_bad &0xc0)|(_fbg &0x200);
_cec =((_abd >>2)&0x70)|(_bad &0xc0)|(_fbg &0x700);var _bfd int ;for _edd :=0;_edd < _bdb ;_edd =_bfd {var (_af int ;_ggb int ;);_bfd =_edd +8;if _af =_caa -_edd ;_af > 8{_af =8;};_eae :=_bfd < _caa ;_adc :=_bfd < _cbb .ReferenceBitmap .Width ;_badb :=_gda +1;
if _ffa > 0{_dde =0;if _eae {_dde ,_ggc =_cbb .RegionBitmap .GetByte (_dbg -_caag +1);if _ggc !=nil {return _ggc ;};};_gfd =(_gfd <<8)|int (_dde );};if _febf > 0&&_febf <=_cbb .ReferenceBitmap .Height {var _gfdg int ;if _adc {_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae -_bbb +_badb );
if _ggc !=nil {return _ggc ;};_gfdg =int (_dde )<<2;};_fbg =(_fbg <<8)|_gfdg ;};if _febf >=0&&_febf < _cbb .ReferenceBitmap .Height {_dde =0;if _adc {_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae +_badb );if _ggc !=nil {return _ggc ;};};_bad =(_bad <<8)|int (_dde );
};if _febf > -2&&_febf < (_cbb .ReferenceBitmap .Height -1){_dde =0;if _adc {_dde ,_ggc =_cbb .ReferenceBitmap .GetByte (_fae +_bbb +_badb );if _ggc !=nil {return _ggc ;};};_abd =(_abd <<8)|int (_dde );};for _gfdb :=0;_gfdb < _af ;_gfdb ++{var _dcc int ;
_gad :=(_cec >>4)&0x1ff;switch _gad {case 0x1ff:_dcc =1;case 0x00:_dcc =0;default:_cbb ._df .SetIndex (int32 (_ddc ));_dcc ,_ggc =_cbb ._edc .DecodeBit (_cbb ._df );if _ggc !=nil {return _ggc ;};};_fge :=uint (7-_gfdb );_ggb |=_dcc <<_fge ;_ddc =((_ddc &0x0d6)<<1)|_dcc |(_gfd >>_fge +5)&0x002|((_abd >>_fge +2)&0x010)|((_bad >>_fge )&0x040)|((_fbg >>_fge )&0x200);
_cec =((_cec &0xdb)<<1)|((_abd >>_fge +2)&0x010)|((_bad >>_fge )&0x080)|((_fbg >>_fge )&0x400);};_ggc =_cbb .RegionBitmap .SetByte (_dbg ,byte (_ggb ));if _ggc !=nil {return _ggc ;};_dbg ++;_fae ++;};return nil ;};func NewGenericRegion (r *_e .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dcee :r };
};func (_eebe *TextRegion )decodeRdy ()(int64 ,error ){const _ffgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _eebe .IsHuffmanEncoded {if _eebe .SbHuffRDY ==3{if _eebe ._abg ==nil {var (_ecgdg int ;_eece error ;);if _eebe .SbHuffFS ==3{_ecgdg ++;
};if _eebe .SbHuffDS ==3{_ecgdg ++;};if _eebe .SbHuffDT ==3{_ecgdg ++;};if _eebe .SbHuffRDWidth ==3{_ecgdg ++;};if _eebe .SbHuffRDHeight ==3{_ecgdg ++;};if _eebe .SbHuffRDX ==3{_ecgdg ++;};_eebe ._abg ,_eece =_eebe .getUserTable (_ecgdg );if _eece !=nil {return 0,_gg .Wrap (_eece ,_ffgc ,"");
};};return _eebe ._abg .Decode (_eebe ._ceba );};_gbf ,_dgab :=_fg .GetStandardTable (14+int (_eebe .SbHuffRDY ));if _dgab !=nil {return 0,_dgab ;};return _gbf .Decode (_eebe ._ceba );};_gdba ,_gdcg :=_eebe ._geab .DecodeInt (_eebe ._bcgg );if _gdcg !=nil {return 0,_gg .Wrap (_gdcg ,_ffgc ,"");
};return int64 (_gdba ),nil ;};func (_fbebc *TableSegment )parseHeader ()error {var (_bbcaf int ;_cecd uint64 ;_gcbf error ;);_bbcaf ,_gcbf =_fbebc ._ageg .ReadBit ();if _gcbf !=nil {return _gcbf ;};if _bbcaf ==1{return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bbcaf );
};if _cecd ,_gcbf =_fbebc ._ageg .ReadBits (3);_gcbf !=nil {return _gcbf ;};_fbebc ._bcdg =(int32 (_cecd )+1)&0xf;if _cecd ,_gcbf =_fbebc ._ageg .ReadBits (3);_gcbf !=nil {return _gcbf ;};_fbebc ._cedad =(int32 (_cecd )+1)&0xf;if _cecd ,_gcbf =_fbebc ._ageg .ReadBits (32);
_gcbf !=nil {return _gcbf ;};_fbebc ._bdfc =int32 (_cecd &_a .MaxInt32 );if _cecd ,_gcbf =_fbebc ._ageg .ReadBits (32);_gcbf !=nil {return _gcbf ;};_fbebc ._fbeb =int32 (_cecd &_a .MaxInt32 );return nil ;};func (_aeac *TextRegion )decodeStripT ()(_cfcd int64 ,_ggfb error ){if _aeac .IsHuffmanEncoded {if _aeac .SbHuffDT ==3{if _aeac ._adccf ==nil {var _cfec int ;
if _aeac .SbHuffFS ==3{_cfec ++;};if _aeac .SbHuffDS ==3{_cfec ++;};_aeac ._adccf ,_ggfb =_aeac .getUserTable (_cfec );if _ggfb !=nil {return 0,_ggfb ;};};_cfcd ,_ggfb =_aeac ._adccf .Decode (_aeac ._ceba );if _ggfb !=nil {return 0,_ggfb ;};}else {var _fabab _fg .Tabler ;
_fabab ,_ggfb =_fg .GetStandardTable (11+int (_aeac .SbHuffDT ));if _ggfb !=nil {return 0,_ggfb ;};_cfcd ,_ggfb =_fabab .Decode (_aeac ._ceba );if _ggfb !=nil {return 0,_ggfb ;};};}else {var _ddde int32 ;_ddde ,_ggfb =_aeac ._geab .DecodeInt (_aeac ._gdab );
if _ggfb !=nil {return 0,_ggfb ;};_cfcd =int64 (_ddde );};_cfcd *=int64 (-_aeac .SbStrips );return _cfcd ,nil ;};func _cfga (_bbbbf *_e .Reader ,_fdad *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_gga :_bbbbf ,RegionInfo :NewRegionSegment (_bbbbf ),_bf :_fdad ,_cae :&template0 {},_fgg :&template1 {}};
};func (_edcd *SymbolDictionary )setInSyms ()error {if _edcd .Header .RTSegments !=nil {return _edcd .retrieveImportSymbols ();};_edcd ._gabe =make ([]*_cf .Bitmap ,0);return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_efec *PageInformationSegment )encodeFlags (_def _e .BinaryWriter )(_ffff error ){const _bcge ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ffff =_def .SkipBits (1);_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _bfga int ;if _efec .CombinationOperatorOverrideAllowed (){_bfga =1;};if _ffff =_def .WriteBit (_bfga );_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_bfga =0;if _efec ._gefa {_bfga =1;};if _ffff =_def .WriteBit (_bfga );_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ffff =_def .WriteBit ((int (_efec ._aegg )>>1)&0x01);
_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ffff =_def .WriteBit (int (_efec ._aegg )&0x01);
_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bfga =int (_efec .DefaultPixelValue );
if _ffff =_def .WriteBit (_bfga );_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bfga =0;if _efec ._gggf {_bfga =1;
};if _ffff =_def .WriteBit (_bfga );_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bfga =0;if _efec .IsLossless {_bfga =1;};if _ffff =_def .WriteBit (_bfga );
_ffff !=nil {return _gg .Wrap (_ffff ,_bcge ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bdde *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bdde .SdHuffAggInstanceSelection {_bceg ,_agaf :=_fg .GetStandardTable (1);
if _agaf !=nil {return 0,_agaf ;};return _bceg .Decode (_bdde ._bbagd );};if _bdde ._ggffc ==nil {var (_dgfc int ;_agac error ;);if _bdde .SdHuffDecodeHeightSelection ==3{_dgfc ++;};if _bdde .SdHuffDecodeWidthSelection ==3{_dgfc ++;};if _bdde .SdHuffBMSizeSelection ==3{_dgfc ++;
};_bdde ._ggffc ,_agac =_bdde .getUserTable (_dgfc );if _agac !=nil {return 0,_agac ;};};return _bdde ._ggffc .Decode (_bdde ._bbagd );};func (_ccdae *PageInformationSegment )readMaxStripeSize ()error {_faad ,_eaec :=_ccdae ._bagf .ReadBits (15);if _eaec !=nil {return _eaec ;
};_ccdae .MaxStripeSize =uint16 (_faad &_a .MaxUint16 );return nil ;};func (_fdec *TextRegion )decodeDT ()(_ebda int64 ,_eac error ){if _fdec .IsHuffmanEncoded {if _fdec .SbHuffDT ==3{_ebda ,_eac =_fdec ._adccf .Decode (_fdec ._ceba );if _eac !=nil {return 0,_eac ;
};}else {var _ccgc _fg .Tabler ;_ccgc ,_eac =_fg .GetStandardTable (11+int (_fdec .SbHuffDT ));if _eac !=nil {return 0,_eac ;};_ebda ,_eac =_ccgc .Decode (_fdec ._ceba );if _eac !=nil {return 0,_eac ;};};}else {var _eefgb int32 ;_eefgb ,_eac =_fdec ._geab .DecodeInt (_fdec ._gdab );
if _eac !=nil {return 0,_eac ;};_ebda =int64 (_eefgb );};_ebda *=int64 (_fdec .SbStrips );return _ebda ,nil ;};func (_cbad *TextRegion )decodeIds ()(int64 ,error ){const _cfgf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cbad .IsHuffmanEncoded {if _cbad .SbHuffDS ==3{if _cbad ._ggaf ==nil {_bed :=0;
if _cbad .SbHuffFS ==3{_bed ++;};var _ddab error ;_cbad ._ggaf ,_ddab =_cbad .getUserTable (_bed );if _ddab !=nil {return 0,_gg .Wrap (_ddab ,_cfgf ,"");};};return _cbad ._ggaf .Decode (_cbad ._ceba );};_afga ,_fgce :=_fg .GetStandardTable (8+int (_cbad .SbHuffDS ));
if _fgce !=nil {return 0,_gg .Wrap (_fgce ,_cfgf ,"");};return _afga .Decode (_cbad ._ceba );};_bbgcb ,_fbge :=_cbad ._geab .DecodeInt (_cbad ._cdgbf );if _fbge !=nil {return 0,_gg .Wrap (_fbge ,_cfgf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bbgcb ),nil ;
};func (_fa *GenericRefinementRegion )Init (header *Header ,r *_e .Reader )error {_fa ._bf =header ;_fa ._gga =r ;_fa .RegionInfo =NewRegionSegment (r );return _fa .parseHeader ();};func (_agb *GenericRegion )Encode (w _e .BinaryWriter )(_bcb int ,_ddgd error ){const _cfc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _agb .Bitmap ==nil {return 0,_gg .Error (_cfc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_agce ,_ddgd :=_agb .RegionSegment .Encode (w );if _ddgd !=nil {return 0,_gg .Wrap (_ddgd ,_cfc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_bcb +=_agce ;if _ddgd =w .SkipBits (4);_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _degb int ;if _agb .IsTPGDon {_degb =1;};if _ddgd =w .WriteBit (_degb );
_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_degb =0;if _ddgd =w .WriteBit (int (_agb .GBTemplate >>1)&0x01);_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ddgd =w .WriteBit (int (_agb .GBTemplate )&0x01);_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _agb .UseMMR {_degb =1;};if _ddgd =w .WriteBit (_degb );
_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bcb ++;if _agce ,_ddgd =_agb .writeGBAtPixels (w );_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"");};_bcb +=_agce ;_fdca :=_db .New ();
if _ddgd =_fdca .EncodeBitmap (_agb .Bitmap ,_agb .IsTPGDon );_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"");};_fdca .Final ();var _efe int64 ;if _efe ,_ddgd =_fdca .WriteTo (w );_ddgd !=nil {return _bcb ,_gg .Wrap (_ddgd ,_cfc ,"");};_bcb +=int (_efe );
return _bcb ,nil ;};func (_accf *SymbolDictionary )encodeSymbols (_ceeb _e .BinaryWriter )(_cafd int ,_gafc error ){const _eca ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_dbgb :=_db .New ();_dbgb .Init ();_abef ,_gafc :=_accf ._eefd .SelectByIndexes (_accf ._gegea );
if _gafc !=nil {return 0,_gg .Wrap (_gafc ,_eca ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gfcb :=map[*_cf .Bitmap ]int {};for _eeec ,_fdff :=range _abef .Values {_gfcb [_fdff ]=_eeec ;};_abef .SortByHeight ();var _bafbg ,_gdff int ;_agbb ,_gafc :=_abef .GroupByHeight ();
if _gafc !=nil {return 0,_gg .Wrap (_gafc ,_eca ,"");};for _ ,_daed :=range _agbb .Values {_bbcb :=_daed .Values [0].Height ;_fbf :=_bbcb -_bafbg ;if _gafc =_dbgb .EncodeInteger (_db .IADH ,_fbf );_gafc !=nil {return 0,_gg .Wrapf (_gafc ,_eca ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fbf );
};_bafbg =_bbcb ;_ebcg ,_bgef :=_daed .GroupByWidth ();if _bgef !=nil {return 0,_gg .Wrapf (_bgef ,_eca ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bbcb );};var _cdaf int ;for _ ,_bfed :=range _ebcg .Values {for _ ,_agdf :=range _bfed .Values {_gfgf :=_agdf .Width ;
_bbdf :=_gfgf -_cdaf ;if _bgef =_dbgb .EncodeInteger (_db .IADW ,_bbdf );_bgef !=nil {return 0,_gg .Wrapf (_bgef ,_eca ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bbdf );};_cdaf +=_bbdf ;if _bgef =_dbgb .EncodeBitmap (_agdf ,false );
_bgef !=nil {return 0,_gg .Wrapf (_bgef ,_eca ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_bbcb ,_gfgf );};_gfde :=_gfcb [_agdf ];_accf ._caed [_gfde ]=_gdff ;_gdff ++;};};if _bgef =_dbgb .EncodeOOB (_db .IADW );
_bgef !=nil {return 0,_gg .Wrap (_bgef ,_eca ,"\u0049\u0041\u0044\u0057");};};if _gafc =_dbgb .EncodeInteger (_db .IAEX ,0);_gafc !=nil {return 0,_gg .Wrap (_gafc ,_eca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gafc =_dbgb .EncodeInteger (_db .IAEX ,len (_accf ._gegea ));_gafc !=nil {return 0,_gg .Wrap (_gafc ,_eca ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_dbgb .Final ();_feaf ,_gafc :=_dbgb .WriteTo (_ceeb );
if _gafc !=nil {return 0,_gg .Wrap (_gafc ,_eca ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_feaf ),nil ;};func (_gdagf *TextRegion )Init (header *Header ,r *_e .Reader )error {_gdagf .Header =header ;_gdagf ._ceba =r ;_gdagf .RegionInfo =NewRegionSegment (_gdagf ._ceba );return _gdagf .parseHeader ();};func (_abad *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dcea ,_cbga :=_abad ._bagf .ReadBit ();
if _cbga !=nil {return _cbga ;};if _dcea ==1{_abad ._bbaf =true ;};return nil ;};func (_bba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bfg ,_bff ,_fff ,_dge ,_bae ,_dgee ,_dgeb ,_edb ,_fbc int )error {var (_add ,_egg ,_dbf ,_cac ,_eb ,_baf int ;
_cff byte ;_bdc error ;);if _bfg > 0{_cff ,_bdc =_bba .RegionBitmap .GetByte (_dgeb -_fff );if _bdc !=nil {return _bdc ;};_dbf =int (_cff );};if _edb > 0&&_edb <=_bba .ReferenceBitmap .Height {_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc -_dge +_dgee );
if _bdc !=nil {return _bdc ;};_cac =int (_cff )<<4;};if _edb >=0&&_edb < _bba .ReferenceBitmap .Height {_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc +_dgee );if _bdc !=nil {return _bdc ;};_eb =int (_cff )<<1;};if _edb > -2&&_edb < _bba .ReferenceBitmap .Height -1{_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc +_dge +_dgee );
if _bdc !=nil {return _bdc ;};_baf =int (_cff );};_add =((_dbf >>5)&0x6)|((_baf >>2)&0x30)|(_eb &0x180)|(_cac &0xc00);var _ab int ;for _ebe :=0;_ebe < _bae ;_ebe =_ab {var _deg int ;_ab =_ebe +8;var _aag int ;if _aag =_bff -_ebe ;_aag > 8{_aag =8;};_fdg :=_ab < _bff ;
_fc :=_ab < _bba .ReferenceBitmap .Width ;_bbad :=_dgee +1;if _bfg > 0{_cff =0;if _fdg {_cff ,_bdc =_bba .RegionBitmap .GetByte (_dgeb -_fff +1);if _bdc !=nil {return _bdc ;};};_dbf =(_dbf <<8)|int (_cff );};if _edb > 0&&_edb <=_bba .ReferenceBitmap .Height {var _gf int ;
if _fc {_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc -_dge +_bbad );if _bdc !=nil {return _bdc ;};_gf =int (_cff )<<4;};_cac =(_cac <<8)|_gf ;};if _edb >=0&&_edb < _bba .ReferenceBitmap .Height {var _dc int ;if _fc {_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc +_bbad );
if _bdc !=nil {return _bdc ;};_dc =int (_cff )<<1;};_eb =(_eb <<8)|_dc ;};if _edb > -2&&_edb < (_bba .ReferenceBitmap .Height -1){_cff =0;if _fc {_cff ,_bdc =_bba .ReferenceBitmap .GetByte (_fbc +_dge +_bbad );if _bdc !=nil {return _bdc ;};};_baf =(_baf <<8)|int (_cff );
};for _ge :=0;_ge < _aag ;_ge ++{var _geb int ;_eba :=false ;_acb :=(_add >>4)&0x1ff;if _acb ==0x1ff{_eba =true ;_geb =1;}else if _acb ==0x00{_eba =true ;};if !_eba {if _bba ._cg {_egg =_bba .overrideAtTemplate0 (_add ,_ebe +_ge ,_bfg ,_deg ,_ge );_bba ._df .SetIndex (int32 (_egg ));
}else {_bba ._df .SetIndex (int32 (_add ));};_geb ,_bdc =_bba ._edc .DecodeBit (_bba ._df );if _bdc !=nil {return _bdc ;};};_gd :=uint (7-_ge );_deg |=_geb <<_gd ;_add =((_add &0xdb6)<<1)|_geb |(_dbf >>_gd +5)&0x002|((_baf >>_gd +2)&0x010)|((_eb >>_gd )&0x080)|((_cac >>_gd )&0x400);
};_bdc =_bba .RegionBitmap .SetByte (_dgeb ,byte (_deg ));if _bdc !=nil {return _bdc ;};_dgeb ++;_fbc ++;};return nil ;};func (_bagb *GenericRefinementRegion )setParameters (_ddg *_b .DecoderStats ,_cgg *_b .Decoder ,_gcd int8 ,_abb ,_ddcc uint32 ,_dff *_cf .Bitmap ,_fdb ,_dbd int32 ,_fdd bool ,_bbff []int8 ,_faf []int8 ){_be .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ddg !=nil {_bagb ._df =_ddg ;};if _cgg !=nil {_bagb ._edc =_cgg ;};_bagb .TemplateID =_gcd ;_bagb .RegionInfo .BitmapWidth =_abb ;_bagb .RegionInfo .BitmapHeight =_ddcc ;_bagb .ReferenceBitmap =_dff ;_bagb .ReferenceDX =_fdb ;_bagb .ReferenceDY =_dbd ;
_bagb .IsTPGROn =_fdd ;_bagb .GrAtX =_bbff ;_bagb .GrAtY =_faf ;_bagb .RegionBitmap =nil ;_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bagb );
};func (_gc *GenericRefinementRegion )decodeOptimized (_cgf ,_ba ,_bd ,_ea ,_da ,_cb ,_bac int )error {var (_cea error ;_gcg int ;_bg int ;);_fgde :=_cgf -int (_gc .ReferenceDY );if _beb :=int (-_gc .ReferenceDX );_beb > 0{_gcg =_beb ;};_dad :=_gc .ReferenceBitmap .GetByteIndex (_gcg ,_fgde );
if _gc .ReferenceDX > 0{_bg =int (_gc .ReferenceDX );};_bgc :=_gc .RegionBitmap .GetByteIndex (_bg ,_cgf );switch _gc .TemplateID {case 0:_cea =_gc .decodeTemplate (_cgf ,_ba ,_bd ,_ea ,_da ,_cb ,_bac ,_bgc ,_fgde ,_dad ,_gc ._cae );case 1:_cea =_gc .decodeTemplate (_cgf ,_ba ,_bd ,_ea ,_da ,_cb ,_bac ,_bgc ,_fgde ,_dad ,_gc ._fgg );
};return _cea ;};var _ _fg .BasicTabler =&TableSegment {};type HalftoneRegion struct{_cgad *_e .Reader ;_egac *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;
CombinationOperator _cf .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cf .Bitmap ;Patterns []*_cf .Bitmap ;
};func (_gcaf *GenericRegion )Size ()int {return _gcaf .RegionSegment .Size ()+1+2*len (_gcaf .GBAtX )};func (_bca *GenericRegion )decodeLine (_fgea ,_eefg ,_bga int )error {const _cded ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_gbc :=_bca .Bitmap .GetByteIndex (0,_fgea );
_fggd :=_gbc -_bca .Bitmap .RowStride ;switch _bca .GBTemplate {case 0:if !_bca .UseExtTemplates {return _bca .decodeTemplate0a (_fgea ,_eefg ,_bga ,_gbc ,_fggd );};return _bca .decodeTemplate0b (_fgea ,_eefg ,_bga ,_gbc ,_fggd );case 1:return _bca .decodeTemplate1 (_fgea ,_eefg ,_bga ,_gbc ,_fggd );
case 2:return _bca .decodeTemplate2 (_fgea ,_eefg ,_bga ,_gbc ,_fggd );case 3:return _bca .decodeTemplate3 (_fgea ,_eefg ,_bga ,_gbc ,_fggd );};return _gg .Errorf (_cded ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bca .GBTemplate );
};func (_agcea *Header )writeSegmentNumber (_afafe _e .BinaryWriter )(_fbe int ,_cbcd error ){_gebf :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_gebf ,_agcea .SegmentNumber );if _fbe ,_cbcd =_afafe .Write (_gebf );_cbcd !=nil {return 0,_gg .Wrap (_cbcd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _fbe ,nil ;};func (_bdge *SymbolDictionary )parseHeader ()(_eag error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eag !=nil {_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_eag );
}else {_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _eag =_bdge .readRegionFlags ();_eag !=nil {return _eag ;};if _eag =_bdge .setAtPixels ();_eag !=nil {return _eag ;};if _eag =_bdge .setRefinementAtPixels ();_eag !=nil {return _eag ;};if _eag =_bdge .readNumberOfExportedSymbols ();_eag !=nil {return _eag ;
};if _eag =_bdge .readNumberOfNewSymbols ();_eag !=nil {return _eag ;};if _eag =_bdge .setInSyms ();_eag !=nil {return _eag ;};if _bdge ._cdee {_bbbbd :=_bdge .Header .RTSegments ;for _eaea :=len (_bbbbd )-1;_eaea >=0;_eaea --{if _bbbbd [_eaea ].Type ==0{_eaaa ,_bdba :=_bbbbd [_eaea ].SegmentData .(*SymbolDictionary );
if !_bdba {_eag =_ad .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bbbbd [_eaea ]);
return _eag ;};if _eaaa ._cdee {_bdge .setRetainedCodingContexts (_eaaa );};break ;};};};if _eag =_bdge .checkInput ();_eag !=nil {return _eag ;};return nil ;};func (_cgfc *Header )readHeaderFlags ()error {const _gec ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_fccb ,_bdcac :=_cgfc .Reader .ReadBit ();if _bdcac !=nil {return _gg .Wrap (_bdcac ,_gec ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fccb !=0{_cgfc .RetainFlag =true ;};_fccb ,_bdcac =_cgfc .Reader .ReadBit ();if _bdcac !=nil {return _gg .Wrap (_bdcac ,_gec ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _fccb !=0{_cgfc .PageAssociationFieldSize =true ;};_cdef ,_bdcac :=_cgfc .Reader .ReadBits (6);if _bdcac !=nil {return _gg .Wrap (_bdcac ,_gec ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cgfc .Type =Type (int (_cdef ));
return nil ;};func (_gggeb *Header )writeFlags (_ege _e .BinaryWriter )(_faeb error ){const _ddd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_eeebc :=byte (_gggeb .Type );if _faeb =_ege .WriteByte (_eeebc );
_faeb !=nil {return _gg .Wrap (_faeb ,_ddd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_gggeb .RetainFlag &&!_gggeb .PageAssociationFieldSize {return nil ;
};if _faeb =_ege .SkipBits (-8);_faeb !=nil {return _gg .Wrap (_faeb ,_ddd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _feff int ;
if _gggeb .RetainFlag {_feff =1;};if _faeb =_ege .WriteBit (_feff );_faeb !=nil {return _gg .Wrap (_faeb ,_ddd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_feff =0;if _gggeb .PageAssociationFieldSize {_feff =1;
};if _faeb =_ege .WriteBit (_feff );_faeb !=nil {return _gg .Wrap (_faeb ,_ddd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ege .FinishByte ();return nil ;};func (_aab *GenericRegion )decodeTemplate2 (_bgab ,_ccf ,_eeca int ,_gfac ,_eeeb int )(_dffg error ){const _gegc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cee ,_gdfg int ;_fcd ,_egcd int ;_dfgd byte ;_dafb ,_cffc int ;);if _bgab >=1{_dfgd ,_dffg =_aab .Bitmap .GetByte (_eeeb );if _dffg !=nil {return _gg .Wrap (_dffg ,_gegc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_fcd =int (_dfgd );};if _bgab >=2{_dfgd ,_dffg =_aab .Bitmap .GetByte (_eeeb -_aab .Bitmap .RowStride );if _dffg !=nil {return _gg .Wrap (_dffg ,_gegc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_egcd =int (_dfgd )<<4;
};_cee =(_fcd >>3&0x7c)|(_egcd >>3&0x380);for _baa :=0;_baa < _eeca ;_baa =_dafb {var (_fgdf byte ;_ccg int ;);_dafb =_baa +8;if _cfaa :=_ccf -_baa ;_cfaa > 8{_ccg =8;}else {_ccg =_cfaa ;};if _bgab > 0{_fcd <<=8;if _dafb < _ccf {_dfgd ,_dffg =_aab .Bitmap .GetByte (_eeeb +1);
if _dffg !=nil {return _gg .Wrap (_dffg ,_gegc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_fcd |=int (_dfgd );};};if _bgab > 1{_egcd <<=8;if _dafb < _ccf {_dfgd ,_dffg =_aab .Bitmap .GetByte (_eeeb -_aab .Bitmap .RowStride +1);
if _dffg !=nil {return _gg .Wrap (_dffg ,_gegc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_egcd |=int (_dfgd )<<4;};};for _ffc :=0;_ffc < _ccg ;_ffc ++{_cfcf :=uint (10-_ffc );if _aab ._cda {_gdfg =_aab .overrideAtTemplate2 (_cee ,_baa +_ffc ,_bgab ,int (_fgdf ),_ffc );
_aab ._gdg .SetIndex (int32 (_gdfg ));}else {_aab ._gdg .SetIndex (int32 (_cee ));};_cffc ,_dffg =_aab ._gdb .DecodeBit (_aab ._gdg );if _dffg !=nil {return _gg .Wrap (_dffg ,_gegc ,"");};_fgdf |=byte (_cffc <<uint (7-_ffc ));_cee =((_cee &0x1bd)<<1)|_cffc |((_fcd >>_cfcf )&0x4)|((_egcd >>_cfcf )&0x80);
};if _eaf :=_aab .Bitmap .SetByte (_gfac ,_fgdf );_eaf !=nil {return _gg .Wrap (_eaf ,_gegc ,"");};_gfac ++;_eeeb ++;};return nil ;};func (_ebae *PageInformationSegment )String ()string {_aafe :=&_c .Builder {};_aafe .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_aafe .WriteString (_ad .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ebae .PageBMHeight ));_aafe .WriteString (_ad .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ebae .PageBMWidth ));
_aafe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ebae .ResolutionX ));_aafe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ebae .ResolutionY ));
_aafe .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ebae ._aegg ));_aafe .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ebae ._bbaf ));
_aafe .WriteString (_ad .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ebae .IsLossless ));_aafe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ebae ._gefa ));
_aafe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ebae ._gggf ));_aafe .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ebae .IsStripe ));
_aafe .WriteString (_ad .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ebae .MaxStripeSize ));return _aafe .String ();};func (_bbd *GenericRegion )parseHeader ()(_gaa error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _gaa !=nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gaa );
}else {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_dcbf int ;_caec uint64 ;);if _gaa =_bbd .RegionSegment .parseHeader ();_gaa !=nil {return _gaa ;};if _ ,_gaa =_bbd ._dcee .ReadBits (3);_gaa !=nil {return _gaa ;};_dcbf ,_gaa =_bbd ._dcee .ReadBit ();if _gaa !=nil {return _gaa ;};if _dcbf ==1{_bbd .UseExtTemplates =true ;
};_dcbf ,_gaa =_bbd ._dcee .ReadBit ();if _gaa !=nil {return _gaa ;};if _dcbf ==1{_bbd .IsTPGDon =true ;};_caec ,_gaa =_bbd ._dcee .ReadBits (2);if _gaa !=nil {return _gaa ;};_bbd .GBTemplate =byte (_caec &0xf);_dcbf ,_gaa =_bbd ._dcee .ReadBit ();if _gaa !=nil {return _gaa ;
};if _dcbf ==1{_bbd .IsMMREncoded =true ;};if !_bbd .IsMMREncoded {_ggf :=1;if _bbd .GBTemplate ==0{_ggf =4;if _bbd .UseExtTemplates {_ggf =12;};};if _gaa =_bbd .readGBAtPixels (_ggf );_gaa !=nil {return _gaa ;};};if _gaa =_bbd .computeSegmentDataStructure ();
_gaa !=nil {return _gaa ;};_be .Log .Trace ("\u0025\u0073",_bbd );return nil ;};func (_fcff *TableSegment )HtOOB ()int32 {return _fcff ._gbbe };func (_dfea *PatternDictionary )setGbAtPixels (){if _dfea .HDTemplate ==0{_dfea .GBAtX =make ([]int8 ,4);_dfea .GBAtY =make ([]int8 ,4);
_dfea .GBAtX [0]=-int8 (_dfea .HdpWidth );_dfea .GBAtY [0]=0;_dfea .GBAtX [1]=-3;_dfea .GBAtY [1]=-1;_dfea .GBAtX [2]=2;_dfea .GBAtY [2]=-2;_dfea .GBAtX [3]=-2;_dfea .GBAtY [3]=-2;}else {_dfea .GBAtX =[]int8 {-int8 (_dfea .HdpWidth )};_dfea .GBAtY =[]int8 {0};
};};func (_becag *SymbolDictionary )Init (h *Header ,r *_e .Reader )error {_becag .Header =h ;_becag ._bbagd =r ;return _becag .parseHeader ();};func (_faa *Header )writeSegmentPageAssociation (_bda _e .BinaryWriter )(_aggd int ,_aage error ){const _ccdd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _faa .pageSize ()!=4{if _aage =_bda .WriteByte (byte (_faa .PageAssociation ));_aage !=nil {return 0,_gg .Wrap (_aage ,_ccdd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_ebff :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_ebff ,uint32 (_faa .PageAssociation ));if _aggd ,_aage =_bda .Write (_ebff );_aage !=nil {return 0,_gg .Wrap (_aage ,_ccdd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _aggd ,nil ;
};func (_aabef *TableSegment )HtRS ()int32 {return _aabef ._bcdg };func (_acc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_acc .Template .setIndex (_acc ._df );return _acc ._edc .DecodeBit (_acc ._df );};func (_gece *TextRegion )readAmountOfSymbolInstances ()error {_eddad ,_edgb :=_gece ._ceba .ReadBits (32);
if _edgb !=nil {return _edgb ;};_gece .NumberOfSymbolInstances =uint32 (_eddad &_a .MaxUint32 );_egfc :=_gece .RegionInfo .BitmapWidth *_gece .RegionInfo .BitmapHeight ;if _egfc < _gece .NumberOfSymbolInstances {_be .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_egfc ,_gece .NumberOfSymbolInstances );
_gece .NumberOfSymbolInstances =_egfc ;};return nil ;};func (_bfgd *template0 )setIndex (_geef *_b .DecoderStats ){_geef .SetIndex (0x100)};func (_bfbe *RegionSegment )Size ()int {return 17};func (_ebfa *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ebfa ._dbeb ==nil {var (_afcb int ;
_efeccd error ;);if _ebfa .SdHuffDecodeHeightSelection ==3{_afcb ++;};if _ebfa .SdHuffDecodeWidthSelection ==3{_afcb ++;};_ebfa ._dbeb ,_efeccd =_ebfa .getUserTable (_afcb );if _efeccd !=nil {return 0,_efeccd ;};};return _ebfa ._dbeb .Decode (_ebfa ._bbagd );
};type templater interface{form (_efd ,_edba ,_gfg ,_gcf ,_cca int16 )int16 ;setIndex (_eggf *_b .DecoderStats );};func (_acdg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cf .Points ,symbols *_cf .Bitmaps ,classIDs *_fe .IntSlice ,boxes *_cf .Boxes ,width ,height ,symBits int ){_acdg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_acdg ._eea =globalSymbolsMap ;_acdg ._cbcc =localSymbolsMap ;_acdg ._ggee =comps ;_acdg ._deff =inLL ;_acdg ._fbga =symbols ;_acdg ._daad =classIDs ;_acdg ._efbf =boxes ;_acdg ._caef =symBits ;};func (_baea *TextRegion )encodeSymbols (_babf _e .BinaryWriter )(_bdgca int ,_eafb error ){const _acff ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_dcge :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_dcge ,_baea .NumberOfSymbols );if _bdgca ,_eafb =_babf .Write (_dcge );_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_ebcfe ,_eafb :=_cf .NewClassedPoints (_baea ._deff ,_baea ._ggee );if _eafb !=nil {return 0,_gg .Wrap (_eafb ,_acff ,"");};var _deae ,_abeb int ;_geacf :=_db .New ();_geacf .Init ();if _eafb =_geacf .EncodeInteger (_db .IADT ,0);_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_edbeg ,_eafb :=_ebcfe .GroupByY ();if _eafb !=nil {return 0,_gg .Wrap (_eafb ,_acff ,"");};for _ ,_daadc :=range _edbeg {_geba :=int (_daadc .YAtIndex (0));_dagb :=_geba -_deae ;if _eafb =_geacf .EncodeInteger (_db .IADT ,_dagb );_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"");
};var _fbbf int ;for _cccb ,_eccg :=range _daadc .IntSlice {switch _cccb {case 0:_eefga :=int (_daadc .XAtIndex (_cccb ))-_abeb ;if _eafb =_geacf .EncodeInteger (_db .IAFS ,_eefga );_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"");};_abeb +=_eefga ;
_fbbf =_abeb ;default:_ecbc :=int (_daadc .XAtIndex (_cccb ))-_fbbf ;if _eafb =_geacf .EncodeInteger (_db .IADS ,_ecbc );_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"");};_fbbf +=_ecbc ;};_gadg ,_acbc :=_baea ._daad .Get (_eccg );if _acbc !=nil {return _bdgca ,_gg .Wrap (_acbc ,_acff ,"");
};_gbff ,_cdab :=_baea ._eea [_gadg ];if !_cdab {_gbff ,_cdab =_baea ._cbcc [_gadg ];if !_cdab {return _bdgca ,_gg .Errorf (_acff ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gadg );
};};if _acbc =_geacf .EncodeIAID (_baea ._caef ,_gbff );_acbc !=nil {return _bdgca ,_gg .Wrap (_acbc ,_acff ,"");};};if _eafb =_geacf .EncodeOOB (_db .IADS );_eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"");};};_geacf .Final ();_cfgad ,_eafb :=_geacf .WriteTo (_babf );
if _eafb !=nil {return _bdgca ,_gg .Wrap (_eafb ,_acff ,"");};_bdgca +=int (_cfgad );return _bdgca ,nil ;};func (_fcdc *SymbolDictionary )setSymbolsArray ()error {if _fcdc ._gabe ==nil {if _ggdg :=_fcdc .retrieveImportSymbols ();_ggdg !=nil {return _ggdg ;
};};if _fcdc ._edcce ==nil {_fcdc ._edcce =append (_fcdc ._edcce ,_fcdc ._gabe ...);};return nil ;};func (_bffd *Header )writeReferredToSegments (_gdad _e .BinaryWriter )(_fdgf int ,_fbb error ){const _cbfb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_aaadf uint16 ;_bgfb uint32 ;);_fgc :=_bffd .referenceSize ();_gcea :=1;_cgcc :=make ([]byte ,_fgc );for _ ,_ggbg :=range _bffd .RTSNumbers {switch _fgc {case 4:_bgfb =uint32 (_ggbg );_dd .BigEndian .PutUint32 (_cgcc ,_bgfb );_gcea ,_fbb =_gdad .Write (_cgcc );
if _fbb !=nil {return 0,_gg .Wrap (_fbb ,_cbfb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_aaadf =uint16 (_ggbg );_dd .BigEndian .PutUint16 (_cgcc ,_aaadf );_gcea ,_fbb =_gdad .Write (_cgcc );if _fbb !=nil {return 0,_gg .Wrap (_fbb ,_cbfb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _fbb =_gdad .WriteByte (byte (_ggbg ));_fbb !=nil {return 0,_gg .Wrap (_fbb ,_cbfb ,"\u0075\u0069\u006et\u0038");};};_fdgf +=_gcea ;};return _fdgf ,nil ;};func (_cebf *SymbolDictionary )readNumberOfExportedSymbols ()error {_beaf ,_bgac :=_cebf ._bbagd .ReadBits (32);
if _bgac !=nil {return _bgac ;};_cebf .NumberOfExportedSymbols =uint32 (_beaf &_a .MaxUint32 );return nil ;};func (_acdf *TextRegion )decodeRdx ()(int64 ,error ){const _abgg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _acdf .IsHuffmanEncoded {if _acdf .SbHuffRDX ==3{if _acdf ._gfeag ==nil {var (_fbgb int ;
_defb error ;);if _acdf .SbHuffFS ==3{_fbgb ++;};if _acdf .SbHuffDS ==3{_fbgb ++;};if _acdf .SbHuffDT ==3{_fbgb ++;};if _acdf .SbHuffRDWidth ==3{_fbgb ++;};if _acdf .SbHuffRDHeight ==3{_fbgb ++;};_acdf ._gfeag ,_defb =_acdf .getUserTable (_fbgb );if _defb !=nil {return 0,_gg .Wrap (_defb ,_abgg ,"");
};};return _acdf ._gfeag .Decode (_acdf ._ceba );};_bbee ,_cgadf :=_fg .GetStandardTable (14+int (_acdf .SbHuffRDX ));if _cgadf !=nil {return 0,_gg .Wrap (_cgadf ,_abgg ,"");};return _bbee .Decode (_acdf ._ceba );};_adg ,_fefg :=_acdf ._geab .DecodeInt (_acdf ._ddbdg );
if _fefg !=nil {return 0,_gg .Wrap (_fefg ,_abgg ,"");};return int64 (_adg ),nil ;};func (_fegc *TextRegion )getUserTable (_ddaf int )(_fg .Tabler ,error ){const _edda ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _ggce int ;
for _ ,_dcab :=range _fegc .Header .RTSegments {if _dcab .Type ==53{if _ggce ==_ddaf {_gbg ,_geae :=_dcab .GetSegmentData ();if _geae !=nil {return nil ,_geae ;};_gdef ,_ccfc :=_gbg .(*TableSegment );if !_ccfc {_be .Log .Debug (_ad .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dcab .SegmentNumber ));
return nil ,_gg .Error (_edda ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _fg .NewEncodedTable (_gdef );};_ggce ++;};};return nil ,nil ;};var _ templater =&template0 {};func (_cbcf *SymbolDictionary )getUserTable (_edfc int )(_fg .Tabler ,error ){var _bdgd int ;for _ ,_geeb :=range _cbcf .Header .RTSegments {if _geeb .Type ==53{if _bdgd ==_edfc {_cceg ,_bfgf :=_geeb .GetSegmentData ();
if _bfgf !=nil {return nil ,_bfgf ;};_agbbf :=_cceg .(_fg .BasicTabler );return _fg .NewEncodedTable (_agbbf );};_bdgd ++;};};return nil ,nil ;};func (_aggfe *TextRegion )readUseRefinement ()error {if !_aggfe .UseRefinement ||_aggfe .SbrTemplate !=0{return nil ;
};var (_fggf byte ;_gecc error ;);_aggfe .SbrATX =make ([]int8 ,2);_aggfe .SbrATY =make ([]int8 ,2);_fggf ,_gecc =_aggfe ._ceba .ReadByte ();if _gecc !=nil {return _gecc ;};_aggfe .SbrATX [0]=int8 (_fggf );_fggf ,_gecc =_aggfe ._ceba .ReadByte ();if _gecc !=nil {return _gecc ;
};_aggfe .SbrATY [0]=int8 (_fggf );_fggf ,_gecc =_aggfe ._ceba .ReadByte ();if _gecc !=nil {return _gecc ;};_aggfe .SbrATX [1]=int8 (_fggf );_fggf ,_gecc =_aggfe ._ceba .ReadByte ();if _gecc !=nil {return _gecc ;};_aggfe .SbrATY [1]=int8 (_fggf );return nil ;
};func (_deab *SymbolDictionary )setAtPixels ()error {if _deab .IsHuffmanEncoded {return nil ;};_aeggd :=1;if _deab .SdTemplate ==0{_aeggd =4;};if _cdcad :=_deab .readAtPixels (_aeggd );_cdcad !=nil {return _cdcad ;};return nil ;};func (_egdf *TextRegion )decodeSymbolInstances ()error {_ffad ,_bgad :=_egdf .decodeStripT ();
if _bgad !=nil {return _bgad ;};var (_gdggb int64 ;_gfef uint32 ;);for _gfef < _egdf .NumberOfSymbolInstances {_eafea ,_edbc :=_egdf .decodeDT ();if _edbc !=nil {return _edbc ;};_ffad +=_eafea ;var _beef int64 ;_afda :=true ;_egdf ._gfea =0;for {if _afda {_beef ,_edbc =_egdf .decodeDfs ();
if _edbc !=nil {return _edbc ;};_gdggb +=_beef ;_egdf ._gfea =_gdggb ;_afda =false ;}else {_fdcff ,_edfg :=_egdf .decodeIds ();if _ac .Is (_edfg ,_ag .ErrOOB ){break ;};if _edfg !=nil {return _edfg ;};if _gfef >=_egdf .NumberOfSymbolInstances {break ;};
_egdf ._gfea +=_fdcff +int64 (_egdf .SbDsOffset );};_eagf ,_dgbe :=_egdf .decodeCurrentT ();if _dgbe !=nil {return _dgbe ;};_bbfg :=_ffad +_eagf ;_ggcgge ,_dgbe :=_egdf .decodeID ();if _dgbe !=nil {return _dgbe ;};_abgd ,_dgbe :=_egdf .decodeRI ();if _dgbe !=nil {return _dgbe ;
};_gbbae ,_dgbe :=_egdf .decodeIb (_abgd ,_ggcgge );if _dgbe !=nil {return _dgbe ;};if _dgbe =_egdf .blit (_gbbae ,_bbfg );_dgbe !=nil {return _dgbe ;};_gfef ++;};};return nil ;};func (_bgca *PatternDictionary )readTemplate ()error {_aagd ,_faede :=_bgca ._dggb .ReadBits (2);
if _faede !=nil {return _faede ;};_bgca .HDTemplate =byte (_aagd );return nil ;};func (_ae *GenericRefinementRegion )overrideAtTemplate0 (_ffe ,_ebf ,_dbe ,_ffea ,_dfg int )int {if _ae ._fb [0]{_ffe &=0xfff7;if _ae .GrAtY [0]==0&&int (_ae .GrAtX [0])>=-_dfg {_ffe |=(_ffea >>uint (7-(_dfg +int (_ae .GrAtX [0])))&0x1)<<3;
}else {_ffe |=_ae .getPixel (_ae .RegionBitmap ,_ebf +int (_ae .GrAtX [0]),_dbe +int (_ae .GrAtY [0]))<<3;};};if _ae ._fb [1]{_ffe &=0xefff;if _ae .GrAtY [1]==0&&int (_ae .GrAtX [1])>=-_dfg {_ffe |=(_ffea >>uint (7-(_dfg +int (_ae .GrAtX [1])))&0x1)<<12;
}else {_ffe |=_ae .getPixel (_ae .ReferenceBitmap ,_ebf +int (_ae .GrAtX [1]),_dbe +int (_ae .GrAtY [1]));};};return _ffe ;};func (_fage *TableSegment )HtLow ()int32 {return _fage ._bdfc };type RegionSegment struct{_gdac *_e .Reader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cf .CombinationOperator ;};func (_ebb *TextRegion )String ()string {_abdd :=&_c .Builder {};_abdd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_abdd .WriteString (_ebb .RegionInfo .String ()+"\u000a");_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ebb .SbrTemplate ));_abdd .WriteString (_ad .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ebb .SbDsOffset ));
_abdd .WriteString (_ad .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ebb .DefaultPixel ));_abdd .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ebb .CombinationOperator ));
_abdd .WriteString (_ad .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ebb .IsTransposed ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ebb .ReferenceCorner ));
_abdd .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ebb .UseRefinement ));_abdd .WriteString (_ad .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ebb .IsHuffmanEncoded ));
if _ebb .IsHuffmanEncoded {_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ebb .SbHuffRSize ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ebb .SbHuffRDY ));
_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ebb .SbHuffRDX ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ebb .SbHuffRDHeight ));
_abdd .WriteString (_ad .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ebb .SbHuffRDWidth ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ebb .SbHuffDT ));
_abdd .WriteString (_ad .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ebb .SbHuffDS ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ebb .SbHuffFS ));
};_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ebb .SbrATX ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ebb .SbrATY ));
_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ebb .NumberOfSymbolInstances ));_abdd .WriteString (_ad .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ebb .SbrATX ));
return _abdd .String ();};type GenericRegion struct{_dcee *_e .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cda bool ;Bitmap *_cf .Bitmap ;_gdb *_b .Decoder ;_gdg *_b .DecoderStats ;_bc *_ce .Decoder ;};func NewRegionSegment (r *_e .Reader )*RegionSegment {return &RegionSegment {_gdac :r }};func (_ggcd *GenericRefinementRegion )getPixel (_bgd *_cf .Bitmap ,_dcd ,_dcb int )int {if _dcd < 0||_dcd >=_bgd .Width {return 0;
};if _dcb < 0||_dcb >=_bgd .Height {return 0;};if _bgd .GetPixel (_dcd ,_dcb ){return 1;};return 0;};func (_efb *Header )parse (_cddc Documenter ,_adee *_e .Reader ,_cbf int64 ,_cbab OrganizationType )(_egda error ){const _dbfba ="\u0070\u0061\u0072s\u0065";
_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _egda !=nil {_be .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_egda );
}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_egda =_adee .Seek (_cbf ,_f .SeekStart );
if _egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _egda =_efb .readSegmentNumber (_adee );_egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");};if _egda =_efb .readHeaderFlags ();_egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");
};var _acbgg uint64 ;_acbgg ,_egda =_efb .readNumberOfReferredToSegments (_adee );if _egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");};_efb .RTSNumbers ,_egda =_efb .readReferredToSegmentNumbers (_adee ,int (_acbgg ));if _egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");
};_egda =_efb .readSegmentPageAssociation (_cddc ,_adee ,_acbgg ,_efb .RTSNumbers ...);if _egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");};if _efb .Type !=TEndOfFile {if _egda =_efb .readSegmentDataLength (_adee );_egda !=nil {return _gg .Wrap (_egda ,_dbfba ,"");
};};_efb .readDataStartOffset (_adee ,_cbab );_efb .readHeaderLength (_adee ,_cbf );_be .Log .Trace ("\u0025\u0073",_efb );return nil ;};func (_feffa *SymbolDictionary )encodeRefinementATFlags (_abcd _e .BinaryWriter )(_dbca int ,_beeb error ){const _gdge ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_feffa .UseRefinementAggregation ||_feffa .SdrTemplate !=0{return 0,nil ;};for _afef :=0;_afef < 2;_afef ++{if _beeb =_abcd .WriteByte (byte (_feffa .SdrATX [_afef ]));_beeb !=nil {return _dbca ,_gg .Wrapf (_beeb ,_gdge ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_afef );
};_dbca ++;if _beeb =_abcd .WriteByte (byte (_feffa .SdrATY [_afef ]));_beeb !=nil {return _dbca ,_gg .Wrapf (_beeb ,_gdge ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_afef );};_dbca ++;};return _dbca ,nil ;};func (_gdde *SymbolDictionary )setRefinementAtPixels ()error {if !_gdde .UseRefinementAggregation ||_gdde .SdrTemplate !=0{return nil ;
};if _ebgb :=_gdde .readRefinementAtPixels (2);_ebgb !=nil {return _ebgb ;};return nil ;};func (_dfef *SymbolDictionary )decodeThroughTextRegion (_gcdcc ,_gfab ,_efecf uint32 )error {if _dfef ._gcgg ==nil {_dfef ._gcgg =_cbae (_dfef ._bbagd ,nil );_dfef ._gcgg .setContexts (_dfef ._gbd ,_b .NewStats (512,1),_b .NewStats (512,1),_b .NewStats (512,1),_b .NewStats (512,1),_dfef ._bgff ,_b .NewStats (512,1),_b .NewStats (512,1),_b .NewStats (512,1),_b .NewStats (512,1));
};if _ffcd :=_dfef .setSymbolsArray ();_ffcd !=nil {return _ffcd ;};_dfef ._gcgg .setParameters (_dfef ._cbgf ,_dfef .IsHuffmanEncoded ,true ,_gcdcc ,_gfab ,_efecf ,1,_dfef ._aca +_dfef ._bbeb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dfef .SdrTemplate ,_dfef .SdrATX ,_dfef .SdrATY ,_dfef ._edcce ,_dfef ._fgf );
return _dfef .addSymbol (_dfef ._gcgg );};func (_cgb *HalftoneRegion )computeGrayScalePlanes (_fbdf []*_cf .Bitmap ,_dcg int )([][]int ,error ){_gaee :=make ([][]int ,_cgb .HGridHeight );for _bdca :=0;_bdca < len (_gaee );_bdca ++{_gaee [_bdca ]=make ([]int ,_cgb .HGridWidth );
};for _eeba :=0;_eeba < int (_cgb .HGridHeight );_eeba ++{for _fdee :=0;_fdee < int (_cgb .HGridWidth );_fdee +=8{var _aed int ;if _cfea :=int (_cgb .HGridWidth )-_fdee ;_cfea > 8{_aed =8;}else {_aed =_cfea ;};_bbca :=_fbdf [0].GetByteIndex (_fdee ,_eeba );
for _adcf :=0;_adcf < _aed ;_adcf ++{_efdb :=_adcf +_fdee ;_gaee [_eeba ][_efdb ]=0;for _acbg :=0;_acbg < _dcg ;_acbg ++{_eddb ,_faee :=_fbdf [_acbg ].GetByte (_bbca );if _faee !=nil {return nil ,_faee ;};_ageb :=_eddb >>uint (7-_efdb &7);_bfcc :=_ageb &1;
_egd :=1<<uint (_acbg );_gdbf :=int (_bfcc )*_egd ;_gaee [_eeba ][_efdb ]+=_gdbf ;};};};};return _gaee ,nil ;};func (_efdd Type )String ()string {switch _efdd {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fcac *TextRegion )decodeRI ()(int64 ,error ){if !_fcac .UseRefinement {return 0,nil ;
};if _fcac .IsHuffmanEncoded {_bgcg ,_cag :=_fcac ._ceba .ReadBit ();return int64 (_bgcg ),_cag ;};_dgeef ,_cggd :=_fcac ._geab .DecodeInt (_fcac ._ceg );return int64 (_dgeef ),_cggd ;};func (_aa *GenericRefinementRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){var _gaf error ;
_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gaf !=nil {_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gaf );
}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _aa .RegionBitmap !=nil {return _aa .RegionBitmap ,nil ;};_ff :=0;if _aa .ReferenceBitmap ==nil {_aa .ReferenceBitmap ,_gaf =_aa .getGrReference ();if _gaf !=nil {return nil ,_gaf ;};};if _aa ._edc ==nil {_aa ._edc ,_gaf =_b .New (_aa ._gga );
if _gaf !=nil {return nil ,_gaf ;};};if _aa ._df ==nil {_aa ._df =_b .NewStats (8192,1);};_aa .RegionBitmap =_cf .New (int (_aa .RegionInfo .BitmapWidth ),int (_aa .RegionInfo .BitmapHeight ));if _aa .TemplateID ==0{if _gaf =_aa .updateOverride ();_gaf !=nil {return nil ,_gaf ;
};};_fgb :=(_aa .RegionBitmap .Width +7)&-8;var _fgd int ;if _aa .IsTPGROn {_fgd =int (-_aa .ReferenceDY )*_aa .ReferenceBitmap .RowStride ;};_aaa :=_fgd +1;for _caeb :=0;_caeb < _aa .RegionBitmap .Height ;_caeb ++{if _aa .IsTPGROn {_eg ,_aaaa :=_aa .decodeSLTP ();
if _aaaa !=nil {return nil ,_aaaa ;};_ff ^=_eg ;};if _ff ==0{_gaf =_aa .decodeOptimized (_caeb ,_aa .RegionBitmap .Width ,_aa .RegionBitmap .RowStride ,_aa .ReferenceBitmap .RowStride ,_fgb ,_fgd ,_aaa );if _gaf !=nil {return nil ,_gaf ;};}else {_gaf =_aa .decodeTypicalPredictedLine (_caeb ,_aa .RegionBitmap .Width ,_aa .RegionBitmap .RowStride ,_aa .ReferenceBitmap .RowStride ,_fgb ,_fgd );
if _gaf !=nil {return nil ,_gaf ;};};};return _aa .RegionBitmap ,nil ;};func (_ggge *Header )subInputReader ()(*_e .Reader ,error ){_fbaa :=int (_ggge .SegmentDataLength );if _ggge .SegmentDataLength ==_a .MaxInt32 {_fbaa =-1;};return _ggge .Reader .NewPartialReader (int (_ggge .SegmentDataStartOffset ),_fbaa ,false );
};func (_agad *Header )CleanSegmentData (){if _agad .SegmentData !=nil {_agad .SegmentData =nil ;};};func (_adbg *PatternDictionary )Init (h *Header ,r *_e .Reader )error {_adbg ._dggb =r ;return _adbg .parseHeader ();};func (_ffgb *HalftoneRegion )computeX (_ecd ,_aaaae int )int {return _ffgb .shiftAndFill (int (_ffgb .HGridX )+_ecd *int (_ffgb .HRegionY )+_aaaae *int (_ffgb .HRegionX ));
};func (_cbc *GenericRegion )GetRegionBitmap ()(_egcc *_cf .Bitmap ,_bacb error ){if _cbc .Bitmap !=nil {return _cbc .Bitmap ,nil ;};if _cbc .IsMMREncoded {if _cbc ._bc ==nil {_cbc ._bc ,_bacb =_ce .New (_cbc ._dcee ,int (_cbc .RegionSegment .BitmapWidth ),int (_cbc .RegionSegment .BitmapHeight ),_cbc .DataOffset ,_cbc .DataLength );
if _bacb !=nil {return nil ,_bacb ;};};_cbc .Bitmap ,_bacb =_cbc ._bc .UncompressMMR ();return _cbc .Bitmap ,_bacb ;};if _bacb =_cbc .updateOverrideFlags ();_bacb !=nil {return nil ,_bacb ;};var _cga int ;if _cbc ._gdb ==nil {_cbc ._gdb ,_bacb =_b .New (_cbc ._dcee );
if _bacb !=nil {return nil ,_bacb ;};};if _cbc ._gdg ==nil {_cbc ._gdg =_b .NewStats (65536,1);};_cbc .Bitmap =_cf .New (int (_cbc .RegionSegment .BitmapWidth ),int (_cbc .RegionSegment .BitmapHeight ));_dag :=int (uint32 (_cbc .Bitmap .Width +7)&(^uint32 (7)));
for _cfa :=0;_cfa < _cbc .Bitmap .Height ;_cfa ++{if _cbc .IsTPGDon {var _bgce int ;_bgce ,_bacb =_cbc .decodeSLTP ();if _bacb !=nil {return nil ,_bacb ;};_cga ^=_bgce ;};if _cga ==1{if _cfa > 0{if _bacb =_cbc .copyLineAbove (_cfa );_bacb !=nil {return nil ,_bacb ;
};};}else {if _bacb =_cbc .decodeLine (_cfa ,_cbc .Bitmap .Width ,_dag );_bacb !=nil {return nil ,_bacb ;};};};return _cbc .Bitmap ,nil ;};func (_cbd *Header )Encode (w _e .BinaryWriter )(_ccd int ,_aadg error ){const _egaf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _ecbb _e .BinaryWriter ;_be .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _aadg !=nil {_be .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_aadg );
}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cbd );_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _cbd .SegmentData !=nil {_ccbb ,_ebg :=_cbd .SegmentData .(SegmentEncoder );if !_ebg {return 0,_gg .Errorf (_egaf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cbd .SegmentData );
};_ecbb =_e .BufferedMSB ();_ccd ,_aadg =_ccbb .Encode (_ecbb );if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");};_cbd .SegmentDataLength =uint64 (_ccd );};if _cbd .pageSize ()==4{_cbd .PageAssociationFieldSize =true ;};var _afaf int ;_afaf ,_aadg =_cbd .writeSegmentNumber (w );
if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");};_ccd +=_afaf ;if _aadg =_cbd .writeFlags (w );_aadg !=nil {return _ccd ,_gg .Wrap (_aadg ,_egaf ,"");};_ccd ++;_afaf ,_aadg =_cbd .writeReferredToCount (w );if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");
};_ccd +=_afaf ;_afaf ,_aadg =_cbd .writeReferredToSegments (w );if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");};_ccd +=_afaf ;_afaf ,_aadg =_cbd .writeSegmentPageAssociation (w );if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");};_ccd +=_afaf ;
_afaf ,_aadg =_cbd .writeSegmentDataLength (w );if _aadg !=nil {return 0,_gg .Wrap (_aadg ,_egaf ,"");};_ccd +=_afaf ;_cbd .HeaderLength =int64 (_ccd )-int64 (_cbd .SegmentDataLength );if _ecbb !=nil {if _ ,_aadg =w .Write (_ecbb .Data ());_aadg !=nil {return _ccd ,_gg .Wrap (_aadg ,_egaf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ccd ,nil ;};func (_bbgf *TextRegion )decodeRdh ()(int64 ,error ){const _ffbbf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bbgf .IsHuffmanEncoded {if _bbgf .SbHuffRDHeight ==3{if _bbgf ._ecba ==nil {var (_cgca int ;_cbabc error ;);if _bbgf .SbHuffFS ==3{_cgca ++;
};if _bbgf .SbHuffDS ==3{_cgca ++;};if _bbgf .SbHuffDT ==3{_cgca ++;};if _bbgf .SbHuffRDWidth ==3{_cgca ++;};_bbgf ._ecba ,_cbabc =_bbgf .getUserTable (_cgca );if _cbabc !=nil {return 0,_gg .Wrap (_cbabc ,_ffbbf ,"");};};return _bbgf ._ecba .Decode (_bbgf ._ceba );
};_ebadb ,_ccca :=_fg .GetStandardTable (14+int (_bbgf .SbHuffRDHeight ));if _ccca !=nil {return 0,_gg .Wrap (_ccca ,_ffbbf ,"");};return _ebadb .Decode (_bbgf ._ceba );};_bbgcbc ,_becae :=_bbgf ._geab .DecodeInt (_bbgf ._ggbf );if _becae !=nil {return 0,_gg .Wrap (_becae ,_ffbbf ,"");
};return int64 (_bbgcbc ),nil ;};func (_cef *GenericRegion )setParametersMMR (_fdbe bool ,_dgd ,_gcga int64 ,_aeed ,_bgaa uint32 ,_fegf byte ,_baca ,_dbba bool ,_bea ,_bdeg []int8 ){_cef .DataOffset =_dgd ;_cef .DataLength =_gcga ;_cef .RegionSegment =&RegionSegment {};
_cef .RegionSegment .BitmapHeight =_aeed ;_cef .RegionSegment .BitmapWidth =_bgaa ;_cef .GBTemplate =_fegf ;_cef .IsMMREncoded =_fdbe ;_cef .IsTPGDon =_baca ;_cef .GBAtX =_bea ;_cef .GBAtY =_bdeg ;};type TableSegment struct{_ageg *_e .Reader ;_gbbe int32 ;
_cedad int32 ;_bcdg int32 ;_bdfc int32 ;_fbeb int32 ;};func (_gdfdd *SymbolDictionary )encodeNumSyms (_egeb _e .BinaryWriter )(_egga int ,_gaeb error ){const _gbdg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_dfad :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_dfad ,_gdfdd .NumberOfExportedSymbols );if _egga ,_gaeb =_egeb .Write (_dfad );_gaeb !=nil {return _egga ,_gg .Wrap (_gaeb ,_gbdg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_dd .BigEndian .PutUint32 (_dfad ,_gdfdd .NumberOfNewSymbols );
_egdg ,_gaeb :=_egeb .Write (_dfad );if _gaeb !=nil {return _egga ,_gg .Wrap (_gaeb ,_gbdg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _egga +_egdg ,nil ;};