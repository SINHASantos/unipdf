//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_a "encoding/binary";_ef "errors";_bf "fmt";_fe "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/bitwise";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_efa "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bed "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_be "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_f "image";_ea "io";_b "math";_fd "strings";_eb "time";);func (_gcge *SymbolDictionary )encodeSymbols (_bbfb _c .BinaryWriter )(_geef int ,_dcac error ){const _gbee ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_fcab :=_ge .New ();_fcab .Init ();_defb ,_dcac :=_gcge ._bbga .SelectByIndexes (_gcge ._bdgd );if _dcac !=nil {return 0,_be .Wrap (_dcac ,_gbee ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bgdb :=map[*_d .Bitmap ]int {};for _ecea ,_efaae :=range _defb .Values {_bgdb [_efaae ]=_ecea ;
};_defb .SortByHeight ();var _cgd ,_egca int ;_cdcc ,_dcac :=_defb .GroupByHeight ();if _dcac !=nil {return 0,_be .Wrap (_dcac ,_gbee ,"");};for _ ,_abcb :=range _cdcc .Values {_eceg :=_abcb .Values [0].Height ;_eabb :=_eceg -_cgd ;if _dcac =_fcab .EncodeInteger (_ge .IADH ,_eabb );
_dcac !=nil {return 0,_be .Wrapf (_dcac ,_gbee ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_eabb );};_cgd =_eceg ;_dbdc ,_gffc :=_abcb .GroupByWidth ();if _gffc !=nil {return 0,_be .Wrapf (_gffc ,_gbee ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_eceg );
};var _fcecd int ;for _ ,_gfgd :=range _dbdc .Values {for _ ,_fdfa :=range _gfgd .Values {_ccea :=_fdfa .Width ;_caga :=_ccea -_fcecd ;if _gffc =_fcab .EncodeInteger (_ge .IADW ,_caga );_gffc !=nil {return 0,_be .Wrapf (_gffc ,_gbee ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_caga );
};_fcecd +=_caga ;if _gffc =_fcab .EncodeBitmap (_fdfa ,false );_gffc !=nil {return 0,_be .Wrapf (_gffc ,_gbee ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_eceg ,_ccea );};_bdae :=_bgdb [_fdfa ];_gcge ._fdbc [_bdae ]=_egca ;
_egca ++;};};if _gffc =_fcab .EncodeOOB (_ge .IADW );_gffc !=nil {return 0,_be .Wrap (_gffc ,_gbee ,"\u0049\u0041\u0044\u0057");};};if _dcac =_fcab .EncodeInteger (_ge .IAEX ,0);_dcac !=nil {return 0,_be .Wrap (_dcac ,_gbee ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _dcac =_fcab .EncodeInteger (_ge .IAEX ,len (_gcge ._bdgd ));_dcac !=nil {return 0,_be .Wrap (_dcac ,_gbee ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fcab .Final ();_dabg ,_dcac :=_fcab .WriteTo (_bbfb );
if _dcac !=nil {return 0,_be .Wrap (_dcac ,_gbee ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_dabg ),nil ;};func (_bdbc *TextRegion )setParameters (_bffb *_efa .Decoder ,_ccfbf ,_ccba bool ,_agdb ,_bdbb uint32 ,_ceecf uint32 ,_dddf int8 ,_acecd uint32 ,_dfdf int8 ,_bedd _d .CombinationOperator ,_bebbd int8 ,_ffafc int16 ,_ffgc ,_fgafa ,_gege ,_eade ,_ggff ,_gbcef ,_fedgc ,_faff ,_dafc ,_bfee int8 ,_daed ,_agbb []int8 ,_deeac []*_d .Bitmap ,_gdgc int8 ){_bdbc ._dgfa =_bffb ;
_bdbc .IsHuffmanEncoded =_ccfbf ;_bdbc .UseRefinement =_ccba ;_bdbc .RegionInfo .BitmapWidth =_agdb ;_bdbc .RegionInfo .BitmapHeight =_bdbb ;_bdbc .NumberOfSymbolInstances =_ceecf ;_bdbc .SbStrips =_dddf ;_bdbc .NumberOfSymbols =_acecd ;_bdbc .DefaultPixel =_dfdf ;
_bdbc .CombinationOperator =_bedd ;_bdbc .IsTransposed =_bebbd ;_bdbc .ReferenceCorner =_ffafc ;_bdbc .SbDsOffset =_ffgc ;_bdbc .SbHuffFS =_fgafa ;_bdbc .SbHuffDS =_gege ;_bdbc .SbHuffDT =_eade ;_bdbc .SbHuffRDWidth =_ggff ;_bdbc .SbHuffRDHeight =_gbcef ;
_bdbc .SbHuffRSize =_dafc ;_bdbc .SbHuffRDX =_fedgc ;_bdbc .SbHuffRDY =_faff ;_bdbc .SbrTemplate =_bfee ;_bdbc .SbrATX =_daed ;_bdbc .SbrATY =_agbb ;_bdbc .Symbols =_deeac ;_bdbc ._ddbf =_gdgc ;};func (_aca *SymbolDictionary )setExportedSymbols (_ffcc []int ){for _dgea :=uint32 (0);
_dgea < _aca ._eacb +_aca .NumberOfNewSymbols ;_dgea ++{if _ffcc [_dgea ]==1{var _bdfcg *_d .Bitmap ;if _dgea < _aca ._eacb {_bdfcg =_aca ._cbf [_dgea ];}else {_bdfcg =_aca ._fbfe [_dgea -_aca ._eacb ];};_fe .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bdfcg );
_aca ._ffea =append (_aca ._ffea ,_bdfcg );};};};type templater interface{form (_dac ,_gaeb ,_ggb ,_bgae ,_cfef int16 )int16 ;setIndex (_aaf *_efa .DecoderStats );};func (_aegd *SymbolDictionary )readNumberOfExportedSymbols ()error {_cccd ,_dfff :=_aegd ._fage .ReadBits (32);
if _dfff !=nil {return _dfff ;};_aegd .NumberOfExportedSymbols =uint32 (_cccd &_b .MaxUint32 );return nil ;};type GenericRegion struct{_cefb *_c .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_aef bool ;Bitmap *_d .Bitmap ;_bde *_efa .Decoder ;_dacc *_efa .DecoderStats ;_ecgg *_ca .Decoder ;};func (_ccgg *SymbolDictionary )checkInput ()error {if _ccgg .SdHuffDecodeHeightSelection ==2{_fe .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ccgg .SdHuffDecodeHeightSelection );
};if _ccgg .SdHuffDecodeWidthSelection ==2{_fe .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ccgg .SdHuffDecodeWidthSelection );
};if _ccgg .IsHuffmanEncoded {if _ccgg .SdTemplate !=0{_fe .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ccgg .SdTemplate );
};if !_ccgg .UseRefinementAggregation {if !_ccgg .UseRefinementAggregation {if _ccgg ._gdc {_fe .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ccgg ._gdc =false ;};if _ccgg ._fcfb {_fe .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ccgg ._fcfb =false ;};};};}else {if _ccgg .SdHuffBMSizeSelection !=0{_fe .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccgg .SdHuffBMSizeSelection =0;};if _ccgg .SdHuffDecodeWidthSelection !=0{_fe .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccgg .SdHuffDecodeWidthSelection =0;};if _ccgg .SdHuffDecodeHeightSelection !=0{_fe .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccgg .SdHuffDecodeHeightSelection =0;};};if !_ccgg .UseRefinementAggregation {if _ccgg .SdrTemplate !=0{_fe .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccgg .SdrTemplate );
_ccgg .SdrTemplate =0;};};if !_ccgg .IsHuffmanEncoded ||!_ccgg .UseRefinementAggregation {if _ccgg .SdHuffAggInstanceSelection {_fe .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccgg .SdHuffAggInstanceSelection );
};};return nil ;};func (_dbdcg *TextRegion )decodeRdh ()(int64 ,error ){const _affc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _dbdcg .IsHuffmanEncoded {if _dbdcg .SbHuffRDHeight ==3{if _dbdcg ._eeeg ==nil {var (_bdcf int ;_addb error ;);if _dbdcg .SbHuffFS ==3{_bdcf ++;
};if _dbdcg .SbHuffDS ==3{_bdcf ++;};if _dbdcg .SbHuffDT ==3{_bdcf ++;};if _dbdcg .SbHuffRDWidth ==3{_bdcf ++;};_dbdcg ._eeeg ,_addb =_dbdcg .getUserTable (_bdcf );if _addb !=nil {return 0,_be .Wrap (_addb ,_affc ,"");};};return _dbdcg ._eeeg .Decode (_dbdcg ._deef );
};_gadg ,_dgdb :=_bed .GetStandardTable (14+int (_dbdcg .SbHuffRDHeight ));if _dgdb !=nil {return 0,_be .Wrap (_dgdb ,_affc ,"");};return _gadg .Decode (_dbdcg ._deef );};_afag ,_ffcd :=_dbdcg ._dgfa .DecodeInt (_dbdcg ._befag );if _ffcd !=nil {return 0,_be .Wrap (_ffcd ,_affc ,"");
};return int64 (_afag ),nil ;};type template0 struct{};func (_eec *SymbolDictionary )encodeATFlags (_fffd _c .BinaryWriter )(_aaea int ,_ebaac error ){const _ccdcd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _eec .IsHuffmanEncoded ||_eec .SdTemplate !=0{return 0,nil ;
};_fbbcg :=4;if _eec .SdTemplate !=0{_fbbcg =1;};for _ageff :=0;_ageff < _fbbcg ;_ageff ++{if _ebaac =_fffd .WriteByte (byte (_eec .SdATX [_ageff ]));_ebaac !=nil {return _aaea ,_be .Wrapf (_ebaac ,_ccdcd ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ageff );
};_aaea ++;if _ebaac =_fffd .WriteByte (byte (_eec .SdATY [_ageff ]));_ebaac !=nil {return _aaea ,_be .Wrapf (_ebaac ,_ccdcd ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ageff );};_aaea ++;};return _aaea ,nil ;};func (_dbbfg *RegionSegment )parseHeader ()error {const _gfgf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_fe .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_fe .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_fgb ,_dcee :=_dbbfg ._edab .ReadBits (32);if _dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"\u0077\u0069\u0064t\u0068");};_dbbfg .BitmapWidth =uint32 (_fgb &_b .MaxUint32 );_fgb ,_dcee =_dbbfg ._edab .ReadBits (32);if _dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dbbfg .BitmapHeight =uint32 (_fgb &_b .MaxUint32 );_fgb ,_dcee =_dbbfg ._edab .ReadBits (32);if _dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dbbfg .XLocation =uint32 (_fgb &_b .MaxUint32 );
_fgb ,_dcee =_dbbfg ._edab .ReadBits (32);if _dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dbbfg .YLocation =uint32 (_fgb &_b .MaxUint32 );if _ ,_dcee =_dbbfg ._edab .ReadBits (5);_dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _dcee =_dbbfg .readCombinationOperator ();_dcee !=nil {return _be .Wrap (_dcee ,_gfgf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_ebdeg *SymbolDictionary )decodeNewSymbols (_ecde ,_abde uint32 ,_fgda *_d .Bitmap ,_feag ,_begaa int32 )error {if _ebdeg ._bgdf ==nil {_ebdeg ._bgdf =_bfaa (_ebdeg ._fage ,nil );
if _ebdeg ._fbfd ==nil {var _fagd error ;_ebdeg ._fbfd ,_fagd =_efa .New (_ebdeg ._fage );if _fagd !=nil {return _fagd ;};};if _ebdeg ._dddc ==nil {_ebdeg ._dddc =_efa .NewStats (65536,1);};};_ebdeg ._bgdf .setParameters (_ebdeg ._dddc ,_ebdeg ._fbfd ,_ebdeg .SdrTemplate ,_ecde ,_abde ,_fgda ,_feag ,_begaa ,false ,_ebdeg .SdrATX ,_ebdeg .SdrATY );
return _ebdeg .addSymbol (_ebdeg ._bgdf );};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;
Reader *_c .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_dbbg *SymbolDictionary )getUserTable (_cgdc int )(_bed .Tabler ,error ){var _geac int ;for _ ,_aebac :=range _dbbg .Header .RTSegments {if _aebac .Type ==53{if _geac ==_cgdc {_cdeed ,_aaac :=_aebac .GetSegmentData ();
if _aaac !=nil {return nil ,_aaac ;};_gacc :=_cdeed .(_bed .BasicTabler );return _bed .NewEncodedTable (_gacc );};_geac ++;};};return nil ,nil ;};func (_gfc *GenericRegion )overrideAtTemplate2 (_dge ,_face ,_ddeb ,_aadd ,_bfabe int )int {_dge &=0x3FB;if _gfc .GBAtY [0]==0&&_gfc .GBAtX [0]>=-int8 (_bfabe ){_dge |=(_aadd >>uint (7-(int8 (_bfabe )+_gfc .GBAtX [0]))&0x1)<<2;
}else {_dge |=int (_gfc .getPixel (_face +int (_gfc .GBAtX [0]),_ddeb +int (_gfc .GBAtY [0])))<<2;};return _dge ;};func (_edee *HalftoneRegion )parseHeader ()error {if _bada :=_edee .RegionSegment .parseHeader ();_bada !=nil {return _bada ;};_ecgge ,_dadg :=_edee ._fcbff .ReadBit ();
if _dadg !=nil {return _dadg ;};_edee .HDefaultPixel =int8 (_ecgge );_ffdb ,_dadg :=_edee ._fcbff .ReadBits (3);if _dadg !=nil {return _dadg ;};_edee .CombinationOperator =_d .CombinationOperator (_ffdb &0xf);_ecgge ,_dadg =_edee ._fcbff .ReadBit ();if _dadg !=nil {return _dadg ;
};if _ecgge ==1{_edee .HSkipEnabled =true ;};_ffdb ,_dadg =_edee ._fcbff .ReadBits (2);if _dadg !=nil {return _dadg ;};_edee .HTemplate =byte (_ffdb &0xf);_ecgge ,_dadg =_edee ._fcbff .ReadBit ();if _dadg !=nil {return _dadg ;};if _ecgge ==1{_edee .IsMMREncoded =true ;
};_ffdb ,_dadg =_edee ._fcbff .ReadBits (32);if _dadg !=nil {return _dadg ;};_edee .HGridWidth =uint32 (_ffdb &_b .MaxUint32 );_ffdb ,_dadg =_edee ._fcbff .ReadBits (32);if _dadg !=nil {return _dadg ;};_edee .HGridHeight =uint32 (_ffdb &_b .MaxUint32 );
_ffdb ,_dadg =_edee ._fcbff .ReadBits (32);if _dadg !=nil {return _dadg ;};_edee .HGridX =int32 (_ffdb &_b .MaxInt32 );_ffdb ,_dadg =_edee ._fcbff .ReadBits (32);if _dadg !=nil {return _dadg ;};_edee .HGridY =int32 (_ffdb &_b .MaxInt32 );_ffdb ,_dadg =_edee ._fcbff .ReadBits (16);
if _dadg !=nil {return _dadg ;};_edee .HRegionX =uint16 (_ffdb &_b .MaxUint16 );_ffdb ,_dadg =_edee ._fcbff .ReadBits (16);if _dadg !=nil {return _dadg ;};_edee .HRegionY =uint16 (_ffdb &_b .MaxUint16 );if _dadg =_edee .computeSegmentDataStructure ();_dadg !=nil {return _dadg ;
};return _edee .checkInput ();};type SymbolDictionary struct{_fage *_c .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_gdc bool ;_fcfb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_eacb uint32 ;_cbf []*_d .Bitmap ;_efff uint32 ;_fbfe []*_d .Bitmap ;
_efaa _bed .Tabler ;_egdcb _bed .Tabler ;_edgg _bed .Tabler ;_gfeb _bed .Tabler ;_ffea []*_d .Bitmap ;_egbg []*_d .Bitmap ;_fbfd *_efa .Decoder ;_abaa *TextRegion ;_ebeb *GenericRegion ;_bgdf *GenericRefinementRegion ;_dddc *_efa .DecoderStats ;_bdgg *_efa .DecoderStats ;
_cbge *_efa .DecoderStats ;_cfffa *_efa .DecoderStats ;_accd *_efa .DecoderStats ;_aada *_efa .DecoderStats ;_cebe *_efa .DecoderStats ;_adga *_efa .DecoderStats ;_dcdb *_efa .DecoderStats ;_gda int8 ;_bbga *_d .Bitmaps ;_bdgd []int ;_fdbc map[int ]int ;
_gdcb bool ;};func (_debde *SymbolDictionary )Init (h *Header ,r *_c .Reader )error {_debde .Header =h ;_debde ._fage =r ;return _debde .parseHeader ();};func (_cfb *HalftoneRegion )GetPatterns ()([]*_d .Bitmap ,error ){var (_gcfb []*_d .Bitmap ;_cfbb error ;
);for _ ,_bcga :=range _cfb ._gbdg .RTSegments {var _gffb Segmenter ;_gffb ,_cfbb =_bcga .GetSegmentData ();if _cfbb !=nil {_fe .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cfbb );
return nil ,_cfbb ;};_eba ,_bbaa :=_gffb .(*PatternDictionary );if !_bbaa {_cfbb =_bf .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gffb );
return nil ,_cfbb ;};var _bdg []*_d .Bitmap ;_bdg ,_cfbb =_eba .GetDictionary ();if _cfbb !=nil {_fe .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cfbb );
return nil ,_cfbb ;};_gcfb =append (_gcfb ,_bdg ...);};return _gcfb ,nil ;};func (_eebg *GenericRegion )setParameters (_gdd bool ,_dddg ,_gaec int64 ,_bebb ,_accc uint32 ){_eebg .IsMMREncoded =_gdd ;_eebg .DataOffset =_dddg ;_eebg .DataLength =_gaec ;_eebg .RegionSegment .BitmapHeight =_bebb ;
_eebg .RegionSegment .BitmapWidth =_accc ;_eebg ._ecgg =nil ;_eebg .Bitmap =nil ;};func (_cebf *Header )readHeaderFlags ()error {const _egcg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_gbff ,_cbdg :=_cebf .Reader .ReadBit ();
if _cbdg !=nil {return _be .Wrap (_cbdg ,_egcg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _gbff !=0{_cebf .RetainFlag =true ;};_gbff ,_cbdg =_cebf .Reader .ReadBit ();if _cbdg !=nil {return _be .Wrap (_cbdg ,_egcg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _gbff !=0{_cebf .PageAssociationFieldSize =true ;};_ffga ,_cbdg :=_cebf .Reader .ReadBits (6);if _cbdg !=nil {return _be .Wrap (_cbdg ,_egcg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cebf .Type =Type (int (_ffga ));
return nil ;};func (_egc *GenericRegion )decodeTemplate1 (_ebcf ,_ffca ,_gbce int ,_fea ,_cgga int )(_abe error ){const _eedc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_abc ,_gad int ;_bdba ,_deed int ;_ecc byte ;
_faf ,_cga int ;);if _ebcf >=1{_ecc ,_abe =_egc .Bitmap .GetByte (_cgga );if _abe !=nil {return _be .Wrap (_abe ,_eedc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdba =int (_ecc );};if _ebcf >=2{_ecc ,_abe =_egc .Bitmap .GetByte (_cgga -_egc .Bitmap .RowStride );
if _abe !=nil {return _be .Wrap (_abe ,_eedc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_deed =int (_ecc )<<5;};_abc =((_bdba >>1)&0x1f8)|((_deed >>1)&0x1e00);for _adgf :=0;_adgf < _gbce ;_adgf =_faf {var (_agea byte ;_bgb int ;);_faf =_adgf +8;
if _aba :=_ffca -_adgf ;_aba > 8{_bgb =8;}else {_bgb =_aba ;};if _ebcf > 0{_bdba <<=8;if _faf < _ffca {_ecc ,_abe =_egc .Bitmap .GetByte (_cgga +1);if _abe !=nil {return _be .Wrap (_abe ,_eedc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bdba |=int (_ecc );
};};if _ebcf > 1{_deed <<=8;if _faf < _ffca {_ecc ,_abe =_egc .Bitmap .GetByte (_cgga -_egc .Bitmap .RowStride +1);if _abe !=nil {return _be .Wrap (_abe ,_eedc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_deed |=int (_ecc )<<5;};};for _fdg :=0;
_fdg < _bgb ;_fdg ++{if _egc ._aef {_gad =_egc .overrideAtTemplate1 (_abc ,_adgf +_fdg ,_ebcf ,int (_agea ),_fdg );_egc ._dacc .SetIndex (int32 (_gad ));}else {_egc ._dacc .SetIndex (int32 (_abc ));};_cga ,_abe =_egc ._bde .DecodeBit (_egc ._dacc );if _abe !=nil {return _be .Wrap (_abe ,_eedc ,"");
};_agea |=byte (_cga )<<uint (7-_fdg );_bcb :=uint (8-_fdg );_abc =((_abc &0xefb)<<1)|_cga |((_bdba >>_bcb )&0x8)|((_deed >>_bcb )&0x200);};if _dgc :=_egc .Bitmap .SetByte (_fea ,_agea );_dgc !=nil {return _be .Wrap (_dgc ,_eedc ,"");};_fea ++;_cgga ++;
};return nil ;};func NewHeader (d Documenter ,r *_c .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cad :=&Header {Reader :r };if _aedg :=_cad .parse (d ,r ,offset ,organizationType );_aedg !=nil {return nil ,_be .Wrap (_aedg ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _cad ,nil ;};func (_ae *EndOfStripe )Init (h *Header ,r *_c .Reader )error {_ae ._ac =r ;return _ae .parseHeader ()};func (_cffe *GenericRegion )decodeTemplate2 (_afba ,_bac ,_gcdf int ,_bfb ,_cabc int )(_dcf error ){const _afbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_agec ,_efce int ;_agf ,_eaee int ;_aecd byte ;_aaca ,_cdg int ;);if _afba >=1{_aecd ,_dcf =_cffe .Bitmap .GetByte (_cabc );if _dcf !=nil {return _be .Wrap (_dcf ,_afbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_agf =int (_aecd );};if _afba >=2{_aecd ,_dcf =_cffe .Bitmap .GetByte (_cabc -_cffe .Bitmap .RowStride );if _dcf !=nil {return _be .Wrap (_dcf ,_afbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_eaee =int (_aecd )<<4;
};_agec =(_agf >>3&0x7c)|(_eaee >>3&0x380);for _bcdb :=0;_bcdb < _gcdf ;_bcdb =_aaca {var (_eeb byte ;_bdc int ;);_aaca =_bcdb +8;if _bff :=_bac -_bcdb ;_bff > 8{_bdc =8;}else {_bdc =_bff ;};if _afba > 0{_agf <<=8;if _aaca < _bac {_aecd ,_dcf =_cffe .Bitmap .GetByte (_cabc +1);
if _dcf !=nil {return _be .Wrap (_dcf ,_afbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_agf |=int (_aecd );};};if _afba > 1{_eaee <<=8;if _aaca < _bac {_aecd ,_dcf =_cffe .Bitmap .GetByte (_cabc -_cffe .Bitmap .RowStride +1);
if _dcf !=nil {return _be .Wrap (_dcf ,_afbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_eaee |=int (_aecd )<<4;};};for _agff :=0;_agff < _bdc ;_agff ++{_ffff :=uint (10-_agff );if _cffe ._aef {_efce =_cffe .overrideAtTemplate2 (_agec ,_bcdb +_agff ,_afba ,int (_eeb ),_agff );
_cffe ._dacc .SetIndex (int32 (_efce ));}else {_cffe ._dacc .SetIndex (int32 (_agec ));};_cdg ,_dcf =_cffe ._bde .DecodeBit (_cffe ._dacc );if _dcf !=nil {return _be .Wrap (_dcf ,_afbf ,"");};_eeb |=byte (_cdg <<uint (7-_agff ));_agec =((_agec &0x1bd)<<1)|_cdg |((_agf >>_ffff )&0x4)|((_eaee >>_ffff )&0x80);
};if _abee :=_cffe .Bitmap .SetByte (_bfb ,_eeb );_abee !=nil {return _be .Wrap (_abee ,_afbf ,"");};_bfb ++;_cabc ++;};return nil ;};func (_fece *Header )Encode (w _c .BinaryWriter )(_cede int ,_cfba error ){const _ebffd ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _afda _c .BinaryWriter ;_fe .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cfba !=nil {_fe .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_cfba );
}else {_fe .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fece );_fe .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _fece .SegmentData !=nil {_eaae ,_cbca :=_fece .SegmentData .(SegmentEncoder );if !_cbca {return 0,_be .Errorf (_ebffd ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fece .SegmentData );
};_afda =_c .BufferedMSB ();_cede ,_cfba =_eaae .Encode (_afda );if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");};_fece .SegmentDataLength =uint64 (_cede );};if _fece .pageSize ()==4{_fece .PageAssociationFieldSize =true ;};var _abdc int ;_abdc ,_cfba =_fece .writeSegmentNumber (w );
if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");};_cede +=_abdc ;if _cfba =_fece .writeFlags (w );_cfba !=nil {return _cede ,_be .Wrap (_cfba ,_ebffd ,"");};_cede ++;_abdc ,_cfba =_fece .writeReferredToCount (w );if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");
};_cede +=_abdc ;_abdc ,_cfba =_fece .writeReferredToSegments (w );if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");};_cede +=_abdc ;_abdc ,_cfba =_fece .writeSegmentPageAssociation (w );if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");};_cede +=_abdc ;
_abdc ,_cfba =_fece .writeSegmentDataLength (w );if _cfba !=nil {return 0,_be .Wrap (_cfba ,_ebffd ,"");};_cede +=_abdc ;_fece .HeaderLength =int64 (_cede )-int64 (_fece .SegmentDataLength );if _afda !=nil {if _ ,_cfba =w .Write (_afda .Data ());_cfba !=nil {return _cede ,_be .Wrap (_cfba ,_ebffd ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _cede ,nil ;};func (_efdd *SymbolDictionary )setAtPixels ()error {if _efdd .IsHuffmanEncoded {return nil ;};_ggcg :=1;if _efdd .SdTemplate ==0{_ggcg =4;};if _cecea :=_efdd .readAtPixels (_ggcg );_cecea !=nil {return _cecea ;};return nil ;};func (_dded *TextRegion )getSymbols ()error {if _dded .Header .RTSegments !=nil {return _dded .initSymbols ();
};return nil ;};func (_fefc *HalftoneRegion )checkInput ()error {if _fefc .IsMMREncoded {if _fefc .HTemplate !=0{_fe .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_fefc .HTemplate );
};if _fefc .HSkipEnabled {_fe .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_fefc .HSkipEnabled );
};};return nil ;};func (_gcfg *SymbolDictionary )setRetainedCodingContexts (_fega *SymbolDictionary ){_gcfg ._fbfd =_fega ._fbfd ;_gcfg .IsHuffmanEncoded =_fega .IsHuffmanEncoded ;_gcfg .UseRefinementAggregation =_fega .UseRefinementAggregation ;_gcfg .SdTemplate =_fega .SdTemplate ;
_gcfg .SdrTemplate =_fega .SdrTemplate ;_gcfg .SdATX =_fega .SdATX ;_gcfg .SdATY =_fega .SdATY ;_gcfg .SdrATX =_fega .SdrATX ;_gcfg .SdrATY =_fega .SdrATY ;_gcfg ._dddc =_fega ._dddc ;};func (_acec *TextRegion )Init (header *Header ,r *_c .Reader )error {_acec .Header =header ;
_acec ._deef =r ;_acec .RegionInfo =NewRegionSegment (_acec ._deef );return _acec .parseHeader ();};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;
TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_ebefa *TableSegment )StreamReader ()*_c .Reader {return _ebefa ._ggef };func (_eede *PatternDictionary )Init (h *Header ,r *_c .Reader )error {_eede ._fbgg =r ;return _eede .parseHeader ();};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_fcbe *Header )writeSegmentPageAssociation (_gaebg _c .BinaryWriter )(_fdbe int ,_aeff error ){const _bffg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _fcbe .pageSize ()!=4{if _aeff =_gaebg .WriteByte (byte (_fcbe .PageAssociation ));_aeff !=nil {return 0,_be .Wrap (_aeff ,_bffg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_bcdc :=make ([]byte ,4);
_a .BigEndian .PutUint32 (_bcdc ,uint32 (_fcbe .PageAssociation ));if _fdbe ,_aeff =_gaebg .Write (_bcdc );_aeff !=nil {return 0,_be .Wrap (_aeff ,_bffg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fdbe ,nil ;
};func (_fccg *GenericRegion )getPixel (_ebg ,_fbfg int )int8 {if _ebg < 0||_ebg >=_fccg .Bitmap .Width {return 0;};if _fbfg < 0||_fbfg >=_fccg .Bitmap .Height {return 0;};if _fccg .Bitmap .GetPixel (_ebg ,_fbfg ){return 1;};return 0;};func (_bgaf *PageInformationSegment )Size ()int {return 19};
var _ _bed .BasicTabler =&TableSegment {};func (_aag *GenericRegion )writeGBAtPixels (_efbd _c .BinaryWriter )(_daeb int ,_efceg error ){const _abdd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _aag .UseMMR {return 0,nil ;
};_afgd :=1;if _aag .GBTemplate ==0{_afgd =4;}else if _aag .UseExtTemplates {_afgd =12;};if len (_aag .GBAtX )!=_afgd {return 0,_be .Errorf (_abdd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_aag .GBAtY )!=_afgd {return 0,_be .Errorf (_abdd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ccd :=0;_ccd < _afgd ;_ccd ++{if _efceg =_efbd .WriteByte (byte (_aag .GBAtX [_ccd ]));_efceg !=nil {return _daeb ,_be .Wrap (_efceg ,_abdd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_daeb ++;if _efceg =_efbd .WriteByte (byte (_aag .GBAtY [_ccd ]));
_efceg !=nil {return _daeb ,_be .Wrap (_efceg ,_abdd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_daeb ++;};return _daeb ,nil ;};func (_af *GenericRefinementRegion )GetRegionBitmap ()(*_d .Bitmap ,error ){var _ged error ;_fe .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ged !=nil {_fe .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ged );
}else {_fe .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _af .RegionBitmap !=nil {return _af .RegionBitmap ,nil ;};_ce :=0;if _af .ReferenceBitmap ==nil {_af .ReferenceBitmap ,_ged =_af .getGrReference ();if _ged !=nil {return nil ,_ged ;};};if _af ._dg ==nil {_af ._dg ,_ged =_efa .New (_af ._aga );
if _ged !=nil {return nil ,_ged ;};};if _af ._gde ==nil {_af ._gde =_efa .NewStats (8192,1);};_af .RegionBitmap =_d .New (int (_af .RegionInfo .BitmapWidth ),int (_af .RegionInfo .BitmapHeight ));if _af .TemplateID ==0{if _ged =_af .updateOverride ();_ged !=nil {return nil ,_ged ;
};};_cef :=(_af .RegionBitmap .Width +7)&-8;var _ec int ;if _af .IsTPGROn {_ec =int (-_af .ReferenceDY )*_af .ReferenceBitmap .RowStride ;};_bg :=_ec +1;for _bc :=0;_bc < _af .RegionBitmap .Height ;_bc ++{if _af .IsTPGROn {_afe ,_cbe :=_af .decodeSLTP ();
if _cbe !=nil {return nil ,_cbe ;};_ce ^=_afe ;};if _ce ==0{_ged =_af .decodeOptimized (_bc ,_af .RegionBitmap .Width ,_af .RegionBitmap .RowStride ,_af .ReferenceBitmap .RowStride ,_cef ,_ec ,_bg );if _ged !=nil {return nil ,_ged ;};}else {_ged =_af .decodeTypicalPredictedLine (_bc ,_af .RegionBitmap .Width ,_af .RegionBitmap .RowStride ,_af .ReferenceBitmap .RowStride ,_cef ,_ec );
if _ged !=nil {return nil ,_ged ;};};};return _af .RegionBitmap ,nil ;};func (_egdc *Header )readHeaderLength (_cfbbf *_c .Reader ,_accf int64 ){_egdc .HeaderLength =_cfbbf .AbsolutePosition ()-_accf ;};func (_geed *PageInformationSegment )checkInput ()error {if _geed .PageBMHeight ==_b .MaxInt32 {if !_geed .IsStripe {_fe .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_abca *SymbolDictionary )parseHeader ()(_ebebe error ){_fe .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ebebe !=nil {_fe .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ebebe );
}else {_fe .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ebebe =_abca .readRegionFlags ();_ebebe !=nil {return _ebebe ;};if _ebebe =_abca .setAtPixels ();_ebebe !=nil {return _ebebe ;};if _ebebe =_abca .setRefinementAtPixels ();_ebebe !=nil {return _ebebe ;};if _ebebe =_abca .readNumberOfExportedSymbols ();
_ebebe !=nil {return _ebebe ;};if _ebebe =_abca .readNumberOfNewSymbols ();_ebebe !=nil {return _ebebe ;};if _ebebe =_abca .setInSyms ();_ebebe !=nil {return _ebebe ;};if _abca ._fcfb {_bcca :=_abca .Header .RTSegments ;for _ecge :=len (_bcca )-1;_ecge >=0;
_ecge --{if _bcca [_ecge ].Type ==0{_add ,_efdec :=_bcca [_ecge ].SegmentData .(*SymbolDictionary );if !_efdec {_ebebe =_bf .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bcca [_ecge ]);
return _ebebe ;};if _add ._fcfb {_abca .setRetainedCodingContexts (_add );};break ;};};};if _ebebe =_abca .checkInput ();_ebebe !=nil {return _ebebe ;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_gcdg *TextRegion )encodeFlags (_fbdg _c .BinaryWriter )(_cgab int ,_fdac error ){const _cgcba ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fdac =_fbdg .WriteBit (int (_gcdg .SbrTemplate ));_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_fdac =_fbdg .WriteBits (uint64 (_gcdg .SbDsOffset ),5);_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _fdac =_fbdg .WriteBit (int (_gcdg .DefaultPixel ));_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_fdac =_fbdg .WriteBits (uint64 (_gcdg .CombinationOperator ),2);
_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _fdac =_fbdg .WriteBit (int (_gcdg .IsTransposed ));_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_fdac =_fbdg .WriteBits (uint64 (_gcdg .ReferenceCorner ),2);_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_fdac =_fbdg .WriteBits (uint64 (_gcdg .LogSBStrips ),2);
_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _edde int ;if _gcdg .UseRefinement {_edde =1;};if _fdac =_fbdg .WriteBit (_edde );_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_edde =0;if _gcdg .IsHuffmanEncoded {_edde =1;};if _fdac =_fbdg .WriteBit (_edde );_fdac !=nil {return _cgab ,_be .Wrap (_fdac ,_cgcba ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_cgab =2;return _cgab ,nil ;};func (_bbbee *GenericRegion )decodeTemplate0a (_bfg ,_ded ,_eae int ,_gcd ,_gec int )(_ecga error ){const _agdc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cfff ,_bfe int ;_dde ,_cee int ;_ddd byte ;_bda int ;);if _bfg >=1{_ddd ,_ecga =_bbbee .Bitmap .GetByte (_gec );if _ecga !=nil {return _be .Wrap (_ecga ,_agdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dde =int (_ddd );};if _bfg >=2{_ddd ,_ecga =_bbbee .Bitmap .GetByte (_gec -_bbbee .Bitmap .RowStride );
if _ecga !=nil {return _be .Wrap (_ecga ,_agdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cee =int (_ddd )<<6;};_cfff =(_dde &0xf0)|(_cee &0x3800);for _eee :=0;_eee < _eae ;_eee =_bda {var (_beb byte ;_gab int ;);_bda =_eee +8;if _aeeb :=_ded -_eee ;
_aeeb > 8{_gab =8;}else {_gab =_aeeb ;};if _bfg > 0{_dde <<=8;if _bda < _ded {_ddd ,_ecga =_bbbee .Bitmap .GetByte (_gec +1);if _ecga !=nil {return _be .Wrap (_ecga ,_agdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dde |=int (_ddd );};};if _bfg > 1{_gbg :=_gec -_bbbee .Bitmap .RowStride +1;
_cee <<=8;if _bda < _ded {_ddd ,_ecga =_bbbee .Bitmap .GetByte (_gbg );if _ecga !=nil {return _be .Wrap (_ecga ,_agdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cee |=int (_ddd )<<6;}else {_cee |=0;};};for _cge :=0;_cge < _gab ;_cge ++{_cfgc :=uint (7-_cge );
if _bbbee ._aef {_bfe =_bbbee .overrideAtTemplate0a (_cfff ,_eee +_cge ,_bfg ,int (_beb ),_cge ,int (_cfgc ));_bbbee ._dacc .SetIndex (int32 (_bfe ));}else {_bbbee ._dacc .SetIndex (int32 (_cfff ));};var _gf int ;_gf ,_ecga =_bbbee ._bde .DecodeBit (_bbbee ._dacc );
if _ecga !=nil {return _be .Wrap (_ecga ,_agdc ,"");};_beb |=byte (_gf )<<_cfgc ;_cfff =((_cfff &0x7bf7)<<1)|_gf |((_dde >>_cfgc )&0x10)|((_cee >>_cfgc )&0x800);};if _efb :=_bbbee .Bitmap .SetByte (_gcd ,_beb );_efb !=nil {return _be .Wrap (_efb ,_agdc ,"");
};_gcd ++;_gec ++;};return nil ;};func (_daea *SymbolDictionary )decodeRefinedSymbol (_eegff ,_eebe uint32 )error {var (_cgefd int ;_gdgb ,_edgf int32 ;);if _daea .IsHuffmanEncoded {_fdee ,_acgee :=_daea ._fage .ReadBits (byte (_daea ._gda ));if _acgee !=nil {return _acgee ;
};_cgefd =int (_fdee );_gbfg ,_acgee :=_bed .GetStandardTable (15);if _acgee !=nil {return _acgee ;};_bagcd ,_acgee :=_gbfg .Decode (_daea ._fage );if _acgee !=nil {return _acgee ;};_gdgb =int32 (_bagcd );_bagcd ,_acgee =_gbfg .Decode (_daea ._fage );if _acgee !=nil {return _acgee ;
};_edgf =int32 (_bagcd );_gbfg ,_acgee =_bed .GetStandardTable (1);if _acgee !=nil {return _acgee ;};if _ ,_acgee =_gbfg .Decode (_daea ._fage );_acgee !=nil {return _acgee ;};_daea ._fage .Align ();}else {_ccaee ,_cgcf :=_daea ._fbfd .DecodeIAID (uint64 (_daea ._gda ),_daea ._dcdb );
if _cgcf !=nil {return _cgcf ;};_cgefd =int (_ccaee );_gdgb ,_cgcf =_daea ._fbfd .DecodeInt (_daea ._aada );if _cgcf !=nil {return _cgcf ;};_edgf ,_cgcf =_daea ._fbfd .DecodeInt (_daea ._cebe );if _cgcf !=nil {return _cgcf ;};};if _gcac :=_daea .setSymbolsArray ();
_gcac !=nil {return _gcac ;};_eccb :=_daea ._egbg [_cgefd ];if _ggfa :=_daea .decodeNewSymbols (_eegff ,_eebe ,_eccb ,_gdgb ,_edgf );_ggfa !=nil {return _ggfa ;};if _daea .IsHuffmanEncoded {_daea ._fage .Align ();};return nil ;};func (_dcafg *SymbolDictionary )decodeHeightClassBitmap (_eadb *_d .Bitmap ,_cfdba int64 ,_fbfec int ,_dddeg []int )error {for _eaga :=_cfdba ;
_eaga < int64 (_dcafg ._efff );_eaga ++{var _aff int ;for _fdbb :=_cfdba ;_fdbb <=_eaga -1;_fdbb ++{_aff +=_dddeg [_fdbb ];};_gfbgb :=_f .Rect (_aff ,0,_aff +_dddeg [_eaga ],_fbfec );_bcaf ,_cffc :=_d .Extract (_gfbgb ,_eadb );if _cffc !=nil {return _cffc ;
};_dcafg ._fbfe [_eaga ]=_bcaf ;_dcafg ._egbg =append (_dcafg ._egbg ,_bcaf );};return nil ;};func (_degf *Header )writeFlags (_bgdd _c .BinaryWriter )(_bagc error ){const _gecb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_bfbde :=byte (_degf .Type );if _bagc =_bgdd .WriteByte (_bfbde );_bagc !=nil {return _be .Wrap (_bagc ,_gecb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_degf .RetainFlag &&!_degf .PageAssociationFieldSize {return nil ;};if _bagc =_bgdd .SkipBits (-8);_bagc !=nil {return _be .Wrap (_bagc ,_gecb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fgee int ;if _degf .RetainFlag {_fgee =1;};if _bagc =_bgdd .WriteBit (_fgee );_bagc !=nil {return _be .Wrap (_bagc ,_gecb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fgee =0;if _degf .PageAssociationFieldSize {_fgee =1;
};if _bagc =_bgdd .WriteBit (_fgee );_bagc !=nil {return _be .Wrap (_bagc ,_gecb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bgdd .FinishByte ();return nil ;};func (_gea *Header )readNumberOfReferredToSegments (_bcfg *_c .Reader )(uint64 ,error ){const _ccdc ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gfca ,_geae :=_bcfg .ReadBits (3);if _geae !=nil {return 0,_be .Wrap (_geae ,_ccdc ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gfca &=0xf;var _bdcd []byte ;if _gfca <=4{_bdcd =make ([]byte ,5);for _cbcg :=0;_cbcg <=4;_cbcg ++{_fbcgb ,_geag :=_bcfg .ReadBit ();
if _geag !=nil {return 0,_be .Wrap (_geag ,_ccdc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bdcd [_cbcg ]=byte (_fbcgb );};}else {_gfca ,_geae =_bcfg .ReadBits (29);if _geae !=nil {return 0,_geae ;};_gfca &=_b .MaxInt32 ;
_dccg :=(_gfca +8)>>3;_dccg <<=3;_bdcd =make ([]byte ,_dccg );var _cag uint64 ;for _cag =0;_cag < _dccg ;_cag ++{_fae ,_geb :=_bcfg .ReadBit ();if _geb !=nil {return 0,_be .Wrap (_geb ,_ccdc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_bdcd [_cag ]=byte (_fae );};};return _gfca ,nil ;};func (_cdfc *SymbolDictionary )setCodingStatistics ()error {if _cdfc ._adga ==nil {_cdfc ._adga =_efa .NewStats (512,1);};if _cdfc ._bdgg ==nil {_cdfc ._bdgg =_efa .NewStats (512,1);};if _cdfc ._cbge ==nil {_cdfc ._cbge =_efa .NewStats (512,1);
};if _cdfc ._cfffa ==nil {_cdfc ._cfffa =_efa .NewStats (512,1);};if _cdfc ._accd ==nil {_cdfc ._accd =_efa .NewStats (512,1);};if _cdfc .UseRefinementAggregation &&_cdfc ._dcdb ==nil {_cdfc ._dcdb =_efa .NewStats (1<<uint (_cdfc ._gda ),1);_cdfc ._aada =_efa .NewStats (512,1);
_cdfc ._cebe =_efa .NewStats (512,1);};if _cdfc ._dddc ==nil {_cdfc ._dddc =_efa .NewStats (65536,1);};if _cdfc ._fbfd ==nil {var _gafe error ;_cdfc ._fbfd ,_gafe =_efa .New (_cdfc ._fage );if _gafe !=nil {return _gafe ;};};return nil ;};func (_dcdc *GenericRegion )setParametersMMR (_ebef bool ,_gfag ,_bfgc int64 ,_abgg ,_agc uint32 ,_febd byte ,_gedb ,_ecce bool ,_gfb ,_bgga []int8 ){_dcdc .DataOffset =_gfag ;
_dcdc .DataLength =_bfgc ;_dcdc .RegionSegment =&RegionSegment {};_dcdc .RegionSegment .BitmapHeight =_abgg ;_dcdc .RegionSegment .BitmapWidth =_agc ;_dcdc .GBTemplate =_febd ;_dcdc .IsMMREncoded =_ebef ;_dcdc .IsTPGDon =_gedb ;_dcdc .GBAtX =_gfb ;_dcdc .GBAtY =_bgga ;
};func (_dgdf *TextRegion )symbolIDCodeLengths ()error {var (_ddebe []*_bed .Code ;_ffbag uint64 ;_becf _bed .Tabler ;_acb error ;);for _gffbg :=0;_gffbg < 35;_gffbg ++{_ffbag ,_acb =_dgdf ._deef .ReadBits (4);if _acb !=nil {return _acb ;};_bdde :=int (_ffbag &0xf);
if _bdde > 0{_ddebe =append (_ddebe ,_bed .NewCode (int32 (_bdde ),0,int32 (_gffbg ),false ));};};_becf ,_acb =_bed .NewFixedSizeTable (_ddebe );if _acb !=nil {return _acb ;};var (_dfffd int64 ;_dbcea uint32 ;_bdgf []*_bed .Code ;_fbfc int64 ;);for _dbcea < _dgdf .NumberOfSymbols {_fbfc ,_acb =_becf .Decode (_dgdf ._deef );
if _acb !=nil {return _acb ;};if _fbfc < 32{if _fbfc > 0{_bdgf =append (_bdgf ,_bed .NewCode (int32 (_fbfc ),0,int32 (_dbcea ),false ));};_dfffd =_fbfc ;_dbcea ++;}else {var _ggaf ,_fbfea int64 ;switch _fbfc {case 32:_ffbag ,_acb =_dgdf ._deef .ReadBits (2);
if _acb !=nil {return _acb ;};_ggaf =3+int64 (_ffbag );if _dbcea > 0{_fbfea =_dfffd ;};case 33:_ffbag ,_acb =_dgdf ._deef .ReadBits (3);if _acb !=nil {return _acb ;};_ggaf =3+int64 (_ffbag );case 34:_ffbag ,_acb =_dgdf ._deef .ReadBits (7);if _acb !=nil {return _acb ;
};_ggaf =11+int64 (_ffbag );};for _aeebc :=0;_aeebc < int (_ggaf );_aeebc ++{if _fbfea > 0{_bdgf =append (_bdgf ,_bed .NewCode (int32 (_fbfea ),0,int32 (_dbcea ),false ));};_dbcea ++;};};};_dgdf ._deef .Align ();_dgdf ._ggad ,_acb =_bed .NewFixedSizeTable (_bdgf );
return _acb ;};func (_fdec *TextRegion )String ()string {_aeef :=&_fd .Builder {};_aeef .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_aeef .WriteString (_fdec .RegionInfo .String ()+"\u000a");_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_fdec .SbrTemplate ));
_aeef .WriteString (_bf .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_fdec .SbDsOffset ));_aeef .WriteString (_bf .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_fdec .DefaultPixel ));
_aeef .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_fdec .CombinationOperator ));_aeef .WriteString (_bf .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_fdec .IsTransposed ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fdec .ReferenceCorner ));_aeef .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_fdec .UseRefinement ));
_aeef .WriteString (_bf .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_fdec .IsHuffmanEncoded ));if _fdec .IsHuffmanEncoded {_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fdec .SbHuffRSize ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_fdec .SbHuffRDY ));_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_fdec .SbHuffRDX ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_fdec .SbHuffRDHeight ));_aeef .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_fdec .SbHuffRDWidth ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_fdec .SbHuffDT ));_aeef .WriteString (_bf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_fdec .SbHuffDS ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_fdec .SbHuffFS ));};_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fdec .SbrATX ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_fdec .SbrATY ));_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fdec .NumberOfSymbolInstances ));
_aeef .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fdec .SbrATX ));return _aeef .String ();};func (_cfebd *Header )readSegmentPageAssociation (_ffeb Documenter ,_agca *_c .Reader ,_ggcf uint64 ,_egfc ...int )(_eeg error ){const _gacg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_cfebd .PageAssociationFieldSize {_bfbd ,_fefgd :=_agca .ReadBits (8);if _fefgd !=nil {return _be .Wrap (_fefgd ,_gacg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfebd .PageAssociation =int (_bfbd &0xFF);}else {_bbg ,_cbg :=_agca .ReadBits (32);
if _cbg !=nil {return _be .Wrap (_cbg ,_gacg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfebd .PageAssociation =int (_bbg &_b .MaxInt32 );};if _ggcf ==0{return nil ;};if _cfebd .PageAssociation !=0{_feac ,_dceg :=_ffeb .GetPage (_cfebd .PageAssociation );
if _dceg !=nil {return _be .Wrap (_dceg ,_gacg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _facc int ;for _cdgd :=uint64 (0);_cdgd < _ggcf ;_cdgd ++{_facc =_egfc [_cdgd ];
_cfebd .RTSegments [_cdgd ],_dceg =_feac .GetSegment (_facc );if _dceg !=nil {var _caf error ;_cfebd .RTSegments [_cdgd ],_caf =_ffeb .GetGlobalSegment (_facc );if _caf !=nil {return _be .Wrapf (_dceg ,_gacg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_cfebd .PageAssociation );
};};};return nil ;};for _edcf :=uint64 (0);_edcf < _ggcf ;_edcf ++{_cfebd .RTSegments [_edcf ],_eeg =_ffeb .GetGlobalSegment (_egfc [_edcf ]);if _eeg !=nil {return _be .Wrapf (_eeg ,_gacg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_egfc [_edcf ]);
};};return nil ;};func (_dcd *GenericRegion )computeSegmentDataStructure ()error {_dcd .DataOffset =_dcd ._cefb .AbsolutePosition ();_dcd .DataHeaderLength =_dcd .DataOffset -_dcd .DataHeaderOffset ;_dcd .DataLength =int64 (_dcd ._cefb .AbsoluteLength ())-_dcd .DataHeaderLength ;
return nil ;};func (_gbf *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gbf .RegionSegment };func (_acg *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _acg .RegionInfo };func (_ggfd *SymbolDictionary )decodeThroughTextRegion (_bbge ,_cecd ,_bffd uint32 )error {if _ggfd ._abaa ==nil {_ggfd ._abaa =_facf (_ggfd ._fage ,nil );
_ggfd ._abaa .setContexts (_ggfd ._dddc ,_efa .NewStats (512,1),_efa .NewStats (512,1),_efa .NewStats (512,1),_efa .NewStats (512,1),_ggfd ._dcdb ,_efa .NewStats (512,1),_efa .NewStats (512,1),_efa .NewStats (512,1),_efa .NewStats (512,1));};if _gage :=_ggfd .setSymbolsArray ();
_gage !=nil {return _gage ;};_ggfd ._abaa .setParameters (_ggfd ._fbfd ,_ggfd .IsHuffmanEncoded ,true ,_bbge ,_cecd ,_bffd ,1,_ggfd ._eacb +_ggfd ._efff ,0,0,0,1,0,0,0,0,0,0,0,0,0,_ggfd .SdrTemplate ,_ggfd .SdrATX ,_ggfd .SdrATY ,_ggfd ._egbg ,_ggfd ._gda );
return _ggfd .addSymbol (_ggfd ._abaa );};func (_eadc *TableSegment )HtRS ()int32 {return _eadc ._bdad };func (_agef *Header )referenceSize ()uint {switch {case _agef .SegmentNumber <=255:return 1;case _agef .SegmentNumber <=65535:return 2;default:return 4;
};};func (_eeddc *TextRegion )readAmountOfSymbolInstances ()error {_efcd ,_efdea :=_eeddc ._deef .ReadBits (32);if _efdea !=nil {return _efdea ;};_eeddc .NumberOfSymbolInstances =uint32 (_efcd &_b .MaxUint32 );_dede :=_eeddc .RegionInfo .BitmapWidth *_eeddc .RegionInfo .BitmapHeight ;
if _dede < _eeddc .NumberOfSymbolInstances {_fe .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dede ,_eeddc .NumberOfSymbolInstances );
_eeddc .NumberOfSymbolInstances =_dede ;};return nil ;};type SegmentEncoder interface{Encode (_ggac _c .BinaryWriter )(_afde int ,_gedbe error );};func (_dbbc *Header )readSegmentNumber (_ebfd *_c .Reader )error {const _agbe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_cgag :=make ([]byte ,4);_ ,_abdg :=_ebfd .Read (_cgag );if _abdg !=nil {return _be .Wrap (_abdg ,_agbe ,"");};_dbbc .SegmentNumber =_a .BigEndian .Uint32 (_cgag );return nil ;};func (_cda *GenericRegion )parseHeader ()(_abd error ){_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _abd !=nil {_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_abd );
}else {_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gbdb int ;_dffc uint64 ;);if _abd =_cda .RegionSegment .parseHeader ();_abd !=nil {return _abd ;};if _ ,_abd =_cda ._cefb .ReadBits (3);_abd !=nil {return _abd ;};_gbdb ,_abd =_cda ._cefb .ReadBit ();if _abd !=nil {return _abd ;};if _gbdb ==1{_cda .UseExtTemplates =true ;
};_gbdb ,_abd =_cda ._cefb .ReadBit ();if _abd !=nil {return _abd ;};if _gbdb ==1{_cda .IsTPGDon =true ;};_dffc ,_abd =_cda ._cefb .ReadBits (2);if _abd !=nil {return _abd ;};_cda .GBTemplate =byte (_dffc &0xf);_gbdb ,_abd =_cda ._cefb .ReadBit ();if _abd !=nil {return _abd ;
};if _gbdb ==1{_cda .IsMMREncoded =true ;};if !_cda .IsMMREncoded {_eacf :=1;if _cda .GBTemplate ==0{_eacf =4;if _cda .UseExtTemplates {_eacf =12;};};if _abd =_cda .readGBAtPixels (_eacf );_abd !=nil {return _abd ;};};if _abd =_cda .computeSegmentDataStructure ();
_abd !=nil {return _abd ;};_fe .Log .Trace ("\u0025\u0073",_cda );return nil ;};func (_ddge *PatternDictionary )readPatternWidthAndHeight ()error {_aeebe ,_fba :=_ddge ._fbgg .ReadByte ();if _fba !=nil {return _fba ;};_ddge .HdpWidth =_aeebe ;_aeebe ,_fba =_ddge ._fbgg .ReadByte ();
if _fba !=nil {return _fba ;};_ddge .HdpHeight =_aeebe ;return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_ggag *GenericRegion )String ()string {_bagb :=&_fd .Builder {};_bagb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bagb .WriteString (_ggag .RegionSegment .String ()+"\u000a");_bagb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ggag .UseExtTemplates ));
_bagb .WriteString (_bf .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ggag .IsTPGDon ));_bagb .WriteString (_bf .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ggag .GBTemplate ));
_bagb .WriteString (_bf .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ggag .IsMMREncoded ));_bagb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ggag .GBAtX ));
_bagb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ggag .GBAtY ));_bagb .WriteString (_bf .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ggag .GBAtOverride ));
return _bagb .String ();};func (_dbca *SymbolDictionary )String ()string {_fbcbb :=&_fd .Builder {};_fbcbb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_fbcbb .WriteString (_bf .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dbca .SdrTemplate ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dbca .SdTemplate ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dbca ._gdc ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dbca ._fcfb ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dbca .SdHuffAggInstanceSelection ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dbca .SdHuffBMSizeSelection ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dbca .SdHuffDecodeWidthSelection ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dbca .SdHuffDecodeHeightSelection ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dbca .UseRefinementAggregation ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dbca .IsHuffmanEncoded ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dbca .SdATX ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dbca .SdATY ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dbca .SdrATX ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dbca .SdrATY ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dbca .NumberOfExportedSymbols ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dbca .NumberOfNewSymbols ));_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dbca ._eacb ));
_fbcbb .WriteString (_bf .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dbca ._efff ));return _fbcbb .String ();};func (_cgbd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cgbd .IsHuffmanEncoded {return _cgbd .decodeHeightClassDeltaHeightWithHuffman ();
};_gcga ,_cega :=_cgbd ._fbfd .DecodeInt (_cgbd ._bdgg );if _cega !=nil {return 0,_cega ;};return int64 (_gcga ),nil ;};func (_fg *EndOfStripe )parseHeader ()error {_cb ,_ad :=_fg ._ac .ReadBits (32);if _ad !=nil {return _ad ;};_fg ._eg =int (_cb &_b .MaxInt32 );
return nil ;};func (_edcg *GenericRefinementRegion )getPixel (_bggc *_d .Bitmap ,_gge ,_geg int )int {if _gge < 0||_gge >=_bggc .Width {return 0;};if _geg < 0||_geg >=_bggc .Height {return 0;};if _bggc .GetPixel (_gge ,_geg ){return 1;};return 0;};func (_cbc *GenericRegion )setParametersWithAt (_deg bool ,_ffcg byte ,_eafg ,_cbbcg bool ,_fbb ,_agfa []int8 ,_ceaf ,_gfa uint32 ,_egcf *_efa .DecoderStats ,_cgbb *_efa .Decoder ){_cbc .IsMMREncoded =_deg ;
_cbc .GBTemplate =_ffcg ;_cbc .IsTPGDon =_eafg ;_cbc .GBAtX =_fbb ;_cbc .GBAtY =_agfa ;_cbc .RegionSegment .BitmapHeight =_gfa ;_cbc .RegionSegment .BitmapWidth =_ceaf ;_cbc ._ecgg =nil ;_cbc .Bitmap =nil ;if _egcf !=nil {_cbc ._dacc =_egcf ;};if _cgbb !=nil {_cbc ._bde =_cgbb ;
};_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cbc );};func (_egb *PatternDictionary )setGbAtPixels (){if _egb .HDTemplate ==0{_egb .GBAtX =make ([]int8 ,4);
_egb .GBAtY =make ([]int8 ,4);_egb .GBAtX [0]=-int8 (_egb .HdpWidth );_egb .GBAtY [0]=0;_egb .GBAtX [1]=-3;_egb .GBAtY [1]=-1;_egb .GBAtX [2]=2;_egb .GBAtY [2]=-2;_egb .GBAtX [3]=-2;_egb .GBAtY [3]=-2;}else {_egb .GBAtX =[]int8 {-int8 (_egb .HdpWidth )};
_egb .GBAtY =[]int8 {0};};};func (_ggd *SymbolDictionary )getSymbol (_baga int )(*_d .Bitmap ,error ){const _abea ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_daagf ,_dbg :=_ggd ._bbga .GetBitmap (_ggd ._bdgd [_baga ]);if _dbg !=nil {return nil ,_be .Wrap (_dbg ,_abea ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _daagf ,nil ;};type template1 struct{};func (_aded *HalftoneRegion )computeSegmentDataStructure ()error {_aded .DataOffset =_aded ._fcbff .AbsolutePosition ();_aded .DataHeaderLength =_aded .DataOffset -_aded .DataHeaderOffset ;_aded .DataLength =int64 (_aded ._fcbff .AbsoluteLength ())-_aded .DataHeaderLength ;
return nil ;};type TableSegment struct{_ggef *_c .Reader ;_dbcd int32 ;_dcgd int32 ;_bdad int32 ;_dbeb int32 ;_fagaa int32 ;};func (_febad *TableSegment )HtHigh ()int32 {return _febad ._fagaa };func (_gabf *TextRegion )parseHeader ()error {var _cfffb error ;
_fe .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _cfffb !=nil {_fe .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cfffb );
}else {_fe .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cfffb =_gabf .RegionInfo .parseHeader ();
_cfffb !=nil {return _cfffb ;};if _cfffb =_gabf .readRegionFlags ();_cfffb !=nil {return _cfffb ;};if _gabf .IsHuffmanEncoded {if _cfffb =_gabf .readHuffmanFlags ();_cfffb !=nil {return _cfffb ;};};if _cfffb =_gabf .readUseRefinement ();_cfffb !=nil {return _cfffb ;
};if _cfffb =_gabf .readAmountOfSymbolInstances ();_cfffb !=nil {return _cfffb ;};if _cfffb =_gabf .getSymbols ();_cfffb !=nil {return _cfffb ;};if _cfffb =_gabf .computeSymbolCodeLength ();_cfffb !=nil {return _cfffb ;};if _cfffb =_gabf .checkInput ();
_cfffb !=nil {return _cfffb ;};_fe .Log .Trace ("\u0025\u0073",_gabf .String ());return nil ;};func (_bgfa *SymbolDictionary )decodeHeightClassCollectiveBitmap (_egcag int64 ,_cfbaad ,_dgac uint32 )(*_d .Bitmap ,error ){if _egcag ==0{_ecbb :=_d .New (int (_dgac ),int (_cfbaad ));
var (_abcc byte ;_dcad error ;);for _begg :=0;_begg < len (_ecbb .Data );_begg ++{_abcc ,_dcad =_bgfa ._fage .ReadByte ();if _dcad !=nil {return nil ,_dcad ;};if _dcad =_ecbb .SetByte (_begg ,_abcc );_dcad !=nil {return nil ,_dcad ;};};return _ecbb ,nil ;
};if _bgfa ._ebeb ==nil {_bgfa ._ebeb =NewGenericRegion (_bgfa ._fage );};_bgfa ._ebeb .setParameters (true ,_bgfa ._fage .AbsolutePosition (),_egcag ,_cfbaad ,_dgac );_dbcca ,_bebe :=_bgfa ._ebeb .GetRegionBitmap ();if _bebe !=nil {return nil ,_bebe ;
};return _dbcca ,nil ;};func (_cgefgg *TextRegion )decodeStripT ()(_aafd int64 ,_dbce error ){if _cgefgg .IsHuffmanEncoded {if _cgefgg .SbHuffDT ==3{if _cgefgg ._aefb ==nil {var _fddb int ;if _cgefgg .SbHuffFS ==3{_fddb ++;};if _cgefgg .SbHuffDS ==3{_fddb ++;
};_cgefgg ._aefb ,_dbce =_cgefgg .getUserTable (_fddb );if _dbce !=nil {return 0,_dbce ;};};_aafd ,_dbce =_cgefgg ._aefb .Decode (_cgefgg ._deef );if _dbce !=nil {return 0,_dbce ;};}else {var _abdca _bed .Tabler ;_abdca ,_dbce =_bed .GetStandardTable (11+int (_cgefgg .SbHuffDT ));
if _dbce !=nil {return 0,_dbce ;};_aafd ,_dbce =_abdca .Decode (_cgefgg ._deef );if _dbce !=nil {return 0,_dbce ;};};}else {var _cdbad int32 ;_cdbad ,_dbce =_cgefgg ._dgfa .DecodeInt (_cgefgg ._bfef );if _dbce !=nil {return 0,_dbce ;};_aafd =int64 (_cdbad );
};_aafd *=int64 (-_cgefgg .SbStrips );return _aafd ,nil ;};func (_agdd *GenericRegion )overrideAtTemplate0b (_ddgd ,_cgca ,_abad ,_ggf ,_def ,_fggg int )int {if _agdd .GBAtOverride [0]{_ddgd &=0xFFFD;if _agdd .GBAtY [0]==0&&_agdd .GBAtX [0]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [0]&0x1))<<1;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [0]),_abad +int (_agdd .GBAtY [0])))<<1;};};if _agdd .GBAtOverride [1]{_ddgd &=0xDFFF;if _agdd .GBAtY [1]==0&&_agdd .GBAtX [1]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [1]&0x1))<<13;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [1]),_abad +int (_agdd .GBAtY [1])))<<13;};};if _agdd .GBAtOverride [2]{_ddgd &=0xFDFF;if _agdd .GBAtY [2]==0&&_agdd .GBAtX [2]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [2]&0x1))<<9;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [2]),_abad +int (_agdd .GBAtY [2])))<<9;};};if _agdd .GBAtOverride [3]{_ddgd &=0xBFFF;if _agdd .GBAtY [3]==0&&_agdd .GBAtX [3]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [3]&0x1))<<14;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [3]),_abad +int (_agdd .GBAtY [3])))<<14;};};if _agdd .GBAtOverride [4]{_ddgd &=0xEFFF;if _agdd .GBAtY [4]==0&&_agdd .GBAtX [4]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [4]&0x1))<<12;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [4]),_abad +int (_agdd .GBAtY [4])))<<12;};};if _agdd .GBAtOverride [5]{_ddgd &=0xFFDF;if _agdd .GBAtY [5]==0&&_agdd .GBAtX [5]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [5]&0x1))<<5;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [5]),_abad +int (_agdd .GBAtY [5])))<<5;};};if _agdd .GBAtOverride [6]{_ddgd &=0xFFFB;if _agdd .GBAtY [6]==0&&_agdd .GBAtX [6]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [6]&0x1))<<2;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [6]),_abad +int (_agdd .GBAtY [6])))<<2;};};if _agdd .GBAtOverride [7]{_ddgd &=0xFFF7;if _agdd .GBAtY [7]==0&&_agdd .GBAtX [7]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [7]&0x1))<<3;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [7]),_abad +int (_agdd .GBAtY [7])))<<3;};};if _agdd .GBAtOverride [8]{_ddgd &=0xF7FF;if _agdd .GBAtY [8]==0&&_agdd .GBAtX [8]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [8]&0x1))<<11;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [8]),_abad +int (_agdd .GBAtY [8])))<<11;};};if _agdd .GBAtOverride [9]{_ddgd &=0xFFEF;if _agdd .GBAtY [9]==0&&_agdd .GBAtX [9]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [9]&0x1))<<4;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [9]),_abad +int (_agdd .GBAtY [9])))<<4;};};if _agdd .GBAtOverride [10]{_ddgd &=0x7FFF;if _agdd .GBAtY [10]==0&&_agdd .GBAtX [10]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [10]&0x1))<<15;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [10]),_abad +int (_agdd .GBAtY [10])))<<15;};};if _agdd .GBAtOverride [11]{_ddgd &=0xFDFF;if _agdd .GBAtY [11]==0&&_agdd .GBAtX [11]>=-int8 (_def ){_ddgd |=(_ggf >>uint (int8 (_fggg )-_agdd .GBAtX [11]&0x1))<<10;
}else {_ddgd |=int (_agdd .getPixel (_cgca +int (_agdd .GBAtX [11]),_abad +int (_agdd .GBAtY [11])))<<10;};};return _ddgd ;};func (_befd *Header )CleanSegmentData (){if _befd .SegmentData !=nil {_befd .SegmentData =nil ;};};func (_ecca *PatternDictionary )computeSegmentDataStructure ()error {_ecca .DataOffset =_ecca ._fbgg .AbsolutePosition ();
_ecca .DataHeaderLength =_ecca .DataOffset -_ecca .DataHeaderOffset ;_ecca .DataLength =int64 (_ecca ._fbgg .AbsoluteLength ())-_ecca .DataHeaderLength ;return nil ;};func (_aeeg *RegionSegment )String ()string {_gfda :=&_fd .Builder {};_gfda .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_gfda .WriteString (_bf .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aeeg .BitmapWidth ,_aeeg .BitmapHeight ));
_gfda .WriteString (_bf .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aeeg .XLocation ,_aeeg .YLocation ));_gfda .WriteString (_bf .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aeeg .CombinaionOperator ));
return _gfda .String ();};func (_ceec *GenericRegion )overrideAtTemplate1 (_bcg ,_bee ,_aaa ,_ebda ,_bcea int )int {_bcg &=0x1FF7;if _ceec .GBAtY [0]==0&&_ceec .GBAtX [0]>=-int8 (_bcea ){_bcg |=(_ebda >>uint (7-(int8 (_bcea )+_ceec .GBAtX [0]))&0x1)<<3;
}else {_bcg |=int (_ceec .getPixel (_bee +int (_ceec .GBAtX [0]),_aaa +int (_ceec .GBAtY [0])))<<3;};return _bcg ;};func (_bfad *Header )String ()string {_aacg :=&_fd .Builder {};_aacg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_aacg .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bfad .SegmentNumber ));_aacg .WriteString (_bf .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bfad .Type ));
_aacg .WriteString (_bf .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bfad .RetainFlag ));_aacg .WriteString (_bf .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bfad .PageAssociation ));
_aacg .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bfad .PageAssociationFieldSize ));
_aacg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_egf :=range _bfad .RTSNumbers {_aacg .WriteString (_bf .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_egf ));};_aacg .WriteString (_bf .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bfad .HeaderLength ));
_aacg .WriteString (_bf .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bfad .SegmentDataLength ));_aacg .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bfad .SegmentDataStartOffset ));
return _aacg .String ();};func (_eaa *template1 )form (_dbd ,_cac ,_dbf ,_bcdg ,_bceg int16 )int16 {return ((_dbd &0x02)<<8)|(_cac <<6)|((_dbf &0x03)<<4)|(_bcdg <<1)|_bceg ;};type Regioner interface{GetRegionBitmap ()(*_d .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};func (_cfeac *GenericRegion )decodeTemplate0b (_eeac ,_afce ,_cdd int ,_aeca ,_bggd int )(_dgaa error ){const _bgf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_dcg ,_bfc int ;_dcaf ,_fcfa int ;_dba byte ;
_cca int ;);if _eeac >=1{_dba ,_dgaa =_cfeac .Bitmap .GetByte (_bggd );if _dgaa !=nil {return _be .Wrap (_dgaa ,_bgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dcaf =int (_dba );};if _eeac >=2{_dba ,_dgaa =_cfeac .Bitmap .GetByte (_bggd -_cfeac .Bitmap .RowStride );
if _dgaa !=nil {return _be .Wrap (_dgaa ,_bgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fcfa =int (_dba )<<6;};_dcg =(_dcaf &0xf0)|(_fcfa &0x3800);for _gfg :=0;_gfg < _cdd ;_gfg =_cca {var (_cgc byte ;_cfeb int ;);_cca =_gfg +8;if _eafb :=_afce -_gfg ;
_eafb > 8{_cfeb =8;}else {_cfeb =_eafb ;};if _eeac > 0{_dcaf <<=8;if _cca < _afce {_dba ,_dgaa =_cfeac .Bitmap .GetByte (_bggd +1);if _dgaa !=nil {return _be .Wrap (_dgaa ,_bgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dcaf |=int (_dba );
};};if _eeac > 1{_fcfa <<=8;if _cca < _afce {_dba ,_dgaa =_cfeac .Bitmap .GetByte (_bggd -_cfeac .Bitmap .RowStride +1);if _dgaa !=nil {return _be .Wrap (_dgaa ,_bgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fcfa |=int (_dba )<<6;};};for _fceg :=0;
_fceg < _cfeb ;_fceg ++{_fbf :=uint (7-_fceg );if _cfeac ._aef {_bfc =_cfeac .overrideAtTemplate0b (_dcg ,_gfg +_fceg ,_eeac ,int (_cgc ),_fceg ,int (_fbf ));_cfeac ._dacc .SetIndex (int32 (_bfc ));}else {_cfeac ._dacc .SetIndex (int32 (_dcg ));};var _fccb int ;
_fccb ,_dgaa =_cfeac ._bde .DecodeBit (_cfeac ._dacc );if _dgaa !=nil {return _be .Wrap (_dgaa ,_bgf ,"");};_cgc |=byte (_fccb <<_fbf );_dcg =((_dcg &0x7bf7)<<1)|_fccb |((_dcaf >>_fbf )&0x10)|((_fcfa >>_fbf )&0x800);};if _bgef :=_cfeac .Bitmap .SetByte (_aeca ,_cgc );
_bgef !=nil {return _be .Wrap (_bgef ,_bgf ,"");};_aeca ++;_bggd ++;};return nil ;};func (_gacf *GenericRegion )decodeLine (_dgb ,_dcb ,_ebca int )error {const _ffe ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_adef :=_gacf .Bitmap .GetByteIndex (0,_dgb );
_bbca :=_adef -_gacf .Bitmap .RowStride ;switch _gacf .GBTemplate {case 0:if !_gacf .UseExtTemplates {return _gacf .decodeTemplate0a (_dgb ,_dcb ,_ebca ,_adef ,_bbca );};return _gacf .decodeTemplate0b (_dgb ,_dcb ,_ebca ,_adef ,_bbca );case 1:return _gacf .decodeTemplate1 (_dgb ,_dcb ,_ebca ,_adef ,_bbca );
case 2:return _gacf .decodeTemplate2 (_dgb ,_dcb ,_ebca ,_adef ,_bbca );case 3:return _gacf .decodeTemplate3 (_dgb ,_dcb ,_ebca ,_adef ,_bbca );};return _be .Errorf (_ffe ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gacf .GBTemplate );
};func (_cedc *PageInformationSegment )parseHeader ()(_fbdd error ){_fe .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _ffbb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _fbdd !=nil {_ffbb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fbdd .Error ();}else {_ffbb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fe .Log .Trace (_ffbb );}();if _fbdd =_cedc .readWidthAndHeight ();
_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readResolution ();_fbdd !=nil {return _fbdd ;};_ ,_fbdd =_cedc ._fdcb .ReadBit ();if _fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readCombinationOperatorOverrideAllowed ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readRequiresAuxiliaryBuffer ();
_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readCombinationOperator ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readDefaultPixelValue ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readContainsRefinement ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readIsLossless ();
_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readIsStriped ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .readMaxStripeSize ();_fbdd !=nil {return _fbdd ;};if _fbdd =_cedc .checkInput ();_fbdd !=nil {return _fbdd ;};_fe .Log .Trace ("\u0025\u0073",_cedc );
return nil ;};func (_cgba *SymbolDictionary )Encode (w _c .BinaryWriter )(_dccb int ,_acf error ){const _fdef ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _cgba ==nil {return 0,_be .Error (_fdef ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _dccb ,_acf =_cgba .encodeFlags (w );_acf !=nil {return _dccb ,_be .Wrap (_acf ,_fdef ,"");};_ccgf ,_acf :=_cgba .encodeATFlags (w );if _acf !=nil {return _dccb ,_be .Wrap (_acf ,_fdef ,"");};_dccb +=_ccgf ;if _ccgf ,_acf =_cgba .encodeRefinementATFlags (w );
_acf !=nil {return _dccb ,_be .Wrap (_acf ,_fdef ,"");};_dccb +=_ccgf ;if _ccgf ,_acf =_cgba .encodeNumSyms (w );_acf !=nil {return _dccb ,_be .Wrap (_acf ,_fdef ,"");};_dccb +=_ccgf ;if _ccgf ,_acf =_cgba .encodeSymbols (w );_acf !=nil {return _dccb ,_be .Wrap (_acf ,_fdef ,"");
};_dccb +=_ccgf ;return _dccb ,nil ;};func (_effa *SymbolDictionary )setInSyms ()error {if _effa .Header .RTSegments !=nil {return _effa .retrieveImportSymbols ();};_effa ._cbf =make ([]*_d .Bitmap ,0);return nil ;};func (_cadba *TextRegion )getUserTable (_gceg int )(_bed .Tabler ,error ){const _edcc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _cecga int ;for _ ,_cabb :=range _cadba .Header .RTSegments {if _cabb .Type ==53{if _cecga ==_gceg {_deff ,_gcca :=_cabb .GetSegmentData ();if _gcca !=nil {return nil ,_gcca ;};_ebdg ,_eebga :=_deff .(*TableSegment );if !_eebga {_fe .Log .Debug (_bf .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cabb .SegmentNumber ));
return nil ,_be .Error (_edcc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _bed .NewEncodedTable (_ebdg );};_cecga ++;};};return nil ,nil ;};func (_efg *Header )readDataStartOffset (_agbf *_c .Reader ,_bab OrganizationType ){if _bab ==OSequential {_efg .SegmentDataStartOffset =uint64 (_agbf .AbsolutePosition ());};};
func (_gedf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gedf .Template .setIndex (_gedf ._gde );return _gedf ._dg .DecodeBit (_gedf ._gde );};func (_ffcbf *SymbolDictionary )readRegionFlags ()error {var (_cffd uint64 ;_efffg int ;);_ ,_dgacf :=_ffcbf ._fage .ReadBits (3);
if _dgacf !=nil {return _dgacf ;};_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();if _dgacf !=nil {return _dgacf ;};_ffcbf .SdrTemplate =int8 (_efffg );_cffd ,_dgacf =_ffcbf ._fage .ReadBits (2);if _dgacf !=nil {return _dgacf ;};_ffcbf .SdTemplate =int8 (_cffd &0xf);
_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();if _dgacf !=nil {return _dgacf ;};if _efffg ==1{_ffcbf ._gdc =true ;};_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();if _dgacf !=nil {return _dgacf ;};if _efffg ==1{_ffcbf ._fcfb =true ;};_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();
if _dgacf !=nil {return _dgacf ;};if _efffg ==1{_ffcbf .SdHuffAggInstanceSelection =true ;};_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();if _dgacf !=nil {return _dgacf ;};_ffcbf .SdHuffBMSizeSelection =int8 (_efffg );_cffd ,_dgacf =_ffcbf ._fage .ReadBits (2);
if _dgacf !=nil {return _dgacf ;};_ffcbf .SdHuffDecodeWidthSelection =int8 (_cffd &0xf);_cffd ,_dgacf =_ffcbf ._fage .ReadBits (2);if _dgacf !=nil {return _dgacf ;};_ffcbf .SdHuffDecodeHeightSelection =int8 (_cffd &0xf);_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();
if _dgacf !=nil {return _dgacf ;};if _efffg ==1{_ffcbf .UseRefinementAggregation =true ;};_efffg ,_dgacf =_ffcbf ._fage .ReadBit ();if _dgacf !=nil {return _dgacf ;};if _efffg ==1{_ffcbf .IsHuffmanEncoded =true ;};return nil ;};func (_bfgcg *SymbolDictionary )getSbSymCodeLen ()int8 {_egbb :=int8 (_b .Ceil (_b .Log (float64 (_bfgcg ._eacb +_bfgcg .NumberOfNewSymbols ))/_b .Log (2)));
if _bfgcg .IsHuffmanEncoded &&_egbb < 1{return 1;};return _egbb ;};func (_cacbe *GenericRegion )Init (h *Header ,r *_c .Reader )error {_cacbe .RegionSegment =NewRegionSegment (r );_cacbe ._cefb =r ;return _cacbe .parseHeader ();};func (_ebgd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ebgd .IsHuffmanEncoded {switch _ebgd .SdHuffDecodeWidthSelection {case 0:_cgde ,_adfc :=_bed .GetStandardTable (2);
if _adfc !=nil {return 0,_adfc ;};return _cgde .Decode (_ebgd ._fage );case 1:_cdcce ,_eafea :=_bed .GetStandardTable (3);if _eafea !=nil {return 0,_eafea ;};return _cdcce .Decode (_ebgd ._fage );case 3:if _ebgd ._egdcb ==nil {var _gegf int ;if _ebgd .SdHuffDecodeHeightSelection ==3{_gegf ++;
};_fagb ,_bdd :=_ebgd .getUserTable (_gegf );if _bdd !=nil {return 0,_bdd ;};_ebgd ._egdcb =_fagb ;};return _ebgd ._egdcb .Decode (_ebgd ._fage );};}else {_cece ,_edeg :=_ebgd ._fbfd .DecodeInt (_ebgd ._cbge );if _edeg !=nil {return 0,_edeg ;};return int64 (_cece ),nil ;
};return 0,nil ;};func (_cbgb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cbgb .SdHuffAggInstanceSelection {_acga ,_dcga :=_bed .GetStandardTable (1);if _dcga !=nil {return 0,_dcga ;};return _acga .Decode (_cbgb ._fage );};if _cbgb ._gfeb ==nil {var (_fcga int ;
_adfd error ;);if _cbgb .SdHuffDecodeHeightSelection ==3{_fcga ++;};if _cbgb .SdHuffDecodeWidthSelection ==3{_fcga ++;};if _cbgb .SdHuffBMSizeSelection ==3{_fcga ++;};_cbgb ._gfeb ,_adfd =_cbgb .getUserTable (_fcga );if _adfd !=nil {return 0,_adfd ;};};
return _cbgb ._gfeb .Decode (_cbgb ._fage );};func (_bgee *PageInformationSegment )readCombinationOperator ()error {_edae ,_eceb :=_bgee ._fdcb .ReadBits (2);if _eceb !=nil {return _eceb ;};_bgee ._bfgce =_d .CombinationOperator (int (_edae ));return nil ;
};var _ templater =&template1 {};func (_fggc *GenericRefinementRegion )overrideAtTemplate0 (_ddc ,_abg ,_ddf ,_fbc ,_ceb int )int {if _fggc ._cd [0]{_ddc &=0xfff7;if _fggc .GrAtY [0]==0&&int (_fggc .GrAtX [0])>=-_ceb {_ddc |=(_fbc >>uint (7-(_ceb +int (_fggc .GrAtX [0])))&0x1)<<3;
}else {_ddc |=_fggc .getPixel (_fggc .RegionBitmap ,_abg +int (_fggc .GrAtX [0]),_ddf +int (_fggc .GrAtY [0]))<<3;};};if _fggc ._cd [1]{_ddc &=0xefff;if _fggc .GrAtY [1]==0&&int (_fggc .GrAtX [1])>=-_ceb {_ddc |=(_fbc >>uint (7-(_ceb +int (_fggc .GrAtX [1])))&0x1)<<12;
}else {_ddc |=_fggc .getPixel (_fggc .ReferenceBitmap ,_abg +int (_fggc .GrAtX [1]),_ddf +int (_fggc .GrAtY [1]));};};return _ddc ;};func (_fbcg *Header )parse (_fbbc Documenter ,_ebge *_c .Reader ,_efba int64 ,_bdfc OrganizationType )(_accb error ){const _deec ="\u0070\u0061\u0072s\u0065";
_fe .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _accb !=nil {_fe .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_accb );
}else {_fe .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_accb =_ebge .Seek (_efba ,_ea .SeekStart );
if _accb !=nil {return _be .Wrap (_accb ,_deec ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _accb =_fbcg .readSegmentNumber (_ebge );_accb !=nil {return _be .Wrap (_accb ,_deec ,"");};if _accb =_fbcg .readHeaderFlags ();_accb !=nil {return _be .Wrap (_accb ,_deec ,"");
};var _acdb uint64 ;_acdb ,_accb =_fbcg .readNumberOfReferredToSegments (_ebge );if _accb !=nil {return _be .Wrap (_accb ,_deec ,"");};_fbcg .RTSNumbers ,_accb =_fbcg .readReferredToSegmentNumbers (_ebge ,int (_acdb ));if _accb !=nil {return _be .Wrap (_accb ,_deec ,"");
};_accb =_fbcg .readSegmentPageAssociation (_fbbc ,_ebge ,_acdb ,_fbcg .RTSNumbers ...);if _accb !=nil {return _be .Wrap (_accb ,_deec ,"");};if _fbcg .Type !=TEndOfFile {if _accb =_fbcg .readSegmentDataLength (_ebge );_accb !=nil {return _be .Wrap (_accb ,_deec ,"");
};};_fbcg .readDataStartOffset (_ebge ,_bdfc );_fbcg .readHeaderLength (_ebge ,_efba );_fe .Log .Trace ("\u0025\u0073",_fbcg );return nil ;};type OrganizationType uint8 ;func (_gebf *PageInformationSegment )readWidthAndHeight ()error {_ddb ,_abb :=_gebf ._fdcb .ReadBits (32);
if _abb !=nil {return _abb ;};_gebf .PageBMWidth =int (_ddb &_b .MaxInt32 );_ddb ,_abb =_gebf ._fdcb .ReadBits (32);if _abb !=nil {return _abb ;};_gebf .PageBMHeight =int (_ddb &_b .MaxInt32 );return nil ;};func (_fgbf *TextRegion )computeSymbolCodeLength ()error {if _fgbf .IsHuffmanEncoded {return _fgbf .symbolIDCodeLengths ();
};_fgbf ._ddbf =int8 (_b .Ceil (_b .Log (float64 (_fgbf .NumberOfSymbols ))/_b .Log (2)));return nil ;};func (_gdbef *PageInformationSegment )Init (h *Header ,r *_c .Reader )(_eff error ){_gdbef ._fdcb =r ;if _eff =_gdbef .parseHeader ();_eff !=nil {return _be .Wrap (_eff ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_ddebf *PatternDictionary )readIsMMREncoded ()error {_ccgc ,_gffe :=_ddebf ._fbgg .ReadBit ();if _gffe !=nil {return _gffe ;};if _ccgc !=0{_ddebf .IsMMREncoded =true ;};return nil ;};func (_eaag *SymbolDictionary )setSymbolsArray ()error {if _eaag ._cbf ==nil {if _adfg :=_eaag .retrieveImportSymbols ();
_adfg !=nil {return _adfg ;};};if _eaag ._egbg ==nil {_eaag ._egbg =append (_eaag ._egbg ,_eaag ._cbf ...);};return nil ;};func (_fad *HalftoneRegion )combineGrayscalePlanes (_bbab []*_d .Bitmap ,_agb int )error {_aaag :=0;for _dbab :=0;_dbab < _bbab [_agb ].Height ;
_dbab ++{for _bgc :=0;_bgc < _bbab [_agb ].Width ;_bgc +=8{_fcd ,_ccc :=_bbab [_agb +1].GetByte (_aaag );if _ccc !=nil {return _ccc ;};_ebec ,_ccc :=_bbab [_agb ].GetByte (_aaag );if _ccc !=nil {return _ccc ;};_ccc =_bbab [_agb ].SetByte (_aaag ,_d .CombineBytes (_ebec ,_fcd ,_d .CmbOpXor ));
if _ccc !=nil {return _ccc ;};_aaag ++;};};return nil ;};func (_baed *PageInformationSegment )encodeStripingInformation (_bea _c .BinaryWriter )(_dec int ,_efd error ){const _ggba ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_baed .IsStripe {if _dec ,_efd =_bea .Write ([]byte {0x00,0x00});_efd !=nil {return 0,_be .Wrap (_efd ,_ggba ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dec ,nil ;};_gfgg :=make ([]byte ,2);_a .BigEndian .PutUint16 (_gfgg ,_baed .MaxStripeSize |1<<15);
if _dec ,_efd =_bea .Write (_gfgg );_efd !=nil {return 0,_be .Wrapf (_efd ,_ggba ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_baed .MaxStripeSize );};return _dec ,nil ;};func (_befa *PageInformationSegment )readDefaultPixelValue ()error {_bfde ,_agcg :=_befa ._fdcb .ReadBit ();
if _agcg !=nil {return _agcg ;};_befa .DefaultPixelValue =uint8 (_bfde &0xf);return nil ;};func (_fce *GenericRegion )copyLineAbove (_bec int )error {_eda :=_bec *_fce .Bitmap .RowStride ;_bfab :=_eda -_fce .Bitmap .RowStride ;for _eed :=0;_eed < _fce .Bitmap .RowStride ;
_eed ++{_fcca ,_edb :=_fce .Bitmap .GetByte (_bfab );if _edb !=nil {return _edb ;};_bfab ++;if _edb =_fce .Bitmap .SetByte (_eda ,_fcca );_edb !=nil {return _edb ;};_eda ++;};return nil ;};func (_aegg *TextRegion )decodeCurrentT ()(int64 ,error ){if _aegg .SbStrips !=1{if _aegg .IsHuffmanEncoded {_abce ,_gcbe :=_aegg ._deef .ReadBits (byte (_aegg .LogSBStrips ));
return int64 (_abce ),_gcbe ;};_faca ,_bead :=_aegg ._dgfa .DecodeInt (_aegg ._cgbf );if _bead !=nil {return 0,_bead ;};return int64 (_faca ),nil ;};return 0,nil ;};func (_eaf *template0 )form (_fbg ,_cggg ,_ffab ,_adc ,_cbbc int16 )int16 {return (_fbg <<10)|(_cggg <<7)|(_ffab <<4)|(_adc <<1)|_cbbc ;
};func (_gfd *GenericRegion )setOverrideFlag (_gadf int ){_gfd .GBAtOverride [_gadf ]=true ;_gfd ._aef =true ;};func (_dbaad *Header )GetSegmentData ()(Segmenter ,error ){var _ggbf Segmenter ;if _dbaad .SegmentData !=nil {_ggbf =_dbaad .SegmentData ;};
if _ggbf ==nil {_dfd ,_degd :=_ebce [_dbaad .Type ];if !_degd {return nil ,_bf .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dbaad .Type ,_dbaad .Type );
};_ggbf =_dfd ();_fe .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dbaad .SegmentNumber ,_dbaad .SegmentDataStartOffset );
_bgec ,_dbc :=_dbaad .subInputReader ();if _dbc !=nil {return nil ,_dbc ;};if _dccd :=_ggbf .Init (_dbaad ,_bgec );_dccd !=nil {_fe .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_dccd ,_ggbf );
return nil ,_dccd ;};_dbaad .SegmentData =_ggbf ;};return _ggbf ,nil ;};func (_fbe *HalftoneRegion )grayScaleDecoding (_bdga int )([][]int ,error ){var (_fcac []int8 ;_ada []int8 ;);if !_fbe .IsMMREncoded {_fcac =make ([]int8 ,4);_ada =make ([]int8 ,4);
if _fbe .HTemplate <=1{_fcac [0]=3;}else if _fbe .HTemplate >=2{_fcac [0]=2;};_ada [0]=-1;_fcac [1]=-3;_ada [1]=-1;_fcac [2]=2;_ada [2]=-2;_fcac [3]=-2;_ada [3]=-2;};_ccb :=make ([]*_d .Bitmap ,_bdga );_bgd :=NewGenericRegion (_fbe ._fcbff );_bgd .setParametersMMR (_fbe .IsMMREncoded ,_fbe .DataOffset ,_fbe .DataLength ,_fbe .HGridHeight ,_fbe .HGridWidth ,_fbe .HTemplate ,false ,_fbe .HSkipEnabled ,_fcac ,_ada );
_bdbab :=_bdga -1;var _fag error ;_ccb [_bdbab ],_fag =_bgd .GetRegionBitmap ();if _fag !=nil {return nil ,_fag ;};for _bdbab > 0{_bdbab --;_bgd .Bitmap =nil ;_ccb [_bdbab ],_fag =_bgd .GetRegionBitmap ();if _fag !=nil {return nil ,_fag ;};if _fag =_fbe .combineGrayscalePlanes (_ccb ,_bdbab );
_fag !=nil {return nil ,_fag ;};};return _fbe .computeGrayScalePlanes (_ccb ,_bdga );};func (_aagb *TableSegment )parseHeader ()error {var (_eafc int ;_ccfg uint64 ;_aadgg error ;);_eafc ,_aadgg =_aagb ._ggef .ReadBit ();if _aadgg !=nil {return _aadgg ;
};if _eafc ==1{return _bf .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_eafc );
};if _ccfg ,_aadgg =_aagb ._ggef .ReadBits (3);_aadgg !=nil {return _aadgg ;};_aagb ._bdad =(int32 (_ccfg )+1)&0xf;if _ccfg ,_aadgg =_aagb ._ggef .ReadBits (3);_aadgg !=nil {return _aadgg ;};_aagb ._dcgd =(int32 (_ccfg )+1)&0xf;if _ccfg ,_aadgg =_aagb ._ggef .ReadBits (32);
_aadgg !=nil {return _aadgg ;};_aagb ._dbeb =int32 (_ccfg &_b .MaxInt32 );if _ccfg ,_aadgg =_aagb ._ggef .ReadBits (32);_aadgg !=nil {return _aadgg ;};_aagb ._fagaa =int32 (_ccfg &_b .MaxInt32 );return nil ;};func (_ddcd *PatternDictionary )checkInput ()error {if _ddcd .HdpHeight < 1||_ddcd .HdpWidth < 1{return _ef .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ddcd .IsMMREncoded {if _ddcd .HDTemplate !=0{_fe .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cbac *Header )writeReferredToSegments (_cae _c .BinaryWriter )(_cdc int ,_agdcg error ){const _cgec ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_dcfd uint16 ;_dcbc uint32 ;);_fgag :=_cbac .referenceSize ();_abeb :=1;_beee :=make ([]byte ,_fgag );for _ ,_aged :=range _cbac .RTSNumbers {switch _fgag {case 4:_dcbc =uint32 (_aged );_a .BigEndian .PutUint32 (_beee ,_dcbc );_abeb ,_agdcg =_cae .Write (_beee );
if _agdcg !=nil {return 0,_be .Wrap (_agdcg ,_cgec ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_dcfd =uint16 (_aged );_a .BigEndian .PutUint16 (_beee ,_dcfd );_abeb ,_agdcg =_cae .Write (_beee );if _agdcg !=nil {return 0,_be .Wrap (_agdcg ,_cgec ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _agdcg =_cae .WriteByte (byte (_aged ));_agdcg !=nil {return 0,_be .Wrap (_agdcg ,_cgec ,"\u0075\u0069\u006et\u0038");};};_cdc +=_abeb ;};return _cdc ,nil ;};var _ templater =&template0 {};func (_efdee *TextRegion )Encode (w _c .BinaryWriter )(_aefd int ,_dfcg error ){const _dagfg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _aefd ,_dfcg =_efdee .RegionInfo .Encode (w );_dfcg !=nil {return _aefd ,_be .Wrap (_dfcg ,_dagfg ,"");};var _agcb int ;if _agcb ,_dfcg =_efdee .encodeFlags (w );_dfcg !=nil {return _aefd ,_be .Wrap (_dfcg ,_dagfg ,"");};_aefd +=_agcb ;if _agcb ,_dfcg =_efdee .encodeSymbols (w );
_dfcg !=nil {return _aefd ,_be .Wrap (_dfcg ,_dagfg ,"");};_aefd +=_agcb ;return _aefd ,nil ;};func (_bfa *GenericRefinementRegion )getGrReference ()(*_d .Bitmap ,error ){segments :=_bfa ._gb .RTSegments ;if len (segments )==0{return nil ,_ef .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_bga ,_afa :=segments [0].GetSegmentData ();if _afa !=nil {return nil ,_afa ;};_gc ,_dc :=_bga .(Regioner );if !_dc {return nil ,_bf .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bga );
};return _gc .GetRegionBitmap ();};func (_ffcgd *PatternDictionary )readTemplate ()error {_agag ,_fdaa :=_ffcgd ._fbgg .ReadBits (2);if _fdaa !=nil {return _fdaa ;};_ffcgd .HDTemplate =byte (_agag );return nil ;};func (_aeba *SymbolDictionary )encodeFlags (_fdbcc _c .BinaryWriter )(_cfbc int ,_fedg error ){const _aebf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fedg =_fdbcc .SkipBits (3);_fedg !=nil {return 0,_be .Wrap (_fedg ,_aebf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ead int ;if _aeba .SdrTemplate > 0{_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_ead =0;if _aeba .SdTemplate > 1{_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ead =0;if _aeba .SdTemplate ==1||_aeba .SdTemplate ==3{_ead =1;
};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ead =0;if _aeba ._gdc {_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ead =0;if _aeba ._fcfb {_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ead =0;if _aeba .SdHuffAggInstanceSelection {_ead =1;
};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ead =int (_aeba .SdHuffBMSizeSelection );if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_ead =0;if _aeba .SdHuffDecodeWidthSelection > 1{_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ead =0;switch _aeba .SdHuffDecodeWidthSelection {case 1,3:_ead =1;
};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ead =0;if _aeba .SdHuffDecodeHeightSelection > 1{_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_ead =0;switch _aeba .SdHuffDecodeHeightSelection {case 1,3:_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ead =0;if _aeba .UseRefinementAggregation {_ead =1;
};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ead =0;if _aeba .IsHuffmanEncoded {_ead =1;};if _fedg =_fdbcc .WriteBit (_ead );_fedg !=nil {return _cfbc ,_be .Wrap (_fedg ,_aebf ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_daaf *HalftoneRegion )shiftAndFill (_fbec int )int {_fbec >>=8;if _fbec < 0{_edbc :=int (_b .Log (float64 (_fccc (_fbec )))/_b .Log (2));_adge :=31-_edbc ;for _egaa :=1;_egaa < _adge ;_egaa ++{_fbec |=1<<uint (31-_egaa );};};return _fbec ;
};func (_agda *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fbda :=range _agda .Header .RTSegments {if _fbda .Type ==0{_cdba ,_adcc :=_fbda .GetSegmentData ();if _adcc !=nil {return _adcc ;};_dbe ,_fcae :=_cdba .(*SymbolDictionary );if !_fcae {return _bf .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cdba );
};_eacfg ,_adcc :=_dbe .GetDictionary ();if _adcc !=nil {return _bf .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fbda .SegmentNumber ,_adcc .Error ());
};_agda ._cbf =append (_agda ._cbf ,_eacfg ...);_agda ._eacb +=_dbe .NumberOfExportedSymbols ;};};return nil ;};func (_eagad *SymbolDictionary )setRefinementAtPixels ()error {if !_eagad .UseRefinementAggregation ||_eagad .SdrTemplate !=0{return nil ;};
if _gdce :=_eagad .readRefinementAtPixels (2);_gdce !=nil {return _gdce ;};return nil ;};func (_fggbg *Header )writeSegmentDataLength (_bccc _c .BinaryWriter )(_adbd int ,_accg error ){_ccca :=make ([]byte ,4);_a .BigEndian .PutUint32 (_ccca ,uint32 (_fggbg .SegmentDataLength ));
if _adbd ,_accg =_bccc .Write (_ccca );_accg !=nil {return 0,_be .Wrap (_accg ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _adbd ,nil ;
};func (_cdea *SymbolDictionary )encodeNumSyms (_geec _c .BinaryWriter )(_aeg int ,_aafg error ){const _dgf ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aagg :=make ([]byte ,4);_a .BigEndian .PutUint32 (_aagg ,_cdea .NumberOfExportedSymbols );
if _aeg ,_aafg =_geec .Write (_aagg );_aafg !=nil {return _aeg ,_be .Wrap (_aafg ,_dgf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_a .BigEndian .PutUint32 (_aagg ,_cdea .NumberOfNewSymbols );_ffagg ,_aafg :=_geec .Write (_aagg );
if _aafg !=nil {return _aeg ,_be .Wrap (_aafg ,_dgf ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _aeg +_ffagg ,nil ;};func (_cfe *GenericRefinementRegion )decodeTemplate (_bbe ,_cfea ,_gbc ,_bgg ,_cbd ,_ccg ,_ecd ,_adg ,_ecdg ,_ab int ,_ecg templater )(_bfd error ){var (_gcg ,_ffgb ,_gafd ,_fbd ,_df int16 ;
_gdb ,_bcf ,_gcf ,_ee int ;_bbag byte ;);if _ecdg >=1&&(_ecdg -1)< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -_bgg );if _bfd !=nil {return _bfd ;};_gdb =int (_bbag );};if _ecdg >=0&&(_ecdg )< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab );
if _bfd !=nil {return _bfd ;};_bcf =int (_bbag );};if _ecdg >=-1&&(_ecdg +1)< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab +_bgg );if _bfd !=nil {return _bfd ;};_gcf =int (_bbag );};_ab ++;if _bbe >=1{_bbag ,_bfd =_cfe .RegionBitmap .GetByte (_adg -_gbc );
if _bfd !=nil {return _bfd ;};_ee =int (_bbag );};_adg ++;_fgd :=_cfe .ReferenceDX %8;_feg :=6+_fgd ;_aea :=_ab %_bgg ;if _feg >=0{if _feg < 8{_gcg =int16 (_gdb >>uint (_feg ))&0x07;};if _feg < 8{_ffgb =int16 (_bcf >>uint (_feg ))&0x07;};if _feg < 8{_gafd =int16 (_gcf >>uint (_feg ))&0x07;
};if _feg ==6&&_aea > 1{if _ecdg >=1&&(_ecdg -1)< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -_bgg -2);if _bfd !=nil {return _bfd ;};_gcg |=int16 (_bbag <<2)&0x04;};if _ecdg >=0&&_ecdg < _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -2);
if _bfd !=nil {return _bfd ;};_ffgb |=int16 (_bbag <<2)&0x04;};if _ecdg >=-1&&_ecdg +1< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab +_bgg -2);if _bfd !=nil {return _bfd ;};_gafd |=int16 (_bbag <<2)&0x04;};};if _feg ==0{_gdb =0;
_bcf =0;_gcf =0;if _aea < _bgg -1{if _ecdg >=1&&_ecdg -1< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -_bgg );if _bfd !=nil {return _bfd ;};_gdb =int (_bbag );};if _ecdg >=0&&_ecdg < _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab );
if _bfd !=nil {return _bfd ;};_bcf =int (_bbag );};if _ecdg >=-1&&_ecdg +1< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab +_bgg );if _bfd !=nil {return _bfd ;};_gcf =int (_bbag );};};_ab ++;};}else {_gcg =int16 (_gdb <<1)&0x07;
_ffgb =int16 (_bcf <<1)&0x07;_gafd =int16 (_gcf <<1)&0x07;_gdb =0;_bcf =0;_gcf =0;if _aea < _bgg -1{if _ecdg >=1&&_ecdg -1< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -_bgg );if _bfd !=nil {return _bfd ;};_gdb =int (_bbag );
};if _ecdg >=0&&_ecdg < _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab );if _bfd !=nil {return _bfd ;};_bcf =int (_bbag );};if _ecdg >=-1&&_ecdg +1< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab +_bgg );
if _bfd !=nil {return _bfd ;};_gcf =int (_bbag );};_ab ++;};_gcg |=int16 ((_gdb >>7)&0x07);_ffgb |=int16 ((_bcf >>7)&0x07);_gafd |=int16 ((_gcf >>7)&0x07);};_fbd =int16 (_ee >>6);_df =0;_ecef :=(2-_fgd )%8;_gdb <<=uint (_ecef );_bcf <<=uint (_ecef );_gcf <<=uint (_ecef );
_ee <<=2;var _fdd int ;for _bdf :=0;_bdf < _cfea ;_bdf ++{_dgg :=_bdf &0x07;_fgc :=_ecg .form (_gcg ,_ffgb ,_gafd ,_fbd ,_df );if _cfe ._fee {_bbag ,_bfd =_cfe .RegionBitmap .GetByte (_cfe .RegionBitmap .GetByteIndex (_bdf ,_bbe ));if _bfd !=nil {return _bfd ;
};_cfe ._gde .SetIndex (int32 (_cfe .overrideAtTemplate0 (int (_fgc ),_bdf ,_bbe ,int (_bbag ),_dgg )));}else {_cfe ._gde .SetIndex (int32 (_fgc ));};_fdd ,_bfd =_cfe ._dg .DecodeBit (_cfe ._gde );if _bfd !=nil {return _bfd ;};if _bfd =_cfe .RegionBitmap .SetPixel (_bdf ,_bbe ,byte (_fdd ));
_bfd !=nil {return _bfd ;};_gcg =((_gcg <<1)|0x01&int16 (_gdb >>7))&0x07;_ffgb =((_ffgb <<1)|0x01&int16 (_bcf >>7))&0x07;_gafd =((_gafd <<1)|0x01&int16 (_gcf >>7))&0x07;_fbd =((_fbd <<1)|0x01&int16 (_ee >>7))&0x07;_df =int16 (_fdd );if (_bdf -int (_cfe .ReferenceDX ))%8==5{_gdb =0;
_bcf =0;_gcf =0;if ((_bdf -int (_cfe .ReferenceDX ))/8)+1< _cfe .ReferenceBitmap .RowStride {if _ecdg >=1&&(_ecdg -1)< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab -_bgg );if _bfd !=nil {return _bfd ;};_gdb =int (_bbag );
};if _ecdg >=0&&_ecdg < _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab );if _bfd !=nil {return _bfd ;};_bcf =int (_bbag );};if _ecdg >=-1&&(_ecdg +1)< _cfe .ReferenceBitmap .Height {_bbag ,_bfd =_cfe .ReferenceBitmap .GetByte (_ab +_bgg );
if _bfd !=nil {return _bfd ;};_gcf =int (_bbag );};};_ab ++;}else {_gdb <<=1;_bcf <<=1;_gcf <<=1;};if _dgg ==5&&_bbe >=1{if ((_bdf >>3)+1)>=_cfe .RegionBitmap .RowStride {_ee =0;}else {_bbag ,_bfd =_cfe .RegionBitmap .GetByte (_adg -_gbc );if _bfd !=nil {return _bfd ;
};_ee =int (_bbag );};_adg ++;}else {_ee <<=1;};};return nil ;};func (_egfba *TextRegion )decodeRdw ()(int64 ,error ){const _fcdd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _egfba .IsHuffmanEncoded {if _egfba .SbHuffRDWidth ==3{if _egfba ._bgeg ==nil {var (_abf int ;
_dgca error ;);if _egfba .SbHuffFS ==3{_abf ++;};if _egfba .SbHuffDS ==3{_abf ++;};if _egfba .SbHuffDT ==3{_abf ++;};_egfba ._bgeg ,_dgca =_egfba .getUserTable (_abf );if _dgca !=nil {return 0,_be .Wrap (_dgca ,_fcdd ,"");};};return _egfba ._bgeg .Decode (_egfba ._deef );
};_bfga ,_eefb :=_bed .GetStandardTable (14+int (_egfba .SbHuffRDWidth ));if _eefb !=nil {return 0,_be .Wrap (_eefb ,_fcdd ,"");};return _bfga .Decode (_egfba ._deef );};_cddc ,_ffda :=_egfba ._dgfa .DecodeInt (_egfba ._eabg );if _ffda !=nil {return 0,_be .Wrap (_ffda ,_fcdd ,"");
};return int64 (_cddc ),nil ;};var (_bfbf Segmenter ;_ebce =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bfbf },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bfbf },TProfiles :func ()Segmenter {return _bfbf },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bfbf },TBitmap :func ()Segmenter {return _bfbf }};
);func (_fdafd *TextRegion )GetRegionInfo ()*RegionSegment {return _fdafd .RegionInfo };func (_ageaf *Header )readSegmentDataLength (_fdb *_c .Reader )(_dggb error ){_ageaf .SegmentDataLength ,_dggb =_fdb .ReadBits (32);if _dggb !=nil {return _dggb ;};
_ageaf .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_edca *Header )subInputReader ()(*_c .Reader ,error ){_dcag :=int (_edca .SegmentDataLength );if _edca .SegmentDataLength ==_b .MaxInt32 {_dcag =-1;};return _edca .Reader .NewPartialReader (int (_edca .SegmentDataStartOffset ),_dcag ,false );
};func (_afeb *TableSegment )HtPS ()int32 {return _afeb ._dcgd };func (_edag *HalftoneRegion )computeGrayScalePlanes (_fggb []*_d .Bitmap ,_cdaf int )([][]int ,error ){_acgc :=make ([][]int ,_edag .HGridHeight );for _beg :=0;_beg < len (_acgc );_beg ++{_acgc [_beg ]=make ([]int ,_edag .HGridWidth );
};for _adb :=0;_adb < int (_edag .HGridHeight );_adb ++{for _cdad :=0;_cdad < int (_edag .HGridWidth );_cdad +=8{var _dggf int ;if _cddf :=int (_edag .HGridWidth )-_cdad ;_cddf > 8{_dggf =8;}else {_dggf =_cddf ;};_dacd :=_fggb [0].GetByteIndex (_cdad ,_adb );
for _cdeg :=0;_cdeg < _dggf ;_cdeg ++{_bdef :=_cdeg +_cdad ;_acgc [_adb ][_bdef ]=0;for _bdag :=0;_bdag < _cdaf ;_bdag ++{_ffaf ,_adcf :=_fggb [_bdag ].GetByte (_dacd );if _adcf !=nil {return nil ,_adcf ;};_ffae :=_ffaf >>uint (7-_bdef &7);_ebdab :=_ffae &1;
_debd :=1<<uint (_bdag );_bcfe :=int (_ebdab )*_debd ;_acgc [_adb ][_bdef ]+=_bcfe ;};};};};return _acgc ,nil ;};func (_gadaf *HalftoneRegion )GetRegionBitmap ()(*_d .Bitmap ,error ){if _gadaf .HalftoneRegionBitmap !=nil {return _gadaf .HalftoneRegionBitmap ,nil ;
};var _dbba error ;_gadaf .HalftoneRegionBitmap =_d .New (int (_gadaf .RegionSegment .BitmapWidth ),int (_gadaf .RegionSegment .BitmapHeight ));if _gadaf .Patterns ==nil ||len (_gadaf .Patterns )==0{_gadaf .Patterns ,_dbba =_gadaf .GetPatterns ();if _dbba !=nil {return nil ,_dbba ;
};};if _gadaf .HDefaultPixel ==1{_gadaf .HalftoneRegionBitmap .SetDefaultPixel ();};_gdf :=_b .Ceil (_b .Log (float64 (len (_gadaf .Patterns )))/_b .Log (2));_bbbf :=int (_gdf );var _ffb [][]int ;_ffb ,_dbba =_gadaf .grayScaleDecoding (_bbbf );if _dbba !=nil {return nil ,_dbba ;
};if _dbba =_gadaf .renderPattern (_ffb );_dbba !=nil {return nil ,_dbba ;};return _gadaf .HalftoneRegionBitmap ,nil ;};func (_eedg *TextRegion )readRegionFlags ()error {var (_eedd int ;_ccce uint64 ;_aefe error ;);_eedd ,_aefe =_eedg ._deef .ReadBit ();
if _aefe !=nil {return _aefe ;};_eedg .SbrTemplate =int8 (_eedd );_ccce ,_aefe =_eedg ._deef .ReadBits (5);if _aefe !=nil {return _aefe ;};_eedg .SbDsOffset =int8 (_ccce );if _eedg .SbDsOffset > 0x0f{_eedg .SbDsOffset -=0x20;};_eedd ,_aefe =_eedg ._deef .ReadBit ();
if _aefe !=nil {return _aefe ;};_eedg .DefaultPixel =int8 (_eedd );_ccce ,_aefe =_eedg ._deef .ReadBits (2);if _aefe !=nil {return _aefe ;};_eedg .CombinationOperator =_d .CombinationOperator (int (_ccce )&0x3);_eedd ,_aefe =_eedg ._deef .ReadBit ();if _aefe !=nil {return _aefe ;
};_eedg .IsTransposed =int8 (_eedd );_ccce ,_aefe =_eedg ._deef .ReadBits (2);if _aefe !=nil {return _aefe ;};_eedg .ReferenceCorner =int16 (_ccce )&0x3;_ccce ,_aefe =_eedg ._deef .ReadBits (2);if _aefe !=nil {return _aefe ;};_eedg .LogSBStrips =int16 (_ccce )&0x3;
_eedg .SbStrips =1<<uint (_eedg .LogSBStrips );_eedd ,_aefe =_eedg ._deef .ReadBit ();if _aefe !=nil {return _aefe ;};if _eedd ==1{_eedg .UseRefinement =true ;};_eedd ,_aefe =_eedg ._deef .ReadBit ();if _aefe !=nil {return _aefe ;};if _eedd ==1{_eedg .IsHuffmanEncoded =true ;
};return nil ;};func (_gce *GenericRefinementRegion )parseHeader ()(_dff error ){_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_egab :=_eb .Now ();defer func (){if _dff ==nil {_fe .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_eb .Since (_egab ).Nanoseconds ());
}else {_fe .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dff );
};}();if _dff =_gce .RegionInfo .parseHeader ();_dff !=nil {return _dff ;};_ ,_dff =_gce ._aga .ReadBits (6);if _dff !=nil {return _dff ;};_gce .IsTPGROn ,_dff =_gce ._aga .ReadBool ();if _dff !=nil {return _dff ;};var _bcd int ;_bcd ,_dff =_gce ._aga .ReadBit ();
if _dff !=nil {return _dff ;};_gce .TemplateID =int8 (_bcd );switch _gce .TemplateID {case 0:_gce .Template =_gce ._fa ;if _dff =_gce .readAtPixels ();_dff !=nil {return _dff ;};case 1:_gce .Template =_gce ._ga ;};return nil ;};func (_ffag *HalftoneRegion )computeX (_feab ,_bad int )int {return _ffag .shiftAndFill (int (_ffag .HGridX )+_feab *int (_ffag .HRegionY )+_bad *int (_ffag .HRegionX ));
};func (_dabe *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _dabe ._gbffe };type PatternDictionary struct{_fbgg *_c .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;
GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_d .Bitmap ;GrayMax uint32 ;};func NewGenericRegion (r *_c .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cefb :r };};func (_cf *GenericRefinementRegion )decodeOptimized (_eag ,_fc ,_da ,_eagf ,_gba ,_bce ,_aec int )error {var (_ba error ;
_fef int ;_bag int ;);_cec :=_eag -int (_cf .ReferenceDY );if _cde :=int (-_cf .ReferenceDX );_cde > 0{_fef =_cde ;};_cba :=_cf .ReferenceBitmap .GetByteIndex (_fef ,_cec );if _cf .ReferenceDX > 0{_bag =int (_cf .ReferenceDX );};_aecf :=_cf .RegionBitmap .GetByteIndex (_bag ,_eag );
switch _cf .TemplateID {case 0:_ba =_cf .decodeTemplate (_eag ,_fc ,_da ,_eagf ,_gba ,_bce ,_aec ,_aecf ,_cec ,_cba ,_cf ._fa );case 1:_ba =_cf .decodeTemplate (_eag ,_fc ,_da ,_eagf ,_gba ,_bce ,_aec ,_aecf ,_cec ,_cba ,_cf ._ga );};return _ba ;};func (_bdebe *TextRegion )encodeSymbols (_fabf _c .BinaryWriter )(_dddac int ,_fcaea error ){const _dcge ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_adgd :=make ([]byte ,4);_a .BigEndian .PutUint32 (_adgd ,_bdebe .NumberOfSymbols );if _dddac ,_fcaea =_fabf .Write (_adgd );_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_dbee ,_fcaea :=_d .NewClassedPoints (_bdebe ._dffg ,_bdebe ._gfeg );if _fcaea !=nil {return 0,_be .Wrap (_fcaea ,_dcge ,"");};var _cdcb ,_abbb int ;_ffba :=_ge .New ();_ffba .Init ();if _fcaea =_ffba .EncodeInteger (_ge .IADT ,0);_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bbbb ,_fcaea :=_dbee .GroupByY ();if _fcaea !=nil {return 0,_be .Wrap (_fcaea ,_dcge ,"");};for _ ,_adfe :=range _bbbb {_dgdba :=int (_adfe .YAtIndex (0));_fcad :=_dgdba -_cdcb ;if _fcaea =_ffba .EncodeInteger (_ge .IADT ,_fcad );_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"");
};var _abafe int ;for _dacb ,_cggd :=range _adfe .IntSlice {switch _dacb {case 0:_cedb :=int (_adfe .XAtIndex (_dacb ))-_abbb ;if _fcaea =_ffba .EncodeInteger (_ge .IAFS ,_cedb );_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"");};_abbb +=_cedb ;
_abafe =_abbb ;default:_dgcf :=int (_adfe .XAtIndex (_dacb ))-_abafe ;if _fcaea =_ffba .EncodeInteger (_ge .IADS ,_dgcf );_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"");};_abafe +=_dgcf ;};_bdbabd ,_bfce :=_bdebe ._gceb .Get (_cggd );if _bfce !=nil {return _dddac ,_be .Wrap (_bfce ,_dcge ,"");
};_aaacf ,_faae :=_bdebe ._bcba [_bdbabd ];if !_faae {_aaacf ,_faae =_bdebe ._degfd [_bdbabd ];if !_faae {return _dddac ,_be .Errorf (_dcge ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bdbabd );
};};if _bfce =_ffba .EncodeIAID (_bdebe ._cdegd ,_aaacf );_bfce !=nil {return _dddac ,_be .Wrap (_bfce ,_dcge ,"");};};if _fcaea =_ffba .EncodeOOB (_ge .IADS );_fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"");};};_ffba .Final ();_ebfb ,_fcaea :=_ffba .WriteTo (_fabf );
if _fcaea !=nil {return _dddac ,_be .Wrap (_fcaea ,_dcge ,"");};_dddac +=int (_ebfb );return _dddac ,nil ;};type Type int ;func (_acd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_faa ,_bagg ,_fcc ,_gaf ,_ed ,_gg ,_edd ,_egd ,_fab int )error {var (_bfae ,_gga ,_fb ,_ff ,_ffd ,_cecg int ;
_cbb byte ;_dab error ;);if _faa > 0{_cbb ,_dab =_acd .RegionBitmap .GetByte (_edd -_fcc );if _dab !=nil {return _dab ;};_fb =int (_cbb );};if _egd > 0&&_egd <=_acd .ReferenceBitmap .Height {_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab -_gaf +_gg );
if _dab !=nil {return _dab ;};_ff =int (_cbb )<<4;};if _egd >=0&&_egd < _acd .ReferenceBitmap .Height {_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab +_gg );if _dab !=nil {return _dab ;};_ffd =int (_cbb )<<1;};if _egd > -2&&_egd < _acd .ReferenceBitmap .Height -1{_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab +_gaf +_gg );
if _dab !=nil {return _dab ;};_cecg =int (_cbb );};_bfae =((_fb >>5)&0x6)|((_cecg >>2)&0x30)|(_ffd &0x180)|(_ff &0xc00);var _cc int ;for _fcb :=0;_fcb < _ed ;_fcb =_cc {var _gac int ;_cc =_fcb +8;var _edc int ;if _edc =_bagg -_fcb ;_edc > 8{_edc =8;};_cbea :=_cc < _bagg ;
_fga :=_cc < _acd .ReferenceBitmap .Width ;_db :=_gg +1;if _faa > 0{_cbb =0;if _cbea {_cbb ,_dab =_acd .RegionBitmap .GetByte (_edd -_fcc +1);if _dab !=nil {return _dab ;};};_fb =(_fb <<8)|int (_cbb );};if _egd > 0&&_egd <=_acd .ReferenceBitmap .Height {var _ede int ;
if _fga {_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab -_gaf +_db );if _dab !=nil {return _dab ;};_ede =int (_cbb )<<4;};_ff =(_ff <<8)|_ede ;};if _egd >=0&&_egd < _acd .ReferenceBitmap .Height {var _fge int ;if _fga {_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab +_db );
if _dab !=nil {return _dab ;};_fge =int (_cbb )<<1;};_ffd =(_ffd <<8)|_fge ;};if _egd > -2&&_egd < (_acd .ReferenceBitmap .Height -1){_cbb =0;if _fga {_cbb ,_dab =_acd .ReferenceBitmap .GetByte (_fab +_gaf +_db );if _dab !=nil {return _dab ;};};_cecg =(_cecg <<8)|int (_cbb );
};for _dae :=0;_dae < _edc ;_dae ++{var _fff int ;_aed :=false ;_bb :=(_bfae >>4)&0x1ff;if _bb ==0x1ff{_aed =true ;_fff =1;}else if _bb ==0x00{_aed =true ;};if !_aed {if _acd ._fee {_gga =_acd .overrideAtTemplate0 (_bfae ,_fcb +_dae ,_faa ,_gac ,_dae );
_acd ._gde .SetIndex (int32 (_gga ));}else {_acd ._gde .SetIndex (int32 (_bfae ));};_fff ,_dab =_acd ._dg .DecodeBit (_acd ._gde );if _dab !=nil {return _dab ;};};_dbb :=uint (7-_dae );_gac |=_fff <<_dbb ;_bfae =((_bfae &0xdb6)<<1)|_fff |(_fb >>_dbb +5)&0x002|((_cecg >>_dbb +2)&0x010)|((_ffd >>_dbb )&0x080)|((_ff >>_dbb )&0x400);
};_dab =_acd .RegionBitmap .SetByte (_edd ,byte (_gac ));if _dab !=nil {return _dab ;};_edd ++;_fab ++;};return nil ;};func (_dead *TextRegion )decodeIds ()(int64 ,error ){const _dgad ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dead .IsHuffmanEncoded {if _dead .SbHuffDS ==3{if _dead ._eafce ==nil {_aebgg :=0;
if _dead .SbHuffFS ==3{_aebgg ++;};var _febf error ;_dead ._eafce ,_febf =_dead .getUserTable (_aebgg );if _febf !=nil {return 0,_be .Wrap (_febf ,_dgad ,"");};};return _dead ._eafce .Decode (_dead ._deef );};_fcge ,_fgaf :=_bed .GetStandardTable (8+int (_dead .SbHuffDS ));
if _fgaf !=nil {return 0,_be .Wrap (_fgaf ,_dgad ,"");};return _fcge .Decode (_dead ._deef );};_adde ,_ggdc :=_dead ._dgfa .DecodeInt (_dead ._eaaec );if _ggdc !=nil {return 0,_be .Wrap (_ggdc ,_dgad ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_adde ),nil ;
};func (_dabeb *PatternDictionary )extractPatterns (_fabdf *_d .Bitmap )error {var _deea int ;_cbcf :=make ([]*_d .Bitmap ,_dabeb .GrayMax +1);for _deea <=int (_dabeb .GrayMax ){_fdgb :=int (_dabeb .HdpWidth )*_deea ;_efdf :=_f .Rect (_fdgb ,0,_fdgb +int (_dabeb .HdpWidth ),int (_dabeb .HdpHeight ));
_ceag ,_dcdg :=_d .Extract (_efdf ,_fabdf );if _dcdg !=nil {return _dcdg ;};_cbcf [_deea ]=_ceag ;_deea ++;};_dabeb .Patterns =_cbcf ;return nil ;};func (_feba *template0 )setIndex (_bef *_efa .DecoderStats ){_bef .SetIndex (0x100)};func (_fbed *PageInformationSegment )readIsLossless ()error {_fabg ,_daag :=_fbed ._fdcb .ReadBit ();
if _daag !=nil {return _daag ;};if _fabg ==1{_fbed .IsLossless =true ;};return nil ;};func (_egfg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_cdff ,_cfffd uint32 )error {if _egfg ._ebeb ==nil {_egfg ._ebeb =NewGenericRegion (_egfg ._fage );
};_egfg ._ebeb .setParametersWithAt (false ,byte (_egfg .SdTemplate ),false ,false ,_egfg .SdATX ,_egfg .SdATY ,_cdff ,_cfffd ,_egfg ._dddc ,_egfg ._fbfd );return _egfg .addSymbol (_egfg ._ebeb );};func (_fdc Type )String ()string {switch _fdc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fbcb *GenericRegion )readGBAtPixels (_daca int )error {const _aab ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_fbcb .GBAtX =make ([]int8 ,_daca );_fbcb .GBAtY =make ([]int8 ,_daca );for _acge :=0;_acge < _daca ;_acge ++{_gada ,_ccfb :=_fbcb ._cefb .ReadByte ();if _ccfb !=nil {return _be .Wrapf (_ccfb ,_aab ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_acge );
};_fbcb .GBAtX [_acge ]=int8 (_gada );_gada ,_ccfb =_fbcb ._cefb .ReadByte ();if _ccfb !=nil {return _be .Wrapf (_ccfb ,_aab ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_acge );};_fbcb .GBAtY [_acge ]=int8 (_gada );};return nil ;
};func (_dca *GenericRefinementRegion )String ()string {_afd :=&_fd .Builder {};_afd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_afd .WriteString (_dca .RegionInfo .String ()+"\u000a");_afd .WriteString (_bf .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dca .IsTPGROn ));
_afd .WriteString (_bf .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dca .TemplateID ));_afd .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dca .GrAtX ));
_afd .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dca .GrAtY ));_afd .WriteString (_bf .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dca .ReferenceDX ));
_afd .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dca .ReferenceDY ));return _afd .String ();};func (_eabe *SymbolDictionary )encodeRefinementATFlags (_gbbf _c .BinaryWriter )(_bgcf int ,_gbab error ){const _cdgf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_eabe .UseRefinementAggregation ||_eabe .SdrTemplate !=0{return 0,nil ;};for _efde :=0;_efde < 2;_efde ++{if _gbab =_gbbf .WriteByte (byte (_eabe .SdrATX [_efde ]));_gbab !=nil {return _bgcf ,_be .Wrapf (_gbab ,_cdgf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_efde );
};_bgcf ++;if _gbab =_gbbf .WriteByte (byte (_eabe .SdrATY [_efde ]));_gbab !=nil {return _bgcf ,_be .Wrapf (_gbab ,_cdgf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_efde );};_bgcf ++;};return _bgcf ,nil ;};func (_gffa *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_edbcc ,_fcff :=_gffa ._fdcb .ReadBit ();
if _fcff !=nil {return _fcff ;};if _edbcc ==1{_gffa ._gbffe =true ;};return nil ;};func (_cfdb *template1 )setIndex (_efc *_efa .DecoderStats ){_efc .SetIndex (0x080)};func (_ecgb *PageInformationSegment )readResolution ()error {_fed ,_cdee :=_ecgb ._fdcb .ReadBits (32);
if _cdee !=nil {return _cdee ;};_ecgb .ResolutionX =int (_fed &_b .MaxInt32 );_fed ,_cdee =_ecgb ._fdcb .ReadBits (32);if _cdee !=nil {return _cdee ;};_ecgb .ResolutionY =int (_fed &_b .MaxInt32 );return nil ;};func (_ccae *SymbolDictionary )decodeAggregate (_egbf ,_gdff uint32 )error {var (_bdeb int64 ;
_accbc error ;);if _ccae .IsHuffmanEncoded {_bdeb ,_accbc =_ccae .huffDecodeRefAggNInst ();if _accbc !=nil {return _accbc ;};}else {_gfcf ,_egad :=_ccae ._fbfd .DecodeInt (_ccae ._cfffa );if _egad !=nil {return _egad ;};_bdeb =int64 (_gfcf );};if _bdeb > 1{return _ccae .decodeThroughTextRegion (_egbf ,_gdff ,uint32 (_bdeb ));
}else if _bdeb ==1{return _ccae .decodeRefinedSymbol (_egbf ,_gdff );};return nil ;};func (_daf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_ebfg ,_cfga :=_daf ._fdcb .ReadBit ();if _cfga !=nil {return _cfga ;};if _ebfg ==1{_daf ._ecdc =true ;
};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cffg *TextRegion )readHuffmanFlags ()error {var (_ebeg int ;_ccfa uint64 ;_ebdad error ;);_ ,_ebdad =_cffg ._deef .ReadBit ();if _ebdad !=nil {return _ebdad ;};_ebeg ,_ebdad =_cffg ._deef .ReadBit ();
if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffRSize =int8 (_ebeg );_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffRDY =int8 (_ccfa )&0xf;_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;
};_cffg .SbHuffRDX =int8 (_ccfa )&0xf;_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffRDHeight =int8 (_ccfa )&0xf;_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffRDWidth =int8 (_ccfa )&0xf;
_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffDT =int8 (_ccfa )&0xf;_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffDS =int8 (_ccfa )&0xf;_ccfa ,_ebdad =_cffg ._deef .ReadBits (2);
if _ebdad !=nil {return _ebdad ;};_cffg .SbHuffFS =int8 (_ccfa )&0xf;return nil ;};func (_bca *GenericRefinementRegion )updateOverride ()error {if _bca .GrAtX ==nil ||_bca .GrAtY ==nil {return _ef .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bca .GrAtX )!=len (_bca .GrAtY ){return _ef .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bca ._cd =make ([]bool ,len (_bca .GrAtX ));switch _bca .TemplateID {case 0:if _bca .GrAtX [0]!=-1&&_bca .GrAtY [0]!=-1{_bca ._cd [0]=true ;
_bca ._fee =true ;};if _bca .GrAtX [1]!=-1&&_bca .GrAtY [1]!=-1{_bca ._cd [1]=true ;_bca ._fee =true ;};case 1:_bca ._fee =false ;};return nil ;};func (_gbagf *TextRegion )readUseRefinement ()error {if !_gbagf .UseRefinement ||_gbagf .SbrTemplate !=0{return nil ;
};var (_acff byte ;_afdg error ;);_gbagf .SbrATX =make ([]int8 ,2);_gbagf .SbrATY =make ([]int8 ,2);_acff ,_afdg =_gbagf ._deef .ReadByte ();if _afdg !=nil {return _afdg ;};_gbagf .SbrATX [0]=int8 (_acff );_acff ,_afdg =_gbagf ._deef .ReadByte ();if _afdg !=nil {return _afdg ;
};_gbagf .SbrATY [0]=int8 (_acff );_acff ,_afdg =_gbagf ._deef .ReadByte ();if _afdg !=nil {return _afdg ;};_gbagf .SbrATX [1]=int8 (_acff );_acff ,_afdg =_gbagf ._deef .ReadByte ();if _afdg !=nil {return _afdg ;};_gbagf .SbrATY [1]=int8 (_acff );return nil ;
};func (_fcf *GenericRegion )Encode (w _c .BinaryWriter )(_bbc int ,_cab error ){const _cfg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _fcf .Bitmap ==nil {return 0,_be .Error (_cfg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_dda ,_cab :=_fcf .RegionSegment .Encode (w );if _cab !=nil {return 0,_be .Wrap (_cab ,_cfg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_bbc +=_dda ;if _cab =w .SkipBits (4);_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _gcc int ;if _fcf .IsTPGDon {_gcc =1;};if _cab =w .WriteBit (_gcc );_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gcc =0;if _cab =w .WriteBit (int (_fcf .GBTemplate >>1)&0x01);_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cab =w .WriteBit (int (_fcf .GBTemplate )&0x01);_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _fcf .UseMMR {_gcc =1;};if _cab =w .WriteBit (_gcc );
_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bbc ++;if _dda ,_cab =_fcf .writeGBAtPixels (w );_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"");};_bbc +=_dda ;_ebff :=_ge .New ();
if _cab =_ebff .EncodeBitmap (_fcf .Bitmap ,_fcf .IsTPGDon );_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"");};_ebff .Final ();var _eea int64 ;if _eea ,_cab =_ebff .WriteTo (w );_cab !=nil {return _bbc ,_be .Wrap (_cab ,_cfg ,"");};_bbc +=int (_eea );
return _bbc ,nil ;};func (_dagf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _dagf ._edgg ==nil {var (_beff int ;_bcgc error ;);if _dagf .SdHuffDecodeHeightSelection ==3{_beff ++;};if _dagf .SdHuffDecodeWidthSelection ==3{_beff ++;};_dagf ._edgg ,_bcgc =_dagf .getUserTable (_beff );
if _bcgc !=nil {return 0,_bcgc ;};};return _dagf ._edgg .Decode (_dagf ._fage );};func (_caeg *RegionSegment )readCombinationOperator ()error {_afdd ,_ddgc :=_caeg ._edab .ReadBits (3);if _ddgc !=nil {return _ddgc ;};_caeg .CombinaionOperator =_d .CombinationOperator (_afdd &0xF);
return nil ;};func (_dee *GenericRegion )InitEncode (bm *_d .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cea ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _be .Error (_cea ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _be .Error (_cea ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dee .Bitmap =bm ;_dee .GBTemplate =byte (template );switch _dee .GBTemplate {case 0:_dee .GBAtX =[]int8 {3,-3,2,-2};_dee .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dee .GBAtX =[]int8 {3};_dee .GBAtY =[]int8 {-1};case 2,3:_dee .GBAtX =[]int8 {2};_dee .GBAtY =[]int8 {-1};
default:return _be .Errorf (_cea ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dee .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dee .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cfgb *TextRegion )checkInput ()error {const _aace ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_cfgb .UseRefinement {if _cfgb .SbrTemplate !=0{_fe .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cfgb .SbrTemplate =0;};};if _cfgb .SbHuffFS ==2||_cfgb .SbHuffRDWidth ==2||_cfgb .SbHuffRDHeight ==2||_cfgb .SbHuffRDX ==2||_cfgb .SbHuffRDY ==2{return _be .Error (_aace ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cfgb .UseRefinement {if _cfgb .SbHuffRSize !=0{_fe .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cfgb .SbHuffRSize =0;};if _cfgb .SbHuffRDY !=0{_fe .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cfgb .SbHuffRDY =0;};if _cfgb .SbHuffRDX !=0{_fe .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cfgb .SbHuffRDX =0;};if _cfgb .SbHuffRDWidth !=0{_fe .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cfgb .SbHuffRDWidth =0;};if _cfgb .SbHuffRDHeight !=0{_fe .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cfgb .SbHuffRDHeight =0;};};return nil ;
};func (_gfgc *SymbolDictionary )readRefinementAtPixels (_ffdc int )error {_gfgc .SdrATX =make ([]int8 ,_ffdc );_gfgc .SdrATY =make ([]int8 ,_ffdc );var (_edf byte ;_cafc error ;);for _efdg :=0;_efdg < _ffdc ;_efdg ++{_edf ,_cafc =_gfgc ._fage .ReadByte ();
if _cafc !=nil {return _cafc ;};_gfgc .SdrATX [_efdg ]=int8 (_edf );_edf ,_cafc =_gfgc ._fage .ReadByte ();if _cafc !=nil {return _cafc ;};_gfgc .SdrATY [_efdg ]=int8 (_edf );};return nil ;};func (_ebaa *PageInformationSegment )readMaxStripeSize ()error {_cccc ,_febab :=_ebaa ._fdcb .ReadBits (15);
if _febab !=nil {return _febab ;};_ebaa .MaxStripeSize =uint16 (_cccc &_b .MaxUint16 );return nil ;};func (_gfe *PageInformationSegment )CombinationOperator ()_d .CombinationOperator {return _gfe ._bfgce };func (_fegad *TableSegment )HtLow ()int32 {return _fegad ._dbeb };
func _fccc (_feeb int )int {if _feeb ==0{return 0;};_feeb |=_feeb >>1;_feeb |=_feeb >>2;_feeb |=_feeb >>4;_feeb |=_feeb >>8;_feeb |=_feeb >>16;return (_feeb +1)>>1;};func (_ega *GenericRefinementRegion )decodeTypicalPredictedLine (_fgg ,_ece ,_daa ,_aee ,_cfd ,_cg int )error {_ebd :=_fgg -int (_ega .ReferenceDY );
_aa :=_ega .ReferenceBitmap .GetByteIndex (0,_ebd );_fgf :=_ega .RegionBitmap .GetByteIndex (0,_fgg );var _aad error ;switch _ega .TemplateID {case 0:_aad =_ega .decodeTypicalPredictedLineTemplate0 (_fgg ,_ece ,_daa ,_aee ,_cfd ,_cg ,_fgf ,_ebd ,_aa );
case 1:_aad =_ega .decodeTypicalPredictedLineTemplate1 (_fgg ,_ece ,_daa ,_aee ,_cfd ,_cg ,_fgf ,_ebd ,_aa );};return _aad ;};func (_dfcb *TableSegment )Init (h *Header ,r *_c .Reader )error {_dfcb ._ggef =r ;return _dfcb .parseHeader ();};func (_fagf *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _dcec ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _fagf .SbHuffRSize ==0{_ddfg ,_cgefe :=_bed .GetStandardTable (1);if _cgefe !=nil {return 0,_be .Wrap (_cgefe ,_dcec ,"");};return _ddfg .Decode (_fagf ._deef );};if _fagf ._bcff ==nil {var (_bbcaf int ;_fafbb error ;);if _fagf .SbHuffFS ==3{_bbcaf ++;
};if _fagf .SbHuffDS ==3{_bbcaf ++;};if _fagf .SbHuffDT ==3{_bbcaf ++;};if _fagf .SbHuffRDWidth ==3{_bbcaf ++;};if _fagf .SbHuffRDHeight ==3{_bbcaf ++;};if _fagf .SbHuffRDX ==3{_bbcaf ++;};if _fagf .SbHuffRDY ==3{_bbcaf ++;};_fagf ._bcff ,_fafbb =_fagf .getUserTable (_bbcaf );
if _fafbb !=nil {return 0,_be .Wrap (_fafbb ,_dcec ,"");};};_egdd ,_cdgdb :=_fagf ._bcff .Decode (_fagf ._deef );if _cdgdb !=nil {return 0,_be .Wrap (_cdgdb ,_dcec ,"");};return _egdd ,nil ;};func (_gefg *TextRegion )decodeRdy ()(int64 ,error ){const _bgcb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _gefg .IsHuffmanEncoded {if _gefg .SbHuffRDY ==3{if _gefg ._ecegc ==nil {var (_aede int ;_eddag error ;);if _gefg .SbHuffFS ==3{_aede ++;};if _gefg .SbHuffDS ==3{_aede ++;};if _gefg .SbHuffDT ==3{_aede ++;};if _gefg .SbHuffRDWidth ==3{_aede ++;};if _gefg .SbHuffRDHeight ==3{_aede ++;
};if _gefg .SbHuffRDX ==3{_aede ++;};_gefg ._ecegc ,_eddag =_gefg .getUserTable (_aede );if _eddag !=nil {return 0,_be .Wrap (_eddag ,_bgcb ,"");};};return _gefg ._ecegc .Decode (_gefg ._deef );};_dafb ,_bebc :=_bed .GetStandardTable (14+int (_gefg .SbHuffRDY ));
if _bebc !=nil {return 0,_bebc ;};return _dafb .Decode (_gefg ._deef );};_fgfc ,_bebg :=_gefg ._dgfa .DecodeInt (_gefg ._dfa );if _bebg !=nil {return 0,_be .Wrap (_bebg ,_bgcb ,"");};return int64 (_fgfc ),nil ;};func NewRegionSegment (r *_c .Reader )*RegionSegment {return &RegionSegment {_edab :r }};
func (_caa *GenericRegion )Size ()int {return _caa .RegionSegment .Size ()+1+2*len (_caa .GBAtX )};func (_bagbe *TextRegion )decodeRdx ()(int64 ,error ){const _gbfa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _bagbe .IsHuffmanEncoded {if _bagbe .SbHuffRDX ==3{if _bagbe ._cgefg ==nil {var (_gbag int ;
_afbfb error ;);if _bagbe .SbHuffFS ==3{_gbag ++;};if _bagbe .SbHuffDS ==3{_gbag ++;};if _bagbe .SbHuffDT ==3{_gbag ++;};if _bagbe .SbHuffRDWidth ==3{_gbag ++;};if _bagbe .SbHuffRDHeight ==3{_gbag ++;};_bagbe ._cgefg ,_afbfb =_bagbe .getUserTable (_gbag );
if _afbfb !=nil {return 0,_be .Wrap (_afbfb ,_gbfa ,"");};};return _bagbe ._cgefg .Decode (_bagbe ._deef );};_dgbf ,_ebgc :=_bed .GetStandardTable (14+int (_bagbe .SbHuffRDX ));if _ebgc !=nil {return 0,_be .Wrap (_ebgc ,_gbfa ,"");};return _dgbf .Decode (_bagbe ._deef );
};_bcae ,_dfeb :=_bagbe ._dgfa .DecodeInt (_bagbe ._dea );if _dfeb !=nil {return 0,_be .Wrap (_dfeb ,_gbfa ,"");};return int64 (_bcae ),nil ;};func (_efcf *SymbolDictionary )InitEncode (symbols *_d .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bggaa ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_efcf .SdATX =[]int8 {3,-3,2,-2};_efcf .SdATY =[]int8 {-1,-1,-2,-2};_efcf ._bbga =symbols ;_efcf ._bdgd =make ([]int ,len (symbolList ));copy (_efcf ._bdgd ,symbolList );if len (_efcf ._bdgd )!=_efcf ._bbga .Size (){return _be .Error (_bggaa ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_efcf .NumberOfNewSymbols =uint32 (symbols .Size ());_efcf .NumberOfExportedSymbols =uint32 (symbols .Size ());_efcf ._fdbc =symbolMap ;_efcf ._gdcb =unborderSymbols ;return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_d .Bitmap ,error );
};func (_gbad *GenericRegion )updateOverrideFlags ()error {const _cfdbb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gbad .GBAtX ==nil ||_gbad .GBAtY ==nil {return nil ;};if len (_gbad .GBAtX )!=len (_gbad .GBAtY ){return _be .Errorf (_cfdbb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gbad .GBAtX ),len (_gbad .GBAtY ));
};_gbad .GBAtOverride =make ([]bool ,len (_gbad .GBAtX ));switch _gbad .GBTemplate {case 0:if !_gbad .UseExtTemplates {if _gbad .GBAtX [0]!=3||_gbad .GBAtY [0]!=-1{_gbad .setOverrideFlag (0);};if _gbad .GBAtX [1]!=-3||_gbad .GBAtY [1]!=-1{_gbad .setOverrideFlag (1);
};if _gbad .GBAtX [2]!=2||_gbad .GBAtY [2]!=-2{_gbad .setOverrideFlag (2);};if _gbad .GBAtX [3]!=-2||_gbad .GBAtY [3]!=-2{_gbad .setOverrideFlag (3);};}else {if _gbad .GBAtX [0]!=-2||_gbad .GBAtY [0]!=0{_gbad .setOverrideFlag (0);};if _gbad .GBAtX [1]!=0||_gbad .GBAtY [1]!=-2{_gbad .setOverrideFlag (1);
};if _gbad .GBAtX [2]!=-2||_gbad .GBAtY [2]!=-1{_gbad .setOverrideFlag (2);};if _gbad .GBAtX [3]!=-1||_gbad .GBAtY [3]!=-2{_gbad .setOverrideFlag (3);};if _gbad .GBAtX [4]!=1||_gbad .GBAtY [4]!=-2{_gbad .setOverrideFlag (4);};if _gbad .GBAtX [5]!=2||_gbad .GBAtY [5]!=-1{_gbad .setOverrideFlag (5);
};if _gbad .GBAtX [6]!=-3||_gbad .GBAtY [6]!=0{_gbad .setOverrideFlag (6);};if _gbad .GBAtX [7]!=-4||_gbad .GBAtY [7]!=0{_gbad .setOverrideFlag (7);};if _gbad .GBAtX [8]!=2||_gbad .GBAtY [8]!=-2{_gbad .setOverrideFlag (8);};if _gbad .GBAtX [9]!=3||_gbad .GBAtY [9]!=-1{_gbad .setOverrideFlag (9);
};if _gbad .GBAtX [10]!=-2||_gbad .GBAtY [10]!=-2{_gbad .setOverrideFlag (10);};if _gbad .GBAtX [11]!=-3||_gbad .GBAtY [11]!=-1{_gbad .setOverrideFlag (11);};};case 1:if _gbad .GBAtX [0]!=3||_gbad .GBAtY [0]!=-1{_gbad .setOverrideFlag (0);};case 2:if _gbad .GBAtX [0]!=2||_gbad .GBAtY [0]!=-1{_gbad .setOverrideFlag (0);
};case 3:if _gbad .GBAtX [0]!=2||_gbad .GBAtY [0]!=-1{_gbad .setOverrideFlag (0);};};return nil ;};type PageInformationSegment struct{_fdcb *_c .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_gbffe bool ;_bfgce _d .CombinationOperator ;
_ecdc bool ;DefaultPixelValue uint8 ;_aaec bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dbga *TextRegion )GetRegionBitmap ()(*_d .Bitmap ,error ){if _dbga .RegionBitmap !=nil {return _dbga .RegionBitmap ,nil ;};if !_dbga .IsHuffmanEncoded {if _ggcb :=_dbga .setCodingStatistics ();
_ggcb !=nil {return nil ,_ggcb ;};};if _dbed :=_dbga .createRegionBitmap ();_dbed !=nil {return nil ,_dbed ;};if _baaa :=_dbga .decodeSymbolInstances ();_baaa !=nil {return nil ,_baaa ;};return _dbga .RegionBitmap ,nil ;};func (_cfc *TextRegion )decodeDfs ()(int64 ,error ){if _cfc .IsHuffmanEncoded {if _cfc .SbHuffFS ==3{if _cfc ._bgba ==nil {var _gabb error ;
_cfc ._bgba ,_gabb =_cfc .getUserTable (0);if _gabb !=nil {return 0,_gabb ;};};return _cfc ._bgba .Decode (_cfc ._deef );};_fbbd ,_fdcf :=_bed .GetStandardTable (6+int (_cfc .SbHuffFS ));if _fdcf !=nil {return 0,_fdcf ;};return _fbbd .Decode (_cfc ._deef );
};_adccg ,_gebc :=_cfc ._dgfa .DecodeInt (_cfc ._bbgf );if _gebc !=nil {return 0,_gebc ;};return int64 (_adccg ),nil ;};func (_aefc *HalftoneRegion )Init (hd *Header ,r *_c .Reader )error {_aefc ._fcbff =r ;_aefc ._gbdg =hd ;_aefc .RegionSegment =NewRegionSegment (r );
return _aefc .parseHeader ();};func (_adcd *TextRegion )decodeDT ()(_abdb int64 ,_efab error ){if _adcd .IsHuffmanEncoded {if _adcd .SbHuffDT ==3{_abdb ,_efab =_adcd ._aefb .Decode (_adcd ._deef );if _efab !=nil {return 0,_efab ;};}else {var _gdac _bed .Tabler ;
_gdac ,_efab =_bed .GetStandardTable (11+int (_adcd .SbHuffDT ));if _efab !=nil {return 0,_efab ;};_abdb ,_efab =_gdac .Decode (_adcd ._deef );if _efab !=nil {return 0,_efab ;};};}else {var _gacb int32 ;_gacb ,_efab =_adcd ._dgfa .DecodeInt (_adcd ._bfef );
if _efab !=nil {return 0,_efab ;};_abdb =int64 (_gacb );};_abdb *=int64 (_adcd .SbStrips );return _abdb ,nil ;};func (_bbfed *TextRegion )decodeSymbolInstances ()error {_edaec ,_fcdc :=_bbfed .decodeStripT ();if _fcdc !=nil {return _fcdc ;};var (_dcdbc int64 ;
_daac uint32 ;);for _daac < _bbfed .NumberOfSymbolInstances {_aebc ,_dbcb :=_bbfed .decodeDT ();if _dbcb !=nil {return _dbcb ;};_edaec +=_aebc ;var _fdfg int64 ;_fbgf :=true ;_bbfed ._gcgd =0;for {if _fbgf {_fdfg ,_dbcb =_bbfed .decodeDfs ();if _dbcb !=nil {return _dbcb ;
};_dcdbc +=_fdfg ;_bbfed ._gcgd =_dcdbc ;_fbgf =false ;}else {_cbba ,_daaggd :=_bbfed .decodeIds ();if _ef .Is (_daaggd ,_g .ErrOOB ){break ;};if _daaggd !=nil {return _daaggd ;};if _daac >=_bbfed .NumberOfSymbolInstances {break ;};_bbfed ._gcgd +=_cbba +int64 (_bbfed .SbDsOffset );
};_agfb ,_geda :=_bbfed .decodeCurrentT ();if _geda !=nil {return _geda ;};_cbad :=_edaec +_agfb ;_ddaf ,_geda :=_bbfed .decodeID ();if _geda !=nil {return _geda ;};_efddg ,_geda :=_bbfed .decodeRI ();if _geda !=nil {return _geda ;};_bbcb ,_geda :=_bbfed .decodeIb (_efddg ,_ddaf );
if _geda !=nil {return _geda ;};if _geda =_bbfed .blit (_bbcb ,_cbad );_geda !=nil {return _geda ;};_daac ++;};};return nil ;};func (_cgbg *RegionSegment )Size ()int {return 17};func (_dcef *PatternDictionary )parseHeader ()error {_fe .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_fe .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_befe :=_dcef ._fbgg .ReadBits (5);if _befe !=nil {return _befe ;};if _befe =_dcef .readTemplate ();_befe !=nil {return _befe ;};if _befe =_dcef .readIsMMREncoded ();_befe !=nil {return _befe ;};if _befe =_dcef .readPatternWidthAndHeight ();_befe !=nil {return _befe ;
};if _befe =_dcef .readGrayMax ();_befe !=nil {return _befe ;};if _befe =_dcef .computeSegmentDataStructure ();_befe !=nil {return _befe ;};return _dcef .checkInput ();};func (_ebde *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bge ,_ggc ,_cdf ,_ffg ,_ebf ,_dag ,_eac ,_fefg ,_dd int )(_bd error ){var (_dga ,_ebb int ;
_ggcd ,_de int ;_fcg ,_bba int ;_afea byte ;);if _bge > 0{_afea ,_bd =_ebde .RegionBitmap .GetByte (_eac -_cdf );if _bd !=nil {return _bd ;};_ggcd =int (_afea );};if _fefg > 0&&_fefg <=_ebde .ReferenceBitmap .Height {_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd -_ffg +_dag );
if _bd !=nil {return _bd ;};_de =int (_afea )<<2;};if _fefg >=0&&_fefg < _ebde .ReferenceBitmap .Height {_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd +_dag );if _bd !=nil {return _bd ;};_fcg =int (_afea );};if _fefg > -2&&_fefg < _ebde .ReferenceBitmap .Height -1{_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd +_ffg +_dag );
if _bd !=nil {return _bd ;};_bba =int (_afea );};_dga =((_ggcd >>5)&0x6)|((_bba >>2)&0x30)|(_fcg &0xc0)|(_de &0x200);_ebb =((_bba >>2)&0x70)|(_fcg &0xc0)|(_de &0x700);var _age int ;for _dgd :=0;_dgd < _ebf ;_dgd =_age {var (_gbae int ;_ebc int ;);_age =_dgd +8;
if _gbae =_ggc -_dgd ;_gbae > 8{_gbae =8;};_ffa :=_age < _ggc ;_gbd :=_age < _ebde .ReferenceBitmap .Width ;_ddg :=_dag +1;if _bge > 0{_afea =0;if _ffa {_afea ,_bd =_ebde .RegionBitmap .GetByte (_eac -_cdf +1);if _bd !=nil {return _bd ;};};_ggcd =(_ggcd <<8)|int (_afea );
};if _fefg > 0&&_fefg <=_ebde .ReferenceBitmap .Height {var _fcbf int ;if _gbd {_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd -_ffg +_ddg );if _bd !=nil {return _bd ;};_fcbf =int (_afea )<<2;};_de =(_de <<8)|_fcbf ;};if _fefg >=0&&_fefg < _ebde .ReferenceBitmap .Height {_afea =0;
if _gbd {_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd +_ddg );if _bd !=nil {return _bd ;};};_fcg =(_fcg <<8)|int (_afea );};if _fefg > -2&&_fefg < (_ebde .ReferenceBitmap .Height -1){_afea =0;if _gbd {_afea ,_bd =_ebde .ReferenceBitmap .GetByte (_dd +_ffg +_ddg );
if _bd !=nil {return _bd ;};};_bba =(_bba <<8)|int (_afea );};for _ffc :=0;_ffc < _gbae ;_ffc ++{var _gbb int ;_gef :=(_ebb >>4)&0x1ff;switch _gef {case 0x1ff:_gbb =1;case 0x00:_gbb =0;default:_ebde ._gde .SetIndex (int32 (_dga ));_gbb ,_bd =_ebde ._dg .DecodeBit (_ebde ._gde );
if _bd !=nil {return _bd ;};};_bgab :=uint (7-_ffc );_ebc |=_gbb <<_bgab ;_dga =((_dga &0x0d6)<<1)|_gbb |(_ggcd >>_bgab +5)&0x002|((_bba >>_bgab +2)&0x010)|((_fcg >>_bgab )&0x040)|((_de >>_bgab )&0x200);_ebb =((_ebb &0xdb)<<1)|((_bba >>_bgab +2)&0x010)|((_fcg >>_bgab )&0x080)|((_de >>_bgab )&0x400);
};_bd =_ebde .RegionBitmap .SetByte (_eac ,byte (_ebc ));if _bd !=nil {return _bd ;};_eac ++;_dd ++;};return nil ;};func (_bcfa *TextRegion )blit (_ebgg *_d .Bitmap ,_gbcc int64 )error {if _bcfa .IsTransposed ==0&&(_bcfa .ReferenceCorner ==2||_bcfa .ReferenceCorner ==3){_bcfa ._gcgd +=int64 (_ebgg .Width -1);
}else if _bcfa .IsTransposed ==1&&(_bcfa .ReferenceCorner ==0||_bcfa .ReferenceCorner ==2){_bcfa ._gcgd +=int64 (_ebgg .Height -1);};_febdd :=_bcfa ._gcgd ;if _bcfa .IsTransposed ==1{_febdd ,_gbcc =_gbcc ,_febdd ;};switch _bcfa .ReferenceCorner {case 0:_gbcc -=int64 (_ebgg .Height -1);
case 2:_gbcc -=int64 (_ebgg .Height -1);_febdd -=int64 (_ebgg .Width -1);case 3:_febdd -=int64 (_ebgg .Width -1);};_bacd :=_d .Blit (_ebgg ,_bcfa .RegionBitmap ,int (_febdd ),int (_gbcc ),_bcfa .CombinationOperator );if _bacd !=nil {return _bacd ;};if _bcfa .IsTransposed ==0&&(_bcfa .ReferenceCorner ==0||_bcfa .ReferenceCorner ==1){_bcfa ._gcgd +=int64 (_ebgg .Width -1);
};if _bcfa .IsTransposed ==1&&(_bcfa .ReferenceCorner ==1||_bcfa .ReferenceCorner ==3){_bcfa ._gcgd +=int64 (_ebgg .Height -1);};return nil ;};func (_feb *GenericRefinementRegion )readAtPixels ()error {_feb .GrAtX =make ([]int8 ,2);_feb .GrAtY =make ([]int8 ,2);
_cgg ,_afad :=_feb ._aga .ReadByte ();if _afad !=nil {return _afad ;};_feb .GrAtX [0]=int8 (_cgg );_cgg ,_afad =_feb ._aga .ReadByte ();if _afad !=nil {return _afad ;};_feb .GrAtY [0]=int8 (_cgg );_cgg ,_afad =_feb ._aga .ReadByte ();if _afad !=nil {return _afad ;
};_feb .GrAtX [1]=int8 (_cgg );_cgg ,_afad =_feb ._aga .ReadByte ();if _afad !=nil {return _afad ;};_feb .GrAtY [1]=int8 (_cgg );return nil ;};func (_gbcf *SymbolDictionary )GetDictionary ()([]*_d .Bitmap ,error ){_fe .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_fe .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_fe .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gbcf ._ffea ,_gbcf ._fbfe );
}();if _gbcf ._ffea ==nil {var _eafe error ;if _gbcf .UseRefinementAggregation {_gbcf ._gda =_gbcf .getSbSymCodeLen ();};if !_gbcf .IsHuffmanEncoded {if _eafe =_gbcf .setCodingStatistics ();_eafe !=nil {return nil ,_eafe ;};};_gbcf ._fbfe =make ([]*_d .Bitmap ,_gbcf .NumberOfNewSymbols );
var _bcdgeda []int ;if _gbcf .IsHuffmanEncoded &&!_gbcf .UseRefinementAggregation {_bcdgeda =make ([]int ,_gbcf .NumberOfNewSymbols );};if _eafe =_gbcf .setSymbolsArray ();_eafe !=nil {return nil ,_eafe ;};var _abac ,_egcae int64 ;_gbcf ._efff =0;for _gbcf ._efff < _gbcf .NumberOfNewSymbols {_egcae ,_eafe =_gbcf .decodeHeightClassDeltaHeight ();
if _eafe !=nil {return nil ,_eafe ;};_abac +=_egcae ;var _agagf ,_befb uint32 ;_dffd :=int64 (_gbcf ._efff );for {var _abggg int64 ;_abggg ,_eafe =_gbcf .decodeDifferenceWidth ();if _ef .Is (_eafe ,_g .ErrOOB ){break ;};if _eafe !=nil {return nil ,_eafe ;
};if _gbcf ._efff >=_gbcf .NumberOfNewSymbols {break ;};_agagf +=uint32 (_abggg );_befb +=_agagf ;if !_gbcf .IsHuffmanEncoded ||_gbcf .UseRefinementAggregation {if !_gbcf .UseRefinementAggregation {_eafe =_gbcf .decodeDirectlyThroughGenericRegion (_agagf ,uint32 (_abac ));
if _eafe !=nil {return nil ,_eafe ;};}else {_eafe =_gbcf .decodeAggregate (_agagf ,uint32 (_abac ));if _eafe !=nil {return nil ,_eafe ;};};}else if _gbcf .IsHuffmanEncoded &&!_gbcf .UseRefinementAggregation {_bcdgeda [_gbcf ._efff ]=int (_agagf );};_gbcf ._efff ++;
};if _gbcf .IsHuffmanEncoded &&!_gbcf .UseRefinementAggregation {var _dcba int64 ;if _gbcf .SdHuffBMSizeSelection ==0{var _afbe _bed .Tabler ;_afbe ,_eafe =_bed .GetStandardTable (1);if _eafe !=nil {return nil ,_eafe ;};_dcba ,_eafe =_afbe .Decode (_gbcf ._fage );
if _eafe !=nil {return nil ,_eafe ;};}else {_dcba ,_eafe =_gbcf .huffDecodeBmSize ();if _eafe !=nil {return nil ,_eafe ;};};_gbcf ._fage .Align ();var _daagg *_d .Bitmap ;_daagg ,_eafe =_gbcf .decodeHeightClassCollectiveBitmap (_dcba ,uint32 (_abac ),_befb );
if _eafe !=nil {return nil ,_eafe ;};_eafe =_gbcf .decodeHeightClassBitmap (_daagg ,_dffd ,int (_abac ),_bcdgeda );if _eafe !=nil {return nil ,_eafe ;};};};_dbcc ,_eafe :=_gbcf .getToExportFlags ();if _eafe !=nil {return nil ,_eafe ;};_gbcf .setExportedSymbols (_dbcc );
};return _gbcf ._ffea ,nil ;};func (_aefdd *TextRegion )createRegionBitmap ()error {_aefdd .RegionBitmap =_d .New (int (_aefdd .RegionInfo .BitmapWidth ),int (_aefdd .RegionInfo .BitmapHeight ));if _aefdd .DefaultPixel !=0{_aefdd .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_daebg *PatternDictionary )GetDictionary ()([]*_d .Bitmap ,error ){if _daebg .Patterns !=nil {return _daebg .Patterns ,nil ;};if !_daebg .IsMMREncoded {_daebg .setGbAtPixels ();};_eddc :=NewGenericRegion (_daebg ._fbgg );_eddc .setParametersMMR (_daebg .IsMMREncoded ,_daebg .DataOffset ,_daebg .DataLength ,uint32 (_daebg .HdpHeight ),(_daebg .GrayMax +1)*uint32 (_daebg .HdpWidth ),_daebg .HDTemplate ,false ,false ,_daebg .GBAtX ,_daebg .GBAtY );
_bega ,_dfdd :=_eddc .GetRegionBitmap ();if _dfdd !=nil {return nil ,_dfdd ;};if _dfdd =_daebg .extractPatterns (_bega );_dfdd !=nil {return nil ,_dfdd ;};return _daebg .Patterns ,nil ;};type RegionSegment struct{_edab *_c .Reader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _d .CombinationOperator ;};type GenericRefinementRegion struct{_fa templater ;_ga templater ;_aga *_c .Reader ;_gb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;
Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_d .Bitmap ;ReferenceBitmap *_d .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_dg *_efa .Decoder ;_gde *_efa .DecoderStats ;_fee bool ;_cd []bool ;};func (_ceg *Header )writeReferredToCount (_gdg _c .BinaryWriter )(_eaed int ,_debg error ){const _ccfbb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_ceg .RTSNumbers =make ([]int ,len (_ceg .RTSegments ));for _edg ,_deeg :=range _ceg .RTSegments {_ceg .RTSNumbers [_edg ]=int (_deeg .SegmentNumber );};if len (_ceg .RTSNumbers )<=4{var _gbdf byte ;if len (_ceg .RetainBits )>=1{_gbdf =_ceg .RetainBits [0];
};_gbdf |=byte (len (_ceg .RTSNumbers ))<<5;if _debg =_gdg .WriteByte (_gbdf );_debg !=nil {return 0,_be .Wrap (_debg ,_ccfbb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ecee :=uint32 (len (_ceg .RTSNumbers ));
_adgee :=make ([]byte ,4+_ag .Ceil (len (_ceg .RTSNumbers )+1,8));_ecee |=0x7<<29;_a .BigEndian .PutUint32 (_adgee ,_ecee );copy (_adgee [1:],_ceg .RetainBits );_eaed ,_debg =_gdg .Write (_adgee );if _debg !=nil {return 0,_be .Wrap (_debg ,_ccfbb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _eaed ,nil ;};func (_aggf *Header )writeSegmentNumber (_gbe _c .BinaryWriter )(_bcdged int ,_cffed error ){_cfbaa :=make ([]byte ,4);_a .BigEndian .PutUint32 (_cfbaa ,_aggf .SegmentNumber );if _bcdged ,_cffed =_gbe .Write (_cfbaa );_cffed !=nil {return 0,_be .Wrap (_cffed ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _bcdged ,nil ;};func (_gd *EndOfStripe )LineNumber ()int {return _gd ._eg };func (_fec *GenericRefinementRegion )Init (header *Header ,r *_c .Reader )error {_fec ._gb =header ;_fec ._aga =r ;_fec .RegionInfo =NewRegionSegment (r );return _fec .parseHeader ();
};func (_acc *GenericRegion )GetRegionBitmap ()(_ageb *_d .Bitmap ,_afc error ){if _acc .Bitmap !=nil {return _acc .Bitmap ,nil ;};if _acc .IsMMREncoded {if _acc ._ecgg ==nil {_acc ._ecgg ,_afc =_ca .New (_acc ._cefb ,int (_acc .RegionSegment .BitmapWidth ),int (_acc .RegionSegment .BitmapHeight ),_acc .DataOffset ,_acc .DataLength );
if _afc !=nil {return nil ,_afc ;};};_acc .Bitmap ,_afc =_acc ._ecgg .UncompressMMR ();return _acc .Bitmap ,_afc ;};if _afc =_acc .updateOverrideFlags ();_afc !=nil {return nil ,_afc ;};var _cacb int ;if _acc ._bde ==nil {_acc ._bde ,_afc =_efa .New (_acc ._cefb );
if _afc !=nil {return nil ,_afc ;};};if _acc ._dacc ==nil {_acc ._dacc =_efa .NewStats (65536,1);};_acc .Bitmap =_d .New (int (_acc .RegionSegment .BitmapWidth ),int (_acc .RegionSegment .BitmapHeight ));_deb :=int (uint32 (_acc .Bitmap .Width +7)&(^uint32 (7)));
for _acce :=0;_acce < _acc .Bitmap .Height ;_acce ++{if _acc .IsTPGDon {var _eca int ;_eca ,_afc =_acc .decodeSLTP ();if _afc !=nil {return nil ,_afc ;};_cacb ^=_eca ;};if _cacb ==1{if _acce > 0{if _afc =_acc .copyLineAbove (_acce );_afc !=nil {return nil ,_afc ;
};};}else {if _afc =_acc .decodeLine (_acce ,_acc .Bitmap .Width ,_deb );_afc !=nil {return nil ,_afc ;};};};return _acc .Bitmap ,nil ;};func _facf (_efe *_c .Reader ,_daacg *Header )*TextRegion {_bbee :=&TextRegion {_deef :_efe ,Header :_daacg ,RegionInfo :NewRegionSegment (_efe )};
return _bbee ;};func (_afg *GenericRegion )decodeTemplate3 (_dfc ,_fgea ,_fafb int ,_ccf ,_fabd int )(_dbaa error ){const _gca ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_baa ,_dbbf int ;_bcc int ;_eef byte ;
_cfab ,_ecb int ;);if _dfc >=1{_eef ,_dbaa =_afg .Bitmap .GetByte (_fabd );if _dbaa !=nil {return _be .Wrap (_dbaa ,_gca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bcc =int (_eef );};_baa =(_bcc >>1)&0x70;for _dad :=0;_dad < _fafb ;_dad =_cfab {var (_bcdge byte ;
_agg int ;);_cfab =_dad +8;if _fccf :=_fgea -_dad ;_fccf > 8{_agg =8;}else {_agg =_fccf ;};if _dfc >=1{_bcc <<=8;if _cfab < _fgea {_eef ,_dbaa =_afg .Bitmap .GetByte (_fabd +1);if _dbaa !=nil {return _be .Wrap (_dbaa ,_gca ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_bcc |=int (_eef );};};for _gece :=0;_gece < _agg ;_gece ++{if _afg ._aef {_dbbf =_afg .overrideAtTemplate3 (_baa ,_dad +_gece ,_dfc ,int (_bcdge ),_gece );_afg ._dacc .SetIndex (int32 (_dbbf ));}else {_afg ._dacc .SetIndex (int32 (_baa ));};_ecb ,_dbaa =_afg ._bde .DecodeBit (_afg ._dacc );
if _dbaa !=nil {return _be .Wrap (_dbaa ,_gca ,"");};_bcdge |=byte (_ecb )<<byte (7-_gece );_baa =((_baa &0x1f7)<<1)|_ecb |((_bcc >>uint (8-_gece ))&0x010);};if _gff :=_afg .Bitmap .SetByte (_ccf ,_bcdge );_gff !=nil {return _be .Wrap (_gff ,_gca ,"");
};_ccf ++;_fabd ++;};return nil ;};func (_bdb *GenericRegion )decodeSLTP ()(int ,error ){switch _bdb .GBTemplate {case 0:_bdb ._dacc .SetIndex (0x9B25);case 1:_bdb ._dacc .SetIndex (0x795);case 2:_bdb ._dacc .SetIndex (0xE5);case 3:_bdb ._dacc .SetIndex (0x195);
};return _bdb ._bde .DecodeBit (_bdb ._dacc );};func (_bgecf *SymbolDictionary )addSymbol (_agga Regioner )error {_cgdf ,_feca :=_agga .GetRegionBitmap ();if _feca !=nil {return _feca ;};_bgecf ._fbfe [_bgecf ._efff ]=_cgdf ;_bgecf ._egbg =append (_bgecf ._egbg ,_cgdf );
_fe .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cgdf );return nil ;};type Segmenter interface{Init (_fdba *Header ,_gdef *_c .Reader )error ;
};const (ORandom OrganizationType =iota ;OSequential ;);func (_ffcag *GenericRegion )overrideAtTemplate3 (_ebe ,_bae ,_fde ,_bafa ,_gdbe int )int {_ebe &=0x3EF;if _ffcag .GBAtY [0]==0&&_ffcag .GBAtX [0]>=-int8 (_gdbe ){_ebe |=(_bafa >>uint (7-(int8 (_gdbe )+_ffcag .GBAtX [0]))&0x1)<<4;
}else {_ebe |=int (_ffcag .getPixel (_bae +int (_ffcag .GBAtX [0]),_fde +int (_ffcag .GBAtY [0])))<<4;};return _ebe ;};func (_adad *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_d .Points ,symbols *_d .Bitmaps ,classIDs *_ag .IntSlice ,boxes *_d .Boxes ,width ,height ,symBits int ){_adad .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_adad ._bcba =globalSymbolsMap ;_adad ._degfd =localSymbolsMap ;_adad ._gfeg =comps ;_adad ._dffg =inLL ;_adad ._aafb =symbols ;_adad ._gceb =classIDs ;_adad ._egfb =boxes ;_adad ._cdegd =symBits ;};func (_effc *TextRegion )setCodingStatistics ()error {if _effc ._bfef ==nil {_effc ._bfef =_efa .NewStats (512,1);
};if _effc ._bbgf ==nil {_effc ._bbgf =_efa .NewStats (512,1);};if _effc ._eaaec ==nil {_effc ._eaaec =_efa .NewStats (512,1);};if _effc ._cgbf ==nil {_effc ._cgbf =_efa .NewStats (512,1);};if _effc ._gfec ==nil {_effc ._gfec =_efa .NewStats (512,1);};
if _effc ._eabg ==nil {_effc ._eabg =_efa .NewStats (512,1);};if _effc ._befag ==nil {_effc ._befag =_efa .NewStats (512,1);};if _effc ._agffd ==nil {_effc ._agffd =_efa .NewStats (1<<uint (_effc ._ddbf ),1);};if _effc ._dea ==nil {_effc ._dea =_efa .NewStats (512,1);
};if _effc ._dfa ==nil {_effc ._dfa =_efa .NewStats (512,1);};if _effc ._dgfa ==nil {var _dcbe error ;_effc ._dgfa ,_dcbe =_efa .New (_effc ._deef );if _dcbe !=nil {return _dcbe ;};};return nil ;};func (_efbaa *PageInformationSegment )Encode (w _c .BinaryWriter )(_aeb int ,_ebgea error ){const _gfff ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_efgc :=make ([]byte ,4);_a .BigEndian .PutUint32 (_efgc ,uint32 (_efbaa .PageBMWidth ));_aeb ,_ebgea =w .Write (_efgc );if _ebgea !=nil {return _aeb ,_be .Wrap (_ebgea ,_gfff ,"\u0077\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_efgc ,uint32 (_efbaa .PageBMHeight ));
var _defd int ;_defd ,_ebgea =w .Write (_efgc );if _ebgea !=nil {return _defd +_aeb ,_be .Wrap (_ebgea ,_gfff ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aeb +=_defd ;_a .BigEndian .PutUint32 (_efgc ,uint32 (_efbaa .ResolutionX ));_defd ,_ebgea =w .Write (_efgc );
if _ebgea !=nil {return _defd +_aeb ,_be .Wrap (_ebgea ,_gfff ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aeb +=_defd ;_a .BigEndian .PutUint32 (_efgc ,uint32 (_efbaa .ResolutionY ));if _defd ,_ebgea =w .Write (_efgc );_ebgea !=nil {return _defd +_aeb ,_be .Wrap (_ebgea ,_gfff ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_aeb +=_defd ;if _ebgea =_efbaa .encodeFlags (w );_ebgea !=nil {return _aeb ,_be .Wrap (_ebgea ,_gfff ,"");};_aeb ++;if _defd ,_ebgea =_efbaa .encodeStripingInformation (w );_ebgea !=nil {return _aeb ,_be .Wrap (_ebgea ,_gfff ,"");};_aeb +=_defd ;return _aeb ,nil ;
};func (_cegf *PageInformationSegment )String ()string {_fcec :=&_fd .Builder {};_fcec .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_fcec .WriteString (_bf .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cegf .PageBMHeight ));_fcec .WriteString (_bf .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cegf .PageBMWidth ));
_fcec .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cegf .ResolutionX ));_fcec .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cegf .ResolutionY ));
_fcec .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cegf ._bfgce ));_fcec .WriteString (_bf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cegf ._gbffe ));
_fcec .WriteString (_bf .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cegf .IsLossless ));_fcec .WriteString (_bf .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cegf ._ecdc ));
_fcec .WriteString (_bf .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cegf ._aaec ));_fcec .WriteString (_bf .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cegf .IsStripe ));
_fcec .WriteString (_bf .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cegf .MaxStripeSize ));return _fcec .String ();};func (_gabg *TextRegion )initSymbols ()error {const _fdbag ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_gaae :=range _gabg .Header .RTSegments {if _gaae ==nil {return _be .Error (_fdbag ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _gaae .Type ==0{_dgada ,_bcdae :=_gaae .GetSegmentData ();if _bcdae !=nil {return _be .Wrap (_bcdae ,_fdbag ,"");};_cbda ,_cdfb :=_dgada .(*SymbolDictionary );if !_cdfb {return _be .Error (_fdbag ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cbda ._dcdb =_gabg ._agffd ;_cacf ,_bcdae :=_cbda .GetDictionary ();if _bcdae !=nil {return _be .Wrap (_bcdae ,_fdbag ,"");};_gabg .Symbols =append (_gabg .Symbols ,_cacf ...);};};_gabg .NumberOfSymbols =uint32 (len (_gabg .Symbols ));return nil ;};
type TextRegion struct{_deef *_c .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _d .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;
SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gcgd int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_d .Bitmap ;
Symbols []*_d .Bitmap ;_dgfa *_efa .Decoder ;_eagfe *GenericRefinementRegion ;_bfef *_efa .DecoderStats ;_bbgf *_efa .DecoderStats ;_eaaec *_efa .DecoderStats ;_cgbf *_efa .DecoderStats ;_gfec *_efa .DecoderStats ;_eabg *_efa .DecoderStats ;_befag *_efa .DecoderStats ;
_agffd *_efa .DecoderStats ;_dea *_efa .DecoderStats ;_dfa *_efa .DecoderStats ;_bdca *_efa .DecoderStats ;_ddbf int8 ;_ggad *_bed .FixedSizeTable ;Header *Header ;_bgba _bed .Tabler ;_eafce _bed .Tabler ;_aefb _bed .Tabler ;_bgeg _bed .Tabler ;_eeeg _bed .Tabler ;
_cgefg _bed .Tabler ;_ecegc _bed .Tabler ;_bcff _bed .Tabler ;_bcba ,_degfd map[int ]int ;_gfeg []int ;_dffg *_d .Points ;_aafb *_d .Bitmaps ;_gceb *_ag .IntSlice ;_cfeaa ,_cdegd int ;_egfb *_d .Boxes ;};func (_gfab *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _gfab .SdHuffDecodeHeightSelection {case 0:_eead ,_ecf :=_bed .GetStandardTable (4);
if _ecf !=nil {return 0,_ecf ;};return _eead .Decode (_gfab ._fage );case 1:_cedg ,_cdef :=_bed .GetStandardTable (5);if _cdef !=nil {return 0,_cdef ;};return _cedg .Decode (_gfab ._fage );case 3:if _gfab ._efaa ==nil {_bccd ,_dbda :=_bed .GetStandardTable (0);
if _dbda !=nil {return 0,_dbda ;};_gfab ._efaa =_bccd ;};return _gfab ._efaa .Decode (_gfab ._fage );};return 0,nil ;};func _bfaa (_baf *_c .Reader ,_bbb *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_aga :_baf ,RegionInfo :NewRegionSegment (_baf ),_gb :_bbb ,_fa :&template0 {},_ga :&template1 {}};
};func (_efgd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_bagaf int ;_fccbb int32 ;_gagc error ;_ecfg =int32 (_efgd ._eacb +_efgd .NumberOfNewSymbols );_cbcgb =make ([]int ,_ecfg ););for _edad :=int32 (0);_edad < _ecfg ;_edad +=_fccbb {if _efgd .IsHuffmanEncoded {_babc ,_bddb :=_bed .GetStandardTable (1);
if _bddb !=nil {return nil ,_bddb ;};_fdbf ,_bddb :=_babc .Decode (_efgd ._fage );if _bddb !=nil {return nil ,_bddb ;};_fccbb =int32 (_fdbf );}else {_fccbb ,_gagc =_efgd ._fbfd .DecodeInt (_efgd ._accd );if _gagc !=nil {return nil ,_gagc ;};};if _fccbb !=0{if _edad +_fccbb > _ecfg {return nil ,_be .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _cadb :=_edad ;_cadb < _edad +_fccbb ;_cadb ++{_cbcgb [_cadb ]=_bagaf ;};};if _bagaf ==0{_bagaf =1;}else {_bagaf =0;};};return _cbcgb ,nil ;};type HalftoneRegion struct{_fcbff *_c .Reader ;_gbdg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _d .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;
HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_d .Bitmap ;Patterns []*_d .Bitmap ;};func (_bbd *TextRegion )setContexts (_agbc *_efa .DecoderStats ,_dagfc *_efa .DecoderStats ,_fade *_efa .DecoderStats ,_eabf *_efa .DecoderStats ,_eddaa *_efa .DecoderStats ,_dbedb *_efa .DecoderStats ,_dddec *_efa .DecoderStats ,_efga *_efa .DecoderStats ,_faea *_efa .DecoderStats ,_ebga *_efa .DecoderStats ){_bbd ._bfef =_dagfc ;
_bbd ._bbgf =_fade ;_bbd ._eaaec =_eabf ;_bbd ._cgbf =_eddaa ;_bbd ._eabg =_dddec ;_bbd ._befag =_efga ;_bbd ._agffd =_dbedb ;_bbd ._dea =_faea ;_bbd ._dfa =_ebga ;_bbd ._bdca =_agbc ;};func (_cgef *PageInformationSegment )readIsStriped ()error {_fabdd ,_gaa :=_cgef ._fdcb .ReadBit ();
if _gaa !=nil {return _gaa ;};if _fabdd ==1{_cgef .IsStripe =true ;};return nil ;};func (_bcgg *PatternDictionary )readGrayMax ()error {_gfac ,_dfee :=_bcgg ._fbgg .ReadBits (32);if _dfee !=nil {return _dfee ;};_bcgg .GrayMax =uint32 (_gfac &_b .MaxUint32 );
return nil ;};func (_fda *Header )readReferredToSegmentNumbers (_abaf *_c .Reader ,_gcgc int )([]int ,error ){const _ccef ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_aadg :=make ([]int ,_gcgc );if _gcgc > 0{_fda .RTSegments =make ([]*Header ,_gcgc );var (_dce uint64 ;_bbfe error ;);for _faga :=0;_faga < _gcgc ;_faga ++{_dce ,_bbfe =_abaf .ReadBits (byte (_fda .referenceSize ())<<3);if _bbfe !=nil {return nil ,_be .Wrapf (_bbfe ,_ccef ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_faga );
};_aadg [_faga ]=int (_dce &_b .MaxInt32 );};};return _aadg ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_ccec *PageInformationSegment )readContainsRefinement ()error {_baggc ,_fbee :=_ccec ._fdcb .ReadBit ();if _fbee !=nil {return _fbee ;};if _baggc ==1{_ccec ._aaec =true ;
};return nil ;};func (_afeg *HalftoneRegion )renderPattern (_gag [][]int )(_gbaf error ){var _fffc ,_dbdd int ;for _ddaa :=0;_ddaa < int (_afeg .HGridHeight );_ddaa ++{for _cefd :=0;_cefd < int (_afeg .HGridWidth );_cefd ++{_fffc =_afeg .computeX (_ddaa ,_cefd );
_dbdd =_afeg .computeY (_ddaa ,_cefd );_bgcc :=_afeg .Patterns [_gag [_ddaa ][_cefd ]];if _gbaf =_d .Blit (_bgcc ,_afeg .HalftoneRegionBitmap ,_fffc +int (_afeg .HGridX ),_dbdd +int (_afeg .HGridY ),_afeg .CombinationOperator );_gbaf !=nil {return _gbaf ;
};};};return nil ;};func (_bbfbe *SymbolDictionary )readAtPixels (_gbge int )error {_bbfbe .SdATX =make ([]int8 ,_gbge );_bbfbe .SdATY =make ([]int8 ,_gbge );var (_ceea byte ;_aebg error ;);for _fgdd :=0;_fgdd < _gbge ;_fgdd ++{_ceea ,_aebg =_bbfbe ._fage .ReadByte ();
if _aebg !=nil {return _aebg ;};_bbfbe .SdATX [_fgdd ]=int8 (_ceea );_ceea ,_aebg =_bbfbe ._fage .ReadByte ();if _aebg !=nil {return _aebg ;};_bbfbe .SdATY [_fgdd ]=int8 (_ceea );};return nil ;};func (_edbf *TableSegment )HtOOB ()int32 {return _edbf ._dbcd };
func (_edda *PageInformationSegment )encodeFlags (_fdaf _c .BinaryWriter )(_cbbg error ){const _bafe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cbbg =_fdaf .SkipBits (1);_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _eegf int ;if _edda .CombinationOperatorOverrideAllowed (){_eegf =1;};if _cbbg =_fdaf .WriteBit (_eegf );_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_eegf =0;if _edda ._ecdc {_eegf =1;};if _cbbg =_fdaf .WriteBit (_eegf );_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cbbg =_fdaf .WriteBit ((int (_edda ._bfgce )>>1)&0x01);
_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cbbg =_fdaf .WriteBit (int (_edda ._bfgce )&0x01);
_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_eegf =int (_edda .DefaultPixelValue );
if _cbbg =_fdaf .WriteBit (_eegf );_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_eegf =0;if _edda ._aaec {_eegf =1;
};if _cbbg =_fdaf .WriteBit (_eegf );_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_eegf =0;if _edda .IsLossless {_eegf =1;};if _cbbg =_fdaf .WriteBit (_eegf );
_cbbg !=nil {return _be .Wrap (_cbbg ,_bafe ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_dced *RegionSegment )Encode (w _c .BinaryWriter )(_agde int ,_gfbg error ){const _eega ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_cgcb :=make ([]byte ,4);_a .BigEndian .PutUint32 (_cgcb ,_dced .BitmapWidth );_agde ,_gfbg =w .Write (_cgcb );if _gfbg !=nil {return 0,_be .Wrap (_gfbg ,_eega ,"\u0057\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_cgcb ,_dced .BitmapHeight );var _defa int ;
_defa ,_gfbg =w .Write (_cgcb );if _gfbg !=nil {return 0,_be .Wrap (_gfbg ,_eega ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_agde +=_defa ;_a .BigEndian .PutUint32 (_cgcb ,_dced .XLocation );_defa ,_gfbg =w .Write (_cgcb );if _gfbg !=nil {return 0,_be .Wrap (_gfbg ,_eega ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_agde +=_defa ;_a .BigEndian .PutUint32 (_cgcb ,_dced .YLocation );_defa ,_gfbg =w .Write (_cgcb );if _gfbg !=nil {return 0,_be .Wrap (_gfbg ,_eega ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_agde +=_defa ;if _gfbg =w .WriteByte (byte (_dced .CombinaionOperator )&0x07);
_gfbg !=nil {return 0,_be .Wrap (_gfbg ,_eega ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_agde ++;return _agde ,nil ;};func (_agbeb *TextRegion )decodeRI ()(int64 ,error ){if !_agbeb .UseRefinement {return 0,nil ;
};if _agbeb .IsHuffmanEncoded {_ffeg ,_faef :=_agbeb ._deef .ReadBit ();return int64 (_ffeg ),_faef ;};_cbag ,_aadde :=_agbeb ._dgfa .DecodeInt (_agbeb ._gfec );return int64 (_cbag ),_aadde ;};func (_gcgfd *TextRegion )decodeIb (_bddbc ,_egfcf int64 )(*_d .Bitmap ,error ){const _bbbeg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_ddeg error ;_agfg *_d .Bitmap ;);if _bddbc ==0{if int (_egfcf )> len (_gcgfd .Symbols )-1{return nil ,_be .Error (_bbbeg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gcgfd .Symbols [int (_egfcf )],nil ;};var _adce ,_dfcbb ,_cggb ,_bgac int64 ;_adce ,_ddeg =_gcgfd .decodeRdw ();if _ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"");};_dfcbb ,_ddeg =_gcgfd .decodeRdh ();if _ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"");
};_cggb ,_ddeg =_gcgfd .decodeRdx ();if _ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"");};_bgac ,_ddeg =_gcgfd .decodeRdy ();if _ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"");};if _gcgfd .IsHuffmanEncoded {if _ ,_ddeg =_gcgfd .decodeSymInRefSize ();
_ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"");};_gcgfd ._deef .Align ();};_cfgbb :=_gcgfd .Symbols [_egfcf ];_bgbe :=uint32 (_cfgbb .Width );_ffac :=uint32 (_cfgbb .Height );_eaca :=int32 (uint32 (_adce )>>1)+int32 (_cggb );_ecaa :=int32 (uint32 (_dfcbb )>>1)+int32 (_bgac );
if _gcgfd ._eagfe ==nil {_gcgfd ._eagfe =_bfaa (_gcgfd ._deef ,nil );};_gcgfd ._eagfe .setParameters (_gcgfd ._bdca ,_gcgfd ._dgfa ,_gcgfd .SbrTemplate ,_bgbe +uint32 (_adce ),_ffac +uint32 (_dfcbb ),_cfgbb ,_eaca ,_ecaa ,false ,_gcgfd .SbrATX ,_gcgfd .SbrATY );
_agfg ,_ddeg =_gcgfd ._eagfe .GetRegionBitmap ();if _ddeg !=nil {return nil ,_be .Wrap (_ddeg ,_bbbeg ,"\u0067\u0072\u0066");};if _gcgfd .IsHuffmanEncoded {_gcgfd ._deef .Align ();};return _agfg ,nil ;};func (_cdb *Header )pageSize ()uint {if _cdb .PageAssociation <=255{return 1;
};return 4;};type EndOfStripe struct{_ac *_c .Reader ;_eg int ;};func (_dddcb *SymbolDictionary )readNumberOfNewSymbols ()error {_bebd ,_fcgg :=_dddcb ._fage .ReadBits (32);if _fcgg !=nil {return _fcgg ;};_dddcb .NumberOfNewSymbols =uint32 (_bebd &_b .MaxUint32 );
return nil ;};func (_geea *GenericRegion )overrideAtTemplate0a (_gcgf ,_dcc ,_dfe ,_fca ,_aae ,_ced int )int {if _geea .GBAtOverride [0]{_gcgf &=0xFFEF;if _geea .GBAtY [0]==0&&_geea .GBAtX [0]>=-int8 (_aae ){_gcgf |=(_fca >>uint (int8 (_ced )-_geea .GBAtX [0]&0x1))<<4;
}else {_gcgf |=int (_geea .getPixel (_dcc +int (_geea .GBAtX [0]),_dfe +int (_geea .GBAtY [0])))<<4;};};if _geea .GBAtOverride [1]{_gcgf &=0xFBFF;if _geea .GBAtY [1]==0&&_geea .GBAtX [1]>=-int8 (_aae ){_gcgf |=(_fca >>uint (int8 (_ced )-_geea .GBAtX [1]&0x1))<<10;
}else {_gcgf |=int (_geea .getPixel (_dcc +int (_geea .GBAtX [1]),_dfe +int (_geea .GBAtY [1])))<<10;};};if _geea .GBAtOverride [2]{_gcgf &=0xF7FF;if _geea .GBAtY [2]==0&&_geea .GBAtX [2]>=-int8 (_aae ){_gcgf |=(_fca >>uint (int8 (_ced )-_geea .GBAtX [2]&0x1))<<11;
}else {_gcgf |=int (_geea .getPixel (_dcc +int (_geea .GBAtX [2]),_dfe +int (_geea .GBAtY [2])))<<11;};};if _geea .GBAtOverride [3]{_gcgf &=0x7FFF;if _geea .GBAtY [3]==0&&_geea .GBAtX [3]>=-int8 (_aae ){_gcgf |=(_fca >>uint (int8 (_ced )-_geea .GBAtX [3]&0x1))<<15;
}else {_gcgf |=int (_geea .getPixel (_dcc +int (_geea .GBAtX [3]),_dfe +int (_geea .GBAtY [3])))<<15;};};return _gcgf ;};func (_cgee *HalftoneRegion )computeY (_egac ,_dggff int )int {return _cgee .shiftAndFill (int (_cgee .HGridY )+_egac *int (_cgee .HRegionX )-_dggff *int (_cgee .HRegionY ));
};func (_bbbe *GenericRegion )GetRegionInfo ()*RegionSegment {return _bbbe .RegionSegment };func (_fac *GenericRefinementRegion )setParameters (_ffcb *_efa .DecoderStats ,_gae *_efa .Decoder ,_cfa int8 ,_cff ,_eab uint32 ,_ade *_d .Bitmap ,_agd ,_eace int32 ,_bbf bool ,_fdf []int8 ,_gaca []int8 ){_fe .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ffcb !=nil {_fac ._gde =_ffcb ;};if _gae !=nil {_fac ._dg =_gae ;};_fac .TemplateID =_cfa ;_fac .RegionInfo .BitmapWidth =_cff ;_fac .RegionInfo .BitmapHeight =_eab ;_fac .ReferenceBitmap =_ade ;_fac .ReferenceDX =_agd ;_fac .ReferenceDY =_eace ;_fac .IsTPGROn =_bbf ;
_fac .GrAtX =_fdf ;_fac .GrAtY =_gaca ;_fac .RegionBitmap =nil ;_fe .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fac );
};func (_agbeg *TextRegion )decodeID ()(int64 ,error ){if _agbeg .IsHuffmanEncoded {if _agbeg ._ggad ==nil {_efabg ,_gaac :=_agbeg ._deef .ReadBits (byte (_agbeg ._ddbf ));return int64 (_efabg ),_gaac ;};return _agbeg ._ggad .Decode (_agbeg ._deef );};
return _agbeg ._dgfa .DecodeIAID (uint64 (_agbeg ._ddbf ),_agbeg ._agffd );};