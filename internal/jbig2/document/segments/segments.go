//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_c "encoding/binary";_d "errors";_ff "fmt";_ge "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/bitwise";_ea "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_be "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_aca "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_df "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ac "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_f "image";_fe "io";_ae "math";_e "strings";_ce "time";);func (_cafgf *Header )String ()string {_fgca :=&_e .Builder {};_fgca .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_fgca .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_cafgf .SegmentNumber ));_fgca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_cafgf .Type ));
_fgca .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_cafgf .RetainFlag ));_fgca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cafgf .PageAssociation ));
_fgca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cafgf .PageAssociationFieldSize ));
_fgca .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_aag :=range _cafgf .RTSNumbers {_fgca .WriteString (_ff .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_aag ));};_fgca .WriteString (_ff .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_cafgf .HeaderLength ));
_fgca .WriteString (_ff .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_cafgf .SegmentDataLength ));_fgca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_cafgf .SegmentDataStartOffset ));
return _fgca .String ();};func (_bead *GenericRefinementRegion )overrideAtTemplate0 (_gae ,_dba ,_aac ,_fbb ,_gcg int )int {if _bead ._fed [0]{_gae &=0xfff7;if _bead .GrAtY [0]==0&&int (_bead .GrAtX [0])>=-_gcg {_gae |=(_fbb >>uint (7-(_gcg +int (_bead .GrAtX [0])))&0x1)<<3;
}else {_gae |=_bead .getPixel (_bead .RegionBitmap ,_dba +int (_bead .GrAtX [0]),_aac +int (_bead .GrAtY [0]))<<3;};};if _bead ._fed [1]{_gae &=0xefff;if _bead .GrAtY [1]==0&&int (_bead .GrAtX [1])>=-_gcg {_gae |=(_fbb >>uint (7-(_gcg +int (_bead .GrAtX [1])))&0x1)<<12;
}else {_gae |=_bead .getPixel (_bead .ReferenceBitmap ,_dba +int (_bead .GrAtX [1]),_aac +int (_bead .GrAtY [1]));};};return _gae ;};func (_fgdb *Header )writeSegmentDataLength (_agcc _b .BinaryWriter )(_bbea int ,_eegb error ){_deeg :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_deeg ,uint32 (_fgdb .SegmentDataLength ));if _bbea ,_eegb =_agcc .Write (_deeg );_eegb !=nil {return 0,_ac .Wrap (_eegb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _bbea ,nil ;};type GenericRefinementRegion struct{_af templater ;_ad templater ;_acab *_b .Reader ;_aeg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_be .Bitmap ;
ReferenceBitmap *_be .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_bg *_aca .Decoder ;_bge *_aca .DecoderStats ;_eb bool ;_fed []bool ;};func (_ba *EndOfStripe )parseHeader ()error {_bae ,_fc :=_ba ._ga .ReadBits (32);if _fc !=nil {return _fc ;};_ba ._cd =int (_bae &_ae .MaxInt32 );
return nil ;};func (_ade *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_acd ,_cdb ,_afa ,_efb ,_acbe ,_cge ,_cee ,_ebd ,_db int )error {var (_bbb ,_egf ,_gad ,_gfe ,_ab ,_gd int ;_aad byte ;_ffa error ;);if _acd > 0{_aad ,_ffa =_ade .RegionBitmap .GetByte (_cee -_afa );
if _ffa !=nil {return _ffa ;};_gad =int (_aad );};if _ebd > 0&&_ebd <=_ade .ReferenceBitmap .Height {_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db -_efb +_cge );if _ffa !=nil {return _ffa ;};_gfe =int (_aad )<<4;};if _ebd >=0&&_ebd < _ade .ReferenceBitmap .Height {_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db +_cge );
if _ffa !=nil {return _ffa ;};_ab =int (_aad )<<1;};if _ebd > -2&&_ebd < _ade .ReferenceBitmap .Height -1{_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db +_efb +_cge );if _ffa !=nil {return _ffa ;};_gd =int (_aad );};_bbb =((_gad >>5)&0x6)|((_gd >>2)&0x30)|(_ab &0x180)|(_gfe &0xc00);
var _gg int ;for _faca :=0;_faca < _acbe ;_faca =_gg {var _efae int ;_gg =_faca +8;var _bc int ;if _bc =_cdb -_faca ;_bc > 8{_bc =8;};_abg :=_gg < _cdb ;_dg :=_gg < _ade .ReferenceBitmap .Width ;_dde :=_cge +1;if _acd > 0{_aad =0;if _abg {_aad ,_ffa =_ade .RegionBitmap .GetByte (_cee -_afa +1);
if _ffa !=nil {return _ffa ;};};_gad =(_gad <<8)|int (_aad );};if _ebd > 0&&_ebd <=_ade .ReferenceBitmap .Height {var _bee int ;if _dg {_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db -_efb +_dde );if _ffa !=nil {return _ffa ;};_bee =int (_aad )<<4;};_gfe =(_gfe <<8)|_bee ;
};if _ebd >=0&&_ebd < _ade .ReferenceBitmap .Height {var _fg int ;if _dg {_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db +_dde );if _ffa !=nil {return _ffa ;};_fg =int (_aad )<<1;};_ab =(_ab <<8)|_fg ;};if _ebd > -2&&_ebd < (_ade .ReferenceBitmap .Height -1){_aad =0;
if _dg {_aad ,_ffa =_ade .ReferenceBitmap .GetByte (_db +_efb +_dde );if _ffa !=nil {return _ffa ;};};_gd =(_gd <<8)|int (_aad );};for _ege :=0;_ege < _bc ;_ege ++{var _gea int ;_egd :=false ;_bgc :=(_bbb >>4)&0x1ff;if _bgc ==0x1ff{_egd =true ;_gea =1;
}else if _bgc ==0x00{_egd =true ;};if !_egd {if _ade ._eb {_egf =_ade .overrideAtTemplate0 (_bbb ,_faca +_ege ,_acd ,_efae ,_ege );_ade ._bge .SetIndex (int32 (_egf ));}else {_ade ._bge .SetIndex (int32 (_bbb ));};_gea ,_ffa =_ade ._bg .DecodeBit (_ade ._bge );
if _ffa !=nil {return _ffa ;};};_dcg :=uint (7-_ege );_efae |=_gea <<_dcg ;_bbb =((_bbb &0xdb6)<<1)|_gea |(_gad >>_dcg +5)&0x002|((_gd >>_dcg +2)&0x010)|((_ab >>_dcg )&0x080)|((_gfe >>_dcg )&0x400);};_ffa =_ade .RegionBitmap .SetByte (_cee ,byte (_efae ));
if _ffa !=nil {return _ffa ;};_cee ++;_db ++;};return nil ;};func (_edae *HalftoneRegion )computeGrayScalePlanes (_bbec []*_be .Bitmap ,_fege int )([][]int ,error ){_abfg :=make ([][]int ,_edae .HGridHeight );for _gag :=0;_gag < len (_abfg );_gag ++{_abfg [_gag ]=make ([]int ,_edae .HGridWidth );
};for _baf :=0;_baf < int (_edae .HGridHeight );_baf ++{for _aee :=0;_aee < int (_edae .HGridWidth );_aee +=8{var _faba int ;if _dgd :=int (_edae .HGridWidth )-_aee ;_dgd > 8{_faba =8;}else {_faba =_dgd ;};_fceg :=_bbec [0].GetByteIndex (_aee ,_baf );for _dgcf :=0;
_dgcf < _faba ;_dgcf ++{_gadef :=_dgcf +_aee ;_abfg [_baf ][_gadef ]=0;for _cfcg :=0;_cfcg < _fege ;_cfcg ++{_ebcf ,_fgfd :=_bbec [_cfcg ].GetByte (_fceg );if _fgfd !=nil {return nil ,_fgfd ;};_cfeb :=_ebcf >>uint (7-_gadef &7);_bfbf :=_cfeb &1;_gcd :=1<<uint (_cfcg );
_dgec :=int (_bfbf )*_gcd ;_abfg [_baf ][_gadef ]+=_dgec ;};};};};return _abfg ,nil ;};func (_cbda *Header )subInputReader ()(*_b .Reader ,error ){_ffda :=int (_cbda .SegmentDataLength );if _cbda .SegmentDataLength ==_ae .MaxInt32 {_ffda =-1;};return _cbda .Reader .NewPartialReader (int (_cbda .SegmentDataStartOffset ),_ffda ,false );
};func (_aefb *Header )readHeaderLength (_caaf *_b .Reader ,_ada int64 ){_aefb .HeaderLength =_caaf .AbsolutePosition ()-_ada ;};func (_geefa *TextRegion )blit (_afabe *_be .Bitmap ,_gfced int64 )error {if _geefa .IsTransposed ==0&&(_geefa .ReferenceCorner ==2||_geefa .ReferenceCorner ==3){_geefa ._eaga +=int64 (_afabe .Width -1);
}else if _geefa .IsTransposed ==1&&(_geefa .ReferenceCorner ==0||_geefa .ReferenceCorner ==2){_geefa ._eaga +=int64 (_afabe .Height -1);};_gbfaf :=_geefa ._eaga ;if _geefa .IsTransposed ==1{_gbfaf ,_gfced =_gfced ,_gbfaf ;};switch _geefa .ReferenceCorner {case 0:_gfced -=int64 (_afabe .Height -1);
case 2:_gfced -=int64 (_afabe .Height -1);_gbfaf -=int64 (_afabe .Width -1);case 3:_gbfaf -=int64 (_afabe .Width -1);};_eaea :=_be .Blit (_afabe ,_geefa .RegionBitmap ,int (_gbfaf ),int (_gfced ),_geefa .CombinationOperator );if _eaea !=nil {return _eaea ;
};if _geefa .IsTransposed ==0&&(_geefa .ReferenceCorner ==0||_geefa .ReferenceCorner ==1){_geefa ._eaga +=int64 (_afabe .Width -1);};if _geefa .IsTransposed ==1&&(_geefa .ReferenceCorner ==1||_geefa .ReferenceCorner ==3){_geefa ._eaga +=int64 (_afabe .Height -1);
};return nil ;};func (_dbfa *SymbolDictionary )setRetainedCodingContexts (_gcdc *SymbolDictionary ){_dbfa ._gede =_gcdc ._gede ;_dbfa .IsHuffmanEncoded =_gcdc .IsHuffmanEncoded ;_dbfa .UseRefinementAggregation =_gcdc .UseRefinementAggregation ;_dbfa .SdTemplate =_gcdc .SdTemplate ;
_dbfa .SdrTemplate =_gcdc .SdrTemplate ;_dbfa .SdATX =_gcdc .SdATX ;_dbfa .SdATY =_gcdc .SdATY ;_dbfa .SdrATX =_gcdc .SdrATX ;_dbfa .SdrATY =_gcdc .SdrATY ;_dbfa ._bgba =_gcdc ._bgba ;};func (_bffb *TextRegion )GetRegionBitmap ()(*_be .Bitmap ,error ){if _bffb .RegionBitmap !=nil {return _bffb .RegionBitmap ,nil ;
};if !_bffb .IsHuffmanEncoded {if _ebgg :=_bffb .setCodingStatistics ();_ebgg !=nil {return nil ,_ebgg ;};};if _fgfe :=_bffb .createRegionBitmap ();_fgfe !=nil {return nil ,_fgfe ;};if _dagf :=_bffb .decodeSymbolInstances ();_dagf !=nil {return nil ,_dagf ;
};return _bffb .RegionBitmap ,nil ;};func (_eaccc *TextRegion )decodeRdx ()(int64 ,error ){const _beac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _eaccc .IsHuffmanEncoded {if _eaccc .SbHuffRDX ==3{if _eaccc ._efdf ==nil {var (_ffgc int ;_fdfe error ;
);if _eaccc .SbHuffFS ==3{_ffgc ++;};if _eaccc .SbHuffDS ==3{_ffgc ++;};if _eaccc .SbHuffDT ==3{_ffgc ++;};if _eaccc .SbHuffRDWidth ==3{_ffgc ++;};if _eaccc .SbHuffRDHeight ==3{_ffgc ++;};_eaccc ._efdf ,_fdfe =_eaccc .getUserTable (_ffgc );if _fdfe !=nil {return 0,_ac .Wrap (_fdfe ,_beac ,"");
};};return _eaccc ._efdf .Decode (_eaccc ._bfde );};_gfea ,_ebcdf :=_dc .GetStandardTable (14+int (_eaccc .SbHuffRDX ));if _ebcdf !=nil {return 0,_ac .Wrap (_ebcdf ,_beac ,"");};return _gfea .Decode (_eaccc ._bfde );};_dafdb ,_gdab :=_eaccc ._bfga .DecodeInt (_eaccc ._bcfe );
if _gdab !=nil {return 0,_ac .Wrap (_gdab ,_beac ,"");};return int64 (_dafdb ),nil ;};func (_ggeb *TextRegion )decodeRI ()(int64 ,error ){if !_ggeb .UseRefinement {return 0,nil ;};if _ggeb .IsHuffmanEncoded {_adad ,_ecdga :=_ggeb ._bfde .ReadBit ();return int64 (_adad ),_ecdga ;
};_dfgg ,_gcbce :=_ggeb ._bfga .DecodeInt (_ggeb ._cace );return int64 (_dfgg ),_gcbce ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_cdcca *PatternDictionary )Init (h *Header ,r *_b .Reader )error {_cdcca ._abca =r ;
return _cdcca .parseHeader ();};func (_cdcc *Header )readDataStartOffset (_gcbg *_b .Reader ,_fdc OrganizationType ){if _fdc ==OSequential {_cdcc .SegmentDataStartOffset =uint64 (_gcbg .AbsolutePosition ());};};func (_cbac *SymbolDictionary )decodeThroughTextRegion (_ggbg ,_fge ,_dbca uint32 )error {if _cbac ._agb ==nil {_cbac ._agb =_daac (_cbac ._ffaa ,nil );
_cbac ._agb .setContexts (_cbac ._bgba ,_aca .NewStats (512,1),_aca .NewStats (512,1),_aca .NewStats (512,1),_aca .NewStats (512,1),_cbac ._gecad ,_aca .NewStats (512,1),_aca .NewStats (512,1),_aca .NewStats (512,1),_aca .NewStats (512,1));};if _gfb :=_cbac .setSymbolsArray ();
_gfb !=nil {return _gfb ;};_cbac ._agb .setParameters (_cbac ._gede ,_cbac .IsHuffmanEncoded ,true ,_ggbg ,_fge ,_dbca ,1,_cbac ._debf +_cbac ._adbc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cbac .SdrTemplate ,_cbac .SdrATX ,_cbac .SdrATY ,_cbac ._aegd ,_cbac ._dddb );
return _cbac .addSymbol (_cbac ._agb );};func (_bdfeg *Header )readSegmentDataLength (_deaf *_b .Reader )(_gacd error ){_bdfeg .SegmentDataLength ,_gacd =_deaf .ReadBits (32);if _gacd !=nil {return _gacd ;};_bdfeg .SegmentDataLength &=_ae .MaxInt32 ;return nil ;
};func (_gdfc *TableSegment )HtRS ()int32 {return _gdfc ._cbea };func (_efe *SymbolDictionary )decodeNewSymbols (_fbgg ,_gcaf uint32 ,_fgba *_be .Bitmap ,_dgbd ,_bcbf int32 )error {if _efe ._dddc ==nil {_efe ._dddc =_ead (_efe ._ffaa ,nil );if _efe ._gede ==nil {var _gbfad error ;
_efe ._gede ,_gbfad =_aca .New (_efe ._ffaa );if _gbfad !=nil {return _gbfad ;};};if _efe ._bgba ==nil {_efe ._bgba =_aca .NewStats (65536,1);};};_efe ._dddc .setParameters (_efe ._bgba ,_efe ._gede ,_efe .SdrTemplate ,_fbgg ,_gcaf ,_fgba ,_dgbd ,_bcbf ,false ,_efe .SdrATX ,_efe .SdrATY );
return _efe .addSymbol (_efe ._dddc );};func (_bcbe *SymbolDictionary )String ()string {_egab :=&_e .Builder {};_egab .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_egab .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bcbe .SdrTemplate ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bcbe .SdTemplate ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bcbe ._dfbd ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bcbe ._aegee ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bcbe .SdHuffAggInstanceSelection ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bcbe .SdHuffBMSizeSelection ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bcbe .SdHuffDecodeWidthSelection ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bcbe .SdHuffDecodeHeightSelection ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bcbe .UseRefinementAggregation ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bcbe .IsHuffmanEncoded ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bcbe .SdATX ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bcbe .SdATY ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bcbe .SdrATX ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bcbe .SdrATY ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bcbe .NumberOfExportedSymbols ));
_egab .WriteString (_ff .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bcbe .NumberOfNewSymbols ));_egab .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bcbe ._debf ));
_egab .WriteString (_ff .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bcbe ._adbc ));return _egab .String ();};func (_cdgf *GenericRegion )GetRegionInfo ()*RegionSegment {return _cdgf .RegionSegment };
func (_afc *HalftoneRegion )Init (hd *Header ,r *_b .Reader )error {_afc ._daec =r ;_afc ._eba =hd ;_afc .RegionSegment =NewRegionSegment (r );return _afc .parseHeader ();};func (_faabg *RegionSegment )parseHeader ()error {const _bgbe ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ge .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ge .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ffad ,_bbeae :=_faabg ._ddaf .ReadBits (32);if _bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"\u0077\u0069\u0064t\u0068");};_faabg .BitmapWidth =uint32 (_ffad &_ae .MaxUint32 );_ffad ,_bbeae =_faabg ._ddaf .ReadBits (32);if _bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_faabg .BitmapHeight =uint32 (_ffad &_ae .MaxUint32 );_ffad ,_bbeae =_faabg ._ddaf .ReadBits (32);if _bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faabg .XLocation =uint32 (_ffad &_ae .MaxUint32 );
_ffad ,_bbeae =_faabg ._ddaf .ReadBits (32);if _bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faabg .YLocation =uint32 (_ffad &_ae .MaxUint32 );if _ ,_bbeae =_faabg ._ddaf .ReadBits (5);
_bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _bbeae =_faabg .readCombinationOperator ();_bbeae !=nil {return _ac .Wrap (_bbeae ,_bgbe ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_bfc *GenericRegion )updateOverrideFlags ()error {const _cbd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bfc .GBAtX ==nil ||_bfc .GBAtY ==nil {return nil ;};if len (_bfc .GBAtX )!=len (_bfc .GBAtY ){return _ac .Errorf (_cbd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_bfc .GBAtX ),len (_bfc .GBAtY ));
};_bfc .GBAtOverride =make ([]bool ,len (_bfc .GBAtX ));switch _bfc .GBTemplate {case 0:if !_bfc .UseExtTemplates {if _bfc .GBAtX [0]!=3||_bfc .GBAtY [0]!=-1{_bfc .setOverrideFlag (0);};if _bfc .GBAtX [1]!=-3||_bfc .GBAtY [1]!=-1{_bfc .setOverrideFlag (1);
};if _bfc .GBAtX [2]!=2||_bfc .GBAtY [2]!=-2{_bfc .setOverrideFlag (2);};if _bfc .GBAtX [3]!=-2||_bfc .GBAtY [3]!=-2{_bfc .setOverrideFlag (3);};}else {if _bfc .GBAtX [0]!=-2||_bfc .GBAtY [0]!=0{_bfc .setOverrideFlag (0);};if _bfc .GBAtX [1]!=0||_bfc .GBAtY [1]!=-2{_bfc .setOverrideFlag (1);
};if _bfc .GBAtX [2]!=-2||_bfc .GBAtY [2]!=-1{_bfc .setOverrideFlag (2);};if _bfc .GBAtX [3]!=-1||_bfc .GBAtY [3]!=-2{_bfc .setOverrideFlag (3);};if _bfc .GBAtX [4]!=1||_bfc .GBAtY [4]!=-2{_bfc .setOverrideFlag (4);};if _bfc .GBAtX [5]!=2||_bfc .GBAtY [5]!=-1{_bfc .setOverrideFlag (5);
};if _bfc .GBAtX [6]!=-3||_bfc .GBAtY [6]!=0{_bfc .setOverrideFlag (6);};if _bfc .GBAtX [7]!=-4||_bfc .GBAtY [7]!=0{_bfc .setOverrideFlag (7);};if _bfc .GBAtX [8]!=2||_bfc .GBAtY [8]!=-2{_bfc .setOverrideFlag (8);};if _bfc .GBAtX [9]!=3||_bfc .GBAtY [9]!=-1{_bfc .setOverrideFlag (9);
};if _bfc .GBAtX [10]!=-2||_bfc .GBAtY [10]!=-2{_bfc .setOverrideFlag (10);};if _bfc .GBAtX [11]!=-3||_bfc .GBAtY [11]!=-1{_bfc .setOverrideFlag (11);};};case 1:if _bfc .GBAtX [0]!=3||_bfc .GBAtY [0]!=-1{_bfc .setOverrideFlag (0);};case 2:if _bfc .GBAtX [0]!=2||_bfc .GBAtY [0]!=-1{_bfc .setOverrideFlag (0);
};case 3:if _bfc .GBAtX [0]!=2||_bfc .GBAtY [0]!=-1{_bfc .setOverrideFlag (0);};};return nil ;};var _ templater =&template0 {};func (_fbfc *GenericRegion )InitEncode (bm *_be .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _bdc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ac .Error (_bdc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ac .Error (_bdc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fbfc .Bitmap =bm ;_fbfc .GBTemplate =byte (template );switch _fbfc .GBTemplate {case 0:_fbfc .GBAtX =[]int8 {3,-3,2,-2};_fbfc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fbfc .GBAtX =[]int8 {3};_fbfc .GBAtY =[]int8 {-1};case 2,3:_fbfc .GBAtX =[]int8 {2};_fbfc .GBAtY =[]int8 {-1};
default:return _ac .Errorf (_bdc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fbfc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fbfc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_bfae *SymbolDictionary )getSbSymCodeLen ()int8 {_ggaa :=int8 (_ae .Ceil (_ae .Log (float64 (_bfae ._debf +_bfae .NumberOfNewSymbols ))/_ae .Log (2)));
if _bfae .IsHuffmanEncoded &&_ggaa < 1{return 1;};return _ggaa ;};func (_egeeb *Header )referenceSize ()uint {switch {case _egeeb .SegmentNumber <=255:return 1;case _egeeb .SegmentNumber <=65535:return 2;default:return 4;};};func (_fcdg *template1 )setIndex (_acf *_aca .DecoderStats ){_acf .SetIndex (0x080)};
func (_geac *TextRegion )initSymbols ()error {const _cacd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fgcf :=range _geac .Header .RTSegments {if _fgcf ==nil {return _ac .Error (_cacd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fgcf .Type ==0{_ffed ,_ddbeb :=_fgcf .GetSegmentData ();if _ddbeb !=nil {return _ac .Wrap (_ddbeb ,_cacd ,"");};_fdfb ,_fbcf :=_ffed .(*SymbolDictionary );if !_fbcf {return _ac .Error (_cacd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fdfb ._gecad =_geac ._fgef ;_ccaf ,_ddbeb :=_fdfb .GetDictionary ();if _ddbeb !=nil {return _ac .Wrap (_ddbeb ,_cacd ,"");};_geac .Symbols =append (_geac .Symbols ,_ccaf ...);};};_geac .NumberOfSymbols =uint32 (len (_geac .Symbols ));return nil ;};func (_bgcd *PageInformationSegment )Encode (w _b .BinaryWriter )(_fdca int ,_adfd error ){const _ggee ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_eaaa :=make ([]byte ,4);_c .BigEndian .PutUint32 (_eaaa ,uint32 (_bgcd .PageBMWidth ));_fdca ,_adfd =w .Write (_eaaa );if _adfd !=nil {return _fdca ,_ac .Wrap (_adfd ,_ggee ,"\u0077\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_eaaa ,uint32 (_bgcd .PageBMHeight ));
var _ebbb int ;_ebbb ,_adfd =w .Write (_eaaa );if _adfd !=nil {return _ebbb +_fdca ,_ac .Wrap (_adfd ,_ggee ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fdca +=_ebbb ;_c .BigEndian .PutUint32 (_eaaa ,uint32 (_bgcd .ResolutionX ));_ebbb ,_adfd =w .Write (_eaaa );
if _adfd !=nil {return _ebbb +_fdca ,_ac .Wrap (_adfd ,_ggee ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fdca +=_ebbb ;_c .BigEndian .PutUint32 (_eaaa ,uint32 (_bgcd .ResolutionY ));if _ebbb ,_adfd =w .Write (_eaaa );_adfd !=nil {return _ebbb +_fdca ,_ac .Wrap (_adfd ,_ggee ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_fdca +=_ebbb ;if _adfd =_bgcd .encodeFlags (w );_adfd !=nil {return _fdca ,_ac .Wrap (_adfd ,_ggee ,"");};_fdca ++;if _ebbb ,_adfd =_bgcd .encodeStripingInformation (w );_adfd !=nil {return _fdca ,_ac .Wrap (_adfd ,_ggee ,"");};_fdca +=_ebbb ;return _fdca ,nil ;
};func (_cddc *TableSegment )HtOOB ()int32 {return _cddc ._acdeg };func (_dge *GenericRegion )Init (h *Header ,r *_b .Reader )error {_dge .RegionSegment =NewRegionSegment (r );_dge ._acfe =r ;return _dge .parseHeader ();};func (_bgfd *GenericRegion )decodeTemplate1 (_ecf ,_bdge ,_deb int ,_bce ,_ebg int )(_abb error ){const _cae ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_add ,_gcbc int ;_dgba ,_cgge int ;_caa byte ;_gebec ,_egdc int ;);if _ecf >=1{_caa ,_abb =_bgfd .Bitmap .GetByte (_ebg );if _abb !=nil {return _ac .Wrap (_abb ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dgba =int (_caa );};if _ecf >=2{_caa ,_abb =_bgfd .Bitmap .GetByte (_ebg -_bgfd .Bitmap .RowStride );
if _abb !=nil {return _ac .Wrap (_abb ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cgge =int (_caa )<<5;};_add =((_dgba >>1)&0x1f8)|((_cgge >>1)&0x1e00);for _dcaa :=0;_dcaa < _deb ;_dcaa =_gebec {var (_cafg byte ;_aaf int ;);_gebec =_dcaa +8;
if _feef :=_bdge -_dcaa ;_feef > 8{_aaf =8;}else {_aaf =_feef ;};if _ecf > 0{_dgba <<=8;if _gebec < _bdge {_caa ,_abb =_bgfd .Bitmap .GetByte (_ebg +1);if _abb !=nil {return _ac .Wrap (_abb ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dgba |=int (_caa );
};};if _ecf > 1{_cgge <<=8;if _gebec < _bdge {_caa ,_abb =_bgfd .Bitmap .GetByte (_ebg -_bgfd .Bitmap .RowStride +1);if _abb !=nil {return _ac .Wrap (_abb ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cgge |=int (_caa )<<5;};};for _bab :=0;
_bab < _aaf ;_bab ++{if _bgfd ._bbba {_gcbc =_bgfd .overrideAtTemplate1 (_add ,_dcaa +_bab ,_ecf ,int (_cafg ),_bab );_bgfd ._bed .SetIndex (int32 (_gcbc ));}else {_bgfd ._bed .SetIndex (int32 (_add ));};_egdc ,_abb =_bgfd ._befa .DecodeBit (_bgfd ._bed );
if _abb !=nil {return _ac .Wrap (_abb ,_cae ,"");};_cafg |=byte (_egdc )<<uint (7-_bab );_fafb :=uint (8-_bab );_add =((_add &0xefb)<<1)|_egdc |((_dgba >>_fafb )&0x8)|((_cgge >>_fafb )&0x200);};if _ddc :=_bgfd .Bitmap .SetByte (_bce ,_cafg );_ddc !=nil {return _ac .Wrap (_ddc ,_cae ,"");
};_bce ++;_ebg ++;};return nil ;};func (_gaefd *SymbolDictionary )addSymbol (_fdba Regioner )error {_bagg ,_affe :=_fdba .GetRegionBitmap ();if _affe !=nil {return _affe ;};_gaefd ._cefe [_gaefd ._adbc ]=_bagg ;_gaefd ._aegd =append (_gaefd ._aegd ,_bagg );
_ge .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_bagg );return nil ;};func (_edeb *PatternDictionary )computeSegmentDataStructure ()error {_edeb .DataOffset =_edeb ._abca .AbsolutePosition ();
_edeb .DataHeaderLength =_edeb .DataOffset -_edeb .DataHeaderOffset ;_edeb .DataLength =int64 (_edeb ._abca .AbsoluteLength ())-_edeb .DataHeaderLength ;return nil ;};func (_afcg *PatternDictionary )GetDictionary ()([]*_be .Bitmap ,error ){if _afcg .Patterns !=nil {return _afcg .Patterns ,nil ;
};if !_afcg .IsMMREncoded {_afcg .setGbAtPixels ();};_cggdg :=NewGenericRegion (_afcg ._abca );_cggdg .setParametersMMR (_afcg .IsMMREncoded ,_afcg .DataOffset ,_afcg .DataLength ,uint32 (_afcg .HdpHeight ),(_afcg .GrayMax +1)*uint32 (_afcg .HdpWidth ),_afcg .HDTemplate ,false ,false ,_afcg .GBAtX ,_afcg .GBAtY );
_cdd ,_eafg :=_cggdg .GetRegionBitmap ();if _eafg !=nil {return nil ,_eafg ;};if _eafg =_afcg .extractPatterns (_cdd );_eafg !=nil {return nil ,_eafg ;};return _afcg .Patterns ,nil ;};func (_dadb *SymbolDictionary )Init (h *Header ,r *_b .Reader )error {_dadb .Header =h ;
_dadb ._ffaa =r ;return _dadb .parseHeader ();};func (_aced *SymbolDictionary )readNumberOfExportedSymbols ()error {_babc ,_edcg :=_aced ._ffaa .ReadBits (32);if _edcg !=nil {return _edcg ;};_aced .NumberOfExportedSymbols =uint32 (_babc &_ae .MaxUint32 );
return nil ;};type template1 struct{};func (_dfe *EndOfStripe )Init (h *Header ,r *_b .Reader )error {_dfe ._ga =r ;return _dfe .parseHeader ()};func (_dbff *TextRegion )readHuffmanFlags ()error {var (_dfgc int ;_fdg uint64 ;_adbf error ;);_ ,_adbf =_dbff ._bfde .ReadBit ();
if _adbf !=nil {return _adbf ;};_dfgc ,_adbf =_dbff ._bfde .ReadBit ();if _adbf !=nil {return _adbf ;};_dbff .SbHuffRSize =int8 (_dfgc );_fdg ,_adbf =_dbff ._bfde .ReadBits (2);if _adbf !=nil {return _adbf ;};_dbff .SbHuffRDY =int8 (_fdg )&0xf;_fdg ,_adbf =_dbff ._bfde .ReadBits (2);
if _adbf !=nil {return _adbf ;};_dbff .SbHuffRDX =int8 (_fdg )&0xf;_fdg ,_adbf =_dbff ._bfde .ReadBits (2);if _adbf !=nil {return _adbf ;};_dbff .SbHuffRDHeight =int8 (_fdg )&0xf;_fdg ,_adbf =_dbff ._bfde .ReadBits (2);if _adbf !=nil {return _adbf ;};_dbff .SbHuffRDWidth =int8 (_fdg )&0xf;
_fdg ,_adbf =_dbff ._bfde .ReadBits (2);if _adbf !=nil {return _adbf ;};_dbff .SbHuffDT =int8 (_fdg )&0xf;_fdg ,_adbf =_dbff ._bfde .ReadBits (2);if _adbf !=nil {return _adbf ;};_dbff .SbHuffDS =int8 (_fdg )&0xf;_fdg ,_adbf =_dbff ._bfde .ReadBits (2);
if _adbf !=nil {return _adbf ;};_dbff .SbHuffFS =int8 (_fdg )&0xf;return nil ;};func (_fced *SymbolDictionary )encodeFlags (_abcg _b .BinaryWriter )(_accg int ,_ebff error ){const _bgcf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ebff =_abcg .SkipBits (3);
_ebff !=nil {return 0,_ac .Wrap (_ebff ,_bgcf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _geab int ;if _fced .SdrTemplate > 0{_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_geab =0;if _fced .SdTemplate > 1{_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_geab =0;if _fced .SdTemplate ==1||_fced .SdTemplate ==3{_geab =1;
};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_geab =0;if _fced ._dfbd {_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_geab =0;if _fced ._aegee {_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_geab =0;if _fced .SdHuffAggInstanceSelection {_geab =1;
};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_geab =int (_fced .SdHuffBMSizeSelection );if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_geab =0;if _fced .SdHuffDecodeWidthSelection > 1{_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_geab =0;switch _fced .SdHuffDecodeWidthSelection {case 1,3:_geab =1;
};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_geab =0;if _fced .SdHuffDecodeHeightSelection > 1{_geab =1;};if _ebff =_abcg .WriteBit (_geab );
_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_geab =0;switch _fced .SdHuffDecodeHeightSelection {case 1,3:_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_geab =0;if _fced .UseRefinementAggregation {_geab =1;};if _ebff =_abcg .WriteBit (_geab );_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_geab =0;if _fced .IsHuffmanEncoded {_geab =1;};if _ebff =_abcg .WriteBit (_geab );
_ebff !=nil {return _accg ,_ac .Wrap (_ebff ,_bgcf ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_afca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_eegeb int64 ,_bceg ,_fba uint32 )(*_be .Bitmap ,error ){if _eegeb ==0{_bgcc :=_be .New (int (_fba ),int (_bceg ));
var (_dgff byte ;_fafg error ;);for _befb :=0;_befb < len (_bgcc .Data );_befb ++{_dgff ,_fafg =_afca ._ffaa .ReadByte ();if _fafg !=nil {return nil ,_fafg ;};if _fafg =_bgcc .SetByte (_befb ,_dgff );_fafg !=nil {return nil ,_fafg ;};};return _bgcc ,nil ;
};if _afca ._bbfdd ==nil {_afca ._bbfdd =NewGenericRegion (_afca ._ffaa );};_afca ._bbfdd .setParameters (true ,_afca ._ffaa .AbsolutePosition (),_eegeb ,_bceg ,_fba );_ccde ,_ggad :=_afca ._bbfdd .GetRegionBitmap ();if _ggad !=nil {return nil ,_ggad ;
};return _ccde ,nil ;};func (_gbgc *Header )readHeaderFlags ()error {const _efd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_aeda ,_bdfa :=_gbgc .Reader .ReadBit ();if _bdfa !=nil {return _ac .Wrap (_bdfa ,_efd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _aeda !=0{_gbgc .RetainFlag =true ;};_aeda ,_bdfa =_gbgc .Reader .ReadBit ();if _bdfa !=nil {return _ac .Wrap (_bdfa ,_efd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _aeda !=0{_gbgc .PageAssociationFieldSize =true ;
};_abga ,_bdfa :=_gbgc .Reader .ReadBits (6);if _bdfa !=nil {return _ac .Wrap (_bdfa ,_efd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gbgc .Type =Type (int (_abga ));return nil ;};func (_baga *PageInformationSegment )readWidthAndHeight ()error {_ffcd ,_ddd :=_baga ._eegd .ReadBits (32);
if _ddd !=nil {return _ddd ;};_baga .PageBMWidth =int (_ffcd &_ae .MaxInt32 );_ffcd ,_ddd =_baga ._eegd .ReadBits (32);if _ddd !=nil {return _ddd ;};_baga .PageBMHeight =int (_ffcd &_ae .MaxInt32 );return nil ;};func (_cgec *SymbolDictionary )getSymbol (_aeba int )(*_be .Bitmap ,error ){const _deag ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_cede ,_cbdf :=_cgec ._gdaa .GetBitmap (_cgec ._eabgf [_aeba ]);if _cbdf !=nil {return nil ,_ac .Wrap (_cbdf ,_deag ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cede ,nil ;};func (_gbfd *TextRegion )createRegionBitmap ()error {_gbfd .RegionBitmap =_be .New (int (_gbfd .RegionInfo .BitmapWidth ),int (_gbfd .RegionInfo .BitmapHeight ));
if _gbfd .DefaultPixel !=0{_gbfd .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_ffb *EndOfStripe )LineNumber ()int {return _ffb ._cd };func (_effc *TextRegion )GetRegionInfo ()*RegionSegment {return _effc .RegionInfo };func (_eefe *Header )writeReferredToCount (_bddcg _b .BinaryWriter )(_eacc int ,_agcg error ){const _abc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_eefe .RTSNumbers =make ([]int ,len (_eefe .RTSegments ));for _dbef ,_fgcb :=range _eefe .RTSegments {_eefe .RTSNumbers [_dbef ]=int (_fgcb .SegmentNumber );};if len (_eefe .RTSNumbers )<=4{var _ccce byte ;if len (_eefe .RetainBits )>=1{_ccce =_eefe .RetainBits [0];
};_ccce |=byte (len (_eefe .RTSNumbers ))<<5;if _agcg =_bddcg .WriteByte (_ccce );_agcg !=nil {return 0,_ac .Wrap (_agcg ,_abc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ggb :=uint32 (len (_eefe .RTSNumbers ));
_badd :=make ([]byte ,4+_ea .Ceil (len (_eefe .RTSNumbers )+1,8));_ggb |=0x7<<29;_c .BigEndian .PutUint32 (_badd ,_ggb );copy (_badd [1:],_eefe .RetainBits );_eacc ,_agcg =_bddcg .Write (_badd );if _agcg !=nil {return 0,_ac .Wrap (_agcg ,_abc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _eacc ,nil ;};func (_cbad *HalftoneRegion )computeSegmentDataStructure ()error {_cbad .DataOffset =_cbad ._daec .AbsolutePosition ();_cbad .DataHeaderLength =_cbad .DataOffset -_cbad .DataHeaderOffset ;_cbad .DataLength =int64 (_cbad ._daec .AbsoluteLength ())-_cbad .DataHeaderLength ;
return nil ;};func (_gbbe *PageInformationSegment )readIsStriped ()error {_fdae ,_gcca :=_gbbe ._eegd .ReadBit ();if _gcca !=nil {return _gcca ;};if _fdae ==1{_gbbe .IsStripe =true ;};return nil ;};func (_fca *GenericRegion )setParametersMMR (_ddb bool ,_dcb ,_egee int64 ,_fde ,_gcc uint32 ,_abbba byte ,_eadf ,_feda bool ,_aadd ,_bgec []int8 ){_fca .DataOffset =_dcb ;
_fca .DataLength =_egee ;_fca .RegionSegment =&RegionSegment {};_fca .RegionSegment .BitmapHeight =_fde ;_fca .RegionSegment .BitmapWidth =_gcc ;_fca .GBTemplate =_abbba ;_fca .IsMMREncoded =_ddb ;_fca .IsTPGDon =_eadf ;_fca .GBAtX =_aadd ;_fca .GBAtY =_bgec ;
};func (_ddce *SymbolDictionary )InitEncode (symbols *_be .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gebb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_ddce .SdATX =[]int8 {3,-3,2,-2};_ddce .SdATY =[]int8 {-1,-1,-2,-2};_ddce ._gdaa =symbols ;_ddce ._eabgf =make ([]int ,len (symbolList ));copy (_ddce ._eabgf ,symbolList );if len (_ddce ._eabgf )!=_ddce ._gdaa .Size (){return _ac .Error (_gebb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_ddce .NumberOfNewSymbols =uint32 (symbols .Size ());_ddce .NumberOfExportedSymbols =uint32 (symbols .Size ());_ddce ._cbed =symbolMap ;_ddce ._egbga =unborderSymbols ;return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_bcabb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bcabb .IsHuffmanEncoded {switch _bcabb .SdHuffDecodeWidthSelection {case 0:_fgagd ,_gfdc :=_dc .GetStandardTable (2);if _gfdc !=nil {return 0,_gfdc ;
};return _fgagd .Decode (_bcabb ._ffaa );case 1:_cbcac ,_dgad :=_dc .GetStandardTable (3);if _dgad !=nil {return 0,_dgad ;};return _cbcac .Decode (_bcabb ._ffaa );case 3:if _bcabb ._gdba ==nil {var _bcge int ;if _bcabb .SdHuffDecodeHeightSelection ==3{_bcge ++;
};_eggc ,_dbad :=_bcabb .getUserTable (_bcge );if _dbad !=nil {return 0,_dbad ;};_bcabb ._gdba =_eggc ;};return _bcabb ._gdba .Decode (_bcabb ._ffaa );};}else {_egdf ,_caea :=_bcabb ._gede .DecodeInt (_bcabb ._eafgd );if _caea !=nil {return 0,_caea ;};
return int64 (_egdf ),nil ;};return 0,nil ;};func (_eaae *SymbolDictionary )setExportedSymbols (_eaddd []int ){for _bbeb :=uint32 (0);_bbeb < _eaae ._debf +_eaae .NumberOfNewSymbols ;_bbeb ++{if _eaddd [_bbeb ]==1{var _bcbfe *_be .Bitmap ;if _bbeb < _eaae ._debf {_bcbfe =_eaae ._ggfa [_bbeb ];
}else {_bcbfe =_eaae ._cefe [_bbeb -_eaae ._debf ];};_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bcbfe );
_eaae ._acdec =append (_eaae ._acdec ,_bcbfe );};};};func (_ggag *HalftoneRegion )computeX (_bcfg ,_adb int )int {return _ggag .shiftAndFill (int (_ggag .HGridX )+_bcfg *int (_ggag .HRegionY )+_adb *int (_ggag .HRegionX ));};func (_egdd *TextRegion )decodeDT ()(_dcbcf int64 ,_cfgf error ){if _egdd .IsHuffmanEncoded {if _egdd .SbHuffDT ==3{_dcbcf ,_cfgf =_egdd ._fdcf .Decode (_egdd ._bfde );
if _cfgf !=nil {return 0,_cfgf ;};}else {var _bfffc _dc .Tabler ;_bfffc ,_cfgf =_dc .GetStandardTable (11+int (_egdd .SbHuffDT ));if _cfgf !=nil {return 0,_cfgf ;};_dcbcf ,_cfgf =_bfffc .Decode (_egdd ._bfde );if _cfgf !=nil {return 0,_cfgf ;};};}else {var _cbgb int32 ;
_cbgb ,_cfgf =_egdd ._bfga .DecodeInt (_egdd ._agfd );if _cfgf !=nil {return 0,_cfgf ;};_dcbcf =int64 (_cbgb );};_dcbcf *=int64 (_egdd .SbStrips );return _dcbcf ,nil ;};func (_ceea *TextRegion )String ()string {_gabc :=&_e .Builder {};_gabc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_gabc .WriteString (_ceea .RegionInfo .String ()+"\u000a");_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ceea .SbrTemplate ));_gabc .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ceea .SbDsOffset ));
_gabc .WriteString (_ff .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ceea .DefaultPixel ));_gabc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ceea .CombinationOperator ));
_gabc .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ceea .IsTransposed ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ceea .ReferenceCorner ));
_gabc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ceea .UseRefinement ));_gabc .WriteString (_ff .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ceea .IsHuffmanEncoded ));
if _ceea .IsHuffmanEncoded {_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ceea .SbHuffRSize ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ceea .SbHuffRDY ));
_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ceea .SbHuffRDX ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ceea .SbHuffRDHeight ));
_gabc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ceea .SbHuffRDWidth ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ceea .SbHuffDT ));
_gabc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ceea .SbHuffDS ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ceea .SbHuffFS ));
};_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ceea .SbrATX ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ceea .SbrATY ));
_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ceea .NumberOfSymbolInstances ));_gabc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ceea .SbrATX ));
return _gabc .String ();};func (_fbc *template0 )form (_gab ,_baa ,_fegg ,_egfb ,_dca int16 )int16 {return (_gab <<10)|(_baa <<7)|(_fegg <<4)|(_egfb <<1)|_dca ;};type GenericRegion struct{_acfe *_b .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bbba bool ;Bitmap *_be .Bitmap ;_befa *_aca .Decoder ;
_bed *_aca .DecoderStats ;_bfbc *_df .Decoder ;};func (_cdfg *PageInformationSegment )readDefaultPixelValue ()error {_dfde ,_dfb :=_cdfg ._eegd .ReadBit ();if _dfb !=nil {return _dfb ;};_cdfg .DefaultPixelValue =uint8 (_dfde &0xf);return nil ;};type TextRegion struct{_bfde *_b .Reader ;
RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _be .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;
SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_eaga int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_be .Bitmap ;Symbols []*_be .Bitmap ;
_bfga *_aca .Decoder ;_fggc *GenericRefinementRegion ;_agfd *_aca .DecoderStats ;_eaff *_aca .DecoderStats ;_febc *_aca .DecoderStats ;_ffg *_aca .DecoderStats ;_cace *_aca .DecoderStats ;_dgdc *_aca .DecoderStats ;_gcag *_aca .DecoderStats ;_fgef *_aca .DecoderStats ;
_bcfe *_aca .DecoderStats ;_dfa *_aca .DecoderStats ;_cdccb *_aca .DecoderStats ;_bcac int8 ;_bgaa *_dc .FixedSizeTable ;Header *Header ;_faad _dc .Tabler ;_fbbe _dc .Tabler ;_fdcf _dc .Tabler ;_afff _dc .Tabler ;_acdge _dc .Tabler ;_efdf _dc .Tabler ;
_dfad _dc .Tabler ;_aacee _dc .Tabler ;_gdfg ,_caeg map[int ]int ;_cdaa []int ;_acbaa *_be .Points ;_gbdd *_be .Bitmaps ;_adac *_ea .IntSlice ;_bfgcc ,_gcfe int ;_eacf *_be .Boxes ;};func (_gc *GenericRefinementRegion )Init (header *Header ,r *_b .Reader )error {_gc ._aeg =header ;
_gc ._acab =r ;_gc .RegionInfo =NewRegionSegment (r );return _gc .parseHeader ();};func (_dded *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cgd ,_bcc ,_abd ,_fee ,_gge ,_eae ,_bgb ,_gec ,_ged int )(_dea error ){var (_deg ,_abgg int ;
_eag ,_gac int ;_dcgc ,_fab int ;_fcd byte ;);if _cgd > 0{_fcd ,_dea =_dded .RegionBitmap .GetByte (_bgb -_abd );if _dea !=nil {return _dea ;};_eag =int (_fcd );};if _gec > 0&&_gec <=_dded .ReferenceBitmap .Height {_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged -_fee +_eae );
if _dea !=nil {return _dea ;};_gac =int (_fcd )<<2;};if _gec >=0&&_gec < _dded .ReferenceBitmap .Height {_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged +_eae );if _dea !=nil {return _dea ;};_dcgc =int (_fcd );};if _gec > -2&&_gec < _dded .ReferenceBitmap .Height -1{_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged +_fee +_eae );
if _dea !=nil {return _dea ;};_fab =int (_fcd );};_deg =((_eag >>5)&0x6)|((_fab >>2)&0x30)|(_dcgc &0xc0)|(_gac &0x200);_abgg =((_fab >>2)&0x70)|(_dcgc &0xc0)|(_gac &0x700);var _geeg int ;for _dee :=0;_dee < _gge ;_dee =_geeg {var (_beg int ;_gdb int ;);
_geeg =_dee +8;if _beg =_bcc -_dee ;_beg > 8{_beg =8;};_eed :=_geeg < _bcc ;_cgg :=_geeg < _dded .ReferenceBitmap .Width ;_abf :=_eae +1;if _cgd > 0{_fcd =0;if _eed {_fcd ,_dea =_dded .RegionBitmap .GetByte (_bgb -_abd +1);if _dea !=nil {return _dea ;};
};_eag =(_eag <<8)|int (_fcd );};if _gec > 0&&_gec <=_dded .ReferenceBitmap .Height {var _aaaa int ;if _cgg {_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged -_fee +_abf );if _dea !=nil {return _dea ;};_aaaa =int (_fcd )<<2;};_gac =(_gac <<8)|_aaaa ;};
if _gec >=0&&_gec < _dded .ReferenceBitmap .Height {_fcd =0;if _cgg {_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged +_abf );if _dea !=nil {return _dea ;};};_dcgc =(_dcgc <<8)|int (_fcd );};if _gec > -2&&_gec < (_dded .ReferenceBitmap .Height -1){_fcd =0;
if _cgg {_fcd ,_dea =_dded .ReferenceBitmap .GetByte (_ged +_fee +_abf );if _dea !=nil {return _dea ;};};_fab =(_fab <<8)|int (_fcd );};for _gadb :=0;_gadb < _beg ;_gadb ++{var _cgb int ;_abe :=(_abgg >>4)&0x1ff;switch _abe {case 0x1ff:_cgb =1;case 0x00:_cgb =0;
default:_dded ._bge .SetIndex (int32 (_deg ));_cgb ,_dea =_dded ._bg .DecodeBit (_dded ._bge );if _dea !=nil {return _dea ;};};_ega :=uint (7-_gadb );_gdb |=_cgb <<_ega ;_deg =((_deg &0x0d6)<<1)|_cgb |(_eag >>_ega +5)&0x002|((_fab >>_ega +2)&0x010)|((_dcgc >>_ega )&0x040)|((_gac >>_ega )&0x200);
_abgg =((_abgg &0xdb)<<1)|((_fab >>_ega +2)&0x010)|((_dcgc >>_ega )&0x080)|((_gac >>_ega )&0x400);};_dea =_dded .RegionBitmap .SetByte (_bgb ,byte (_gdb ));if _dea !=nil {return _dea ;};_bgb ++;_ged ++;};return nil ;};func (_eega *TextRegion )encodeFlags (_cbce _b .BinaryWriter )(_ffcb int ,_dfdb error ){const _fgda ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dfdb =_cbce .WriteBit (int (_eega .SbrTemplate ));_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dfdb =_cbce .WriteBits (uint64 (_eega .SbDsOffset ),5);_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dfdb =_cbce .WriteBit (int (_eega .DefaultPixel ));_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dfdb =_cbce .WriteBits (uint64 (_eega .CombinationOperator ),2);
_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dfdb =_cbce .WriteBit (int (_eega .IsTransposed ));_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dfdb =_cbce .WriteBits (uint64 (_eega .ReferenceCorner ),2);_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dfdb =_cbce .WriteBits (uint64 (_eega .LogSBStrips ),2);
_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _baaa int ;if _eega .UseRefinement {_baaa =1;};if _dfdb =_cbce .WriteBit (_baaa );_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_baaa =0;if _eega .IsHuffmanEncoded {_baaa =1;};if _dfdb =_cbce .WriteBit (_baaa );_dfdb !=nil {return _ffcb ,_ac .Wrap (_dfdb ,_fgda ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ffcb =2;return _ffcb ,nil ;};func (_ccfd *TextRegion )symbolIDCodeLengths ()error {var (_acbad []*_dc .Code ;
_afea uint64 ;_ebbf _dc .Tabler ;_eafb error ;);for _gedbg :=0;_gedbg < 35;_gedbg ++{_afea ,_eafb =_ccfd ._bfde .ReadBits (4);if _eafb !=nil {return _eafb ;};_fdcaf :=int (_afea &0xf);if _fdcaf > 0{_acbad =append (_acbad ,_dc .NewCode (int32 (_fdcaf ),0,int32 (_gedbg ),false ));
};};_ebbf ,_eafb =_dc .NewFixedSizeTable (_acbad );if _eafb !=nil {return _eafb ;};var (_fdbd int64 ;_cgdf uint32 ;_dfae []*_dc .Code ;_bbdab int64 ;);for _cgdf < _ccfd .NumberOfSymbols {_bbdab ,_eafb =_ebbf .Decode (_ccfd ._bfde );if _eafb !=nil {return _eafb ;
};if _bbdab < 32{if _bbdab > 0{_dfae =append (_dfae ,_dc .NewCode (int32 (_bbdab ),0,int32 (_cgdf ),false ));};_fdbd =_bbdab ;_cgdf ++;}else {var _gcdcb ,_efed int64 ;switch _bbdab {case 32:_afea ,_eafb =_ccfd ._bfde .ReadBits (2);if _eafb !=nil {return _eafb ;
};_gcdcb =3+int64 (_afea );if _cgdf > 0{_efed =_fdbd ;};case 33:_afea ,_eafb =_ccfd ._bfde .ReadBits (3);if _eafb !=nil {return _eafb ;};_gcdcb =3+int64 (_afea );case 34:_afea ,_eafb =_ccfd ._bfde .ReadBits (7);if _eafb !=nil {return _eafb ;};_gcdcb =11+int64 (_afea );
};for _gdbf :=0;_gdbf < int (_gcdcb );_gdbf ++{if _efed > 0{_dfae =append (_dfae ,_dc .NewCode (int32 (_efed ),0,int32 (_cgdf ),false ));};_cgdf ++;};};};_ccfd ._bfde .Align ();_ccfd ._bgaa ,_eafb =_dc .NewFixedSizeTable (_dfae );return _eafb ;};func (_fff *GenericRefinementRegion )GetRegionBitmap ()(*_be .Bitmap ,error ){var _afg error ;
_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _afg !=nil {_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_afg );
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fff .RegionBitmap !=nil {return _fff .RegionBitmap ,nil ;};_cg :=0;if _fff .ReferenceBitmap ==nil {_fff .ReferenceBitmap ,_afg =_fff .getGrReference ();if _afg !=nil {return nil ,_afg ;};};if _fff ._bg ==nil {_fff ._bg ,_afg =_aca .New (_fff ._acab );
if _afg !=nil {return nil ,_afg ;};};if _fff ._bge ==nil {_fff ._bge =_aca .NewStats (8192,1);};_fff .RegionBitmap =_be .New (int (_fff .RegionInfo .BitmapWidth ),int (_fff .RegionInfo .BitmapHeight ));if _fff .TemplateID ==0{if _afg =_fff .updateOverride ();
_afg !=nil {return nil ,_afg ;};};_gf :=(_fff .RegionBitmap .Width +7)&-8;var _dd int ;if _fff .IsTPGROn {_dd =int (-_fff .ReferenceDY )*_fff .ReferenceBitmap .RowStride ;};_fb :=_dd +1;for _dfed :=0;_dfed < _fff .RegionBitmap .Height ;_dfed ++{if _fff .IsTPGROn {_ee ,_cb :=_fff .decodeSLTP ();
if _cb !=nil {return nil ,_cb ;};_cg ^=_ee ;};if _cg ==0{_afg =_fff .decodeOptimized (_dfed ,_fff .RegionBitmap .Width ,_fff .RegionBitmap .RowStride ,_fff .ReferenceBitmap .RowStride ,_gf ,_dd ,_fb );if _afg !=nil {return nil ,_afg ;};}else {_afg =_fff .decodeTypicalPredictedLine (_dfed ,_fff .RegionBitmap .Width ,_fff .RegionBitmap .RowStride ,_fff .ReferenceBitmap .RowStride ,_gf ,_dd );
if _afg !=nil {return nil ,_afg ;};};};return _fff .RegionBitmap ,nil ;};func (_eccd *TextRegion )readUseRefinement ()error {if !_eccd .UseRefinement ||_eccd .SbrTemplate !=0{return nil ;};var (_fede byte ;_gdggf error ;);_eccd .SbrATX =make ([]int8 ,2);
_eccd .SbrATY =make ([]int8 ,2);_fede ,_gdggf =_eccd ._bfde .ReadByte ();if _gdggf !=nil {return _gdggf ;};_eccd .SbrATX [0]=int8 (_fede );_fede ,_gdggf =_eccd ._bfde .ReadByte ();if _gdggf !=nil {return _gdggf ;};_eccd .SbrATY [0]=int8 (_fede );_fede ,_gdggf =_eccd ._bfde .ReadByte ();
if _gdggf !=nil {return _gdggf ;};_eccd .SbrATX [1]=int8 (_fede );_fede ,_gdggf =_eccd ._bfde .ReadByte ();if _gdggf !=nil {return _gdggf ;};_eccd .SbrATY [1]=int8 (_fede );return nil ;};func (_bfab *TextRegion )Encode (w _b .BinaryWriter )(_accc int ,_gbed error ){const _dgef ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _accc ,_gbed =_bfab .RegionInfo .Encode (w );_gbed !=nil {return _accc ,_ac .Wrap (_gbed ,_dgef ,"");};var _ggc int ;if _ggc ,_gbed =_bfab .encodeFlags (w );_gbed !=nil {return _accc ,_ac .Wrap (_gbed ,_dgef ,"");};_accc +=_ggc ;if _ggc ,_gbed =_bfab .encodeSymbols (w );
_gbed !=nil {return _accc ,_ac .Wrap (_gbed ,_dgef ,"");};_accc +=_ggc ;return _accc ,nil ;};func (_gedg *Header )writeSegmentPageAssociation (_dgaa _b .BinaryWriter )(_cecf int ,_cbca error ){const _cggd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gedg .pageSize ()!=4{if _cbca =_dgaa .WriteByte (byte (_gedg .PageAssociation ));_cbca !=nil {return 0,_ac .Wrap (_cbca ,_cggd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_acba :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_acba ,uint32 (_gedg .PageAssociation ));if _cecf ,_cbca =_dgaa .Write (_acba );_cbca !=nil {return 0,_ac .Wrap (_cbca ,_cggd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _cecf ,nil ;
};func (_bedf *TextRegion )parseHeader ()error {var _bgfe error ;_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _bgfe !=nil {_ge .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bgfe );
}else {_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bgfe =_bedf .RegionInfo .parseHeader ();
_bgfe !=nil {return _bgfe ;};if _bgfe =_bedf .readRegionFlags ();_bgfe !=nil {return _bgfe ;};if _bedf .IsHuffmanEncoded {if _bgfe =_bedf .readHuffmanFlags ();_bgfe !=nil {return _bgfe ;};};if _bgfe =_bedf .readUseRefinement ();_bgfe !=nil {return _bgfe ;
};if _bgfe =_bedf .readAmountOfSymbolInstances ();_bgfe !=nil {return _bgfe ;};if _bgfe =_bedf .getSymbols ();_bgfe !=nil {return _bgfe ;};if _bgfe =_bedf .computeSymbolCodeLength ();_bgfe !=nil {return _bgfe ;};if _bgfe =_bedf .checkInput ();_bgfe !=nil {return _bgfe ;
};_ge .Log .Trace ("\u0025\u0073",_bedf .String ());return nil ;};func (_cbg *GenericRefinementRegion )String ()string {_bef :=&_e .Builder {};_bef .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bef .WriteString (_cbg .RegionInfo .String ()+"\u000a");_bef .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cbg .IsTPGROn ));_bef .WriteString (_ff .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cbg .TemplateID ));
_bef .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cbg .GrAtX ));_bef .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cbg .GrAtY ));
_bef .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cbg .ReferenceDX ));_bef .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cbg .ReferenceDY ));
return _bef .String ();};func (_ddbga *PageInformationSegment )readIsLossless ()error {_gcba ,_gcfg :=_ddbga ._eegd .ReadBit ();if _gcfg !=nil {return _gcfg ;};if _gcba ==1{_ddbga .IsLossless =true ;};return nil ;};func (_dcef *Header )readSegmentNumber (_gfec *_b .Reader )error {const _gbg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_bcaf :=make ([]byte ,4);_ ,_ebb :=_gfec .Read (_bcaf );if _ebb !=nil {return _ac .Wrap (_ebb ,_gbg ,"");};_dcef .SegmentNumber =_c .BigEndian .Uint32 (_bcaf );return nil ;};func (_abde *Header )readNumberOfReferredToSegments (_agff *_b .Reader )(uint64 ,error ){const _gaed ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_eeee ,_fdfc :=_agff .ReadBits (3);if _fdfc !=nil {return 0,_ac .Wrap (_fdfc ,_gaed ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_eeee &=0xf;var _cacf []byte ;if _eeee <=4{_cacf =make ([]byte ,5);for _bfe :=0;_bfe <=4;_bfe ++{_addd ,_gdae :=_agff .ReadBit ();
if _gdae !=nil {return 0,_ac .Wrap (_gdae ,_gaed ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cacf [_bfe ]=byte (_addd );};}else {_eeee ,_fdfc =_agff .ReadBits (29);if _fdfc !=nil {return 0,_fdfc ;};_eeee &=_ae .MaxInt32 ;
_cbfae :=(_eeee +8)>>3;_cbfae <<=3;_cacf =make ([]byte ,_cbfae );var _adbe uint64 ;for _adbe =0;_adbe < _cbfae ;_adbe ++{_bdb ,_edacd :=_agff .ReadBit ();if _edacd !=nil {return 0,_ac .Wrap (_edacd ,_gaed ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cacf [_adbe ]=byte (_bdb );};};return _eeee ,nil ;};func (_dcce *PageInformationSegment )readContainsRefinement ()error {_ecde ,_gfeb :=_dcce ._eegd .ReadBit ();if _gfeb !=nil {return _gfeb ;};if _ecde ==1{_dcce ._ffcgf =true ;};return nil ;};func (_aa *GenericRefinementRegion )decodeSLTP ()(int ,error ){_aa .Template .setIndex (_aa ._bge );
return _aa ._bg .DecodeBit (_aa ._bge );};func (_gcad *PageInformationSegment )readCombinationOperator ()error {_ffbd ,_cdge :=_gcad ._eegd .ReadBits (2);if _cdge !=nil {return _cdge ;};_gcad ._gcbcf =_be .CombinationOperator (int (_ffbd ));return nil ;
};func (_daed *TextRegion )decodeSymbolInstances ()error {_acabg ,_agcce :=_daed .decodeStripT ();if _agcce !=nil {return _agcce ;};var (_dccd int64 ;_afcga uint32 ;);for _afcga < _daed .NumberOfSymbolInstances {_ffdg ,_eaef :=_daed .decodeDT ();if _eaef !=nil {return _eaef ;
};_acabg +=_ffdg ;var _bfff int64 ;_geea :=true ;_daed ._eaga =0;for {if _geea {_bfff ,_eaef =_daed .decodeDfs ();if _eaef !=nil {return _eaef ;};_dccd +=_bfff ;_daed ._eaga =_dccd ;_geea =false ;}else {_cbeb ,_gecc :=_daed .decodeIds ();if _d .Is (_gecc ,_g .ErrOOB ){break ;
};if _gecc !=nil {return _gecc ;};if _afcga >=_daed .NumberOfSymbolInstances {break ;};_daed ._eaga +=_cbeb +int64 (_daed .SbDsOffset );};_gged ,_cbaf :=_daed .decodeCurrentT ();if _cbaf !=nil {return _cbaf ;};_dcag :=_acabg +_gged ;_bgge ,_cbaf :=_daed .decodeID ();
if _cbaf !=nil {return _cbaf ;};_dafa ,_cbaf :=_daed .decodeRI ();if _cbaf !=nil {return _cbaf ;};_dcbc ,_cbaf :=_daed .decodeIb (_dafa ,_bgge );if _cbaf !=nil {return _cbaf ;};if _cbaf =_daed .blit (_dcbc ,_dcag );_cbaf !=nil {return _cbaf ;};_afcga ++;
};};return nil ;};func (_dcgg *SymbolDictionary )encodeNumSyms (_eegc _b .BinaryWriter )(_ffbf int ,_effa error ){const _gdf ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_ecdb :=make ([]byte ,4);_c .BigEndian .PutUint32 (_ecdb ,_dcgg .NumberOfExportedSymbols );
if _ffbf ,_effa =_eegc .Write (_ecdb );_effa !=nil {return _ffbf ,_ac .Wrap (_effa ,_gdf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_c .BigEndian .PutUint32 (_ecdb ,_dcgg .NumberOfNewSymbols );_cfcd ,_effa :=_eegc .Write (_ecdb );
if _effa !=nil {return _ffbf ,_ac .Wrap (_effa ,_gdf ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ffbf +_cfcd ,nil ;};func (_gcab *TextRegion )Init (header *Header ,r *_b .Reader )error {_gcab .Header =header ;_gcab ._bfde =r ;
_gcab .RegionInfo =NewRegionSegment (_gcab ._bfde );return _gcab .parseHeader ();};func (_fcdd *TableSegment )parseHeader ()error {var (_aafa int ;_baag uint64 ;_aadfe error ;);_aafa ,_aadfe =_fcdd ._daff .ReadBit ();if _aadfe !=nil {return _aadfe ;};if _aafa ==1{return _ff .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_aafa );
};if _baag ,_aadfe =_fcdd ._daff .ReadBits (3);_aadfe !=nil {return _aadfe ;};_fcdd ._cbea =(int32 (_baag )+1)&0xf;if _baag ,_aadfe =_fcdd ._daff .ReadBits (3);_aadfe !=nil {return _aadfe ;};_fcdd ._aega =(int32 (_baag )+1)&0xf;if _baag ,_aadfe =_fcdd ._daff .ReadBits (32);
_aadfe !=nil {return _aadfe ;};_fcdd ._gdec =int32 (_baag &_ae .MaxInt32 );if _baag ,_aadfe =_fcdd ._daff .ReadBits (32);_aadfe !=nil {return _aadfe ;};_fcdd ._ggec =int32 (_baag &_ae .MaxInt32 );return nil ;};func (_gebf *GenericRegion )decodeTemplate0a (_gca ,_ede ,_cga int ,_gba ,_dda int )(_aea error ){const _cfe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_afgc ,_ddad int ;_cbc ,_cfcc int ;_acbf byte ;_gfg int ;);if _gca >=1{_acbf ,_aea =_gebf .Bitmap .GetByte (_dda );if _aea !=nil {return _ac .Wrap (_aea ,_cfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cbc =int (_acbf );};if _gca >=2{_acbf ,_aea =_gebf .Bitmap .GetByte (_dda -_gebf .Bitmap .RowStride );
if _aea !=nil {return _ac .Wrap (_aea ,_cfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cfcc =int (_acbf )<<6;};_afgc =(_cbc &0xf0)|(_cfcc &0x3800);for _ca :=0;_ca < _cga ;_ca =_gfg {var (_cac byte ;_dbaf int ;);_gfg =_ca +8;if _dbda :=_ede -_ca ;
_dbda > 8{_dbaf =8;}else {_dbaf =_dbda ;};if _gca > 0{_cbc <<=8;if _gfg < _ede {_acbf ,_aea =_gebf .Bitmap .GetByte (_dda +1);if _aea !=nil {return _ac .Wrap (_aea ,_cfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cbc |=int (_acbf );};};if _gca > 1{_abeg :=_dda -_gebf .Bitmap .RowStride +1;
_cfcc <<=8;if _gfg < _ede {_acbf ,_aea =_gebf .Bitmap .GetByte (_abeg );if _aea !=nil {return _ac .Wrap (_aea ,_cfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cfcc |=int (_acbf )<<6;}else {_cfcc |=0;};};for _edd :=0;_edd < _dbaf ;_edd ++{_ecb :=uint (7-_edd );
if _gebf ._bbba {_ddad =_gebf .overrideAtTemplate0a (_afgc ,_ca +_edd ,_gca ,int (_cac ),_edd ,int (_ecb ));_gebf ._bed .SetIndex (int32 (_ddad ));}else {_gebf ._bed .SetIndex (int32 (_afgc ));};var _cec int ;_cec ,_aea =_gebf ._befa .DecodeBit (_gebf ._bed );
if _aea !=nil {return _ac .Wrap (_aea ,_cfe ,"");};_cac |=byte (_cec )<<_ecb ;_afgc =((_afgc &0x7bf7)<<1)|_cec |((_cbc >>_ecb )&0x10)|((_cfcc >>_ecb )&0x800);};if _gbfa :=_gebf .Bitmap .SetByte (_gba ,_cac );_gbfa !=nil {return _ac .Wrap (_gbfa ,_cfe ,"");
};_gba ++;_dda ++;};return nil ;};func (_cce *GenericRegion )String ()string {_bfgf :=&_e .Builder {};_bfgf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bfgf .WriteString (_cce .RegionSegment .String ()+"\u000a");
_bfgf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cce .UseExtTemplates ));_bfgf .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cce .IsTPGDon ));
_bfgf .WriteString (_ff .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cce .GBTemplate ));_bfgf .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cce .IsMMREncoded ));
_bfgf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cce .GBAtX ));_bfgf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cce .GBAtY ));
_bfgf .WriteString (_ff .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cce .GBAtOverride ));return _bfgf .String ();};func (_gaadd *TextRegion )decodeIds ()(int64 ,error ){const _ddbec ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _gaadd .IsHuffmanEncoded {if _gaadd .SbHuffDS ==3{if _gaadd ._fbbe ==nil {_cgfg :=0;if _gaadd .SbHuffFS ==3{_cgfg ++;};var _ebed error ;_gaadd ._fbbe ,_ebed =_gaadd .getUserTable (_cgfg );if _ebed !=nil {return 0,_ac .Wrap (_ebed ,_ddbec ,"");};};return _gaadd ._fbbe .Decode (_gaadd ._bfde );
};_afba ,_gdac :=_dc .GetStandardTable (8+int (_gaadd .SbHuffDS ));if _gdac !=nil {return 0,_ac .Wrap (_gdac ,_ddbec ,"");};return _afba .Decode (_gaadd ._bfde );};_cddb ,_gcadf :=_gaadd ._bfga .DecodeInt (_gaadd ._febc );if _gcadf !=nil {return 0,_ac .Wrap (_gcadf ,_ddbec ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_cddb ),nil ;};func (_fafe *RegionSegment )readCombinationOperator ()error {_ebgd ,_gdgd :=_fafe ._ddaf .ReadBits (3);if _gdgd !=nil {return _gdgd ;};_fafe .CombinaionOperator =_be .CombinationOperator (_ebgd &0xF);return nil ;};func (_gcee *PageInformationSegment )checkInput ()error {if _gcee .PageBMHeight ==_ae .MaxInt32 {if !_gcee .IsStripe {_ge .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_bcba *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ggfd ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _bcba .SbHuffRSize ==0{_acg ,_ebcfe :=_dc .GetStandardTable (1);if _ebcfe !=nil {return 0,_ac .Wrap (_ebcfe ,_ggfd ,"");
};return _acg .Decode (_bcba ._bfde );};if _bcba ._aacee ==nil {var (_bcbcf int ;_cfaf error ;);if _bcba .SbHuffFS ==3{_bcbcf ++;};if _bcba .SbHuffDS ==3{_bcbcf ++;};if _bcba .SbHuffDT ==3{_bcbcf ++;};if _bcba .SbHuffRDWidth ==3{_bcbcf ++;};if _bcba .SbHuffRDHeight ==3{_bcbcf ++;
};if _bcba .SbHuffRDX ==3{_bcbcf ++;};if _bcba .SbHuffRDY ==3{_bcbcf ++;};_bcba ._aacee ,_cfaf =_bcba .getUserTable (_bcbcf );if _cfaf !=nil {return 0,_ac .Wrap (_cfaf ,_ggfd ,"");};};_bdac ,_cdac :=_bcba ._aacee .Decode (_bcba ._bfde );if _cdac !=nil {return 0,_ac .Wrap (_cdac ,_ggfd ,"");
};return _bdac ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_b .Reader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_babg Type )String ()string {switch _babg {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fag *Header )GetSegmentData ()(Segmenter ,error ){var _eaf Segmenter ;if _fag .SegmentData !=nil {_eaf =_fag .SegmentData ;
};if _eaf ==nil {_aef ,_bcg :=_fbcb [_fag .Type ];if !_bcg {return nil ,_ff .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fag .Type ,_fag .Type );
};_eaf =_aef ();_ge .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fag .SegmentNumber ,_fag .SegmentDataStartOffset );
_cadb ,_aefg :=_fag .subInputReader ();if _aefg !=nil {return nil ,_aefg ;};if _faff :=_eaf .Init (_fag ,_cadb );_faff !=nil {_ge .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_faff ,_eaf );
return nil ,_faff ;};_fag .SegmentData =_eaf ;};return _eaf ,nil ;};func (_fbef *PatternDictionary )readGrayMax ()error {_cfdd ,_bbca :=_fbef ._abca .ReadBits (32);if _bbca !=nil {return _bbca ;};_fbef .GrayMax =uint32 (_cfdd &_ae .MaxUint32 );return nil ;
};type Type int ;func (_adfe *TextRegion )setCodingStatistics ()error {if _adfe ._agfd ==nil {_adfe ._agfd =_aca .NewStats (512,1);};if _adfe ._eaff ==nil {_adfe ._eaff =_aca .NewStats (512,1);};if _adfe ._febc ==nil {_adfe ._febc =_aca .NewStats (512,1);
};if _adfe ._ffg ==nil {_adfe ._ffg =_aca .NewStats (512,1);};if _adfe ._cace ==nil {_adfe ._cace =_aca .NewStats (512,1);};if _adfe ._dgdc ==nil {_adfe ._dgdc =_aca .NewStats (512,1);};if _adfe ._gcag ==nil {_adfe ._gcag =_aca .NewStats (512,1);};if _adfe ._fgef ==nil {_adfe ._fgef =_aca .NewStats (1<<uint (_adfe ._bcac ),1);
};if _adfe ._bcfe ==nil {_adfe ._bcfe =_aca .NewStats (512,1);};if _adfe ._dfa ==nil {_adfe ._dfa =_aca .NewStats (512,1);};if _adfe ._bfga ==nil {var _bbda error ;_adfe ._bfga ,_bbda =_aca .New (_adfe ._bfde );if _bbda !=nil {return _bbda ;};};return nil ;
};type Segmenter interface{Init (_dgg *Header ,_fffa *_b .Reader )error ;};type SymbolDictionary struct{_ffaa *_b .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_dfbd bool ;_aegee bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;
SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_debf uint32 ;_ggfa []*_be .Bitmap ;
_adbc uint32 ;_cefe []*_be .Bitmap ;_edb _dc .Tabler ;_gdba _dc .Tabler ;_faeg _dc .Tabler ;_cbbb _dc .Tabler ;_acdec []*_be .Bitmap ;_aegd []*_be .Bitmap ;_gede *_aca .Decoder ;_agb *TextRegion ;_bbfdd *GenericRegion ;_dddc *GenericRefinementRegion ;_bgba *_aca .DecoderStats ;
_ace *_aca .DecoderStats ;_eafgd *_aca .DecoderStats ;_cecg *_aca .DecoderStats ;_ggbf *_aca .DecoderStats ;_bfbae *_aca .DecoderStats ;_dcbf *_aca .DecoderStats ;_bccf *_aca .DecoderStats ;_gecad *_aca .DecoderStats ;_dddb int8 ;_gdaa *_be .Bitmaps ;_eabgf []int ;
_cbed map[int ]int ;_egbga bool ;};func (_bcab *GenericRegion )overrideAtTemplate0a (_bfdg ,_ecdg ,_dbg ,_bcd ,_egc ,_fega int )int {if _bcab .GBAtOverride [0]{_bfdg &=0xFFEF;if _bcab .GBAtY [0]==0&&_bcab .GBAtX [0]>=-int8 (_egc ){_bfdg |=(_bcd >>uint (int8 (_fega )-_bcab .GBAtX [0]&0x1))<<4;
}else {_bfdg |=int (_bcab .getPixel (_ecdg +int (_bcab .GBAtX [0]),_dbg +int (_bcab .GBAtY [0])))<<4;};};if _bcab .GBAtOverride [1]{_bfdg &=0xFBFF;if _bcab .GBAtY [1]==0&&_bcab .GBAtX [1]>=-int8 (_egc ){_bfdg |=(_bcd >>uint (int8 (_fega )-_bcab .GBAtX [1]&0x1))<<10;
}else {_bfdg |=int (_bcab .getPixel (_ecdg +int (_bcab .GBAtX [1]),_dbg +int (_bcab .GBAtY [1])))<<10;};};if _bcab .GBAtOverride [2]{_bfdg &=0xF7FF;if _bcab .GBAtY [2]==0&&_bcab .GBAtX [2]>=-int8 (_egc ){_bfdg |=(_bcd >>uint (int8 (_fega )-_bcab .GBAtX [2]&0x1))<<11;
}else {_bfdg |=int (_bcab .getPixel (_ecdg +int (_bcab .GBAtX [2]),_dbg +int (_bcab .GBAtY [2])))<<11;};};if _bcab .GBAtOverride [3]{_bfdg &=0x7FFF;if _bcab .GBAtY [3]==0&&_bcab .GBAtX [3]>=-int8 (_egc ){_bfdg |=(_bcd >>uint (int8 (_fega )-_bcab .GBAtX [3]&0x1))<<15;
}else {_bfdg |=int (_bcab .getPixel (_ecdg +int (_bcab .GBAtX [3]),_dbg +int (_bcab .GBAtY [3])))<<15;};};return _bfdg ;};func (_fbga *TextRegion )encodeSymbols (_gcbb _b .BinaryWriter )(_bagbd int ,_dbdg error ){const _dcdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gdad :=make ([]byte ,4);_c .BigEndian .PutUint32 (_gdad ,_fbga .NumberOfSymbols );if _bagbd ,_dbdg =_gcbb .Write (_gdad );_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_ddgb ,_dbdg :=_be .NewClassedPoints (_fbga ._acbaa ,_fbga ._cdaa );if _dbdg !=nil {return 0,_ac .Wrap (_dbdg ,_dcdb ,"");};var _ggbb ,_aaef int ;_bac :=_fd .New ();_bac .Init ();if _dbdg =_bac .EncodeInteger (_fd .IADT ,0);_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cdfge ,_dbdg :=_ddgb .GroupByY ();if _dbdg !=nil {return 0,_ac .Wrap (_dbdg ,_dcdb ,"");};for _ ,_efdae :=range _cdfge {_fcag :=int (_efdae .YAtIndex (0));_dbbc :=_fcag -_ggbb ;if _dbdg =_bac .EncodeInteger (_fd .IADT ,_dbbc );_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"");
};var _dadbd int ;for _dcgge ,_dgbe :=range _efdae .IntSlice {switch _dcgge {case 0:_aedf :=int (_efdae .XAtIndex (_dcgge ))-_aaef ;if _dbdg =_bac .EncodeInteger (_fd .IAFS ,_aedf );_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"");};_aaef +=_aedf ;
_dadbd =_aaef ;default:_fafef :=int (_efdae .XAtIndex (_dcgge ))-_dadbd ;if _dbdg =_bac .EncodeInteger (_fd .IADS ,_fafef );_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"");};_dadbd +=_fafef ;};_gbgea ,_cfbc :=_fbga ._adac .Get (_dgbe );if _cfbc !=nil {return _bagbd ,_ac .Wrap (_cfbc ,_dcdb ,"");
};_cdcf ,_eabd :=_fbga ._gdfg [_gbgea ];if !_eabd {_cdcf ,_eabd =_fbga ._caeg [_gbgea ];if !_eabd {return _bagbd ,_ac .Errorf (_dcdb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gbgea );
};};if _cfbc =_bac .EncodeIAID (_fbga ._gcfe ,_cdcf );_cfbc !=nil {return _bagbd ,_ac .Wrap (_cfbc ,_dcdb ,"");};};if _dbdg =_bac .EncodeOOB (_fd .IADS );_dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"");};};_bac .Final ();_eedc ,_dbdg :=_bac .WriteTo (_gcbb );
if _dbdg !=nil {return _bagbd ,_ac .Wrap (_dbdg ,_dcdb ,"");};_bagbd +=int (_eedc );return _bagbd ,nil ;};func (_adaad *TextRegion )setParameters (_cgecd *_aca .Decoder ,_cfgg ,_gggb bool ,_cdcb ,_bfbb uint32 ,_gfgf uint32 ,_ebfff int8 ,_gdeeg uint32 ,_afaa int8 ,_fcge _be .CombinationOperator ,_fdbab int8 ,_ggda int16 ,_eecf ,_ggba ,_fbed ,_ffadc ,_gbee ,_fbgea ,_gadc ,_dgee ,_caceb ,_fcaf int8 ,_cddba ,_gbga []int8 ,_cea []*_be .Bitmap ,_gaadf int8 ){_adaad ._bfga =_cgecd ;
_adaad .IsHuffmanEncoded =_cfgg ;_adaad .UseRefinement =_gggb ;_adaad .RegionInfo .BitmapWidth =_cdcb ;_adaad .RegionInfo .BitmapHeight =_bfbb ;_adaad .NumberOfSymbolInstances =_gfgf ;_adaad .SbStrips =_ebfff ;_adaad .NumberOfSymbols =_gdeeg ;_adaad .DefaultPixel =_afaa ;
_adaad .CombinationOperator =_fcge ;_adaad .IsTransposed =_fdbab ;_adaad .ReferenceCorner =_ggda ;_adaad .SbDsOffset =_eecf ;_adaad .SbHuffFS =_ggba ;_adaad .SbHuffDS =_fbed ;_adaad .SbHuffDT =_ffadc ;_adaad .SbHuffRDWidth =_gbee ;_adaad .SbHuffRDHeight =_fbgea ;
_adaad .SbHuffRSize =_caceb ;_adaad .SbHuffRDX =_gadc ;_adaad .SbHuffRDY =_dgee ;_adaad .SbrTemplate =_fcaf ;_adaad .SbrATX =_cddba ;_adaad .SbrATY =_gbga ;_adaad .Symbols =_cea ;_adaad ._bcac =_gaadf ;};func (_bca *GenericRegion )computeSegmentDataStructure ()error {_bca .DataOffset =_bca ._acfe .AbsolutePosition ();
_bca .DataHeaderLength =_bca .DataOffset -_bca .DataHeaderOffset ;_bca .DataLength =int64 (_bca ._acfe .AbsoluteLength ())-_bca .DataHeaderLength ;return nil ;};type EncodeInitializer interface{InitEncode ();};func (_fcda *GenericRegion )overrideAtTemplate2 (_eab ,_cgga ,_bdcb ,_bbbe ,_fcg int )int {_eab &=0x3FB;
if _fcda .GBAtY [0]==0&&_fcda .GBAtX [0]>=-int8 (_fcg ){_eab |=(_bbbe >>uint (7-(int8 (_fcg )+_fcda .GBAtX [0]))&0x1)<<2;}else {_eab |=int (_fcda .getPixel (_cgga +int (_fcda .GBAtX [0]),_bdcb +int (_fcda .GBAtY [0])))<<2;};return _eab ;};func (_ffea *SymbolDictionary )setInSyms ()error {if _ffea .Header .RTSegments !=nil {return _ffea .retrieveImportSymbols ();
};_ffea ._ggfa =make ([]*_be .Bitmap ,0);return nil ;};func (_aaaab *GenericRegion )setOverrideFlag (_egfg int ){_aaaab .GBAtOverride [_egfg ]=true ;_aaaab ._bbba =true ;};func (_dgeg *TextRegion )decodeID ()(int64 ,error ){if _dgeg .IsHuffmanEncoded {if _dgeg ._bgaa ==nil {_bcfd ,_cggce :=_dgeg ._bfde .ReadBits (byte (_dgeg ._bcac ));
return int64 (_bcfd ),_cggce ;};return _dgeg ._bgaa .Decode (_dgeg ._bfde );};return _dgeg ._bfga .DecodeIAID (uint64 (_dgeg ._bcac ),_dgeg ._fgef );};var _ templater =&template1 {};func NewHeader (d Documenter ,r *_b .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bgef :=&Header {Reader :r };
if _bfcc :=_bgef .parse (d ,r ,offset ,organizationType );_bfcc !=nil {return nil ,_ac .Wrap (_bfcc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bgef ,nil ;};func (_cef *PageInformationSegment )Size ()int {return 19};func (_daf *GenericRefinementRegion )decodeOptimized (_eea ,_fbg ,_cc ,_feg ,_dag ,_fac ,_ec int )error {var (_de error ;
_acaa int ;_eeb int ;);_eg :=_eea -int (_daf .ReferenceDY );if _bea :=int (-_daf .ReferenceDX );_bea > 0{_acaa =_bea ;};_adg :=_daf .ReferenceBitmap .GetByteIndex (_acaa ,_eg );if _daf .ReferenceDX > 0{_eeb =int (_daf .ReferenceDX );};_fcf :=_daf .RegionBitmap .GetByteIndex (_eeb ,_eea );
switch _daf .TemplateID {case 0:_de =_daf .decodeTemplate (_eea ,_fbg ,_cc ,_feg ,_dag ,_fac ,_ec ,_fcf ,_eg ,_adg ,_daf ._af );case 1:_de =_daf .decodeTemplate (_eea ,_fbg ,_cc ,_feg ,_dag ,_fac ,_ec ,_fcf ,_eg ,_adg ,_daf ._ad );};return _de ;};func (_gaad *GenericRegion )overrideAtTemplate1 (_bfbd ,_efab ,_ebga ,_gaf ,_fae int )int {_bfbd &=0x1FF7;
if _gaad .GBAtY [0]==0&&_gaad .GBAtX [0]>=-int8 (_fae ){_bfbd |=(_gaf >>uint (7-(int8 (_fae )+_gaad .GBAtX [0]))&0x1)<<3;}else {_bfbd |=int (_gaad .getPixel (_efab +int (_gaad .GBAtX [0]),_ebga +int (_gaad .GBAtY [0])))<<3;};return _bfbd ;};func NewGenericRegion (r *_b .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_acfe :r };
};func (_efda *SymbolDictionary )readAtPixels (_fggg int )error {_efda .SdATX =make ([]int8 ,_fggg );_efda .SdATY =make ([]int8 ,_fggg );var (_bdbf byte ;_ccff error ;);for _caff :=0;_caff < _fggg ;_caff ++{_bdbf ,_ccff =_efda ._ffaa .ReadByte ();if _ccff !=nil {return _ccff ;
};_efda .SdATX [_caff ]=int8 (_bdbf );_bdbf ,_ccff =_efda ._ffaa .ReadByte ();if _ccff !=nil {return _ccff ;};_efda .SdATY [_caff ]=int8 (_bdbf );};return nil ;};func (_afe *GenericRefinementRegion )parseHeader ()(_eefc error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_egb :=_ce .Now ();defer func (){if _eefc ==nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ce .Since (_egb ).Nanoseconds ());
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_eefc );
};}();if _eefc =_afe .RegionInfo .parseHeader ();_eefc !=nil {return _eefc ;};_ ,_eefc =_afe ._acab .ReadBits (6);if _eefc !=nil {return _eefc ;};_afe .IsTPGROn ,_eefc =_afe ._acab .ReadBool ();if _eefc !=nil {return _eefc ;};var _adgg int ;_adgg ,_eefc =_afe ._acab .ReadBit ();
if _eefc !=nil {return _eefc ;};_afe .TemplateID =int8 (_adgg );switch _afe .TemplateID {case 0:_afe .Template =_afe ._af ;if _eefc =_afe .readAtPixels ();_eefc !=nil {return _eefc ;};case 1:_afe .Template =_afe ._ad ;};return nil ;};func (_affd *GenericRegion )writeGBAtPixels (_bdd _b .BinaryWriter )(_egfd int ,_fcga error ){const _decg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _affd .UseMMR {return 0,nil ;};_bfcd :=1;if _affd .GBTemplate ==0{_bfcd =4;}else if _affd .UseExtTemplates {_bfcd =12;};if len (_affd .GBAtX )!=_bfcd {return 0,_ac .Errorf (_decg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_affd .GBAtY )!=_bfcd {return 0,_ac .Errorf (_decg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _dcd :=0;_dcd < _bfcd ;_dcd ++{if _fcga =_bdd .WriteByte (byte (_affd .GBAtX [_dcd ]));_fcga !=nil {return _egfd ,_ac .Wrap (_fcga ,_decg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_egfd ++;if _fcga =_bdd .WriteByte (byte (_affd .GBAtY [_dcd ]));
_fcga !=nil {return _egfd ,_ac .Wrap (_fcga ,_decg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_egfd ++;};return _egfd ,nil ;};func (_deda *HalftoneRegion )grayScaleDecoding (_affa int )([][]int ,error ){var (_bfbe []int8 ;_gadd []int8 ;
);if !_deda .IsMMREncoded {_bfbe =make ([]int8 ,4);_gadd =make ([]int8 ,4);if _deda .HTemplate <=1{_bfbe [0]=3;}else if _deda .HTemplate >=2{_bfbe [0]=2;};_gadd [0]=-1;_bfbe [1]=-3;_gadd [1]=-1;_bfbe [2]=2;_gadd [2]=-2;_bfbe [3]=-2;_gadd [3]=-2;};_agdb :=make ([]*_be .Bitmap ,_affa );
_age :=NewGenericRegion (_deda ._daec );_age .setParametersMMR (_deda .IsMMREncoded ,_deda .DataOffset ,_deda .DataLength ,_deda .HGridHeight ,_deda .HGridWidth ,_deda .HTemplate ,false ,_deda .HSkipEnabled ,_bfbe ,_gadd );_fdf :=_affa -1;var _ffd error ;
_agdb [_fdf ],_ffd =_age .GetRegionBitmap ();if _ffd !=nil {return nil ,_ffd ;};for _fdf > 0{_fdf --;_age .Bitmap =nil ;_agdb [_fdf ],_ffd =_age .GetRegionBitmap ();if _ffd !=nil {return nil ,_ffd ;};if _ffd =_deda .combineGrayscalePlanes (_agdb ,_fdf );
_ffd !=nil {return nil ,_ffd ;};};return _deda .computeGrayScalePlanes (_agdb ,_affa );};func (_ddeb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ddeb .RegionSegment };func (_ccd *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ccd .SdHuffDecodeHeightSelection {case 0:_adba ,_ffde :=_dc .GetStandardTable (4);
if _ffde !=nil {return 0,_ffde ;};return _adba .Decode (_ccd ._ffaa );case 1:_bfbaeb ,_cgda :=_dc .GetStandardTable (5);if _cgda !=nil {return 0,_cgda ;};return _bfbaeb .Decode (_ccd ._ffaa );case 3:if _ccd ._edb ==nil {_badg ,_cfa :=_dc .GetStandardTable (0);
if _cfa !=nil {return 0,_cfa ;};_ccd ._edb =_badg ;};return _ccd ._edb .Decode (_ccd ._ffaa );};return 0,nil ;};func (_acdd *TableSegment )HtPS ()int32 {return _acdd ._aega };func (_bagb *TableSegment )HtHigh ()int32 {return _bagb ._ggec };func (_gadf *GenericRegion )copyLineAbove (_eda int )error {_gecb :=_eda *_gadf .Bitmap .RowStride ;
_ggd :=_gecb -_gadf .Bitmap .RowStride ;for _gdgg :=0;_gdgg < _gadf .Bitmap .RowStride ;_gdgg ++{_cdba ,_faccb :=_gadf .Bitmap .GetByte (_ggd );if _faccb !=nil {return _faccb ;};_ggd ++;if _faccb =_gadf .Bitmap .SetByte (_gecb ,_cdba );_faccb !=nil {return _faccb ;
};_gecb ++;};return nil ;};func (_bebb *SymbolDictionary )decodeHeightClassBitmap (_bcagd *_be .Bitmap ,_eegdf int64 ,_bfgg int ,_abfga []int )error {for _dbgcb :=_eegdf ;_dbgcb < int64 (_bebb ._adbc );_dbgcb ++{var _aage int ;for _fagd :=_eegdf ;_fagd <=_dbgcb -1;
_fagd ++{_aage +=_abfga [_fagd ];};_bcbc :=_f .Rect (_aage ,0,_aage +_abfga [_dbgcb ],_bfgg );_adgd ,_dgf :=_be .Extract (_bcbc ,_bcagd );if _dgf !=nil {return _dgf ;};_bebb ._cefe [_dbgcb ]=_adgd ;_bebb ._aegd =append (_bebb ._aegd ,_adgd );};return nil ;
};func (_gbgd *SymbolDictionary )GetDictionary ()([]*_be .Bitmap ,error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ge .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ge .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gbgd ._acdec ,_gbgd ._cefe );
}();if _gbgd ._acdec ==nil {var _bggc error ;if _gbgd .UseRefinementAggregation {_gbgd ._dddb =_gbgd .getSbSymCodeLen ();};if !_gbgd .IsHuffmanEncoded {if _bggc =_gbgd .setCodingStatistics ();_bggc !=nil {return nil ,_bggc ;};};_gbgd ._cefe =make ([]*_be .Bitmap ,_gbgd .NumberOfNewSymbols );
var _daeca []int ;if _gbgd .IsHuffmanEncoded &&!_gbgd .UseRefinementAggregation {_daeca =make ([]int ,_gbgd .NumberOfNewSymbols );};if _bggc =_gbgd .setSymbolsArray ();_bggc !=nil {return nil ,_bggc ;};var _fdec ,_ccfb int64 ;_gbgd ._adbc =0;for _gbgd ._adbc < _gbgd .NumberOfNewSymbols {_ccfb ,_bggc =_gbgd .decodeHeightClassDeltaHeight ();
if _bggc !=nil {return nil ,_bggc ;};_fdec +=_ccfb ;var _agbc ,_gaee uint32 ;_edad :=int64 (_gbgd ._adbc );for {var _dafda int64 ;_dafda ,_bggc =_gbgd .decodeDifferenceWidth ();if _d .Is (_bggc ,_g .ErrOOB ){break ;};if _bggc !=nil {return nil ,_bggc ;
};if _gbgd ._adbc >=_gbgd .NumberOfNewSymbols {break ;};_agbc +=uint32 (_dafda );_gaee +=_agbc ;if !_gbgd .IsHuffmanEncoded ||_gbgd .UseRefinementAggregation {if !_gbgd .UseRefinementAggregation {_bggc =_gbgd .decodeDirectlyThroughGenericRegion (_agbc ,uint32 (_fdec ));
if _bggc !=nil {return nil ,_bggc ;};}else {_bggc =_gbgd .decodeAggregate (_agbc ,uint32 (_fdec ));if _bggc !=nil {return nil ,_bggc ;};};}else if _gbgd .IsHuffmanEncoded &&!_gbgd .UseRefinementAggregation {_daeca [_gbgd ._adbc ]=int (_agbc );};_gbgd ._adbc ++;
};if _gbgd .IsHuffmanEncoded &&!_gbgd .UseRefinementAggregation {var _aebc int64 ;if _gbgd .SdHuffBMSizeSelection ==0{var _dbce _dc .Tabler ;_dbce ,_bggc =_dc .GetStandardTable (1);if _bggc !=nil {return nil ,_bggc ;};_aebc ,_bggc =_dbce .Decode (_gbgd ._ffaa );
if _bggc !=nil {return nil ,_bggc ;};}else {_aebc ,_bggc =_gbgd .huffDecodeBmSize ();if _bggc !=nil {return nil ,_bggc ;};};_gbgd ._ffaa .Align ();var _eegcb *_be .Bitmap ;_eegcb ,_bggc =_gbgd .decodeHeightClassCollectiveBitmap (_aebc ,uint32 (_fdec ),_gaee );
if _bggc !=nil {return nil ,_bggc ;};_bggc =_gbgd .decodeHeightClassBitmap (_eegcb ,_edad ,int (_fdec ),_daeca );if _bggc !=nil {return nil ,_bggc ;};};};_cdce ,_bggc :=_gbgd .getToExportFlags ();if _bggc !=nil {return nil ,_bggc ;};_gbgd .setExportedSymbols (_cdce );
};return _gbgd ._acdec ,nil ;};func (_bffa *GenericRegion )setParametersWithAt (_eeff bool ,_fddf byte ,_degb ,_afad bool ,_adcb ,_afd []int8 ,_fgf ,_abbd uint32 ,_cfee *_aca .DecoderStats ,_babe *_aca .Decoder ){_bffa .IsMMREncoded =_eeff ;_bffa .GBTemplate =_fddf ;
_bffa .IsTPGDon =_degb ;_bffa .GBAtX =_adcb ;_bffa .GBAtY =_afd ;_bffa .RegionSegment .BitmapHeight =_abbd ;_bffa .RegionSegment .BitmapWidth =_fgf ;_bffa ._bfbc =nil ;_bffa .Bitmap =nil ;if _cfee !=nil {_bffa ._bed =_cfee ;};if _babe !=nil {_bffa ._befa =_babe ;
};_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bffa );};func (_dgcg *Header )parse (_gbfg Documenter ,_bbge *_b .Reader ,_fgfde int64 ,_bdda OrganizationType )(_ggdb error ){const _bcb ="\u0070\u0061\u0072s\u0065";
_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ggdb !=nil {_ge .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ggdb );
}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_ggdb =_bbge .Seek (_fgfde ,_fe .SeekStart );
if _ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ggdb =_dgcg .readSegmentNumber (_bbge );_ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");};if _ggdb =_dgcg .readHeaderFlags ();_ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");
};var _aege uint64 ;_aege ,_ggdb =_dgcg .readNumberOfReferredToSegments (_bbge );if _ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");};_dgcg .RTSNumbers ,_ggdb =_dgcg .readReferredToSegmentNumbers (_bbge ,int (_aege ));if _ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");
};_ggdb =_dgcg .readSegmentPageAssociation (_gbfg ,_bbge ,_aege ,_dgcg .RTSNumbers ...);if _ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");};if _dgcg .Type !=TEndOfFile {if _ggdb =_dgcg .readSegmentDataLength (_bbge );_ggdb !=nil {return _ac .Wrap (_ggdb ,_bcb ,"");
};};_dgcg .readDataStartOffset (_bbge ,_bdda );_dgcg .readHeaderLength (_bbge ,_fgfde );_ge .Log .Trace ("\u0025\u0073",_dgcg );return nil ;};func (_bdbb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dbdca ,_dffd :=_bdbb ._eegd .ReadBit ();
if _dffd !=nil {return _dffd ;};if _dbdca ==1{_bdbb ._aecb =true ;};return nil ;};func (_faabd *TableSegment )Init (h *Header ,r *_b .Reader )error {_faabd ._daff =r ;return _faabd .parseHeader ();};func (_abgc *TableSegment )StreamReader ()*_b .Reader {return _abgc ._daff };
func (_eeg *GenericRefinementRegion )getPixel (_ccf *_be .Bitmap ,_bdg ,_gcb int )int {if _bdg < 0||_bdg >=_ccf .Width {return 0;};if _gcb < 0||_gcb >=_ccf .Height {return 0;};if _ccf .GetPixel (_bdg ,_gcb ){return 1;};return 0;};func (_fedc *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fedc ._faeg ==nil {var (_egdb int ;
_cfaa error ;);if _fedc .SdHuffDecodeHeightSelection ==3{_egdb ++;};if _fedc .SdHuffDecodeWidthSelection ==3{_egdb ++;};_fedc ._faeg ,_cfaa =_fedc .getUserTable (_egdb );if _cfaa !=nil {return 0,_cfaa ;};};return _fedc ._faeg .Decode (_fedc ._ffaa );};
func (_aefbc *SymbolDictionary )readNumberOfNewSymbols ()error {_fadecf ,_ccb :=_aefbc ._ffaa .ReadBits (32);if _ccb !=nil {return _ccb ;};_aefbc .NumberOfNewSymbols =uint32 (_fadecf &_ae .MaxUint32 );return nil ;};type SegmentEncoder interface{Encode (_gef _b .BinaryWriter )(_efbcc int ,_bag error );
};func (_dfda *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _dfda ._aecb };func (_bf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _bf .RegionInfo };func (_dga *HalftoneRegion )computeY (_cbe ,_cbdb int )int {return _dga .shiftAndFill (int (_dga .HGridY )+_cbe *int (_dga .HRegionX )-_cbdb *int (_dga .HRegionY ));
};func (_aecab *SymbolDictionary )checkInput ()error {if _aecab .SdHuffDecodeHeightSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_aecab .SdHuffDecodeHeightSelection );
};if _aecab .SdHuffDecodeWidthSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_aecab .SdHuffDecodeWidthSelection );
};if _aecab .IsHuffmanEncoded {if _aecab .SdTemplate !=0{_ge .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_aecab .SdTemplate );
};if !_aecab .UseRefinementAggregation {if !_aecab .UseRefinementAggregation {if _aecab ._dfbd {_ge .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_aecab ._dfbd =false ;};if _aecab ._aegee {_ge .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_aecab ._aegee =false ;};};};}else {if _aecab .SdHuffBMSizeSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_aecab .SdHuffBMSizeSelection =0;};if _aecab .SdHuffDecodeWidthSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_aecab .SdHuffDecodeWidthSelection =0;};if _aecab .SdHuffDecodeHeightSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_aecab .SdHuffDecodeHeightSelection =0;};};if !_aecab .UseRefinementAggregation {if _aecab .SdrTemplate !=0{_ge .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_aecab .SdrTemplate );
_aecab .SdrTemplate =0;};};if !_aecab .IsHuffmanEncoded ||!_aecab .UseRefinementAggregation {if _aecab .SdHuffAggInstanceSelection {_ge .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_aecab .SdHuffAggInstanceSelection );
};};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_bbfd *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_affag ,_gcae :=_bbfd ._eegd .ReadBit ();if _gcae !=nil {return _gcae ;};if _affag ==1{_bbfd ._fafc =true ;
};return nil ;};func (_eec *HalftoneRegion )parseHeader ()error {if _addf :=_eec .RegionSegment .parseHeader ();_addf !=nil {return _addf ;};_egcc ,_fadec :=_eec ._daec .ReadBit ();if _fadec !=nil {return _fadec ;};_eec .HDefaultPixel =int8 (_egcc );_cbfa ,_fadec :=_eec ._daec .ReadBits (3);
if _fadec !=nil {return _fadec ;};_eec .CombinationOperator =_be .CombinationOperator (_cbfa &0xf);_egcc ,_fadec =_eec ._daec .ReadBit ();if _fadec !=nil {return _fadec ;};if _egcc ==1{_eec .HSkipEnabled =true ;};_cbfa ,_fadec =_eec ._daec .ReadBits (2);
if _fadec !=nil {return _fadec ;};_eec .HTemplate =byte (_cbfa &0xf);_egcc ,_fadec =_eec ._daec .ReadBit ();if _fadec !=nil {return _fadec ;};if _egcc ==1{_eec .IsMMREncoded =true ;};_cbfa ,_fadec =_eec ._daec .ReadBits (32);if _fadec !=nil {return _fadec ;
};_eec .HGridWidth =uint32 (_cbfa &_ae .MaxUint32 );_cbfa ,_fadec =_eec ._daec .ReadBits (32);if _fadec !=nil {return _fadec ;};_eec .HGridHeight =uint32 (_cbfa &_ae .MaxUint32 );_cbfa ,_fadec =_eec ._daec .ReadBits (32);if _fadec !=nil {return _fadec ;
};_eec .HGridX =int32 (_cbfa &_ae .MaxInt32 );_cbfa ,_fadec =_eec ._daec .ReadBits (32);if _fadec !=nil {return _fadec ;};_eec .HGridY =int32 (_cbfa &_ae .MaxInt32 );_cbfa ,_fadec =_eec ._daec .ReadBits (16);if _fadec !=nil {return _fadec ;};_eec .HRegionX =uint16 (_cbfa &_ae .MaxUint16 );
_cbfa ,_fadec =_eec ._daec .ReadBits (16);if _fadec !=nil {return _fadec ;};_eec .HRegionY =uint16 (_cbfa &_ae .MaxUint16 );if _fadec =_eec .computeSegmentDataStructure ();_fadec !=nil {return _fadec ;};return _eec .checkInput ();};func (_eefg *PatternDictionary )setGbAtPixels (){if _eefg .HDTemplate ==0{_eefg .GBAtX =make ([]int8 ,4);
_eefg .GBAtY =make ([]int8 ,4);_eefg .GBAtX [0]=-int8 (_eefg .HdpWidth );_eefg .GBAtY [0]=0;_eefg .GBAtX [1]=-3;_eefg .GBAtY [1]=-1;_eefg .GBAtX [2]=2;_eefg .GBAtY [2]=-2;_eefg .GBAtX [3]=-2;_eefg .GBAtY [3]=-2;}else {_eefg .GBAtX =[]int8 {-int8 (_eefg .HdpWidth )};
_eefg .GBAtY =[]int8 {0};};};func (_fbgbf *RegionSegment )Size ()int {return 17};func (_beaf *SymbolDictionary )setRefinementAtPixels ()error {if !_beaf .UseRefinementAggregation ||_beaf .SdrTemplate !=0{return nil ;};if _ebbbb :=_beaf .readRefinementAtPixels (2);
_ebbbb !=nil {return _ebbbb ;};return nil ;};func (_dggd *SymbolDictionary )Encode (w _b .BinaryWriter )(_dgda int ,_begca error ){const _acac ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _dggd ==nil {return 0,_ac .Error (_acac ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _dgda ,_begca =_dggd .encodeFlags (w );_begca !=nil {return _dgda ,_ac .Wrap (_begca ,_acac ,"");
};_dafd ,_begca :=_dggd .encodeATFlags (w );if _begca !=nil {return _dgda ,_ac .Wrap (_begca ,_acac ,"");};_dgda +=_dafd ;if _dafd ,_begca =_dggd .encodeRefinementATFlags (w );_begca !=nil {return _dgda ,_ac .Wrap (_begca ,_acac ,"");};_dgda +=_dafd ;if _dafd ,_begca =_dggd .encodeNumSyms (w );
_begca !=nil {return _dgda ,_ac .Wrap (_begca ,_acac ,"");};_dgda +=_dafd ;if _dafd ,_begca =_dggd .encodeSymbols (w );_begca !=nil {return _dgda ,_ac .Wrap (_begca ,_acac ,"");};_dgda +=_dafd ;return _dgda ,nil ;};func (_gfa *GenericRegion )parseHeader ()(_ccc error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _ccc !=nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ccc );
}else {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_daa int ;_eadd uint64 ;);if _ccc =_gfa .RegionSegment .parseHeader ();_ccc !=nil {return _ccc ;};if _ ,_ccc =_gfa ._acfe .ReadBits (3);_ccc !=nil {return _ccc ;};_daa ,_ccc =_gfa ._acfe .ReadBit ();if _ccc !=nil {return _ccc ;};if _daa ==1{_gfa .UseExtTemplates =true ;
};_daa ,_ccc =_gfa ._acfe .ReadBit ();if _ccc !=nil {return _ccc ;};if _daa ==1{_gfa .IsTPGDon =true ;};_eadd ,_ccc =_gfa ._acfe .ReadBits (2);if _ccc !=nil {return _ccc ;};_gfa .GBTemplate =byte (_eadd &0xf);_daa ,_ccc =_gfa ._acfe .ReadBit ();if _ccc !=nil {return _ccc ;
};if _daa ==1{_gfa .IsMMREncoded =true ;};if !_gfa .IsMMREncoded {_dbe :=1;if _gfa .GBTemplate ==0{_dbe =4;if _gfa .UseExtTemplates {_dbe =12;};};if _ccc =_gfa .readGBAtPixels (_dbe );_ccc !=nil {return _ccc ;};};if _ccc =_gfa .computeSegmentDataStructure ();
_ccc !=nil {return _ccc ;};_ge .Log .Trace ("\u0025\u0073",_gfa );return nil ;};func _ead (_dfg *_b .Reader ,_fcfe *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_acab :_dfg ,RegionInfo :NewRegionSegment (_dfg ),_aeg :_fcfe ,_af :&template0 {},_ad :&template1 {}};
};func (_dddf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _dddf .IsHuffmanEncoded {return _dddf .decodeHeightClassDeltaHeightWithHuffman ();};_acbd ,_fffb :=_dddf ._gede .DecodeInt (_dddf ._ace );if _fffb !=nil {return 0,_fffb ;
};return int64 (_acbd ),nil ;};func (_acdg *PatternDictionary )extractPatterns (_eff *_be .Bitmap )error {var _dbfd int ;_cggc :=make ([]*_be .Bitmap ,_acdg .GrayMax +1);for _dbfd <=int (_acdg .GrayMax ){_bfba :=int (_acdg .HdpWidth )*_dbfd ;_cdedg :=_f .Rect (_bfba ,0,_bfba +int (_acdg .HdpWidth ),int (_acdg .HdpHeight ));
_cffe ,_feb :=_be .Extract (_cdedg ,_eff );if _feb !=nil {return _feb ;};_cggc [_dbfd ]=_cffe ;_dbfd ++;};_acdg .Patterns =_cggc ;return nil ;};func NewRegionSegment (r *_b .Reader )*RegionSegment {return &RegionSegment {_ddaf :r }};func (_gbdf *RegionSegment )Encode (w _b .BinaryWriter )(_effg int ,_dedd error ){const _ffdaa ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_acaf :=make ([]byte ,4);_c .BigEndian .PutUint32 (_acaf ,_gbdf .BitmapWidth );_effg ,_dedd =w .Write (_acaf );if _dedd !=nil {return 0,_ac .Wrap (_dedd ,_ffdaa ,"\u0057\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_acaf ,_gbdf .BitmapHeight );var _bdca int ;
_bdca ,_dedd =w .Write (_acaf );if _dedd !=nil {return 0,_ac .Wrap (_dedd ,_ffdaa ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_effg +=_bdca ;_c .BigEndian .PutUint32 (_acaf ,_gbdf .XLocation );_bdca ,_dedd =w .Write (_acaf );if _dedd !=nil {return 0,_ac .Wrap (_dedd ,_ffdaa ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_effg +=_bdca ;_c .BigEndian .PutUint32 (_acaf ,_gbdf .YLocation );_bdca ,_dedd =w .Write (_acaf );if _dedd !=nil {return 0,_ac .Wrap (_dedd ,_ffdaa ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_effg +=_bdca ;if _dedd =w .WriteByte (byte (_gbdf .CombinaionOperator )&0x07);
_dedd !=nil {return 0,_ac .Wrap (_dedd ,_ffdaa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_effg ++;return _effg ,nil ;};func (_cbde *SymbolDictionary )decodeRefinedSymbol (_cgef ,_adea uint32 )error {var (_ceeeg int ;
_fcgca ,_bbfe int32 ;);if _cbde .IsHuffmanEncoded {_acaaa ,_cdbb :=_cbde ._ffaa .ReadBits (byte (_cbde ._dddb ));if _cdbb !=nil {return _cdbb ;};_ceeeg =int (_acaaa );_fdff ,_cdbb :=_dc .GetStandardTable (15);if _cdbb !=nil {return _cdbb ;};_fdaa ,_cdbb :=_fdff .Decode (_cbde ._ffaa );
if _cdbb !=nil {return _cdbb ;};_fcgca =int32 (_fdaa );_fdaa ,_cdbb =_fdff .Decode (_cbde ._ffaa );if _cdbb !=nil {return _cdbb ;};_bbfe =int32 (_fdaa );_fdff ,_cdbb =_dc .GetStandardTable (1);if _cdbb !=nil {return _cdbb ;};if _ ,_cdbb =_fdff .Decode (_cbde ._ffaa );
_cdbb !=nil {return _cdbb ;};_cbde ._ffaa .Align ();}else {_eedg ,_fefa :=_cbde ._gede .DecodeIAID (uint64 (_cbde ._dddb ),_cbde ._gecad );if _fefa !=nil {return _fefa ;};_ceeeg =int (_eedg );_fcgca ,_fefa =_cbde ._gede .DecodeInt (_cbde ._bfbae );if _fefa !=nil {return _fefa ;
};_bbfe ,_fefa =_cbde ._gede .DecodeInt (_cbde ._dcbf );if _fefa !=nil {return _fefa ;};};if _aefge :=_cbde .setSymbolsArray ();_aefge !=nil {return _aefge ;};_gaga :=_cbde ._aegd [_ceeeg ];if _acfed :=_cbde .decodeNewSymbols (_cgef ,_adea ,_gaga ,_fcgca ,_bbfe );
_acfed !=nil {return _acfed ;};if _cbde .IsHuffmanEncoded {_cbde ._ffaa .Align ();};return nil ;};func (_gcgfd *SymbolDictionary )encodeSymbols (_geec _b .BinaryWriter )(_adgcd int ,_ggaf error ){const _bcafa ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_bced :=_fd .New ();_bced .Init ();_deeb ,_ggaf :=_gcgfd ._gdaa .SelectByIndexes (_gcgfd ._eabgf );if _ggaf !=nil {return 0,_ac .Wrap (_ggaf ,_bcafa ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_agcd :=map[*_be .Bitmap ]int {};for _afcfd ,_fadc :=range _deeb .Values {_agcd [_fadc ]=_afcfd ;
};_deeb .SortByHeight ();var _egaa ,_baab int ;_cacga ,_ggaf :=_deeb .GroupByHeight ();if _ggaf !=nil {return 0,_ac .Wrap (_ggaf ,_bcafa ,"");};for _ ,_ggac :=range _cacga .Values {_fcabc :=_ggac .Values [0].Height ;_fgag :=_fcabc -_egaa ;if _ggaf =_bced .EncodeInteger (_fd .IADH ,_fgag );
_ggaf !=nil {return 0,_ac .Wrapf (_ggaf ,_bcafa ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fgag );};_egaa =_fcabc ;_bdgc ,_gggg :=_ggac .GroupByWidth ();if _gggg !=nil {return 0,_ac .Wrapf (_gggg ,_bcafa ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcabc );
};var _bgg int ;for _ ,_cecd :=range _bdgc .Values {for _ ,_gfgg :=range _cecd .Values {_ecag :=_gfgg .Width ;_ffe :=_ecag -_bgg ;if _gggg =_bced .EncodeInteger (_fd .IADW ,_ffe );_gggg !=nil {return 0,_ac .Wrapf (_gggg ,_bcafa ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_ffe );
};_bgg +=_ffe ;if _gggg =_bced .EncodeBitmap (_gfgg ,false );_gggg !=nil {return 0,_ac .Wrapf (_gggg ,_bcafa ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fcabc ,_ecag );};_gfcf :=_agcd [_gfgg ];_gcgfd ._cbed [_gfcf ]=_baab ;
_baab ++;};};if _gggg =_bced .EncodeOOB (_fd .IADW );_gggg !=nil {return 0,_ac .Wrap (_gggg ,_bcafa ,"\u0049\u0041\u0044\u0057");};};if _ggaf =_bced .EncodeInteger (_fd .IAEX ,0);_ggaf !=nil {return 0,_ac .Wrap (_ggaf ,_bcafa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _ggaf =_bced .EncodeInteger (_fd .IAEX ,len (_gcgfd ._eabgf ));_ggaf !=nil {return 0,_ac .Wrap (_ggaf ,_bcafa ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bced .Final ();_feca ,_ggaf :=_bced .WriteTo (_geec );
if _ggaf !=nil {return 0,_ac .Wrap (_ggaf ,_bcafa ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_feca ),nil ;};func (_cecb *TextRegion )decodeRdh ()(int64 ,error ){const _fccf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _cecb .IsHuffmanEncoded {if _cecb .SbHuffRDHeight ==3{if _cecb ._acdge ==nil {var (_caac int ;_ggea error ;
);if _cecb .SbHuffFS ==3{_caac ++;};if _cecb .SbHuffDS ==3{_caac ++;};if _cecb .SbHuffDT ==3{_caac ++;};if _cecb .SbHuffRDWidth ==3{_caac ++;};_cecb ._acdge ,_ggea =_cecb .getUserTable (_caac );if _ggea !=nil {return 0,_ac .Wrap (_ggea ,_fccf ,"");};};
return _cecb ._acdge .Decode (_cecb ._bfde );};_bbcc ,_aebg :=_dc .GetStandardTable (14+int (_cecb .SbHuffRDHeight ));if _aebg !=nil {return 0,_ac .Wrap (_aebg ,_fccf ,"");};return _bbcc .Decode (_cecb ._bfde );};_eabfe ,_fagdb :=_cecb ._bfga .DecodeInt (_cecb ._gcag );
if _fagdb !=nil {return 0,_ac .Wrap (_fagdb ,_fccf ,"");};return int64 (_eabfe ),nil ;};type HalftoneRegion struct{_daec *_b .Reader ;_eba *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
HDefaultPixel int8 ;CombinationOperator _be .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_be .Bitmap ;
Patterns []*_be .Bitmap ;};func (_ebf *GenericRegion )GetRegionBitmap ()(_dcf *_be .Bitmap ,_fdbe error ){if _ebf .Bitmap !=nil {return _ebf .Bitmap ,nil ;};if _ebf .IsMMREncoded {if _ebf ._bfbc ==nil {_ebf ._bfbc ,_fdbe =_df .New (_ebf ._acfe ,int (_ebf .RegionSegment .BitmapWidth ),int (_ebf .RegionSegment .BitmapHeight ),_ebf .DataOffset ,_ebf .DataLength );
if _fdbe !=nil {return nil ,_fdbe ;};};_ebf .Bitmap ,_fdbe =_ebf ._bfbc .UncompressMMR ();return _ebf .Bitmap ,_fdbe ;};if _fdbe =_ebf .updateOverrideFlags ();_fdbe !=nil {return nil ,_fdbe ;};var _ded int ;if _ebf ._befa ==nil {_ebf ._befa ,_fdbe =_aca .New (_ebf ._acfe );
if _fdbe !=nil {return nil ,_fdbe ;};};if _ebf ._bed ==nil {_ebf ._bed =_aca .NewStats (65536,1);};_ebf .Bitmap =_be .New (int (_ebf .RegionSegment .BitmapWidth ),int (_ebf .RegionSegment .BitmapHeight ));_eebf :=int (uint32 (_ebf .Bitmap .Width +7)&(^uint32 (7)));
for _cgebg :=0;_cgebg < _ebf .Bitmap .Height ;_cgebg ++{if _ebf .IsTPGDon {var _cba int ;_cba ,_fdbe =_ebf .decodeSLTP ();if _fdbe !=nil {return nil ,_fdbe ;};_ded ^=_cba ;};if _ded ==1{if _cgebg > 0{if _fdbe =_ebf .copyLineAbove (_cgebg );_fdbe !=nil {return nil ,_fdbe ;
};};}else {if _fdbe =_ebf .decodeLine (_cgebg ,_ebf .Bitmap .Width ,_eebf );_fdbe !=nil {return nil ,_fdbe ;};};};return _ebf .Bitmap ,nil ;};func (_abega *SymbolDictionary )readRegionFlags ()error {var (_dafg uint64 ;_gcda int ;);_ ,_cfde :=_abega ._ffaa .ReadBits (3);
if _cfde !=nil {return _cfde ;};_gcda ,_cfde =_abega ._ffaa .ReadBit ();if _cfde !=nil {return _cfde ;};_abega .SdrTemplate =int8 (_gcda );_dafg ,_cfde =_abega ._ffaa .ReadBits (2);if _cfde !=nil {return _cfde ;};_abega .SdTemplate =int8 (_dafg &0xf);_gcda ,_cfde =_abega ._ffaa .ReadBit ();
if _cfde !=nil {return _cfde ;};if _gcda ==1{_abega ._dfbd =true ;};_gcda ,_cfde =_abega ._ffaa .ReadBit ();if _cfde !=nil {return _cfde ;};if _gcda ==1{_abega ._aegee =true ;};_gcda ,_cfde =_abega ._ffaa .ReadBit ();if _cfde !=nil {return _cfde ;};if _gcda ==1{_abega .SdHuffAggInstanceSelection =true ;
};_gcda ,_cfde =_abega ._ffaa .ReadBit ();if _cfde !=nil {return _cfde ;};_abega .SdHuffBMSizeSelection =int8 (_gcda );_dafg ,_cfde =_abega ._ffaa .ReadBits (2);if _cfde !=nil {return _cfde ;};_abega .SdHuffDecodeWidthSelection =int8 (_dafg &0xf);_dafg ,_cfde =_abega ._ffaa .ReadBits (2);
if _cfde !=nil {return _cfde ;};_abega .SdHuffDecodeHeightSelection =int8 (_dafg &0xf);_gcda ,_cfde =_abega ._ffaa .ReadBit ();if _cfde !=nil {return _cfde ;};if _gcda ==1{_abega .UseRefinementAggregation =true ;};_gcda ,_cfde =_abega ._ffaa .ReadBit ();
if _cfde !=nil {return _cfde ;};if _gcda ==1{_abega .IsHuffmanEncoded =true ;};return nil ;};func (_dbdce *GenericRegion )setParameters (_ebc bool ,_fef ,_ccea int64 ,_acde ,_gafb uint32 ){_dbdce .IsMMREncoded =_ebc ;_dbdce .DataOffset =_fef ;_dbdce .DataLength =_ccea ;
_dbdce .RegionSegment .BitmapHeight =_acde ;_dbdce .RegionSegment .BitmapWidth =_gafb ;_dbdce ._bfbc =nil ;_dbdce .Bitmap =nil ;};func (_bcfa *TextRegion )decodeRdy ()(int64 ,error ){const _aabd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _bcfa .IsHuffmanEncoded {if _bcfa .SbHuffRDY ==3{if _bcfa ._dfad ==nil {var (_cgfc int ;
_fgbf error ;);if _bcfa .SbHuffFS ==3{_cgfc ++;};if _bcfa .SbHuffDS ==3{_cgfc ++;};if _bcfa .SbHuffDT ==3{_cgfc ++;};if _bcfa .SbHuffRDWidth ==3{_cgfc ++;};if _bcfa .SbHuffRDHeight ==3{_cgfc ++;};if _bcfa .SbHuffRDX ==3{_cgfc ++;};_bcfa ._dfad ,_fgbf =_bcfa .getUserTable (_cgfc );
if _fgbf !=nil {return 0,_ac .Wrap (_fgbf ,_aabd ,"");};};return _bcfa ._dfad .Decode (_bcfa ._bfde );};_dgebg ,_gbge :=_dc .GetStandardTable (14+int (_bcfa .SbHuffRDY ));if _gbge !=nil {return 0,_gbge ;};return _dgebg .Decode (_bcfa ._bfde );};_abdd ,_eagdc :=_bcfa ._bfga .DecodeInt (_bcfa ._dfa );
if _eagdc !=nil {return 0,_ac .Wrap (_eagdc ,_aabd ,"");};return int64 (_abdd ),nil ;};func (_dege *Header )writeFlags (_fagb _b .BinaryWriter )(_bddc error ){const _fafff ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_dfd :=byte (_dege .Type );if _bddc =_fagb .WriteByte (_dfd );_bddc !=nil {return _ac .Wrap (_bddc ,_fafff ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_dege .RetainFlag &&!_dege .PageAssociationFieldSize {return nil ;};if _bddc =_fagb .SkipBits (-8);_bddc !=nil {return _ac .Wrap (_bddc ,_fafff ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fcec int ;if _dege .RetainFlag {_fcec =1;};if _bddc =_fagb .WriteBit (_fcec );_bddc !=nil {return _ac .Wrap (_bddc ,_fafff ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fcec =0;if _dege .PageAssociationFieldSize {_fcec =1;
};if _bddc =_fagb .WriteBit (_fcec );_bddc !=nil {return _ac .Wrap (_bddc ,_fafff ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_fagb .FinishByte ();return nil ;};func _bgbd (_gagd int )int {if _gagd ==0{return 0;
};_gagd |=_gagd >>1;_gagd |=_gagd >>2;_gagd |=_gagd >>4;_gagd |=_gagd >>8;_gagd |=_gagd >>16;return (_gagd +1)>>1;};func (_gdca *SymbolDictionary )setAtPixels ()error {if _gdca .IsHuffmanEncoded {return nil ;};_agg :=1;if _gdca .SdTemplate ==0{_agg =4;
};if _efdb :=_gdca .readAtPixels (_agg );_efdb !=nil {return _efdb ;};return nil ;};func (_bgeg *PageInformationSegment )parseHeader ()(_ced error ){_ge .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _daaa ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _ced !=nil {_daaa +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_ced .Error ();}else {_daaa +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ge .Log .Trace (_daaa );}();if _ced =_bgeg .readWidthAndHeight ();
_ced !=nil {return _ced ;};if _ced =_bgeg .readResolution ();_ced !=nil {return _ced ;};_ ,_ced =_bgeg ._eegd .ReadBit ();if _ced !=nil {return _ced ;};if _ced =_bgeg .readCombinationOperatorOverrideAllowed ();_ced !=nil {return _ced ;};if _ced =_bgeg .readRequiresAuxiliaryBuffer ();
_ced !=nil {return _ced ;};if _ced =_bgeg .readCombinationOperator ();_ced !=nil {return _ced ;};if _ced =_bgeg .readDefaultPixelValue ();_ced !=nil {return _ced ;};if _ced =_bgeg .readContainsRefinement ();_ced !=nil {return _ced ;};if _ced =_bgeg .readIsLossless ();
_ced !=nil {return _ced ;};if _ced =_bgeg .readIsStriped ();_ced !=nil {return _ced ;};if _ced =_bgeg .readMaxStripeSize ();_ced !=nil {return _ced ;};if _ced =_bgeg .checkInput ();_ced !=nil {return _ced ;};_ge .Log .Trace ("\u0025\u0073",_bgeg );return nil ;
};func (_bd *GenericRefinementRegion )decodeTemplate (_dec ,_eca ,_fgb ,_fad ,_gbf ,_gade ,_ggg ,_dcgcf ,_ed ,_dbc int ,_eef templater )(_acdb error ){var (_cdg ,_bgf ,_ag ,_fcb ,_fga int16 ;_fbf ,_ebe ,_bbf ,_eagg int ;_bfg byte ;);if _ed >=1&&(_ed -1)< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -_fad );
if _acdb !=nil {return _acdb ;};_fbf =int (_bfg );};if _ed >=0&&(_ed )< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc );if _acdb !=nil {return _acdb ;};_ebe =int (_bfg );};if _ed >=-1&&(_ed +1)< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc +_fad );
if _acdb !=nil {return _acdb ;};_bbf =int (_bfg );};_dbc ++;if _dec >=1{_bfg ,_acdb =_bd .RegionBitmap .GetByte (_dcgcf -_fgb );if _acdb !=nil {return _acdb ;};_eagg =int (_bfg );};_dcgcf ++;_dagb :=_bd .ReferenceDX %8;_agd :=6+_dagb ;_egg :=_dbc %_fad ;
if _agd >=0{if _agd < 8{_cdg =int16 (_fbf >>uint (_agd ))&0x07;};if _agd < 8{_bgf =int16 (_ebe >>uint (_agd ))&0x07;};if _agd < 8{_ag =int16 (_bbf >>uint (_agd ))&0x07;};if _agd ==6&&_egg > 1{if _ed >=1&&(_ed -1)< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -_fad -2);
if _acdb !=nil {return _acdb ;};_cdg |=int16 (_bfg <<2)&0x04;};if _ed >=0&&_ed < _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -2);if _acdb !=nil {return _acdb ;};_bgf |=int16 (_bfg <<2)&0x04;};if _ed >=-1&&_ed +1< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc +_fad -2);
if _acdb !=nil {return _acdb ;};_ag |=int16 (_bfg <<2)&0x04;};};if _agd ==0{_fbf =0;_ebe =0;_bbf =0;if _egg < _fad -1{if _ed >=1&&_ed -1< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -_fad );if _acdb !=nil {return _acdb ;
};_fbf =int (_bfg );};if _ed >=0&&_ed < _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc );if _acdb !=nil {return _acdb ;};_ebe =int (_bfg );};if _ed >=-1&&_ed +1< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc +_fad );
if _acdb !=nil {return _acdb ;};_bbf =int (_bfg );};};_dbc ++;};}else {_cdg =int16 (_fbf <<1)&0x07;_bgf =int16 (_ebe <<1)&0x07;_ag =int16 (_bbf <<1)&0x07;_fbf =0;_ebe =0;_bbf =0;if _egg < _fad -1{if _ed >=1&&_ed -1< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -_fad );
if _acdb !=nil {return _acdb ;};_fbf =int (_bfg );};if _ed >=0&&_ed < _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc );if _acdb !=nil {return _acdb ;};_ebe =int (_bfg );};if _ed >=-1&&_ed +1< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc +_fad );
if _acdb !=nil {return _acdb ;};_bbf =int (_bfg );};_dbc ++;};_cdg |=int16 ((_fbf >>7)&0x07);_bgf |=int16 ((_ebe >>7)&0x07);_ag |=int16 ((_bbf >>7)&0x07);};_fcb =int16 (_eagg >>6);_fga =0;_bda :=(2-_dagb )%8;_fbf <<=uint (_bda );_ebe <<=uint (_bda );_bbf <<=uint (_bda );
_eagg <<=2;var _faf int ;for _gdg :=0;_gdg < _eca ;_gdg ++{_cfb :=_gdg &0x07;_edf :=_eef .form (_cdg ,_bgf ,_ag ,_fcb ,_fga );if _bd ._eb {_bfg ,_acdb =_bd .RegionBitmap .GetByte (_bd .RegionBitmap .GetByteIndex (_gdg ,_dec ));if _acdb !=nil {return _acdb ;
};_bd ._bge .SetIndex (int32 (_bd .overrideAtTemplate0 (int (_edf ),_gdg ,_dec ,int (_bfg ),_cfb )));}else {_bd ._bge .SetIndex (int32 (_edf ));};_faf ,_acdb =_bd ._bg .DecodeBit (_bd ._bge );if _acdb !=nil {return _acdb ;};if _acdb =_bd .RegionBitmap .SetPixel (_gdg ,_dec ,byte (_faf ));
_acdb !=nil {return _acdb ;};_cdg =((_cdg <<1)|0x01&int16 (_fbf >>7))&0x07;_bgf =((_bgf <<1)|0x01&int16 (_ebe >>7))&0x07;_ag =((_ag <<1)|0x01&int16 (_bbf >>7))&0x07;_fcb =((_fcb <<1)|0x01&int16 (_eagg >>7))&0x07;_fga =int16 (_faf );if (_gdg -int (_bd .ReferenceDX ))%8==5{_fbf =0;
_ebe =0;_bbf =0;if ((_gdg -int (_bd .ReferenceDX ))/8)+1< _bd .ReferenceBitmap .RowStride {if _ed >=1&&(_ed -1)< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc -_fad );if _acdb !=nil {return _acdb ;};_fbf =int (_bfg );};
if _ed >=0&&_ed < _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc );if _acdb !=nil {return _acdb ;};_ebe =int (_bfg );};if _ed >=-1&&(_ed +1)< _bd .ReferenceBitmap .Height {_bfg ,_acdb =_bd .ReferenceBitmap .GetByte (_dbc +_fad );
if _acdb !=nil {return _acdb ;};_bbf =int (_bfg );};};_dbc ++;}else {_fbf <<=1;_ebe <<=1;_bbf <<=1;};if _cfb ==5&&_dec >=1{if ((_gdg >>3)+1)>=_bd .RegionBitmap .RowStride {_eagg =0;}else {_bfg ,_acdb =_bd .RegionBitmap .GetByte (_dcgcf -_fgb );if _acdb !=nil {return _acdb ;
};_eagg =int (_bfg );};_dcgcf ++;}else {_eagg <<=1;};};return nil ;};type PatternDictionary struct{_abca *_b .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;
HdpWidth byte ;HdpHeight byte ;Patterns []*_be .Bitmap ;GrayMax uint32 ;};func (_dcced *PatternDictionary )readIsMMREncoded ()error {_cfdb ,_gbeg :=_dcced ._abca .ReadBit ();if _gbeg !=nil {return _gbeg ;};if _cfdb !=0{_dcced .IsMMREncoded =true ;};return nil ;
};func (_bbeec *PatternDictionary )readTemplate ()error {_fbe ,_gbbd :=_bbeec ._abca .ReadBits (2);if _gbbd !=nil {return _gbbd ;};_bbeec .HDTemplate =byte (_fbe );return nil ;};func (_begb *PageInformationSegment )String ()string {_bgeec :=&_e .Builder {};
_bgeec .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_begb .PageBMHeight ));
_bgeec .WriteString (_ff .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_begb .PageBMWidth ));_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_begb .ResolutionX ));
_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_begb .ResolutionY ));_bgeec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_begb ._gcbcf ));
_bgeec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_begb ._aecb ));_bgeec .WriteString (_ff .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_begb .IsLossless ));
_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_begb ._fafc ));_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_begb ._ffcgf ));
_bgeec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_begb .IsStripe ));_bgeec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_begb .MaxStripeSize ));
return _bgeec .String ();};var (_aegg Segmenter ;_fbcb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _aegg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _aegg },TProfiles :func ()Segmenter {return _aegg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _aegg },TBitmap :func ()Segmenter {return _aegg }};
);func (_egfda *TextRegion )decodeCurrentT ()(int64 ,error ){if _egfda .SbStrips !=1{if _egfda .IsHuffmanEncoded {_fcgf ,_eabf :=_egfda ._bfde .ReadBits (byte (_egfda .LogSBStrips ));return int64 (_fcgf ),_eabf ;};_bec ,_facg :=_egfda ._bfga .DecodeInt (_egfda ._ffg );
if _facg !=nil {return 0,_facg ;};return int64 (_bec ),nil ;};return 0,nil ;};type TableSegment struct{_daff *_b .Reader ;_acdeg int32 ;_aega int32 ;_cbea int32 ;_gdec int32 ;_ggec int32 ;};func (_cfcce *HalftoneRegion )checkInput ()error {if _cfcce .IsMMREncoded {if _cfcce .HTemplate !=0{_ge .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_cfcce .HTemplate );
};if _cfcce .HSkipEnabled {_ge .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_cfcce .HSkipEnabled );
};};return nil ;};func (_dbae *SymbolDictionary )encodeRefinementATFlags (_eebd _b .BinaryWriter )(_aadf int ,_ecfd error ){const _eafc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_dbae .UseRefinementAggregation ||_dbae .SdrTemplate !=0{return 0,nil ;};for _afcf :=0;_afcf < 2;_afcf ++{if _ecfd =_eebd .WriteByte (byte (_dbae .SdrATX [_afcf ]));_ecfd !=nil {return _aadf ,_ac .Wrapf (_ecfd ,_eafc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_afcf );
};_aadf ++;if _ecfd =_eebd .WriteByte (byte (_dbae .SdrATY [_afcf ]));_ecfd !=nil {return _aadf ,_ac .Wrapf (_ecfd ,_eafc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_afcf );};_aadf ++;};return _aadf ,nil ;};type PageInformationSegment struct{_eegd *_b .Reader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_aecb bool ;_gcbcf _be .CombinationOperator ;_fafc bool ;DefaultPixelValue uint8 ;_ffcgf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_cgbe *PageInformationSegment )Init (h *Header ,r *_b .Reader )(_fdad error ){_cgbe ._eegd =r ;
if _fdad =_cgbe .parseHeader ();_fdad !=nil {return _ac .Wrap (_fdad ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_gee *GenericRefinementRegion )decodeTypicalPredictedLine (_ef ,_aaa ,_gb ,_fcc ,_efa ,_fce int )error {_eee :=_ef -int (_gee .ReferenceDY );
_gbd :=_gee .ReferenceBitmap .GetByteIndex (0,_eee );_ecc :=_gee .RegionBitmap .GetByteIndex (0,_ef );var _eac error ;switch _gee .TemplateID {case 0:_eac =_gee .decodeTypicalPredictedLineTemplate0 (_ef ,_aaa ,_gb ,_fcc ,_efa ,_fce ,_ecc ,_eee ,_gbd );
case 1:_eac =_gee .decodeTypicalPredictedLineTemplate1 (_ef ,_aaa ,_gb ,_fcc ,_efa ,_fce ,_ecc ,_eee ,_gbd );};return _eac ;};func (_bfdc *GenericRegion )decodeTemplate2 (_bdgg ,_edg ,_fec int ,_afbb ,_eacab int )(_efc error ){const _gebfb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_dbb ,_gcgf int ;_egfa ,_cacg int ;_gfaf byte ;_fbd ,_gebeg int ;);if _bdgg >=1{_gfaf ,_efc =_bfdc .Bitmap .GetByte (_eacab );if _efc !=nil {return _ac .Wrap (_efc ,_gebfb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_egfa =int (_gfaf );};if _bdgg >=2{_gfaf ,_efc =_bfdc .Bitmap .GetByte (_eacab -_bfdc .Bitmap .RowStride );if _efc !=nil {return _ac .Wrap (_efc ,_gebfb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cacg =int (_gfaf )<<4;
};_dbb =(_egfa >>3&0x7c)|(_cacg >>3&0x380);for _bbc :=0;_bbc < _fec ;_bbc =_fbd {var (_dcab byte ;_cdf int ;);_fbd =_bbc +8;if _cgf :=_edg -_bbc ;_cgf > 8{_cdf =8;}else {_cdf =_cgf ;};if _bdgg > 0{_egfa <<=8;if _fbd < _edg {_gfaf ,_efc =_bfdc .Bitmap .GetByte (_eacab +1);
if _efc !=nil {return _ac .Wrap (_efc ,_gebfb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_egfa |=int (_gfaf );};};if _bdgg > 1{_cacg <<=8;if _fbd < _edg {_gfaf ,_efc =_bfdc .Bitmap .GetByte (_eacab -_bfdc .Bitmap .RowStride +1);
if _efc !=nil {return _ac .Wrap (_efc ,_gebfb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cacg |=int (_gfaf )<<4;};};for _fgc :=0;_fgc < _cdf ;_fgc ++{_faa :=uint (10-_fgc );if _bfdc ._bbba {_gcgf =_bfdc .overrideAtTemplate2 (_dbb ,_bbc +_fgc ,_bdgg ,int (_dcab ),_fgc );
_bfdc ._bed .SetIndex (int32 (_gcgf ));}else {_bfdc ._bed .SetIndex (int32 (_dbb ));};_gebeg ,_efc =_bfdc ._befa .DecodeBit (_bfdc ._bed );if _efc !=nil {return _ac .Wrap (_efc ,_gebfb ,"");};_dcab |=byte (_gebeg <<uint (7-_fgc ));_dbb =((_dbb &0x1bd)<<1)|_gebeg |((_egfa >>_faa )&0x4)|((_cacg >>_faa )&0x80);
};if _ecg :=_bfdc .Bitmap .SetByte (_afbb ,_dcab );_ecg !=nil {return _ac .Wrap (_ecg ,_gebfb ,"");};_afbb ++;_eacab ++;};return nil ;};func (_edc *template0 )setIndex (_deae *_aca .DecoderStats ){_deae .SetIndex (0x100)};func (_eege *GenericRegion )decodeSLTP ()(int ,error ){switch _eege .GBTemplate {case 0:_eege ._bed .SetIndex (0x9B25);
case 1:_eege ._bed .SetIndex (0x795);case 2:_eege ._bed .SetIndex (0xE5);case 3:_eege ._bed .SetIndex (0x195);};return _eege ._befa .DecodeBit (_eege ._bed );};func (_acc *Header )readReferredToSegmentNumbers (_ecbb *_b .Reader ,_bbee int )([]int ,error ){const _aede ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_aefgf :=make ([]int ,_bbee );if _bbee > 0{_acc .RTSegments =make ([]*Header ,_bbee );var (_cacfa uint64 ;_gcce error ;);for _begc :=0;_begc < _bbee ;_begc ++{_cacfa ,_gcce =_ecbb .ReadBits (byte (_acc .referenceSize ())<<3);if _gcce !=nil {return nil ,_ac .Wrapf (_gcce ,_aede ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_begc );
};_aefgf [_begc ]=int (_cacfa &_ae .MaxInt32 );};};return _aefgf ,nil ;};func _daac (_fecg *_b .Reader ,_gdbb *Header )*TextRegion {_gabd :=&TextRegion {_bfde :_fecg ,Header :_gdbb ,RegionInfo :NewRegionSegment (_fecg )};return _gabd ;};func (_cbbg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_egaac ,_cda uint32 )error {if _cbbg ._bbfdd ==nil {_cbbg ._bbfdd =NewGenericRegion (_cbbg ._ffaa );
};_cbbg ._bbfdd .setParametersWithAt (false ,byte (_cbbg .SdTemplate ),false ,false ,_cbbg .SdATX ,_cbbg .SdATY ,_egaac ,_cda ,_cbbg ._bgba ,_cbbg ._gede );return _cbbg .addSymbol (_cbbg ._bbfdd );};func (_dddcf *SymbolDictionary )setSymbolsArray ()error {if _dddcf ._ggfa ==nil {if _acce :=_dddcf .retrieveImportSymbols ();
_acce !=nil {return _acce ;};};if _dddcf ._aegd ==nil {_dddcf ._aegd =append (_dddcf ._aegd ,_dddcf ._ggfa ...);};return nil ;};func (_cacc *TextRegion )checkInput ()error {const _bgfg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_cacc .UseRefinement {if _cacc .SbrTemplate !=0{_ge .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_cacc .SbrTemplate =0;};};if _cacc .SbHuffFS ==2||_cacc .SbHuffRDWidth ==2||_cacc .SbHuffRDHeight ==2||_cacc .SbHuffRDX ==2||_cacc .SbHuffRDY ==2{return _ac .Error (_bgfg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cacc .UseRefinement {if _cacc .SbHuffRSize !=0{_ge .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cacc .SbHuffRSize =0;};if _cacc .SbHuffRDY !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cacc .SbHuffRDY =0;};if _cacc .SbHuffRDX !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cacc .SbHuffRDX =0;};if _cacc .SbHuffRDWidth !=0{_ge .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cacc .SbHuffRDWidth =0;};if _cacc .SbHuffRDHeight !=0{_ge .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cacc .SbHuffRDHeight =0;};};return nil ;
};func (_aadea *SymbolDictionary )encodeATFlags (_edbb _b .BinaryWriter )(_fcgd int ,_gdbe error ){const _gbeag ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _aadea .IsHuffmanEncoded ||_aadea .SdTemplate !=0{return 0,nil ;
};_eefea :=4;if _aadea .SdTemplate !=0{_eefea =1;};for _ddbe :=0;_ddbe < _eefea ;_ddbe ++{if _gdbe =_edbb .WriteByte (byte (_aadea .SdATX [_ddbe ]));_gdbe !=nil {return _fcgd ,_ac .Wrapf (_gdbe ,_gbeag ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ddbe );
};_fcgd ++;if _gdbe =_edbb .WriteByte (byte (_aadea .SdATY [_ddbe ]));_gdbe !=nil {return _fcgd ,_ac .Wrapf (_gdbe ,_gbeag ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ddbe );};_fcgd ++;};return _fcgd ,nil ;};func (_bcea *TextRegion )getUserTable (_dcec int )(_dc .Tabler ,error ){const _fggf ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _egfgf int ;for _ ,_eaed :=range _bcea .Header .RTSegments {if _eaed .Type ==53{if _egfgf ==_dcec {_gedb ,_gdcb :=_eaed .GetSegmentData ();if _gdcb !=nil {return nil ,_gdcb ;};_cab ,_degg :=_gedb .(*TableSegment );if !_degg {_ge .Log .Debug (_ff .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_eaed .SegmentNumber ));
return nil ,_ac .Error (_fggf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _dc .NewEncodedTable (_cab );};_egfgf ++;};};return nil ,nil ;};func (_abbfd *TextRegion )setContexts (_fedb *_aca .DecoderStats ,_daecac *_aca .DecoderStats ,_gabf *_aca .DecoderStats ,_cbgbg *_aca .DecoderStats ,_afbd *_aca .DecoderStats ,_cgdc *_aca .DecoderStats ,_abcd *_aca .DecoderStats ,_abfc *_aca .DecoderStats ,_efba *_aca .DecoderStats ,_eecd *_aca .DecoderStats ){_abbfd ._agfd =_daecac ;
_abbfd ._eaff =_gabf ;_abbfd ._febc =_cbgbg ;_abbfd ._ffg =_afbd ;_abbfd ._dgdc =_abcd ;_abbfd ._gcag =_abfc ;_abbfd ._fgef =_cgdc ;_abbfd ._bcfe =_efba ;_abbfd ._dfa =_eecd ;_abbfd ._cdccb =_fedb ;};func (_dfgd *GenericRegion )decodeTemplate3 (_gde ,_gbfc ,_cfd int ,_gfef ,_cag int )(_fade error ){const _gaa ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_bfgc ,_dbdcc int ;_adef int ;_bcag byte ;_gce ,_efbc int ;);if _gde >=1{_bcag ,_fade =_dfgd .Bitmap .GetByte (_cag );if _fade !=nil {return _ac .Wrap (_fade ,_gaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adef =int (_bcag );};_bfgc =(_adef >>1)&0x70;
for _gabg :=0;_gabg < _cfd ;_gabg =_gce {var (_gbfb byte ;_gfc int ;);_gce =_gabg +8;if _gacc :=_gbfc -_gabg ;_gacc > 8{_gfc =8;}else {_gfc =_gacc ;};if _gde >=1{_adef <<=8;if _gce < _gbfc {_bcag ,_fade =_dfgd .Bitmap .GetByte (_cag +1);if _fade !=nil {return _ac .Wrap (_fade ,_gaa ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_adef |=int (_bcag );};};for _bfa :=0;_bfa < _gfc ;_bfa ++{if _dfgd ._bbba {_dbdcc =_dfgd .overrideAtTemplate3 (_bfgc ,_gabg +_bfa ,_gde ,int (_gbfb ),_bfa );_dfgd ._bed .SetIndex (int32 (_dbdcc ));}else {_dfgd ._bed .SetIndex (int32 (_bfgc ));};_efbc ,_fade =_dfgd ._befa .DecodeBit (_dfgd ._bed );
if _fade !=nil {return _ac .Wrap (_fade ,_gaa ,"");};_gbfb |=byte (_efbc )<<byte (7-_bfa );_bfgc =((_bfgc &0x1f7)<<1)|_efbc |((_adef >>uint (8-_bfa ))&0x010);};if _acbb :=_dfgd .Bitmap .SetByte (_gfef ,_gbfb );_acbb !=nil {return _ac .Wrap (_acbb ,_gaa ,"");
};_gfef ++;_cag ++;};return nil ;};func (_agdf *GenericRegion )overrideAtTemplate0b (_gbe ,_ceed ,_cfed ,_dad ,_cfbgg ,_abbb int )int {if _agdf .GBAtOverride [0]{_gbe &=0xFFFD;if _agdf .GBAtY [0]==0&&_agdf .GBAtX [0]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [0]&0x1))<<1;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [0]),_cfed +int (_agdf .GBAtY [0])))<<1;};};if _agdf .GBAtOverride [1]{_gbe &=0xDFFF;if _agdf .GBAtY [1]==0&&_agdf .GBAtX [1]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [1]&0x1))<<13;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [1]),_cfed +int (_agdf .GBAtY [1])))<<13;};};if _agdf .GBAtOverride [2]{_gbe &=0xFDFF;if _agdf .GBAtY [2]==0&&_agdf .GBAtX [2]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [2]&0x1))<<9;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [2]),_cfed +int (_agdf .GBAtY [2])))<<9;};};if _agdf .GBAtOverride [3]{_gbe &=0xBFFF;if _agdf .GBAtY [3]==0&&_agdf .GBAtX [3]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [3]&0x1))<<14;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [3]),_cfed +int (_agdf .GBAtY [3])))<<14;};};if _agdf .GBAtOverride [4]{_gbe &=0xEFFF;if _agdf .GBAtY [4]==0&&_agdf .GBAtX [4]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [4]&0x1))<<12;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [4]),_cfed +int (_agdf .GBAtY [4])))<<12;};};if _agdf .GBAtOverride [5]{_gbe &=0xFFDF;if _agdf .GBAtY [5]==0&&_agdf .GBAtX [5]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [5]&0x1))<<5;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [5]),_cfed +int (_agdf .GBAtY [5])))<<5;};};if _agdf .GBAtOverride [6]{_gbe &=0xFFFB;if _agdf .GBAtY [6]==0&&_agdf .GBAtX [6]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [6]&0x1))<<2;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [6]),_cfed +int (_agdf .GBAtY [6])))<<2;};};if _agdf .GBAtOverride [7]{_gbe &=0xFFF7;if _agdf .GBAtY [7]==0&&_agdf .GBAtX [7]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [7]&0x1))<<3;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [7]),_cfed +int (_agdf .GBAtY [7])))<<3;};};if _agdf .GBAtOverride [8]{_gbe &=0xF7FF;if _agdf .GBAtY [8]==0&&_agdf .GBAtX [8]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [8]&0x1))<<11;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [8]),_cfed +int (_agdf .GBAtY [8])))<<11;};};if _agdf .GBAtOverride [9]{_gbe &=0xFFEF;if _agdf .GBAtY [9]==0&&_agdf .GBAtX [9]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [9]&0x1))<<4;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [9]),_cfed +int (_agdf .GBAtY [9])))<<4;};};if _agdf .GBAtOverride [10]{_gbe &=0x7FFF;if _agdf .GBAtY [10]==0&&_agdf .GBAtX [10]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [10]&0x1))<<15;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [10]),_cfed +int (_agdf .GBAtY [10])))<<15;};};if _agdf .GBAtOverride [11]{_gbe &=0xFDFF;if _agdf .GBAtY [11]==0&&_agdf .GBAtX [11]>=-int8 (_cfbgg ){_gbe |=(_dad >>uint (int8 (_abbb )-_agdf .GBAtX [11]&0x1))<<10;
}else {_gbe |=int (_agdf .getPixel (_ceed +int (_agdf .GBAtX [11]),_cfed +int (_agdf .GBAtY [11])))<<10;};};return _gbe ;};var _ _dc .BasicTabler =&TableSegment {};func (_fgd *GenericRefinementRegion )setParameters (_bad *_aca .DecoderStats ,_bbe *_aca .Decoder ,_dagg int8 ,_fafa ,_dgc uint32 ,_cgeb *_be .Bitmap ,_aade ,_afbg int32 ,_bba bool ,_egbg []int8 ,_eaec []int8 ){_ge .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _bad !=nil {_fgd ._bge =_bad ;};if _bbe !=nil {_fgd ._bg =_bbe ;};_fgd .TemplateID =_dagg ;_fgd .RegionInfo .BitmapWidth =_fafa ;_fgd .RegionInfo .BitmapHeight =_dgc ;_fgd .ReferenceBitmap =_cgeb ;_fgd .ReferenceDX =_aade ;_fgd .ReferenceDY =_afbg ;
_fgd .IsTPGROn =_bba ;_fgd .GrAtX =_egbg ;_fgd .GrAtY =_eaec ;_fgd .RegionBitmap =nil ;_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fgd );
};func (_geg *template1 )form (_fbbd ,_fbgb ,_dae ,_bcf ,_fdb int16 )int16 {return ((_fbbd &0x02)<<8)|(_fbgb <<6)|((_dae &0x03)<<4)|(_bcf <<1)|_fdb ;};func (_dgb *GenericRefinementRegion )readAtPixels ()error {_dgb .GrAtX =make ([]int8 ,2);_dgb .GrAtY =make ([]int8 ,2);
_ceee ,_baef :=_dgb ._acab .ReadByte ();if _baef !=nil {return _baef ;};_dgb .GrAtX [0]=int8 (_ceee );_ceee ,_baef =_dgb ._acab .ReadByte ();if _baef !=nil {return _baef ;};_dgb .GrAtY [0]=int8 (_ceee );_ceee ,_baef =_dgb ._acab .ReadByte ();if _baef !=nil {return _baef ;
};_dgb .GrAtX [1]=int8 (_ceee );_ceee ,_baef =_dgb ._acab .ReadByte ();if _baef !=nil {return _baef ;};_dgb .GrAtY [1]=int8 (_ceee );return nil ;};func (_acb *GenericRefinementRegion )getGrReference ()(*_be .Bitmap ,error ){segments :=_acb ._aeg .RTSegments ;
if len (segments )==0{return nil ,_d .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_bb ,_afb :=segments [0].GetSegmentData ();if _afb !=nil {return nil ,_afb ;
};_cf ,_da :=_bb .(Regioner );if !_da {return nil ,_ff .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bb );
};return _cf .GetRegionBitmap ();};func (_bdf *GenericRegion )decodeLine (_geb ,_aace ,_bgd int )error {const _bga ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_gdcd :=_bdf .Bitmap .GetByteIndex (0,_geb );_gff :=_gdcd -_bdf .Bitmap .RowStride ;
switch _bdf .GBTemplate {case 0:if !_bdf .UseExtTemplates {return _bdf .decodeTemplate0a (_geb ,_aace ,_bgd ,_gdcd ,_gff );};return _bdf .decodeTemplate0b (_geb ,_aace ,_bgd ,_gdcd ,_gff );case 1:return _bdf .decodeTemplate1 (_geb ,_aace ,_bgd ,_gdcd ,_gff );
case 2:return _bdf .decodeTemplate2 (_geb ,_aace ,_bgd ,_gdcd ,_gff );case 3:return _bdf .decodeTemplate3 (_geb ,_aace ,_bgd ,_gdcd ,_gff );};return _ac .Errorf (_bga ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bdf .GBTemplate );
};func (_bage *RegionSegment )String ()string {_cfg :=&_e .Builder {};_cfg .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_cfg .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bage .BitmapWidth ,_bage .BitmapHeight ));
_cfg .WriteString (_ff .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bage .XLocation ,_bage .YLocation ));_cfg .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bage .CombinaionOperator ));
return _cfg .String ();};func (_ggge *PageInformationSegment )readResolution ()error {_cbbf ,_befc :=_ggge ._eegd .ReadBits (32);if _befc !=nil {return _befc ;};_ggge .ResolutionX =int (_cbbf &_ae .MaxInt32 );_cbbf ,_befc =_ggge ._eegd .ReadBits (32);if _befc !=nil {return _befc ;
};_ggge .ResolutionY =int (_cbbf &_ae .MaxInt32 );return nil ;};type Regioner interface{GetRegionBitmap ()(*_be .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};type OrganizationType uint8 ;func (_deab *TextRegion )computeSymbolCodeLength ()error {if _deab .IsHuffmanEncoded {return _deab .symbolIDCodeLengths ();
};_deab ._bcac =int8 (_ae .Ceil (_ae .Log (float64 (_deab .NumberOfSymbols ))/_ae .Log (2)));return nil ;};func (_deca *PageInformationSegment )CombinationOperator ()_be .CombinationOperator {return _deca ._gcbcf ;};func (_bcfc *SymbolDictionary )parseHeader ()(_adaa error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _adaa !=nil {_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_adaa );
}else {_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _adaa =_bcfc .readRegionFlags ();_adaa !=nil {return _adaa ;};if _adaa =_bcfc .setAtPixels ();_adaa !=nil {return _adaa ;};if _adaa =_bcfc .setRefinementAtPixels ();_adaa !=nil {return _adaa ;};if _adaa =_bcfc .readNumberOfExportedSymbols ();_adaa !=nil {return _adaa ;
};if _adaa =_bcfc .readNumberOfNewSymbols ();_adaa !=nil {return _adaa ;};if _adaa =_bcfc .setInSyms ();_adaa !=nil {return _adaa ;};if _bcfc ._aegee {_gbgf :=_bcfc .Header .RTSegments ;for _gfce :=len (_gbgf )-1;_gfce >=0;_gfce --{if _gbgf [_gfce ].Type ==0{_aga ,_efac :=_gbgf [_gfce ].SegmentData .(*SymbolDictionary );
if !_efac {_adaa =_ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gbgf [_gfce ]);
return _adaa ;};if _aga ._aegee {_bcfc .setRetainedCodingContexts (_aga );};break ;};};};if _adaa =_bcfc .checkInput ();_adaa !=nil {return _adaa ;};return nil ;};func (_fgde *PageInformationSegment )encodeFlags (_deaea _b .BinaryWriter )(_fegea error ){const _aegf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fegea =_deaea .SkipBits (1);_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _cbge int ;if _fgde .CombinationOperatorOverrideAllowed (){_cbge =1;};if _fegea =_deaea .WriteBit (_cbge );
_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_cbge =0;if _fgde ._fafc {_cbge =1;
};if _fegea =_deaea .WriteBit (_cbge );_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fegea =_deaea .WriteBit ((int (_fgde ._gcbcf )>>1)&0x01);
_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fegea =_deaea .WriteBit (int (_fgde ._gcbcf )&0x01);
_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cbge =int (_fgde .DefaultPixelValue );
if _fegea =_deaea .WriteBit (_cbge );_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cbge =0;if _fgde ._ffcgf {_cbge =1;
};if _fegea =_deaea .WriteBit (_cbge );_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cbge =0;if _fgde .IsLossless {_cbge =1;};if _fegea =_deaea .WriteBit (_cbge );
_fegea !=nil {return _ac .Wrap (_fegea ,_aegf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;
);func (_cddbg *TextRegion )readAmountOfSymbolInstances ()error {_aecf ,_dgebb :=_cddbg ._bfde .ReadBits (32);if _dgebb !=nil {return _dgebb ;};_cddbg .NumberOfSymbolInstances =uint32 (_aecf &_ae .MaxUint32 );_ecaf :=_cddbg .RegionInfo .BitmapWidth *_cddbg .RegionInfo .BitmapHeight ;
if _ecaf < _cddbg .NumberOfSymbolInstances {_ge .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ecaf ,_cddbg .NumberOfSymbolInstances );
_cddbg .NumberOfSymbolInstances =_ecaf ;};return nil ;};func (_afcc *PageInformationSegment )readMaxStripeSize ()error {_gbfe ,_aeca :=_afcc ._eegd .ReadBits (15);if _aeca !=nil {return _aeca ;};_afcc .MaxStripeSize =uint16 (_gbfe &_ae .MaxUint16 );return nil ;
};func (_fda *HalftoneRegion )GetRegionBitmap ()(*_be .Bitmap ,error ){if _fda .HalftoneRegionBitmap !=nil {return _fda .HalftoneRegionBitmap ,nil ;};var _bbbee error ;_fda .HalftoneRegionBitmap =_be .New (int (_fda .RegionSegment .BitmapWidth ),int (_fda .RegionSegment .BitmapHeight ));
if _fda .Patterns ==nil ||(_fda .Patterns !=nil &&len (_fda .Patterns )==0){_fda .Patterns ,_bbbee =_fda .GetPatterns ();if _bbbee !=nil {return nil ,_bbbee ;};};if _fda .HDefaultPixel ==1{_fda .HalftoneRegionBitmap .SetDefaultPixel ();};_geef :=_ae .Ceil (_ae .Log (float64 (len (_fda .Patterns )))/_ae .Log (2));
_afdg :=int (_geef );var _dacd [][]int ;_dacd ,_bbbee =_fda .grayScaleDecoding (_afdg );if _bbbee !=nil {return nil ,_bbbee ;};if _bbbee =_fda .renderPattern (_dacd );_bbbee !=nil {return nil ,_bbbee ;};return _fda .HalftoneRegionBitmap ,nil ;};func (_agc *GenericRegion )getPixel (_bbd ,_daaf int )int8 {if _bbd < 0||_bbd >=_agc .Bitmap .Width {return 0;
};if _daaf < 0||_daaf >=_agc .Bitmap .Height {return 0;};if _agc .Bitmap .GetPixel (_bbd ,_daaf ){return 1;};return 0;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_be .Bitmap ,error );};func (_dafe *GenericRegion )overrideAtTemplate3 (_fedd ,_dgeb ,_adgc ,_dacf ,_dbac int )int {_fedd &=0x3EF;
if _dafe .GBAtY [0]==0&&_dafe .GBAtX [0]>=-int8 (_dbac ){_fedd |=(_dacf >>uint (7-(int8 (_dbac )+_dafe .GBAtX [0]))&0x1)<<4;}else {_fedd |=int (_dafe .getPixel (_dgeb +int (_dafe .GBAtX [0]),_adgc +int (_dafe .GBAtY [0])))<<4;};return _fedd ;};func (_bggd *SymbolDictionary )readRefinementAtPixels (_cfeaa int )error {_bggd .SdrATX =make ([]int8 ,_cfeaa );
_bggd .SdrATY =make ([]int8 ,_cfeaa );var (_ddf byte ;_afga error ;);for _ggdc :=0;_ggdc < _cfeaa ;_ggdc ++{_ddf ,_afga =_bggd ._ffaa .ReadByte ();if _afga !=nil {return _afga ;};_bggd .SdrATX [_ggdc ]=int8 (_ddf );_ddf ,_afga =_bggd ._ffaa .ReadByte ();
if _afga !=nil {return _afga ;};_bggd .SdrATY [_ggdc ]=int8 (_ddf );};return nil ;};func (_aba *SymbolDictionary )getUserTable (_gaeb int )(_dc .Tabler ,error ){var _dddca int ;for _ ,_ddbf :=range _aba .Header .RTSegments {if _ddbf .Type ==53{if _dddca ==_gaeb {_bggg ,_eagd :=_ddbf .GetSegmentData ();
if _eagd !=nil {return nil ,_eagd ;};_dged :=_bggg .(_dc .BasicTabler );return _dc .NewEncodedTable (_dged );};_dddca ++;};};return nil ,nil ;};func (_gbeb *PatternDictionary )parseHeader ()error {_ge .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ge .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_ggbc :=_gbeb ._abca .ReadBits (5);if _ggbc !=nil {return _ggbc ;};if _ggbc =_gbeb .readTemplate ();_ggbc !=nil {return _ggbc ;};if _ggbc =_gbeb .readIsMMREncoded ();_ggbc !=nil {return _ggbc ;};if _ggbc =_gbeb .readPatternWidthAndHeight ();_ggbc !=nil {return _ggbc ;
};if _ggbc =_gbeb .readGrayMax ();_ggbc !=nil {return _ggbc ;};if _ggbc =_gbeb .computeSegmentDataStructure ();_ggbc !=nil {return _ggbc ;};return _gbeb .checkInput ();};func (_dff *HalftoneRegion )renderPattern (_ddbg [][]int )(_ffcg error ){var _bedc ,_beee int ;
for _cad :=0;_cad < int (_dff .HGridHeight );_cad ++{for _cde :=0;_cde < int (_dff .HGridWidth );_cde ++{_bedc =_dff .computeX (_cad ,_cde );_beee =_dff .computeY (_cad ,_cde );_afegg :=_dff .Patterns [_ddbg [_cad ][_cde ]];if _ffcg =_be .Blit (_afegg ,_dff .HalftoneRegionBitmap ,_bedc +int (_dff .HGridX ),_beee +int (_dff .HGridY ),_dff .CombinationOperator );
_ffcg !=nil {return _ffcg ;};};};return nil ;};type templater interface{form (_adc ,_baec ,_ece ,_bbg ,_gfd int16 )int16 ;setIndex (_gdc *_aca .DecoderStats );};func (_gacg *TextRegion )decodeRdw ()(int64 ,error ){const _aafg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _gacg .IsHuffmanEncoded {if _gacg .SbHuffRDWidth ==3{if _gacg ._afff ==nil {var (_fegf int ;_abbf error ;);if _gacg .SbHuffFS ==3{_fegf ++;};if _gacg .SbHuffDS ==3{_fegf ++;};if _gacg .SbHuffDT ==3{_fegf ++;};_gacg ._afff ,_abbf =_gacg .getUserTable (_fegf );
if _abbf !=nil {return 0,_ac .Wrap (_abbf ,_aafg ,"");};};return _gacg ._afff .Decode (_gacg ._bfde );};_caafc ,_agbg :=_dc .GetStandardTable (14+int (_gacg .SbHuffRDWidth ));if _agbg !=nil {return 0,_ac .Wrap (_agbg ,_aafg ,"");};return _caafc .Decode (_gacg ._bfde );
};_ebcb ,_aggd :=_gacg ._bfga .DecodeInt (_gacg ._dgdc );if _aggd !=nil {return 0,_ac .Wrap (_aggd ,_aafg ,"");};return int64 (_ebcb ),nil ;};func (_ddbgf *SymbolDictionary )setCodingStatistics ()error {if _ddbgf ._bccf ==nil {_ddbgf ._bccf =_aca .NewStats (512,1);
};if _ddbgf ._ace ==nil {_ddbgf ._ace =_aca .NewStats (512,1);};if _ddbgf ._eafgd ==nil {_ddbgf ._eafgd =_aca .NewStats (512,1);};if _ddbgf ._cecg ==nil {_ddbgf ._cecg =_aca .NewStats (512,1);};if _ddbgf ._ggbf ==nil {_ddbgf ._ggbf =_aca .NewStats (512,1);
};if _ddbgf .UseRefinementAggregation &&_ddbgf ._gecad ==nil {_ddbgf ._gecad =_aca .NewStats (1<<uint (_ddbgf ._dddb ),1);_ddbgf ._bfbae =_aca .NewStats (512,1);_ddbgf ._dcbf =_aca .NewStats (512,1);};if _ddbgf ._bgba ==nil {_ddbgf ._bgba =_aca .NewStats (65536,1);
};if _ddbgf ._gede ==nil {var _babgg error ;_ddbgf ._gede ,_babgg =_aca .New (_ddbgf ._ffaa );if _babgg !=nil {return _babgg ;};};return nil ;};func (_daecab *TableSegment )HtLow ()int32 {return _daecab ._gdec };func (_eggb *HalftoneRegion )GetPatterns ()([]*_be .Bitmap ,error ){var (_bgee []*_be .Bitmap ;
_egbf error ;);for _ ,_befe :=range _eggb ._eba .RTSegments {var _ecgg Segmenter ;_ecgg ,_egbf =_befe .GetSegmentData ();if _egbf !=nil {_ge .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_egbf );
return nil ,_egbf ;};_fece ,_eaa :=_ecgg .(*PatternDictionary );if !_eaa {_egbf =_ff .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ecgg );
return nil ,_egbf ;};var _bcde []*_be .Bitmap ;_bcde ,_egbf =_fece .GetDictionary ();if _egbf !=nil {_ge .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_egbf );
return nil ,_egbf ;};_bgee =append (_bgee ,_bcde ...);};return _bgee ,nil ;};func (_egfc *TextRegion )decodeDfs ()(int64 ,error ){if _egfc .IsHuffmanEncoded {if _egfc .SbHuffFS ==3{if _egfc ._faad ==nil {var _cecgc error ;_egfc ._faad ,_cecgc =_egfc .getUserTable (0);
if _cecgc !=nil {return 0,_cecgc ;};};return _egfc ._faad .Decode (_egfc ._bfde );};_dbag ,_aecd :=_dc .GetStandardTable (6+int (_egfc .SbHuffFS ));if _aecd !=nil {return 0,_aecd ;};return _dbag .Decode (_egfc ._bfde );};_fbba ,_ddde :=_egfc ._bfga .DecodeInt (_egfc ._eaff );
if _ddde !=nil {return 0,_ddde ;};return int64 (_fbba ),nil ;};func (_becg *TextRegion )readRegionFlags ()error {var (_cgad int ;_adbd uint64 ;_egdbc error ;);_cgad ,_egdbc =_becg ._bfde .ReadBit ();if _egdbc !=nil {return _egdbc ;};_becg .SbrTemplate =int8 (_cgad );
_adbd ,_egdbc =_becg ._bfde .ReadBits (5);if _egdbc !=nil {return _egdbc ;};_becg .SbDsOffset =int8 (_adbd );if _becg .SbDsOffset > 0x0f{_becg .SbDsOffset -=0x20;};_cgad ,_egdbc =_becg ._bfde .ReadBit ();if _egdbc !=nil {return _egdbc ;};_becg .DefaultPixel =int8 (_cgad );
_adbd ,_egdbc =_becg ._bfde .ReadBits (2);if _egdbc !=nil {return _egdbc ;};_becg .CombinationOperator =_be .CombinationOperator (int (_adbd )&0x3);_cgad ,_egdbc =_becg ._bfde .ReadBit ();if _egdbc !=nil {return _egdbc ;};_becg .IsTransposed =int8 (_cgad );
_adbd ,_egdbc =_becg ._bfde .ReadBits (2);if _egdbc !=nil {return _egdbc ;};_becg .ReferenceCorner =int16 (_adbd )&0x3;_adbd ,_egdbc =_becg ._bfde .ReadBits (2);if _egdbc !=nil {return _egdbc ;};_becg .LogSBStrips =int16 (_adbd )&0x3;_becg .SbStrips =1<<uint (_becg .LogSBStrips );
_cgad ,_egdbc =_becg ._bfde .ReadBit ();if _egdbc !=nil {return _egdbc ;};if _cgad ==1{_becg .UseRefinement =true ;};_cgad ,_egdbc =_becg ._bfde .ReadBit ();if _egdbc !=nil {return _egdbc ;};if _cgad ==1{_becg .IsHuffmanEncoded =true ;};return nil ;};var _ SegmentEncoder =&RegionSegment {};
func (_ebdg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ebdg .SdHuffAggInstanceSelection {_cbbd ,_dbcf :=_dc .GetStandardTable (1);if _dbcf !=nil {return 0,_dbcf ;};return _cbbd .Decode (_ebdg ._ffaa );};if _ebdg ._cbbb ==nil {var (_caga int ;
_ecda error ;);if _ebdg .SdHuffDecodeHeightSelection ==3{_caga ++;};if _ebdg .SdHuffDecodeWidthSelection ==3{_caga ++;};if _ebdg .SdHuffBMSizeSelection ==3{_caga ++;};_ebdg ._cbbb ,_ecda =_ebdg .getUserTable (_caga );if _ecda !=nil {return 0,_ecda ;};};
return _ebdg ._cbbb .Decode (_ebdg ._ffaa );};func (_dcgb *GenericRegion )readGBAtPixels (_aed int )error {const _dcc ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dcgb .GBAtX =make ([]int8 ,_aed );_dcgb .GBAtY =make ([]int8 ,_aed );
for _fcgc :=0;_fcgc < _aed ;_fcgc ++{_edcb ,_eddg :=_dcgb ._acfe .ReadByte ();if _eddg !=nil {return _ac .Wrapf (_eddg ,_dcc ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fcgc );};_dcgb .GBAtX [_fcgc ]=int8 (_edcb );_edcb ,_eddg =_dcgb ._acfe .ReadByte ();
if _eddg !=nil {return _ac .Wrapf (_eddg ,_dcc ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fcgc );};_dcgb .GBAtY [_fcgc ]=int8 (_edcb );};return nil ;};func (_cfeg *Header )writeReferredToSegments (_eabe _b .BinaryWriter )(_acfa int ,_ecbf error ){const _gbea ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cgae uint16 ;_beb uint32 ;);_aeb :=_cfeg .referenceSize ();_abff :=1;_beda :=make ([]byte ,_aeb );for _ ,_dbdf :=range _cfeg .RTSNumbers {switch _aeb {case 4:_beb =uint32 (_dbdf );_c .BigEndian .PutUint32 (_beda ,_beb );_abff ,_ecbf =_eabe .Write (_beda );
if _ecbf !=nil {return 0,_ac .Wrap (_ecbf ,_gbea ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cgae =uint16 (_dbdf );_c .BigEndian .PutUint16 (_beda ,_cgae );_abff ,_ecbf =_eabe .Write (_beda );if _ecbf !=nil {return 0,_ac .Wrap (_ecbf ,_gbea ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _ecbf =_eabe .WriteByte (byte (_dbdf ));_ecbf !=nil {return 0,_ac .Wrap (_ecbf ,_gbea ,"\u0075\u0069\u006et\u0038");};};_acfa +=_abff ;};return _acfa ,nil ;};func (_aded *GenericRegion )Encode (w _b .BinaryWriter )(_fdd int ,_ccfg error ){const _efaeb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _aded .Bitmap ==nil {return 0,_ac .Error (_efaeb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_aff ,_ccfg :=_aded .RegionSegment .Encode (w );if _ccfg !=nil {return 0,_ac .Wrap (_ccfg ,_efaeb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_fdd +=_aff ;if _ccfg =w .SkipBits (4);_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bfd int ;if _aded .IsTPGDon {_bfd =1;};if _ccfg =w .WriteBit (_bfd );
_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bfd =0;if _ccfg =w .WriteBit (int (_aded .GBTemplate >>1)&0x01);_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ccfg =w .WriteBit (int (_aded .GBTemplate )&0x01);_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _aded .UseMMR {_bfd =1;};if _ccfg =w .WriteBit (_bfd );
_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_fdd ++;if _aff ,_ccfg =_aded .writeGBAtPixels (w );_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"");};_fdd +=_aff ;_cfc :=_fd .New ();
if _ccfg =_cfc .EncodeBitmap (_aded .Bitmap ,_aded .IsTPGDon );_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"");};_cfc .Final ();var _eaca int64 ;if _eaca ,_ccfg =_cfc .WriteTo (w );_ccfg !=nil {return _fdd ,_ac .Wrap (_ccfg ,_efaeb ,"");};_fdd +=int (_eaca );
return _fdd ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cded *Header )writeSegmentNumber (_degbg _b .BinaryWriter )(_gaaa int ,_fdee error ){_cfea :=make ([]byte ,4);_c .BigEndian .PutUint32 (_cfea ,_cded .SegmentNumber );if _gaaa ,_fdee =_degbg .Write (_cfea );
_fdee !=nil {return 0,_ac .Wrap (_fdee ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _gaaa ,nil ;};func (_acaff *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_gdcf :=range _acaff .Header .RTSegments {if _gdcf .Type ==0{_cbbdc ,_gcac :=_gdcf .GetSegmentData ();
if _gcac !=nil {return _gcac ;};_eagff ,_ddaa :=_cbbdc .(*SymbolDictionary );if !_ddaa {return _ff .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cbbdc );
};_adgf ,_gcac :=_eagff .GetDictionary ();if _gcac !=nil {return _ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_gdcf .SegmentNumber ,_gcac .Error ());
};_acaff ._ggfa =append (_acaff ._ggfa ,_adgf ...);_acaff ._debf +=_eagff .NumberOfExportedSymbols ;};};return nil ;};func (_fbfd *Header )Encode (w _b .BinaryWriter )(_gcgd int ,_bfac error ){const _def ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _eabg _b .BinaryWriter ;_ge .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bfac !=nil {_ge .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bfac );
}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fbfd );_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _fbfd .SegmentData !=nil {_gcf ,_ceg :=_fbfd .SegmentData .(SegmentEncoder );if !_ceg {return 0,_ac .Errorf (_def ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fbfd .SegmentData );
};_eabg =_b .BufferedMSB ();_gcgd ,_bfac =_gcf .Encode (_eabg );if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");};_fbfd .SegmentDataLength =uint64 (_gcgd );};if _fbfd .pageSize ()==4{_fbfd .PageAssociationFieldSize =true ;};var _aab int ;_aab ,_bfac =_fbfd .writeSegmentNumber (w );
if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");};_gcgd +=_aab ;if _bfac =_fbfd .writeFlags (w );_bfac !=nil {return _gcgd ,_ac .Wrap (_bfac ,_def ,"");};_gcgd ++;_aab ,_bfac =_fbfd .writeReferredToCount (w );if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");
};_gcgd +=_aab ;_aab ,_bfac =_fbfd .writeReferredToSegments (w );if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");};_gcgd +=_aab ;_aab ,_bfac =_fbfd .writeSegmentPageAssociation (w );if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");};_gcgd +=_aab ;
_aab ,_bfac =_fbfd .writeSegmentDataLength (w );if _bfac !=nil {return 0,_ac .Wrap (_bfac ,_def ,"");};_gcgd +=_aab ;_fbfd .HeaderLength =int64 (_gcgd )-int64 (_fbfd .SegmentDataLength );if _eabg !=nil {if _ ,_bfac =w .Write (_eabg .Data ());_bfac !=nil {return _gcgd ,_ac .Wrap (_bfac ,_def ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _gcgd ,nil ;};type EndOfStripe struct{_ga *_b .Reader ;_cd int ;};func (_cff *Header )pageSize ()uint {if _cff .PageAssociation <=255{return 1;};return 4;};func (_agcgb *PageInformationSegment )encodeStripingInformation (_cefg _b .BinaryWriter )(_bfea int ,_geca error ){const _gdd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_agcgb .IsStripe {if _bfea ,_geca =_cefg .Write ([]byte {0x00,0x00});_geca !=nil {return 0,_ac .Wrap (_geca ,_gdd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bfea ,nil ;};_afab :=make ([]byte ,2);_c .BigEndian .PutUint16 (_afab ,_agcgb .MaxStripeSize |1<<15);
if _bfea ,_geca =_cefg .Write (_afab );_geca !=nil {return 0,_ac .Wrapf (_geca ,_gdd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_agcgb .MaxStripeSize );};return _bfea ,nil ;};func (_afbga *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_aedc int ;
_geabe int32 ;_dcfgc error ;_cbedb =int32 (_afbga ._debf +_afbga .NumberOfNewSymbols );_ddg =make ([]int ,_cbedb ););for _aadc :=int32 (0);_aadc < _cbedb ;_aadc +=_geabe {if _afbga .IsHuffmanEncoded {_fcgcab ,_bgda :=_dc .GetStandardTable (1);if _bgda !=nil {return nil ,_bgda ;
};_accf ,_bgda :=_fcgcab .Decode (_afbga ._ffaa );if _bgda !=nil {return nil ,_bgda ;};_geabe =int32 (_accf );}else {_geabe ,_dcfgc =_afbga ._gede .DecodeInt (_afbga ._ggbf );if _dcfgc !=nil {return nil ,_dcfgc ;};};if _geabe !=0{if _aadc +_geabe > _cbedb {return nil ,_ac .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _dgab :=_aadc ;_dgab < _aadc +_geabe ;_dgab ++{_ddg [_dgab ]=_aedc ;};};if _aedc ==0{_aedc =1;}else {_aedc =0;};};return _ddg ,nil ;};func (_gbbc *TextRegion )decodeStripT ()(_ffcdg int64 ,_cbae error ){if _gbbc .IsHuffmanEncoded {if _gbbc .SbHuffDT ==3{if _gbbc ._fdcf ==nil {var _dadd int ;
if _gbbc .SbHuffFS ==3{_dadd ++;};if _gbbc .SbHuffDS ==3{_dadd ++;};_gbbc ._fdcf ,_cbae =_gbbc .getUserTable (_dadd );if _cbae !=nil {return 0,_cbae ;};};_ffcdg ,_cbae =_gbbc ._fdcf .Decode (_gbbc ._bfde );if _cbae !=nil {return 0,_cbae ;};}else {var _cgba _dc .Tabler ;
_cgba ,_cbae =_dc .GetStandardTable (11+int (_gbbc .SbHuffDT ));if _cbae !=nil {return 0,_cbae ;};_ffcdg ,_cbae =_cgba .Decode (_gbbc ._bfde );if _cbae !=nil {return 0,_cbae ;};};}else {var _defg int32 ;_defg ,_cbae =_gbbc ._bfga .DecodeInt (_gbbc ._agfd );
if _cbae !=nil {return 0,_cbae ;};_ffcdg =int64 (_defg );};_ffcdg *=int64 (-_gbbc .SbStrips );return _ffcdg ,nil ;};func (_fcab *PatternDictionary )checkInput ()error {if _fcab .HdpHeight < 1||_fcab .HdpWidth < 1{return _d .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fcab .IsMMREncoded {if _fcab .HDTemplate !=0{_ge .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_fgaf *HalftoneRegion )shiftAndFill (_fbge int )int {_fbge >>=8;if _fbge < 0{_bdfd :=int (_ae .Log (float64 (_bgbd (_fbge )))/_ae .Log (2));_gdee :=31-_bdfd ;for _dfeg :=1;_dfeg < _gdee ;_dfeg ++{_fbge |=1<<uint (31-_dfeg );};};
return _fbge ;};func (_cfbg *GenericRegion )decodeTemplate0b (_gaec ,_afeg ,_gabe int ,_cbf ,_gebe int )(_dce error ){const _acag ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_fgg ,_bff int ;_caf ,_edac int ;
_ccg byte ;_dfgb int ;);if _gaec >=1{_ccg ,_dce =_cfbg .Bitmap .GetByte (_gebe );if _dce !=nil {return _ac .Wrap (_dce ,_acag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_caf =int (_ccg );};if _gaec >=2{_ccg ,_dce =_cfbg .Bitmap .GetByte (_gebe -_cfbg .Bitmap .RowStride );
if _dce !=nil {return _ac .Wrap (_dce ,_acag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_edac =int (_ccg )<<6;};_fgg =(_caf &0xf0)|(_edac &0x3800);for _dac :=0;_dac < _gabe ;_dac =_dfgb {var (_agf byte ;_cbab int ;);_dfgb =_dac +8;if _ecd :=_afeg -_dac ;
_ecd > 8{_cbab =8;}else {_cbab =_ecd ;};if _gaec > 0{_caf <<=8;if _dfgb < _afeg {_ccg ,_dce =_cfbg .Bitmap .GetByte (_gebe +1);if _dce !=nil {return _ac .Wrap (_dce ,_acag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_caf |=int (_ccg );};};if _gaec > 1{_edac <<=8;
if _dfgb < _afeg {_ccg ,_dce =_cfbg .Bitmap .GetByte (_gebe -_cfbg .Bitmap .RowStride +1);if _dce !=nil {return _ac .Wrap (_dce ,_acag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_edac |=int (_ccg )<<6;};};for _bcad :=0;_bcad < _cbab ;_bcad ++{_gadec :=uint (7-_bcad );
if _cfbg ._bbba {_bff =_cfbg .overrideAtTemplate0b (_fgg ,_dac +_bcad ,_gaec ,int (_agf ),_bcad ,int (_gadec ));_cfbg ._bed .SetIndex (int32 (_bff ));}else {_cfbg ._bed .SetIndex (int32 (_fgg ));};var _dbdc int ;_dbdc ,_dce =_cfbg ._befa .DecodeBit (_cfbg ._bed );
if _dce !=nil {return _ac .Wrap (_dce ,_acag ,"");};_agf |=byte (_dbdc <<_gadec );_fgg =((_fgg &0x7bf7)<<1)|_dbdc |((_caf >>_gadec )&0x10)|((_edac >>_gadec )&0x800);};if _dbf :=_cfbg .Bitmap .SetByte (_cbf ,_agf );_dbf !=nil {return _ac .Wrap (_dbf ,_acag ,"");
};_cbf ++;_gebe ++;};return nil ;};func (_efbf *Header )readSegmentPageAssociation (_decb Documenter ,_cca *_b .Reader ,_bbgef uint64 ,_adf ...int )(_caee error ){const _dffb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_efbf .PageAssociationFieldSize {_aafc ,_ffcc :=_cca .ReadBits (8);if _ffcc !=nil {return _ac .Wrap (_ffcc ,_dffb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_efbf .PageAssociation =int (_aafc &0xFF);}else {_ccae ,_aec :=_cca .ReadBits (32);
if _aec !=nil {return _ac .Wrap (_aec ,_dffb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_efbf .PageAssociation =int (_ccae &_ae .MaxInt32 );};if _bbgef ==0{return nil ;};if _efbf .PageAssociation !=0{_bdfc ,_bedd :=_decb .GetPage (_efbf .PageAssociation );
if _bedd !=nil {return _ac .Wrap (_bedd ,_dffb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cffg int ;for _eddb :=uint64 (0);_eddb < _bbgef ;_eddb ++{_cffg =_adf [_eddb ];
_efbf .RTSegments [_eddb ],_bedd =_bdfc .GetSegment (_cffg );if _bedd !=nil {var _eagf error ;_efbf .RTSegments [_eddb ],_eagf =_decb .GetGlobalSegment (_cffg );if _eagf !=nil {return _ac .Wrapf (_bedd ,_dffb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_efbf .PageAssociation );
};};};return nil ;};for _befd :=uint64 (0);_befd < _bbgef ;_befd ++{_efbf .RTSegments [_befd ],_caee =_decb .GetGlobalSegment (_adf [_befd ]);if _caee !=nil {return _ac .Wrapf (_caee ,_dffb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_adf [_befd ]);
};};return nil ;};func (_cbb *GenericRefinementRegion )updateOverride ()error {if _cbb .GrAtX ==nil ||_cbb .GrAtY ==nil {return _d .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_cbb .GrAtX )!=len (_cbb .GrAtY ){return _d .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");
};_cbb ._fed =make ([]bool ,len (_cbb .GrAtX ));switch _cbb .TemplateID {case 0:if _cbb .GrAtX [0]!=-1&&_cbb .GrAtY [0]!=-1{_cbb ._fed [0]=true ;_cbb ._eb =true ;};if _cbb .GrAtX [1]!=-1&&_cbb .GrAtY [1]!=-1{_cbb ._fed [1]=true ;_cbb ._eb =true ;};case 1:_cbb ._eb =false ;
};return nil ;};func (_gada *TextRegion )getSymbols ()error {if _gada .Header .RTSegments !=nil {return _gada .initSymbols ();};return nil ;};type RegionSegment struct{_ddaf *_b .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;
CombinaionOperator _be .CombinationOperator ;};func (_dafc *Header )CleanSegmentData (){if _dafc .SegmentData !=nil {_dafc .SegmentData =nil ;};};func (_gbb *HalftoneRegion )combineGrayscalePlanes (_ecggc []*_be .Bitmap ,_ebag int )error {_egac :=0;for _bdfe :=0;
_bdfe < _ecggc [_ebag ].Height ;_bdfe ++{for _ffc :=0;_ffc < _ecggc [_ebag ].Width ;_ffc +=8{_ffca ,_ggf :=_ecggc [_ebag +1].GetByte (_egac );if _ggf !=nil {return _ggf ;};_dbgc ,_ggf :=_ecggc [_ebag ].GetByte (_egac );if _ggf !=nil {return _ggf ;};_ggf =_ecggc [_ebag ].SetByte (_egac ,_be .CombineBytes (_dbgc ,_ffca ,_be .CmbOpXor ));
if _ggf !=nil {return _ggf ;};_egac ++;};};return nil ;};func (_dbd *GenericRegion )Size ()int {return _dbd .RegionSegment .Size ()+1+2*len (_dbd .GBAtX )};type template0 struct{};func (_fdeb *TextRegion )decodeIb (_dagff ,_febce int64 )(*_be .Bitmap ,error ){const _eeef ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_bccfb error ;_fcad *_be .Bitmap ;);if _dagff ==0{if int (_febce )> len (_fdeb .Symbols )-1{return nil ,_ac .Error (_eeef ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fdeb .Symbols [int (_febce )],nil ;};var _bgdb ,_ccbf ,_befda ,_fgfg int64 ;_bgdb ,_bccfb =_fdeb .decodeRdw ();if _bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"");};_ccbf ,_bccfb =_fdeb .decodeRdh ();if _bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"");
};_befda ,_bccfb =_fdeb .decodeRdx ();if _bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"");};_fgfg ,_bccfb =_fdeb .decodeRdy ();if _bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"");};if _fdeb .IsHuffmanEncoded {if _ ,_bccfb =_fdeb .decodeSymInRefSize ();
_bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"");};_fdeb ._bfde .Align ();};_fegd :=_fdeb .Symbols [_febce ];_fgfee :=uint32 (_fegd .Width );_agba :=uint32 (_fegd .Height );_faaa :=int32 (uint32 (_bgdb )>>1)+int32 (_befda );_aebb :=int32 (uint32 (_ccbf )>>1)+int32 (_fgfg );
if _fdeb ._fggc ==nil {_fdeb ._fggc =_ead (_fdeb ._bfde ,nil );};_fdeb ._fggc .setParameters (_fdeb ._cdccb ,_fdeb ._bfga ,_fdeb .SbrTemplate ,_fgfee +uint32 (_bgdb ),_agba +uint32 (_ccbf ),_fegd ,_faaa ,_aebb ,false ,_fdeb .SbrATX ,_fdeb .SbrATY );_fcad ,_bccfb =_fdeb ._fggc .GetRegionBitmap ();
if _bccfb !=nil {return nil ,_ac .Wrap (_bccfb ,_eeef ,"\u0067\u0072\u0066");};if _fdeb .IsHuffmanEncoded {_fdeb ._bfde .Align ();};return _fcad ,nil ;};func (_bfcf *PatternDictionary )readPatternWidthAndHeight ()error {_faab ,_fdadb :=_bfcf ._abca .ReadByte ();
if _fdadb !=nil {return _fdadb ;};_bfcf .HdpWidth =_faab ;_faab ,_fdadb =_bfcf ._abca .ReadByte ();if _fdadb !=nil {return _fdadb ;};_bfcf .HdpHeight =_faab ;return nil ;};func (_cdaf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_be .Points ,symbols *_be .Bitmaps ,classIDs *_ea .IntSlice ,boxes *_be .Boxes ,width ,height ,symBits int ){_cdaf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cdaf ._gdfg =globalSymbolsMap ;_cdaf ._caeg =localSymbolsMap ;_cdaf ._cdaa =comps ;_cdaf ._acbaa =inLL ;_cdaf ._gbdd =symbols ;_cdaf ._adac =classIDs ;_cdaf ._eacf =boxes ;_cdaf ._gcfe =symBits ;};func (_cfbggd *SymbolDictionary )decodeAggregate (_efcd ,_dcfg uint32 )error {var (_cfebf int64 ;
_cdfa error ;);if _cfbggd .IsHuffmanEncoded {_cfebf ,_cdfa =_cfbggd .huffDecodeRefAggNInst ();if _cdfa !=nil {return _cdfa ;};}else {_afag ,_aabg :=_cfbggd ._gede .DecodeInt (_cfbggd ._cecg );if _aabg !=nil {return _aabg ;};_cfebf =int64 (_afag );};if _cfebf > 1{return _cfbggd .decodeThroughTextRegion (_efcd ,_dcfg ,uint32 (_cfebf ));
}else if _cfebf ==1{return _cfbggd .decodeRefinedSymbol (_efcd ,_dcfg );};return nil ;};