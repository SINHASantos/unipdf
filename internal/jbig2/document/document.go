//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_a "encoding/binary";_aa "fmt";_bd "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/bitwise";_ea "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gd "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_de "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "io";_d "math";_f "runtime/debug";);func (_gbbf *Globals )AddSegment (segment *_gd .Header ){_gbbf .Segments =append (_gbbf .Segments ,segment );
};func (_gag *Page )String ()string {return _aa .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_gag .PageNumber );};func (_cba *Page )GetHeight ()(int ,error ){return _cba .getHeight ()};func (_cab *Page )lastSegmentNumber ()(_aeeb uint32 ,_gea error ){const _gfg ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_cab .Segments )==0{return _aeeb ,_de .Errorf (_gfg ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_cab .PageNumber );
};return _cab .Segments [len (_cab .Segments )-1].SegmentNumber ,nil ;};func (_gbca *Page )getHeight ()(int ,error ){const _dbdc ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _gbca .FinalHeight !=0{return _gbca .FinalHeight ,nil ;};_daag :=_gbca .getPageInformationSegment ();
if _daag ==nil {return 0,_de .Error (_dbdc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fab ,_deee :=_daag .GetSegmentData ();if _deee !=nil {return 0,_de .Wrap (_deee ,_dbdc ,"");};_fgee ,_geb :=_fab .(*_gd .PageInformationSegment );
if !_geb {return 0,_de .Errorf (_dbdc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fab );
};if _fgee .PageBMHeight ==_d .MaxInt32 {_ ,_deee =_gbca .GetBitmap ();if _deee !=nil {return 0,_de .Wrap (_deee ,_dbdc ,"");};}else {_gbca .FinalHeight =_fgee .PageBMHeight ;};return _gbca .FinalHeight ,nil ;};func (_fge *Page )Encode (w _e .BinaryWriter )(_dgdd int ,_agg error ){const _dee ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _dfc int ;for _ ,_dfbf :=range _fge .Segments {if _dfc ,_agg =_dfbf .Encode (w );_agg !=nil {return _dgdd ,_de .Wrap (_agg ,_dee ,"");};_dgdd +=_dfc ;};return _dgdd ,nil ;};func (_ggf *Document )nextPageNumber ()uint32 {_ggf .NumberOfPages ++;return _ggf .NumberOfPages };
func (_dfb *Page )AddEndOfPageSegment (){_agc :=&_gd .Header {Type :_gd .TEndOfPage ,PageAssociation :_dfb .PageNumber };_dfb .Segments =append (_dfb .Segments ,_agc );};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cgc *Globals )GetSegment (segmentNumber int )(*_gd .Header ,error ){const _dggg ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _cgc ==nil {return nil ,_de .Error (_dggg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cgc .Segments )==0{return nil ,_de .Error (_dggg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _dcd *_gd .Header ;for _ ,_dcd =range _cgc .Segments {if _dcd .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _dcd ==nil {return nil ,_de .Error (_dggg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _dcd ,nil ;};func (_aba *Document )completeSymbols ()(_dggbg error ){const _caa ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _aba .Classer ==nil {return nil ;};if _aba .Classer .UndilatedTemplates ==nil {return _de .Error (_caa ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_dea :=len (_aba .Pages )==1;_egc :=make ([]int ,_aba .Classer .UndilatedTemplates .Size ());var _egf int ;for _ddc :=0;_ddc < _aba .Classer .ClassIDs .Size ();_ddc ++{_egf ,_dggbg =_aba .Classer .ClassIDs .Get (_ddc );if _dggbg !=nil {return _de .Wrap (_dggbg ,_caa ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_egc [_egf ]++;};var _ba []int ;for _eac :=0;_eac < _aba .Classer .UndilatedTemplates .Size ();_eac ++{if _egc [_eac ]==0{return _de .Error (_caa ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _egc [_eac ]> 1||_dea {_ba =append (_ba ,_eac );};};_aba ._ff =len (_ba );var _cad ,_bbd int ;for _fdf :=0;_fdf < _aba .Classer .ComponentPageNumbers .Size ();_fdf ++{_cad ,_dggbg =_aba .Classer .ComponentPageNumbers .Get (_fdf );if _dggbg !=nil {return _de .Wrapf (_dggbg ,_caa ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_fdf );
};_bbd ,_dggbg =_aba .Classer .ClassIDs .Get (_fdf );if _dggbg !=nil {return _de .Wrapf (_dggbg ,_caa ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_cad );
};if _egc [_bbd ]==1&&!_dea {_aba ._bdb [_cad ]=append (_aba ._bdb [_cad ],_bbd );};};if _dggbg =_aba .Classer .ComputeLLCorners ();_dggbg !=nil {return _de .Wrap (_dggbg ,_caa ,"");};return nil ;};func (_fgc *Page )addTextRegionSegment (_fac []*_gd .Header ,_gf ,_cbf map[int ]int ,_gdf []int ,_fcg *_gg .Points ,_bbb *_gg .Bitmaps ,_bgf *_ea .IntSlice ,_cgac *_gg .Boxes ,_cgff ,_geg int ){_aga :=&_gd .TextRegion {NumberOfSymbols :uint32 (_geg )};
_aga .InitEncode (_gf ,_cbf ,_gdf ,_fcg ,_bbb ,_bgf ,_cgac ,_fgc .FinalWidth ,_fgc .FinalHeight ,_cgff );_bed :=&_gd .Header {RTSegments :_fac ,SegmentData :_aga ,PageAssociation :_fgc .PageNumber ,Type :_gd .TImmediateTextRegion };_ebg :=_gd .TPageInformation ;
if _cbf !=nil {_ebg =_gd .TSymbolDictionary ;};var _gbc int ;for ;_gbc < len (_fgc .Segments );_gbc ++{if _fgc .Segments [_gbc ].Type ==_ebg {_gbc ++;break ;};};_fgc .Segments =append (_fgc .Segments ,nil );copy (_fgc .Segments [_gbc +1:],_fgc .Segments [_gbc :]);
_fgc .Segments [_gbc ]=_bed ;};var _c =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_cbc *Document )reachedEOF (_fcf int64 )(bool ,error ){const _afc ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_dbg :=_cbc .InputStream .Seek (_fcf ,_g .SeekStart );
if _dbg !=nil {_bd .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dbg );
return false ,_de .Wrap (_dbg ,_afc ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_dbg =_cbc .InputStream .ReadBits (32);if _dbg ==_g .EOF {return true ,nil ;
}else if _dbg !=nil {return false ,_de .Wrap (_dbg ,_afc ,"");};return false ,nil ;};func (_edb *Document )encodeEOFHeader (_fg _e .BinaryWriter )(_eba int ,_ee error ){_gga :=&_gd .Header {SegmentNumber :_edb .nextSegmentNumber (),Type :_gd .TEndOfFile };
if _eba ,_ee =_gga .Encode (_fg );_ee !=nil {return 0,_de .Wrap (_ee ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _eba ,nil ;};func (_dcef *Page )getResolutionY ()(int ,error ){const _caab ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _dcef .ResolutionY !=0{return _dcef .ResolutionY ,nil ;};_abb :=_dcef .getPageInformationSegment ();if _abb ==nil {return 0,_de .Error (_caab ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_aac ,_fabe :=_abb .GetSegmentData ();
if _fabe !=nil {return 0,_de .Wrap (_fabe ,_caab ,"");};_febe ,_aagg :=_aac .(*_gd .PageInformationSegment );if !_aagg {return 0,_de .Errorf (_caab ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_aac );
};_dcef .ResolutionY =_febe .ResolutionY ;return _dcef .ResolutionY ,nil ;};func (_adf *Document )Encode ()(_aag []byte ,_fc error ){const _dga ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _bbda ,_dgc int ;if _adf .FullHeaders {if _bbda ,_fc =_adf .encodeFileHeader (_adf ._ge );
_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");};};var (_aee bool ;_edd *_gd .Header ;_cag *Page ;);if _fc =_adf .completeClassifiedPages ();_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");};if _fc =_adf .produceClassifiedPages ();_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");
};if _adf .GlobalSegments !=nil {for _ ,_edd =range _adf .GlobalSegments .Segments {if _fc =_adf .encodeSegment (_edd ,&_bbda );_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");};};};for _ef :=1;_ef <=int (_adf .NumberOfPages );_ef ++{if _cag ,_aee =_adf .Pages [_ef ];
!_aee {return nil ,_de .Errorf (_dga ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ef );};for _ ,_edd =range _cag .Segments {if _fc =_adf .encodeSegment (_edd ,&_bbda );_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");
};};};if _adf .FullHeaders {if _dgc ,_fc =_adf .encodeEOFHeader (_adf ._ge );_fc !=nil {return nil ,_de .Wrap (_fc ,_dga ,"");};_bbda +=_dgc ;};_aag =_adf ._ge .Data ();if len (_aag )!=_bbda {_bd .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_bbda ,len (_aag ));
};return _aag ,nil ;};func (_dg *Document )completeClassifiedPages ()(_ad error ){const _ed ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _dg .Classer ==nil {return nil ;
};_dg ._fd =make ([]int ,_dg .Classer .UndilatedTemplates .Size ());for _gc :=0;_gc < _dg .Classer .ClassIDs .Size ();_gc ++{_be ,_db :=_dg .Classer .ClassIDs .Get (_gc );if _db !=nil {return _de .Wrapf (_db ,_ed ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_gc );
};_dg ._fd [_be ]++;};var _cd []int ;for _gee :=0;_gee < _dg .Classer .UndilatedTemplates .Size ();_gee ++{if _dg .NumberOfPages ==1||_dg ._fd [_gee ]> 1{_cd =append (_cd ,_gee );};};var (_dgg *Page ;_fde bool ;);for _gge ,_cb :=range *_dg .Classer .ComponentPageNumbers {if _dgg ,_fde =_dg .Pages [_cb ];
!_fde {return _de .Errorf (_ed ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gge );};if _dgg .EncodingMethod ==GenericEM {_bd .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_gge );
continue ;};_dg ._dd [_cb ]=append (_dg ._dd [_cb ],_gge );_cge ,_ecc :=_dg .Classer .ClassIDs .Get (_gge );if _ecc !=nil {return _de .Wrapf (_ecc ,_ed ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_gge );
};if _dg ._fd [_cge ]==1&&_dg .NumberOfPages !=1{_cgd :=append (_dg ._bdb [_cb ],_cge );_dg ._bdb [_cb ]=_cgd ;};};if _ad =_dg .Classer .ComputeLLCorners ();_ad !=nil {return _de .Wrap (_ad ,_ed ,"");};if _ ,_ad =_dg .addSymbolDictionary (0,_dg .Classer .UndilatedTemplates ,_cd ,_dg ._eag ,false );
_ad !=nil {return _de .Wrap (_ad ,_ed ,"");};return nil ;};func (_ccae *Page )GetResolutionY ()(int ,error ){return _ccae .getResolutionY ()};type Globals struct{Segments []*_gd .Header ;};func (_gagg *Page )collectPageStripes ()(_cbfg []_gd .Segmenter ,_eec error ){const _bec ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _agdf _gd .Segmenter ;for _ ,_dgdb :=range _gagg .Segments {switch _dgdb .Type {case 6,7,22,23,38,39,42,43:_agdf ,_eec =_dgdb .GetSegmentData ();if _eec !=nil {return nil ,_de .Wrap (_eec ,_bec ,"");};_cbfg =append (_cbfg ,_agdf );case 50:_agdf ,_eec =_dgdb .GetSegmentData ();
if _eec !=nil {return nil ,_eec ;};_ggag ,_dcg :=_agdf .(*_gd .EndOfStripe );if !_dcg {return nil ,_de .Errorf (_bec ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_agdf );
};_cbfg =append (_cbfg ,_ggag );_gagg .FinalHeight =_ggag .LineNumber ();};};return _cbfg ,nil ;};func (_ecg *Page )createStripedPage (_dgdg *_gd .PageInformationSegment )error {const _feg ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_ccg ,_ddaf :=_ecg .collectPageStripes ();if _ddaf !=nil {return _de .Wrap (_ddaf ,_feg ,"");};var _ecfb int ;for _ ,_aefb :=range _ccg {if _daa ,_fcfge :=_aefb .(*_gd .EndOfStripe );_fcfge {_ecfb =_daa .LineNumber ()+1;}else {_bfg :=_aefb .(_gd .Regioner );
_dff :=_bfg .GetRegionInfo ();_efg :=_ecg .getCombinationOperator (_dgdg ,_dff .CombinaionOperator );_gde ,_acbd :=_bfg .GetRegionBitmap ();if _acbd !=nil {return _de .Wrap (_acbd ,_feg ,"");};_acbd =_gg .Blit (_gde ,_ecg .Bitmap ,int (_dff .XLocation ),_ecfb ,_efg );
if _acbd !=nil {return _de .Wrap (_acbd ,_feg ,"");};};};return nil ;};func (_cbg *Document )produceClassifiedPage (_fdg *Page ,_add *_gd .Header )(_dece error ){const _bgd ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _af map[int ]int ;_cc :=_cbg ._ff ;_bee :=[]*_gd .Header {_add };if len (_cbg ._bdb [_fdg .PageNumber ])> 0{_af =map[int ]int {};_ae ,_ga :=_cbg .addSymbolDictionary (_fdg .PageNumber ,_cbg .Classer .UndilatedTemplates ,_cbg ._bdb [_fdg .PageNumber ],_af ,false );
if _ga !=nil {return _de .Wrap (_ga ,_bgd ,"");};_bee =append (_bee ,_ae );_cc +=len (_cbg ._bdb [_fdg .PageNumber ]);};_fe :=_cbg ._dd [_fdg .PageNumber ];_bd .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_fdg .PageNumber ,_fe );
_fdg .addTextRegionSegment (_bee ,_cbg ._eag ,_af ,_cbg ._dd [_fdg .PageNumber ],_cbg .Classer .PtaLL ,_cbg .Classer .UndilatedTemplates ,_cbg .Classer .ClassIDs ,nil ,_cgg (_cc ),len (_cbg ._dd [_fdg .PageNumber ]));return nil ;};func (_ecbe *Page )clearSegmentData (){for _ggb :=range _ecbe .Segments {_ecbe .Segments [_ggb ].CleanSegmentData ();
};};func (_aca *Page )getCombinationOperator (_cgde *_gd .PageInformationSegment ,_fcd _gg .CombinationOperator )_gg .CombinationOperator {if _cgde .CombinationOperatorOverrideAllowed (){return _fcd ;};return _cgde .CombinationOperator ();};func (_ebb *Document )determineRandomDataOffsets (_bf []*_gd .Header ,_fbb uint64 ){if _ebb .OrganizationType !=_gd .ORandom {return ;
};for _ ,_dcf :=range _bf {_dcf .SegmentDataStartOffset =_fbb ;_fbb +=_dcf .SegmentDataLength ;};};func (_gab *Document )addSymbolDictionary (_bcf int ,_ag *_gg .Bitmaps ,_fef []int ,_gad map[int ]int ,_da bool )(*_gd .Header ,error ){const _fdd ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_ccf :=&_gd .SymbolDictionary {};if _dggb :=_ccf .InitEncode (_ag ,_fef ,_gad ,_da );_dggb !=nil {return nil ,_dggb ;};_eceg :=&_gd .Header {Type :_gd .TSymbolDictionary ,PageAssociation :_bcf ,SegmentData :_ccf };if _bcf ==0{if _gab .GlobalSegments ==nil {_gab .GlobalSegments =&Globals {};
};_gab .GlobalSegments .AddSegment (_eceg );return _eceg ,nil ;};_cff ,_aeb :=_gab .Pages [_bcf ];if !_aeb {return nil ,_de .Errorf (_fdd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bcf );};var (_dba int ;
_fb *_gd .Header ;);for _dba ,_fb =range _cff .Segments {if _fb .Type ==_gd .TPageInformation {break ;};};_dba ++;_cff .Segments =append (_cff .Segments ,nil );copy (_cff .Segments [_dba +1:],_cff .Segments [_dba :]);_cff .Segments [_dba ]=_eceg ;return _eceg ,nil ;
};func (_edg *Page )AddGenericRegion (bm *_gg .Bitmap ,xloc ,yloc ,template int ,tp _gd .Type ,duplicateLineRemoval bool )error {const _bfd ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_cbca :=&_gd .GenericRegion {};
if _gcf :=_cbca .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gcf !=nil {return _de .Wrap (_gcf ,_bfd ,"");};_ggc :=&_gd .Header {Type :_gd .TImmediateGenericRegion ,PageAssociation :_edg .PageNumber ,SegmentData :_cbca };_edg .Segments =append (_edg .Segments ,_ggc );
return nil ;};func (_aef *Document )mapData ()error {const _gcd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_dfg []*_gd .Header ;_cee int64 ;_ffg _gd .Type ;);_caf ,_fce :=_aef .isFileHeaderPresent ();if _fce !=nil {return _de .Wrap (_fce ,_gcd ,"");
};if _caf {if _fce =_aef .parseFileHeader ();_fce !=nil {return _de .Wrap (_fce ,_gcd ,"");};_cee +=int64 (_aef ._cg );_aef .FullHeaders =true ;};var (_gbb *Page ;_fgf bool ;);for _ffg !=51&&!_fgf {_fefc ,_def :=_gd .NewHeader (_aef ,_aef .InputStream ,_cee ,_aef .OrganizationType );
if _def !=nil {return _de .Wrap (_def ,_gcd ,"");};_bd .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fefc .SegmentNumber ,_fefc .Type );
_ffg =_fefc .Type ;if _ffg !=_gd .TEndOfFile {if _fefc .PageAssociation !=0{_gbb =_aef .Pages [_fefc .PageAssociation ];if _gbb ==nil {_gbb =_bgc (_aef ,_fefc .PageAssociation );_aef .Pages [_fefc .PageAssociation ]=_gbb ;if _aef .NumberOfPagesUnknown {_aef .NumberOfPages ++;
};};_gbb .Segments =append (_gbb .Segments ,_fefc );}else {_aef .GlobalSegments .AddSegment (_fefc );};};_dfg =append (_dfg ,_fefc );_cee =_aef .InputStream .AbsolutePosition ();if _aef .OrganizationType ==_gd .OSequential {_cee +=int64 (_fefc .SegmentDataLength );
};_fgf ,_def =_aef .reachedEOF (_cee );if _def !=nil {_bd .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_def );
return _de .Wrap (_def ,_gcd ,"");};};_aef .determineRandomDataOffsets (_dfg ,uint64 (_cee ));return nil ;};func (_dae *Document )encodeFileHeader (_dbd _e .BinaryWriter )(_ecf int ,_bcc error ){const _aab ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ecf ,_bcc =_dbd .Write (_c );if _bcc !=nil {return _ecf ,_de .Wrap (_bcc ,_aab ,"\u0069\u0064");};if _bcc =_dbd .WriteByte (0x01);_bcc !=nil {return _ecf ,_de .Wrap (_bcc ,_aab ,"\u0066\u006c\u0061g\u0073");};_ecf ++;_bbg :=make ([]byte ,4);_a .BigEndian .PutUint32 (_bbg ,_dae .NumberOfPages );
_daef ,_bcc :=_dbd .Write (_bbg );if _bcc !=nil {return _daef ,_de .Wrap (_bcc ,_aab ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ecf +=_daef ;return _ecf ,nil ;};func (_eee *Page )getResolutionX ()(int ,error ){const _afe ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _eee .ResolutionX !=0{return _eee .ResolutionX ,nil ;};_dfa :=_eee .getPageInformationSegment ();if _dfa ==nil {return 0,_de .Error (_afe ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cbff ,_egcg :=_dfa .GetSegmentData ();
if _egcg !=nil {return 0,_de .Wrap (_egcg ,_afe ,"");};_cbb ,_cbbd :=_cbff .(*_gd .PageInformationSegment );if !_cbbd {return 0,_de .Errorf (_afe ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cbff );
};_eee .ResolutionX =_cbb .ResolutionX ;return _eee .ResolutionX ,nil ;};func (_cga *Document )GetGlobalSegment (i int )(*_gd .Header ,error ){_dc ,_dgab :=_cga .GlobalSegments .GetSegment (i );if _dgab !=nil {return nil ,_de .Wrap (_dgab ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _dc ,nil ;};func (_cfaf *Page )fitsPage (_fba *_gd .PageInformationSegment ,_dbb *_gg .Bitmap )bool {return _cfaf .countRegions ()==1&&_fba .DefaultPixelValue ==0&&_fba .PageBMWidth ==_dbb .Width &&_fba .PageBMHeight ==_dbb .Height ;};func _fgg (_bagb *_e .Reader ,_dbac *Globals )(*Document ,error ){_efb :=&Document {Pages :make (map[int ]*Page ),InputStream :_bagb ,OrganizationType :_gd .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_dbac ,_cg :9};
if _efb .GlobalSegments ==nil {_efb .GlobalSegments =&Globals {};};if _egg :=_efb .mapData ();_egg !=nil {return nil ,_egg ;};return _efb ,nil ;};func (_abf *Document )produceClassifiedPages ()(_gbd error ){const _bc ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _abf .Classer ==nil {return nil ;};var (_bb *Page ;_ce bool ;_cf *_gd .Header ;);for _cea :=1;_cea <=int (_abf .NumberOfPages );_cea ++{if _bb ,_ce =_abf .Pages [_cea ];!_ce {return _de .Errorf (_bc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cea );
};if _bb .EncodingMethod ==GenericEM {continue ;};if _cf ==nil {if _cf ,_gbd =_abf .GlobalSegments .GetSymbolDictionary ();_gbd !=nil {return _de .Wrap (_gbd ,_bc ,"");};};if _gbd =_abf .produceClassifiedPage (_bb ,_cf );_gbd !=nil {return _de .Wrapf (_gbd ,_bc ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_cea );
};};return nil ;};func (_agca *Page )createPage (_agd *_gd .PageInformationSegment )error {var _fbc error ;if !_agd .IsStripe ||_agd .PageBMHeight !=-1{_fbc =_agca .createNormalPage (_agd );}else {_fbc =_agca .createStripedPage (_agd );};return _fbc ;};
func (_cbd *Page )createNormalPage (_gca *_gd .PageInformationSegment )error {const _cde ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_cbd .Bitmap =_gg .New (_gca .PageBMWidth ,_gca .PageBMHeight );if _gca .DefaultPixelValue !=0{_cbd .Bitmap .SetDefaultPixel ();
};for _ ,_cef :=range _cbd .Segments {switch _cef .Type {case 6,7,22,23,38,39,42,43:_bd .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_cef .SegmentNumber );_fbbc ,_cade :=_cef .GetSegmentData ();
if _cade !=nil {return _cade ;};_bcgd ,_fed :=_fbbc .(_gd .Regioner );if !_fed {_bd .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_fbbc );
return _de .Errorf (_cde ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fbbc );
};_gba ,_cade :=_bcgd .GetRegionBitmap ();if _cade !=nil {return _de .Wrap (_cade ,_cde ,"");};if _cbd .fitsPage (_gca ,_gba ){_cbd .Bitmap =_gba ;}else {_ccd :=_bcgd .GetRegionInfo ();_gfb :=_cbd .getCombinationOperator (_gca ,_ccd .CombinaionOperator );
_cade =_gg .Blit (_gba ,_cbd .Bitmap ,int (_ccd .XLocation ),int (_ccd .YLocation ),_gfb );if _cade !=nil {return _de .Wrap (_cade ,_cde ,"");};};};};return nil ;};func (_adfg *Page )GetSegment (number int )(*_gd .Header ,error ){const _ecb ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_beee :=range _adfg .Segments {if _beee .SegmentNumber ==uint32 (number ){return _beee ,nil ;};};_fdfd :=make ([]uint32 ,len (_adfg .Segments ));for _acg ,_gcfa :=range _adfg .Segments {_fdfd [_acg ]=_gcfa .SegmentNumber ;};return nil ,_de .Errorf (_ecb ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_adfg .PageNumber ,_fdfd );
};func (_ffff *Page )GetResolutionX ()(int ,error ){return _ffff .getResolutionX ()};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ge :_e .BufferedMSB (),Pages :map[int ]*Page {},_bdb :map[int ][]int {},_eag :map[int ]int {},_dd :map[int ][]int {}};
};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_e .Reader ;GlobalSegments *Globals ;OrganizationType _gd .OrganizationType ;Classer *_ec .Classer ;XRes ,YRes int ;FullHeaders bool ;
CurrentSegmentNumber uint32 ;AverageTemplates *_gg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_cg uint8 ;_ge *_e .BufferedWriter ;EncodeGlobals bool ;_ff int ;_bdb map[int ][]int ;_dd map[int ][]int ;_fd []int ;_eag map[int ]int ;};
func (_dffd *Page )countRegions ()int {var _bccd int ;for _ ,_adc :=range _dffd .Segments {switch _adc .Type {case 6,7,22,23,38,39,42,43:_bccd ++;};};return _bccd ;};func (_afag *Page )AddPageInformationSegment (){_aeea :=&_gd .PageInformationSegment {PageBMWidth :_afag .FinalWidth ,PageBMHeight :_afag .FinalHeight ,ResolutionX :_afag .ResolutionX ,ResolutionY :_afag .ResolutionY ,IsLossless :_afag .IsLossless };
if _afag .BlackIsOne {_aeea .DefaultPixelValue =uint8 (0x1);};_cbce :=&_gd .Header {PageAssociation :_afag .PageNumber ,SegmentDataLength :uint64 (_aeea .Size ()),SegmentData :_aeea ,Type :_gd .TPageInformation };_afag .Segments =append (_afag .Segments ,_cbce );
};func (_gb *Document )AddGenericPage (bm *_gg .Bitmap ,duplicateLineRemoval bool )(_ece error ){const _gdb ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_gb .FullHeaders &&_gb .NumberOfPages !=0{return _de .Error (_gdb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_bg :=&Page {Segments :[]*_gd .Header {},Bitmap :bm ,Document :_gb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_gg .Chocolate };_bg .PageNumber =int (_gb .nextPageNumber ());_gb .Pages [_bg .PageNumber ]=_bg ;
bm .InverseData ();_bg .AddPageInformationSegment ();if _ece =_bg .AddGenericRegion (bm ,0,0,0,_gd .TImmediateGenericRegion ,duplicateLineRemoval );_ece !=nil {return _de .Wrap (_ece ,_gdb ,"");};if _gb .FullHeaders {_bg .AddEndOfPageSegment ();};return nil ;
};func DecodeDocument (input *_e .Reader ,globals *Globals )(*Document ,error ){return _fgg (input ,globals );};func (_bge *Document )nextSegmentNumber ()uint32 {_fafa :=_bge .CurrentSegmentNumber ;_bge .CurrentSegmentNumber ++;return _fafa ;};func (_eccg *Page )GetBitmap ()(_gac *_gg .Bitmap ,_aaf error ){_bd .Log .Trace (_aa .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_eccg .PageNumber ));
defer func (){if _aaf !=nil {_bd .Log .Trace (_aa .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eccg .PageNumber ,_aaf ));
}else {_bd .Log .Trace (_aa .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_eccg .PageNumber ));};}();if _eccg .Bitmap !=nil {return _eccg .Bitmap ,nil ;
};_aaf =_eccg .composePageBitmap ();if _aaf !=nil {return nil ,_aaf ;};return _eccg .Bitmap ,nil ;};func (_ffga *Page )composePageBitmap ()error {const _ddd ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _ffga .PageNumber ==0{return nil ;};_acb :=_ffga .getPageInformationSegment ();if _acb ==nil {return _de .Error (_ddd ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cae ,_fad :=_acb .GetSegmentData ();if _fad !=nil {return _fad ;};_agb ,_abff :=_cae .(*_gd .PageInformationSegment );if !_abff {return _de .Error (_ddd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _fad =_ffga .createPage (_agb );_fad !=nil {return _de .Wrap (_fad ,_ddd ,"");};_ffga .clearSegmentData ();return nil ;};func (_gbf *Document )GetNumberOfPages ()(uint32 ,error ){if _gbf .NumberOfPagesUnknown ||_gbf .NumberOfPages ==0{if len (_gbf .Pages )==0{if _deaf :=_gbf .mapData ();
_deaf !=nil {return 0,_de .Wrap (_deaf ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_gbf .Pages )),nil ;};return _gbf .NumberOfPages ,nil ;};func (_ab *Document )AddClassifiedPage (bm *_gg .Bitmap ,method _ec .Method )(_ca error ){const _eb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ab .FullHeaders &&_ab .NumberOfPages !=0{return _de .Error (_eb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ab .Classer ==nil {if _ab .Classer ,_ca =_ec .Init (_ec .DefaultSettings ());_ca !=nil {return _de .Wrap (_ca ,_eb ,"");};};_eg :=int (_ab .nextPageNumber ());_ac :=&Page {Segments :[]*_gd .Header {},Bitmap :bm ,Document :_ab ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_eg };
_ab .Pages [_eg ]=_ac ;switch method {case _ec .RankHaus :_ac .EncodingMethod =RankHausEM ;case _ec .Correlation :_ac .EncodingMethod =CorrelationEM ;};_ac .AddPageInformationSegment ();if _ca =_ab .Classer .AddPage (bm ,_eg ,method );_ca !=nil {return _de .Wrap (_ca ,_eb ,"");
};if _ab .FullHeaders {_ac .AddEndOfPageSegment ();};return nil ;};func (_afa *Globals )GetSegmentByIndex (index int )(*_gd .Header ,error ){const _cca ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _afa ==nil {return nil ,_de .Error (_cca ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_afa .Segments )==0{return nil ,_de .Error (_cca ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_afa .Segments )-1{return nil ,_de .Error (_cca ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _afa .Segments [index ],nil ;};func _bgc (_dce *Document ,_bad int )*Page {return &Page {Document :_dce ,PageNumber :_bad ,Segments :[]*_gd .Header {}};
};func (_dac *Document )parseFileHeader ()error {const _fdgf ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dag :=_dac .InputStream .Seek (8,_g .SeekStart );if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u0069\u0064");
};_ ,_dag =_dac .InputStream .ReadBits (5);if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_ege ,_dag :=_dac .InputStream .ReadBit ();if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _ege ==1{_dac .GBUseExtTemplate =true ;};_ege ,_dag =_dac .InputStream .ReadBit ();if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ege !=1{_dac .NumberOfPagesUnknown =false ;
};_ege ,_dag =_dac .InputStream .ReadBit ();if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_dac .OrganizationType =_gd .OrganizationType (_ege );if !_dac .NumberOfPagesUnknown {_dac .NumberOfPages ,_dag =_dac .InputStream .ReadUint32 ();
if _dag !=nil {return _de .Wrap (_dag ,_fdgf ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_dac ._cg =13;};return nil ;};type Page struct{Segments []*_gd .Header ;PageNumber int ;Bitmap *_gg .Bitmap ;FinalHeight int ;
FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_adcb *Page )getWidth ()(int ,error ){const _dcc ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";
if _adcb .FinalWidth !=0{return _adcb .FinalWidth ,nil ;};_ded :=_adcb .getPageInformationSegment ();if _ded ==nil {return 0,_de .Error (_dcc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eab ,_gfc :=_ded .GetSegmentData ();
if _gfc !=nil {return 0,_de .Wrap (_gfc ,_dcc ,"");};_fcdd ,_ggaa :=_eab .(*_gd .PageInformationSegment );if !_ggaa {return 0,_de .Errorf (_dcc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_eab );
};_adcb .FinalWidth =_fcdd .PageBMWidth ;return _adcb .FinalWidth ,nil ;};func (_bcg *Page )GetWidth ()(int ,error ){return _bcg .getWidth ()};func (_feb *Page )getPageInformationSegment ()*_gd .Header {for _ ,_ceb :=range _feb .Segments {if _ceb .Type ==_gd .TPageInformation {return _ceb ;
};};_bd .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_feb );
return nil ;};func (_efa *Page )nextSegmentNumber ()uint32 {return _efa .Document .nextSegmentNumber ()};func (_cffd *Globals )GetSymbolDictionary ()(*_gd .Header ,error ){const _cgf ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _cffd ==nil {return nil ,_de .Error (_cgf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cffd .Segments )==0{return nil ,_de .Error (_cgf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_bbgb :=range _cffd .Segments {if _bbgb .Type ==_gd .TSymbolDictionary {return _bbgb ,nil ;};};return nil ,_de .Error (_cgf ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};type EncodingMethod int ;func (_bdd *Document )isFileHeaderPresent ()(bool ,error ){_bdd .InputStream .Mark ();for _ ,_dgd :=range _c {_bag ,_ddcd :=_bdd .InputStream .ReadByte ();if _ddcd !=nil {return false ,_ddcd ;};if _dgd !=_bag {_bdd .InputStream .Reset ();
return false ,nil ;};};_bdd .InputStream .Reset ();return true ,nil ;};func (_bae *Document )GetPage (pageNumber int )(_gd .Pager ,error ){const _cbgg ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_bd .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_f .Stack ());
return nil ,_de .Errorf (_cbgg ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_bae .Pages ){_bd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_de .Error (_cbgg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_fff ,_faf :=_bae .Pages [pageNumber ];if !_faf {_bd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_de .Errorf (_cbgg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fff ,nil ;};func (_baa *Document )encodeSegment (_ged *_gd .Header ,_dge *int )error {const _ada ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_ged .SegmentNumber =_baa .nextSegmentNumber ();_gcg ,_fea :=_ged .Encode (_baa ._ge );
if _fea !=nil {return _de .Wrapf (_fea ,_ada ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ged .SegmentNumber );};*_dge +=_gcg ;return nil ;};func _cgg (_bde int )int {_addb :=0;_cfa :=(_bde &(_bde -1))==0;_bde >>=1;
for ;_bde !=0;_bde >>=1{_addb ++;};if _cfa {return _addb ;};return _addb +1;};