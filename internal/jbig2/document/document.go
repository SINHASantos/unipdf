//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_e "encoding/binary";_g "fmt";_ea "github.com/unidoc/unipdf/v3/common";_gd "github.com/unidoc/unipdf/v3/internal/bitwise";_gdg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_c "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_eba "io";_eb "math";_ag "runtime/debug";);func (_dcb *Page )Encode (w _gd .BinaryWriter )(_eagf int ,_fff error ){const _agdf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _fdda int ;for _ ,_cdeb :=range _dcb .Segments {if _fdda ,_fff =_cdeb .Encode (w );_fff !=nil {return _eagf ,_c .Wrap (_fff ,_agdf ,"");};_eagf +=_fdda ;};return _eagf ,nil ;};func DecodeDocument (input *_gd .Reader ,globals *Globals )(*Document ,error ){return _fbfc (input ,globals );
};func (_cefa *Document )nextPageNumber ()uint32 {_cefa .NumberOfPages ++;return _cefa .NumberOfPages };func (_ccg *Globals )GetSegmentByIndex (index int )(*_gg .Header ,error ){const _dcce ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _ccg ==nil {return nil ,_c .Error (_dcce ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ccg .Segments )==0{return nil ,_c .Error (_dcce ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_ccg .Segments )-1{return nil ,_c .Error (_dcce ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _ccg .Segments [index ],nil ;};type Page struct{Segments []*_gg .Header ;PageNumber int ;
Bitmap *_f .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_ffa *Document )nextSegmentNumber ()uint32 {_ecb :=_ffa .CurrentSegmentNumber ;
_ffa .CurrentSegmentNumber ++;return _ecb ;};func (_gde *Page )GetWidth ()(int ,error ){return _gde .getWidth ()};func (_fda *Page )clearSegmentData (){for _aeb :=range _fda .Segments {_fda .Segments [_aeb ].CleanSegmentData ();};};func (_gggb *Globals )GetSegment (segmentNumber int )(*_gg .Header ,error ){const _afg ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _gggb ==nil {return nil ,_c .Error (_afg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gggb .Segments )==0{return nil ,_c .Error (_afg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _eeba *_gg .Header ;for _ ,_eeba =range _gggb .Segments {if _eeba .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _eeba ==nil {return nil ,_c .Error (_afg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _eeba ,nil ;};type Globals struct{Segments []*_gg .Header ;};func (_aaaa *Page )addTextRegionSegment (_cbeb []*_gg .Header ,_fgbf ,_eaae map[int ]int ,_cd []int ,_cde *_f .Points ,_fce *_f .Bitmaps ,_cbgb *_gdg .IntSlice ,_cae *_f .Boxes ,_efa ,_ggf int ){_fdec :=&_gg .TextRegion {NumberOfSymbols :uint32 (_ggf )};
_fdec .InitEncode (_fgbf ,_eaae ,_cd ,_cde ,_fce ,_cbgb ,_cae ,_aaaa .FinalWidth ,_aaaa .FinalHeight ,_efa );_fgbd :=&_gg .Header {RTSegments :_cbeb ,SegmentData :_fdec ,PageAssociation :_aaaa .PageNumber ,Type :_gg .TImmediateTextRegion };_bfc :=_gg .TPageInformation ;
if _eaae !=nil {_bfc =_gg .TSymbolDictionary ;};var _cdec int ;for ;_cdec < len (_aaaa .Segments );_cdec ++{if _aaaa .Segments [_cdec ].Type ==_bfc {_cdec ++;break ;};};_aaaa .Segments =append (_aaaa .Segments ,nil );copy (_aaaa .Segments [_cdec +1:],_aaaa .Segments [_cdec :]);
_aaaa .Segments [_cdec ]=_fgbd ;};func (_age *Document )completeSymbols ()(_aeg error ){const _dca ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _age .Classer ==nil {return nil ;};if _age .Classer .UndilatedTemplates ==nil {return _c .Error (_dca ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_aaa :=len (_age .Pages )==1;_gb :=make ([]int ,_age .Classer .UndilatedTemplates .Size ());var _ece int ;for _gf :=0;_gf < _age .Classer .ClassIDs .Size ();_gf ++{_ece ,_aeg =_age .Classer .ClassIDs .Get (_gf );if _aeg !=nil {return _c .Wrap (_aeg ,_dca ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_gb [_ece ]++;};var _fdf []int ;for _ee :=0;_ee < _age .Classer .UndilatedTemplates .Size ();_ee ++{if _gb [_ee ]==0{return _c .Error (_dca ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _gb [_ee ]> 1||_aaa {_fdf =append (_fdf ,_ee );};};_age ._cb =len (_fdf );var _ebg ,_bag int ;for _dcg :=0;_dcg < _age .Classer .ComponentPageNumbers .Size ();_dcg ++{_ebg ,_aeg =_age .Classer .ComponentPageNumbers .Get (_dcg );if _aeg !=nil {return _c .Wrapf (_aeg ,_dca ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dcg );
};_bag ,_aeg =_age .Classer .ClassIDs .Get (_dcg );if _aeg !=nil {return _c .Wrapf (_aeg ,_dca ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ebg );
};if _gb [_bag ]==1&&!_aaa {_age ._ed [_ebg ]=append (_age ._ed [_ebg ],_bag );};};if _aeg =_age .Classer .ComputeLLCorners ();_aeg !=nil {return _c .Wrap (_aeg ,_dca ,"");};return nil ;};func (_fb *Document )produceClassifiedPage (_eg *Page ,_cbc *_gg .Header )(_cff error ){const _ccc ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _fdg map[int ]int ;_ddb :=_fb ._cb ;_bce :=[]*_gg .Header {_cbc };if len (_fb ._ed [_eg .PageNumber ])> 0{_fdg =map[int ]int {};_aa ,_dfaa :=_fb .addSymbolDictionary (_eg .PageNumber ,_fb .Classer .UndilatedTemplates ,_fb ._ed [_eg .PageNumber ],_fdg ,false );
if _dfaa !=nil {return _c .Wrap (_dfaa ,_ccc ,"");};_bce =append (_bce ,_aa );_ddb +=len (_fb ._ed [_eg .PageNumber ]);};_cad :=_fb ._eaa [_eg .PageNumber ];_ea .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_eg .PageNumber ,_cad );
_eg .addTextRegionSegment (_bce ,_fb ._da ,_fdg ,_fb ._eaa [_eg .PageNumber ],_fb .Classer .PtaLL ,_fb .Classer .UndilatedTemplates ,_fb .Classer .ClassIDs ,nil ,_bff (_ddb ),len (_fb ._eaa [_eg .PageNumber ]));return nil ;};func (_ge *Document )completeClassifiedPages ()(_ef error ){const _cg ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _ge .Classer ==nil {return nil ;};_ge ._ae =make ([]int ,_ge .Classer .UndilatedTemplates .Size ());for _db :=0;_db < _ge .Classer .ClassIDs .Size ();_db ++{_cfa ,_aec :=_ge .Classer .ClassIDs .Get (_db );if _aec !=nil {return _c .Wrapf (_aec ,_cg ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_db );
};_ge ._ae [_cfa ]++;};var _b []int ;for _bc :=0;_bc < _ge .Classer .UndilatedTemplates .Size ();_bc ++{if _ge .NumberOfPages ==1||_ge ._ae [_bc ]> 1{_b =append (_b ,_bc );};};var (_geg *Page ;_dbc bool ;);for _ba ,_fe :=range *_ge .Classer .ComponentPageNumbers {if _geg ,_dbc =_ge .Pages [_fe ];
!_dbc {return _c .Errorf (_cg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ba );};if _geg .EncodingMethod ==GenericEM {_ea .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ba );
continue ;};_ge ._eaa [_fe ]=append (_ge ._eaa [_fe ],_ba );_bd ,_eaf :=_ge .Classer .ClassIDs .Get (_ba );if _eaf !=nil {return _c .Wrapf (_eaf ,_cg ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ba );
};if _ge ._ae [_bd ]==1&&_ge .NumberOfPages !=1{_bg :=append (_ge ._ed [_fe ],_bd );_ge ._ed [_fe ]=_bg ;};};if _ef =_ge .Classer .ComputeLLCorners ();_ef !=nil {return _c .Wrap (_ef ,_cg ,"");};if _ ,_ef =_ge .addSymbolDictionary (0,_ge .Classer .UndilatedTemplates ,_b ,_ge ._da ,false );
_ef !=nil {return _c .Wrap (_ef ,_cg ,"");};return nil ;};func (_ebc *Page )String ()string {return _g .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_ebc .PageNumber );};func (_dae *Page )getPageInformationSegment ()*_gg .Header {for _ ,_caff :=range _dae .Segments {if _caff .Type ==_gg .TPageInformation {return _caff ;
};};_ea .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_dae );
return nil ;};func (_fbdb *Page )GetResolutionY ()(int ,error ){return _fbdb .getResolutionY ()};func (_dc *Document )AddGenericPage (bm *_f .Bitmap ,duplicateLineRemoval bool )(_cbe error ){const _fd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_dc .FullHeaders &&_dc .NumberOfPages !=0{return _c .Error (_fd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ff :=&Page {Segments :[]*_gg .Header {},Bitmap :bm ,Document :_dc ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_f .Chocolate };_ff .PageNumber =int (_dc .nextPageNumber ());_dc .Pages [_ff .PageNumber ]=_ff ;
bm .InverseData ();_ff .AddPageInformationSegment ();if _cbe =_ff .AddGenericRegion (bm ,0,0,0,_gg .TImmediateGenericRegion ,duplicateLineRemoval );_cbe !=nil {return _c .Wrap (_cbe ,_fd ,"");};if _dc .FullHeaders {_ff .AddEndOfPageSegment ();};return nil ;
};func (_bfde *Page )getWidth ()(int ,error ){const _gfdb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bfde .FinalWidth !=0{return _bfde .FinalWidth ,nil ;};_edb :=_bfde .getPageInformationSegment ();if _edb ==nil {return 0,_c .Error (_gfdb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_ege ,_cbb :=_edb .GetSegmentData ();if _cbb !=nil {return 0,_c .Wrap (_cbb ,_gfdb ,"");};_efad ,_faad :=_ege .(*_gg .PageInformationSegment );if !_faad {return 0,_c .Errorf (_gfdb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ege );
};_bfde .FinalWidth =_efad .PageBMWidth ;return _bfde .FinalWidth ,nil ;};func (_dfe *Page )getCombinationOperator (_fcfc *_gg .PageInformationSegment ,_dcdg _f .CombinationOperator )_f .CombinationOperator {if _fcfc .CombinationOperatorOverrideAllowed (){return _dcdg ;
};return _fcfc .CombinationOperator ();};func (_bfag *Document )encodeEOFHeader (_ecf _gd .BinaryWriter )(_gfg int ,_fde error ){_aed :=&_gg .Header {SegmentNumber :_bfag .nextSegmentNumber (),Type :_gg .TEndOfFile };if _gfg ,_fde =_aed .Encode (_ecf );
_fde !=nil {return 0,_c .Wrap (_fde ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _gfg ,nil ;};func (_bb *Document )addSymbolDictionary (_aag int ,_fdga *_f .Bitmaps ,_baa []int ,_ce map[int ]int ,_bffg bool )(*_gg .Header ,error ){const _bbf ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_ec :=&_gg .SymbolDictionary {};if _bcb :=_ec .InitEncode (_fdga ,_baa ,_ce ,_bffg );_bcb !=nil {return nil ,_bcb ;};_egc :=&_gg .Header {Type :_gg .TSymbolDictionary ,PageAssociation :_aag ,SegmentData :_ec };if _aag ==0{if _bb .GlobalSegments ==nil {_bb .GlobalSegments =&Globals {};
};_bb .GlobalSegments .AddSegment (_egc );return _egc ,nil ;};_ac ,_ffc :=_bb .Pages [_aag ];if !_ffc {return nil ,_c .Errorf (_bbf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_aag );};var (_ga int ;
_bfa *_gg .Header ;);for _ga ,_bfa =range _ac .Segments {if _bfa .Type ==_gg .TPageInformation {break ;};};_ga ++;_ac .Segments =append (_ac .Segments ,nil );copy (_ac .Segments [_ga +1:],_ac .Segments [_ga :]);_ac .Segments [_ga ]=_egc ;return _egc ,nil ;
};func (_bcf *Document )Encode ()(_ddc []byte ,_dgc error ){const _gce ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ab ,_fcd int ;if _bcf .FullHeaders {if _ab ,_dgc =_bcf .encodeFileHeader (_bcf ._gda );_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");
};};var (_ead bool ;_cef *_gg .Header ;_acb *Page ;);if _dgc =_bcf .completeClassifiedPages ();_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");};if _dgc =_bcf .produceClassifiedPages ();_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");};if _bcf .GlobalSegments !=nil {for _ ,_cef =range _bcf .GlobalSegments .Segments {if _dgc =_bcf .encodeSegment (_cef ,&_ab );
_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");};};};for _acf :=1;_acf <=int (_bcf .NumberOfPages );_acf ++{if _acb ,_ead =_bcf .Pages [_acf ];!_ead {return nil ,_c .Errorf (_gce ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_acf );
};for _ ,_cef =range _acb .Segments {if _dgc =_bcf .encodeSegment (_cef ,&_ab );_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");};};};if _bcf .FullHeaders {if _fcd ,_dgc =_bcf .encodeEOFHeader (_bcf ._gda );_dgc !=nil {return nil ,_c .Wrap (_dgc ,_gce ,"");
};_ab +=_fcd ;};_ddc =_bcf ._gda .Data ();if len (_ddc )!=_ab {_ea .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_ab ,len (_ddc ));
};return _ddc ,nil ;};func (_cbd *Page )GetHeight ()(int ,error ){return _cbd .getHeight ()};func (_efe *Document )mapData ()error {const _dbf ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_gbe []*_gg .Header ;_fcc int64 ;_ecg _gg .Type ;);_aab ,_eeb :=_efe .isFileHeaderPresent ();
if _eeb !=nil {return _c .Wrap (_eeb ,_dbf ,"");};if _aab {if _eeb =_efe .parseFileHeader ();_eeb !=nil {return _c .Wrap (_eeb ,_dbf ,"");};_fcc +=int64 (_efe ._dg );_efe .FullHeaders =true ;};var (_eab *Page ;_gbc bool ;);for _ecg !=51&&!_gbc {_caf ,_gfc :=_gg .NewHeader (_efe ,_efe .InputStream ,_fcc ,_efe .OrganizationType );
if _gfc !=nil {return _c .Wrap (_gfc ,_dbf ,"");};_ea .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_caf .SegmentNumber ,_caf .Type );
_ecg =_caf .Type ;if _ecg !=_gg .TEndOfFile {if _caf .PageAssociation !=0{_eab =_efe .Pages [_caf .PageAssociation ];if _eab ==nil {_eab =_gcb (_efe ,_caf .PageAssociation );_efe .Pages [_caf .PageAssociation ]=_eab ;if _efe .NumberOfPagesUnknown {_efe .NumberOfPages ++;
};};_eab .Segments =append (_eab .Segments ,_caf );}else {_efe .GlobalSegments .AddSegment (_caf );};};_gbe =append (_gbe ,_caf );_fcc =_efe .InputStream .AbsolutePosition ();if _efe .OrganizationType ==_gg .OSequential {_fcc +=int64 (_caf .SegmentDataLength );
};_gbc ,_gfc =_efe .reachedEOF (_fcc );if _gfc !=nil {_ea .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gfc );
return _c .Wrap (_gfc ,_dbf ,"");};};_efe .determineRandomDataOffsets (_gbe ,uint64 (_fcc ));return nil ;};func (_eff *Page )countRegions ()int {var _aecc int ;for _ ,_ede :=range _eff .Segments {switch _ede .Type {case 6,7,22,23,38,39,42,43:_aecc ++;};
};return _aecc ;};func (_eaba *Page )GetBitmap ()(_dbce *_f .Bitmap ,_bda error ){_ea .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_eaba .PageNumber ));
defer func (){if _bda !=nil {_ea .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eaba .PageNumber ,_bda ));
}else {_ea .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_eaba .PageNumber ));};}();if _eaba .Bitmap !=nil {return _eaba .Bitmap ,nil ;
};_bda =_eaba .composePageBitmap ();if _bda !=nil {return nil ,_bda ;};return _eaba .Bitmap ,nil ;};func (_ecc *Page )getResolutionY ()(int ,error ){const _eec ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _ecc .ResolutionY !=0{return _ecc .ResolutionY ,nil ;
};_cgde :=_ecc .getPageInformationSegment ();if _cgde ==nil {return 0,_c .Error (_eec ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gcg ,_bbe :=_cgde .GetSegmentData ();if _bbe !=nil {return 0,_c .Wrap (_bbe ,_eec ,"");
};_gad ,_cbfg :=_gcg .(*_gg .PageInformationSegment );if !_cbfg {return 0,_c .Errorf (_eec ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gcg );
};_ecc .ResolutionY =_gad .ResolutionY ;return _ecc .ResolutionY ,nil ;};func (_bbd *Page )createNormalPage (_fgcb *_gg .PageInformationSegment )error {const _gfa ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_bbd .Bitmap =_f .New (_fgcb .PageBMWidth ,_fgcb .PageBMHeight );if _fgcb .DefaultPixelValue !=0{_bbd .Bitmap .SetDefaultPixel ();};for _ ,_eadd :=range _bbd .Segments {switch _eadd .Type {case 6,7,22,23,38,39,42,43:_ea .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_eadd .SegmentNumber );
_bga ,_fbda :=_eadd .GetSegmentData ();if _fbda !=nil {return _fbda ;};_ddbf ,_fdff :=_bga .(_gg .Regioner );if !_fdff {_ea .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_bga );
return _c .Errorf (_gfa ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bga );
};_gdcg ,_fbda :=_ddbf .GetRegionBitmap ();if _fbda !=nil {return _c .Wrap (_fbda ,_gfa ,"");};if _bbd .fitsPage (_fgcb ,_gdcg ){_bbd .Bitmap =_gdcg ;}else {_dge :=_ddbf .GetRegionInfo ();_bdg :=_bbd .getCombinationOperator (_fgcb ,_dge .CombinaionOperator );
_fbda =_f .Blit (_gdcg ,_bbd .Bitmap ,int (_dge .XLocation ),int (_dge .YLocation ),_bdg );if _fbda !=nil {return _c .Wrap (_fbda ,_gfa ,"");};};};};return nil ;};func (_agd *Document )GetNumberOfPages ()(uint32 ,error ){if _agd .NumberOfPagesUnknown ||_agd .NumberOfPages ==0{if len (_agd .Pages )==0{if _gebb :=_agd .mapData ();
_gebb !=nil {return 0,_c .Wrap (_gebb ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_agd .Pages )),nil ;};return _agd .NumberOfPages ,nil ;};func (_cbg *Document )AddClassifiedPage (bm *_f .Bitmap ,method _gc .Method )(_fg error ){const _df ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_cbg .FullHeaders &&_cbg .NumberOfPages !=0{return _c .Error (_df ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _cbg .Classer ==nil {if _cbg .Classer ,_fg =_gc .Init (_gc .DefaultSettings ());_fg !=nil {return _c .Wrap (_fg ,_df ,"");};};_cf :=int (_cbg .nextPageNumber ());_ad :=&Page {Segments :[]*_gg .Header {},Bitmap :bm ,Document :_cbg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_cf };
_cbg .Pages [_cf ]=_ad ;switch method {case _gc .RankHaus :_ad .EncodingMethod =RankHausEM ;case _gc .Correlation :_ad .EncodingMethod =CorrelationEM ;};_ad .AddPageInformationSegment ();if _fg =_cbg .Classer .AddPage (bm ,_cf ,method );_fg !=nil {return _c .Wrap (_fg ,_df ,"");
};if _cbg .FullHeaders {_ad .AddEndOfPageSegment ();};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cc *Document )produceClassifiedPages ()(_dd error ){const _fgb ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _cc .Classer ==nil {return nil ;};var (_fgc *Page ;_dfa bool ;_ca *_gg .Header ;);for _fc :=1;_fc <=int (_cc .NumberOfPages );_fc ++{if _fgc ,_dfa =_cc .Pages [_fc ];!_dfa {return _c .Errorf (_fgb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fc );
};if _fgc .EncodingMethod ==GenericEM {continue ;};if _ca ==nil {if _ca ,_dd =_cc .GlobalSegments .GetSymbolDictionary ();_dd !=nil {return _c .Wrap (_dd ,_fgb ,"");};};if _dd =_cc .produceClassifiedPage (_fgc ,_ca );_dd !=nil {return _c .Wrapf (_dd ,_fgb ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_fc );
};};return nil ;};func (_cbf *Page )GetSegment (number int )(*_gg .Header ,error ){const _dcf ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_cfg :=range _cbf .Segments {if _cfg .SegmentNumber ==uint32 (number ){return _cfg ,nil ;
};};_fcdd :=make ([]uint32 ,len (_cbf .Segments ));for _cfgg ,_fca :=range _cbf .Segments {_fcdd [_cfgg ]=_fca .SegmentNumber ;};return nil ,_c .Errorf (_dcf ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_cbf .PageNumber ,_fcdd );
};func (_af *Document )determineRandomDataOffsets (_cab []*_gg .Header ,_dcc uint64 ){if _af .OrganizationType !=_gg .ORandom {return ;};for _ ,_fa :=range _cab {_fa .SegmentDataStartOffset =_dcc ;_dcc +=_fa .SegmentDataLength ;};};func (_fadc *Page )fitsPage (_cfgf *_gg .PageInformationSegment ,_cebc *_f .Bitmap )bool {return _fadc .countRegions ()==1&&_cfgf .DefaultPixelValue ==0&&_cfgf .PageBMWidth ==_cebc .Width &&_cfgf .PageBMHeight ==_cebc .Height ;
};var _d =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_gdf *Document )isFileHeaderPresent ()(bool ,error ){_gdf .InputStream .Mark ();for _ ,_gbg :=range _d {_gfb ,_gab :=_gdf .InputStream .ReadByte ();if _gab !=nil {return false ,_gab ;};if _gbg !=_gfb {_gdf .InputStream .Reset ();
return false ,nil ;};};_gdf .InputStream .Reset ();return true ,nil ;};func _gcb (_fafg *Document ,_eae int )*Page {return &Page {Document :_fafg ,PageNumber :_eae ,Segments :[]*_gg .Header {}};};type EncodingMethod int ;func (_bfcd *Page )getResolutionX ()(int ,error ){const _dbd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _bfcd .ResolutionX !=0{return _bfcd .ResolutionX ,nil ;};_dgca :=_bfcd .getPageInformationSegment ();if _dgca ==nil {return 0,_c .Error (_dbd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bfdec ,_gge :=_dgca .GetSegmentData ();
if _gge !=nil {return 0,_c .Wrap (_gge ,_dbd ,"");};_fgcbe ,_bceb :=_bfdec .(*_gg .PageInformationSegment );if !_bceb {return 0,_c .Errorf (_dbd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bfdec );
};_bfcd .ResolutionX =_fgcbe .ResolutionX ;return _bfcd .ResolutionX ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_gda :_gd .BufferedMSB (),Pages :map[int ]*Page {},_ed :map[int ][]int {},_da :map[int ]int {},_eaa :map[int ][]int {}};
};func (_ddba *Document )encodeSegment (_gcc *_gg .Header ,_abe *int )error {const _bad ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_gcc .SegmentNumber =_ddba .nextSegmentNumber ();_fdd ,_fea :=_gcc .Encode (_ddba ._gda );
if _fea !=nil {return _c .Wrapf (_fea ,_bad ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gcc .SegmentNumber );};*_abe +=_fdd ;return nil ;};func (_bdb *Document )parseFileHeader ()error {const _dgb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_gdgb :=_bdb .InputStream .Seek (8,_eba .SeekStart );if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u0069\u0064");};_ ,_gdgb =_bdb .InputStream .ReadBits (5);if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_dgba ,_gdgb :=_bdb .InputStream .ReadBit ();if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _dgba ==1{_bdb .GBUseExtTemplate =true ;};_dgba ,_gdgb =_bdb .InputStream .ReadBit ();
if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _dgba !=1{_bdb .NumberOfPagesUnknown =false ;};_dgba ,_gdgb =_bdb .InputStream .ReadBit ();if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_bdb .OrganizationType =_gg .OrganizationType (_dgba );if !_bdb .NumberOfPagesUnknown {_bdb .NumberOfPages ,_gdgb =_bdb .InputStream .ReadUint32 ();if _gdgb !=nil {return _c .Wrap (_gdgb ,_dgb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_bdb ._dg =13;};return nil ;};func (_afc *Document )encodeFileHeader (_fbf _gd .BinaryWriter )(_afb int ,_fag error ){const _fagf ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_afb ,_fag =_fbf .Write (_d );
if _fag !=nil {return _afb ,_c .Wrap (_fag ,_fagf ,"\u0069\u0064");};if _fag =_fbf .WriteByte (0x01);_fag !=nil {return _afb ,_c .Wrap (_fag ,_fagf ,"\u0066\u006c\u0061g\u0073");};_afb ++;_gcf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gcf ,_afc .NumberOfPages );
_abeg ,_fag :=_fbf .Write (_gcf );if _fag !=nil {return _abeg ,_c .Wrap (_fag ,_fagf ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afb +=_abeg ;return _afb ,nil ;};func (_fcf *Page )collectPageStripes ()(_acbg []_gg .Segmenter ,_gac error ){const _aedf ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _fge _gg .Segmenter ;for _ ,_aga :=range _fcf .Segments {switch _aga .Type {case 6,7,22,23,38,39,42,43:_fge ,_gac =_aga .GetSegmentData ();if _gac !=nil {return nil ,_c .Wrap (_gac ,_aedf ,"");};_acbg =append (_acbg ,_fge );case 50:_fge ,_gac =_aga .GetSegmentData ();
if _gac !=nil {return nil ,_gac ;};_dccf ,_ccb :=_fge .(*_gg .EndOfStripe );if !_ccb {return nil ,_c .Errorf (_aedf ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_fge );
};_acbg =append (_acbg ,_dccf );_fcf .FinalHeight =_dccf .LineNumber ();};};return _acbg ,nil ;};func (_gdag *Document )GetPage (pageNumber int )(_gg .Pager ,error ){const _ebe ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_ea .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_ag .Stack ());
return nil ,_c .Errorf (_ebe ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_gdag .Pages ){_ea .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ag .Stack ());return nil ,_c .Error (_ebe ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_daa ,_fee :=_gdag .Pages [pageNumber ];if !_fee {_ea .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ag .Stack ());return nil ,_c .Errorf (_ebe ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _daa ,nil ;};func _bff (_gdab int )int {_fgcg :=0;_ggg :=(_gdab &(_gdab -1))==0;_gdab >>=1;for ;_gdab !=0;_gdab >>=1{_fgcg ++;};if _ggg {return _fgcg ;};return _fgcg +1;};func (_bge *Page )lastSegmentNumber ()(_gdd uint32 ,_gdfd error ){const _gcec ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_bge .Segments )==0{return _gdd ,_c .Errorf (_gcec ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bge .PageNumber );
};return _bge .Segments [len (_bge .Segments )-1].SegmentNumber ,nil ;};func (_cfe *Page )AddGenericRegion (bm *_f .Bitmap ,xloc ,yloc ,template int ,tp _gg .Type ,duplicateLineRemoval bool )error {const _eceb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_fbd :=&_gg .GenericRegion {};if _cgd :=_fbd .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_cgd !=nil {return _c .Wrap (_cgd ,_eceb ,"");};_cafb :=&_gg .Header {Type :_gg .TImmediateGenericRegion ,PageAssociation :_cfe .PageNumber ,SegmentData :_fbd };
_cfe .Segments =append (_cfe .Segments ,_cafb );return nil ;};func (_dde *Page )composePageBitmap ()error {const _ecgb ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _dde .PageNumber ==0{return nil ;
};_dce :=_dde .getPageInformationSegment ();if _dce ==nil {return _c .Error (_ecgb ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cee ,_gabe :=_dce .GetSegmentData ();if _gabe !=nil {return _gabe ;};_dbg ,_fgbc :=_cee .(*_gg .PageInformationSegment );if !_fgbc {return _c .Error (_ecgb ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _gabe =_dde .createPage (_dbg );_gabe !=nil {return _c .Wrap (_gabe ,_ecgb ,"");};_dde .clearSegmentData ();return nil ;};func (_ffb *Document )GetGlobalSegment (i int )(*_gg .Header ,error ){_ggb ,_gfe :=_ffb .GlobalSegments .GetSegment (i );if _gfe !=nil {return nil ,_c .Wrap (_gfe ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _ggb ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_gd .Reader ;GlobalSegments *Globals ;OrganizationType _gg .OrganizationType ;Classer *_gc .Classer ;XRes ,YRes int ;
FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_f .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_dg uint8 ;_gda *_gd .BufferedWriter ;EncodeGlobals bool ;_cb int ;_ed map[int ][]int ;_eaa map[int ][]int ;_ae []int ;_da map[int ]int ;
};func _fbfc (_cec *_gd .Reader ,_faf *Globals )(*Document ,error ){_egcf :=&Document {Pages :make (map[int ]*Page ),InputStream :_cec ,OrganizationType :_gg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_faf ,_dg :9};if _egcf .GlobalSegments ==nil {_egcf .GlobalSegments =&Globals {};
};if _dbfc :=_egcf .mapData ();_dbfc !=nil {return nil ,_dbfc ;};return _egcf ,nil ;};func (_fab *Page )AddEndOfPageSegment (){_dcad :=&_gg .Header {Type :_gg .TEndOfPage ,PageAssociation :_fab .PageNumber };_fab .Segments =append (_fab .Segments ,_dcad );
};func (_gdgbd *Document )reachedEOF (_dcge int64 )(bool ,error ){const _badg ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_aega :=_gdgbd .InputStream .Seek (_dcge ,_eba .SeekStart );if _aega !=nil {_ea .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aega );
return false ,_c .Wrap (_aega ,_badg ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_aega =_gdgbd .InputStream .ReadBits (32);if _aega ==_eba .EOF {return true ,nil ;
}else if _aega !=nil {return false ,_c .Wrap (_aega ,_badg ,"");};return false ,nil ;};func (_dgf *Page )createPage (_gdgda *_gg .PageInformationSegment )error {var _ecga error ;if !_gdgda .IsStripe ||_gdgda .PageBMHeight !=-1{_ecga =_dgf .createNormalPage (_gdgda );
}else {_ecga =_dgf .createStripedPage (_gdgda );};return _ecga ;};func (_cccd *Page )getHeight ()(int ,error ){const _ffd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _cccd .FinalHeight !=0{return _cccd .FinalHeight ,nil ;};_bfcb :=_cccd .getPageInformationSegment ();
if _bfcb ==nil {return 0,_c .Error (_ffd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_efbe ,_aeeg :=_bfcb .GetSegmentData ();if _aeeg !=nil {return 0,_c .Wrap (_aeeg ,_ffd ,"");};_fadf ,_gfbbd :=_efbe .(*_gg .PageInformationSegment );
if !_gfbbd {return 0,_c .Errorf (_ffd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_efbe );
};if _fadf .PageBMHeight ==_eb .MaxInt32 {_ ,_aeeg =_cccd .GetBitmap ();if _aeeg !=nil {return 0,_c .Wrap (_aeeg ,_ffd ,"");};}else {_cccd .FinalHeight =_fadf .PageBMHeight ;};return _cccd .FinalHeight ,nil ;};func (_be *Page )GetResolutionX ()(int ,error ){return _be .getResolutionX ()};
func (_cefg *Page )AddPageInformationSegment (){_dcca :=&_gg .PageInformationSegment {PageBMWidth :_cefg .FinalWidth ,PageBMHeight :_cefg .FinalHeight ,ResolutionX :_cefg .ResolutionX ,ResolutionY :_cefg .ResolutionY ,IsLossless :_cefg .IsLossless };if _cefg .BlackIsOne {_dcca .DefaultPixelValue =uint8 (0x1);
};_gdgd :=&_gg .Header {PageAssociation :_cefg .PageNumber ,SegmentDataLength :uint64 (_dcca .Size ()),SegmentData :_dcca ,Type :_gg .TPageInformation };_cefg .Segments =append (_cefg .Segments ,_gdgd );};func (_dfd *Page )nextSegmentNumber ()uint32 {return _dfd .Document .nextSegmentNumber ()};
func (_adb *Globals )GetSymbolDictionary ()(*_gg .Header ,error ){const _bab ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _adb ==nil {return nil ,_c .Error (_bab ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_adb .Segments )==0{return nil ,_c .Error (_bab ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_gaa :=range _adb .Segments {if _gaa .Type ==_gg .TSymbolDictionary {return _gaa ,nil ;
};};return nil ,_c .Error (_bab ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_ceb *Page )createStripedPage (_aedd *_gg .PageInformationSegment )error {const _bfd ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_bcg ,_fad :=_ceb .collectPageStripes ();if _fad !=nil {return _c .Wrap (_fad ,_bfd ,"");};var _bae int ;for _ ,_agg :=range _bcg {if _dcbf ,_gfd :=_agg .(*_gg .EndOfStripe );_gfd {_bae =_dcbf .LineNumber ()+1;}else {_bfe :=_agg .(_gg .Regioner );_dcd :=_bfe .GetRegionInfo ();
_eafc :=_ceb .getCombinationOperator (_aedd ,_dcd .CombinaionOperator );_dgfe ,_dad :=_bfe .GetRegionBitmap ();if _dad !=nil {return _c .Wrap (_dad ,_bfd ,"");};_dad =_f .Blit (_dgfe ,_ceb .Bitmap ,int (_dcd .XLocation ),_bae ,_eafc );if _dad !=nil {return _c .Wrap (_dad ,_bfd ,"");
};};};return nil ;};func (_gfbb *Globals )AddSegment (segment *_gg .Header ){_gfbb .Segments =append (_gfbb .Segments ,segment );};