//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_cb "encoding/binary";_b "fmt";_d "github.com/unidoc/unipdf/v3/common";_db "github.com/unidoc/unipdf/v3/internal/bitwise";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dbc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_dba "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_a "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bd "io";_e "math";_ef "runtime/debug";);func _dgf (_addf *Document ,_dda int )*Page {return &Page {Document :_addf ,PageNumber :_dda ,Segments :[]*_dba .Header {}};
};func (_eadd *Document )encodeFileHeader (_bag _db .BinaryWriter )(_fbe int ,_cedg error ){const _dad ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fbe ,_cedg =_bag .Write (_efd );if _cedg !=nil {return _fbe ,_dc .Wrap (_cedg ,_dad ,"\u0069\u0064");
};if _cedg =_bag .WriteByte (0x01);_cedg !=nil {return _fbe ,_dc .Wrap (_cedg ,_dad ,"\u0066\u006c\u0061g\u0073");};_fbe ++;_gea :=make ([]byte ,4);_cb .BigEndian .PutUint32 (_gea ,_eadd .NumberOfPages );_bge ,_cedg :=_bag .Write (_gea );if _cedg !=nil {return _bge ,_dc .Wrap (_cedg ,_dad ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_fbe +=_bge ;return _fbe ,nil ;};type Globals struct{Segments []*_dba .Header ;};func (_cdc *Page )AddPageInformationSegment (){_bcb :=&_dba .PageInformationSegment {PageBMWidth :_cdc .FinalWidth ,PageBMHeight :_cdc .FinalHeight ,ResolutionX :_cdc .ResolutionX ,ResolutionY :_cdc .ResolutionY ,IsLossless :_cdc .IsLossless };
if _cdc .BlackIsOne {_bcb .DefaultPixelValue =uint8 (0x1);};_cgef :=&_dba .Header {PageAssociation :_cdc .PageNumber ,SegmentDataLength :uint64 (_bcb .Size ()),SegmentData :_bcb ,Type :_dba .TPageInformation };_cdc .Segments =append (_cdc .Segments ,_cgef );
};func (_caba *Page )getHeight ()(int ,error ){const _aggcd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _caba .FinalHeight !=0{return _caba .FinalHeight ,nil ;};_bgb :=_caba .getPageInformationSegment ();if _bgb ==nil {return 0,_dc .Error (_aggcd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_gddd ,_dade :=_bgb .GetSegmentData ();if _dade !=nil {return 0,_dc .Wrap (_dade ,_aggcd ,"");};_fgcf ,_bfag :=_gddd .(*_dba .PageInformationSegment );if !_bfag {return 0,_dc .Errorf (_aggcd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gddd );
};if _fgcf .PageBMHeight ==_e .MaxInt32 {_ ,_dade =_caba .GetBitmap ();if _dade !=nil {return 0,_dc .Wrap (_dade ,_aggcd ,"");};}else {_caba .FinalHeight =_fgcf .PageBMHeight ;};return _caba .FinalHeight ,nil ;};func (_gg *Document )GetGlobalSegment (i int )(*_dba .Header ,error ){_be ,_gba :=_gg .GlobalSegments .GetSegment (i );
if _gba !=nil {return nil ,_dc .Wrap (_gba ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _be ,nil ;};type EncodingMethod int ;func _bcf (_eb int )int {_fc :=0;_ebb :=(_eb &(_eb -1))==0;_eb >>=1;for ;
_eb !=0;_eb >>=1{_fc ++;};if _ebb {return _fc ;};return _fc +1;};func (_fge *Page )createStripedPage (_fgca *_dba .PageInformationSegment )error {const _caa ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_fgcg ,_ddg :=_fge .collectPageStripes ();if _ddg !=nil {return _dc .Wrap (_ddg ,_caa ,"");};var _cedf int ;for _ ,_ebf :=range _fgcg {if _bab ,_efb :=_ebf .(*_dba .EndOfStripe );_efb {_cedf =_bab .LineNumber ()+1;}else {_dfcg :=_ebf .(_dba .Regioner );
_gfc :=_dfcg .GetRegionInfo ();_bcbe :=_fge .getCombinationOperator (_fgca ,_gfc .CombinaionOperator );_fcc ,_dage :=_dfcg .GetRegionBitmap ();if _dage !=nil {return _dc .Wrap (_dage ,_caa ,"");};_dage =_dbc .Blit (_fcc ,_fge .Bitmap ,int (_gfc .XLocation ),_cedf ,_bcbe );
if _dage !=nil {return _dc .Wrap (_dage ,_caa ,"");};};};return nil ;};func (_deg *Page )composePageBitmap ()error {const _aab ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _deg .PageNumber ==0{return nil ;
};_dcf :=_deg .getPageInformationSegment ();if _dcf ==nil {return _dc .Error (_aab ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gbaf ,_ffd :=_dcf .GetSegmentData ();if _ffd !=nil {return _ffd ;};_fca ,_fae :=_gbaf .(*_dba .PageInformationSegment );if !_fae {return _dc .Error (_aab ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _ffd =_deg .createPage (_fca );_ffd !=nil {return _dc .Wrap (_ffd ,_aab ,"");};_deg .clearSegmentData ();return nil ;};func (_gabf *Page )String ()string {return _b .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_gabf .PageNumber );};
func (_add *Document )encodeSegment (_cbc *_dba .Header ,_dfg *int )error {const _ded ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_cbc .SegmentNumber =_add .nextSegmentNumber ();_dgd ,_fg :=_cbc .Encode (_add ._f );
if _fg !=nil {return _dc .Wrapf (_fg ,_ded ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cbc .SegmentNumber );};*_dfg +=_dgd ;return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;
GBUseExtTemplate bool ;InputStream *_db .Reader ;GlobalSegments *Globals ;OrganizationType _dba .OrganizationType ;Classer *_a .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_dbc .Bitmaps ;BaseIndexes []int ;
Refinement bool ;RefineLevel int ;_aa uint8 ;_f *_db .BufferedWriter ;EncodeGlobals bool ;_dbg int ;_ce map[int ][]int ;_cf map[int ][]int ;_fe []int ;_gb map[int ]int ;};func (_gac *Page )countRegions ()int {var _gec int ;for _ ,_gae :=range _gac .Segments {switch _gae .Type {case 6,7,22,23,38,39,42,43:_gec ++;
};};return _gec ;};func (_bbg *Page )GetHeight ()(int ,error ){return _bbg .getHeight ()};func (_aggc *Page )GetResolutionX ()(int ,error ){return _aggc .getResolutionX ()};func _bdfd (_dgdb *_db .Reader ,_agad *Globals )(*Document ,error ){_cea :=&Document {Pages :make (map[int ]*Page ),InputStream :_dgdb ,OrganizationType :_dba .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_agad ,_aa :9};
if _cea .GlobalSegments ==nil {_cea .GlobalSegments =&Globals {};};if _dfe :=_cea .mapData ();_dfe !=nil {return nil ,_dfe ;};return _cea ,nil ;};func (_aac *Document )GetNumberOfPages ()(uint32 ,error ){if _aac .NumberOfPagesUnknown ||_aac .NumberOfPages ==0{if len (_aac .Pages )==0{if _daa :=_aac .mapData ();
_daa !=nil {return 0,_dc .Wrap (_daa ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_aac .Pages )),nil ;};return _aac .NumberOfPages ,nil ;};func (_eaae *Document )encodeEOFHeader (_gdg _db .BinaryWriter )(_aag int ,_gce error ){_feed :=&_dba .Header {SegmentNumber :_eaae .nextSegmentNumber (),Type :_dba .TEndOfFile };
if _aag ,_gce =_feed .Encode (_gdg );_gce !=nil {return 0,_dc .Wrap (_gce ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _aag ,nil ;};func (_cab *Globals )GetSymbolDictionary ()(*_dba .Header ,error ){const _ede ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _cab ==nil {return nil ,_dc .Error (_ede ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cab .Segments )==0{return nil ,_dc .Error (_ede ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_ddce :=range _cab .Segments {if _ddce .Type ==_dba .TSymbolDictionary {return _ddce ,nil ;};};return nil ,_dc .Error (_ede ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_gdge *Document )isFileHeaderPresent ()(bool ,error ){_gdge .InputStream .Mark ();for _ ,_dbdf :=range _efd {_aga ,_dfc :=_gdge .InputStream .ReadByte ();if _dfc !=nil {return false ,_dfc ;};if _dbdf !=_aga {_gdge .InputStream .Reset ();return false ,nil ;
};};_gdge .InputStream .Reset ();return true ,nil ;};func (_cac *Document )nextSegmentNumber ()uint32 {_acg :=_cac .CurrentSegmentNumber ;_cac .CurrentSegmentNumber ++;return _acg ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_aefa *Page )AddEndOfPageSegment (){_fgf :=&_dba .Header {Type :_dba .TEndOfPage ,PageAssociation :_aefa .PageNumber };
_aefa .Segments =append (_aefa .Segments ,_fgf );};func (_aff *Document )nextPageNumber ()uint32 {_aff .NumberOfPages ++;return _aff .NumberOfPages };func (_ecg *Page )GetSegment (number int )(*_dba .Header ,error ){const _eba ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_dgdc :=range _ecg .Segments {if _dgdc .SegmentNumber ==uint32 (number ){return _dgdc ,nil ;};};_fec :=make ([]uint32 ,len (_ecg .Segments ));for _eef ,_caee :=range _ecg .Segments {_fec [_eef ]=_caee .SegmentNumber ;};return nil ,_dc .Errorf (_eba ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ecg .PageNumber ,_fec );
};func (_bdf *Document )produceClassifiedPages ()(_ea error ){const _cda ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _bdf .Classer ==nil {return nil ;};var (_fdd *Page ;_da bool ;
_fad *_dba .Header ;);for _dbf :=1;_dbf <=int (_bdf .NumberOfPages );_dbf ++{if _fdd ,_da =_bdf .Pages [_dbf ];!_da {return _dc .Errorf (_cda ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbf );};if _fdd .EncodingMethod ==GenericEM {continue ;
};if _fad ==nil {if _fad ,_ea =_bdf .GlobalSegments .GetSymbolDictionary ();_ea !=nil {return _dc .Wrap (_ea ,_cda ,"");};};if _ea =_bdf .produceClassifiedPage (_fdd ,_fad );_ea !=nil {return _dc .Wrapf (_ea ,_cda ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_dbf );
};};return nil ;};func (_deda *Page )addTextRegionSegment (_acd []*_dba .Header ,_beb ,_cga map[int ]int ,_fff []int ,_ege *_dbc .Points ,_geg *_dbc .Bitmaps ,_gbdb *_g .IntSlice ,_aed *_dbc .Boxes ,_cbf ,_bebe int ){_abb :=&_dba .TextRegion {NumberOfSymbols :uint32 (_bebe )};
_abb .InitEncode (_beb ,_cga ,_fff ,_ege ,_geg ,_gbdb ,_aed ,_deda .FinalWidth ,_deda .FinalHeight ,_cbf );_ecbf :=&_dba .Header {RTSegments :_acd ,SegmentData :_abb ,PageAssociation :_deda .PageNumber ,Type :_dba .TImmediateTextRegion };_cde :=_dba .TPageInformation ;
if _cga !=nil {_cde =_dba .TSymbolDictionary ;};var _bcg int ;for ;_bcg < len (_deda .Segments );_bcg ++{if _deda .Segments [_bcg ].Type ==_cde {_bcg ++;break ;};};_deda .Segments =append (_deda .Segments ,nil );copy (_deda .Segments [_bcg +1:],_deda .Segments [_bcg :]);
_deda .Segments [_bcg ]=_ecbf ;};func (_gcf *Document )parseFileHeader ()error {const _bbe ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_bca :=_gcf .InputStream .Seek (8,_bd .SeekStart );if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u0069\u0064");
};_ ,_bca =_gcf .InputStream .ReadBits (5);if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_gab ,_bca :=_gcf .InputStream .ReadBit ();if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _gab ==1{_gcf .GBUseExtTemplate =true ;};_gab ,_bca =_gcf .InputStream .ReadBit ();if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _gab !=1{_gcf .NumberOfPagesUnknown =false ;
};_gab ,_bca =_gcf .InputStream .ReadBit ();if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_gcf .OrganizationType =_dba .OrganizationType (_gab );if !_gcf .NumberOfPagesUnknown {_gcf .NumberOfPages ,_bca =_gcf .InputStream .ReadUint32 ();
if _bca !=nil {return _dc .Wrap (_bca ,_bbe ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_gcf ._aa =13;};return nil ;};func (_gdc *Page )collectPageStripes ()(_dbcb []_dba .Segmenter ,_cce error ){const _bcfc ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _ecd _dba .Segmenter ;for _ ,_efa :=range _gdc .Segments {switch _efa .Type {case 6,7,22,23,38,39,42,43:_ecd ,_cce =_efa .GetSegmentData ();if _cce !=nil {return nil ,_dc .Wrap (_cce ,_bcfc ,"");};_dbcb =append (_dbcb ,_ecd );case 50:_ecd ,_cce =_efa .GetSegmentData ();
if _cce !=nil {return nil ,_cce ;};_ega ,_gbeg :=_ecd .(*_dba .EndOfStripe );if !_gbeg {return nil ,_dc .Errorf (_bcfc ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ecd );
};_dbcb =append (_dbcb ,_ega );_gdc .FinalHeight =_ega .LineNumber ();};};return _dbcb ,nil ;};func (_fbd *Document )mapData ()error {const _ceb ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_fde []*_dba .Header ;_ecb int64 ;_adb _dba .Type ;);_ade ,_aaf :=_fbd .isFileHeaderPresent ();
if _aaf !=nil {return _dc .Wrap (_aaf ,_ceb ,"");};if _ade {if _aaf =_fbd .parseFileHeader ();_aaf !=nil {return _dc .Wrap (_aaf ,_ceb ,"");};_ecb +=int64 (_fbd ._aa );_fbd .FullHeaders =true ;};var (_cae *Page ;_fbfg bool ;);for _adb !=51&&!_fbfg {_ddb ,_ee :=_dba .NewHeader (_fbd ,_fbd .InputStream ,_ecb ,_fbd .OrganizationType );
if _ee !=nil {return _dc .Wrap (_ee ,_ceb ,"");};_d .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ddb .SegmentNumber ,_ddb .Type );
_adb =_ddb .Type ;if _adb !=_dba .TEndOfFile {if _ddb .PageAssociation !=0{_cae =_fbd .Pages [_ddb .PageAssociation ];if _cae ==nil {_cae =_dgf (_fbd ,_ddb .PageAssociation );_fbd .Pages [_ddb .PageAssociation ]=_cae ;if _fbd .NumberOfPagesUnknown {_fbd .NumberOfPages ++;
};};_cae .Segments =append (_cae .Segments ,_ddb );}else {_fbd .GlobalSegments .AddSegment (_ddb );};};_fde =append (_fde ,_ddb );_ecb =_fbd .InputStream .AbsolutePosition ();if _fbd .OrganizationType ==_dba .OSequential {_ecb +=int64 (_ddb .SegmentDataLength );
};_fbfg ,_ee =_fbd .reachedEOF (_ecb );if _ee !=nil {_d .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ee );
return _dc .Wrap (_ee ,_ceb ,"");};};_fbd .determineRandomDataOffsets (_fde ,uint64 (_ecb ));return nil ;};func (_fdcg *Page )AddGenericRegion (bm *_dbc .Bitmap ,xloc ,yloc ,template int ,tp _dba .Type ,duplicateLineRemoval bool )error {const _bda ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_fgc :=&_dba .GenericRegion {};if _caed :=_fgc .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_caed !=nil {return _dc .Wrap (_caed ,_bda ,"");};_bbd :=&_dba .Header {Type :_dba .TImmediateGenericRegion ,PageAssociation :_fdcg .PageNumber ,SegmentData :_fgc };
_fdcg .Segments =append (_fdcg .Segments ,_bbd );return nil ;};func (_ge *Document )completeSymbols ()(_bgf error ){const _cdb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _ge .Classer ==nil {return nil ;};if _ge .Classer .UndilatedTemplates ==nil {return _dc .Error (_cdb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_ca :=len (_ge .Pages )==1;_fbf :=make ([]int ,_ge .Classer .UndilatedTemplates .Size ());var _ab int ;for _cge :=0;_cge < _ge .Classer .ClassIDs .Size ();_cge ++{_ab ,_bgf =_ge .Classer .ClassIDs .Get (_cge );if _bgf !=nil {return _dc .Wrap (_bgf ,_cdb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_fbf [_ab ]++;};var _ag []int ;for _agc :=0;_agc < _ge .Classer .UndilatedTemplates .Size ();_agc ++{if _fbf [_agc ]==0{return _dc .Error (_cdb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _fbf [_agc ]> 1||_ca {_ag =append (_ag ,_agc );};};_ge ._dbg =len (_ag );var _ddc ,_aef int ;for _ced :=0;_ced < _ge .Classer .ComponentPageNumbers .Size ();_ced ++{_ddc ,_bgf =_ge .Classer .ComponentPageNumbers .Get (_ced );if _bgf !=nil {return _dc .Wrapf (_bgf ,_cdb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_ced );
};_aef ,_bgf =_ge .Classer .ClassIDs .Get (_ced );if _bgf !=nil {return _dc .Wrapf (_bgf ,_cdb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ddc );
};if _fbf [_aef ]==1&&!_ca {_ge ._ce [_ddc ]=append (_ge ._ce [_ddc ],_aef );};};if _bgf =_ge .Classer .ComputeLLCorners ();_bgf !=nil {return _dc .Wrap (_bgf ,_cdb ,"");};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_f :_db .BufferedMSB (),Pages :map[int ]*Page {},_ce :map[int ][]int {},_gb :map[int ]int {},_cf :map[int ][]int {}};
};func DecodeDocument (input *_db .Reader ,globals *Globals )(*Document ,error ){return _bdfd (input ,globals );};func (_bcfd *Page )clearSegmentData (){for _ceae :=range _bcfd .Segments {_bcfd .Segments [_ceae ].CleanSegmentData ();};};func (_afb *Globals )GetSegment (segmentNumber int )(*_dba .Header ,error ){const _gcef ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _afb ==nil {return nil ,_dc .Error (_gcef ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_afb .Segments )==0{return nil ,_dc .Error (_gcef ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _fgd *_dba .Header ;for _ ,_fgd =range _afb .Segments {if _fgd .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _fgd ==nil {return nil ,_dc .Error (_gcef ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fgd ,nil ;};func (_bbf *Page )getResolutionY ()(int ,error ){const _fcac ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _bbf .ResolutionY !=0{return _bbf .ResolutionY ,nil ;};_fea :=_bbf .getPageInformationSegment ();
if _fea ==nil {return 0,_dc .Error (_fcac ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bgfb ,_cgf :=_fea .GetSegmentData ();if _cgf !=nil {return 0,_dc .Wrap (_cgf ,_fcac ,"");};_efff ,_edfd :=_bgfb .(*_dba .PageInformationSegment );
if !_edfd {return 0,_dc .Errorf (_fcac ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_bgfb );
};_bbf .ResolutionY =_efff .ResolutionY ;return _bbf .ResolutionY ,nil ;};func (_abbc *Page )GetBitmap ()(_bea *_dbc .Bitmap ,_addg error ){_d .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_abbc .PageNumber ));
defer func (){if _addg !=nil {_d .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_abbc .PageNumber ,_addg ));
}else {_d .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_abbc .PageNumber ));};}();if _abbc .Bitmap !=nil {return _abbc .Bitmap ,nil ;
};_addg =_abbc .composePageBitmap ();if _addg !=nil {return nil ,_addg ;};return _abbc .Bitmap ,nil ;};func (_cabf *Page )getResolutionX ()(int ,error ){const _ggd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _cabf .ResolutionX !=0{return _cabf .ResolutionX ,nil ;
};_cfec :=_cabf .getPageInformationSegment ();if _cfec ==nil {return 0,_dc .Error (_ggd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bcc ,_aabc :=_cfec .GetSegmentData ();if _aabc !=nil {return 0,_dc .Wrap (_aabc ,_ggd ,"");
};_fef ,_adbb :=_bcc .(*_dba .PageInformationSegment );if !_adbb {return 0,_dc .Errorf (_ggd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bcc );
};_cabf .ResolutionX =_fef .ResolutionX ;return _cabf .ResolutionX ,nil ;};var _efd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_gcc *Page )nextSegmentNumber ()uint32 {return _gcc .Document .nextSegmentNumber ()};func (_ggdb *Page )lastSegmentNumber ()(_agb uint32 ,_efc error ){const _cbd ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_ggdb .Segments )==0{return _agb ,_dc .Errorf (_cbd ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_ggdb .PageNumber );
};return _ggdb .Segments [len (_ggdb .Segments )-1].SegmentNumber ,nil ;};func (_beg *Document )reachedEOF (_fbca int64 )(bool ,error ){const _abd ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_addd :=_beg .InputStream .Seek (_fbca ,_bd .SeekStart );
if _addd !=nil {_d .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_addd );
return false ,_dc .Wrap (_addd ,_abd ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_addd =_beg .InputStream .ReadBits (32);if _addd ==_bd .EOF {return true ,nil ;
}else if _addd !=nil {return false ,_dc .Wrap (_addd ,_abd ,"");};return false ,nil ;};func (_feg *Document )Encode ()(_df []byte ,_ed error ){const _dag ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cfc ,_gbca int ;
if _feg .FullHeaders {if _cfc ,_ed =_feg .encodeFileHeader (_feg ._f );_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");};};var (_ace bool ;_cdf *_dba .Header ;_bfe *Page ;);if _ed =_feg .completeClassifiedPages ();_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");
};if _ed =_feg .produceClassifiedPages ();_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");};if _feg .GlobalSegments !=nil {for _ ,_cdf =range _feg .GlobalSegments .Segments {if _ed =_feg .encodeSegment (_cdf ,&_cfc );_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");
};};};for _dbaf :=1;_dbaf <=int (_feg .NumberOfPages );_dbaf ++{if _bfe ,_ace =_feg .Pages [_dbaf ];!_ace {return nil ,_dc .Errorf (_dag ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbaf );};for _ ,_cdf =range _bfe .Segments {if _ed =_feg .encodeSegment (_cdf ,&_cfc );
_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");};};};if _feg .FullHeaders {if _gbca ,_ed =_feg .encodeEOFHeader (_feg ._f );_ed !=nil {return nil ,_dc .Wrap (_ed ,_dag ,"");};_cfc +=_gbca ;};_df =_feg ._f .Data ();if len (_df )!=_cfc {_d .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cfc ,len (_df ));
};return _df ,nil ;};func (_eca *Page )GetWidth ()(int ,error ){return _eca .getWidth ()};func (_ccb *Page )createNormalPage (_daac *_dba .PageInformationSegment )error {const _fdee ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_ccb .Bitmap =_dbc .New (_daac .PageBMWidth ,_daac .PageBMHeight );if _daac .DefaultPixelValue !=0{_ccb .Bitmap .SetDefaultPixel ();};for _ ,_aace :=range _ccb .Segments {switch _aace .Type {case 6,7,22,23,38,39,42,43:_d .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_aace .SegmentNumber );
_fecg ,_dgg :=_aace .GetSegmentData ();if _dgg !=nil {return _dgg ;};_dcfc ,_acb :=_fecg .(_dba .Regioner );if !_acb {_d .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_fecg );
return _dc .Errorf (_fdee ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fecg );
};_ffe ,_dgg :=_dcfc .GetRegionBitmap ();if _dgg !=nil {return _dc .Wrap (_dgg ,_fdee ,"");};if _ccb .fitsPage (_daac ,_ffe ){_ccb .Bitmap =_ffe ;}else {_bfa :=_dcfc .GetRegionInfo ();_ccd :=_ccb .getCombinationOperator (_daac ,_bfa .CombinaionOperator );
_dgg =_dbc .Blit (_ffe ,_ccb .Bitmap ,int (_bfa .XLocation ),int (_bfa .YLocation ),_ccd );if _dgg !=nil {return _dc .Wrap (_dgg ,_fdee ,"");};};};};return nil ;};func (_dfb *Page )fitsPage (_cbg *_dba .PageInformationSegment ,_gdcd *_dbc .Bitmap )bool {return _dfb .countRegions ()==1&&_cbg .DefaultPixelValue ==0&&_cbg .PageBMWidth ==_gdcd .Width &&_cbg .PageBMHeight ==_gdcd .Height ;
};func (_cgd *Globals )GetSegmentByIndex (index int )(*_dba .Header ,error ){const _dff ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _cgd ==nil {return nil ,_dc .Error (_dff ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_cgd .Segments )==0{return nil ,_dc .Error (_dff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_cgd .Segments )-1{return nil ,_dc .Error (_dff ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _cgd .Segments [index ],nil ;};func (_dd *Document )completeClassifiedPages ()(_ff error ){const _cc ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _dd .Classer ==nil {return nil ;
};_dd ._fe =make ([]int ,_dd .Classer .UndilatedTemplates .Size ());for _cg :=0;_cg < _dd .Classer .ClassIDs .Size ();_cg ++{_ad ,_eff :=_dd .Classer .ClassIDs .Get (_cg );if _eff !=nil {return _dc .Wrapf (_eff ,_cc ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cg );
};_dd ._fe [_ad ]++;};var _dg []int ;for _fb :=0;_fb < _dd .Classer .UndilatedTemplates .Size ();_fb ++{if _dd .NumberOfPages ==1||_dd ._fe [_fb ]> 1{_dg =append (_dg ,_fb );};};var (_fd *Page ;_ae bool ;);for _gc ,_dbb :=range *_dd .Classer .ComponentPageNumbers {if _fd ,_ae =_dd .Pages [_dbb ];
!_ae {return _dc .Errorf (_cc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gc );};if _fd .EncodingMethod ==GenericEM {_d .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_gc );
continue ;};_dd ._cf [_dbb ]=append (_dd ._cf [_dbb ],_gc );_fa ,_ga :=_dd .Classer .ClassIDs .Get (_gc );if _ga !=nil {return _dc .Wrapf (_ga ,_cc ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_gc );
};if _dd ._fe [_fa ]==1&&_dd .NumberOfPages !=1{_fdc :=append (_dd ._ce [_dbb ],_fa );_dd ._ce [_dbb ]=_fdc ;};};if _ff =_dd .Classer .ComputeLLCorners ();_ff !=nil {return _dc .Wrap (_ff ,_cc ,"");};if _ ,_ff =_dd .addSymbolDictionary (0,_dd .Classer .UndilatedTemplates ,_dg ,_dd ._gb ,false );
_ff !=nil {return _dc .Wrap (_ff ,_cc ,"");};return nil ;};func (_gf *Document )produceClassifiedPage (_bc *Page ,_cbe *_dba .Header )(_de error ){const _eaa ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _fddb map[int ]int ;_aaa :=_gf ._dbg ;_ceg :=[]*_dba .Header {_cbe };if len (_gf ._ce [_bc .PageNumber ])> 0{_fddb =map[int ]int {};_ec ,_eg :=_gf .addSymbolDictionary (_bc .PageNumber ,_gf .Classer .UndilatedTemplates ,_gf ._ce [_bc .PageNumber ],_fddb ,false );
if _eg !=nil {return _dc .Wrap (_eg ,_eaa ,"");};_ceg =append (_ceg ,_ec );_aaa +=len (_gf ._ce [_bc .PageNumber ]);};_ccg :=_gf ._cf [_bc .PageNumber ];_d .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_bc .PageNumber ,_ccg );
_bc .addTextRegionSegment (_ceg ,_gf ._gb ,_fddb ,_gf ._cf [_bc .PageNumber ],_gf .Classer .PtaLL ,_gf .Classer .UndilatedTemplates ,_gf .Classer .ClassIDs ,nil ,_bcf (_aaa ),len (_gf ._cf [_bc .PageNumber ]));return nil ;};type Page struct{Segments []*_dba .Header ;
PageNumber int ;Bitmap *_dbc .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_adec *Globals )AddSegment (segment *_dba .Header ){_adec .Segments =append (_adec .Segments ,segment );
};func (_fbb *Document )addSymbolDictionary (_cdg int ,_fbc *_dbc .Bitmaps ,_bf []int ,_deb map[int ]int ,_gbgd bool )(*_dba .Header ,error ){const _bdd ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_dbaa :=&_dba .SymbolDictionary {};if _efda :=_dbaa .InitEncode (_fbc ,_bf ,_deb ,_gbgd );_efda !=nil {return nil ,_efda ;};_af :=&_dba .Header {Type :_dba .TSymbolDictionary ,PageAssociation :_cdg ,SegmentData :_dbaa };if _cdg ==0{if _fbb .GlobalSegments ==nil {_fbb .GlobalSegments =&Globals {};
};_fbb .GlobalSegments .AddSegment (_af );return _af ,nil ;};_eaf ,_gbc :=_fbb .Pages [_cdg ];if !_gbc {return nil ,_dc .Errorf (_bdd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cdg );};var (_bgaf int ;
_gcg *_dba .Header ;);for _bgaf ,_gcg =range _eaf .Segments {if _gcg .Type ==_dba .TPageInformation {break ;};};_bgaf ++;_eaf .Segments =append (_eaf .Segments ,nil );copy (_eaf .Segments [_bgaf +1:],_eaf .Segments [_bgaf :]);_eaf .Segments [_bgaf ]=_af ;
return _af ,nil ;};func (_baf *Document )GetPage (pageNumber int )(_dba .Pager ,error ){const _dfd ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_d .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_ef .Stack ());
return nil ,_dc .Errorf (_dfd ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_baf .Pages ){_d .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ef .Stack ());return nil ,_dc .Error (_dfd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_gfg ,_bed :=_baf .Pages [pageNumber ];if !_bed {_d .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ef .Stack ());return nil ,_dc .Errorf (_dfd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gfg ,nil ;};func (_abc *Page )getPageInformationSegment ()*_dba .Header {for _ ,_ecaf :=range _abc .Segments {if _ecaf .Type ==_dba .TPageInformation {return _ecaf ;};};_d .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_abc );
return nil ;};func (_cbb *Page )createPage (_bdad *_dba .PageInformationSegment )error {var _fbde error ;if !_bdad .IsStripe ||_bdad .PageBMHeight !=-1{_fbde =_cbb .createNormalPage (_bdad );}else {_fbde =_cbb .createStripedPage (_bdad );};return _fbde ;
};func (_gcec *Page )getWidth ()(int ,error ){const _gfec ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _gcec .FinalWidth !=0{return _gcec .FinalWidth ,nil ;};_edf :=_gcec .getPageInformationSegment ();if _edf ==nil {return 0,_dc .Error (_gfec ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_dcg ,_cfcb :=_edf .GetSegmentData ();if _cfcb !=nil {return 0,_dc .Wrap (_cfcb ,_gfec ,"");};_gcdb ,_cfca :=_dcg .(*_dba .PageInformationSegment );if !_cfca {return 0,_dc .Errorf (_gfec ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dcg );
};_gcec .FinalWidth =_gcdb .PageBMWidth ;return _gcec .FinalWidth ,nil ;};func (_agd *Page )GetResolutionY ()(int ,error ){return _agd .getResolutionY ()};func (_ffb *Page )Encode (w _db .BinaryWriter )(_ebbb int ,_gcd error ){const _bce ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _agg int ;for _ ,_dada :=range _ffb .Segments {if _agg ,_gcd =_dada .Encode (w );_gcd !=nil {return _ebbb ,_dc .Wrap (_gcd ,_bce ,"");};_ebbb +=_agg ;};return _ebbb ,nil ;};func (_ba *Document )AddClassifiedPage (bm *_dbc .Bitmap ,method _a .Method )(_cd error ){const _gd ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ba .FullHeaders &&_ba .NumberOfPages !=0{return _dc .Error (_gd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ba .Classer ==nil {if _ba .Classer ,_cd =_a .Init (_a .DefaultSettings ());_cd !=nil {return _dc .Wrap (_cd ,_gd ,"");};};_gbg :=int (_ba .nextPageNumber ());_gdd :=&Page {Segments :[]*_dba .Header {},Bitmap :bm ,Document :_ba ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_gbg };
_ba .Pages [_gbg ]=_gdd ;switch method {case _a .RankHaus :_gdd .EncodingMethod =RankHausEM ;case _a .Correlation :_gdd .EncodingMethod =CorrelationEM ;};_gdd .AddPageInformationSegment ();if _cd =_ba .Classer .AddPage (bm ,_gbg ,method );_cd !=nil {return _dc .Wrap (_cd ,_gd ,"");
};if _ba .FullHeaders {_gdd .AddEndOfPageSegment ();};return nil ;};func (_ac *Document )AddGenericPage (bm *_dbc .Bitmap ,duplicateLineRemoval bool )(_dbd error ){const _bg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ac .FullHeaders &&_ac .NumberOfPages !=0{return _dc .Error (_bg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_gbe :=&Page {Segments :[]*_dba .Header {},Bitmap :bm ,Document :_ac ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_dbc .Chocolate };_gbe .PageNumber =int (_ac .nextPageNumber ());_ac .Pages [_gbe .PageNumber ]=_gbe ;
bm .InverseData ();_gbe .AddPageInformationSegment ();if _dbd =_gbe .AddGenericRegion (bm ,0,0,0,_dba .TImmediateGenericRegion ,duplicateLineRemoval );_dbd !=nil {return _dc .Wrap (_dbd ,_bg ,"");};if _ac .FullHeaders {_gbe .AddEndOfPageSegment ();};return nil ;
};func (_gfd *Page )getCombinationOperator (_dfea *_dba .PageInformationSegment ,_bcec _dbc .CombinationOperator )_dbc .CombinationOperator {if _dfea .CombinationOperatorOverrideAllowed (){return _bcec ;};return _dfea .CombinationOperator ();};func (_edd *Document )determineRandomDataOffsets (_ead []*_dba .Header ,_aefe uint64 ){if _edd .OrganizationType !=_dba .ORandom {return ;
};for _ ,_fag :=range _ead {_fag .SegmentDataStartOffset =_aefe ;_aefe +=_fag .SegmentDataLength ;};};