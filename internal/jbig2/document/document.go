//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_e "encoding/binary";_ee "fmt";_f "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/bitwise";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_a "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ffd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_de "io";_d "math";_c "runtime/debug";);func (_gd *Document )Encode ()(_agc []byte ,_bdd error ){const _gdg ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _cf ,_gcd int ;if _gd .FullHeaders {if _cf ,_bdd =_gd .encodeFileHeader (_gd ._fb );_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");};};var (_dbc bool ;_abg *_a .Header ;_gge *Page ;);if _bdd =_gd .completeClassifiedPages ();_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");
};if _bdd =_gd .produceClassifiedPages ();_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");};if _gd .GlobalSegments !=nil {for _ ,_abg =range _gd .GlobalSegments .Segments {if _bdd =_gd .encodeSegment (_abg ,&_cf );_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");
};};};for _dfea :=1;_dfea <=int (_gd .NumberOfPages );_dfea ++{if _gge ,_dbc =_gd .Pages [_dfea ];!_dbc {return nil ,_ff .Errorf (_gdg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dfea );};for _ ,_abg =range _gge .Segments {if _bdd =_gd .encodeSegment (_abg ,&_cf );
_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");};};};if _gd .FullHeaders {if _gcd ,_bdd =_gd .encodeEOFHeader (_gd ._fb );_bdd !=nil {return nil ,_ff .Wrap (_bdd ,_gdg ,"");};_cf +=_gcd ;};_agc =_gd ._fb .Data ();if len (_agc )!=_cf {_f .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cf ,len (_agc ));
};return _agc ,nil ;};func (_cfb *Page )clearSegmentData (){for _fgge :=range _cfb .Segments {_cfb .Segments [_fgge ].CleanSegmentData ();};};func (_fage *Page )getCombinationOperator (_eca *_a .PageInformationSegment ,_cca _eb .CombinationOperator )_eb .CombinationOperator {if _eca .CombinationOperatorOverrideAllowed (){return _cca ;
};return _eca .CombinationOperator ();};func (_gcf *Page )getPageInformationSegment ()*_a .Header {for _ ,_eba :=range _gcf .Segments {if _eba .Type ==_a .TPageInformation {return _eba ;};};_f .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_gcf );
return nil ;};func (_eea *Page )composePageBitmap ()error {const _fag ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _eea .PageNumber ==0{return nil ;};_aag :=_eea .getPageInformationSegment ();if _aag ==nil {return _ff .Error (_fag ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ceb ,_bggb :=_aag .GetSegmentData ();if _bggb !=nil {return _bggb ;};_fed ,_dbe :=_ceb .(*_a .PageInformationSegment );if !_dbe {return _ff .Error (_fag ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _bggb =_eea .createPage (_fed );_bggb !=nil {return _ff .Wrap (_bggb ,_fag ,"");};_eea .clearSegmentData ();return nil ;};func (_ce *Document )completeClassifiedPages ()(_gc error ){const _fa ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _ce .Classer ==nil {return nil ;};_ce ._cac =make ([]int ,_ce .Classer .UndilatedTemplates .Size ());for _cc :=0;_cc < _ce .Classer .ClassIDs .Size ();_cc ++{_ccf ,_ed :=_ce .Classer .ClassIDs .Get (_cc );if _ed !=nil {return _ff .Wrapf (_ed ,_fa ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cc );
};_ce ._cac [_ccf ]++;};var _cbd []int ;for _ac :=0;_ac < _ce .Classer .UndilatedTemplates .Size ();_ac ++{if _ce .NumberOfPages ==1||_ce ._cac [_ac ]> 1{_cbd =append (_cbd ,_ac );};};var (_afb *Page ;_bb bool ;);for _da ,_ge :=range *_ce .Classer .ComponentPageNumbers {if _afb ,_bb =_ce .Pages [_ge ];
!_bb {return _ff .Errorf (_fa ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_da );};if _afb .EncodingMethod ==GenericEM {_f .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_da );
continue ;};_ce ._fc [_ge ]=append (_ce ._fc [_ge ],_da );_acb ,_edb :=_ce .Classer .ClassIDs .Get (_da );if _edb !=nil {return _ff .Wrapf (_edb ,_fa ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_da );
};if _ce ._cac [_acb ]==1&&_ce .NumberOfPages !=1{_dc :=append (_ce ._aa [_ge ],_acb );_ce ._aa [_ge ]=_dc ;};};if _gc =_ce .Classer .ComputeLLCorners ();_gc !=nil {return _ff .Wrap (_gc ,_fa ,"");};if _ ,_gc =_ce .addSymbolDictionary (0,_ce .Classer .UndilatedTemplates ,_cbd ,_ce ._aaa ,false );
_gc !=nil {return _ff .Wrap (_gc ,_fa ,"");};return nil ;};func (_adb *Document )isFileHeaderPresent ()(bool ,error ){_adb .InputStream .Mark ();for _ ,_ggbc :=range _af {_afd ,_eee :=_adb .InputStream .ReadByte ();if _eee !=nil {return false ,_eee ;};
if _ggbc !=_afd {_adb .InputStream .Reset ();return false ,nil ;};};_adb .InputStream .Reset ();return true ,nil ;};func (_ebg *Page )createPage (_ddcb *_a .PageInformationSegment )error {var _fbdf error ;if !_ddcb .IsStripe ||_ddcb .PageBMHeight !=-1{_fbdf =_ebg .createNormalPage (_ddcb );
}else {_fbdf =_ebg .createStripedPage (_ddcb );};return _fbdf ;};var _af =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func _gce (_cdb *_b .Reader ,_dgd *Globals )(*Document ,error ){_bbg :=&Document {Pages :make (map[int ]*Page ),InputStream :_cdb ,OrganizationType :_a .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_dgd ,_ebb :9};
if _bbg .GlobalSegments ==nil {_bbg .GlobalSegments =&Globals {};};if _dea :=_bbg .mapData ();_dea !=nil {return nil ,_dea ;};return _bbg ,nil ;};func (_eab *Globals )GetSegment (segmentNumber int )(*_a .Header ,error ){const _eebb ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _eab ==nil {return nil ,_ff .Error (_eebb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_eab .Segments )==0{return nil ,_ff .Error (_eebb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _aca *_a .Header ;for _ ,_aca =range _eab .Segments {if _aca .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _aca ==nil {return nil ,_ff .Error (_eebb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _aca ,nil ;};func (_fg *Document )GetNumberOfPages ()(uint32 ,error ){if _fg .NumberOfPagesUnknown ||_fg .NumberOfPages ==0{if len (_fg .Pages )==0{if _afge :=_fg .mapData ();_afge !=nil {return 0,_ff .Wrap (_afge ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_fg .Pages )),nil ;};return _fg .NumberOfPages ,nil ;};func (_ggba *Page )AddEndOfPageSegment (){_gcab :=&_a .Header {Type :_a .TEndOfPage ,PageAssociation :_ggba .PageNumber };_ggba .Segments =append (_ggba .Segments ,_gcab );};
func _gaf (_bfg *Document ,_bgg int )*Page {return &Page {Document :_bfg ,PageNumber :_bgg ,Segments :[]*_a .Header {}};};func (_df *Document )AddClassifiedPage (bm *_eb .Bitmap ,method _ffd .Method )(_ffg error ){const _ea ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_df .FullHeaders &&_df .NumberOfPages !=0{return _ff .Error (_ea ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _df .Classer ==nil {if _df .Classer ,_ffg =_ffd .Init (_ffd .DefaultSettings ());_ffg !=nil {return _ff .Wrap (_ffg ,_ea ,"");};};_dfe :=int (_df .nextPageNumber ());_ef :=&Page {Segments :[]*_a .Header {},Bitmap :bm ,Document :_df ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dfe };
_df .Pages [_dfe ]=_ef ;switch method {case _ffd .RankHaus :_ef .EncodingMethod =RankHausEM ;case _ffd .Correlation :_ef .EncodingMethod =CorrelationEM ;};_ef .AddPageInformationSegment ();if _ffg =_df .Classer .AddPage (bm ,_dfe ,method );_ffg !=nil {return _ff .Wrap (_ffg ,_ea ,"");
};if _df .FullHeaders {_ef .AddEndOfPageSegment ();};return nil ;};func (_bee *Document )encodeSegment (_fcgg *_a .Header ,_cce *int )error {const _bag ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_fcgg .SegmentNumber =_bee .nextSegmentNumber ();
_cagc ,_dfc :=_fcgg .Encode (_bee ._fb );if _dfc !=nil {return _ff .Wrapf (_dfc ,_bag ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcgg .SegmentNumber );};*_cce +=_cagc ;return nil ;};func (_bea *Document )nextSegmentNumber ()uint32 {_gacf :=_bea .CurrentSegmentNumber ;
_bea .CurrentSegmentNumber ++;return _gacf ;};func (_ace *Page )addTextRegionSegment (_bfa []*_a .Header ,_fgdb ,_ffdb map[int ]int ,_fbfa []int ,_bcc *_eb .Points ,_fbdb *_eb .Bitmaps ,_abdg *_ca .IntSlice ,_bage *_eb .Boxes ,_cfg ,_debb int ){_dbba :=&_a .TextRegion {NumberOfSymbols :uint32 (_debb )};
_dbba .InitEncode (_fgdb ,_ffdb ,_fbfa ,_bcc ,_fbdb ,_abdg ,_bage ,_ace .FinalWidth ,_ace .FinalHeight ,_cfg );_afdg :=&_a .Header {RTSegments :_bfa ,SegmentData :_dbba ,PageAssociation :_ace .PageNumber ,Type :_a .TImmediateTextRegion };_dbg :=_a .TPageInformation ;
if _ffdb !=nil {_dbg =_a .TSymbolDictionary ;};var _cdbb int ;for ;_cdbb < len (_ace .Segments );_cdbb ++{if _ace .Segments [_cdbb ].Type ==_dbg {_cdbb ++;break ;};};_ace .Segments =append (_ace .Segments ,nil );copy (_ace .Segments [_cdbb +1:],_ace .Segments [_cdbb :]);
_ace .Segments [_cdbb ]=_afdg ;};func (_dfa *Document )mapData ()error {const _deg ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_abgg []*_a .Header ;_cd int64 ;_ggf _a .Type ;);_abd ,_eec :=_dfa .isFileHeaderPresent ();if _eec !=nil {return _ff .Wrap (_eec ,_deg ,"");
};if _abd {if _eec =_dfa .parseFileHeader ();_eec !=nil {return _ff .Wrap (_eec ,_deg ,"");};_cd +=int64 (_dfa ._ebb );_dfa .FullHeaders =true ;};var (_fdg *Page ;_ffc bool ;);for _ggf !=51&&!_ffc {_dg ,_edg :=_a .NewHeader (_dfa ,_dfa .InputStream ,_cd ,_dfa .OrganizationType );
if _edg !=nil {return _ff .Wrap (_edg ,_deg ,"");};_f .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_dg .SegmentNumber ,_dg .Type );
_ggf =_dg .Type ;if _ggf !=_a .TEndOfFile {if _dg .PageAssociation !=0{_fdg =_dfa .Pages [_dg .PageAssociation ];if _fdg ==nil {_fdg =_gaf (_dfa ,_dg .PageAssociation );_dfa .Pages [_dg .PageAssociation ]=_fdg ;if _dfa .NumberOfPagesUnknown {_dfa .NumberOfPages ++;
};};_fdg .Segments =append (_fdg .Segments ,_dg );}else {_dfa .GlobalSegments .AddSegment (_dg );};};_abgg =append (_abgg ,_dg );_cd =_dfa .InputStream .AbsolutePosition ();if _dfa .OrganizationType ==_a .OSequential {_cd +=int64 (_dg .SegmentDataLength );
};_ffc ,_edg =_dfa .reachedEOF (_cd );if _edg !=nil {_f .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_edg );
return _ff .Wrap (_edg ,_deg ,"");};};_dfa .determineRandomDataOffsets (_abgg ,uint64 (_cd ));return nil ;};func (_gcdg *Document )parseFileHeader ()error {const _ebc ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_fbc :=_gcdg .InputStream .Seek (8,_de .SeekStart );
if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u0069\u0064");};_ ,_fbc =_gcdg .InputStream .ReadBits (5);if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_cg ,_fbc :=_gcdg .InputStream .ReadBit ();
if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _cg ==1{_gcdg .GBUseExtTemplate =true ;};_cg ,_fbc =_gcdg .InputStream .ReadBit ();if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _cg !=1{_gcdg .NumberOfPagesUnknown =false ;};_cg ,_fbc =_gcdg .InputStream .ReadBit ();if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_gcdg .OrganizationType =_a .OrganizationType (_cg );
if !_gcdg .NumberOfPagesUnknown {_gcdg .NumberOfPages ,_fbc =_gcdg .InputStream .ReadUint32 ();if _fbc !=nil {return _ff .Wrap (_fbc ,_ebc ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_gcdg ._ebb =13;};return nil ;
};func (_dbdg *Document )encodeFileHeader (_bc _b .BinaryWriter )(_deba int ,_dde error ){const _dfeaf ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_deba ,_dde =_bc .Write (_af );if _dde !=nil {return _deba ,_ff .Wrap (_dde ,_dfeaf ,"\u0069\u0064");
};if _dde =_bc .WriteByte (0x01);_dde !=nil {return _deba ,_ff .Wrap (_dde ,_dfeaf ,"\u0066\u006c\u0061g\u0073");};_deba ++;_abe :=make ([]byte ,4);_e .BigEndian .PutUint32 (_abe ,_dbdg .NumberOfPages );_bac ,_dde :=_bc .Write (_abe );if _dde !=nil {return _bac ,_ff .Wrap (_dde ,_dfeaf ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_deba +=_bac ;return _deba ,nil ;};func (_cba *Globals )GetSymbolDictionary ()(*_a .Header ,error ){const _bdg ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _cba ==nil {return nil ,_ff .Error (_bdg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cba .Segments )==0{return nil ,_ff .Error (_bdg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_cge :=range _cba .Segments {if _cge .Type ==_a .TSymbolDictionary {return _cge ,nil ;};};return nil ,_ff .Error (_bdg ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_ecd *Page )GetResolutionY ()(int ,error ){return _ecd .getResolutionY ()};type Page struct{Segments []*_a .Header ;PageNumber int ;Bitmap *_eb .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;
FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_dbeb *Page )getResolutionY ()(int ,error ){const _fdga ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _dbeb .ResolutionY !=0{return _dbeb .ResolutionY ,nil ;
};_eceb :=_dbeb .getPageInformationSegment ();if _eceb ==nil {return 0,_ff .Error (_fdga ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_caae ,_eae :=_eceb .GetSegmentData ();if _eae !=nil {return 0,_ff .Wrap (_eae ,_fdga ,"");
};_affa ,_fgeb :=_caae .(*_a .PageInformationSegment );if !_fgeb {return 0,_ff .Errorf (_fdga ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_caae );
};_dbeb .ResolutionY =_affa .ResolutionY ;return _dbeb .ResolutionY ,nil ;};func (_cdf *Page )GetWidth ()(int ,error ){return _cdf .getWidth ()};func (_dbb *Globals )GetSegmentByIndex (index int )(*_a .Header ,error ){const _fgd ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _dbb ==nil {return nil ,_ff .Error (_fgd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dbb .Segments )==0{return nil ,_ff .Error (_fgd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_dbb .Segments )-1{return nil ,_ff .Error (_fgd ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _dbb .Segments [index ],nil ;};func (_fdd *Page )GetBitmap ()(_aff *_eb .Bitmap ,_gdgf error ){_f .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_fdd .PageNumber ));
defer func (){if _gdgf !=nil {_f .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fdd .PageNumber ,_gdgf ));
}else {_f .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_fdd .PageNumber ));};}();if _fdd .Bitmap !=nil {return _fdd .Bitmap ,nil ;
};_gdgf =_fdd .composePageBitmap ();if _gdgf !=nil {return nil ,_gdgf ;};return _fdd .Bitmap ,nil ;};func (_cfc *Page )createNormalPage (_dag *_a .PageInformationSegment )error {const _fgg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_cfc .Bitmap =_eb .New (_dag .PageBMWidth ,_dag .PageBMHeight );if _dag .DefaultPixelValue !=0{_cfc .Bitmap .SetDefaultPixel ();};for _ ,_cdbbc :=range _cfc .Segments {switch _cdbbc .Type {case 6,7,22,23,38,39,42,43:_f .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_cdbbc .SegmentNumber );
_deaf ,_bedd :=_cdbbc .GetSegmentData ();if _bedd !=nil {return _bedd ;};_gbfg ,_dce :=_deaf .(_a .Regioner );if !_dce {_f .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_deaf );
return _ff .Errorf (_fgg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_deaf );
};_bfgg ,_bedd :=_gbfg .GetRegionBitmap ();if _bedd !=nil {return _ff .Wrap (_bedd ,_fgg ,"");};if _cfc .fitsPage (_dag ,_bfgg ){_cfc .Bitmap =_bfgg ;}else {_aed :=_gbfg .GetRegionInfo ();_fedg :=_cfc .getCombinationOperator (_dag ,_aed .CombinaionOperator );
_bedd =_eb .Blit (_bfgg ,_cfc .Bitmap ,int (_aed .XLocation ),int (_aed .YLocation ),_fedg );if _bedd !=nil {return _ff .Wrap (_bedd ,_fgg ,"");};};};};return nil ;};func DecodeDocument (input *_b .Reader ,globals *Globals )(*Document ,error ){return _gce (input ,globals );
};func (_faf *Page )AddPageInformationSegment (){_bgef :=&_a .PageInformationSegment {PageBMWidth :_faf .FinalWidth ,PageBMHeight :_faf .FinalHeight ,ResolutionX :_faf .ResolutionX ,ResolutionY :_faf .ResolutionY ,IsLossless :_faf .IsLossless };if _faf .BlackIsOne {_bgef .DefaultPixelValue =uint8 (0x1);
};_ddef :=&_a .Header {PageAssociation :_faf .PageNumber ,SegmentDataLength :uint64 (_bgef .Size ()),SegmentData :_bgef ,Type :_a .TPageInformation };_faf .Segments =append (_faf .Segments ,_ddef );};func (_dfbf *Page )getHeight ()(int ,error ){const _ffe ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _dfbf .FinalHeight !=0{return _dfbf .FinalHeight ,nil ;};_bce :=_dfbf .getPageInformationSegment ();if _bce ==nil {return 0,_ff .Error (_ffe ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fcgb ,_ffdd :=_bce .GetSegmentData ();
if _ffdd !=nil {return 0,_ff .Wrap (_ffdd ,_ffe ,"");};_fcbg ,_bbb :=_fcgb .(*_a .PageInformationSegment );if !_bbb {return 0,_ff .Errorf (_ffe ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fcgb );
};if _fcbg .PageBMHeight ==_d .MaxInt32 {_ ,_ffdd =_dfbf .GetBitmap ();if _ffdd !=nil {return 0,_ff .Wrap (_ffdd ,_ffe ,"");};}else {_dfbf .FinalHeight =_fcbg .PageBMHeight ;};return _dfbf .FinalHeight ,nil ;};type EncodingMethod int ;func (_caa *Document )completeSymbols ()(_ffgg error ){const _aab ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _caa .Classer ==nil {return nil ;};if _caa .Classer .UndilatedTemplates ==nil {return _ff .Error (_aab ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_fbf :=len (_caa .Pages )==1;_gca :=make ([]int ,_caa .Classer .UndilatedTemplates .Size ());var _bbc int ;for _gcg :=0;_gcg < _caa .Classer .ClassIDs .Size ();_gcg ++{_bbc ,_ffgg =_caa .Classer .ClassIDs .Get (_gcg );if _ffgg !=nil {return _ff .Wrap (_ffgg ,_aab ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_gca [_bbc ]++;};var _bbe []int ;for _fdf :=0;_fdf < _caa .Classer .UndilatedTemplates .Size ();_fdf ++{if _gca [_fdf ]==0{return _ff .Error (_aab ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _gca [_fdf ]> 1||_fbf {_bbe =append (_bbe ,_fdf );};};_caa ._ag =len (_bbe );var _ffb ,_fcb int ;for _bab :=0;_bab < _caa .Classer .ComponentPageNumbers .Size ();_bab ++{_ffb ,_ffgg =_caa .Classer .ComponentPageNumbers .Get (_bab );if _ffgg !=nil {return _ff .Wrapf (_ffgg ,_aab ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_bab );
};_fcb ,_ffgg =_caa .Classer .ClassIDs .Get (_bab );if _ffgg !=nil {return _ff .Wrapf (_ffgg ,_aab ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ffb );
};if _gca [_fcb ]==1&&!_fbf {_caa ._aa [_ffb ]=append (_caa ._aa [_ffb ],_fcb );};};if _ffgg =_caa .Classer .ComputeLLCorners ();_ffgg !=nil {return _ff .Wrap (_ffgg ,_aab ,"");};return nil ;};func _efe (_afc int )int {_gfc :=0;_fd :=(_afc &(_afc -1))==0;
_afc >>=1;for ;_afc !=0;_afc >>=1{_gfc ++;};if _fd {return _gfc ;};return _gfc +1;};func (_fbb *Page )String ()string {return _ee .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_fbb .PageNumber );};func (_eeg *Document )reachedEOF (_gbe int64 )(bool ,error ){const _ggec ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_ec :=_eeg .InputStream .Seek (_gbe ,_de .SeekStart );if _ec !=nil {_f .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ec );
return false ,_ff .Wrap (_ec ,_ggec ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_ec =_eeg .InputStream .ReadBits (32);if _ec ==_de .EOF {return true ,nil ;
}else if _ec !=nil {return false ,_ff .Wrap (_ec ,_ggec ,"");};return false ,nil ;};func (_edgb *Page )getWidth ()(int ,error ){const _fadb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _edgb .FinalWidth !=0{return _edgb .FinalWidth ,nil ;};_gda :=_edgb .getPageInformationSegment ();
if _gda ==nil {return 0,_ff .Error (_fadb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_add ,_bae :=_gda .GetSegmentData ();if _bae !=nil {return 0,_ff .Wrap (_bae ,_fadb ,"");};_dbf ,_bgge :=_add .(*_a .PageInformationSegment );
if !_bgge {return 0,_ff .Errorf (_fadb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_add );
};_edgb .FinalWidth =_dbf .PageBMWidth ;return _edgb .FinalWidth ,nil ;};func (_def *Document )produceClassifiedPage (_bf *Page ,_deb *_a .Header )(_gb error ){const _eac ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _aad map[int ]int ;_aafb :=_def ._ag ;_gbf :=[]*_a .Header {_deb };if len (_def ._aa [_bf .PageNumber ])> 0{_aad =map[int ]int {};_ga ,_ggd :=_def .addSymbolDictionary (_bf .PageNumber ,_def .Classer .UndilatedTemplates ,_def ._aa [_bf .PageNumber ],_aad ,false );
if _ggd !=nil {return _ff .Wrap (_ggd ,_eac ,"");};_gbf =append (_gbf ,_ga );_aafb +=len (_def ._aa [_bf .PageNumber ]);};_fcg :=_def ._fc [_bf .PageNumber ];_f .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_bf .PageNumber ,_fcg );
_bf .addTextRegionSegment (_gbf ,_def ._aaa ,_aad ,_def ._fc [_bf .PageNumber ],_def .Classer .PtaLL ,_def .Classer .UndilatedTemplates ,_def .Classer .ClassIDs ,nil ,_efe (_aafb ),len (_def ._fc [_bf .PageNumber ]));return nil ;};func (_gga *Document )GetPage (pageNumber int )(_a .Pager ,error ){const _gag ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_f .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_c .Stack ());
return nil ,_ff .Errorf (_gag ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_gga .Pages ){_f .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_ff .Error (_gag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_cef ,_dbd :=_gga .Pages [pageNumber ];if !_dbd {_f .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_ff .Errorf (_gag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _cef ,nil ;};func (_dbdc *Page )GetResolutionX ()(int ,error ){return _dbdc .getResolutionX ()};func (_ffgd *Document )GetGlobalSegment (i int )(*_a .Header ,error ){_age ,_fe :=_ffgd .GlobalSegments .GetSegment (i );if _fe !=nil {return nil ,_ff .Wrap (_fe ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _age ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_afbd *Page )AddGenericRegion (bm *_eb .Bitmap ,xloc ,yloc ,template int ,tp _a .Type ,duplicateLineRemoval bool )error {const _fbdd ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_bge :=&_a .GenericRegion {};if _baf :=_bge .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_baf !=nil {return _ff .Wrap (_baf ,_fbdd ,"");};_abb :=&_a .Header {Type :_a .TImmediateGenericRegion ,PageAssociation :_afbd .PageNumber ,SegmentData :_bge };
_afbd .Segments =append (_afbd .Segments ,_abb );return nil ;};func (_gdb *Document )nextPageNumber ()uint32 {_gdb .NumberOfPages ++;return _gdb .NumberOfPages };func (_aga *Globals )AddSegment (segment *_a .Header ){_aga .Segments =append (_aga .Segments ,segment )};
func (_ggc *Page )getResolutionX ()(int ,error ){const _ecf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _ggc .ResolutionX !=0{return _ggc .ResolutionX ,nil ;};_edf :=_ggc .getPageInformationSegment ();if _edf ==nil {return 0,_ff .Error (_ecf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_edd ,_fcd :=_edf .GetSegmentData ();if _fcd !=nil {return 0,_ff .Wrap (_fcd ,_ecf ,"");};_cda ,_eega :=_edd .(*_a .PageInformationSegment );if !_eega {return 0,_ff .Errorf (_ecf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_edd );
};_ggc .ResolutionX =_cda .ResolutionX ;return _ggc .ResolutionX ,nil ;};func (_ebgc *Page )fitsPage (_ebd *_a .PageInformationSegment ,_adg *_eb .Bitmap )bool {return _ebgc .countRegions ()==1&&_ebd .DefaultPixelValue ==0&&_ebd .PageBMWidth ==_adg .Width &&_ebd .PageBMHeight ==_adg .Height ;
};func (_ab *Document )produceClassifiedPages ()(_dd error ){const _edc ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _ab .Classer ==nil {return nil ;};var (_fbd *Page ;_ddg bool ;
_fad *_a .Header ;);for _aaf :=1;_aaf <=int (_ab .NumberOfPages );_aaf ++{if _fbd ,_ddg =_ab .Pages [_aaf ];!_ddg {return _ff .Errorf (_edc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_aaf );};if _fbd .EncodingMethod ==GenericEM {continue ;
};if _fad ==nil {if _fad ,_dd =_ab .GlobalSegments .GetSymbolDictionary ();_dd !=nil {return _ff .Wrap (_dd ,_edc ,"");};};if _dd =_ab .produceClassifiedPage (_fbd ,_fad );_dd !=nil {return _ff .Wrapf (_dd ,_edc ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_aaf );
};};return nil ;};func (_dcf *Document )encodeEOFHeader (_gac _b .BinaryWriter )(_ebe int ,_afe error ){_dfba :=&_a .Header {SegmentNumber :_dcf .nextSegmentNumber (),Type :_a .TEndOfFile };if _ebe ,_afe =_dfba .Encode (_gac );_afe !=nil {return 0,_ff .Wrap (_afe ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _ebe ,nil ;};func (_fef *Page )GetHeight ()(int ,error ){return _fef .getHeight ()};func (_db *Document )addSymbolDictionary (_ggb int ,_ba *_eb .Bitmaps ,_cag []int ,_bd map[int ]int ,_ddc bool )(*_a .Header ,error ){const _dfb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_afg :=&_a .SymbolDictionary {};if _gad :=_afg .InitEncode (_ba ,_cag ,_bd ,_ddc );_gad !=nil {return nil ,_gad ;};_gec :=&_a .Header {Type :_a .TSymbolDictionary ,PageAssociation :_ggb ,SegmentData :_afg };if _ggb ==0{if _db .GlobalSegments ==nil {_db .GlobalSegments =&Globals {};
};_db .GlobalSegments .AddSegment (_gec );return _gec ,nil ;};_bda ,_bg :=_db .Pages [_ggb ];if !_bg {return nil ,_ff .Errorf (_dfb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ggb );};var (_edcg int ;
_bgc *_a .Header ;);for _edcg ,_bgc =range _bda .Segments {if _bgc .Type ==_a .TPageInformation {break ;};};_edcg ++;_bda .Segments =append (_bda .Segments ,nil );copy (_bda .Segments [_edcg +1:],_bda .Segments [_edcg :]);_bda .Segments [_edcg ]=_gec ;
return _gec ,nil ;};func (_aafg *Page )lastSegmentNumber ()(_ggae uint32 ,_agcd error ){const _efa ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_aafg .Segments )==0{return _ggae ,_ff .Errorf (_efa ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_aafg .PageNumber );
};return _aafg .Segments [len (_aafg .Segments )-1].SegmentNumber ,nil ;};type Globals struct{Segments []*_a .Header ;};func (_cdc *Page )collectPageStripes ()(_cbb []_a .Segmenter ,_dfeag error ){const _debf ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _febg _a .Segmenter ;for _ ,_bead :=range _cdc .Segments {switch _bead .Type {case 6,7,22,23,38,39,42,43:_febg ,_dfeag =_bead .GetSegmentData ();if _dfeag !=nil {return nil ,_ff .Wrap (_dfeag ,_debf ,"");};_cbb =append (_cbb ,_febg );case 50:_febg ,_dfeag =_bead .GetSegmentData ();
if _dfeag !=nil {return nil ,_dfeag ;};_daa ,_fafe :=_febg .(*_a .EndOfStripe );if !_fafe {return nil ,_ff .Errorf (_debf ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_febg );
};_cbb =append (_cbb ,_daa );_cdc .FinalHeight =_daa .LineNumber ();};};return _cbb ,nil ;};func (_ccb *Page )createStripedPage (_bfd *_a .PageInformationSegment )error {const _cbg ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_bde ,_dff :=_ccb .collectPageStripes ();if _dff !=nil {return _ff .Wrap (_dff ,_cbg ,"");};var _cbde int ;for _ ,_gdgc :=range _bde {if _gdd ,_ccc :=_gdgc .(*_a .EndOfStripe );_ccc {_cbde =_gdd .LineNumber ()+1;}else {_daf :=_gdgc .(_a .Regioner );_ada :=_daf .GetRegionInfo ();
_dafg :=_ccb .getCombinationOperator (_bfd ,_ada .CombinaionOperator );_fca ,_aae :=_daf .GetRegionBitmap ();if _aae !=nil {return _ff .Wrap (_aae ,_cbg ,"");};_aae =_eb .Blit (_fca ,_ccb .Bitmap ,int (_ada .XLocation ),_cbde ,_dafg );if _aae !=nil {return _ff .Wrap (_aae ,_cbg ,"");
};};};return nil ;};func (_ccfe *Page )GetSegment (number int )(*_a .Header ,error ){const _bacc ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_bcf :=range _ccfe .Segments {if _bcf .SegmentNumber ==uint32 (number ){return _bcf ,nil ;
};};_aec :=make ([]uint32 ,len (_ccfe .Segments ));for _gff ,_gdc :=range _ccfe .Segments {_aec [_gff ]=_gdc .SegmentNumber ;};return nil ,_ff .Errorf (_bacc ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ccfe .PageNumber ,_aec );
};func (_cdg *Page )Encode (w _b .BinaryWriter )(_fge int ,_acg error ){const _agg ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fadg int ;for _ ,_afgd :=range _cdg .Segments {if _fadg ,_acg =_afgd .Encode (w );_acg !=nil {return _fge ,_ff .Wrap (_acg ,_agg ,"");
};_fge +=_fadg ;};return _fge ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_fb :_b .BufferedMSB (),Pages :map[int ]*Page {},_aa :map[int ][]int {},_aaa :map[int ]int {},_fc :map[int ][]int {}};
};func (_edbg *Page )nextSegmentNumber ()uint32 {return _edbg .Document .nextSegmentNumber ()};func (_ae *Document )determineRandomDataOffsets (_fea []*_a .Header ,_bed uint64 ){if _ae .OrganizationType !=_a .ORandom {return ;};for _ ,_eef :=range _fea {_eef .SegmentDataStartOffset =_bed ;
_bed +=_eef .SegmentDataLength ;};};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_b .Reader ;GlobalSegments *Globals ;OrganizationType _a .OrganizationType ;Classer *_ffd .Classer ;
XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_eb .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ebb uint8 ;_fb *_b .BufferedWriter ;EncodeGlobals bool ;_ag int ;_aa map[int ][]int ;_fc map[int ][]int ;
_cac []int ;_aaa map[int ]int ;};func (_ad *Document )AddGenericPage (bm *_eb .Bitmap ,duplicateLineRemoval bool )(_gf error ){const _eeb ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ad .FullHeaders &&_ad .NumberOfPages !=0{return _ff .Error (_eeb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_cb :=&Page {Segments :[]*_a .Header {},Bitmap :bm ,Document :_ad ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_eb .Chocolate };_cb .PageNumber =int (_ad .nextPageNumber ());_ad .Pages [_cb .PageNumber ]=_cb ;
bm .InverseData ();_cb .AddPageInformationSegment ();if _gf =_cb .AddGenericRegion (bm ,0,0,0,_a .TImmediateGenericRegion ,duplicateLineRemoval );_gf !=nil {return _ff .Wrap (_gf ,_eeb ,"");};if _ad .FullHeaders {_cb .AddEndOfPageSegment ();};return nil ;
};func (_ggg *Page )countRegions ()int {var _gba int ;for _ ,_dgfa :=range _ggg .Segments {switch _dgfa .Type {case 6,7,22,23,38,39,42,43:_gba ++;};};return _gba ;};