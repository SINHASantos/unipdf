//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_a "encoding/binary";_ca "fmt";_b "github.com/unidoc/unipdf/v3/common";_cc "github.com/unidoc/unipdf/v3/internal/bitwise";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_bd "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_df "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ef "io";_c "math";_e "runtime/debug";);func (_gea *Page )GetHeight ()(int ,error ){return _gea .getHeight ()};
var _fg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_ddd *Document )produceClassifiedPage (_aa *Page ,_acbd *_bd .Header )(_egd error ){const _aca ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _eaec map[int ]int ;_afb :=_ddd ._gg ;_ecec :=[]*_bd .Header {_acbd };if len (_ddd ._ab [_aa .PageNumber ])> 0{_eaec =map[int ]int {};_ddg ,_ccb :=_ddd .addSymbolDictionary (_aa .PageNumber ,_ddd .Classer .UndilatedTemplates ,_ddd ._ab [_aa .PageNumber ],_eaec ,false );
if _ccb !=nil {return _g .Wrap (_ccb ,_aca ,"");};_ecec =append (_ecec ,_ddg );_afb +=len (_ddd ._ab [_aa .PageNumber ]);};_ed :=_ddd ._ggg [_aa .PageNumber ];_b .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_aa .PageNumber ,_ed );
_aa .addTextRegionSegment (_ecec ,_ddd ._cag ,_eaec ,_ddd ._ggg [_aa .PageNumber ],_ddd .Classer .PtaLL ,_ddd .Classer .UndilatedTemplates ,_ddd .Classer .ClassIDs ,nil ,_gb (_afb ),len (_ddd ._ggg [_aa .PageNumber ]));return nil ;};func (_ebg *Page )countRegions ()int {var _fca int ;
for _ ,_fga :=range _ebg .Segments {switch _fga .Type {case 6,7,22,23,38,39,42,43:_fca ++;};};return _fca ;};func (_dge *Page )GetResolutionX ()(int ,error ){return _dge .getResolutionX ()};func (_ece *Document )produceClassifiedPages ()(_bbg error ){const _cab ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _ece .Classer ==nil {return nil ;};var (_dg *Page ;_eae bool ;_cb *_bd .Header ;);for _da :=1;_da <=int (_ece .NumberOfPages );_da ++{if _dg ,_eae =_ece .Pages [_da ];!_eae {return _g .Errorf (_cab ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_da );
};if _dg .EncodingMethod ==GenericEM {continue ;};if _cb ==nil {if _cb ,_bbg =_ece .GlobalSegments .GetSymbolDictionary ();_bbg !=nil {return _g .Wrap (_bbg ,_cab ,"");};};if _bbg =_ece .produceClassifiedPage (_dg ,_cb );_bbg !=nil {return _g .Wrapf (_bbg ,_cab ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_da );
};};return nil ;};func (_bee *Globals )GetSegmentByIndex (index int )(*_bd .Header ,error ){const _fa ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _bee ==nil {return nil ,_g .Error (_fa ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_bee .Segments )==0{return nil ,_g .Error (_fa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_bee .Segments )-1{return nil ,_g .Error (_fa ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _bee .Segments [index ],nil ;};func (_eecf *Globals )GetSymbolDictionary ()(*_bd .Header ,error ){const _gaf ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _eecf ==nil {return nil ,_g .Error (_gaf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_eecf .Segments )==0{return nil ,_g .Error (_gaf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_agf :=range _eecf .Segments {if _agf .Type ==_bd .TSymbolDictionary {return _agf ,nil ;};};return nil ,_g .Error (_gaf ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_gebd *Page )getCombinationOperator (_dfa *_bd .PageInformationSegment ,_ebac _d .CombinationOperator )_d .CombinationOperator {if _dfa .CombinationOperatorOverrideAllowed (){return _ebac ;};return _dfa .CombinationOperator ();};func (_bde *Document )encodeFileHeader (_efb _cc .BinaryWriter )(_bdf int ,_efag error ){const _cgd ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_bdf ,_efag =_efb .Write (_fg );if _efag !=nil {return _bdf ,_g .Wrap (_efag ,_cgd ,"\u0069\u0064");};if _efag =_efb .WriteByte (0x01);_efag !=nil {return _bdf ,_g .Wrap (_efag ,_cgd ,"\u0066\u006c\u0061g\u0073");};_bdf ++;_gefb :=make ([]byte ,4);_a .BigEndian .PutUint32 (_gefb ,_bde .NumberOfPages );
_de ,_efag :=_efb .Write (_gefb );if _efag !=nil {return _de ,_g .Wrap (_efag ,_cgd ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bdf +=_de ;return _bdf ,nil ;};func _gfde (_gae *Document ,_aff int )*Page {return &Page {Document :_gae ,PageNumber :_aff ,Segments :[]*_bd .Header {}};
};func (_fcgg *Page )Encode (w _cc .BinaryWriter )(_ggda int ,_egc error ){const _efbf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _deb int ;for _ ,_edd :=range _fcgg .Segments {if _deb ,_egc =_edd .Encode (w );_egc !=nil {return _ggda ,_g .Wrap (_egc ,_efbf ,"");
};_ggda +=_deb ;};return _ggda ,nil ;};func (_bcc *Page )AddGenericRegion (bm *_d .Bitmap ,xloc ,yloc ,template int ,tp _bd .Type ,duplicateLineRemoval bool )error {const _cdae ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_ede :=&_bd .GenericRegion {};if _ddge :=_ede .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_ddge !=nil {return _g .Wrap (_ddge ,_cdae ,"");};_gfg :=&_bd .Header {Type :_bd .TImmediateGenericRegion ,PageAssociation :_bcc .PageNumber ,SegmentData :_ede };
_bcc .Segments =append (_bcc .Segments ,_gfg );return nil ;};func (_ddcb *Globals )AddSegment (segment *_bd .Header ){_ddcb .Segments =append (_ddcb .Segments ,segment );};func (_adb *Page )createStripedPage (_ddea *_bd .PageInformationSegment )error {const _dae ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_gggc ,_ecd :=_adb .collectPageStripes ();if _ecd !=nil {return _g .Wrap (_ecd ,_dae ,"");};var _bbf int ;for _ ,_efe :=range _gggc {if _ege ,_dcf :=_efe .(*_bd .EndOfStripe );_dcf {_bbf =_ege .LineNumber ()+1;}else {_egb :=_efe .(_bd .Regioner );_aegg :=_egb .GetRegionInfo ();
_fag :=_adb .getCombinationOperator (_ddea ,_aegg .CombinaionOperator );_ead ,_cca :=_egb .GetRegionBitmap ();if _cca !=nil {return _g .Wrap (_cca ,_dae ,"");};_cca =_d .Blit (_ead ,_adb .Bitmap ,int (_aegg .XLocation ),_bbf ,_fag );if _cca !=nil {return _g .Wrap (_cca ,_dae ,"");
};};};return nil ;};func (_bad *Page )getHeight ()(int ,error ){const _fbg ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _bad .FinalHeight !=0{return _bad .FinalHeight ,nil ;};_eaecc :=_bad .getPageInformationSegment ();if _eaecc ==nil {return 0,_g .Error (_fbg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_ccc ,_bfg :=_eaecc .GetSegmentData ();if _bfg !=nil {return 0,_g .Wrap (_bfg ,_fbg ,"");};_gfcc ,_ade :=_ccc .(*_bd .PageInformationSegment );if !_ade {return 0,_g .Errorf (_fbg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ccc );
};if _gfcc .PageBMHeight ==_c .MaxInt32 {_ ,_bfg =_bad .GetBitmap ();if _bfg !=nil {return 0,_g .Wrap (_bfg ,_fbg ,"");};}else {_bad .FinalHeight =_gfcc .PageBMHeight ;};return _bad .FinalHeight ,nil ;};type EncodingMethod int ;func (_bgc *Page )GetResolutionY ()(int ,error ){return _bgc .getResolutionY ()};
func (_cada *Document )mapData ()error {const _cgg ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_bbb []*_bd .Header ;_baf int64 ;_bg _bd .Type ;);_aeg ,_gdg :=_cada .isFileHeaderPresent ();if _gdg !=nil {return _g .Wrap (_gdg ,_cgg ,"");};if _aeg {if _gdg =_cada .parseFileHeader ();
_gdg !=nil {return _g .Wrap (_gdg ,_cgg ,"");};_baf +=int64 (_cada ._ge );_cada .FullHeaders =true ;};var (_fdf *Page ;_ecea bool ;);for _bg !=51&&!_ecea {_ggb ,_gcf :=_bd .NewHeader (_cada ,_cada .InputStream ,_baf ,_cada .OrganizationType );if _gcf !=nil {return _g .Wrap (_gcf ,_cgg ,"");
};_b .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ggb .SegmentNumber ,_ggb .Type );
_bg =_ggb .Type ;if _bg !=_bd .TEndOfFile {if _ggb .PageAssociation !=0{_fdf =_cada .Pages [_ggb .PageAssociation ];if _fdf ==nil {_fdf =_gfde (_cada ,_ggb .PageAssociation );_cada .Pages [_ggb .PageAssociation ]=_fdf ;if _cada .NumberOfPagesUnknown {_cada .NumberOfPages ++;
};};_fdf .Segments =append (_fdf .Segments ,_ggb );}else {_cada .GlobalSegments .AddSegment (_ggb );};};_bbb =append (_bbb ,_ggb );_baf =_cada .InputStream .AbsolutePosition ();if _cada .OrganizationType ==_bd .OSequential {_baf +=int64 (_ggb .SegmentDataLength );
};_ecea ,_gcf =_cada .reachedEOF (_baf );if _gcf !=nil {_b .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gcf );
return _g .Wrap (_gcf ,_cgg ,"");};};_cada .determineRandomDataOffsets (_bbb ,uint64 (_baf ));return nil ;};func (_cabe *Document )encodeEOFHeader (_gdb _cc .BinaryWriter )(_ffc int ,_fgc error ){_bcea :=&_bd .Header {SegmentNumber :_cabe .nextSegmentNumber (),Type :_bd .TEndOfFile };
if _ffc ,_fgc =_bcea .Encode (_gdb );_fgc !=nil {return 0,_g .Wrap (_fgc ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _ffc ,nil ;};func (_ceb *Document )GetPage (pageNumber int )(_bd .Pager ,error ){const _bed ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_b .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_e .Stack ());
return nil ,_g .Errorf (_bed ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_ceb .Pages ){_b .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_g .Error (_bed ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_efd ,_bdc :=_ceb .Pages [pageNumber ];if !_bdc {_b .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_g .Errorf (_bed ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _efd ,nil ;};func (_cd *Document )completeClassifiedPages ()(_af error ){const _ba ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _cd .Classer ==nil {return nil ;
};_cd ._bb =make ([]int ,_cd .Classer .UndilatedTemplates .Size ());for _ec :=0;_ec < _cd .Classer .ClassIDs .Size ();_ec ++{_geg ,_cg :=_cd .Classer .ClassIDs .Get (_ec );if _cg !=nil {return _g .Wrapf (_cg ,_ba ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ec );
};_cd ._bb [_geg ]++;};var _cae []int ;for _efa :=0;_efa < _cd .Classer .UndilatedTemplates .Size ();_efa ++{if _cd .NumberOfPages ==1||_cd ._bb [_efa ]> 1{_cae =append (_cae ,_efa );};};var (_ea *Page ;_bf bool ;);for _dda ,_eaf :=range *_cd .Classer .ComponentPageNumbers {if _ea ,_bf =_cd .Pages [_eaf ];
!_bf {return _g .Errorf (_ba ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dda );};if _ea .EncodingMethod ==GenericEM {_b .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_dda );
continue ;};_cd ._ggg [_eaf ]=append (_cd ._ggg [_eaf ],_dda );_acb ,_abe :=_cd .Classer .ClassIDs .Get (_dda );if _abe !=nil {return _g .Wrapf (_abe ,_ba ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_dda );
};if _cd ._bb [_acb ]==1&&_cd .NumberOfPages !=1{_gd :=append (_cd ._ab [_eaf ],_acb );_cd ._ab [_eaf ]=_gd ;};};if _af =_cd .Classer .ComputeLLCorners ();_af !=nil {return _g .Wrap (_af ,_ba ,"");};if _ ,_af =_cd .addSymbolDictionary (0,_cd .Classer .UndilatedTemplates ,_cae ,_cd ._cag ,false );
_af !=nil {return _g .Wrap (_af ,_ba ,"");};return nil ;};func (_ebab *Page )fitsPage (_fda *_bd .PageInformationSegment ,_afa *_d .Bitmap )bool {return _ebab .countRegions ()==1&&_fda .DefaultPixelValue ==0&&_fda .PageBMWidth ==_afa .Width &&_fda .PageBMHeight ==_afa .Height ;
};func (_dbe *Page )lastSegmentNumber ()(_afe uint32 ,_bgcb error ){const _aece ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_dbe .Segments )==0{return _afe ,_g .Errorf (_aece ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_dbe .PageNumber );
};return _dbe .Segments [len (_dbe .Segments )-1].SegmentNumber ,nil ;};func (_eafc *Document )determineRandomDataOffsets (_aae []*_bd .Header ,_bdg uint64 ){if _eafc .OrganizationType !=_bd .ORandom {return ;};for _ ,_cad :=range _aae {_cad .SegmentDataStartOffset =_bdg ;
_bdg +=_cad .SegmentDataLength ;};};func (_dff *Document )completeSymbols ()(_cf error ){const _dc ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _dff .Classer ==nil {return nil ;};if _dff .Classer .UndilatedTemplates ==nil {return _g .Error (_dc ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_db :=len (_dff .Pages )==1;_ggdb :=make ([]int ,_dff .Classer .UndilatedTemplates .Size ());var _ga int ;for _gbc :=0;_gbc < _dff .Classer .ClassIDs .Size ();_gbc ++{_ga ,_cf =_dff .Classer .ClassIDs .Get (_gbc );if _cf !=nil {return _g .Wrap (_cf ,_dc ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_ggdb [_ga ]++;};var _bab []int ;for _eec :=0;_eec < _dff .Classer .UndilatedTemplates .Size ();_eec ++{if _ggdb [_eec ]==0{return _g .Error (_dc ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _ggdb [_eec ]> 1||_db {_bab =append (_bab ,_eec );};};_dff ._gg =len (_bab );var _afd ,_gbg int ;for _dfc :=0;_dfc < _dff .Classer .ComponentPageNumbers .Size ();_dfc ++{_afd ,_cf =_dff .Classer .ComponentPageNumbers .Get (_dfc );if _cf !=nil {return _g .Wrapf (_cf ,_dc ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dfc );
};_gbg ,_cf =_dff .Classer .ClassIDs .Get (_dfc );if _cf !=nil {return _g .Wrapf (_cf ,_dc ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_afd );
};if _ggdb [_gbg ]==1&&!_db {_dff ._ab [_afd ]=append (_dff ._ab [_afd ],_gbg );};};if _cf =_dff .Classer .ComputeLLCorners ();_cf !=nil {return _g .Wrap (_cf ,_dc ,"");};return nil ;};func (_ecf *Page )getPageInformationSegment ()*_bd .Header {for _ ,_fgcba :=range _ecf .Segments {if _fgcba .Type ==_bd .TPageInformation {return _fgcba ;
};};_b .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_ecf );
return nil ;};func (_cda *Document )nextSegmentNumber ()uint32 {_fgcb :=_cda .CurrentSegmentNumber ;_cda .CurrentSegmentNumber ++;return _fgcb ;};func DecodeDocument (input *_cc .Reader ,globals *Globals )(*Document ,error ){return _acad (input ,globals );
};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_cc .Reader ;GlobalSegments *Globals ;OrganizationType _bd .OrganizationType ;Classer *_df .Classer ;XRes ,YRes int ;FullHeaders bool ;
CurrentSegmentNumber uint32 ;AverageTemplates *_d .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ge uint8 ;_bc *_cc .BufferedWriter ;EncodeGlobals bool ;_gg int ;_ab map[int ][]int ;_ggg map[int ][]int ;_bb []int ;_cag map[int ]int ;};
type Globals struct{Segments []*_bd .Header ;};func (_eaa *Document )reachedEOF (_eb int64 )(bool ,error ){const _cba ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_dcec :=_eaa .InputStream .Seek (_eb ,_ef .SeekStart );if _dcec !=nil {_b .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dcec );
return false ,_g .Wrap (_dcec ,_cba ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_dcec =_eaa .InputStream .ReadBits (32);if _dcec ==_ef .EOF {return true ,nil ;
}else if _dcec !=nil {return false ,_g .Wrap (_dcec ,_cba ,"");};return false ,nil ;};func (_ged *Page )String ()string {return _ca .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_ged .PageNumber );};func (_ebde *Page )composePageBitmap ()error {const _cea ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _ebde .PageNumber ==0{return nil ;};_aba :=_ebde .getPageInformationSegment ();if _aba ==nil {return _g .Error (_cea ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_eba ,_cec :=_aba .GetSegmentData ();if _cec !=nil {return _cec ;};_ffe ,_egdf :=_eba .(*_bd .PageInformationSegment );if !_egdf {return _g .Error (_cea ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _cec =_ebde .createPage (_ffe );_cec !=nil {return _g .Wrap (_cec ,_cea ,"");};_ebde .clearSegmentData ();return nil ;};func (_gcg *Page )GetBitmap ()(_gbgb *_d .Bitmap ,_egcf error ){_b .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_gcg .PageNumber ));
defer func (){if _egcf !=nil {_b .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gcg .PageNumber ,_egcf ));
}else {_b .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_gcg .PageNumber ));};}();if _gcg .Bitmap !=nil {return _gcg .Bitmap ,nil ;
};_egcf =_gcg .composePageBitmap ();if _egcf !=nil {return nil ,_egcf ;};return _gcg .Bitmap ,nil ;};func (_babb *Page )addTextRegionSegment (_fed []*_bd .Header ,_gdd ,_cdaf map[int ]int ,_eded []int ,_gdfa *_d .Points ,_fff *_d .Bitmaps ,_gccc *_eg .IntSlice ,_aegf *_d .Boxes ,_fgcg ,_aac int ){_ccef :=&_bd .TextRegion {NumberOfSymbols :uint32 (_aac )};
_ccef .InitEncode (_gdd ,_cdaf ,_eded ,_gdfa ,_fff ,_gccc ,_aegf ,_babb .FinalWidth ,_babb .FinalHeight ,_fgcg );_dca :=&_bd .Header {RTSegments :_fed ,SegmentData :_ccef ,PageAssociation :_babb .PageNumber ,Type :_bd .TImmediateTextRegion };_acc :=_bd .TPageInformation ;
if _cdaf !=nil {_acc =_bd .TSymbolDictionary ;};var _gbf int ;for ;_gbf < len (_babb .Segments );_gbf ++{if _babb .Segments [_gbf ].Type ==_acc {_gbf ++;break ;};};_babb .Segments =append (_babb .Segments ,nil );copy (_babb .Segments [_gbf +1:],_babb .Segments [_gbf :]);
_babb .Segments [_gbf ]=_dca ;};func (_bafd *Page )getWidth ()(int ,error ){const _ded ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bafd .FinalWidth !=0{return _bafd .FinalWidth ,nil ;};_eefb :=_bafd .getPageInformationSegment ();if _eefb ==nil {return 0,_g .Error (_ded ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_bfgg ,_fdg :=_eefb .GetSegmentData ();if _fdg !=nil {return 0,_g .Wrap (_fdg ,_ded ,"");};_gaac ,_bcf :=_bfgg .(*_bd .PageInformationSegment );if !_bcf {return 0,_g .Errorf (_ded ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bfgg );
};_bafd .FinalWidth =_gaac .PageBMWidth ;return _bafd .FinalWidth ,nil ;};func (_bdda *Page )getResolutionY ()(int ,error ){const _fae ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _bdda .ResolutionY !=0{return _bdda .ResolutionY ,nil ;
};_gdfg :=_bdda .getPageInformationSegment ();if _gdfg ==nil {return 0,_g .Error (_fae ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ggbf ,_fdd :=_gdfg .GetSegmentData ();if _fdd !=nil {return 0,_g .Wrap (_fdd ,_fae ,"");
};_baa ,_ffb :=_ggbf .(*_bd .PageInformationSegment );if !_ffb {return 0,_g .Errorf (_fae ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_ggbf );
};_bdda .ResolutionY =_baa .ResolutionY ;return _bdda .ResolutionY ,nil ;};func (_ggd *Document )AddGenericPage (bm *_d .Bitmap ,duplicateLineRemoval bool )(_fc error ){const _fb ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ggd .FullHeaders &&_ggd .NumberOfPages !=0{return _g .Error (_fb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ae :=&Page {Segments :[]*_bd .Header {},Bitmap :bm ,Document :_ggd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_d .Chocolate };_ae .PageNumber =int (_ggd .nextPageNumber ());_ggd .Pages [_ae .PageNumber ]=_ae ;
bm .InverseData ();_ae .AddPageInformationSegment ();if _fc =_ae .AddGenericRegion (bm ,0,0,0,_bd .TImmediateGenericRegion ,duplicateLineRemoval );_fc !=nil {return _g .Wrap (_fc ,_fb ,"");};if _ggd .FullHeaders {_ae .AddEndOfPageSegment ();};return nil ;
};func (_ddcba *Page )createNormalPage (_edf *_bd .PageInformationSegment )error {const _agb ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_ddcba .Bitmap =_d .New (_edf .PageBMWidth ,_edf .PageBMHeight );if _edf .DefaultPixelValue !=0{_ddcba .Bitmap .SetDefaultPixel ();
};for _ ,_eceb :=range _ddcba .Segments {switch _eceb .Type {case 6,7,22,23,38,39,42,43:_b .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_eceb .SegmentNumber );_ddef ,_fcb :=_eceb .GetSegmentData ();
if _fcb !=nil {return _fcb ;};_cbe ,_cgag :=_ddef .(_bd .Regioner );if !_cgag {_b .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_ddef );
return _g .Errorf (_agb ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ddef );
};_cefd ,_fcb :=_cbe .GetRegionBitmap ();if _fcb !=nil {return _g .Wrap (_fcb ,_agb ,"");};if _ddcba .fitsPage (_edf ,_cefd ){_ddcba .Bitmap =_cefd ;}else {_dcaf :=_cbe .GetRegionInfo ();_ffee :=_ddcba .getCombinationOperator (_edf ,_dcaf .CombinaionOperator );
_fcb =_d .Blit (_cefd ,_ddcba .Bitmap ,int (_dcaf .XLocation ),int (_dcaf .YLocation ),_ffee );if _fcb !=nil {return _g .Wrap (_fcb ,_agb ,"");};};};};return nil ;};func (_cbf *Page )createPage (_aaee *_bd .PageInformationSegment )error {var _gfbb error ;
if !_aaee .IsStripe ||_aaee .PageBMHeight !=-1{_gfbb =_cbf .createNormalPage (_aaee );}else {_gfbb =_cbf .createStripedPage (_aaee );};return _gfbb ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gcaa *Page )GetWidth ()(int ,error ){return _gcaa .getWidth ()};
func (_acf *Document )parseFileHeader ()error {const _cga ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_gfd :=_acf .InputStream .Seek (8,_ef .SeekStart );if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u0069\u0064");
};_ ,_gfd =_acf .InputStream .ReadBits (5);if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_ddc ,_gfd :=_acf .InputStream .ReadBit ();if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _ddc ==1{_acf .GBUseExtTemplate =true ;};_ddc ,_gfd =_acf .InputStream .ReadBit ();if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ddc !=1{_acf .NumberOfPagesUnknown =false ;
};_ddc ,_gfd =_acf .InputStream .ReadBit ();if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_acf .OrganizationType =_bd .OrganizationType (_ddc );if !_acf .NumberOfPagesUnknown {_acf .NumberOfPages ,_gfd =_acf .InputStream .ReadUint32 ();
if _gfd !=nil {return _g .Wrap (_gfd ,_cga ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_acf ._ge =13;};return nil ;};func (_aea *Document )GetNumberOfPages ()(uint32 ,error ){if _aea .NumberOfPagesUnknown ||_aea .NumberOfPages ==0{if len (_aea .Pages )==0{if _baed :=_aea .mapData ();
_baed !=nil {return 0,_g .Wrap (_baed ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_aea .Pages )),nil ;};return _aea .NumberOfPages ,nil ;};func _gb (_gc int )int {_acg :=0;
_eag :=(_gc &(_gc -1))==0;_gc >>=1;for ;_gc !=0;_gc >>=1{_acg ++;};if _eag {return _acg ;};return _acg +1;};func (_gf *Document )AddClassifiedPage (bm *_d .Bitmap ,method _df .Method )(_fe error ){const _ac ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_gf .FullHeaders &&_gf .NumberOfPages !=0{return _g .Error (_ac ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _gf .Classer ==nil {if _gf .Classer ,_fe =_df .Init (_df .DefaultSettings ());_fe !=nil {return _g .Wrap (_fe ,_ac ,"");};};_dd :=int (_gf .nextPageNumber ());_feb :=&Page {Segments :[]*_bd .Header {},Bitmap :bm ,Document :_gf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dd };
_gf .Pages [_dd ]=_feb ;switch method {case _df .RankHaus :_feb .EncodingMethod =RankHausEM ;case _df .Correlation :_feb .EncodingMethod =CorrelationEM ;};_feb .AddPageInformationSegment ();if _fe =_gf .Classer .AddPage (bm ,_dd ,method );_fe !=nil {return _g .Wrap (_fe ,_ac ,"");
};if _gf .FullHeaders {_feb .AddEndOfPageSegment ();};return nil ;};type Page struct{Segments []*_bd .Header ;PageNumber int ;Bitmap *_d .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;
EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_cdcf *Page )getResolutionX ()(int ,error ){const _dec ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _cdcf .ResolutionX !=0{return _cdcf .ResolutionX ,nil ;
};_babf :=_cdcf .getPageInformationSegment ();if _babf ==nil {return 0,_g .Error (_dec ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bffd ,_agff :=_babf .GetSegmentData ();if _agff !=nil {return 0,_g .Wrap (_agff ,_dec ,"");
};_efg ,_gfga :=_bffd .(*_bd .PageInformationSegment );if !_gfga {return 0,_g .Errorf (_dec ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bffd );
};_cdcf .ResolutionX =_efg .ResolutionX ;return _cdcf .ResolutionX ,nil ;};func (_cfa *Page )clearSegmentData (){for _cabeg :=range _cfa .Segments {_cfa .Segments [_cabeg ].CleanSegmentData ();};};func (_bce *Document )GetGlobalSegment (i int )(*_bd .Header ,error ){_gef ,_fd :=_bce .GlobalSegments .GetSegment (i );
if _fd !=nil {return nil ,_g .Wrap (_fd ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _gef ,nil ;};func (_gbge *Document )nextPageNumber ()uint32 {_gbge .NumberOfPages ++;return _gbge .NumberOfPages };
func (_fge *Page )collectPageStripes ()(_bcd []_bd .Segmenter ,_ddcbd error ){const _cgde ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _aaa _bd .Segmenter ;for _ ,_ddcf :=range _fge .Segments {switch _ddcf .Type {case 6,7,22,23,38,39,42,43:_aaa ,_ddcbd =_ddcf .GetSegmentData ();
if _ddcbd !=nil {return nil ,_g .Wrap (_ddcbd ,_cgde ,"");};_bcd =append (_bcd ,_aaa );case 50:_aaa ,_ddcbd =_ddcf .GetSegmentData ();if _ddcbd !=nil {return nil ,_ddcbd ;};_aced ,_fde :=_aaa .(*_bd .EndOfStripe );if !_fde {return nil ,_g .Errorf (_cgde ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_aaa );
};_bcd =append (_bcd ,_aced );_fge .FinalHeight =_aced .LineNumber ();};};return _bcd ,nil ;};func (_gdf *Globals )GetSegment (segmentNumber int )(*_bd .Header ,error ){const _dfdg ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _gdf ==nil {return nil ,_g .Error (_dfdg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gdf .Segments )==0{return nil ,_g .Error (_dfdg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _gcab *_bd .Header ;for _ ,_gcab =range _gdf .Segments {if _gcab .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _gcab ==nil {return nil ,_g .Error (_dfdg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gcab ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_bc :_cc .BufferedMSB (),Pages :map[int ]*Page {},_ab :map[int ][]int {},_cag :map[int ]int {},_ggg :map[int ][]int {}};};func (_bgb *Page )AddPageInformationSegment (){_cgdf :=&_bd .PageInformationSegment {PageBMWidth :_bgb .FinalWidth ,PageBMHeight :_bgb .FinalHeight ,ResolutionX :_bgb .ResolutionX ,ResolutionY :_bgb .ResolutionY ,IsLossless :_bgb .IsLossless };
if _bgb .BlackIsOne {_cgdf .DefaultPixelValue =uint8 (0x1);};_ccfe :=&_bd .Header {PageAssociation :_bgb .PageNumber ,SegmentDataLength :uint64 (_cgdf .Size ()),SegmentData :_cgdf ,Type :_bd .TPageInformation };_bgb .Segments =append (_bgb .Segments ,_ccfe );
};func _acad (_ccf *_cc .Reader ,_cce *Globals )(*Document ,error ){_fec :=&Document {Pages :make (map[int ]*Page ),InputStream :_ccf ,OrganizationType :_bd .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_cce ,_ge :9};if _fec .GlobalSegments ==nil {_fec .GlobalSegments =&Globals {};
};if _gda :=_fec .mapData ();_gda !=nil {return nil ,_gda ;};return _fec ,nil ;};func (_dfd *Document )isFileHeaderPresent ()(bool ,error ){_dfd .InputStream .Mark ();for _ ,_ffd :=range _fg {_gde ,_bff :=_dfd .InputStream .ReadByte ();if _bff !=nil {return false ,_bff ;
};if _ffd !=_gde {_dfd .InputStream .Reset ();return false ,nil ;};};_dfd .InputStream .Reset ();return true ,nil ;};func (_ggba *Page )nextSegmentNumber ()uint32 {return _ggba .Document .nextSegmentNumber ()};func (_gaa *Page )AddEndOfPageSegment (){_gac :=&_bd .Header {Type :_bd .TEndOfPage ,PageAssociation :_gaa .PageNumber };
_gaa .Segments =append (_gaa .Segments ,_gac );};func (_aec *Document )encodeSegment (_cfc *_bd .Header ,_geb *int )error {const _gcc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_cfc .SegmentNumber =_aec .nextSegmentNumber ();
_bdd ,_daf :=_cfc .Encode (_aec ._bc );if _daf !=nil {return _g .Wrapf (_daf ,_gcc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cfc .SegmentNumber );};*_geb +=_bdd ;return nil ;};func (_ce *Document )addSymbolDictionary (_ecece int ,_abd *_d .Bitmaps ,_ee []int ,_ag map[int ]int ,_acd bool )(*_bd .Header ,error ){const _be ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_cef :=&_bd .SymbolDictionary {};if _abdf :=_cef .InitEncode (_abd ,_ee ,_ag ,_acd );_abdf !=nil {return nil ,_abdf ;};_gfb :=&_bd .Header {Type :_bd .TSymbolDictionary ,PageAssociation :_ecece ,SegmentData :_cef };if _ecece ==0{if _ce .GlobalSegments ==nil {_ce .GlobalSegments =&Globals {};
};_ce .GlobalSegments .AddSegment (_gfb );return _gfb ,nil ;};_fcg ,_edc :=_ce .Pages [_ecece ];if !_edc {return nil ,_g .Errorf (_be ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ecece );};var (_dde int ;
_ggge *_bd .Header ;);for _dde ,_ggge =range _fcg .Segments {if _ggge .Type ==_bd .TPageInformation {break ;};};_dde ++;_fcg .Segments =append (_fcg .Segments ,nil );copy (_fcg .Segments [_dde +1:],_fcg .Segments [_dde :]);_fcg .Segments [_dde ]=_gfb ;
return _gfb ,nil ;};func (_eda *Document )Encode ()(_gbd []byte ,_agg error ){const _ddf ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _gge ,_ad int ;if _eda .FullHeaders {if _gge ,_agg =_eda .encodeFileHeader (_eda ._bc );
_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");};};var (_ace bool ;_bcg *_bd .Header ;_dce *Page ;);if _agg =_eda .completeClassifiedPages ();_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");};if _agg =_eda .produceClassifiedPages ();_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");
};if _eda .GlobalSegments !=nil {for _ ,_bcg =range _eda .GlobalSegments .Segments {if _agg =_eda .encodeSegment (_bcg ,&_gge );_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");};};};for _ff :=1;_ff <=int (_eda .NumberOfPages );_ff ++{if _dce ,_ace =_eda .Pages [_ff ];
!_ace {return nil ,_g .Errorf (_ddf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ff );};for _ ,_bcg =range _dce .Segments {if _agg =_eda .encodeSegment (_bcg ,&_gge );_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");
};};};if _eda .FullHeaders {if _ad ,_agg =_eda .encodeEOFHeader (_eda ._bc );_agg !=nil {return nil ,_g .Wrap (_agg ,_ddf ,"");};_gge +=_ad ;};_gbd =_eda ._bc .Data ();if len (_gbd )!=_gge {_b .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_gge ,len (_gbd ));
};return _gbd ,nil ;};func (_edeb *Page )GetSegment (number int )(*_bd .Header ,error ){const _eee ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_cfg :=range _edeb .Segments {if _cfg .SegmentNumber ==uint32 (number ){return _cfg ,nil ;
};};_geab :=make ([]uint32 ,len (_edeb .Segments ));for _cdc ,_eef :=range _edeb .Segments {_geab [_cdc ]=_eef .SegmentNumber ;};return nil ,_g .Errorf (_eee ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_edeb .PageNumber ,_geab );
};