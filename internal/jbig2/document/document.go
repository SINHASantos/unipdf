//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_e "encoding/binary";_f "fmt";_fd "github.com/unidoc/unipdf/v3/common";_ba "github.com/unidoc/unipdf/v3/internal/bitwise";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_db "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_c "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_de "io";_d "math";_b "runtime/debug";);func (_ffad *Document )GetPage (pageNumber int )(_db .Pager ,error ){const _cfd ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_fd .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_b .Stack ());
return nil ,_c .Errorf (_cfd ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_ffad .Pages ){_fd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_c .Error (_cfd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_dab ,_agee :=_ffad .Pages [pageNumber ];if !_agee {_fd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_c .Errorf (_cfd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _dab ,nil ;};func (_eg *Document )addSymbolDictionary (_ea int ,_fg *_bc .Bitmaps ,_ggfc []int ,_fe map[int ]int ,_af bool )(*_db .Header ,error ){const _df ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_ccg :=&_db .SymbolDictionary {};if _badb :=_ccg .InitEncode (_fg ,_ggfc ,_fe ,_af );_badb !=nil {return nil ,_badb ;};_dcd :=&_db .Header {Type :_db .TSymbolDictionary ,PageAssociation :_ea ,SegmentData :_ccg };if _ea ==0{if _eg .GlobalSegments ==nil {_eg .GlobalSegments =&Globals {};
};_eg .GlobalSegments .AddSegment (_dcd );return _dcd ,nil ;};_da ,_dad :=_eg .Pages [_ea ];if !_dad {return nil ,_c .Errorf (_df ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ea );};var (_fad int ;
_ca *_db .Header ;);for _fad ,_ca =range _da .Segments {if _ca .Type ==_db .TPageInformation {break ;};};_fad ++;_da .Segments =append (_da .Segments ,nil );copy (_da .Segments [_fad +1:],_da .Segments [_fad :]);_da .Segments [_fad ]=_dcd ;return _dcd ,nil ;
};func (_bbg *Page )addTextRegionSegment (_eede []*_db .Header ,_afg ,_dac map[int ]int ,_cba []int ,_eba *_bc .Points ,_gdcd *_bc .Bitmaps ,_badc *_a .IntSlice ,_eaa *_bc .Boxes ,_gcec ,_gab int ){_fag :=&_db .TextRegion {NumberOfSymbols :uint32 (_gab )};
_fag .InitEncode (_afg ,_dac ,_cba ,_eba ,_gdcd ,_badc ,_eaa ,_bbg .FinalWidth ,_bbg .FinalHeight ,_gcec );_fab :=&_db .Header {RTSegments :_eede ,SegmentData :_fag ,PageAssociation :_bbg .PageNumber ,Type :_db .TImmediateTextRegion };_fec :=_db .TPageInformation ;
if _dac !=nil {_fec =_db .TSymbolDictionary ;};var _bgae int ;for ;_bgae < len (_bbg .Segments );_bgae ++{if _bbg .Segments [_bgae ].Type ==_fec {_bgae ++;break ;};};_bbg .Segments =append (_bbg .Segments ,nil );copy (_bbg .Segments [_bgae +1:],_bbg .Segments [_bgae :]);
_bbg .Segments [_bgae ]=_fab ;};func (_dbba *Page )AddEndOfPageSegment (){_cac :=&_db .Header {Type :_db .TEndOfPage ,PageAssociation :_dbba .PageNumber };_dbba .Segments =append (_dbba .Segments ,_cac );};func (_bcg *Document )AddClassifiedPage (bm *_bc .Bitmap ,method _ga .Method )(_bga error ){const _gb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_bcg .FullHeaders &&_bcg .NumberOfPages !=0{return _c .Error (_gb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _bcg .Classer ==nil {if _bcg .Classer ,_bga =_ga .Init (_ga .DefaultSettings ());_bga !=nil {return _c .Wrap (_bga ,_gb ,"");};};_ag :=int (_bcg .nextPageNumber ());_eb :=&Page {Segments :[]*_db .Header {},Bitmap :bm ,Document :_bcg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_ag };
_bcg .Pages [_ag ]=_eb ;switch method {case _ga .RankHaus :_eb .EncodingMethod =RankHausEM ;case _ga .Correlation :_eb .EncodingMethod =CorrelationEM ;};_eb .AddPageInformationSegment ();if _bga =_bcg .Classer .AddPage (bm ,_ag ,method );_bga !=nil {return _c .Wrap (_bga ,_gb ,"");
};if _bcg .FullHeaders {_eb .AddEndOfPageSegment ();};return nil ;};func _cc (_bb int )int {_faf :=0;_acg :=(_bb &(_bb -1))==0;_bb >>=1;for ;_bb !=0;_bb >>=1{_faf ++;};if _acg {return _faf ;};return _faf +1;};func DecodeDocument (input *_ba .Reader ,globals *Globals )(*Document ,error ){return _gaeb (input ,globals );
};var _gd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_ba .Reader ;GlobalSegments *Globals ;OrganizationType _db .OrganizationType ;
Classer *_ga .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_bc .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_fde uint8 ;_fda *_ba .BufferedWriter ;EncodeGlobals bool ;_cb int ;_gc map[int ][]int ;
_cf map[int ][]int ;_ed []int ;_bd map[int ]int ;};func _gaeb (_gaec *_ba .Reader ,_gcac *Globals )(*Document ,error ){_gcae :=&Document {Pages :make (map[int ]*Page ),InputStream :_gaec ,OrganizationType :_db .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_gcac ,_fde :9};
if _gcae .GlobalSegments ==nil {_gcae .GlobalSegments =&Globals {};};if _afd :=_gcae .mapData ();_afd !=nil {return nil ,_afd ;};return _gcae ,nil ;};func (_agaf *Page )createStripedPage (_gfe *_db .PageInformationSegment )error {const _dded ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_ebae ,_dace :=_agaf .collectPageStripes ();if _dace !=nil {return _c .Wrap (_dace ,_dded ,"");};var _dga int ;for _ ,_ecca :=range _ebae {if _edf ,_ace :=_ecca .(*_db .EndOfStripe );_ace {_dga =_edf .LineNumber ()+1;}else {_gaebg :=_ecca .(_db .Regioner );
_eagf :=_gaebg .GetRegionInfo ();_abe :=_agaf .getCombinationOperator (_gfe ,_eagf .CombinaionOperator );_cdbb ,_eagc :=_gaebg .GetRegionBitmap ();if _eagc !=nil {return _c .Wrap (_eagc ,_dded ,"");};_eagc =_bc .Blit (_cdbb ,_agaf .Bitmap ,int (_eagf .XLocation ),_dga ,_abe );
if _eagc !=nil {return _c .Wrap (_eagc ,_dded ,"");};};};return nil ;};type Globals struct{Segments []*_db .Header ;};func _fbeb (_bea *Document ,_efb int )*Page {return &Page {Document :_bea ,PageNumber :_efb ,Segments :[]*_db .Header {}};};func (_ddd *Document )encodeSegment (_eead *_db .Header ,_aa *int )error {const _bgc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_eead .SegmentNumber =_ddd .nextSegmentNumber ();_fdec ,_fb :=_eead .Encode (_ddd ._fda );if _fb !=nil {return _c .Wrapf (_fb ,_bgc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_eead .SegmentNumber );};*_aa +=_fdec ;
return nil ;};func (_dde *Document )determineRandomDataOffsets (_cfdg []*_db .Header ,_aae uint64 ){if _dde .OrganizationType !=_db .ORandom {return ;};for _ ,_bgbc :=range _cfdg {_bgbc .SegmentDataStartOffset =_aae ;_aae +=_bgbc .SegmentDataLength ;};
};func (_aaa *Document )encodeEOFHeader (_dbd _ba .BinaryWriter )(_cff int ,_cfe error ){_ddc :=&_db .Header {SegmentNumber :_aaa .nextSegmentNumber (),Type :_db .TEndOfFile };if _cff ,_cfe =_ddc .Encode (_dbd );_cfe !=nil {return 0,_c .Wrap (_cfe ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _cff ,nil ;};func (_gae *Document )completeClassifiedPages ()(_dcg error ){const _cfg ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _gae .Classer ==nil {return nil ;
};_gae ._ed =make ([]int ,_gae .Classer .UndilatedTemplates .Size ());for _gca :=0;_gca < _gae .Classer .ClassIDs .Size ();_gca ++{_ee ,_ab :=_gae .Classer .ClassIDs .Get (_gca );if _ab !=nil {return _c .Wrapf (_ab ,_cfg ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_gca );
};_gae ._ed [_ee ]++;};var _bae []int ;for _gaea :=0;_gaea < _gae .Classer .UndilatedTemplates .Size ();_gaea ++{if _gae .NumberOfPages ==1||_gae ._ed [_gaea ]> 1{_bae =append (_bae ,_gaea );};};var (_gcd *Page ;_eea bool ;);for _bgb ,_eeg :=range *_gae .Classer .ComponentPageNumbers {if _gcd ,_eea =_gae .Pages [_eeg ];
!_eea {return _c .Errorf (_cfg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bgb );};if _gcd .EncodingMethod ==GenericEM {_fd .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_bgb );
continue ;};_gae ._cf [_eeg ]=append (_gae ._cf [_eeg ],_bgb );_dea ,_ef :=_gae .Classer .ClassIDs .Get (_bgb );if _ef !=nil {return _c .Wrapf (_ef ,_cfg ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_bgb );
};if _gae ._ed [_dea ]==1&&_gae .NumberOfPages !=1{_baec :=append (_gae ._gc [_eeg ],_dea );_gae ._gc [_eeg ]=_baec ;};};if _dcg =_gae .Classer .ComputeLLCorners ();_dcg !=nil {return _c .Wrap (_dcg ,_cfg ,"");};if _ ,_dcg =_gae .addSymbolDictionary (0,_gae .Classer .UndilatedTemplates ,_bae ,_gae ._bd ,false );
_dcg !=nil {return _c .Wrap (_dcg ,_cfg ,"");};return nil ;};type Page struct{Segments []*_db .Header ;PageNumber int ;Bitmap *_bc .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;
EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_fed *Document )mapData ()error {const _gge ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_ebc []*_db .Header ;_fgcd int64 ;_fdc _db .Type ;);_eed ,_gdc :=_fed .isFileHeaderPresent ();if _gdc !=nil {return _c .Wrap (_gdc ,_gge ,"");
};if _eed {if _gdc =_fed .parseFileHeader ();_gdc !=nil {return _c .Wrap (_gdc ,_gge ,"");};_fgcd +=int64 (_fed ._fde );_fed .FullHeaders =true ;};var (_ddeg *Page ;_dbda bool ;);for _fdc !=51&&!_dbda {_ffc ,_dee :=_db .NewHeader (_fed ,_fed .InputStream ,_fgcd ,_fed .OrganizationType );
if _dee !=nil {return _c .Wrap (_dee ,_gge ,"");};_fd .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ffc .SegmentNumber ,_ffc .Type );
_fdc =_ffc .Type ;if _fdc !=_db .TEndOfFile {if _ffc .PageAssociation !=0{_ddeg =_fed .Pages [_ffc .PageAssociation ];if _ddeg ==nil {_ddeg =_fbeb (_fed ,_ffc .PageAssociation );_fed .Pages [_ffc .PageAssociation ]=_ddeg ;if _fed .NumberOfPagesUnknown {_fed .NumberOfPages ++;
};};_ddeg .Segments =append (_ddeg .Segments ,_ffc );}else {_fed .GlobalSegments .AddSegment (_ffc );};};_ebc =append (_ebc ,_ffc );_fgcd =_fed .InputStream .AbsolutePosition ();if _fed .OrganizationType ==_db .OSequential {_fgcd +=int64 (_ffc .SegmentDataLength );
};_dbda ,_dee =_fed .reachedEOF (_fgcd );if _dee !=nil {_fd .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dee );
return _c .Wrap (_dee ,_gge ,"");};};_fed .determineRandomDataOffsets (_ebc ,uint64 (_fgcd ));return nil ;};func (_ggb *Page )GetHeight ()(int ,error ){return _ggb .getHeight ()};func (_fggd *Page )GetResolutionX ()(int ,error ){return _fggd .getResolutionX ()};
func (_ebcde *Page )String ()string {return _f .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_ebcde .PageNumber );};func (_feg *Page )Encode (w _ba .BinaryWriter )(_be int ,_dg error ){const _ccgc ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _fgge int ;for _ ,_ggd :=range _feg .Segments {if _fgge ,_dg =_ggd .Encode (w );_dg !=nil {return _be ,_c .Wrap (_dg ,_ccgc ,"");};_be +=_fgge ;};return _be ,nil ;};func (_ada *Document )completeSymbols ()(_ebd error ){const _agb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _ada .Classer ==nil {return nil ;};if _ada .Classer .UndilatedTemplates ==nil {return _c .Error (_agb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_dd :=len (_ada .Pages )==1;_bbc :=make ([]int ,_ada .Classer .UndilatedTemplates .Size ());var _fafe int ;for _gcg :=0;_gcg < _ada .Classer .ClassIDs .Size ();_gcg ++{_fafe ,_ebd =_ada .Classer .ClassIDs .Get (_gcg );if _ebd !=nil {return _c .Wrap (_ebd ,_agb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_bbc [_fafe ]++;};var _eebe []int ;for _gde :=0;_gde < _ada .Classer .UndilatedTemplates .Size ();_gde ++{if _bbc [_gde ]==0{return _c .Error (_agb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _bbc [_gde ]> 1||_dd {_eebe =append (_eebe ,_gde );};};_ada ._cb =len (_eebe );var _fac ,_dbb int ;for _ffa :=0;_ffa < _ada .Classer .ComponentPageNumbers .Size ();_ffa ++{_fac ,_ebd =_ada .Classer .ComponentPageNumbers .Get (_ffa );if _ebd !=nil {return _c .Wrapf (_ebd ,_agb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_ffa );
};_dbb ,_ebd =_ada .Classer .ClassIDs .Get (_ffa );if _ebd !=nil {return _c .Wrapf (_ebd ,_agb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_fac );
};if _bbc [_dbb ]==1&&!_dd {_ada ._gc [_fac ]=append (_ada ._gc [_fac ],_dbb );};};if _ebd =_ada .Classer .ComputeLLCorners ();_ebd !=nil {return _c .Wrap (_ebd ,_agb ,"");};return nil ;};func (_ece *Document )GetNumberOfPages ()(uint32 ,error ){if _ece .NumberOfPagesUnknown ||_ece .NumberOfPages ==0{if len (_ece .Pages )==0{if _ged :=_ece .mapData ();
_ged !=nil {return 0,_c .Wrap (_ged ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_ece .Pages )),nil ;};return _ece .NumberOfPages ,nil ;};func (_ff *Document )produceClassifiedPage (_ebg *Page ,_ae *_db .Header )(_fdeb error ){const _gac ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _edb map[int ]int ;_cd :=_ff ._cb ;_ec :=[]*_db .Header {_ae };if len (_ff ._gc [_ebg .PageNumber ])> 0{_edb =map[int ]int {};_bada ,_cdb :=_ff .addSymbolDictionary (_ebg .PageNumber ,_ff .Classer .UndilatedTemplates ,_ff ._gc [_ebg .PageNumber ],_edb ,false );
if _cdb !=nil {return _c .Wrap (_cdb ,_gac ,"");};_ec =append (_ec ,_bada );_cd +=len (_ff ._gc [_ebg .PageNumber ]);};_ggf :=_ff ._cf [_ebg .PageNumber ];_fd .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ebg .PageNumber ,_ggf );
_ebg .addTextRegionSegment (_ec ,_ff ._bd ,_edb ,_ff ._cf [_ebg .PageNumber ],_ff .Classer .PtaLL ,_ff .Classer .UndilatedTemplates ,_ff .Classer .ClassIDs ,nil ,_cc (_cd ),len (_ff ._cf [_ebg .PageNumber ]));return nil ;};func (_bge *Page )AddPageInformationSegment (){_egg :=&_db .PageInformationSegment {PageBMWidth :_bge .FinalWidth ,PageBMHeight :_bge .FinalHeight ,ResolutionX :_bge .ResolutionX ,ResolutionY :_bge .ResolutionY ,IsLossless :_bge .IsLossless };
if _bge .BlackIsOne {_egg .DefaultPixelValue =uint8 (0x1);};_gece :=&_db .Header {PageAssociation :_bge .PageNumber ,SegmentDataLength :uint64 (_egg .Size ()),SegmentData :_egg ,Type :_db .TPageInformation };_bge .Segments =append (_bge .Segments ,_gece );
};func (_abc *Document )encodeFileHeader (_gbc _ba .BinaryWriter )(_gfb int ,_adf error ){const _fbe ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gfb ,_adf =_gbc .Write (_gd );if _adf !=nil {return _gfb ,_c .Wrap (_adf ,_fbe ,"\u0069\u0064");
};if _adf =_gbc .WriteByte (0x01);_adf !=nil {return _gfb ,_c .Wrap (_adf ,_fbe ,"\u0066\u006c\u0061g\u0073");};_gfb ++;_ebdf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_ebdf ,_abc .NumberOfPages );_cdad ,_adf :=_gbc .Write (_ebdf );if _adf !=nil {return _cdad ,_c .Wrap (_adf ,_fbe ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_gfb +=_cdad ;return _gfb ,nil ;};func (_dge *Page )fitsPage (_ecga *_db .PageInformationSegment ,_cdae *_bc .Bitmap )bool {return _dge .countRegions ()==1&&_ecga .DefaultPixelValue ==0&&_ecga .PageBMWidth ==_cdae .Width &&_ecga .PageBMHeight ==_cdae .Height ;
};func (_ge *Document )Encode ()(_edd []byte ,_age error ){const _gf ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cda ,_fea int ;if _ge .FullHeaders {if _cda ,_age =_ge .encodeFileHeader (_ge ._fda );_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");
};};var (_abg bool ;_ege *_db .Header ;_afa *Page ;);if _age =_ge .completeClassifiedPages ();_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");};if _age =_ge .produceClassifiedPages ();_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");};if _ge .GlobalSegments !=nil {for _ ,_ege =range _ge .GlobalSegments .Segments {if _age =_ge .encodeSegment (_ege ,&_cda );
_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");};};};for _gce :=1;_gce <=int (_ge .NumberOfPages );_gce ++{if _afa ,_abg =_ge .Pages [_gce ];!_abg {return nil ,_c .Errorf (_gf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gce );
};for _ ,_ege =range _afa .Segments {if _age =_ge .encodeSegment (_ege ,&_cda );_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");};};};if _ge .FullHeaders {if _fea ,_age =_ge .encodeEOFHeader (_ge ._fda );_age !=nil {return nil ,_c .Wrap (_age ,_gf ,"");
};_cda +=_fea ;};_edd =_ge ._fda .Data ();if len (_edd )!=_cda {_fd .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cda ,len (_edd ));
};return _edd ,nil ;};func (_facf *Page )composePageBitmap ()error {const _ce ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _facf .PageNumber ==0{return nil ;};_ecc :=_facf .getPageInformationSegment ();
if _ecc ==nil {return _c .Error (_ce ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_geb ,_ebf :=_ecc .GetSegmentData ();
if _ebf !=nil {return _ebf ;};_acb ,_ade :=_geb .(*_db .PageInformationSegment );if !_ade {return _c .Error (_ce ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _ebf =_facf .createPage (_acb );_ebf !=nil {return _c .Wrap (_ebf ,_ce ,"");};_facf .clearSegmentData ();return nil ;};func (_bfg *Page )getWidth ()(int ,error ){const _bcgf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bfg .FinalWidth !=0{return _bfg .FinalWidth ,nil ;
};_aaad :=_bfg .getPageInformationSegment ();if _aaad ==nil {return 0,_c .Error (_bcgf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cada ,_aab :=_aaad .GetSegmentData ();if _aab !=nil {return 0,_c .Wrap (_aab ,_bcgf ,"");
};_egea ,_fgdb :=_cada .(*_db .PageInformationSegment );if !_fgdb {return 0,_c .Errorf (_bcgf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cada );
};_bfg .FinalWidth =_egea .PageBMWidth ;return _bfg .FinalWidth ,nil ;};func (_ffdf *Page )AddGenericRegion (bm *_bc .Bitmap ,xloc ,yloc ,template int ,tp _db .Type ,duplicateLineRemoval bool )error {const _dbg ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_bff :=&_db .GenericRegion {};if _cbd :=_bff .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_cbd !=nil {return _c .Wrap (_cbd ,_dbg ,"");};_aaf :=&_db .Header {Type :_db .TImmediateGenericRegion ,PageAssociation :_ffdf .PageNumber ,SegmentData :_bff };
_ffdf .Segments =append (_ffdf .Segments ,_aaf );return nil ;};func (_gga *Globals )GetSegment (segmentNumber int )(*_db .Header ,error ){const _ebcd ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _gga ==nil {return nil ,_c .Error (_ebcd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_gga .Segments )==0{return nil ,_c .Error (_ebcd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _gaead *_db .Header ;for _ ,_gaead =range _gga .Segments {if _gaead .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _gaead ==nil {return nil ,_c .Error (_ebcd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _gaead ,nil ;};func (_adaa *Globals )GetSegmentByIndex (index int )(*_db .Header ,error ){const _egb ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _adaa ==nil {return nil ,_c .Error (_egb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_adaa .Segments )==0{return nil ,_c .Error (_egb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_adaa .Segments )-1{return nil ,_c .Error (_egb ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _adaa .Segments [index ],nil ;};func (_aac *Page )getResolutionY ()(int ,error ){const _fdd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _aac .ResolutionY !=0{return _aac .ResolutionY ,nil ;};_bbge :=_aac .getPageInformationSegment ();if _bbge ==nil {return 0,_c .Error (_fdd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ded ,_gacf :=_bbge .GetSegmentData ();
if _gacf !=nil {return 0,_c .Wrap (_gacf ,_fdd ,"");};_cdeb ,_fdbg :=_ded .(*_db .PageInformationSegment );if !_fdbg {return 0,_c .Errorf (_fdd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_ded );
};_aac .ResolutionY =_cdeb .ResolutionY ;return _aac .ResolutionY ,nil ;};func (_gaef *Page )GetBitmap ()(_cbag *_bc .Bitmap ,_eebf error ){_fd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_gaef .PageNumber ));
defer func (){if _eebf !=nil {_fd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gaef .PageNumber ,_eebf ));
}else {_fd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_gaef .PageNumber ));};}();if _gaef .Bitmap !=nil {return _gaef .Bitmap ,nil ;
};_eebf =_gaef .composePageBitmap ();if _eebf !=nil {return nil ,_eebf ;};return _gaef .Bitmap ,nil ;};func (_daf *Document )GetGlobalSegment (i int )(*_db .Header ,error ){_fga ,_bdd :=_daf .GlobalSegments .GetSegment (i );if _bdd !=nil {return nil ,_c .Wrap (_bdd ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _fga ,nil ;};func (_bfa *Page )createPage (_aga *_db .PageInformationSegment )error {var _dgc error ;if !_aga .IsStripe ||_aga .PageBMHeight !=-1{_dgc =_bfa .createNormalPage (_aga );}else {_dgc =_bfa .createStripedPage (_aga );};return _dgc ;
};func (_ggfd *Globals )GetSymbolDictionary ()(*_db .Header ,error ){const _bgf ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _ggfd ==nil {return nil ,_c .Error (_bgf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_ggfd .Segments )==0{return nil ,_c .Error (_bgf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_bag :=range _ggfd .Segments {if _bag .Type ==_db .TSymbolDictionary {return _bag ,nil ;
};};return nil ,_c .Error (_bgf ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_gdcf *Page )getCombinationOperator (_abgg *_db .PageInformationSegment ,_caa _bc .CombinationOperator )_bc .CombinationOperator {if _abgg .CombinationOperatorOverrideAllowed (){return _caa ;
};return _abgg .CombinationOperator ();};func (_eef *Page )getPageInformationSegment ()*_db .Header {for _ ,_bagd :=range _eef .Segments {if _bagd .Type ==_db .TPageInformation {return _bagd ;};};_fd .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_eef );
return nil ;};func (_eec *Document )nextPageNumber ()uint32 {_eec .NumberOfPages ++;return _eec .NumberOfPages };const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_fda :_ba .BufferedMSB (),Pages :map[int ]*Page {},_gc :map[int ][]int {},_bd :map[int ]int {},_cf :map[int ][]int {}};
};type EncodingMethod int ;func (_dcb *Page )nextSegmentNumber ()uint32 {return _dcb .Document .nextSegmentNumber ()};func (_fagc *Page )clearSegmentData (){for _gbb :=range _fagc .Segments {_fagc .Segments [_gbb ].CleanSegmentData ();};};func (_eddd *Globals )AddSegment (segment *_db .Header ){_eddd .Segments =append (_eddd .Segments ,segment );
};func (_gg *Document )produceClassifiedPages ()(_eeb error ){const _gag ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _gg .Classer ==nil {return nil ;};var (_fa *Page ;_ac bool ;
_bf *_db .Header ;);for _dbe :=1;_dbe <=int (_gg .NumberOfPages );_dbe ++{if _fa ,_ac =_gg .Pages [_dbe ];!_ac {return _c .Errorf (_gag ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbe );};if _fa .EncodingMethod ==GenericEM {continue ;
};if _bf ==nil {if _bf ,_eeb =_gg .GlobalSegments .GetSymbolDictionary ();_eeb !=nil {return _c .Wrap (_eeb ,_gag ,"");};};if _eeb =_gg .produceClassifiedPage (_fa ,_bf );_eeb !=nil {return _c .Wrapf (_eeb ,_gag ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_dbe );
};};return nil ;};func (_gdg *Document )parseFileHeader ()error {const _ebgd ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_egee :=_gdg .InputStream .Seek (8,_de .SeekStart );if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u0069\u0064");
};_ ,_egee =_gdg .InputStream .ReadBits (5);if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_bcd ,_egee :=_gdg .InputStream .ReadBit ();if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _bcd ==1{_gdg .GBUseExtTemplate =true ;};_bcd ,_egee =_gdg .InputStream .ReadBit ();if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _bcd !=1{_gdg .NumberOfPagesUnknown =false ;
};_bcd ,_egee =_gdg .InputStream .ReadBit ();if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_gdg .OrganizationType =_db .OrganizationType (_bcd );if !_gdg .NumberOfPagesUnknown {_gdg .NumberOfPages ,_egee =_gdg .InputStream .ReadUint32 ();
if _egee !=nil {return _c .Wrap (_egee ,_ebgd ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_gdg ._fde =13;};return nil ;};func (_gbe *Page )countRegions ()int {var _bddc int ;for _ ,_bde :=range _gbe .Segments {switch _bde .Type {case 6,7,22,23,38,39,42,43:_bddc ++;
};};return _bddc ;};func (_edc *Page )createNormalPage (_gfa *_db .PageInformationSegment )error {const _dfg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_edc .Bitmap =_bc .New (_gfa .PageBMWidth ,_gfa .PageBMHeight );
if _gfa .DefaultPixelValue !=0{_edc .Bitmap .SetDefaultPixel ();};for _ ,_gdf :=range _edc .Segments {switch _gdf .Type {case 6,7,22,23,38,39,42,43:_fd .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_gdf .SegmentNumber );
_dacd ,_cad :=_gdf .GetSegmentData ();if _cad !=nil {return _cad ;};_edddc ,_bcf :=_dacd .(_db .Regioner );if !_bcf {_fd .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_dacd );
return _c .Errorf (_dfg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dacd );
};_abf ,_cad :=_edddc .GetRegionBitmap ();if _cad !=nil {return _c .Wrap (_cad ,_dfg ,"");};if _edc .fitsPage (_gfa ,_abf ){_edc .Bitmap =_abf ;}else {_ddg :=_edddc .GetRegionInfo ();_egbc :=_edc .getCombinationOperator (_gfa ,_ddg .CombinaionOperator );
_cad =_bc .Blit (_abf ,_edc .Bitmap ,int (_ddg .XLocation ),int (_ddg .YLocation ),_egbc );if _cad !=nil {return _c .Wrap (_cad ,_dfg ,"");};};};};return nil ;};func (_ad *Document )AddGenericPage (bm *_bc .Bitmap ,duplicateLineRemoval bool )(_cbe error ){const _bg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ad .FullHeaders &&_ad .NumberOfPages !=0{return _c .Error (_bg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_dc :=&Page {Segments :[]*_db .Header {},Bitmap :bm ,Document :_ad ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_bc .Chocolate };_dc .PageNumber =int (_ad .nextPageNumber ());_ad .Pages [_dc .PageNumber ]=_dc ;
bm .InverseData ();_dc .AddPageInformationSegment ();if _cbe =_dc .AddGenericRegion (bm ,0,0,0,_db .TImmediateGenericRegion ,duplicateLineRemoval );_cbe !=nil {return _c .Wrap (_cbe ,_bg ,"");};if _ad .FullHeaders {_dc .AddEndOfPageSegment ();};return nil ;
};func (_fgd *Document )reachedEOF (_efd int64 )(bool ,error ){const _bdc ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_ebcg :=_fgd .InputStream .Seek (_efd ,_de .SeekStart );if _ebcg !=nil {_fd .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ebcg );
return false ,_c .Wrap (_ebcg ,_bdc ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_ebcg =_fgd .InputStream .ReadBits (32);if _ebcg ==_de .EOF {return true ,nil ;
}else if _ebcg !=nil {return false ,_c .Wrap (_ebcg ,_bdc ,"");};return false ,nil ;};func (_gcgb *Page )collectPageStripes ()(_acgf []_db .Segmenter ,_efc error ){const _cafb ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _ebdd _db .Segmenter ;for _ ,_efdd :=range _gcgb .Segments {switch _efdd .Type {case 6,7,22,23,38,39,42,43:_ebdd ,_efc =_efdd .GetSegmentData ();if _efc !=nil {return nil ,_c .Wrap (_efc ,_cafb ,"");};_acgf =append (_acgf ,_ebdd );case 50:_ebdd ,_efc =_efdd .GetSegmentData ();
if _efc !=nil {return nil ,_efc ;};_gea ,_bcc :=_ebdd .(*_db .EndOfStripe );if !_bcc {return nil ,_c .Errorf (_cafb ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ebdd );
};_acgf =append (_acgf ,_gea );_gcgb .FinalHeight =_gea .LineNumber ();};};return _acgf ,nil ;};func (_fbg *Page )getResolutionX ()(int ,error ){const _gbbc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _fbg .ResolutionX !=0{return _fbg .ResolutionX ,nil ;
};_aec :=_fbg .getPageInformationSegment ();if _aec ==nil {return 0,_c .Error (_gbbc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gfg ,_aaec :=_aec .GetSegmentData ();if _aaec !=nil {return 0,_c .Wrap (_aaec ,_gbbc ,"");
};_ceb ,_efe :=_gfg .(*_db .PageInformationSegment );if !_efe {return 0,_c .Errorf (_gbbc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gfg );
};_fbg .ResolutionX =_ceb .ResolutionX ;return _fbg .ResolutionX ,nil ;};func (_ggfa *Document )nextSegmentNumber ()uint32 {_ffd :=_ggfa .CurrentSegmentNumber ;_ggfa .CurrentSegmentNumber ++;return _ffd ;};func (_cg *Document )isFileHeaderPresent ()(bool ,error ){_cg .InputStream .Mark ();
for _ ,_gec :=range _gd {_fgg ,_cca :=_cg .InputStream .ReadByte ();if _cca !=nil {return false ,_cca ;};if _gec !=_fgg {_cg .InputStream .Reset ();return false ,nil ;};};_cg .InputStream .Reset ();return true ,nil ;};func (_dfd *Page )getHeight ()(int ,error ){const _facg ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _dfd .FinalHeight !=0{return _dfd .FinalHeight ,nil ;};_bffd :=_dfd .getPageInformationSegment ();if _bffd ==nil {return 0,_c .Error (_facg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_baa ,_deag :=_bffd .GetSegmentData ();
if _deag !=nil {return 0,_c .Wrap (_deag ,_facg ,"");};_cde ,_ffg :=_baa .(*_db .PageInformationSegment );if !_ffg {return 0,_c .Errorf (_facg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_baa );
};if _cde .PageBMHeight ==_d .MaxInt32 {_ ,_deag =_dfd .GetBitmap ();if _deag !=nil {return 0,_c .Wrap (_deag ,_facg ,"");};}else {_dfd .FinalHeight =_cde .PageBMHeight ;};return _dfd .FinalHeight ,nil ;};func (_cdd *Page )GetSegment (number int )(*_db .Header ,error ){const _gee ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_abb :=range _cdd .Segments {if _abb .SegmentNumber ==uint32 (number ){return _abb ,nil ;};};_fdb :=make ([]uint32 ,len (_cdd .Segments ));for _geea ,_dec :=range _cdd .Segments {_fdb [_geea ]=_dec .SegmentNumber ;};return nil ,_c .Errorf (_gee ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_cdd .PageNumber ,_fdb );
};func (_caf *Page )GetWidth ()(int ,error ){return _caf .getWidth ()};func (_ecf *Page )GetResolutionY ()(int ,error ){return _ecf .getResolutionY ()};func (_fdad *Page )lastSegmentNumber ()(_agc uint32 ,_ega error ){const _cef ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_fdad .Segments )==0{return _agc ,_c .Errorf (_cef ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_fdad .PageNumber );
};return _fdad .Segments [len (_fdad .Segments )-1].SegmentNumber ,nil ;};