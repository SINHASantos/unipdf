//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_eg "encoding/binary";_a "fmt";_fc "github.com/unidoc/unipdf/v4/common";_g "github.com/unidoc/unipdf/v4/internal/bitwise";_bc "github.com/unidoc/unipdf/v4/internal/jbig2/basic";_bb "github.com/unidoc/unipdf/v4/internal/jbig2/bitmap";
_c "github.com/unidoc/unipdf/v4/internal/jbig2/document/segments";_af "github.com/unidoc/unipdf/v4/internal/jbig2/encoder/classer";_dd "github.com/unidoc/unipdf/v4/internal/jbig2/errors";_f "io";_b "math";_d "runtime/debug";);func (_edb *Page )GetResolutionX ()(int ,error ){return _edb .getResolutionX ()};
func (_cede *Page )getWidth ()(int ,error ){const _cdg ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _cede .FinalWidth !=0{return _cede .FinalWidth ,nil ;};_fdd :=_cede .getPageInformationSegment ();if _fdd ==nil {return 0,_dd .Error (_cdg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_aeb ,_ggbd :=_fdd .GetSegmentData ();if _ggbd !=nil {return 0,_dd .Wrap (_ggbd ,_cdg ,"");};_cbbe ,_cabf :=_aeb .(*_c .PageInformationSegment );if !_cabf {return 0,_dd .Errorf (_cdg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_aeb );
};_cede .FinalWidth =_cbbe .PageBMWidth ;return _cede .FinalWidth ,nil ;};func (_gcdg *Document )reachedEOF (_agd int64 )(bool ,error ){const _fdcf ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_dab :=_gcdg .InputStream .Seek (_agd ,_f .SeekStart );
if _dab !=nil {_fc .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dab );
return false ,_dd .Wrap (_dab ,_fdcf ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_dab =_gcdg .InputStream .ReadBits (32);if _dab ==_f .EOF {return true ,nil ;
}else if _dab !=nil {return false ,_dd .Wrap (_dab ,_fdcf ,"");};return false ,nil ;};func (_eee *Document )nextSegmentNumber ()uint32 {_fbdg :=_eee .CurrentSegmentNumber ;_eee .CurrentSegmentNumber ++;return _fbdg ;};func (_bbb *Document )completeClassifiedPages ()(_be error ){const _deg ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _bbb .Classer ==nil {return nil ;};_bbb ._cb =make ([]int ,_bbb .Classer .UndilatedTemplates .Size ());for _da :=0;_da < _bbb .Classer .ClassIDs .Size ();_da ++{_fgd ,_fa :=_bbb .Classer .ClassIDs .Get (_da );if _fa !=nil {return _dd .Wrapf (_fa ,_deg ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_da );
};_bbb ._cb [_fgd ]++;};var _ag []int ;for _gg :=0;_gg < _bbb .Classer .UndilatedTemplates .Size ();_gg ++{if _bbb .NumberOfPages ==1||_bbb ._cb [_gg ]> 1{_ag =append (_ag ,_gg );};};var (_fe *Page ;_cf bool ;);for _gfg ,_fbd :=range *_bbb .Classer .ComponentPageNumbers {if _fe ,_cf =_bbb .Pages [_fbd ];
!_cf {return _dd .Errorf (_deg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gfg );};if _fe .EncodingMethod ==GenericEM {_fc .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_gfg );
continue ;};_bbb ._ga [_fbd ]=append (_bbb ._ga [_fbd ],_gfg );_aa ,_ce :=_bbb .Classer .ClassIDs .Get (_gfg );if _ce !=nil {return _dd .Wrapf (_ce ,_deg ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_gfg );
};if _bbb ._cb [_aa ]==1&&_bbb .NumberOfPages !=1{_fbg :=append (_bbb ._ee [_fbd ],_aa );_bbb ._ee [_fbd ]=_fbg ;};};if _be =_bbb .Classer .ComputeLLCorners ();_be !=nil {return _dd .Wrap (_be ,_deg ,"");};if _ ,_be =_bbb .addSymbolDictionary (0,_bbb .Classer .UndilatedTemplates ,_ag ,_bbb ._db ,false );
_be !=nil {return _dd .Wrap (_be ,_deg ,"");};return nil ;};func (_efb *Page )GetSegment (number int )(*_c .Header ,error ){const _gff ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_ddg :=range _efb .Segments {if _ddg .SegmentNumber ==uint32 (number ){return _ddg ,nil ;
};};_abeb :=make ([]uint32 ,len (_efb .Segments ));for _abb ,_cd :=range _efb .Segments {_abeb [_abb ]=_cd .SegmentNumber ;};return nil ,_dd .Errorf (_gff ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_efb .PageNumber ,_abeb );
};func (_ed *Document )Encode ()(_fbb []byte ,_edf error ){const _fgde ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ddeg ,_daf int ;if _ed .FullHeaders {if _ddeg ,_edf =_ed .encodeFileHeader (_ed ._ea );_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");
};};var (_bbf bool ;_gfa *_c .Header ;_gfe *Page ;);if _edf =_ed .completeClassifiedPages ();_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");};if _edf =_ed .produceClassifiedPages ();_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");};if _ed .GlobalSegments !=nil {for _ ,_gfa =range _ed .GlobalSegments .Segments {if _edf =_ed .encodeSegment (_gfa ,&_ddeg );
_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");};};};for _faf :=1;_faf <=int (_ed .NumberOfPages );_faf ++{if _gfe ,_bbf =_ed .Pages [_faf ];!_bbf {return nil ,_dd .Errorf (_fgde ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_faf );
};for _ ,_gfa =range _gfe .Segments {if _edf =_ed .encodeSegment (_gfa ,&_ddeg );_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");};};};if _ed .FullHeaders {if _daf ,_edf =_ed .encodeEOFHeader (_ed ._ea );_edf !=nil {return nil ,_dd .Wrap (_edf ,_fgde ,"");
};_ddeg +=_daf ;};_fbb =_ed ._ea .Data ();if len (_fbb )!=_ddeg {_fc .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_ddeg ,len (_fbb ));
};return _fbb ,nil ;};func (_agdc *Page )GetWidth ()(int ,error ){return _agdc .getWidth ()};func (_gfab *Document )encodeSegment (_fef *_c .Header ,_ffd *int )error {const _bef ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_fef .SegmentNumber =_gfab .nextSegmentNumber ();_ef ,_egc :=_fef .Encode (_gfab ._ea );if _egc !=nil {return _dd .Wrapf (_egc ,_bef ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fef .SegmentNumber );};*_ffd +=_ef ;
return nil ;};func (_eagf *Globals )GetSegmentByIndex (index int )(*_c .Header ,error ){const _eda ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _eagf ==nil {return nil ,_dd .Error (_eda ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_eagf .Segments )==0{return nil ,_dd .Error (_eda ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_eagf .Segments )-1{return nil ,_dd .Error (_eda ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _eagf .Segments [index ],nil ;};func (_fdg *Page )getPageInformationSegment ()*_c .Header {for _ ,_dae :=range _fdg .Segments {if _dae .Type ==_c .TPageInformation {return _dae ;};};_fc .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_fdg );
return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gaaf *Page )String ()string {return _a .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_gaaf .PageNumber );};func (_eaeg *Page )clearSegmentData (){for _ebcc :=range _eaeg .Segments {_eaeg .Segments [_ebcc ].CleanSegmentData ();
};};func (_abac *Page )GetResolutionY ()(int ,error ){return _abac .getResolutionY ()};func _gb (_cec int )int {_dad :=0;_ab :=(_cec &(_cec -1))==0;_cec >>=1;for ;_cec !=0;_cec >>=1{_dad ++;};if _ab {return _dad ;};return _dad +1;};func (_fb *Document )AddGenericPage (bm *_bb .Bitmap ,duplicateLineRemoval bool )(_ff error ){const _df ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_fb .FullHeaders &&_fb .NumberOfPages !=0{return _dd .Error (_df ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_cbd :=&Page {Segments :[]*_c .Header {},Bitmap :bm ,Document :_fb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_bb .Chocolate };_cbd .PageNumber =int (_fb .nextPageNumber ());_fb .Pages [_cbd .PageNumber ]=_cbd ;
bm .InverseData ();_cbd .AddPageInformationSegment ();if _ff =_cbd .AddGenericRegion (bm ,0,0,0,_c .TImmediateGenericRegion ,duplicateLineRemoval );_ff !=nil {return _dd .Wrap (_ff ,_df ,"");};if _fb .FullHeaders {_cbd .AddEndOfPageSegment ();};return nil ;
};func (_dabf *Page )composePageBitmap ()error {const _baa ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _dabf .PageNumber ==0{return nil ;};_ceec :=_dabf .getPageInformationSegment ();if _ceec ==nil {return _dd .Error (_baa ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cdd ,_dcg :=_ceec .GetSegmentData ();if _dcg !=nil {return _dcg ;};_ccce ,_ebg :=_cdd .(*_c .PageInformationSegment );if !_ebg {return _dd .Error (_baa ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _dcg =_dabf .createPage (_ccce );_dcg !=nil {return _dd .Wrap (_dcg ,_baa ,"");};_dabf .clearSegmentData ();return nil ;};func (_ec *Document )AddClassifiedPage (bm *_bb .Bitmap ,method _af .Method )(_ge error ){const _gef ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ec .FullHeaders &&_ec .NumberOfPages !=0{return _dd .Error (_gef ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ec .Classer ==nil {if _ec .Classer ,_ge =_af .Init (_af .DefaultSettings ());_ge !=nil {return _dd .Wrap (_ge ,_gef ,"");};};_dfc :=int (_ec .nextPageNumber ());_de :=&Page {Segments :[]*_c .Header {},Bitmap :bm ,Document :_ec ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dfc };
_ec .Pages [_dfc ]=_de ;switch method {case _af .RankHaus :_de .EncodingMethod =RankHausEM ;case _af .Correlation :_de .EncodingMethod =CorrelationEM ;};_de .AddPageInformationSegment ();if _ge =_ec .Classer .AddPage (bm ,_dfc ,method );_ge !=nil {return _dd .Wrap (_ge ,_gef ,"");
};if _ec .FullHeaders {_de .AddEndOfPageSegment ();};return nil ;};func (_bga *Page )getHeight ()(int ,error ){const _ccea ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _bga .FinalHeight !=0{return _bga .FinalHeight ,nil ;};_dbg :=_bga .getPageInformationSegment ();
if _dbg ==nil {return 0,_dd .Error (_ccea ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_afg ,_dgc :=_dbg .GetSegmentData ();if _dgc !=nil {return 0,_dd .Wrap (_dgc ,_ccea ,"");};_dgbd ,_aeff :=_afg .(*_c .PageInformationSegment );
if !_aeff {return 0,_dd .Errorf (_ccea ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_afg );
};if _dgbd .PageBMHeight ==_b .MaxInt32 {_ ,_dgc =_bga .GetBitmap ();if _dgc !=nil {return 0,_dd .Wrap (_dgc ,_ccea ,"");};}else {_bga .FinalHeight =_dgbd .PageBMHeight ;};return _bga .FinalHeight ,nil ;};func (_ecc *Globals )GetSymbolDictionary ()(*_c .Header ,error ){const _bgfb ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _ecc ==nil {return nil ,_dd .Error (_bgfb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ecc .Segments )==0{return nil ,_dd .Error (_bgfb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_dcc :=range _ecc .Segments {if _dcc .Type ==_c .TSymbolDictionary {return _dcc ,nil ;};};return nil ,_dd .Error (_bgfb ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_eb *Document )mapData ()error {const _fge ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_baf []*_c .Header ;_bce int64 ;_bfg _c .Type ;);_dce ,_def :=_eb .isFileHeaderPresent ();if _def !=nil {return _dd .Wrap (_def ,_fge ,"");};if _dce {if _def =_eb .parseFileHeader ();
_def !=nil {return _dd .Wrap (_def ,_fge ,"");};_bce +=int64 (_eb ._gf );_eb .FullHeaders =true ;};var (_fd *Page ;_egfg bool ;);for _bfg !=51&&!_egfg {_aacc ,_bee :=_c .NewHeader (_eb ,_eb .InputStream ,_bce ,_eb .OrganizationType );if _bee !=nil {return _dd .Wrap (_bee ,_fge ,"");
};_fc .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_aacc .SegmentNumber ,_aacc .Type );
_bfg =_aacc .Type ;if _bfg !=_c .TEndOfFile {if _aacc .PageAssociation !=0{_fd =_eb .Pages [_aacc .PageAssociation ];if _fd ==nil {_fd =_cfg (_eb ,_aacc .PageAssociation );_eb .Pages [_aacc .PageAssociation ]=_fd ;if _eb .NumberOfPagesUnknown {_eb .NumberOfPages ++;
};};_fd .Segments =append (_fd .Segments ,_aacc );}else {_eb .GlobalSegments .AddSegment (_aacc );};};_baf =append (_baf ,_aacc );_bce =_eb .InputStream .AbsolutePosition ();if _eb .OrganizationType ==_c .OSequential {_bce +=int64 (_aacc .SegmentDataLength );
};_egfg ,_bee =_eb .reachedEOF (_bce );if _bee !=nil {_fc .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bee );
return _dd .Wrap (_bee ,_fge ,"");};};_eb .determineRandomDataOffsets (_baf ,uint64 (_bce ));return nil ;};func (_ae *Document )encodeEOFHeader (_dag _g .BinaryWriter )(_ecaa int ,_cgd error ){_dfa :=&_c .Header {SegmentNumber :_ae .nextSegmentNumber (),Type :_c .TEndOfFile };
if _ecaa ,_cgd =_dfa .Encode (_dag );_cgd !=nil {return 0,_dd .Wrap (_cgd ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _ecaa ,nil ;};func (_agf *Page )AddGenericRegion (bm *_bb .Bitmap ,xloc ,yloc ,template int ,tp _c .Type ,duplicateLineRemoval bool )error {const _bfb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_cag :=&_c .GenericRegion {};if _gcc :=_cag .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gcc !=nil {return _dd .Wrap (_gcc ,_bfb ,"");};_ege :=&_c .Header {Type :_c .TImmediateGenericRegion ,PageAssociation :_agf .PageNumber ,SegmentData :_cag };
_agf .Segments =append (_agf .Segments ,_ege );return nil ;};func _cfg (_gbgf *Document ,_cdc int )*Page {return &Page {Document :_gbgf ,PageNumber :_cdc ,Segments :[]*_c .Header {}};};func (_edg *Page )GetBitmap ()(_efc *_bb .Bitmap ,_fdbg error ){_fc .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_edg .PageNumber ));
defer func (){if _fdbg !=nil {_fc .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_edg .PageNumber ,_fdbg ));
}else {_fc .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_edg .PageNumber ));};}();if _edg .Bitmap !=nil {return _edg .Bitmap ,nil ;
};_fdbg =_edg .composePageBitmap ();if _fdbg !=nil {return nil ,_fdbg ;};return _edg .Bitmap ,nil ;};func (_gce *Document )nextPageNumber ()uint32 {_gce .NumberOfPages ++;return _gce .NumberOfPages };func (_cea *Document )addSymbolDictionary (_cef int ,_abd *_bb .Bitmaps ,_dea []int ,_fgb map[int ]int ,_cfc bool )(*_c .Header ,error ){const _egg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_bad :=&_c .SymbolDictionary {};if _ad :=_bad .InitEncode (_abd ,_dea ,_fgb ,_cfc );_ad !=nil {return nil ,_ad ;};_ggg :=&_c .Header {Type :_c .TSymbolDictionary ,PageAssociation :_cef ,SegmentData :_bad };if _cef ==0{if _cea .GlobalSegments ==nil {_cea .GlobalSegments =&Globals {};
};_cea .GlobalSegments .AddSegment (_ggg );return _ggg ,nil ;};_eae ,_gdb :=_cea .Pages [_cef ];if !_gdb {return nil ,_dd .Errorf (_egg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cef );};var (_dac int ;
_gaa *_c .Header ;);for _dac ,_gaa =range _eae .Segments {if _gaa .Type ==_c .TPageInformation {break ;};};_dac ++;_eae .Segments =append (_eae .Segments ,nil );copy (_eae .Segments [_dac +1:],_eae .Segments [_dac :]);_eae .Segments [_dac ]=_ggg ;return _ggg ,nil ;
};func (_fae *Page )AddEndOfPageSegment (){_gcb :=&_c .Header {Type :_c .TEndOfPage ,PageAssociation :_fae .PageNumber };_fae .Segments =append (_fae .Segments ,_gcb );};func (_bd *Globals )AddSegment (segment *_c .Header ){_bd .Segments =append (_bd .Segments ,segment )};
func (_cfb *Page )addTextRegionSegment (_gbb []*_c .Header ,_ace ,_cfed map[int ]int ,_dbf []int ,_dacf *_bb .Points ,_cce *_bb .Bitmaps ,_caa *_bc .IntSlice ,_egag *_bb .Boxes ,_aba ,_gbe int ){_dcb :=&_c .TextRegion {NumberOfSymbols :uint32 (_gbe )};
_dcb .InitEncode (_ace ,_cfed ,_dbf ,_dacf ,_cce ,_caa ,_egag ,_cfb .FinalWidth ,_cfb .FinalHeight ,_aba );_aef :=&_c .Header {RTSegments :_gbb ,SegmentData :_dcb ,PageAssociation :_cfb .PageNumber ,Type :_c .TImmediateTextRegion };_gbbg :=_c .TPageInformation ;
if _cfed !=nil {_gbbg =_c .TSymbolDictionary ;};var _bbe int ;for ;_bbe < len (_cfb .Segments );_bbe ++{if _cfb .Segments [_bbe ].Type ==_gbbg {_bbe ++;break ;};};_cfb .Segments =append (_cfb .Segments ,nil );copy (_cfb .Segments [_bbe +1:],_cfb .Segments [_bbe :]);
_cfb .Segments [_bbe ]=_aef ;};func (_gggf *Document )GetGlobalSegment (i int )(*_c .Header ,error ){_dgge ,_gec :=_gggf .GlobalSegments .GetSegment (i );if _gec !=nil {return nil ,_dd .Wrap (_gec ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _dgge ,nil ;};func (_abea *Page )createStripedPage (_dgba *_c .PageInformationSegment )error {const _bbed ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_ddb ,_bfe :=_abea .collectPageStripes ();
if _bfe !=nil {return _dd .Wrap (_bfe ,_bbed ,"");};var _fga int ;for _ ,_ddee :=range _ddb {if _cagg ,_fce :=_ddee .(*_c .EndOfStripe );_fce {_fga =_cagg .LineNumber ()+1;}else {_bgd :=_ddee .(_c .Regioner );_add :=_bgd .GetRegionInfo ();_bdg :=_abea .getCombinationOperator (_dgba ,_add .CombinaionOperator );
_bfd ,_ebc :=_bgd .GetRegionBitmap ();if _ebc !=nil {return _dd .Wrap (_ebc ,_bbed ,"");};_ebc =_bb .Blit (_bfd ,_abea .Bitmap ,int (_add .XLocation ),_fga ,_bdg );if _ebc !=nil {return _dd .Wrap (_ebc ,_bbed ,"");};};};return nil ;};func (_eaec *Page )createNormalPage (_edc *_c .PageInformationSegment )error {const _eea ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_eaec .Bitmap =_bb .New (_edc .PageBMWidth ,_edc .PageBMHeight );if _edc .DefaultPixelValue !=0{_eaec .Bitmap .SetDefaultPixel ();};for _ ,_aag :=range _eaec .Segments {switch _aag .Type {case 6,7,22,23,38,39,42,43:_fc .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_aag .SegmentNumber );
_ada ,_cca :=_aag .GetSegmentData ();if _cca !=nil {return _cca ;};_bead ,_gfd :=_ada .(_c .Regioner );if !_gfd {_fc .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_ada );
return _dd .Errorf (_eea ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ada );
};_cbb ,_cca :=_bead .GetRegionBitmap ();if _cca !=nil {return _dd .Wrap (_cca ,_eea ,"");};if _eaec .fitsPage (_edc ,_cbb ){_eaec .Bitmap =_cbb ;}else {_beab :=_bead .GetRegionInfo ();_fbad :=_eaec .getCombinationOperator (_edc ,_beab .CombinaionOperator );
_cca =_bb .Blit (_cbb ,_eaec .Bitmap ,int (_beab .XLocation ),int (_beab .YLocation ),_fbad );if _cca !=nil {return _dd .Wrap (_cca ,_eea ,"");};};};};return nil ;};func (_cc *Document )determineRandomDataOffsets (_ffb []*_c .Header ,_dcf uint64 ){if _cc .OrganizationType !=_c .ORandom {return ;
};for _ ,_aaa :=range _ffb {_aaa .SegmentDataStartOffset =_dcf ;_dcf +=_aaa .SegmentDataLength ;};};func (_fbgd *Document )produceClassifiedPage (_egb *Page ,_ced *_c .Header )(_afd error ){const _cbf ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _gc map[int ]int ;_fec :=_fbgd ._egf ;_gac :=[]*_c .Header {_ced };if len (_fbgd ._ee [_egb .PageNumber ])> 0{_gc =map[int ]int {};_gd ,_cbc :=_fbgd .addSymbolDictionary (_egb .PageNumber ,_fbgd .Classer .UndilatedTemplates ,_fbgd ._ee [_egb .PageNumber ],_gc ,false );
if _cbc !=nil {return _dd .Wrap (_cbc ,_cbf ,"");};_gac =append (_gac ,_gd );_fec +=len (_fbgd ._ee [_egb .PageNumber ]);};_dfe :=_fbgd ._ga [_egb .PageNumber ];_fc .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_egb .PageNumber ,_dfe );
_egb .addTextRegionSegment (_gac ,_fbgd ._db ,_gc ,_fbgd ._ga [_egb .PageNumber ],_fbgd .Classer .PtaLL ,_fbgd .Classer .UndilatedTemplates ,_fbgd .Classer .ClassIDs ,nil ,_gb (_fec ),len (_fbgd ._ga [_egb .PageNumber ]));return nil ;};func (_afe *Page )collectPageStripes ()(_bgc []_c .Segmenter ,_dff error ){const _bfdc ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _fdf _c .Segmenter ;for _ ,_dabb :=range _afe .Segments {switch _dabb .Type {case 6,7,22,23,38,39,42,43:_fdf ,_dff =_dabb .GetSegmentData ();if _dff !=nil {return nil ,_dd .Wrap (_dff ,_bfdc ,"");};_bgc =append (_bgc ,_fdf );case 50:_fdf ,_dff =_dabb .GetSegmentData ();
if _dff !=nil {return nil ,_dff ;};_cac ,_deb :=_fdf .(*_c .EndOfStripe );if !_deb {return nil ,_dd .Errorf (_bfdc ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_fdf );
};_bgc =append (_bgc ,_cac );_afe .FinalHeight =_cac .LineNumber ();};};return _bgc ,nil ;};func (_dc *Document )GetPage (pageNumber int )(_c .Pager ,error ){const _cgf ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_fc .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_d .Stack ());
return nil ,_dd .Errorf (_cgf ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_dc .Pages ){_fc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_dd .Error (_cgf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_ca ,_cgc :=_dc .Pages [pageNumber ];if !_cgc {_fc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_dd .Errorf (_cgf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _ca ,nil ;};func (_cecd *Page )getResolutionY ()(int ,error ){const _ggge ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _cecd .ResolutionY !=0{return _cecd .ResolutionY ,nil ;};_gfge :=_cecd .getPageInformationSegment ();
if _gfge ==nil {return 0,_dd .Error (_ggge ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fgf ,_gcee :=_gfge .GetSegmentData ();if _gcee !=nil {return 0,_dd .Wrap (_gcee ,_ggge ,"");};_bbg ,_cgda :=_fgf .(*_c .PageInformationSegment );
if !_cgda {return 0,_dd .Errorf (_ggge ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_fgf );
};_cecd .ResolutionY =_bbg .ResolutionY ;return _cecd .ResolutionY ,nil ;};type Page struct{Segments []*_c .Header ;PageNumber int ;Bitmap *_bb .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;
FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_aed *Document )encodeFileHeader (_fbc _g .BinaryWriter )(_bg int ,_ccc error ){const _aac ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_bg ,_ccc =_fbc .Write (_fg );if _ccc !=nil {return _bg ,_dd .Wrap (_ccc ,_aac ,"\u0069\u0064");};if _ccc =_fbc .WriteByte (0x01);_ccc !=nil {return _bg ,_dd .Wrap (_ccc ,_aac ,"\u0066\u006c\u0061g\u0073");};_bg ++;_dge :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_dge ,_aed .NumberOfPages );
_bf ,_ccc :=_fbc .Write (_dge );if _ccc !=nil {return _bf ,_dd .Wrap (_ccc ,_aac ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bg +=_bf ;return _bg ,nil ;};func (_fdb *Globals )GetSegment (segmentNumber int )(*_c .Header ,error ){const _eeb ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _fdb ==nil {return nil ,_dd .Error (_eeb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_fdb .Segments )==0{return nil ,_dd .Error (_eeb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _agc *_c .Header ;for _ ,_agc =range _fdb .Segments {if _agc .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _agc ==nil {return nil ,_dd .Error (_eeb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _agc ,nil ;};func (_defb *Page )Encode (w _g .BinaryWriter )(_ddd int ,_fba error ){const _ggc ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _caea int ;for _ ,_fgc :=range _defb .Segments {if _caea ,_fba =_fgc .Encode (w );
_fba !=nil {return _ddd ,_dd .Wrap (_fba ,_ggc ,"");};_ddd +=_caea ;};return _ddd ,nil ;};func (_cacb *Page )getCombinationOperator (_ceb *_c .PageInformationSegment ,_acb _bb .CombinationOperator )_bb .CombinationOperator {if _ceb .CombinationOperatorOverrideAllowed (){return _acb ;
};return _ceb .CombinationOperator ();};type EncodingMethod int ;type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_g .Reader ;GlobalSegments *Globals ;OrganizationType _c .OrganizationType ;
Classer *_af .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_bb .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_gf uint8 ;_ea *_g .BufferedWriter ;EncodeGlobals bool ;_egf int ;_ee map[int ][]int ;
_ga map[int ][]int ;_cb []int ;_db map[int ]int ;};type Globals struct{Segments []*_c .Header ;};func (_abaf *Page )fitsPage (_fbgg *_c .PageInformationSegment ,_aad *_bb .Bitmap )bool {return _abaf .countRegions ()==1&&_fbgg .DefaultPixelValue ==0&&_fbgg .PageBMWidth ==_aad .Width &&_fbgg .PageBMHeight ==_aad .Height ;
};func (_abg *Page )AddPageInformationSegment (){_age :=&_c .PageInformationSegment {PageBMWidth :_abg .FinalWidth ,PageBMHeight :_abg .FinalHeight ,ResolutionX :_abg .ResolutionX ,ResolutionY :_abg .ResolutionY ,IsLossless :_abg .IsLossless };if _abg .BlackIsOne {_age .DefaultPixelValue =uint8 (0x1);
};_gae :=&_c .Header {PageAssociation :_abg .PageNumber ,SegmentDataLength :uint64 (_age .Size ()),SegmentData :_age ,Type :_c .TPageInformation };_abg .Segments =append (_abg .Segments ,_gae );};func (_ecg *Page )getResolutionX ()(int ,error ){const _bcb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _ecg .ResolutionX !=0{return _ecg .ResolutionX ,nil ;};_gccc :=_ecg .getPageInformationSegment ();if _gccc ==nil {return 0,_dd .Error (_bcb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eef ,_dggb :=_gccc .GetSegmentData ();
if _dggb !=nil {return 0,_dd .Wrap (_dggb ,_bcb ,"");};_acc ,_beec :=_eef .(*_c .PageInformationSegment );if !_beec {return 0,_dd .Errorf (_bcb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_eef );
};_ecg .ResolutionX =_acc .ResolutionX ;return _ecg .ResolutionX ,nil ;};func (_ba *Document )produceClassifiedPages ()(_ega error ){const _cg ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _ba .Classer ==nil {return nil ;};var (_dg *Page ;_gee bool ;_eed *_c .Header ;);for _ac :=1;_ac <=int (_ba .NumberOfPages );_ac ++{if _dg ,_gee =_ba .Pages [_ac ];!_gee {return _dd .Errorf (_cg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ac );
};if _dg .EncodingMethod ==GenericEM {continue ;};if _eed ==nil {if _eed ,_ega =_ba .GlobalSegments .GetSymbolDictionary ();_ega !=nil {return _dd .Wrap (_ega ,_cg ,"");};};if _ega =_ba .produceClassifiedPage (_dg ,_eed );_ega !=nil {return _dd .Wrapf (_ega ,_cg ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ac );
};};return nil ;};func (_abe *Document )completeSymbols ()(_gdd error ){const _eca ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _abe .Classer ==nil {return nil ;};if _abe .Classer .UndilatedTemplates ==nil {return _dd .Error (_eca ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_ded :=len (_abe .Pages )==1;_ffa :=make ([]int ,_abe .Classer .UndilatedTemplates .Size ());var _egbd int ;for _ggb :=0;_ggb < _abe .Classer .ClassIDs .Size ();_ggb ++{_egbd ,_gdd =_abe .Classer .ClassIDs .Get (_ggb );if _gdd !=nil {return _dd .Wrap (_gdd ,_eca ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_ffa [_egbd ]++;};var _gdc []int ;for _faa :=0;_faa < _abe .Classer .UndilatedTemplates .Size ();_faa ++{if _ffa [_faa ]==0{return _dd .Error (_eca ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _ffa [_faa ]> 1||_ded {_gdc =append (_gdc ,_faa );};};_abe ._egf =len (_gdc );var _dgb ,_cff int ;for _dgg :=0;_dgg < _abe .Classer .ComponentPageNumbers .Size ();_dgg ++{_dgb ,_gdd =_abe .Classer .ComponentPageNumbers .Get (_dgg );if _gdd !=nil {return _dd .Wrapf (_gdd ,_eca ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dgg );
};_cff ,_gdd =_abe .Classer .ClassIDs .Get (_dgg );if _gdd !=nil {return _dd .Wrapf (_gdd ,_eca ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dgb );
};if _ffa [_cff ]==1&&!_ded {_abe ._ee [_dgb ]=append (_abe ._ee [_dgb ],_cff );};};if _gdd =_abe .Classer .ComputeLLCorners ();_gdd !=nil {return _dd .Wrap (_gdd ,_eca ,"");};return nil ;};func (_cdeb *Page )nextSegmentNumber ()uint32 {return _cdeb .Document .nextSegmentNumber ()};
func (_cecf *Document )isFileHeaderPresent ()(bool ,error ){_cecf .InputStream .Mark ();for _ ,_aca :=range _fg {_gbg ,_egba :=_cecf .InputStream .ReadByte ();if _egba !=nil {return false ,_egba ;};if _aca !=_gbg {_cecf .InputStream .Reset ();return false ,nil ;
};};_cecf .InputStream .Reset ();return true ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ea :_g .BufferedMSB (),Pages :map[int ]*Page {},_ee :map[int ][]int {},_db :map[int ]int {},_ga :map[int ][]int {}};
};func (_bfa *Page )lastSegmentNumber ()(_dgce uint32 ,_fda error ){const _dffc ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_bfa .Segments )==0{return _dgce ,_dd .Errorf (_dffc ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bfa .PageNumber );
};return _bfa .Segments [len (_bfa .Segments )-1].SegmentNumber ,nil ;};func (_agef *Page )countRegions ()int {var _cde int ;for _ ,_ddf :=range _agef .Segments {switch _ddf .Type {case 6,7,22,23,38,39,42,43:_cde ++;};};return _cde ;};func (_eac *Page )createPage (_ecd *_c .PageInformationSegment )error {var _bbc error ;
if !_ecd .IsStripe ||_ecd .PageBMHeight !=-1{_bbc =_eac .createNormalPage (_ecd );}else {_bbc =_eac .createStripedPage (_ecd );};return _bbc ;};func (_fgdb *Document )parseFileHeader ()error {const _fac ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_gbf :=_fgdb .InputStream .Seek (8,_f .SeekStart );if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u0069\u0064");};_ ,_gbf =_fgdb .InputStream .ReadBits (5);if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_egcb ,_gbf :=_fgdb .InputStream .ReadBit ();if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _egcb ==1{_fgdb .GBUseExtTemplate =true ;};_egcb ,_gbf =_fgdb .InputStream .ReadBit ();
if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _egcb !=1{_fgdb .NumberOfPagesUnknown =false ;};_egcb ,_gbf =_fgdb .InputStream .ReadBit ();if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_fgdb .OrganizationType =_c .OrganizationType (_egcb );if !_fgdb .NumberOfPagesUnknown {_fgdb .NumberOfPages ,_gbf =_fgdb .InputStream .ReadUint32 ();if _gbf !=nil {return _dd .Wrap (_gbf ,_fac ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_fgdb ._gf =13;};return nil ;};func (_adg *Page )GetHeight ()(int ,error ){return _adg .getHeight ()};func _cae (_fbce *_g .Reader ,_afdc *Globals )(*Document ,error ){_gge :=&Document {Pages :make (map[int ]*Page ),InputStream :_fbce ,OrganizationType :_c .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_afdc ,_gf :9};
if _gge .GlobalSegments ==nil {_gge .GlobalSegments =&Globals {};};if _geb :=_gge .mapData ();_geb !=nil {return nil ,_geb ;};return _gge ,nil ;};func (_dfg *Document )GetNumberOfPages ()(uint32 ,error ){if _dfg .NumberOfPagesUnknown ||_dfg .NumberOfPages ==0{if len (_dfg .Pages )==0{if _bcg :=_dfg .mapData ();
_bcg !=nil {return 0,_dd .Wrap (_bcg ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_dfg .Pages )),nil ;};return _dfg .NumberOfPages ,nil ;};func DecodeDocument (input *_g .Reader ,globals *Globals )(*Document ,error ){return _cae (input ,globals );
};var _fg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};