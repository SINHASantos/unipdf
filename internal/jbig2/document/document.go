//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_b "encoding/binary";_e "fmt";_eg "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/bitwise";_fa "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_cg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ec "io";_f "math";_g "runtime/debug";);func (_aefe *Page )nextSegmentNumber ()uint32 {return _aefe .Document .nextSegmentNumber ()};
func (_dbg *Page )AddGenericRegion (bm *_bb .Bitmap ,xloc ,yloc ,template int ,tp _cg .Type ,duplicateLineRemoval bool )error {const _cec ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_aaga :=&_cg .GenericRegion {};
if _da :=_aaga .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_da !=nil {return _cb .Wrap (_da ,_cec ,"");};_aec :=&_cg .Header {Type :_cg .TImmediateGenericRegion ,PageAssociation :_dbg .PageNumber ,SegmentData :_aaga };_dbg .Segments =append (_dbg .Segments ,_aec );
return nil ;};func (_fgf *Document )AddGenericPage (bm *_bb .Bitmap ,duplicateLineRemoval bool )(_ad error ){const _dc ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_fgf .FullHeaders &&_fgf .NumberOfPages !=0{return _cb .Error (_dc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ac :=&Page {Segments :[]*_cg .Header {},Bitmap :bm ,Document :_fgf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_bb .Chocolate };_ac .PageNumber =int (_fgf .nextPageNumber ());_fgf .Pages [_ac .PageNumber ]=_ac ;
bm .InverseData ();_ac .AddPageInformationSegment ();if _ad =_ac .AddGenericRegion (bm ,0,0,0,_cg .TImmediateGenericRegion ,duplicateLineRemoval );_ad !=nil {return _cb .Wrap (_ad ,_dc ,"");};if _fgf .FullHeaders {_ac .AddEndOfPageSegment ();};return nil ;
};func (_bbcb *Globals )AddSegment (segment *_cg .Header ){_bbcb .Segments =append (_bbcb .Segments ,segment );};func (_caeg *Page )GetResolutionY ()(int ,error ){return _caeg .getResolutionY ()};func (_cda *Document )GetPage (pageNumber int )(_cg .Pager ,error ){const _gca ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_eg .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_g .Stack ());
return nil ,_cb .Errorf (_gca ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_cda .Pages ){_eg .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_g .Stack ());return nil ,_cb .Error (_gca ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_cgc ,_aag :=_cda .Pages [pageNumber ];if !_aag {_eg .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_g .Stack ());return nil ,_cb .Errorf (_gca ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _cgc ,nil ;};func (_fbe *Page )GetWidth ()(int ,error ){return _fbe .getWidth ()};type Globals struct{Segments []*_cg .Header ;};func (_abf *Document )GetNumberOfPages ()(uint32 ,error ){if _abf .NumberOfPagesUnknown ||_abf .NumberOfPages ==0{if len (_abf .Pages )==0{if _be :=_abf .mapData ();
_be !=nil {return 0,_cb .Wrap (_be ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_abf .Pages )),nil ;};return _abf .NumberOfPages ,nil ;};func (_bbdf *Document )reachedEOF (_bdcg int64 )(bool ,error ){const _ggcg ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_cea :=_bbdf .InputStream .Seek (_bdcg ,_ec .SeekStart );if _cea !=nil {_eg .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cea );
return false ,_cb .Wrap (_cea ,_ggcg ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_cea =_bbdf .InputStream .ReadBits (32);if _cea ==_ec .EOF {return true ,nil ;
}else if _cea !=nil {return false ,_cb .Wrap (_cea ,_ggcg ,"");};return false ,nil ;};func (_gge *Page )getResolutionY ()(int ,error ){const _adde ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _gge .ResolutionY !=0{return _gge .ResolutionY ,nil ;
};_cdb :=_gge .getPageInformationSegment ();if _cdb ==nil {return 0,_cb .Error (_adde ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ccfc ,_gcc :=_cdb .GetSegmentData ();if _gcc !=nil {return 0,_cb .Wrap (_gcc ,_adde ,"");
};_gdf ,_cecg :=_ccfc .(*_cg .PageInformationSegment );if !_cecg {return 0,_cb .Errorf (_adde ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_ccfc );
};_gge .ResolutionY =_gdf .ResolutionY ;return _gge .ResolutionY ,nil ;};func (_ddd *Page )countRegions ()int {var _aaeg int ;for _ ,_dbac :=range _ddd .Segments {switch _dbac .Type {case 6,7,22,23,38,39,42,43:_aaeg ++;};};return _aaeg ;};func (_dfc *Page )GetHeight ()(int ,error ){return _dfc .getHeight ()};
func (_eaee *Document )Encode ()(_dg []byte ,_faabe error ){const _bde ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cce ,_fbc int ;if _eaee .FullHeaders {if _cce ,_faabe =_eaee .encodeFileHeader (_eaee ._d );
_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};};var (_bg bool ;_gac *_cg .Header ;_aa *Page ;);if _faabe =_eaee .completeClassifiedPages ();_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};if _faabe =_eaee .produceClassifiedPages ();
_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};if _eaee .GlobalSegments !=nil {for _ ,_gac =range _eaee .GlobalSegments .Segments {if _faabe =_eaee .encodeSegment (_gac ,&_cce );_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};};};for _ecc :=1;
_ecc <=int (_eaee .NumberOfPages );_ecc ++{if _aa ,_bg =_eaee .Pages [_ecc ];!_bg {return nil ,_cb .Errorf (_bde ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ecc );};for _ ,_gac =range _aa .Segments {if _faabe =_eaee .encodeSegment (_gac ,&_cce );
_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};};};if _eaee .FullHeaders {if _fbc ,_faabe =_eaee .encodeEOFHeader (_eaee ._d );_faabe !=nil {return nil ,_cb .Wrap (_faabe ,_bde ,"");};_cce +=_fbc ;};_dg =_eaee ._d .Data ();if len (_dg )!=_cce {_eg .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cce ,len (_dg ));
};return _dg ,nil ;};func (_ega *Document )mapData ()error {const _dcbb ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_gaf []*_cg .Header ;_cfc int64 ;_bdb _cg .Type ;);_ece ,_fcfc :=_ega .isFileHeaderPresent ();if _fcfc !=nil {return _cb .Wrap (_fcfc ,_dcbb ,"");
};if _ece {if _fcfc =_ega .parseFileHeader ();_fcfc !=nil {return _cb .Wrap (_fcfc ,_dcbb ,"");};_cfc +=int64 (_ega ._cf );_ega .FullHeaders =true ;};var (_ffb *Page ;_fca bool ;);for _bdb !=51&&!_fca {_dcf ,_dgc :=_cg .NewHeader (_ega ,_ega .InputStream ,_cfc ,_ega .OrganizationType );
if _dgc !=nil {return _cb .Wrap (_dgc ,_dcbb ,"");};_eg .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_dcf .SegmentNumber ,_dcf .Type );
_bdb =_dcf .Type ;if _bdb !=_cg .TEndOfFile {if _dcf .PageAssociation !=0{_ffb =_ega .Pages [_dcf .PageAssociation ];if _ffb ==nil {_ffb =_ggb (_ega ,_dcf .PageAssociation );_ega .Pages [_dcf .PageAssociation ]=_ffb ;if _ega .NumberOfPagesUnknown {_ega .NumberOfPages ++;
};};_ffb .Segments =append (_ffb .Segments ,_dcf );}else {_ega .GlobalSegments .AddSegment (_dcf );};};_gaf =append (_gaf ,_dcf );_cfc =_ega .InputStream .AbsolutePosition ();if _ega .OrganizationType ==_cg .OSequential {_cfc +=int64 (_dcf .SegmentDataLength );
};_fca ,_dgc =_ega .reachedEOF (_cfc );if _dgc !=nil {_eg .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dgc );
return _cb .Wrap (_dgc ,_dcbb ,"");};};_ega .determineRandomDataOffsets (_gaf ,uint64 (_cfc ));return nil ;};func _egb (_bcd *_c .Reader ,_dcef *Globals )(*Document ,error ){_egd :=&Document {Pages :make (map[int ]*Page ),InputStream :_bcd ,OrganizationType :_cg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_dcef ,_cf :9};
if _egd .GlobalSegments ==nil {_egd .GlobalSegments =&Globals {};};if _afa :=_egd .mapData ();_afa !=nil {return nil ,_afa ;};return _egd ,nil ;};func (_cac *Document )encodeFileHeader (_edd _c .BinaryWriter )(_ggg int ,_bgf error ){const _beg ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ggg ,_bgf =_edd .Write (_ga );if _bgf !=nil {return _ggg ,_cb .Wrap (_bgf ,_beg ,"\u0069\u0064");};if _bgf =_edd .WriteByte (0x01);_bgf !=nil {return _ggg ,_cb .Wrap (_bgf ,_beg ,"\u0066\u006c\u0061g\u0073");};_ggg ++;_gbf :=make ([]byte ,4);_b .BigEndian .PutUint32 (_gbf ,_cac .NumberOfPages );
_dba ,_bgf :=_edd .Write (_gbf );if _bgf !=nil {return _dba ,_cb .Wrap (_bgf ,_beg ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ggg +=_dba ;return _ggg ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);
func (_ggcb *Globals )GetSegment (segmentNumber int )(*_cg .Header ,error ){const _afd ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _ggcb ==nil {return nil ,_cb .Error (_afd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_ggcb .Segments )==0{return nil ,_cb .Error (_afd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _bfc *_cg .Header ;for _ ,_bfc =range _ggcb .Segments {if _bfc .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _bfc ==nil {return nil ,_cb .Error (_afd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _bfc ,nil ;};func (_ab *Document )completeSymbols ()(_ce error ){const _fdd ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _ab .Classer ==nil {return nil ;};if _ab .Classer .UndilatedTemplates ==nil {return _cb .Error (_fdd ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_ca :=len (_ab .Pages )==1;_faf :=make ([]int ,_ab .Classer .UndilatedTemplates .Size ());var _ecb int ;for _gag :=0;_gag < _ab .Classer .ClassIDs .Size ();_gag ++{_ecb ,_ce =_ab .Classer .ClassIDs .Get (_gag );if _ce !=nil {return _cb .Wrap (_ce ,_fdd ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_faf [_ecb ]++;};var _feg []int ;for _abc :=0;_abc < _ab .Classer .UndilatedTemplates .Size ();_abc ++{if _faf [_abc ]==0{return _cb .Error (_fdd ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _faf [_abc ]> 1||_ca {_feg =append (_feg ,_abc );};};_ab ._gb =len (_feg );var _gbe ,_fff int ;for _dbe :=0;_dbe < _ab .Classer .ComponentPageNumbers .Size ();_dbe ++{_gbe ,_ce =_ab .Classer .ComponentPageNumbers .Get (_dbe );if _ce !=nil {return _cb .Wrapf (_ce ,_fdd ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dbe );
};_fff ,_ce =_ab .Classer .ClassIDs .Get (_dbe );if _ce !=nil {return _cb .Wrapf (_ce ,_fdd ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_gbe );
};if _faf [_fff ]==1&&!_ca {_ab ._db [_gbe ]=append (_ab ._db [_gbe ],_fff );};};if _ce =_ab .Classer .ComputeLLCorners ();_ce !=nil {return _cb .Wrap (_ce ,_fdd ,"");};return nil ;};func (_dce *Document )AddClassifiedPage (bm *_bb .Bitmap ,method _bf .Method )(_ge error ){const _cc ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_dce .FullHeaders &&_dce .NumberOfPages !=0{return _cb .Error (_cc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _dce .Classer ==nil {if _dce .Classer ,_ge =_bf .Init (_bf .DefaultSettings ());_ge !=nil {return _cb .Wrap (_ge ,_cc ,"");};};_egf :=int (_dce .nextPageNumber ());_egfg :=&Page {Segments :[]*_cg .Header {},Bitmap :bm ,Document :_dce ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_egf };
_dce .Pages [_egf ]=_egfg ;switch method {case _bf .RankHaus :_egfg .EncodingMethod =RankHausEM ;case _bf .Correlation :_egfg .EncodingMethod =CorrelationEM ;};_egfg .AddPageInformationSegment ();if _ge =_dce .Classer .AddPage (bm ,_egf ,method );_ge !=nil {return _cb .Wrap (_ge ,_cc ,"");
};if _dce .FullHeaders {_egfg .AddEndOfPageSegment ();};return nil ;};type EncodingMethod int ;func (_fge *Document )nextSegmentNumber ()uint32 {_fbf :=_fge .CurrentSegmentNumber ;_fge .CurrentSegmentNumber ++;return _fbf ;};func (_gd *Document )completeClassifiedPages ()(_de error ){const _fd ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _gd .Classer ==nil {return nil ;};_gd ._fg =make ([]int ,_gd .Classer .UndilatedTemplates .Size ());for _cgd :=0;_cgd < _gd .Classer .ClassIDs .Size ();_cgd ++{_bdc ,_bfd :=_gd .Classer .ClassIDs .Get (_cgd );if _bfd !=nil {return _cb .Wrapf (_bfd ,_fd ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cgd );
};_gd ._fg [_bdc ]++;};var _dea []int ;for _eb :=0;_eb < _gd .Classer .UndilatedTemplates .Size ();_eb ++{if _gd .NumberOfPages ==1||_gd ._fg [_eb ]> 1{_dea =append (_dea ,_eb );};};var (_ea *Page ;_ed bool ;);for _cfe ,_ae :=range *_gd .Classer .ComponentPageNumbers {if _ea ,_ed =_gd .Pages [_ae ];
!_ed {return _cb .Errorf (_fd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cfe );};if _ea .EncodingMethod ==GenericEM {_eg .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_cfe );
continue ;};_gd ._cd [_ae ]=append (_gd ._cd [_ae ],_cfe );_add ,_bdd :=_gd .Classer .ClassIDs .Get (_cfe );if _bdd !=nil {return _cb .Wrapf (_bdd ,_fd ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_cfe );
};if _gd ._fg [_add ]==1&&_gd .NumberOfPages !=1{_dcb :=append (_gd ._db [_ae ],_add );_gd ._db [_ae ]=_dcb ;};};if _de =_gd .Classer .ComputeLLCorners ();_de !=nil {return _cb .Wrap (_de ,_fd ,"");};if _ ,_de =_gd .addSymbolDictionary (0,_gd .Classer .UndilatedTemplates ,_dea ,_gd ._bd ,false );
_de !=nil {return _cb .Wrap (_de ,_fd ,"");};return nil ;};var _ga =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_fege *Page )addTextRegionSegment (_bbef []*_cg .Header ,_cdf ,_ba map[int ]int ,_cfd []int ,_ccdf *_bb .Points ,_gaa *_bb .Bitmaps ,_eaf *_fa .IntSlice ,_ddec *_bb .Boxes ,_dcc ,_cfed int ){_fgef :=&_cg .TextRegion {NumberOfSymbols :uint32 (_cfed )};
_fgef .InitEncode (_cdf ,_ba ,_cfd ,_ccdf ,_gaa ,_eaf ,_ddec ,_fege .FinalWidth ,_fege .FinalHeight ,_dcc );_fgefg :=&_cg .Header {RTSegments :_bbef ,SegmentData :_fgef ,PageAssociation :_fege .PageNumber ,Type :_cg .TImmediateTextRegion };_afdb :=_cg .TPageInformation ;
if _ba !=nil {_afdb =_cg .TSymbolDictionary ;};var _dgf int ;for ;_dgf < len (_fege .Segments );_dgf ++{if _fege .Segments [_dgf ].Type ==_afdb {_dgf ++;break ;};};_fege .Segments =append (_fege .Segments ,nil );copy (_fege .Segments [_dgf +1:],_fege .Segments [_dgf :]);
_fege .Segments [_dgf ]=_fgefg ;};func (_adg *Document )encodeEOFHeader (_eee _c .BinaryWriter )(_ffd int ,_bcb error ){_bff :=&_cg .Header {SegmentNumber :_adg .nextSegmentNumber (),Type :_cg .TEndOfFile };if _ffd ,_bcb =_bff .Encode (_eee );_bcb !=nil {return 0,_cb .Wrap (_bcb ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _ffd ,nil ;};func (_gfa *Page )AddEndOfPageSegment (){_cgb :=&_cg .Header {Type :_cg .TEndOfPage ,PageAssociation :_gfa .PageNumber };_gfa .Segments =append (_gfa .Segments ,_cgb );};func (_ecg *Page )createPage (_bcad *_cg .PageInformationSegment )error {var _cgdg error ;
if !_bcad .IsStripe ||_bcad .PageBMHeight !=-1{_cgdg =_ecg .createNormalPage (_bcad );}else {_cgdg =_ecg .createStripedPage (_bcad );};return _cgdg ;};type Page struct{Segments []*_cg .Header ;PageNumber int ;Bitmap *_bb .Bitmap ;FinalHeight int ;FinalWidth int ;
ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_ecf *Document )encodeSegment (_dgb *_cg .Header ,_ddc *int )error {const _aga ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_dgb .SegmentNumber =_ecf .nextSegmentNumber ();_ebg ,_ggc :=_dgb .Encode (_ecf ._d );if _ggc !=nil {return _cb .Wrapf (_ggc ,_aga ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dgb .SegmentNumber );};*_ddc +=_ebg ;return nil ;
};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_d :_c .BufferedMSB (),Pages :map[int ]*Page {},_db :map[int ][]int {},_bd :map[int ]int {},_cd :map[int ][]int {}};};func (_aggc *Page )lastSegmentNumber ()(_cffe uint32 ,_bffb error ){const _dgg ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_aggc .Segments )==0{return _cffe ,_cb .Errorf (_dgg ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_aggc .PageNumber );
};return _aggc .Segments [len (_aggc .Segments )-1].SegmentNumber ,nil ;};func (_bdbg *Page )createNormalPage (_gebe *_cg .PageInformationSegment )error {const _agg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_bdbg .Bitmap =_bb .New (_gebe .PageBMWidth ,_gebe .PageBMHeight );if _gebe .DefaultPixelValue !=0{_bdbg .Bitmap .SetDefaultPixel ();};for _ ,_gec :=range _bdbg .Segments {switch _gec .Type {case 6,7,22,23,38,39,42,43:_eg .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_gec .SegmentNumber );
_bed ,_aagfg :=_gec .GetSegmentData ();if _aagfg !=nil {return _aagfg ;};_gcb ,_eba :=_bed .(_cg .Regioner );if !_eba {_eg .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_bed );
return _cb .Errorf (_agg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bed );
};_abg ,_aagfg :=_gcb .GetRegionBitmap ();if _aagfg !=nil {return _cb .Wrap (_aagfg ,_agg ,"");};if _bdbg .fitsPage (_gebe ,_abg ){_bdbg .Bitmap =_abg ;}else {_aeag :=_gcb .GetRegionInfo ();_gdb :=_bdbg .getCombinationOperator (_gebe ,_aeag .CombinaionOperator );
_aagfg =_bb .Blit (_abg ,_bdbg .Bitmap ,int (_aeag .XLocation ),int (_aeag .YLocation ),_gdb );if _aagfg !=nil {return _cb .Wrap (_aagfg ,_agg ,"");};};};};return nil ;};func (_fcc *Page )AddPageInformationSegment (){_gdca :=&_cg .PageInformationSegment {PageBMWidth :_fcc .FinalWidth ,PageBMHeight :_fcc .FinalHeight ,ResolutionX :_fcc .ResolutionX ,ResolutionY :_fcc .ResolutionY ,IsLossless :_fcc .IsLossless };
if _fcc .BlackIsOne {_gdca .DefaultPixelValue =uint8 (0x1);};_beb :=&_cg .Header {PageAssociation :_fcc .PageNumber ,SegmentDataLength :uint64 (_gdca .Size ()),SegmentData :_gdca ,Type :_cg .TPageInformation };_fcc .Segments =append (_fcc .Segments ,_beb );
};func (_dede *Page )Encode (w _c .BinaryWriter )(_fef int ,_aea error ){const _bac ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cgcd int ;for _ ,_ecff :=range _dede .Segments {if _cgcd ,_aea =_ecff .Encode (w );_aea !=nil {return _fef ,_cb .Wrap (_aea ,_bac ,"");
};_fef +=_cgcd ;};return _fef ,nil ;};func (_ccg *Document )addSymbolDictionary (_fce int ,_ddb *_bb .Bitmaps ,_dde []int ,_fgdf map[int ]int ,_bbe bool )(*_cg .Header ,error ){const _bfda ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_fe :=&_cg .SymbolDictionary {};if _ccd :=_fe .InitEncode (_ddb ,_dde ,_fgdf ,_bbe );_ccd !=nil {return nil ,_ccd ;};_eae :=&_cg .Header {Type :_cg .TSymbolDictionary ,PageAssociation :_fce ,SegmentData :_fe };if _fce ==0{if _ccg .GlobalSegments ==nil {_ccg .GlobalSegments =&Globals {};
};_ccg .GlobalSegments .AddSegment (_eae );return _eae ,nil ;};_ag ,_ff :=_ccg .Pages [_fce ];if !_ff {return nil ,_cb .Errorf (_bfda ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fce );};var (_ffe int ;
_ebb *_cg .Header ;);for _ffe ,_ebb =range _ag .Segments {if _ebb .Type ==_cg .TPageInformation {break ;};};_ffe ++;_ag .Segments =append (_ag .Segments ,nil );copy (_ag .Segments [_ffe +1:],_ag .Segments [_ffe :]);_ag .Segments [_ffe ]=_eae ;return _eae ,nil ;
};func DecodeDocument (input *_c .Reader ,globals *Globals )(*Document ,error ){return _egb (input ,globals );};func (_ebf *Page )getPageInformationSegment ()*_cg .Header {for _ ,_bccb :=range _ebf .Segments {if _bccb .Type ==_cg .TPageInformation {return _bccb ;
};};_eg .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_ebf );
return nil ;};func (_bcc *Document )produceClassifiedPage (_gdc *Page ,_cca *_cg .Header )(_gg error ){const _deg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _bccg map[int ]int ;_af :=_bcc ._gb ;
_df :=[]*_cg .Header {_cca };if len (_bcc ._db [_gdc .PageNumber ])> 0{_bccg =map[int ]int {};_fc ,_gdce :=_bcc .addSymbolDictionary (_gdc .PageNumber ,_bcc .Classer .UndilatedTemplates ,_bcc ._db [_gdc .PageNumber ],_bccg ,false );if _gdce !=nil {return _cb .Wrap (_gdce ,_deg ,"");
};_df =append (_df ,_fc );_af +=len (_bcc ._db [_gdc .PageNumber ]);};_faa :=_bcc ._cd [_gdc .PageNumber ];_eg .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_gdc .PageNumber ,_faa );_gdc .addTextRegionSegment (_df ,_bcc ._bd ,_bccg ,_bcc ._cd [_gdc .PageNumber ],_bcc .Classer .PtaLL ,_bcc .Classer .UndilatedTemplates ,_bcc .Classer .ClassIDs ,nil ,_acd (_af ),len (_bcc ._cd [_gdc .PageNumber ]));
return nil ;};func (_dfcc *Page )getCombinationOperator (_dgcg *_cg .PageInformationSegment ,_bgg _bb .CombinationOperator )_bb .CombinationOperator {if _dgcg .CombinationOperatorOverrideAllowed (){return _bgg ;};return _dgcg .CombinationOperator ();};
func _ggb (_geb *Document ,_ffc int )*Page {return &Page {Document :_geb ,PageNumber :_ffc ,Segments :[]*_cg .Header {}};};func (_efc *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_efc .PageNumber );};func _acd (_ada int )int {_faab :=0;
_ee :=(_ada &(_ada -1))==0;_ada >>=1;for ;_ada !=0;_ada >>=1{_faab ++;};if _ee {return _faab ;};return _faab +1;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_c .Reader ;
GlobalSegments *Globals ;OrganizationType _cg .OrganizationType ;Classer *_bf .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_bb .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_cf uint8 ;_d *_c .BufferedWriter ;
EncodeGlobals bool ;_gb int ;_db map[int ][]int ;_cd map[int ][]int ;_fg []int ;_bd map[int ]int ;};func (_dbec *Globals )GetSegmentByIndex (index int )(*_cg .Header ,error ){const _bfef ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _dbec ==nil {return nil ,_cb .Error (_bfef ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dbec .Segments )==0{return nil ,_cb .Error (_bfef ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_dbec .Segments )-1{return nil ,_cb .Error (_bfef ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _dbec .Segments [index ],nil ;};func (_cdc *Document )determineRandomDataOffsets (_ede []*_cg .Header ,_bbf uint64 ){if _cdc .OrganizationType !=_cg .ORandom {return ;
};for _ ,_aed :=range _ede {_aed .SegmentDataStartOffset =_bbf ;_bbf +=_aed .SegmentDataLength ;};};func (_dgcga *Page )getWidth ()(int ,error ){const _cead ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _dgcga .FinalWidth !=0{return _dgcga .FinalWidth ,nil ;
};_cff :=_dgcga .getPageInformationSegment ();if _cff ==nil {return 0,_cb .Error (_cead ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ggf ,_dcg :=_cff .GetSegmentData ();if _dcg !=nil {return 0,_cb .Wrap (_dcg ,_cead ,"");
};_bffa ,_bae :=_ggf .(*_cg .PageInformationSegment );if !_bae {return 0,_cb .Errorf (_cead ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ggf );
};_dgcga .FinalWidth =_bffa .PageBMWidth ;return _dgcga .FinalWidth ,nil ;};func (_adf *Page )createStripedPage (_cfdc *_cg .PageInformationSegment )error {const _cacd ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_abag ,_agae :=_adf .collectPageStripes ();if _agae !=nil {return _cb .Wrap (_agae ,_cacd ,"");};var _cbeb int ;for _ ,_ged :=range _abag {if _ggba ,_efa :=_ged .(*_cg .EndOfStripe );_efa {_cbeb =_ggba .LineNumber ()+1;}else {_dgbb :=_ged .(_cg .Regioner );
_cggb :=_dgbb .GetRegionInfo ();_gedg :=_adf .getCombinationOperator (_cfdc ,_cggb .CombinaionOperator );_bfb ,_fba :=_dgbb .GetRegionBitmap ();if _fba !=nil {return _cb .Wrap (_fba ,_cacd ,"");};_fba =_bb .Blit (_bfb ,_adf .Bitmap ,int (_cggb .XLocation ),_cbeb ,_gedg );
if _fba !=nil {return _cb .Wrap (_fba ,_cacd ,"");};};};return nil ;};func (_daf *Page )getResolutionX ()(int ,error ){const _bacd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _daf .ResolutionX !=0{return _daf .ResolutionX ,nil ;
};_gff :=_daf .getPageInformationSegment ();if _gff ==nil {return 0,_cb .Error (_bacd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_aeaf ,_bedd :=_gff .GetSegmentData ();if _bedd !=nil {return 0,_cb .Wrap (_bedd ,_bacd ,"");
};_dge ,_cgdb :=_aeaf .(*_cg .PageInformationSegment );if !_cgdb {return 0,_cb .Errorf (_bacd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_aeaf );
};_daf .ResolutionX =_dge .ResolutionX ;return _daf .ResolutionX ,nil ;};func (_eef *Document )GetGlobalSegment (i int )(*_cg .Header ,error ){_aff ,_bbd :=_eef .GlobalSegments .GetSegment (i );if _bbd !=nil {return nil ,_cb .Wrap (_bbd ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _aff ,nil ;};func (_eccd *Page )GetBitmap ()(_dec *_bb .Bitmap ,_cae error ){_eg .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_eccd .PageNumber ));
defer func (){if _cae !=nil {_eg .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eccd .PageNumber ,_cae ));
}else {_eg .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_eccd .PageNumber ));};}();if _eccd .Bitmap !=nil {return _eccd .Bitmap ,nil ;
};_cae =_eccd .composePageBitmap ();if _cae !=nil {return nil ,_cae ;};return _eccd .Bitmap ,nil ;};func (_ege *Page )composePageBitmap ()error {const _eca ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _ege .PageNumber ==0{return nil ;};_ggd :=_ege .getPageInformationSegment ();if _ggd ==nil {return _cb .Error (_eca ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_adad ,_gea :=_ggd .GetSegmentData ();if _gea !=nil {return _gea ;};_bdg ,_fgeff :=_adad .(*_cg .PageInformationSegment );if !_fgeff {return _cb .Error (_eca ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _gea =_ege .createPage (_bdg );_gea !=nil {return _cb .Wrap (_gea ,_eca ,"");};_ege .clearSegmentData ();return nil ;};func (_fcg *Document )nextPageNumber ()uint32 {_fcg .NumberOfPages ++;return _fcg .NumberOfPages };func (_gf *Document )produceClassifiedPages ()(_bc error ){const _eda ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _gf .Classer ==nil {return nil ;};var (_gc *Page ;_fgd bool ;_dd *_cg .Header ;);for _cbe :=1;_cbe <=int (_gf .NumberOfPages );_cbe ++{if _gc ,_fgd =_gf .Pages [_cbe ];!_fgd {return _cb .Errorf (_eda ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cbe );
};if _gc .EncodingMethod ==GenericEM {continue ;};if _dd ==nil {if _dd ,_bc =_gf .GlobalSegments .GetSymbolDictionary ();_bc !=nil {return _cb .Wrap (_bc ,_eda ,"");};};if _bc =_gf .produceClassifiedPage (_gc ,_dd );_bc !=nil {return _cb .Wrapf (_bc ,_eda ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_cbe );
};};return nil ;};func (_bfe *Document )parseFileHeader ()error {const _aeb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_fffb :=_bfe .InputStream .Seek (8,_ec .SeekStart );if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u0069\u0064");
};_ ,_fffb =_bfe .InputStream .ReadBits (5);if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_ccf ,_fffb :=_bfe .InputStream .ReadBit ();if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _ccf ==1{_bfe .GBUseExtTemplate =true ;};_ccf ,_fffb =_bfe .InputStream .ReadBit ();if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ccf !=1{_bfe .NumberOfPagesUnknown =false ;
};_ccf ,_fffb =_bfe .InputStream .ReadBit ();if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_bfe .OrganizationType =_cg .OrganizationType (_ccf );if !_bfe .NumberOfPagesUnknown {_bfe .NumberOfPages ,_fffb =_bfe .InputStream .ReadUint32 ();
if _fffb !=nil {return _cb .Wrap (_fffb ,_aeb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_bfe ._cf =13;};return nil ;};func (_eff *Page )getHeight ()(int ,error ){const _gaaa ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _eff .FinalHeight !=0{return _eff .FinalHeight ,nil ;};_ebc :=_eff .getPageInformationSegment ();if _ebc ==nil {return 0,_cb .Error (_gaaa ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ddba ,_fde :=_ebc .GetSegmentData ();
if _fde !=nil {return 0,_cb .Wrap (_fde ,_gaaa ,"");};_bcdd ,_cbd :=_ddba .(*_cg .PageInformationSegment );if !_cbd {return 0,_cb .Errorf (_gaaa ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ddba );
};if _bcdd .PageBMHeight ==_f .MaxInt32 {_ ,_fde =_eff .GetBitmap ();if _fde !=nil {return 0,_cb .Wrap (_fde ,_gaaa ,"");};}else {_eff .FinalHeight =_bcdd .PageBMHeight ;};return _eff .FinalHeight ,nil ;};func (_decc *Page )GetResolutionX ()(int ,error ){return _decc .getResolutionX ()};
func (_cee *Page )clearSegmentData (){for _fbg :=range _cee .Segments {_cee .Segments [_fbg ].CleanSegmentData ();};};func (_ccfe *Page )GetSegment (number int )(*_cg .Header ,error ){const _fega ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_ecca :=range _ccfe .Segments {if _ecca .SegmentNumber ==uint32 (number ){return _ecca ,nil ;};};_fbee :=make ([]uint32 ,len (_ccfe .Segments ));for _fffg ,_gafa :=range _ccfe .Segments {_fbee [_fffg ]=_gafa .SegmentNumber ;};return nil ,_cb .Errorf (_fega ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ccfe .PageNumber ,_fbee );
};func (_abe *Page )fitsPage (_aef *_cg .PageInformationSegment ,_ace *_bb .Bitmap )bool {return _abe .countRegions ()==1&&_aef .DefaultPixelValue ==0&&_aef .PageBMWidth ==_ace .Width &&_aef .PageBMHeight ==_ace .Height ;};func (_gda *Document )isFileHeaderPresent ()(bool ,error ){_gda .InputStream .Mark ();
for _ ,_bdec :=range _ga {_fcf ,_agaa :=_gda .InputStream .ReadByte ();if _agaa !=nil {return false ,_agaa ;};if _bdec !=_fcf {_gda .InputStream .Reset ();return false ,nil ;};};_gda .InputStream .Reset ();return true ,nil ;};func (_gdd *Globals )GetSymbolDictionary ()(*_cg .Header ,error ){const _fgfa ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _gdd ==nil {return nil ,_cb .Error (_fgfa ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gdd .Segments )==0{return nil ,_cb .Error (_fgfa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_aagf :=range _gdd .Segments {if _aagf .Type ==_cg .TSymbolDictionary {return _aagf ,nil ;};};return nil ,_cb .Error (_fgfa ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_ebe *Page )collectPageStripes ()(_cgf []_cg .Segmenter ,_bcda error ){const _aae ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _ecea _cg .Segmenter ;for _ ,_cge :=range _ebe .Segments {switch _cge .Type {case 6,7,22,23,38,39,42,43:_ecea ,_bcda =_cge .GetSegmentData ();
if _bcda !=nil {return nil ,_cb .Wrap (_bcda ,_aae ,"");};_cgf =append (_cgf ,_ecea );case 50:_ecea ,_bcda =_cge .GetSegmentData ();if _bcda !=nil {return nil ,_bcda ;};_gcad ,_eag :=_ecea .(*_cg .EndOfStripe );if !_eag {return nil ,_cb .Errorf (_aae ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ecea );
};_cgf =append (_cgf ,_gcad );_ebe .FinalHeight =_gcad .LineNumber ();};};return _cgf ,nil ;};