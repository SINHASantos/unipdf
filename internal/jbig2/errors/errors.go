//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_f "fmt";_a "golang.org/x/xerrors";);func Wrap (err error ,processName ,message string )error {if _ef ,_aab :=err .(*processError );_aab {_ef ._e ="";};_b :=_aa (message ,processName );_b ._ab =err ;return _b ;};func (_ede *processError )Unwrap ()error {return _ede ._ab };
func (_ca *processError )Error ()string {var _d string ;if _ca ._e !=""{_d =_ca ._e ;};_d +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_ca ._ed ;if _ca ._cb !=""{_d +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_ca ._cb ;};if _ca ._ab !=nil {_d +="\u002e\u0020"+_ca ._ab .Error ();
};return _d ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _aa (_f .Sprintf (message ,arguments ...),processName );};func Error (processName ,message string )error {return _aa (message ,processName )};var _ _a .Wrapper =(*processError )(nil );
type processError struct{_e string ;_ed string ;_cb string ;_ab error ;};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _fe ,_ac :=err .(*processError );_ac {_fe ._e ="";};_cf :=_aa (_f .Sprintf (message ,arguments ...),processName );
_cf ._ab =err ;return _cf ;};func _aa (_aae ,_dg string )*processError {return &processError {_e :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_cb :_aae ,_ed :_dg };};