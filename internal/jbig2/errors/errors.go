//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_b "fmt";_g "golang.org/x/xerrors";);func Wrap (err error ,processName ,message string )error {if _cga ,_bef :=err .(*processError );_bef {_cga ._c ="";};_ce :=_af (message ,processName );_ce ._d =err ;return _ce ;};type processError struct{_c string ;
_be string ;_ba string ;_d error ;};func _af (_afb ,_cg string )*processError {return &processError {_c :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_ba :_afb ,_be :_cg };};func Error (processName ,message string )error {return _af (message ,processName )};
func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _ga ,_bae :=err .(*processError );_bae {_ga ._c ="";};_ef :=_af (_b .Sprintf (message ,arguments ...),processName );_ef ._d =err ;return _ef ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _af (_b .Sprintf (message ,arguments ...),processName );
};func (_cb *processError )Unwrap ()error {return _cb ._d };func (_e *processError )Error ()string {var _bb string ;if _e ._c !=""{_bb =_e ._c ;};_bb +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_e ._be ;if _e ._ba !=""{_bb +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_e ._ba ;
};if _e ._d !=nil {_bb +="\u002e\u0020"+_e ._d .Error ();};return _bb ;};var _ _g .Wrapper =(*processError )(nil );