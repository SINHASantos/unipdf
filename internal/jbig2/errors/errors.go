//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_c "fmt";_ea "golang.org/x/xerrors";);func Wrap (err error ,processName ,message string )error {if _fg ,_bb :=err .(*processError );_bb {_fg ._b ="";};_ac :=_gf (message ,processName );_ac ._f =err ;return _ac ;};func Error (processName ,message string )error {return _gf (message ,processName )};
func _gf (_ec ,_cb string )*processError {return &processError {_b :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_be :_ec ,_d :_cb };};func Errorf (processName ,message string ,arguments ...interface{})error {return _gf (_c .Sprintf (message ,arguments ...),processName );
};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _eg ,_eff :=err .(*processError );_eff {_eg ._b ="";};_dc :=_gf (_c .Sprintf (message ,arguments ...),processName );_dc ._f =err ;return _dc ;};var _ _ea .Wrapper =(*processError )(nil );
func (_a *processError )Error ()string {var _ef string ;if _a ._b !=""{_ef =_a ._b ;};_ef +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_a ._d ;if _a ._be !=""{_ef +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_a ._be ;};if _a ._f !=nil {_ef +="\u002e\u0020"+_a ._f .Error ();
};return _ef ;};type processError struct{_b string ;_d string ;_be string ;_f error ;};func (_ba *processError )Unwrap ()error {return _ba ._f };