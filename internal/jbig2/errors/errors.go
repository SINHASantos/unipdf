//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_a "fmt";_d "golang.org/x/xerrors";);func _be (_gbe ,_gf string )*processError {return &processError {_f :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_e :_gbe ,_fc :_gf };};func Error (processName ,message string )error {return _be (message ,processName )};
var _ _d .Wrapper =(*processError )(nil );type processError struct{_f string ;_fc string ;_e string ;_fg error ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _be (_a .Sprintf (message ,arguments ...),processName );};
func (_b *processError )Unwrap ()error {return _b ._fg };func Wrap (err error ,processName ,message string )error {if _bec ,_de :=err .(*processError );_de {_bec ._f ="";};_da :=_be (message ,processName );_da ._fg =err ;return _da ;};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _eg ,_ge :=err .(*processError );
_ge {_eg ._f ="";};_ac :=_be (_a .Sprintf (message ,arguments ...),processName );_ac ._fg =err ;return _ac ;};func (_ed *processError )Error ()string {var _aa string ;if _ed ._f !=""{_aa =_ed ._f ;};_aa +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_ed ._fc ;
if _ed ._e !=""{_aa +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_ed ._e ;};if _ed ._fg !=nil {_aa +="\u002e\u0020"+_ed ._fg .Error ();};return _aa ;};