//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_e "fmt";_d "golang.org/x/xerrors";);func _b (_gf ,_c string )*processError {return &processError {_dd :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_gc :_gf ,_ec :_c };};func (_gcb *processError )Error ()string {var _ddc string ;
if _gcb ._dd !=""{_ddc =_gcb ._dd ;};_ddc +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_gcb ._ec ;if _gcb ._gc !=""{_ddc +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_gcb ._gc ;};if _gcb ._ge !=nil {_ddc +="\u002e\u0020"+_gcb ._ge .Error ();
};return _ddc ;};func (_a *processError )Unwrap ()error {return _a ._ge };func Wrap (err error ,processName ,message string )error {if _ca ,_f :=err .(*processError );_f {_ca ._dd ="";};_df :=_b (message ,processName );_df ._ge =err ;return _df ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _b (_e .Sprintf (message ,arguments ...),processName );
};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _cb ,_da :=err .(*processError );_da {_cb ._dd ="";};_cf :=_b (_e .Sprintf (message ,arguments ...),processName );_cf ._ge =err ;return _cf ;};func Error (processName ,message string )error {return _b (message ,processName )};
var _ _d .Wrapper =(*processError )(nil );type processError struct{_dd string ;_ec string ;_gc string ;_ge error ;};