//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_f "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cg "image";_g "math";
);func (_efd *Settings )SetDefault (){if _efd .MaxCompWidth ==0{switch _efd .Components {case _ce .ComponentConn :_efd .MaxCompWidth =MaxConnCompWidth ;case _ce .ComponentCharacters :_efd .MaxCompWidth =MaxCharCompWidth ;case _ce .ComponentWords :_efd .MaxCompWidth =MaxWordCompWidth ;
};};if _efd .MaxCompHeight ==0{_efd .MaxCompHeight =MaxCompHeight ;};if _efd .Thresh ==0.0{_efd .Thresh =0.9;};if _efd .WeightFactor ==0.0{_efd .WeightFactor =0.75;};if _efd .RankHaus ==0.0{_efd .RankHaus =0.97;};if _efd .SizeHaus ==0{_efd .SizeHaus =2;
};};const (MaxDiffWidth =2;MaxDiffHeight =2;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_a .IntSlice ;TemplateAreas *_a .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ce .BitmapsArray ;
UndilatedTemplates *_ce .Bitmaps ;DilatedTemplates *_ce .Bitmaps ;TemplatesSize _a .IntsMap ;FgTemplates *_a .NumSlice ;CentroidPoints *_ce .Points ;CentroidPointsTemplates *_ce .Points ;ClassIDs *_a .IntSlice ;ComponentPageNumbers *_a .IntSlice ;PtaUL *_ce .Points ;
PtaLL *_ce .Points ;};const JbAddedPixels =6;const (RankHaus Method =iota ;Correlation ;);func (_bfb *Classer )classifyRankHaus (_dgb *_ce .Boxes ,_cdcb *_ce .Bitmaps ,_edd int )error {const _ecbf ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _dgb ==nil {return _gg .Error (_ecbf ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _cdcb ==nil {return _gg .Error (_ecbf ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_fdc :=len (_cdcb .Values );if _fdc ==0{return _gg .Error (_ecbf ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bee :=_cdcb .CountPixels ();_ecbb :=_bfb .Settings .SizeHaus ;_cgba :=_ce .SelCreateBrick (_ecbb ,_ecbb ,_ecbb /2,_ecbb /2,_ce .SelHit );
_gbbd :=&_ce .Bitmaps {Values :make ([]*_ce .Bitmap ,_fdc )};_gbbe :=&_ce .Bitmaps {Values :make ([]*_ce .Bitmap ,_fdc )};var (_geb ,_agad ,_dfa *_ce .Bitmap ;_abd error ;);for _bab :=0;_bab < _fdc ;_bab ++{_geb ,_abd =_cdcb .GetBitmap (_bab );if _abd !=nil {return _gg .Wrap (_abd ,_ecbf ,"");
};_agad ,_abd =_geb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _abd !=nil {return _gg .Wrap (_abd ,_ecbf ,"");};_dfa ,_abd =_ce .Dilate (nil ,_agad ,_cgba );if _abd !=nil {return _gg .Wrap (_abd ,_ecbf ,"");};_gbbd .Values [_fdc ]=_agad ;
_gbbe .Values [_fdc ]=_dfa ;};_dgd ,_abd :=_ce .Centroids (_gbbd .Values );if _abd !=nil {return _gg .Wrap (_abd ,_ecbf ,"");};if _abd =_dgd .Add (_bfb .CentroidPoints );_abd !=nil {_f .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _bfb .Settings .RankHaus ==1.0{_abd =_bfb .classifyRankHouseOne (_dgb ,_cdcb ,_gbbd ,_gbbe ,_dgd ,_edd );}else {_abd =_bfb .classifyRankHouseNonOne (_dgb ,_cdcb ,_gbbd ,_gbbe ,_dgd ,_bee ,_edd );};if _abd !=nil {return _gg .Wrap (_abd ,_ecbf ,"");
};return nil ;};func _bebcf (_fdb *Classer ,_egb *_ce .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_egb .Width ,Height :_egb .Height ,Classer :_fdb };};func (_dc *Classer )getULCorners (_dbd *_ce .Bitmap ,_ac *_ce .Boxes )error {const _bb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _dbd ==nil {return _gg .Error (_bb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ac ==nil {return _gg .Error (_bb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _dc .PtaUL ==nil {_dc .PtaUL =&_ce .Points {};
};_da :=len (*_ac );var (_ggfe ,_eb ,_cga ,_gd int ;_bg ,_cgf ,_eeg ,_dg float32 ;_dcd error ;_fd *_cg .Rectangle ;_eac *_ce .Bitmap ;_df _cg .Point ;);for _fdd :=0;_fdd < _da ;_fdd ++{_ggfe =_dc .BaseIndex +_fdd ;if _bg ,_cgf ,_dcd =_dc .CentroidPoints .GetGeometry (_ggfe );
_dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _eb ,_dcd =_dc .ClassIDs .Get (_ggfe );_dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _eeg ,_dg ,_dcd =_dc .CentroidPointsTemplates .GetGeometry (_eb );_dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bca :=_eeg -_bg ;
_ff :=_dg -_cgf ;if _bca >=0{_cga =int (_bca +0.5);}else {_cga =int (_bca -0.5);};if _ff >=0{_gd =int (_ff +0.5);}else {_gd =int (_ff -0.5);};if _fd ,_dcd =_ac .Get (_fdd );_dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"");};_fb ,_fbb :=_fd .Min .X ,_fd .Min .Y ;
_eac ,_dcd =_dc .UndilatedTemplates .GetBitmap (_eb );if _dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_df ,_dcd =_ccc (_dbd ,_fb ,_fbb ,_cga ,_gd ,_eac );if _dcd !=nil {return _gg .Wrap (_dcd ,_bb ,"");};_dc .PtaUL .AddPoint (float32 (_fb -_cga +_df .X ),float32 (_fbb -_gd +_df .Y ));};return nil ;};func (_eea *Classer )classifyCorrelation (_cfd *_ce .Boxes ,_fec *_ce .Bitmaps ,_bfd int )error {const _ggfd ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _cfd ==nil {return _gg .Error (_ggfd ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _fec ==nil {return _gg .Error (_ggfd ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bcb :=len (_fec .Values );if _bcb ==0{_f .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_de ,_ge *_ce .Bitmap ;_fee error ;);_aga :=&_ce .Bitmaps {Values :make ([]*_ce .Bitmap ,_bcb )};for _cfb ,_dcc :=range _fec .Values {_ge ,_fee =_dcc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"");
};_aga .Values [_cfb ]=_ge ;};_cgb :=_eea .FgTemplates ;_cdg :=_ce .MakePixelSumTab8 ();_bge :=_ce .MakePixelCentroidTab8 ();_gca :=make ([]int ,_bcb );_ggbd :=make ([][]int ,_bcb );_bbd :=_ce .Points (make ([]_ce .Point ,_bcb ));_cbd :=&_bbd ;var (_fg ,_aea int ;
_fbbf ,_abb ,_gbc int ;_age ,_ecc int ;_aee byte ;);for _aed ,_fgf :=range _aga .Values {_ggbd [_aed ]=make ([]int ,_fgf .Height );_fg =0;_aea =0;_abb =(_fgf .Height -1)*_fgf .RowStride ;_fbbf =0;for _ecc =_fgf .Height -1;_ecc >=0;_ecc ,_abb =_ecc -1,_abb -_fgf .RowStride {_ggbd [_aed ][_ecc ]=_fbbf ;
_gbc =0;for _age =0;_age < _fgf .RowStride ;_age ++{_aee =_fgf .Data [_abb +_age ];_gbc +=_cdg [_aee ];_fg +=_bge [_aee ]+_age *8*_cdg [_aee ];};_fbbf +=_gbc ;_aea +=_gbc *_ecc ;};_gca [_aed ]=_fbbf ;if _fbbf > 0{(*_cbd )[_aed ]=_ce .Point {X :float32 (_fg )/float32 (_fbbf ),Y :float32 (_aea )/float32 (_fbbf )};
}else {(*_cbd )[_aed ]=_ce .Point {X :float32 (_fgf .Width )/float32 (2),Y :float32 (_fgf .Height )/float32 (2)};};};if _fee =_eea .CentroidPoints .Add (_cbd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_fef ,_ebc ,_cgbb int ;_fdg float64 ;_cdc ,_dbg ,_agc ,_gfb float32 ;_bef ,_gbb _ce .Point ;_cbg bool ;_bcf *similarTemplatesFinder ;_fgd int ;_agb *_ce .Bitmap ;_bda *_cg .Rectangle ;_fbd *_ce .Bitmaps ;);for _fgd ,_ge =range _aga .Values {_ebc =_gca [_fgd ];
if _cdc ,_dbg ,_fee =_cbd .GetGeometry (_fgd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_cbg =false ;_fc :=len (_eea .UndilatedTemplates .Values );_bcf =_bebcf (_eea ,_ge );for _abbd :=_bcf .Next ();_abbd > -1;
{if _agb ,_fee =_eea .UndilatedTemplates .GetBitmap (_abbd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _cgbb ,_fee =_cgb .GetInt (_abbd );
_fee !=nil {_f .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fee );};if _agc ,_gfb ,_fee =_eea .CentroidPointsTemplates .GetGeometry (_abbd );
_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _eea .Settings .WeightFactor > 0.0{if _fef ,_fee =_eea .TemplateAreas .Get (_abbd );_fee !=nil {_f .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fee );
};_fdg =_eea .Settings .Thresh +(1.0-_eea .Settings .Thresh )*_eea .Settings .WeightFactor *float64 (_cgbb )/float64 (_fef );}else {_fdg =_eea .Settings .Thresh ;};_ca ,_ace :=_ce .CorrelationScoreThresholded (_ge ,_agb ,_ebc ,_cgbb ,_bef .X -_gbb .X ,_bef .Y -_gbb .Y ,MaxDiffWidth ,MaxDiffHeight ,_cdg ,_ggbd [_fgd ],float32 (_fdg ));
if _ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"");};if _cbf {var (_feg ,_eg float64 ;_bcc ,_ggd int ;);_feg ,_ace =_ce .CorrelationScore (_ge ,_agb ,_ebc ,_cgbb ,_cdc -_agc ,_dbg -_gfb ,MaxDiffWidth ,MaxDiffHeight ,_cdg );if _ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_eg ,_ace =_ce .CorrelationScoreSimple (_ge ,_agb ,_ebc ,_cgbb ,_cdc -_agc ,_dbg -_gfb ,MaxDiffWidth ,MaxDiffHeight ,_cdg );if _ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bcc =int (_g .Sqrt (_feg *float64 (_ebc )*float64 (_cgbb )));_ggd =int (_g .Sqrt (_eg *float64 (_ebc )*float64 (_cgbb )));if (_feg >=_fdg )!=(_eg >=_fdg ){return _gg .Errorf (_ggfd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_bcc ,_feg ,_feg >=_fdg ,_ggd ,_eg ,_eg >=_fdg ,_feg -_eg );
};if _feg >=_fdg !=_ca {return _gg .Errorf (_ggfd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_feg ,_feg *float64 (_ebc )*float64 (_cgbb ),_bcc ,_fdg ,float32 (_fdg )*float32 (_ebc )*float32 (_cgbb ),_ca );
};};if _ca {_cbg =true ;if _ace =_eea .ClassIDs .Add (_abbd );_ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _ace =_eea .ComponentPageNumbers .Add (_bfd );_ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _eea .Settings .KeepClassInstances {if _de ,_ace =_fec .GetBitmap (_fgd );_ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fbd ,_ace =_eea .ClassInstances .GetBitmaps (_abbd );
_ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fbd .AddBitmap (_de );if _bda ,_ace =_cfd .Get (_fgd );_ace !=nil {return _gg .Wrap (_ace ,_ggfd ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fbd .AddBox (_bda );};break ;};};if !_cbg {if _fee =_eea .ClassIDs .Add (_fc );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fee =_eea .ComponentPageNumbers .Add (_bfd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fbd =&_ce .Bitmaps {};if _de ,_fee =_fec .GetBitmap (_fgd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbd .AddBitmap (_de );_dfd ,_fce :=_de .Width ,_de .Height ;_befg :=uint64 (_fce )*uint64 (_dfd );_eea .TemplatesSize .Add (_befg ,_fc );
if _bda ,_fee =_cfd .Get (_fgd );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbd .AddBox (_bda );_eea .ClassInstances .AddBitmaps (_fbd );_eea .CentroidPointsTemplates .AddPoint (_cdc ,_dbg );_eea .FgTemplates .AddInt (_ebc );
_eea .UndilatedTemplates .AddBitmap (_de );_fef =(_ge .Width -2*JbAddedPixels )*(_ge .Height -2*JbAddedPixels );if _fee =_eea .TemplateAreas .Add (_fef );_fee !=nil {return _gg .Wrap (_fee ,_ggfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_eea .NumberOfClasses =len (_eea .UndilatedTemplates .Values );
return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func Init (settings Settings )(*Classer ,error ){const _ggf ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_e :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_a .IntsMap {},TemplateAreas :&_a .IntSlice {},ComponentPageNumbers :&_a .IntSlice {},ClassIDs :&_a .IntSlice {},ComponentsNumber :&_a .IntSlice {},CentroidPoints :&_ce .Points {},CentroidPointsTemplates :&_ce .Points {},UndilatedTemplates :&_ce .Bitmaps {},DilatedTemplates :&_ce .Bitmaps {},ClassInstances :&_ce .BitmapsArray {},FgTemplates :&_a .NumSlice {}};
if _ee :=_e .Settings .Validate ();_ee !=nil {return nil ,_gg .Wrap (_ee ,_ggf ,"");};return _e ,nil ;};func (_gec *Classer )classifyRankHouseNonOne (_fced *_ce .Boxes ,_dbde ,_ddb ,_faggb *_ce .Bitmaps ,_edb *_ce .Points ,_bebc *_a .NumSlice ,_fed int )(_ebg error ){const _bdf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_aceg ,_abf ,_afg ,_fac float32 ;_dad ,_gagc ,_aced int ;_gccc ,_ged ,_aaa ,_aef ,_dfad *_ce .Bitmap ;_fca ,_bfbg bool ;);_gde :=_ce .MakePixelSumTab8 ();for _ddd :=0;_ddd < len (_dbde .Values );_ddd ++{if _ged ,_ebg =_ddb .GetBitmap (_ddd );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _dad ,_ebg =_bebc .GetInt (_ddd );_ebg !=nil {_f .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ddd ,_ebg );
};if _aaa ,_ebg =_faggb .GetBitmap (_ddd );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _aceg ,_abf ,_ebg =_edb .GetGeometry (_ddd );_ebg !=nil {return _gg .Wrapf (_ebg ,_bdf ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cccc :=len (_gec .UndilatedTemplates .Values );_fca =false ;_eed :=_bebcf (_gec ,_ged );for _aced =_eed .Next ();_aced > -1;{if _aef ,_ebg =_gec .UndilatedTemplates .GetBitmap (_aced );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _gagc ,_ebg =_gec .FgTemplates .GetInt (_aced );_ebg !=nil {_f .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aced ,_ebg );
};if _dfad ,_ebg =_gec .DilatedTemplates .GetBitmap (_aced );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _afg ,_fac ,_ebg =_gec .CentroidPointsTemplates .GetGeometry (_aced );
_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bfbg ,_ebg =_ce .RankHausTest (_ged ,_aaa ,_aef ,_dfad ,_aceg -_afg ,_abf -_fac ,MaxDiffWidth ,MaxDiffHeight ,_dad ,_gagc ,float32 (_gec .Settings .RankHaus ),_gde );
if _ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"");};if _bfbg {_fca =true ;if _ebg =_gec .ClassIDs .Add (_aced );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"");};if _ebg =_gec .ComponentPageNumbers .Add (_fed );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"");
};if _gec .Settings .KeepClassInstances {_beeg ,_afa :=_gec .ClassInstances .GetBitmaps (_aced );if _afa !=nil {return _gg .Wrap (_afa ,_bdf ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _gccc ,_afa =_dbde .GetBitmap (_ddd );_afa !=nil {return _gg .Wrap (_afa ,_bdf ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_beeg .Values =append (_beeg .Values ,_gccc );_bcag ,_afa :=_fced .Get (_ddd );if _afa !=nil {return _gg .Wrap (_afa ,_bdf ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_beeg .Boxes =append (_beeg .Boxes ,_bcag );};break ;};};if !_fca {if _ebg =_gec .ClassIDs .Add (_cccc );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ebg =_gec .ComponentPageNumbers .Add (_fed );_ebg !=nil {return _gg .Wrap (_ebg ,_bdf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bga :=&_ce .Bitmaps {};_gccc =_dbde .Values [_ddd ];_bga .AddBitmap (_gccc );_gdb ,_ggg :=_gccc .Width ,_gccc .Height ;_gec .TemplatesSize .Add (uint64 (_gdb )*uint64 (_ggg ),_cccc );_fcgc ,_eccg :=_fced .Get (_ddd );if _eccg !=nil {return _gg .Wrap (_eccg ,_bdf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bga .AddBox (_fcgc );_gec .ClassInstances .AddBitmaps (_bga );_gec .CentroidPointsTemplates .AddPoint (_aceg ,_abf );_gec .UndilatedTemplates .AddBitmap (_ged );_gec .DilatedTemplates .AddBitmap (_aaa );_gec .FgTemplates .AddInt (_dad );};};_gec .NumberOfClasses =len (_gec .UndilatedTemplates .Values );
return nil ;};var _cbf bool ;func (_dbc *similarTemplatesFinder )Next ()int {var (_bed ,_cfg ,_cdce ,_aba int ;_beef bool ;_ffd *_ce .Bitmap ;_acf error ;);for {if _dbc .Index >=25{return -1;};_cfg =_dbc .Width +TwoByTwoWalk [2*_dbc .Index ];_bed =_dbc .Height +TwoByTwoWalk [2*_dbc .Index +1];
if _bed < 1||_cfg < 1{_dbc .Index ++;continue ;};if len (_dbc .CurrentNumbers )==0{_dbc .CurrentNumbers ,_beef =_dbc .Classer .TemplatesSize .GetSlice (uint64 (_cfg )*uint64 (_bed ));if !_beef {_dbc .Index ++;continue ;};_dbc .N =0;};_cdce =len (_dbc .CurrentNumbers );
for ;_dbc .N < _cdce ;_dbc .N ++{_aba =_dbc .CurrentNumbers [_dbc .N ];_ffd ,_acf =_dbc .Classer .DilatedTemplates .GetBitmap (_aba );if _acf !=nil {_f .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _ffd .Width -2*JbAddedPixels ==_cfg &&_ffd .Height -2*JbAddedPixels ==_bed {return _aba ;};};_dbc .Index ++;_dbc .CurrentNumbers =nil ;};};type Method int ;func (_b *Classer )AddPage (inputPage *_ce .Bitmap ,pageNumber int ,method Method )(_cb error ){const _gb ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_b .Widths [pageNumber ]=inputPage .Width ;_b .Heights [pageNumber ]=inputPage .Height ;if _cb =_b .verifyMethod (method );_cb !=nil {return _gg .Wrap (_cb ,_gb ,"");};_cc ,_cgc ,_cb :=inputPage .GetComponents (_b .Settings .Components ,_b .Settings .MaxCompWidth ,_b .Settings .MaxCompHeight );
if _cb !=nil {return _gg .Wrap (_cb ,_gb ,"");};_f .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cc );if _cb =_b .addPageComponents (inputPage ,_cgc ,_cc ,pageNumber ,method );_cb !=nil {return _gg .Wrap (_cb ,_gb ,"");
};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;
);func (_bec Settings )Validate ()error {const _ccb ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _bec .Thresh < 0.4||_bec .Thresh > 0.98{return _gg .Error (_ccb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _bec .WeightFactor < 0.0||_bec .WeightFactor > 1.0{return _gg .Error (_ccb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bec .RankHaus < 0.5||_bec .RankHaus > 1.0{return _gg .Error (_ccb ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bec .SizeHaus < 1||_bec .SizeHaus > 10{return _gg .Error (_ccb ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _bec .Components {case _ce .ComponentConn ,_ce .ComponentCharacters ,_ce .ComponentWords :default:return _gg .Error (_ccb ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_ggb *Classer )ComputeLLCorners ()(_fa error ){const _ef ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ggb .PtaUL ==nil {return _gg .Error (_ef ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_d :=len (*_ggb .PtaUL );_ggb .PtaLL =&_ce .Points {};var (_ec ,_be float32 ;_ed ,_dd int ;_db *_ce .Bitmap ;);for _cf :=0;_cf < _d ;_cf ++{_ec ,_be ,_fa =_ggb .PtaUL .GetGeometry (_cf );if _fa !=nil {_f .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fa );
return _gg .Wrap (_fa ,_ef ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ed ,_fa =_ggb .ClassIDs .Get (_cf );if _fa !=nil {_f .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fa );
return _gg .Wrap (_fa ,_ef ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_db ,_fa =_ggb .UndilatedTemplates .GetBitmap (_ed );if _fa !=nil {_f .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fa );
return _gg .Wrap (_fa ,_ef ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dd =_db .Height ;_ggb .PtaLL .AddPoint (_ec ,_be +float32 (_dd ));};return nil ;};type Settings struct{MaxCompWidth int ;
MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ce .Component ;Method Method ;};func _ccc (_cd *_ce .Bitmap ,_edc ,_cbe ,_ga ,_eab int ,_ddc *_ce .Bitmap )(_bf _cg .Point ,_ecb error ){const _fagg ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _cd ==nil {return _bf ,_gg .Error (_fagg ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _ddc ==nil {return _bf ,_gg .Error (_fagg ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_aa ,_ad :=_ddc .Width ,_ddc .Height ;_gga ,_afe :=_edc -_ga -JbAddedPixels ,_cbe -_eab -JbAddedPixels ;_f .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_edc ,_cbe ,_aa ,_ad ,_gga ,_afe );
_add ,_ecb :=_ce .Rect (_gga ,_afe ,_aa ,_ad );if _ecb !=nil {return _bf ,_gg .Wrap (_ecb ,_fagg ,"");};_ddg ,_ ,_ecb :=_cd .ClipRectangle (_add );if _ecb !=nil {_f .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_add );
return _bf ,_gg .Wrap (_ecb ,_fagg ,"");};_ba :=_ce .New (_ddg .Width ,_ddg .Height );_fbf :=_g .MaxInt32 ;var _bd ,_gba ,_eec ,_ag ,_gbe int ;for _bd =-1;_bd <=1;_bd ++{for _gba =-1;_gba <=1;_gba ++{if _ ,_ecb =_ce .Copy (_ba ,_ddg );_ecb !=nil {return _bf ,_gg .Wrap (_ecb ,_fagg ,"");
};if _ecb =_ba .RasterOperation (_gba ,_bd ,_aa ,_ad ,_ce .PixSrcXorDst ,_ddc ,0,0);_ecb !=nil {return _bf ,_gg .Wrap (_ecb ,_fagg ,"");};_eec =_ba .CountPixels ();if _eec < _fbf {_ag =_gba ;_gbe =_bd ;_fbf =_eec ;};};};_bf .X =_ag ;_bf .Y =_gbe ;return _bf ,nil ;
};func DefaultSettings ()Settings {_ggaa :=&Settings {};_ggaa .SetDefault ();return *_ggaa };func (_cgcb *Classer )addPageComponents (_gf *_ce .Bitmap ,_edf *_ce .Boxes ,_fe *_ce .Bitmaps ,_bc int ,_ae Method )error {const _af ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _gf ==nil {return _gg .Error (_af ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _edf ==nil ||_fe ==nil ||len (*_edf )==0{_f .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_gf );
return nil ;};var _ea error ;switch _ae {case RankHaus :_ea =_cgcb .classifyRankHaus (_edf ,_fe ,_bc );case Correlation :_ea =_cgcb .classifyCorrelation (_edf ,_fe ,_bc );default:_f .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ae );
return _gg .Error (_af ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ea !=nil {return _gg .Wrap (_ea ,_af ,"");};if _ea =_cgcb .getULCorners (_gf ,_edf );_ea !=nil {return _gg .Wrap (_ea ,_af ,"");
};_gc :=len (*_edf );_cgcb .BaseIndex +=_gc ;if _ea =_cgcb .ComponentsNumber .Add (_gc );_ea !=nil {return _gg .Wrap (_ea ,_af ,"");};return nil ;};func (_afb *Classer )classifyRankHouseOne (_gbd *_ce .Boxes ,_cbfc ,_gaa ,_fcg *_ce .Bitmaps ,_ebe *_ce .Points ,_eecc int )(_acc error ){const _gdf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gcc ,_bgef ,_gda ,_eag float32 ;_ddce int ;_gag ,_gbca ,_gaaf ,_eegb ,_afd *_ce .Bitmap ;_dbb ,_ebca bool ;);for _bfa :=0;_bfa < len (_cbfc .Values );_bfa ++{_gbca =_gaa .Values [_bfa ];_gaaf =_fcg .Values [_bfa ];_gcc ,_bgef ,_acc =_ebe .GetGeometry (_bfa );
if _acc !=nil {return _gg .Wrapf (_acc ,_gdf ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_aae :=len (_afb .UndilatedTemplates .Values );_dbb =false ;_fad :=_bebcf (_afb ,_gbca );for _ddce =_fad .Next ();_ddce > -1;
{_eegb ,_acc =_afb .UndilatedTemplates .GetBitmap (_ddce );if _acc !=nil {return _gg .Wrap (_acc ,_gdf ,"\u0062\u006d\u0033");};_afd ,_acc =_afb .DilatedTemplates .GetBitmap (_ddce );if _acc !=nil {return _gg .Wrap (_acc ,_gdf ,"\u0062\u006d\u0034");};
_gda ,_eag ,_acc =_afb .CentroidPointsTemplates .GetGeometry (_ddce );if _acc !=nil {return _gg .Wrap (_acc ,_gdf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_ebca ,_acc =_ce .HausTest (_gbca ,_gaaf ,_eegb ,_afd ,_gcc -_gda ,_bgef -_eag ,MaxDiffWidth ,MaxDiffHeight );
if _acc !=nil {return _gg .Wrap (_acc ,_gdf ,"");};if _ebca {_dbb =true ;if _acc =_afb .ClassIDs .Add (_ddce );_acc !=nil {return _gg .Wrap (_acc ,_gdf ,"");};if _acc =_afb .ComponentPageNumbers .Add (_eecc );_acc !=nil {return _gg .Wrap (_acc ,_gdf ,"");
};if _afb .Settings .KeepClassInstances {_beb ,_gebe :=_afb .ClassInstances .GetBitmaps (_ddce );if _gebe !=nil {return _gg .Wrap (_gebe ,_gdf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gag ,_gebe =_cbfc .GetBitmap (_bfa );if _gebe !=nil {return _gg .Wrap (_gebe ,_gdf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_beb .AddBitmap (_gag );_dec ,_gebe :=_gbd .Get (_bfa );if _gebe !=nil {return _gg .Wrap (_gebe ,_gdf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_beb .AddBox (_dec );};break ;};};if !_dbb {if _acc =_afb .ClassIDs .Add (_aae );_acc !=nil {return _gg .Wrap (_acc ,_gdf ,"");
};if _acc =_afb .ComponentPageNumbers .Add (_eecc );_acc !=nil {return _gg .Wrap (_acc ,_gdf ,"");};_aeb :=&_ce .Bitmaps {};_gag ,_acc =_cbfc .GetBitmap (_bfa );if _acc !=nil {return _gg .Wrap (_acc ,_gdf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_aeb .Values =append (_aeb .Values ,_gag );
_aad ,_ada :=_gag .Width ,_gag .Height ;_afb .TemplatesSize .Add (uint64 (_ada )*uint64 (_aad ),_aae );_fegg ,_ggae :=_gbd .Get (_bfa );if _ggae !=nil {return _gg .Wrap (_ggae ,_gdf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_aeb .AddBox (_fegg );_afb .ClassInstances .AddBitmaps (_aeb );
_afb .CentroidPointsTemplates .AddPoint (_gcc ,_bgef );_afb .UndilatedTemplates .AddBitmap (_gbca );_afb .DilatedTemplates .AddBitmap (_gaaf );};};return nil ;};func (_fbg *Classer )verifyMethod (_fag Method )error {if _fag !=RankHaus &&_fag !=Correlation {return _gg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};