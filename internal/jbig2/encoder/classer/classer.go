//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_af "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "image";_a "math";
);var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const (MaxDiffWidth =2;MaxDiffHeight =2;);type Method int ;func (_fa *Classer )AddPage (inputPage *_b .Bitmap ,pageNumber int ,method Method )(_c error ){const _fd ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_fa .Widths [pageNumber ]=inputPage .Width ;_fa .Heights [pageNumber ]=inputPage .Height ;if _c =_fa .verifyMethod (method );_c !=nil {return _gc .Wrap (_c ,_fd ,"");};_gd ,_cb ,_c :=inputPage .GetComponents (_fa .Settings .Components ,_fa .Settings .MaxCompWidth ,_fa .Settings .MaxCompHeight );
if _c !=nil {return _gc .Wrap (_c ,_fd ,"");};_af .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gd );if _c =_fa .addPageComponents (inputPage ,_cb ,_gd ,pageNumber ,method );_c !=nil {return _gc .Wrap (_c ,_fd ,"");
};return nil ;};func (_aee *Classer )getULCorners (_eg *_b .Bitmap ,_ec *_b .Boxes )error {const _be ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _eg ==nil {return _gc .Error (_be ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ec ==nil {return _gc .Error (_be ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _aee .PtaUL ==nil {_aee .PtaUL =&_b .Points {};};_ba :=len (*_ec );var (_eb ,_ef ,_gg ,_ced int ;_ag ,_cg ,_age ,_cbf float32 ;_df error ;_dg *_g .Rectangle ;
_dfb *_b .Bitmap ;_bb _g .Point ;);for _bf :=0;_bf < _ba ;_bf ++{_eb =_aee .BaseIndex +_bf ;if _ag ,_cg ,_df =_aee .CentroidPoints .GetGeometry (_eb );_df !=nil {return _gc .Wrap (_df ,_be ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ef ,_df =_aee .ClassIDs .Get (_eb );_df !=nil {return _gc .Wrap (_df ,_be ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _age ,_cbf ,_df =_aee .CentroidPointsTemplates .GetGeometry (_ef );_df !=nil {return _gc .Wrap (_df ,_be ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_cgf :=_age -_ag ;_bcd :=_cbf -_cg ;if _cgf >=0{_gg =int (_cgf +0.5);}else {_gg =int (_cgf -0.5);};if _bcd >=0{_ced =int (_bcd +0.5);}else {_ced =int (_bcd -0.5);};if _dg ,_df =_ec .Get (_bf );_df !=nil {return _gc .Wrap (_df ,_be ,"");};_aeee ,_ff :=_dg .Min .X ,_dg .Min .Y ;
_dfb ,_df =_aee .UndilatedTemplates .GetBitmap (_ef );if _df !=nil {return _gc .Wrap (_df ,_be ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_bb ,_df =_gad (_eg ,_aeee ,_ff ,_gg ,_ced ,_dfb );if _df !=nil {return _gc .Wrap (_df ,_be ,"");};_aee .PtaUL .AddPoint (float32 (_aeee -_gg +_bb .X ),float32 (_ff -_ced +_bb .Y ));};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ge :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_e .IntsMap {},TemplateAreas :&_e .IntSlice {},ComponentPageNumbers :&_e .IntSlice {},ClassIDs :&_e .IntSlice {},ComponentsNumber :&_e .IntSlice {},CentroidPoints :&_b .Points {},CentroidPointsTemplates :&_b .Points {},UndilatedTemplates :&_b .Bitmaps {},DilatedTemplates :&_b .Bitmaps {},ClassInstances :&_b .BitmapsArray {},FgTemplates :&_e .NumSlice {}};
if _bc :=_ge .Settings .Validate ();_bc !=nil {return nil ,_gc .Wrap (_bc ,_bg ,"");};return _ge ,nil ;};var _adb bool ;func (_aaf *Classer )classifyCorrelation (_fe *_b .Boxes ,_fab *_b .Bitmaps ,_bega int )error {const _cf ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _fe ==nil {return _gc .Error (_cf ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _fab ==nil {return _gc .Error (_cf ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_adf :=len (_fab .Values );if _adf ==0{_af .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_feg ,_dd *_b .Bitmap ;_bab error ;);_fbf :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_adf )};for _ada ,_bbb :=range _fab .Values {_dd ,_bab =_bbb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bab !=nil {return _gc .Wrap (_bab ,_cf ,"");
};_fbf .Values [_ada ]=_dd ;};_gadd :=_aaf .FgTemplates ;_bfa :=_b .MakePixelSumTab8 ();_afeg :=_b .MakePixelCentroidTab8 ();_fdf :=make ([]int ,_adf );_dda :=make ([][]int ,_adf );_gdd :=_b .Points (make ([]_b .Point ,_adf ));_gbe :=&_gdd ;var (_cfe ,_ged int ;
_bgb ,_dfbe ,_cae int ;_bgg ,_gef int ;_cbd byte ;);for _gcd ,_fbc :=range _fbf .Values {_dda [_gcd ]=make ([]int ,_fbc .Height );_cfe =0;_ged =0;_dfbe =(_fbc .Height -1)*_fbc .RowStride ;_bgb =0;for _gef =_fbc .Height -1;_gef >=0;_gef ,_dfbe =_gef -1,_dfbe -_fbc .RowStride {_dda [_gcd ][_gef ]=_bgb ;
_cae =0;for _bgg =0;_bgg < _fbc .RowStride ;_bgg ++{_cbd =_fbc .Data [_dfbe +_bgg ];_cae +=_bfa [_cbd ];_cfe +=_afeg [_cbd ]+_bgg *8*_bfa [_cbd ];};_bgb +=_cae ;_ged +=_cae *_gef ;};_fdf [_gcd ]=_bgb ;if _bgb > 0{(*_gbe )[_gcd ]=_b .Point {X :float32 (_cfe )/float32 (_bgb ),Y :float32 (_ged )/float32 (_bgb )};
}else {(*_gbe )[_gcd ]=_b .Point {X :float32 (_fbc .Width )/float32 (2),Y :float32 (_fbc .Height )/float32 (2)};};};if _bab =_aaf .CentroidPoints .Add (_gbe );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_ecd ,_fbg ,_gbc int ;_ebc float64 ;_cdf ,_ecg ,_cad ,_dgc float32 ;_ffd ,_dgd _b .Point ;_efdd bool ;_egg *similarTemplatesFinder ;_gbf int ;_adfc *_b .Bitmap ;_gf *_g .Rectangle ;_fea *_b .Bitmaps ;);for _gbf ,_dd =range _fbf .Values {_fbg =_fdf [_gbf ];
if _cdf ,_ecg ,_bab =_gbe .GetGeometry (_gbf );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_efdd =false ;_agc :=len (_aaf .UndilatedTemplates .Values );_egg =_afde (_aaf ,_dd );for _bgbf :=_egg .Next ();_bgbf > -1;
{if _adfc ,_bab =_aaf .UndilatedTemplates .GetBitmap (_bgbf );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _gbc ,_bab =_gadd .GetInt (_bgbf );
_bab !=nil {_af .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bab );};if _cad ,_dgc ,_bab =_aaf .CentroidPointsTemplates .GetGeometry (_bgbf );
_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _aaf .Settings .WeightFactor > 0.0{if _ecd ,_bab =_aaf .TemplateAreas .Get (_bgbf );_bab !=nil {_af .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bab );
};_ebc =_aaf .Settings .Thresh +(1.0-_aaf .Settings .Thresh )*_aaf .Settings .WeightFactor *float64 (_gbc )/float64 (_ecd );}else {_ebc =_aaf .Settings .Thresh ;};_gfd ,_gdg :=_b .CorrelationScoreThresholded (_dd ,_adfc ,_fbg ,_gbc ,_ffd .X -_dgd .X ,_ffd .Y -_dgd .Y ,MaxDiffWidth ,MaxDiffHeight ,_bfa ,_dda [_gbf ],float32 (_ebc ));
if _gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"");};if _adb {var (_bge ,_acf float64 ;_aec ,_fee int ;);_bge ,_gdg =_b .CorrelationScore (_dd ,_adfc ,_fbg ,_gbc ,_cdf -_cad ,_ecg -_dgc ,MaxDiffWidth ,MaxDiffHeight ,_bfa );if _gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_acf ,_gdg =_b .CorrelationScoreSimple (_dd ,_adfc ,_fbg ,_gbc ,_cdf -_cad ,_ecg -_dgc ,MaxDiffWidth ,MaxDiffHeight ,_bfa );if _gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_aec =int (_a .Sqrt (_bge *float64 (_fbg )*float64 (_gbc )));_fee =int (_a .Sqrt (_acf *float64 (_fbg )*float64 (_gbc )));if (_bge >=_ebc )!=(_acf >=_ebc ){return _gc .Errorf (_cf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_aec ,_bge ,_bge >=_ebc ,_fee ,_acf ,_acf >=_ebc ,_bge -_acf );
};if _bge >=_ebc !=_gfd {return _gc .Errorf (_cf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_bge ,_bge *float64 (_fbg )*float64 (_gbc ),_aec ,_ebc ,float32 (_ebc )*float32 (_fbg )*float32 (_gbc ),_gfd );
};};if _gfd {_efdd =true ;if _gdg =_aaf .ClassIDs .Add (_bgbf );_gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _gdg =_aaf .ComponentPageNumbers .Add (_bega );_gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _aaf .Settings .KeepClassInstances {if _feg ,_gdg =_fab .GetBitmap (_gbf );_gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fea ,_gdg =_aaf .ClassInstances .GetBitmaps (_bgbf );
_gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fea .AddBitmap (_feg );if _gf ,_gdg =_fe .Get (_gbf );_gdg !=nil {return _gc .Wrap (_gdg ,_cf ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fea .AddBox (_gf );};break ;};};if !_efdd {if _bab =_aaf .ClassIDs .Add (_agc );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bab =_aaf .ComponentPageNumbers .Add (_bega );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fea =&_b .Bitmaps {};if _feg ,_bab =_fab .GetBitmap (_gbf );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBitmap (_feg );_fbb ,_bfd :=_feg .Width ,_feg .Height ;_aeb :=uint64 (_bfd )*uint64 (_fbb );_aaf .TemplatesSize .Add (_aeb ,_agc );
if _gf ,_bab =_fe .Get (_gbf );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBox (_gf );_aaf .ClassInstances .AddBitmaps (_fea );_aaf .CentroidPointsTemplates .AddPoint (_cdf ,_ecg );_aaf .FgTemplates .AddInt (_fbg );
_aaf .UndilatedTemplates .AddBitmap (_feg );_ecd =(_dd .Width -2*JbAddedPixels )*(_dd .Height -2*JbAddedPixels );if _bab =_aaf .TemplateAreas .Add (_ecd );_bab !=nil {return _gc .Wrap (_bab ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_aaf .NumberOfClasses =len (_aaf .UndilatedTemplates .Values );
return nil ;};func (_bcf *Classer )ComputeLLCorners ()(_afc error ){const _fg ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _bcf .PtaUL ==nil {return _gc .Error (_fg ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_ca :=len (*_bcf .PtaUL );_bcf .PtaLL =&_b .Points {};var (_ee ,_ga float32 ;_cc ,_gb int ;_cbb *_b .Bitmap ;);for _gcg :=0;_gcg < _ca ;_gcg ++{_ee ,_ga ,_afc =_bcf .PtaUL .GetGeometry (_gcg );if _afc !=nil {_af .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_afc );
return _gc .Wrap (_afc ,_fg ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_cc ,_afc =_bcf .ClassIDs .Get (_gcg );if _afc !=nil {_af .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_afc );
return _gc .Wrap (_afc ,_fg ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_cbb ,_afc =_bcf .UndilatedTemplates .GetBitmap (_cc );if _afc !=nil {_af .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_afc );
return _gc .Wrap (_afc ,_fg ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_gb =_cbb .Height ;_bcf .PtaLL .AddPoint (_ee ,_ga +float32 (_gb ));};return nil ;};func (_dc Settings )Validate ()error {const _dbb ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _dc .Thresh < 0.4||_dc .Thresh > 0.98{return _gc .Error (_dbb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dc .WeightFactor < 0.0||_dc .WeightFactor > 1.0{return _gc .Error (_dbb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dc .RankHaus < 0.5||_dc .RankHaus > 1.0{return _gc .Error (_dbb ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dc .SizeHaus < 1||_dc .SizeHaus > 10{return _gc .Error (_dbb ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dc .Components {case _b .ComponentConn ,_b .ComponentCharacters ,_b .ComponentWords :default:return _gc .Error (_dbb ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func _afde (_ddae *Classer ,_dffg *_b .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_dffg .Width ,Height :_dffg .Height ,Classer :_ddae };};func (_aa *Classer )addPageComponents (_d *_b .Bitmap ,_fb *_b .Boxes ,_ae *_b .Bitmaps ,_ed int ,_ce Method )error {const _afa ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _d ==nil {return _gc .Error (_afa ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _fb ==nil ||_ae ==nil ||len (*_fb )==0{_af .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_d );
return nil ;};var _ac error ;switch _ce {case RankHaus :_ac =_aa .classifyRankHaus (_fb ,_ae ,_ed );case Correlation :_ac =_aa .classifyCorrelation (_fb ,_ae ,_ed );default:_af .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ce );
return _gc .Error (_afa ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ac !=nil {return _gc .Wrap (_ac ,_afa ,"");};if _ac =_aa .getULCorners (_d ,_fb );_ac !=nil {return _gc .Wrap (_ac ,_afa ,"");
};_bcb :=len (*_fb );_aa .BaseIndex +=_bcb ;if _ac =_aa .ComponentsNumber .Add (_bcb );_ac !=nil {return _gc .Wrap (_ac ,_afa ,"");};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_e .IntSlice ;TemplateAreas *_e .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_b .BitmapsArray ;UndilatedTemplates *_b .Bitmaps ;DilatedTemplates *_b .Bitmaps ;TemplatesSize _e .IntsMap ;FgTemplates *_e .NumSlice ;CentroidPoints *_b .Points ;CentroidPointsTemplates *_b .Points ;
ClassIDs *_e .IntSlice ;ComponentPageNumbers *_e .IntSlice ;PtaUL *_b .Points ;PtaLL *_b .Points ;};func DefaultSettings ()Settings {_bgbb :=&Settings {};_bgbb .SetDefault ();return *_bgbb };func (_gfe *similarTemplatesFinder )Next ()int {var (_abd ,_agd ,_accd ,_aad int ;
_bffg bool ;_bfc *_b .Bitmap ;_abf error ;);for {if _gfe .Index >=25{return -1;};_agd =_gfe .Width +TwoByTwoWalk [2*_gfe .Index ];_abd =_gfe .Height +TwoByTwoWalk [2*_gfe .Index +1];if _abd < 1||_agd < 1{_gfe .Index ++;continue ;};if len (_gfe .CurrentNumbers )==0{_gfe .CurrentNumbers ,_bffg =_gfe .Classer .TemplatesSize .GetSlice (uint64 (_agd )*uint64 (_abd ));
if !_bffg {_gfe .Index ++;continue ;};_gfe .N =0;};_accd =len (_gfe .CurrentNumbers );for ;_gfe .N < _accd ;_gfe .N ++{_aad =_gfe .CurrentNumbers [_gfe .N ];_bfc ,_abf =_gfe .Classer .DilatedTemplates .GetBitmap (_aad );if _abf !=nil {_af .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _bfc .Width -2*JbAddedPixels ==_agd &&_bfc .Height -2*JbAddedPixels ==_abd {return _aad ;};};_gfe .Index ++;_gfe .CurrentNumbers =nil ;};};func (_fbd *Classer )classifyRankHouseNonOne (_gga *_b .Boxes ,_aeeed ,_fcb ,_ea *_b .Bitmaps ,_cgc *_b .Points ,_bad *_e .NumSlice ,_dba int )(_cdg error ){const _efeg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ffe ,_dae ,_ddb ,_cdb float32 ;_ab ,_dabf ,_daa int ;_fdg ,_gbb ,_fag ,_aea ,_dga *_b .Bitmap ;_ebd ,_acc bool ;);_cfd :=_b .MakePixelSumTab8 ();for _edd :=0;_edd < len (_aeeed .Values );_edd ++{if _gbb ,_cdg =_fcb .GetBitmap (_edd );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _ab ,_cdg =_bad .GetInt (_edd );_cdg !=nil {_af .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_edd ,_cdg );
};if _fag ,_cdg =_ea .GetBitmap (_edd );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ffe ,_dae ,_cdg =_cgc .GetGeometry (_edd );_cdg !=nil {return _gc .Wrapf (_cdg ,_efeg ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_gdf :=len (_fbd .UndilatedTemplates .Values );_ebd =false ;_ddbf :=_afde (_fbd ,_gbb );for _daa =_ddbf .Next ();_daa > -1;{if _aea ,_cdg =_fbd .UndilatedTemplates .GetBitmap (_daa );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _dabf ,_cdg =_fbd .FgTemplates .GetInt (_daa );_cdg !=nil {_af .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_daa ,_cdg );
};if _dga ,_cdg =_fbd .DilatedTemplates .GetBitmap (_daa );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _ddb ,_cdb ,_cdg =_fbd .CentroidPointsTemplates .GetGeometry (_daa );
_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_acc ,_cdg =_b .RankHausTest (_gbb ,_fag ,_aea ,_dga ,_ffe -_ddb ,_dae -_cdb ,MaxDiffWidth ,MaxDiffHeight ,_ab ,_dabf ,float32 (_fbd .Settings .RankHaus ),_cfd );
if _cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"");};if _acc {_ebd =true ;if _cdg =_fbd .ClassIDs .Add (_daa );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"");};if _cdg =_fbd .ComponentPageNumbers .Add (_dba );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"");
};if _fbd .Settings .KeepClassInstances {_fegg ,_cbc :=_fbd .ClassInstances .GetBitmaps (_daa );if _cbc !=nil {return _gc .Wrap (_cbc ,_efeg ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fdg ,_cbc =_aeeed .GetBitmap (_edd );_cbc !=nil {return _gc .Wrap (_cbc ,_efeg ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_fegg .Values =append (_fegg .Values ,_fdg );_gabe ,_cbc :=_gga .Get (_edd );if _cbc !=nil {return _gc .Wrap (_cbc ,_efeg ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_fegg .Boxes =append (_fegg .Boxes ,_gabe );};break ;};};if !_ebd {if _cdg =_fbd .ClassIDs .Add (_gdf );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cdg =_fbd .ComponentPageNumbers .Add (_dba );_cdg !=nil {return _gc .Wrap (_cdg ,_efeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_eeg :=&_b .Bitmaps {};_fdg =_aeeed .Values [_edd ];_eeg .AddBitmap (_fdg );_aged ,_gcb :=_fdg .Width ,_fdg .Height ;_fbd .TemplatesSize .Add (uint64 (_aged )*uint64 (_gcb ),_gdf );_cga ,_aacd :=_gga .Get (_edd );if _aacd !=nil {return _gc .Wrap (_aacd ,_efeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_eeg .AddBox (_cga );_fbd .ClassInstances .AddBitmaps (_eeg );_fbd .CentroidPointsTemplates .AddPoint (_ffe ,_dae );_fbd .UndilatedTemplates .AddBitmap (_gbb );_fbd .DilatedTemplates .AddBitmap (_fag );_fbd .FgTemplates .AddInt (_ab );};};_fbd .NumberOfClasses =len (_fbd .UndilatedTemplates .Values );
return nil ;};func (_ggc *Classer )classifyRankHouseOne (_gfb *_b .Boxes ,_afd ,_aaa ,_ggcc *_b .Bitmaps ,_bed *_b .Points ,_ffdd int )(_fcg error ){const _cag ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_eca ,_fcc ,_bac ,_ecgf float32 ;_cda int ;_gadf ,_gab ,_ffb ,_edf ,_fccc *_b .Bitmap ;_ebg ,_ebbg bool ;);for _bca :=0;_bca < len (_afd .Values );_bca ++{_gab =_aaa .Values [_bca ];_ffb =_ggcc .Values [_bca ];_eca ,_fcc ,_fcg =_bed .GetGeometry (_bca );
if _fcg !=nil {return _gc .Wrapf (_fcg ,_cag ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_add :=len (_ggc .UndilatedTemplates .Values );_ebg =false ;_dff :=_afde (_ggc ,_gab );for _cda =_dff .Next ();_cda > -1;
{_edf ,_fcg =_ggc .UndilatedTemplates .GetBitmap (_cda );if _fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"\u0062\u006d\u0033");};_fccc ,_fcg =_ggc .DilatedTemplates .GetBitmap (_cda );if _fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"\u0062\u006d\u0034");};_bac ,_ecgf ,_fcg =_ggc .CentroidPointsTemplates .GetGeometry (_cda );
if _fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_ebbg ,_fcg =_b .HausTest (_gab ,_ffb ,_edf ,_fccc ,_eca -_bac ,_fcc -_ecgf ,MaxDiffWidth ,MaxDiffHeight );
if _fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"");};if _ebbg {_ebg =true ;if _fcg =_ggc .ClassIDs .Add (_cda );_fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"");};if _fcg =_ggc .ComponentPageNumbers .Add (_ffdd );_fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"");
};if _ggc .Settings .KeepClassInstances {_faf ,_egge :=_ggc .ClassInstances .GetBitmaps (_cda );if _egge !=nil {return _gc .Wrap (_egge ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gadf ,_egge =_afd .GetBitmap (_bca );if _egge !=nil {return _gc .Wrap (_egge ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_faf .AddBitmap (_gadf );_ffbe ,_egge :=_gfb .Get (_bca );if _egge !=nil {return _gc .Wrap (_egge ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_faf .AddBox (_ffbe );};break ;};};if !_ebg {if _fcg =_ggc .ClassIDs .Add (_add );_fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"");
};if _fcg =_ggc .ComponentPageNumbers .Add (_ffdd );_fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"");};_dfe :=&_b .Bitmaps {};_gadf ,_fcg =_afd .GetBitmap (_bca );if _fcg !=nil {return _gc .Wrap (_fcg ,_cag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfe .Values =append (_dfe .Values ,_gadf );
_acb ,_dde :=_gadf .Width ,_gadf .Height ;_ggc .TemplatesSize .Add (uint64 (_dde )*uint64 (_acb ),_add );_gcfe ,_dab :=_gfb .Get (_bca );if _dab !=nil {return _gc .Wrap (_dab ,_cag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfe .AddBox (_gcfe );_ggc .ClassInstances .AddBitmaps (_dfe );
_ggc .CentroidPointsTemplates .AddPoint (_eca ,_fcc );_ggc .UndilatedTemplates .AddBitmap (_gab );_ggc .DilatedTemplates .AddBitmap (_ffb );};};return nil ;};func (_gee *Settings )SetDefault (){if _gee .MaxCompWidth ==0{switch _gee .Components {case _b .ComponentConn :_gee .MaxCompWidth =MaxConnCompWidth ;
case _b .ComponentCharacters :_gee .MaxCompWidth =MaxCharCompWidth ;case _b .ComponentWords :_gee .MaxCompWidth =MaxWordCompWidth ;};};if _gee .MaxCompHeight ==0{_gee .MaxCompHeight =MaxCompHeight ;};if _gee .Thresh ==0.0{_gee .Thresh =0.9;};if _gee .WeightFactor ==0.0{_gee .WeightFactor =0.75;
};if _gee .RankHaus ==0.0{_gee .RankHaus =0.97;};if _gee .SizeHaus ==0{_gee .SizeHaus =2;};};func (_fgc *Classer )classifyRankHaus (_bff *_b .Boxes ,_gcf *_b .Bitmaps ,_fc int )error {const _ace ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _bff ==nil {return _gc .Error (_ace ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gcf ==nil {return _gc .Error (_ace ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_fbfb :=len (_gcf .Values );if _fbfb ==0{return _gc .Error (_ace ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_fgd :=_gcf .CountPixels ();_gff :=_fgc .Settings .SizeHaus ;_fdb :=_b .SelCreateBrick (_gff ,_gff ,_gff /2,_gff /2,_b .SelHit );
_bd :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_fbfb )};_fdbf :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_fbfb )};var (_dada ,_ggb ,_cdc *_b .Bitmap ;_cbde error ;);for _dbg :=0;_dbg < _fbfb ;_dbg ++{_dada ,_cbde =_gcf .GetBitmap (_dbg );if _cbde !=nil {return _gc .Wrap (_cbde ,_ace ,"");
};_ggb ,_cbde =_dada .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _cbde !=nil {return _gc .Wrap (_cbde ,_ace ,"");};_cdc ,_cbde =_b .Dilate (nil ,_ggb ,_fdb );if _cbde !=nil {return _gc .Wrap (_cbde ,_ace ,"");};
_bd .Values [_fbfb ]=_ggb ;_fdbf .Values [_fbfb ]=_cdc ;};_ede ,_cbde :=_b .Centroids (_bd .Values );if _cbde !=nil {return _gc .Wrap (_cbde ,_ace ,"");};if _cbde =_ede .Add (_fgc .CentroidPoints );_cbde !=nil {_af .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _fgc .Settings .RankHaus ==1.0{_cbde =_fgc .classifyRankHouseOne (_bff ,_gcf ,_bd ,_fdbf ,_ede ,_fc );}else {_cbde =_fgc .classifyRankHouseNonOne (_bff ,_gcf ,_bd ,_fdbf ,_ede ,_fgd ,_fc );};if _cbde !=nil {return _gc .Wrap (_cbde ,_ace ,"");};return nil ;
};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _b .Component ;Method Method ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;
Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_ad *Classer )verifyMethod (_ece Method )error {if _ece !=RankHaus &&_ece !=Correlation {return _gc .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};const JbAddedPixels =6;const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func _gad (_bga *_b .Bitmap ,_cea ,_da ,_ffg ,_fad int ,_cd *_b .Bitmap )(_bbg _g .Point ,_dgf error ){const _adc ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _bga ==nil {return _bbg ,_gc .Error (_adc ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _cd ==nil {return _bbg ,_gc .Error (_adc ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_dfba ,_efd :=_cd .Width ,_cd .Height ;_efe ,_dad :=_cea -_ffg -JbAddedPixels ,_da -_fad -JbAddedPixels ;_af .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cea ,_da ,_dfba ,_efd ,_efe ,_dad );
_aac ,_dgf :=_b .Rect (_efe ,_dad ,_dfba ,_efd );if _dgf !=nil {return _bbg ,_gc .Wrap (_dgf ,_adc ,"");};_beg ,_ ,_dgf :=_bga .ClipRectangle (_aac );if _dgf !=nil {_af .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_aac );
return _bbg ,_gc .Wrap (_dgf ,_adc ,"");};_ebb :=_b .New (_beg .Width ,_beg .Height );_gdc :=_a .MaxInt32 ;var _db ,_aff ,_bgag ,_dge ,_daf int ;for _db =-1;_db <=1;_db ++{for _aff =-1;_aff <=1;_aff ++{if _ ,_dgf =_b .Copy (_ebb ,_beg );_dgf !=nil {return _bbg ,_gc .Wrap (_dgf ,_adc ,"");
};if _dgf =_ebb .RasterOperation (_aff ,_db ,_dfba ,_efd ,_b .PixSrcXorDst ,_cd ,0,0);_dgf !=nil {return _bbg ,_gc .Wrap (_dgf ,_adc ,"");};_bgag =_ebb .CountPixels ();if _bgag < _gdc {_dge =_aff ;_daf =_db ;_gdc =_bgag ;};};};_bbg .X =_dge ;_bbg .Y =_daf ;
return _bbg ,nil ;};const (RankHaus Method =iota ;Correlation ;);