//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_gf "github.com/unidoc/unipdf/v3/common";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_g "math";
);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _b .Component ;Method Method ;};func (_ege *Classer )getULCorners (_fb *_b .Bitmap ,_ece *_b .Boxes )error {const _dca ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _fb ==nil {return _cd .Error (_dca ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ece ==nil {return _cd .Error (_dca ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ege .PtaUL ==nil {_ege .PtaUL =&_b .Points {};
};_bg :=len (*_ece );var (_bb ,_eca ,_bdd ,_db int ;_cb ,_ca ,_ce ,_eeg float32 ;_aca error ;_ega *_c .Rectangle ;_baf *_b .Bitmap ;_dd _c .Point ;);for _bdb :=0;_bdb < _bg ;_bdb ++{_bb =_ege .BaseIndex +_bdb ;if _cb ,_ca ,_aca =_ege .CentroidPoints .GetGeometry (_bb );
_aca !=nil {return _cd .Wrap (_aca ,_dca ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _eca ,_aca =_ege .ClassIDs .Get (_bb );_aca !=nil {return _cd .Wrap (_aca ,_dca ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _ce ,_eeg ,_aca =_ege .CentroidPointsTemplates .GetGeometry (_eca );_aca !=nil {return _cd .Wrap (_aca ,_dca ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bde :=_ce -_cb ;
_cef :=_eeg -_ca ;if _bde >=0{_bdd =int (_bde +0.5);}else {_bdd =int (_bde -0.5);};if _cef >=0{_db =int (_cef +0.5);}else {_db =int (_cef -0.5);};if _ega ,_aca =_ece .Get (_bdb );_aca !=nil {return _cd .Wrap (_aca ,_dca ,"");};_agb ,_afc :=_ega .Min .X ,_ega .Min .Y ;
_baf ,_aca =_ege .UndilatedTemplates .GetBitmap (_eca );if _aca !=nil {return _cd .Wrap (_aca ,_dca ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dd ,_aca =_be (_fb ,_agb ,_afc ,_bdd ,_db ,_baf );if _aca !=nil {return _cd .Wrap (_aca ,_dca ,"");};_ege .PtaUL .AddPoint (float32 (_agb -_bdd +_dd .X ),float32 (_afc -_db +_dd .Y ));};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func Init (settings Settings )(*Classer ,error ){const _a ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ae :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_fg .IntsMap {},TemplateAreas :&_fg .IntSlice {},ComponentPageNumbers :&_fg .IntSlice {},ClassIDs :&_fg .IntSlice {},ComponentsNumber :&_fg .IntSlice {},CentroidPoints :&_b .Points {},CentroidPointsTemplates :&_b .Points {},UndilatedTemplates :&_b .Bitmaps {},DilatedTemplates :&_b .Bitmaps {},ClassInstances :&_b .BitmapsArray {},FgTemplates :&_fg .NumSlice {}};
if _e :=_ae .Settings .Validate ();_e !=nil {return nil ,_cd .Wrap (_e ,_a ,"");};return _ae ,nil ;};func _fcgd (_gaf *Classer ,_fdcb *_b .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fdcb .Width ,Height :_fdcb .Height ,Classer :_gaf };
};func (_daa *Classer )classifyRankHaus (_cgg *_b .Boxes ,_edag *_b .Bitmaps ,_fgd int )error {const _df ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cgg ==nil {return _cd .Error (_df ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _edag ==nil {return _cd .Error (_df ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bebe :=len (_edag .Values );if _bebe ==0{return _cd .Error (_df ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_fca :=_edag .CountPixels ();_fdc :=_daa .Settings .SizeHaus ;_adf :=_b .SelCreateBrick (_fdc ,_fdc ,_fdc /2,_fdc /2,_b .SelHit );_ffc :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_bebe )};_fef :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_bebe )};var (_fcb ,_fba ,_aef *_b .Bitmap ;
_gce error ;);for _cff :=0;_cff < _bebe ;_cff ++{_fcb ,_gce =_edag .GetBitmap (_cff );if _gce !=nil {return _cd .Wrap (_gce ,_df ,"");};_fba ,_gce =_fcb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gce !=nil {return _cd .Wrap (_gce ,_df ,"");
};_aef ,_gce =_b .Dilate (nil ,_fba ,_adf );if _gce !=nil {return _cd .Wrap (_gce ,_df ,"");};_ffc .Values [_bebe ]=_fba ;_fef .Values [_bebe ]=_aef ;};_bfc ,_gce :=_b .Centroids (_ffc .Values );if _gce !=nil {return _cd .Wrap (_gce ,_df ,"");};if _gce =_bfc .Add (_daa .CentroidPoints );
_gce !=nil {_gf .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _daa .Settings .RankHaus ==1.0{_gce =_daa .classifyRankHouseOne (_cgg ,_edag ,_ffc ,_fef ,_bfc ,_fgd );}else {_gce =_daa .classifyRankHouseNonOne (_cgg ,_edag ,_ffc ,_fef ,_bfc ,_fca ,_fgd );
};if _gce !=nil {return _cd .Wrap (_gce ,_df ,"");};return nil ;};const JbAddedPixels =6;func (_afb *Classer )classifyCorrelation (_dae *_b .Boxes ,_deg *_b .Bitmaps ,_ead int )error {const _acab ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _dae ==nil {return _cd .Error (_acab ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _deg ==nil {return _cd .Error (_acab ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_fab :=len (_deg .Values );if _fab ==0{_gf .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_eb ,_cbe *_b .Bitmap ;_cfc error ;);_eea :=&_b .Bitmaps {Values :make ([]*_b .Bitmap ,_fab )};for _cfg ,_dg :=range _deg .Values {_cbe ,_cfc =_dg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"");
};_eea .Values [_cfg ]=_cbe ;};_cae :=_afb .FgTemplates ;_gec :=_b .MakePixelSumTab8 ();_gecb :=_b .MakePixelCentroidTab8 ();_beb :=make ([]int ,_fab );_gb :=make ([][]int ,_fab );_daef :=_b .Points (make ([]_b .Point ,_fab ));_caf :=&_daef ;var (_cdb ,_ada int ;
_eaf ,_dgd ,_cge int ;_cdg ,_dde int ;_dcb byte ;);for _gba ,_daf :=range _eea .Values {_gb [_gba ]=make ([]int ,_daf .Height );_cdb =0;_ada =0;_dgd =(_daf .Height -1)*_daf .RowStride ;_eaf =0;for _dde =_daf .Height -1;_dde >=0;_dde ,_dgd =_dde -1,_dgd -_daf .RowStride {_gb [_gba ][_dde ]=_eaf ;
_cge =0;for _cdg =0;_cdg < _daf .RowStride ;_cdg ++{_dcb =_daf .Data [_dgd +_cdg ];_cge +=_gec [_dcb ];_cdb +=_gecb [_dcb ]+_cdg *8*_gec [_dcb ];};_eaf +=_cge ;_ada +=_cge *_dde ;};_beb [_gba ]=_eaf ;if _eaf > 0{(*_caf )[_gba ]=_b .Point {X :float32 (_cdb )/float32 (_eaf ),Y :float32 (_ada )/float32 (_eaf )};
}else {(*_caf )[_gba ]=_b .Point {X :float32 (_daf .Width )/float32 (2),Y :float32 (_daf .Height )/float32 (2)};};};if _cfc =_afb .CentroidPoints .Add (_caf );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_gea ,_cgc ,_dgb int ;_gd float64 ;_bbb ,_abd ,_baga ,_bdea float32 ;_bed ,_dgc _b .Point ;_eda bool ;_dbd *similarTemplatesFinder ;_geb int ;_abb *_b .Bitmap ;_eeb *_c .Rectangle ;_cafd *_b .Bitmaps ;);for _geb ,_cbe =range _eea .Values {_cgc =_beb [_geb ];
if _bbb ,_abd ,_cfc =_caf .GetGeometry (_geb );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_eda =false ;_agag :=len (_afb .UndilatedTemplates .Values );_dbd =_fcgd (_afb ,_cbe );for _fad :=_dbd .Next ();_fad > -1;
{if _abb ,_cfc =_afb .UndilatedTemplates .GetBitmap (_fad );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _dgb ,_cfc =_cae .GetInt (_fad );
_cfc !=nil {_gf .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cfc );};if _baga ,_bdea ,_cfc =_afb .CentroidPointsTemplates .GetGeometry (_fad );
_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _afb .Settings .WeightFactor > 0.0{if _gea ,_cfc =_afb .TemplateAreas .Get (_fad );_cfc !=nil {_gf .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_cfc );
};_gd =_afb .Settings .Thresh +(1.0-_afb .Settings .Thresh )*_afb .Settings .WeightFactor *float64 (_dgb )/float64 (_gea );}else {_gd =_afb .Settings .Thresh ;};_fabe ,_bf :=_b .CorrelationScoreThresholded (_cbe ,_abb ,_cgc ,_dgb ,_bed .X -_dgc .X ,_bed .Y -_dgc .Y ,MaxDiffWidth ,MaxDiffHeight ,_gec ,_gb [_geb ],float32 (_gd ));
if _bf !=nil {return _cd .Wrap (_bf ,_acab ,"");};if _ecd {var (_dcd ,_cfb float64 ;_ebd ,_caa int ;);_dcd ,_bf =_b .CorrelationScore (_cbe ,_abb ,_cgc ,_dgb ,_bbb -_baga ,_abd -_bdea ,MaxDiffWidth ,MaxDiffHeight ,_gec );if _bf !=nil {return _cd .Wrap (_bf ,_acab ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_cfb ,_bf =_b .CorrelationScoreSimple (_cbe ,_abb ,_cgc ,_dgb ,_bbb -_baga ,_abd -_bdea ,MaxDiffWidth ,MaxDiffHeight ,_gec );if _bf !=nil {return _cd .Wrap (_bf ,_acab ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ebd =int (_g .Sqrt (_dcd *float64 (_cgc )*float64 (_dgb )));_caa =int (_g .Sqrt (_cfb *float64 (_cgc )*float64 (_dgb )));if (_dcd >=_gd )!=(_cfb >=_gd ){return _cd .Errorf (_acab ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ebd ,_dcd ,_dcd >=_gd ,_caa ,_cfb ,_cfb >=_gd ,_dcd -_cfb );
};if _dcd >=_gd !=_fabe {return _cd .Errorf (_acab ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dcd ,_dcd *float64 (_cgc )*float64 (_dgb ),_ebd ,_gd ,float32 (_gd )*float32 (_cgc )*float32 (_dgb ),_fabe );
};};if _fabe {_eda =true ;if _bf =_afb .ClassIDs .Add (_fad );_bf !=nil {return _cd .Wrap (_bf ,_acab ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bf =_afb .ComponentPageNumbers .Add (_ead );_bf !=nil {return _cd .Wrap (_bf ,_acab ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _afb .Settings .KeepClassInstances {if _eb ,_bf =_deg .GetBitmap (_geb );_bf !=nil {return _cd .Wrap (_bf ,_acab ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cafd ,_bf =_afb .ClassInstances .GetBitmaps (_fad );
_bf !=nil {return _cd .Wrap (_bf ,_acab ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cafd .AddBitmap (_eb );if _eeb ,_bf =_dae .Get (_geb );_bf !=nil {return _cd .Wrap (_bf ,_acab ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_cafd .AddBox (_eeb );};break ;};};if !_eda {if _cfc =_afb .ClassIDs .Add (_agag );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cfc =_afb .ComponentPageNumbers .Add (_ead );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cafd =&_b .Bitmaps {};if _eb ,_cfc =_deg .GetBitmap (_geb );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cafd .AddBitmap (_eb );_eege ,_bff :=_eb .Width ,_eb .Height ;_bac :=uint64 (_bff )*uint64 (_eege );_afb .TemplatesSize .Add (_bac ,_agag );
if _eeb ,_cfc =_dae .Get (_geb );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cafd .AddBox (_eeb );_afb .ClassInstances .AddBitmaps (_cafd );_afb .CentroidPointsTemplates .AddPoint (_bbb ,_abd );_afb .FgTemplates .AddInt (_cgc );
_afb .UndilatedTemplates .AddBitmap (_eb );_gea =(_cbe .Width -2*JbAddedPixels )*(_cbe .Height -2*JbAddedPixels );if _cfc =_afb .TemplateAreas .Add (_gea );_cfc !=nil {return _cd .Wrap (_cfc ,_acab ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_afb .NumberOfClasses =len (_afb .UndilatedTemplates .Values );
return nil ;};var _ecd bool ;type Method int ;func _be (_ea *_b .Bitmap ,_cac ,_faa ,_ccc ,_cea int ,_aff *_b .Bitmap )(_fbc _c .Point ,_ddc error ){const _dba ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ea ==nil {return _fbc ,_cd .Error (_dba ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _aff ==nil {return _fbc ,_cd .Error (_dba ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_dcf ,_ab :=_aff .Width ,_aff .Height ;_bag ,_fgg :=_cac -_ccc -JbAddedPixels ,_faa -_cea -JbAddedPixels ;_gf .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cac ,_faa ,_dcf ,_ab ,_bag ,_fgg );
_edd ,_ddc :=_b .Rect (_bag ,_fgg ,_dcf ,_ab );if _ddc !=nil {return _fbc ,_cd .Wrap (_ddc ,_dba ,"");};_gc ,_ ,_ddc :=_ea .ClipRectangle (_edd );if _ddc !=nil {_gf .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_edd );
return _fbc ,_cd .Wrap (_ddc ,_dba ,"");};_ecb :=_b .New (_gc .Width ,_gc .Height );_fcg :=_g .MaxInt32 ;var _fd ,_da ,_ddf ,_aga ,_de int ;for _fd =-1;_fd <=1;_fd ++{for _da =-1;_da <=1;_da ++{if _ ,_ddc =_b .Copy (_ecb ,_gc );_ddc !=nil {return _fbc ,_cd .Wrap (_ddc ,_dba ,"");
};if _ddc =_ecb .RasterOperation (_da ,_fd ,_dcf ,_ab ,_b .PixSrcXorDst ,_aff ,0,0);_ddc !=nil {return _fbc ,_cd .Wrap (_ddc ,_dba ,"");};_ddf =_ecb .CountPixels ();if _ddf < _fcg {_aga =_da ;_de =_fd ;_fcg =_ddf ;};};};_fbc .X =_aga ;_fbc .Y =_de ;return _fbc ,nil ;
};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_aed Settings )Validate ()error {const _dafc ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _aed .Thresh < 0.4||_aed .Thresh > 0.98{return _cd .Error (_dafc ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _aed .WeightFactor < 0.0||_aed .WeightFactor > 1.0{return _cd .Error (_dafc ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _aed .RankHaus < 0.5||_aed .RankHaus > 1.0{return _cd .Error (_dafc ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _aed .SizeHaus < 1||_aed .SizeHaus > 10{return _cd .Error (_dafc ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _aed .Components {case _b .ComponentConn ,_b .ComponentCharacters ,_b .ComponentWords :default:return _cd .Error (_dafc ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_fg .IntSlice ;TemplateAreas *_fg .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_b .BitmapsArray ;UndilatedTemplates *_b .Bitmaps ;
DilatedTemplates *_b .Bitmaps ;TemplatesSize _fg .IntsMap ;FgTemplates *_fg .NumSlice ;CentroidPoints *_b .Points ;CentroidPointsTemplates *_b .Points ;ClassIDs *_fg .IntSlice ;ComponentPageNumbers *_fg .IntSlice ;PtaUL *_b .Points ;PtaLL *_b .Points ;
};func (_afcf *similarTemplatesFinder )Next ()int {var (_eac ,_fbb ,_fgge ,_cgb int ;_fgda bool ;_caff *_b .Bitmap ;_egdcc error ;);for {if _afcf .Index >=25{return -1;};_fbb =_afcf .Width +TwoByTwoWalk [2*_afcf .Index ];_eac =_afcf .Height +TwoByTwoWalk [2*_afcf .Index +1];
if _eac < 1||_fbb < 1{_afcf .Index ++;continue ;};if len (_afcf .CurrentNumbers )==0{_afcf .CurrentNumbers ,_fgda =_afcf .Classer .TemplatesSize .GetSlice (uint64 (_fbb )*uint64 (_eac ));if !_fgda {_afcf .Index ++;continue ;};_afcf .N =0;};_fgge =len (_afcf .CurrentNumbers );
for ;_afcf .N < _fgge ;_afcf .N ++{_cgb =_afcf .CurrentNumbers [_afcf .N ];_caff ,_egdcc =_afcf .Classer .DilatedTemplates .GetBitmap (_cgb );if _egdcc !=nil {_gf .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _caff .Width -2*JbAddedPixels ==_fbb &&_caff .Height -2*JbAddedPixels ==_eac {return _cgb ;};};_afcf .Index ++;_afcf .CurrentNumbers =nil ;};};func (_acf *Classer )verifyMethod (_fc Method )error {if _fc !=RankHaus &&_fc !=Correlation {return _cd .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_fa *Classer )AddPage (inputPage *_b .Bitmap ,pageNumber int ,method Method )(_d error ){const _eg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_fa .Widths [pageNumber ]=inputPage .Width ;_fa .Heights [pageNumber ]=inputPage .Height ;
if _d =_fa .verifyMethod (method );_d !=nil {return _cd .Wrap (_d ,_eg ,"");};_cc ,_dc ,_d :=inputPage .GetComponents (_fa .Settings .Components ,_fa .Settings .MaxCompWidth ,_fa .Settings .MaxCompHeight );if _d !=nil {return _cd .Wrap (_d ,_eg ,"");};
_gf .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cc );if _d =_fa .addPageComponents (inputPage ,_dc ,_cc ,pageNumber ,method );_d !=nil {return _cd .Wrap (_d ,_eg ,"");};return nil ;};func (_cf *Classer )ComputeLLCorners ()(_ba error ){const _ac ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _cf .PtaUL ==nil {return _cd .Error (_ac ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_fe :=len (*_cf .PtaUL );_cf .PtaLL =&_b .Points {};var (_ee ,_egd float32 ;_ccd ,_ge int ;
_ed *_b .Bitmap ;);for _ec :=0;_ec < _fe ;_ec ++{_ee ,_egd ,_ba =_cf .PtaUL .GetGeometry (_ec );if _ba !=nil {_gf .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ba );
return _cd .Wrap (_ba ,_ac ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ccd ,_ba =_cf .ClassIDs .Get (_ec );if _ba !=nil {_gf .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ba );
return _cd .Wrap (_ba ,_ac ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ed ,_ba =_cf .UndilatedTemplates .GetBitmap (_ccd );if _ba !=nil {_gf .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ba );
return _cd .Wrap (_ba ,_ac ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ge =_ed .Height ;_cf .PtaLL .AddPoint (_ee ,_egd +float32 (_ge ));};return nil ;};func (_abf *Classer )classifyRankHouseOne (_gfg *_b .Boxes ,_eafc ,_abdg ,_egdc *_b .Bitmaps ,_dbg *_b .Points ,_dce int )(_dfg error ){const _bc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_cgeb ,_gbe ,_cde ,_ebdd float32 ;_geg int ;_gfb ,_ga ,_add ,_cgce ,_aa *_b .Bitmap ;_bfb ,_cfbc bool ;);for _acb :=0;_acb < len (_eafc .Values );_acb ++{_ga =_abdg .Values [_acb ];_add =_egdc .Values [_acb ];_cgeb ,_gbe ,_dfg =_dbg .GetGeometry (_acb );
if _dfg !=nil {return _cd .Wrapf (_dfg ,_bc ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bdf :=len (_abf .UndilatedTemplates .Values );_bfb =false ;_cbee :=_fcgd (_abf ,_ga );for _geg =_cbee .Next ();_geg > -1;
{_cgce ,_dfg =_abf .UndilatedTemplates .GetBitmap (_geg );if _dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"\u0062\u006d\u0033");};_aa ,_dfg =_abf .DilatedTemplates .GetBitmap (_geg );if _dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"\u0062\u006d\u0034");};_cde ,_ebdd ,_dfg =_abf .CentroidPointsTemplates .GetGeometry (_geg );
if _dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cfbc ,_dfg =_b .HausTest (_ga ,_add ,_cgce ,_aa ,_cgeb -_cde ,_gbe -_ebdd ,MaxDiffWidth ,MaxDiffHeight );
if _dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"");};if _cfbc {_bfb =true ;if _dfg =_abf .ClassIDs .Add (_geg );_dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"");};if _dfg =_abf .ComponentPageNumbers .Add (_dce );_dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"");};
if _abf .Settings .KeepClassInstances {_fgc ,_gee :=_abf .ClassInstances .GetBitmaps (_geg );if _gee !=nil {return _cd .Wrap (_gee ,_bc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gfb ,_gee =_eafc .GetBitmap (_acb );if _gee !=nil {return _cd .Wrap (_gee ,_bc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_fgc .AddBitmap (_gfb );_dbf ,_gee :=_gfg .Get (_acb );if _gee !=nil {return _cd .Wrap (_gee ,_bc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fgc .AddBox (_dbf );};break ;};};if !_bfb {if _dfg =_abf .ClassIDs .Add (_bdf );_dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"");
};if _dfg =_abf .ComponentPageNumbers .Add (_dce );_dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"");};_dea :=&_b .Bitmaps {};_gfb ,_dfg =_eafc .GetBitmap (_acb );if _dfg !=nil {return _cd .Wrap (_dfg ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dea .Values =append (_dea .Values ,_gfb );
_gdg ,_cafdf :=_gfb .Width ,_gfb .Height ;_abf .TemplatesSize .Add (uint64 (_cafdf )*uint64 (_gdg ),_bdf );_bad ,_cba :=_gfg .Get (_acb );if _cba !=nil {return _cd .Wrap (_cba ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dea .AddBox (_bad );_abf .ClassInstances .AddBitmaps (_dea );
_abf .CentroidPointsTemplates .AddPoint (_cgeb ,_gbe );_abf .UndilatedTemplates .AddBitmap (_ga );_abf .DilatedTemplates .AddBitmap (_add );};};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func DefaultSettings ()Settings {_dbfe :=&Settings {};_dbfe .SetDefault ();return *_dbfe };func (_af *Classer )addPageComponents (_ff *_b .Bitmap ,_ad *_b .Boxes ,_bd *_b .Bitmaps ,_ace int ,_ag Method )error {const _afd ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ff ==nil {return _cd .Error (_afd ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _ad ==nil ||_bd ==nil ||len (*_ad )==0{_gf .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ff );
return nil ;};var _cg error ;switch _ag {case RankHaus :_cg =_af .classifyRankHaus (_ad ,_bd ,_ace );case Correlation :_cg =_af .classifyCorrelation (_ad ,_bd ,_ace );default:_gf .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ag );
return _cd .Error (_afd ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _cg !=nil {return _cd .Wrap (_cg ,_afd ,"");};if _cg =_af .getULCorners (_ff ,_ad );_cg !=nil {return _cd .Wrap (_cg ,_afd ,"");
};_egc :=len (*_ad );_af .BaseIndex +=_egc ;if _cg =_af .ComponentsNumber .Add (_egc );_cg !=nil {return _cd .Wrap (_cg ,_afd ,"");};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;
N int ;};func (_fga *Classer )classifyRankHouseNonOne (_gfa *_b .Boxes ,_cfcg ,_ebg ,_fcc *_b .Bitmaps ,_eddd *_b .Points ,_addb *_fg .NumSlice ,_aaf int )(_bdg error ){const _caac ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_deaa ,_gcc ,_afcc ,_egcb float32 ;_bagad ,_fea ,_ggg int ;_adc ,_eae ,_ccb ,_dbe ,_cbea *_b .Bitmap ;_ffca ,_abdgd bool ;);_fcf :=_b .MakePixelSumTab8 ();for _baa :=0;_baa < len (_cfcg .Values );_baa ++{if _eae ,_bdg =_ebg .GetBitmap (_baa );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _bagad ,_bdg =_addb .GetInt (_baa );_bdg !=nil {_gf .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_baa ,_bdg );
};if _ccb ,_bdg =_fcc .GetBitmap (_baa );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _deaa ,_gcc ,_bdg =_eddd .GetGeometry (_baa );_bdg !=nil {return _cd .Wrapf (_bdg ,_caac ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_bgg :=len (_fga .UndilatedTemplates .Values );_ffca =false ;_fbce :=_fcgd (_fga ,_eae );for _ggg =_fbce .Next ();_ggg > -1;{if _dbe ,_bdg =_fga .UndilatedTemplates .GetBitmap (_ggg );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _fea ,_bdg =_fga .FgTemplates .GetInt (_ggg );_bdg !=nil {_gf .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ggg ,_bdg );
};if _cbea ,_bdg =_fga .DilatedTemplates .GetBitmap (_ggg );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _afcc ,_egcb ,_bdg =_fga .CentroidPointsTemplates .GetGeometry (_ggg );
_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_abdgd ,_bdg =_b .RankHausTest (_eae ,_ccb ,_dbe ,_cbea ,_deaa -_afcc ,_gcc -_egcb ,MaxDiffWidth ,MaxDiffHeight ,_bagad ,_fea ,float32 (_fga .Settings .RankHaus ),_fcf );
if _bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"");};if _abdgd {_ffca =true ;if _bdg =_fga .ClassIDs .Add (_ggg );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"");};if _bdg =_fga .ComponentPageNumbers .Add (_aaf );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"");
};if _fga .Settings .KeepClassInstances {_abbc ,_adfb :=_fga .ClassInstances .GetBitmaps (_ggg );if _adfb !=nil {return _cd .Wrap (_adfb ,_caac ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _adc ,_adfb =_cfcg .GetBitmap (_baa );_adfb !=nil {return _cd .Wrap (_adfb ,_caac ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_abbc .Values =append (_abbc .Values ,_adc );_bae ,_adfb :=_gfa .Get (_baa );if _adfb !=nil {return _cd .Wrap (_adfb ,_caac ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_abbc .Boxes =append (_abbc .Boxes ,_bae );};break ;};};if !_ffca {if _bdg =_fga .ClassIDs .Add (_bgg );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bdg =_fga .ComponentPageNumbers .Add (_aaf );_bdg !=nil {return _cd .Wrap (_bdg ,_caac ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_aeb :=&_b .Bitmaps {};_adc =_cfcg .Values [_baa ];_aeb .AddBitmap (_adc );_gbc ,_fec :=_adc .Width ,_adc .Height ;_fga .TemplatesSize .Add (uint64 (_gbc )*uint64 (_fec ),_bgg );_dcea ,_cag :=_gfa .Get (_baa );if _cag !=nil {return _cd .Wrap (_cag ,_caac ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_aeb .AddBox (_dcea );_fga .ClassInstances .AddBitmaps (_aeb );_fga .CentroidPointsTemplates .AddPoint (_deaa ,_gcc );_fga .UndilatedTemplates .AddBitmap (_eae );_fga .DilatedTemplates .AddBitmap (_ccb );_fga .FgTemplates .AddInt (_bagad );};};_fga .NumberOfClasses =len (_fga .UndilatedTemplates .Values );
return nil ;};func (_ccf *Settings )SetDefault (){if _ccf .MaxCompWidth ==0{switch _ccf .Components {case _b .ComponentConn :_ccf .MaxCompWidth =MaxConnCompWidth ;case _b .ComponentCharacters :_ccf .MaxCompWidth =MaxCharCompWidth ;case _b .ComponentWords :_ccf .MaxCompWidth =MaxWordCompWidth ;
};};if _ccf .MaxCompHeight ==0{_ccf .MaxCompHeight =MaxCompHeight ;};if _ccf .Thresh ==0.0{_ccf .Thresh =0.9;};if _ccf .WeightFactor ==0.0{_ccf .WeightFactor =0.75;};if _ccf .RankHaus ==0.0{_ccf .RankHaus =0.97;};if _ccf .SizeHaus ==0{_ccf .SizeHaus =2;
};};const (RankHaus Method =iota ;Correlation ;);