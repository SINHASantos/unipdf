//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_f "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "image";_gg "math";
);func (_bga *Classer )classifyRankHaus (_beg *_ff .Boxes ,_gc *_ff .Bitmaps ,_aae int )error {const _cea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _beg ==nil {return _f .Error (_cea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _gc ==nil {return _f .Error (_cea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_cdc :=len (_gc .Values );if _cdc ==0{return _f .Error (_cea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_edg :=_gc .CountPixels ();_baed :=_bga .Settings .SizeHaus ;_dgg :=_ff .SelCreateBrick (_baed ,_baed ,_baed /2,_baed /2,_ff .SelHit );_ecb :=&_ff .Bitmaps {Values :make ([]*_ff .Bitmap ,_cdc )};_cfe :=&_ff .Bitmaps {Values :make ([]*_ff .Bitmap ,_cdc )};
var (_cdg ,_edf ,_bd *_ff .Bitmap ;_bbed error ;);for _cbd :=0;_cbd < _cdc ;_cbd ++{_cdg ,_bbed =_gc .GetBitmap (_cbd );if _bbed !=nil {return _f .Wrap (_bbed ,_cea ,"");};_edf ,_bbed =_cdg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bbed !=nil {return _f .Wrap (_bbed ,_cea ,"");};_bd ,_bbed =_ff .Dilate (nil ,_edf ,_dgg );if _bbed !=nil {return _f .Wrap (_bbed ,_cea ,"");};_ecb .Values [_cdc ]=_edf ;_cfe .Values [_cdc ]=_bd ;};_gef ,_bbed :=_ff .Centroids (_ecb .Values );if _bbed !=nil {return _f .Wrap (_bbed ,_cea ,"");
};if _bbed =_gef .Add (_bga .CentroidPoints );_bbed !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _bga .Settings .RankHaus ==1.0{_bbed =_bga .classifyRankHouseOne (_beg ,_gc ,_ecb ,_cfe ,_gef ,_aae );
}else {_bbed =_bga .classifyRankHouseNonOne (_beg ,_gc ,_ecb ,_cfe ,_gef ,_edg ,_aae );};if _bbed !=nil {return _f .Wrap (_bbed ,_cea ,"");};return nil ;};func (_ec *Classer )getULCorners (_eb *_ff .Bitmap ,_bf *_ff .Boxes )error {const _ebb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _eb ==nil {return _f .Error (_ebb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _bf ==nil {return _f .Error (_ebb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ec .PtaUL ==nil {_ec .PtaUL =&_ff .Points {};
};_aag :=len (*_bf );var (_ag ,_aaf ,_ad ,_ebc int ;_gbd ,_ce ,_aga ,_cf float32 ;_ee error ;_fc *_g .Rectangle ;_agg *_ff .Bitmap ;_cgf _g .Point ;);for _aec :=0;_aec < _aag ;_aec ++{_ag =_ec .BaseIndex +_aec ;if _gbd ,_ce ,_ee =_ec .CentroidPoints .GetGeometry (_ag );
_ee !=nil {return _f .Wrap (_ee ,_ebb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _aaf ,_ee =_ec .ClassIDs .Get (_ag );_ee !=nil {return _f .Wrap (_ee ,_ebb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _aga ,_cf ,_ee =_ec .CentroidPointsTemplates .GetGeometry (_aaf );_ee !=nil {return _f .Wrap (_ee ,_ebb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cb :=_aga -_gbd ;
_fce :=_cf -_ce ;if _cb >=0{_ad =int (_cb +0.5);}else {_ad =int (_cb -0.5);};if _fce >=0{_ebc =int (_fce +0.5);}else {_ebc =int (_fce -0.5);};if _fc ,_ee =_bf .Get (_aec );_ee !=nil {return _f .Wrap (_ee ,_ebb ,"");};_dc ,_eg :=_fc .Min .X ,_fc .Min .Y ;
_agg ,_ee =_ec .UndilatedTemplates .GetBitmap (_aaf );if _ee !=nil {return _f .Wrap (_ee ,_ebb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_cgf ,_ee =_afa (_eb ,_dc ,_eg ,_ad ,_ebc ,_agg );if _ee !=nil {return _f .Wrap (_ee ,_ebb ,"");};_ec .PtaUL .AddPoint (float32 (_dc -_ad +_cgf .X ),float32 (_eg -_ebc +_cgf .Y ));};return nil ;};const (RankHaus Method =iota ;Correlation ;);func (_affe Settings )Validate ()error {const _fee ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _affe .Thresh < 0.4||_affe .Thresh > 0.98{return _f .Error (_fee ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _affe .WeightFactor < 0.0||_affe .WeightFactor > 1.0{return _f .Error (_fee ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _affe .RankHaus < 0.5||_affe .RankHaus > 1.0{return _f .Error (_fee ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _affe .SizeHaus < 1||_affe .SizeHaus > 10{return _f .Error (_fee ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _affe .Components {case _ff .ComponentConn ,_ff .ComponentCharacters ,_ff .ComponentWords :default:return _f .Error (_fee ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_ae *Classer )ComputeLLCorners ()(_gf error ){const _ba ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ae .PtaUL ==nil {return _f .Error (_ba ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_af :=len (*_ae .PtaUL );_ae .PtaLL =&_ff .Points {};var (_aea ,_afd float32 ;_aa ,_gfb int ;_e *_ff .Bitmap ;);for _dfd :=0;_dfd < _af ;_dfd ++{_aea ,_afd ,_gf =_ae .PtaUL .GetGeometry (_dfd );if _gf !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gf );
return _f .Wrap (_gf ,_ba ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_aa ,_gf =_ae .ClassIDs .Get (_dfd );if _gf !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_gf );
return _f .Wrap (_gf ,_ba ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_e ,_gf =_ae .UndilatedTemplates .GetBitmap (_aa );if _gf !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gf );
return _f .Wrap (_gf ,_ba ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_gfb =_e .Height ;_ae .PtaLL .AddPoint (_aea ,_afd +float32 (_gfb ));};return nil ;};type Settings struct{MaxCompWidth int ;
MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ff .Component ;Method Method ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);
const JbAddedPixels =6;func (_fb *Classer )addPageComponents (_ac *_ff .Bitmap ,_dbe *_ff .Boxes ,_bb *_ff .Bitmaps ,_gfe int ,_cd Method )error {const _cg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ac ==nil {return _f .Error (_cg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dbe ==nil ||_bb ==nil ||len (*_dbe )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ac );
return nil ;};var _ggd error ;switch _cd {case RankHaus :_ggd =_fb .classifyRankHaus (_dbe ,_bb ,_gfe );case Correlation :_ggd =_fb .classifyCorrelation (_dbe ,_bb ,_gfe );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cd );
return _f .Error (_cg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ggd !=nil {return _f .Wrap (_ggd ,_cg ,"");};if _ggd =_fb .getULCorners (_ac ,_dbe );_ggd !=nil {return _f .Wrap (_ggd ,_cg ,"");
};_gdf :=len (*_dbe );_fb .BaseIndex +=_gdf ;if _ggd =_fb .ComponentsNumber .Add (_gdf );_ggd !=nil {return _f .Wrap (_ggd ,_cg ,"");};return nil ;};func (_dggc *Classer )classifyRankHouseNonOne (_adf *_ff .Boxes ,_ffcf ,_agc ,_afc *_ff .Bitmaps ,_eff *_ff .Points ,_fcg *_a .NumSlice ,_dgf int )(_bgad error ){const _bfgb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ggf ,_gaa ,_dcb ,_cfa float32 ;_dfbd ,_ddad ,_dfdg int ;_fgg ,_dge ,_dfdec ,_acce ,_acde *_ff .Bitmap ;_bbg ,_ageb bool ;);_eaf :=_ff .MakePixelSumTab8 ();for _ffa :=0;_ffa < len (_ffcf .Values );_ffa ++{if _dge ,_bgad =_agc .GetBitmap (_ffa );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _dfbd ,_bgad =_fcg .GetInt (_ffa );_bgad !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ffa ,_bgad );
};if _dfdec ,_bgad =_afc .GetBitmap (_ffa );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ggf ,_gaa ,_bgad =_eff .GetGeometry (_ffa );_bgad !=nil {return _f .Wrapf (_bgad ,_bfgb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_gfeb :=len (_dggc .UndilatedTemplates .Values );_bbg =false ;_bbd :=_adff (_dggc ,_dge );for _dfdg =_bbd .Next ();_dfdg > -1;{if _acce ,_bgad =_dggc .UndilatedTemplates .GetBitmap (_dfdg );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ddad ,_bgad =_dggc .FgTemplates .GetInt (_dfdg );_bgad !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dfdg ,_bgad );
};if _acde ,_bgad =_dggc .DilatedTemplates .GetBitmap (_dfdg );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dcb ,_cfa ,_bgad =_dggc .CentroidPointsTemplates .GetGeometry (_dfdg );
_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_ageb ,_bgad =_ff .RankHausTest (_dge ,_dfdec ,_acce ,_acde ,_ggf -_dcb ,_gaa -_cfa ,MaxDiffWidth ,MaxDiffHeight ,_dfbd ,_ddad ,float32 (_dggc .Settings .RankHaus ),_eaf );
if _bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"");};if _ageb {_bbg =true ;if _bgad =_dggc .ClassIDs .Add (_dfdg );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"");};if _bgad =_dggc .ComponentPageNumbers .Add (_dgf );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"");
};if _dggc .Settings .KeepClassInstances {_cfbe ,_gga :=_dggc .ClassInstances .GetBitmaps (_dfdg );if _gga !=nil {return _f .Wrap (_gga ,_bfgb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fgg ,_gga =_ffcf .GetBitmap (_ffa );_gga !=nil {return _f .Wrap (_gga ,_bfgb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_cfbe .Values =append (_cfbe .Values ,_fgg );_bdf ,_gga :=_adf .Get (_ffa );if _gga !=nil {return _f .Wrap (_gga ,_bfgb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_cfbe .Boxes =append (_cfbe .Boxes ,_bdf );};break ;};};if !_bbg {if _bgad =_dggc .ClassIDs .Add (_gfeb );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bgad =_dggc .ComponentPageNumbers .Add (_dgf );_bgad !=nil {return _f .Wrap (_bgad ,_bfgb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_acf :=&_ff .Bitmaps {};_fgg =_ffcf .Values [_ffa ];_acf .AddBitmap (_fgg );_fef ,_gfg :=_fgg .Width ,_fgg .Height ;_dggc .TemplatesSize .Add (uint64 (_fef )*uint64 (_gfg ),_gfeb );_gba ,_fdd :=_adf .Get (_ffa );if _fdd !=nil {return _f .Wrap (_fdd ,_bfgb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_acf .AddBox (_gba );_dggc .ClassInstances .AddBitmaps (_acf );_dggc .CentroidPointsTemplates .AddPoint (_ggf ,_gaa );_dggc .UndilatedTemplates .AddBitmap (_dge );_dggc .DilatedTemplates .AddBitmap (_dfdec );_dggc .FgTemplates .AddInt (_dfbd );};};_dggc .NumberOfClasses =len (_dggc .UndilatedTemplates .Values );
return nil ;};func (_gd *Classer )AddPage (inputPage *_ff .Bitmap ,pageNumber int ,method Method )(_dfe error ){const _c ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gd .Widths [pageNumber ]=inputPage .Width ;_gd .Heights [pageNumber ]=inputPage .Height ;
if _dfe =_gd .verifyMethod (method );_dfe !=nil {return _f .Wrap (_dfe ,_c ,"");};_da ,_db ,_dfe :=inputPage .GetComponents (_gd .Settings .Components ,_gd .Settings .MaxCompWidth ,_gd .Settings .MaxCompHeight );if _dfe !=nil {return _f .Wrap (_dfe ,_c ,"");
};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_da );if _dfe =_gd .addPageComponents (inputPage ,_db ,_da ,pageNumber ,method );_dfe !=nil {return _f .Wrap (_dfe ,_c ,"");};return nil ;};func (_dfbdg *similarTemplatesFinder )Next ()int {var (_dbf ,_aab ,_cba ,_eeca int ;
_fbf bool ;_gbg *_ff .Bitmap ;_ecbe error ;);for {if _dfbdg .Index >=25{return -1;};_aab =_dfbdg .Width +TwoByTwoWalk [2*_dfbdg .Index ];_dbf =_dfbdg .Height +TwoByTwoWalk [2*_dfbdg .Index +1];if _dbf < 1||_aab < 1{_dfbdg .Index ++;continue ;};if len (_dfbdg .CurrentNumbers )==0{_dfbdg .CurrentNumbers ,_fbf =_dfbdg .Classer .TemplatesSize .GetSlice (uint64 (_aab )*uint64 (_dbf ));
if !_fbf {_dfbdg .Index ++;continue ;};_dfbdg .N =0;};_cba =len (_dfbdg .CurrentNumbers );for ;_dfbdg .N < _cba ;_dfbdg .N ++{_eeca =_dfbdg .CurrentNumbers [_dfbdg .N ];_gbg ,_ecbe =_dfbdg .Classer .DilatedTemplates .GetBitmap (_eeca );if _ecbe !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gbg .Width -2*JbAddedPixels ==_aab &&_gbg .Height -2*JbAddedPixels ==_dbf {return _eeca ;};};_dfbdg .Index ++;_dfbdg .CurrentNumbers =nil ;};};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};type Method int ;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_a .IntSlice ;TemplateAreas *_a .IntSlice ;Widths map[int ]int ;
Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ff .BitmapsArray ;UndilatedTemplates *_ff .Bitmaps ;DilatedTemplates *_ff .Bitmaps ;TemplatesSize _a .IntsMap ;FgTemplates *_a .NumSlice ;CentroidPoints *_ff .Points ;CentroidPointsTemplates *_ff .Points ;
ClassIDs *_a .IntSlice ;ComponentPageNumbers *_a .IntSlice ;PtaUL *_ff .Points ;PtaLL *_ff .Points ;};func DefaultSettings ()Settings {_edc :=&Settings {};_edc .SetDefault ();return *_edc };const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_add *Classer )classifyCorrelation (_gag *_ff .Boxes ,_afb *_ff .Bitmaps ,_ded int )error {const _bc ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _gag ==nil {return _f .Error (_bc ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _afb ==nil {return _f .Error (_bc ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gfba :=len (_afb .Values );if _gfba ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_gdd ,_adeg *_ff .Bitmap ;_afde error ;);_bca :=&_ff .Bitmaps {Values :make ([]*_ff .Bitmap ,_gfba )};for _eda ,_bg :=range _afb .Values {_adeg ,_afde =_bg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _afde !=nil {return _f .Wrap (_afde ,_bc ,"");};_bca .Values [_eda ]=_adeg ;};_ge :=_add .FgTemplates ;_bad :=_ff .MakePixelSumTab8 ();_gdde :=_ff .MakePixelCentroidTab8 ();_bbe :=make ([]int ,_gfba );_baa :=make ([][]int ,_gfba );_fgb :=_ff .Points (make ([]_ff .Point ,_gfba ));
_bfb :=&_fgb ;var (_bcb ,_fac int ;_bce ,_cbc ,_gda int ;_ffbb ,_acd int ;_gfc byte ;);for _fd ,_bba :=range _bca .Values {_baa [_fd ]=make ([]int ,_bba .Height );_bcb =0;_fac =0;_cbc =(_bba .Height -1)*_bba .RowStride ;_bce =0;for _acd =_bba .Height -1;
_acd >=0;_acd ,_cbc =_acd -1,_cbc -_bba .RowStride {_baa [_fd ][_acd ]=_bce ;_gda =0;for _ffbb =0;_ffbb < _bba .RowStride ;_ffbb ++{_gfc =_bba .Data [_cbc +_ffbb ];_gda +=_bad [_gfc ];_bcb +=_gdde [_gfc ]+_ffbb *8*_bad [_gfc ];};_bce +=_gda ;_fac +=_gda *_acd ;
};_bbe [_fd ]=_bce ;if _bce > 0{(*_bfb )[_fd ]=_ff .Point {X :float32 (_bcb )/float32 (_bce ),Y :float32 (_fac )/float32 (_bce )};}else {(*_bfb )[_fd ]=_ff .Point {X :float32 (_bba .Width )/float32 (2),Y :float32 (_bba .Height )/float32 (2)};};};if _afde =_add .CentroidPoints .Add (_bfb );
_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ebe ,_be ,_efg int ;_aad float64 ;_ffc ,_bef ,_def ,_dfbf float32 ;_gae ,_cdb _ff .Point ;_ddc bool ;_ecf *similarTemplatesFinder ;
_adc int ;_acc *_ff .Bitmap ;_adg *_g .Rectangle ;_gddd *_ff .Bitmaps ;);for _adc ,_adeg =range _bca .Values {_be =_bbe [_adc ];if _ffc ,_bef ,_afde =_bfb .GetGeometry (_adc );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ddc =false ;_agb :=len (_add .UndilatedTemplates .Values );_ecf =_adff (_add ,_adeg );for _fdf :=_ecf .Next ();_fdf > -1;{if _acc ,_afde =_add .UndilatedTemplates .GetBitmap (_fdf );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _efg ,_afde =_ge .GetInt (_fdf );_afde !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_afde );};if _def ,_dfbf ,_afde =_add .CentroidPointsTemplates .GetGeometry (_fdf );
_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _add .Settings .WeightFactor > 0.0{if _ebe ,_afde =_add .TemplateAreas .Get (_fdf );_afde !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_afde );
};_aad =_add .Settings .Thresh +(1.0-_add .Settings .Thresh )*_add .Settings .WeightFactor *float64 (_efg )/float64 (_ebe );}else {_aad =_add .Settings .Thresh ;};_cge ,_bae :=_ff .CorrelationScoreThresholded (_adeg ,_acc ,_be ,_efg ,_gae .X -_cdb .X ,_gae .Y -_cdb .Y ,MaxDiffWidth ,MaxDiffHeight ,_bad ,_baa [_adc ],float32 (_aad ));
if _bae !=nil {return _f .Wrap (_bae ,_bc ,"");};if _fga {var (_aaa ,_eec float64 ;_aff ,_dbc int ;);_aaa ,_bae =_ff .CorrelationScore (_adeg ,_acc ,_be ,_efg ,_ffc -_def ,_bef -_dfbf ,MaxDiffWidth ,MaxDiffHeight ,_bad );if _bae !=nil {return _f .Wrap (_bae ,_bc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_eec ,_bae =_ff .CorrelationScoreSimple (_adeg ,_acc ,_be ,_efg ,_ffc -_def ,_bef -_dfbf ,MaxDiffWidth ,MaxDiffHeight ,_bad );if _bae !=nil {return _f .Wrap (_bae ,_bc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_aff =int (_gg .Sqrt (_aaa *float64 (_be )*float64 (_efg )));_dbc =int (_gg .Sqrt (_eec *float64 (_be )*float64 (_efg )));if (_aaa >=_aad )!=(_eec >=_aad ){return _f .Errorf (_bc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_aff ,_aaa ,_aaa >=_aad ,_dbc ,_eec ,_eec >=_aad ,_aaa -_eec );
};if _aaa >=_aad !=_cge {return _f .Errorf (_bc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_aaa ,_aaa *float64 (_be )*float64 (_efg ),_aff ,_aad ,float32 (_aad )*float32 (_be )*float32 (_efg ),_cge );
};};if _cge {_ddc =true ;if _bae =_add .ClassIDs .Add (_fdf );_bae !=nil {return _f .Wrap (_bae ,_bc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bae =_add .ComponentPageNumbers .Add (_ded );_bae !=nil {return _f .Wrap (_bae ,_bc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _add .Settings .KeepClassInstances {if _gdd ,_bae =_afb .GetBitmap (_adc );_bae !=nil {return _f .Wrap (_bae ,_bc ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _gddd ,_bae =_add .ClassInstances .GetBitmaps (_fdf );
_bae !=nil {return _f .Wrap (_bae ,_bc ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_gddd .AddBitmap (_gdd );if _adg ,_bae =_gag .Get (_adc );_bae !=nil {return _f .Wrap (_bae ,_bc ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_gddd .AddBox (_adg );};break ;};};if !_ddc {if _afde =_add .ClassIDs .Add (_agb );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _afde =_add .ComponentPageNumbers .Add (_ded );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gddd =&_ff .Bitmaps {};if _gdd ,_afde =_afb .GetBitmap (_adc );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gddd .AddBitmap (_gdd );_dfde ,_adgb :=_gdd .Width ,_gdd .Height ;_gab :=uint64 (_adgb )*uint64 (_dfde );
_add .TemplatesSize .Add (_gab ,_agb );if _adg ,_afde =_gag .Get (_adc );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gddd .AddBox (_adg );_add .ClassInstances .AddBitmaps (_gddd );_add .CentroidPointsTemplates .AddPoint (_ffc ,_bef );
_add .FgTemplates .AddInt (_be );_add .UndilatedTemplates .AddBitmap (_gdd );_ebe =(_adeg .Width -2*JbAddedPixels )*(_adeg .Height -2*JbAddedPixels );if _afde =_add .TemplateAreas .Add (_ebe );_afde !=nil {return _f .Wrap (_afde ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};};};_add .NumberOfClasses =len (_add .UndilatedTemplates .Values );return nil ;};func (_cc *Settings )SetDefault (){if _cc .MaxCompWidth ==0{switch _cc .Components {case _ff .ComponentConn :_cc .MaxCompWidth =MaxConnCompWidth ;case _ff .ComponentCharacters :_cc .MaxCompWidth =MaxCharCompWidth ;
case _ff .ComponentWords :_cc .MaxCompWidth =MaxWordCompWidth ;};};if _cc .MaxCompHeight ==0{_cc .MaxCompHeight =MaxCompHeight ;};if _cc .Thresh ==0.0{_cc .Thresh =0.9;};if _cc .WeightFactor ==0.0{_cc .WeightFactor =0.75;};if _cc .RankHaus ==0.0{_cc .RankHaus =0.97;
};if _cc .SizeHaus ==0{_cc .SizeHaus =2;};};func Init (settings Settings )(*Classer ,error ){const _fg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_df :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_a .IntsMap {},TemplateAreas :&_a .IntSlice {},ComponentPageNumbers :&_a .IntSlice {},ClassIDs :&_a .IntSlice {},ComponentsNumber :&_a .IntSlice {},CentroidPoints :&_ff .Points {},CentroidPointsTemplates :&_ff .Points {},UndilatedTemplates :&_ff .Bitmaps {},DilatedTemplates :&_ff .Bitmaps {},ClassInstances :&_ff .BitmapsArray {},FgTemplates :&_a .NumSlice {}};
if _gb :=_df .Settings .Validate ();_gb !=nil {return nil ,_f .Wrap (_gb ,_fg ,"");};return _df ,nil ;};func (_age *Classer )classifyRankHouseOne (_bgd *_ff .Boxes ,_cga ,_aecf ,_ceaa *_ff .Bitmaps ,_bda *_ff .Points ,_cfdg int )(_dcd error ){const _fe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_badg ,_bdg ,_fcb ,_cdce float32 ;_acef int ;_gdfa ,_edfe ,_ebg ,_egcg ,_ca *_ff .Bitmap ;_dbd ,_cfef bool ;);for _badc :=0;_badc < len (_cga .Values );_badc ++{_edfe =_aecf .Values [_badc ];_ebg =_ceaa .Values [_badc ];_badg ,_bdg ,_dcd =_bda .GetGeometry (_badc );
if _dcd !=nil {return _f .Wrapf (_dcd ,_fe ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_cgb :=len (_age .UndilatedTemplates .Values );_dbd =false ;_fdc :=_adff (_age ,_edfe );for _acef =_fdc .Next ();_acef > -1;
{_egcg ,_dcd =_age .UndilatedTemplates .GetBitmap (_acef );if _dcd !=nil {return _f .Wrap (_dcd ,_fe ,"\u0062\u006d\u0033");};_ca ,_dcd =_age .DilatedTemplates .GetBitmap (_acef );if _dcd !=nil {return _f .Wrap (_dcd ,_fe ,"\u0062\u006d\u0034");};_fcb ,_cdce ,_dcd =_age .CentroidPointsTemplates .GetGeometry (_acef );
if _dcd !=nil {return _f .Wrap (_dcd ,_fe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cfef ,_dcd =_ff .HausTest (_edfe ,_ebg ,_egcg ,_ca ,_badg -_fcb ,_bdg -_cdce ,MaxDiffWidth ,MaxDiffHeight );
if _dcd !=nil {return _f .Wrap (_dcd ,_fe ,"");};if _cfef {_dbd =true ;if _dcd =_age .ClassIDs .Add (_acef );_dcd !=nil {return _f .Wrap (_dcd ,_fe ,"");};if _dcd =_age .ComponentPageNumbers .Add (_cfdg );_dcd !=nil {return _f .Wrap (_dcd ,_fe ,"");};if _age .Settings .KeepClassInstances {_cec ,_cdcf :=_age .ClassInstances .GetBitmaps (_acef );
if _cdcf !=nil {return _f .Wrap (_cdcf ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gdfa ,_cdcf =_cga .GetBitmap (_badc );if _cdcf !=nil {return _f .Wrap (_cdcf ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cec .AddBitmap (_gdfa );
_bdgg ,_cdcf :=_bgd .Get (_badc );if _cdcf !=nil {return _f .Wrap (_cdcf ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cec .AddBox (_bdgg );};break ;};};if !_dbd {if _dcd =_age .ClassIDs .Add (_cgb );_dcd !=nil {return _f .Wrap (_dcd ,_fe ,"");
};if _dcd =_age .ComponentPageNumbers .Add (_cfdg );_dcd !=nil {return _f .Wrap (_dcd ,_fe ,"");};_daea :=&_ff .Bitmaps {};_gdfa ,_dcd =_cga .GetBitmap (_badc );if _dcd !=nil {return _f .Wrap (_dcd ,_fe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_daea .Values =append (_daea .Values ,_gdfa );
_acb ,_dbg :=_gdfa .Width ,_gdfa .Height ;_age .TemplatesSize .Add (uint64 (_dbg )*uint64 (_acb ),_cgb );_bff ,_ebd :=_bgd .Get (_badc );if _ebd !=nil {return _f .Wrap (_ebd ,_fe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_daea .AddBox (_bff );_age .ClassInstances .AddBitmaps (_daea );
_age .CentroidPointsTemplates .AddPoint (_badg ,_bdg );_age .UndilatedTemplates .AddBitmap (_edfe );_age .DilatedTemplates .AddBitmap (_ebg );};};return nil ;};func _afa (_ed *_ff .Bitmap ,_dae ,_ea ,_ffe ,_ffb int ,_dg *_ff .Bitmap )(_dd _g .Point ,_bac error ){const _ef ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ed ==nil {return _dd ,_f .Error (_ef ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _dg ==nil {return _dd ,_f .Error (_ef ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gbb ,_dgb :=_dg .Width ,_dg .Height ;_fa ,_ade :=_dae -_ffe -JbAddedPixels ,_ea -_ffb -JbAddedPixels ;_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_dae ,_ea ,_gbb ,_dgb ,_fa ,_ade );
_ecd ,_bac :=_ff .Rect (_fa ,_ade ,_gbb ,_dgb );if _bac !=nil {return _dd ,_f .Wrap (_bac ,_ef ,"");};_egc ,_ ,_bac :=_ed .ClipRectangle (_ecd );if _bac !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ecd );
return _dd ,_f .Wrap (_bac ,_ef ,"");};_dde :=_ff .New (_egc .Width ,_egc .Height );_cfb :=_gg .MaxInt32 ;var _de ,_cef ,_ga ,_dfb ,_dda int ;for _de =-1;_de <=1;_de ++{for _cef =-1;_cef <=1;_cef ++{if _ ,_bac =_ff .Copy (_dde ,_egc );_bac !=nil {return _dd ,_f .Wrap (_bac ,_ef ,"");
};if _bac =_dde .RasterOperation (_cef ,_de ,_gbb ,_dgb ,_ff .PixSrcXorDst ,_dg ,0,0);_bac !=nil {return _dd ,_f .Wrap (_bac ,_ef ,"");};_ga =_dde .CountPixels ();if _ga < _cfb {_dfb =_cef ;_dda =_de ;_cfb =_ga ;};};};_dd .X =_dfb ;_dd .Y =_dda ;return _dd ,nil ;
};func _adff (_gfebd *Classer ,_fddg *_ff .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fddg .Width ,Height :_fddg .Height ,Classer :_gfebd };};func (_ace *Classer )verifyMethod (_cfd Method )error {if _cfd !=RankHaus &&_cfd !=Correlation {return _f .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};var _fga bool ;