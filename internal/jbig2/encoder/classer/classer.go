//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_e "github.com/unidoc/unipdf/v4/common";_a "github.com/unidoc/unipdf/v4/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v4/internal/jbig2/bitmap";_bg "github.com/unidoc/unipdf/v4/internal/jbig2/errors";_f "image";_b "math";);
func DefaultSettings ()Settings {_ged :=&Settings {};_ged .SetDefault ();return *_ged };func (_ae *Classer )getULCorners (_fdg *_d .Bitmap ,_af *_d .Boxes )error {const _ce ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fdg ==nil {return _bg .Error (_ce ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _af ==nil {return _bg .Error (_ce ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ae .PtaUL ==nil {_ae .PtaUL =&_d .Points {};};_gg :=len (*_af );var (_aee ,_eeg ,_bfb ,_ab int ;_ef ,_fb ,_aa ,_cge float32 ;_efg error ;_bcb *_f .Rectangle ;
_bcba *_d .Bitmap ;_db _f .Point ;);for _bff :=0;_bff < _gg ;_bff ++{_aee =_ae .BaseIndex +_bff ;if _ef ,_fb ,_efg =_ae .CentroidPoints .GetGeometry (_aee );_efg !=nil {return _bg .Wrap (_efg ,_ce ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _eeg ,_efg =_ae .ClassIDs .Get (_aee );_efg !=nil {return _bg .Wrap (_efg ,_ce ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _aa ,_cge ,_efg =_ae .CentroidPointsTemplates .GetGeometry (_eeg );_efg !=nil {return _bg .Wrap (_efg ,_ce ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_dc :=_aa -_ef ;_be :=_cge -_fb ;if _dc >=0{_bfb =int (_dc +0.5);}else {_bfb =int (_dc -0.5);};if _be >=0{_ab =int (_be +0.5);}else {_ab =int (_be -0.5);};if _bcb ,_efg =_af .Get (_bff );_efg !=nil {return _bg .Wrap (_efg ,_ce ,"");};_cgb ,_gff :=_bcb .Min .X ,_bcb .Min .Y ;
_bcba ,_efg =_ae .UndilatedTemplates .GetBitmap (_eeg );if _efg !=nil {return _bg .Wrap (_efg ,_ce ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_db ,_efg =_dg (_fdg ,_cgb ,_gff ,_bfb ,_ab ,_bcba );if _efg !=nil {return _bg .Wrap (_efg ,_ce ,"");};_ae .PtaUL .AddPoint (float32 (_cgb -_bfb +_db .X ),float32 (_gff -_ab +_db .Y ));};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func _dg (_dca *_d .Bitmap ,_eb ,_fbf ,_eac ,_fg int ,_afe *_d .Bitmap )(_baf _f .Point ,_ebg error ){const _aff ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _dca ==nil {return _baf ,_bg .Error (_aff ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");
};if _afe ==nil {return _baf ,_bg .Error (_aff ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_ac ,_beg :=_afe .Width ,_afe .Height ;_aed ,_ga :=_eb -_eac -JbAddedPixels ,_fbf -_fg -JbAddedPixels ;
_e .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_eb ,_fbf ,_ac ,_beg ,_aed ,_ga );
_ffc ,_ebg :=_d .Rect (_aed ,_ga ,_ac ,_beg );if _ebg !=nil {return _baf ,_bg .Wrap (_ebg ,_aff ,"");};_bgc ,_ ,_ebg :=_dca .ClipRectangle (_ffc );if _ebg !=nil {_e .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ffc );
return _baf ,_bg .Wrap (_ebg ,_aff ,"");};_eae :=_d .New (_bgc .Width ,_bgc .Height );_efc :=_b .MaxInt32 ;var _fcd ,_aag ,_gd ,_gb ,_ddf int ;for _fcd =-1;_fcd <=1;_fcd ++{for _aag =-1;_aag <=1;_aag ++{if _ ,_ebg =_d .Copy (_eae ,_bgc );_ebg !=nil {return _baf ,_bg .Wrap (_ebg ,_aff ,"");
};if _ebg =_eae .RasterOperation (_aag ,_fcd ,_ac ,_beg ,_d .PixSrcXorDst ,_afe ,0,0);_ebg !=nil {return _baf ,_bg .Wrap (_ebg ,_aff ,"");};_gd =_eae .CountPixels ();if _gd < _efc {_gb =_aag ;_ddf =_fcd ;_efc =_gd ;};};};_baf .X =_gb ;_baf .Y =_ddf ;return _baf ,nil ;
};const (RankHaus Method =iota ;Correlation ;);func (_bed *Classer )classifyRankHouseOne (_gbc *_d .Boxes ,_fcf ,_abcf ,_bce *_d .Bitmaps ,_gdc *_d .Points ,_ecc int )(_eccb error ){const _bgcb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_aeb ,_ccc ,_gfb ,_fddg float32 ;_ddfg int ;_cggd ,_dfg ,_cbfb ,_cfdc ,_gbb *_d .Bitmap ;_agef ,_dbb bool ;);for _dgcb :=0;_dgcb < len (_fcf .Values );_dgcb ++{_dfg =_abcf .Values [_dgcb ];_cbfb =_bce .Values [_dgcb ];_aeb ,_ccc ,_eccb =_gdc .GetGeometry (_dgcb );
if _eccb !=nil {return _bg .Wrapf (_eccb ,_bgcb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bea :=len (_bed .UndilatedTemplates .Values );_agef =false ;_fec :=_aea (_bed ,_dfg );for _ddfg =_fec .Next ();_ddfg > -1;
{_cfdc ,_eccb =_bed .UndilatedTemplates .GetBitmap (_ddfg );if _eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"\u0062\u006d\u0033");};_gbb ,_eccb =_bed .DilatedTemplates .GetBitmap (_ddfg );if _eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"\u0062\u006d\u0034");
};_gfb ,_fddg ,_eccb =_bed .CentroidPointsTemplates .GetGeometry (_ddfg );if _eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dbb ,_eccb =_d .HausTest (_dfg ,_cbfb ,_cfdc ,_gbb ,_aeb -_gfb ,_ccc -_fddg ,MaxDiffWidth ,MaxDiffHeight );
if _eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"");};if _dbb {_agef =true ;if _eccb =_bed .ClassIDs .Add (_ddfg );_eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"");};if _eccb =_bed .ComponentPageNumbers .Add (_ecc );_eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"");
};if _bed .Settings .KeepClassInstances {_bad ,_eab :=_bed .ClassInstances .GetBitmaps (_ddfg );if _eab !=nil {return _bg .Wrap (_eab ,_bgcb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cggd ,_eab =_fcf .GetBitmap (_dgcb );if _eab !=nil {return _bg .Wrap (_eab ,_bgcb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_bad .AddBitmap (_cggd );_beb ,_eab :=_gbc .Get (_dgcb );if _eab !=nil {return _bg .Wrap (_eab ,_bgcb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bad .AddBox (_beb );};break ;};};if !_agef {if _eccb =_bed .ClassIDs .Add (_bea );_eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"");
};if _eccb =_bed .ComponentPageNumbers .Add (_ecc );_eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"");};_ced :=&_d .Bitmaps {};_cggd ,_eccb =_fcf .GetBitmap (_dgcb );if _eccb !=nil {return _bg .Wrap (_eccb ,_bgcb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ced .Values =append (_ced .Values ,_cggd );_deb ,_ecg :=_cggd .Width ,_cggd .Height ;_bed .TemplatesSize .Add (uint64 (_ecg )*uint64 (_deb ),_bea );_bdb ,_bag :=_gbc .Get (_dgcb );if _bag !=nil {return _bg .Wrap (_bag ,_bgcb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ced .AddBox (_bdb );_bed .ClassInstances .AddBitmaps (_ced );_bed .CentroidPointsTemplates .AddPoint (_aeb ,_ccc );_bed .UndilatedTemplates .AddBitmap (_dfg );_bed .DilatedTemplates .AddBitmap (_cbfb );};};return nil ;};func (_ca *Classer )AddPage (inputPage *_d .Bitmap ,pageNumber int ,method Method )(_fe error ){const _gc ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_ca .Widths [pageNumber ]=inputPage .Width ;_ca .Heights [pageNumber ]=inputPage .Height ;if _fe =_ca .verifyMethod (method );_fe !=nil {return _bg .Wrap (_fe ,_gc ,"");};_eg ,_fc ,_fe :=inputPage .GetComponents (_ca .Settings .Components ,_ca .Settings .MaxCompWidth ,_ca .Settings .MaxCompHeight );
if _fe !=nil {return _bg .Wrap (_fe ,_gc ,"");};_e .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eg );if _fe =_ca .addPageComponents (inputPage ,_fc ,_eg ,pageNumber ,method );_fe !=nil {return _bg .Wrap (_fe ,_gc ,"");
};return nil ;};func (_cgab *Classer )classifyRankHaus (_gfc *_d .Boxes ,_dee *_d .Bitmaps ,_fdb int )error {const _fgd ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _gfc ==nil {return _bg .Error (_fgd ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _dee ==nil {return _bg .Error (_fgd ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_cbc :=len (_dee .Values );if _cbc ==0{return _bg .Error (_fgd ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_eacb :=_dee .CountPixels ();_cbe :=_cgab .Settings .SizeHaus ;_eaa :=_d .SelCreateBrick (_cbe ,_cbe ,_cbe /2,_cbe /2,_d .SelHit );_aedb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cbc )};_bfa :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cbc )};var (_afb ,_bef ,_dfe *_d .Bitmap ;
_aeg error ;);for _bbg :=0;_bbg < _cbc ;_bbg ++{_afb ,_aeg =_dee .GetBitmap (_bbg );if _aeg !=nil {return _bg .Wrap (_aeg ,_fgd ,"");};_bef ,_aeg =_afb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _aeg !=nil {return _bg .Wrap (_aeg ,_fgd ,"");
};_dfe ,_aeg =_d .Dilate (nil ,_bef ,_eaa );if _aeg !=nil {return _bg .Wrap (_aeg ,_fgd ,"");};_aedb .Values [_cbc ]=_bef ;_bfa .Values [_cbc ]=_dfe ;};_afg ,_aeg :=_d .Centroids (_aedb .Values );if _aeg !=nil {return _bg .Wrap (_aeg ,_fgd ,"");};if _aeg =_afg .Add (_cgab .CentroidPoints );
_aeg !=nil {_e .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _cgab .Settings .RankHaus ==1.0{_aeg =_cgab .classifyRankHouseOne (_gfc ,_dee ,_aedb ,_bfa ,_afg ,_fdb );}else {_aeg =_cgab .classifyRankHouseNonOne (_gfc ,_dee ,_aedb ,_bfa ,_afg ,_eacb ,_fdb );
};if _aeg !=nil {return _bg .Wrap (_aeg ,_fgd ,"");};return nil ;};const JbAddedPixels =6;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_a .IntSlice ;TemplateAreas *_a .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;
ClassInstances *_d .BitmapsArray ;UndilatedTemplates *_d .Bitmaps ;DilatedTemplates *_d .Bitmaps ;TemplatesSize _a .IntsMap ;FgTemplates *_a .NumSlice ;CentroidPoints *_d .Points ;CentroidPointsTemplates *_d .Points ;ClassIDs *_a .IntSlice ;ComponentPageNumbers *_a .IntSlice ;
PtaUL *_d .Points ;PtaLL *_d .Points ;};func (_fcfb *similarTemplatesFinder )Next ()int {var (_cbee ,_fcag ,_cbfa ,_ebbe int ;_badf bool ;_gcc *_d .Bitmap ;_dgb error ;);for {if _fcfb .Index >=25{return -1;};_fcag =_fcfb .Width +TwoByTwoWalk [2*_fcfb .Index ];
_cbee =_fcfb .Height +TwoByTwoWalk [2*_fcfb .Index +1];if _cbee < 1||_fcag < 1{_fcfb .Index ++;continue ;};if len (_fcfb .CurrentNumbers )==0{_fcfb .CurrentNumbers ,_badf =_fcfb .Classer .TemplatesSize .GetSlice (uint64 (_fcag )*uint64 (_cbee ));if !_badf {_fcfb .Index ++;
continue ;};_fcfb .N =0;};_cbfa =len (_fcfb .CurrentNumbers );for ;_fcfb .N < _cbfa ;_fcfb .N ++{_ebbe =_fcfb .CurrentNumbers [_fcfb .N ];_gcc ,_dgb =_fcfb .Classer .DilatedTemplates .GetBitmap (_ebbe );if _dgb !=nil {_e .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gcc .Width -2*JbAddedPixels ==_fcag &&_gcc .Height -2*JbAddedPixels ==_cbee {return _ebbe ;};};_fcfb .Index ++;_fcfb .CurrentNumbers =nil ;};};func (_dad *Settings )SetDefault (){if _dad .MaxCompWidth ==0{switch _dad .Components {case _d .ComponentConn :_dad .MaxCompWidth =MaxConnCompWidth ;
case _d .ComponentCharacters :_dad .MaxCompWidth =MaxCharCompWidth ;case _d .ComponentWords :_dad .MaxCompWidth =MaxWordCompWidth ;};};if _dad .MaxCompHeight ==0{_dad .MaxCompHeight =MaxCompHeight ;};if _dad .Thresh ==0.0{_dad .Thresh =0.9;};if _dad .WeightFactor ==0.0{_dad .WeightFactor =0.75;
};if _dad .RankHaus ==0.0{_dad .RankHaus =0.97;};if _dad .SizeHaus ==0{_dad .SizeHaus =2;};};var _fcg bool ;func (_dd *Classer )addPageComponents (_gfe *_d .Bitmap ,_bb *_d .Boxes ,_fed *_d .Bitmaps ,_ff int ,_cg Method )error {const _cc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _gfe ==nil {return _bg .Error (_cc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bb ==nil ||_fed ==nil ||len (*_bb )==0{_e .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_gfe );
return nil ;};var _ad error ;switch _cg {case RankHaus :_ad =_dd .classifyRankHaus (_bb ,_fed ,_ff );case Correlation :_ad =_dd .classifyCorrelation (_bb ,_fed ,_ff );default:_e .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cg );
return _bg .Error (_cc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ad !=nil {return _bg .Wrap (_ad ,_cc ,"");};if _ad =_dd .getULCorners (_gfe ,_bb );_ad !=nil {return _bg .Wrap (_ad ,_cc ,"");
};_bc :=len (*_bb );_dd .BaseIndex +=_bc ;if _ad =_dd .ComponentsNumber .Add (_bc );_ad !=nil {return _bg .Wrap (_ad ,_cc ,"");};return nil ;};type Method int ;func (_bec *Classer )classifyCorrelation (_aad *_d .Boxes ,_ag *_d .Bitmaps ,_afa int )error {const _aca ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _aad ==nil {return _bg .Error (_aca ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ag ==nil {return _bg .Error (_aca ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bbe :=len (_ag .Values );if _bbe ==0{_e .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_caf ,_aeee *_d .Bitmap ;_aga error ;);_cbf :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_bbe )};for _aagc ,_cca :=range _ag .Values {_aeee ,_aga =_cca .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _aga !=nil {return _bg .Wrap (_aga ,_aca ,"");};_cbf .Values [_aagc ]=_aeee ;};_baa :=_bec .FgTemplates ;_fdd :=_d .MakePixelSumTab8 ();_abc :=_d .MakePixelCentroidTab8 ();_ece :=make ([]int ,_bbe );_bca :=make ([][]int ,_bbe );_cd :=_d .Points (make ([]_d .Point ,_bbe ));
_dga :=&_cd ;var (_da ,_fgg int ;_cag ,_cgg ,_dcab int ;_dea ,_fff int ;_geg byte ;);for _gdd ,_eaf :=range _cbf .Values {_bca [_gdd ]=make ([]int ,_eaf .Height );_da =0;_fgg =0;_cgg =(_eaf .Height -1)*_eaf .RowStride ;_cag =0;for _fff =_eaf .Height -1;
_fff >=0;_fff ,_cgg =_fff -1,_cgg -_eaf .RowStride {_bca [_gdd ][_fff ]=_cag ;_dcab =0;for _dea =0;_dea < _eaf .RowStride ;_dea ++{_geg =_eaf .Data [_cgg +_dea ];_dcab +=_fdd [_geg ];_da +=_abc [_geg ]+_dea *8*_fdd [_geg ];};_cag +=_dcab ;_fgg +=_dcab *_fff ;
};_ece [_gdd ]=_cag ;if _cag > 0{(*_dga )[_gdd ]=_d .Point {X :float32 (_da )/float32 (_cag ),Y :float32 (_fgg )/float32 (_cag )};}else {(*_dga )[_gdd ]=_d .Point {X :float32 (_eaf .Width )/float32 (2),Y :float32 (_eaf .Height )/float32 (2)};};};if _aga =_bec .CentroidPoints .Add (_dga );
_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_cgc ,_begb ,_ebgf int ;_fcge float64 ;_dgc ,_efcf ,_ggg ,_cdc float32 ;_fa ,_deg _d .Point ;_cga bool ;_agae *similarTemplatesFinder ;
_acaf int ;_age *_d .Bitmap ;_gbf *_f .Rectangle ;_fea *_d .Bitmaps ;);for _acaf ,_aeee =range _cbf .Values {_begb =_ece [_acaf ];if _dgc ,_efcf ,_aga =_dga .GetGeometry (_acaf );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_cga =false ;_cba :=len (_bec .UndilatedTemplates .Values );_agae =_aea (_bec ,_aeee );for _gcd :=_agae .Next ();_gcd > -1;{if _age ,_aga =_bec .UndilatedTemplates .GetBitmap (_gcd );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _ebgf ,_aga =_baa .GetInt (_gcd );_aga !=nil {_e .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aga );};if _ggg ,_cdc ,_aga =_bec .CentroidPointsTemplates .GetGeometry (_gcd );
_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _bec .Settings .WeightFactor > 0.0{if _cgc ,_aga =_bec .TemplateAreas .Get (_gcd );_aga !=nil {_e .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_aga );
};_fcge =_bec .Settings .Thresh +(1.0-_bec .Settings .Thresh )*_bec .Settings .WeightFactor *float64 (_ebgf )/float64 (_cgc );}else {_fcge =_bec .Settings .Thresh ;};_bd ,_dde :=_d .CorrelationScoreThresholded (_aeee ,_age ,_begb ,_ebgf ,_fa .X -_deg .X ,_fa .Y -_deg .Y ,MaxDiffWidth ,MaxDiffHeight ,_fdd ,_bca [_acaf ],float32 (_fcge ));
if _dde !=nil {return _bg .Wrap (_dde ,_aca ,"");};if _fcg {var (_cdg ,_bgg float64 ;_gaf ,_ebb int ;);_cdg ,_dde =_d .CorrelationScore (_aeee ,_age ,_begb ,_ebgf ,_dgc -_ggg ,_efcf -_cdc ,MaxDiffWidth ,MaxDiffHeight ,_fdd );if _dde !=nil {return _bg .Wrap (_dde ,_aca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bgg ,_dde =_d .CorrelationScoreSimple (_aeee ,_age ,_begb ,_ebgf ,_dgc -_ggg ,_efcf -_cdc ,MaxDiffWidth ,MaxDiffHeight ,_fdd );if _dde !=nil {return _bg .Wrap (_dde ,_aca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gaf =int (_b .Sqrt (_cdg *float64 (_begb )*float64 (_ebgf )));_ebb =int (_b .Sqrt (_bgg *float64 (_begb )*float64 (_ebgf )));if (_cdg >=_fcge )!=(_bgg >=_fcge ){return _bg .Errorf (_aca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gaf ,_cdg ,_cdg >=_fcge ,_ebb ,_bgg ,_bgg >=_fcge ,_cdg -_bgg );
};if _cdg >=_fcge !=_bd {return _bg .Errorf (_aca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cdg ,_cdg *float64 (_begb )*float64 (_ebgf ),_gaf ,_fcge ,float32 (_fcge )*float32 (_begb )*float32 (_ebgf ),_bd );
};};if _bd {_cga =true ;if _dde =_bec .ClassIDs .Add (_gcd );_dde !=nil {return _bg .Wrap (_dde ,_aca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _dde =_bec .ComponentPageNumbers .Add (_afa );_dde !=nil {return _bg .Wrap (_dde ,_aca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _bec .Settings .KeepClassInstances {if _caf ,_dde =_ag .GetBitmap (_acaf );_dde !=nil {return _bg .Wrap (_dde ,_aca ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fea ,_dde =_bec .ClassInstances .GetBitmaps (_gcd );
_dde !=nil {return _bg .Wrap (_dde ,_aca ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fea .AddBitmap (_caf );if _gbf ,_dde =_aad .Get (_acaf );_dde !=nil {return _bg .Wrap (_dde ,_aca ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fea .AddBox (_gbf );};break ;};};if !_cga {if _aga =_bec .ClassIDs .Add (_cba );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _aga =_bec .ComponentPageNumbers .Add (_afa );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fea =&_d .Bitmaps {};if _caf ,_aga =_ag .GetBitmap (_acaf );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBitmap (_caf );_bggf ,_ed :=_caf .Width ,_caf .Height ;_afeg :=uint64 (_ed )*uint64 (_bggf );_bec .TemplatesSize .Add (_afeg ,_cba );
if _gbf ,_aga =_aad .Get (_acaf );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBox (_gbf );_bec .ClassInstances .AddBitmaps (_fea );_bec .CentroidPointsTemplates .AddPoint (_dgc ,_efcf );_bec .FgTemplates .AddInt (_begb );
_bec .UndilatedTemplates .AddBitmap (_caf );_cgc =(_aeee .Width -2*JbAddedPixels )*(_aeee .Height -2*JbAddedPixels );if _aga =_bec .TemplateAreas .Add (_cgc );_aga !=nil {return _bg .Wrap (_aga ,_aca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_bec .NumberOfClasses =len (_bec .UndilatedTemplates .Values );
return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _d .Component ;Method Method ;};func _aea (_bbb *Classer ,_gbd *_d .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_gbd .Width ,Height :_gbd .Height ,Classer :_bbb };
};func (_fd *Classer )ComputeLLCorners ()(_de error ){const _ea ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fd .PtaUL ==nil {return _bg .Error (_ea ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_cf :=len (*_fd .PtaUL );_fd .PtaLL =&_d .Points {};var (_cb ,_gcg float32 ;_cfd ,_ba int ;_egd *_d .Bitmap ;);for _ee :=0;_ee < _cf ;_ee ++{_cb ,_gcg ,_de =_fd .PtaUL .GetGeometry (_ee );if _de !=nil {_e .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_ea ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_cfd ,_de =_fd .ClassIDs .Get (_ee );if _de !=nil {_e .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_ea ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_egd ,_de =_fd .UndilatedTemplates .GetBitmap (_cfd );if _de !=nil {_e .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_ea ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ba =_egd .Height ;_fd .PtaLL .AddPoint (_cb ,_gcg +float32 (_ba ));};return nil ;};func (_afae Settings )Validate ()error {const _aec ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _afae .Thresh < 0.4||_afae .Thresh > 0.98{return _bg .Error (_aec ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _afae .WeightFactor < 0.0||_afae .WeightFactor > 1.0{return _bg .Error (_aec ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _afae .RankHaus < 0.5||_afae .RankHaus > 1.0{return _bg .Error (_aec ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _afae .SizeHaus < 1||_afae .SizeHaus > 10{return _bg .Error (_aec ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _afae .Components {case _d .ComponentConn ,_d .ComponentCharacters ,_d .ComponentWords :default:return _bg .Error (_aec ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func Init (settings Settings )(*Classer ,error ){const _gf ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_c :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_a .IntsMap {},TemplateAreas :&_a .IntSlice {},ComponentPageNumbers :&_a .IntSlice {},ClassIDs :&_a .IntSlice {},ComponentsNumber :&_a .IntSlice {},CentroidPoints :&_d .Points {},CentroidPointsTemplates :&_d .Points {},UndilatedTemplates :&_d .Bitmaps {},DilatedTemplates :&_d .Bitmaps {},ClassInstances :&_d .BitmapsArray {},FgTemplates :&_a .NumSlice {}};
if _bf :=_c .Settings .Validate ();_bf !=nil {return nil ,_bg .Wrap (_bf ,_gf ,"");};return _c ,nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_df *Classer )verifyMethod (_ec Method )error {if _ec !=RankHaus &&_ec !=Correlation {return _bg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_bagc *Classer )classifyRankHouseNonOne (_dcg *_d .Boxes ,_aaa ,_eca ,_dgad *_d .Bitmaps ,_edb *_d .Points ,_ccg *_a .NumSlice ,_ffe int )(_ebgfc error ){const _bcbc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bcf ,_gae ,_fca ,_aaf float32 ;_cab ,_geb ,_aafe int ;_bcea ,_gaef ,_becd ,_dded ,_eaba *_d .Bitmap ;_fcde ,_fgf bool ;);_cafa :=_d .MakePixelSumTab8 ();for _debe :=0;_debe < len (_aaa .Values );_debe ++{if _gaef ,_ebgfc =_eca .GetBitmap (_debe );
_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _cab ,_ebgfc =_ccg .GetInt (_debe );_ebgfc !=nil {_e .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_debe ,_ebgfc );
};if _becd ,_ebgfc =_dgad .GetBitmap (_debe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bcf ,_gae ,_ebgfc =_edb .GetGeometry (_debe );_ebgfc !=nil {return _bg .Wrapf (_ebgfc ,_bcbc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_ccf :=len (_bagc .UndilatedTemplates .Values );_fcde =false ;_fad :=_aea (_bagc ,_gaef );for _aafe =_fad .Next ();_aafe > -1;{if _dded ,_ebgfc =_bagc .UndilatedTemplates .GetBitmap (_aafe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _geb ,_ebgfc =_bagc .FgTemplates .GetInt (_aafe );_ebgfc !=nil {_e .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aafe ,_ebgfc );
};if _eaba ,_ebgfc =_bagc .DilatedTemplates .GetBitmap (_aafe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fca ,_aaf ,_ebgfc =_bagc .CentroidPointsTemplates .GetGeometry (_aafe );
_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fgf ,_ebgfc =_d .RankHausTest (_gaef ,_becd ,_dded ,_eaba ,_bcf -_fca ,_gae -_aaf ,MaxDiffWidth ,MaxDiffHeight ,_cab ,_geb ,float32 (_bagc .Settings .RankHaus ),_cafa );
if _ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"");};if _fgf {_fcde =true ;if _ebgfc =_bagc .ClassIDs .Add (_aafe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"");};if _ebgfc =_bagc .ComponentPageNumbers .Add (_ffe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"");
};if _bagc .Settings .KeepClassInstances {_aba ,_fdc :=_bagc .ClassInstances .GetBitmaps (_aafe );if _fdc !=nil {return _bg .Wrap (_fdc ,_bcbc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _bcea ,_fdc =_aaa .GetBitmap (_debe );_fdc !=nil {return _bg .Wrap (_fdc ,_bcbc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_aba .Values =append (_aba .Values ,_bcea );_bede ,_fdc :=_dcg .Get (_debe );if _fdc !=nil {return _bg .Wrap (_fdc ,_bcbc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_aba .Boxes =append (_aba .Boxes ,_bede );};break ;};};if !_fcde {if _ebgfc =_bagc .ClassIDs .Add (_ccf );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ebgfc =_bagc .ComponentPageNumbers .Add (_ffe );_ebgfc !=nil {return _bg .Wrap (_ebgfc ,_bcbc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdg :=&_d .Bitmaps {};_bcea =_aaa .Values [_debe ];_gdg .AddBitmap (_bcea );_eacc ,_feg :=_bcea .Width ,_bcea .Height ;_bagc .TemplatesSize .Add (uint64 (_eacc )*uint64 (_feg ),_ccf );_daa ,_faa :=_dcg .Get (_debe );if _faa !=nil {return _bg .Wrap (_faa ,_bcbc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdg .AddBox (_daa );_bagc .ClassInstances .AddBitmaps (_gdg );_bagc .CentroidPointsTemplates .AddPoint (_bcf ,_gae );_bagc .UndilatedTemplates .AddBitmap (_gaef );_bagc .DilatedTemplates .AddBitmap (_becd );_bagc .FgTemplates .AddInt (_cab );};};_bagc .NumberOfClasses =len (_bagc .UndilatedTemplates .Values );
return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);const (MaxDiffWidth =2;MaxDiffHeight =2;);