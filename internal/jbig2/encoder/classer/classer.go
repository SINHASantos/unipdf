//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_fe "github.com/unidoc/unipdf/v4/common";_fa "github.com/unidoc/unipdf/v4/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v4/internal/jbig2/bitmap";_ed "github.com/unidoc/unipdf/v4/internal/jbig2/errors";_f "image";_e "math";
);const (MaxDiffWidth =2;MaxDiffHeight =2;);func DefaultSettings ()Settings {_dead :=&Settings {};_dead .SetDefault ();return *_dead };var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func (_bc *Classer )getULCorners (_gde *_d .Bitmap ,_ad *_d .Boxes )error {const _bbb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _gde ==nil {return _ed .Error (_bbb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ad ==nil {return _ed .Error (_bbb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bc .PtaUL ==nil {_bc .PtaUL =&_d .Points {};};_ea :=len (*_ad );var (_gdf ,_aag ,_abf ,_dfg int ;_eag ,_aage ,_fca ,_eg float32 ;_cg error ;_dd *_f .Rectangle ;
_da *_d .Bitmap ;_dfc _f .Point ;);for _gc :=0;_gc < _ea ;_gc ++{_gdf =_bc .BaseIndex +_gc ;if _eag ,_aage ,_cg =_bc .CentroidPoints .GetGeometry (_gdf );_cg !=nil {return _ed .Wrap (_cg ,_bbb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _aag ,_cg =_bc .ClassIDs .Get (_gdf );_cg !=nil {return _ed .Wrap (_cg ,_bbb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _fca ,_eg ,_cg =_bc .CentroidPointsTemplates .GetGeometry (_aag );_cg !=nil {return _ed .Wrap (_cg ,_bbb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ba :=_fca -_eag ;_dda :=_eg -_aage ;if _ba >=0{_abf =int (_ba +0.5);}else {_abf =int (_ba -0.5);};if _dda >=0{_dfg =int (_dda +0.5);}else {_dfg =int (_dda -0.5);};if _dd ,_cg =_ad .Get (_gc );_cg !=nil {return _ed .Wrap (_cg ,_bbb ,"");};_bcb ,_feb :=_dd .Min .X ,_dd .Min .Y ;
_da ,_cg =_bc .UndilatedTemplates .GetBitmap (_aag );if _cg !=nil {return _ed .Wrap (_cg ,_bbb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dfc ,_cg =_ee (_gde ,_bcb ,_feb ,_abf ,_dfg ,_da );if _cg !=nil {return _ed .Wrap (_cg ,_bbb ,"");};_bc .PtaUL .AddPoint (float32 (_bcb -_abf +_dfc .X ),float32 (_feb -_dfg +_dfc .Y ));};return nil ;};func (_dbfb *Classer )classifyRankHaus (_ddbd *_d .Boxes ,_fdc *_d .Bitmaps ,_gec int )error {const _ddga ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _ddbd ==nil {return _ed .Error (_ddga ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _fdc ==nil {return _ed .Error (_ddga ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_cag :=len (_fdc .Values );if _cag ==0{return _ed .Error (_ddga ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_ded :=_fdc .CountPixels ();_edfc :=_dbfb .Settings .SizeHaus ;_gdd :=_d .SelCreateBrick (_edfc ,_edfc ,_edfc /2,_edfc /2,_d .SelHit );
_bdb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cag )};_geg :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cag )};var (_abg ,_eee ,_dfdf *_d .Bitmap ;_dcg error ;);for _bcbg :=0;_bcbg < _cag ;_bcbg ++{_abg ,_dcg =_fdc .GetBitmap (_bcbg );if _dcg !=nil {return _ed .Wrap (_dcg ,_ddga ,"");
};_eee ,_dcg =_abg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _dcg !=nil {return _ed .Wrap (_dcg ,_ddga ,"");};_dfdf ,_dcg =_d .Dilate (nil ,_eee ,_gdd );if _dcg !=nil {return _ed .Wrap (_dcg ,_ddga ,"");};_bdb .Values [_cag ]=_eee ;
_geg .Values [_cag ]=_dfdf ;};_ece ,_dcg :=_d .Centroids (_bdb .Values );if _dcg !=nil {return _ed .Wrap (_dcg ,_ddga ,"");};if _dcg =_ece .Add (_dbfb .CentroidPoints );_dcg !=nil {_fe .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _dbfb .Settings .RankHaus ==1.0{_dcg =_dbfb .classifyRankHouseOne (_ddbd ,_fdc ,_bdb ,_geg ,_ece ,_gec );}else {_dcg =_dbfb .classifyRankHouseNonOne (_ddbd ,_fdc ,_bdb ,_geg ,_ece ,_ded ,_gec );};if _dcg !=nil {return _ed .Wrap (_dcg ,_ddga ,"");};
return nil ;};func (_a *Classer )AddPage (inputPage *_d .Bitmap ,pageNumber int ,method Method )(_eb error ){const _de ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_a .Widths [pageNumber ]=inputPage .Width ;_a .Heights [pageNumber ]=inputPage .Height ;
if _eb =_a .verifyMethod (method );_eb !=nil {return _ed .Wrap (_eb ,_de ,"");};_faa ,_ff ,_eb :=inputPage .GetComponents (_a .Settings .Components ,_a .Settings .MaxCompWidth ,_a .Settings .MaxCompHeight );if _eb !=nil {return _ed .Wrap (_eb ,_de ,"");
};_fe .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_faa );if _eb =_a .addPageComponents (inputPage ,_ff ,_faa ,pageNumber ,method );_eb !=nil {return _ed .Wrap (_eb ,_de ,"");};return nil ;};func (_bbd *Classer )classifyRankHouseNonOne (_egc *_d .Boxes ,_bgf ,_bgfd ,_deb *_d .Bitmaps ,_eae *_d .Points ,_ebb *_fa .NumSlice ,_dee int )(_ebe error ){const _edc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_egb ,_efe ,_cbg ,_efg float32 ;_eac ,_ae ,_aed int ;_abd ,_acb ,_gae ,_gdca ,_bbad *_d .Bitmap ;_fcf ,_gdda bool ;);_eaa :=_d .MakePixelSumTab8 ();for _gdef :=0;_gdef < len (_bgf .Values );_gdef ++{if _acb ,_ebe =_bgfd .GetBitmap (_gdef );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _eac ,_ebe =_ebb .GetInt (_gdef );_ebe !=nil {_fe .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gdef ,_ebe );
};if _gae ,_ebe =_deb .GetBitmap (_gdef );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _egb ,_efe ,_ebe =_eae .GetGeometry (_gdef );_ebe !=nil {return _ed .Wrapf (_ebe ,_edc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cbd :=len (_bbd .UndilatedTemplates .Values );_fcf =false ;_aea :=_cdd (_bbd ,_acb );for _aed =_aea .Next ();_aed > -1;{if _gdca ,_ebe =_bbd .UndilatedTemplates .GetBitmap (_aed );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ae ,_ebe =_bbd .FgTemplates .GetInt (_aed );_ebe !=nil {_fe .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aed ,_ebe );
};if _bbad ,_ebe =_bbd .DilatedTemplates .GetBitmap (_aed );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cbg ,_efg ,_ebe =_bbd .CentroidPointsTemplates .GetGeometry (_aed );
_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gdda ,_ebe =_d .RankHausTest (_acb ,_gae ,_gdca ,_bbad ,_egb -_cbg ,_efe -_efg ,MaxDiffWidth ,MaxDiffHeight ,_eac ,_ae ,float32 (_bbd .Settings .RankHaus ),_eaa );
if _ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"");};if _gdda {_fcf =true ;if _ebe =_bbd .ClassIDs .Add (_aed );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"");};if _ebe =_bbd .ComponentPageNumbers .Add (_dee );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"");
};if _bbd .Settings .KeepClassInstances {_acd ,_ebbg :=_bbd .ClassInstances .GetBitmaps (_aed );if _ebbg !=nil {return _ed .Wrap (_ebbg ,_edc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _abd ,_ebbg =_bgf .GetBitmap (_gdef );_ebbg !=nil {return _ed .Wrap (_ebbg ,_edc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_acd .Values =append (_acd .Values ,_abd );_gcg ,_ebbg :=_egc .Get (_gdef );if _ebbg !=nil {return _ed .Wrap (_ebbg ,_edc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_acd .Boxes =append (_acd .Boxes ,_gcg );};break ;};};if !_fcf {if _ebe =_bbd .ClassIDs .Add (_cbd );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ebe =_bbd .ComponentPageNumbers .Add (_dee );_ebe !=nil {return _ed .Wrap (_ebe ,_edc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_efa :=&_d .Bitmaps {};_abd =_bgf .Values [_gdef ];_efa .AddBitmap (_abd );_gba ,_fab :=_abd .Width ,_abd .Height ;_bbd .TemplatesSize .Add (uint64 (_gba )*uint64 (_fab ),_cbd );_gcf ,_fce :=_egc .Get (_gdef );if _fce !=nil {return _ed .Wrap (_fce ,_edc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_efa .AddBox (_gcf );_bbd .ClassInstances .AddBitmaps (_efa );_bbd .CentroidPointsTemplates .AddPoint (_egb ,_efe );_bbd .UndilatedTemplates .AddBitmap (_acb );_bbd .DilatedTemplates .AddBitmap (_gae );_bbd .FgTemplates .AddInt (_eac );};};_bbd .NumberOfClasses =len (_bbd .UndilatedTemplates .Values );
return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _d .Component ;Method Method ;};const JbAddedPixels =6;func _ee (_ffe *_d .Bitmap ,_ef ,_bca ,_ec ,_cf int ,_adc *_d .Bitmap )(_fee _f .Point ,_edf error ){const _feee ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ffe ==nil {return _fee ,_ed .Error (_feee ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _adc ==nil {return _fee ,_ed .Error (_feee ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gdee ,_gea :=_adc .Width ,_adc .Height ;_dg ,_cdec :=_ef -_ec -JbAddedPixels ,_bca -_cf -JbAddedPixels ;_fe .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ef ,_bca ,_gdee ,_gea ,_dg ,_cdec );
_dgf ,_edf :=_d .Rect (_dg ,_cdec ,_gdee ,_gea );if _edf !=nil {return _fee ,_ed .Wrap (_edf ,_feee ,"");};_cb ,_ ,_edf :=_ffe .ClipRectangle (_dgf );if _edf !=nil {_fe .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dgf );
return _fee ,_ed .Wrap (_edf ,_feee ,"");};_dge :=_d .New (_cb .Width ,_cb .Height );_aab :=_e .MaxInt32 ;var _dfce ,_daf ,_dfcf ,_ebd ,_deg int ;for _dfce =-1;_dfce <=1;_dfce ++{for _daf =-1;_daf <=1;_daf ++{if _ ,_edf =_d .Copy (_dge ,_cb );_edf !=nil {return _fee ,_ed .Wrap (_edf ,_feee ,"");
};if _edf =_dge .RasterOperation (_daf ,_dfce ,_gdee ,_gea ,_d .PixSrcXorDst ,_adc ,0,0);_edf !=nil {return _fee ,_ed .Wrap (_edf ,_feee ,"");};_dfcf =_dge .CountPixels ();if _dfcf < _aab {_ebd =_daf ;_deg =_dfce ;_aab =_dfcf ;};};};_fee .X =_ebd ;_fee .Y =_deg ;
return _fee ,nil ;};func (_cgg *Classer )classifyCorrelation (_feed *_d .Boxes ,_faf *_d .Bitmaps ,_bec int )error {const _gfb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _feed ==nil {return _ed .Error (_gfb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _faf ==nil {return _ed .Error (_gfb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_afe :=len (_faf .Values );if _afe ==0{_fe .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_fef ,_ggg *_d .Bitmap ;_ead error ;);_eeb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_afe )};for _ecd ,_eagb :=range _faf .Values {_ggg ,_ead =_eagb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _ead !=nil {return _ed .Wrap (_ead ,_gfb ,"");};_eeb .Values [_ecd ]=_ggg ;};_bef :=_cgg .FgTemplates ;_bcbc :=_d .MakePixelSumTab8 ();_ecb :=_d .MakePixelCentroidTab8 ();_edg :=make ([]int ,_afe );_fg :=make ([][]int ,_afe );_gee :=_d .Points (make ([]_d .Point ,_afe ));
_fff :=&_gee ;var (_gdc ,_efb int ;_fd ,_afa ,_egd int ;_ddf ,_faaf int ;_ce byte ;);for _def ,_ebf :=range _eeb .Values {_fg [_def ]=make ([]int ,_ebf .Height );_gdc =0;_efb =0;_afa =(_ebf .Height -1)*_ebf .RowStride ;_fd =0;for _faaf =_ebf .Height -1;
_faaf >=0;_faaf ,_afa =_faaf -1,_afa -_ebf .RowStride {_fg [_def ][_faaf ]=_fd ;_egd =0;for _ddf =0;_ddf < _ebf .RowStride ;_ddf ++{_ce =_ebf .Data [_afa +_ddf ];_egd +=_bcbc [_ce ];_gdc +=_ecb [_ce ]+_ddf *8*_bcbc [_ce ];};_fd +=_egd ;_efb +=_egd *_faaf ;
};_edg [_def ]=_fd ;if _fd > 0{(*_fff )[_def ]=_d .Point {X :float32 (_gdc )/float32 (_fd ),Y :float32 (_efb )/float32 (_fd )};}else {(*_fff )[_def ]=_d .Point {X :float32 (_ebf .Width )/float32 (2),Y :float32 (_ebf .Height )/float32 (2)};};};if _ead =_cgg .CentroidPoints .Add (_fff );
_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_bd ,_cc ,_cec int ;_cbb float64 ;_ccb ,_ddb ,_dga ,_bf float32 ;_cgb ,_fdd _d .Point ;_ag bool ;_bcad *similarTemplatesFinder ;_bdd int ;
_db *_d .Bitmap ;_cdc *_f .Rectangle ;_dfd *_d .Bitmaps ;);for _bdd ,_ggg =range _eeb .Values {_cc =_edg [_bdd ];if _ccb ,_ddb ,_ead =_fff .GetGeometry (_bdd );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ag =false ;
_ccd :=len (_cgg .UndilatedTemplates .Values );_bcad =_cdd (_cgg ,_ggg );for _bcbe :=_bcad .Next ();_bcbe > -1;{if _db ,_ead =_cgg .UndilatedTemplates .GetBitmap (_bcbe );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _cec ,_ead =_bef .GetInt (_bcbe );_ead !=nil {_fe .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ead );};if _dga ,_bf ,_ead =_cgg .CentroidPointsTemplates .GetGeometry (_bcbe );
_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _cgg .Settings .WeightFactor > 0.0{if _bd ,_ead =_cgg .TemplateAreas .Get (_bcbe );_ead !=nil {_fe .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ead );
};_cbb =_cgg .Settings .Thresh +(1.0-_cgg .Settings .Thresh )*_cgg .Settings .WeightFactor *float64 (_cec )/float64 (_bd );}else {_cbb =_cgg .Settings .Thresh ;};_gda ,_ecdf :=_d .CorrelationScoreThresholded (_ggg ,_db ,_cc ,_cec ,_cgb .X -_fdd .X ,_cgb .Y -_fdd .Y ,MaxDiffWidth ,MaxDiffHeight ,_bcbc ,_fg [_bdd ],float32 (_cbb ));
if _ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"");};if _ddg {var (_dbf ,_dc float64 ;_ga ,_beb int ;);_dbf ,_ecdf =_d .CorrelationScore (_ggg ,_db ,_cc ,_cec ,_ccb -_dga ,_ddb -_bf ,MaxDiffWidth ,MaxDiffHeight ,_bcbc );if _ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_dc ,_ecdf =_d .CorrelationScoreSimple (_ggg ,_db ,_cc ,_cec ,_ccb -_dga ,_ddb -_bf ,MaxDiffWidth ,MaxDiffHeight ,_bcbc );if _ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ga =int (_e .Sqrt (_dbf *float64 (_cc )*float64 (_cec )));_beb =int (_e .Sqrt (_dc *float64 (_cc )*float64 (_cec )));if (_dbf >=_cbb )!=(_dc >=_cbb ){return _ed .Errorf (_gfb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ga ,_dbf ,_dbf >=_cbb ,_beb ,_dc ,_dc >=_cbb ,_dbf -_dc );
};if _dbf >=_cbb !=_gda {return _ed .Errorf (_gfb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dbf ,_dbf *float64 (_cc )*float64 (_cec ),_ga ,_cbb ,float32 (_cbb )*float32 (_cc )*float32 (_cec ),_gda );
};};if _gda {_ag =true ;if _ecdf =_cgg .ClassIDs .Add (_bcbe );_ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _ecdf =_cgg .ComponentPageNumbers .Add (_bec );_ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _cgg .Settings .KeepClassInstances {if _fef ,_ecdf =_faf .GetBitmap (_bdd );_ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _dfd ,_ecdf =_cgg .ClassInstances .GetBitmaps (_bcbe );
_ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_dfd .AddBitmap (_fef );if _cdc ,_ecdf =_feed .Get (_bdd );_ecdf !=nil {return _ed .Wrap (_ecdf ,_gfb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_dfd .AddBox (_cdc );};break ;};};if !_ag {if _ead =_cgg .ClassIDs .Add (_ccd );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ead =_cgg .ComponentPageNumbers .Add (_bec );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_dfd =&_d .Bitmaps {};if _fef ,_ead =_faf .GetBitmap (_bdd );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfd .AddBitmap (_fef );_fgc ,_cff :=_fef .Width ,_fef .Height ;_bdc :=uint64 (_cff )*uint64 (_fgc );_cgg .TemplatesSize .Add (_bdc ,_ccd );
if _cdc ,_ead =_feed .Get (_bdd );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfd .AddBox (_cdc );_cgg .ClassInstances .AddBitmaps (_dfd );_cgg .CentroidPointsTemplates .AddPoint (_ccb ,_ddb );_cgg .FgTemplates .AddInt (_cc );
_cgg .UndilatedTemplates .AddBitmap (_fef );_bd =(_ggg .Width -2*JbAddedPixels )*(_ggg .Height -2*JbAddedPixels );if _ead =_cgg .TemplateAreas .Add (_bd );_ead !=nil {return _ed .Wrap (_ead ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_cgg .NumberOfClasses =len (_cgg .UndilatedTemplates .Values );
return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_gg *Classer )addPageComponents (_ggf *_d .Bitmap ,_gf *_d .Boxes ,_af *_d .Bitmaps ,_be int ,_cde Method )error {const _gb ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ggf ==nil {return _ed .Error (_gb ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _gf ==nil ||_af ==nil ||len (*_gf )==0{_fe .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ggf );
return nil ;};var _afb error ;switch _cde {case RankHaus :_afb =_gg .classifyRankHaus (_gf ,_af ,_be );case Correlation :_afb =_gg .classifyCorrelation (_gf ,_af ,_be );default:_fe .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cde );
return _ed .Error (_gb ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _afb !=nil {return _ed .Wrap (_afb ,_gb ,"");};if _afb =_gg .getULCorners (_ggf ,_gf );_afb !=nil {return _ed .Wrap (_afb ,_gb ,"");
};_bb :=len (*_gf );_gg .BaseIndex +=_bb ;if _afb =_gg .ComponentsNumber .Add (_bb );_afb !=nil {return _ed .Wrap (_afb ,_gb ,"");};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_fa .IntSlice ;TemplateAreas *_fa .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_d .BitmapsArray ;UndilatedTemplates *_d .Bitmaps ;DilatedTemplates *_d .Bitmaps ;TemplatesSize _fa .IntsMap ;FgTemplates *_fa .NumSlice ;CentroidPoints *_d .Points ;CentroidPointsTemplates *_d .Points ;
ClassIDs *_fa .IntSlice ;ComponentPageNumbers *_fa .IntSlice ;PtaUL *_d .Points ;PtaLL *_d .Points ;};func (_dgc *Settings )SetDefault (){if _dgc .MaxCompWidth ==0{switch _dgc .Components {case _d .ComponentConn :_dgc .MaxCompWidth =MaxConnCompWidth ;case _d .ComponentCharacters :_dgc .MaxCompWidth =MaxCharCompWidth ;
case _d .ComponentWords :_dgc .MaxCompWidth =MaxWordCompWidth ;};};if _dgc .MaxCompHeight ==0{_dgc .MaxCompHeight =MaxCompHeight ;};if _dgc .Thresh ==0.0{_dgc .Thresh =0.9;};if _dgc .WeightFactor ==0.0{_dgc .WeightFactor =0.75;};if _dgc .RankHaus ==0.0{_dgc .RankHaus =0.97;
};if _dgc .SizeHaus ==0{_dgc .SizeHaus =2;};};func (_gbe *Classer )classifyRankHouseOne (_ged *_d .Boxes ,_agd ,_ffef ,_eafd *_d .Bitmaps ,_gga *_d .Points ,_cded int )(_dea error ){const _fbb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bdca ,_bfc ,_dce ,_ac float32 ;_dcc int ;_ffc ,_ccg ,_gab ,_dbb ,_cdg *_d .Bitmap ;_ggaa ,_dbbf bool ;);for _caa :=0;_caa < len (_agd .Values );_caa ++{_ccg =_ffef .Values [_caa ];_gab =_eafd .Values [_caa ];_bdca ,_bfc ,_dea =_gga .GetGeometry (_caa );
if _dea !=nil {return _ed .Wrapf (_dea ,_fbb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_aaba :=len (_gbe .UndilatedTemplates .Values );_ggaa =false ;_ggc :=_cdd (_gbe ,_ccg );for _dcc =_ggc .Next ();_dcc > -1;
{_dbb ,_dea =_gbe .UndilatedTemplates .GetBitmap (_dcc );if _dea !=nil {return _ed .Wrap (_dea ,_fbb ,"\u0062\u006d\u0033");};_cdg ,_dea =_gbe .DilatedTemplates .GetBitmap (_dcc );if _dea !=nil {return _ed .Wrap (_dea ,_fbb ,"\u0062\u006d\u0034");};_dce ,_ac ,_dea =_gbe .CentroidPointsTemplates .GetGeometry (_dcc );
if _dea !=nil {return _ed .Wrap (_dea ,_fbb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dbbf ,_dea =_d .HausTest (_ccg ,_gab ,_dbb ,_cdg ,_bdca -_dce ,_bfc -_ac ,MaxDiffWidth ,MaxDiffHeight );
if _dea !=nil {return _ed .Wrap (_dea ,_fbb ,"");};if _dbbf {_ggaa =true ;if _dea =_gbe .ClassIDs .Add (_dcc );_dea !=nil {return _ed .Wrap (_dea ,_fbb ,"");};if _dea =_gbe .ComponentPageNumbers .Add (_cded );_dea !=nil {return _ed .Wrap (_dea ,_fbb ,"");
};if _gbe .Settings .KeepClassInstances {_dfb ,_aba :=_gbe .ClassInstances .GetBitmaps (_dcc );if _aba !=nil {return _ed .Wrap (_aba ,_fbb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ffc ,_aba =_agd .GetBitmap (_caa );if _aba !=nil {return _ed .Wrap (_aba ,_fbb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_dfb .AddBitmap (_ffc );_dcce ,_aba :=_ged .Get (_caa );if _aba !=nil {return _ed .Wrap (_aba ,_fbb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dfb .AddBox (_dcce );};break ;};};if !_ggaa {if _dea =_gbe .ClassIDs .Add (_aaba );_dea !=nil {return _ed .Wrap (_dea ,_fbb ,"");
};if _dea =_gbe .ComponentPageNumbers .Add (_cded );_dea !=nil {return _ed .Wrap (_dea ,_fbb ,"");};_geaf :=&_d .Bitmaps {};_ffc ,_dea =_agd .GetBitmap (_caa );if _dea !=nil {return _ed .Wrap (_dea ,_fbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_geaf .Values =append (_geaf .Values ,_ffc );
_ada ,_ceg :=_ffc .Width ,_ffc .Height ;_gbe .TemplatesSize .Add (uint64 (_ceg )*uint64 (_ada ),_aaba );_gca ,_dgg :=_ged .Get (_caa );if _dgg !=nil {return _ed .Wrap (_dgg ,_fbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_geaf .AddBox (_gca );_gbe .ClassInstances .AddBitmaps (_geaf );
_gbe .CentroidPointsTemplates .AddPoint (_bdca ,_bfc );_gbe .UndilatedTemplates .AddBitmap (_ccg );_gbe .DilatedTemplates .AddBitmap (_gab );};};return nil ;};func (_caad Settings )Validate ()error {const _adg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _caad .Thresh < 0.4||_caad .Thresh > 0.98{return _ed .Error (_adg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _caad .WeightFactor < 0.0||_caad .WeightFactor > 1.0{return _ed .Error (_adg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _caad .RankHaus < 0.5||_caad .RankHaus > 1.0{return _ed .Error (_adg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _caad .SizeHaus < 1||_caad .SizeHaus > 10{return _ed .Error (_adg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _caad .Components {case _d .ComponentConn ,_d .ComponentCharacters ,_d .ComponentWords :default:return _ed .Error (_adg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func Init (settings Settings )(*Classer ,error ){const _g ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_df :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_fa .IntsMap {},TemplateAreas :&_fa .IntSlice {},ComponentPageNumbers :&_fa .IntSlice {},ClassIDs :&_fa .IntSlice {},ComponentsNumber :&_fa .IntSlice {},CentroidPoints :&_d .Points {},CentroidPointsTemplates :&_d .Points {},UndilatedTemplates :&_d .Bitmaps {},DilatedTemplates :&_d .Bitmaps {},ClassInstances :&_d .BitmapsArray {},FgTemplates :&_fa .NumSlice {}};
if _gd :=_df .Settings .Validate ();_gd !=nil {return nil ,_ed .Wrap (_gd ,_g ,"");};return _df ,nil ;};func (_fcc *similarTemplatesFinder )Next ()int {var (_dafe ,_ebeg ,_dbg ,_bddb int ;_fbg bool ;_bddf *_d .Bitmap ;_ege error ;);for {if _fcc .Index >=25{return -1;
};_ebeg =_fcc .Width +TwoByTwoWalk [2*_fcc .Index ];_dafe =_fcc .Height +TwoByTwoWalk [2*_fcc .Index +1];if _dafe < 1||_ebeg < 1{_fcc .Index ++;continue ;};if len (_fcc .CurrentNumbers )==0{_fcc .CurrentNumbers ,_fbg =_fcc .Classer .TemplatesSize .GetSlice (uint64 (_ebeg )*uint64 (_dafe ));
if !_fbg {_fcc .Index ++;continue ;};_fcc .N =0;};_dbg =len (_fcc .CurrentNumbers );for ;_fcc .N < _dbg ;_fcc .N ++{_bddb =_fcc .CurrentNumbers [_fcc .N ];_bddf ,_ege =_fcc .Classer .DilatedTemplates .GetBitmap (_bddb );if _ege !=nil {_fe .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _bddf .Width -2*JbAddedPixels ==_ebeg &&_bddf .Height -2*JbAddedPixels ==_dafe {return _bddb ;};};_fcc .Index ++;_fcc .CurrentNumbers =nil ;};};type Method int ;var _ddg bool ;func (_aa *Classer )ComputeLLCorners ()(_fb error ){const _ab ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _aa .PtaUL ==nil {return _ed .Error (_ab ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ge :=len (*_aa .PtaUL );_aa .PtaLL =&_d .Points {};var (_b ,_bg float32 ;_fc ,_cd int ;
_ca *_d .Bitmap ;);for _fac :=0;_fac < _ge ;_fac ++{_b ,_bg ,_fb =_aa .PtaUL .GetGeometry (_fac );if _fb !=nil {_fe .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fb );
return _ed .Wrap (_fb ,_ab ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_fc ,_fb =_aa .ClassIDs .Get (_fac );if _fb !=nil {_fe .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fb );
return _ed .Wrap (_fb ,_ab ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ca ,_fb =_aa .UndilatedTemplates .GetBitmap (_fc );if _fb !=nil {_fe .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fb );
return _ed .Wrap (_fb ,_ab ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cd =_ca .Height ;_aa .PtaLL .AddPoint (_b ,_bg +float32 (_cd ));};return nil ;};const (RankHaus Method =iota ;Correlation ;
);func (_gdec *Classer )verifyMethod (_eaf Method )error {if _eaf !=RankHaus &&_eaf !=Correlation {return _ed .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func _cdd (_gede *Classer ,_ebed *_d .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_ebed .Width ,Height :_ebed .Height ,Classer :_gede };
};