//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_dgb "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_e "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_dg "math";
);func (_ag *Classer )getULCorners (_cb *_ee .Bitmap ,_ef *_ee .Boxes )error {const _dga ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cb ==nil {return _e .Error (_dga ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ef ==nil {return _e .Error (_dga ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ag .PtaUL ==nil {_ag .PtaUL =&_ee .Points {};};_aa :=len (*_ef );var (_eeg ,_cf ,_be ,_ba int ;_efc ,_fcf ,_eea ,_bfa float32 ;_bdc error ;_fbf *_b .Rectangle ;
_cba *_ee .Bitmap ;_ca _b .Point ;);for _gd :=0;_gd < _aa ;_gd ++{_eeg =_ag .BaseIndex +_gd ;if _efc ,_fcf ,_bdc =_ag .CentroidPoints .GetGeometry (_eeg );_bdc !=nil {return _e .Wrap (_bdc ,_dga ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _cf ,_bdc =_ag .ClassIDs .Get (_eeg );_bdc !=nil {return _e .Wrap (_bdc ,_dga ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _eea ,_bfa ,_bdc =_ag .CentroidPointsTemplates .GetGeometry (_cf );_bdc !=nil {return _e .Wrap (_bdc ,_dga ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_bdg :=_eea -_efc ;_bcg :=_bfa -_fcf ;if _bdg >=0{_be =int (_bdg +0.5);}else {_be =int (_bdg -0.5);};if _bcg >=0{_ba =int (_bcg +0.5);}else {_ba =int (_bcg -0.5);};if _fbf ,_bdc =_ef .Get (_gd );_bdc !=nil {return _e .Wrap (_bdc ,_dga ,"");};_ab ,_aba :=_fbf .Min .X ,_fbf .Min .Y ;
_cba ,_bdc =_ag .UndilatedTemplates .GetBitmap (_cf );if _bdc !=nil {return _e .Wrap (_bdc ,_dga ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_ca ,_bdc =_cd (_cb ,_ab ,_aba ,_be ,_ba ,_cba );if _bdc !=nil {return _e .Wrap (_bdc ,_dga ,"");};_ag .PtaUL .AddPoint (float32 (_ab -_be +_ca .X ),float32 (_aba -_ba +_ca .Y ));};return nil ;};const JbAddedPixels =6;func (_gf *Classer )ComputeLLCorners ()(_cg error ){const _dgba ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _gf .PtaUL ==nil {return _e .Error (_dgba ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_bd :=len (*_gf .PtaUL );_gf .PtaLL =&_ee .Points {};var (_cc ,_fb float32 ;_bc ,_a int ;
_dgbc *_ee .Bitmap ;);for _gg :=0;_gg < _bd ;_gg ++{_cc ,_fb ,_cg =_gf .PtaUL .GetGeometry (_gg );if _cg !=nil {_dgb .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cg );
return _e .Wrap (_cg ,_dgba ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_bc ,_cg =_gf .ClassIDs .Get (_gg );if _cg !=nil {_dgb .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_cg );
return _e .Wrap (_cg ,_dgba ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_dgbc ,_cg =_gf .UndilatedTemplates .GetBitmap (_bc );if _cg !=nil {_dgb .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cg );
return _e .Wrap (_cg ,_dgba ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_a =_dgbc .Height ;_gf .PtaLL .AddPoint (_cc ,_fb +float32 (_a ));};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;
MaxWordCompWidth =1000;MaxCompHeight =120;);func (_db *Classer )classifyCorrelation (_cgb *_ee .Boxes ,_fde *_ee .Bitmaps ,_fbd int )error {const _fg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _cgb ==nil {return _e .Error (_fg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _fde ==nil {return _e .Error (_fg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bab :=len (_fde .Values );if _bab ==0{_dgb .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ge ,_dcb *_ee .Bitmap ;_bae error ;);_fdd :=&_ee .Bitmaps {Values :make ([]*_ee .Bitmap ,_bab )};for _ff ,_efef :=range _fde .Values {_dcb ,_bae =_efef .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bae !=nil {return _e .Wrap (_bae ,_fg ,"");};_fdd .Values [_ff ]=_dcb ;};_bfc :=_db .FgTemplates ;_fcgc :=_ee .MakePixelSumTab8 ();_eca :=_ee .MakePixelCentroidTab8 ();_eef :=make ([]int ,_bab );_ea :=make ([][]int ,_bab );_ccf :=_ee .Points (make ([]_ee .Point ,_bab ));
_dd :=&_ccf ;var (_gb ,_dgbcf int ;_gfg ,_abb ,_egc int ;_dca ,_fdge int ;_def byte ;);for _fca ,_agd :=range _fdd .Values {_ea [_fca ]=make ([]int ,_agd .Height );_gb =0;_dgbcf =0;_abb =(_agd .Height -1)*_agd .RowStride ;_gfg =0;for _fdge =_agd .Height -1;
_fdge >=0;_fdge ,_abb =_fdge -1,_abb -_agd .RowStride {_ea [_fca ][_fdge ]=_gfg ;_egc =0;for _dca =0;_dca < _agd .RowStride ;_dca ++{_def =_agd .Data [_abb +_dca ];_egc +=_fcgc [_def ];_gb +=_eca [_def ]+_dca *8*_fcgc [_def ];};_gfg +=_egc ;_dgbcf +=_egc *_fdge ;
};_eef [_fca ]=_gfg ;if _gfg > 0{(*_dd )[_fca ]=_ee .Point {X :float32 (_gb )/float32 (_gfg ),Y :float32 (_dgbcf )/float32 (_gfg )};}else {(*_dd )[_fca ]=_ee .Point {X :float32 (_agd .Width )/float32 (2),Y :float32 (_agd .Height )/float32 (2)};};};if _bae =_db .CentroidPoints .Add (_dd );
_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_fac ,_bfad ,_fbdb int ;_fdeg float64 ;_gdf ,_bfcd ,_cgd ,_gbe float32 ;_bfg ,_ae _ee .Point ;_daa bool ;_fbb *similarTemplatesFinder ;
_ffc int ;_aed *_ee .Bitmap ;_ecf *_b .Rectangle ;_dbf *_ee .Bitmaps ;);for _ffc ,_dcb =range _fdd .Values {_bfad =_eef [_ffc ];if _gdf ,_bfcd ,_bae =_dd .GetGeometry (_ffc );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_daa =false ;_baea :=len (_db .UndilatedTemplates .Values );_fbb =_fdgc (_db ,_dcb );for _ce :=_fbb .Next ();_ce > -1;{if _aed ,_bae =_db .UndilatedTemplates .GetBitmap (_ce );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _fbdb ,_bae =_bfc .GetInt (_ce );_bae !=nil {_dgb .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bae );};if _cgd ,_gbe ,_bae =_db .CentroidPointsTemplates .GetGeometry (_ce );
_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _db .Settings .WeightFactor > 0.0{if _fac ,_bae =_db .TemplateAreas .Get (_ce );_bae !=nil {_dgb .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bae );
};_fdeg =_db .Settings .Thresh +(1.0-_db .Settings .Thresh )*_db .Settings .WeightFactor *float64 (_fbdb )/float64 (_fac );}else {_fdeg =_db .Settings .Thresh ;};_aeb ,_bfcb :=_ee .CorrelationScoreThresholded (_dcb ,_aed ,_bfad ,_fbdb ,_bfg .X -_ae .X ,_bfg .Y -_ae .Y ,MaxDiffWidth ,MaxDiffHeight ,_fcgc ,_ea [_ffc ],float32 (_fdeg ));
if _bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"");};if _fdg {var (_bbe ,_gea float64 ;_ged ,_eeb int ;);_bbe ,_bfcb =_ee .CorrelationScore (_dcb ,_aed ,_bfad ,_fbdb ,_gdf -_cgd ,_bfcd -_gbe ,MaxDiffWidth ,MaxDiffHeight ,_fcgc );if _bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gea ,_bfcb =_ee .CorrelationScoreSimple (_dcb ,_aed ,_bfad ,_fbdb ,_gdf -_cgd ,_bfcd -_gbe ,MaxDiffWidth ,MaxDiffHeight ,_fcgc );if _bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ged =int (_dg .Sqrt (_bbe *float64 (_bfad )*float64 (_fbdb )));_eeb =int (_dg .Sqrt (_gea *float64 (_bfad )*float64 (_fbdb )));if (_bbe >=_fdeg )!=(_gea >=_fdeg ){return _e .Errorf (_fg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ged ,_bbe ,_bbe >=_fdeg ,_eeb ,_gea ,_gea >=_fdeg ,_bbe -_gea );
};if _bbe >=_fdeg !=_aeb {return _e .Errorf (_fg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_bbe ,_bbe *float64 (_bfad )*float64 (_fbdb ),_ged ,_fdeg ,float32 (_fdeg )*float32 (_bfad )*float32 (_fbdb ),_aeb );
};};if _aeb {_daa =true ;if _bfcb =_db .ClassIDs .Add (_ce );_bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bfcb =_db .ComponentPageNumbers .Add (_fbd );_bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _db .Settings .KeepClassInstances {if _ge ,_bfcb =_fde .GetBitmap (_ffc );_bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _dbf ,_bfcb =_db .ClassInstances .GetBitmaps (_ce );
_bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_dbf .AddBitmap (_ge );if _ecf ,_bfcb =_cgb .Get (_ffc );_bfcb !=nil {return _e .Wrap (_bfcb ,_fg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_dbf .AddBox (_ecf );};break ;};};if !_daa {if _bae =_db .ClassIDs .Add (_baea );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bae =_db .ComponentPageNumbers .Add (_fbd );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_dbf =&_ee .Bitmaps {};if _ge ,_bae =_fde .GetBitmap (_ffc );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dbf .AddBitmap (_ge );_abf ,_afe :=_ge .Width ,_ge .Height ;_gcaf :=uint64 (_afe )*uint64 (_abf );_db .TemplatesSize .Add (_gcaf ,_baea );
if _ecf ,_bae =_cgb .Get (_ffc );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dbf .AddBox (_ecf );_db .ClassInstances .AddBitmaps (_dbf );_db .CentroidPointsTemplates .AddPoint (_gdf ,_bfcd );_db .FgTemplates .AddInt (_bfad );
_db .UndilatedTemplates .AddBitmap (_ge );_fac =(_dcb .Width -2*JbAddedPixels )*(_dcb .Height -2*JbAddedPixels );if _bae =_db .TemplateAreas .Add (_fac );_bae !=nil {return _e .Wrap (_bae ,_fg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_db .NumberOfClasses =len (_db .UndilatedTemplates .Values );
return nil ;};func _fdgc (_fgg *Classer ,_bbb *_ee .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_bbb .Width ,Height :_bbb .Height ,Classer :_fgg };};func (_age *Classer )classifyRankHaus (_dac *_ee .Boxes ,_gfc *_ee .Bitmaps ,_dafc int )error {const _fdef ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _dac ==nil {return _e .Error (_fdef ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gfc ==nil {return _e .Error (_fdef ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_gbg :=len (_gfc .Values );if _gbg ==0{return _e .Error (_fdef ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bag :=_gfc .CountPixels ();_gaa :=_age .Settings .SizeHaus ;_dbb :=_ee .SelCreateBrick (_gaa ,_gaa ,_gaa /2,_gaa /2,_ee .SelHit );
_ad :=&_ee .Bitmaps {Values :make ([]*_ee .Bitmap ,_gbg )};_fgd :=&_ee .Bitmaps {Values :make ([]*_ee .Bitmap ,_gbg )};var (_fdde ,_fec ,_bce *_ee .Bitmap ;_gdd error ;);for _deb :=0;_deb < _gbg ;_deb ++{_fdde ,_gdd =_gfc .GetBitmap (_deb );if _gdd !=nil {return _e .Wrap (_gdd ,_fdef ,"");
};_fec ,_gdd =_fdde .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gdd !=nil {return _e .Wrap (_gdd ,_fdef ,"");};_bce ,_gdd =_ee .Dilate (nil ,_fec ,_dbb );if _gdd !=nil {return _e .Wrap (_gdd ,_fdef ,"");};_ad .Values [_gbg ]=_fec ;
_fgd .Values [_gbg ]=_bce ;};_gcfc ,_gdd :=_ee .Centroids (_ad .Values );if _gdd !=nil {return _e .Wrap (_gdd ,_fdef ,"");};if _gdd =_gcfc .Add (_age .CentroidPoints );_gdd !=nil {_dgb .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _age .Settings .RankHaus ==1.0{_gdd =_age .classifyRankHouseOne (_dac ,_gfc ,_ad ,_fgd ,_gcfc ,_dafc );}else {_gdd =_age .classifyRankHouseNonOne (_dac ,_gfc ,_ad ,_fgd ,_gcfc ,_bag ,_dafc );};if _gdd !=nil {return _e .Wrap (_gdd ,_fdef ,"");};return nil ;
};func (_gca *Classer )verifyMethod (_efe Method )error {if _efe !=RankHaus &&_efe !=Correlation {return _e .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};var _fdg bool ;type Method int ;const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_fbg *Classer )classifyRankHouseOne (_dedd *_ee .Boxes ,_bced ,_ac ,_cdee *_ee .Bitmaps ,_ed *_ee .Points ,_dgg int )(_dde error ){const _egb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_cea ,_facg ,_bfac ,_abfb float32 ;_dfe int ;_fdgb ,_eff ,_gge ,_egg ,_bec *_ee .Bitmap ;_beb ,_feb bool ;);for _dag :=0;_dag < len (_bced .Values );_dag ++{_eff =_ac .Values [_dag ];_gge =_cdee .Values [_dag ];_cea ,_facg ,_dde =_ed .GetGeometry (_dag );
if _dde !=nil {return _e .Wrapf (_dde ,_egb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_edc :=len (_fbg .UndilatedTemplates .Values );_beb =false ;_cad :=_fdgc (_fbg ,_eff );for _dfe =_cad .Next ();_dfe > -1;{_egg ,_dde =_fbg .UndilatedTemplates .GetBitmap (_dfe );
if _dde !=nil {return _e .Wrap (_dde ,_egb ,"\u0062\u006d\u0033");};_bec ,_dde =_fbg .DilatedTemplates .GetBitmap (_dfe );if _dde !=nil {return _e .Wrap (_dde ,_egb ,"\u0062\u006d\u0034");};_bfac ,_abfb ,_dde =_fbg .CentroidPointsTemplates .GetGeometry (_dfe );
if _dde !=nil {return _e .Wrap (_dde ,_egb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_feb ,_dde =_ee .HausTest (_eff ,_gge ,_egg ,_bec ,_cea -_bfac ,_facg -_abfb ,MaxDiffWidth ,MaxDiffHeight );
if _dde !=nil {return _e .Wrap (_dde ,_egb ,"");};if _feb {_beb =true ;if _dde =_fbg .ClassIDs .Add (_dfe );_dde !=nil {return _e .Wrap (_dde ,_egb ,"");};if _dde =_fbg .ComponentPageNumbers .Add (_dgg );_dde !=nil {return _e .Wrap (_dde ,_egb ,"");};if _fbg .Settings .KeepClassInstances {_dagd ,_edcd :=_fbg .ClassInstances .GetBitmaps (_dfe );
if _edcd !=nil {return _e .Wrap (_edcd ,_egb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fdgb ,_edcd =_bced .GetBitmap (_dag );if _edcd !=nil {return _e .Wrap (_edcd ,_egb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dagd .AddBitmap (_fdgb );
_adg ,_edcd :=_dedd .Get (_dag );if _edcd !=nil {return _e .Wrap (_edcd ,_egb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dagd .AddBox (_adg );};break ;};};if !_beb {if _dde =_fbg .ClassIDs .Add (_edc );_dde !=nil {return _e .Wrap (_dde ,_egb ,"");
};if _dde =_fbg .ComponentPageNumbers .Add (_dgg );_dde !=nil {return _e .Wrap (_dde ,_egb ,"");};_abaa :=&_ee .Bitmaps {};_fdgb ,_dde =_bced .GetBitmap (_dag );if _dde !=nil {return _e .Wrap (_dde ,_egb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abaa .Values =append (_abaa .Values ,_fdgb );
_ade ,_adf :=_fdgb .Width ,_fdgb .Height ;_fbg .TemplatesSize .Add (uint64 (_adf )*uint64 (_ade ),_edc );_defa ,_cdfb :=_dedd .Get (_dag );if _cdfb !=nil {return _e .Wrap (_cdfb ,_egb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abaa .AddBox (_defa );_fbg .ClassInstances .AddBitmaps (_abaa );
_fbg .CentroidPointsTemplates .AddPoint (_cea ,_facg );_fbg .UndilatedTemplates .AddBitmap (_eff );_fbg .DilatedTemplates .AddBitmap (_gge );};};return nil ;};func (_edcb *Settings )SetDefault (){if _edcb .MaxCompWidth ==0{switch _edcb .Components {case _ee .ComponentConn :_edcb .MaxCompWidth =MaxConnCompWidth ;
case _ee .ComponentCharacters :_edcb .MaxCompWidth =MaxCharCompWidth ;case _ee .ComponentWords :_edcb .MaxCompWidth =MaxWordCompWidth ;};};if _edcb .MaxCompHeight ==0{_edcb .MaxCompHeight =MaxCompHeight ;};if _edcb .Thresh ==0.0{_edcb .Thresh =0.9;};if _edcb .WeightFactor ==0.0{_edcb .WeightFactor =0.75;
};if _edcb .RankHaus ==0.0{_edcb .RankHaus =0.97;};if _edcb .SizeHaus ==0{_edcb .SizeHaus =2;};};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ee .Component ;
Method Method ;};func (_de *Classer )AddPage (inputPage *_ee .Bitmap ,pageNumber int ,method Method )(_g error ){const _f ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_de .Widths [pageNumber ]=inputPage .Width ;_de .Heights [pageNumber ]=inputPage .Height ;
if _g =_de .verifyMethod (method );_g !=nil {return _e .Wrap (_g ,_f ,"");};_gc ,_dc ,_g :=inputPage .GetComponents (_de .Settings .Components ,_de .Settings .MaxCompWidth ,_de .Settings .MaxCompHeight );if _g !=nil {return _e .Wrap (_g ,_f ,"");};_dgb .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gc );
if _g =_de .addPageComponents (inputPage ,_dc ,_gc ,pageNumber ,method );_g !=nil {return _e .Wrap (_g ,_f ,"");};return nil ;};const (RankHaus Method =iota ;Correlation ;);func (_edb *Classer )classifyRankHouseNonOne (_defg *_ee .Boxes ,_ccg ,_fbbf ,_dgc *_ee .Bitmaps ,_cfg *_ee .Points ,_abg *_c .NumSlice ,_edg int )(_bbc error ){const _ddd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_abe ,_gdda ,_cadd ,_efcf float32 ;_ega ,_efg ,_dbd int ;_ccff ,_aag ,_ebd ,_fddc ,_dfeg *_ee .Bitmap ;_efb ,_bdf bool ;);_ffg :=_ee .MakePixelSumTab8 ();for _cec :=0;_cec < len (_ccg .Values );_cec ++{if _aag ,_bbc =_fbbf .GetBitmap (_cec );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _ega ,_bbc =_abg .GetInt (_cec );_bbc !=nil {_dgb .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cec ,_bbc );
};if _ebd ,_bbc =_dgc .GetBitmap (_cec );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _abe ,_gdda ,_bbc =_cfg .GetGeometry (_cec );_bbc !=nil {return _e .Wrapf (_bbc ,_ddd ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_ddc :=len (_edb .UndilatedTemplates .Values );_efb =false ;_geab :=_fdgc (_edb ,_aag );for _dbd =_geab .Next ();_dbd > -1;{if _fddc ,_bbc =_edb .UndilatedTemplates .GetBitmap (_dbd );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _efg ,_bbc =_edb .FgTemplates .GetInt (_dbd );_bbc !=nil {_dgb .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dbd ,_bbc );
};if _dfeg ,_bbc =_edb .DilatedTemplates .GetBitmap (_dbd );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cadd ,_efcf ,_bbc =_edb .CentroidPointsTemplates .GetGeometry (_dbd );
_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bdf ,_bbc =_ee .RankHausTest (_aag ,_ebd ,_fddc ,_dfeg ,_abe -_cadd ,_gdda -_efcf ,MaxDiffWidth ,MaxDiffHeight ,_ega ,_efg ,float32 (_edb .Settings .RankHaus ),_ffg );
if _bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"");};if _bdf {_efb =true ;if _bbc =_edb .ClassIDs .Add (_dbd );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"");};if _bbc =_edb .ComponentPageNumbers .Add (_edg );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"");};if _edb .Settings .KeepClassInstances {_bcb ,_dae :=_edb .ClassInstances .GetBitmaps (_dbd );
if _dae !=nil {return _e .Wrap (_dae ,_ddd ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _ccff ,_dae =_ccg .GetBitmap (_cec );_dae !=nil {return _e .Wrap (_dae ,_ddd ,"\u0070i\u0078\u0061\u005b\u0069\u005d");
};_bcb .Values =append (_bcb .Values ,_ccff );_add ,_dae :=_defg .Get (_cec );if _dae !=nil {return _e .Wrap (_dae ,_ddd ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_bcb .Boxes =append (_bcb .Boxes ,_add );};break ;};};if !_efb {if _bbc =_edb .ClassIDs .Add (_ddc );
_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbc =_edb .ComponentPageNumbers .Add (_edg );_bbc !=nil {return _e .Wrap (_bbc ,_ddd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bac :=&_ee .Bitmaps {};_ccff =_ccg .Values [_cec ];
_bac .AddBitmap (_ccff );_aae ,_ggc :=_ccff .Width ,_ccff .Height ;_edb .TemplatesSize .Add (uint64 (_aae )*uint64 (_ggc ),_ddc );_aga ,_aaa :=_defg .Get (_cec );if _aaa !=nil {return _e .Wrap (_aaa ,_ddd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bac .AddBox (_aga );
_edb .ClassInstances .AddBitmaps (_bac );_edb .CentroidPointsTemplates .AddPoint (_abe ,_gdda );_edb .UndilatedTemplates .AddBitmap (_aag );_edb .DilatedTemplates .AddBitmap (_ebd );_edb .FgTemplates .AddInt (_ega );};};_edb .NumberOfClasses =len (_edb .UndilatedTemplates .Values );
return nil ;};func DefaultSettings ()Settings {_ebc :=&Settings {};_ebc .SetDefault ();return *_ebc };func (_ebb *similarTemplatesFinder )Next ()int {var (_eaa ,_edbb ,_cdc ,_acb int ;_ada bool ;_gfe *_ee .Bitmap ;_afb error ;);for {if _ebb .Index >=25{return -1;
};_edbb =_ebb .Width +TwoByTwoWalk [2*_ebb .Index ];_eaa =_ebb .Height +TwoByTwoWalk [2*_ebb .Index +1];if _eaa < 1||_edbb < 1{_ebb .Index ++;continue ;};if len (_ebb .CurrentNumbers )==0{_ebb .CurrentNumbers ,_ada =_ebb .Classer .TemplatesSize .GetSlice (uint64 (_edbb )*uint64 (_eaa ));
if !_ada {_ebb .Index ++;continue ;};_ebb .N =0;};_cdc =len (_ebb .CurrentNumbers );for ;_ebb .N < _cdc ;_ebb .N ++{_acb =_ebb .CurrentNumbers [_ebb .N ];_gfe ,_afb =_ebb .Classer .DilatedTemplates .GetBitmap (_acb );if _afb !=nil {_dgb .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gfe .Width -2*JbAddedPixels ==_edbb &&_gfe .Height -2*JbAddedPixels ==_eaa {return _acb ;};};_ebb .Index ++;_ebb .CurrentNumbers =nil ;};};func (_gcf *Classer )addPageComponents (_bb *_ee .Bitmap ,_bfd *_ee .Boxes ,_da *_ee .Bitmaps ,_eg int ,_ded Method )error {const _fe ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _bb ==nil {return _e .Error (_fe ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bfd ==nil ||_da ==nil ||len (*_bfd )==0{_dgb .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_bb );
return nil ;};var _fc error ;switch _ded {case RankHaus :_fc =_gcf .classifyRankHaus (_bfd ,_da ,_eg );case Correlation :_fc =_gcf .classifyCorrelation (_bfd ,_da ,_eg );default:_dgb .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ded );
return _e .Error (_fe ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _fc !=nil {return _e .Wrap (_fc ,_fe ,"");};if _fc =_gcf .getULCorners (_bb ,_bfd );_fc !=nil {return _e .Wrap (_fc ,_fe ,"");
};_fa :=len (*_bfd );_gcf .BaseIndex +=_fa ;if _fc =_gcf .ComponentsNumber .Add (_fa );_fc !=nil {return _e .Wrap (_fc ,_fe ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bf ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_dgf :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_c .IntsMap {},TemplateAreas :&_c .IntSlice {},ComponentPageNumbers :&_c .IntSlice {},ClassIDs :&_c .IntSlice {},ComponentsNumber :&_c .IntSlice {},CentroidPoints :&_ee .Points {},CentroidPointsTemplates :&_ee .Points {},UndilatedTemplates :&_ee .Bitmaps {},DilatedTemplates :&_ee .Bitmaps {},ClassInstances :&_ee .BitmapsArray {},FgTemplates :&_c .NumSlice {}};
if _eb :=_dgf .Settings .Validate ();_eb !=nil {return nil ,_e .Wrap (_eb ,_bf ,"");};return _dgf ,nil ;};func _cd (_gcc *_ee .Bitmap ,_ggb ,_af ,_bfab ,_ga int ,_cge *_ee .Bitmap )(_ec _b .Point ,_ggg error ){const _dgd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _gcc ==nil {return _ec ,_e .Error (_dgd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _cge ==nil {return _ec ,_e .Error (_dgd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gde ,_cbd :=_cge .Width ,_cge .Height ;_df ,_bfae :=_ggb -_bfab -JbAddedPixels ,_af -_ga -JbAddedPixels ;_dgb .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ggb ,_af ,_gde ,_cbd ,_df ,_bfae );
_daf ,_ggg :=_ee .Rect (_df ,_bfae ,_gde ,_cbd );if _ggg !=nil {return _ec ,_e .Wrap (_ggg ,_dgd ,"");};_abd ,_ ,_ggg :=_gcc .ClipRectangle (_daf );if _ggg !=nil {_dgb .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_daf );
return _ec ,_e .Wrap (_ggg ,_dgd ,"");};_cbf :=_ee .New (_abd .Width ,_abd .Height );_cgc :=_dg .MaxInt32 ;var _dcg ,_cga ,_cdf ,_fd ,_fcfg int ;for _dcg =-1;_dcg <=1;_dcg ++{for _cga =-1;_cga <=1;_cga ++{if _ ,_ggg =_ee .Copy (_cbf ,_abd );_ggg !=nil {return _ec ,_e .Wrap (_ggg ,_dgd ,"");
};if _ggg =_cbf .RasterOperation (_cga ,_dcg ,_gde ,_cbd ,_ee .PixSrcXorDst ,_cge ,0,0);_ggg !=nil {return _ec ,_e .Wrap (_ggg ,_dgd ,"");};_cdf =_cbf .CountPixels ();if _cdf < _cgc {_fd =_cga ;_fcfg =_dcg ;_cgc =_cdf ;};};};_ec .X =_fd ;_ec .Y =_fcfg ;
return _ec ,nil ;};func (_dfc Settings )Validate ()error {const _baeb ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _dfc .Thresh < 0.4||_dfc .Thresh > 0.98{return _e .Error (_baeb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dfc .WeightFactor < 0.0||_dfc .WeightFactor > 1.0{return _e .Error (_baeb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dfc .RankHaus < 0.5||_dfc .RankHaus > 1.0{return _e .Error (_baeb ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dfc .SizeHaus < 1||_dfc .SizeHaus > 10{return _e .Error (_baeb ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dfc .Components {case _ee .ComponentConn ,_ee .ComponentCharacters ,_ee .ComponentWords :default:return _e .Error (_baeb ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_c .IntSlice ;TemplateAreas *_c .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ee .BitmapsArray ;UndilatedTemplates *_ee .Bitmaps ;DilatedTemplates *_ee .Bitmaps ;TemplatesSize _c .IntsMap ;FgTemplates *_c .NumSlice ;CentroidPoints *_ee .Points ;CentroidPointsTemplates *_ee .Points ;
ClassIDs *_c .IntSlice ;ComponentPageNumbers *_c .IntSlice ;PtaUL *_ee .Points ;PtaLL *_ee .Points ;};