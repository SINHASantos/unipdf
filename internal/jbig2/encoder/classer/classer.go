//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_g "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_a "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_f "math";);
func (_dcb *Settings )SetDefault (){if _dcb .MaxCompWidth ==0{switch _dcb .Components {case _e .ComponentConn :_dcb .MaxCompWidth =MaxConnCompWidth ;case _e .ComponentCharacters :_dcb .MaxCompWidth =MaxCharCompWidth ;case _e .ComponentWords :_dcb .MaxCompWidth =MaxWordCompWidth ;
};};if _dcb .MaxCompHeight ==0{_dcb .MaxCompHeight =MaxCompHeight ;};if _dcb .Thresh ==0.0{_dcb .Thresh =0.9;};if _dcb .WeightFactor ==0.0{_dcb .WeightFactor =0.75;};if _dcb .RankHaus ==0.0{_dcb .RankHaus =0.97;};if _dcb .SizeHaus ==0{_dcb .SizeHaus =2;
};};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_ad *Classer )ComputeLLCorners ()(_cc error ){const _fdg ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ad .PtaUL ==nil {return _a .Error (_fdg ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ce :=len (*_ad .PtaUL );_ad .PtaLL =&_e .Points {};var (_af ,_ab float32 ;_bfg ,_ba int ;
_fac *_e .Bitmap ;);for _ge :=0;_ge < _ce ;_ge ++{_af ,_ab ,_cc =_ad .PtaUL .GetGeometry (_ge );if _cc !=nil {_g .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cc );
return _a .Wrap (_cc ,_fdg ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_bfg ,_cc =_ad .ClassIDs .Get (_ge );if _cc !=nil {_g .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_cc );
return _a .Wrap (_cc ,_fdg ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fac ,_cc =_ad .UndilatedTemplates .GetBitmap (_bfg );if _cc !=nil {_g .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cc );
return _a .Wrap (_cc ,_fdg ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ba =_fac .Height ;_ad .PtaLL .AddPoint (_af ,_ab +float32 (_ba ));};return nil ;};func (_ef *Classer )classifyCorrelation (_ccf *_e .Boxes ,_gfbf *_e .Bitmaps ,_cf int )error {const _egg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ccf ==nil {return _a .Error (_egg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _gfbf ==nil {return _a .Error (_egg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_feg :=len (_gfbf .Values );if _feg ==0{_g .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_dgb ,_afbd *_e .Bitmap ;_dfb error ;);_fbd :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_feg )};for _eac ,_dea :=range _gfbf .Values {_afbd ,_dfb =_dea .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _dfb !=nil {return _a .Wrap (_dfb ,_egg ,"");};_fbd .Values [_eac ]=_afbd ;};_dgd :=_ef .FgTemplates ;_deac :=_e .MakePixelSumTab8 ();_bfd :=_e .MakePixelCentroidTab8 ();_fcd :=make ([]int ,_feg );_dc :=make ([][]int ,_feg );_bba :=_e .Points (make ([]_e .Point ,_feg ));
_aec :=&_bba ;var (_fccb ,_aeb int ;_fgg ,_dcd ,_ede int ;_fag ,_bca int ;_efd byte ;);for _fgd ,_ag :=range _fbd .Values {_dc [_fgd ]=make ([]int ,_ag .Height );_fccb =0;_aeb =0;_dcd =(_ag .Height -1)*_ag .RowStride ;_fgg =0;for _bca =_ag .Height -1;_bca >=0;
_bca ,_dcd =_bca -1,_dcd -_ag .RowStride {_dc [_fgd ][_bca ]=_fgg ;_ede =0;for _fag =0;_fag < _ag .RowStride ;_fag ++{_efd =_ag .Data [_dcd +_fag ];_ede +=_deac [_efd ];_fccb +=_bfd [_efd ]+_fag *8*_deac [_efd ];};_fgg +=_ede ;_aeb +=_ede *_bca ;};_fcd [_fgd ]=_fgg ;
if _fgg > 0{(*_aec )[_fgd ]=_e .Point {X :float32 (_fccb )/float32 (_fgg ),Y :float32 (_aeb )/float32 (_fgg )};}else {(*_aec )[_fgd ]=_e .Point {X :float32 (_ag .Width )/float32 (2),Y :float32 (_ag .Height )/float32 (2)};};};if _dfb =_ef .CentroidPoints .Add (_aec );
_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_aeg ,_fbe ,_adb int ;_aea float64 ;_db ,_bde ,_adda ,_fdf float32 ;_eae ,_bgc _e .Point ;_ega bool ;_cgb *similarTemplatesFinder ;_bcad int ;
_fced *_e .Bitmap ;_agb *_b .Rectangle ;_dfd *_e .Bitmaps ;);for _bcad ,_afbd =range _fbd .Values {_fbe =_fcd [_bcad ];if _db ,_bde ,_dfb =_aec .GetGeometry (_bcad );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ega =false ;
_ec :=len (_ef .UndilatedTemplates .Values );_cgb =_ggc (_ef ,_afbd );for _abd :=_cgb .Next ();_abd > -1;{if _fced ,_dfb =_ef .UndilatedTemplates .GetBitmap (_abd );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _adb ,_dfb =_dgd .GetInt (_abd );_dfb !=nil {_g .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dfb );};if _adda ,_fdf ,_dfb =_ef .CentroidPointsTemplates .GetGeometry (_abd );
_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _ef .Settings .WeightFactor > 0.0{if _aeg ,_dfb =_ef .TemplateAreas .Get (_abd );_dfb !=nil {_g .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_dfb );
};_aea =_ef .Settings .Thresh +(1.0-_ef .Settings .Thresh )*_ef .Settings .WeightFactor *float64 (_adb )/float64 (_aeg );}else {_aea =_ef .Settings .Thresh ;};_ebd ,_dgbf :=_e .CorrelationScoreThresholded (_afbd ,_fced ,_fbe ,_adb ,_eae .X -_bgc .X ,_eae .Y -_bgc .Y ,MaxDiffWidth ,MaxDiffHeight ,_deac ,_dc [_bcad ],float32 (_aea ));
if _dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"");};if _faf {var (_bgb ,_adc float64 ;_eef ,_agd int ;);_bgb ,_dgbf =_e .CorrelationScore (_afbd ,_fced ,_fbe ,_adb ,_db -_adda ,_bde -_fdf ,MaxDiffWidth ,MaxDiffHeight ,_deac );if _dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_adc ,_dgbf =_e .CorrelationScoreSimple (_afbd ,_fced ,_fbe ,_adb ,_db -_adda ,_bde -_fdf ,MaxDiffWidth ,MaxDiffHeight ,_deac );if _dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_eef =int (_f .Sqrt (_bgb *float64 (_fbe )*float64 (_adb )));_agd =int (_f .Sqrt (_adc *float64 (_fbe )*float64 (_adb )));if (_bgb >=_aea )!=(_adc >=_aea ){return _a .Errorf (_egg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_eef ,_bgb ,_bgb >=_aea ,_agd ,_adc ,_adc >=_aea ,_bgb -_adc );
};if _bgb >=_aea !=_ebd {return _a .Errorf (_egg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_bgb ,_bgb *float64 (_fbe )*float64 (_adb ),_eef ,_aea ,float32 (_aea )*float32 (_fbe )*float32 (_adb ),_ebd );
};};if _ebd {_ega =true ;if _dgbf =_ef .ClassIDs .Add (_abd );_dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _dgbf =_ef .ComponentPageNumbers .Add (_cf );_dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _ef .Settings .KeepClassInstances {if _dgb ,_dgbf =_gfbf .GetBitmap (_bcad );_dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _dfd ,_dgbf =_ef .ClassInstances .GetBitmaps (_abd );
_dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_dfd .AddBitmap (_dgb );if _agb ,_dgbf =_ccf .Get (_bcad );_dgbf !=nil {return _a .Wrap (_dgbf ,_egg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_dfd .AddBox (_agb );};break ;};};if !_ega {if _dfb =_ef .ClassIDs .Add (_ec );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _dfb =_ef .ComponentPageNumbers .Add (_cf );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_dfd =&_e .Bitmaps {};if _dgb ,_dfb =_gfbf .GetBitmap (_bcad );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfd .AddBitmap (_dgb );_fdb ,_fbda :=_dgb .Width ,_dgb .Height ;_bee :=uint64 (_fbda )*uint64 (_fdb );_ef .TemplatesSize .Add (_bee ,_ec );
if _agb ,_dfb =_ccf .Get (_bcad );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfd .AddBox (_agb );_ef .ClassInstances .AddBitmaps (_dfd );_ef .CentroidPointsTemplates .AddPoint (_db ,_bde );_ef .FgTemplates .AddInt (_fbe );
_ef .UndilatedTemplates .AddBitmap (_dgb );_aeg =(_afbd .Width -2*JbAddedPixels )*(_afbd .Height -2*JbAddedPixels );if _dfb =_ef .TemplateAreas .Add (_aeg );_dfb !=nil {return _a .Wrap (_dfb ,_egg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_ef .NumberOfClasses =len (_ef .UndilatedTemplates .Values );
return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_cg .IntSlice ;TemplateAreas *_cg .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_e .BitmapsArray ;UndilatedTemplates *_e .Bitmaps ;
DilatedTemplates *_e .Bitmaps ;TemplatesSize _cg .IntsMap ;FgTemplates *_cg .NumSlice ;CentroidPoints *_e .Points ;CentroidPointsTemplates *_e .Points ;ClassIDs *_cg .IntSlice ;ComponentPageNumbers *_cg .IntSlice ;PtaUL *_e .Points ;PtaLL *_e .Points ;
};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_be *Classer )getULCorners (_afe *_e .Bitmap ,_df *_e .Boxes )error {const _dg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _afe ==nil {return _a .Error (_dg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _df ==nil {return _a .Error (_dg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _be .PtaUL ==nil {_be .PtaUL =&_e .Points {};};_fe :=len (*_df );var (_ace ,_dgc ,_gb ,_ddcg int ;_afea ,_eg ,_gfa ,_cga float32 ;_bg error ;_bad *_b .Rectangle ;
_fcb *_e .Bitmap ;_bc _b .Point ;);for _cb :=0;_cb < _fe ;_cb ++{_ace =_be .BaseIndex +_cb ;if _afea ,_eg ,_bg =_be .CentroidPoints .GetGeometry (_ace );_bg !=nil {return _a .Wrap (_bg ,_dg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _dgc ,_bg =_be .ClassIDs .Get (_ace );_bg !=nil {return _a .Wrap (_bg ,_dg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _gfa ,_cga ,_bg =_be .CentroidPointsTemplates .GetGeometry (_dgc );_bg !=nil {return _a .Wrap (_bg ,_dg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_fgf :=_gfa -_afea ;_gfb :=_cga -_eg ;if _fgf >=0{_gb =int (_fgf +0.5);}else {_gb =int (_fgf -0.5);};if _gfb >=0{_ddcg =int (_gfb +0.5);}else {_ddcg =int (_gfb -0.5);};if _bad ,_bg =_df .Get (_cb );_bg !=nil {return _a .Wrap (_bg ,_dg ,"");};_bb ,_bfb :=_bad .Min .X ,_bad .Min .Y ;
_fcb ,_bg =_be .UndilatedTemplates .GetBitmap (_dgc );if _bg !=nil {return _a .Wrap (_bg ,_dg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_bc ,_bg =_abg (_afe ,_bb ,_bfb ,_gb ,_ddcg ,_fcb );if _bg !=nil {return _a .Wrap (_bg ,_dg ,"");};_be .PtaUL .AddPoint (float32 (_bb -_gb +_bc .X ),float32 (_bfb -_ddcg +_bc .Y ));};return nil ;};const (RankHaus Method =iota ;Correlation ;);type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_aaa *Classer )classifyRankHouseNonOne (_gbe *_e .Boxes ,_ebff ,_ecc ,_fdbe *_e .Bitmaps ,_gcb *_e .Points ,_efc *_cg .NumSlice ,_fbac int )(_edd error ){const _fee ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bag ,_eda ,_adf ,_gaf float32 ;_bdf ,_bfaa ,_badg int ;_bbad ,_dge ,_edc ,_eeb ,_egc *_e .Bitmap ;_eddc ,_fad bool ;);_ebba :=_e .MakePixelSumTab8 ();for _cgc :=0;_cgc < len (_ebff .Values );_cgc ++{if _dge ,_edd =_ecc .GetBitmap (_cgc );_edd !=nil {return _a .Wrap (_edd ,_fee ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _bdf ,_edd =_efc .GetInt (_cgc );_edd !=nil {_g .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cgc ,_edd );
};if _edc ,_edd =_fdbe .GetBitmap (_cgc );_edd !=nil {return _a .Wrap (_edd ,_fee ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bag ,_eda ,_edd =_gcb .GetGeometry (_cgc );_edd !=nil {return _a .Wrapf (_edd ,_fee ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_ddg :=len (_aaa .UndilatedTemplates .Values );_eddc =false ;_ffa :=_ggc (_aaa ,_dge );for _badg =_ffa .Next ();_badg > -1;{if _eeb ,_edd =_aaa .UndilatedTemplates .GetBitmap (_badg );_edd !=nil {return _a .Wrap (_edd ,_fee ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _bfaa ,_edd =_aaa .FgTemplates .GetInt (_badg );_edd !=nil {_g .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_badg ,_edd );
};if _egc ,_edd =_aaa .DilatedTemplates .GetBitmap (_badg );_edd !=nil {return _a .Wrap (_edd ,_fee ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _adf ,_gaf ,_edd =_aaa .CentroidPointsTemplates .GetGeometry (_badg );
_edd !=nil {return _a .Wrap (_edd ,_fee ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fad ,_edd =_e .RankHausTest (_dge ,_edc ,_eeb ,_egc ,_bag -_adf ,_eda -_gaf ,MaxDiffWidth ,MaxDiffHeight ,_bdf ,_bfaa ,float32 (_aaa .Settings .RankHaus ),_ebba );
if _edd !=nil {return _a .Wrap (_edd ,_fee ,"");};if _fad {_eddc =true ;if _edd =_aaa .ClassIDs .Add (_badg );_edd !=nil {return _a .Wrap (_edd ,_fee ,"");};if _edd =_aaa .ComponentPageNumbers .Add (_fbac );_edd !=nil {return _a .Wrap (_edd ,_fee ,"");
};if _aaa .Settings .KeepClassInstances {_acd ,_fgdf :=_aaa .ClassInstances .GetBitmaps (_badg );if _fgdf !=nil {return _a .Wrap (_fgdf ,_fee ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _bbad ,_fgdf =_ebff .GetBitmap (_cgc );_fgdf !=nil {return _a .Wrap (_fgdf ,_fee ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_acd .Values =append (_acd .Values ,_bbad );_gae ,_fgdf :=_gbe .Get (_cgc );if _fgdf !=nil {return _a .Wrap (_fgdf ,_fee ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_acd .Boxes =append (_acd .Boxes ,_gae );};break ;};};if !_eddc {if _edd =_aaa .ClassIDs .Add (_ddg );_edd !=nil {return _a .Wrap (_edd ,_fee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _edd =_aaa .ComponentPageNumbers .Add (_fbac );_edd !=nil {return _a .Wrap (_edd ,_fee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bef :=&_e .Bitmaps {};_bbad =_ebff .Values [_cgc ];_bef .AddBitmap (_bbad );_aee ,_gcc :=_bbad .Width ,_bbad .Height ;_aaa .TemplatesSize .Add (uint64 (_aee )*uint64 (_gcc ),_ddg );_gad ,_fbee :=_gbe .Get (_cgc );if _fbee !=nil {return _a .Wrap (_fbee ,_fee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bef .AddBox (_gad );_aaa .ClassInstances .AddBitmaps (_bef );_aaa .CentroidPointsTemplates .AddPoint (_bag ,_eda );_aaa .UndilatedTemplates .AddBitmap (_dge );_aaa .DilatedTemplates .AddBitmap (_edc );_aaa .FgTemplates .AddInt (_bdf );};};_aaa .NumberOfClasses =len (_aaa .UndilatedTemplates .Values );
return nil ;};func Init (settings Settings )(*Classer ,error ){const _eb ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_fa :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_cg .IntsMap {},TemplateAreas :&_cg .IntSlice {},ComponentPageNumbers :&_cg .IntSlice {},ClassIDs :&_cg .IntSlice {},ComponentsNumber :&_cg .IntSlice {},CentroidPoints :&_e .Points {},CentroidPointsTemplates :&_e .Points {},UndilatedTemplates :&_e .Bitmaps {},DilatedTemplates :&_e .Bitmaps {},ClassInstances :&_e .BitmapsArray {},FgTemplates :&_cg .NumSlice {}};
if _gd :=_fa .Settings .Validate ();_gd !=nil {return nil ,_a .Wrap (_gd ,_eb ,"");};return _fa ,nil ;};func (_fdd *Classer )classifyRankHaus (_dgbd *_e .Boxes ,_fba *_e .Bitmaps ,_fcg int )error {const _fbde ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _dgbd ==nil {return _a .Error (_fbde ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _fba ==nil {return _a .Error (_fbde ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_dgf :=len (_fba .Values );if _dgf ==0{return _a .Error (_fbde ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bgf :=_fba .CountPixels ();_ebf :=_fdd .Settings .SizeHaus ;_ga :=_e .SelCreateBrick (_ebf ,_ebf ,_ebf /2,_ebf /2,_e .SelHit );
_cbg :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_dgf )};_efe :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_dgf )};var (_eefc ,_gg ,_bgd *_e .Bitmap ;_bbcc error ;);for _ebe :=0;_ebe < _dgf ;_ebe ++{_eefc ,_bbcc =_fba .GetBitmap (_ebe );if _bbcc !=nil {return _a .Wrap (_bbcc ,_fbde ,"");
};_gg ,_bbcc =_eefc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bbcc !=nil {return _a .Wrap (_bbcc ,_fbde ,"");};_bgd ,_bbcc =_e .Dilate (nil ,_gg ,_ga );if _bbcc !=nil {return _a .Wrap (_bbcc ,_fbde ,"");};_cbg .Values [_dgf ]=_gg ;
_efe .Values [_dgf ]=_bgd ;};_cgf ,_bbcc :=_e .Centroids (_cbg .Values );if _bbcc !=nil {return _a .Wrap (_bbcc ,_fbde ,"");};if _bbcc =_cgf .Add (_fdd .CentroidPoints );_bbcc !=nil {_g .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _fdd .Settings .RankHaus ==1.0{_bbcc =_fdd .classifyRankHouseOne (_dgbd ,_fba ,_cbg ,_efe ,_cgf ,_fcg );}else {_bbcc =_fdd .classifyRankHouseNonOne (_dgbd ,_fba ,_cbg ,_efe ,_cgf ,_bgf ,_fcg );};if _bbcc !=nil {return _a .Wrap (_bbcc ,_fbde ,"");};
return nil ;};func DefaultSettings ()Settings {_ccfg :=&Settings {};_ccfg .SetDefault ();return *_ccfg };const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;
SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _e .Component ;Method Method ;};func (_fd *Classer )AddPage (inputPage *_e .Bitmap ,pageNumber int ,method Method )(_bf error ){const _d ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_fd .Widths [pageNumber ]=inputPage .Width ;_fd .Heights [pageNumber ]=inputPage .Height ;if _bf =_fd .verifyMethod (method );_bf !=nil {return _a .Wrap (_bf ,_d ,"");};_cd ,_ea ,_bf :=inputPage .GetComponents (_fd .Settings .Components ,_fd .Settings .MaxCompWidth ,_fd .Settings .MaxCompHeight );
if _bf !=nil {return _a .Wrap (_bf ,_d ,"");};_g .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cd );if _bf =_fd .addPageComponents (inputPage ,_ea ,_cd ,pageNumber ,method );_bf !=nil {return _a .Wrap (_bf ,_d ,"");
};return nil ;};var _faf bool ;const JbAddedPixels =6;func _ggc (_ceb *Classer ,_fcf *_e .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fcf .Width ,Height :_fcf .Height ,Classer :_ceb };};func (_bff *Classer )classifyRankHouseOne (_cfb *_e .Boxes ,_gbd ,_bgcd ,_ff *_e .Bitmaps ,_fddg *_e .Points ,_bda int )(_ddd error ){const _fbf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gfd ,_dddd ,_cfa ,_bgbe float32 ;_aab int ;_ebb ,_bfgd ,_fgb ,_age ,_cge *_e .Bitmap ;_fdaa ,_eaf bool ;);for _efee :=0;_efee < len (_gbd .Values );_efee ++{_bfgd =_bgcd .Values [_efee ];_fgb =_ff .Values [_efee ];_gfd ,_dddd ,_ddd =_fddg .GetGeometry (_efee );
if _ddd !=nil {return _a .Wrapf (_ddd ,_fbf ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_cfba :=len (_bff .UndilatedTemplates .Values );_fdaa =false ;_fagb :=_ggc (_bff ,_bfgd );for _aab =_fagb .Next ();_aab > -1;
{_age ,_ddd =_bff .UndilatedTemplates .GetBitmap (_aab );if _ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"\u0062\u006d\u0033");};_cge ,_ddd =_bff .DilatedTemplates .GetBitmap (_aab );if _ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"\u0062\u006d\u0034");};_cfa ,_bgbe ,_ddd =_bff .CentroidPointsTemplates .GetGeometry (_aab );
if _ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_eaf ,_ddd =_e .HausTest (_bfgd ,_fgb ,_age ,_cge ,_gfd -_cfa ,_dddd -_bgbe ,MaxDiffWidth ,MaxDiffHeight );
if _ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"");};if _eaf {_fdaa =true ;if _ddd =_bff .ClassIDs .Add (_aab );_ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"");};if _ddd =_bff .ComponentPageNumbers .Add (_bda );_ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"");};
if _bff .Settings .KeepClassInstances {_bffg ,_gc :=_bff .ClassInstances .GetBitmaps (_aab );if _gc !=nil {return _a .Wrap (_gc ,_fbf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ebb ,_gc =_gbd .GetBitmap (_efee );if _gc !=nil {return _a .Wrap (_gc ,_fbf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_bffg .AddBitmap (_ebb );_bada ,_gc :=_cfb .Get (_efee );if _gc !=nil {return _a .Wrap (_gc ,_fbf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bffg .AddBox (_bada );};break ;};};if !_fdaa {if _ddd =_bff .ClassIDs .Add (_cfba );_ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"");
};if _ddd =_bff .ComponentPageNumbers .Add (_bda );_ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"");};_eaac :=&_e .Bitmaps {};_ebb ,_ddd =_gbd .GetBitmap (_efee );if _ddd !=nil {return _a .Wrap (_ddd ,_fbf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eaac .Values =append (_eaac .Values ,_ebb );
_dba ,_cfc :=_ebb .Width ,_ebb .Height ;_bff .TemplatesSize .Add (uint64 (_cfc )*uint64 (_dba ),_cfba );_efg ,_da :=_cfb .Get (_efee );if _da !=nil {return _a .Wrap (_da ,_fbf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eaac .AddBox (_efg );_bff .ClassInstances .AddBitmaps (_eaac );
_bff .CentroidPointsTemplates .AddPoint (_gfd ,_dddd );_bff .UndilatedTemplates .AddBitmap (_bfgd );_bff .DilatedTemplates .AddBitmap (_fgb );};};return nil ;};type Method int ;func (_cca *Classer )verifyMethod (_fcc Method )error {if _fcc !=RankHaus &&_fcc !=Correlation {return _a .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_acb *similarTemplatesFinder )Next ()int {var (_gcf ,_egb ,_aabg ,_dee int ;_fgde bool ;_fgff *_e .Bitmap ;_bce error ;);for {if _acb .Index >=25{return -1;};_egb =_acb .Width +TwoByTwoWalk [2*_acb .Index ];_gcf =_acb .Height +TwoByTwoWalk [2*_acb .Index +1];
if _gcf < 1||_egb < 1{_acb .Index ++;continue ;};if len (_acb .CurrentNumbers )==0{_acb .CurrentNumbers ,_fgde =_acb .Classer .TemplatesSize .GetSlice (uint64 (_egb )*uint64 (_gcf ));if !_fgde {_acb .Index ++;continue ;};_acb .N =0;};_aabg =len (_acb .CurrentNumbers );
for ;_acb .N < _aabg ;_acb .N ++{_dee =_acb .CurrentNumbers [_acb .N ];_fgff ,_bce =_acb .Classer .DilatedTemplates .GetBitmap (_dee );if _bce !=nil {_g .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _fgff .Width -2*JbAddedPixels ==_egb &&_fgff .Height -2*JbAddedPixels ==_gcf {return _dee ;};};_acb .Index ++;_acb .CurrentNumbers =nil ;};};func (_egfg Settings )Validate ()error {const _bgg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _egfg .Thresh < 0.4||_egfg .Thresh > 0.98{return _a .Error (_bgg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _egfg .WeightFactor < 0.0||_egfg .WeightFactor > 1.0{return _a .Error (_bgg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _egfg .RankHaus < 0.5||_egfg .RankHaus > 1.0{return _a .Error (_bgg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _egfg .SizeHaus < 1||_egfg .SizeHaus > 10{return _a .Error (_bgg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _egfg .Components {case _e .ComponentConn ,_e .ComponentCharacters ,_e .ComponentWords :default:return _a .Error (_bgg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_gf *Classer )addPageComponents (_aa *_e .Bitmap ,_aff *_e .Boxes ,_fda *_e .Bitmaps ,_dd int ,_fg Method )error {const _fc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _aa ==nil {return _a .Error (_fc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _aff ==nil ||_fda ==nil ||len (*_aff )==0{_g .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_aa );
return nil ;};var _ac error ;switch _fg {case RankHaus :_ac =_gf .classifyRankHaus (_aff ,_fda ,_dd );case Correlation :_ac =_gf .classifyCorrelation (_aff ,_fda ,_dd );default:_g .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_fg );
return _a .Error (_fc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ac !=nil {return _a .Wrap (_ac ,_fc ,"");};if _ac =_gf .getULCorners (_aa ,_aff );_ac !=nil {return _a .Wrap (_ac ,_fc ,"");
};_ddc :=len (*_aff );_gf .BaseIndex +=_ddc ;if _ac =_gf .ComponentsNumber .Add (_ddc );_ac !=nil {return _a .Wrap (_ac ,_fc ,"");};return nil ;};func _abg (_ca *_e .Bitmap ,_bd ,_gfbg ,_ee ,_ae int ,_fce *_e .Bitmap )(_de _b .Point ,_fab error ){const _fb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ca ==nil {return _de ,_a .Error (_fb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _fce ==nil {return _de ,_a .Error (_fb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_ed ,_bbc :=_fce .Width ,_fce .Height ;_ddb ,_afc :=_bd -_ee -JbAddedPixels ,_gfbg -_ae -JbAddedPixels ;_g .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bd ,_gfbg ,_ed ,_bbc ,_ddb ,_afc );
_bbe ,_fab :=_e .Rect (_ddb ,_afc ,_ed ,_bbc );if _fab !=nil {return _de ,_a .Wrap (_fab ,_fb ,"");};_egf ,_ ,_fab :=_ca .ClipRectangle (_bbe );if _fab !=nil {_g .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_bbe );
return _de ,_a .Wrap (_fab ,_fb ,"");};_bfba :=_e .New (_egf .Width ,_egf .Height );_fdc :=_f .MaxInt32 ;var _cac ,_eaa ,_afb ,_cec ,_add int ;for _cac =-1;_cac <=1;_cac ++{for _eaa =-1;_eaa <=1;_eaa ++{if _ ,_fab =_e .Copy (_bfba ,_egf );_fab !=nil {return _de ,_a .Wrap (_fab ,_fb ,"");
};if _fab =_bfba .RasterOperation (_eaa ,_cac ,_ed ,_bbc ,_e .PixSrcXorDst ,_fce ,0,0);_fab !=nil {return _de ,_a .Wrap (_fab ,_fb ,"");};_afb =_bfba .CountPixels ();if _afb < _fdc {_cec =_eaa ;_add =_cac ;_fdc =_afb ;};};};_de .X =_cec ;_de .Y =_add ;
return _de ,nil ;};