//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_d "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_a "math";);
func (_ead *Classer )classifyRankHouseNonOne (_fgf *_cb .Boxes ,_df ,_cae ,_gae *_cb .Bitmaps ,_cgc *_cb .Points ,_eaa *_f .NumSlice ,_ecb int )(_fdb error ){const _fga ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gda ,_dfa ,_cdb ,_cbcf float32 ;_aef ,_dbc ,_gcb int ;_cfeb ,_cfb ,_fgfe ,_ffeb ,_dff *_cb .Bitmap ;_cgg ,_ac bool ;);_dbeg :=_cb .MakePixelSumTab8 ();for _cade :=0;_cade < len (_df .Values );_cade ++{if _cfb ,_fdb =_cae .GetBitmap (_cade );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _aef ,_fdb =_eaa .GetInt (_cade );_fdb !=nil {_d .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cade ,_fdb );
};if _fgfe ,_fdb =_gae .GetBitmap (_cade );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gda ,_dfa ,_fdb =_cgc .GetGeometry (_cade );_fdb !=nil {return _g .Wrapf (_fdb ,_fga ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_gbae :=len (_ead .UndilatedTemplates .Values );_cgg =false ;_eeac :=_fb (_ead ,_cfb );for _gcb =_eeac .Next ();_gcb > -1;{if _ffeb ,_fdb =_ead .UndilatedTemplates .GetBitmap (_gcb );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _dbc ,_fdb =_ead .FgTemplates .GetInt (_gcb );_fdb !=nil {_d .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gcb ,_fdb );
};if _dff ,_fdb =_ead .DilatedTemplates .GetBitmap (_gcb );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cdb ,_cbcf ,_fdb =_ead .CentroidPointsTemplates .GetGeometry (_gcb );
_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_ac ,_fdb =_cb .RankHausTest (_cfb ,_fgfe ,_ffeb ,_dff ,_gda -_cdb ,_dfa -_cbcf ,MaxDiffWidth ,MaxDiffHeight ,_aef ,_dbc ,float32 (_ead .Settings .RankHaus ),_dbeg );
if _fdb !=nil {return _g .Wrap (_fdb ,_fga ,"");};if _ac {_cgg =true ;if _fdb =_ead .ClassIDs .Add (_gcb );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"");};if _fdb =_ead .ComponentPageNumbers .Add (_ecb );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"");};if _ead .Settings .KeepClassInstances {_bcb ,_edg :=_ead .ClassInstances .GetBitmaps (_gcb );
if _edg !=nil {return _g .Wrap (_edg ,_fga ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _cfeb ,_edg =_df .GetBitmap (_cade );_edg !=nil {return _g .Wrap (_edg ,_fga ,"\u0070i\u0078\u0061\u005b\u0069\u005d");
};_bcb .Values =append (_bcb .Values ,_cfeb );_efef ,_edg :=_fgf .Get (_cade );if _edg !=nil {return _g .Wrap (_edg ,_fga ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_bcb .Boxes =append (_bcb .Boxes ,_efef );};break ;};};if !_cgg {if _fdb =_ead .ClassIDs .Add (_gbae );
_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fdb =_ead .ComponentPageNumbers .Add (_ecb );_fdb !=nil {return _g .Wrap (_fdb ,_fga ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ffdg :=&_cb .Bitmaps {};_cfeb =_df .Values [_cade ];
_ffdg .AddBitmap (_cfeb );_acf ,_efb :=_cfeb .Width ,_cfeb .Height ;_ead .TemplatesSize .Add (uint64 (_acf )*uint64 (_efb ),_gbae );_gac ,_egg :=_fgf .Get (_cade );if _egg !=nil {return _g .Wrap (_egg ,_fga ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ffdg .AddBox (_gac );
_ead .ClassInstances .AddBitmaps (_ffdg );_ead .CentroidPointsTemplates .AddPoint (_gda ,_dfa );_ead .UndilatedTemplates .AddBitmap (_cfb );_ead .DilatedTemplates .AddBitmap (_fgfe );_ead .FgTemplates .AddInt (_aef );};};_ead .NumberOfClasses =len (_ead .UndilatedTemplates .Values );
return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _cb .Component ;Method Method ;};func _fb (_eed *Classer ,_caea *_cb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_caea .Width ,Height :_caea .Height ,Classer :_eed };
};type Method int ;const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_ag *Classer )ComputeLLCorners ()(_bf error ){const _ef ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ag .PtaUL ==nil {return _g .Error (_ef ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ce :=len (*_ag .PtaUL );_ag .PtaLL =&_cb .Points {};var (_ddg ,_ec float32 ;_gbb ,_fe int ;
_fd *_cb .Bitmap ;);for _aa :=0;_aa < _ce ;_aa ++{_ddg ,_ec ,_bf =_ag .PtaUL .GetGeometry (_aa );if _bf !=nil {_d .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bf );
return _g .Wrap (_bf ,_ef ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_gbb ,_bf =_ag .ClassIDs .Get (_aa );if _bf !=nil {_d .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_bf );
return _g .Wrap (_bf ,_ef ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fd ,_bf =_ag .UndilatedTemplates .GetBitmap (_gbb );if _bf !=nil {_d .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bf );
return _g .Wrap (_bf ,_ef ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fe =_fd .Height ;_ag .PtaLL .AddPoint (_ddg ,_ec +float32 (_fe ));};return nil ;};func Init (settings Settings )(*Classer ,error ){const _cba ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_cd :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_f .IntsMap {},TemplateAreas :&_f .IntSlice {},ComponentPageNumbers :&_f .IntSlice {},ClassIDs :&_f .IntSlice {},ComponentsNumber :&_f .IntSlice {},CentroidPoints :&_cb .Points {},CentroidPointsTemplates :&_cb .Points {},UndilatedTemplates :&_cb .Bitmaps {},DilatedTemplates :&_cb .Bitmaps {},ClassInstances :&_cb .BitmapsArray {},FgTemplates :&_f .NumSlice {}};
if _gc :=_cd .Settings .Validate ();_gc !=nil {return nil ,_g .Wrap (_gc ,_cba ,"");};return _cd ,nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func _ab (_ba *_cb .Bitmap ,_bga ,_aba ,_cad ,_aeae int ,_deb *_cb .Bitmap )(_bbe _c .Point ,_ddda error ){const _cegd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ba ==nil {return _bbe ,_g .Error (_cegd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _deb ==nil {return _bbe ,_g .Error (_cegd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_egb ,_ffd :=_deb .Width ,_deb .Height ;_bfb ,_bd :=_bga -_cad -JbAddedPixels ,_aba -_aeae -JbAddedPixels ;_d .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bga ,_aba ,_egb ,_ffd ,_bfb ,_bd );
_fgdc ,_ddda :=_cb .Rect (_bfb ,_bd ,_egb ,_ffd );if _ddda !=nil {return _bbe ,_g .Wrap (_ddda ,_cegd ,"");};_cbc ,_ ,_ddda :=_ba .ClipRectangle (_fgdc );if _ddda !=nil {_d .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_fgdc );
return _bbe ,_g .Wrap (_ddda ,_cegd ,"");};_ccg :=_cb .New (_cbc .Width ,_cbc .Height );_dda :=_a .MaxInt32 ;var _ecd ,_aad ,_ee ,_dgg ,_gcc int ;for _ecd =-1;_ecd <=1;_ecd ++{for _aad =-1;_aad <=1;_aad ++{if _ ,_ddda =_cb .Copy (_ccg ,_cbc );_ddda !=nil {return _bbe ,_g .Wrap (_ddda ,_cegd ,"");
};if _ddda =_ccg .RasterOperation (_aad ,_ecd ,_egb ,_ffd ,_cb .PixSrcXorDst ,_deb ,0,0);_ddda !=nil {return _bbe ,_g .Wrap (_ddda ,_cegd ,"");};_ee =_ccg .CountPixels ();if _ee < _dda {_dgg =_aad ;_gcc =_ecd ;_dda =_ee ;};};};_bbe .X =_dgg ;_bbe .Y =_gcc ;
return _bbe ,nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func DefaultSettings ()Settings {_gcf :=&Settings {};_gcf .SetDefault ();return *_gcf };
const (RankHaus Method =iota ;Correlation ;);func (_ddac *Classer )classifyCorrelation (_ddf *_cb .Boxes ,_bbd *_cb .Bitmaps ,_fda int )error {const _bc ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ddf ==nil {return _g .Error (_bc ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _bbd ==nil {return _g .Error (_bc ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cea :=len (_bbd .Values );if _cea ==0{_d .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_cgb ,_gf *_cb .Bitmap ;_bbc error ;);_eda :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_cea )};for _edc ,_fad :=range _bbd .Values {_gf ,_bbc =_fad .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bbc !=nil {return _g .Wrap (_bbc ,_bc ,"");};_eda .Values [_edc ]=_gf ;};_cge :=_ddac .FgTemplates ;_ad :=_cb .MakePixelSumTab8 ();_dge :=_cb .MakePixelCentroidTab8 ();_fc :=make ([]int ,_cea );_ceaa :=make ([][]int ,_cea );_bdd :=_cb .Points (make ([]_cb .Point ,_cea ));
_bag :=&_bdd ;var (_db ,_bfg int ;_gfg ,_abc ,_gga int ;_ffb ,_aag int ;_ecc byte ;);for _gbeb ,_gd :=range _eda .Values {_ceaa [_gbeb ]=make ([]int ,_gd .Height );_db =0;_bfg =0;_abc =(_gd .Height -1)*_gd .RowStride ;_gfg =0;for _aag =_gd .Height -1;_aag >=0;
_aag ,_abc =_aag -1,_abc -_gd .RowStride {_ceaa [_gbeb ][_aag ]=_gfg ;_gga =0;for _ffb =0;_ffb < _gd .RowStride ;_ffb ++{_ecc =_gd .Data [_abc +_ffb ];_gga +=_ad [_ecc ];_db +=_dge [_ecc ]+_ffb *8*_ad [_ecc ];};_gfg +=_gga ;_bfg +=_gga *_aag ;};_fc [_gbeb ]=_gfg ;
if _gfg > 0{(*_bag )[_gbeb ]=_cb .Point {X :float32 (_db )/float32 (_gfg ),Y :float32 (_bfg )/float32 (_gfg )};}else {(*_bag )[_gbeb ]=_cb .Point {X :float32 (_gd .Width )/float32 (2),Y :float32 (_gd .Height )/float32 (2)};};};if _bbc =_ddac .CentroidPoints .Add (_bag );
_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_cee ,_cbf ,_dbe int ;_aaa float64 ;_ffc ,_egf ,_ceec ,_gbf float32 ;_eaea ,_def _cb .Point ;_ceee bool ;_bfe *similarTemplatesFinder ;
_aggg int ;_af *_cb .Bitmap ;_gfd *_c .Rectangle ;_fge *_cb .Bitmaps ;);for _aggg ,_gf =range _eda .Values {_cbf =_fc [_aggg ];if _ffc ,_egf ,_bbc =_bag .GetGeometry (_aggg );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ceee =false ;_dba :=len (_ddac .UndilatedTemplates .Values );_bfe =_fb (_ddac ,_gf );for _bda :=_bfe .Next ();_bda > -1;{if _af ,_bbc =_ddac .UndilatedTemplates .GetBitmap (_bda );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _dbe ,_bbc =_cge .GetInt (_bda );_bbc !=nil {_d .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbc );};if _ceec ,_gbf ,_bbc =_ddac .CentroidPointsTemplates .GetGeometry (_bda );
_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _ddac .Settings .WeightFactor > 0.0{if _cee ,_bbc =_ddac .TemplateAreas .Get (_bda );_bbc !=nil {_d .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bbc );
};_aaa =_ddac .Settings .Thresh +(1.0-_ddac .Settings .Thresh )*_ddac .Settings .WeightFactor *float64 (_dbe )/float64 (_cee );}else {_aaa =_ddac .Settings .Thresh ;};_be ,_bge :=_cb .CorrelationScoreThresholded (_gf ,_af ,_cbf ,_dbe ,_eaea .X -_def .X ,_eaea .Y -_def .Y ,MaxDiffWidth ,MaxDiffHeight ,_ad ,_ceaa [_aggg ],float32 (_aaa ));
if _bge !=nil {return _g .Wrap (_bge ,_bc ,"");};if _ede {var (_gba ,_gbd float64 ;_gfa ,_bbdc int ;);_gba ,_bge =_cb .CorrelationScore (_gf ,_af ,_cbf ,_dbe ,_ffc -_ceec ,_egf -_gbf ,MaxDiffWidth ,MaxDiffHeight ,_ad );if _bge !=nil {return _g .Wrap (_bge ,_bc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gbd ,_bge =_cb .CorrelationScoreSimple (_gf ,_af ,_cbf ,_dbe ,_ffc -_ceec ,_egf -_gbf ,MaxDiffWidth ,MaxDiffHeight ,_ad );if _bge !=nil {return _g .Wrap (_bge ,_bc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gfa =int (_a .Sqrt (_gba *float64 (_cbf )*float64 (_dbe )));_bbdc =int (_a .Sqrt (_gbd *float64 (_cbf )*float64 (_dbe )));if (_gba >=_aaa )!=(_gbd >=_aaa ){return _g .Errorf (_bc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gfa ,_gba ,_gba >=_aaa ,_bbdc ,_gbd ,_gbd >=_aaa ,_gba -_gbd );
};if _gba >=_aaa !=_be {return _g .Errorf (_bc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_gba ,_gba *float64 (_cbf )*float64 (_dbe ),_gfa ,_aaa ,float32 (_aaa )*float32 (_cbf )*float32 (_dbe ),_be );
};};if _be {_ceee =true ;if _bge =_ddac .ClassIDs .Add (_bda );_bge !=nil {return _g .Wrap (_bge ,_bc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bge =_ddac .ComponentPageNumbers .Add (_fda );_bge !=nil {return _g .Wrap (_bge ,_bc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _ddac .Settings .KeepClassInstances {if _cgb ,_bge =_bbd .GetBitmap (_aggg );_bge !=nil {return _g .Wrap (_bge ,_bc ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fge ,_bge =_ddac .ClassInstances .GetBitmaps (_bda );
_bge !=nil {return _g .Wrap (_bge ,_bc ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fge .AddBitmap (_cgb );if _gfd ,_bge =_ddf .Get (_aggg );_bge !=nil {return _g .Wrap (_bge ,_bc ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fge .AddBox (_gfd );};break ;};};if !_ceee {if _bbc =_ddac .ClassIDs .Add (_dba );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbc =_ddac .ComponentPageNumbers .Add (_fda );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fge =&_cb .Bitmaps {};if _cgb ,_bbc =_bbd .GetBitmap (_aggg );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fge .AddBitmap (_cgb );_bagc ,_ggd :=_cgb .Width ,_cgb .Height ;_fdc :=uint64 (_ggd )*uint64 (_bagc );_ddac .TemplatesSize .Add (_fdc ,_dba );
if _gfd ,_bbc =_ddf .Get (_aggg );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fge .AddBox (_gfd );_ddac .ClassInstances .AddBitmaps (_fge );_ddac .CentroidPointsTemplates .AddPoint (_ffc ,_egf );_ddac .FgTemplates .AddInt (_cbf );
_ddac .UndilatedTemplates .AddBitmap (_cgb );_cee =(_gf .Width -2*JbAddedPixels )*(_gf .Height -2*JbAddedPixels );if _bbc =_ddac .TemplateAreas .Add (_cee );_bbc !=nil {return _g .Wrap (_bbc ,_bc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_ddac .NumberOfClasses =len (_ddac .UndilatedTemplates .Values );
return nil ;};func (_afg *Classer )classifyRankHouseOne (_fee *_cb .Boxes ,_beb ,_dec ,_afe *_cb .Bitmaps ,_decb *_cb .Points ,_bee int )(_aggf error ){const _bca ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bfbd ,_gff ,_dedd ,_ffe float32 ;_bgad int ;_gbad ,_gaa ,_ebe ,_gaaf ,_fac *_cb .Bitmap ;_bff ,_cdg bool ;);for _ccd :=0;_ccd < len (_beb .Values );_ccd ++{_gaa =_dec .Values [_ccd ];_ebe =_afe .Values [_ccd ];_bfbd ,_gff ,_aggf =_decb .GetGeometry (_ccd );
if _aggf !=nil {return _g .Wrapf (_aggf ,_bca ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bgd :=len (_afg .UndilatedTemplates .Values );_bff =false ;_afgg :=_fb (_afg ,_gaa );for _bgad =_afgg .Next ();_bgad > -1;
{_gaaf ,_aggf =_afg .UndilatedTemplates .GetBitmap (_bgad );if _aggf !=nil {return _g .Wrap (_aggf ,_bca ,"\u0062\u006d\u0033");};_fac ,_aggf =_afg .DilatedTemplates .GetBitmap (_bgad );if _aggf !=nil {return _g .Wrap (_aggf ,_bca ,"\u0062\u006d\u0034");
};_dedd ,_ffe ,_aggf =_afg .CentroidPointsTemplates .GetGeometry (_bgad );if _aggf !=nil {return _g .Wrap (_aggf ,_bca ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cdg ,_aggf =_cb .HausTest (_gaa ,_ebe ,_gaaf ,_fac ,_bfbd -_dedd ,_gff -_ffe ,MaxDiffWidth ,MaxDiffHeight );
if _aggf !=nil {return _g .Wrap (_aggf ,_bca ,"");};if _cdg {_bff =true ;if _aggf =_afg .ClassIDs .Add (_bgad );_aggf !=nil {return _g .Wrap (_aggf ,_bca ,"");};if _aggf =_afg .ComponentPageNumbers .Add (_bee );_aggf !=nil {return _g .Wrap (_aggf ,_bca ,"");
};if _afg .Settings .KeepClassInstances {_dae ,_ebeb :=_afg .ClassInstances .GetBitmaps (_bgad );if _ebeb !=nil {return _g .Wrap (_ebeb ,_bca ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gbad ,_ebeb =_beb .GetBitmap (_ccd );if _ebeb !=nil {return _g .Wrap (_ebeb ,_bca ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_dae .AddBitmap (_gbad );_aec ,_ebeb :=_fee .Get (_ccd );if _ebeb !=nil {return _g .Wrap (_ebeb ,_bca ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dae .AddBox (_aec );};break ;};};if !_bff {if _aggf =_afg .ClassIDs .Add (_bgd );_aggf !=nil {return _g .Wrap (_aggf ,_bca ,"");
};if _aggf =_afg .ComponentPageNumbers .Add (_bee );_aggf !=nil {return _g .Wrap (_aggf ,_bca ,"");};_gdd :=&_cb .Bitmaps {};_gbad ,_aggf =_beb .GetBitmap (_ccd );if _aggf !=nil {return _g .Wrap (_aggf ,_bca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gdd .Values =append (_gdd .Values ,_gbad );
_ccf ,_dc :=_gbad .Width ,_gbad .Height ;_afg .TemplatesSize .Add (uint64 (_dc )*uint64 (_ccf ),_bgd );_bba ,_efe :=_fee .Get (_ccd );if _efe !=nil {return _g .Wrap (_efe ,_bca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gdd .AddBox (_bba );_afg .ClassInstances .AddBitmaps (_gdd );
_afg .CentroidPointsTemplates .AddPoint (_bfbd ,_gff );_afg .UndilatedTemplates .AddBitmap (_gaa );_afg .DilatedTemplates .AddBitmap (_ebe );};};return nil ;};func (_bb *Classer )addPageComponents (_agg *_cb .Bitmap ,_ea *_cb .Boxes ,_ed *_cb .Bitmaps ,_ddd int ,_gbe Method )error {const _de ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _agg ==nil {return _g .Error (_de ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _ea ==nil ||_ed ==nil ||len (*_ea )==0{_d .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_agg );
return nil ;};var _ae error ;switch _gbe {case RankHaus :_ae =_bb .classifyRankHaus (_ea ,_ed ,_ddd );case Correlation :_ae =_bb .classifyCorrelation (_ea ,_ed ,_ddd );default:_d .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_gbe );
return _g .Error (_de ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ae !=nil {return _g .Wrap (_ae ,_de ,"");};if _ae =_bb .getULCorners (_agg ,_ea );_ae !=nil {return _g .Wrap (_ae ,_de ,"");
};_ca :=len (*_ea );_bb .BaseIndex +=_ca ;if _ae =_bb .ComponentsNumber .Add (_ca );_ae !=nil {return _g .Wrap (_ae ,_de ,"");};return nil ;};const JbAddedPixels =6;func (_eca *Classer )verifyMethod (_aea Method )error {if _aea !=RankHaus &&_aea !=Correlation {return _g .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_bdg *similarTemplatesFinder )Next ()int {var (_egga ,_fgfg ,_bcd ,_fgfea int ;_ceaag bool ;_dedc *_cb .Bitmap ;_gccc error ;);for {if _bdg .Index >=25{return -1;};_fgfg =_bdg .Width +TwoByTwoWalk [2*_bdg .Index ];_egga =_bdg .Height +TwoByTwoWalk [2*_bdg .Index +1];
if _egga < 1||_fgfg < 1{_bdg .Index ++;continue ;};if len (_bdg .CurrentNumbers )==0{_bdg .CurrentNumbers ,_ceaag =_bdg .Classer .TemplatesSize .GetSlice (uint64 (_fgfg )*uint64 (_egga ));if !_ceaag {_bdg .Index ++;continue ;};_bdg .N =0;};_bcd =len (_bdg .CurrentNumbers );
for ;_bdg .N < _bcd ;_bdg .N ++{_fgfea =_bdg .CurrentNumbers [_bdg .N ];_dedc ,_gccc =_bdg .Classer .DilatedTemplates .GetBitmap (_fgfea );if _gccc !=nil {_d .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _dedc .Width -2*JbAddedPixels ==_fgfg &&_dedc .Height -2*JbAddedPixels ==_egga {return _fgfea ;};};_bdg .Index ++;_bdg .CurrentNumbers =nil ;};};func (_dggf *Classer )classifyRankHaus (_eeb *_cb .Boxes ,_gbac *_cb .Bitmaps ,_gbdg int )error {const _egfe ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _eeb ==nil {return _g .Error (_egfe ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gbac ==nil {return _g .Error (_egfe ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_ccc :=len (_gbac .Values );if _ccc ==0{return _g .Error (_egfe ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_aed :=_gbac .CountPixels ();_dga :=_dggf .Settings .SizeHaus ;_ded :=_cb .SelCreateBrick (_dga ,_dga ,_dga /2,_dga /2,_cb .SelHit );
_fec :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_ccc )};_gfge :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_ccc )};var (_bec ,_cbe ,_eea *_cb .Bitmap ;_bdad error ;);for _bfa :=0;_bfa < _ccc ;_bfa ++{_bec ,_bdad =_gbac .GetBitmap (_bfa );if _bdad !=nil {return _g .Wrap (_bdad ,_egfe ,"");
};_cbe ,_bdad =_bec .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bdad !=nil {return _g .Wrap (_bdad ,_egfe ,"");};_eea ,_bdad =_cb .Dilate (nil ,_cbe ,_ded );if _bdad !=nil {return _g .Wrap (_bdad ,_egfe ,"");};
_fec .Values [_ccc ]=_cbe ;_gfge .Values [_ccc ]=_eea ;};_cfce ,_bdad :=_cb .Centroids (_fec .Values );if _bdad !=nil {return _g .Wrap (_bdad ,_egfe ,"");};if _bdad =_cfce .Add (_dggf .CentroidPoints );_bdad !=nil {_d .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _dggf .Settings .RankHaus ==1.0{_bdad =_dggf .classifyRankHouseOne (_eeb ,_gbac ,_fec ,_gfge ,_cfce ,_gbdg );}else {_bdad =_dggf .classifyRankHouseNonOne (_eeb ,_gbac ,_fec ,_gfge ,_cfce ,_aed ,_gbdg );};if _bdad !=nil {return _g .Wrap (_bdad ,_egfe ,"");
};return nil ;};func (_aca *Settings )SetDefault (){if _aca .MaxCompWidth ==0{switch _aca .Components {case _cb .ComponentConn :_aca .MaxCompWidth =MaxConnCompWidth ;case _cb .ComponentCharacters :_aca .MaxCompWidth =MaxCharCompWidth ;case _cb .ComponentWords :_aca .MaxCompWidth =MaxWordCompWidth ;
};};if _aca .MaxCompHeight ==0{_aca .MaxCompHeight =MaxCompHeight ;};if _aca .Thresh ==0.0{_aca .Thresh =0.9;};if _aca .WeightFactor ==0.0{_aca .WeightFactor =0.75;};if _aca .RankHaus ==0.0{_aca .RankHaus =0.97;};if _aca .SizeHaus ==0{_aca .SizeHaus =2;
};};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_e *Classer )AddPage (inputPage *_cb .Bitmap ,pageNumber int ,method Method )(_da error ){const _gb ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_e .Widths [pageNumber ]=inputPage .Width ;
_e .Heights [pageNumber ]=inputPage .Height ;if _da =_e .verifyMethod (method );_da !=nil {return _g .Wrap (_da ,_gb ,"");};_dd ,_eg ,_da :=inputPage .GetComponents (_e .Settings .Components ,_e .Settings .MaxCompWidth ,_e .Settings .MaxCompHeight );if _da !=nil {return _g .Wrap (_da ,_gb ,"");
};_d .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dd );if _da =_e .addPageComponents (inputPage ,_eg ,_dd ,pageNumber ,method );_da !=nil {return _g .Wrap (_da ,_gb ,"");};return nil ;};type Classer struct{BaseIndex int ;
Settings Settings ;ComponentsNumber *_f .IntSlice ;TemplateAreas *_f .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_cb .BitmapsArray ;UndilatedTemplates *_cb .Bitmaps ;DilatedTemplates *_cb .Bitmaps ;TemplatesSize _f .IntsMap ;
FgTemplates *_f .NumSlice ;CentroidPoints *_cb .Points ;CentroidPointsTemplates *_cb .Points ;ClassIDs *_f .IntSlice ;ComponentPageNumbers *_f .IntSlice ;PtaUL *_cb .Points ;PtaLL *_cb .Points ;};func (_cda Settings )Validate ()error {const _afd ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _cda .Thresh < 0.4||_cda .Thresh > 0.98{return _g .Error (_afd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _cda .WeightFactor < 0.0||_cda .WeightFactor > 1.0{return _g .Error (_afd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _cda .RankHaus < 0.5||_cda .RankHaus > 1.0{return _g .Error (_afd ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _cda .SizeHaus < 1||_cda .SizeHaus > 10{return _g .Error (_afd ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _cda .Components {case _cb .ComponentConn ,_cb .ComponentCharacters ,_cb .ComponentWords :default:return _g .Error (_afd ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};var _ede bool ;func (_edd *Classer )getULCorners (_eae *_cb .Bitmap ,_cf *_cb .Boxes )error {const _fg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _eae ==nil {return _g .Error (_fg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _cf ==nil {return _g .Error (_fg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _edd .PtaUL ==nil {_edd .PtaUL =&_cb .Points {};};_caf :=len (*_cf );var (_cg ,_fgd ,_cfe ,_eb int ;_dg ,_ceg ,_cef ,_gg float32 ;_ebc error ;_cfc *_c .Rectangle ;
_cc *_cb .Bitmap ;_dad _c .Point ;);for _cfec :=0;_cfec < _caf ;_cfec ++{_cg =_edd .BaseIndex +_cfec ;if _dg ,_ceg ,_ebc =_edd .CentroidPoints .GetGeometry (_cg );_ebc !=nil {return _g .Wrap (_ebc ,_fg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _fgd ,_ebc =_edd .ClassIDs .Get (_cg );_ebc !=nil {return _g .Wrap (_ebc ,_fg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _cef ,_gg ,_ebc =_edd .CentroidPointsTemplates .GetGeometry (_fgd );_ebc !=nil {return _g .Wrap (_ebc ,_fg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ff :=_cef -_dg ;_ebg :=_gg -_ceg ;if _ff >=0{_cfe =int (_ff +0.5);}else {_cfe =int (_ff -0.5);};if _ebg >=0{_eb =int (_ebg +0.5);}else {_eb =int (_ebg -0.5);};if _cfc ,_ebc =_cf .Get (_cfec );_ebc !=nil {return _g .Wrap (_ebc ,_fg ,"");};_ga ,_bg :=_cfc .Min .X ,_cfc .Min .Y ;
_cc ,_ebc =_edd .UndilatedTemplates .GetBitmap (_fgd );if _ebc !=nil {return _g .Wrap (_ebc ,_fg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dad ,_ebc =_ab (_eae ,_ga ,_bg ,_cfe ,_eb ,_cc );if _ebc !=nil {return _g .Wrap (_ebc ,_fg ,"");};_edd .PtaUL .AddPoint (float32 (_ga -_cfe +_dad .X ),float32 (_bg -_eb +_dad .Y ));};return nil ;};