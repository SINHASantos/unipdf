//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_a "bytes";_b "fmt";_g "github.com/unidoc/unichart/render";_e "github.com/unidoc/unipdf/v4/common";_bd "github.com/unidoc/unipdf/v4/contentstream";_ad "github.com/unidoc/unipdf/v4/contentstream/draw";_gf "github.com/unidoc/unipdf/v4/core";
_db "github.com/unidoc/unipdf/v4/model";_fc "image/color";_de "io";_f "math";);func (_ge *Renderer )Circle (radius float64 ,x ,y int ){_gfe :=radius ;if _ag :=_ge ._af ;_ag !=0{_gfe -=_ag /2;};_cbb :=_gfe *0.551784;_gg :=_ad .CubicBezierPath {Curves :[]_ad .CubicBezierCurve {_ad .NewCubicBezierCurve (-_gfe ,0,-_gfe ,_cbb ,-_cbb ,_gfe ,0,_gfe ),_ad .NewCubicBezierCurve (0,_gfe ,_cbb ,_gfe ,_gfe ,_cbb ,_gfe ,0),_ad .NewCubicBezierCurve (_gfe ,0,_gfe ,-_cbb ,_cbb ,-_gfe ,0,-_gfe ),_ad .NewCubicBezierCurve (0,-_gfe ,-_cbb ,-_gfe ,-_gfe ,-_cbb ,-_gfe ,0)}};
if _cea :=_ge ._af ;_cea !=0{_gg =_gg .Offset (_cea /2,_cea /2);};_gg =_gg .Offset (float64 (x ),float64 (y ));_ad .DrawBezierPathWithCreator (_gg ,_ge ._bc );};func _ec (_egf _fc .Color )(float64 ,float64 ,float64 ,float64 ){_afg ,_cag ,_eac ,_bacg :=_cd (_egf );
return float64 (_afg )/255,float64 (_cag )/255,float64 (_eac )/255,float64 (_bacg )/255;};func (_ada *Renderer )Save (w _de .Writer )error {if w ==nil {return nil ;};_ ,_fbc :=_de .Copy (w ,_a .NewBuffer (_ada ._bc .Bytes ()));return _fbc ;};func NewRenderer (cc *_bd .ContentCreator ,res *_db .PdfPageResources )func (int ,int )(_g .Renderer ,error ){return func (_dbf ,_cg int )(_g .Renderer ,error ){_ac :=&Renderer {_c :_dbf ,_ce :_cg ,_ae :72,_bc :cc ,_ab :res ,_adc :map[*_db .PdfFont ]_gf .PdfObjectName {}};
_ac .ResetStyle ();return _ac ,nil ;};};func (_ee *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_ccad (2.0*_f .Pi -startAngle );deltaAngle =_ccad (-deltaAngle );_bbe ,_acd :=deltaAngle ,1;if _f .Abs (deltaAngle )> 90.0{_acd =int (_f .Ceil (_f .Abs (deltaAngle )/90.0));
_bbe =deltaAngle /float64 (_acd );};var (_fcf =_efa (_bbe /2);_bad =_f .Abs (4.0/3.0*(1.0-_f .Cos (_fcf ))/_f .Sin (_fcf ));_fb =float64 (cx );_gbd =float64 (cy ););for _cc :=0;_cc < _acd ;_cc ++{_ea :=_efa (startAngle +float64 (_cc )*_bbe );_ca :=_efa (startAngle +float64 (_cc +1)*_bbe );
_gbda :=_f .Cos (_ea );_deg :=_f .Cos (_ca );_daa :=_f .Sin (_ea );_bcb :=_f .Sin (_ca );var _dba []float64 ;if _bbe > 0{_dba =[]float64 {_fb +rx *_gbda ,_gbd -ry *_daa ,_fb +rx *(_gbda -_bad *_daa ),_gbd -ry *(_daa +_bad *_gbda ),_fb +rx *(_deg +_bad *_bcb ),_gbd -ry *(_bcb -_bad *_deg ),_fb +rx *_deg ,_gbd -ry *_bcb };
}else {_dba =[]float64 {_fb +rx *_gbda ,_gbd -ry *_daa ,_fb +rx *(_gbda +_bad *_daa ),_gbd -ry *(_daa -_bad *_gbda ),_fb +rx *(_deg -_bad *_bcb ),_gbd -ry *(_bcb +_bad *_deg ),_fb +rx *_deg ,_gbd -ry *_bcb };};if _cc ==0{_ee ._bc .Add_l (_dba [0],_dba [1]);
};_ee ._bc .Add_c (_dba [2],_dba [3],_dba [4],_dba [5],_dba [6],_dba [7]);};};func _efa (_efc float64 )float64 {return _efc *_f .Pi /180.0};func (_fca *Renderer )GetDPI ()float64 {return _fca ._ae };func (_bb *Renderer )SetDPI (dpi float64 ){_bb ._ae =dpi };
func (_cca *Renderer )getTextWidth (_adbg string )float64 {var _cbf float64 ;for _ ,_gga :=range _adbg {_gae ,_bee :=_cca ._df .GetRuneMetrics (_gga );if !_bee {_e .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_gga );
};_cbf +=_gae .Wx ;};return _cca ._fa *_cbf /1000.0;};func (_agd *Renderer )wrapText (_fgf string )[]string {var (_eg []string ;_aaf []rune ;);for _ ,_aga :=range _fgf {if _aga =='\n'{_eg =append (_eg ,string (_aaf ));_aaf =[]rune {};continue ;};_aaf =append (_aaf ,_aga );
};if len (_aaf )> 0{_eg =append (_eg ,string (_aaf ));};return _eg ;};func (_adb *Renderer )FillStroke (){_adb ._bc .Add_B ()};func (_bcbb *Renderer )SetFontColor (color _fc .Color ){_bcbb ._add =color };func (_dff *Renderer )Fill (){_dff ._bc .Add_f ()};
func (_dcf *Renderer )MeasureText (text string )_g .Box {_be :=_dcf ._fa ;_dbc ,_efb :=_dcf ._df .GetFontDescriptor ();if _efb !=nil {_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_feeg ,_ffd :=_dbc .GetCapHeight ();if _ffd !=nil {_e .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ffd );
}else {_be =_feeg /1000.0*_dcf ._fa ;};};var (_gde =0.0;_fbe =_dcf .wrapText (text ););for _ ,_dgc :=range _fbe {if _bade :=_dcf .getTextWidth (_dgc );_bade > _gde {_gde =_bade ;};};_bef :=_g .NewBox (0,0,int (_gde ),int (_be ));if _dec :=_dcf ._abe ;_dec !=0{_bef =_bef .Corners ().Rotate (_dec ).Box ();
};return _bef ;};func (_aa *Renderer )LineTo (x ,y int ){_aa ._bc .Add_l (float64 (x ),float64 (y ))};func (_dbb *Renderer )ResetStyle (){_dbb .SetFillColor (_fc .Black );_dbb .SetStrokeColor (_fc .Transparent );_dbb .SetStrokeWidth (0);_dbb .SetFont (_db .DefaultFont ());
_dbb .SetFontColor (_fc .Black );_dbb .SetFontSize (12);_dbb .SetTextRotation (0);};func (_fd *Renderer )SetTextRotation (radians float64 ){_fd ._abe =_ccad (-radians )};func (_ccb *Renderer )SetFont (font _g .Font ){_bg ,_dd :=font .(*_db .PdfFont );if !_dd {_e .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");
return ;};_bcd ,_dd :=_ccb ._adc [_bg ];if !_dd {_bcd =_cdf ("\u0046\u006f\u006e\u0074",1,_ccb ._ab .HasFontByName );if _fgb :=_ccb ._ab .SetFontByName (_bcd ,_bg .ToPdfObject ());_fgb !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_bg );
};_ccb ._adc [_bg ]=_bcd ;};_ccb ._bc .Add_Tf (_bcd ,_ccb ._fa );_ccb ._df =_bg ;};func _cdf (_cdg string ,_dbcg int ,_agf func (_gf .PdfObjectName )bool )_gf .PdfObjectName {_aba :=_gf .PdfObjectName (_b .Sprintf ("\u0025\u0073\u0025\u0064",_cdg ,_dbcg ));
for _dfb :=_dbcg ;_agf (_aba );{_dfb ++;_aba =_gf .PdfObjectName (_b .Sprintf ("\u0025\u0073\u0025\u0064",_cdg ,_dfb ));};return _aba ;};func (_gd *Renderer )SetStrokeDashArray (dashArray []float64 ){_ga :=make ([]int64 ,len (dashArray ));for _afb ,_ef :=range dashArray {_ga [_afb ]=int64 (_ef );
};_gd ._bc .Add_d (_ga ,0);};func _cd (_ggc _fc .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_cec ,_gbdg ,_efg ,_ddc :=_ggc .RGBA ();return uint8 (_cec >>8),uint8 (_gbdg >>8),uint8 (_efg >>8),uint8 (_ddc >>8);};func (_aab *Renderer )Stroke (){_aab ._bc .Add_S ()};
func (_fcg *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_fcg ._bc .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_fee *Renderer )SetFillColor (color _fc .Color ){_fee ._ed =color ;_afe ,_dg ,_bac ,_ :=_ec (color );_fee ._bc .Add_rg (_afe ,_dg ,_bac );
};func (_bbc *Renderer )MoveTo (x ,y int ){_bbc ._bc .Add_m (float64 (x ),float64 (y ))};func (_cce *Renderer )SetFontSize (size float64 ){_cce ._fa =size };func _ccad (_gcg float64 )float64 {return _gcg *180/_f .Pi };func (_fe *Renderer )SetClassName (name string ){};
func (_fcb *Renderer )SetStrokeWidth (width float64 ){_fcb ._af =width ;_fcb ._bc .Add_w (width )};func (_gc *Renderer )SetStrokeColor (color _fc .Color ){_gc ._gb =color ;_fg ,_ba ,_ff ,_ :=_ec (color );_gc ._bc .Add_RG (_fg ,_ba ,_ff );};func (_cb *Renderer )Close (){_cb ._bc .Add_h ()};
func (_ded *Renderer )Text (text string ,x ,y int ){_ded ._bc .Add_q ();_ded .SetFont (_ded ._df );_bag ,_bga ,_dc ,_ :=_ec (_ded ._add );_ded ._bc .Add_rg (_bag ,_bga ,_dc );_ded ._bc .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _ccc :=_ded ._abe ;
_ccc !=0{_ded ._bc .RotateDeg (_ccc );};_ded ._bc .Add_BT ().Add_TL (_ded ._fa );var (_dcg =_ded ._df .Encoder ();_dbd =_ded .wrapText (text );_cbd =len (_dbd ););for _gag ,_acc :=range _dbd {_ded ._bc .Add_TJ (_gf .MakeStringFromBytes (_dcg .Encode (_acc )));
if _gag !=_cbd -1{_ded ._bc .Add_Tstar ();};};_ded ._bc .Add_ET ();_ded ._bc .Add_Q ();};func (_eed *Renderer )ClearTextRotation (){_eed ._abe =0};type Renderer struct{_c int ;_ce int ;_ae float64 ;_bc *_bd .ContentCreator ;_ab *_db .PdfPageResources ;
_ed _fc .Color ;_gb _fc .Color ;_af float64 ;_df *_db .PdfFont ;_fa float64 ;_add _fc .Color ;_abe float64 ;_adc map[*_db .PdfFont ]_gf .PdfObjectName ;};