//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_e "bytes";_d "fmt";_a "github.com/unidoc/unichart/render";_bf "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/contentstream";_bg "github.com/unidoc/unipdf/v3/contentstream/draw";_dd "github.com/unidoc/unipdf/v3/core";
_bcc "github.com/unidoc/unipdf/v3/model";_g "image/color";_bc "io";_ba "math";);func (_ea *Renderer )SetDPI (dpi float64 ){_ea ._efb =dpi };func _ecd (_efd _g .Color )(float64 ,float64 ,float64 ,float64 ){_cgdc ,_dfce ,_fda ,_dgf :=_ga (_efd );return float64 (_cgdc )/255,float64 (_dfce )/255,float64 (_fda )/255,float64 (_dgf )/255;
};func (_gd *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_ca (2.0*_ba .Pi -startAngle );deltaAngle =_ca (-deltaAngle );_cef ,_fb :=deltaAngle ,1;if _ba .Abs (deltaAngle )> 90.0{_fb =int (_ba .Ceil (_ba .Abs (deltaAngle )/90.0));
_cef =deltaAngle /float64 (_fb );};var (_cg =_daff (_cef /2);_ae =_ba .Abs (4.0/3.0*(1.0-_ba .Cos (_cg ))/_ba .Sin (_cg ));_fca =float64 (cx );_gde =float64 (cy ););for _aad :=0;_aad < _fb ;_aad ++{_bcfa :=_daff (startAngle +float64 (_aad )*_cef );_efe :=_daff (startAngle +float64 (_aad +1)*_cef );
_dab :=_ba .Cos (_bcfa );_fa :=_ba .Cos (_efe );_ec :=_ba .Sin (_bcfa );_aca :=_ba .Sin (_efe );var _dg []float64 ;if _cef > 0{_dg =[]float64 {_fca +rx *_dab ,_gde -ry *_ec ,_fca +rx *(_dab -_ae *_ec ),_gde -ry *(_ec +_ae *_dab ),_fca +rx *(_fa +_ae *_aca ),_gde -ry *(_aca -_ae *_fa ),_fca +rx *_fa ,_gde -ry *_aca };
}else {_dg =[]float64 {_fca +rx *_dab ,_gde -ry *_ec ,_fca +rx *(_dab +_ae *_ec ),_gde -ry *(_ec -_ae *_dab ),_fca +rx *(_fa -_ae *_aca ),_gde -ry *(_aca +_ae *_fa ),_fca +rx *_fa ,_gde -ry *_aca };};if _aad ==0{_gd ._de .Add_l (_dg [0],_dg [1]);};_gd ._de .Add_c (_dg [2],_dg [3],_dg [4],_dg [5],_dg [6],_dg [7]);
};};func _gga (_beb string ,_feb int ,_gec func (_dd .PdfObjectName )bool )_dd .PdfObjectName {_gea :=_dd .PdfObjectName (_d .Sprintf ("\u0025\u0073\u0025\u0064",_beb ,_feb ));for _gbe :=_feb ;_gec (_gea );{_gbe ++;_gea =_dd .PdfObjectName (_d .Sprintf ("\u0025\u0073\u0025\u0064",_beb ,_gbe ));
};return _gea ;};func (_gc *Renderer )FillStroke (){_gc ._de .Add_B ()};func (_db *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_db ._de .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_be *Renderer )SetFont (font _a .Font ){_bed ,_gf :=font .(*_bcc .PdfFont );
if !_gf {_bf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_ecb ,_gf :=_be ._c [_bed ];if !_gf {_ecb =_gga ("\u0046\u006f\u006e\u0074",1,_be ._bcf .HasFontByName );
if _cbe :=_be ._bcf .SetFontByName (_ecb ,_bed .ToPdfObject ());_cbe !=nil {_bf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_bed );
};_be ._c [_bed ]=_ecb ;};_be ._de .Add_Tf (_ecb ,_be ._gge );_be ._ac =_bed ;};func (_gcd *Renderer )Text (text string ,x ,y int ){_gcd ._de .Add_q ();_gcd .SetFont (_gcd ._ac );_cgd ,_fff ,_fcf ,_ :=_ecd (_gcd ._fc );_gcd ._de .Add_rg (_cgd ,_fff ,_fcf );
_gcd ._de .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _efa :=_gcd ._dea ;_efa !=0{_gcd ._de .RotateDeg (_efa );};_gcd ._de .Add_BT ().Add_TL (_gcd ._gge );var (_cc =_gcd ._ac .Encoder ();_ag =_gcd .wrapText (text );_ecc =len (_ag ););for _agc ,_dbf :=range _ag {_gcd ._de .Add_TJ (_dd .MakeStringFromBytes (_cc .Encode (_dbf )));
if _agc !=_ecc -1{_gcd ._de .Add_Tstar ();};};_gcd ._de .Add_ET ();_gcd ._de .Add_Q ();};func NewRenderer (cc *_gb .ContentCreator ,res *_bcc .PdfPageResources )func (int ,int )(_a .Renderer ,error ){return func (_ff ,_ge int )(_a .Renderer ,error ){_fcg :=&Renderer {_dc :_ff ,_ef :_ge ,_efb :72,_de :cc ,_bcf :res ,_c :map[*_bcc .PdfFont ]_dd .PdfObjectName {}};
_fcg .ResetStyle ();return _fcg ,nil ;};};func (_cde *Renderer )SetFontSize (size float64 ){_cde ._gge =size };func (_fgd *Renderer )SetStrokeWidth (width float64 ){_fgd ._bag =width ;_fgd ._de .Add_w (width )};func (_ace *Renderer )Circle (radius float64 ,x ,y int ){_fe :=radius ;
if _cefd :=_ace ._bag ;_cefd !=0{_fe -=_cefd /2;};_bab :=_fe *0.551784;_bba :=_bg .CubicBezierPath {Curves :[]_bg .CubicBezierCurve {_bg .NewCubicBezierCurve (-_fe ,0,-_fe ,_bab ,-_bab ,_fe ,0,_fe ),_bg .NewCubicBezierCurve (0,_fe ,_bab ,_fe ,_fe ,_bab ,_fe ,0),_bg .NewCubicBezierCurve (_fe ,0,_fe ,-_bab ,_bab ,-_fe ,0,-_fe ),_bg .NewCubicBezierCurve (0,-_fe ,-_bab ,-_fe ,-_fe ,-_bab ,-_fe ,0)}};
if _cff :=_ace ._bag ;_cff !=0{_bba =_bba .Offset (_cff /2,_cff /2);};_bba =_bba .Offset (float64 (x ),float64 (y ));_bg .DrawBezierPathWithCreator (_bba ,_ace ._de );};func (_dfc *Renderer )MoveTo (x ,y int ){_dfc ._de .Add_m (float64 (x ),float64 (y ))};
func (_adf *Renderer )Close (){_adf ._de .Add_h ()};func _ga (_gag _g .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_egf ,_abc ,_af ,_cfc :=_gag .RGBA ();return uint8 (_egf >>8),uint8 (_abc >>8),uint8 (_af >>8),uint8 (_cfc >>8);};func (_ade *Renderer )Fill (){_ade ._de .Add_f ()};
func (_adc *Renderer )getTextWidth (_cgg string )float64 {var _cfff float64 ;for _ ,_cggg :=range _cgg {_acag ,_ddg :=_adc ._ac .GetRuneMetrics (_cggg );if !_ddg {_bf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_cggg );
};_cfff +=_acag .Wx ;};return _adc ._gge *_cfff /1000.0;};func (_ebd *Renderer )ClearTextRotation (){_ebd ._dea =0};func _ca (_cdf float64 )float64 {return _cdf *180/_ba .Pi };func (_bae *Renderer )Save (w _bc .Writer )error {if w ==nil {return nil ;};
_ ,_efg :=_bc .Copy (w ,_e .NewBuffer (_bae ._de .Bytes ()));return _efg ;};func (_cbec *Renderer )SetFontColor (color _g .Color ){_cbec ._fc =color };func (_bd *Renderer )Stroke (){_bd ._de .Add_S ()};func (_eca *Renderer )SetTextRotation (radians float64 ){_eca ._dea =_ca (-radians )};
func (_fg *Renderer )SetClassName (name string ){};func (_da *Renderer )SetStrokeDashArray (dashArray []float64 ){_cd :=make ([]int64 ,len (dashArray ));for _eb ,_cda :=range dashArray {_cd [_eb ]=int64 (_cda );};_da ._de .Add_d (_cd ,0);};func (_fce *Renderer )LineTo (x ,y int ){_fce ._de .Add_l (float64 (x ),float64 (y ))};
func (_fga *Renderer )wrapText (_fee string )[]string {var (_ed []string ;_deac []rune ;);for _ ,_faf :=range _fee {if _faf =='\n'{_ed =append (_ed ,string (_deac ));_deac =[]rune {};continue ;};_deac =append (_deac ,_faf );};if len (_deac )> 0{_ed =append (_ed ,string (_deac ));
};return _ed ;};func _daff (_gce float64 )float64 {return _gce *_ba .Pi /180.0};func (_ce *Renderer )ResetStyle (){_ce .SetFillColor (_g .Black );_ce .SetStrokeColor (_g .Transparent );_ce .SetStrokeWidth (0);_ce .SetFont (_bcc .DefaultFont ());_ce .SetFontColor (_g .Black );
_ce .SetFontSize (12);_ce .SetTextRotation (0);};func (_baa *Renderer )SetStrokeColor (color _g .Color ){_baa ._gg =color ;_eg ,_bgb ,_bgc ,_ :=_ecd (color );_baa ._de .Add_RG (_eg ,_bgb ,_bgc );};func (_bb *Renderer )GetDPI ()float64 {return _bb ._efb };
type Renderer struct{_dc int ;_ef int ;_efb float64 ;_de *_gb .ContentCreator ;_bcf *_bcc .PdfPageResources ;_f _g .Color ;_gg _g .Color ;_bag float64 ;_ac *_bcc .PdfFont ;_gge float64 ;_fc _g .Color ;_dea float64 ;_c map[*_bcc .PdfFont ]_dd .PdfObjectName ;
};func (_bbb *Renderer )SetFillColor (color _g .Color ){_bbb ._f =color ;_cb ,_cf ,_ad ,_ :=_ecd (color );_bbb ._de .Add_rg (_cb ,_cf ,_ad );};func (_ab *Renderer )MeasureText (text string )_a .Box {_gfe :=_ab ._gge ;_aab ,_fac :=_ab ._ac .GetFontDescriptor ();
if _fac !=nil {_bf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");}else {_cge ,_ffe :=_aab .GetCapHeight ();
if _ffe !=nil {_bf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ffe );
}else {_gfe =_cge /1000.0*_ab ._gge ;};};var (_agg =0.0;_beg =_ab .wrapText (text ););for _ ,_aaf :=range _beg {if _efba :=_ab .getTextWidth (_aaf );_efba > _agg {_agg =_efba ;};};_daf :=_a .NewBox (0,0,int (_agg ),int (_gfe ));if _dbd :=_ab ._dea ;_dbd !=0{_daf =_daf .Corners ().Rotate (_dbd ).Box ();
};return _daf ;};