//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_a "bytes";_c "fmt";_b "github.com/unidoc/unichart/render";_cc "github.com/unidoc/unipdf/v3/common";_ed "github.com/unidoc/unipdf/v3/contentstream";_gag "github.com/unidoc/unipdf/v3/contentstream/draw";_bc "github.com/unidoc/unipdf/v3/core";
_bg "github.com/unidoc/unipdf/v3/model";_ga "image/color";_e "io";_gg "math";);func (_af *Renderer )SetStrokeDashArray (dashArray []float64 ){_bb :=make ([]int64 ,len (dashArray ));for _caa ,_efa :=range dashArray {_bb [_caa ]=int64 (_efa );};_af ._fe .Add_d (_bb ,0);
};func (_fgc *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_fgc ._fe .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_ccg *Renderer )FillStroke (){_ccg ._fe .Add_B ()};func (_eeg *Renderer )SetFontSize (size float64 ){_eeg ._ae =size };
func (_eec *Renderer )MoveTo (x ,y int ){_eec ._fe .Add_m (float64 (x ),float64 (y ))};func (_ggb *Renderer )SetFontColor (color _ga .Color ){_ggb ._gae =color };func (_bge *Renderer )Stroke (){_bge ._fe .Add_S ()};func _dfd (_dcg string ,_bfc int ,_edee func (_bc .PdfObjectName )bool )_bc .PdfObjectName {_gda :=_bc .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_dcg ,_bfc ));
for _eea :=_bfc ;_edee (_gda );{_eea ++;_gda =_bc .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_dcg ,_eea ));};return _gda ;};func (_bcd *Renderer )SetDPI (dpi float64 ){_bcd ._ff =dpi };func _bdag (_bga float64 )float64 {return _bga *180/_gg .Pi };
func (_aa *Renderer )GetDPI ()float64 {return _aa ._ff };func (_dc *Renderer )SetStrokeColor (color _ga .Color ){_dc ._ce =color ;_fag ,_fc ,_gc ,_ :=_cae (color );_dc ._fe .Add_RG (_fag ,_fc ,_gc );};func (_bed *Renderer )ClearTextRotation (){_bed ._ceg =0};
func (_fcc *Renderer )wrapText (_dad string )[]string {var (_df []string ;_gf []rune ;);for _ ,_eag :=range _dad {if _eag =='\n'{_df =append (_df ,string (_gf ));_gf =[]rune {};continue ;};_gf =append (_gf ,_eag );};if len (_gf )> 0{_df =append (_df ,string (_gf ));
};return _df ;};func (_dg *Renderer )LineTo (x ,y int ){_dg ._fe .Add_l (float64 (x ),float64 (y ))};func (_geg *Renderer )SetFont (font _b .Font ){_cfg ,_dea :=font .(*_bg .PdfFont );if !_dea {_cc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");
return ;};_db ,_dea :=_geg ._fee [_cfg ];if !_dea {_db =_dfd ("\u0046\u006f\u006e\u0074",1,_geg ._ge .HasFontByName );if _cde :=_geg ._ge .SetFontByName (_db ,_cfg .ToPdfObject ());_cde !=nil {_cc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cfg );
};_geg ._fee [_cfg ]=_db ;};_geg ._fe .Add_Tf (_db ,_geg ._ae );_geg ._cg =_cfg ;};func (_bd *Renderer )Text (text string ,x ,y int ){_bd ._fe .Add_q ();_bd .SetFont (_bd ._cg );_daf ,_cga ,_fd ,_ :=_cae (_bd ._gae );_bd ._fe .Add_rg (_daf ,_cga ,_fd );
_bd ._fe .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _fed :=_bd ._ceg ;_fed !=0{_bd ._fe .RotateDeg (_fed );};_bd ._fe .Add_BT ().Add_TL (_bd ._ae );var (_bae =_bd ._cg .Encoder ();_baa =_bd .wrapText (text );_ccc =len (_baa ););for _bef ,_fgg :=range _baa {_bd ._fe .Add_TJ (_bc .MakeStringFromBytes (_bae .Encode (_fgg )));
if _bef !=_ccc -1{_bd ._fe .Add_Tstar ();};};_bd ._fe .Add_ET ();_bd ._fe .Add_Q ();};func (_gd *Renderer )SetStrokeWidth (width float64 ){_gd ._da =width ;_gd ._fe .Add_w (width )};func (_eecc *Renderer )SetTextRotation (radians float64 ){_eecc ._ceg =_bdag (-radians )};
func (_bad *Renderer )Save (w _e .Writer )error {if w ==nil {return nil ;};_ ,_dgc :=_e .Copy (w ,_a .NewBuffer (_bad ._fe .Bytes ()));return _dgc ;};func (_bbac *Renderer )Fill (){_bbac ._fe .Add_f ()};func (_ffa *Renderer )MeasureText (text string )_b .Box {_eg :=_ffa ._ae ;
_gec ,_gdf :=_ffa ._cg .GetFontDescriptor ();if _gdf !=nil {_cc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_dbc ,_ede :=_gec .GetCapHeight ();if _ede !=nil {_cc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ede );
}else {_eg =_dbc /1000.0*_ffa ._ae ;};};var (_bdg =0.0;_ebb =_ffa .wrapText (text ););for _ ,_abe :=range _ebb {if _bde :=_ffa .getTextWidth (_abe );_bde > _bdg {_bdg =_bde ;};};_ac :=_b .NewBox (0,0,int (_bdg ),int (_eg ));if _ded :=_ffa ._ceg ;_ded !=0{_ac =_ac .Corners ().Rotate (_ded ).Box ();
};return _ac ;};func (_fcf *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_bdag (2.0*_gg .Pi -startAngle );deltaAngle =_bdag (-deltaAngle );_gaga ,_eb :=deltaAngle ,1;if _gg .Abs (deltaAngle )> 90.0{_eb =int (_gg .Ceil (_gg .Abs (deltaAngle )/90.0));
_gaga =deltaAngle /float64 (_eb );};var (_dce =_bdd (_gaga /2);_de =_gg .Abs (4.0/3.0*(1.0-_gg .Cos (_dce ))/_gg .Sin (_dce ));_ab =float64 (cx );_bgde =float64 (cy ););for _cf :=0;_cf < _eb ;_cf ++{_edg :=_bdd (startAngle +float64 (_cf )*_gaga );_dac :=_bdd (startAngle +float64 (_cf +1)*_gaga );
_ccd :=_gg .Cos (_edg );_bba :=_gg .Cos (_dac );_ebd :=_gg .Sin (_edg );_bee :=_gg .Sin (_dac );var _ba []float64 ;if _gaga > 0{_ba =[]float64 {_ab +rx *_ccd ,_bgde -ry *_ebd ,_ab +rx *(_ccd -_de *_ebd ),_bgde -ry *(_ebd +_de *_ccd ),_ab +rx *(_bba +_de *_bee ),_bgde -ry *(_bee -_de *_bba ),_ab +rx *_bba ,_bgde -ry *_bee };
}else {_ba =[]float64 {_ab +rx *_ccd ,_bgde -ry *_ebd ,_ab +rx *(_ccd +_de *_ebd ),_bgde -ry *(_ebd -_de *_ccd ),_ab +rx *(_bba -_de *_bee ),_bgde -ry *(_bee +_de *_bba ),_ab +rx *_bba ,_bgde -ry *_bee };};if _cf ==0{_fcf ._fe .Add_l (_ba [0],_ba [1]);
};_fcf ._fe .Add_c (_ba [2],_ba [3],_ba [4],_ba [5],_ba [6],_ba [7]);};};func (_cd *Renderer )Circle (radius float64 ,x ,y int ){_ead :=radius ;if _aad :=_cd ._da ;_aad !=0{_ead -=_aad /2;};_edgd :=_ead *0.551784;_fce :=_gag .CubicBezierPath {Curves :[]_gag .CubicBezierCurve {_gag .NewCubicBezierCurve (-_ead ,0,-_ead ,_edgd ,-_edgd ,_ead ,0,_ead ),_gag .NewCubicBezierCurve (0,_ead ,_edgd ,_ead ,_ead ,_edgd ,_ead ,0),_gag .NewCubicBezierCurve (_ead ,0,_ead ,-_edgd ,_edgd ,-_ead ,0,-_ead ),_gag .NewCubicBezierCurve (0,-_ead ,-_edgd ,-_ead ,-_ead ,-_edgd ,-_ead ,0)}};
if _edd :=_cd ._da ;_edd !=0{_fce =_fce .Offset (_edd /2,_edd /2);};_fce =_fce .Offset (float64 (x ),float64 (y ));_gag .DrawBezierPathWithCreator (_fce ,_cd ._fe );};func (_bgd *Renderer )SetFillColor (color _ga .Color ){_bgd ._fg =color ;_ec ,_be ,_efc ,_ :=_cae (color );
_bgd ._fe .Add_rg (_ec ,_be ,_efc );};func _bdd (_gdfb float64 )float64 {return _gdfb *_gg .Pi /180.0};func (_eff *Renderer )getTextWidth (_dacc string )float64 {var _fdb float64 ;for _ ,_aaa :=range _dacc {_bcc ,_aae :=_eff ._cg .GetRuneMetrics (_aaa );
if !_aae {_cc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_aaa );};_fdb +=_bcc .Wx ;};return _eff ._ae *_fdb /1000.0;
};func NewRenderer (cc *_ed .ContentCreator ,res *_bg .PdfPageResources )func (int ,int )(_b .Renderer ,error ){return func (_fef ,_fa int )(_b .Renderer ,error ){_ee :=&Renderer {_d :_fef ,_f :_fa ,_ff :72,_fe :cc ,_ge :res ,_fee :map[*_bg .PdfFont ]_bc .PdfObjectName {}};
_ee .ResetStyle ();return _ee ,nil ;};};func (_dd *Renderer )Close (){_dd ._fe .Add_h ()};func _gdd (_cfc _ga .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_feb ,_bce ,_dgca ,_eeb :=_cfc .RGBA ();return uint8 (_feb >>8),uint8 (_bce >>8),uint8 (_dgca >>8),uint8 (_eeb >>8);
};func (_ca *Renderer )ResetStyle (){_ca .SetFillColor (_ga .Black );_ca .SetStrokeColor (_ga .Transparent );_ca .SetStrokeWidth (0);_ca .SetFont (_bg .DefaultFont ());_ca .SetFontColor (_ga .Black );_ca .SetFontSize (12);_ca .SetTextRotation (0);};type Renderer struct{_d int ;
_f int ;_ff float64 ;_fe *_ed .ContentCreator ;_ge *_bg .PdfPageResources ;_fg _ga .Color ;_ce _ga .Color ;_da float64 ;_cg *_bg .PdfFont ;_ae float64 ;_gae _ga .Color ;_ceg float64 ;_fee map[*_bg .PdfFont ]_bc .PdfObjectName ;};func (_ef *Renderer )SetClassName (name string ){};
func _cae (_ccdg _ga .Color )(float64 ,float64 ,float64 ,float64 ){_eae ,_cdf ,_ag ,_afg :=_gdd (_ccdg );return float64 (_eae )/255,float64 (_cdf )/255,float64 (_ag )/255,float64 (_afg )/255;};