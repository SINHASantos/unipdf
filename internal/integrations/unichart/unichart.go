//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_e "bytes";_c "fmt";_f "github.com/unidoc/unichart/render";_d "github.com/unidoc/unipdf/v3/common";_ab "github.com/unidoc/unipdf/v3/contentstream";_gg "github.com/unidoc/unipdf/v3/contentstream/draw";_gb "github.com/unidoc/unipdf/v3/core";
_g "github.com/unidoc/unipdf/v3/model";_cf "image/color";_eb "io";_ec "math";);func (_gef *Renderer )SetClassName (name string ){};func (_dcf *Renderer )SetFontColor (color _cf .Color ){_dcf ._fc =color };func (_df *Renderer )Fill (){_df ._dd .Add_f ()};
func _acc (_dce string ,_ccd int ,_geb func (_gb .PdfObjectName )bool )_gb .PdfObjectName {_gcb :=_gb .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_dce ,_ccd ));for _cad :=_ccd ;_geb (_gcb );{_cad ++;_gcb =_gb .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_dce ,_cad ));
};return _gcb ;};func NewRenderer (cc *_ab .ContentCreator ,res *_g .PdfPageResources )func (int ,int )(_f .Renderer ,error ){return func (_ca ,_ggd int )(_f .Renderer ,error ){_cg :=&Renderer {_fb :_ca ,_aa :_ggd ,_af :72,_dd :cc ,_ddc :res ,_ea :map[*_g .PdfFont ]_gb .PdfObjectName {}};
_cg .ResetStyle ();return _cg ,nil ;};};func (_eae *Renderer )Circle (radius float64 ,x ,y int ){_dgb :=radius ;if _gf :=_eae ._cd ;_gf !=0{_dgb -=_gf /2;};_gfe :=_dgb *0.551784;_dee :=_gg .CubicBezierPath {Curves :[]_gg .CubicBezierCurve {_gg .NewCubicBezierCurve (-_dgb ,0,-_dgb ,_gfe ,-_gfe ,_dgb ,0,_dgb ),_gg .NewCubicBezierCurve (0,_dgb ,_gfe ,_dgb ,_dgb ,_gfe ,_dgb ,0),_gg .NewCubicBezierCurve (_dgb ,0,_dgb ,-_gfe ,_gfe ,-_dgb ,0,-_dgb ),_gg .NewCubicBezierCurve (0,-_dgb ,-_gfe ,-_dgb ,-_dgb ,-_gfe ,-_dgb ,0)}};
if _dfg :=_eae ._cd ;_dfg !=0{_dee =_dee .Offset (_dfg /2,_dfg /2);};_dee =_dee .Offset (float64 (x ),float64 (y ));_gg .DrawBezierPathWithCreator (_dee ,_eae ._dd );};func (_gbf *Renderer )ResetStyle (){_gbf .SetFillColor (_cf .Black );_gbf .SetStrokeColor (_cf .Transparent );
_gbf .SetStrokeWidth (0);_gbf .SetFont (_g .DefaultFont ());_gbf .SetFontColor (_cf .Black );_gbf .SetFontSize (12);_gbf .SetTextRotation (0);};func (_fae *Renderer )SetFontSize (size float64 ){_fae ._fbb =size };func (_ed *Renderer )SetFont (font _f .Font ){_ba ,_dc :=font .(*_g .PdfFont );
if !_dc {_d .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_dde ,_dc :=_ed ._ea [_ba ];if !_dc {_dde =_acc ("\u0046\u006f\u006e\u0074",1,_ed ._ddc .HasFontByName );
if _cgc :=_ed ._ddc .SetFontByName (_dde ,_ba .ToPdfObject ());_cgc !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_ba );
};_ed ._ea [_ba ]=_dde ;};_ed ._dd .Add_Tf (_dde ,_ed ._fbb );_ed ._gbe =_ba ;};func (_bb *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_aaf (2.0*_ec .Pi -startAngle );deltaAngle =_aaf (-deltaAngle );_cc ,_feg :=deltaAngle ,1;
if _ec .Abs (deltaAngle )> 90.0{_feg =int (_ec .Ceil (_ec .Abs (deltaAngle )/90.0));_cc =deltaAngle /float64 (_feg );};var (_da =_ede (_cc /2);_de =_ec .Abs (4.0/3.0*(1.0-_ec .Cos (_da ))/_ec .Sin (_da ));_ff =float64 (cx );_ag =float64 (cy ););for _dda :=0;
_dda < _feg ;_dda ++{_geeb :=_ede (startAngle +float64 (_dda )*_cc );_cdb :=_ede (startAngle +float64 (_dda +1)*_cc );_dgc :=_ec .Cos (_geeb );_ecb :=_ec .Cos (_cdb );_cfc :=_ec .Sin (_geeb );_cde :=_ec .Sin (_cdb );var _fegb []float64 ;if _cc > 0{_fegb =[]float64 {_ff +rx *_dgc ,_ag -ry *_cfc ,_ff +rx *(_dgc -_de *_cfc ),_ag -ry *(_cfc +_de *_dgc ),_ff +rx *(_ecb +_de *_cde ),_ag -ry *(_cde -_de *_ecb ),_ff +rx *_ecb ,_ag -ry *_cde };
}else {_fegb =[]float64 {_ff +rx *_dgc ,_ag -ry *_cfc ,_ff +rx *(_dgc +_de *_cfc ),_ag -ry *(_cfc -_de *_dgc ),_ff +rx *(_ecb -_de *_cde ),_ag -ry *(_cde +_de *_ecb ),_ff +rx *_ecb ,_ag -ry *_cde };};if _dda ==0{_bb ._dd .Add_l (_fegb [0],_fegb [1]);};
_bb ._dd .Add_c (_fegb [2],_fegb [3],_fegb [4],_fegb [5],_fegb [6],_fegb [7]);};};func (_caa *Renderer )FillStroke (){_caa ._dd .Add_B ()};func (_dgce *Renderer )MeasureText (text string )_f .Box {_deeb :=_dgce ._fbb ;_bc ,_ace :=_dgce ._gbe .GetFontDescriptor ();
if _ace !=nil {_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");}else {_dfc ,_cafe :=_bc .GetCapHeight ();
if _cafe !=nil {_d .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cafe );
}else {_deeb =_dfc /1000.0*_dgce ._fbb ;};};var (_bcg =0.0;_adf =_dgce .wrapText (text ););for _ ,_gbac :=range _adf {if _gc :=_dgce .getTextWidth (_gbac );_gc > _bcg {_bcg =_gc ;};};_cbd :=_f .NewBox (0,0,int (_bcg ),int (_deeb ));if _gcf :=_dgce ._fg ;
_gcf !=0{_cbd =_cbd .Corners ().Rotate (_gcf ).Box ();};return _cbd ;};func (_aag *Renderer )Save (w _eb .Writer )error {if w ==nil {return nil ;};_ ,_ce :=_eb .Copy (w ,_e .NewBuffer (_aag ._dd .Bytes ()));return _ce ;};func _ede (_fde float64 )float64 {return _fde *_ec .Pi /180.0};
func (_fa *Renderer )SetStrokeColor (color _cf .Color ){_fa ._ddf =color ;_fag ,_fcg ,_gba ,_ :=_eg (color );_fa ._dd .Add_RG (_fag ,_fcg ,_gba );};func (_cbf *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_cbf ._dd .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));
};func (_efc *Renderer )SetTextRotation (radians float64 ){_efc ._fg =_aaf (-radians )};func (_dca *Renderer )Text (text string ,x ,y int ){_dca ._dd .Add_q ();_dca .SetFont (_dca ._gbe );_bad ,_cbg ,_ecf ,_ :=_eg (_dca ._fc );_dca ._dd .Add_rg (_bad ,_cbg ,_ecf );
_dca ._dd .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _cda :=_dca ._fg ;_cda !=0{_dca ._dd .RotateDeg (_cda );};_dca ._dd .Add_BT ().Add_TL (_dca ._fbb );var (_dfb =_dca ._gbe .Encoder ();_dae =_dca .wrapText (text );_agd =len (_dae ););for _adb ,_cgf :=range _dae {_dca ._dd .Add_TJ (_gb .MakeStringFromBytes (_dfb .Encode (_cgf )));
if _adb !=_agd -1{_dca ._dd .Add_Tstar ();};};_dca ._dd .Add_ET ();_dca ._dd .Add_Q ();};func (_cba *Renderer )wrapText (_edb string )[]string {var (_bf []string ;_cbc []rune ;);for _ ,_efe :=range _edb {if _efe =='\n'{_bf =append (_bf ,string (_cbc ));
_cbc =[]rune {};continue ;};_cbc =append (_cbc ,_efe );};if len (_cbc )> 0{_bf =append (_bf ,string (_cbc ));};return _bf ;};func _deeg (_feb _cf .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_gfc ,_be ,_cbga ,_ddg :=_feb .RGBA ();return uint8 (_gfc >>8),uint8 (_be >>8),uint8 (_cbga >>8),uint8 (_ddg >>8);
};func (_ge *Renderer )SetDPI (dpi float64 ){_ge ._af =dpi };func _aaf (_bd float64 )float64 {return _bd *180/_ec .Pi };func (_cdea *Renderer )ClearTextRotation (){_cdea ._fg =0};func (_ddfb *Renderer )GetDPI ()float64 {return _ddfb ._af };func (_ad *Renderer )Close (){_ad ._dd .Add_h ()};
func (_fd *Renderer )LineTo (x ,y int ){_fd ._dd .Add_l (float64 (x ),float64 (y ))};func (_fbf *Renderer )getTextWidth (_bg string )float64 {var _age float64 ;for _ ,_ee :=range _bg {_db ,_dcg :=_fbf ._gbe .GetRuneMetrics (_ee );if !_dcg {_d .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_ee );
};_age +=_db .Wx ;};return _fbf ._fbb *_age /1000.0;};func (_gbeb *Renderer )Stroke (){_gbeb ._dd .Add_S ()};func (_gee *Renderer )SetFillColor (color _cf .Color ){_gee ._ae =color ;_b ,_fe ,_cb ,_ :=_eg (color );_gee ._dd .Add_rg (_b ,_fe ,_cb );};type Renderer struct{_fb int ;
_aa int ;_af float64 ;_dd *_ab .ContentCreator ;_ddc *_g .PdfPageResources ;_ae _cf .Color ;_ddf _cf .Color ;_cd float64 ;_gbe *_g .PdfFont ;_fbb float64 ;_fc _cf .Color ;_fg float64 ;_ea map[*_g .PdfFont ]_gb .PdfObjectName ;};func (_fad *Renderer )SetStrokeWidth (width float64 ){_fad ._cd =width ;
_fad ._dd .Add_w (width )};func (_ac *Renderer )MoveTo (x ,y int ){_ac ._dd .Add_m (float64 (x ),float64 (y ))};func _eg (_ceb _cf .Color )(float64 ,float64 ,float64 ,float64 ){_baf ,_geae ,_cfb ,_gfcb :=_deeg (_ceb );return float64 (_baf )/255,float64 (_geae )/255,float64 (_cfb )/255,float64 (_gfcb )/255;
};func (_fce *Renderer )SetStrokeDashArray (dashArray []float64 ){_dg :=make ([]int64 ,len (dashArray ));for _gge ,_gea :=range dashArray {_dg [_gge ]=int64 (_gea );};_fce ._dd .Add_d (_dg ,0);};