//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_a "bytes";_e "fmt";_fg "github.com/unidoc/unichart/render";_fa "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/contentstream";_d "github.com/unidoc/unipdf/v3/contentstream/draw";_b "github.com/unidoc/unipdf/v3/core";
_ef "github.com/unidoc/unipdf/v3/model";_cb "image/color";_f "io";_ec "math";);func (_af *Renderer )Close (){_af ._fb .Add_h ()};func (_dfe *Renderer )Stroke (){_dfe ._fb .Add_S ()};func (_ad *Renderer )ResetStyle (){_ad .SetFillColor (_cb .Black );_ad .SetStrokeColor (_cb .Transparent );
_ad .SetStrokeWidth (0);_ad .SetFont (_ef .DefaultFont ());_ad .SetFontColor (_cb .Black );_ad .SetFontSize (12);_ad .SetTextRotation (0);};func (_bg *Renderer )SetStrokeColor (color _cb .Color ){_bg ._de =color ;_gd ,_gf ,_dfg ,_ :=_ddg (color );_bg ._fb .Add_RG (_gd ,_gf ,_dfg );
};func (_gac *Renderer )wrapText (_gb string )[]string {var (_efc []string ;_cfb []rune ;);for _ ,_bba :=range _gb {if _bba =='\n'{_efc =append (_efc ,string (_cfb ));_cfb =[]rune {};continue ;};_cfb =append (_cfb ,_bba );};if len (_cfb )> 0{_efc =append (_efc ,string (_cfb ));
};return _efc ;};func (_gca *Renderer )SetFontSize (size float64 ){_gca ._bc =size };func _fgf (_da float64 )float64 {return _da *_ec .Pi /180.0};func (_dg *Renderer )SetDPI (dpi float64 ){_dg ._eg =dpi };func (_cfgd *Renderer )ClearTextRotation (){_cfgd ._dd =0};
func (_dgf *Renderer )SetFontColor (color _cb .Color ){_dgf ._fcf =color };func (_dge *Renderer )Fill (){_dge ._fb .Add_f ()};func (_gc *Renderer )SetStrokeWidth (width float64 ){_gc ._cf =width ;_gc ._fb .Add_w (width )};func _ag (_acfa string ,_bgd int ,_dfag func (_b .PdfObjectName )bool )_b .PdfObjectName {_fab :=_b .PdfObjectName (_e .Sprintf ("\u0025\u0073\u0025\u0064",_acfa ,_bgd ));
for _ae :=_bgd ;_dfag (_fab );{_ae ++;_fab =_b .PdfObjectName (_e .Sprintf ("\u0025\u0073\u0025\u0064",_acfa ,_ae ));};return _fab ;};func (_egc *Renderer )FillStroke (){_egc ._fb .Add_B ()};func NewRenderer (cc *_g .ContentCreator ,res *_ef .PdfPageResources )func (int ,int )(_fg .Renderer ,error ){return func (_ea ,_ga int )(_fg .Renderer ,error ){_cfg :=&Renderer {_eb :_ea ,_df :_ga ,_eg :72,_fb :cc ,_fc :res ,_bcf :map[*_ef .PdfFont ]_b .PdfObjectName {}};
_cfg .ResetStyle ();return _cfg ,nil ;};};func (_edc *Renderer )MoveTo (x ,y int ){_edc ._fb .Add_m (float64 (x ),float64 (y ))};func (_aa *Renderer )LineTo (x ,y int ){_aa ._fb .Add_l (float64 (x ),float64 (y ))};func (_cad *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_eba (2.0*_ec .Pi -startAngle );
deltaAngle =_eba (-deltaAngle );_efg ,_fcfe :=deltaAngle ,1;if _ec .Abs (deltaAngle )> 90.0{_fcfe =int (_ec .Ceil (_ec .Abs (deltaAngle )/90.0));_efg =deltaAngle /float64 (_fcfe );};var (_geg =_fgf (_efg /2);_cbfb =_ec .Abs (4.0/3.0*(1.0-_ec .Cos (_geg ))/_ec .Sin (_geg ));
_fgd =float64 (cx );_cbe =float64 (cy ););for _ff :=0;_ff < _fcfe ;_ff ++{_cfd :=_fgf (startAngle +float64 (_ff )*_efg );_ead :=_fgf (startAngle +float64 (_ff +1)*_efg );_gef :=_ec .Cos (_cfd );_dfb :=_ec .Cos (_ead );_efga :=_ec .Sin (_cfd );_fff :=_ec .Sin (_ead );
var _egb []float64 ;if _efg > 0{_egb =[]float64 {_fgd +rx *_gef ,_cbe -ry *_efga ,_fgd +rx *(_gef -_cbfb *_efga ),_cbe -ry *(_efga +_cbfb *_gef ),_fgd +rx *(_dfb +_cbfb *_fff ),_cbe -ry *(_fff -_cbfb *_dfb ),_fgd +rx *_dfb ,_cbe -ry *_fff };}else {_egb =[]float64 {_fgd +rx *_gef ,_cbe -ry *_efga ,_fgd +rx *(_gef +_cbfb *_efga ),_cbe -ry *(_efga -_cbfb *_gef ),_fgd +rx *(_dfb -_cbfb *_fff ),_cbe -ry *(_fff +_cbfb *_dfb ),_fgd +rx *_dfb ,_cbe -ry *_fff };
};if _ff ==0{_cad ._fb .Add_l (_egb [0],_egb [1]);};_cad ._fb .Add_c (_egb [2],_egb [3],_egb [4],_egb [5],_egb [6],_egb [7]);};};func (_gcbc *Renderer )getTextWidth (_ac string )float64 {var _fcde float64 ;for _ ,_dfa :=range _ac {_bd ,_gefa :=_gcbc ._ge .GetRuneMetrics (_dfa );
if !_gefa {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_dfa );};_fcde +=_bd .Wx ;};return _gcbc ._bc *_fcde /1000.0;
};func _aaf (_bgbg _cb .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_gbg ,_dfd ,_efb ,_ee :=_bgbg .RGBA ();return uint8 (_gbg >>8),uint8 (_dfd >>8),uint8 (_efb >>8),uint8 (_ee >>8);};func (_fd *Renderer )SetTextRotation (radians float64 ){_fd ._dd =_eba (-radians )};
func (_edb *Renderer )SetFont (font _fg .Font ){_cbbg ,_db :=font .(*_ef .PdfFont );if !_db {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;
};_efgf ,_db :=_edb ._bcf [_cbbg ];if !_db {_efgf =_ag ("\u0046\u006f\u006e\u0074",1,_edb ._fc .HasFontByName );if _gegd :=_edb ._fc .SetFontByName (_efgf ,_cbbg .ToPdfObject ());_gegd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cbbg );
};_edb ._bcf [_cbbg ]=_efgf ;};_edb ._fb .Add_Tf (_efgf ,_edb ._bc );_edb ._ge =_cbbg ;};func (_egf *Renderer )SetStrokeDashArray (dashArray []float64 ){_ca :=make ([]int64 ,len (dashArray ));for _ed ,_efd :=range dashArray {_ca [_ed ]=int64 (_efd );};
_egf ._fb .Add_d (_ca ,0);};func (_bce *Renderer )MeasureText (text string )_fg .Box {_bee :=_bce ._bc ;_fcb ,_fae :=_bce ._ge .GetFontDescriptor ();if _fae !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_bbe ,_cba :=_fcb .GetCapHeight ();if _cba !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cba );
}else {_bee =_bbe /1000.0*_bce ._bc ;};};var (_gge =0.0;_bgc =_bce .wrapText (text ););for _ ,_cdb :=range _bgc {if _cgf :=_bce .getTextWidth (_cdb );_cgf > _gge {_gge =_cgf ;};};_eac :=_fg .NewBox (0,0,int (_gge ),int (_bee ));if _edd :=_bce ._dd ;_edd !=0{_eac =_eac .Corners ().Rotate (_edd ).Box ();
};return _eac ;};type Renderer struct{_eb int ;_df int ;_eg float64 ;_fb *_g .ContentCreator ;_fc *_ef .PdfPageResources ;_be _cb .Color ;_de _cb .Color ;_cf float64 ;_ge *_ef .PdfFont ;_bc float64 ;_fcf _cb .Color ;_dd float64 ;_bcf map[*_ef .PdfFont ]_b .PdfObjectName ;
};func (_cd *Renderer )GetDPI ()float64 {return _cd ._eg };func (_dgg *Renderer )Save (w _f .Writer )error {if w ==nil {return nil ;};_ ,_eff :=_f .Copy (w ,_a .NewBuffer (_dgg ._fb .Bytes ()));return _eff ;};func (_cc *Renderer )SetFillColor (color _cb .Color ){_cc ._be =color ;
_dda ,_gdb ,_cbf ,_ :=_ddg (color );_cc ._fb .Add_rg (_dda ,_gdb ,_cbf );};func (_gcd *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_gcd ._fb .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_cg *Renderer )SetClassName (name string ){};
func _ddg (_acf _cb .Color )(float64 ,float64 ,float64 ,float64 ){_edf ,_dfde ,_fce ,_fag :=_aaf (_acf );return float64 (_edf )/255,float64 (_dfde )/255,float64 (_fce )/255,float64 (_fag )/255;};func (_gg *Renderer )Text (text string ,x ,y int ){_gg ._fb .Add_q ();
_gg .SetFont (_gg ._ge );_bgb ,_dea ,_gga ,_ :=_ddg (_gg ._fcf );_gg ._fb .Add_rg (_bgb ,_dea ,_gga );_gg ._fb .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _gcb :=_gg ._dd ;_gcb !=0{_gg ._fb .RotateDeg (_gcb );};_gg ._fb .Add_BT ().Add_TL (_gg ._bc );
var (_ce =_gg ._ge .Encoder ();_ba =_gg .wrapText (text );_bb =len (_ba ););for _fe ,_fge :=range _ba {_gg ._fb .Add_TJ (_b .MakeStringFromBytes (_ce .Encode (_fge )));if _fe !=_bb -1{_gg ._fb .Add_Tstar ();};};_gg ._fb .Add_ET ();_gg ._fb .Add_Q ();};
func (_dfed *Renderer )Circle (radius float64 ,x ,y int ){_cgd :=radius ;if _egce :=_dfed ._cf ;_egce !=0{_cgd -=_egce /2;};_fcd :=_cgd *0.551784;_cfc :=_d .CubicBezierPath {Curves :[]_d .CubicBezierCurve {_d .NewCubicBezierCurve (-_cgd ,0,-_cgd ,_fcd ,-_fcd ,_cgd ,0,_cgd ),_d .NewCubicBezierCurve (0,_cgd ,_fcd ,_cgd ,_cgd ,_fcd ,_cgd ,0),_d .NewCubicBezierCurve (_cgd ,0,_cgd ,-_fcd ,_fcd ,-_cgd ,0,-_cgd ),_d .NewCubicBezierCurve (0,-_cgd ,-_fcd ,-_cgd ,-_cgd ,-_fcd ,-_cgd ,0)}};
if _cbb :=_dfed ._cf ;_cbb !=0{_cfc =_cfc .Offset (_cbb /2,_cbb /2);};_cfc =_cfc .Offset (float64 (x ),float64 (y ));_d .DrawBezierPathWithCreator (_cfc ,_dfed ._fb );};func _eba (_feb float64 )float64 {return _feb *180/_ec .Pi };