//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_f "bytes";_g "fmt";_ba "github.com/unidoc/unichart/render";_cb "github.com/unidoc/unipdf/v3/common";_bc "github.com/unidoc/unipdf/v3/contentstream";_d "github.com/unidoc/unipdf/v3/contentstream/draw";_ce "github.com/unidoc/unipdf/v3/core";
_fa "github.com/unidoc/unipdf/v3/model";_c "image/color";_b "io";_a "math";);func (_aba *Renderer )SetTextRotation (radians float64 ){_aba ._gd =_ffd (-radians )};func (_fbb *Renderer )ClearTextRotation (){_fbb ._gd =0};func (_bg *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_ffd (2.0*_a .Pi -startAngle );
deltaAngle =_ffd (-deltaAngle );_fbf ,_fc :=deltaAngle ,1;if _a .Abs (deltaAngle )> 90.0{_fc =int (_a .Ceil (_a .Abs (deltaAngle )/90.0));_fbf =deltaAngle /float64 (_fc );};var (_ggc =_ccg (_fbf /2);_cd =_a .Abs (4.0/3.0*(1.0-_a .Cos (_ggc ))/_a .Sin (_ggc ));
_dgg =float64 (cx );_def =float64 (cy ););for _gda :=0;_gda < _fc ;_gda ++{_gde :=_ccg (startAngle +float64 (_gda )*_fbf );_fda :=_ccg (startAngle +float64 (_gda +1)*_fbf );_gec :=_a .Cos (_gde );_bcb :=_a .Cos (_fda );_cda :=_a .Sin (_gde );_gbf :=_a .Sin (_fda );
var _fga []float64 ;if _fbf > 0{_fga =[]float64 {_dgg +rx *_gec ,_def -ry *_cda ,_dgg +rx *(_gec -_cd *_cda ),_def -ry *(_cda +_cd *_gec ),_dgg +rx *(_bcb +_cd *_gbf ),_def -ry *(_gbf -_cd *_bcb ),_dgg +rx *_bcb ,_def -ry *_gbf };}else {_fga =[]float64 {_dgg +rx *_gec ,_def -ry *_cda ,_dgg +rx *(_gec +_cd *_cda ),_def -ry *(_cda -_cd *_gec ),_dgg +rx *(_bcb -_cd *_gbf ),_def -ry *(_gbf +_cd *_bcb ),_dgg +rx *_bcb ,_def -ry *_gbf };
};if _gda ==0{_bg ._gf .Add_l (_fga [0],_fga [1]);};_bg ._gf .Add_c (_fga [2],_fga [3],_fga [4],_fga [5],_fga [6],_fga [7]);};};func (_gaa *Renderer )wrapText (_ad string )[]string {var (_ebe []string ;_dda []rune ;);for _ ,_efa :=range _ad {if _efa =='\n'{_ebe =append (_ebe ,string (_dda ));
_dda =[]rune {};continue ;};_dda =append (_dda ,_efa );};if len (_dda )> 0{_ebe =append (_ebe ,string (_dda ));};return _ebe ;};func _ecfc (_cdf string ,_aed int ,_ddd func (_ce .PdfObjectName )bool )_ce .PdfObjectName {_edd :=_ce .PdfObjectName (_g .Sprintf ("\u0025\u0073\u0025\u0064",_cdf ,_aed ));
for _bde :=_aed ;_ddd (_edd );{_bde ++;_edd =_ce .PdfObjectName (_g .Sprintf ("\u0025\u0073\u0025\u0064",_cdf ,_bde ));};return _edd ;};func (_ec *Renderer )SetClassName (name string ){};func (_dce *Renderer )SetStrokeWidth (width float64 ){_dce ._eg =width ;
_dce ._gf .Add_w (width )};func (_abd *Renderer )LineTo (x ,y int ){_abd ._gf .Add_l (float64 (x ),float64 (y ))};func (_egb *Renderer )Fill (){_egb ._gf .Add_f ()};func (_ff *Renderer )SetFontSize (size float64 ){_ff ._fb =size };func (_cfd *Renderer )Circle (radius float64 ,x ,y int ){_ea :=radius ;
if _ecf :=_cfd ._eg ;_ecf !=0{_ea -=_ecf /2;};_cba :=_ea *0.551784;_fad :=_d .CubicBezierPath {Curves :[]_d .CubicBezierCurve {_d .NewCubicBezierCurve (-_ea ,0,-_ea ,_cba ,-_cba ,_ea ,0,_ea ),_d .NewCubicBezierCurve (0,_ea ,_cba ,_ea ,_ea ,_cba ,_ea ,0),_d .NewCubicBezierCurve (_ea ,0,_ea ,-_cba ,_cba ,-_ea ,0,-_ea ),_d .NewCubicBezierCurve (0,-_ea ,-_cba ,-_ea ,-_ea ,-_cba ,-_ea ,0)}};
if _ecfg :=_cfd ._eg ;_ecfg !=0{_fad =_fad .Offset (_ecfg /2,_ecfg /2);};_fad =_fad .Offset (float64 (x ),float64 (y ));_d .DrawBezierPathWithCreator (_fad ,_cfd ._gf );};func _ffd (_fcb float64 )float64 {return _fcb *180/_a .Pi };func (_cag *Renderer )SetStrokeDashArray (dashArray []float64 ){_ab :=make ([]int64 ,len (dashArray ));
for _fg ,_caf :=range dashArray {_ab [_fg ]=int64 (_caf );};_cag ._gf .Add_d (_ab ,0);};func (_da *Renderer )Stroke (){_da ._gf .Add_S ()};func (_abb *Renderer )SetFontColor (color _c .Color ){_abb ._fe =color };func (_bf *Renderer )SetStrokeColor (color _c .Color ){_bf ._cf =color ;
_be ,_df ,_db ,_ :=_fdb (color );_bf ._gf .Add_RG (_be ,_df ,_db );};func (_cad *Renderer )MeasureText (text string )_ba .Box {_gfb :=_cad ._fb ;_ga ,_gaf :=_cad ._ac .GetFontDescriptor ();if _gaf !=nil {_cb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_cbg ,_dd :=_ga .GetCapHeight ();if _dd !=nil {_cb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dd );
}else {_gfb =_cbg /1000.0*_cad ._fb ;};};var (_eag =0.0;_geae =_cad .wrapText (text ););for _ ,_bgba :=range _geae {if _ega :=_cad .getTextWidth (_bgba );_ega > _eag {_eag =_ega ;};};_ggf :=_ba .NewBox (0,0,int (_eag ),int (_gfb ));if _gfc :=_cad ._gd ;
_gfc !=0{_ggf =_ggf .Corners ().Rotate (_gfc ).Box ();};return _ggf ;};func (_ae *Renderer )Save (w _b .Writer )error {if w ==nil {return nil ;};_ ,_cagf :=_b .Copy (w ,_f .NewBuffer (_ae ._gf .Bytes ()));return _cagf ;};func _gecc (_edb _c .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_baf ,_faa ,_aeg ,_cfe :=_edb .RGBA ();
return uint8 (_baf >>8),uint8 (_faa >>8),uint8 (_aeg >>8),uint8 (_cfe >>8);};func (_eb *Renderer )GetDPI ()float64 {return _eb ._dg };func (_bfb *Renderer )getTextWidth (_debd string )float64 {var _fee float64 ;for _ ,_dab :=range _debd {_fff ,_cfa :=_bfb ._ac .GetRuneMetrics (_dab );
if !_cfa {_cb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_dab );};_fee +=_fff .Wx ;};return _bfb ._fb *_fee /1000.0;
};func _fdb (_fbff _c .Color )(float64 ,float64 ,float64 ,float64 ){_ggg ,_fcg ,_fcf ,_daa :=_gecc (_fbff );return float64 (_ggg )/255,float64 (_fcg )/255,float64 (_fcf )/255,float64 (_daa )/255;};func (_gg *Renderer )SetFillColor (color _c .Color ){_gg ._bcg =color ;
_ca ,_cc ,_ef ,_ :=_fdb (color );_gg ._gf .Add_rg (_ca ,_cc ,_ef );};func (_cgg *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_cgg ._gf .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func NewRenderer (cc *_bc .ContentCreator ,res *_fa .PdfPageResources )func (int ,int )(_ba .Renderer ,error ){return func (_bca ,_fd int )(_ba .Renderer ,error ){_ceg :=&Renderer {_ge :_bca ,_de :_fd ,_dg :72,_gf :cc ,_cg :res ,_dc :map[*_fa .PdfFont ]_ce .PdfObjectName {}};
_ceg .ResetStyle ();return _ceg ,nil ;};};func (_cfg *Renderer )SetDPI (dpi float64 ){_cfg ._dg =dpi };type Renderer struct{_ge int ;_de int ;_dg float64 ;_gf *_bc .ContentCreator ;_cg *_fa .PdfPageResources ;_bcg _c .Color ;_cf _c .Color ;_eg float64 ;
_ac *_fa .PdfFont ;_fb float64 ;_fe _c .Color ;_gd float64 ;_dc map[*_fa .PdfFont ]_ce .PdfObjectName ;};func _ccg (_bbf float64 )float64 {return _bbf *_a .Pi /180.0};func (_ag *Renderer )ResetStyle (){_ag .SetFillColor (_c .Black );_ag .SetStrokeColor (_c .Transparent );
_ag .SetStrokeWidth (0);_ag .SetFont (_fa .DefaultFont ());_ag .SetFontColor (_c .Black );_ag .SetFontSize (12);_ag .SetTextRotation (0);};func (_deg *Renderer )Close (){_deg ._gf .Add_h ()};func (_bgb *Renderer )SetFont (font _ba .Font ){_cgf ,_bb :=font .(*_fa .PdfFont );
if !_bb {_cb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_bd ,_bb :=_bgb ._dc [_cgf ];if !_bb {_bd =_ecfc ("\u0046\u006f\u006e\u0074",1,_bgb ._cg .HasFontByName );
if _bda :=_bgb ._cg .SetFontByName (_bd ,_cgf .ToPdfObject ());_bda !=nil {_cb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cgf );
};_bgb ._dc [_cgf ]=_bd ;};_bgb ._gf .Add_Tf (_bd ,_bgb ._fb );_bgb ._ac =_cgf ;};func (_acd *Renderer )FillStroke (){_acd ._gf .Add_B ()};func (_gea *Renderer )Text (text string ,x ,y int ){_gea ._gf .Add_q ();_gea .SetFont (_gea ._ac );_bef ,_efe ,_fec ,_ :=_fdb (_gea ._fe );
_gea ._gf .Add_rg (_bef ,_efe ,_fec );_gea ._gf .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _ee :=_gea ._gd ;_ee !=0{_gea ._gf .RotateDeg (_ee );};_gea ._gf .Add_BT ().Add_TL (_gea ._fb );var (_acf =_gea ._ac .Encoder ();_af =_gea .wrapText (text );
_egf =len (_af ););for _deb ,_caa :=range _af {_gea ._gf .Add_TJ (_ce .MakeStringFromBytes (_acf .Encode (_caa )));if _deb !=_egf -1{_gea ._gf .Add_Tstar ();};};_gea ._gf .Add_ET ();_gea ._gf .Add_Q ();};func (_bed *Renderer )MoveTo (x ,y int ){_bed ._gf .Add_m (float64 (x ),float64 (y ))};
