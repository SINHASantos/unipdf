//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_a "bytes";_d "fmt";_bb "github.com/unidoc/unichart/render";_ad "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/contentstream";_c "github.com/unidoc/unipdf/v3/contentstream/draw";_ag "github.com/unidoc/unipdf/v3/core";
_g "github.com/unidoc/unipdf/v3/model";_de "image/color";_af "io";_b "math";);type Renderer struct{_aff int ;_gf int ;_df float64 ;_bbe *_f .ContentCreator ;_ade *_g .PdfPageResources ;_ee _de .Color ;_fa _de .Color ;_ec float64 ;_ea *_g .PdfFont ;_dd float64 ;
_gb _de .Color ;_ge float64 ;_gbc map[*_g .PdfFont ]_ag .PdfObjectName ;};func NewRenderer (cc *_f .ContentCreator ,res *_g .PdfPageResources )func (int ,int )(_bb .Renderer ,error ){return func (_adf ,_cd int )(_bb .Renderer ,error ){_ga :=&Renderer {_aff :_adf ,_gf :_cd ,_df :72,_bbe :cc ,_ade :res ,_gbc :map[*_g .PdfFont ]_ag .PdfObjectName {}};
_ga .ResetStyle ();return _ga ,nil ;};};func (_gbb *Renderer )Circle (radius float64 ,x ,y int ){_dcd :=radius ;if _ff :=_gbb ._ec ;_ff !=0{_dcd -=_ff /2;};_bc :=_dcd *0.551784;_dded :=_c .CubicBezierPath {Curves :[]_c .CubicBezierCurve {_c .NewCubicBezierCurve (-_dcd ,0,-_dcd ,_bc ,-_bc ,_dcd ,0,_dcd ),_c .NewCubicBezierCurve (0,_dcd ,_bc ,_dcd ,_dcd ,_bc ,_dcd ,0),_c .NewCubicBezierCurve (_dcd ,0,_dcd ,-_bc ,_bc ,-_dcd ,0,-_dcd ),_c .NewCubicBezierCurve (0,-_dcd ,-_bc ,-_dcd ,-_dcd ,-_bc ,-_dcd ,0)}};
if _dfb :=_gbb ._ec ;_dfb !=0{_dded =_dded .Offset (_dfb /2,_dfb /2);};_dded =_dded .Offset (float64 (x ),float64 (y ));_c .DrawBezierPathWithCreator (_dded ,_gbb ._bbe );};func (_adb *Renderer )LineTo (x ,y int ){_adb ._bbe .Add_l (float64 (x ),float64 (y ))};
func (_be *Renderer )FillStroke (){_be ._bbe .Add_B ()};func (_ece *Renderer )SetStrokeDashArray (dashArray []float64 ){_aag :=make ([]int64 ,len (dashArray ));for _fg ,_dg :=range dashArray {_aag [_fg ]=int64 (_dg );};_ece ._bbe .Add_d (_aag ,0);};func (_cgf *Renderer )SetFont (font _bb .Font ){_acc ,_afd :=font .(*_g .PdfFont );
if !_afd {_ad .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_bcd ,_afd :=_cgf ._gbc [_acc ];if !_afd {_bcd =_geg ("\u0046\u006f\u006e\u0074",1,_cgf ._ade .HasFontByName );
if _aaf :=_cgf ._ade .SetFontByName (_bcd ,_acc .ToPdfObject ());_aaf !=nil {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_acc );
};_cgf ._gbc [_acc ]=_bcd ;};_cgf ._bbe .Add_Tf (_bcd ,_cgf ._dd );_cgf ._ea =_acc ;};func (_eed *Renderer )Text (text string ,x ,y int ){_eed ._bbe .Add_q ();_eed .SetFont (_eed ._ea );_fab ,_bea ,_fde ,_ :=_ccg (_eed ._gb );_eed ._bbe .Add_rg (_fab ,_bea ,_fde );
_eed ._bbe .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _dcf :=_eed ._ge ;_dcf !=0{_eed ._bbe .RotateDeg (_dcf );};_eed ._bbe .Add_BT ().Add_TL (_eed ._dd );var (_ab =_eed ._ea .Encoder ();_dcc =_eed .wrapText (text );_ggc =len (_dcc ););for _gec ,_fc :=range _dcc {_eed ._bbe .Add_TJ (_ag .MakeStringFromBytes (_ab .Encode (_fc )));
if _gec !=_ggc -1{_eed ._bbe .Add_Tstar ();};};_eed ._bbe .Add_ET ();_eed ._bbe .Add_Q ();};func (_agc *Renderer )ResetStyle (){_agc .SetFillColor (_de .Black );_agc .SetStrokeColor (_de .Transparent );_agc .SetStrokeWidth (0);_agc .SetFont (_g .DefaultFont ());
_agc .SetFontColor (_de .Black );_agc .SetFontSize (12);_agc .SetTextRotation (0);};func (_gee *Renderer )SetFontSize (size float64 ){_gee ._dd =size };func (_ged *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_da (2.0*_b .Pi -startAngle );
deltaAngle =_da (-deltaAngle );_dga ,_bga :=deltaAngle ,1;if _b .Abs (deltaAngle )> 90.0{_bga =int (_b .Ceil (_b .Abs (deltaAngle )/90.0));_dga =deltaAngle /float64 (_bga );};var (_gd =_gff (_dga /2);_ce =_b .Abs (4.0/3.0*(1.0-_b .Cos (_gd ))/_b .Sin (_gd ));
_gad =float64 (cx );_dbc =float64 (cy ););for _eea :=0;_eea < _bga ;_eea ++{_deb :=_gff (startAngle +float64 (_eea )*_dga );_dde :=_gff (startAngle +float64 (_eea +1)*_dga );_bfg :=_b .Cos (_deb );_fdd :=_b .Cos (_dde );_ggg :=_b .Sin (_deb );_bbeg :=_b .Sin (_dde );
var _cba []float64 ;if _dga > 0{_cba =[]float64 {_gad +rx *_bfg ,_dbc -ry *_ggg ,_gad +rx *(_bfg -_ce *_ggg ),_dbc -ry *(_ggg +_ce *_bfg ),_gad +rx *(_fdd +_ce *_bbeg ),_dbc -ry *(_bbeg -_ce *_fdd ),_gad +rx *_fdd ,_dbc -ry *_bbeg };}else {_cba =[]float64 {_gad +rx *_bfg ,_dbc -ry *_ggg ,_gad +rx *(_bfg +_ce *_ggg ),_dbc -ry *(_ggg -_ce *_bfg ),_gad +rx *(_fdd -_ce *_bbeg ),_dbc -ry *(_bbeg +_ce *_fdd ),_gad +rx *_fdd ,_dbc -ry *_bbeg };
};if _eea ==0{_ged ._bbe .Add_l (_cba [0],_cba [1]);};_ged ._bbe .Add_c (_cba [2],_cba [3],_cba [4],_cba [5],_cba [6],_cba [7]);};};func (_ffb *Renderer )getTextWidth (_ca string )float64 {var _aeb float64 ;for _ ,_aef :=range _ca {_fff ,_cgc :=_ffb ._ea .GetRuneMetrics (_aef );
if !_cgc {_ad .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_aef );};_aeb +=_fff .Wx ;};return _ffb ._dd *_aeb /1000.0;
};func (_ecg *Renderer )SetStrokeColor (color _de .Color ){_ecg ._fa =color ;_cb ,_bd ,_cbd ,_ :=_ccg (color );_ecg ._bbe .Add_RG (_cb ,_bd ,_cbd );};func (_eeg *Renderer )Stroke (){_eeg ._bbe .Add_S ()};func (_ed *Renderer )Save (w _af .Writer )error {if w ==nil {return nil ;
};_ ,_adg :=_af .Copy (w ,_a .NewBuffer (_ed ._bbe .Bytes ()));return _adg ;};func (_dc *Renderer )SetFillColor (color _de .Color ){_dc ._ee =color ;_gg ,_aa ,_cc ,_ :=_ccg (color );_dc ._bbe .Add_rg (_gg ,_aa ,_cc );};func (_bdg *Renderer )MeasureText (text string )_bb .Box {_eab :=_bdg ._dd ;
_gfe ,_dbe :=_bdg ._ea .GetFontDescriptor ();if _dbe !=nil {_ad .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_ef ,_ggcb :=_gfe .GetCapHeight ();if _ggcb !=nil {_ad .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ggcb );
}else {_eab =_ef /1000.0*_bdg ._dd ;};};var (_aee =0.0;_fabc =_bdg .wrapText (text ););for _ ,_ccb :=range _fabc {if _faf :=_bdg .getTextWidth (_ccb );_faf > _aee {_aee =_faf ;};};_ecd :=_bb .NewBox (0,0,int (_aee ),int (_eab ));if _fcc :=_bdg ._ge ;_fcc !=0{_ecd =_ecd .Corners ().Rotate (_fcc ).Box ();
};return _ecd ;};func (_ffa *Renderer )wrapText (_gaa string )[]string {var (_bfe []string ;_fbe []rune ;);for _ ,_ecb :=range _gaa {if _ecb =='\n'{_bfe =append (_bfe ,string (_fbe ));_fbe =[]rune {};continue ;};_fbe =append (_fbe ,_ecb );};if len (_fbe )> 0{_bfe =append (_bfe ,string (_fbe ));
};return _bfe ;};func (_fb *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_fb ._bbe .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_bg *Renderer )SetStrokeWidth (width float64 ){_bg ._ec =width ;_bg ._bbe .Add_w (width )};func _ccg (_cbb _de .Color )(float64 ,float64 ,float64 ,float64 ){_ddf ,_cbe ,_gfg ,_fffa :=_eeb (_cbb );
return float64 (_ddf )/255,float64 (_cbe )/255,float64 (_gfg )/255,float64 (_fffa )/255;};func (_ae *Renderer )MoveTo (x ,y int ){_ae ._bbe .Add_m (float64 (x ),float64 (y ))};func (_ba *Renderer )Close (){_ba ._bbe .Add_h ()};func _da (_bda float64 )float64 {return _bda *180/_b .Pi };
func (_eaf *Renderer )SetTextRotation (radians float64 ){_eaf ._ge =_da (-radians )};func (_cg *Renderer )GetDPI ()float64 {return _cg ._df };func (_gc *Renderer )ClearTextRotation (){_gc ._ge =0};func _gff (_ced float64 )float64 {return _ced *_b .Pi /180.0};
func _eeb (_gaf _de .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_fe ,_bee ,_eag ,_caa :=_gaf .RGBA ();return uint8 (_fe >>8),uint8 (_bee >>8),uint8 (_eag >>8),uint8 (_caa >>8);};func (_fd *Renderer )SetDPI (dpi float64 ){_fd ._df =dpi };func (_bf *Renderer )SetClassName (name string ){};
func (_fge *Renderer )Fill (){_fge ._bbe .Add_f ()};func (_agf *Renderer )SetFontColor (color _de .Color ){_agf ._gb =color };func _geg (_ddc string ,_eb int ,_gaab func (_ag .PdfObjectName )bool )_ag .PdfObjectName {_fdeb :=_ag .PdfObjectName (_d .Sprintf ("\u0025\u0073\u0025\u0064",_ddc ,_eb ));
for _dcdg :=_eb ;_gaab (_fdeb );{_dcdg ++;_fdeb =_ag .PdfObjectName (_d .Sprintf ("\u0025\u0073\u0025\u0064",_ddc ,_dcdg ));};return _fdeb ;};