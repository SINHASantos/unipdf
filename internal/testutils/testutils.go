//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_a "crypto/md5";_gf "encoding/hex";_bb "errors";_b "fmt";_cf "github.com/unidoc/unipdf/v4/common";_df "github.com/unidoc/unipdf/v4/core";_ge "image";_g "image/png";_e "io";_d "os";_fd "os/exec";_ab "path/filepath";_fb "strings";
_f "testing";);func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_ed ,_ff :=HashFile (file1 );if _ff !=nil {return false ,_ff ;};_fcg ,_ff :=HashFile (file2 );if _ff !=nil {return false ,_ff ;};if _ed ==_fcg {return true ,nil ;};_afa ,_ff :=ReadPNG (file1 );
if _ff !=nil {return false ,_ff ;};_gce ,_ff :=ReadPNG (file2 );if _ff !=nil {return false ,_ff ;};if _afa .Bounds ()!=_gce .Bounds (){return false ,nil ;};return CompareImages (_afa ,_gce );};func CompareDictionariesDeep (d1 ,d2 *_df .PdfObjectDictionary )bool {if len (d1 .Keys ())!=len (d2 .Keys ()){_cf .Log .Debug ("\u0044\u0069\u0063\u0074\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",len (d1 .Keys ()),len (d2 .Keys ()));
_cf .Log .Debug ("\u0057\u0061s\u0020\u0027\u0025s\u0027\u0020\u0076\u0073\u0020\u0027\u0025\u0073\u0027",d1 .Write (),d2 .Write ());return false ;};for _ ,_bcb :=range d1 .Keys (){if _bcb =="\u0050\u0061\u0072\u0065\u006e\u0074"{continue ;};_ecc :=_df .TraceToDirectObject (d1 .Get (_bcb ));
_gfa :=_df .TraceToDirectObject (d2 .Get (_bcb ));if _ecc ==nil {_cf .Log .Debug ("\u00761\u0020\u0069\u0073\u0020\u006e\u0069l");return false ;};if _gfa ==nil {_cf .Log .Debug ("\u00762\u0020\u0069\u0073\u0020\u006e\u0069l");return false ;};switch _cbf :=_ecc .(type ){case *_df .PdfObjectDictionary :_ca ,_gfe :=_gfa .(*_df .PdfObjectDictionary );
if !_gfe {_cf .Log .Debug ("\u0054\u0079\u0070\u0065 m\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020\u0025\u0054\u0020\u0076\u0073\u0020%\u0054",_ecc ,_gfa );return false ;};if !CompareDictionariesDeep (_cbf ,_ca ){return false ;};continue ;case *_df .PdfObjectArray :_dbc ,_eag :=_gfa .(*_df .PdfObjectArray );
if !_eag {_cf .Log .Debug ("\u00762\u0020n\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");return false ;};if _cbf .Len ()!=_dbc .Len (){_cf .Log .Debug ("\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",_cbf .Len (),_dbc .Len ());
return false ;};for _da :=0;_da < _cbf .Len ();_da ++{_cfc :=_df .TraceToDirectObject (_cbf .Get (_da ));_cba :=_df .TraceToDirectObject (_dbc .Get (_da ));if _cd ,_acg :=_cfc .(*_df .PdfObjectDictionary );_acg {_aegg ,_dgb :=_cba .(*_df .PdfObjectDictionary );
if !_dgb {return false ;};if !CompareDictionariesDeep (_cd ,_aegg ){return false ;};}else {_abe :=_cfc .Write ();_acd :=_cba .Write ();if string (_abe )!=string (_acd ){_cf .Log .Debug ("M\u0069\u0073\u006d\u0061tc\u0068 \u0027\u0025\u0073\u0027\u0020!\u003d\u0020\u0027\u0025\u0073\u0027",_abe ,_acd );
return false ;};};};continue ;};if _ecc .String ()!=_gfa .String (){_cf .Log .Debug ("\u006b\u0065y\u003d\u0025\u0073\u0020\u004d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0021\u0020\u0027\u0025\u0073\u0027\u0020\u0021\u003d\u0020'%\u0073\u0027",_bcb ,_ecc .String (),_gfa .String ());
_cf .Log .Debug ("\u0046o\u0072 \u0027\u0025\u0054\u0027\u0020\u002d\u0020\u0027\u0025\u0054\u0027",_ecc ,_gfa );_cf .Log .Debug ("\u0046\u006f\u0072\u0020\u0027\u0025\u002b\u0076\u0027\u0020\u002d\u0020'\u0025\u002b\u0076\u0027",_ecc ,_gfa );return false ;
};};return true ;};func ReadPNG (file string )(_ge .Image ,error ){_fa ,_af :=_d .Open (file );if _af !=nil {return nil ,_af ;};defer _fa .Close ();return _g .Decode (_fa );};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;
};if _ ,_dc :=_fd .LookPath ("\u0067\u0073");_dc !=nil {return ErrRenderNotSupported ;};return _fd .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_b .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};var (ErrRenderNotSupported =_bb .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
);func CopyFile (src ,dst string )error {_cfd ,_bc :=_d .Open (src );if _bc !=nil {return _bc ;};defer _cfd .Close ();_ea ,_bc :=_d .Create (dst );if _bc !=nil {return _bc ;};defer _ea .Close ();_ ,_bc =_e .Copy (_ea ,_cfd );return _bc ;};func ParseIndirectObjects (rawpdf string )(map[int64 ]_df .PdfObject ,error ){_dbg :=_df .NewParserFromString (rawpdf );
_faac :=map[int64 ]_df .PdfObject {};for {_dg ,_ef :=_dbg .ParseIndirectObject ();if _ef !=nil {if _ef ==_e .EOF {break ;};return nil ,_ef ;};switch _gcf :=_dg .(type ){case *_df .PdfIndirectObject :_faac [_gcf .ObjectNumber ]=_dg ;case *_df .PdfObjectStream :_faac [_gcf .ObjectNumber ]=_dg ;
};};for _ ,_egg :=range _faac {_fef (_egg ,_faac );};return _faac ,nil ;};func CompareImages (img1 ,img2 _ge .Image )(bool ,error ){_gc :=img1 .Bounds ();_bbb :=0;for _cb :=0;_cb < _gc .Size ().X ;_cb ++{for _afc :=0;_afc < _gc .Size ().Y ;_afc ++{_agf ,_ad ,_bf ,_ :=img1 .At (_cb ,_afc ).RGBA ();
_agd ,_fe ,_fac ,_ :=img2 .At (_cb ,_afc ).RGBA ();if _agf !=_agd ||_ad !=_fe ||_bf !=_fac {_bbb ++;};};};_egd :=float64 (_bbb )/float64 (_gc .Dx ()*_gc .Dy ());if _egd > 0.0001{_b .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_egd ,_bbb );
return false ,nil ;};return true ,nil ;};func RunRenderTest (t *_f .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ){_dff :=_fb .TrimSuffix (_ab .Base (pdfPath ),_ab .Ext (pdfPath ));t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_eac *_f .T ){_aeg :=_ab .Join (outputDir ,_dff );
_faa :=_aeg +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _gd :=RenderPDFToPNGs (pdfPath ,0,_faa );_gd !=nil {_eac .Skip (_gd );};for _gad :=1;true ;_gad ++{_fce :=_b .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_aeg ,_gad );_fab :=_ab .Join (baselineRenderPath ,_b .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_dff ,_gad ));
if _ ,_afe :=_d .Stat (_fce );_afe !=nil {break ;};_eac .Logf ("\u0025\u0073",_fab );if saveBaseline {_eac .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_fce ,_fab );_cfdb :=CopyFile (_fce ,_fab );if _cfdb !=nil {_eac .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fab ,_cfdb );
};continue ;};_eac .Run (_b .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_gad ),func (_bdd *_f .T ){_bdd .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_fce ,_fab );_gfd ,_cff :=ComparePNGFiles (_fce ,_fab );
if _d .IsNotExist (_cff ){_bdd .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_gfd {_bdd .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func HashFile (file string )(string ,error ){_ae ,_ag :=_d .Open (file );if _ag !=nil {return "",_ag ;};defer _ae .Close ();_eg :=_a .New ();if _ ,_ag =_e .Copy (_eg ,_ae );_ag !=nil {return "",_ag ;};return _gf .EncodeToString (_eg .Sum (nil )),nil ;
};func _fef (_cc _df .PdfObject ,_gag map[int64 ]_df .PdfObject )error {switch _ee :=_cc .(type ){case *_df .PdfIndirectObject :_fdd :=_ee ;_fef (_fdd .PdfObject ,_gag );case *_df .PdfObjectDictionary :_ec :=_ee ;for _ ,_eda :=range _ec .Keys (){_dbb :=_ec .Get (_eda );
if _fdc ,_ba :=_dbb .(*_df .PdfObjectReference );_ba {_gae ,_aa :=_gag [_fdc .ObjectNumber ];if !_aa {return _bb .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_ec .Set (_eda ,_gae );}else {_fef (_dbb ,_gag );};};case *_df .PdfObjectArray :_cce :=_ee ;for _efc ,_fea :=range _cce .Elements (){if _edac ,_edad :=_fea .(*_df .PdfObjectReference );_edad {_de ,_aed :=_gag [_edac .ObjectNumber ];if !_aed {return _bb .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_cce .Set (_efc ,_de );}else {_fef (_fea ,_gag );};};};return nil ;};