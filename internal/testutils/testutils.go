//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_a "crypto/md5";_f "encoding/hex";_cdc "errors";_cfd "fmt";_cca "github.com/unidoc/unipdf/v3/common";_eg "github.com/unidoc/unipdf/v3/core";_cf "image";_ef "image/png";_gc "io";_e "os";_cd "os/exec";_g "path/filepath";_cc "strings";
_d "testing";);func HashFile (file string )(string ,error ){_da ,_bb :=_e .Open (file );if _bb !=nil {return "",_bb ;};defer _da .Close ();_afe :=_a .New ();if _ ,_bb =_gc .Copy (_afe ,_da );_bb !=nil {return "",_bb ;};return _f .EncodeToString (_afe .Sum (nil )),nil ;
};var (ErrRenderNotSupported =_cdc .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
);func ReadPNG (file string )(_cf .Image ,error ){_dec ,_bf :=_e .Open (file );if _bf !=nil {return nil ,_bf ;};defer _dec .Close ();return _ef .Decode (_dec );};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_afb ,_bc :=HashFile (file1 );if _bc !=nil {return false ,_bc ;
};_bcf ,_bc :=HashFile (file2 );if _bc !=nil {return false ,_bc ;};if _afb ==_bcf {return true ,nil ;};_efc ,_bc :=ReadPNG (file1 );if _bc !=nil {return false ,_bc ;};_cg ,_bc :=ReadPNG (file2 );if _bc !=nil {return false ,_bc ;};if _efc .Bounds ()!=_cg .Bounds (){return false ,nil ;
};return CompareImages (_efc ,_cg );};func RunRenderTest (t *_d .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ){_gd :=_cc .TrimSuffix (_g .Base (pdfPath ),_g .Ext (pdfPath ));t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_dab *_d .T ){_fdd :=_g .Join (outputDir ,_gd );
_bge :=_fdd +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _gf :=RenderPDFToPNGs (pdfPath ,0,_bge );_gf !=nil {_dab .Skip (_gf );};for _ace :=1;true ;_ace ++{_ae :=_cfd .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_fdd ,_ace );_bed :=_g .Join (baselineRenderPath ,_cfd .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_gd ,_ace ));
if _ ,_df :=_e .Stat (_ae );_df !=nil {break ;};_dab .Logf ("\u0025\u0073",_bed );if saveBaseline {_dab .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_ae ,_bed );_fba :=CopyFile (_ae ,_bed );if _fba !=nil {_dab .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bed ,_fba );
};continue ;};_dab .Run (_cfd .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_ace ),func (_afc *_d .T ){_afc .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_ae ,_bed );_cge ,_dfg :=ComparePNGFiles (_ae ,_bed );
if _e .IsNotExist (_dfg ){_afc .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_cge {_afc .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func _fbcf (_aeg _eg .PdfObject ,_aa map[int64 ]_eg .PdfObject )error {switch _dce :=_aeg .(type ){case *_eg .PdfIndirectObject :_afd :=_dce ;_fbcf (_afd .PdfObject ,_aa );case *_eg .PdfObjectDictionary :_ce :=_dce ;for _ ,_fbb :=range _ce .Keys (){_aac :=_ce .Get (_fbb );
if _dag ,_gfb :=_aac .(*_eg .PdfObjectReference );_gfb {_dca ,_ge :=_aa [_dag .ObjectNumber ];if !_ge {return _cdc .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_ce .Set (_fbb ,_dca );}else {_fbcf (_aac ,_aa );};};case *_eg .PdfObjectArray :_bd :=_dce ;for _gdd ,_fbg :=range _bd .Elements (){if _ga ,_ag :=_fbg .(*_eg .PdfObjectReference );_ag {_cea ,_bdd :=_aa [_ga .ObjectNumber ];if !_bdd {return _cdc .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_bd .Set (_gdd ,_cea );}else {_fbcf (_fbg ,_aa );};};};return nil ;};func ParseIndirectObjects (rawpdf string )(map[int64 ]_eg .PdfObject ,error ){_daf :=_eg .NewParserFromString (rawpdf );_fga :=map[int64 ]_eg .PdfObject {};for {_ee ,_fbc :=_daf .ParseIndirectObject ();
if _fbc !=nil {if _fbc ==_gc .EOF {break ;};return nil ,_fbc ;};switch _dc :=_ee .(type ){case *_eg .PdfIndirectObject :_fga [_dc .ObjectNumber ]=_ee ;case *_eg .PdfObjectStream :_fga [_dc .ObjectNumber ]=_ee ;};};for _ ,_efd :=range _fga {_fbcf (_efd ,_fga );
};return _fga ,nil ;};func CompareDictionariesDeep (d1 ,d2 *_eg .PdfObjectDictionary )bool {if len (d1 .Keys ())!=len (d2 .Keys ()){_cca .Log .Debug ("\u0044\u0069\u0063\u0074\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",len (d1 .Keys ()),len (d2 .Keys ()));
_cca .Log .Debug ("\u0057\u0061s\u0020\u0027\u0025s\u0027\u0020\u0076\u0073\u0020\u0027\u0025\u0073\u0027",d1 .WriteString (),d2 .WriteString ());return false ;};for _ ,_cfc :=range d1 .Keys (){if _cfc =="\u0050\u0061\u0072\u0065\u006e\u0074"{continue ;
};_fbd :=_eg .TraceToDirectObject (d1 .Get (_cfc ));_beb :=_eg .TraceToDirectObject (d2 .Get (_cfc ));if _fbd ==nil {_cca .Log .Debug ("\u00761\u0020\u0069\u0073\u0020\u006e\u0069l");return false ;};if _beb ==nil {_cca .Log .Debug ("\u00762\u0020\u0069\u0073\u0020\u006e\u0069l");
return false ;};switch _ba :=_fbd .(type ){case *_eg .PdfObjectDictionary :_ad ,_fbdd :=_beb .(*_eg .PdfObjectDictionary );if !_fbdd {_cca .Log .Debug ("\u0054\u0079\u0070\u0065 m\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020\u0025\u0054\u0020\u0076\u0073\u0020%\u0054",_fbd ,_beb );
return false ;};if !CompareDictionariesDeep (_ba ,_ad ){return false ;};continue ;case *_eg .PdfObjectArray :_dcc ,_dfe :=_beb .(*_eg .PdfObjectArray );if !_dfe {_cca .Log .Debug ("\u00762\u0020n\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return false ;};if _ba .Len ()!=_dcc .Len (){_cca .Log .Debug ("\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",_ba .Len (),_dcc .Len ());
return false ;};for _gb :=0;_gb < _ba .Len ();_gb ++{_gda :=_eg .TraceToDirectObject (_ba .Get (_gb ));_cdg :=_eg .TraceToDirectObject (_dcc .Get (_gb ));if _daa ,_dcb :=_gda .(*_eg .PdfObjectDictionary );_dcb {_dcf ,_aga :=_cdg .(*_eg .PdfObjectDictionary );
if !_aga {return false ;};if !CompareDictionariesDeep (_daa ,_dcf ){return false ;};}else {if _gda .WriteString ()!=_cdg .WriteString (){_cca .Log .Debug ("M\u0069\u0073\u006d\u0061tc\u0068 \u0027\u0025\u0073\u0027\u0020!\u003d\u0020\u0027\u0025\u0073\u0027",_gda .WriteString (),_cdg .WriteString ());
return false ;};};};continue ;};if _fbd .String ()!=_beb .String (){_cca .Log .Debug ("\u006b\u0065y\u003d\u0025\u0073\u0020\u004d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0021\u0020\u0027\u0025\u0073\u0027\u0020\u0021\u003d\u0020'%\u0073\u0027",_cfc ,_fbd .String (),_beb .String ());
_cca .Log .Debug ("\u0046o\u0072 \u0027\u0025\u0054\u0027\u0020\u002d\u0020\u0027\u0025\u0054\u0027",_fbd ,_beb );_cca .Log .Debug ("\u0046\u006f\u0072\u0020\u0027\u0025\u002b\u0076\u0027\u0020\u002d\u0020'\u0025\u002b\u0076\u0027",_fbd ,_beb );return false ;
};};return true ;};func CompareImages (img1 ,img2 _cf .Image )(bool ,error ){_fd :=img1 .Bounds ();_ac :=0;for _fb :=0;_fb < _fd .Size ().X ;_fb ++{for _dae :=0;_dae < _fd .Size ().Y ;_dae ++{_ea ,_fg ,_fgf ,_ :=img1 .At (_fb ,_dae ).RGBA ();_bfa ,_eff ,_eb ,_ :=img2 .At (_fb ,_dae ).RGBA ();
if _ea !=_bfa ||_fg !=_eff ||_fgf !=_eb {_ac ++;};};};_be :=float64 (_ac )/float64 (_fd .Dx ()*_fd .Dy ());if _be > 0.0001{_cfd .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_be ,_ac );
return false ,nil ;};return true ,nil ;};func CopyFile (src ,dst string )error {_b ,_fc :=_e .Open (src );if _fc !=nil {return _fc ;};defer _b .Close ();_de ,_fc :=_e .Create (dst );if _fc !=nil {return _fc ;};defer _de .Close ();_ ,_fc =_gc .Copy (_de ,_b );
return _fc ;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_dg :=_cd .LookPath ("\u0067\u0073");_dg !=nil {return ErrRenderNotSupported ;};return _cd .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_cfd .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};