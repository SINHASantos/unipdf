//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_f "crypto/rand";_ec "encoding/hex";_fc "io";);var Nil =_fb ;func (_a UUID )String ()string {var _ef [36]byte ;_bg (_ef [:],_a );return string (_ef [:])};func _bg (_ad []byte ,_c UUID ){_ec .Encode (_ad ,_c [:4]);_ad [8]='-';_ec .Encode (_ad [9:13],_c [4:6]);
_ad [13]='-';_ec .Encode (_ad [14:18],_c [6:8]);_ad [18]='-';_ec .Encode (_ad [19:23],_c [8:10]);_ad [23]='-';_ec .Encode (_ad [24:],_c [10:]);};func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_d :=_fc .ReadFull (_g ,uuid [:]);if _d !=nil {return _fb ,_d ;
};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};type UUID [16]byte ;func MustUUID ()UUID {uuid ,_fd :=NewUUID ();if _fd !=nil {panic (_fd );};return uuid ;};var _fb UUID ;var _g =_f .Reader ;