//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_d "crypto/rand";_a "encoding/hex";_f "io";);func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_e :=_f .ReadFull (_b ,uuid [:]);if _e !=nil {return _ee ,_e ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;
};var _b =_d .Reader ;var Nil =_ee ;func (_c UUID )String ()string {var _ef [36]byte ;_fg (_ef [:],_c );return string (_ef [:])};var _ee UUID ;func _fg (_bdf []byte ,_da UUID ){_a .Encode (_bdf ,_da [:4]);_bdf [8]='-';_a .Encode (_bdf [9:13],_da [4:6]);
_bdf [13]='-';_a .Encode (_bdf [14:18],_da [6:8]);_bdf [18]='-';_a .Encode (_bdf [19:23],_da [8:10]);_bdf [23]='-';_a .Encode (_bdf [24:],_da [10:]);};func MustUUID ()UUID {uuid ,_ed :=NewUUID ();if _ed !=nil {panic (_ed );};return uuid ;};type UUID [16]byte ;
