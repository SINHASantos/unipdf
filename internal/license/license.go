//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_gg "bytes";_d "compress/gzip";_f "crypto";_ed "crypto/aes";_dc "crypto/cipher";_ga "crypto/hmac";_ad "crypto/rand";_cf "crypto/rsa";_ac "crypto/sha256";_fe "crypto/sha512";_eg "crypto/x509";_ef "encoding/base64";_dg "encoding/hex";
_cg "encoding/json";_gc "encoding/pem";_bd "errors";_aa "fmt";_be "github.com/unidoc/unipdf/v3/common";_a "io";_ce "io/ioutil";_gf "net";_ca "net/http";_bf "os";_b "path/filepath";_e "sort";_da "strings";_c "sync";_eb "time";);const (_ee ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_bed ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func (_dbg *meteredClient )getStatus ()(meteredStatusResp ,error ){var _acd meteredStatusResp ;
_de :=_dbg ._cfe +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _dbc meteredStatusForm ;_eef ,_dgb :=_cg .Marshal (_dbc );if _dgb !=nil {return _acd ,_dgb ;};_bcd ,_dgb :=_daec (_eef );if _dgb !=nil {return _acd ,_dgb ;
};_bgd ,_dgb :=_ca .NewRequest ("\u0050\u004f\u0053\u0054",_de ,_bcd );if _dgb !=nil {return _acd ,_dgb ;};_bgd .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bgd .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bgd .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bgd .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_dbg ._cec );_abc ,_dgb :=_dbg ._dcf .Do (_bgd );if _dgb !=nil {return _acd ,_dgb ;};defer _abc .Body .Close ();if _abc .StatusCode !=200{return _acd ,_aa .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_abc .StatusCode );
};_dff ,_dgb :=_bca (_abc );if _dgb !=nil {return _acd ,_dgb ;};_dgb =_cg .Unmarshal (_dff ,&_acd );if _dgb !=nil {return _acd ,_dgb ;};return _acd ,nil ;};func SetMeteredKeyUsageLogVerboseMode (val bool ){_gdfd ._cb =val };func GetMeteredState ()(MeteredStatus ,error ){if _gdfd ==nil {return MeteredStatus {},_bd .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gdfd ._adf ||len (_gdfd ._bc )==0{return MeteredStatus {},_bd .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_gbe ,_fd :=_ged .loadState (_gdfd ._bc );if _fd !=nil {_be .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fd );
return MeteredStatus {},_fd ;};if _gbe .Docs > 0{_abge :=_fde ("","","",true );if _abge !=nil {return MeteredStatus {},_abge ;};};_gdbc .Lock ();defer _gdbc .Unlock ();_af :=_ccf ();_af ._cec =_gdfd ._bc ;_ff ,_fd :=_af .getStatus ();if _fd !=nil {return MeteredStatus {},_fd ;
};if !_ff .Valid {return MeteredStatus {},_bd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_gfd :=MeteredStatus {OK :true ,Credits :_ff .OrgCredits ,Used :_ff .OrgUsed };return _gfd ,nil ;};var _ged stateLoader =defaultStateHolder {};
func _efb (_fc string ,_ea string )([]byte ,error ){var (_cgc int ;_df string ;);for _ ,_df =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _cgc =_da .Index (_ea ,_df );_cgc !=-1{break ;};};if _cgc ==-1{return nil ,_aa .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_edf :=_ea [:_cgc ];_dae :=_cgc +len (_df );_edg :=_ea [_dae :];if _edf ==""||_edg ==""{return nil ,_aa .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_efe ,_becc :=_ef .StdEncoding .DecodeString (_edf );if _becc !=nil {return nil ,_aa .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_fcb ,_becc :=_ef .StdEncoding .DecodeString (_edg );
if _becc !=nil {return nil ,_aa .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_bedd ,_ :=_gc .Decode ([]byte (_fc ));if _bedd ==nil {return nil ,_aa .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_agb ,_becc :=_eg .ParsePKIXPublicKey (_bedd .Bytes );if _becc !=nil {return nil ,_becc ;};_dfd :=_agb .(*_cf .PublicKey );if _dfd ==nil {return nil ,_aa .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_fca :=_fe .New ();_fca .Write (_efe );_aec :=_fca .Sum (nil );_becc =_cf .VerifyPKCS1v15 (_dfd ,_f .SHA512 ,_aec ,_fcb );if _becc !=nil {return nil ,_becc ;};return _efe ,nil ;};func _aba (_aaee *_ca .Response )(_a .ReadCloser ,error ){var _gdea error ;
var _cca _a .ReadCloser ;switch _da .ToLower (_aaee .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cca ,_gdea =_d .NewReader (_aaee .Body );if _gdea !=nil {return _cca ,_gdea ;
};defer _cca .Close ();default:_cca =_aaee .Body ;};return _cca ,nil ;};func _gbbc ()([]string ,[]string ,error ){_dbf ,_ccg :=_gf .Interfaces ();if _ccg !=nil {return nil ,nil ,_ccg ;};var _bbgc []string ;var _gde []string ;for _ ,_dac :=range _dbf {if _dac .Flags &_gf .FlagUp ==0||_gg .Equal (_dac .HardwareAddr ,nil ){continue ;
};_gcdf ,_bcb :=_dac .Addrs ();if _bcb !=nil {return nil ,nil ,_bcb ;};_ffc :=0;for _ ,_afc :=range _gcdf {var _degf _gf .IP ;switch _fcac :=_afc .(type ){case *_gf .IPNet :_degf =_fcac .IP ;case *_gf .IPAddr :_degf =_fcac .IP ;};if _degf .IsLoopback (){continue ;
};if _degf .To4 ()==nil {continue ;};_gde =append (_gde ,_degf .String ());_ffc ++;};_fge :=_dac .HardwareAddr .String ();if _fge !=""&&_ffc > 0{_bbgc =append (_bbgc ,_fge );};};return _bbgc ,_gde ,nil ;};const _fgc ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";
func _daec (_ebae []byte )(_a .Reader ,error ){_dfbc :=new (_gg .Buffer );_efc :=_d .NewWriter (_dfbc );_efc .Write (_ebae );_ec :=_efc .Close ();if _ec !=nil {return nil ,_ec ;};return _dfbc ,nil ;};func _caa (_ada string ,_bdf string ,_ab string )(string ,error ){_dcc :=_da .Index (_ab ,_ada );
if _dcc ==-1{return "",_aa .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdd :=_da .Index (_ab ,_bdf );if _bdd ==-1{return "",_aa .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_aef :=_dcc +len (_ada )+1;return _ab [_aef :_bdd -1],nil ;};func _daa (_aeg ,_egfa []byte )([]byte ,error ){_fdg :=make ([]byte ,_ef .URLEncoding .DecodedLen (len (_egfa )));_efee ,_eee :=_ef .URLEncoding .Decode (_fdg ,_egfa );if _eee !=nil {return nil ,_eee ;
};_fdg =_fdg [:_efee ];_ffec ,_eee :=_ed .NewCipher (_aeg );if _eee !=nil {return nil ,_eee ;};if len (_fdg )< _ed .BlockSize {return nil ,_bd .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_gcde :=_fdg [:_ed .BlockSize ];
_fdg =_fdg [_ed .BlockSize :];_bbgb :=_dc .NewCFBDecrypter (_ffec ,_gcde );_bbgb .XORKeyStream (_fdg ,_fdg );return _fdg ,nil ;};type stateLoader interface{loadState (_fg string )(reportState ,error );updateState (_fee ,_geb ,_egb string ,_aaed int ,_bde bool ,_afe int ,_bfe int ,_dccc _eb .Time ,_dd map[string ]int ,_bgc ...interface{})error ;
};const _gdee ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _eb .Time `json:"lr"`;LastWritten _eb .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;UsageLogs []interface{}`json:"ul,omitempty"`;};type defaultStateHolder struct{};var _gdbc =&_c .Mutex {};func MakeUnlicensedKey ()*LicenseKey {_cfd :=LicenseKey {};_cfd .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_cfd .Tier =LicenseTierUnlicensed ;_cfd .CreatedAt =_eb .Now ().UTC ();_cfd .CreatedAtInt =_cfd .CreatedAt .Unix ();return &_cfd ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};const _fgg ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func _ffeeb ()(_gf .IP ,error ){_afb ,_cfeg :=_gf .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _cfeg !=nil {return nil ,_cfeg ;};defer _afb .Close ();_cgcb :=_afb .LocalAddr ().(*_gf .UDPAddr );return _cgcb .IP ,nil ;
};func _fb (_ba string ,_ge []byte )(string ,error ){_ae ,_ :=_gc .Decode ([]byte (_ba ));if _ae ==nil {return "",_aa .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_bfb ,_fa :=_eg .ParsePKCS1PrivateKey (_ae .Bytes );
if _fa !=nil {return "",_fa ;};_eeg :=_fe .New ();_eeg .Write (_ge );_aae :=_eeg .Sum (nil );_bec ,_fa :=_cf .SignPKCS1v15 (_ad .Reader ,_bfb ,_f .SHA512 ,_aae );if _fa !=nil {return "",_fa ;};_bdc :=_ef .StdEncoding .EncodeToString (_ge );_bdc +="\u000a\u002b\u000a";
_bdc +=_ef .StdEncoding .EncodeToString (_bec );return _bdc ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;
LimitDocs bool `json:"ld"`;};type meteredClient struct{_cfe string ;_cec string ;_dcf *_ca .Client ;};func (_ggef *LicenseKey )isExpired ()bool {return _ggef .getExpiryDateToCompare ().After (*_ggef .ExpiresAt );};func SetMeteredKeyPersistentCache (val bool ){_gdfd ._bb =val };
func (_adfd *LicenseKey )ToString ()string {if _adfd ._adf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_abg :=_aa .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_adfd .LicenseId );
_abg +=_aa .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_adfd .CustomerId );_abg +=_aa .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_adfd .CustomerName );
_abg +=_aa .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_adfd .Tier );_abg +=_aa .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_be .UtcTimeFormat (_adfd .CreatedAt ));if _adfd .ExpiresAt ==nil {_abg +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_abg +=_aa .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_be .UtcTimeFormat (*_adfd .ExpiresAt ));};_abg +=_aa .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_adfd .CreatorName ,_adfd .CreatorEmail );
return _abg ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};type meteredStatusForm struct{};var _agbf =_eb .Date (2020,1,1,0,0,0,0,_eb .UTC );
func _fce (_gge string )(LicenseKey ,error ){var _bg LicenseKey ;_aeaf ,_ebg :=_caa (_ee ,_bed ,_gge );if _ebg !=nil {return _bg ,_ebg ;};_cgd ,_ebg :=_efb (_gdee ,_aeaf );if _ebg !=nil {return _bg ,_ebg ;};_ebg =_cg .Unmarshal (_cgd ,&_bg );if _ebg !=nil {return _bg ,_ebg ;
};_bg .CreatedAt =_eb .Unix (_bg .CreatedAtInt ,0);if _bg .ExpiresAtInt > 0{_gb :=_eb .Unix (_bg .ExpiresAtInt ,0);_bg .ExpiresAt =&_gb ;};return _bg ,nil ;};func (_bfc *LicenseKey )getExpiryDateToCompare ()_eb .Time {if _bfc .Trial {return _eb .Now ().UTC ();
};return _be .ReleasedAt ;};func _bca (_gbd *_ca .Response )([]byte ,error ){var _dee []byte ;_abcf ,_afa :=_aba (_gbd );if _afa !=nil {return _dee ,_afa ;};return _ce .ReadAll (_abcf );};func (_fcf *LicenseKey )IsLicensed ()bool {return _fcf .Tier !=LicenseTierUnlicensed ||_fcf ._adf };
func (_cc *LicenseKey )TypeToString ()string {if _cc ._adf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _cc .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _cc .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _cc .Tier ==LicenseTierIndividual ||_cc .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};const _bff ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func _ccf ()*meteredClient {_aeb :=meteredClient {_cfe :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_dcf :&_ca .Client {Timeout :30*_eb .Second }};if _gdf :=_bf .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_da .HasPrefix (_gdf ,"\u0068\u0074\u0074\u0070"){_aeb ._cfe =_gdf ;};return &_aeb ;};func SetLicenseKey (content string ,customerName string )error {_gff ,_adfda :=_fce (content );if _adfda !=nil {_be .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_adfda );
return _adfda ;};if !_da .EqualFold (_gff .CustomerName ,customerName ){_be .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_gff .CustomerName ,customerName );
return _aa .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_gff .CustomerName ,customerName );
};_adfda =_gff .Validate ();if _adfda !=nil {_be .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_adfda );
return _adfda ;};_gdfd =&_gff ;return nil ;};func TrackUse (useKey string ){if _gdfd ==nil {return ;};if !_gdfd ._adf ||len (_gdfd ._bc )==0{return ;};if len (useKey )==0{return ;};_gdbc .Lock ();defer _gdbc .Unlock ();if _dcd ==nil {_dcd =map[string ]int {};
};_dcd [useKey ]++;};var _adae []interface{};func _fde (_dda string ,_abga string ,_gbf string ,_dgf bool )error {if _gdfd ==nil {return _bd .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_gdfd ._adf ||len (_gdfd ._bc )==0{return nil ;
};if len (_dda )==0&&!_dgf {return _bd .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_gdbc .Lock ();defer _gdbc .Unlock ();if _gbb ==nil {_gbb =map[string ]struct{}{};};if _dcd ==nil {_dcd =map[string ]int {};
};_aecb :=0;if len (_dda )> 0{_ ,_ffee :=_gbb [_dda ];if !_ffee {_gbb [_dda ]=struct{}{};_aecb ++;};if _gdfd ._cb {_adae =append (_adae ,map[string ]interface{}{"\u0074\u0069\u006d\u0065":_eb .Now ().String (),"\u0066\u0075\u006e\u0063":_abga ,"\u0072\u0065\u0066":_dda [:8],"\u0066\u0069\u006c\u0065":_gbf ,"\u0063\u006f\u0073\u0074":_aecb });
if _ffee &&_aecb ==0{_be .Log .Info ("\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025\u0073 \u007c \u004e\u006f\u0020\u0063\u0072\u0065\u0064\u0069\u0074\u0020\u0075\u0073\u0065\u0064",_eb .Now ().String (),_dda [:8],_abga );
};};};if _aecb ==0&&!_dgf {return nil ;};_dcd [_abga ]++;_bbg :=_eb .Now ();_add ,_cfa :=_ged .loadState (_gdfd ._bc );if _cfa !=nil {_be .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfa );return _cfa ;};_add .UsageLogs =append (_add .UsageLogs ,_adae ...);
if _add .Usage ==nil {_add .Usage =map[string ]int {};};for _aca ,_afed :=range _dcd {if _aca !=""{_add .Usage [_aca ]+=_afed ;};};_dcd =nil ;const _ebb =24*_eb .Hour ;const _acg =3*24*_eb .Hour ;if len (_add .Instance )==0||_bbg .Sub (_add .LastReported )> _ebb ||(_add .LimitDocs &&_add .RemainingDocs <=_add .Docs +int64 (_aecb ))||_dgf {_ebe ,_badf :=_bf .Hostname ();
if _badf !=nil {return _badf ;};_gfde :=_add .Docs ;_ebbd ,_cgg ,_badf :=_gbbc ();if _badf !=nil {_be .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_badf .Error ());
_ebbd =append (_ebbd ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_cgg =append (_cgg ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_e .Strings (_cgg );_e .Strings (_ebbd );_gdd ,_ggd :=_ffeeb ();if _ggd !=nil {return _ggd ;};_fac :=false ;for _ ,_bda :=range _cgg {if _bda ==_gdd .String (){_fac =true ;};};if !_fac {_cgg =append (_cgg ,_gdd .String ());};};_gbg :=_ccf ();_gbg ._cec =_gdfd ._bc ;
_gfde +=int64 (_aecb );_fgb :=meteredUsageCheckinForm {Instance :_add .Instance ,Next :_add .Next ,UsageNumber :int (_gfde ),NumFailed :_add .NumErrors ,Hostname :_ebe ,LocalIP :_da .Join (_cgg ,"\u002c\u0020"),MacAddress :_da .Join (_ebbd ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_be .Version ,Usage :_add .Usage ,IsPersistentCache :_gdfd ._bb ,Timestamp :_bbg .Unix ()};
if len (_ebbd )==0{_fgb .MacAddress ="\u006e\u006f\u006e\u0065";};if _gdfd ._cb {_fgb .UsageLogs =_add .UsageLogs ;};_ffd :=int64 (0);_ccb :=_add .NumErrors ;_bbf :=_bbg ;_bfbf :=0;_efg :=_add .LimitDocs ;_dfb ,_badf :=_gbg .checkinUsage (_fgb );if _badf !=nil {if _bbg .Sub (_add .LastReported )> _acg {if !_dfb .Success {return _bd .New (_dfb .Message );
};return _bd .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_ffd =_gfde ;_ccb ++;
_bbf =_add .LastReported ;}else {_efg =_dfb .LimitDocs ;_bfbf =_dfb .RemainingDocs ;_ccb =0;};if len (_dfb .Instance )==0{_dfb .Instance =_fgb .Instance ;};if len (_dfb .Next )==0{_dfb .Next =_fgb .Next ;};_badf =_ged .updateState (_gbg ._cec ,_dfb .Instance ,_dfb .Next ,int (_ffd ),_efg ,_bfbf ,int (_ccb ),_bbf ,nil );
if _badf !=nil {return _badf ;};if !_dfb .Success {return _aa .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_dfb .Message );};}else {_cfa =_ged .updateState (_gdfd ._bc ,_add .Instance ,_add .Next ,int (_add .Docs )+_aecb ,_add .LimitDocs ,int (_add .RemainingDocs ),int (_add .NumErrors ),_add .LastReported ,_add .Usage ,_add .UsageLogs ...);
if _cfa !=nil {return _cfa ;};};if _gdfd ._cb &&len (_dda )> 0{_fed :="";if _gbf !=""{_fed =_aa .Sprintf ("\u0046i\u006c\u0065\u0020\u0025\u0073\u0020|",_gbf );};_be .Log .Info ("%\u0073\u0020\u007c\u0020\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025s\u0020\u007c\u0020\u0025\u0064\u0020\u0063\u0072\u0065\u0064it\u0028\u0073\u0029 \u0075s\u0065\u0064",_bbg .String (),_fed ,_dda [:8],_abga ,_aecb );
};return nil ;};func (_eba defaultStateHolder )loadState (_ffaf string )(reportState ,error ){_aecg ,_bad :=_bbe ();if _bad !=nil {return reportState {},_bad ;};_bad =_bf .MkdirAll (_aecg ,0777);if _bad !=nil {return reportState {},_bad ;};if len (_ffaf )< 20{return reportState {},_bd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_eeaa :=[]byte (_ffaf );_fdb :=_fe .Sum512_256 (_eeaa [:20]);_eeb :=_dg .EncodeToString (_fdb [:]);_gcdb :=_b .Join (_aecg ,_eeb );_aafc ,_bad :=_ce .ReadFile (_gcdb );if _bad !=nil {if _bf .IsNotExist (_bad ){return reportState {},nil ;};_be .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bad );
return reportState {},_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _bcf ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_aafc ,_bad =_daa ([]byte (_bcf ),_aafc );if _bad !=nil {return reportState {},_bad ;
};var _dba reportState ;_bad =_cg .Unmarshal (_aafc ,&_dba );if _bad !=nil {_be .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bad );return reportState {},_bd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _dba ,nil ;};func _ebde (_eacf ,_bgf string )string {_dbe :=[]byte (_eacf );_dbeg :=_ga .New (_ac .New ,_dbe );_dbeg .Write ([]byte (_bgf ));return _ef .StdEncoding .EncodeToString (_dbeg .Sum (nil ));};func GetLicenseKey ()*LicenseKey {if _gdfd ==nil {return nil ;
};_bee :=*_gdfd ;return &_bee ;};func Track (docKey string ,useKey string ,docName string )error {return _fde (docKey ,useKey ,docName ,!_gdfd ._bb );};var _gfb =_eb .Date (2010,1,1,0,0,0,0,_eb .UTC );func (_fba *meteredClient )checkinUsage (_ggb meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ggb .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_ggb .PackageVersion =_be .Version ;var _bge meteredUsageCheckinResp ;_gcd :=_fba ._cfe +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_egf ,_gga :=_cg .Marshal (_ggb );if _gga !=nil {return _bge ,_gga ;
};_fcg ,_gga :=_daec (_egf );if _gga !=nil {return _bge ,_gga ;};_gdb ,_gga :=_ca .NewRequest ("\u0050\u004f\u0053\u0054",_gcd ,_fcg );if _gga !=nil {return _bge ,_gga ;};_gdb .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gdb .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gdb .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gdb .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fba ._cec );_dfde ,_gga :=_fba ._dcf .Do (_gdb );if _gga !=nil {return _bge ,_gga ;};defer _dfde .Body .Close ();if _dfde .StatusCode !=200{_dbcc ,_bba :=_bca (_dfde );if _bba !=nil {return _bge ,_bba ;
};_bba =_cg .Unmarshal (_dbcc ,&_bge );if _bba !=nil {return _bge ,_bba ;};return _bge ,_aa .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_dfde .StatusCode );
};_bea :=_dfde .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_fbg :=_ebde (_ggb .MacAddress ,string (_egf ));if _fbg !=_bea {_be .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _bge ,_bd .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_gfa ,_gga :=_bca (_dfde );if _gga !=nil {return _bge ,_gga ;};_gga =_cg .Unmarshal (_gfa ,&_bge );if _gga !=nil {return _bge ,_gga ;};return _bge ,nil ;};func (_ace defaultStateHolder )updateState (_eec ,_deg ,_abe string ,_ffe int ,_eea bool ,_gaf int ,_ffa int ,_ffb _eb .Time ,_daf map[string ]int ,_cgad ...interface{})error {_efed ,_bbb :=_bbe ();
if _bbb !=nil {return _bbb ;};if len (_eec )< 20{return _bd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_fcfg :=[]byte (_eec );_bbaf :=_fe .Sum512_256 (_fcfg [:20]);_ebd :=_dg .EncodeToString (_bbaf [:]);_aad :=_b .Join (_efed ,_ebd );
var _ebf reportState ;_ebf .Docs =int64 (_ffe );_ebf .NumErrors =int64 (_ffa );_ebf .LimitDocs =_eea ;_ebf .RemainingDocs =int64 (_gaf );_ebf .LastWritten =_eb .Now ().UTC ();_ebf .LastReported =_ffb ;_ebf .Instance =_deg ;_ebf .Next =_abe ;_ebf .Usage =_daf ;
_ebf .UsageLogs =_cgad ;_adb ,_bbb :=_cg .Marshal (_ebf );if _bbb !=nil {return _bbb ;};const _cag ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_adb ,_bbb =_dbce ([]byte (_cag ),_adb );if _bbb !=nil {return _bbb ;
};_bbb =_ce .WriteFile (_aad ,_adb ,0600);if _bbb !=nil {return _bbb ;};return nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_be .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_be .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _aa .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gdfd !=nil &&(_gdfd ._adf ||_gdfd .Tier !=LicenseTierUnlicensed ){_be .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _bd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_gca :=_ccf ();_gca ._cec =apiKey ;_bdfc ,_eaf :=_gca .getStatus ();if _eaf !=nil {return _eaf ;};if !_bdfc .Valid {return _bd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_cgb :=&LicenseKey {_adf :true ,_bc :apiKey ,_bb :true };_gdfd =_cgb ;return nil ;};var _gbb map[string ]struct{};func _dbce (_ebbb ,_dbgd []byte )([]byte ,error ){_gafd ,_dde :=_ed .NewCipher (_ebbb );if _dde !=nil {return nil ,_dde ;};_aag :=make ([]byte ,_ed .BlockSize +len (_dbgd ));
_cee :=_aag [:_ed .BlockSize ];if _ ,_dgfe :=_a .ReadFull (_ad .Reader ,_cee );_dgfe !=nil {return nil ,_dgfe ;};_cab :=_dc .NewCFBEncrypter (_gafd ,_cee );_cab .XORKeyStream (_aag [_ed .BlockSize :],_dbgd );_eac :=make ([]byte ,_ef .URLEncoding .EncodedLen (len (_aag )));
_ef .URLEncoding .Encode (_eac ,_aag );return _eac ,nil ;};func init (){_dgbf :=_bf .Getenv (_fgg );_eafa :=_bf .Getenv (_bff );if len (_dgbf )==0||len (_eafa )==0{return ;};_bfa ,_fff :=_ce .ReadFile (_dgbf );if _fff !=nil {_be .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_fff );
return ;};_fff =SetLicenseKey (string (_bfa ),_eafa );if _fff !=nil {_be .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fff );
return ;};};func (_cga *LicenseKey )Validate ()error {if _cga ._adf {return nil ;};if len (_cga .LicenseId )< 10{return _aa .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_cga .CustomerId )< 10{return _aa .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_cga .CustomerName )< 1{return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _gfb .After (_cga .CreatedAt ){return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cga .ExpiresAt ==nil {_gd :=_cga .CreatedAt .AddDate (1,0,0);if _agbf .After (_gd ){_gd =_agbf ;};_cga .ExpiresAt =&_gd ;};if _cga .CreatedAt .After (*_cga .ExpiresAt ){return _aa .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _cga .isExpired (){_aaf :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _aa .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_aaf );};if len (_cga .CreatorName )< 1{return _aa .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_cga .CreatorEmail )< 1{return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _cga .CreatedAt .After (_bgg ){if !_cga .UniPDF {return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _bgg =_eb .Date (2019,6,6,0,0,0,0,_eb .UTC );var _dcd map[string ]int ;type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;
CreatedAt _eb .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_eb .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;
UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_adf bool ;_bc string ;_bb bool ;_cb bool ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func _fgfd ()string {_fcacd :=_bf .Getenv ("\u0048\u004f\u004d\u0045");if len (_fcacd )==0{_fcacd ,_ =_bf .UserHomeDir ();
};return _fcacd ;};func _bbe ()(string ,error ){_edc :=_da .TrimSpace (_bf .Getenv (_fgc ));if _edc ==""{_be .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_fgc );
_dec :=_fgfd ();if len (_dec )==0{return "",_aa .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fgc );
};_edc =_b .Join (_dec ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_addb :=_bf .MkdirAll (_edc ,0777);if _addb !=nil {return "",_addb ;};return _edc ,nil ;};var _gdfd =MakeUnlicensedKey ();