//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_fe "bytes";_bf "compress/gzip";_d "crypto";_fa "crypto/aes";_bea "crypto/cipher";_ad "crypto/hmac";_ee "crypto/rand";_fea "crypto/rsa";_cg "crypto/sha256";_gb "crypto/sha512";_aa "crypto/x509";_e "encoding/base64";_fd "encoding/hex";
_cb "encoding/json";_gd "encoding/pem";_da "errors";_ba "fmt";_cc "github.com/unidoc/unipdf/v3/common";_b "io";_ge "io/ioutil";_bc "net";_be "net/http";_a "os";_db "path/filepath";_g "sort";_fb "strings";_f "sync";_cf "time";);var _aef =_cf .Date (2019,6,6,0,0,0,0,_cf .UTC );
func _bca (_fg string ,_fff string ,_adc string )(string ,error ){_fffa :=_fb .Index (_adc ,_fg );if _fffa ==-1{return "",_ba .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dc :=_fb .Index (_adc ,_fff );
if _dc ==-1{return "",_ba .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_feb :=_fffa +len (_fg )+1;return _adc [_feb :_dc -1],nil ;};type meteredClient struct{_ddg string ;_gbe string ;_fdb *_be .Client ;
};func _efbf ()string {_cdg :=_a .Getenv ("\u0048\u004f\u004d\u0045");if len (_cdg )==0{_cdg ,_ =_a .UserHomeDir ();};return _cdg ;};func (_aed *LicenseKey )isExpired ()bool {return _aed .getExpiryDateToCompare ().After (*_aed .ExpiresAt )};func _fgc (_cae ,_gbb []byte )([]byte ,error ){_afg ,_fec :=_fa .NewCipher (_cae );
if _fec !=nil {return nil ,_fec ;};_cdd :=make ([]byte ,_fa .BlockSize +len (_gbb ));_cdff :=_cdd [:_fa .BlockSize ];if _ ,_efd :=_b .ReadFull (_ee .Reader ,_cdff );_efd !=nil {return nil ,_efd ;};_fde :=_bea .NewCFBEncrypter (_afg ,_cdff );_fde .XORKeyStream (_cdd [_fa .BlockSize :],_gbb );
_bcg :=make ([]byte ,_e .URLEncoding .EncodedLen (len (_cdd )));_e .URLEncoding .Encode (_bcg ,_cdd );return _bcg ,nil ;};type defaultStateHolder struct{};const _dbac ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _ebe (_dge string )(LicenseKey ,error ){var _de LicenseKey ;_ffd ,_cd :=_bca (_bce ,_dg ,_dge );if _cd !=nil {return _de ,_cd ;};_dbc ,_cd :=_cfe (_dbac ,_ffd );if _cd !=nil {return _de ,_cd ;};_cd =_cb .Unmarshal (_dbc ,&_de );if _cd !=nil {return _de ,_cd ;
};_de .CreatedAt =_cf .Unix (_de .CreatedAtInt ,0);if _de .ExpiresAtInt > 0{_fad :=_cf .Unix (_de .ExpiresAtInt ,0);_de .ExpiresAt =&_fad ;};return _de ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type meteredStatusForm struct{};
var _ga map[string ]int ;func (_cgf *LicenseKey )TypeToString ()string {if _cgf ._ebf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _cgf .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _cgf .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _cgf .Tier ==LicenseTierIndividual ||_cgf .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;
Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};const (_bce ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_dg ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func _adg ()(string ,error ){_cde :=_fb .TrimSpace (_a .Getenv (_egf ));
if _cde ==""{_cc .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_egf );
_gda :=_efbf ();if len (_gda )==0{return "",_ba .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_egf );
};_cde =_db .Join (_gda ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_dfe :=_a .MkdirAll (_cde ,0777);if _dfe !=nil {return "",_dfe ;};return _cde ,nil ;};var _aaf =_cf .Date (2020,1,1,0,0,0,0,_cf .UTC );func SetMeteredKeyPersistentCache (val bool ){_edg ._bee =val };
func _bdd (_fgdg *_be .Response )([]byte ,error ){var _bcbe []byte ;_fce ,_cag :=_gdg (_fgdg );if _cag !=nil {return _bcbe ,_cag ;};return _ge .ReadAll (_fce );};func Track (docKey string ,useKey string )error {return _dbdfg (docKey ,useKey ,!_edg ._bee )};
func MakeUnlicensedKey ()*LicenseKey {_eec :=LicenseKey {};_eec .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_eec .Tier =LicenseTierUnlicensed ;_eec .CreatedAt =_cf .Now ().UTC ();_eec .CreatedAtInt =_eec .CreatedAt .Unix ();
return &_eec ;};const _egaf ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func TrackUse (useKey string ){if _edg ==nil {return ;};if !_edg ._ebf ||len (_edg ._aac )==0{return ;};if len (useKey )==0{return ;
};_ege .Lock ();defer _ege .Unlock ();if _ga ==nil {_ga =map[string ]int {};};_ga [useKey ]++;};var _fgf stateLoader =defaultStateHolder {};func (_dd *LicenseKey )getExpiryDateToCompare ()_cf .Time {if _dd .Trial {return _cf .Now ().UTC ();};return _cc .ReleasedAt ;
};func (_cgg defaultStateHolder )updateState (_dbb ,_deeg ,_eaf string ,_dab int ,_dga bool ,_dbdf int ,_dgdf int ,_edf _cf .Time ,_ega map[string ]int )error {_fbd ,_ccf :=_adg ();if _ccf !=nil {return _ccf ;};if len (_dbb )< 20{return _da .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_ac :=[]byte (_dbb );_fac :=_gb .Sum512_256 (_ac [:20]);_dgc :=_fd .EncodeToString (_fac [:]);_beg :=_db .Join (_fbd ,_dgc );var _beaf reportState ;_beaf .Docs =int64 (_dab );_beaf .NumErrors =int64 (_dgdf );_beaf .LimitDocs =_dga ;_beaf .RemainingDocs =int64 (_dbdf );
_beaf .LastWritten =_cf .Now ().UTC ();_beaf .LastReported =_edf ;_beaf .Instance =_deeg ;_beaf .Next =_eaf ;_beaf .Usage =_ega ;_acb ,_ccf :=_cb .Marshal (_beaf );if _ccf !=nil {return _ccf ;};const _abfe ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_acb ,_ccf =_fgc ([]byte (_abfe ),_acb );if _ccf !=nil {return _ccf ;};_ccf =_ge .WriteFile (_beg ,_acb ,0600);if _ccf !=nil {return _ccf ;};return nil ;};func GetLicenseKey ()*LicenseKey {if _edg ==nil {return nil ;};_cdc :=*_edg ;return &_cdc ;};var _ege =&_f .Mutex {};
func _gde ()*meteredClient {_fdc :=meteredClient {_ddg :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_fdb :&_be .Client {Timeout :30*_cf .Second }};if _aab :=_a .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_fb .HasPrefix (_aab ,"\u0068\u0074\u0074\u0070"){_fdc ._ddg =_aab ;};return &_fdc ;};var _dcb =_cf .Date (2010,1,1,0,0,0,0,_cf .UTC );type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func (_gdeb *meteredClient )checkinUsage (_egb meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_egb .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_egb .PackageVersion =_cc .Version ;var _bgf meteredUsageCheckinResp ;_dfc :=_gdeb ._ddg +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_gdc ,_ddb :=_cb .Marshal (_egb );if _ddb !=nil {return _bgf ,_ddb ;
};_bba ,_ddb :=_cdfg (_gdc );if _ddb !=nil {return _bgf ,_ddb ;};_ffab ,_ddb :=_be .NewRequest ("\u0050\u004f\u0053\u0054",_dfc ,_bba );if _ddb !=nil {return _bgf ,_ddb ;};_ffab .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_ffab .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ffab .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ffab .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gdeb ._gbe );_dec ,_ddb :=_gdeb ._fdb .Do (_ffab );if _ddb !=nil {return _bgf ,_ddb ;};defer _dec .Body .Close ();if _dec .StatusCode !=200{_beb ,_dbd :=_bdd (_dec );if _dbd !=nil {return _bgf ,_dbd ;
};_dbd =_cb .Unmarshal (_beb ,&_bgf );if _dbd !=nil {return _bgf ,_dbd ;};return _bgf ,_ba .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_dec .StatusCode );
};_gdd :=_dec .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_ea :=_ace (_egb .MacAddress ,string (_gdc ));if _ea !=_gdd {_cc .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _bgf ,_da .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_gbc ,_ddb :=_bdd (_dec );if _ddb !=nil {return _bgf ,_ddb ;};_ddb =_cb .Unmarshal (_gbc ,&_bgf );if _ddb !=nil {return _bgf ,_ddb ;};return _bgf ,nil ;};func _gdg (_bff *_be .Response )(_b .ReadCloser ,error ){var _eba error ;var _gdde _b .ReadCloser ;
switch _fb .ToLower (_bff .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_gdde ,_eba =_bf .NewReader (_bff .Body );if _eba !=nil {return _gdde ,_eba ;};defer _gdde .Close ();
default:_gdde =_bff .Body ;};return _gdde ,nil ;};func _ace (_gbd ,_bge string )string {_fgfa :=[]byte (_gbd );_ccc :=_ad .New (_cg .New ,_fgfa );_ccc .Write ([]byte (_bge ));return _e .StdEncoding .EncodeToString (_ccc .Sum (nil ));};func (_ce *LicenseKey )Validate ()error {if _ce ._ebf {return nil ;
};if len (_ce .LicenseId )< 10{return _ba .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_ce .CustomerId )< 10{return _ba .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_ce .CustomerName )< 1{return _ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _dcb .After (_ce .CreatedAt ){return _ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ce .ExpiresAt ==nil {_bfd :=_ce .CreatedAt .AddDate (1,0,0);if _aaf .After (_bfd ){_bfd =_aaf ;};_ce .ExpiresAt =&_bfd ;};if _ce .CreatedAt .After (*_ce .ExpiresAt ){return _ba .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ce .isExpired (){_abb :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _ba .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_abb );};if len (_ce .CreatorName )< 1{return _ba .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_ce .CreatorEmail )< 1{return _ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _ce .CreatedAt .After (_aef ){if !_ce .UniPDF {return _ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func (_bg *LicenseKey )IsLicensed ()bool {return _bg .Tier !=LicenseTierUnlicensed ||_bg ._ebf };func _cdfg (_geb []byte )(_b .Reader ,error ){_gce :=new (_fe .Buffer );_dece :=_bf .NewWriter (_gce );_dece .Write (_geb );_ggc :=_dece .Close ();
if _ggc !=nil {return nil ,_ggc ;};return _gce ,nil ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func (_fga *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bbf meteredStatusResp ;
_dac :=_fga ._ddg +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _feg meteredStatusForm ;_ed ,_efb :=_cb .Marshal (_feg );if _efb !=nil {return _bbf ,_efb ;};_fegb ,_efb :=_cdfg (_ed );if _efb !=nil {return _bbf ,_efb ;
};_fbc ,_efb :=_be .NewRequest ("\u0050\u004f\u0053\u0054",_dac ,_fegb );if _efb !=nil {return _bbf ,_efb ;};_fbc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fbc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fbc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fbc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fga ._gbe );_gdee ,_efb :=_fga ._fdb .Do (_fbc );if _efb !=nil {return _bbf ,_efb ;};defer _gdee .Body .Close ();if _gdee .StatusCode !=200{return _bbf ,_ba .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gdee .StatusCode );
};_ffg ,_efb :=_bdd (_gdee );if _efb !=nil {return _bbf ,_efb ;};_efb =_cb .Unmarshal (_ffg ,&_bbf );if _efb !=nil {return _bbf ,_efb ;};return _bbf ,nil ;};const _edag ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
var _edg =MakeUnlicensedKey ();func SetLicenseKey (content string ,customerName string )error {_dcf ,_deac :=_ebe (content );if _deac !=nil {_cc .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_deac );
return _deac ;};if !_fb .EqualFold (_dcf .CustomerName ,customerName ){_cc .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_dcf .CustomerName ,customerName );
return _ba .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_dcf .CustomerName ,customerName );
};_deac =_dcf .Validate ();if _deac !=nil {_cc .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_deac );
return _deac ;};_edg =&_dcf ;return nil ;};var _ggd map[string ]struct{};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_cc .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_cc .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ba .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _edg !=nil &&(_edg ._ebf ||_edg .Tier !=LicenseTierUnlicensed ){_cc .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _da .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_ggb :=_gde ();_ggb ._gbe =apiKey ;_ecd ,_fc :=_ggb .getStatus ();if _fc !=nil {return _fc ;};if !_ecd .Valid {return _da .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_dee :=&LicenseKey {_ebf :true ,_aac :apiKey ,_bee :true };_edg =_dee ;return nil ;};func _dged ()([]string ,[]string ,error ){_gfd ,_dbfe :=_bc .Interfaces ();if _dbfe !=nil {return nil ,nil ,_dbfe ;};var _ffe []string ;var _beacc []string ;for _ ,_ebb :=range _gfd {if _ebb .Flags &_bc .FlagUp ==0||_fe .Equal (_ebb .HardwareAddr ,nil ){continue ;
};_daa ,_ebc :=_ebb .Addrs ();if _ebc !=nil {return nil ,nil ,_ebc ;};_cdf :=0;for _ ,_deb :=range _daa {var _ffee _bc .IP ;switch _aee :=_deb .(type ){case *_bc .IPNet :_ffee =_aee .IP ;case *_bc .IPAddr :_ffee =_aee .IP ;};if _ffee .IsLoopback (){continue ;
};if _ffee .To4 ()==nil {continue ;};_beacc =append (_beacc ,_ffee .String ());_cdf ++;};_fcc :=_ebb .HardwareAddr .String ();if _fcc !=""&&_cdf > 0{_ffe =append (_ffe ,_fcc );};};return _ffe ,_beacc ,nil ;};func _dbdfg (_acc string ,_gaf string ,_ebfd bool )error {if _edg ==nil {return _da .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_edg ._ebf ||len (_edg ._aac )==0{return nil ;};if len (_acc )==0&&!_ebfd {return _da .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_ege .Lock ();defer _ege .Unlock ();if _ggd ==nil {_ggd =map[string ]struct{}{};
};if _ga ==nil {_ga =map[string ]int {};};_gef :=0;if len (_acc )> 0{_ ,_dbf :=_ggd [_acc ];if !_dbf {_ggd [_acc ]=struct{}{};_gef ++;};};if _gef ==0&&!_ebfd {return nil ;};_ga [_gaf ]++;_gfae :=_cf .Now ();_dea ,_gcb :=_fgf .loadState (_edg ._aac );if _gcb !=nil {_cc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcb );
return _gcb ;};if _dea .Usage ==nil {_dea .Usage =map[string ]int {};};for _beac ,_acd :=range _ga {if _beac !=""{_dea .Usage [_beac ]+=_acd ;};};_ga =nil ;const _gea =24*_cf .Hour ;const _eff =3*24*_cf .Hour ;if len (_dea .Instance )==0||_gfae .Sub (_dea .LastReported )> _gea ||(_dea .LimitDocs &&_dea .RemainingDocs <=_dea .Docs +int64 (_gef ))||_ebfd {_cedb ,_aega :=_a .Hostname ();
if _aega !=nil {return _aega ;};_ccea :=_dea .Docs ;_bcb ,_aba ,_aega :=_dged ();if _aega !=nil {_cc .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_aega .Error ());
_bcb =append (_bcb ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_aba =append (_aba ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_g .Strings (_aba );_g .Strings (_bcb );_ag ,_fdf :=_bcbf ();if _fdf !=nil {return _fdf ;};_agc :=false ;for _ ,_bbe :=range _aba {if _bbe ==_ag .String (){_agc =true ;};};if !_agc {_aba =append (_aba ,_ag .String ());};};_bbd :=_gde ();_bbd ._gbe =_edg ._aac ;
_ccea +=int64 (_gef );_gcf :=meteredUsageCheckinForm {Instance :_dea .Instance ,Next :_dea .Next ,UsageNumber :int (_ccea ),NumFailed :_dea .NumErrors ,Hostname :_cedb ,LocalIP :_fb .Join (_aba ,"\u002c\u0020"),MacAddress :_fb .Join (_bcb ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_cc .Version ,Usage :_dea .Usage ,IsPersistentCache :_edg ._bee ,Timestamp :_gfae .Unix ()};
if len (_bcb )==0{_gcf .MacAddress ="\u006e\u006f\u006e\u0065";};_fbcd :=int64 (0);_gead :=_dea .NumErrors ;_dfg :=_gfae ;_ece :=0;_bbfe :=_dea .LimitDocs ;_baeg ,_aega :=_bbd .checkinUsage (_gcf );if _aega !=nil {if _gfae .Sub (_dea .LastReported )> _eff {if !_baeg .Success {return _da .New (_baeg .Message );
};return _da .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_fbcd =_ccea ;
_gead ++;_dfg =_dea .LastReported ;}else {_bbfe =_baeg .LimitDocs ;_ece =_baeg .RemainingDocs ;_gead =0;};if len (_baeg .Instance )==0{_baeg .Instance =_gcf .Instance ;};if len (_baeg .Next )==0{_baeg .Next =_gcf .Next ;};_aega =_fgf .updateState (_bbd ._gbe ,_baeg .Instance ,_baeg .Next ,int (_fbcd ),_bbfe ,_ece ,int (_gead ),_dfg ,nil );
if _aega !=nil {return _aega ;};if !_baeg .Success {return _ba .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_baeg .Message );};}else {_gcb =_fgf .updateState (_edg ._aac ,_dea .Instance ,_dea .Next ,int (_dea .Docs )+_gef ,_dea .LimitDocs ,int (_dea .RemainingDocs ),int (_dea .NumErrors ),_dea .LastReported ,_dea .Usage );
if _gcb !=nil {return _gcb ;};};return nil ;};func _cfe (_df string ,_ab string )([]byte ,error ){var (_geg int ;_bb string ;);for _ ,_bb =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _geg =_fb .Index (_ab ,_bb );
_geg !=-1{break ;};};if _geg ==-1{return nil ,_ba .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_abf :=_ab [:_geg ];
_bed :=_geg +len (_bb );_gg :=_ab [_bed :];if _abf ==""||_gg ==""{return nil ,_ba .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_eb ,_ffa :=_e .StdEncoding .DecodeString (_abf );if _ffa !=nil {return nil ,_ba .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ae ,_ffa :=_e .StdEncoding .DecodeString (_gg );
if _ffa !=nil {return nil ,_ba .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_cfa ,_ :=_gd .Decode ([]byte (_df ));if _cfa ==nil {return nil ,_ba .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ec ,_ffa :=_aa .ParsePKIXPublicKey (_cfa .Bytes );if _ffa !=nil {return nil ,_ffa ;};_efa :=_ec .(*_fea .PublicKey );if _efa ==nil {return nil ,_ba .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gga :=_gb .New ();_gga .Write (_eb );_dfd :=_gga .Sum (nil );_ffa =_fea .VerifyPKCS1v15 (_efa ,_d .SHA512 ,_dfd ,_ae );if _ffa !=nil {return nil ,_ffa ;};return _eb ,nil ;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;
CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _cf .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_cf .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;
CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_ebf bool ;_aac string ;_bee bool ;};func _ccaf (_fbb ,_ffgg []byte )([]byte ,error ){_edc :=make ([]byte ,_e .URLEncoding .DecodedLen (len (_ffgg )));
_ebac ,_fcg :=_e .URLEncoding .Decode (_edc ,_ffgg );if _fcg !=nil {return nil ,_fcg ;};_edc =_edc [:_ebac ];_egd ,_fcg :=_fa .NewCipher (_fbb );if _fcg !=nil {return nil ,_fcg ;};if len (_edc )< _fa .BlockSize {return nil ,_da .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_bbb :=_edc [:_fa .BlockSize ];_edc =_edc [_fa .BlockSize :];_aga :=_bea .NewCFBDecrypter (_egd ,_bbb );_aga .XORKeyStream (_edc ,_edc );return _edc ,nil ;};func init (){_agg :=_a .Getenv (_egaf );_cca :=_a .Getenv (_edag );if len (_agg )==0||len (_cca )==0{return ;
};_cba ,_gcc :=_ge .ReadFile (_agg );if _gcc !=nil {_cc .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gcc );return ;};_gcc =SetLicenseKey (string (_cba ),_cca );
if _gcc !=nil {_cc .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gcc );return ;};};func _bcbf ()(_bc .IP ,error ){_agd ,_dbg :=_bc .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _dbg !=nil {return nil ,_dbg ;};defer _agd .Close ();_eeca :=_agd .LocalAddr ().(*_bc .UDPAddr );return _eeca .IP ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;
RemainingDocs int64 `json:"rd"`;LastReported _cf .Time `json:"lr"`;LastWritten _cf .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};type stateLoader interface{loadState (_aafd string )(reportState ,error );updateState (_gfa ,_fda ,_ede string ,_def int ,_ced bool ,_fgd int ,_fee int ,_ddc _cf .Time ,_cce map[string ]int )error ;
};func GetMeteredState ()(MeteredStatus ,error ){if _edg ==nil {return MeteredStatus {},_da .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_edg ._ebf ||len (_edg ._aac )==0{return MeteredStatus {},_da .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_fcd ,_gc :=_fgf .loadState (_edg ._aac );if _gc !=nil {_cc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gc );return MeteredStatus {},_gc ;};if _fcd .Docs > 0{_bcad :=_dbdfg ("","",true );if _bcad !=nil {return MeteredStatus {},_bcad ;
};};_ege .Lock ();defer _ege .Unlock ();_ggf :=_gde ();_ggf ._gbe =_edg ._aac ;_eda ,_gc :=_ggf .getStatus ();if _gc !=nil {return MeteredStatus {},_gc ;};if !_eda .Valid {return MeteredStatus {},_da .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_ccg :=MeteredStatus {OK :true ,Credits :_eda .OrgCredits ,Used :_eda .OrgUsed };return _ccg ,nil ;};const _egf ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";func _bac (_ff string ,_bae []byte )(string ,error ){_eg ,_ :=_gd .Decode ([]byte (_ff ));
if _eg ==nil {return "",_ba .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_bd ,_gf :=_aa .ParsePKCS1PrivateKey (_eg .Bytes );if _gf !=nil {return "",_gf ;};_ged :=_gb .New ();_ged .Write (_bae );_dgd :=_ged .Sum (nil );
_cff ,_gf :=_fea .SignPKCS1v15 (_ee .Reader ,_bd ,_d .SHA512 ,_dgd );if _gf !=nil {return "",_gf ;};_ca :=_e .StdEncoding .EncodeToString (_bae );_ca +="\u000a\u002b\u000a";_ca +=_e .StdEncoding .EncodeToString (_cff );return _ca ,nil ;};func (_gbcc defaultStateHolder )loadState (_gfe string )(reportState ,error ){_ebed ,_fbe :=_adg ();
if _fbe !=nil {return reportState {},_fbe ;};_fbe =_a .MkdirAll (_ebed ,0777);if _fbe !=nil {return reportState {},_fbe ;};if len (_gfe )< 20{return reportState {},_da .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_cbf :=[]byte (_gfe );
_bgfd :=_gb .Sum512_256 (_cbf [:20]);_ggbd :=_fd .EncodeToString (_bgfd [:]);_bacd :=_db .Join (_ebed ,_ggbd );_cbc ,_fbe :=_ge .ReadFile (_bacd );if _fbe !=nil {if _a .IsNotExist (_fbe ){return reportState {},nil ;};_cc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbe );
return reportState {},_da .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _gfgb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_cbc ,_fbe =_ccaf ([]byte (_gfgb ),_cbc );if _fbe !=nil {return reportState {},_fbe ;
};var _efc reportState ;_fbe =_cb .Unmarshal (_cbc ,&_efc );if _fbe !=nil {_cc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_fbe );return reportState {},_da .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _efc ,nil ;};func (_aaca *LicenseKey )ToString ()string {if _aaca ._ebf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_aae :=_ba .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aaca .LicenseId );
_aae +=_ba .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aaca .CustomerId );_aae +=_ba .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_aaca .CustomerName );
_aae +=_ba .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_aaca .Tier );_aae +=_ba .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cc .UtcTimeFormat (_aaca .CreatedAt ));if _aaca .ExpiresAt ==nil {_aae +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_aae +=_ba .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cc .UtcTimeFormat (*_aaca .ExpiresAt ));};_aae +=_ba .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_aaca .CreatorName ,_aaca .CreatorEmail );
return _aae ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;
Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};