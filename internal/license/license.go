//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_d "bytes";_b "compress/gzip";_c "crypto";_db "crypto/aes";_bb "crypto/cipher";_cbg "crypto/hmac";_ab "crypto/rand";_dc "crypto/rsa";_be "crypto/sha256";_cag "crypto/sha512";_ea "crypto/x509";_add "encoding/base64";_ce "encoding/hex";
_dg "encoding/json";_da "encoding/pem";_caa "errors";_f "fmt";_abc "github.com/unidoc/unipdf/v4/common";_g "io";_cf "net";_cb "net/http";_ca "os";_ad "path/filepath";_e "sort";_ec "strings";_bc "sync";_eg "time";);func _cfe (_abb string ,_bed string )([]byte ,error ){var (_bd int ;
_cbgc string ;);for _ ,_cbgc =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bd =_ec .Index (_bed ,_cbgc );_bd !=-1{break ;};};if _bd ==-1{return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_ecg :=_bed [:_bd ];_aga :=_bd +len (_cbgc );_ef :=_bed [_aga :];if _ecg ==""||_ef ==""{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_ae ,_fed :=_add .StdEncoding .DecodeString (_ecg );if _fed !=nil {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ac ,_fed :=_add .StdEncoding .DecodeString (_ef );
if _fed !=nil {return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_eee ,_ :=_da .Decode ([]byte (_abb ));if _eee ==nil {return nil ,_f .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_de ,_fed :=_ea .ParsePKIXPublicKey (_eee .Bytes );if _fed !=nil {return nil ,_fed ;};_fd :=_de .(*_dc .PublicKey );if _fd ==nil {return nil ,_f .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gb :=_cag .New ();_gb .Write (_ae );_eag :=_gb .Sum (nil );_fed =_dc .VerifyPKCS1v15 (_fd ,_c .SHA512 ,_eag ,_ac );if _fed !=nil {return nil ,_fed ;};return _ae ,nil ;};var _cde stateLoader =defaultStateHolder {};func SetMeteredKeyPersistentCache (val bool ){_fcec ._ffc =val };
var _fgg []interface{};type meteredClient struct{_eea string ;_fef string ;_dgf *_cb .Client ;};func (_deg *LicenseKey )IsLicensed ()bool {return _deg .Tier !=LicenseTierUnlicensed ||_deg ._abe };func _eec ()string {_ace :=_ca .Getenv ("\u0048\u004f\u004d\u0045");
if len (_ace )==0{_ace ,_ =_ca .UserHomeDir ();};return _ace ;};func (_bcc defaultStateHolder )updateState (_bad ,_dbe ,_gdd string ,_bccb int ,_ede bool ,_gbgb int ,_ecc int ,_dfg _eg .Time ,_ffcd map[string ]int ,_cafb ...interface{})error {_eef ,_ddg :=_ggb ();
if _ddg !=nil {return _ddg ;};if len (_bad )< 20{return _caa .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_fcc :=[]byte (_bad );_cff :=_cag .Sum512_256 (_fcc [:20]);_fg :=_ce .EncodeToString (_cff [:]);_baa :=_ad .Join (_eef ,_fg );
var _efg reportState ;_efg .Docs =int64 (_bccb );_efg .NumErrors =int64 (_ecc );_efg .LimitDocs =_ede ;_efg .RemainingDocs =int64 (_gbgb );_efg .LastWritten =_eg .Now ().UTC ();_efg .LastReported =_dfg ;_efg .Instance =_dbe ;_efg .Next =_gdd ;_efg .Usage =_ffcd ;
_efg .UsageLogs =_cafb ;_ceg ,_ddg :=_dg .Marshal (_efg );if _ddg !=nil {return _ddg ;};const _acb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_ceg ,_ddg =_aec ([]byte (_acb ),_ceg );if _ddg !=nil {return _ddg ;
};_ddg =_ca .WriteFile (_baa ,_ceg ,0600);if _ddg !=nil {return _ddg ;};return nil ;};func GetLicenseKey ()*LicenseKey {if _fcec ==nil {return nil ;};_dcfe :=*_fcec ;return &_dcfe ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;
UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func _ded ()*meteredClient {_gcc :=meteredClient {_eea :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_dgf :&_cb .Client {Timeout :30*_eg .Second }};
if _babe :=_ca .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_ec .HasPrefix (_babe ,"\u0068\u0074\u0074\u0070"){_gcc ._eea =_babe ;};return &_gcc ;};func GetMeteredState ()(MeteredStatus ,error ){if _fcec ==nil {return MeteredStatus {},_caa .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_fcec ._abe ||len (_fcec ._gc )==0{return MeteredStatus {},_caa .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_abef ,_dcad :=_cde .loadState (_fcec ._gc );if _dcad !=nil {_abc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcad );
return MeteredStatus {},_dcad ;};if _abef .Docs > 0{_dda :=_abg ("","","",true );if _dda !=nil {return MeteredStatus {},_dda ;};};_gagf .Lock ();defer _gagf .Unlock ();_cfef :=_ded ();_cfef ._fef =_fcec ._gc ;_gfd ,_dcad :=_cfef .getStatus ();if _dcad !=nil {return MeteredStatus {},_dcad ;
};if !_gfd .Valid {return MeteredStatus {},_caa .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_egf :=MeteredStatus {OK :true ,Credits :_gfd .OrgCredits ,Used :_gfd .OrgUsed };return _egf ,nil ;};const _gfc ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";
func _abg (_edc string ,_dafd string ,_gcf string ,_gfa bool )error {if _fcec ==nil {return _caa .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_fcec ._abe ||len (_fcec ._gc )==0{return nil ;};if len (_edc )==0&&!_gfa {return _caa .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};_gagf .Lock ();defer _gagf .Unlock ();if _afg ==nil {_afg =map[string ]struct{}{};};if _cec ==nil {_cec =map[string ]int {};};_fdf :=0;if len (_edc )> 0{_ ,_aff :=_afg [_edc ];if !_aff {_afg [_edc ]=struct{}{};_fdf ++;};if _fcec ._fdc {_fgg =append (_fgg ,map[string ]interface{}{"\u0074\u0069\u006d\u0065":_eg .Now ().String (),"\u0066\u0075\u006e\u0063":_dafd ,"\u0072\u0065\u0066":_edc [:8],"\u0066\u0069\u006c\u0065":_gcf ,"\u0063\u006f\u0073\u0074":_fdf });
if _aff &&_fdf ==0{_abc .Log .Info ("\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025\u0073 \u007c \u004e\u006f\u0020\u0063\u0072\u0065\u0064\u0069\u0074\u0020\u0075\u0073\u0065\u0064",_eg .Now ().String (),_edc [:8],_dafd );
};};};if _fdf ==0&&!_gfa {return nil ;};_cec [_dafd ]++;_abd :=_eg .Now ();_cdg ,_cegf :=_cde .loadState (_fcec ._gc );if _cegf !=nil {_abc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cegf );return _cegf ;};_cdg .UsageLogs =append (_cdg .UsageLogs ,_fgg ...);
if _cdg .Usage ==nil {_cdg .Usage =map[string ]int {};};for _dfa ,_fcfb :=range _cec {if _dfa !=""{_cdg .Usage [_dfa ]+=_fcfb ;};};_cec =nil ;const _cae =24*_eg .Hour ;const _cfg =3*24*_eg .Hour ;if len (_cdg .Instance )==0||_abd .Sub (_cdg .LastReported )> _cae ||(_cdg .LimitDocs &&_cdg .RemainingDocs <=_cdg .Docs +int64 (_fdf ))||_gfa {_bag ,_fdcg :=_ca .Hostname ();
if _fdcg !=nil {return _fdcg ;};_cea :=_cdg .Docs ;_cda ,_gfe ,_fdcg :=_aad ();if _fdcg !=nil {_abc .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_fdcg .Error ());
_cda =append (_cda ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_gfe =append (_gfe ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_e .Strings (_gfe );_e .Strings (_cda );_dcd ,_afe :=_bfgg ();if _afe !=nil {return _afe ;};_bce :=false ;for _ ,_gg :=range _gfe {if _gg ==_dcd .String (){_bce =true ;};};if !_bce {_gfe =append (_gfe ,_dcd .String ());};};_fgd :=_ded ();_fgd ._fef =_fcec ._gc ;
_cea +=int64 (_fdf );_dcf :=meteredUsageCheckinForm {Instance :_cdg .Instance ,Next :_cdg .Next ,UsageNumber :int (_cea ),NumFailed :_cdg .NumErrors ,Hostname :_bag ,LocalIP :_ec .Join (_gfe ,"\u002c\u0020"),MacAddress :_ec .Join (_cda ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_abc .Version ,Usage :_cdg .Usage ,IsPersistentCache :_fcec ._ffc ,Timestamp :_abd .Unix ()};
if len (_cda )==0{_dcf .MacAddress ="\u006e\u006f\u006e\u0065";};if _fcec ._fdc {_dcf .UsageLogs =_cdg .UsageLogs ;};_debf :=int64 (0);_fa :=_cdg .NumErrors ;_fga :=_abd ;_bde :=0;_cdgf :=_cdg .LimitDocs ;_gaf ,_fdcg :=_fgd .checkinUsage (_dcf );if _fdcg !=nil {if _abd .Sub (_cdg .LastReported )> _cfg {if !_gaf .Success {return _caa .New (_gaf .Message );
};return _caa .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_debf =_cea ;
_fa ++;_fga =_cdg .LastReported ;}else {_cdgf =_gaf .LimitDocs ;_bde =_gaf .RemainingDocs ;_fa =0;};if len (_gaf .Instance )==0{_gaf .Instance =_dcf .Instance ;};if len (_gaf .Next )==0{_gaf .Next =_dcf .Next ;};_fdcg =_cde .updateState (_fgd ._fef ,_gaf .Instance ,_gaf .Next ,int (_debf ),_cdgf ,_bde ,int (_fa ),_fga ,nil );
if _fdcg !=nil {return _fdcg ;};if !_gaf .Success {return _f .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gaf .Message );};}else {_cegf =_cde .updateState (_fcec ._gc ,_cdg .Instance ,_cdg .Next ,int (_cdg .Docs )+_fdf ,_cdg .LimitDocs ,int (_cdg .RemainingDocs ),int (_cdg .NumErrors ),_cdg .LastReported ,_cdg .Usage ,_cdg .UsageLogs ...);
if _cegf !=nil {return _cegf ;};};if _fcec ._fdc &&len (_edc )> 0{_bbd :="";if _gcf !=""{_bbd =_f .Sprintf ("\u0046i\u006c\u0065\u0020\u0025\u0073\u0020|",_gcf );};_abc .Log .Info ("%\u0073\u0020\u007c\u0020\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025s\u0020\u007c\u0020\u0025\u0064\u0020\u0063\u0072\u0065\u0064it\u0028\u0073\u0029 \u0075s\u0065\u0064",_abd .String (),_bbd ,_edc [:8],_dafd ,_fdf );
};return nil ;};const _decb ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";var _afg map[string ]struct{};func (_cagg *LicenseKey )Validate ()error {if _cagg ._abe {return nil ;};if len (_cagg .LicenseId )< 10{return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_cagg .CustomerId )< 10{return _f .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_cagg .CustomerName )< 1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _bae .After (_cagg .CreatedAt ){return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cagg .ExpiresAt ==nil {_efd :=_cagg .CreatedAt .AddDate (1,0,0);if _gda .After (_efd ){_efd =_gda ;};_cagg .ExpiresAt =&_efd ;};if _cagg .CreatedAt .After (*_cagg .ExpiresAt ){return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _cagg .isExpired (){_egcf :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _f .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_egcf );};if len (_cagg .CreatorName )< 1{return _f .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_cagg .CreatorEmail )< 1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _cagg .CreatedAt .After (_ecge ){if !_cagg .UniPDF {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func _ega (_gd string ,_ag []byte )(string ,error ){_ed ,_ :=_da .Decode ([]byte (_gd ));if _ed ==nil {return "",_f .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_aa ,_egc :=_ea .ParsePKCS1PrivateKey (_ed .Bytes );
if _egc !=nil {return "",_egc ;};_ff :=_cag .New ();_ff .Write (_ag );_bf :=_ff .Sum (nil );_eaa ,_egc :=_dc .SignPKCS1v15 (_ab .Reader ,_aa ,_c .SHA512 ,_bf );if _egc !=nil {return "",_egc ;};_fe :=_add .StdEncoding .EncodeToString (_ag );_fe +="\u000a\u002b\u000a";
_fe +=_add .StdEncoding .EncodeToString (_eaa );return _fe ,nil ;};var _bae =_eg .Date (2010,1,1,0,0,0,0,_eg .UTC );func Track (docKey string ,useKey string ,docName string )error {return _abg (docKey ,useKey ,docName ,!_fcec ._ffc );};func SetMeteredKeyUsageLogVerboseMode (val bool ){_fcec ._fdc =val };
func (_ada *LicenseKey )getExpiryDateToCompare ()_eg .Time {if _ada .Trial {return _eg .Now ().UTC ();};return _abc .ReleasedAt ;};func _ggbd (_aaf *_cb .Response )([]byte ,error ){var _aeeg []byte ;_cbgcc ,_bagd :=_ebc (_aaf );if _bagd !=nil {return _aeeg ,_bagd ;
};return _g .ReadAll (_cbgcc );};type defaultStateHolder struct{};func _aaa (_gdce ,_eeb string )string {_egac :=[]byte (_gdce );_bdc :=_cbg .New (_be .New ,_egac );_bdc .Write ([]byte (_eeb ));return _add .StdEncoding .EncodeToString (_bdc .Sum (nil ));
};func SetLicenseKey (content string ,customerName string )error {_beba ,_fedg :=_df (content );if _fedg !=nil {_abc .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_fedg );
return _fedg ;};if !_ec .EqualFold (_beba .CustomerName ,customerName ){_abc .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_beba .CustomerName ,customerName );
return _f .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_beba .CustomerName ,customerName );
};_fedg =_beba .Validate ();if _fedg !=nil {_abc .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fedg );
return _fedg ;};_fcec =&_beba ;return nil ;};func _ccb (_bfd ,_adf []byte )([]byte ,error ){_dbb :=make ([]byte ,_add .URLEncoding .DecodedLen (len (_adf )));_aag ,_fdgb :=_add .URLEncoding .Decode (_dbb ,_adf );if _fdgb !=nil {return nil ,_fdgb ;};_dbb =_dbb [:_aag ];
_bbg ,_fdgb :=_db .NewCipher (_bfd );if _fdgb !=nil {return nil ,_fdgb ;};if len (_dbb )< _db .BlockSize {return nil ,_caa .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_gdbd :=_dbb [:_db .BlockSize ];
_dbb =_dbb [_db .BlockSize :];_adff :=_bb .NewCFBDecrypter (_bbg ,_gdbd );_adff .XORKeyStream (_dbb ,_dbb );return _dbb ,nil ;};func _bfgg ()(_cf .IP ,error ){_fde ,_dcb :=_cf .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _dcb !=nil {return nil ,_dcb ;};defer _fde .Close ();_egb :=_fde .LocalAddr ().(*_cf .UDPAddr );return _egb .IP ,nil ;};var _cec map[string ]int ;type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;
LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _eg .Time `json:"lr"`;LastWritten _eg .Time `json:"lw"`;Usage map[string ]int `json:"u"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_abc .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_abc .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _f .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _fcec !=nil &&(_fcec ._abe ||_fcec .Tier !=LicenseTierUnlicensed ){_abc .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _caa .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_cage :=_ded ();_cage ._fef =apiKey ;_ddc ,_fcf :=_cage .getStatus ();if _fcf !=nil {return _fcf ;};
if !_ddc .Valid {return _caa .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_aea :=&LicenseKey {_abe :true ,_gc :apiKey ,_ffc :true };_fcec =_aea ;return nil ;};func _ggb ()(string ,error ){_gcff :=_ec .TrimSpace (_ca .Getenv (_gfc ));
if _gcff ==""{_abc .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_gfc );
_cbga :=_eec ();if len (_cbga )==0{return "",_f .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gfc );
};_gcff =_ad .Join (_cbga ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_aead :=_ca .MkdirAll (_gcff ,0777);if _aead !=nil {return "",_aead ;};return _gcff ,nil ;};func (_dec *LicenseKey )isExpired ()bool {return _dec .getExpiryDateToCompare ().After (*_dec .ExpiresAt )};
type meteredStatusForm struct{};func _fca (_bcfa []byte )(_g .Reader ,error ){_dae :=new (_d .Buffer );_aadd :=_b .NewWriter (_dae );_aadd .Write (_bcfa );_gad :=_aadd .Close ();if _gad !=nil {return nil ,_gad ;};return _dae ,nil ;};const _dfgc ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func (_cga defaultStateHolder )loadState (_bgf string )(reportState ,error ){_fgf ,_cbb :=_ggb ();if _cbb !=nil {return reportState {},_cbb ;};_cbb =_ca .MkdirAll (_fgf ,0777);if _cbb !=nil {return reportState {},_cbb ;};if len (_bgf )< 20{return reportState {},_caa .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_gde :=[]byte (_bgf );_eb :=_cag .Sum512_256 (_gde [:20]);_bbb :=_ce .EncodeToString (_eb [:]);_dee :=_ad .Join (_fgf ,_bbb );_babc ,_cbb :=_ca .ReadFile (_dee );if _cbb !=nil {if _ca .IsNotExist (_cbb ){return reportState {},nil ;};_abc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbb );
return reportState {},_caa .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _fb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_babc ,_cbb =_ccb ([]byte (_fb ),_babc );if _cbb !=nil {return reportState {},_cbb ;
};var _dea reportState ;_cbb =_dg .Unmarshal (_babc ,&_dea );if _cbb !=nil {_abc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cbb );return reportState {},_caa .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _dea ,nil ;};var _fcec =MakeUnlicensedKey ();func (_gf *meteredClient )getStatus ()(meteredStatusResp ,error ){var _degg meteredStatusResp ;_feda :=_gf ._eea +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _bba meteredStatusForm ;
_dca ,_ge :=_dg .Marshal (_bba );if _ge !=nil {return _degg ,_ge ;};_bec ,_ge :=_fca (_dca );if _ge !=nil {return _degg ,_ge ;};_bff ,_ge :=_cb .NewRequest ("\u0050\u004f\u0053\u0054",_feda ,_bec );if _ge !=nil {return _degg ,_ge ;};_bff .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bff .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bff .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bff .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gf ._fef );_agf ,_ge :=_gf ._dgf .Do (_bff );if _ge !=nil {return _degg ,_ge ;};defer _agf .Body .Close ();if _agf .StatusCode !=200{return _degg ,_f .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_agf .StatusCode );
};_ddb ,_ge :=_ggbd (_agf );if _ge !=nil {return _degg ,_ge ;};_ge =_dg .Unmarshal (_ddb ,&_degg );if _ge !=nil {return _degg ,_ge ;};return _degg ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);var _ecge =_eg .Date (2019,6,6,0,0,0,0,_eg .UTC );type stateLoader interface{loadState (_gag string )(reportState ,error );
updateState (_bg ,_bdbf ,_bea string ,_egcd int ,_cg bool ,_gbdc int ,_bfb int ,_gff _eg .Time ,_efe map[string ]int ,_af ...interface{})error ;};const (_ga ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_ead ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func _aad ()([]string ,[]string ,error ){_bcf ,_decc :=_cf .Interfaces ();
if _decc !=nil {return nil ,nil ,_decc ;};var _feb []string ;var _feff []string ;for _ ,_deda :=range _bcf {if _deda .Flags &_cf .FlagUp ==0||_d .Equal (_deda .HardwareAddr ,nil ){continue ;};_ddac ,_abed :=_deda .Addrs ();if _abed !=nil {return nil ,nil ,_abed ;
};_fefe :=0;for _ ,_gfae :=range _ddac {var _fcdf _cf .IP ;switch _aeg :=_gfae .(type ){case *_cf .IPNet :_fcdf =_aeg .IP ;case *_cf .IPAddr :_fcdf =_aeg .IP ;};if _fcdf .IsLoopback (){continue ;};if _fcdf .To4 ()==nil {continue ;};_feff =append (_feff ,_fcdf .String ());
_fefe ++;};_gdc :=_deda .HardwareAddr .String ();if _gdc !=""&&_fefe > 0{_feb =append (_feb ,_gdc );};};return _feb ,_feff ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};var _gagf =&_bc .Mutex {};func (_bdb *meteredClient )checkinUsage (_ecgec meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ecgec .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_ecgec .PackageVersion =_abc .Version ;var _dgd meteredUsageCheckinResp ;_gbd :=_bdb ._eea +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fdg ,_eagd :=_dg .Marshal (_ecgec );if _eagd !=nil {return _dgd ,_eagd ;
};_fce ,_eagd :=_fca (_fdg );if _eagd !=nil {return _dgd ,_eagd ;};_gbg ,_eagd :=_cb .NewRequest ("\u0050\u004f\u0053\u0054",_gbd ,_fce );if _eagd !=nil {return _dgd ,_eagd ;};_gbg .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gbg .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gbg .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gbg .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bdb ._fef );_bfg ,_eagd :=_bdb ._dgf .Do (_gbg );if _eagd !=nil {return _dgd ,_eagd ;};defer _bfg .Body .Close ();if _bfg .StatusCode !=200{_caf ,_fdgf :=_ggbd (_bfg );if _fdgf !=nil {return _dgd ,_fdgf ;
};_fdgf =_dg .Unmarshal (_caf ,&_dgd );if _fdgf !=nil {return _dgd ,_fdgf ;};return _dgd ,_f .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_bfg .StatusCode );
};_feg :=_bfg .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_cc :=_aaa (_ecgec .MacAddress ,string (_fdg ));if _cc !=_feg {_abc .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _dgd ,_caa .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_beb ,_eagd :=_ggbd (_bfg );if _eagd !=nil {return _dgd ,_eagd ;};_eagd =_dg .Unmarshal (_beb ,&_dgd );if _eagd !=nil {return _dgd ,_eagd ;};return _dgd ,nil ;};var _gda =_eg .Date (2020,1,1,0,0,0,0,_eg .UTC );type meteredStatusResp struct{Valid bool `json:"valid"`;
OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;
RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func TrackUse (useKey string ){if _fcec ==nil {return ;};if !_fcec ._abe ||len (_fcec ._gc )==0{return ;};if len (useKey )==0{return ;};_gagf .Lock ();defer _gagf .Unlock ();if _cec ==nil {_cec =map[string ]int {};
};_cec [useKey ]++;};func init (){_caggf :=_ca .Getenv (_dfgc );_gfcg :=_ca .Getenv (_decb );if len (_caggf )==0||len (_gfcg )==0{return ;};_gca ,_fgfa :=_ca .ReadFile (_caggf );if _fgfa !=nil {_abc .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_fgfa );
return ;};_fgfa =SetLicenseKey (string (_gca ),_gfcg );if _fgfa !=nil {_abc .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fgfa );
return ;};};func MakeUnlicensedKey ()*LicenseKey {_caaa :=LicenseKey {};_caaa .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_caaa .Tier =LicenseTierUnlicensed ;_caaa .CreatedAt =_eg .Now ().UTC ();_caaa .CreatedAtInt =_caaa .CreatedAt .Unix ();
return &_caaa ;};func _ebc (_gaa *_cb .Response )(_g .ReadCloser ,error ){var _fag error ;var _bge _g .ReadCloser ;switch _ec .ToLower (_gaa .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_bge ,_fag =_b .NewReader (_gaa .Body );
if _fag !=nil {return _bge ,_fag ;};defer _bge .Close ();default:_bge =_gaa .Body ;};return _bge ,nil ;};const _eefb ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_ege *LicenseKey )ToString ()string {if _ege ._abe {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_gdb :=_f .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_ege .LicenseId );
_gdb +=_f .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_ege .CustomerId );_gdb +=_f .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_ege .CustomerName );
_gdb +=_f .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_ege .Tier );_gdb +=_f .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_abc .UtcTimeFormat (_ege .CreatedAt ));if _ege .ExpiresAt ==nil {_gdb +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_gdb +=_f .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_abc .UtcTimeFormat (*_ege .ExpiresAt ));};_gdb +=_f .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_ege .CreatorName ,_ege .CreatorEmail );
return _gdb ;};func _daf (_fc string ,_cd string ,_dd string )(string ,error ){_fcd :=_ec .Index (_dd ,_fc );if _fcd ==-1{return "",_f .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dgb :=_ec .Index (_dd ,_cd );
if _dgb ==-1{return "",_f .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eagb :=_fcd +len (_fc )+1;return _dd [_eagb :_dgb -1],nil ;};func (_deb *LicenseKey )TypeToString ()string {if _deb ._abe {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _deb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _deb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _deb .Tier ==LicenseTierIndividual ||_deb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _df (_abcd string )(LicenseKey ,error ){var _aee LicenseKey ;_cee ,_fdb :=_daf (_ga ,_ead ,_abcd );
if _fdb !=nil {return _aee ,_fdb ;};_ba ,_fdb :=_cfe (_eefb ,_cee );if _fdb !=nil {return _aee ,_fdb ;};_fdb =_dg .Unmarshal (_ba ,&_aee );if _fdb !=nil {return _aee ,_fdb ;};_aee .CreatedAt =_eg .Unix (_aee .CreatedAtInt ,0);if _aee .ExpiresAtInt > 0{_bab :=_eg .Unix (_aee .ExpiresAtInt ,0);
_aee .ExpiresAt =&_bab ;};return _aee ,nil ;};func _aec (_cgaf ,_fdef []byte )([]byte ,error ){_afgd ,_gea :=_db .NewCipher (_cgaf );if _gea !=nil {return nil ,_gea ;};_eeaa :=make ([]byte ,_db .BlockSize +len (_fdef ));_efgb :=_eeaa [:_db .BlockSize ];
if _ ,_dad :=_g .ReadFull (_ab .Reader ,_efgb );_dad !=nil {return nil ,_dad ;};_beag :=_bb .NewCFBEncrypter (_afgd ,_efgb );_beag .XORKeyStream (_eeaa [_db .BlockSize :],_fdef );_fcfg :=make ([]byte ,_add .URLEncoding .EncodedLen (len (_eeaa )));_add .URLEncoding .Encode (_fcfg ,_eeaa );
return _fcfg ,nil ;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _eg .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt *_eg .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_abe bool ;_gc string ;_ffc bool ;_fdc bool ;};