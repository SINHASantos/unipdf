//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_bg "bytes";_bb "compress/gzip";_a "crypto";_aa "crypto/aes";_ef "crypto/cipher";_ca "crypto/hmac";_ab "crypto/rand";_cg "crypto/rsa";_ac "crypto/sha256";_gc "crypto/sha512";_cab "crypto/x509";_ed "encoding/base64";_df "encoding/hex";
_cd "encoding/json";_af "encoding/pem";_c "errors";_aeb "fmt";_acd "github.com/unidoc/unipdf/v3/common";_bc "io";_e "net";_bd "net/http";_bf "os";_f "path/filepath";_d "sort";_ea "strings";_ae "sync";_g "time";);func MakeUnlicensedKey ()*LicenseKey {_abbb :=LicenseKey {};
_abbb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_abbb .Tier =LicenseTierUnlicensed ;_abbb .CreatedAt =_g .Now ().UTC ();_abbb .CreatedAtInt =_abbb .CreatedAt .Unix ();return &_abbb ;};func (_bcgb *LicenseKey )ToString ()string {if _bcgb ._cdb {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_abb :=_aeb .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bcgb .LicenseId );_abb +=_aeb .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bcgb .CustomerId );
_abb +=_aeb .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_bcgb .CustomerName );_abb +=_aeb .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_bcgb .Tier );_abb +=_aeb .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_acd .UtcTimeFormat (_bcgb .CreatedAt ));
if _bcgb .ExpiresAt ==nil {_abb +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_abb +=_aeb .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_acd .UtcTimeFormat (*_bcgb .ExpiresAt ));
};_abb +=_aeb .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_bcgb .CreatorName ,_bcgb .CreatorEmail );return _abb ;};func _geb (_eabb []byte )(_bc .Reader ,error ){_gbb :=new (_bg .Buffer );
_edfd :=_bb .NewWriter (_gbb );_edfd .Write (_eabb );_ege :=_edfd .Close ();if _ege !=nil {return nil ,_ege ;};return _gbb ,nil ;};func (_agad defaultStateHolder )updateState (_feg ,_cfd ,_daeb string ,_fa int ,_fge bool ,_cae int ,_cbc int ,_daf _g .Time ,_geg map[string ]int ,_ffge ...interface{})error {_bga ,_fbf :=_ccba ();
if _fbf !=nil {return _fbf ;};if len (_feg )< 20{return _c .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_efd :=[]byte (_feg );_afd :=_gc .Sum512_256 (_efd [:20]);_eac :=_df .EncodeToString (_afd [:]);_ebb :=_f .Join (_bga ,_eac );
var _agc reportState ;_agc .Docs =int64 (_fa );_agc .NumErrors =int64 (_cbc );_agc .LimitDocs =_fge ;_agc .RemainingDocs =int64 (_cae );_agc .LastWritten =_g .Now ().UTC ();_agc .LastReported =_daf ;_agc .Instance =_cfd ;_agc .Next =_daeb ;_agc .Usage =_geg ;
_agc .UsageLogs =_ffge ;_eaf ,_fbf :=_cd .Marshal (_agc );if _fbf !=nil {return _fbf ;};const _gga ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_eaf ,_fbf =_fffg ([]byte (_gga ),_eaf );if _fbf !=nil {return _fbf ;
};_fbf =_bf .WriteFile (_ebb ,_eaf ,0600);if _fbf !=nil {return _fbf ;};return nil ;};func _dbb (_cge string ,_edf string ,_bbc string ,_fee bool )error {if _gdg ==nil {return _c .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gdg ._cdb ||len (_gdg ._cbg )==0{return nil ;};if len (_cge )==0&&!_fee {return _c .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_gee .Lock ();defer _gee .Unlock ();if _ced ==nil {_ced =map[string ]struct{}{};
};if _cbgg ==nil {_cbgg =map[string ]int {};};_cdcd :=0;if len (_cge )> 0{_ ,_gfc :=_ced [_cge ];if !_gfc {_ced [_cge ]=struct{}{};_cdcd ++;};if _gdg ._bdfd {_deg =append (_deg ,map[string ]interface{}{"\u0074\u0069\u006d\u0065":_g .Now ().String (),"\u0066\u0075\u006e\u0063":_edf ,"\u0072\u0065\u0066":_cge [:8],"\u0066\u0069\u006c\u0065":_bbc ,"\u0063\u006f\u0073\u0074":_cdcd });
if _gfc &&_cdcd ==0{_acd .Log .Info ("\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025\u0073 \u007c \u004e\u006f\u0020\u0063\u0072\u0065\u0064\u0069\u0074\u0020\u0075\u0073\u0065\u0064",_g .Now ().String (),_cge [:8],_edf );
};};};if _cdcd ==0&&!_fee {return nil ;};_cbgg [_edf ]++;_ecf :=_g .Now ();_dgg ,_eeg :=_bbfe .loadState (_gdg ._cbg );if _eeg !=nil {_acd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeg );return _eeg ;};_dgg .UsageLogs =append (_dgg .UsageLogs ,_deg ...);
if _dgg .Usage ==nil {_dgg .Usage =map[string ]int {};};for _egc ,_bcbd :=range _cbgg {if _egc !=""{_dgg .Usage [_egc ]+=_bcbd ;};};_cbgg =nil ;const _fea =24*_g .Hour ;const _efde =3*24*_g .Hour ;if len (_dgg .Instance )==0||_ecf .Sub (_dgg .LastReported )> _fea ||(_dgg .LimitDocs &&_dgg .RemainingDocs <=_dgg .Docs +int64 (_cdcd ))||_fee {_efa ,_egf :=_bf .Hostname ();
if _egf !=nil {return _egf ;};_ecg :=_dgg .Docs ;_ecgc ,_cgee ,_egf :=_fgc ();if _egf !=nil {_acd .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_egf .Error ());
_ecgc =append (_ecgc ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_cgee =append (_cgee ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_d .Strings (_cgee );_d .Strings (_ecgc );_afbf ,_ecfg :=_eea ();if _ecfg !=nil {return _ecfg ;};_acec :=false ;for _ ,_dgcg :=range _cgee {if _dgcg ==_afbf .String (){_acec =true ;};};if !_acec {_cgee =append (_cgee ,_afbf .String ());};};_ada :=_agd ();
_ada ._cfc =_gdg ._cbg ;_ecg +=int64 (_cdcd );_dff :=meteredUsageCheckinForm {Instance :_dgg .Instance ,Next :_dgg .Next ,UsageNumber :int (_ecg ),NumFailed :_dgg .NumErrors ,Hostname :_efa ,LocalIP :_ea .Join (_cgee ,"\u002c\u0020"),MacAddress :_ea .Join (_ecgc ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_acd .Version ,Usage :_dgg .Usage ,IsPersistentCache :_gdg ._bcd ,Timestamp :_ecf .Unix ()};
if len (_ecgc )==0{_dff .MacAddress ="\u006e\u006f\u006e\u0065";};if _gdg ._bdfd {_dff .UsageLogs =_dgg .UsageLogs ;};_dege :=int64 (0);_egfc :=_dgg .NumErrors ;_fec :=_ecf ;_gcd :=0;_gda :=_dgg .LimitDocs ;_ebe ,_egf :=_ada .checkinUsage (_dff );if _egf !=nil {if _ecf .Sub (_dgg .LastReported )> _efde {if !_ebe .Success {return _c .New (_ebe .Message );
};return _c .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_dege =_ecg ;_egfc ++;
_fec =_dgg .LastReported ;}else {_gda =_ebe .LimitDocs ;_gcd =_ebe .RemainingDocs ;_egfc =0;};if len (_ebe .Instance )==0{_ebe .Instance =_dff .Instance ;};if len (_ebe .Next )==0{_ebe .Next =_dff .Next ;};_egf =_bbfe .updateState (_ada ._cfc ,_ebe .Instance ,_ebe .Next ,int (_dege ),_gda ,_gcd ,int (_egfc ),_fec ,nil );
if _egf !=nil {return _egf ;};if !_ebe .Success {return _aeb .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_ebe .Message );};}else {_eeg =_bbfe .updateState (_gdg ._cbg ,_dgg .Instance ,_dgg .Next ,int (_dgg .Docs )+_cdcd ,_dgg .LimitDocs ,int (_dgg .RemainingDocs ),int (_dgg .NumErrors ),_dgg .LastReported ,_dgg .Usage ,_dgg .UsageLogs ...);
if _eeg !=nil {return _eeg ;};};if _gdg ._bdfd &&len (_cge )> 0{_bda :="";if _bbc !=""{_bda =_aeb .Sprintf ("\u0046i\u006c\u0065\u0020\u0025\u0073\u0020|",_bbc );};_acd .Log .Info ("%\u0073\u0020\u007c\u0020\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025s\u0020\u007c\u0020\u0025\u0064\u0020\u0063\u0072\u0065\u0064it\u0028\u0073\u0029 \u0075s\u0065\u0064",_ecf .String (),_bda ,_cge [:8],_edf ,_cdcd );
};return nil ;};var _ecb =_g .Date (2020,1,1,0,0,0,0,_g .UTC );type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};type stateLoader interface{loadState (_fcg string )(reportState ,error );
updateState (_bae ,_aebb ,_gd string ,_abf int ,_eae bool ,_gf int ,_bcb int ,_agdf _g .Time ,_abbbg map[string ]int ,_dae ...interface{})error ;};const _gec ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _g .Time `json:"lr"`;LastWritten _g .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;UsageLogs []interface{}`json:"ul,omitempty"`;};const (_afb ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_aef ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);var _cdc =_g .Date (2010,1,1,0,0,0,0,_g .UTC );type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_aacc *LicenseKey )IsLicensed ()bool {return _aacc .Tier !=LicenseTierUnlicensed ||_aacc ._cdb };type meteredClient struct{_ff string ;
_cfc string ;_afe *_bd .Client ;};var _cbgg map[string ]int ;func _agd ()*meteredClient {_bbf :=meteredClient {_ff :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_afe :&_bd .Client {Timeout :30*_g .Second }};
if _acc :=_bf .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_ea .HasPrefix (_acc ,"\u0068\u0074\u0074\u0070"){_bbf ._ff =_acc ;};return &_bbf ;};func _eaea (_ceg *_bd .Response )([]byte ,error ){var _dfef []byte ;
_ccf ,_ffd :=_afda (_ceg );if _ffd !=nil {return _dfef ,_ffd ;};return _bc .ReadAll (_ccf );};func (_cag *LicenseKey )isExpired ()bool {return _cag .getExpiryDateToCompare ().After (*_cag .ExpiresAt )};func SetLicenseKey (content string ,customerName string )error {_bgac ,_cad :=_gcc (content );
if _cad !=nil {_acd .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_cad );return _cad ;};if !_ea .EqualFold (_bgac .CustomerName ,customerName ){_acd .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_bgac .CustomerName ,customerName );
return _aeb .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_bgac .CustomerName ,customerName );
};_cad =_bgac .Validate ();if _cad !=nil {_acd .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cad );
return _cad ;};_gdg =&_bgac ;return nil ;};var _deg []interface{};func _ccba ()(string ,error ){_ecbd :=_ea .TrimSpace (_bf .Getenv (_ccb ));if _ecbd ==""{_acd .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_ccb );
_dbfg :=_gde ();if len (_dbfg )==0{return "",_aeb .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_ccb );
};_ecbd =_f .Join (_dbfg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_ecc :=_bf .MkdirAll (_ecbd ,0777);if _ecc !=nil {return "",_ecc ;};return _ecbd ,nil ;};var _gee =&_ae .Mutex {};func SetMeteredKeyUsageLogVerboseMode (val bool ){_gdg ._bdfd =val };
var _ced map[string ]struct{};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func (_ba *meteredClient )getStatus ()(meteredStatusResp ,error ){var _da meteredStatusResp ;_fb :=_ba ._ff +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _edb meteredStatusForm ;_gae ,_fff :=_cd .Marshal (_edb );if _fff !=nil {return _da ,_fff ;};_caa ,_fff :=_geb (_gae );if _fff !=nil {return _da ,_fff ;};_gbg ,_fff :=_bd .NewRequest ("\u0050\u004f\u0053\u0054",_fb ,_caa );if _fff !=nil {return _da ,_fff ;
};_gbg .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_gbg .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gbg .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gbg .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ba ._cfc );_egb ,_fff :=_ba ._afe .Do (_gbg );if _fff !=nil {return _da ,_fff ;
};defer _egb .Body .Close ();if _egb .StatusCode !=200{return _da ,_aeb .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_egb .StatusCode );
};_agde ,_fff :=_eaea (_egb );if _fff !=nil {return _da ,_fff ;};_fff =_cd .Unmarshal (_agde ,&_da );if _fff !=nil {return _da ,_fff ;};return _da ,nil ;};const _cdcc ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func GetLicenseKey ()*LicenseKey {if _gdg ==nil {return nil ;};_dgde :=*_gdg ;return &_dgde ;};var _afa =_g .Date (2019,6,6,0,0,0,0,_g .UTC );type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;
NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;
IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;UsageLogs []interface{}`json:"ul,omitempty"`;};func _cc (_fc string ,_ega string )([]byte ,error ){var (_bgde int ;_dg string ;);for _ ,_dg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bgde =_ea .Index (_ega ,_dg );
_bgde !=-1{break ;};};if _bgde ==-1{return nil ,_aeb .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_ee :=_ega [:_bgde ];
_de :=_bgde +len (_dg );_aad :=_ega [_de :];if _ee ==""||_aad ==""{return nil ,_aeb .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_dgc ,_ec :=_ed .StdEncoding .DecodeString (_ee );if _ec !=nil {return nil ,_aeb .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ag ,_ec :=_ed .StdEncoding .DecodeString (_aad );
if _ec !=nil {return nil ,_aeb .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_cda ,_ :=_af .Decode ([]byte (_fc ));if _cda ==nil {return nil ,_aeb .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ace ,_ec :=_cab .ParsePKIXPublicKey (_cda .Bytes );if _ec !=nil {return nil ,_ec ;};_ga :=_ace .(*_cg .PublicKey );if _ga ==nil {return nil ,_aeb .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ad :=_gc .New ();_ad .Write (_dgc );_dfe :=_ad .Sum (nil );_ec =_cg .VerifyPKCS1v15 (_ga ,_a .SHA512 ,_dfe ,_ag );if _ec !=nil {return nil ,_ec ;};return _dgc ,nil ;};var _gdg =MakeUnlicensedKey ();type meteredStatusForm struct{};func (_fe *LicenseKey )getExpiryDateToCompare ()_g .Time {if _fe .Trial {return _g .Now ().UTC ();
};return _acd .ReleasedAt ;};func _fgc ()([]string ,[]string ,error ){_fde ,_dfa :=_e .Interfaces ();if _dfa !=nil {return nil ,nil ,_dfa ;};var _dbbc []string ;var _fdc []string ;for _ ,_ffgf :=range _fde {if _ffgf .Flags &_e .FlagUp ==0||_bg .Equal (_ffgf .HardwareAddr ,nil ){continue ;
};_fgb ,_aea :=_ffgf .Addrs ();if _aea !=nil {return nil ,nil ,_aea ;};_daea :=0;for _ ,_be :=range _fgb {var _fffd _e .IP ;switch _cba :=_be .(type ){case *_e .IPNet :_fffd =_cba .IP ;case *_e .IPAddr :_fffd =_cba .IP ;};if _fffd .IsLoopback (){continue ;
};if _fffd .To4 ()==nil {continue ;};_fdc =append (_fdc ,_fffd .String ());_daea ++;};_gad :=_ffgf .HardwareAddr .String ();if _gad !=""&&_daea > 0{_dbbc =append (_dbbc ,_gad );};};return _dbbc ,_fdc ,nil ;};func _eea ()(_e .IP ,error ){_dfdc ,_eee :=_e .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _eee !=nil {return nil ,_eee ;};defer _dfdc .Close ();_abff :=_dfdc .LocalAddr ().(*_e .UDPAddr );return _abff .IP ,nil ;};func (_aga *LicenseKey )TypeToString ()string {if _aga ._cdb {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _aga .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _aga .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _aga .Tier ==LicenseTierIndividual ||_aga .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _gde ()string {_dfdb :=_bf .Getenv ("\u0048\u004f\u004d\u0045");if len (_dfdb )==0{_dfdb ,_ =_bf .UserHomeDir ();
};return _dfdb ;};func (_abe *LicenseKey )Validate ()error {if _abe ._cdb {return nil ;};if len (_abe .LicenseId )< 10{return _aeb .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_abe .CustomerId )< 10{return _aeb .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_abe .CustomerName )< 1{return _aeb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _cdc .After (_abe .CreatedAt ){return _aeb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _abe .ExpiresAt ==nil {_aac :=_abe .CreatedAt .AddDate (1,0,0);if _ecb .After (_aac ){_aac =_ecb ;};_abe .ExpiresAt =&_aac ;};if _abe .CreatedAt .After (*_abe .ExpiresAt ){return _aeb .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _abe .isExpired (){_ged :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _aeb .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_ged );};if len (_abe .CreatorName )< 1{return _aeb .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_abe .CreatorEmail )< 1{return _aeb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _abe .CreatedAt .After (_afa ){if !_abe .UniPDF {return _aeb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func SetMeteredKeyPersistentCache (val bool ){_gdg ._bcd =val };func _edc (_db string ,_aff string ,_dbc string )(string ,error ){_bdf :=_ea .Index (_dbc ,_db );if _bdf ==-1{return "",_aeb .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cf :=_ea .Index (_dbc ,_aff );if _cf ==-1{return "",_aeb .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dd :=_bdf +len (_db )+1;return _dbc [_dd :_cf -1],nil ;};func (_dcg *meteredClient )checkinUsage (_afg meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_afg .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_afg .PackageVersion =_acd .Version ;var _fcb meteredUsageCheckinResp ;_dgdc :=_dcg ._ff +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_cdd ,_bgded :=_cd .Marshal (_afg );if _bgded !=nil {return _fcb ,_bgded ;
};_fbb ,_bgded :=_geb (_cdd );if _bgded !=nil {return _fcb ,_bgded ;};_bfd ,_bgded :=_bd .NewRequest ("\u0050\u004f\u0053\u0054",_dgdc ,_fbb );if _bgded !=nil {return _fcb ,_bgded ;};_bfd .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bfd .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bfd .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bfd .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_dcg ._cfc );_acf ,_bgded :=_dcg ._afe .Do (_bfd );if _bgded !=nil {return _fcb ,_bgded ;};defer _acf .Body .Close ();if _acf .StatusCode !=200{_abg ,_ffg :=_eaea (_acf );if _ffg !=nil {return _fcb ,_ffg ;
};_ffg =_cd .Unmarshal (_abg ,&_fcb );if _ffg !=nil {return _fcb ,_ffg ;};return _fcb ,_aeb .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_acf .StatusCode );
};_dcf :=_acf .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_ffgb :=_ecga (_afg .MacAddress ,string (_cdd ));if _ffgb !=_dcf {_acd .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _fcb ,_c .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_dfb ,_bgded :=_eaea (_acf );if _bgded !=nil {return _fcb ,_bgded ;};_bgded =_cd .Unmarshal (_dfb ,&_fcb );if _bgded !=nil {return _fcb ,_bgded ;};return _fcb ,nil ;};func _fffg (_dfee ,_gebd []byte )([]byte ,error ){_bff ,_agdb :=_aa .NewCipher (_dfee );
if _agdb !=nil {return nil ,_agdb ;};_ccg :=make ([]byte ,_aa .BlockSize +len (_gebd ));_fce :=_ccg [:_aa .BlockSize ];if _ ,_fae :=_bc .ReadFull (_ab .Reader ,_fce );_fae !=nil {return nil ,_fae ;};_aed :=_ef .NewCFBEncrypter (_bff ,_fce );_aed .XORKeyStream (_ccg [_aa .BlockSize :],_gebd );
_cgd :=make ([]byte ,_ed .URLEncoding .EncodedLen (len (_ccg )));_ed .URLEncoding .Encode (_cgd ,_ccg );return _cgd ,nil ;};func GetMeteredState ()(MeteredStatus ,error ){if _gdg ==nil {return MeteredStatus {},_c .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gdg ._cdb ||len (_gdg ._cbg )==0{return MeteredStatus {},_c .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_eb ,_abea :=_bbfe .loadState (_gdg ._cbg );if _abea !=nil {_acd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abea );
return MeteredStatus {},_abea ;};if _eb .Docs > 0{_affg :=_dbb ("","","",true );if _affg !=nil {return MeteredStatus {},_affg ;};};_gee .Lock ();defer _gee .Unlock ();_def :=_agd ();_def ._cfc =_gdg ._cbg ;_efe ,_abea :=_def .getStatus ();if _abea !=nil {return MeteredStatus {},_abea ;
};if !_efe .Valid {return MeteredStatus {},_c .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_aag :=MeteredStatus {OK :true ,Credits :_efe .OrgCredits ,Used :_efe .OrgUsed };return _aag ,nil ;};func (_eab defaultStateHolder )loadState (_ebg string )(reportState ,error ){_dgcc ,_bag :=_ccba ();
if _bag !=nil {return reportState {},_bag ;};_bag =_bf .MkdirAll (_dgcc ,0777);if _bag !=nil {return reportState {},_bag ;};if len (_ebg )< 20{return reportState {},_c .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_egg :=[]byte (_ebg );
_dfg :=_gc .Sum512_256 (_egg [:20]);_gab :=_df .EncodeToString (_dfg [:]);_cbb :=_f .Join (_dgcc ,_gab );_caac ,_bag :=_bf .ReadFile (_cbb );if _bag !=nil {if _bf .IsNotExist (_bag ){return reportState {},nil ;};_acd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bag );
return reportState {},_c .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _acb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_caac ,_bag =_ebd ([]byte (_acb ),_caac );if _bag !=nil {return reportState {},_bag ;
};var _cbga reportState ;_bag =_cd .Unmarshal (_caac ,&_cbga );if _bag !=nil {_acd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bag );return reportState {},_c .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _cbga ,nil ;};type defaultStateHolder struct{};const _aba ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func _ecga (_dge ,_eec string )string {_dbg :=[]byte (_dge );_fcd :=_ca .New (_ac .New ,_dbg );
_fcd .Write ([]byte (_eec ));return _ed .StdEncoding .EncodeToString (_fcd .Sum (nil ));};func _gcc (_dgd string )(LicenseKey ,error ){var _cgf LicenseKey ;_aeg ,_gb :=_edc (_afb ,_aef ,_dgd );if _gb !=nil {return _cgf ,_gb ;};_dbcf ,_gb :=_cc (_gec ,_aeg );
if _gb !=nil {return _cgf ,_gb ;};_gb =_cd .Unmarshal (_dbcf ,&_cgf );if _gb !=nil {return _cgf ,_gb ;};_cgf .CreatedAt =_g .Unix (_cgf .CreatedAtInt ,0);if _cgf .ExpiresAtInt > 0{_cca :=_g .Unix (_cgf .ExpiresAtInt ,0);_cgf .ExpiresAt =&_cca ;};return _cgf ,nil ;
};const _ccb ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";func init (){_feea :=_bf .Getenv (_cdcc );_dbf :=_bf .Getenv (_aba );if len (_feea )==0||len (_dbf )==0{return ;};_faf ,_fef :=_bf .ReadFile (_feea );
if _fef !=nil {_acd .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_fef );return ;};_fef =SetLicenseKey (string (_faf ),_dbf );
if _fef !=nil {_acd .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fef );return ;};};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_acd .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_acd .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _aeb .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gdg !=nil &&(_gdg ._cdb ||_gdg .Tier !=LicenseTierUnlicensed ){_acd .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _c .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_eag :=_agd ();_eag ._cfc =apiKey ;_fbe ,_dba :=_eag .getStatus ();if _dba !=nil {return _dba ;};if !_fbe .Valid {return _c .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_dfd :=&LicenseKey {_cdb :true ,_cbg :apiKey ,_bcd :true };_gdg =_dfd ;return nil ;};func _ge (_bcf string ,_eg []byte )(string ,error ){_fd ,_ :=_af .Decode ([]byte (_bcf ));if _fd ==nil {return "",_aeb .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_bgd ,_bcg :=_cab .ParsePKCS1PrivateKey (_fd .Bytes );if _bcg !=nil {return "",_bcg ;};_gg :=_gc .New ();_gg .Write (_eg );_fg :=_gg .Sum (nil );_ce ,_bcg :=_cg .SignPKCS1v15 (_ab .Reader ,_bgd ,_a .SHA512 ,_fg );if _bcg !=nil {return "",_bcg ;};_dc :=_ed .StdEncoding .EncodeToString (_eg );
_dc +="\u000a\u002b\u000a";_dc +=_ed .StdEncoding .EncodeToString (_ce );return _dc ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func TrackUse (useKey string ){if _gdg ==nil {return ;};if !_gdg ._cdb ||len (_gdg ._cbg )==0{return ;
};if len (useKey )==0{return ;};_gee .Lock ();defer _gee .Unlock ();if _cbgg ==nil {_cbgg =map[string ]int {};};_cbgg [useKey ]++;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;
Tier string `json:"tier"`;CreatedAt _g .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_g .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;
UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_cdb bool ;_cbg string ;_bcd bool ;_bdfd bool ;};func _afda (_gfd *_bd .Response )(_bc .ReadCloser ,error ){var _bcda error ;var _acg _bc .ReadCloser ;
switch _ea .ToLower (_gfd .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_acg ,_bcda =_bb .NewReader (_gfd .Body );if _bcda !=nil {return _acg ,_bcda ;};defer _acg .Close ();
default:_acg =_gfd .Body ;};return _acg ,nil ;};var _bbfe stateLoader =defaultStateHolder {};func _ebd (_fcga ,_cea []byte )([]byte ,error ){_bfa :=make ([]byte ,_ed .URLEncoding .DecodedLen (len (_cea )));_bfg ,_fed :=_ed .URLEncoding .Decode (_bfa ,_cea );
if _fed !=nil {return nil ,_fed ;};_bfa =_bfa [:_bfg ];_ccge ,_fed :=_aa .NewCipher (_fcga );if _fed !=nil {return nil ,_fed ;};if len (_bfa )< _aa .BlockSize {return nil ,_c .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_gaa :=_bfa [:_aa .BlockSize ];_bfa =_bfa [_aa .BlockSize :];_degd :=_ef .NewCFBDecrypter (_ccge ,_gaa );_degd .XORKeyStream (_bfa ,_bfa );return _bfa ,nil ;};func Track (docKey string ,useKey string ,docName string )error {return _dbb (docKey ,useKey ,docName ,!_gdg ._bcd );
};