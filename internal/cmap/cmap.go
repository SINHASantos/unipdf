//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cmap ;import (_e "bufio";_ga "bytes";_ff "encoding/hex";_ed "errors";_c "fmt";_ef "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/core";_gf "github.com/unidoc/unipdf/v3/internal/cmap/bcmaps";_eg "io";_fd "sort";_g "strconv";
_ega "strings";_b "unicode/utf16";);func (cmap *CMap )parseBfrange ()error {for {var _gdfc CharCode ;_dda ,_dcc :=cmap .parseObject ();if _dcc !=nil {if _dcc ==_eg .EOF {break ;};return _dcc ;};switch _gecf :=_dda .(type ){case cmapOperand :if _gecf .Operand ==_fde {return nil ;
};return _ed .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_gdfc =_fedf (_gecf );default:return _ed .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");
};var _ebca CharCode ;_dda ,_dcc =cmap .parseObject ();if _dcc !=nil {if _dcc ==_eg .EOF {break ;};return _dcc ;};switch _eba :=_dda .(type ){case cmapOperand :_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0063\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0020\u0062\u0066r\u0061\u006e\u0067\u0065\u0020\u0074\u0072i\u0070\u006c\u0065\u0074");
return ErrBadCMap ;case cmapHexString :_ebca =_fedf (_eba );if _ebca > 0xffff{_ebca =0xffff;};default:_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_dda );return ErrBadCMap ;
};_dda ,_dcc =cmap .parseObject ();if _dcc !=nil {if _dcc ==_eg .EOF {break ;};return _dcc ;};switch _dea :=_dda .(type ){case cmapArray :if len (_dea .Array )!=int (_ebca -_gdfc )+1{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u006f\u0066\u0020\u0069\u0074\u0065\u006d\u0073\u0020\u0069\u006e\u0020a\u0072\u0072\u0061\u0079");
return ErrBadCMap ;};for _egcd :=_gdfc ;_egcd <=_ebca ;_egcd ++{_dgd :=_dea .Array [_egcd -_gdfc ];_ege ,_eeca :=_dgd .(cmapHexString );if !_eeca {return _ed .New ("\u006e\u006f\u006e-h\u0065\u0078\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0069\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_cbaf :=_bfd (_ege );cmap ._ffe [_egcd ]=string (_cbaf );};case cmapHexString :_ec :=_bfd (_dea );_eab :=len (_ec );for _fca :=_gdfc ;_fca <=_ebca ;_fca ++{cmap ._ffe [_fca ]=string (_ec );if _eab > 0{_ec [_eab -1]++;}else {_ef .Log .Debug ("\u004e\u006f\u0020c\u006d\u0061\u0070\u0020\u0074\u0061\u0072\u0067\u0065\u0074\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0066\u006f\u0072\u0020\u0025\u0023\u0076",_fca );
};if _fca ==1<<32-1{break ;};};default:_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_dda );return ErrBadCMap ;};};return nil ;};func _fdg (_ac bool )*CMap {_fb :=16;
if _ac {_fb =8;};return &CMap {_gda :_fb ,_aa :make (map[CharCode ]CharCode ),_cd :make (map[CharCode ]CharCode ),_ffe :make (map[CharCode ]string ),_gc :make (map[string ]CharCode )};};func (cmap *CMap )matchCode (_dg []byte )(_fgd CharCode ,_gacg int ,_gba bool ){for _bee :=0;
_bee < _ca ;_bee ++{if _bee < len (_dg ){_fgd =_fgd <<8|CharCode (_dg [_bee ]);_gacg ++;};_gba =cmap .inCodespace (_fgd ,_bee +1);if _gba {return _fgd ,_gacg ,true ;};};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063o\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0020m\u0061t\u0063\u0068\u0065\u0073\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d=\u0025\u0023\u0071\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",_dg ,string (_dg ),cmap );
return 0,0,false ;};type cmapInt struct{_gedd int64 };func (cmap *CMap )Name ()string {return cmap ._fdfd };type cmapArray struct{Array []cmapObject ;};func _dc (_eaf string )(*CMap ,error ){_aff ,_bc :=_gf .Asset (_eaf );if _bc !=nil {return nil ,_bc ;
};return LoadCmapFromDataCID (_aff );};func (cmap *CMap )Bytes ()[]byte {_ef .Log .Trace ("\u0063\u006d\u0061\u0070.B\u0079\u0074\u0065\u0073\u003a\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",cmap .String ());if len (cmap ._gde )> 0{return cmap ._gde ;
};cmap ._gde =[]byte (_ega .Join ([]string {_fdfb ,cmap .toBfData (),_dd },"\u000a"));return cmap ._gde ;};type cmapString struct{String string ;};func (cmap *CMap )parse ()error {var _bcc cmapObject ;for {_beae ,_bec :=cmap .parseObject ();if _bec !=nil {if _bec ==_eg .EOF {break ;
};_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u004d\u0061\u0070\u003a\u0020\u0025\u0076",_bec );return _bec ;};switch _fadgf :=_beae .(type ){case cmapOperand :_gaeg :=_fadgf ;switch _gaeg .Operand {case _fdag :_fffd :=cmap .parseCodespaceRange ();
if _fffd !=nil {return _fffd ;};case _gcc :_cga :=cmap .parseCIDRange ();if _cga !=nil {return _cga ;};case _dfd :_cf :=cmap .parseBfchar ();if _cf !=nil {return _cf ;};case _dfe :_ag :=cmap .parseBfrange ();if _ag !=nil {return _ag ;};case _gfg :if _bcc ==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u0073\u0065\u0063m\u0061\u0070\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f \u0061\u0072\u0067");
return ErrBadCMap ;};_gebd ,_gedb :=_bcc .(cmapName );if !_gedb {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0075\u0073\u0065\u0063\u006d\u0061\u0070\u0020\u0061\u0072\u0067\u0020\u006eo\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u0020\u0025\u0023\u0076",_bcc );
return ErrBadCMap ;};cmap ._gfe =_gebd .Name ;case _gfba :_deb :=cmap .parseSystemInfo ();if _deb !=nil {return _deb ;};};case cmapName :_ffbf :=_fadgf ;switch _ffbf .Name {case _gfba :_cba :=cmap .parseSystemInfo ();if _cba !=nil {return _cba ;};case _gcfd :_aafc :=cmap .parseName ();
if _aafc !=nil {return _aafc ;};case _eea :_fddd :=cmap .parseType ();if _fddd !=nil {return _fddd ;};case _dgeb :_beeb :=cmap .parseVersion ();if _beeb !=nil {return _beeb ;};case _gee :if _bec =cmap .parseWMode ();_bec !=nil {return _bec ;};};};_bcc =_beae ;
};return nil ;};func LoadCmapFromData (data []byte ,isSimple bool )(*CMap ,error ){_ef .Log .Trace ("\u004c\u006fa\u0064\u0043\u006d\u0061\u0070\u0046\u0072\u006f\u006d\u0044\u0061\u0074\u0061\u003a\u0020\u0069\u0073\u0053\u0069\u006d\u0070\u006ce=\u0025\u0074",isSimple );
cmap :=_fdg (isSimple );cmap .cMapParser =_dgdc (data );_fbd :=cmap .parse ();if _fbd !=nil {return nil ,_fbd ;};if len (cmap ._ced )==0{if cmap ._gfe !=""{return cmap ,nil ;};_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0063\u006d\u0061p=\u0025\u0073",cmap );
};cmap .computeInverseMappings ();return cmap ,nil ;};func LoadPredefinedCMap (name string )(*CMap ,error ){cmap ,_db :=_dc (name );if _db !=nil {return nil ,_db ;};if cmap ._gfe ==""{cmap .computeInverseMappings ();return cmap ,nil ;};_af ,_db :=_dc (cmap ._gfe );
if _db !=nil {return nil ,_db ;};for _cg ,_efb :=range _af ._aa {if _ ,_ea :=cmap ._aa [_cg ];!_ea {cmap ._aa [_cg ]=_efb ;};};cmap ._ced =append (cmap ._ced ,_af ._ced ...);cmap .computeInverseMappings ();return cmap ,nil ;};func NewCIDSystemInfo (obj _d .PdfObject )(_gb CIDSystemInfo ,_gd error ){_cec ,_gg :=_d .GetDict (obj );
if !_gg {return CIDSystemInfo {},_d .ErrTypeError ;};_a ,_gg :=_d .GetStringVal (_cec .Get ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"));if !_gg {return CIDSystemInfo {},_d .ErrTypeError ;};_fdf ,_gg :=_d .GetStringVal (_cec .Get ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"));
if !_gg {return CIDSystemInfo {},_d .ErrTypeError ;};_gac ,_gg :=_d .GetIntVal (_cec .Get ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"));if !_gg {return CIDSystemInfo {},_d .ErrTypeError ;};return CIDSystemInfo {Registry :_a ,Ordering :_fdf ,Supplement :_gac },nil ;
};func (_ccff *cMapParser )parseNumber ()(cmapObject ,error ){_fgca ,_cgf :=_d .ParseNumber (_ccff ._edd );if _cgf !=nil {return nil ,_cgf ;};switch _fbf :=_fgca .(type ){case *_d .PdfObjectFloat :return cmapFloat {float64 (*_fbf )},nil ;case *_d .PdfObjectInteger :return cmapInt {int64 (*_fbf )},nil ;
};return nil ,_c .Errorf ("\u0075n\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0054",_fgca );};func (_afa *cMapParser )skipSpaces ()(int ,error ){_gadf :=0;for {_fcc ,_gab :=_afa ._edd .Peek (1);
if _gab !=nil {return 0,_gab ;};if _d .IsWhiteSpace (_fcc [0]){_afa ._edd .ReadByte ();_gadf ++;}else {break ;};};return _gadf ,nil ;};func (_fdeb *cMapParser )parseComment ()(string ,error ){var _eafa _ga .Buffer ;_ ,_baac :=_fdeb .skipSpaces ();if _baac !=nil {return _eafa .String (),_baac ;
};_gfbe :=true ;for {_gade ,_gcge :=_fdeb ._edd .Peek (1);if _gcge !=nil {_ef .Log .Debug ("p\u0061r\u0073\u0065\u0043\u006f\u006d\u006d\u0065\u006et\u003a\u0020\u0065\u0072r=\u0025\u0076",_gcge );return _eafa .String (),_gcge ;};if _gfbe &&_gade [0]!='%'{return _eafa .String (),ErrBadCMapComment ;
};_gfbe =false ;if (_gade [0]!='\r')&&(_gade [0]!='\n'){_ccd ,_ :=_fdeb ._edd .ReadByte ();_eafa .WriteByte (_ccd );}else {break ;};};return _eafa .String (),nil ;};func _bfd (_gdb cmapHexString )[]rune {if len (_gdb ._ffa )==1{return []rune {rune (_gdb ._ffa [0])};
};_aaa :=_gdb ._ffa ;if len (_aaa )%2!=0{_aaa =append (_aaa ,0);_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u0073\u002e\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0073\u0068\u0065\u0078\u003d\u0025#\u0076\u0020\u0074\u006f\u0020\u0025\u002b\u0076",_gdb ,_aaa );
};_gdee :=len (_aaa )>>1;_babb :=make ([]uint16 ,_gdee );for _deed :=0;_deed < _gdee ;_deed ++{_babb [_deed ]=uint16 (_aaa [_deed <<1])<<8+uint16 (_aaa [_deed <<1+1]);};_gdcb :=_b .Decode (_babb );return _gdcb ;};func (cmap *CMap )CharcodeToCID (code CharCode )(CharCode ,bool ){_gcf ,_fgf :=cmap ._aa [code ];
return _gcf ,_fgf ;};type cmapName struct{Name string ;};func (cmap *CMap )parseVersion ()error {_gea :="";_geab :=false ;for _fae :=0;_fae < 3&&!_geab ;_fae ++{_egac ,_bdf :=cmap .parseObject ();if _bdf !=nil {return _bdf ;};switch _edfc :=_egac .(type ){case cmapOperand :switch _edfc .Operand {case "\u0064\u0065\u0066":_geab =true ;
default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0070\u0061\u0072\u0073\u0065\u0056e\u0072\u0073\u0069\u006f\u006e\u003a \u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076",_egac );
return ErrBadCMap ;};case cmapInt :_gea =_c .Sprintf ("\u0025\u0064",_edfc ._gedd );case cmapFloat :_gea =_c .Sprintf ("\u0025\u0066",_edfc ._dcgb );case cmapString :_gea =_edfc .String ;default:_ef .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020p\u0061\u0072\u0073\u0065Ver\u0073io\u006e\u003a\u0020\u0042\u0061\u0064\u0020ty\u0070\u0065\u002e\u0020\u006f\u003d\u0025#\u0076",_egac );
};};cmap ._be =_gea ;return nil ;};func LoadCmapFromDataCID (data []byte )(*CMap ,error ){return LoadCmapFromData (data ,false )};func NewToUnicodeCMap (codeToRune map[CharCode ]rune )*CMap {_ee :=make (map[CharCode ]string ,len (codeToRune ));for _aae ,_fc :=range codeToRune {_ee [_aae ]=string (_fc );
};cmap :=&CMap {_fdfd :"\u0041d\u006fb\u0065\u002d\u0049\u0064\u0065n\u0074\u0069t\u0079\u002d\u0055\u0043\u0053",_ba :2,_gda :16,_gfb :CIDSystemInfo {Registry :"\u0041\u0064\u006fb\u0065",Ordering :"\u0055\u0043\u0053",Supplement :0},_ced :[]Codespace {{Low :0,High :0xffff}},_ffe :_ee ,_gc :make (map[string ]CharCode ,len (codeToRune )),_aa :make (map[CharCode ]CharCode ,len (codeToRune )),_cd :make (map[CharCode ]CharCode ,len (codeToRune ))};
cmap .computeInverseMappings ();return cmap ;};type cMapParser struct{_edd *_e .Reader };func _daf (_abb string )rune {_gfa :=[]rune (_abb );return _gfa [len (_gfa )-1]};func (_cfa *cMapParser )parseObject ()(cmapObject ,error ){_cfa .skipSpaces ();for {_fcf ,_bfb :=_cfa ._edd .Peek (2);
if _bfb !=nil {return nil ,_bfb ;};if _fcf [0]=='%'{_cfa .parseComment ();_cfa .skipSpaces ();continue ;}else if _fcf [0]=='/'{_acb ,_fcae :=_cfa .parseName ();return _acb ,_fcae ;}else if _fcf [0]=='('{_gcd ,_fcgg :=_cfa .parseString ();return _gcd ,_fcgg ;
}else if _fcf [0]=='['{_cae ,_fbe :=_cfa .parseArray ();return _cae ,_fbe ;}else if (_fcf [0]=='<')&&(_fcf [1]=='<'){_ebf ,_gga :=_cfa .parseDict ();return _ebf ,_gga ;}else if _fcf [0]=='<'{_fcff ,_adfa :=_cfa .parseHexString ();return _fcff ,_adfa ;}else if _d .IsDecimalDigit (_fcf [0])||(_fcf [0]=='-'&&_d .IsDecimalDigit (_fcf [1])){_eda ,_geda :=_cfa .parseNumber ();
if _geda !=nil {return nil ,_geda ;};return _eda ,nil ;}else {_ecd ,_adg :=_cfa .parseOperand ();if _adg !=nil {return nil ,_adg ;};return _ecd ,nil ;};};};func (cmap *CMap )CIDSystemInfo ()CIDSystemInfo {return cmap ._gfb };func (cmap *CMap )CharcodeBytesToUnicode (data []byte )(string ,int ){_cge ,_ab :=cmap .BytesToCharcodes (data );
if !_ab {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0042\u0079\u0074\u0065s\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069n\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0064\u0061\u0074\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078]\u0020\u0063\u006d\u0061\u0070=\u0025\u0073",data ,cmap );
return "",0;};_abc :=make ([]string ,len (_cge ));var _bea []CharCode ;for _bab ,_gca :=range _cge {_cag ,_efd :=cmap ._ffe [_gca ];if !_efd {_bea =append (_bea ,_gca );_cag =MissingCodeString ;};_abc [_bab ]=_cag ;};_bgc :=_ega .Join (_abc ,"");if len (_bea )> 0{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020C\u0068\u0061\u0072c\u006f\u0064\u0065\u0042y\u0074\u0065\u0073\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070\u002e\u000a"+"\u0009d\u0061t\u0061\u003d\u005b\u0025\u00200\u0032\u0078]\u003d\u0025\u0023\u0071\u000a"+"\u0009\u0063h\u0061\u0072\u0063o\u0064\u0065\u0073\u003d\u0025\u0030\u0032\u0078\u000a"+"\u0009\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003d\u0025\u0064\u0020%\u0030\u0032\u0078\u000a"+"\u0009\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u003d`\u0025\u0073\u0060\u000a"+"\u0009\u0063\u006d\u0061\u0070\u003d\u0025\u0073",data ,string (data ),_cge ,len (_bea ),_bea ,_bgc ,cmap );
};return _bgc ,len (_bea );};const (_ca =4;MissingCodeRune ='\ufffd';MissingCodeString =string (MissingCodeRune ););func (cmap *CMap )StringToCID (s string )(CharCode ,bool ){_aeg ,_fda :=cmap ._gc [s ];return _aeg ,_fda ;};func (_fgdc *cMapParser )parseOperand ()(cmapOperand ,error ){_dedf :=cmapOperand {};
_fdge :=_ga .Buffer {};for {_bgcb ,_adb :=_fgdc ._edd .Peek (1);if _adb !=nil {if _adb ==_eg .EOF {break ;};return _dedf ,_adb ;};if _d .IsDelimiter (_bgcb [0]){break ;};if _d .IsWhiteSpace (_bgcb [0]){break ;};_fab ,_ :=_fgdc ._edd .ReadByte ();_fdge .WriteByte (_fab );
};if _fdge .Len ()==0{return _dedf ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u006f\u0070\u0065\u0072\u0061\u006e\u0064\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029");};_dedf .Operand =_fdge .String ();return _dedf ,nil ;};type cmapDict struct{Dict map[string ]cmapObject ;
};func (cmap *CMap )toBfData ()string {if len (cmap ._ffe )==0{return "";};_dad :=make ([]CharCode ,0,len (cmap ._ffe ));for _abg :=range cmap ._ffe {_dad =append (_dad ,_abg );};_fd .Slice (_dad ,func (_bcg ,_ebb int )bool {return _dad [_bcg ]< _dad [_ebb ]});
var _eeed []charRange ;_bfg :=charRange {_dad [0],_dad [0]};_fcg :=cmap ._ffe [_dad [0]];for _ ,_ged :=range _dad [1:]{_bbg :=cmap ._ffe [_ged ];if _ged ==_bfg ._bg +1&&_daf (_bbg )==_daf (_fcg )+1{_bfg ._bg =_ged ;}else {_eeed =append (_eeed ,_bfg );_bfg ._fa ,_bfg ._bg =_ged ,_ged ;
};_fcg =_bbg ;};_eeed =append (_eeed ,_bfg );var _dge []CharCode ;var _afc []fbRange ;for _ ,_ebg :=range _eeed {if _ebg ._fa ==_ebg ._bg {_dge =append (_dge ,_ebg ._fa );}else {_afc =append (_afc ,fbRange {_fe :_ebg ._fa ,_ce :_ebg ._bg ,_fff :cmap ._ffe [_ebg ._fa ]});
};};_ef .Log .Trace ("\u0063\u0068ar\u0052\u0061\u006eg\u0065\u0073\u003d\u0025d f\u0062Ch\u0061\u0072\u0073\u003d\u0025\u0064\u0020fb\u0052\u0061\u006e\u0067\u0065\u0073\u003d%\u0064",len (_eeed ),len (_dge ),len (_afc ));var _fdac []string ;if len (_dge )> 0{_fge :=(len (_dge )+_ebbe -1)/_ebbe ;
for _aec :=0;_aec < _fge ;_aec ++{_eaff :=_ddd (len (_dge )-_aec *_ebbe ,_ebbe );_fdac =append (_fdac ,_c .Sprintf ("\u0025\u0064\u0020\u0062\u0065\u0067\u0069\u006e\u0062f\u0063\u0068\u0061\u0072",_eaff ));for _cdg :=0;_cdg < _eaff ;_cdg ++{_dcg :=_dge [_aec *_ebbe +_cdg ];
_bbf :=cmap ._ffe [_dcg ];_fdac =append (_fdac ,_c .Sprintf ("\u003c%\u0030\u0034\u0078\u003e\u0020\u0025s",_dcg ,_fea (_bbf )));};_fdac =append (_fdac ,"\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r");};};if len (_afc )> 0{_cgg :=(len (_afc )+_ebbe -1)/_ebbe ;
for _aaf :=0;_aaf < _cgg ;_aaf ++{_gae :=_ddd (len (_afc )-_aaf *_ebbe ,_ebbe );_fdac =append (_fdac ,_c .Sprintf ("\u0025d\u0020b\u0065\u0067\u0069\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065",_gae ));for _bdc :=0;_bdc < _gae ;_bdc ++{_fadg :=_afc [_aaf *_ebbe +_bdc ];
_fdac =append (_fdac ,_c .Sprintf ("\u003c%\u00304\u0078\u003e\u003c\u0025\u0030\u0034\u0078\u003e\u0020\u0025\u0073",_fadg ._fe ,_fadg ._ce ,_fea (_fadg ._fff )));};_fdac =append (_fdac ,"\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065");
};};return _ega .Join (_fdac ,"\u000a");};func (cmap *CMap )parseBfchar ()error {for {_dbf ,_fedc :=cmap .parseObject ();if _fedc !=nil {if _fedc ==_eg .EOF {break ;};return _fedc ;};var _cbf CharCode ;switch _aed :=_dbf .(type ){case cmapOperand :if _aed .Operand ==_dcge {return nil ;
};return _ed .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_cbf =_fedf (_aed );default:return _ed .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");
};_dbf ,_fedc =cmap .parseObject ();if _fedc !=nil {if _fedc ==_eg .EOF {break ;};return _fedc ;};var _dfcd []rune ;switch _gbc :=_dbf .(type ){case cmapOperand :if _gbc .Operand ==_dcge {return nil ;};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u0070\u0065\u0072\u0061\u006e\u0064\u002e\u0020\u0025\u0023\u0076",_gbc );
return ErrBadCMap ;case cmapHexString :_dfcd =_bfd (_gbc );case cmapName :_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0061\u006de\u002e \u0025\u0023\u0076",_gbc );_dfcd =[]rune {MissingCodeRune };
default:_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0074\u0079\u0070e\u002e \u0025\u0023\u0076",_dbf );return ErrBadCMap ;};cmap ._ffe [_cbf ]=string (_dfcd );};return nil ;};func _gded ()cmapDict {return cmapDict {Dict :map[string ]cmapObject {}}};
func (cmap *CMap )Stream ()(*_d .PdfObjectStream ,error ){if cmap ._cdd !=nil {return cmap ._cdd ,nil ;};_eeec ,_bae :=_d .MakeStream (cmap .Bytes (),_d .NewFlateEncoder ());if _bae !=nil {return nil ,_bae ;};cmap ._cdd =_eeec ;return cmap ._cdd ,nil ;
};func (cmap *CMap )parseType ()error {_baf :=0;_gfcf :=false ;for _egd :=0;_egd < 3&&!_gfcf ;_egd ++{_egad ,_abbf :=cmap .parseObject ();if _abbf !=nil {return _abbf ;};switch _cbd :=_egad .(type ){case cmapOperand :switch _cbd .Operand {case "\u0064\u0065\u0066":_gfcf =true ;
default:_ef .Log .Error ("\u0070\u0061r\u0073\u0065\u0054\u0079\u0070\u0065\u003a\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u006f=%\u0023\u0076",_egad );return ErrBadCMap ;};case cmapInt :_baf =int (_cbd ._gedd );
};};cmap ._ba =_baf ;return nil ;};func (cmap *CMap )BytesToCharcodes (data []byte )([]CharCode ,bool ){var _gbb []CharCode ;if cmap ._gda ==8{for _ ,_egc :=range data {_gbb =append (_gbb ,CharCode (_egc ));};return _gbb ,true ;};for _edg :=0;_edg < len (data );
{_gbgd ,_gdc ,_bge :=cmap .matchCode (data [_edg :]);if !_bge {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0074\u0020\u0069\u003d\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",_edg ,data ,string (data ));
return _gbb ,false ;};_gbb =append (_gbb ,_gbgd );_edg +=_gdc ;};return _gbb ,true ;};const (_ebbe =100;_fdfb ="\u000a\u002f\u0043\u0049\u0044\u0049\u006e\u0069\u0074\u0020\u002f\u0050\u0072\u006fc\u0053\u0065\u0074\u0020\u0066\u0069\u006e\u0064\u0072es\u006fu\u0072c\u0065 \u0062\u0065\u0067\u0069\u006e\u000a\u0031\u0032\u0020\u0064\u0069\u0063\u0074\u0020\u0062\u0065\u0067\u0069n\u000a\u0062\u0065\u0067\u0069\u006e\u0063\u006d\u0061\u0070\n\u002f\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065m\u0049\u006e\u0066\u006f\u0020\u003c\u003c\u0020\u002f\u0052\u0065\u0067\u0069\u0073t\u0072\u0079\u0020\u0028\u0041\u0064\u006f\u0062\u0065\u0029\u0020\u002f\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067\u0020\u0028\u0055\u0043\u0053)\u0020\u002f\u0053\u0075\u0070p\u006c\u0065\u006d\u0065\u006et\u0020\u0030\u0020\u003e\u003e\u0020\u0064\u0065\u0066\u000a\u002f\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u002f\u0041\u0064\u006f\u0062\u0065-\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0055\u0043\u0053\u0020\u0064\u0065\u0066\u000a\u002fC\u004d\u0061\u0070\u0054\u0079\u0070\u0065\u0020\u0032\u0020\u0064\u0065\u0066\u000a\u0031\u0020\u0062\u0065\u0067\u0069\u006e\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063e\u0072\u0061n\u0067\u0065\n\u003c\u0030\u0030\u0030\u0030\u003e\u0020<\u0046\u0046\u0046\u0046\u003e\u000a\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065\u000a";
_dd ="\u0065\u006e\u0064\u0063\u006d\u0061\u0070\u000a\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u0063ur\u0072e\u006e\u0074\u0064\u0069\u0063\u0074\u0020\u002f\u0043\u004d\u0061\u0070 \u0064\u0065\u0066\u0069\u006e\u0065\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0020\u0070\u006fp\u000a\u0065\u006e\u0064\u000a\u0065\u006e\u0064\u000a";
);func (_gdffb *cMapParser )parseArray ()(cmapArray ,error ){_adgb :=cmapArray {};_adgb .Array =[]cmapObject {};_gdffb ._edd .ReadByte ();for {_gdffb .skipSpaces ();_gebc ,_dfb :=_gdffb ._edd .Peek (1);if _dfb !=nil {return _adgb ,_dfb ;};if _gebc [0]==']'{_gdffb ._edd .ReadByte ();
break ;};_fdgb ,_dfb :=_gdffb .parseObject ();if _dfb !=nil {return _adgb ,_dfb ;};_adgb .Array =append (_adgb .Array ,_fdgb );};return _adgb ,nil ;};type cmapOperand struct{Operand string ;};func (cmap *CMap )parseWMode ()error {var _eeg int ;_bce :=false ;
for _gdf :=0;_gdf < 3&&!_bce ;_gdf ++{_efg ,_dcb :=cmap .parseObject ();if _dcb !=nil {return _dcb ;};switch _edf :=_efg .(type ){case cmapOperand :switch _edf .Operand {case "\u0064\u0065\u0066":_bce =true ;default:_ef .Log .Error ("\u0070\u0061\u0072\u0073\u0065\u0057\u004d\u006f\u0064\u0065:\u0020\u0073\u0074\u0061\u0074\u0065\u0020e\u0072\u0072\u006f\u0072\u002e\u0020\u006f\u003d\u0025\u0023\u0076",_efg );
return ErrBadCMap ;};case cmapInt :_eeg =int (_edf ._gedd );};};cmap ._ffd =integer {_agec :true ,_afg :_eeg };return nil ;};func (cmap *CMap )inCodespace (_cgb CharCode ,_abe int )bool {for _ ,_bgg :=range cmap ._ced {if _bgg .Low <=_cgb &&_cgb <=_bgg .High &&_abe ==_bgg .NumBytes {return true ;
};};return false ;};func (cmap *CMap )Type ()int {return cmap ._ba };func (cmap *CMap )CharcodeToUnicode (code CharCode )(string ,bool ){if _gaa ,_eafc :=cmap ._ffe [code ];_eafc {return _gaa ,true ;};return MissingCodeString ,false ;};func (_ddaa *cMapParser )parseHexString ()(cmapHexString ,error ){_ddaa ._edd .ReadByte ();
_dcf :=[]byte ("\u0030\u0031\u0032\u003345\u0036\u0037\u0038\u0039\u0061\u0062\u0063\u0064\u0065\u0066\u0041\u0042\u0043\u0044E\u0046");_cff :=_ga .Buffer {};for {_ddaa .skipSpaces ();_ede ,_gebdd :=_ddaa ._edd .Peek (1);if _gebdd !=nil {return cmapHexString {},_gebdd ;
};if _ede [0]=='>'{_ddaa ._edd .ReadByte ();break ;};_fdgd ,_ :=_ddaa ._edd .ReadByte ();if _ga .IndexByte (_dcf ,_fdgd )>=0{_cff .WriteByte (_fdgd );};};if _cff .Len ()%2==1{_ef .Log .Debug ("\u0070\u0061rs\u0065\u0048\u0065x\u0053\u0074\u0072\u0069ng:\u0020ap\u0070\u0065\u006e\u0064\u0069\u006e\u0067 '\u0030\u0027\u0020\u0074\u006f\u0020\u0025#\u0071",_cff .String ());
_cff .WriteByte ('0');};_fdab :=_cff .Len ()/2;_dgdd ,_ :=_ff .DecodeString (_cff .String ());return cmapHexString {_aecf :_fdab ,_ffa :_dgdd },nil ;};func (_gcgb *cMapParser )parseDict ()(cmapDict ,error ){_ef .Log .Trace ("\u0052\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020D\u0069\u0063\u0074\u0021");
_bdff :=_gded ();_cecb ,_ :=_gcgb ._edd .ReadByte ();if _cecb !='<'{return _bdff ,ErrBadCMapDict ;};_cecb ,_ =_gcgb ._edd .ReadByte ();if _cecb !='<'{return _bdff ,ErrBadCMapDict ;};for {_gcgb .skipSpaces ();_dgf ,_dbg :=_gcgb ._edd .Peek (2);if _dbg !=nil {return _bdff ,_dbg ;
};if (_dgf [0]=='>')&&(_dgf [1]=='>'){_gcgb ._edd .ReadByte ();_gcgb ._edd .ReadByte ();break ;};_cbab ,_dbg :=_gcgb .parseName ();_ef .Log .Trace ("\u004be\u0079\u003a\u0020\u0025\u0073",_cbab .Name );if _dbg !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0052\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u006e\u0061\u006d\u0065\u002e\u0020\u0065\u0072r=\u0025\u0076",_dbg );
return _bdff ,_dbg ;};_gcgb .skipSpaces ();_ggd ,_dbg :=_gcgb .parseObject ();if _dbg !=nil {return _bdff ,_dbg ;};_bdff .Dict [_cbab .Name ]=_ggd ;_gcgb .skipSpaces ();_dgf ,_dbg =_gcgb ._edd .Peek (3);if _dbg !=nil {return _bdff ,_dbg ;};if string (_dgf )=="\u0064\u0065\u0066"{_gcgb ._edd .Discard (3);
};};return _bdff ,nil ;};func IsPredefinedCMap (name string )bool {return _gf .AssetExists (name )};const (_gfba ="\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f";_gaec ="\u0062e\u0067\u0069\u006e\u0063\u006d\u0061p";_acc ="\u0065n\u0064\u0063\u006d\u0061\u0070";
_fdag ="\u0062\u0065\u0067\u0069nc\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0072\u0061\u006e\u0067\u0065";_dada ="\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065";_dfd ="b\u0065\u0067\u0069\u006e\u0062\u0066\u0063\u0068\u0061\u0072";
_dcge ="\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r";_dfe ="\u0062\u0065\u0067i\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_fde ="\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_gcc ="\u0062\u0065\u0067\u0069\u006e\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";
_bde ="e\u006e\u0064\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";_gfg ="\u0075s\u0065\u0063\u006d\u0061\u0070";_gee ="\u0057\u004d\u006fd\u0065";_gcfd ="\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065";_eea ="\u0043\u004d\u0061\u0070\u0054\u0079\u0070\u0065";
_dgeb ="C\u004d\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e";);func (cmap *CMap )parseName ()error {_baea :="";_adfd :=false ;for _bdb :=0;_bdb < 20&&!_adfd ;_bdb ++{_cde ,_cfd :=cmap .parseObject ();if _cfd !=nil {return _cfd ;};switch _age :=_cde .(type ){case cmapOperand :switch _age .Operand {case "\u0064\u0065\u0066":_adfd =true ;
default:_ef .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a\u0020\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076\u0020n\u0061\u006de\u003d\u0025\u0023\u0071",_cde ,_baea );
if _baea !=""{_baea =_c .Sprintf ("\u0025\u0073\u0020%\u0073",_baea ,_age .Operand );};_ef .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a \u0052\u0065\u0063\u006f\u0076\u0065\u0072e\u0064\u002e\u0020\u006e\u0061\u006d\u0065\u003d\u0025\u0023\u0071",_baea );
};case cmapName :_baea =_age .Name ;};};if !_adfd {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0070\u0061\u0072\u0073\u0065N\u0061m\u0065:\u0020\u004e\u006f\u0020\u0064\u0065\u0066 ");return ErrBadCMap ;};cmap ._fdfd =_baea ;return nil ;};func (cmap *CMap )NBits ()int {return cmap ._gda };
func (cmap *CMap )WMode ()(int ,bool ){return cmap ._ffd ._afg ,cmap ._ffd ._agec };func (cmap *CMap )String ()string {_eecf :=cmap ._gfb ;_da :=[]string {_c .Sprintf ("\u006e\u0062\u0069\u0074\u0073\u003a\u0025\u0064",cmap ._gda ),_c .Sprintf ("\u0074y\u0070\u0065\u003a\u0025\u0064",cmap ._ba )};
if cmap ._be !=""{_da =append (_da ,_c .Sprintf ("\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0025\u0073",cmap ._be ));};if cmap ._gfe !=""{_da =append (_da ,_c .Sprintf ("u\u0073\u0065\u0063\u006d\u0061\u0070\u003a\u0025\u0023\u0071",cmap ._gfe ));
};_da =append (_da ,_c .Sprintf ("\u0073\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0025\u0073",_eecf .String ()));if len (cmap ._ced )> 0{_da =append (_da ,_c .Sprintf ("\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u003a\u0025\u0064",len (cmap ._ced )));
};if len (cmap ._ffe )> 0{_da =append (_da ,_c .Sprintf ("\u0063\u006fd\u0065\u0054\u006fU\u006e\u0069\u0063\u006f\u0064\u0065\u003a\u0025\u0064",len (cmap ._ffe )));};return _c .Sprintf ("\u0043\u004d\u0041P\u007b\u0025\u0023\u0071\u0020\u0025\u0073\u007d",cmap ._fdfd ,_ega .Join (_da ,"\u0020"));
};type charRange struct{_fa CharCode ;_bg CharCode ;};func (cmap *CMap )computeInverseMappings (){for _dbd ,_bd :=range cmap ._aa {if _de ,_ead :=cmap ._cd [_bd ];!_ead ||(_ead &&_de > _dbd ){cmap ._cd [_bd ]=_dbd ;};};for _cb ,_ad :=range cmap ._ffe {if _df ,_dbc :=cmap ._gc [_ad ];
!_dbc ||(_dbc &&_df > _cb ){cmap ._gc [_ad ]=_cb ;};};_fd .Slice (cmap ._ced ,func (_baa ,_gfc int )bool {return cmap ._ced [_baa ].Low < cmap ._ced [_gfc ].Low });};type cmapObject interface{};type integer struct{_agec bool ;_afg int ;};func (cmap *CMap )parseCodespaceRange ()error {for {_bag ,_ebbf :=cmap .parseObject ();
if _ebbf !=nil {if _ebbf ==_eg .EOF {break ;};return _ebbf ;};_gdff ,_gefb :=_bag .(cmapHexString );if !_gefb {if _bed ,_bad :=_bag .(cmapOperand );_bad {if _bed .Operand ==_dada {return nil ;};return _ed .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");
};};_bag ,_ebbf =cmap .parseObject ();if _ebbf !=nil {if _ebbf ==_eg .EOF {break ;};return _ebbf ;};_acg ,_gefb :=_bag .(cmapHexString );if !_gefb {return _ed .New ("\u006e\u006f\u006e-\u0068\u0065\u0078\u0020\u0068\u0069\u0067\u0068");};if len (_gdff ._ffa )!=len (_acg ._ffa ){return _ed .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");
};_eff :=_fedf (_gdff );_ddb :=_fedf (_acg );if _ddb < _eff {_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0042\u0061d\u0020\u0063\u006fd\u0065\u0073\u0070\u0061\u0063\u0065\u002e\u0020\u006cow\u003d\u0030\u0078%\u0030\u0032x\u0020\u0068\u0069\u0067\u0068\u003d0\u0078\u00250\u0032\u0078",_eff ,_ddb );
return ErrBadCMap ;};_cc :=_acg ._aecf ;_edcb :=Codespace {NumBytes :_cc ,Low :_eff ,High :_ddb };cmap ._ced =append (cmap ._ced ,_edcb );_ef .Log .Trace ("\u0043\u006f\u0064e\u0073\u0070\u0061\u0063e\u0020\u006c\u006f\u0077\u003a\u0020\u0030x\u0025\u0058\u002c\u0020\u0068\u0069\u0067\u0068\u003a\u0020\u0030\u0078\u0025\u0058",_eff ,_ddb );
};if len (cmap ._ced )==0{_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u0020\u0069\u006e\u0020\u0063ma\u0070\u002e");return ErrBadCMap ;};return nil ;};func _fedf (_cfb cmapHexString )CharCode {_fgg :=CharCode (0);
for _ ,_eabf :=range _cfb ._ffa {_fgg <<=8;_fgg |=CharCode (_eabf );};return _fgg ;};func (cmap *CMap )parseCIDRange ()error {for {_ded ,_gfd :=cmap .parseObject ();if _gfd !=nil {if _gfd ==_eg .EOF {break ;};return _gfd ;};_bac ,_cda :=_ded .(cmapHexString );
if !_cda {if _ebgb ,_efgb :=_ded .(cmapOperand );_efgb {if _ebgb .Operand ==_bde {return nil ;};return _ed .New ("\u0063\u0069\u0064\u0020\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0020s\u0074\u0061\u0072\u0074\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");
};};_bcec :=_fedf (_bac );_ded ,_gfd =cmap .parseObject ();if _gfd !=nil {if _gfd ==_eg .EOF {break ;};return _gfd ;};_fdb ,_cda :=_ded .(cmapHexString );if !_cda {return _ed .New ("\u0063\u0069d\u0020\u0069\u006e\u0074e\u0072\u0076a\u006c\u0020\u0065\u006e\u0064\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");
};if len (_bac ._ffa )!=len (_fdb ._ffa ){return _ed .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");};_cgge :=_fedf (_fdb );
if _bcec > _cgge {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0049\u0044\u0020\u0072\u0061\u006e\u0067\u0065\u002e\u0020\u0073t\u0061\u0072\u0074\u003d\u0030\u0078\u0025\u0030\u0032\u0078\u0020\u0065\u006e\u0064=\u0030x\u0025\u0030\u0032\u0078",_bcec ,_cgge );
return ErrBadCMap ;};_ded ,_gfd =cmap .parseObject ();if _gfd !=nil {if _gfd ==_eg .EOF {break ;};return _gfd ;};_cddb ,_cda :=_ded .(cmapInt );if !_cda {return _ed .New ("\u0063\u0069\u0064\u0020\u0073t\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0064\u0065\u0063\u0069\u006d\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _cddb ._gedd < 0{return _ed .New ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0063\u0069\u0064\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065");};_agd :=_cddb ._gedd ;for _fgcf :=_bcec ;_fgcf <=_cgge ;_fgcf ++{cmap ._aa [_fgcf ]=CharCode (_agd );
_agd ++;};_ef .Log .Trace ("C\u0049\u0044\u0020\u0072\u0061\u006eg\u0065\u003a\u0020\u003c\u0030\u0078\u0025\u0058\u003e \u003c\u0030\u0078%\u0058>\u0020\u0025\u0064",_bcec ,_cgge ,_cddb ._gedd );};return nil ;};type cmapHexString struct{_aecf int ;_ffa []byte ;
};func (cmap *CMap )parseSystemInfo ()error {_faf :=false ;_dde :=false ;_bba :="";_bggc :=false ;_cece :=CIDSystemInfo {};for _cdgd :=0;_cdgd < 50&&!_bggc ;_cdgd ++{_bbd ,_ebc :=cmap .parseObject ();if _ebc !=nil {return _ebc ;};switch _eeb :=_bbd .(type ){case cmapDict :_ace :=_eeb .Dict ;
_gef ,_gad :=_ace ["\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"];if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_fadd ,_gad :=_gef .(cmapString );
if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_cece .Registry =_fadd .String ;_gef ,_gad =_ace ["\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"];
if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_fadd ,_gad =_gef .(cmapString );if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");
return ErrBadCMap ;};_cece .Ordering =_fadd .String ;_fgc ,_gad :=_ace ["\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"];if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");
return ErrBadCMap ;};_bafd ,_gad :=_fgc .(cmapInt );if !_gad {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_cece .Supplement =int (_bafd ._gedd );
_bggc =true ;case cmapOperand :switch _eeb .Operand {case "\u0062\u0065\u0067i\u006e":_faf =true ;case "\u0065\u006e\u0064":_bggc =true ;case "\u0064\u0065\u0066":_dde =false ;};case cmapName :if _faf {_bba =_eeb .Name ;_dde =true ;};case cmapString :if _dde {switch _bba {case "\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079":_cece .Registry =_eeb .String ;
case "\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067":_cece .Ordering =_eeb .String ;};};case cmapInt :if _dde {switch _bba {case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_cece .Supplement =int (_eeb ._gedd );};};};};if !_bggc {_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0050\u0061\u0072\u0073\u0065\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006e\u0066\u006f\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u006c\u0079");
return ErrBadCMap ;};cmap ._gfb =_cece ;return nil ;};type CIDSystemInfo struct{Registry string ;Ordering string ;Supplement int ;};type fbRange struct{_fe CharCode ;_ce CharCode ;_fff string ;};func (_cfdb *cMapParser )parseString ()(cmapString ,error ){_cfdb ._edd .ReadByte ();
_aafca :=_ga .Buffer {};_ebfc :=1;for {_fbb ,_aef :=_cfdb ._edd .Peek (1);if _aef !=nil {return cmapString {_aafca .String ()},_aef ;};if _fbb [0]=='\\'{_cfdb ._edd .ReadByte ();_dgb ,_cgd :=_cfdb ._edd .ReadByte ();if _cgd !=nil {return cmapString {_aafca .String ()},_cgd ;
};if _d .IsOctalDigit (_dgb ){_dbb ,_gfcb :=_cfdb ._edd .Peek (2);if _gfcb !=nil {return cmapString {_aafca .String ()},_gfcb ;};var _cdf []byte ;_cdf =append (_cdf ,_dgb );for _ ,_bagb :=range _dbb {if _d .IsOctalDigit (_bagb ){_cdf =append (_cdf ,_bagb );
}else {break ;};};_cfdb ._edd .Discard (len (_cdf )-1);_ef .Log .Trace ("\u004e\u0075\u006d\u0065ri\u0063\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0022\u0025\u0073\u0022",_cdf );_dadd ,_gfcb :=_g .ParseUint (string (_cdf ),8,32);if _gfcb !=nil {return cmapString {_aafca .String ()},_gfcb ;
};_aafca .WriteByte (byte (_dadd ));continue ;};switch _dgb {case 'n':_aafca .WriteByte ('\n');case 'r':_aafca .WriteByte ('\r');case 't':_aafca .WriteByte ('\t');case 'b':_aafca .WriteByte ('\b');case 'f':_aafca .WriteByte ('\f');case '(':_aafca .WriteByte ('(');
case ')':_aafca .WriteByte (')');case '\\':_aafca .WriteByte ('\\');};continue ;}else if _fbb [0]=='('{_ebfc ++;}else if _fbb [0]==')'{_ebfc --;if _ebfc ==0{_cfdb ._edd .ReadByte ();break ;};};_abd ,_ :=_cfdb ._edd .ReadByte ();_aafca .WriteByte (_abd );
};return cmapString {_aafca .String ()},nil ;};type CMap struct{*cMapParser ;_fdfd string ;_gda int ;_ba int ;_be string ;_gfe string ;_gfb CIDSystemInfo ;_ced []Codespace ;_aa map[CharCode ]CharCode ;_cd map[CharCode ]CharCode ;_ffe map[CharCode ]string ;
_gc map[string ]CharCode ;_gde []byte ;_cdd *_d .PdfObjectStream ;_ffd integer ;};func _fea (_fee string )string {_gcg :=[]rune (_fee );_ebd :=make ([]string ,len (_gcg ));for _aea ,_bda :=range _gcg {_ebd [_aea ]=_c .Sprintf ("\u0025\u0030\u0034\u0078",_bda );
};return _c .Sprintf ("\u003c\u0025\u0073\u003e",_ega .Join (_ebd ,""));};func _dgdc (_ddac []byte )*cMapParser {_edge :=cMapParser {};_cce :=_ga .NewBuffer (_ddac );_edge ._edd =_e .NewReader (_cce );return &_edge ;};var (ErrBadCMap =_ed .New ("\u0062\u0061\u0064\u0020\u0063\u006d\u0061\u0070");
ErrBadCMapComment =_ed .New ("c\u006f\u006d\u006d\u0065\u006e\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0073\u0074a\u0072\u0074\u0020w\u0069t\u0068\u0020\u0025");ErrBadCMapDict =_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074");
);type CharCode uint32 ;func (_fg *CIDSystemInfo )String ()string {return _c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0025\u0030\u0033\u0064",_fg .Registry ,_fg .Ordering ,_fg .Supplement );};func _ddd (_fada ,_gadb int )int {if _fada < _gadb {return _fada ;
};return _gadb ;};type Codespace struct{NumBytes int ;Low CharCode ;High CharCode ;};func (_dee *cMapParser )parseName ()(cmapName ,error ){_bfge :="";_ecda :=false ;for {_ffdd ,_bbad :=_dee ._edd .Peek (1);if _bbad ==_eg .EOF {break ;};if _bbad !=nil {return cmapName {_bfge },_bbad ;
};if !_ecda {if _ffdd [0]=='/'{_ecda =true ;_dee ._edd .ReadByte ();}else {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u004e\u0061\u006d\u0065\u0020\u0073\u0074a\u0072t\u0069n\u0067 \u0077\u0069\u0074\u0068\u0020\u0025\u0073\u0020\u0028\u0025\u0020\u0078\u0029",_ffdd ,_ffdd );
return cmapName {_bfge },_c .Errorf ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u006ea\u006d\u0065:\u0020\u0028\u0025\u0063\u0029",_ffdd [0]);};}else {if _d .IsWhiteSpace (_ffdd [0]){break ;}else if (_ffdd [0]=='/')||(_ffdd [0]=='[')||(_ffdd [0]=='(')||(_ffdd [0]==']')||(_ffdd [0]=='<')||(_ffdd [0]=='>'){break ;
}else if _ffdd [0]=='#'{_geabg ,_cbfe :=_dee ._edd .Peek (3);if _cbfe !=nil {return cmapName {_bfge },_cbfe ;};_dee ._edd .Discard (3);_ccf ,_cbfe :=_ff .DecodeString (string (_geabg [1:3]));if _cbfe !=nil {return cmapName {_bfge },_cbfe ;};_bfge +=string (_ccf );
}else {_accd ,_ :=_dee ._edd .ReadByte ();_bfge +=string (_accd );};};};return cmapName {_bfge },nil ;};type cmapFloat struct{_dcgb float64 };func _aga (_gff cmapHexString )rune {_acbf :=_bfd (_gff );if _cecbf :=len (_acbf );_cecbf ==0{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054o\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065c\u0074\u0065\u0064\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0072u\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023\u0076",_gff );
return MissingCodeRune ;};if len (_acbf )> 1{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0078\u0061\u0063\u0074\u006c\u0079\u0020\u006f\u006e\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023v\u0020\u002d\u003e\u0020\u0025#\u0076",_gff ,_acbf );
};return _acbf [0];};func (cmap *CMap )CIDToCharcode (cid CharCode )(CharCode ,bool ){_fdd ,_gbg :=cmap ._cd [cid ];return _fdd ,_gbg ;};