//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pdfutil ;import (_c "github.com/unidoc/unipdf/v4/common";_cb "github.com/unidoc/unipdf/v4/contentstream";_f "github.com/unidoc/unipdf/v4/contentstream/draw";_a "github.com/unidoc/unipdf/v4/core";_bf "github.com/unidoc/unipdf/v4/model";);

// NormalizePage performs the following operations on the passed in page:
//   - Normalize the page rotation.
//     Rotates the contents of the page according to the Rotate entry, thus
//     flattening the rotation. The Rotate entry of the page is set to nil.
//   - Normalize the media box.
//     If the media box of the page is offsetted (Llx != 0 or Lly != 0),
//     the contents of the page are translated to (-Llx, -Lly). After
//     normalization, the media box is updated (Llx and Lly are set to 0 and
//     Urx and Ury are updated accordingly).
//   - Normalize the crop box.
//     The crop box of the page is updated based on the previous operations.
//
// After normalization, the page should look the same if openend using a
// PDF viewer.
// NOTE: This function does not normalize annotations, outlines other parts
// that are not part of the basic geometry and page content streams.
func NormalizePage (page *_bf .PdfPage )error {_ae ,_g :=page .GetMediaBox ();if _g !=nil {return _g ;};_e ,_g :=page .GetRotate ();if _g !=nil {_c .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_g .Error ());
};_ff :=_e %360!=0&&_e %90==0;_ae .Normalize ();_d ,_gf ,_ce ,_fc :=_ae .Llx ,_ae .Lly ,_ae .Width (),_ae .Height ();_gb :=_d !=0||_gf !=0;if !_ff &&!_gb {return nil ;};_ee :=func (_dc ,_fcc ,_fa float64 )_f .BoundingBox {return _f .Path {Points :[]_f .Point {_f .NewPoint (0,0).Rotate (_fa ),_f .NewPoint (_dc ,0).Rotate (_fa ),_f .NewPoint (0,_fcc ).Rotate (_fa ),_f .NewPoint (_dc ,_fcc ).Rotate (_fa )}}.GetBoundingBox ();
};_aa :=_cb .NewContentCreator ();var _cbd float64 ;if _ff {_cbd =-float64 (_e );_aee :=_ee (_ce ,_fc ,_cbd );_aa .Translate ((_aee .Width -_ce )/2+_ce /2,(_aee .Height -_fc )/2+_fc /2);_aa .RotateDeg (_cbd );_aa .Translate (-_ce /2,-_fc /2);_ce ,_fc =_aee .Width ,_aee .Height ;
};if _gb {_aa .Translate (-_d ,-_gf );};_bg :=_aa .Operations ();_de ,_g :=_a .MakeStream (_bg .Bytes (),_a .NewFlateEncoder ());if _g !=nil {return _g ;};_cd :=_a .MakeArray (_de );_cd .Append (page .GetContentStreamObjs ()...);*_ae =_bf .PdfRectangle {Urx :_ce ,Ury :_fc };
if _fg :=page .CropBox ;_fg !=nil {_fg .Normalize ();_gfc ,_gc ,_gd ,_fe :=_fg .Llx -_d ,_fg .Lly -_gf ,_fg .Width (),_fg .Height ();if _ff {_gdb :=_ee (_gd ,_fe ,_cbd );_gd ,_fe =_gdb .Width ,_gdb .Height ;};*_fg =_bf .PdfRectangle {Llx :_gfc ,Lly :_gc ,Urx :_gfc +_gd ,Ury :_gc +_fe };
};_c .Log .Debug ("\u0052\u006f\u0074\u0061\u0074\u0065\u003d\u0025\u0066\u00b0\u0020\u004f\u0070\u0073\u003d%\u0071 \u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u003d\u0025\u002e\u0032\u0066",_cbd ,_bg ,_ae );page .Contents =_cd ;page .Rotate =nil ;
return nil ;};