//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_b "errors";_f "fmt";_bb "github.com/unidoc/unipdf/v4/core";);func (_cfg *DiffResults )addError (_cbb *DiffResult ){if _cfg .Errors ==nil {_cfg .Errors =make ([]*DiffResult ,0);};_cfg .Errors =append (_cfg .Errors ,_cbb );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_dfa *_bb .PdfParser ,_bdd *_bb .PdfParser ,_efca *MDPParameters )(*DiffResults ,error );};func (_aefb *defaultDiffPolicy )compareAnnots (_bca int ,_adc ,_fea []_bb .PdfObject )error {_eaf :=make (map[int64 ]*_bb .PdfObjectDictionary );for _ ,_cdg :=range _adc {_cbg ,_cdf :=_bb .GetIndirect (_cdg );
if !_cdf {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gg ,_cdf :=_bb .GetDict (_cbg .PdfObject );if !_cdf {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_eaf [_cbg .ObjectNumber ]=_gg ;};for _ ,_cg :=range _fea {_aeg ,_eae :=_bb .GetIndirect (_cg );if !_eae {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bga ,_eae :=_bb .GetDict (_aeg .PdfObject );if !_eae {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cga ,_ :=_bb .GetStringVal (_bga .Get ("\u0054"));
_gd ,_ :=_bb .GetNameVal (_bga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_edc :=_eaf [_aeg .ObjectNumber ];!_edc {switch _aefb ._a {case NoRestrictions ,FillFormsAndAnnots :_aefb ._g .addWarningWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gd ,_cga ));
default:_ac ,_dfb :=_bb .GetDict (_aeg .PdfObject );if !_dfb {return _b .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_gfd ,_dfb :=_bb .GetNameVal (_ac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_dfb {return _b .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _gfd =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _aefb ._a {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_aefb ._g .addWarningWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gd ,_cga ));
default:_aefb ._g .addErrorWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gd ,_cga ));};}else {_aefb ._g .addErrorWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gd ,_cga ));
};};}else {delete (_eaf ,_aeg .ObjectNumber );if _aeb ,_efd :=_aefb ._fg [_aeg .ObjectNumber ];_efd {switch _aefb ._a {case NoRestrictions ,FillFormsAndAnnots :_aefb ._g .addWarningWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gd ,_cga ));
default:_dbg ,_dfe :=_bb .GetIndirect (_aeb );if !_dfe {return _b .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ddb ,_dfe :=_bb .GetDict (_dbg .PdfObject );if !_dfe {return _b .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_efb ,_dfe :=_bb .GetNameVal (_ddb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dfe {return _b .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _efb =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _aefb ._a {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_aefb ._g .addWarningWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gd ,_cga ));
default:_aefb ._g .addErrorWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gd ,_cga ));};}else {_aefb ._g .addErrorWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gd ,_cga ));
};};};};};for _ ,_bce :=range _eaf {_afb ,_ :=_bb .GetStringVal (_bce .Get ("\u0054"));_gaa ,_ :=_bb .GetNameVal (_bce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _aefb ._a {case NoRestrictions ,FillFormsAndAnnots :_aefb ._g .addWarningWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_gaa ,_afb ));
default:_aefb ._g .addErrorWithDescription (_bca ,_f .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_gaa ,_afb ));};};return nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// IsPermitted returns true if changes permitted.
func (_fed *DiffResults )IsPermitted ()bool {return len (_fed .Errors )==0};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;type defaultDiffPolicy struct{_fg map[int64 ]_bb .PdfObject ;_g *DiffResults ;_a DocMDPPermission ;};func (_fe *defaultDiffPolicy )compareRevisions (_ddg *_bb .PdfParser ,_ddgf *_bb .PdfParser )(*DiffResults ,error ){var _bf error ;
_fe ._fg ,_bf =_ddgf .GetUpdatedObjects (_ddg );if _bf !=nil {return &DiffResults {},_bf ;};if len (_fe ._fg )==0{return &DiffResults {},nil ;};_c :=_ddgf .GetRevisionNumber ();_ae ,_ec :=_bb .GetIndirect (_bb .ResolveReference (_ddg .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_dc ,_eg :=_bb .GetIndirect (_bb .ResolveReference (_ddgf .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_ec ||!_eg {return &DiffResults {},_b .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ef ,_ec :=_bb .GetDict (_bb .ResolveReference (_ae .PdfObject ));_bfe ,_eg :=_bb .GetDict (_bb .ResolveReference (_dc .PdfObject ));if !_ec ||!_eg {return &DiffResults {},_b .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cc ,_ecd :=_bb .GetIndirect (_bfe .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ecd {_bc ,_da :=_bb .GetDict (_cc );if !_da {return &DiffResults {},_b .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bcd :=make ([]_bb .PdfObject ,0);if _cf ,_ba :=_bb .GetIndirect (_ef .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ba {if _cfe ,_db :=_bb .GetDict (_cf );_db {if _de ,_gc :=_bb .GetArray (_cfe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_gc {_bcd =_de .Elements ();};};};_bg ,_da :=_bb .GetArray (_bc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_da {return &DiffResults {},_b .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _af :=_fe .compareFields (_c ,_bcd ,_bg .Elements ());_af !=nil {return &DiffResults {},_af ;};};_ccd ,_df :=_bb .GetIndirect (_bfe .Get ("\u0050\u0061\u0067e\u0073"));if !_df {return &DiffResults {},_b .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gab ,_df :=_bb .GetIndirect (_ef .Get ("\u0050\u0061\u0067e\u0073"));if !_df {return &DiffResults {},_b .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bgb :=_fe .comparePages (_c ,_gab ,_ccd );_bgb !=nil {return &DiffResults {},_bgb ;};return _fe ._g ,nil ;};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_ed *defaultDiffPolicy )ReviewFile (oldParser *_bb .PdfParser ,newParser *_bb .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_b .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_b .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_ed ._a =NoRestrictions ;}else {_ed ._a =params .DocMDPLevel ;};_be :=&DiffResults {};for _ede :=oldParser .GetRevisionNumber ()+1;_ede <=newParser .GetRevisionNumber ();_ede ++{_d ,_dd :=newParser .GetRevision (_ede -1);
if _dd !=nil {return nil ,_dd ;};_ab ,_dd :=newParser .GetRevision (_ede );if _dd !=nil {return nil ,_dd ;};_ga ,_dd :=_ed .compareRevisions (_d ,_ab );if _dd !=nil {return nil ,_dd ;};_be .Warnings =append (_be .Warnings ,_ga .Warnings ...);_be .Errors =append (_be .Errors ,_ga .Errors ...);
};return _be ,nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};

// String returns the state of the warning.
func (_acf *DiffResult )String ()string {return _f .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_acf .Description ,_acf .Revision );};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_fg :nil ,_g :&DiffResults {},_a :0};
};func (_cef *defaultDiffPolicy )comparePages (_bdc int ,_eb ,_cd *_bb .PdfIndirectObject )error {if _ ,_fb :=_cef ._fg [_cd .ObjectNumber ];_fb {_cef ._g .addErrorWithDescription (_bdc ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_fbb ,_dba :=_bb .GetDict (_cd .PdfObject );_babb ,_cdc :=_bb .GetDict (_eb .PdfObject );if !_dba ||!_cdc {return _b .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_edb ,_dba :=_bb .GetArray (_fbb .Get ("\u004b\u0069\u0064\u0073"));_fgc ,_cdc :=_bb .GetArray (_babb .Get ("\u004b\u0069\u0064\u0073"));if !_dba ||!_cdc {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_abd :=_edb .Len ();if _abd > _fgc .Len (){_abd =_fgc .Len ();};for _dcf :=0;_dcf < _abd ;_dcf ++{_deb ,_fa :=_bb .GetIndirect (_bb .ResolveReference (_fgc .Get (_dcf )));_gec ,_ea :=_bb .GetIndirect (_bb .ResolveReference (_edb .Get (_dcf )));if !_fa ||!_ea {return _b .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _deb .ObjectNumber !=_gec .ObjectNumber {_cef ._g .addErrorWithDescription (_bdc ,_f .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_dcf ));};_agb ,_fa :=_bb .GetDict (_gec );_ddgg ,_ea :=_bb .GetDict (_deb );
if !_fa ||!_ea {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_eec ,_cb :=_ddd (_agb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cb !=nil {return _cb ;};_cfa ,_cb :=_ddd (_ddgg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cb !=nil {return _cb ;};if _dag :=_cef .compareAnnots (_bdc ,_cfa ,_eec );_dag !=nil {return _dag ;};};for _bbe :=_abd +1;_bbe <=_edb .Len ();_bbe ++{_cef ._g .addErrorWithDescription (_bdc ,_f .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bbe ));
};for _fdc :=_abd +1;_fdc <=_fgc .Len ();_fdc ++{_cef ._g .addErrorWithDescription (_bdc ,_f .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_fdc ));};return nil ;};func (_cac *DiffResults )addErrorWithDescription (_aege int ,_afg string ){if _cac .Errors ==nil {_cac .Errors =make ([]*DiffResult ,0);
};_cac .Errors =append (_cac .Errors ,&DiffResult {Revision :_aege ,Description :_afg });};func (_daab *DiffResults )addWarning (_gbb *DiffResult ){if _daab .Warnings ==nil {_daab .Warnings =make ([]*DiffResult ,0);};_daab .Warnings =append (_daab .Warnings ,_gbb );
};func (_gea *DiffResults )addWarningWithDescription (_dgd int ,_bac string ){if _gea .Warnings ==nil {_gea .Warnings =make ([]*DiffResult ,0);};_gea .Warnings =append (_gea .Warnings ,&DiffResult {Revision :_dgd ,Description :_bac });};func (_ce *defaultDiffPolicy )compareFields (_eda int ,_ad ,_aef []_bb .PdfObject )error {_gf :=make (map[int64 ]*_bb .PdfObjectDictionary );
for _ ,_bcdc :=range _ad {_gag ,_ee :=_bb .GetIndirect (_bcdc );if !_ee {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ge ,_ee :=_bb .GetDict (_gag .PdfObject );
if !_ee {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gf [_gag .ObjectNumber ]=_ge ;};for _ ,_fde :=range _aef {_dg ,_ceb :=_bb .GetIndirect (_fde );
if !_ceb {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bd ,_ceb :=_bb .GetDict (_dg .PdfObject );if !_ceb {return _b .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_bd .Get ("\u0054");if _ ,_bfb :=_ce ._fg [_dg .ObjectNumber ];_bfb {switch _ce ._a {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ce ._g .addWarningWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_ce ._g .addErrorWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_bab :=_gf [_dg .ObjectNumber ];!_bab {switch _ce ._a {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ce ._g .addWarningWithDescription (_eda ,_f .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bd .Get ("\u0054")));
default:_ce ._g .addErrorWithDescription (_eda ,_f .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bd .Get ("\u0054")));};}else {delete (_gf ,_dg .ObjectNumber );if _ ,_bfg :=_ce ._fg [_dg .ObjectNumber ];
_bfg {switch _ce ._a {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ce ._g .addWarningWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_bd .Get ("\u0054")));default:_ce ._g .addErrorWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_bd .Get ("\u0054")));
};};};if FT ,_ag :=_bb .GetNameVal (_bd .Get ("\u0046\u0054"));_ag {if FT =="\u0053\u0069\u0067"{if _bbg ,_aee :=_bb .GetIndirect (_bd .Get ("\u0056"));_aee {if _ ,_dcg :=_ce ._fg [_bbg .ObjectNumber ];_dcg {switch _ce ._a {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ce ._g .addWarningWithDescription (_eda ,_f .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_ce ._g .addErrorWithDescription (_eda ,_f .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_eea :=range _gf {switch _ce ._a {case NoRestrictions :_ce ._g .addWarningWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_eea .Get ("\u0054")));default:_ce ._g .addErrorWithDescription (_eda ,_f .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_eea .Get ("\u0054")));
};};return nil ;};func _ddd (_dfc _bb .PdfObject )([]_bb .PdfObject ,error ){_fc :=make ([]_bb .PdfObject ,0);if _dfc !=nil {_ca :=_dfc ;if _ff ,_ffd :=_bb .GetIndirect (_dfc );_ffd {_ca =_ff .PdfObject ;};if _gba ,_efc :=_bb .GetArray (_ca );_efc {_fc =_gba .Elements ();
}else {return nil ,_b .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");};};return _fc ,nil ;};