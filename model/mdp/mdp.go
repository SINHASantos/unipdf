//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_g "errors";_a "fmt";_e "github.com/unidoc/unipdf/v3/core";);

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};func (_fgaf *DiffResults )addWarningWithDescription (_dff int ,_gafb string ){if _fgaf .Warnings ==nil {_fgaf .Warnings =make ([]*DiffResult ,0);};_fgaf .Warnings =append (_fgaf .Warnings ,&DiffResult {Revision :_dff ,Description :_gafb });
};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_gf :nil ,_ae :&DiffResults {},_d :0};};


// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_c *defaultDiffPolicy )ReviewFile (oldParser *_e .PdfParser ,newParser *_e .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_g .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_g .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_c ._d =NoRestrictions ;}else {_c ._d =params .DocMDPLevel ;};_cc :=&DiffResults {};for _dg :=oldParser .GetRevisionNumber ()+1;_dg <=newParser .GetRevisionNumber ();_dg ++{_b ,_ec :=newParser .GetRevision (_dg -1);
if _ec !=nil {return nil ,_ec ;};_ag ,_ec :=newParser .GetRevision (_dg );if _ec !=nil {return nil ,_ec ;};_ff ,_ec :=_c .compareRevisions (_b ,_ag );if _ec !=nil {return nil ,_ec ;};_cc .Warnings =append (_cc .Warnings ,_ff .Warnings ...);_cc .Errors =append (_cc .Errors ,_ff .Errors ...);
};return _cc ,nil ;};func (_bgec *defaultDiffPolicy )compareAnnots (_adb int ,_ea ,_fga []_e .PdfObject )error {_ccg :=make (map[int64 ]*_e .PdfObjectDictionary );for _ ,_ddf :=range _ea {_ade ,_eab :=_e .GetIndirect (_ddf );if !_eab {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bbdg ,_eab :=_e .GetDict (_ade .PdfObject );if !_eab {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ccg [_ade .ObjectNumber ]=_bbdg ;
};for _ ,_cag :=range _fga {_fcgg ,_ede :=_e .GetIndirect (_cag );if !_ede {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_fae ,_ede :=_e .GetDict (_fcgg .PdfObject );
if !_ede {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dcg ,_ :=_e .GetStringVal (_fae .Get ("\u0054"));_fgag ,_ :=_e .GetNameVal (_fae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if _ ,_geag :=_ccg [_fcgg .ObjectNumber ];!_geag {switch _bgec ._d {case NoRestrictions ,FillFormsAndAnnots :_bgec ._ae .addWarningWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fgag ,_dcg ));
default:_bgeg ,_dfdb :=_e .GetDict (_fcgg .PdfObject );if !_dfdb {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_gag ,_dfdb :=_e .GetNameVal (_bgeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_dfdb {return _g .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _gag =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _bgec ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_bgec ._ae .addWarningWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fgag ,_dcg ));
default:_bgec ._ae .addErrorWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fgag ,_dcg ));};}else {_bgec ._ae .addErrorWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fgag ,_dcg ));
};};}else {delete (_ccg ,_fcgg .ObjectNumber );if _cfa ,_feb :=_bgec ._gf [_fcgg .ObjectNumber ];_feb {switch _bgec ._d {case NoRestrictions ,FillFormsAndAnnots :_bgec ._ae .addWarningWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fgag ,_dcg ));
default:_ab ,_abc :=_e .GetIndirect (_cfa );if !_abc {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_cbbb ,_abc :=_e .GetDict (_ab .PdfObject );if !_abc {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_bdf ,_abc :=_e .GetNameVal (_cbbb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_abc {return _g .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _bdf =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _bgec ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_bgec ._ae .addWarningWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fgag ,_dcg ));
default:_bgec ._ae .addErrorWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fgag ,_dcg ));};}else {_bgec ._ae .addErrorWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fgag ,_dcg ));
};};};};};for _ ,_eaf :=range _ccg {_bbfg ,_ :=_e .GetStringVal (_eaf .Get ("\u0054"));_fcdg ,_ :=_e .GetNameVal (_eaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _bgec ._d {case NoRestrictions ,FillFormsAndAnnots :_bgec ._ae .addWarningWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_fcdg ,_bbfg ));
default:_bgec ._ae .addErrorWithDescription (_adb ,_a .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_fcdg ,_bbfg ));};};return nil ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;func (_aaaf *defaultDiffPolicy )comparePages (_gfff int ,_dd ,_dc *_e .PdfIndirectObject )error {if _ ,_aac :=_aaaf ._gf [_dc .ObjectNumber ];_aac {_aaaf ._ae .addErrorWithDescription (_gfff ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_gef ,_ba :=_e .GetDict (_dc .PdfObject );_ee ,_add :=_e .GetDict (_dd .PdfObject );if !_ba ||!_add {return _g .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ecb ,_ba :=_e .GetArray (_gef .Get ("\u004b\u0069\u0064\u0073"));_dbd ,_add :=_e .GetArray (_ee .Get ("\u004b\u0069\u0064\u0073"));if !_ba ||!_add {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_fbe :=_ecb .Len ();if _fbe > _dbd .Len (){_fbe =_dbd .Len ();};for _fba :=0;_fba < _fbe ;_fba ++{_eff ,_ca :=_e .GetIndirect (_e .ResolveReference (_dbd .Get (_fba )));_dgc ,_gae :=_e .GetIndirect (_e .ResolveReference (_ecb .Get (_fba )));if !_ca ||!_gae {return _g .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _eff .ObjectNumber !=_dgc .ObjectNumber {_aaaf ._ae .addErrorWithDescription (_gfff ,_a .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_fba ));};_fcd ,_ca :=_e .GetDict (_dgc );_egb ,_gae :=_e .GetDict (_eff );
if !_ca ||!_gae {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_acf ,_bcc :=_fab (_fcd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _bcc !=nil {return _bcc ;};_bf ,_bcc :=_fab (_egb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _bcc !=nil {return _bcc ;};if _ggd :=_aaaf .compareAnnots (_gfff ,_bf ,_acf );_ggd !=nil {return _ggd ;};};for _cbd :=_fbe +1;_cbd <=_ecb .Len ();_cbd ++{_aaaf ._ae .addErrorWithDescription (_gfff ,_a .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cbd ));
};for _bged :=_fbe +1;_bged <=_dbd .Len ();_bged ++{_aaaf ._ae .addErrorWithDescription (_gfff ,_a .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bged ));};return nil ;};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_cae *_e .PdfParser ,_cfaf *_e .PdfParser ,_cbf *MDPParameters )(*DiffResults ,error );};func (_abg *DiffResults )addWarning (_bad *DiffResult ){if _abg .Warnings ==nil {_abg .Warnings =make ([]*DiffResult ,0);};_abg .Warnings =append (_abg .Warnings ,_bad );
};func (_ace *DiffResults )addErrorWithDescription (_egf int ,_egbf string ){if _ace .Errors ==nil {_ace .Errors =make ([]*DiffResult ,0);};_ace .Errors =append (_ace .Errors ,&DiffResult {Revision :_egf ,Description :_egbf });};

// IsPermitted returns true if changes permitted.
func (_dec *DiffResults )IsPermitted ()bool {return len (_dec .Errors )==0};func (_ccd *defaultDiffPolicy )compareFields (_gc int ,_afa ,_ebd []_e .PdfObject )error {_bg :=make (map[int64 ]*_e .PdfObjectDictionary );for _ ,_ge :=range _afa {_bbd ,_gaf :=_e .GetIndirect (_ge );
if !_gaf {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_age ,_gaf :=_e .GetDict (_bbd .PdfObject );if !_gaf {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bg [_bbd .ObjectNumber ]=_age ;};for _ ,_de :=range _ebd {_efb ,_agc :=_e .GetIndirect (_de );if !_agc {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_agca ,_agc :=_e .GetDict (_efb .PdfObject );if !_agc {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_agca .Get ("\u0054");
if _ ,_aaf :=_ccd ._gf [_efb .ObjectNumber ];_aaf {switch _ccd ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ccd ._ae .addWarningWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_ccd ._ae .addErrorWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_fa :=_bg [_efb .ObjectNumber ];!_fa {switch _ccd ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ccd ._ae .addWarningWithDescription (_gc ,_a .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_agca .Get ("\u0054")));
default:_ccd ._ae .addErrorWithDescription (_gc ,_a .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_agca .Get ("\u0054")));};}else {delete (_bg ,_efb .ObjectNumber );if _ ,_efa :=_ccd ._gf [_efb .ObjectNumber ];
_efa {switch _ccd ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ccd ._ae .addWarningWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_agca .Get ("\u0054")));
default:_ccd ._ae .addErrorWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_agca .Get ("\u0054")));};};};if FT ,_dee :=_e .GetNameVal (_agca .Get ("\u0046\u0054"));_dee {if FT =="\u0053\u0069\u0067"{if _acb ,_dfd :=_e .GetIndirect (_agca .Get ("\u0056"));
_dfd {if _ ,_gffb :=_ccd ._gf [_acb .ObjectNumber ];_gffb {switch _ccd ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ccd ._ae .addWarningWithDescription (_gc ,_a .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_ccd ._ae .addErrorWithDescription (_gc ,_a .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};
};};for _ ,_bgg :=range _bg {switch _ccd ._d {case NoRestrictions :_ccd ._ae .addWarningWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bgg .Get ("\u0054")));default:_ccd ._ae .addErrorWithDescription (_gc ,_a .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bgg .Get ("\u0054")));
};};return nil ;};

// String returns the state of the warning.
func (_fce *DiffResult )String ()string {return _a .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_fce .Description ,_fce .Revision );};func _fab (_cd _e .PdfObject )([]_e .PdfObject ,error ){_febf :=make ([]_e .PdfObject ,0);
if _cd !=nil {_efe :=_cd ;if _fgc ,_fbab :=_e .GetIndirect (_cd );_fbab {_efe =_fgc .PdfObject ;};if _da ,_gb :=_e .GetArray (_efe );_gb {_febf =_da .Elements ();}else {return nil ,_g .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _febf ,nil ;};func (_fd *defaultDiffPolicy )compareRevisions (_bc *_e .PdfParser ,_fg *_e .PdfParser )(*DiffResults ,error ){var _bb error ;_fd ._gf ,_bb =_fg .GetUpdatedObjects (_bc );if _bb !=nil {return &DiffResults {},_bb ;};if len (_fd ._gf )==0{return &DiffResults {},nil ;
};_ef :=_fg .GetRevisionNumber ();_ga ,_bbb :=_e .GetIndirect (_e .ResolveReference (_bc .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));_cf ,_df :=_e .GetIndirect (_e .ResolveReference (_fg .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_bbb ||!_df {return &DiffResults {},_g .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_eb ,_bbb :=_e .GetDict (_e .ResolveReference (_ga .PdfObject ));_gg ,_df :=_e .GetDict (_e .ResolveReference (_cf .PdfObject ));if !_bbb ||!_df {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fc ,_ac :=_e .GetIndirect (_gg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ac {_eg ,_bbbd :=_e .GetDict (_fc );if !_bbbd {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cg :=make ([]_e .PdfObject ,0);if _af ,_fcg :=_e .GetIndirect (_eb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_fcg {if _cb ,_cfe :=_e .GetDict (_af );_cfe {if _ce ,_aa :=_e .GetArray (_cb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_aa {_cg =_ce .Elements ();};};};_aaa ,_bbbd :=_e .GetArray (_eg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_bbbd {return &DiffResults {},_g .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _ffd :=_fd .compareFields (_ef ,_cg ,_aaa .Elements ());_ffd !=nil {return &DiffResults {},_ffd ;};};_fb ,_ad :=_e .GetIndirect (_gg .Get ("\u0050\u0061\u0067e\u0073"));if !_ad {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gff ,_ad :=_e .GetIndirect (_eb .Get ("\u0050\u0061\u0067e\u0073"));if !_ad {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _db :=_fd .comparePages (_ef ,_gff ,_fb );_db !=nil {return &DiffResults {},_db ;};return _fd ._ae ,nil ;};type defaultDiffPolicy struct{_gf map[int64 ]_e .PdfObject ;_ae *DiffResults ;_d DocMDPPermission ;};func (_aae *DiffResults )addError (_agd *DiffResult ){if _aae .Errors ==nil {_aae .Errors =make ([]*DiffResult ,0);
};_aae .Errors =append (_aae .Errors ,_agd );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};