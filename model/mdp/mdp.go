//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_f "errors";_cg "fmt";_fe "github.com/unidoc/unipdf/v3/core";);

// IsPermitted returns true if changes permitted.
func (_acca *DiffResults )IsPermitted ()bool {return len (_acca .Errors )==0};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_b :nil ,_a :&DiffResults {},_d :0}};func (_ggc *DiffResults )addError (_gbb *DiffResult ){if _ggc .Errors ==nil {_ggc .Errors =make ([]*DiffResult ,0);
};_ggc .Errors =append (_ggc .Errors ,_gbb );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_g *defaultDiffPolicy )ReviewFile (oldParser *_fe .PdfParser ,newParser *_fe .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_f .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_f .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_g ._d =NoRestrictions ;}else {_g ._d =params .DocMDPLevel ;};_bc :=&DiffResults {};for _bcg :=oldParser .GetRevisionNumber ()+1;_bcg <=newParser .GetRevisionNumber ();_bcg ++{_ca ,_ce :=newParser .GetRevision (_bcg -1);
if _ce !=nil {return nil ,_ce ;};_e ,_ce :=newParser .GetRevision (_bcg );if _ce !=nil {return nil ,_ce ;};_cf ,_ce :=_g .compareRevisions (_ca ,_e );if _ce !=nil {return nil ,_ce ;};_bc .Warnings =append (_bc .Warnings ,_cf .Warnings ...);_bc .Errors =append (_bc .Errors ,_cf .Errors ...);
};return _bc ,nil ;};func (_aac *DiffResults )addWarning (_dfb *DiffResult ){if _aac .Warnings ==nil {_aac .Warnings =make ([]*DiffResult ,0);};_aac .Warnings =append (_aac .Warnings ,_dfb );};func _gfbf (_gb _fe .PdfObject )([]_fe .PdfObject ,error ){_fea :=make ([]_fe .PdfObject ,0);
if _gb !=nil {_dbf :=_gb ;if _dag ,_cbb :=_fe .GetIndirect (_gb );_cbb {_dbf =_dag .PdfObject ;};if _gecc ,_bfc :=_fe .GetArray (_dbf );_bfc {_fea =_gecc .Elements ();}else {return nil ,_f .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _fea ,nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func (_dg *defaultDiffPolicy )compareRevisions (_cfd *_fe .PdfParser ,_fa *_fe .PdfParser )(*DiffResults ,error ){var _ed error ;
_dg ._b ,_ed =_fa .GetUpdatedObjects (_cfd );if _ed !=nil {return &DiffResults {},_ed ;};if len (_dg ._b )==0{return &DiffResults {},nil ;};_fc :=_fa .GetRevisionNumber ();_be ,_gf :=_fe .GetIndirect (_fe .ResolveReference (_cfd .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_gg ,_caf :=_fe .GetIndirect (_fe .ResolveReference (_fa .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_gf ||!_caf {return &DiffResults {},_f .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_df ,_gf :=_fe .GetDict (_fe .ResolveReference (_be .PdfObject ));_ac ,_caf :=_fe .GetDict (_fe .ResolveReference (_gg .PdfObject ));if !_gf ||!_caf {return &DiffResults {},_f .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ff ,_fff :=_fe .GetIndirect (_ac .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_fff {_acf ,_dgc :=_fe .GetDict (_ff );if !_dgc {return &DiffResults {},_f .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ee :=make ([]_fe .PdfObject ,0);if _bb ,_da :=_fe .GetIndirect (_df .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_da {if _de ,_ggd :=_fe .GetDict (_bb );_ggd {if _ec ,_ba :=_fe .GetArray (_de .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_ba {_ee =_ec .Elements ();};};};_aca ,_dgc :=_fe .GetArray (_acf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_dgc {return &DiffResults {},_f .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _fcc :=_dg .compareFields (_fc ,_ee ,_aca .Elements ());_fcc !=nil {return &DiffResults {},_fcc ;};};_cc ,_cea :=_fe .GetIndirect (_ac .Get ("\u0050\u0061\u0067e\u0073"));if !_cea {return &DiffResults {},_f .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ecb ,_cea :=_fe .GetIndirect (_df .Get ("\u0050\u0061\u0067e\u0073"));if !_cea {return &DiffResults {},_f .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bec :=_dg .comparePages (_fc ,_ecb ,_cc );_bec !=nil {return &DiffResults {},_bec ;};return _dg ._a ,nil ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_fbc *_fe .PdfParser ,_cef *_fe .PdfParser ,_dec *MDPParameters )(*DiffResults ,error );};

// String returns the state of the warning.
func (_eaa *DiffResult )String ()string {return _cg .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_eaa .Description ,_eaa .Revision );};func (_bg *defaultDiffPolicy )compareFields (_dd int ,_dac ,_eg []_fe .PdfObject )error {_gge :=make (map[int64 ]*_fe .PdfObjectDictionary );
for _ ,_dace :=range _dac {_gfb ,_ggb :=_fe .GetIndirect (_dace );if !_ggb {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bef ,_ggb :=_fe .GetDict (_gfb .PdfObject );
if !_ggb {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gge [_gfb .ObjectNumber ]=_bef ;};for _ ,_dde :=range _eg {_cff ,_ege :=_fe .GetIndirect (_dde );
if !_ege {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dc ,_ege :=_fe .GetDict (_cff .PdfObject );if !_ege {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_dc .Get ("\u0054");if _ ,_fd :=_bg ._b [_cff .ObjectNumber ];_fd {switch _bg ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_bg ._a .addWarningWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_bg ._a .addErrorWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_bdf :=_gge [_cff .ObjectNumber ];!_bdf {switch _bg ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_bg ._a .addWarningWithDescription (_dd ,_cg .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_dc .Get ("\u0054")));
default:_bg ._a .addErrorWithDescription (_dd ,_cg .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_dc .Get ("\u0054")));};}else {delete (_gge ,_cff .ObjectNumber );if _ ,_db :=_bg ._b [_cff .ObjectNumber ];
_db {switch _bg ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_bg ._a .addWarningWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_dc .Get ("\u0054")));default:_bg ._a .addErrorWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_dc .Get ("\u0054")));
};};};if FT ,_fcd :=_fe .GetNameVal (_dc .Get ("\u0046\u0054"));_fcd {if FT =="\u0053\u0069\u0067"{if _aaa ,_ag :=_fe .GetIndirect (_dc .Get ("\u0056"));_ag {if _ ,_dgd :=_bg ._b [_aaa .ObjectNumber ];_dgd {switch _bg ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_bg ._a .addWarningWithDescription (_dd ,_cg .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_bg ._a .addErrorWithDescription (_dd ,_cg .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_dbc :=range _gge {switch _bg ._d {case NoRestrictions :_bg ._a .addWarningWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_dbc .Get ("\u0054")));default:_bg ._a .addErrorWithDescription (_dd ,_cg .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_dbc .Get ("\u0054")));
};};return nil ;};func (_abff *DiffResults )addWarningWithDescription (_aeb int ,_cee string ){if _abff .Warnings ==nil {_abff .Warnings =make ([]*DiffResult ,0);};_abff .Warnings =append (_abff .Warnings ,&DiffResult {Revision :_aeb ,Description :_cee });
};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};type defaultDiffPolicy struct{_b map[int64 ]_fe .PdfObject ;_a *DiffResults ;_d DocMDPPermission ;};func (_adc *DiffResults )addErrorWithDescription (_fdbf int ,_bge string ){if _adc .Errors ==nil {_adc .Errors =make ([]*DiffResult ,0);
};_adc .Errors =append (_adc .Errors ,&DiffResult {Revision :_fdbf ,Description :_bge });};func (_gc *defaultDiffPolicy )comparePages (_ef int ,_eec ,_bf *_fe .PdfIndirectObject )error {if _ ,_ge :=_gc ._b [_bf .ObjectNumber ];_ge {_gc ._a .addErrorWithDescription (_ef ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_ab ,_bce :=_fe .GetDict (_bf .PdfObject );_ad ,_bdc :=_fe .GetDict (_eec .PdfObject );if !_bce ||!_bdc {return _f .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fcg ,_bce :=_fe .GetArray (_ab .Get ("\u004b\u0069\u0064\u0073"));_adg ,_bdc :=_fe .GetArray (_ad .Get ("\u004b\u0069\u0064\u0073"));if !_bce ||!_bdc {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_faa :=_fcg .Len ();if _faa > _adg .Len (){_faa =_adg .Len ();};for _gfa :=0;_gfa < _faa ;_gfa ++{_ae ,_af :=_fe .GetIndirect (_fe .ResolveReference (_adg .Get (_gfa )));_gd ,_cge :=_fe .GetIndirect (_fe .ResolveReference (_fcg .Get (_gfa )));if !_af ||!_cge {return _f .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _ae .ObjectNumber !=_gd .ObjectNumber {_gc ._a .addErrorWithDescription (_ef ,_cg .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_gfa ));};_fdg ,_af :=_fe .GetDict (_gd );_acfa ,_cge :=_fe .GetDict (_ae );
if !_af ||!_cge {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_age ,_acc :=_gfbf (_fdg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _acc !=nil {return _acc ;};_cgg ,_acc :=_gfbf (_acfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _acc !=nil {return _acc ;};if _fcb :=_gc .compareAnnots (_ef ,_cgg ,_age );_fcb !=nil {return _fcb ;};};for _bdg :=_faa +1;_bdg <=_fcg .Len ();_bdg ++{_gc ._a .addErrorWithDescription (_ef ,_cg .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bdg ));
};for _afa :=_faa +1;_afa <=_adg .Len ();_afa ++{_gc ._a .addErrorWithDescription (_ef ,_cg .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_afa ));};return nil ;};func (_fccb *defaultDiffPolicy )compareAnnots (_dgg int ,_bac ,_agb []_fe .PdfObject )error {_ccd :=make (map[int64 ]*_fe .PdfObjectDictionary );
for _ ,_eea :=range _bac {_gga ,_fg :=_fe .GetIndirect (_eea );if !_fg {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bad ,_fg :=_fe .GetDict (_gga .PdfObject );
if !_fg {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ccd [_gga .ObjectNumber ]=_bad ;};for _ ,_agd :=range _agb {_dff ,_efg :=_fe .GetIndirect (_agd );
if !_efg {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bde ,_efg :=_fe .GetDict (_dff .PdfObject );if !_efg {return _f .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_eb ,_ :=_fe .GetStringVal (_bde .Get ("\u0054"));_ga ,_ :=_fe .GetNameVal (_bde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_efc :=_ccd [_dff .ObjectNumber ];!_efc {switch _fccb ._d {case NoRestrictions ,FillFormsAndAnnots :_fccb ._a .addWarningWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ga ,_eb ));
default:_bfg ,_ggbg :=_fe .GetDict (_dff .PdfObject );if !_ggbg {return _f .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_gec ,_ggbg :=_fe .GetNameVal (_bfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_ggbg {return _f .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _gec =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fccb ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fccb ._a .addWarningWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ga ,_eb ));
default:_fccb ._a .addErrorWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ga ,_eb ));};}else {_fccb ._a .addErrorWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ga ,_eb ));
};};}else {delete (_ccd ,_dff .ObjectNumber );if _ada ,_eca :=_fccb ._b [_dff .ObjectNumber ];_eca {switch _fccb ._d {case NoRestrictions ,FillFormsAndAnnots :_fccb ._a .addWarningWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ga ,_eb ));
default:_ffb ,_ecg :=_fe .GetIndirect (_ada );if !_ecg {return _f .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ea ,_ecg :=_fe .GetDict (_ffb .PdfObject );if !_ecg {return _f .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_fda ,_ecg :=_fe .GetNameVal (_ea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ecg {return _f .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _fda =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fccb ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fccb ._a .addWarningWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ga ,_eb ));
default:_fccb ._a .addErrorWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ga ,_eb ));};}else {_fccb ._a .addErrorWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ga ,_eb ));
};};};};};for _ ,_ccf :=range _ccd {_abf ,_ :=_fe .GetStringVal (_ccf .Get ("\u0054"));_dea ,_ :=_fe .GetNameVal (_ccf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _fccb ._d {case NoRestrictions ,FillFormsAndAnnots :_fccb ._a .addWarningWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_dea ,_abf ));
default:_fccb ._a .addErrorWithDescription (_dgg ,_cg .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_dea ,_abf ));};};return nil ;};