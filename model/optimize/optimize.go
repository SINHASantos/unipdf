//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_cb "bytes";_c "crypto/md5";_ca "errors";_d "fmt";_a "github.com/unidoc/unipdf/v3/common";_ec "github.com/unidoc/unipdf/v3/contentstream";_ac "github.com/unidoc/unipdf/v3/core";_fe "github.com/unidoc/unipdf/v3/extractor";_f "github.com/unidoc/unipdf/v3/internal/imageutil";
_dd "github.com/unidoc/unipdf/v3/internal/textencoding";_bf "github.com/unidoc/unipdf/v3/model";_bb "github.com/unidoc/unitype";_g "golang.org/x/image/draw";_e "math";_ae "strings";);

// Optimize optimizes PDF objects to decrease PDF size.
func (_eafd *CombineDuplicateStreams )Optimize (objects []_ac .PdfObject )(_gffe []_ac .PdfObject ,_cggb error ){_ffcg :=make (map[_ac .PdfObject ]_ac .PdfObject );_fefa :=make (map[_ac .PdfObject ]struct{});_eef :=make (map[string ][]*_ac .PdfObjectStream );
for _ ,_bbge :=range objects {if _bfed ,_agad :=_bbge .(*_ac .PdfObjectStream );_agad {_gdc :=_c .New ();_gdc .Write (_bfed .Stream );_gdc .Write ([]byte (_bfed .PdfObjectDictionary .WriteString ()));_cfa :=string (_gdc .Sum (nil ));_eef [_cfa ]=append (_eef [_cfa ],_bfed );
};};for _ ,_agd :=range _eef {if len (_agd )< 2{continue ;};_cbg :=_agd [0];for _fcag :=1;_fcag < len (_agd );_fcag ++{_cdef :=_agd [_fcag ];_ffcg [_cdef ]=_cbg ;_fefa [_cdef ]=struct{}{};};};_gffe =make ([]_ac .PdfObject ,0,len (objects )-len (_fefa ));
for _ ,_dff :=range objects {if _ ,_dcg :=_fefa [_dff ];_dcg {continue ;};_gffe =append (_gffe ,_dff );};_faca (_gffe ,_ffcg );return _gffe ,nil ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};func _agdc (_gcag []_ac .PdfObject ){for _bfcg ,_fbcd :=range _gcag {switch _bfa :=_fbcd .(type ){case *_ac .PdfIndirectObject :_bfa .ObjectNumber =int64 (_bfcg +1);_bfa .GenerationNumber =0;case *_ac .PdfObjectStream :_bfa .ObjectNumber =int64 (_bfcg +1);
_bfa .GenerationNumber =0;case *_ac .PdfObjectStreams :_bfa .ObjectNumber =int64 (_bfcg +1);_bfa .GenerationNumber =0;};};};func _fff (_abe []_ac .PdfObject )(_ddb map[*_ac .PdfObjectStream ]struct{},_ddc error ){_ddb =map[*_ac .PdfObjectStream ]struct{}{};
_gff :=map[*_bf .PdfFont ]struct{}{};_ade :=_cedc (_abe );for _ ,_bbg :=range _ade ._bagg {_ggb ,_gaa :=_ac .GetDict (_bbg .PdfObject );if !_gaa {continue ;};_gd ,_gaa :=_ac .GetDict (_ggb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_gaa {continue ;
};_aeb ,_ :=_efee (_ggb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_cba ,_abea :=_bf .NewPdfPageResourcesFromDict (_gd );if _abea !=nil {return nil ,_abea ;};_gbfc :=[]content {{_abd :_aeb ,_egcc :_cba }};_bfb :=_fca (_ggb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _bfb !=nil {_gbfc =append (_gbfc ,_bfb ...);};for _ ,_ged :=range _gbfc {_aa ,_eda :=_fe .NewFromContents (_ged ._abd ,_ged ._egcc );if _eda !=nil {return nil ,_eda ;};_eafc ,_ ,_ ,_eda :=_aa .ExtractPageText ();if _eda !=nil {return nil ,_eda ;};for _ ,_be :=range _eafc .Marks ().Elements (){if _be .Font ==nil {continue ;
};if _ ,_cfd :=_gff [_be .Font ];!_cfd {_gff [_be .Font ]=struct{}{};};};};};_aee :=map[*_ac .PdfObjectStream ][]*_bf .PdfFont {};for _bdg :=range _gff {_bc :=_bdg .FontDescriptor ();if _bc ==nil ||_bc .FontFile2 ==nil {continue ;};_cea ,_bca :=_ac .GetStream (_bc .FontFile2 );
if !_bca {continue ;};_aee [_cea ]=append (_aee [_cea ],_bdg );};for _baa :=range _aee {var _bcf []rune ;var _abf []_bb .GlyphIndex ;for _ ,_bdaga :=range _aee [_baa ]{switch _dgg :=_bdaga .Encoder ().(type ){case *_dd .IdentityEncoder :_cga :=_dgg .RegisteredRunes ();
_afg :=make ([]_bb .GlyphIndex ,len (_cga ));for _cca ,_gbc :=range _cga {_afg [_cca ]=_bb .GlyphIndex (_gbc );};_abf =append (_abf ,_afg ...);case *_dd .TrueTypeFontEncoder :_cag :=_dgg .RegisteredRunes ();_bcf =append (_bcf ,_cag ...);case _dd .SimpleEncoder :_dab :=_dgg .Charcodes ();
for _ ,_dfe :=range _dab {_bde ,_ggfg :=_dgg .CharcodeToRune (_dfe );if !_ggfg {_a .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_dfe );
continue ;};_bcf =append (_bcf ,_bde );};};};_ddc =_dge (_baa ,_bcf ,_abf );if _ddc !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ddc );
return nil ,_ddc ;};_ddb [_baa ]=struct{}{};};return _ddb ,nil ;};type imageInfo struct{BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_ac .PdfObjectStream ;PPI float64 ;};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};func _ea (_bda *_ac .PdfObjectStream )error {_ad ,_dea :=_ac .DecodeStream (_bda );if _dea !=nil {return _dea ;};_eg :=_ec .NewContentStreamParser (string (_ad ));_ed ,_dea :=_eg .Parse ();if _dea !=nil {return _dea ;};_ed =_gf (_ed );
_ga :=_ed .Bytes ();if len (_ga )>=len (_ad ){return nil ;};_cg ,_dea :=_ac .MakeStream (_ed .Bytes (),_ac .NewFlateEncoder ());if _dea !=nil {return _dea ;};_bda .Stream =_cg .Stream ;_bda .Merge (_cg .PdfObjectDictionary );return nil ;};func _fca (_edae _ac .PdfObject )[]content {if _edae ==nil {return nil ;
};_ccb ,_bbf :=_ac .GetArray (_edae );if !_bbf {_a .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");return nil ;};var _gbg []content ;for _ ,_dgc :=range _ccb .Elements (){_fdg ,_ebd :=_ac .GetDict (_dgc );
if !_ebd {_a .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");continue ;};_gfa ,_ebd :=_ac .GetDict (_fdg .Get ("\u0041\u0050"));
if !_ebd {_a .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_afe :=_ac .TraceToDirectObject (_gfa .Get ("\u004e"));if _afe ==nil {_a .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};var _fde *_ac .PdfObjectStream ;switch _gffd :=_afe .(type ){case *_ac .PdfObjectDictionary :_bef ,_bgbc :=_ac .GetName (_fdg .Get ("\u0041\u0053"));if !_bgbc {_a .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");
continue ;};_fde ,_bgbc =_ac .GetStream (_gffd .Get (*_bef ));if !_bgbc {_a .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");continue ;};case *_ac .PdfObjectStream :_fde =_gffd ;
};if _fde ==nil {_a .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};_gdd ,_ffa :=_bf .NewXObjectFormFromStream (_fde );
if _ffa !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_ffa );continue ;};_cdd ,_ffa :=_gdd .GetContentStream ();
if _ffa !=nil {_a .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_ffa );continue ;};_gbg =append (_gbg ,content {_abd :string (_cdd ),_egcc :_gdd .Resources });
};return _gbg ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fac *Image )Optimize (objects []_ac .PdfObject )(_ccfg []_ac .PdfObject ,_ebeg error ){if _fac .ImageQuality <=0{return objects ,nil ;};_bbfa :=_aded (objects );if len (_bbfa )==0{return objects ,nil ;};_bdgcg :=make (map[_ac .PdfObject ]_ac .PdfObject );
_ebcc :=make (map[_ac .PdfObject ]struct{});for _ ,_cbfd :=range _bbfa {_afea :=_cbfd .Stream .Get ("\u0053\u004d\u0061s\u006b");_ebcc [_afea ]=struct{}{};};for _eeb ,_aba :=range _bbfa {_eccg :=_aba .Stream ;if _ ,_decc :=_ebcc [_eccg ];_decc {continue ;
};_ddaa ,_eed :=_bf .NewXObjectImageFromStream (_eccg );if _eed !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_eed );continue ;};switch _ddaa .Filter .(type ){case *_ac .JBIG2Encoder :continue ;case *_ac .CCITTFaxEncoder :continue ;
};_cgab ,_eed :=_ddaa .ToImage ();if _eed !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_eed );continue ;};_cddb :=_ac .NewDCTEncoder ();_cddb .ColorComponents =_cgab .ColorComponents ;_cddb .Quality =_fac .ImageQuality ;
_cddb .BitsPerComponent =_aba .BitsPerComponent ;_cddb .Width =_aba .Width ;_cddb .Height =_aba .Height ;_edga ,_eed :=_cddb .EncodeBytes (_cgab .Data );if _eed !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_eed );
continue ;};var _dbeg _ac .StreamEncoder ;_dbeg =_cddb ;{_befab :=_ac .NewFlateEncoder ();_feb :=_ac .NewMultiEncoder ();_feb .AddEncoder (_befab );_feb .AddEncoder (_cddb );_ccce ,_febg :=_feb .EncodeBytes (_cgab .Data );if _febg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_febg );
continue ;};if len (_ccce )< len (_edga ){_a .Log .Trace ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_edga ),len (_ccce ),len (_eccg .Stream ));
_edga =_ccce ;_dbeg =_feb ;};};_cbee :=len (_eccg .Stream );if _cbee < len (_edga ){continue ;};_geee :=&_ac .PdfObjectStream {Stream :_edga };_geee .PdfObjectReference =_eccg .PdfObjectReference ;_geee .PdfObjectDictionary =_ac .MakeDict ();_geee .Merge (_eccg .PdfObjectDictionary );
_geee .Merge (_dbeg .MakeStreamDict ());_geee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_edga ))));_bdgcg [_eccg ]=_geee ;_bbfa [_eeb ].Stream =_geee ;};_ccfg =make ([]_ac .PdfObject ,len (objects ));copy (_ccfg ,objects );
_faca (_ccfg ,_bdgcg );return _ccfg ,nil ;};

// CleanUnusedResources represents an optimizer used to clean unused resources.
type CleanUnusedResources struct{};func _bdgd (_dec *_ac .PdfObjectDictionary )[]string {_egcg :=[]string {};for _ ,_ebc :=range _dec .Keys (){_egcg =append (_egcg ,_ebc .String ());};return _egcg ;};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_aebdd *CompressStreams )Optimize (objects []_ac .PdfObject )(_dedb []_ac .PdfObject ,_fged error ){_dedb =make ([]_ac .PdfObject ,len (objects ));copy (_dedb ,objects );for _ ,_ffgc :=range objects {_gedc ,_cdf :=_ac .GetStream (_ffgc );if !_cdf {continue ;
};if _gfe :=_gedc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_gfe !=nil {if _ ,_dddb :=_ac .GetName (_gfe );_dddb {continue ;};if _bce ,_fcaf :=_ac .GetArray (_gfe );_fcaf &&_bce .Len ()> 0{continue ;};};_edgb :=_ac .NewFlateEncoder ();var _afcd []byte ;
_afcd ,_fged =_edgb .EncodeBytes (_gedc .Stream );if _fged !=nil {return _dedb ,_fged ;};_befa :=_edgb .MakeStreamDict ();if len (_afcd )+len (_befa .WriteString ())< len (_gedc .Stream ){_gedc .Stream =_afcd ;_gedc .PdfObjectDictionary .Merge (_befa );
_gedc .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_gedc .Stream ))));};};return _dedb ,nil ;};func _aded (_agee []_ac .PdfObject )[]*imageInfo {_decd :=_ac .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");
_aac :=make (map[*_ac .PdfObjectStream ]struct{});var _baac []*imageInfo ;for _ ,_fcf :=range _agee {_cbc ,_daa :=_ac .GetStream (_fcf );if !_daa {continue ;};if _ ,_edgbf :=_aac [_cbc ];_edgbf {continue ;};_aac [_cbc ]=struct{}{};_dddf :=_cbc .PdfObjectDictionary .Get (_decd );
_cccb ,_daa :=_ac .GetName (_dddf );if !_daa ||string (*_cccb )!="\u0049\u006d\u0061g\u0065"{continue ;};_bgd :=&imageInfo {Stream :_cbc ,BitsPerComponent :8};if _ceda ,_def :=_ac .GetIntVal (_cbc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));
_def {_bgd .BitsPerComponent =_ceda ;};if _fgaf ,_bgf :=_ac .GetIntVal (_cbc .Get ("\u0057\u0069\u0064t\u0068"));_bgf {_bgd .Width =_fgaf ;};if _faef ,_cfgf :=_ac .GetIntVal (_cbc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_cfgf {_bgd .Height =_faef ;
};_eddbe ,_ebdb :=_bf .NewPdfColorspaceFromPdfObject (_cbc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));if _ebdb !=nil {_a .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebdb );continue ;};if _eddbe ==nil {_dgcd ,_bfc :=_ac .GetName (_cbc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));
if _bfc {switch _dgcd .String (){case "\u0043\u0043\u0049\u0054\u0054\u0046\u0061\u0078\u0044e\u0063\u006f\u0064\u0065","J\u0042\u0049\u0047\u0032\u0044\u0065\u0063\u006f\u0064\u0065":_eddbe =_bf .NewPdfColorspaceDeviceGray ();_bgd .BitsPerComponent =1;
};};};switch _fbg :=_eddbe .(type ){case *_bf .PdfColorspaceDeviceRGB :_bgd .ColorComponents =3;case *_bf .PdfColorspaceDeviceGray :_bgd .ColorComponents =1;default:_a .Log .Debug ("\u004f\u0070\u0074\u0069\u006d\u0069\u007aa\u0074\u0069\u006fn\u0020\u0069\u0073 \u006e\u006ft\u0020\u0073\u0075\u0070\u0070\u006fr\u0074ed\u0020\u0066\u006f\u0072\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0054\u0020\u002d\u0020\u0073\u006b\u0069\u0070",_fbg );
continue ;};_baac =append (_baac ,_bgd );};return _baac ;};

// Optimize implements Optimizer interface.
func (_fda *CleanUnusedResources )Optimize (objects []_ac .PdfObject )(_ggbd []_ac .PdfObject ,_fdb error ){_bag ,_fdb :=_ecd (objects );if _fdb !=nil {return nil ,_fdb ;};_eff :=[]_ac .PdfObject {};for _ ,_egac :=range objects {_ ,_bgbg :=_bag [_egac ];
if _bgbg {continue ;};_eff =append (_eff ,_egac );};return _eff ,nil ;};type content struct{_abd string ;_egcc *_bf .PdfPageResources ;};

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};func _ecd (_faa []_ac .PdfObject )(map[_ac .PdfObject ]struct{},error ){_aeg :=_cedc (_faa );_adg :=_aeg ._bagg ;_cbe :=make (map[_ac .PdfObject ]struct{});_cgc :=_fcd (_adg );for _ ,_aebf :=range _adg {_fae ,_fecb :=_ac .GetDict (_aebf .PdfObject );
if !_fecb {continue ;};_ecbf ,_fecb :=_ac .GetDict (_fae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_fecb {continue ;};_aebd :=_cgc ["\u0058O\u0062\u006a\u0065\u0063\u0074"];_ceaa ,_fecb :=_ac .GetDict (_ecbf .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
if _fecb {_gedf :=_bdgd (_ceaa );for _ ,_fbc :=range _gedf {if _egfd (_fbc ,_aebd ){continue ;};_feg :=*_ac .MakeName (_fbc );_fba :=_ceaa .Get (_feg );_cbe [_fba ]=struct{}{};_ceaa .Remove (_feg );_fcae :=_gaab (_fba ,_cbe );if _fcae !=nil {_a .Log .Debug ("\u0066\u0061\u0069\u006ce\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065r\u0073e\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0025\u0076",_fba );
};};};_cbac ,_fecb :=_ac .GetDict (_ecbf .Get ("\u0046\u006f\u006e\u0074"));_bgec :=_cgc ["\u0046\u006f\u006e\u0074"];if _fecb {_fffg :=_bdgd (_cbac );for _ ,_afc :=range _fffg {if _egfd (_afc ,_bgec ){continue ;};_ccbc :=*_ac .MakeName (_afc );_bfdf :=_cbac .Get (_ccbc );
_cbe [_bfdf ]=struct{}{};_cbac .Remove (_ccbc );_dcc :=_gaab (_bfdf ,_cbe );if _dcc !=nil {_a .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_bfdf );
};};};_gba ,_fecb :=_ac .GetDict (_ecbf .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"));if _fecb {_bad :=_bdgd (_gba );_fcb :=_cgc ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];for _ ,_abgb :=range _bad {if _egfd (_abgb ,_fcb ){continue ;};_efg :=*_ac .MakeName (_abgb );
_aga :=_gba .Get (_efg );_cbe [_aga ]=struct{}{};_gba .Remove (_efg );_effb :=_gaab (_aga ,_cbe );if _effb !=nil {_a .Log .Debug ("\u0066\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_aga );
};};};};return _cbe ,nil ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};type objectStructure struct{_gbe *_ac .PdfObjectDictionary ;_decg *_ac .PdfObjectDictionary ;_bagg []*_ac .PdfIndirectObject ;};func _caa (_ebcca *_bf .XObjectImage ,_cfeg imageModifications )error {_geag ,_feeb :=_ebcca .ToImage ();
if _feeb !=nil {return _feeb ;};if _cfeg .Scale !=0{_geag ,_feeb =_gfac (_geag ,_cfeg .Scale );if _feeb !=nil {return _feeb ;};};if _cfeg .Encoding !=nil {_ebcca .Filter =_cfeg .Encoding ;};_ebcca .Decode =nil ;switch _afgd :=_ebcca .Filter .(type ){case *_ac .FlateEncoder :if _afgd .Predictor !=1&&_afgd .Predictor !=11{_afgd .Predictor =1;
};};if _feeb =_ebcca .SetImage (_geag ,nil );_feeb !=nil {_a .Log .Debug ("\u0045\u0072\u0072or\u0020\u0073\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0076",_feeb );return _feeb ;};_ebcca .ToPdfObject ();
return nil ;};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_bd []_bf .Optimizer };func _efee (_ceag _ac .PdfObject )(_cdfd string ,_cada []_ac .PdfObject ){var _dged _cb .Buffer ;switch _dedd :=_ceag .(type ){case *_ac .PdfIndirectObject :_cada =append (_cada ,_dedd );_ceag =_dedd .PdfObject ;
};switch _gfae :=_ceag .(type ){case *_ac .PdfObjectStream :if _beg ,_bgda :=_ac .DecodeStream (_gfae );_bgda ==nil {_dged .Write (_beg );_cada =append (_cada ,_gfae );};case *_ac .PdfObjectArray :for _ ,_cdb :=range _gfae .Elements (){switch _gfbd :=_cdb .(type ){case *_ac .PdfObjectStream :if _fag ,_deb :=_ac .DecodeStream (_gfbd );
_deb ==nil {_dged .Write (_fag );_cada =append (_cada ,_gfbd );};};};};return _dged .String (),_cada ;};

// Append appends optimizers to the chain.
func (_fb *Chain )Append (optimizers ..._bf .Optimizer ){_fb ._bd =append (_fb ._bd ,optimizers ...)};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ded *CleanContentstream )Optimize (objects []_ac .PdfObject )(_ee []_ac .PdfObject ,_gfb error ){_fcg :=map[*_ac .PdfObjectStream ]struct{}{};var _ega []*_ac .PdfObjectStream ;_gef :=func (_dg *_ac .PdfObjectStream ){if _ ,_egb :=_fcg [_dg ];!_egb {_fcg [_dg ]=struct{}{};
_ega =append (_ega ,_dg );};};_ffb :=map[_ac .PdfObject ]bool {};_bg :=map[_ac .PdfObject ]bool {};for _ ,_af :=range objects {switch _ef :=_af .(type ){case *_ac .PdfIndirectObject :switch _egg :=_ef .PdfObject .(type ){case *_ac .PdfObjectDictionary :if _df ,_ba :=_ac .GetName (_egg .Get ("\u0054\u0079\u0070\u0065"));
!_ba ||_df .String ()!="\u0050\u0061\u0067\u0065"{continue ;};if _bge ,_caf :=_ac .GetStream (_egg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_caf {_gef (_bge );}else if _ce ,_fbd :=_ac .GetArray (_egg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_fbd {var _edd []*_ac .PdfObjectStream ;for _ ,_cgg :=range _ce .Elements (){if _gbf ,_ggf :=_ac .GetStream (_cgg );_ggf {_edd =append (_edd ,_gbf );};};if len (_edd )> 0{var _cd _cb .Buffer ;for _ ,_ag :=range _edd {if _eaf ,_eca :=_ac .DecodeStream (_ag );
_eca ==nil {_cd .Write (_eaf );};_ffb [_ag ]=true ;};_fec ,_ab :=_ac .MakeStream (_cd .Bytes (),_ac .NewFlateEncoder ());if _ab !=nil {return nil ,_ab ;};_bg [_fec ]=true ;_egg .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fec );_gef (_fec );
};};};case *_ac .PdfObjectStream :if _fef ,_cf :=_ac .GetName (_ef .Get ("\u0054\u0079\u0070\u0065"));!_cf ||_fef .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _ccg ,_ccc :=_ac .GetName (_ef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_ccc ||_ccg .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_gef (_ef );};};for _ ,_fd :=range _ega {_gfb =_ea (_fd );if _gfb !=nil {return nil ,_gfb ;};};_ee =nil ;for _ ,_efc :=range objects {if _ffb [_efc ]{continue ;};_ee =append (_ee ,_efc );};
for _dae :=range _bg {_ee =append (_ee ,_dae );};return _ee ,nil ;};func _gfac (_beb *_bf .Image ,_gcdf float64 )(*_bf .Image ,error ){_efff ,_ddgc :=_beb .ToGoImage ();if _ddgc !=nil {return nil ,_ddgc ;};var _bbb _f .Image ;_fdee ,_cgb :=_efff .(*_f .Monochrome );
if _cgb {if _ddgc =_fdee .ResolveDecode ();_ddgc !=nil {return nil ,_ddgc ;};_bbb ,_ddgc =_fdee .Scale (_gcdf );if _ddgc !=nil {return nil ,_ddgc ;};}else {_dfgc :=int (_e .RoundToEven (float64 (_beb .Width )*_gcdf ));_fce :=int (_e .RoundToEven (float64 (_beb .Height )*_gcdf ));
_bbb ,_ddgc =_f .NewImage (_dfgc ,_fce ,int (_beb .BitsPerComponent ),_beb .ColorComponents ,nil ,nil ,nil );if _ddgc !=nil {return nil ,_ddgc ;};_g .CatmullRom .Scale (_bbb ,_bbb .Bounds (),_efff ,_efff .Bounds (),_g .Over ,&_g .Options {});};_ggff :=_bbb .Base ();
_defe :=&_bf .Image {Width :int64 (_ggff .Width ),Height :int64 (_ggff .Height ),BitsPerComponent :int64 (_ggff .BitsPerComponent ),ColorComponents :_ggff .ColorComponents ,Data :_ggff .Data };_defe .SetDecode (_ggff .Decode );_defe .SetAlpha (_ggff .Alpha );
return _defe ,nil ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};func _cedc (_bggg []_ac .PdfObject )objectStructure {_dbegb :=objectStructure {};_dggfc :=false ;for _ ,_ege :=range _bggg {switch _daee :=_ege .(type ){case *_ac .PdfIndirectObject :_dbba ,_ddf :=_ac .GetDict (_daee );
if !_ddf {continue ;};_ffcf ,_ddf :=_ac .GetName (_dbba .Get ("\u0054\u0079\u0070\u0065"));if !_ddf {continue ;};switch _ffcf .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_dbegb ._gbe =_dbba ;_dggfc =true ;};};if _dggfc {break ;};};if !_dggfc {return _dbegb ;
};_fdbd ,_eacb :=_ac .GetDict (_dbegb ._gbe .Get ("\u0050\u0061\u0067e\u0073"));if !_eacb {return _dbegb ;};_dbegb ._decg =_fdbd ;_fdea ,_eacb :=_ac .GetArray (_fdbd .Get ("\u004b\u0069\u0064\u0073"));if !_eacb {return _dbegb ;};for _ ,_eab :=range _fdea .Elements (){_eag ,_feae :=_ac .GetIndirect (_eab );
if !_feae {break ;};_dbegb ._bagg =append (_dbegb ._bagg ,_eag );};return _dbegb ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
CleanUnusedResources bool ;};func _faca (_bade []_ac .PdfObject ,_ddcg map[_ac .PdfObject ]_ac .PdfObject ){if len (_ddcg )==0{return ;};for _fgf ,_bdec :=range _bade {if _eea ,_geg :=_ddcg [_bdec ];_geg {_bade [_fgf ]=_eea ;continue ;};_ddcg [_bdec ]=_bdec ;
switch _daca :=_bdec .(type ){case *_ac .PdfObjectArray :_fafd :=make ([]_ac .PdfObject ,_daca .Len ());copy (_fafd ,_daca .Elements ());_faca (_fafd ,_ddcg );for _aef ,_gaacf :=range _fafd {_daca .Set (_aef ,_gaacf );};case *_ac .PdfObjectStreams :_faca (_daca .Elements (),_ddcg );
case *_ac .PdfObjectStream :_edda :=[]_ac .PdfObject {_daca .PdfObjectDictionary };_faca (_edda ,_ddcg );_daca .PdfObjectDictionary =_edda [0].(*_ac .PdfObjectDictionary );case *_ac .PdfObjectDictionary :_cedg :=_daca .Keys ();_cdgd :=make ([]_ac .PdfObject ,len (_cedg ));
for _fggc ,_cdgeg :=range _cedg {_cdgd [_fggc ]=_daca .Get (_cdgeg );};_faca (_cdgd ,_ddcg );for _gbgf ,_afba :=range _cedg {_daca .Set (_afba ,_cdgd [_gbgf ]);};case *_ac .PdfIndirectObject :_gfag :=[]_ac .PdfObject {_daca .PdfObject };_faca (_gfag ,_ddcg );
_daca .PdfObject =_gfag [0];};};};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fa *Chain )Optimize (objects []_ac .PdfObject )(_de []_ac .PdfObject ,_ff error ){_db :=objects ;for _ ,_fc :=range _fa ._bd {_cc ,_ecc :=_fc .Optimize (_db );if _ecc !=nil {_a .Log .Debug ("\u0045\u0052\u0052OR\u0020\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u002b\u0076",_ecc );
continue ;};_db =_cc ;};return _db ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_cbd *CleanFonts )Optimize (objects []_ac .PdfObject )(_egc []_ac .PdfObject ,_edac error ){var _cdg map[*_ac .PdfObjectStream ]struct{};if _cbd .Subset {var _abg error ;_cdg ,_abg =_fff (objects );if _abg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0073u\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u003a \u0025\u0076",_abg );
return nil ,_abg ;};};for _ ,_dee :=range objects {_ede ,_bee :=_ac .GetStream (_dee );if !_bee {continue ;};if _ ,_bfd :=_cdg [_ede ];_bfd {continue ;};_eggf ,_gdb :=_ac .NewEncoderFromStream (_ede );if _gdb !=nil {_a .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_gdb );
continue ;};_aggc ,_gdb :=_eggf .DecodeStream (_ede );if _gdb !=nil {_a .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_gdb );
continue ;};if len (_aggc )< 4{continue ;};_gbce :=string (_aggc [:4]);if _gbce =="\u004f\u0054\u0054\u004f"{continue ;};if _gbce !="\u0000\u0001\u0000\u0000"&&_gbce !="\u0074\u0072\u0075\u0065"{continue ;};_cda ,_gdb :=_bb .Parse (_cb .NewReader (_aggc ));
if _gdb !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_gdb );continue ;};_gdb =_cda .Optimize ();
if _gdb !=nil {_a .Log .Debug ("\u0045\u0052RO\u0052\u0020\u004fp\u0074\u0069\u006d\u0069zin\u0067 f\u006f\u006e\u0074\u003a\u0020\u0025\u0076 -\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067",_gdb );continue ;};var _fdf _cb .Buffer ;_gdb =_cda .Write (&_fdf );
if _gdb !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_gdb );continue ;};if _fdf .Len ()> len (_aggc ){_a .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_ecb ,_gdb :=_ac .MakeStream (_fdf .Bytes (),_ac .NewFlateEncoder ());if _gdb !=nil {continue ;};*_ede =*_ecb ;_ede .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ac .MakeInteger (int64 (_fdf .Len ())));};return objects ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fbea *ObjectStreams )Optimize (objects []_ac .PdfObject )(_ead []_ac .PdfObject ,_egccg error ){_fbcc :=&_ac .PdfObjectStreams {};_fdfg :=make ([]_ac .PdfObject ,0,len (objects ));for _ ,_gage :=range objects {if _gaf ,_adc :=_gage .(*_ac .PdfIndirectObject );
_adc &&_gaf .GenerationNumber ==0{_fbcc .Append (_gage );}else {_fdfg =append (_fdfg ,_gage );};};if _fbcc .Len ()==0{return _fdfg ,nil ;};_ead =make ([]_ac .PdfObject ,0,len (_fdfg )+_fbcc .Len ()+1);if _fbcc .Len ()> 1{_ead =append (_ead ,_fbcc );};_ead =append (_ead ,_fbcc .Elements ()...);
_ead =append (_ead ,_fdfg ...);return _ead ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fdc *CombineIdenticalIndirectObjects )Optimize (objects []_ac .PdfObject )(_caeg []_ac .PdfObject ,_ddad error ){_agdc (objects );_bacg :=make (map[_ac .PdfObject ]_ac .PdfObject );_cggf :=make (map[_ac .PdfObject ]struct{});_cfgd :=make (map[string ][]*_ac .PdfIndirectObject );
for _ ,_gaac :=range objects {_gfbf ,_gge :=_gaac .(*_ac .PdfIndirectObject );if !_gge {continue ;};if _ggba ,_acd :=_gfbf .PdfObject .(*_ac .PdfObjectDictionary );_acd {if _afcb ,_ggd :=_ggba .Get ("\u0054\u0079\u0070\u0065").(*_ac .PdfObjectName );_ggd &&*_afcb =="\u0050\u0061\u0067\u0065"{continue ;
};if _fffa :=_ggba .Keys ();len (_fffa )==0{continue ;};_ggbg :=_c .New ();_ggbg .Write ([]byte (_ggba .WriteString ()));_acee :=string (_ggbg .Sum (nil ));_cfgd [_acee ]=append (_cfgd [_acee ],_gfbf );};};for _ ,_gddd :=range _cfgd {if len (_gddd )< 2{continue ;
};_afga :=_gddd [0];for _cfe :=1;_cfe < len (_gddd );_cfe ++{_fbf :=_gddd [_cfe ];_bacg [_fbf ]=_afga ;_cggf [_fbf ]=struct{}{};};};_caeg =make ([]_ac .PdfObject ,0,len (objects )-len (_cggf ));for _ ,_cfaa :=range objects {if _ ,_gaae :=_cggf [_cfaa ];
_gaae {continue ;};_caeg =append (_caeg ,_cfaa );};_faca (_caeg ,_bacg );return _caeg ,nil ;};func _egfd (_gca string ,_aca []string )bool {for _ ,_gbafd :=range _aca {if _gca ==_gbafd {return true ;};};return false ;};func _gf (_bdb *_ec .ContentStreamOperations )*_ec .ContentStreamOperations {if _bdb ==nil {return nil ;
};_gb :=_ec .ContentStreamOperations {};for _ ,_ge :=range *_bdb {switch _ge .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;case "\u0054\u006d":if len (_ge .Params )==6{if _da ,_fg :=_ac .GetNumbersAsFloat (_ge .Params );
_fg ==nil {if _da [0]==1&&_da [1]==0&&_da [2]==0&&_da [3]==1{_ge =&_ec .ContentStreamOperation {Params :[]_ac .PdfObject {_ge .Params [4],_ge .Params [5]},Operand :"\u0054\u0064"};};};};};_gb =append (_gb ,_ge );};return &_gb ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_acc *ImagePPI )Optimize (objects []_ac .PdfObject )(_agdb []_ac .PdfObject ,_acdd error ){if _acc .ImageUpperPPI <=0{return objects ,nil ;};_dccb :=_aded (objects );if len (_dccb )==0{return objects ,nil ;};_cdge :=make (map[_ac .PdfObject ]struct{});
for _ ,_bbfe :=range _dccb {_bdeg :=_bbfe .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b");_cdge [_bdeg ]=struct{}{};};_ffbb :=make (map[*_ac .PdfObjectStream ]*imageInfo );for _ ,_bbgb :=range _dccb {_ffbb [_bbgb .Stream ]=_bbgb ;};var _bdca *_ac .PdfObjectDictionary ;
for _ ,_bed :=range objects {if _ffbg ,_bbbe :=_ac .GetDict (_bed );_bdca ==nil &&_bbbe {if _dbb ,_ceb :=_ac .GetName (_ffbg .Get ("\u0054\u0079\u0070\u0065"));_ceb &&*_dbb =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_bdca =_ffbg ;};};};if _bdca ==nil {return objects ,nil ;
};_eba ,_dgb :=_ac .GetDict (_bdca .Get ("\u0050\u0061\u0067e\u0073"));if !_dgb {return objects ,nil ;};_adea ,_dca :=_ac .GetArray (_eba .Get ("\u004b\u0069\u0064\u0073"));if !_dca {return objects ,nil ;};for _ ,_aed :=range _adea .Elements (){_afa :=make (map[string ]*imageInfo );
_fcaef ,_ebdbb :=_ac .GetDict (_aed );if !_ebdbb {continue ;};_bgcf ,_ :=_efee (_fcaef .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if len (_bgcf )==0{continue ;};_dfbff ,_ggda :=_ac .GetDict (_fcaef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_ggda {continue ;};_ddbc ,_gaee :=_bf .NewPdfPageResourcesFromDict (_dfbff );if _gaee !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020-\u0020\u0069\u0067\u006e\u006fr\u0069\u006eg\u003a\u0020\u0025\u0076",_gaee );
continue ;};_acac ,_cbef :=_ac .GetDict (_dfbff .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_cbef {continue ;};_bdbfd :=_acac .Keys ();for _ ,_fecf :=range _bdbfd {if _cbgf ,_afae :=_ac .GetStream (_acac .Get (_fecf ));_afae {if _eacd ,_ddbe :=_ffbb [_cbgf ];
_ddbe {_afa [string (_fecf )]=_eacd ;};};};_eaee :=_ec .NewContentStreamParser (_bgcf );_cfad ,_gaee :=_eaee .Parse ();if _gaee !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_gaee );continue ;};_afgg :=_ec .NewContentStreamProcessor (*_cfad );
_afgg .AddHandler (_ec .HandlerConditionEnumAllOperands ,"",func (_cadf *_ec .ContentStreamOperation ,_aedf _ec .GraphicsState ,_bdd *_bf .PdfPageResources )error {switch _cadf .Operand {case "\u0044\u006f":if len (_cadf .Params )!=1{_a .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020w\u0069\u0074\u0068\u0020\u006c\u0065\u006e\u0028\u0070\u0061ra\u006d\u0073\u0029 \u0021=\u0020\u0031");
return nil ;};_ebee ,_bbe :=_ac .GetName (_cadf .Params [0]);if !_bbe {_a .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u006e\u0020\u004e\u0061\u006d\u0065\u0020p\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072");
return nil ;};if _ggea ,_fdcc :=_afa [string (*_ebee )];_fdcc {_ebab :=_aedf .CTM .ScalingFactorX ();_dad :=_aedf .CTM .ScalingFactorY ();_gdba ,_bdbc :=_ebab /72.0,_dad /72.0;_gcdc ,_caed :=float64 (_ggea .Width )/_gdba ,float64 (_ggea .Height )/_bdbc ;
if _gdba ==0||_bdbc ==0{_gcdc =72.0;_caed =72.0;};_ggea .PPI =_e .Max (_ggea .PPI ,_gcdc );_ggea .PPI =_e .Max (_ggea .PPI ,_caed );};};return nil ;});_gaee =_afgg .Process (_ddbc );if _gaee !=nil {_a .Log .Debug ("E\u0052\u0052\u004f\u0052 p\u0072o\u0063\u0065\u0073\u0073\u0069n\u0067\u003a\u0020\u0025\u002b\u0076",_gaee );
continue ;};};for _ ,_dfd :=range _dccb {if _ ,_ccab :=_cdge [_dfd .Stream ];_ccab {continue ;};if _dfd .PPI <=_acc .ImageUpperPPI {continue ;};_fcbg ,_gec :=_bf .NewXObjectImageFromStream (_dfd .Stream );if _gec !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_gec );
continue ;};var _gcf imageModifications ;_gcf .Scale =_acc .ImageUpperPPI /_dfd .PPI ;if _dfd .BitsPerComponent ==1&&_dfd .ColorComponents ==1{_faf :=_e .Round (_dfd .PPI /_acc .ImageUpperPPI );_gede :=_f .NextPowerOf2 (uint (_faf ));if _f .InDelta (float64 (_gede ),1/_gcf .Scale ,0.3){_gcf .Scale =float64 (1)/float64 (_gede );
};if _ ,_ccdc :=_fcbg .Filter .(*_ac .JBIG2Encoder );!_ccdc {_gcf .Encoding =_ac .NewJBIG2Encoder ();};};if _gec =_caa (_fcbg ,_gcf );_gec !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_gec );
continue ;};_gcf .Encoding =nil ;if _bfbf ,_ecgg :=_ac .GetStream (_dfd .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b"));_ecgg {_bdbb ,_acga :=_bf .NewXObjectImageFromStream (_bfbf );if _acga !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_acga );
continue ;};if _acga =_caa (_bdbb ,_gcf );_acga !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_acga );continue ;};};};return objects ,nil ;};func _dge (_gc *_ac .PdfObjectStream ,_dba []rune ,_cde []_bb .GlyphIndex )error {_gc ,_gda :=_ac .GetStream (_gc );
if !_gda {_a .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ca .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ggc ,_ffe :=_ac .DecodeStream (_gc );if _ffe !=nil {_a .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ffe );
return _ffe ;};_cfgc ,_ffe :=_bb .Parse (_cb .NewReader (_ggc ));if _ffe !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gc .Stream ));
return _ffe ;};_aag :=_cde ;if len (_dba )> 0{_egf :=_cfgc .LookupRunes (_dba );_aag =append (_aag ,_egf ...);};_cfgc ,_ffe =_cfgc .SubsetKeepIndices (_aag );if _ffe !=nil {_a .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_ffe );
return _ffe ;};var _dc _cb .Buffer ;_ffe =_cfgc .Write (&_dc );if _ffe !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ffe );return _ffe ;};if _dc .Len ()> len (_ggc ){_a .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_eb ,_ffe :=_ac .MakeStream (_dc .Bytes (),_ac .NewFlateEncoder ());if _ffe !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ffe );return _ffe ;
};*_gc =*_eb ;_gc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ac .MakeInteger (int64 (_dc .Len ())));return nil ;};type imageModifications struct{Scale float64 ;Encoding _ac .StreamEncoder ;};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// GetOptimizers gets the list of optimizers in chain `c`.
func (_dbd *Chain )GetOptimizers ()[]_bf .Optimizer {return _dbd ._bd };

// Optimize optimizes PDF objects to decrease PDF size.
func (_bfe *CombineDuplicateDirectObjects )Optimize (objects []_ac .PdfObject )(_ada []_ac .PdfObject ,_cae error ){_agdc (objects );_gbaff :=make (map[string ][]*_ac .PdfObjectDictionary );var _ace func (_fdac *_ac .PdfObjectDictionary );_ace =func (_ecga *_ac .PdfObjectDictionary ){for _ ,_ffc :=range _ecga .Keys (){_fgef :=_ecga .Get (_ffc );
if _baee ,_abc :=_fgef .(*_ac .PdfObjectDictionary );_abc {if _adf :=_baee .Keys ();len (_adf )==0{continue ;};_abce :=_c .New ();_abce .Write ([]byte (_baee .WriteString ()));_cac :=string (_abce .Sum (nil ));_gbaff [_cac ]=append (_gbaff [_cac ],_baee );
_ace (_baee );};};};for _ ,_fedc :=range objects {_age ,_bgg :=_fedc .(*_ac .PdfIndirectObject );if !_bgg {continue ;};if _cgac ,_egacd :=_age .PdfObject .(*_ac .PdfObjectDictionary );_egacd {_ace (_cgac );};};_fgac :=make ([]_ac .PdfObject ,0,len (_gbaff ));
_cbf :=make (map[_ac .PdfObject ]_ac .PdfObject );for _ ,_bac :=range _gbaff {if len (_bac )< 2{continue ;};_gbfcf :=_ac .MakeDict ();_gbfcf .Merge (_bac [0]);_cbfg :=_ac .MakeIndirectObject (_gbfcf );_fgac =append (_fgac ,_cbfg );for _cdc :=0;_cdc < len (_bac );
_cdc ++{_cgca :=_bac [_cdc ];_cbf [_cgca ]=_cbfg ;};};_ada =make ([]_ac .PdfObject ,len (objects ));copy (_ada ,objects );_ada =append (_fgac ,_ada ...);_faca (_ada ,_cbf );return _ada ,nil ;};func _gaab (_dac _ac .PdfObject ,_bdcg map[_ac .PdfObject ]struct{})error {if _fbbb ,_gfg :=_dac .(*_ac .PdfIndirectObject );
_gfg {_bdcg [_dac ]=struct{}{};_gde :=_gaab (_fbbb .PdfObject ,_bdcg );if _gde !=nil {return _gde ;};return nil ;};if _fcab ,_bff :=_dac .(*_ac .PdfObjectStream );_bff {_bdcg [_fcab ]=struct{}{};_gag :=_gaab (_fcab .PdfObjectDictionary ,_bdcg );if _gag !=nil {return _gag ;
};return nil ;};if _fee ,_eec :=_dac .(*_ac .PdfObjectDictionary );_eec {for _ ,_cccg :=range _fee .Keys (){_eecc :=_fee .Get (_cccg );_ =_eecc ;if _ddg ,_fed :=_eecc .(*_ac .PdfObjectReference );_fed {_eecc =_ddg .Resolve ();_fee .Set (_cccg ,_eecc );
};if _cccg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bae :=_gaab (_eecc ,_bdcg );_bae !=nil {return _bae ;};};};return nil ;};if _edg ,_bea :=_dac .(*_ac .PdfObjectArray );_bea {if _edg ==nil {return _ca .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fbe ,_fdfe :=range _edg .Elements (){if _ddga ,_dfg :=_fdfe .(*_ac .PdfObjectReference );_dfg {_fdfe =_ddga .Resolve ();_edg .Set (_fbe ,_fdfe );};if _dfga :=_gaab (_fdfe ,_bdcg );_dfga !=nil {return _dfga ;};};return nil ;};return nil ;};func _bba (_fgd _ac .PdfObject )(string ,error ){_ecaf :=_ac .TraceToDirectObject (_fgd );
switch _gcd :=_ecaf .(type ){case *_ac .PdfObjectString :return _gcd .Str (),nil ;case *_ac .PdfObjectStream :_dga ,_fdd :=_ac .DecodeStream (_gcd );if _fdd !=nil {return "",_fdd ;};return string (_dga ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ecaf );
};func _fcd (_bdgc []*_ac .PdfIndirectObject )map[string ][]string {_gee :=map[string ][]string {};for _ ,_gefe :=range _bdgc {_ceg ,_fea :=_ac .GetDict (_gefe .PdfObject );if !_fea {continue ;};_eae :=_ceg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_gdbc :=_ac .TraceToDirectObject (_eae );_ebe :="";if _eddb ,_ggfdb :=_gdbc .(*_ac .PdfObjectArray );_ggfdb {var _gbaf []string ;for _ ,_ddae :=range _eddb .Elements (){_ddd ,_eac :=_bba (_ddae );if _eac !=nil {continue ;};_gbaf =append (_gbaf ,_ddd );
};_ebe =_ae .Join (_gbaf ,"\u0020");};if _ccdb ,_fbb :=_gdbc .(*_ac .PdfObjectStream );_fbb {_cce ,_gae :=_ac .DecodeStream (_ccdb );if _gae !=nil {continue ;};_ebe =string (_cce );};_gfd :=_ec .NewContentStreamParser (_ebe );_dggf ,_afdb :=_gfd .Parse ();
if _afdb !=nil {continue ;};for _ ,_gffa :=range *_dggf {_deaae :=_gffa .Operand ;_cff :=_gffa .Params ;switch _deaae {case "\u0044\u006f":_afec :=_cff [0].String ();if _ ,_dfbf :=_gee ["\u0058O\u0062\u006a\u0065\u0063\u0074"];!_dfbf {_gee ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=[]string {_afec };
}else {_gee ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=append (_gee ["\u0058O\u0062\u006a\u0065\u0063\u0074"],_afec );};case "\u0054\u0066":_acf :=_cff [0].String ();if _ ,_aebg :=_gee ["\u0046\u006f\u006e\u0074"];!_aebg {_gee ["\u0046\u006f\u006e\u0074"]=[]string {_acf };
}else {_gee ["\u0046\u006f\u006e\u0074"]=append (_gee ["\u0046\u006f\u006e\u0074"],_acf );};case "\u0067\u0073":_cdea :=_cff [0].String ();if _ ,_bbc :=_gee ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];!_bbc {_gee ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=[]string {_cdea };
}else {_gee ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=append (_gee ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"],_cdea );};};};};return _gee ;};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_ecbb :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_ecbb .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_ecbb .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_fbcg :=new (ImagePPI );
_fbcg .ImageUpperPPI =options .ImageUpperPPI ;_ecbb .Append (_fbcg );};if options .ImageQuality > 0{_feba :=new (Image );_feba .ImageQuality =options .ImageQuality ;_ecbb .Append (_feba );};if options .CombineDuplicateDirectObjects {_ecbb .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_ecbb .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_ecbb .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_ecbb .Append (new (ObjectStreams ));
};if options .CompressStreams {_ecbb .Append (new (CompressStreams ));};if options .CleanUnusedResources {_ecbb .Append (new (CleanUnusedResources ));};return _ecbb ;};