//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_b "bytes";_ad "crypto/md5";_ce "errors";_cf "fmt";_a "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/contentstream";_cc "github.com/unidoc/unipdf/v3/core";_cb "github.com/unidoc/unipdf/v3/extractor";_ade "github.com/unidoc/unipdf/v3/internal/imageutil";
_f "github.com/unidoc/unipdf/v3/internal/textencoding";_adc "github.com/unidoc/unipdf/v3/model";_ef "github.com/unidoc/unitype";_c "golang.org/x/image/draw";_cd "math";_ea "strings";);func _gdc (_dcg _cc .PdfObject ,_bfcc map[_cc .PdfObject ]struct{})error {if _efdf ,_dfd :=_dcg .(*_cc .PdfIndirectObject );
_dfd {_bfcc [_dcg ]=struct{}{};_befa :=_gdc (_efdf .PdfObject ,_bfcc );if _befa !=nil {return _befa ;};return nil ;};if _ecg ,_bba :=_dcg .(*_cc .PdfObjectStream );_bba {_bfcc [_ecg ]=struct{}{};_bgb :=_gdc (_ecg .PdfObjectDictionary ,_bfcc );if _bgb !=nil {return _bgb ;
};return nil ;};if _gfa ,_aaag :=_dcg .(*_cc .PdfObjectDictionary );_aaag {for _ ,_fbe :=range _gfa .Keys (){_cbf :=_gfa .Get (_fbe );_ =_cbf ;if _aaf ,_aagf :=_cbf .(*_cc .PdfObjectReference );_aagf {_cbf =_aaf .Resolve ();_gfa .Set (_fbe ,_cbf );};if _fbe !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gfcc :=_gdc (_cbf ,_bfcc );
_gfcc !=nil {return _gfcc ;};};};return nil ;};if _dbc ,_ggc :=_dcg .(*_cc .PdfObjectArray );_ggc {if _dbc ==nil {return _ce .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _fgee ,_eedd :=range _dbc .Elements (){if _ffba ,_ege :=_eedd .(*_cc .PdfObjectReference );
_ege {_eedd =_ffba .Resolve ();_dbc .Set (_fgee ,_eedd );};if _eeae :=_gdc (_eedd ,_bfcc );_eeae !=nil {return _eeae ;};};return nil ;};return nil ;};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};func _fga (_abb []*_cc .PdfIndirectObject )map[string ][]string {_aebe :=map[string ][]string {};for _ ,_feba :=range _abb {_fafg ,_egd :=_cc .GetDict (_feba .PdfObject );if !_egd {continue ;};_gfc :=_fafg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_abe :=_cc .TraceToDirectObject (_gfc );_fbbc :="";if _bec ,_bbgc :=_abe .(*_cc .PdfObjectArray );_bbgc {var _fdc []string ;for _ ,_fff :=range _bec .Elements (){_ffgf ,_ccef :=_acaa (_fff );if _ccef !=nil {continue ;};_fdc =append (_fdc ,_ffgf );};_fbbc =_ea .Join (_fdc ,"\u0020");
};if _fbdf ,_bee :=_abe .(*_cc .PdfObjectStream );_bee {_cdd ,_edaf :=_cc .DecodeStream (_fbdf );if _edaf !=nil {continue ;};_fbbc =string (_cdd );};_cae :=_g .NewContentStreamParser (_fbbc );_cea ,_gebb :=_cae .Parse ();if _gebb !=nil {continue ;};for _ ,_fabgc :=range *_cea {_adee :=_fabgc .Operand ;
_bgff :=_fabgc .Params ;switch _adee {case "\u0044\u006f":_ggba :=_bgff [0].String ();if _ ,_fgf :=_aebe ["\u0058O\u0062\u006a\u0065\u0063\u0074"];!_fgf {_aebe ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=[]string {_ggba };}else {_aebe ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=append (_aebe ["\u0058O\u0062\u006a\u0065\u0063\u0074"],_ggba );
};case "\u0054\u0066":_fefe :=_bgff [0].String ();if _ ,_bcb :=_aebe ["\u0046\u006f\u006e\u0074"];!_bcb {_aebe ["\u0046\u006f\u006e\u0074"]=[]string {_fefe };}else {_aebe ["\u0046\u006f\u006e\u0074"]=append (_aebe ["\u0046\u006f\u006e\u0074"],_fefe );};
case "\u0067\u0073":_dea :=_bgff [0].String ();if _ ,_gebe :=_aebe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];!_gebe {_aebe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=[]string {_dea };}else {_aebe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=append (_aebe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"],_dea );
};};};};return _aebe ;};type imageInfo struct{BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_cc .PdfObjectStream ;PPI float64 ;};

// GetOptimizers gets the list of optimizers in chain `c`.
func (_bg *Chain )GetOptimizers ()[]_adc .Optimizer {return _bg ._af };func _ac (_cfg *_g .ContentStreamOperations )*_g .ContentStreamOperations {if _cfg ==nil {return nil ;};_ca :=_g .ContentStreamOperations {};for _ ,_ag :=range *_cfg {switch _ag .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;
case "\u0054\u006d":if len (_ag .Params )==6{if _cg ,_bb :=_cc .GetNumbersAsFloat (_ag .Params );_bb ==nil {if _cg [0]==1&&_cg [1]==0&&_cg [2]==0&&_cg [3]==1{_ag =&_g .ContentStreamOperation {Params :[]_cc .PdfObject {_ag .Params [4],_ag .Params [5]},Operand :"\u0054\u0064"};
};};};};_ca =append (_ca ,_ag );};return &_ca ;};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};func _bgcb (_bgfc []_cc .PdfObject )[]*imageInfo {_bcf :=_cc .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dff :=make (map[*_cc .PdfObjectStream ]struct{});var _fbdg []*imageInfo ;for _ ,_ccbg :=range _bgfc {_daef ,_gffa :=_cc .GetStream (_ccbg );
if !_gffa {continue ;};if _ ,_gcgf :=_dff [_daef ];_gcgf {continue ;};_dff [_daef ]=struct{}{};_gfbc :=_daef .PdfObjectDictionary .Get (_bcf );_bcee ,_gffa :=_cc .GetName (_gfbc );if !_gffa ||string (*_bcee )!="\u0049\u006d\u0061g\u0065"{continue ;};_abcd :=&imageInfo {Stream :_daef ,BitsPerComponent :8};
if _baed ,_bgbg :=_cc .GetIntVal (_daef .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bgbg {_abcd .BitsPerComponent =_baed ;};if _aggd ,_adgg :=_cc .GetIntVal (_daef .Get ("\u0057\u0069\u0064t\u0068"));
_adgg {_abcd .Width =_aggd ;};if _bfed ,_fdcf :=_cc .GetIntVal (_daef .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_fdcf {_abcd .Height =_bfed ;};_dcee ,_abda :=_adc .NewPdfColorspaceFromPdfObject (_daef .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
if _abda !=nil {_a .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abda );continue ;};if _dcee ==nil {_gca ,_bbbd :=_cc .GetName (_daef .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if _bbbd {switch _gca .String (){case "\u0043\u0043\u0049\u0054\u0054\u0046\u0061\u0078\u0044e\u0063\u006f\u0064\u0065","J\u0042\u0049\u0047\u0032\u0044\u0065\u0063\u006f\u0064\u0065":_dcee =_adc .NewPdfColorspaceDeviceGray ();
_abcd .BitsPerComponent =1;};};};switch _adggd :=_dcee .(type ){case *_adc .PdfColorspaceDeviceRGB :_abcd .ColorComponents =3;case *_adc .PdfColorspaceDeviceGray :_abcd .ColorComponents =1;default:_a .Log .Debug ("\u004f\u0070\u0074\u0069\u006d\u0069\u007aa\u0074\u0069\u006fn\u0020\u0069\u0073 \u006e\u006ft\u0020\u0073\u0075\u0070\u0070\u006fr\u0074ed\u0020\u0066\u006f\u0072\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0054\u0020\u002d\u0020\u0073\u006b\u0069\u0070",_adggd );
continue ;};_fbdg =append (_fbdg ,_abcd );};return _fbdg ;};func _egb (_gef []_cc .PdfObject )(map[_cc .PdfObject ]struct{},error ){_gce :=_abdg (_gef );_fbb :=_gce ._aaagb ;_gfd :=make (map[_cc .PdfObject ]struct{});_efd :=_fga (_fbb );for _ ,_cdg :=range _fbb {_abf ,_ceb :=_cc .GetDict (_cdg .PdfObject );
if !_ceb {continue ;};_bfc ,_ceb :=_cc .GetDict (_abf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_ceb {continue ;};_ebgf :=_efd ["\u0058O\u0062\u006a\u0065\u0063\u0074"];_deb ,_ceb :=_cc .GetDict (_bfc .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
if _ceb {_bbg :=_bae (_deb );for _ ,_eda :=range _bbg {if _dggg (_eda ,_ebgf ){continue ;};_adg :=*_cc .MakeName (_eda );_eeg :=_deb .Get (_adg );_gfd [_eeg ]=struct{}{};_deb .Remove (_adg );_dcfa :=_gdc (_eeg ,_gfd );if _dcfa !=nil {_a .Log .Debug ("\u0066\u0061\u0069\u006ce\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065r\u0073e\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0025\u0076",_eeg );
};};};_dagb ,_ceb :=_cc .GetDict (_bfc .Get ("\u0046\u006f\u006e\u0074"));_cec :=_efd ["\u0046\u006f\u006e\u0074"];if _ceb {_bbf :=_bae (_dagb );for _ ,_afaf :=range _bbf {if _dggg (_afaf ,_cec ){continue ;};_ebe :=*_cc .MakeName (_afaf );_bgc :=_dagb .Get (_ebe );
_gfd [_bgc ]=struct{}{};_dagb .Remove (_ebe );_bad :=_gdc (_bgc ,_gfd );if _bad !=nil {_a .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_bgc );
};};};_daf ,_ceb :=_cc .GetDict (_bfc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"));if _ceb {_afb :=_bae (_daf );_abfe :=_efd ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];for _ ,_bfag :=range _afb {if _dggg (_bfag ,_abfe ){continue ;};_cfb :=*_cc .MakeName (_bfag );
_daaa :=_daf .Get (_cfb );_gfd [_daaa ]=struct{}{};_daf .Remove (_cfb );_fabg :=_gdc (_daaa ,_gfd );if _fabg !=nil {_a .Log .Debug ("\u0066\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_daaa );
};};};};return _gfd ,nil ;};func _fegd (_ccba *_adc .Image ,_eded float64 )(*_adc .Image ,error ){_fdae ,_gegd :=_ccba .ToGoImage ();if _gegd !=nil {return nil ,_gegd ;};var _dfea _ade .Image ;_decd ,_debc :=_fdae .(*_ade .Monochrome );if _debc {if _gegd =_decd .ResolveDecode ();
_gegd !=nil {return nil ,_gegd ;};_dfea ,_gegd =_decd .Scale (_eded );if _gegd !=nil {return nil ,_gegd ;};}else {_abdf :=int (_cd .RoundToEven (float64 (_ccba .Width )*_eded ));_bff :=int (_cd .RoundToEven (float64 (_ccba .Height )*_eded ));_dfea ,_gegd =_ade .NewImage (_abdf ,_bff ,int (_ccba .BitsPerComponent ),_ccba .ColorComponents ,nil ,nil ,nil );
if _gegd !=nil {return nil ,_gegd ;};_c .CatmullRom .Scale (_dfea ,_dfea .Bounds (),_fdae ,_fdae .Bounds (),_c .Over ,&_c .Options {});};_ecdg :=_dfea .Base ();_fafge :=&_adc .Image {Width :int64 (_ecdg .Width ),Height :int64 (_ecdg .Height ),BitsPerComponent :int64 (_ecdg .BitsPerComponent ),ColorComponents :_ecdg .ColorComponents ,Data :_ecdg .Data };
_fafge .SetDecode (_ecdg .Decode );_fafge .SetAlpha (_ecdg .Alpha );return _fafge ,nil ;};func _acaa (_fcc _cc .PdfObject )(string ,error ){_fbdd :=_cc .TraceToDirectObject (_fcc );switch _agcg :=_fbdd .(type ){case *_cc .PdfObjectString :return _agcg .Str (),nil ;
case *_cc .PdfObjectStream :_aga ,_ga :=_cc .DecodeStream (_agcg );if _ga !=nil {return "",_ga ;};return string (_aga ),nil ;};return "",_cf .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fbdd );
};

// Optimize optimizes PDF objects to decrease PDF size.
func (_cag *CombineDuplicateDirectObjects )Optimize (objects []_cc .PdfObject )(_ageg []_cc .PdfObject ,_fgg error ){_deg (objects );_fcff :=make (map[string ][]*_cc .PdfObjectDictionary );var _eeb func (_gag *_cc .PdfObjectDictionary );_eeb =func (_fca *_cc .PdfObjectDictionary ){for _ ,_ecd :=range _fca .Keys (){_aeea :=_fca .Get (_ecd );
if _cac ,_fgc :=_aeea .(*_cc .PdfObjectDictionary );_fgc {if _ffe :=_cac .Keys ();len (_ffe )==0{continue ;};_adccg :=_ad .New ();_adccg .Write ([]byte (_cac .WriteString ()));_ffef :=string (_adccg .Sum (nil ));_fcff [_ffef ]=append (_fcff [_ffef ],_cac );
_eeb (_cac );};};};for _ ,_cba :=range objects {_gdbe ,_adeef :=_cba .(*_cc .PdfIndirectObject );if !_adeef {continue ;};if _afac ,_fba :=_gdbe .PdfObject .(*_cc .PdfObjectDictionary );_fba {_eeb (_afac );};};_eegg :=make ([]_cc .PdfObject ,0,len (_fcff ));
_ced :=make (map[_cc .PdfObject ]_cc .PdfObject );for _ ,_gfdc :=range _fcff {if len (_gfdc )< 2{continue ;};_ede :=_cc .MakeDict ();_ede .Merge (_gfdc [0]);_gdd :=_cc .MakeIndirectObject (_ede );_eegg =append (_eegg ,_gdd );for _gfg :=0;_gfg < len (_gfdc );
_gfg ++{_fgcd :=_gfdc [_gfg ];_ced [_fgcd ]=_gdd ;};};_ageg =make ([]_cc .PdfObject ,len (objects ));copy (_ageg ,objects );_ageg =append (_eegg ,_ageg ...);_fbdc (_ageg ,_ced );return _ageg ,nil ;};func _fbdc (_bgca []_cc .PdfObject ,_abee map[_cc .PdfObject ]_cc .PdfObject ){if len (_abee )==0{return ;
};for _eefg ,_daec :=range _bgca {if _adce ,_bgfbb :=_abee [_daec ];_bgfbb {_bgca [_eefg ]=_adce ;continue ;};_abee [_daec ]=_daec ;switch _febag :=_daec .(type ){case *_cc .PdfObjectArray :_fgdf :=make ([]_cc .PdfObject ,_febag .Len ());copy (_fgdf ,_febag .Elements ());
_fbdc (_fgdf ,_abee );for _bag ,_cff :=range _fgdf {_febag .Set (_bag ,_cff );};case *_cc .PdfObjectStreams :_fbdc (_febag .Elements (),_abee );case *_cc .PdfObjectStream :_agdg :=[]_cc .PdfObject {_febag .PdfObjectDictionary };_fbdc (_agdg ,_abee );_febag .PdfObjectDictionary =_agdg [0].(*_cc .PdfObjectDictionary );
case *_cc .PdfObjectDictionary :_fbeg :=_febag .Keys ();_dfac :=make ([]_cc .PdfObject ,len (_fbeg ));for _decf ,_fgdg :=range _fbeg {_dfac [_decf ]=_febag .Get (_fgdg );};_fbdc (_dfac ,_abee );for _ecgg ,_ccaa :=range _fbeg {_febag .Set (_ccaa ,_dfac [_ecgg ]);
};case *_cc .PdfIndirectObject :_ebbfe :=[]_cc .PdfObject {_febag .PdfObject };_fbdc (_ebbfe ,_abee );_febag .PdfObject =_ebbfe [0];};};};

// CleanUnusedResources represents an optimizer used to clean unused resources.
type CleanUnusedResources struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_aa *Chain )Optimize (objects []_cc .PdfObject )(_aaa []_cc .PdfObject ,_ec error ){_d :=objects ;for _ ,_ed :=range _aa ._af {_fde ,_ee :=_ed .Optimize (_d );if _ee !=nil {_a .Log .Debug ("\u0045\u0052\u0052OR\u0020\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u002b\u0076",_ee );
continue ;};_d =_fde ;};return _d ,nil ;};type content struct{_fab string ;_bca *_adc .PdfPageResources ;};func _ebb (_eabg _cc .PdfObject )[]content {if _eabg ==nil {return nil ;};_afa ,_aef :=_cc .GetArray (_eabg );if !_aef {_a .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return nil ;};var _bfad []content ;for _ ,_gff :=range _afa .Elements (){_cce ,_feg :=_cc .GetDict (_gff );if !_feg {_a .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");
continue ;};_afg ,_feg :=_cc .GetDict (_cce .Get ("\u0041\u0050"));if !_feg {_a .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_ggb :=_cc .TraceToDirectObject (_afg .Get ("\u004e"));
if _ggb ==nil {_a .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};var _dda *_cc .PdfObjectStream ;switch _cegd :=_ggb .(type ){case *_cc .PdfObjectDictionary :_bbc ,_eba :=_cc .GetName (_cce .Get ("\u0041\u0053"));
if !_eba {_a .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_dda ,_eba =_cc .GetStream (_cegd .Get (*_bbc ));if !_eba {_a .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");
continue ;};case *_cc .PdfObjectStream :_dda =_cegd ;};if _dda ==nil {_a .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};_fdf ,_ega :=_adc .NewXObjectFormFromStream (_dda );if _ega !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_ega );
continue ;};_bd ,_ega :=_fdf .GetContentStream ();if _ega !=nil {_a .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_ega );continue ;};_bfad =append (_bfad ,content {_fab :string (_bd ),_bca :_fdf .Resources });
};return _bfad ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_aefbb *ImagePPI )Optimize (objects []_cc .PdfObject )(_bgfb []_cc .PdfObject ,_eagb error ){if _aefbb .ImageUpperPPI <=0{return objects ,nil ;};_cgef :=_bgcb (objects );if len (_cgef )==0{return objects ,nil ;};_egbf :=make (map[_cc .PdfObject ]struct{});
for _ ,_abgf :=range _cgef {_bgg :=_abgf .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b");_egbf [_bgg ]=struct{}{};};_fffd :=make (map[*_cc .PdfObjectStream ]*imageInfo );for _ ,_gedd :=range _cgef {_fffd [_gedd .Stream ]=_gedd ;};var _bda *_cc .PdfObjectDictionary ;
for _ ,_ggdca :=range objects {if _gfdbe ,_cefd :=_cc .GetDict (_ggdca );_bda ==nil &&_cefd {if _gbb ,_ddf :=_cc .GetName (_gfdbe .Get ("\u0054\u0079\u0070\u0065"));_ddf &&*_gbb =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_bda =_gfdbe ;};};};if _bda ==nil {return objects ,nil ;
};_bedb ,_egc :=_cc .GetDict (_bda .Get ("\u0050\u0061\u0067e\u0073"));if !_egc {return objects ,nil ;};_bgd ,_dfb :=_cc .GetArray (_bedb .Get ("\u004b\u0069\u0064\u0073"));if !_dfb {return objects ,nil ;};for _ ,_dbcc :=range _bgd .Elements (){_fafa :=make (map[string ]*imageInfo );
_aece ,_fabe :=_cc .GetDict (_dbcc );if !_fabe {continue ;};_gcb ,_ :=_bgbf (_aece .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if len (_gcb )==0{continue ;};_bcge ,_afdfa :=_cc .GetDict (_aece .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_afdfa {continue ;};_bfecc ,_aeeg :=_adc .NewPdfPageResourcesFromDict (_bcge );if _aeeg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020-\u0020\u0069\u0067\u006e\u006fr\u0069\u006eg\u003a\u0020\u0025\u0076",_aeeg );
continue ;};_fafb ,_affe :=_cc .GetDict (_bcge .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_affe {continue ;};_ffgfg :=_fafb .Keys ();for _ ,_fbbd :=range _ffgfg {if _ceeb ,_ggcg :=_cc .GetStream (_fafb .Get (_fbbd ));_ggcg {if _gagd ,_bcc :=_fffd [_ceeb ];
_bcc {_fafa [string (_fbbd )]=_gagd ;};};};_ddc :=_g .NewContentStreamParser (_gcb );_dcda ,_aeeg :=_ddc .Parse ();if _aeeg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_aeeg );continue ;};_ggbfe :=_g .NewContentStreamProcessor (*_dcda );
_ggbfe .AddHandler (_g .HandlerConditionEnumAllOperands ,"",func (_caed *_g .ContentStreamOperation ,_baec _g .GraphicsState ,_geag *_adc .PdfPageResources )error {switch _caed .Operand {case "\u0044\u006f":if len (_caed .Params )!=1{_a .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020w\u0069\u0074\u0068\u0020\u006c\u0065\u006e\u0028\u0070\u0061ra\u006d\u0073\u0029 \u0021=\u0020\u0031");
return nil ;};_baf ,_beeg :=_cc .GetName (_caed .Params [0]);if !_beeg {_a .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u006e\u0020\u004e\u0061\u006d\u0065\u0020p\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072");
return nil ;};if _cbb ,_beaf :=_fafa [string (*_baf )];_beaf {_fea :=_baec .CTM .ScalingFactorX ();_acag :=_baec .CTM .ScalingFactorY ();_bafa ,_fcd :=_fea /72.0,_acag /72.0;_cece ,_bbbc :=float64 (_cbb .Width )/_bafa ,float64 (_cbb .Height )/_fcd ;if _bafa ==0||_fcd ==0{_cece =72.0;
_bbbc =72.0;};_cbb .PPI =_cd .Max (_cbb .PPI ,_cece );_cbb .PPI =_cd .Max (_cbb .PPI ,_bbbc );};};return nil ;});_aeeg =_ggbfe .Process (_bfecc );if _aeeg !=nil {_a .Log .Debug ("E\u0052\u0052\u004f\u0052 p\u0072o\u0063\u0065\u0073\u0073\u0069n\u0067\u003a\u0020\u0025\u002b\u0076",_aeeg );
continue ;};};for _ ,_bgbd :=range _cgef {if _ ,_fcde :=_egbf [_bgbd .Stream ];_fcde {continue ;};if _bgbd .PPI <=_aefbb .ImageUpperPPI {continue ;};_dgag ,_ddbc :=_adc .NewXObjectImageFromStream (_bgbd .Stream );if _ddbc !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_ddbc );
continue ;};var _abbc imageModifications ;_abbc .Scale =_aefbb .ImageUpperPPI /_bgbd .PPI ;if _bgbd .BitsPerComponent ==1&&_bgbd .ColorComponents ==1{_gfgg :=_cd .Round (_bgbd .PPI /_aefbb .ImageUpperPPI );_fefg :=_ade .NextPowerOf2 (uint (_gfgg ));if _ade .InDelta (float64 (_fefg ),1/_abbc .Scale ,0.3){_abbc .Scale =float64 (1)/float64 (_fefg );
};if _ ,_dgb :=_dgag .Filter .(*_cc .JBIG2Encoder );!_dgb {_abbc .Encoding =_cc .NewJBIG2Encoder ();};};if _ddbc =_cbd (_dgag ,_abbc );_ddbc !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_ddbc );
continue ;};_abbc .Encoding =nil ;if _cbc ,_acgc :=_cc .GetStream (_bgbd .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b"));_acgc {_gga ,_eff :=_adc .NewXObjectImageFromStream (_cbc );if _eff !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_eff );
continue ;};if _eff =_cbd (_gga ,_abbc );_eff !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_eff );continue ;};};};return objects ,nil ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};

// Optimize implements Optimizer interface.
func (_aaae *CleanUnusedResources )Optimize (objects []_cc .PdfObject )(_ace []_cc .PdfObject ,_dgg error ){_fbd ,_dgg :=_egb (objects );if _dgg !=nil {return nil ,_dgg ;};_gfb :=[]_cc .PdfObject {};for _ ,_aec :=range objects {_ ,_bdd :=_fbd [_aec ];if _bdd {continue ;
};_gfb =append (_gfb ,_aec );};return _gfb ,nil ;};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_fdd :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_fdd .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_fdd .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_eage :=new (ImagePPI );
_eage .ImageUpperPPI =options .ImageUpperPPI ;_fdd .Append (_eage );};if options .ImageQuality > 0{_cbae :=new (Image );_cbae .ImageQuality =options .ImageQuality ;_fdd .Append (_cbae );};if options .CombineDuplicateDirectObjects {_fdd .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_fdd .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_fdd .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_fdd .Append (new (ObjectStreams ));
};if options .CompressStreams {_fdd .Append (new (CompressStreams ));};if options .CleanUnusedResources {_fdd .Append (new (CleanUnusedResources ));};return _fdd ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_deed *CleanFonts )Optimize (objects []_cc .PdfObject )(_dcfe []_cc .PdfObject ,_eagg error ){var _eab map[*_cc .PdfObjectStream ]struct{};if _deed .Subset {var _dbgg error ;_eab ,_dbgg =_eag (objects );if _dbgg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0073u\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u003a \u0025\u0076",_dbgg );
return nil ,_dbgg ;};};for _ ,_ecc :=range objects {_cbgb ,_cef :=_cc .GetStream (_ecc );if !_cef {continue ;};if _ ,_cfa :=_eab [_cbgb ];_cfa {continue ;};_bfe ,_gfe :=_cc .NewEncoderFromStream (_cbgb );if _gfe !=nil {_a .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_gfe );
continue ;};_fcf ,_gfe :=_bfe .DecodeStream (_cbgb );if _gfe !=nil {_a .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_gfe );
continue ;};if len (_fcf )< 4{continue ;};_dagf :=string (_fcf [:4]);if _dagf =="\u004f\u0054\u0054\u004f"{continue ;};if _dagf !="\u0000\u0001\u0000\u0000"&&_dagf !="\u0074\u0072\u0075\u0065"{continue ;};_agd ,_gfe :=_ef .Parse (_b .NewReader (_fcf ));
if _gfe !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_gfe );continue ;};_gfe =_agd .Optimize ();
if _gfe !=nil {_a .Log .Debug ("\u0045\u0052RO\u0052\u0020\u004fp\u0074\u0069\u006d\u0069zin\u0067 f\u006f\u006e\u0074\u003a\u0020\u0025\u0076 -\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067",_gfe );continue ;};var _cge _b .Buffer ;_gfe =_agd .Write (&_cge );
if _gfe !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_gfe );continue ;};if _cge .Len ()> len (_fcf ){_a .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_aea ,_gfe :=_cc .MakeStream (_cge .Bytes (),_cc .NewFlateEncoder ());if _gfe !=nil {continue ;};*_cbgb =*_aea ;_cbgb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cc .MakeInteger (int64 (_cge .Len ())));};return objects ,nil ;};func _bae (_fbba *_cc .PdfObjectDictionary )[]string {_gfcg :=[]string {};
for _ ,_gcfc :=range _fbba .Keys (){_gfcg =append (_gfcg ,_gcfc .String ());};return _gfcg ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_edg *CleanContentstream )Optimize (objects []_cc .PdfObject )(_gdg []_cc .PdfObject ,_cga error ){_agc :=map[*_cc .PdfObjectStream ]struct{}{};var _dcd []*_cc .PdfObjectStream ;_adcc :=func (_ff *_cc .PdfObjectStream ){if _ ,_da :=_agc [_ff ];!_da {_agc [_ff ]=struct{}{};
_dcd =append (_dcd ,_ff );};};_dd :=map[_cc .PdfObject ]bool {};_ab :=map[_cc .PdfObject ]bool {};for _ ,_eee :=range objects {switch _gb :=_eee .(type ){case *_cc .PdfIndirectObject :switch _eg :=_gb .PdfObject .(type ){case *_cc .PdfObjectDictionary :if _fa ,_adec :=_cc .GetName (_eg .Get ("\u0054\u0079\u0070\u0065"));
!_adec ||_fa .String ()!="\u0050\u0061\u0067\u0065"{continue ;};if _faa ,_eb :=_cc .GetStream (_eg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_eb {_adcc (_faa );}else if _ccb ,_age :=_cc .GetArray (_eg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_age {var _fdec []*_cc .PdfObjectStream ;for _ ,_bcg :=range _ccb .Elements (){if _ebg ,_ae :=_cc .GetStream (_bcg );_ae {_fdec =append (_fdec ,_ebg );};};if len (_fdec )> 0{var _eed _b .Buffer ;for _ ,_fc :=range _fdec {if _ffb ,_cgg :=_cc .DecodeStream (_fc );
_cgg ==nil {_eed .Write (_ffb );};_dd [_fc ]=true ;};_cee ,_gg :=_cc .MakeStream (_eed .Bytes (),_cc .NewFlateEncoder ());if _gg !=nil {return nil ,_gg ;};_ab [_cee ]=true ;_eg .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cee );_adcc (_cee );
};};};case *_cc .PdfObjectStream :if _bce ,_afe :=_cc .GetName (_gb .Get ("\u0054\u0079\u0070\u0065"));!_afe ||_bce .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _afee ,_bf :=_cc .GetName (_gb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_bf ||_afee .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_adcc (_gb );};};for _ ,_efe :=range _dcd {_cga =_bc (_efe );if _cga !=nil {return nil ,_cga ;};};_gdg =nil ;for _ ,_geg :=range objects {if _dd [_geg ]{continue ;};_gdg =append (_gdg ,_geg );
};for _de :=range _ab {_gdg =append (_gdg ,_de );};return _gdg ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bga *CompressStreams )Optimize (objects []_cc .PdfObject )(_abbe []_cc .PdfObject ,_dcgd error ){_abbe =make ([]_cc .PdfObject ,len (objects ));copy (_abbe ,objects );for _ ,_agag :=range objects {_eaad ,_fgdd :=_cc .GetStream (_agag );if !_fgdd {continue ;
};if _gac :=_eaad .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_gac !=nil {if _ ,_edf :=_cc .GetName (_gac );_edf {continue ;};if _ggf ,_dga :=_cc .GetArray (_gac );_dga &&_ggf .Len ()> 0{continue ;};};_cecg :=_cc .NewFlateEncoder ();var _ebbf []byte ;
_ebbf ,_dcgd =_cecg .EncodeBytes (_eaad .Stream );if _dcgd !=nil {return _abbe ,_dcgd ;};_dfe :=_cecg .MakeStreamDict ();if len (_ebbf )+len (_dfe .WriteString ())< len (_eaad .Stream ){_eaad .Stream =_ebbf ;_eaad .PdfObjectDictionary .Merge (_dfe );_eaad .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_eaad .Stream ))));
};};return _abbe ,nil ;};type imageModifications struct{Scale float64 ;Encoding _cc .StreamEncoder ;};func _bgbf (_gafg _cc .PdfObject )(_gdea string ,_egcg []_cc .PdfObject ){var _dbge _b .Buffer ;switch _gcgg :=_gafg .(type ){case *_cc .PdfIndirectObject :_egcg =append (_egcg ,_gcgg );
_gafg =_gcgg .PdfObject ;};switch _ggde :=_gafg .(type ){case *_cc .PdfObjectStream :if _bfb ,_baab :=_cc .DecodeStream (_ggde );_baab ==nil {_dbge .Write (_bfb );_egcg =append (_egcg ,_ggde );};case *_cc .PdfObjectArray :for _ ,_cdbe :=range _ggde .Elements (){switch _fdeb :=_cdbe .(type ){case *_cc .PdfObjectStream :if _adcb ,_agcf :=_cc .DecodeStream (_fdeb );
_agcf ==nil {_dbge .Write (_adcb );_egcg =append (_egcg ,_fdeb );};};};};return _dbge .String (),_egcg ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_efef *Image )Optimize (objects []_cc .PdfObject )(_dcbd []_cc .PdfObject ,_aab error ){if _efef .ImageQuality <=0{return objects ,nil ;};_baee :=_bgcb (objects );if len (_baee )==0{return objects ,nil ;};_cegb :=make (map[_cc .PdfObject ]_cc .PdfObject );
_cgc :=make (map[_cc .PdfObject ]struct{});for _ ,_eeea :=range _baee {_gfdb :=_eeea .Stream .Get ("\u0053\u004d\u0061s\u006b");_cgc [_gfdb ]=struct{}{};};for _febf ,_cfbc :=range _baee {_abcdd :=_cfbc .Stream ;if _ ,_bbgf :=_cgc [_abcdd ];_bbgf {continue ;
};_cca ,_dcga :=_adc .NewXObjectImageFromStream (_abcdd );if _dcga !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_dcga );continue ;};switch _cca .Filter .(type ){case *_cc .JBIG2Encoder :continue ;case *_cc .CCITTFaxEncoder :continue ;
};_dagd ,_dcga :=_cca .ToImage ();if _dcga !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_dcga );continue ;};_fbf :=_cc .NewDCTEncoder ();_fbf .ColorComponents =_dagd .ColorComponents ;_fbf .Quality =_efef .ImageQuality ;
_fbf .BitsPerComponent =_cfbc .BitsPerComponent ;_fbf .Width =_cfbc .Width ;_fbf .Height =_cfbc .Height ;_ddag ,_dcga :=_fbf .EncodeBytes (_dagd .Data );if _dcga !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_dcga );
continue ;};var _eef _cc .StreamEncoder ;_eef =_fbf ;{_aaga :=_cc .NewFlateEncoder ();_fgde :=_cc .NewMultiEncoder ();_fgde .AddEncoder (_aaga );_fgde .AddEncoder (_fbf );_gbg ,_ffc :=_fgde .EncodeBytes (_dagd .Data );if _ffc !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_ffc );
continue ;};if len (_gbg )< len (_ddag ){_a .Log .Trace ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_ddag ),len (_gbg ),len (_abcdd .Stream ));
_ddag =_gbg ;_eef =_fgde ;};};_aefb :=len (_abcdd .Stream );if _aefb < len (_ddag ){continue ;};_gbc :=&_cc .PdfObjectStream {Stream :_ddag };_gbc .PdfObjectReference =_abcdd .PdfObjectReference ;_gbc .PdfObjectDictionary =_cc .MakeDict ();_gbc .Merge (_abcdd .PdfObjectDictionary );
_gbc .Merge (_eef .MakeStreamDict ());_gbc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_ddag ))));_cegb [_abcdd ]=_gbc ;_baee [_febf ].Stream =_gbc ;};_dcbd =make ([]_cc .PdfObject ,len (objects ));copy (_dcbd ,objects );
_fbdc (_dcbd ,_cegb );return _dcbd ,nil ;};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};func _bc (_ccc *_cc .PdfObjectStream )error {_gd ,_dc :=_cc .DecodeStream (_ccc );if _dc !=nil {return _dc ;};_acg :=_g .NewContentStreamParser (string (_gd ));_ba ,_dc :=_acg .Parse ();if _dc !=nil {return _dc ;};_ba =_ac (_ba );
_df :=_ba .Bytes ();if len (_df )>=len (_gd ){return nil ;};_ge ,_dc :=_cc .MakeStream (_ba .Bytes (),_cc .NewFlateEncoder ());if _dc !=nil {return _dc ;};_ccc .Stream =_ge .Stream ;_ccc .Merge (_ge .PdfObjectDictionary );return nil ;};func _eag (_dbf []_cc .PdfObject )(_dba map[*_cc .PdfObjectStream ]struct{},_be error ){_dba =map[*_cc .PdfObjectStream ]struct{}{};
_fce :=map[*_adc .PdfFont ]struct{}{};_bab :=_abdg (_dbf );for _ ,_geb :=range _bab ._aaagb {_dag ,_ddb :=_cc .GetDict (_geb .PdfObject );if !_ddb {continue ;};_ecf ,_ddb :=_cc .GetDict (_dag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_ddb {continue ;
};_egf ,_ :=_bgbf (_dag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_bef ,_cdb :=_adc .NewPdfPageResourcesFromDict (_ecf );if _cdb !=nil {return nil ,_cdb ;};_faf :=[]content {{_fab :_egf ,_bca :_bef }};_cfc :=_ebb (_dag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cfc !=nil {_faf =append (_faf ,_cfc ...);};for _ ,_ged :=range _faf {_ceg ,_dde :=_cb .NewFromContents (_ged ._fab ,_ged ._bca );if _dde !=nil {return nil ,_dde ;};_dg ,_ ,_ ,_dde :=_ceg .ExtractPageText ();if _dde !=nil {return nil ,_dde ;};for _ ,_cbg :=range _dg .Marks ().Elements (){if _cbg .Font ==nil {continue ;
};if _ ,_fb :=_fce [_cbg .Font ];!_fb {_fce [_cbg .Font ]=struct{}{};};};};};_dbg :=map[*_cc .PdfObjectStream ][]*_adc .PdfFont {};for _bed :=range _fce {_gc :=_bed .FontDescriptor ();if _gc ==nil ||_gc .FontFile2 ==nil {continue ;};_dca ,_fg :=_cc .GetStream (_gc .FontFile2 );
if !_fg {continue ;};_dbg [_dca ]=append (_dbg [_dca ],_bed );};for _feb :=range _dbg {var _gcf []rune ;var _eeag []_ef .GlyphIndex ;for _ ,_fge :=range _dbg [_feb ]{switch _aag :=_fge .Encoder ().(type ){case *_f .IdentityEncoder :_caa :=_aag .RegisteredRunes ();
_dcf :=make ([]_ef .GlyphIndex ,len (_caa ));for _dfa ,_aca :=range _caa {_dcf [_dfa ]=_ef .GlyphIndex (_aca );};_eeag =append (_eeag ,_dcf ...);case *_f .TrueTypeFontEncoder :_dee :=_aag .RegisteredRunes ();_gcf =append (_gcf ,_dee ...);case _f .SimpleEncoder :_aeb :=_aag .Charcodes ();
for _ ,_gf :=range _aeb {_ebgc ,_dac :=_aag .CharcodeToRune (_gf );if !_dac {_a .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_gf );
continue ;};_gcf =append (_gcf ,_ebgc );};};};_be =_cgae (_feb ,_gcf ,_eeag );if _be !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_be );
return nil ,_be ;};_dba [_feb ]=struct{}{};};return _dba ,nil ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
CleanUnusedResources bool ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fgd *CombineIdenticalIndirectObjects )Optimize (objects []_cc .PdfObject )(_gde []_cc .PdfObject ,_bfge error ){_deg (objects );_dfg :=make (map[_cc .PdfObject ]_cc .PdfObject );_ggdc :=make (map[_cc .PdfObject ]struct{});_dgc :=make (map[string ][]*_cc .PdfIndirectObject );
for _ ,_debd :=range objects {_bdg ,_dge :=_debd .(*_cc .PdfIndirectObject );if !_dge {continue ;};if _fabc ,_gfccf :=_bdg .PdfObject .(*_cc .PdfObjectDictionary );_gfccf {if _bea ,_bdgb :=_fabc .Get ("\u0054\u0079\u0070\u0065").(*_cc .PdfObjectName );
_bdgb &&*_bea =="\u0050\u0061\u0067\u0065"{continue ;};if _ccf :=_fabc .Keys ();len (_ccf )==0{continue ;};_gaf :=_ad .New ();_gaf .Write ([]byte (_fabc .WriteString ()));_gfdce :=string (_gaf .Sum (nil ));_dgc [_gfdce ]=append (_dgc [_gfdce ],_bdg );};
};for _ ,_agca :=range _dgc {if len (_agca )< 2{continue ;};_bfec :=_agca [0];for _eeefb :=1;_eeefb < len (_agca );_eeefb ++{_ecca :=_agca [_eeefb ];_dfg [_ecca ]=_bfec ;_ggdc [_ecca ]=struct{}{};};};_gde =make ([]_cc .PdfObject ,0,len (objects )-len (_ggdc ));
for _ ,_gea :=range objects {if _ ,_beb :=_ggdc [_gea ];_beb {continue ;};_gde =append (_gde ,_gea );};_fbdc (_gde ,_dfg );return _gde ,nil ;};func _dggg (_aff string ,_gcg []string )bool {for _ ,_gec :=range _gcg {if _aff ==_gec {return true ;};};return false ;
};func _cgae (_abaa *_cc .PdfObjectStream ,_aebd []rune ,_ddea []_ef .GlyphIndex )error {_abaa ,_ddgg :=_cc .GetStream (_abaa );if !_ddgg {_a .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ce .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_aagc ,_fbg :=_cc .DecodeStream (_abaa );if _fbg !=nil {_a .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fbg );
return _fbg ;};_dae ,_fbg :=_ef .Parse (_b .NewReader (_aagc ));if _fbg !=nil {_a .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_abaa .Stream ));
return _fbg ;};_eaa :=_ddea ;if len (_aebd )> 0{_eec :=_dae .LookupRunes (_aebd );_eaa =append (_eaa ,_eec ...);};_dae ,_fbg =_dae .SubsetKeepIndices (_eaa );if _fbg !=nil {_a .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_fbg );
return _fbg ;};var _ddef _b .Buffer ;_fbg =_dae .Write (&_ddef );if _fbg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fbg );return _fbg ;};if _ddef .Len ()> len (_aagc ){_a .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_bcgd ,_fbg :=_cc .MakeStream (_ddef .Bytes (),_cc .NewFlateEncoder ());if _fbg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fbg );return _fbg ;
};*_abaa =*_bcgd ;_abaa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cc .MakeInteger (int64 (_ddef .Len ())));return nil ;};

// Append appends optimizers to the chain.
func (_fd *Chain )Append (optimizers ..._adc .Optimizer ){_fd ._af =append (_fd ._af ,optimizers ...)};

// Optimize optimizes PDF objects to decrease PDF size.
func (_eaaa *ObjectStreams )Optimize (objects []_cc .PdfObject )(_efg []_cc .PdfObject ,_gfbe error ){_gfdd :=&_cc .PdfObjectStreams {};_ada :=make ([]_cc .PdfObject ,0,len (objects ));for _ ,_ffff :=range objects {if _deef ,_dgd :=_ffff .(*_cc .PdfIndirectObject );
_dgd &&_deef .GenerationNumber ==0{_gfdd .Append (_ffff );}else {_ada =append (_ada ,_ffff );};};if _gfdd .Len ()==0{return _ada ,nil ;};_efg =make ([]_cc .PdfObject ,0,len (_ada )+_gfdd .Len ()+1);if _gfdd .Len ()> 1{_efg =append (_efg ,_gfdd );};_efg =append (_efg ,_gfdd .Elements ()...);
_efg =append (_efg ,_ada ...);return _efg ,nil ;};type objectStructure struct{_egfa *_cc .PdfObjectDictionary ;_fbad *_cc .PdfObjectDictionary ;_aaagb []*_cc .PdfIndirectObject ;};func _deg (_baeee []_cc .PdfObject ){for _fbeb ,_ecbf :=range _baeee {switch _egef :=_ecbf .(type ){case *_cc .PdfIndirectObject :_egef .ObjectNumber =int64 (_fbeb +1);
_egef .GenerationNumber =0;case *_cc .PdfObjectStream :_egef .ObjectNumber =int64 (_fbeb +1);_egef .GenerationNumber =0;case *_cc .PdfObjectStreams :_egef .ObjectNumber =int64 (_fbeb +1);_egef .GenerationNumber =0;};};};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_eeef *CombineDuplicateStreams )Optimize (objects []_cc .PdfObject )(_cggf []_cc .PdfObject ,_acb error ){_dce :=make (map[_cc .PdfObject ]_cc .PdfObject );_abc :=make (map[_cc .PdfObject ]struct{});_fbbb :=make (map[string ][]*_cc .PdfObjectStream );
for _ ,_ecb :=range objects {if _abbg ,_afdf :=_ecb .(*_cc .PdfObjectStream );_afdf {_cfe :=_ad .New ();_cfe .Write (_abbg .Stream );_cfe .Write ([]byte (_abbg .PdfObjectDictionary .WriteString ()));_ebc :=string (_cfe .Sum (nil ));_fbbb [_ebc ]=append (_fbbb [_ebc ],_abbg );
};};for _ ,_dbdc :=range _fbbb {if len (_dbdc )< 2{continue ;};_fdbb :=_dbdc [0];for _fgfe :=1;_fgfe < len (_dbdc );_fgfe ++{_ece :=_dbdc [_fgfe ];_dce [_ece ]=_fdbb ;_abc [_ece ]=struct{}{};};};_cggf =make ([]_cc .PdfObject ,0,len (objects )-len (_abc ));
for _ ,_fgaa :=range objects {if _ ,_gfcgg :=_abc [_fgaa ];_gfcgg {continue ;};_cggf =append (_cggf ,_fgaa );};_fbdc (_cggf ,_dce );return _cggf ,nil ;};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_af []_adc .Optimizer };func _cbd (_ccbc *_adc .XObjectImage ,_edc imageModifications )error {_ccd ,_gdga :=_ccbc .ToImage ();if _gdga !=nil {return _gdga ;};if _edc .Scale !=0{_ccd ,_gdga =_fegd (_ccd ,_edc .Scale );if _gdga !=nil {return _gdga ;
};};if _edc .Encoding !=nil {_ccbc .Filter =_edc .Encoding ;};_ccbc .Decode =nil ;switch _edb :=_ccbc .Filter .(type ){case *_cc .FlateEncoder :if _edb .Predictor !=1&&_edb .Predictor !=11{_edb .Predictor =1;};};if _gdga =_ccbc .SetImage (_ccd ,nil );_gdga !=nil {_a .Log .Debug ("\u0045\u0072\u0072or\u0020\u0073\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0076",_gdga );
return _gdga ;};_ccbc .ToPdfObject ();return nil ;};func _abdg (_dgbb []_cc .PdfObject )objectStructure {_gcd :=objectStructure {};_bfga :=false ;for _ ,_bceg :=range _dgbb {switch _eac :=_bceg .(type ){case *_cc .PdfIndirectObject :_ebae ,_efdb :=_cc .GetDict (_eac );
if !_efdb {continue ;};_egfg ,_efdb :=_cc .GetName (_ebae .Get ("\u0054\u0079\u0070\u0065"));if !_efdb {continue ;};switch _egfg .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_gcd ._egfa =_ebae ;_bfga =true ;};};if _bfga {break ;};};if !_bfga {return _gcd ;
};_cebb ,_gfcd :=_cc .GetDict (_gcd ._egfa .Get ("\u0050\u0061\u0067e\u0073"));if !_gfcd {return _gcd ;};_gcd ._fbad =_cebb ;_fcfc ,_gfcd :=_cc .GetArray (_cebb .Get ("\u004b\u0069\u0064\u0073"));if !_gfcd {return _gcd ;};for _ ,_ggg :=range _fcfc .Elements (){_dada ,_afga :=_cc .GetIndirect (_ggg );
if !_afga {break ;};_gcd ._aaagb =append (_gcd ._aaagb ,_dada );};return _gcd ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};