//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_gc "bytes";_f "crypto/md5";_ca "errors";_d "fmt";_g "github.com/unidoc/unipdf/v3/common";_cc "github.com/unidoc/unipdf/v3/contentstream";_b "github.com/unidoc/unipdf/v3/core";_gb "github.com/unidoc/unipdf/v3/extractor";_cf "github.com/unidoc/unipdf/v3/internal/imageutil";
_ac "github.com/unidoc/unipdf/v3/internal/textencoding";_acf "github.com/unidoc/unipdf/v3/model";_aca "github.com/unidoc/unitype";_e "golang.org/x/image/draw";_ge "math";_a "strings";);

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};func _ged (_af []_b .PdfObject )(_aaa map[*_b .PdfObjectStream ]struct{},_gda error ){_aaa =map[*_b .PdfObjectStream ]struct{}{};_ddg :=map[*_acf .PdfFont ]struct{}{};_dcb :=_ccde (_af );for _ ,_ef :=range _dcb ._ggdgb {_ag ,_acc :=_b .GetDict (_ef .PdfObject );
if !_acc {continue ;};_fddf ,_acc :=_b .GetDict (_ag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_acc {continue ;};_gba ,_ :=_degc (_ag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_bdd ,_cfa :=_acf .NewPdfPageResourcesFromDict (_fddf );
if _cfa !=nil {return nil ,_cfa ;};_eee :=[]content {{_adb :_gba ,_fag :_bdd }};_fe :=_dgdd (_ag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _fe !=nil {_eee =append (_eee ,_fe ...);};for _ ,_dceb :=range _eee {_dbf ,_ecfc :=_gb .NewFromContents (_dceb ._adb ,_dceb ._fag );
if _ecfc !=nil {return nil ,_ecfc ;};_bea ,_ ,_ ,_ecfc :=_dbf .ExtractPageText ();if _ecfc !=nil {return nil ,_ecfc ;};for _ ,_gce :=range _bea .Marks ().Elements (){if _gce .Font ==nil {continue ;};if _ ,_ga :=_ddg [_gce .Font ];!_ga {_ddg [_gce .Font ]=struct{}{};
};};};};_bfb :=map[*_b .PdfObjectStream ][]*_acf .PdfFont {};for _beac :=range _ddg {_gdc :=_beac .FontDescriptor ();if _gdc ==nil ||_gdc .FontFile2 ==nil {continue ;};_fce ,_gga :=_b .GetStream (_gdc .FontFile2 );if !_gga {continue ;};_bfb [_fce ]=append (_bfb [_fce ],_beac );
};for _ecc :=range _bfb {var _cca []rune ;var _fcea []_aca .GlyphIndex ;for _ ,_gbbb :=range _bfb [_ecc ]{switch _gaf :=_gbbb .Encoder ().(type ){case *_ac .IdentityEncoder :_gccf :=_gaf .RegisteredRunes ();_fdb :=make ([]_aca .GlyphIndex ,len (_gccf ));
for _dgd ,_acd :=range _gccf {_fdb [_dgd ]=_aca .GlyphIndex (_acd );};_fcea =append (_fcea ,_fdb ...);case *_ac .TrueTypeFontEncoder :_df :=_gaf .RegisteredRunes ();_cca =append (_cca ,_df ...);case _ac .SimpleEncoder :_cac :=_gaf .Charcodes ();for _ ,_acb :=range _cac {_fbedb ,_geae :=_gaf .CharcodeToRune (_acb );
if !_geae {_g .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_acb );continue ;};_cca =append (_cca ,_fbedb );};};};_gda =_bc (_ecc ,_cca ,_fcea );
if _gda !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gda );return nil ,_gda ;};_aaa [_ecc ]=struct{}{};
};return _aaa ,nil ;};func _fgdc (_fagdf []_b .PdfObject ){for _cab ,_ffdb :=range _fagdf {switch _aab :=_ffdb .(type ){case *_b .PdfIndirectObject :_aab .ObjectNumber =int64 (_cab +1);_aab .GenerationNumber =0;case *_b .PdfObjectStream :_aab .ObjectNumber =int64 (_cab +1);
_aab .GenerationNumber =0;case *_b .PdfObjectStreams :_aab .ObjectNumber =int64 (_cab +1);_aab .GenerationNumber =0;};};};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bccd *CombineIdenticalIndirectObjects )Optimize (objects []_b .PdfObject )(_eaed []_b .PdfObject ,_bbef error ){_fgdc (objects );_gcfd :=make (map[_b .PdfObject ]_b .PdfObject );_bgg :=make (map[_b .PdfObject ]struct{});_fabb :=make (map[string ][]*_b .PdfIndirectObject );
for _ ,_bafa :=range objects {_fagb ,_dade :=_bafa .(*_b .PdfIndirectObject );if !_dade {continue ;};if _ddb ,_gbbf :=_fagb .PdfObject .(*_b .PdfObjectDictionary );_gbbf {if _fgag ,_dagc :=_ddb .Get ("\u0054\u0079\u0070\u0065").(*_b .PdfObjectName );_dagc &&*_fgag =="\u0050\u0061\u0067\u0065"{continue ;
};if _bfcf :=_ddb .Keys ();len (_bfcf )==0{continue ;};_bag :=_f .New ();_bag .Write ([]byte (_ddb .WriteString ()));_ccac :=string (_bag .Sum (nil ));_fabb [_ccac ]=append (_fabb [_ccac ],_fagb );};};for _ ,_gff :=range _fabb {if len (_gff )< 2{continue ;
};_aga :=_gff [0];for _fefg :=1;_fefg < len (_gff );_fefg ++{_abgb :=_gff [_fefg ];_gcfd [_abgb ]=_aga ;_bgg [_abgb ]=struct{}{};};};_eaed =make ([]_b .PdfObject ,0,len (objects )-len (_bgg ));for _ ,_dfff :=range objects {if _ ,_dcbefe :=_bgg [_dfff ];
_dcbefe {continue ;};_eaed =append (_eaed ,_dfff );};_aged (_eaed ,_gcfd );return _eaed ,nil ;};func _bbd (_cba []_b .PdfObject )[]*imageInfo {_afc :=_b .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ceg :=make (map[*_b .PdfObjectStream ]struct{});
var _aggc []*imageInfo ;for _ ,_agce :=range _cba {_fgcdf ,_fba :=_b .GetStream (_agce );if !_fba {continue ;};if _ ,_afb :=_ceg [_fgcdf ];_afb {continue ;};_ceg [_fgcdf ]=struct{}{};_daf :=_fgcdf .PdfObjectDictionary .Get (_afc );_dcf ,_fba :=_b .GetName (_daf );
if !_fba ||string (*_dcf )!="\u0049\u006d\u0061g\u0065"{continue ;};_beb :=&imageInfo {Stream :_fgcdf ,BitsPerComponent :8};if _gca ,_gddb :=_b .GetIntVal (_fgcdf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));
_gddb {_beb .BitsPerComponent =_gca ;};if _ece ,_ddgf :=_b .GetIntVal (_fgcdf .Get ("\u0057\u0069\u0064t\u0068"));_ddgf {_beb .Width =_ece ;};if _eba ,_dabe :=_b .GetIntVal (_fgcdf .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_dabe {_beb .Height =_eba ;
};_aac ,_dffb :=_acf .NewPdfColorspaceFromPdfObject (_fgcdf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));if _dffb !=nil {_g .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dffb );continue ;};if _aac ==nil {_bccc ,_ccaf :=_b .GetName (_fgcdf .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));
if _ccaf {switch _bccc .String (){case "\u0043\u0043\u0049\u0054\u0054\u0046\u0061\u0078\u0044e\u0063\u006f\u0064\u0065","J\u0042\u0049\u0047\u0032\u0044\u0065\u0063\u006f\u0064\u0065":_aac =_acf .NewPdfColorspaceDeviceGray ();_beb .BitsPerComponent =1;
};};};switch _bccde :=_aac .(type ){case *_acf .PdfColorspaceDeviceRGB :_beb .ColorComponents =3;case *_acf .PdfColorspaceDeviceGray :_beb .ColorComponents =1;default:_g .Log .Debug ("\u004f\u0070\u0074\u0069\u006d\u0069\u007aa\u0074\u0069\u006fn\u0020\u0069\u0073 \u006e\u006ft\u0020\u0073\u0075\u0070\u0070\u006fr\u0074ed\u0020\u0066\u006f\u0072\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0054\u0020\u002d\u0020\u0073\u006b\u0069\u0070",_bccde );
continue ;};_aggc =append (_aggc ,_beb );};return _aggc ;};func _cd (_cbc *_b .PdfObjectStream )error {_ecf ,_gee :=_b .DecodeStream (_cbc );if _gee !=nil {return _gee ;};_aad :=_cc .NewContentStreamParser (string (_ecf ));_gbf ,_gee :=_aad .Parse ();if _gee !=nil {return _gee ;
};_gbf =_ff (_gbf );_be :=_gbf .Bytes ();if len (_be )>=len (_ecf ){return nil ;};_eb ,_gee :=_b .MakeStream (_gbf .Bytes (),_b .NewFlateEncoder ());if _gee !=nil {return _gee ;};_cbc .Stream =_eb .Stream ;_cbc .Merge (_eb .PdfObjectDictionary );return nil ;
};func _gcgd (_ade _b .PdfObject ,_bgf map[_b .PdfObject ]struct{})error {if _ccg ,_gcef :=_ade .(*_b .PdfIndirectObject );_gcef {_bgf [_ade ]=struct{}{};_dfd :=_gcgd (_ccg .PdfObject ,_bgf );if _dfd !=nil {return _dfd ;};return nil ;};if _faba ,_ccca :=_ade .(*_b .PdfObjectStream );
_ccca {_bgf [_faba ]=struct{}{};_dff :=_gcgd (_faba .PdfObjectDictionary ,_bgf );if _dff !=nil {return _dff ;};return nil ;};if _edff ,_gfa :=_ade .(*_b .PdfObjectDictionary );_gfa {for _ ,_bce :=range _edff .Keys (){_dcbgd :=_edff .Get (_bce );_ =_dcbgd ;
if _eea ,_gad :=_dcbgd .(*_b .PdfObjectReference );_gad {_dcbgd =_eea .Resolve ();_edff .Set (_bce ,_dcbgd );};if _bce !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bffc :=_gcgd (_dcbgd ,_bgf );_bffc !=nil {return _bffc ;};};};return nil ;};if _abdc ,_bdc :=_ade .(*_b .PdfObjectArray );
_bdc {if _abdc ==nil {return _ca .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _eg ,_fcb :=range _abdc .Elements (){if _dda ,_egf :=_fcb .(*_b .PdfObjectReference );_egf {_fcb =_dda .Resolve ();_abdc .Set (_eg ,_fcb );
};if _fbbc :=_gcgd (_fcb ,_bgf );_fbbc !=nil {return _fbbc ;};};return nil ;};return nil ;};func _aged (_bga []_b .PdfObject ,_bceb map[_b .PdfObject ]_b .PdfObject ){if len (_bceb )==0{return ;};for _gaag ,_ccf :=range _bga {if _fgfb ,_add :=_bceb [_ccf ];
_add {_bga [_gaag ]=_fgfb ;continue ;};_bceb [_ccf ]=_ccf ;switch _fdae :=_ccf .(type ){case *_b .PdfObjectArray :_gage :=make ([]_b .PdfObject ,_fdae .Len ());copy (_gage ,_fdae .Elements ());_aged (_gage ,_bceb );for _egbd ,_fbeb :=range _gage {_fdae .Set (_egbd ,_fbeb );
};case *_b .PdfObjectStreams :_aged (_fdae .Elements (),_bceb );case *_b .PdfObjectStream :_eff :=[]_b .PdfObject {_fdae .PdfObjectDictionary };_aged (_eff ,_bceb );_fdae .PdfObjectDictionary =_eff [0].(*_b .PdfObjectDictionary );case *_b .PdfObjectDictionary :_cda :=_fdae .Keys ();
_dac :=make ([]_b .PdfObject ,len (_cda ));for _gddbb ,_ccdc :=range _cda {_dac [_gddbb ]=_fdae .Get (_ccdc );};_aged (_dac ,_bceb );for _gab ,_fagd :=range _cda {_fdae .Set (_fagd ,_dac [_gab ]);};case *_b .PdfIndirectObject :_cff :=[]_b .PdfObject {_fdae .PdfObject };
_aged (_cff ,_bceb );_fdae .PdfObject =_cff [0];};};};func _eeec (_aaab []*_b .PdfIndirectObject )map[string ][]string {_abag :=map[string ][]string {};for _ ,_feb :=range _aaab {_abb ,_fgfc :=_b .GetDict (_feb .PdfObject );if !_fgfc {continue ;};_bab :=_abb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_gdda :=_b .TraceToDirectObject (_bab );_acdc :="";if _eac ,_gbfg :=_gdda .(*_b .PdfObjectArray );_gbfg {var _ffc []string ;for _ ,_acde :=range _eac .Elements (){_aff ,_gec :=_afg (_acde );if _gec !=nil {continue ;};_ffc =append (_ffc ,_aff );};_acdc =_a .Join (_ffc ,"\u0020");
};if _bde ,_ced :=_gdda .(*_b .PdfObjectStream );_ced {_efgb ,_eeee :=_b .DecodeStream (_bde );if _eeee !=nil {continue ;};_acdc =string (_efgb );};_gcd :=_cc .NewContentStreamParser (_acdc );_cgb ,_eda :=_gcd .Parse ();if _eda !=nil {continue ;};for _ ,_ebg :=range *_cgb {_geee :=_ebg .Operand ;
_dgb :=_ebg .Params ;switch _geee {case "\u0044\u006f":_eae :=_dgb [0].String ();if _ ,_dccf :=_abag ["\u0058O\u0062\u006a\u0065\u0063\u0074"];!_dccf {_abag ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=[]string {_eae };}else {_abag ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=append (_abag ["\u0058O\u0062\u006a\u0065\u0063\u0074"],_eae );
};case "\u0054\u0066":_dba :=_dgb [0].String ();if _ ,_beeg :=_abag ["\u0046\u006f\u006e\u0074"];!_beeg {_abag ["\u0046\u006f\u006e\u0074"]=[]string {_dba };}else {_abag ["\u0046\u006f\u006e\u0074"]=append (_abag ["\u0046\u006f\u006e\u0074"],_dba );};case "\u0067\u0073":_bfe :=_dgb [0].String ();
if _ ,_cedg :=_abag ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];!_cedg {_abag ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=[]string {_bfe };}else {_abag ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=append (_abag ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"],_bfe );
};};};};return _abag ;};

// CleanUnusedResources represents an optimizer used to clean unused resources.
type CleanUnusedResources struct{};

// Append appends optimizers to the chain.
func (_aa *Chain )Append (optimizers ..._acf .Optimizer ){_aa ._bg =append (_aa ._bg ,optimizers ...)};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gbd *CompressStreams )Optimize (objects []_b .PdfObject )(_gcga []_b .PdfObject ,_eafg error ){_gcga =make ([]_b .PdfObject ,len (objects ));copy (_gcga ,objects );for _ ,_cbbb :=range objects {_eccd ,_dgc :=_b .GetStream (_cbbb );if !_dgc {continue ;
};if _aae :=_eccd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_aae !=nil {if _ ,_egc :=_b .GetName (_aae );_egc {continue ;};if _bcgg ,_fdgf :=_b .GetArray (_aae );_fdgf &&_bcgg .Len ()> 0{continue ;};};_efd :=_b .NewFlateEncoder ();var _bafad []byte ;
_bafad ,_eafg =_efd .EncodeBytes (_eccd .Stream );if _eafg !=nil {return _gcga ,_eafg ;};_efgc :=_efd .MakeStreamDict ();if len (_bafad )+len (_efgc .WriteString ())< len (_eccd .Stream ){_eccd .Stream =_bafad ;_eccd .PdfObjectDictionary .Merge (_efgc );
_eccd .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_b .MakeInteger (int64 (len (_eccd .Stream ))));};};return _gcga ,nil ;};type objectStructure struct{_cafd *_b .PdfObjectDictionary ;_acdd *_b .PdfObjectDictionary ;_ggdgb []*_b .PdfIndirectObject ;
};

// Optimize optimizes PDF objects to decrease PDF size.
func (_afcc *ImagePPI )Optimize (objects []_b .PdfObject )(_faa []_b .PdfObject ,_ddd error ){if _afcc .ImageUpperPPI <=0{return objects ,nil ;};_dbaf :=_bbd (objects );if len (_dbaf )==0{return objects ,nil ;};_aaf :=make (map[_b .PdfObject ]struct{});
for _ ,_dgg :=range _dbaf {_gaab :=_dgg .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b");_aaf [_gaab ]=struct{}{};};_efcc :=make (map[*_b .PdfObjectStream ]*imageInfo );for _ ,_eggb :=range _dbaf {_efcc [_eggb .Stream ]=_eggb ;};var _fddfc *_b .PdfObjectDictionary ;
for _ ,_aadef :=range objects {if _aee ,_fgcg :=_b .GetDict (_aadef );_fddfc ==nil &&_fgcg {if _eacac ,_ccaff :=_b .GetName (_aee .Get ("\u0054\u0079\u0070\u0065"));_ccaff &&*_eacac =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_fddfc =_aee ;};};};if _fddfc ==nil {return objects ,nil ;
};_dgff ,_gdef :=_b .GetDict (_fddfc .Get ("\u0050\u0061\u0067e\u0073"));if !_gdef {return objects ,nil ;};_eeeb ,_affg :=_b .GetArray (_dgff .Get ("\u004b\u0069\u0064\u0073"));if !_affg {return objects ,nil ;};for _ ,_cdbg :=range _eeeb .Elements (){_fcge :=make (map[string ]*imageInfo );
_aaeg ,_edad :=_b .GetDict (_cdbg );if !_edad {continue ;};_aceb ,_ :=_degc (_aaeg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if len (_aceb )==0{continue ;};_cfb ,_bgce :=_b .GetDict (_aaeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_bgce {continue ;};_abbd ,_edb :=_acf .NewPdfPageResourcesFromDict (_cfb );if _edb !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020-\u0020\u0069\u0067\u006e\u006fr\u0069\u006eg\u003a\u0020\u0025\u0076",_edb );
continue ;};_efcf ,_dgca :=_b .GetDict (_cfb .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_dgca {continue ;};_ggee :=_efcf .Keys ();for _ ,_egd :=range _ggee {if _ddf ,_aegd :=_b .GetStream (_efcf .Get (_egd ));_aegd {if _gcbb ,_afe :=_efcc [_ddf ];
_afe {_fcge [string (_egd )]=_gcbb ;};};};_cegc :=_cc .NewContentStreamParser (_aceb );_fbfb ,_edb :=_cegc .Parse ();if _edb !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_edb );continue ;};_efb :=_cc .NewContentStreamProcessor (*_fbfb );
_efb .AddHandler (_cc .HandlerConditionEnumAllOperands ,"",func (_cfbg *_cc .ContentStreamOperation ,_aafe _cc .GraphicsState ,_fcbd *_acf .PdfPageResources )error {switch _cfbg .Operand {case "\u0044\u006f":if len (_cfbg .Params )!=1{_g .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020w\u0069\u0074\u0068\u0020\u006c\u0065\u006e\u0028\u0070\u0061ra\u006d\u0073\u0029 \u0021=\u0020\u0031");
return nil ;};_fgdf ,_dfb :=_b .GetName (_cfbg .Params [0]);if !_dfb {_g .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u006e\u0020\u004e\u0061\u006d\u0065\u0020p\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072");
return nil ;};if _faf ,_dabeg :=_fcge [string (*_fgdf )];_dabeg {_cfdc :=_aafe .CTM .ScalingFactorX ();_fcc :=_aafe .CTM .ScalingFactorY ();_eed ,_bgda :=_cfdc /72.0,_fcc /72.0;_gbg ,_bfd :=float64 (_faf .Width )/_eed ,float64 (_faf .Height )/_bgda ;if _eed ==0||_bgda ==0{_gbg =72.0;
_bfd =72.0;};_faf .PPI =_ge .Max (_faf .PPI ,_gbg );_faf .PPI =_ge .Max (_faf .PPI ,_bfd );};};return nil ;});_edb =_efb .Process (_abbd );if _edb !=nil {_g .Log .Debug ("E\u0052\u0052\u004f\u0052 p\u0072o\u0063\u0065\u0073\u0073\u0069n\u0067\u003a\u0020\u0025\u002b\u0076",_edb );
continue ;};};for _ ,_bdga :=range _dbaf {if _ ,_afgc :=_aaf [_bdga .Stream ];_afgc {continue ;};if _bdga .PPI <=_afcc .ImageUpperPPI {continue ;};_bcdaa ,_fcdbb :=_acf .NewXObjectImageFromStream (_bdga .Stream );if _fcdbb !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_fcdbb );
continue ;};var _gdcgb imageModifications ;_gdcgb .Scale =_afcc .ImageUpperPPI /_bdga .PPI ;if _bdga .BitsPerComponent ==1&&_bdga .ColorComponents ==1{_face :=_ge .Round (_bdga .PPI /_afcc .ImageUpperPPI );_gecf :=_cf .NextPowerOf2 (uint (_face ));if _cf .InDelta (float64 (_gecf ),1/_gdcgb .Scale ,0.3){_gdcgb .Scale =float64 (1)/float64 (_gecf );
};if _ ,_bccdb :=_bcdaa .Filter .(*_b .JBIG2Encoder );!_bccdb {_gdcgb .Encoding =_b .NewJBIG2Encoder ();};};if _fcdbb =_gffc (_bcdaa ,_gdcgb );_fcdbb !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_fcdbb );
continue ;};_gdcgb .Encoding =nil ;if _fbfa ,_gcedb :=_b .GetStream (_bdga .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b"));_gcedb {_ebf ,_edd :=_acf .NewXObjectImageFromStream (_fbfa );if _edd !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_edd );
continue ;};if _edd =_gffc (_ebf ,_gdcgb );_edd !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_edd );continue ;};};};return objects ,nil ;};func _fbeg (_gdee *_acf .Image ,_bcgb float64 )(*_acf .Image ,error ){_dgdb ,_bed :=_gdee .ToGoImage ();
if _bed !=nil {return nil ,_bed ;};var _eeece _cf .Image ;_gcee ,_egg :=_dgdb .(*_cf .Monochrome );if _egg {if _bed =_gcee .ResolveDecode ();_bed !=nil {return nil ,_bed ;};_eeece ,_bed =_gcee .Scale (_bcgb );if _bed !=nil {return nil ,_bed ;};}else {_dffc :=int (_ge .RoundToEven (float64 (_gdee .Width )*_bcgb ));
_ddcc :=int (_ge .RoundToEven (float64 (_gdee .Height )*_bcgb ));_eeece ,_bed =_cf .NewImage (_dffc ,_ddcc ,int (_gdee .BitsPerComponent ),_gdee .ColorComponents ,nil ,nil ,nil );if _bed !=nil {return nil ,_bed ;};_e .CatmullRom .Scale (_eeece ,_eeece .Bounds (),_dgdb ,_dgdb .Bounds (),_e .Over ,&_e .Options {});
};_gfae :=_eeece .Base ();_abdg :=&_acf .Image {Width :int64 (_gfae .Width ),Height :int64 (_gfae .Height ),BitsPerComponent :int64 (_gfae .BitsPerComponent ),ColorComponents :_gfae .ColorComponents ,Data :_gfae .Data };_abdg .SetDecode (_gfae .Decode );
_abdg .SetAlpha (_gfae .Alpha );return _abdg ,nil ;};func _gae (_bfg *_b .PdfObjectDictionary )[]string {_gde :=[]string {};for _ ,_bcdf :=range _bfg .Keys (){_gde =append (_gde ,_bcdf .String ());};return _gde ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};type imageInfo struct{BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_b .PdfObjectStream ;PPI float64 ;};func _afg (_dgf _b .PdfObject )(string ,error ){_fbf :=_b .TraceToDirectObject (_dgf );
switch _cdgb :=_fbf .(type ){case *_b .PdfObjectString :return _cdgb .Str (),nil ;case *_b .PdfObjectStream :_dee ,_acg :=_b .DecodeStream (_cdgb );if _acg !=nil {return "",_acg ;};return string (_dee ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fbf );
};

// Optimize implements Optimizer interface.
func (_cg *CleanUnusedResources )Optimize (objects []_b .PdfObject )(_fgf []_b .PdfObject ,_fab error ){_fecc ,_fab :=_gbbg (objects );if _fab !=nil {return nil ,_fab ;};_eab :=[]_b .PdfObject {};for _ ,_da :=range objects {_ ,_bcf :=_fecc [_da ];if _bcf {continue ;
};_eab =append (_eab ,_da );};return _eab ,nil ;};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};func _bafe (_gcec string ,_bdg []string )bool {for _ ,_gebc :=range _bdg {if _gcec ==_gebc {return true ;};};return false ;};type imageModifications struct{Scale float64 ;Encoding _b .StreamEncoder ;};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_bg []_acf .Optimizer };func _dgdd (_gbcf _b .PdfObject )[]content {if _gbcf ==nil {return nil ;};_bcd ,_cfg :=_b .GetArray (_gbcf );if !_cfg {_g .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return nil ;};var _efg []content ;for _ ,_bgc :=range _bcd .Elements (){_acca ,_cbd :=_b .GetDict (_bgc );if !_cbd {_g .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");
continue ;};_bfbf ,_cbd :=_b .GetDict (_acca .Get ("\u0041\u0050"));if !_cbd {_g .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_cbca :=_b .TraceToDirectObject (_bfbf .Get ("\u004e"));
if _cbca ==nil {_g .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};var _bfff *_b .PdfObjectStream ;switch _beae :=_cbca .(type ){case *_b .PdfObjectDictionary :_cdg ,_dge :=_b .GetName (_acca .Get ("\u0041\u0053"));
if !_dge {_g .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_bfff ,_dge =_b .GetStream (_beae .Get (*_cdg ));if !_dge {_g .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");
continue ;};case *_b .PdfObjectStream :_bfff =_beae ;};if _bfff ==nil {_g .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};_adf ,_ffb :=_acf .NewXObjectFormFromStream (_bfff );if _ffb !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_ffb );
continue ;};_fda ,_ffb :=_adf .GetContentStream ();if _ffb !=nil {_g .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_ffb );continue ;};_efg =append (_efg ,content {_adb :string (_fda ),_fag :_adf .Resources });
};return _efg ;};func _bc (_cec *_b .PdfObjectStream ,_dgab []rune ,_cce []_aca .GlyphIndex )error {_cec ,_fbg :=_b .GetStream (_cec );if !_fbg {_g .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ca .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dfc ,_gbc :=_b .DecodeStream (_cec );if _gbc !=nil {_g .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gbc );
return _gbc ;};_gebg ,_gbc :=_aca .Parse (_gc .NewReader (_dfc ));if _gbc !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cec .Stream ));
return _gbc ;};_dcbg :=_cce ;if len (_dgab )> 0{_fgc :=_gebg .LookupRunes (_dgab );_dcbg =append (_dcbg ,_fgc ...);};_gebg ,_gbc =_gebg .SubsetKeepIndices (_dcbg );if _gbc !=nil {_g .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_gbc );
return _gbc ;};var _ed _gc .Buffer ;_gbc =_gebg .Write (&_ed );if _gbc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gbc );return _gbc ;};if _ed .Len ()> len (_dfc ){_g .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_agd ,_gbc :=_b .MakeStream (_ed .Bytes (),_b .NewFlateEncoder ());if _gbc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gbc );return _gbc ;
};*_cec =*_agd ;_cec .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_b .MakeInteger (int64 (_ed .Len ())));return nil ;};func _ff (_ea *_cc .ContentStreamOperations )*_cc .ContentStreamOperations {if _ea ==nil {return nil ;};_ec :=_cc .ContentStreamOperations {};
for _ ,_gea :=range *_ea {switch _gea .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;case "\u0054\u006d":if len (_gea .Params )==6{if _ab ,_gdd :=_b .GetNumbersAsFloat (_gea .Params );_gdd ==nil {if _ab [0]==1&&_ab [1]==0&&_ab [2]==0&&_ab [3]==1{_gea =&_cc .ContentStreamOperation {Params :[]_b .PdfObject {_gea .Params [4],_gea .Params [5]},Operand :"\u0054\u0064"};
};};};};_ec =append (_ec ,_gea );};return &_ec ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_eef *CleanFonts )Optimize (objects []_b .PdfObject )(_gag []_b .PdfObject ,_dgdf error ){var _gge map[*_b .PdfObjectStream ]struct{};if _eef .Subset {var _ffe error ;_gge ,_ffe =_ged (objects );if _ffe !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0073u\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u003a \u0025\u0076",_ffe );
return nil ,_ffe ;};};for _ ,_fec :=range objects {_cbcb ,_fdbf :=_b .GetStream (_fec );if !_fdbf {continue ;};if _ ,_fgaa :=_gge [_cbcb ];_fgaa {continue ;};_fef ,_dgaa :=_b .NewEncoderFromStream (_cbcb );if _dgaa !=nil {_g .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_dgaa );
continue ;};_eccc ,_dgaa :=_fef .DecodeStream (_cbcb );if _dgaa !=nil {_g .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_dgaa );
continue ;};if len (_eccc )< 4{continue ;};_aba :=string (_eccc [:4]);if _aba =="\u004f\u0054\u0054\u004f"{continue ;};if _aba !="\u0000\u0001\u0000\u0000"&&_aba !="\u0074\u0072\u0075\u0065"{continue ;};_fefb ,_dgaa :=_aca .Parse (_gc .NewReader (_eccc ));
if _dgaa !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_dgaa );continue ;};_dgaa =_fefb .Optimize ();
if _dgaa !=nil {_g .Log .Debug ("\u0045\u0052RO\u0052\u0020\u004fp\u0074\u0069\u006d\u0069zin\u0067 f\u006f\u006e\u0074\u003a\u0020\u0025\u0076 -\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067",_dgaa );continue ;};var _bcg _gc .Buffer ;_dgaa =_fefb .Write (&_bcg );
if _dgaa !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_dgaa );continue ;};if _bcg .Len ()> len (_eccc ){_g .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_cae ,_dgaa :=_b .MakeStream (_bcg .Bytes (),_b .NewFlateEncoder ());if _dgaa !=nil {continue ;};*_cbcb =*_cae ;_cbcb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_b .MakeInteger (int64 (_bcg .Len ())));};return objects ,nil ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_dgecc :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_dgecc .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_dgecc .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_fdcc :=new (ImagePPI );
_fdcc .ImageUpperPPI =options .ImageUpperPPI ;_dgecc .Append (_fdcc );};if options .ImageQuality > 0{_age :=new (Image );_age .ImageQuality =options .ImageQuality ;_dgecc .Append (_age );};if options .CombineDuplicateDirectObjects {_dgecc .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_dgecc .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_dgecc .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_dgecc .Append (new (ObjectStreams ));
};if options .CompressStreams {_dgecc .Append (new (CompressStreams ));};if options .CleanUnusedResources {_dgecc .Append (new (CleanUnusedResources ));};return _dgecc ;};func _ccde (_deaf []_b .PdfObject )objectStructure {_cgeb :=objectStructure {};_deeg :=false ;
for _ ,_bfeg :=range _deaf {switch _eca :=_bfeg .(type ){case *_b .PdfIndirectObject :_cgde ,_fgbb :=_b .GetDict (_eca );if !_fgbb {continue ;};_efde ,_fgbb :=_b .GetName (_cgde .Get ("\u0054\u0079\u0070\u0065"));if !_fgbb {continue ;};switch _efde .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_cgeb ._cafd =_cgde ;
_deeg =true ;};};if _deeg {break ;};};if !_deeg {return _cgeb ;};_cfagc ,_efcg :=_b .GetDict (_cgeb ._cafd .Get ("\u0050\u0061\u0067e\u0073"));if !_efcg {return _cgeb ;};_cgeb ._acdd =_cfagc ;_cacc ,_efcg :=_b .GetArray (_cfagc .Get ("\u004b\u0069\u0064\u0073"));
if !_efcg {return _cgeb ;};for _ ,_bbc :=range _cacc .Elements (){_aaad ,_ebda :=_b .GetIndirect (_bbc );if !_ebda {break ;};_cgeb ._ggdgb =append (_cgeb ._ggdgb ,_aaad );};return _cgeb ;};type content struct{_adb string ;_fag *_acf .PdfPageResources ;
};func _degc (_gedb _b .PdfObject )(_gfb string ,_abbc []_b .PdfObject ){var _eeb _gc .Buffer ;switch _dbe :=_gedb .(type ){case *_b .PdfIndirectObject :_abbc =append (_abbc ,_dbe );_gedb =_dbe .PdfObject ;};switch _geg :=_gedb .(type ){case *_b .PdfObjectStream :if _gbfd ,_aea :=_b .DecodeStream (_geg );
_aea ==nil {_eeb .Write (_gbfd );_abbc =append (_abbc ,_geg );};case *_b .PdfObjectArray :for _ ,_faaa :=range _geg .Elements (){switch _cdea :=_faaa .(type ){case *_b .PdfObjectStream :if _fedc ,_bcee :=_b .DecodeStream (_cdea );_bcee ==nil {_eeb .Write (_fedc );
_abbc =append (_abbc ,_cdea );};};};};return _eeb .String (),_abbc ;};

// GetOptimizers gets the list of optimizers in chain `c`.
func (_dcc *Chain )GetOptimizers ()[]_acf .Optimizer {return _dcc ._bg };func _gbbg (_cbf []_b .PdfObject )(map[_b .PdfObject ]struct{},error ){_bba :=_ccde (_cbf );_cfag :=_bba ._ggdgb ;_dcbe :=make (map[_b .PdfObject ]struct{});_fgcd :=_eeec (_cfag );
for _ ,_bbf :=range _cfag {_ebd ,_gdf :=_b .GetDict (_bbf .PdfObject );if !_gdf {continue ;};_dfg ,_gdf :=_b .GetDict (_ebd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_gdf {continue ;};_fac :=_fgcd ["\u0058O\u0062\u006a\u0065\u0063\u0074"];
_abd ,_gdf :=_b .GetDict (_dfg .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if _gdf {_fgaf :=_gae (_abd );for _ ,_dcbef :=range _fgaf {if _bafe (_dcbef ,_fac ){continue ;};_dad :=*_b .MakeName (_dcbef );_fae :=_abd .Get (_dad );_dcbe [_fae ]=struct{}{};
_abd .Remove (_dad );_bdf :=_gcgd (_fae ,_dcbe );if _bdf !=nil {_g .Log .Debug ("\u0066\u0061\u0069\u006ce\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065r\u0073e\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0025\u0076",_fae );};};};_ada ,_gdf :=_b .GetDict (_dfg .Get ("\u0046\u006f\u006e\u0074"));
_dcea :=_fgcd ["\u0046\u006f\u006e\u0074"];if _gdf {_fcd :=_gae (_ada );for _ ,_eaf :=range _fcd {if _bafe (_eaf ,_dcea ){continue ;};_fea :=*_b .MakeName (_eaf );_abg :=_ada .Get (_fea );_dcbe [_abg ]=struct{}{};_ada .Remove (_fea );_cbdc :=_gcgd (_abg ,_dcbe );
if _cbdc !=nil {_g .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_abg );};};};_ccag ,_gdf :=_b .GetDict (_dfg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"));
if _gdf {_agc :=_gae (_ccag );_edf :=_fgcd ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];for _ ,_deg :=range _agc {if _bafe (_deg ,_edf ){continue ;};_gced :=*_b .MakeName (_deg );_gdff :=_ccag .Get (_gced );_dcbe [_gdff ]=struct{}{};_ccag .Remove (_gced );
_gfe :=_gcgd (_gdff ,_dcbe );if _gfe !=nil {_g .Log .Debug ("\u0066\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_gdff );};};};};return _dcbe ,nil ;
};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ebdf *CombineDuplicateStreams )Optimize (objects []_b .PdfObject )(_bbe []_b .PdfObject ,_afff error ){_bda :=make (map[_b .PdfObject ]_b .PdfObject );_bfea :=make (map[_b .PdfObject ]struct{});_dgec :=make (map[string ][]*_b .PdfObjectStream );
for _ ,_gaae :=range objects {if _aade ,_cdge :=_gaae .(*_b .PdfObjectStream );_cdge {_dbc :=_f .New ();_dbc .Write (_aade .Stream );_dbc .Write ([]byte (_aade .PdfObjectDictionary .WriteString ()));_bfbe :=string (_dbc .Sum (nil ));_dgec [_bfbe ]=append (_dgec [_bfbe ],_aade );
};};for _ ,_ebc :=range _dgec {if len (_ebc )< 2{continue ;};_dab :=_ebc [0];for _dea :=1;_dea < len (_ebc );_dea ++{_cge :=_ebc [_dea ];_bda [_cge ]=_dab ;_bfea [_cge ]=struct{}{};};};_bbe =make ([]_b .PdfObject ,0,len (objects )-len (_bfea ));for _ ,_agcf :=range objects {if _ ,_cfd :=_bfea [_agcf ];
_cfd {continue ;};_bbe =append (_bbe ,_agcf );};_aged (_bbe ,_bda );return _bbe ,nil ;};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
CleanUnusedResources bool ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bggb *ObjectStreams )Optimize (objects []_b .PdfObject )(_bcga []_b .PdfObject ,_febg error ){_agbb :=&_b .PdfObjectStreams {};_gfea :=make ([]_b .PdfObject ,0,len (objects ));for _ ,_aef :=range objects {if _efbg ,_gfc :=_aef .(*_b .PdfIndirectObject );
_gfc &&_efbg .GenerationNumber ==0{_agbb .Append (_aef );}else {_gfea =append (_gfea ,_aef );};};if _agbb .Len ()==0{return _gfea ,nil ;};_bcga =make ([]_b .PdfObject ,0,len (_gfea )+_agbb .Len ()+1);if _agbb .Len ()> 1{_bcga =append (_bcga ,_agbb );};
_bcga =append (_bcga ,_agbb .Elements ()...);_bcga =append (_bcga ,_gfea ...);return _bcga ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fd *Chain )Optimize (objects []_b .PdfObject )(_bf []_b .PdfObject ,_gd error ){_gg :=objects ;for _ ,_dc :=range _fd ._bg {_ggd ,_fb :=_dc .Optimize (_gg );if _fb !=nil {_g .Log .Debug ("\u0045\u0052\u0052OR\u0020\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u002b\u0076",_fb );
continue ;};_gg =_ggd ;};return _gg ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ba *CleanContentstream )Optimize (objects []_b .PdfObject )(_db []_b .PdfObject ,_baa error ){_bff :=map[*_b .PdfObjectStream ]struct{}{};var _ad []*_b .PdfObjectStream ;_ae :=func (_cfe *_b .PdfObjectStream ){if _ ,_de :=_bff [_cfe ];!_de {_bff [_cfe ]=struct{}{};
_ad =append (_ad ,_cfe );};};_ce :=map[_b .PdfObject ]bool {};_fbe :=map[_b .PdfObject ]bool {};for _ ,_bfc :=range objects {switch _bef :=_bfc .(type ){case *_b .PdfIndirectObject :switch _bad :=_bef .PdfObject .(type ){case *_b .PdfObjectDictionary :if _fbed ,_aed :=_b .GetName (_bad .Get ("\u0054\u0079\u0070\u0065"));
!_aed ||_fbed .String ()!="\u0050\u0061\u0067\u0065"{continue ;};if _fa ,_fg :=_b .GetStream (_bad .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_fg {_ae (_fa );}else if _ead ,_eadd :=_b .GetArray (_bad .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_eadd {var _geb []*_b .PdfObjectStream ;for _ ,_gef :=range _ead .Elements (){if _bec ,_fbb :=_b .GetStream (_gef );_fbb {_geb =append (_geb ,_bec );};};if len (_geb )> 0{var _fc _gc .Buffer ;for _ ,_ggc :=range _geb {if _gbb ,_dd :=_b .DecodeStream (_ggc );
_dd ==nil {_fc .Write (_gbb );};_ce [_ggc ]=true ;};_dce ,_cbb :=_b .MakeStream (_fc .Bytes (),_b .NewFlateEncoder ());if _cbb !=nil {return nil ,_cbb ;};_fbe [_dce ]=true ;_bad .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dce );_ae (_dce );
};};};case *_b .PdfObjectStream :if _gdg ,_fdc :=_b .GetName (_bef .Get ("\u0054\u0079\u0070\u0065"));!_fdc ||_gdg .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _ddc ,_dga :=_b .GetName (_bef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_dga ||_ddc .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_ae (_bef );};};for _ ,_fdd :=range _ad {_baa =_cd (_fdd );if _baa !=nil {return nil ,_baa ;};};_db =nil ;for _ ,_bee :=range objects {if _ce [_bee ]{continue ;};_db =append (_db ,_bee );};
for _ee :=range _fbe {_db =append (_db ,_ee );};return _db ,nil ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gbea *CombineDuplicateDirectObjects )Optimize (objects []_b .PdfObject )(_ffcf []_b .PdfObject ,_afgb error ){_fgdc (objects );_acab :=make (map[string ][]*_b .PdfObjectDictionary );var _agb func (_bbfe *_b .PdfObjectDictionary );_agb =func (_dagf *_b .PdfObjectDictionary ){for _ ,_efa :=range _dagf .Keys (){_agde :=_dagf .Get (_efa );
if _fgd ,_gdfff :=_agde .(*_b .PdfObjectDictionary );_gdfff {if _caf :=_fgd .Keys ();len (_caf )==0{continue ;};_dfdf :=_f .New ();_dfdf .Write ([]byte (_fgd .WriteString ()));_gafa :=string (_dfdf .Sum (nil ));_acab [_gafa ]=append (_acab [_gafa ],_fgd );
_agb (_fgd );};};};for _ ,_fbbf :=range objects {_fcee ,_aedg :=_fbbf .(*_b .PdfIndirectObject );if !_aedg {continue ;};if _ecb ,_edgf :=_fcee .PdfObject .(*_b .PdfObjectDictionary );_edgf {_agb (_ecb );};};_gcb :=make ([]_b .PdfObject ,0,len (_acab ));
_ccd :=make (map[_b .PdfObject ]_b .PdfObject );for _ ,_edae :=range _acab {if len (_edae )< 2{continue ;};_gefb :=_b .MakeDict ();_gefb .Merge (_edae [0]);_bge :=_b .MakeIndirectObject (_gefb );_gcb =append (_gcb ,_bge );for _cgg :=0;_cgg < len (_edae );
_cgg ++{_beef :=_edae [_cgg ];_ccd [_beef ]=_bge ;};};_ffcf =make ([]_b .PdfObject ,len (objects ));copy (_ffcf ,objects );_ffcf =append (_gcb ,_ffcf ...);_aged (_ffcf ,_ccd );return _ffcf ,nil ;};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};func _gffc (_gbdd *_acf .XObjectImage ,_cafb imageModifications )error {_ggag ,_edgg :=_gbdd .ToImage ();if _edgg !=nil {return _edgg ;};if _cafb .Scale !=0{_ggag ,_edgg =_fbeg (_ggag ,_cafb .Scale );if _edgg !=nil {return _edgg ;
};};if _cafb .Encoding !=nil {_gbdd .Filter =_cafb .Encoding ;};_gbdd .Decode =nil ;switch _bcda :=_gbdd .Filter .(type ){case *_b .FlateEncoder :if _bcda .Predictor !=1&&_bcda .Predictor !=11{_bcda .Predictor =1;};};if _edgg =_gbdd .SetImage (_ggag ,nil );
_edgg !=nil {_g .Log .Debug ("\u0045\u0072\u0072or\u0020\u0073\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0076",_edgg );return _edgg ;};_gbdd .ToPdfObject ();return nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_dgeg *Image )Optimize (objects []_b .PdfObject )(_beege []_b .PdfObject ,_badf error ){if _dgeg .ImageQuality <=0{return objects ,nil ;};_acaf :=_bbd (objects );if len (_acaf )==0{return objects ,nil ;};_dbg :=make (map[_b .PdfObject ]_b .PdfObject );
_ccee :=make (map[_b .PdfObject ]struct{});for _ ,_eade :=range _acaf {_eccce :=_eade .Stream .Get ("\u0053\u004d\u0061s\u006b");_ccee [_eccce ]=struct{}{};};for _cde ,_fdcg :=range _acaf {_caff :=_fdcg .Stream ;if _ ,_gdcg :=_ccee [_caff ];_gdcg {continue ;
};_bgd ,_aacd :=_acf .NewXObjectImageFromStream (_caff );if _aacd !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_aacd );continue ;};switch _bgd .Filter .(type ){case *_b .JBIG2Encoder :continue ;case *_b .CCITTFaxEncoder :continue ;
};_ceeg ,_aacd :=_bgd .ToImage ();if _aacd !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_aacd );continue ;};_adbe :=_b .NewDCTEncoder ();_adbe .ColorComponents =_ceeg .ColorComponents ;_adbe .Quality =_dgeg .ImageQuality ;
_adbe .BitsPerComponent =_fdcg .BitsPerComponent ;_adbe .Width =_fdcg .Width ;_adbe .Height =_fdcg .Height ;_cgbe ,_aacd :=_adbe .EncodeBytes (_ceeg .Data );if _aacd !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_aacd );
continue ;};var _dbce _b .StreamEncoder ;_dbce =_adbe ;{_dffe :=_b .NewFlateEncoder ();_bgfe :=_b .NewMultiEncoder ();_bgfe .AddEncoder (_dffe );_bgfe .AddEncoder (_adbe );_gac ,_cfga :=_bgfe .EncodeBytes (_ceeg .Data );if _cfga !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_cfga );
continue ;};if len (_gac )< len (_cgbe ){_g .Log .Trace ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_cgbe ),len (_gac ),len (_caff .Stream ));
_cgbe =_gac ;_dbce =_bgfe ;};};_ege :=len (_caff .Stream );if _ege < len (_cgbe ){continue ;};_bcccd :=&_b .PdfObjectStream {Stream :_cgbe };_bcccd .PdfObjectReference =_caff .PdfObjectReference ;_bcccd .PdfObjectDictionary =_b .MakeDict ();_bcccd .Merge (_caff .PdfObjectDictionary );
_bcccd .Merge (_dbce .MakeStreamDict ());_bcccd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_b .MakeInteger (int64 (len (_cgbe ))));_dbg [_caff ]=_bcccd ;_acaf [_cde ].Stream =_bcccd ;};_beege =make ([]_b .PdfObject ,len (objects ));copy (_beege ,objects );
_aged (_beege ,_dbg );return _beege ,nil ;};