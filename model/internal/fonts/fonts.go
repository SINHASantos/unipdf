//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fe "bytes";_g "encoding/binary";_cb "errors";_f "fmt";_eag "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/core";_gd "github.com/unidoc/unipdf/v3/internal/cmap";_ee "github.com/unidoc/unipdf/v3/internal/textencoding";
_eg "io";_d "os";_c "regexp";_e "sort";_af "strings";_ea "sync";);const (_cbac ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););type RuneCharSafeMap struct{_gg map[rune ]CharMetrics ;
_gb _ea .RWMutex ;};var _bga =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_cf *fontMap )read (_fc StdFontName )(func ()StdFont ,bool ){_cf .Lock ();defer _cf .Unlock ();_afe ,_gga :=_cf ._ef [_fc ];return _afe ,_gga ;};func _fed ()StdFont {_ec .Do (_bfe );_gcf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_gcf ,_ffe );};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_gce :=_bg .read (name );_gce {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_bg .write (name ,fnc );for _ ,_cce :=range aliases {RegisterStdFont (_cce ,fnc );};};var _cac =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _ec _ea .Once ;var _ege *RuneCharSafeMap ;type FontWeight int ;func _edc ()StdFont {_gfd :=_ee .NewZapfDingbatsEncoder ();_bad :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bad ,_cfa ,_gfd );};func _gaf (_fcb map[string ]uint32 )string {var _eeb []string ;for _badg :=range _fcb {_eeb =append (_eeb ,_badg );};_e .Slice (_eeb ,func (_abag ,_gddb int )bool {return _fcb [_eeb [_abag ]]< _fcb [_eeb [_gddb ]]});
_bgf :=[]string {_f .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_fcb ))};for _ ,_agb :=range _eeb {_bgf =append (_bgf ,_f .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_agb ,_fcb [_agb ]));
};return _af .Join (_bgf ,"\u000a");};func _bfe (){const _fa =600;_gfgd =MakeRuneCharSafeMap (len (_gdge ));for _ ,_adf :=range _gdge {_gfgd .Write (_adf ,CharMetrics {Wx :_fa });};_ffe =_gfgd .Copy ();_gdd =_gfgd .Copy ();_aag =_gfgd .Copy ();};type GlyphName =_ee .GlyphName ;
func _bfg ()StdFont {_afad .Do (_bec );_gbc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gbc ,_dc );};var _fgb _ea .Once ;func (_fec StdFont )GetMetricsTable ()*RuneCharSafeMap {return _fec ._bfc };type fontMap struct{_ea .Mutex ;_ef map[StdFontName ]func ()StdFont ;};func (_ace *ttfParser )ParseComponents ()error {if _edd :=_ace .ParseHead ();
_edd !=nil {return _edd ;};if _dce :=_ace .ParseHhea ();_dce !=nil {return _dce ;};if _bbd :=_ace .ParseMaxp ();_bbd !=nil {return _bbd ;};if _age :=_ace .ParseHmtx ();_age !=nil {return _age ;};if _ ,_acf :=_ace ._daf ["\u006e\u0061\u006d\u0065"];_acf {if _fgbc :=_ace .ParseName ();
_fgbc !=nil {return _fgbc ;};};if _ ,_cfcb :=_ace ._daf ["\u004f\u0053\u002f\u0032"];_cfcb {if _bcdga :=_ace .ParseOS2 ();_bcdga !=nil {return _bcdga ;};};if _ ,_ebf :=_ace ._daf ["\u0070\u006f\u0073\u0074"];_ebf {if _faf :=_ace .ParsePost ();_faf !=nil {return _faf ;
};};if _ ,_gba :=_ace ._daf ["\u0063\u006d\u0061\u0070"];_gba {if _agff :=_ace .ParseCmap ();_agff !=nil {return _agff ;};};return nil ;};var _gcg =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _bec (){_cea =MakeRuneCharSafeMap (len (_gdge ));_dc =MakeRuneCharSafeMap (len (_gdge ));for _ffa ,_cec :=range _gdge {_cea .Write (_cec ,CharMetrics {Wx :float64 (_cfd [_ffa ])});_dc .Write (_cec ,CharMetrics {Wx :float64 (_edg [_ffa ])});};_eaa =_cea .Copy ();
_ga =_dc .Copy ();};var _cea *RuneCharSafeMap ;var _aag *RuneCharSafeMap ;var _dge =&RuneCharSafeMap {_gg :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_gfa *ttfParser )ParseName ()error {if _ffg :=_gfa .Seek ("\u006e\u0061\u006d\u0065");_ffg !=nil {return _ffg ;};_bega ,_ :=_gfa ._gcb .Seek (0,_eg .SeekCurrent );_gfa ._bd .PostScriptName ="";_gfa .Skip (2);_eceb :=_gfa .ReadUShort ();_dfcc :=_gfa .ReadUShort ();
for _cfg :=uint16 (0);_cfg < _eceb &&_gfa ._bd .PostScriptName =="";_cfg ++{_gfa .Skip (3*2);_cdb :=_gfa .ReadUShort ();_ded :=_gfa .ReadUShort ();_dfg :=_gfa .ReadUShort ();if _cdb ==6{_gfa ._gcb .Seek (_bega +int64 (_dfcc )+int64 (_dfg ),_eg .SeekStart );
_aege ,_dad :=_gfa .ReadStr (int (_ded ));if _dad !=nil {return _dad ;};_aege =_af .Replace (_aege ,"\u0000","",-1);_fba ,_dad :=_c .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _dad !=nil {return _dad ;
};_gfa ._bd .PostScriptName =_fba .ReplaceAllString (_aege ,"");};};if _gfa ._bd .PostScriptName ==""{_eag .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_cde *ttfParser )ParseMaxp ()error {if _febe :=_cde .Seek ("\u006d\u0061\u0078\u0070");_febe !=nil {return _febe ;};_cde .Skip (4);_cde ._dae =_cde .ReadUShort ();return nil ;};var _afad _ea .Once ;func TtfParseFile (fileStr string )(TtfType ,error ){_ge ,_efg :=_d .Open (fileStr );
if _efg !=nil {return TtfType {},_efg ;};defer _ge .Close ();return TtfParse (_ge );};var _gdge =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _ffe *RuneCharSafeMap ;type Font interface{Encoder ()_ee .TextEncoder ;GetRuneMetrics (_dg rune )(CharMetrics ,bool );};var _bg =&fontMap {_ef :make (map[StdFontName ]func ()StdFont )};func init (){RegisterStdFont (CourierName ,_fbf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_fed ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_beg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dab ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func _fef ()StdFont {_fgb .Do (_cef );_bcd :=Descriptor {Name :TimesRomanName ,Family :_cbac ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_bcd ,_dgb );};func (_gdc StdFont )Name ()string {return string (_gdc ._cag .Name )};func (_cd StdFont )Encoder ()_ee .TextEncoder {return _cd ._ba };func (_bff *ttfParser )Parse ()(TtfType ,error ){_bcdg ,_edf :=_bff .ReadStr (4);if _edf !=nil {return TtfType {},_edf ;
};if _bcdg =="\u0074\u0074\u0063\u0066"{return _bff .parseTTC ();}else if _bcdg !="\u0000\u0001\u0000\u0000"&&_bcdg !="\u0074\u0072\u0075\u0065"{_eag .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bcdg );
};_cab :=int (_bff .ReadUShort ());_bff .Skip (3*2);_bff ._daf =make (map[string ]uint32 );var _eef string ;for _ffab :=0;_ffab < _cab ;_ffab ++{_eef ,_edf =_bff .ReadStr (4);if _edf !=nil {return TtfType {},_edf ;};_bff .Skip (4);_cga :=_bff .ReadULong ();
_bff .Skip (4);_bff ._daf [_eef ]=_cga ;};_eag .Log .Trace (_gaf (_bff ._daf ));if _edf =_bff .ParseComponents ();_edf !=nil {return TtfType {},_edf ;};return _bff ._bd ,nil ;};var _dcc *RuneCharSafeMap ;var _cfa =&RuneCharSafeMap {_gg :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _edg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ee .TextEncoder )StdFont {var _fb rune =0xA0;if _ ,_eagc :=metrics .Read (_fb );!_eagc {_gfg ,_ :=metrics .Read (0x20);metrics .Write (_fb ,_gfg );};return StdFont {_cag :desc ,_bfc :metrics ,_ba :encoder };
};var _eaa *RuneCharSafeMap ;func (_gdcd *ttfParser )Read32Fixed ()float64 {_eegd :=float64 (_gdcd .ReadShort ());_cddf :=float64 (_gdcd .ReadUShort ())/65536.0;return _eegd +_cddf ;};func (_eccd *ttfParser )ParseCmap ()error {var _fff int64 ;if _bag :=_eccd .Seek ("\u0063\u006d\u0061\u0070");
_bag !=nil {return _bag ;};_eccd .ReadUShort ();_ccdb :=int (_eccd .ReadUShort ());_ffae :=int64 (0);_gag :=int64 (0);_bagc :=int64 (0);for _acc :=0;_acc < _ccdb ;_acc ++{_bdg :=_eccd .ReadUShort ();_cceg :=_eccd .ReadUShort ();_fff =int64 (_eccd .ReadULong ());
if _bdg ==3&&_cceg ==1{_gag =_fff ;}else if _bdg ==3&&_cceg ==10{_bagc =_fff ;}else if _bdg ==1&&_cceg ==0{_ffae =_fff ;};};if _ffae !=0{if _fea :=_eccd .parseCmapVersion (_ffae );_fea !=nil {return _fea ;};};if _gag !=0{if _eec :=_eccd .parseCmapSubtable31 (_gag );
_eec !=nil {return _eec ;};};if _bagc !=0{if _cbec :=_eccd .parseCmapVersion (_bagc );_cbec !=nil {return _cbec ;};};if _gag ==0&&_ffae ==0&&_bagc ==0{_eag .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func init (){RegisterStdFont (HelveticaName ,_ecc ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_bfg ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_eba ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_ebab ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_bgb *ttfParser )readByte ()(_adbf uint8 ){_g .Read (_bgb ._gcb ,_g .BigEndian ,&_adbf );return _adbf ;};
func (_gf *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fg :=MakeRuneCharSafeMap (_gf .Length ());_gf .Range (func (_ed rune ,_ce CharMetrics )(_de bool ){_fg ._gg [_ed ]=_ce ;return false });return _fg ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_cba ,_da :=_bg .read (name );
if !_da {return StdFont {},false ;};return _cba (),true ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;
UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_gee *ttfParser )parseCmapFormat6 ()error {_abeb :=int (_gee .ReadUShort ());_abbe :=int (_gee .ReadUShort ());
_eag .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gee ._bd .String (),_abeb ,_abbe );
for _agee :=0;_agee < _abbe ;_agee ++{_afefc :=GID (_gee .ReadUShort ());_gee ._bd .Chars [rune (_agee +_abeb )]=_afefc ;};return nil ;};var _dc *RuneCharSafeMap ;func (_dgbb *ttfParser )parseCmapFormat0 ()error {_cagc ,_ggaf :=_dgbb .ReadStr (256);if _ggaf !=nil {return _ggaf ;
};_dfc :=[]byte (_cagc );_eag .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dgbb ._bd .String (),_cagc ,_dfc );
for _ebfc ,_bbc :=range _dfc {_dgbb ._bd .Chars [rune (_ebfc )]=GID (_bbc );};return nil ;};var _fad =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type GID =_ee .GID ;func (_dagg *ttfParser )parseCmapVersion (_bcb int64 )error {_eag .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bcb );if _dagg ._bd .Chars ==nil {_dagg ._bd .Chars =make (map[rune ]GID );
};_dagg ._gcb .Seek (int64 (_dagg ._daf ["\u0063\u006d\u0061\u0070"])+_bcb ,_eg .SeekStart );var _ece ,_cee uint32 ;_fgf :=_dagg .ReadUShort ();if _fgf < 8{_ece =uint32 (_dagg .ReadUShort ());_cee =uint32 (_dagg .ReadUShort ());}else {_dagg .ReadUShort ();
_ece =_dagg .ReadULong ();_cee =_dagg .ReadULong ();};_eag .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_fgf ,_ece ,_cee );
switch _fgf {case 0:return _dagg .parseCmapFormat0 ();case 6:return _dagg .parseCmapFormat6 ();case 12:return _dagg .parseCmapFormat12 ();default:_eag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_fgf );
return nil ;};};var _ Font =StdFont {};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_gg :make (map[rune ]CharMetrics ,length )};};func init (){RegisterStdFont (SymbolName ,_egb ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_edc );};var _dgb *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func _egb ()StdFont {_ag :=_ee .NewSymbolEncoder ();_agf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_agf ,_dge ,_ag );};func _eba ()StdFont {_afad .Do (_bec );_aec :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_aec ,_eaa );};func _dd ()StdFont {_fgb .Do (_cef );_afef :=Descriptor {Name :TimesBoldName ,Family :_cbac ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_afef ,_ege );};func init (){RegisterStdFont (TimesRomanName ,_fef ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_dd ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_acb ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_gde ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_bf *fontMap )write (_aba StdFontName ,_gbd func ()StdFont ){_bf .Lock ();defer _bf .Unlock ();_bf ._ef [_aba ]=_gbd ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_dfa *ttfParser )ReadShort ()(_afdg int16 ){_g .Read (_dfa ._gcb ,_g .BigEndian ,&_afdg );
return _afdg ;};func (_ccdd *ttfParser )ReadUShort ()(_ccef uint16 ){_g .Read (_ccdd ._gcb ,_g .BigEndian ,&_ccef );return _ccef ;};func _ebab ()StdFont {_afad .Do (_bec );_feb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_feb ,_ga );};var _gfgd *RuneCharSafeMap ;func (_dag *ttfParser )ParseHhea ()error {if _fcgf :=_dag .Seek ("\u0068\u0068\u0065\u0061");_fcgf !=nil {return _fcgf ;};_dag .Skip (4+15*2);_dag ._ccg =_dag .ReadUShort ();return nil ;};type StdFontName string ;
func (_cgad *ttfParser )ParseHead ()error {if _dbg :=_cgad .Seek ("\u0068\u0065\u0061\u0064");_dbg !=nil {return _dbg ;};_cgad .Skip (3*4);_aae :=_cgad .ReadULong ();if _aae !=0x5F0F3CF5{_eag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cgad );
};_cgad .Skip (2);_cgad ._bd .UnitsPerEm =_cgad .ReadUShort ();_cgad .Skip (2*8);_cgad ._bd .Xmin =_cgad .ReadShort ();_cgad ._bd .Ymin =_cgad .ReadShort ();_cgad ._bd .Xmax =_cgad .ReadShort ();_cgad ._bd .Ymax =_cgad .ReadShort ();return nil ;};func IsStdFont (name StdFontName )bool {_ ,_ebc :=_bg .read (name );
return _ebc };var _fd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_ggb *RuneCharSafeMap )Length ()int {_ggb ._gb .RLock ();defer _ggb ._gb .RUnlock ();
return len (_ggb ._gg );};func _ecc ()StdFont {_afad .Do (_bec );_afg :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_afg ,_cea );};func (_gc *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_gc ._gb .RLock ();defer _gc ._gb .RUnlock ();_be ,_ab :=_gc ._gg [b ];return _be ,_ab ;};func (_ddc *ttfParser )ParseOS2 ()error {if _cbed :=_ddc .Seek ("\u004f\u0053\u002f\u0032");
_cbed !=nil {return _cbed ;};_cdd :=_ddc .ReadUShort ();_ddc .Skip (4*2);_ddc .Skip (11*2+10+4*4+4);_bfd :=_ddc .ReadUShort ();_ddc ._bd .Bold =(_bfd &32)!=0;_ddc .Skip (2*2);_ddc ._bd .TypoAscender =_ddc .ReadShort ();_ddc ._bd .TypoDescender =_ddc .ReadShort ();
if _cdd >=2{_ddc .Skip (3*2+2*4+2);_ddc ._bd .CapHeight =_ddc .ReadShort ();}else {_ddc ._bd .CapHeight =0;};return nil ;};func (_eagg *TtfType )String ()string {return _f .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_eagg .PostScriptName ,_eagg .UnitsPerEm ,_eagg .Bold ,_eagg .ItalicAngle ,_eagg .CapHeight ,len (_eagg .Chars ),len (_eagg .GlyphNames ));
};var _gdd *RuneCharSafeMap ;func (_afd *ttfParser )parseCmapSubtable31 (_aaf int64 )error {_fdb :=make ([]rune ,0,8);_eff :=make ([]rune ,0,8);_bbb :=make ([]int16 ,0,8);_eed :=make ([]uint16 ,0,8);_afd ._bd .Chars =make (map[rune ]GID );_afd ._gcb .Seek (int64 (_afd ._daf ["\u0063\u006d\u0061\u0070"])+_aaf ,_eg .SeekStart );
_dcec :=_afd .ReadUShort ();if _dcec !=4{_eag .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_dcec );
return nil ;};_afd .Skip (2*2);_ebce :=int (_afd .ReadUShort ()/2);_afd .Skip (3*2);for _baeb :=0;_baeb < _ebce ;_baeb ++{_eff =append (_eff ,rune (_afd .ReadUShort ()));};_afd .Skip (2);for _eab :=0;_eab < _ebce ;_eab ++{_fdb =append (_fdb ,rune (_afd .ReadUShort ()));
};for _dgea :=0;_dgea < _ebce ;_dgea ++{_bbb =append (_bbb ,_afd .ReadShort ());};_gae ,_ :=_afd ._gcb .Seek (int64 (0),_eg .SeekCurrent );for _dcf :=0;_dcf < _ebce ;_dcf ++{_eed =append (_eed ,_afd .ReadUShort ());};for _edfa :=0;_edfa < _ebce ;_edfa ++{_abe :=_fdb [_edfa ];
_geg :=_eff [_edfa ];_abb :=_bbb [_edfa ];_bde :=_eed [_edfa ];if _bde > 0{_afd ._gcb .Seek (_gae +2*int64 (_edfa )+int64 (_bde ),_eg .SeekStart );};for _cecd :=_abe ;_cecd <=_geg ;_cecd ++{if _cecd ==0xFFFF{break ;};var _gdb int32 ;if _bde > 0{_gdb =int32 (_afd .ReadUShort ());
if _gdb > 0{_gdb +=int32 (_abb );};}else {_gdb =_cecd +int32 (_abb );};if _gdb >=65536{_gdb -=65536;};if _gdb > 0{_afd ._bd .Chars [_cecd ]=GID (_gdb );};};};return nil ;};func (_dagd *ttfParser )Skip (n int ){_dagd ._gcb .Seek (int64 (n ),_eg .SeekCurrent )};
type ttfParser struct{_bd TtfType ;_gcb _eg .ReadSeeker ;_daf map[string ]uint32 ;_ccg uint16 ;_dae uint16 ;};type StdFont struct{_cag Descriptor ;_bfc *RuneCharSafeMap ;_ba _ee .TextEncoder ;};var _cg *RuneCharSafeMap ;func _dab ()StdFont {_ec .Do (_bfe );
_ggd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_ggd ,_gdd );
};func _beg ()StdFont {_ec .Do (_bfe );_bc :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bc ,_aag );};func (_gfgg *ttfParser )parseTTC ()(TtfType ,error ){_gfgg .Skip (2*2);_daed :=_gfgg .ReadULong ();if _daed < 1{return TtfType {},_cb .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_cfc :=_gfgg .ReadULong ();_ ,_bfeg :=_gfgg ._gcb .Seek (int64 (_cfc ),_eg .SeekStart );if _bfeg !=nil {return TtfType {},_bfeg ;};return _gfgg .Parse ();};func (_afb *TtfType )NewEncoder ()_ee .TextEncoder {return _ee .NewTrueTypeFontEncoder (_afb .Chars )};
func _cef (){_dgb =MakeRuneCharSafeMap (len (_gdge ));_ege =MakeRuneCharSafeMap (len (_gdge ));_cg =MakeRuneCharSafeMap (len (_gdge ));_dcc =MakeRuneCharSafeMap (len (_gdge ));for _bfcg ,_fae :=range _gdge {_dgb .Write (_fae ,CharMetrics {Wx :float64 (_cac [_bfcg ])});
_ege .Write (_fae ,CharMetrics {Wx :float64 (_bga [_bfcg ])});_cg .Write (_fae ,CharMetrics {Wx :float64 (_gcg [_bfcg ])});_dcc .Write (_fae ,CharMetrics {Wx :float64 (_fd [_bfcg ])});};};func (_ae StdFont )Descriptor ()Descriptor {return _ae ._cag };func _gde ()StdFont {_fgb .Do (_cef );
_ccb :=Descriptor {Name :TimesBoldItalicName ,Family :_cbac ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};return NewStdFont (_ccb ,_cg );
};func (_cc *RuneCharSafeMap )Range (f func (_bed rune ,_eb CharMetrics )(_df bool )){_cc ._gb .RLock ();defer _cc ._gb .RUnlock ();for _gcd ,_ad :=range _cc ._gg {if f (_gcd ,_ad ){break ;};};};func (_abad *ttfParser )ParseHmtx ()error {if _egge :=_abad .Seek ("\u0068\u006d\u0074\u0078");
_egge !=nil {return _egge ;};_abad ._bd .Widths =make ([]uint16 ,0,8);for _add :=uint16 (0);_add < _abad ._ccg ;_add ++{_abad ._bd .Widths =append (_abad ._bd .Widths ,_abad .ReadUShort ());_abad .Skip (2);};if _abad ._ccg < _abad ._dae &&_abad ._ccg > 0{_faa :=_abad ._bd .Widths [_abad ._ccg -1];
for _efd :=_abad ._ccg ;_efd < _abad ._dae ;_efd ++{_abad ._bd .Widths =append (_abad ._bd .Widths ,_faa );};};return nil ;};func (_ccbg *ttfParser )parseCmapFormat12 ()error {_bgfc :=_ccbg .ReadULong ();_eag .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ccbg ._bd .String (),_bgfc );
for _cafc :=uint32 (0);_cafc < _bgfc ;_cafc ++{_ecb :=_ccbg .ReadULong ();_fbb :=_ccbg .ReadULong ();_bee :=_ccbg .ReadULong ();if _ecb > 0x0010FFFF||(0xD800<=_ecb &&_ecb <=0xDFFF){return _cb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fbb < _ecb ||_fbb > 0x0010FFFF||(0xD800<=_fbb &&_fbb <=0xDFFF){return _cb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _dcb :=_ecb ;_dcb <=_fbb ;
_dcb ++{if _dcb > 0x10FFFF{_eag .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ccbg ._bd .Chars [rune (_dcb )]=GID (_bee );_bee ++;};};return nil ;};var _cfd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_ggf *ttfParser )Seek (tag string )error {_cge ,_abg :=_ggf ._daf [tag ];if !_abg {return _f .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_ggf ._gcb .Seek (int64 (_cge ),_eg .SeekStart );
return nil ;};func (_bb StdFont )ToPdfObject ()_b .PdfObject {_bge :=_b .MakeDict ();_bge .Set ("\u0054\u0079\u0070\u0065",_b .MakeName ("\u0046\u006f\u006e\u0074"));_bge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_b .MakeName ("\u0054\u0079\u0070e\u0031"));
_bge .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_b .MakeName (_bb .Name ()));_bge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bb ._ba .ToPdfObject ());return _b .MakeIndirectObject (_bge );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_ca *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ca ._gb .Lock ();defer _ca ._gb .Unlock ();_ca ._gg [b ]=r ;};func (_aa CharMetrics )String ()string {return _f .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_aa .Wx ,_aa .Wy );
};func (_ccd *ttfParser )parseCmapSubtable10 (_abf int64 )error {if _ccd ._bd .Chars ==nil {_ccd ._bd .Chars =make (map[rune ]GID );};_ccd ._gcb .Seek (int64 (_ccd ._daf ["\u0063\u006d\u0061\u0070"])+_abf ,_eg .SeekStart );var _ebg ,_afbc uint32 ;_cae :=_ccd .ReadUShort ();
if _cae < 8{_ebg =uint32 (_ccd .ReadUShort ());_afbc =uint32 (_ccd .ReadUShort ());}else {_ccd .ReadUShort ();_ebg =_ccd .ReadULong ();_afbc =_ccd .ReadULong ();};_eag .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cae ,_ebg ,_afbc );
if _cae !=0{return _cb .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caf ,_gef :=_ccd .ReadStr (256);if _gef !=nil {return _gef ;
};_dcg :=[]byte (_caf );for _fgc ,_ega :=range _dcg {_ccd ._bd .Chars [rune (_fgc )]=GID (_ega );if _ega !=0{_f .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fgc ,_ega ,rune (_ega ));
};};return nil ;};var _ga *RuneCharSafeMap ;func (_aac *ttfParser )ParsePost ()error {if _bac :=_aac .Seek ("\u0070\u006f\u0073\u0074");_bac !=nil {return _bac ;};_bfgc :=_aac .Read32Fixed ();_aac ._bd .ItalicAngle =_aac .Read32Fixed ();_aac ._bd .UnderlinePosition =_aac .ReadShort ();
_aac ._bd .UnderlineThickness =_aac .ReadShort ();_aac ._bd .IsFixedPitch =_aac .ReadULong ()!=0;_aac .ReadULong ();_aac .ReadULong ();_aac .ReadULong ();_aac .ReadULong ();_eag .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_bfgc );
switch _bfgc {case 1.0:_aac ._bd .GlyphNames =_fad ;case 2.0:_ffc :=int (_aac .ReadUShort ());_ddcf :=make ([]int ,_ffc );_aac ._bd .GlyphNames =make ([]GlyphName ,_ffc );_babd :=-1;for _dga :=0;_dga < _ffc ;_dga ++{_ceb :=int (_aac .ReadUShort ());_ddcf [_dga ]=_ceb ;
if _ceb <=0x7fff&&_ceb > _babd {_babd =_ceb ;};};var _dfcce []GlyphName ;if _babd >=len (_fad ){_dfcce =make ([]GlyphName ,_babd -len (_fad )+1);for _fefg :=0;_fefg < _babd -len (_fad )+1;_fefg ++{_deg :=int (_aac .readByte ());_eaf ,_adb :=_aac .ReadStr (_deg );
if _adb !=nil {return _adb ;};_dfcce [_fefg ]=GlyphName (_eaf );};};for _bdd :=0;_bdd < _ffc ;_bdd ++{_cacb :=_ddcf [_bdd ];if _cacb < len (_fad ){_aac ._bd .GlyphNames [_bdd ]=_fad [_cacb ];}else if _cacb >=len (_fad )&&_cacb <=32767{_aac ._bd .GlyphNames [_bdd ]=_dfcce [_cacb -len (_fad )];
}else {_aac ._bd .GlyphNames [_bdd ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_adg :=make ([]int ,_aac ._dae );for _gfae :=0;_gfae < len (_adg );_gfae ++{_agc :=int (_aac .ReadSByte ());_adg [_gfae ]=_gfae +1+_agc ;};
_aac ._bd .GlyphNames =make ([]GlyphName ,len (_adg ));for _fcd :=0;_fcd < len (_aac ._bd .GlyphNames );_fcd ++{_bcff :=_fad [_adg [_fcd ]];_aac ._bd .GlyphNames [_fcd ]=_bcff ;};case 3.0:_eag .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_eag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_bfgc );};return nil ;};func (_ceg *ttfParser )ReadStr (length int )(string ,error ){_bddd :=make ([]byte ,length );
_ceea ,_ageef :=_ceg ._gcb .Read (_bddd );if _ageef !=nil {return "",_ageef ;}else if _ceea !=length {return "",_f .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_bddd ),nil ;};func (_ccgf *ttfParser )ReadSByte ()(_ceba int8 ){_g .Read (_ccgf ._gcb ,_g .BigEndian ,&_ceba );return _ceba ;};func NewFontFile2FromPdfObject (obj _b .PdfObject )(TtfType ,error ){obj =_b .TraceToDirectObject (obj );_bae ,_efc :=obj .(*_b .PdfObjectStream );
if !_efc {_eag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_b .ErrTypeError ;
};_egg ,_cca :=_b .DecodeStream (_bae );if _cca !=nil {return TtfType {},_cca ;};_cgd :=ttfParser {_gcb :_fe .NewReader (_egg )};return _cgd .Parse ();};func _acb ()StdFont {_fgb .Do (_cef );_daa :=Descriptor {Name :TimesItalicName ,Family :_cbac ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_daa ,_dcc );};func TtfParse (r _eg .ReadSeeker )(TtfType ,error ){_fdd :=&ttfParser {_gcb :r };return _fdd .Parse ()};func (_dea *TtfType )MakeEncoder ()(_ee .SimpleEncoder ,error ){_bfgf :=make (map[_ee .CharCode ]GlyphName );for _gfdb :=_ee .CharCode (0);
_gfdb <=256;_gfdb ++{_fcg :=rune (_gfdb );_ggeb ,_ffd :=_dea .Chars [_fcg ];if !_ffd {continue ;};var _bgaa GlyphName ;if int (_ggeb )>=0&&int (_ggeb )< len (_dea .GlyphNames ){_bgaa =_dea .GlyphNames [_ggeb ];}else {_ddf :=rune (_ggeb );if _bbf ,_fcgb :=_ee .RuneToGlyph (_ddf );
_fcgb {_bgaa =_bbf ;};};if _bgaa !=""{_bfgf [_gfdb ]=_bgaa ;};};if len (_bfgf )==0{_eag .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_dea ,_dea .Chars );
};return _ee .NewCustomSimpleTextEncoder (_bfgf ,nil );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ee .NewStandardEncoder ());};func (_ebcf *ttfParser )ReadULong ()(_ccdg uint32 ){_g .Read (_ebcf ._gcb ,_g .BigEndian ,&_ccdg );
return _ccdg ;};func (_gfc StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ff ,_afa :=_gfc ._bfc .Read (r );return _ff ,_afa ;};func _fbf ()StdFont {_ec .Do (_bfe );_ac :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ac ,_gfgd );};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};func (_ceae *TtfType )MakeToUnicode ()*_gd .CMap {_db :=make (map[_gd .CharCode ]rune );if len (_ceae .GlyphNames )==0{for _ccf :=range _ceae .Chars {_db [_gd .CharCode (_ccf )]=_ccf ;};return _gd .NewToUnicodeCMap (_db );};for _acbb ,_fee :=range _ceae .Chars {_eeg :=_gd .CharCode (_acbb );
_eac :=_ceae .GlyphNames [_fee ];_bbfd ,_bfb :=_ee .GlyphToRune (_eac );if !_bfb {_eag .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_acbb ,_eac );
_bbfd =_ee .MissingCodeRune ;};_db [_eeg ]=_bbfd ;};return _gd .NewToUnicodeCMap (_db );};