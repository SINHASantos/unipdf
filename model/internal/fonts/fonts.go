//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fc "bytes";_b "encoding/binary";_ce "errors";_d "fmt";_ff "github.com/unidoc/unipdf/v3/common";_eg "github.com/unidoc/unipdf/v3/core";_ef "github.com/unidoc/unipdf/v3/internal/cmap";_ceg "github.com/unidoc/unipdf/v3/internal/textencoding";
_a "io";_dc "os";_e "regexp";_c "sort";_f "strings";_cg "sync";);func (_gb *fontMap )read (_ccc StdFontName )(func ()StdFont ,bool ){_gb .Lock ();defer _gb .Unlock ();_fgb ,_gbe :=_gb ._abd [_ccc ];return _fgb ,_gbe ;};func (_fef StdFont )Name ()string {return string (_fef ._fgc .Name )};
func _dd ()StdFont {_ddf .Do (_ffc );_cab :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cab ,_efd );};func (_feb *ttfParser )ParseHhea ()error {if _fbbc :=_feb .Seek ("\u0068\u0068\u0065\u0061");_fbbc !=nil {return _fbbc ;};_feb .Skip (4+15*2);_feb ._cbdg =_feb .ReadUShort ();return nil ;};func (_dcg StdFont )Descriptor ()Descriptor {return _dcg ._fgc };
type fontMap struct{_cg .Mutex ;_abd map[StdFontName ]func ()StdFont ;};type FontWeight int ;func _cgg ()StdFont {_ddf .Do (_ffc );_dag :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dag ,_ace );};func _deg ()StdFont {_dde .Do (_efg );_fed :=Descriptor {Name :TimesBoldName ,Family :_bd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fed ,_cda );};func (_bf *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_gc :=MakeRuneCharSafeMap (_bf .Length ());_bf .Range (func (_cec rune ,_gf CharMetrics )(_cd bool ){_gc ._egf [_cec ]=_gf ;return false });return _gc ;};func (_dfd *TtfType )NewEncoder ()_ceg .TextEncoder {return _ceg .NewTrueTypeFontEncoder (_dfd .Chars )};
var _adg *RuneCharSafeMap ;func _efg (){_bbd =MakeRuneCharSafeMap (len (_gff ));_cda =MakeRuneCharSafeMap (len (_gff ));_fbbe =MakeRuneCharSafeMap (len (_gff ));_bfce =MakeRuneCharSafeMap (len (_gff ));for _fgbg ,_aa :=range _gff {_bbd .Write (_aa ,CharMetrics {Wx :float64 (_cdb [_fgbg ])});
_cda .Write (_aa ,CharMetrics {Wx :float64 (_aege [_fgbg ])});_fbbe .Write (_aa ,CharMetrics {Wx :float64 (_cdd [_fgbg ])});_bfce .Write (_aa ,CharMetrics {Wx :float64 (_cca [_fgbg ])});};};func (_ccg *TtfType )MakeToUnicode ()*_ef .CMap {_cde :=make (map[_ef .CharCode ]rune );
if len (_ccg .GlyphNames )==0{for _aed :=range _ccg .Chars {_cde [_ef .CharCode (_aed )]=_aed ;};return _ef .NewToUnicodeCMap (_cde );};for _bgg ,_dbc :=range _ccg .Chars {_bac :=_ef .CharCode (_bgg );_afbe :=_ccg .GlyphNames [_dbc ];_df ,_gecb :=_ceg .GlyphToRune (_afbe );
if !_gecb {_ff .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bgg ,_afbe );_df =_ceg .MissingCodeRune ;};_cde [_bac ]=_df ;
};return _ef .NewToUnicodeCMap (_cde );};type ttfParser struct{_ebd TtfType ;_bggb _a .ReadSeeker ;_fdg map[string ]uint32 ;_cbdg uint16 ;_fgg uint16 ;};func _dda ()StdFont {_dde .Do (_efg );_egb :=Descriptor {Name :TimesItalicName ,Family :_bd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_egb ,_bfce );};func (_fac *ttfParser )parseTTC ()(TtfType ,error ){_fac .Skip (2*2);_dcd :=_fac .ReadULong ();if _dcd < 1{return TtfType {},_ce .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_add :=_fac .ReadULong ();_ ,_ecad :=_fac ._bggb .Seek (int64 (_add ),_a .SeekStart );if _ecad !=nil {return TtfType {},_ecad ;};return _fac .Parse ();};const (_bd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_acfa *ttfParser )ParseHead ()error {if _ccca :=_acfa .Seek ("\u0068\u0065\u0061\u0064");_ccca !=nil {return _ccca ;};_acfa .Skip (3*4);_ccgd :=_acfa .ReadULong ();if _ccgd !=0x5F0F3CF5{_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_acfa );
};_acfa .Skip (2);_acfa ._ebd .UnitsPerEm =_acfa .ReadUShort ();_acfa .Skip (2*8);_acfa ._ebd .Xmin =_acfa .ReadShort ();_acfa ._ebd .Ymin =_acfa .ReadShort ();_acfa ._ebd .Xmax =_acfa .ReadShort ();_acfa ._ebd .Ymax =_acfa .ReadShort ();return nil ;};
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_ceb *ttfParser )ParsePost ()error {if _efdb :=_ceb .Seek ("\u0070\u006f\u0073\u0074");_efdb !=nil {return _efdb ;};_bdaf :=_ceb .Read32Fixed ();_ceb ._ebd .ItalicAngle =_ceb .Read32Fixed ();
_ceb ._ebd .UnderlinePosition =_ceb .ReadShort ();_ceb ._ebd .UnderlineThickness =_ceb .ReadShort ();_ceb ._ebd .IsFixedPitch =_ceb .ReadULong ()!=0;_ceb .ReadULong ();_ceb .ReadULong ();_ceb .ReadULong ();_ceb .ReadULong ();_ff .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_bdaf );
switch _bdaf {case 1.0:_ceb ._ebd .GlyphNames =_caf ;case 2.0:_bdaa :=int (_ceb .ReadUShort ());_aegd :=make ([]int ,_bdaa );_ceb ._ebd .GlyphNames =make ([]GlyphName ,_bdaa );_abdg :=-1;for _fcg :=0;_fcg < _bdaa ;_fcg ++{_dabd :=int (_ceb .ReadUShort ());
_aegd [_fcg ]=_dabd ;if _dabd <=0x7fff&&_dabd > _abdg {_abdg =_dabd ;};};var _gabf []GlyphName ;if _abdg >=len (_caf ){_gabf =make ([]GlyphName ,_abdg -len (_caf )+1);for _gbb :=0;_gbb < _abdg -len (_caf )+1;_gbb ++{_gbgg :=int (_ceb .readByte ());_deb ,_afc :=_ceb .ReadStr (_gbgg );
if _afc !=nil {return _afc ;};_gabf [_gbb ]=GlyphName (_deb );};};for _gdc :=0;_gdc < _bdaa ;_gdc ++{_gacc :=_aegd [_gdc ];if _gacc < len (_caf ){_ceb ._ebd .GlyphNames [_gdc ]=_caf [_gacc ];}else if _gacc >=len (_caf )&&_gacc <=32767{_ceb ._ebd .GlyphNames [_gdc ]=_gabf [_gacc -len (_caf )];
}else {_ceb ._ebd .GlyphNames [_gdc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_ffd :=make ([]int ,_ceb ._fgg );for _fdd :=0;_fdd < len (_ffd );_fdd ++{_aaa :=int (_ceb .ReadSByte ());_ffd [_fdd ]=_fdd +1+_aaa ;};_ceb ._ebd .GlyphNames =make ([]GlyphName ,len (_ffd ));
for _deagf :=0;_deagf < len (_ceb ._ebd .GlyphNames );_deagf ++{_febg :=_caf [_ffd [_deagf ]];_ceb ._ebd .GlyphNames [_deagf ]=_febg ;};case 3.0:_ff .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ff .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_bdaf );};return nil ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _ada (_gcb map[string ]uint32 )string {var _ebb []string ;
for _gg :=range _gcb {_ebb =append (_ebb ,_gg );};_c .Slice (_ebb ,func (_fbc ,_ebe int )bool {return _gcb [_ebb [_fbc ]]< _gcb [_ebb [_ebe ]]});_gab :=[]string {_d .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_gcb ))};
for _ ,_aac :=range _ebb {_gab =append (_gab ,_d .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_aac ,_gcb [_aac ]));};return _f .Join (_gab ,"\u000a");};var _egfa =&RuneCharSafeMap {_egf :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_adb *ttfParser )parseCmapSubtable31 (_dbfc int64 )error {_eebd :=make ([]rune ,0,8);_gac :=make ([]rune ,0,8);_gfc :=make ([]int16 ,0,8);_fbf :=make ([]uint16 ,0,8);_adb ._ebd .Chars =make (map[rune ]GID );_adb ._bggb .Seek (int64 (_adb ._fdg ["\u0063\u006d\u0061\u0070"])+_dbfc ,_a .SeekStart );
_gecg :=_adb .ReadUShort ();if _gecg !=4{_ff .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_gecg );
return nil ;};_adb .Skip (2*2);_cef :=int (_adb .ReadUShort ()/2);_adb .Skip (3*2);for _gbed :=0;_gbed < _cef ;_gbed ++{_gac =append (_gac ,rune (_adb .ReadUShort ()));};_adb .Skip (2);for _ega :=0;_ega < _cef ;_ega ++{_eebd =append (_eebd ,rune (_adb .ReadUShort ()));
};for _fbbd :=0;_fbbd < _cef ;_fbbd ++{_gfc =append (_gfc ,_adb .ReadShort ());};_ggd ,_ :=_adb ._bggb .Seek (int64 (0),_a .SeekCurrent );for _dee :=0;_dee < _cef ;_dee ++{_fbf =append (_fbf ,_adb .ReadUShort ());};for _gba :=0;_gba < _cef ;_gba ++{_eggc :=_eebd [_gba ];
_bca :=_gac [_gba ];_afg :=_gfc [_gba ];_gga :=_fbf [_gba ];if _gga > 0{_adb ._bggb .Seek (_ggd +2*int64 (_gba )+int64 (_gga ),_a .SeekStart );};for _bfd :=_eggc ;_bfd <=_bca ;_bfd ++{if _bfd ==0xFFFF{break ;};var _efe int32 ;if _gga > 0{_efe =int32 (_adb .ReadUShort ());
if _efe > 0{_efe +=int32 (_afg );};}else {_efe =_bfd +int32 (_afg );};if _efe >=65536{_efe -=65536;};if _efe > 0{_adb ._ebd .Chars [_bfd ]=GID (_efe );};};};return nil ;};func (_dge *ttfParser )ParseCmap ()error {var _bfdg int64 ;if _egba :=_dge .Seek ("\u0063\u006d\u0061\u0070");
_egba !=nil {return _egba ;};_dge .ReadUShort ();_gbc :=int (_dge .ReadUShort ());_gad :=int64 (0);_edb :=int64 (0);_facb :=int64 (0);for _bggg :=0;_bggg < _gbc ;_bggg ++{_aeec :=_dge .ReadUShort ();_egfe :=_dge .ReadUShort ();_bfdg =int64 (_dge .ReadULong ());
if _aeec ==3&&_egfe ==1{_edb =_bfdg ;}else if _aeec ==3&&_egfe ==10{_facb =_bfdg ;}else if _aeec ==1&&_egfe ==0{_gad =_bfdg ;};};if _gad !=0{if _gcc :=_dge .parseCmapVersion (_gad );_gcc !=nil {return _gcc ;};};if _edb !=0{if _bdb :=_dge .parseCmapSubtable31 (_edb );
_bdb !=nil {return _bdb ;};};if _facb !=0{if _cedd :=_dge .parseCmapVersion (_facb );_cedd !=nil {return _cedd ;};};if _edb ==0&&_gad ==0&&_facb ==0{_ff .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_bcef *ttfParser )ParseMaxp ()error {if _bbda :=_bcef .Seek ("\u006d\u0061\u0078\u0070");_bbda !=nil {return _bbda ;};_bcef .Skip (4);_bcef ._fgg =_bcef .ReadUShort ();return nil ;};type RuneCharSafeMap struct{_egf map[rune ]CharMetrics ;
_ad _cg .RWMutex ;};var _ddf _cg .Once ;func _gcd ()StdFont {_bgb .Do (_be );_eeg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_eeg ,_da );};func _cea ()StdFont {_ddf .Do (_ffc );_cbd :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cbd ,_gec );};func init (){RegisterStdFont (CourierName ,_eeb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_aee ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_gcd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_afd ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};type Font interface{Encoder ()_ceg .TextEncoder ;GetRuneMetrics (_af rune )(CharMetrics ,bool );};func (_gfd *ttfParser )Seek (tag string )error {_fda ,_caea :=_gfd ._fdg [tag ];if !_caea {return _d .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_gfd ._bggb .Seek (int64 (_fda ),_a .SeekStart );return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_bfc ,_fe :=_db .read (name );if !_fe {return StdFont {},false ;};return _bfc (),true ;};func IsStdFont (name StdFontName )bool {_ ,_abf :=_db .read (name );
return _abf };var _efd *RuneCharSafeMap ;func (_bcc *ttfParser )parseCmapSubtable10 (_dae int64 )error {if _bcc ._ebd .Chars ==nil {_bcc ._ebd .Chars =make (map[rune ]GID );};_bcc ._bggb .Seek (int64 (_bcc ._fdg ["\u0063\u006d\u0061\u0070"])+_dae ,_a .SeekStart );
var _cdcc ,_gcf uint32 ;_cegc :=_bcc .ReadUShort ();if _cegc < 8{_cdcc =uint32 (_bcc .ReadUShort ());_gcf =uint32 (_bcc .ReadUShort ());}else {_bcc .ReadUShort ();_cdcc =_bcc .ReadULong ();_gcf =_bcc .ReadULong ();};_ff .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cegc ,_cdcc ,_gcf );
if _cegc !=0{return _ce .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dea ,_aeb :=_bcc .ReadStr (256);if _aeb !=nil {return _aeb ;
};_dbd :=[]byte (_dea );for _fgca ,_bgc :=range _dbd {_bcc ._ebd .Chars [rune (_fgca )]=GID (_bgc );if _bgc !=0{_d .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fgca ,_bgc ,rune (_bgc ));
};};return nil ;};func _cbg ()StdFont {_baf :=_ceg .NewSymbolEncoder ();_adfd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_adfd ,_cce ,_baf );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_efda *ttfParser )ParseOS2 ()error {if _gae :=_efda .Seek ("\u004f\u0053\u002f\u0032");
_gae !=nil {return _gae ;};_cgae :=_efda .ReadUShort ();_efda .Skip (4*2);_efda .Skip (11*2+10+4*4+4);_ebde :=_efda .ReadUShort ();_efda ._ebd .Bold =(_ebde &32)!=0;_efda .Skip (2*2);_efda ._ebd .TypoAscender =_efda .ReadShort ();_efda ._ebd .TypoDescender =_efda .ReadShort ();
if _cgae >=2{_efda .Skip (3*2+2*4+2);_efda ._ebd .CapHeight =_efda .ReadShort ();}else {_efda ._ebd .CapHeight =0;};return nil ;};var _db =&fontMap {_abd :make (map[StdFontName ]func ()StdFont )};func (_beb *ttfParser )ReadStr (length int )(string ,error ){_fcee :=make ([]byte ,length );
_bef ,_bdc :=_beb ._bggb .Read (_fcee );if _bdc !=nil {return "",_bdc ;}else if _bef !=length {return "",_d .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fcee ),nil ;};func init (){RegisterStdFont (HelveticaName ,_cgg ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_dd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_cea ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_gef ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_caab *ttfParser )ReadULong ()(_cbde uint32 ){_b .Read (_caab ._bggb ,_b .BigEndian ,&_cbde );return _cbde ;
};func _afe ()StdFont {_dde .Do (_efg );_ege :=Descriptor {Name :TimesRomanName ,Family :_bd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ege ,_bbd );};func (_beec *ttfParser )parseCmapFormat6 ()error {_faa :=int (_beec .ReadUShort ());_dbeb :=int (_beec .ReadUShort ());_ff .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_beec ._ebd .String (),_faa ,_dbeb );
for _ead :=0;_ead < _dbeb ;_ead ++{_acag :=GID (_beec .ReadUShort ());_beec ._ebd .Chars [rune (_ead +_faa )]=_acag ;};return nil ;};var _cdb =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _fbbe *RuneCharSafeMap ;func _be (){const _ced =600;_cdc =MakeRuneCharSafeMap (len (_gff ));for _ ,_eag :=range _gff {_cdc .Write (_eag ,CharMetrics {Wx :_ced });};_fb =_cdc .Copy ();_adg =_cdc .Copy ();_da =_cdc .Copy ();};func (_cc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_cc ._ad .Lock ();
defer _cc ._ad .Unlock ();_cc ._egf [b ]=r ;};func TtfParse (r _a .ReadSeeker )(TtfType ,error ){_ebg :=&ttfParser {_bggb :r };return _ebg .Parse ()};func _caa ()StdFont {_fag :=_ceg .NewZapfDingbatsEncoder ();_cag :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_cag ,_egfa ,_fag );};func (_gadc *ttfParser )Read32Fixed ()float64 {_adbe :=float64 (_gadc .ReadShort ());_cgad :=float64 (_gadc .ReadUShort ())/65536.0;return _adbe +_cgad ;};func (_ade *RuneCharSafeMap )Range (f func (_ab rune ,_fg CharMetrics )(_dgb bool )){_ade ._ad .RLock ();
defer _ade ._ad .RUnlock ();for _fa ,_ae :=range _ade ._egf {if f (_fa ,_ae ){break ;};};};func _ffc (){_ace =MakeRuneCharSafeMap (len (_gff ));_efd =MakeRuneCharSafeMap (len (_gff ));for _egc ,_eea :=range _gff {_ace .Write (_eea ,CharMetrics {Wx :float64 (_dbf [_egc ])});
_efd .Write (_eea ,CharMetrics {Wx :float64 (_cgb [_egc ])});};_gec =_ace .Copy ();_fbe =_efd .Copy ();};func _eeb ()StdFont {_bgb .Do (_be );_bcd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bcd ,_cdc );};func init (){RegisterStdFont (SymbolName ,_cbg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_caa );};func (_adcf *ttfParser )ParseHmtx ()error {if _afaf :=_adcf .Seek ("\u0068\u006d\u0074\u0078");_afaf !=nil {return _afaf ;};_adcf ._ebd .Widths =make ([]uint16 ,0,8);for _bbf :=uint16 (0);_bbf < _adcf ._cbdg ;
_bbf ++{_adcf ._ebd .Widths =append (_adcf ._ebd .Widths ,_adcf .ReadUShort ());_adcf .Skip (2);};if _adcf ._cbdg < _adcf ._fgg &&_adcf ._cbdg > 0{_dcc :=_adcf ._ebd .Widths [_adcf ._cbdg -1];for _ecb :=_adcf ._cbdg ;_ecb < _adcf ._fgg ;_ecb ++{_adcf ._ebd .Widths =append (_adcf ._ebd .Widths ,_dcc );
};};return nil ;};func NewFontFile2FromPdfObject (obj _eg .PdfObject )(TtfType ,error ){obj =_eg .TraceToDirectObject (obj );_fcd ,_aea :=obj .(*_eg .PdfObjectStream );if !_aea {_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_eg .ErrTypeError ;};_ceda ,_adcd :=_eg .DecodeStream (_fcd );if _adcd !=nil {return TtfType {},_adcd ;};_ga :=ttfParser {_bggb :_fc .NewReader (_ceda )};return _ga .Parse ();};func _afd ()StdFont {_bgb .Do (_be );_abb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_abb ,_adg );};type StdFontName string ;func (_addg *ttfParser )Skip (n int ){_addg ._bggb .Seek (int64 (n ),_a .SeekCurrent )};func init (){RegisterStdFont (TimesRomanName ,_afe ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_deg ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_dda ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_dcfd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _bfce *RuneCharSafeMap ;func (_ba *RuneCharSafeMap )Length ()int {_ba ._ad .RLock ();defer _ba ._ad .RUnlock ();return len (_ba ._egf );};func (_bad *ttfParser )ParseName ()error {if _gge :=_bad .Seek ("\u006e\u0061\u006d\u0065");_gge !=nil {return _gge ;
};_aebg ,_ :=_bad ._bggb .Seek (0,_a .SeekCurrent );_bad ._ebd .PostScriptName ="";_bad .Skip (2);_agbg :=_bad .ReadUShort ();_fae :=_bad .ReadUShort ();for _aad :=uint16 (0);_aad < _agbg &&_bad ._ebd .PostScriptName =="";_aad ++{_bad .Skip (3*2);_daf :=_bad .ReadUShort ();
_abaa :=_bad .ReadUShort ();_afeb :=_bad .ReadUShort ();if _daf ==6{_bad ._bggb .Seek (_aebg +int64 (_fae )+int64 (_afeb ),_a .SeekStart );_dcb ,_ecf :=_bad .ReadStr (int (_abaa ));if _ecf !=nil {return _ecf ;};_dcb =_f .Replace (_dcb ,"\u0000","",-1);
_ggad ,_ecf :=_e .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _ecf !=nil {return _ecf ;};_bad ._ebd .PostScriptName =_ggad .ReplaceAllString (_dcb ,"");};};if _bad ._ebd .PostScriptName ==""{_ff .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););var _caf =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func TtfParseFile (fileStr string )(TtfType ,error ){_eaf ,_ccb :=_dc .Open (fileStr );if _ccb !=nil {return TtfType {},_ccb ;};defer _eaf .Close ();return TtfParse (_eaf );};var _bbd *RuneCharSafeMap ;var _cca =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _cdd =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _gef ()StdFont {_ddf .Do (_ffc );_bfb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bfb ,_fbe );};var _gff =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_dg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_dg ._ad .RLock ();defer _dg ._ad .RUnlock ();_ca ,_ec :=_dg ._egf [b ];return _ca ,_ec ;};func (_bcg *ttfParser )parseCmapFormat0 ()error {_fba ,_cbc :=_bcg .ReadStr (256);if _cbc !=nil {return _cbc ;
};_bdg :=[]byte (_fba );_ff .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bcg ._ebd .String (),_fba ,_bdg );
for _ede ,_deag :=range _bdg {_bcg ._ebd .Chars [rune (_ede )]=GID (_deag );};return nil ;};func _aee ()StdFont {_bgb .Do (_be );_ed :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ed ,_fb );};var _aege =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_bfbf *ttfParser )ParseComponents ()error {if _aca :=_bfbf .ParseHead ();_aca !=nil {return _aca ;};if _dce :=_bfbf .ParseHhea ();_dce !=nil {return _dce ;};if _cfd :=_bfbf .ParseMaxp ();_cfd !=nil {return _cfd ;};if _ecd :=_bfbf .ParseHmtx ();_ecd !=nil {return _ecd ;
};if _ ,_afa :=_bfbf ._fdg ["\u006e\u0061\u006d\u0065"];_afa {if _fgcf :=_bfbf .ParseName ();_fgcf !=nil {return _fgcf ;};};if _ ,_cdf :=_bfbf ._fdg ["\u004f\u0053\u002f\u0032"];_cdf {if _eda :=_bfbf .ParseOS2 ();_eda !=nil {return _eda ;};};if _ ,_aag :=_bfbf ._fdg ["\u0070\u006f\u0073\u0074"];
_aag {if _acf :=_bfbf .ParsePost ();_acf !=nil {return _acf ;};};if _ ,_aba :=_bfbf ._fdg ["\u0063\u006d\u0061\u0070"];_aba {if _bed :=_bfbf .ParseCmap ();_bed !=nil {return _bed ;};};return nil ;};func (_fcb *ttfParser )parseCmapFormat12 ()error {_ddea :=_fcb .ReadULong ();
_ff .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_fcb ._ebd .String (),_ddea );for _dbef :=uint32 (0);_dbef < _ddea ;
_dbef ++{_acd :=_fcb .ReadULong ();_dga :=_fcb .ReadULong ();_cga :=_fcb .ReadULong ();if _acd > 0x0010FFFF||(0xD800<=_acd &&_acd <=0xDFFF){return _ce .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _dga < _acd ||_dga > 0x0010FFFF||(0xD800<=_dga &&_dga <=0xDFFF){return _ce .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fce :=_acd ;_fce <=_dga ;
_fce ++{if _fce > 0x10FFFF{_ff .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_fcb ._ebd .Chars [rune (_fce )]=GID (_cga );_cga ++;};};return nil ;};var _ace *RuneCharSafeMap ;func _dcfd ()StdFont {_dde .Do (_efg );_cbgg :=Descriptor {Name :TimesBoldItalicName ,Family :_bd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_cbgg ,_fbbe );};type CharMetrics struct{Wx float64 ;Wy float64 ;};type GID =_ceg .GID ;var _da *RuneCharSafeMap ;func (_afb StdFont )Encoder ()_ceg .TextEncoder {return _afb ._bag };type StdFont struct{_fgc Descriptor ;_ee *RuneCharSafeMap ;
_bag _ceg .TextEncoder ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ceg .NewStandardEncoder ());};func (_gbdg *TtfType )MakeEncoder ()(_ceg .SimpleEncoder ,error ){_ccd :=make (map[_ceg .CharCode ]GlyphName );
for _egg :=_ceg .CharCode (0);_egg <=256;_egg ++{_bcf :=rune (_egg );_dca ,_cddf :=_gbdg .Chars [_bcf ];if !_cddf {continue ;};var _bee GlyphName ;if int (_dca )>=0&&int (_dca )< len (_gbdg .GlyphNames ){_bee =_gbdg .GlyphNames [_dca ];}else {_acef :=rune (_dca );
if _bff ,_bda :=_ceg .RuneToGlyph (_acef );_bda {_bee =_bff ;};};if _bee !=""{_ccd [_egg ]=_bee ;};};if len (_ccd )==0{_ff .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gbdg ,_gbdg .Chars );
};return _ceg .NewCustomSimpleTextEncoder (_ccd ,nil );};var _gec *RuneCharSafeMap ;func (_ea CharMetrics )String ()string {return _d .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ea .Wx ,_ea .Wy );};func (_adc StdFont )GetMetricsTable ()*RuneCharSafeMap {return _adc ._ee };
var _bgb _cg .Once ;func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ceg .TextEncoder )StdFont {var _gd rune =0xA0;if _ ,_bc :=metrics .Read (_gd );!_bc {_ffe ,_ :=metrics .Read (0x20);metrics .Write (_gd ,_ffe );};return StdFont {_fgc :desc ,_ee :metrics ,_bag :encoder };
};func (_aead *ttfParser )readByte ()(_abab uint8 ){_b .Read (_aead ._bggb ,_b .BigEndian ,&_abab );return _abab ;};var _cda *RuneCharSafeMap ;func (_fd StdFont )ToPdfObject ()_eg .PdfObject {_dba :=_eg .MakeDict ();_dba .Set ("\u0054\u0079\u0070\u0065",_eg .MakeName ("\u0046\u006f\u006e\u0074"));
_dba .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eg .MakeName ("\u0054\u0079\u0070e\u0031"));_dba .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_eg .MakeName (_fd .Name ()));_dba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fd ._bag .ToPdfObject ());
return _eg .MakeIndirectObject (_dba );};func (_eb *fontMap )write (_adf StdFontName ,_fcc func ()StdFont ){_eb .Lock ();defer _eb .Unlock ();_eb ._abd [_adf ]=_fcc ;};type GlyphName =_ceg .GlyphName ;var _fbe *RuneCharSafeMap ;var _cgb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_aeg StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gbd ,_cb :=_aeg ._ee .Read (r );return _gbd ,_cb ;};var _dbf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_cgc *ttfParser )ReadShort ()(_fgbc int16 ){_b .Read (_cgc ._bggb ,_b .BigEndian ,&_fgbc );return _fgbc ;};var _fb *RuneCharSafeMap ;func (_gccf *ttfParser )ReadUShort ()(_edg uint16 ){_b .Read (_gccf ._bggb ,_b .BigEndian ,&_edg );return _edg ;};
var _cdc *RuneCharSafeMap ;var _cce =&RuneCharSafeMap {_egf :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ge :=_db .read (name );_ge {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_db .write (name ,fnc );for _ ,_ac :=range aliases {RegisterStdFont (_ac ,fnc );};};var _ Font =StdFont {};func (_bce *TtfType )String ()string {return _d .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bce .PostScriptName ,_bce .UnitsPerEm ,_bce .Bold ,_bce .ItalicAngle ,_bce .CapHeight ,len (_bce .Chars ),len (_bce .GlyphNames ));
};func (_dab *ttfParser )Parse ()(TtfType ,error ){_ag ,_aec :=_dab .ReadStr (4);if _aec !=nil {return TtfType {},_aec ;};if _ag =="\u0074\u0074\u0063\u0066"{return _dab .parseTTC ();}else if _ag !="\u0000\u0001\u0000\u0000"&&_ag !="\u0074\u0072\u0075\u0065"{_ff .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_ag );
};_cee :=int (_dab .ReadUShort ());_dab .Skip (3*2);_dab ._fdg =make (map[string ]uint32 );var _adff string ;for _gbg :=0;_gbg < _cee ;_gbg ++{_adff ,_aec =_dab .ReadStr (4);if _aec !=nil {return TtfType {},_aec ;};_dab .Skip (4);_bbc :=_dab .ReadULong ();
_dab .Skip (4);_dab ._fdg [_adff ]=_bbc ;};_ff .Log .Trace (_ada (_dab ._fdg ));if _aec =_dab .ParseComponents ();_aec !=nil {return TtfType {},_aec ;};return _dab ._ebd ,nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_egf :make (map[rune ]CharMetrics ,length )};
};func (_fcce *ttfParser )ReadSByte ()(_facf int8 ){_b .Read (_fcce ._bggb ,_b .BigEndian ,&_facf );return _facf ;};var _dde _cg .Once ;func (_fdc *ttfParser )parseCmapVersion (_gcda int64 )error {_ff .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gcda );
if _fdc ._ebd .Chars ==nil {_fdc ._ebd .Chars =make (map[rune ]GID );};_fdc ._bggb .Seek (int64 (_fdc ._fdg ["\u0063\u006d\u0061\u0070"])+_gcda ,_a .SeekStart );var _dad ,_eagd uint32 ;_fbd :=_fdc .ReadUShort ();if _fbd < 8{_dad =uint32 (_fdc .ReadUShort ());
_eagd =uint32 (_fdc .ReadUShort ());}else {_fdc .ReadUShort ();_dad =_fdc .ReadULong ();_eagd =_fdc .ReadULong ();};_ff .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_fbd ,_dad ,_eagd );
switch _fbd {case 0:return _fdc .parseCmapFormat0 ();case 6:return _fdc .parseCmapFormat6 ();case 12:return _fdc .parseCmapFormat12 ();default:_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_fbd );
return nil ;};};