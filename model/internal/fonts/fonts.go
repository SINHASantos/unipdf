//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_cg "bytes";_fb "encoding/binary";_c "errors";_fg "fmt";_ad "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/core";_ab "github.com/unidoc/unipdf/v3/internal/cmap";_a "github.com/unidoc/unipdf/v3/internal/textencoding";
_g "io";_bf "os";_fd "regexp";_d "sort";_b "strings";_fe "sync";);func (_fee StdFont )Descriptor ()Descriptor {return _fee ._dgd };func (_bb CharMetrics )String ()string {return _fg .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bb .Wx ,_bb .Wy );
};type StdFont struct{_dgd Descriptor ;_aea *RuneCharSafeMap ;_fa _a .TextEncoder ;};func (_fef *TtfType )String ()string {return _fg .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fef .PostScriptName ,_fef .UnitsPerEm ,_fef .Bold ,_fef .ItalicAngle ,_fef .CapHeight ,len (_fef .Chars ),len (_fef .GlyphNames ));
};func (_fdag *ttfParser )ParseHmtx ()error {if _gab :=_fdag .Seek ("\u0068\u006d\u0074\u0078");_gab !=nil {return _gab ;};_fdag ._edc .Widths =make ([]uint16 ,0,8);for _agee :=uint16 (0);_agee < _fdag ._cfc ;_agee ++{_fdag ._edc .Widths =append (_fdag ._edc .Widths ,_fdag .ReadUShort ());
_fdag .Skip (2);};if _fdag ._cfc < _fdag ._aec &&_fdag ._cfc > 0{_fdfa :=_fdag ._edc .Widths [_fdag ._cfc -1];for _bea :=_fdag ._cfc ;_bea < _fdag ._aec ;_bea ++{_fdag ._edc .Widths =append (_fdag ._edc .Widths ,_fdfa );};};return nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _gaf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _ccg =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _gcg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func TtfParseFile (fileStr string )(TtfType ,error ){_bff ,_be :=_bf .Open (fileStr );if _be !=nil {return TtfType {},_be ;};defer _bff .Close ();return TtfParse (_bff );};var _cab =&RuneCharSafeMap {_e :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_a .NewStandardEncoder ());};func _eeb ()StdFont {_adb .Do (_fag );_eff :=Descriptor {Name :TimesRomanName ,Family :_caaa ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_eff ,_cgf );};var _fbba =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _baa ()StdFont {_db :=_a .NewSymbolEncoder ();_fac :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_fac ,_cab ,_db );};var _ Font =StdFont {};func (_eef *TtfType )NewEncoder ()_a .TextEncoder {return _a .NewTrueTypeFontEncoder (_eef .Chars )};var _aeac *RuneCharSafeMap ;func (_afe *ttfParser )ParseMaxp ()error {if _acga :=_afe .Seek ("\u006d\u0061\u0078\u0070");
_acga !=nil {return _acga ;};_afe .Skip (4);_afe ._aec =_afe .ReadUShort ();return nil ;};var _acc *RuneCharSafeMap ;func IsStdFont (name StdFontName )bool {_ ,_eb :=_fbe .read (name );return _eb };var _ff =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_ged *ttfParser )ParseHead ()error {if _fdgf :=_ged .Seek ("\u0068\u0065\u0061\u0064");_fdgf !=nil {return _fdgf ;};_ged .Skip (3*4);_gcd :=_ged .ReadULong ();if _gcd !=0x5F0F3CF5{_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ged );
};_ged .Skip (2);_ged ._edc .UnitsPerEm =_ged .ReadUShort ();_ged .Skip (2*8);_ged ._edc .Xmin =_ged .ReadShort ();_ged ._edc .Ymin =_ged .ReadShort ();_ged ._edc .Xmax =_ged .ReadShort ();_ged ._edc .Ymax =_ged .ReadShort ();return nil ;};func _ba (){const _gdd =600;
_abf =MakeRuneCharSafeMap (len (_ff ));for _ ,_cc :=range _ff {_abf .Write (_cc ,CharMetrics {Wx :_gdd });};_ac =_abf .Copy ();_fdgd =_abf .Copy ();_bdd =_abf .Copy ();};func (_cbg *TtfType )MakeEncoder ()(_a .SimpleEncoder ,error ){_bc :=make (map[_a .CharCode ]GlyphName );
for _fca :=_a .CharCode (0);_fca <=256;_fca ++{_gbgg :=rune (_fca );_ead ,_cf :=_cbg .Chars [_gbgg ];if !_cf {continue ;};var _gfbfa GlyphName ;if int (_ead )>=0&&int (_ead )< len (_cbg .GlyphNames ){_gfbfa =_cbg .GlyphNames [_ead ];}else {_ffg :=rune (_ead );
if _abb ,_adf :=_a .RuneToGlyph (_ffg );_adf {_gfbfa =_abb ;};};if _gfbfa !=""{_bc [_fca ]=_gfbfa ;};};if len (_bc )==0{_ad .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_cbg ,_cbg .Chars );
};return _a .NewCustomSimpleTextEncoder (_bc ,nil );};var _cea _fe .Once ;func _efb ()StdFont {_cea .Do (_ba );_gegg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gegg ,_bdd );};func _egc ()StdFont {_cea .Do (_ba );_cd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cd ,_fdgd );};type ttfParser struct{_edc TtfType ;_faa _g .ReadSeeker ;_fab map[string ]uint32 ;_cfc uint16 ;_aec uint16 ;};var _df =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _ccf ()StdFont {_adb .Do (_fag );_aaa :=Descriptor {Name :TimesBoldName ,Family :_caaa ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_aaa ,_gcb );};var _agc =&RuneCharSafeMap {_e :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func init (){RegisterStdFont (CourierName ,_ga ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_ebd ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_efb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_egc ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ede *ttfParser )ReadULong ()(_bde uint32 ){_fb .Read (_ede ._faa ,_fb .BigEndian ,&_bde );return _bde ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func _bae ()StdFont {_fegf .Do (_gfd );_ecd :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ecd ,_gfbf );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_dcg *ttfParser )ReadStr (length int )(string ,error ){_ecag :=make ([]byte ,length );_efa ,_adee :=_dcg ._faa .Read (_ecag );
if _adee !=nil {return "",_adee ;}else if _efa !=length {return "",_fg .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_ecag ),nil ;};
var _fba *RuneCharSafeMap ;func (_ggde *ttfParser )parseTTC ()(TtfType ,error ){_ggde .Skip (2*2);_ded :=_ggde .ReadULong ();if _ded < 1{return TtfType {},_c .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_eae :=_ggde .ReadULong ();_ ,_aaae :=_ggde ._faa .Seek (int64 (_eae ),_g .SeekStart );if _aaae !=nil {return TtfType {},_aaae ;};return _ggde .Parse ();};func (_aaeb *ttfParser )ParseOS2 ()error {if _gbbg :=_aaeb .Seek ("\u004f\u0053\u002f\u0032");_gbbg !=nil {return _gbbg ;
};_gabf :=_aaeb .ReadUShort ();_aaeb .Skip (4*2);_aaeb .Skip (11*2+10+4*4+4);_ggaa :=_aaeb .ReadUShort ();_aaeb ._edc .Bold =(_ggaa &32)!=0;_aaeb .Skip (2*2);_aaeb ._edc .TypoAscender =_aaeb .ReadShort ();_aaeb ._edc .TypoDescender =_aaeb .ReadShort ();
if _gabf >=2{_aaeb .Skip (3*2+2*4+2);_aaeb ._edc .CapHeight =_aaeb .ReadShort ();}else {_aaeb ._edc .CapHeight =0;};return nil ;};var _abf *RuneCharSafeMap ;func (_fdb *ttfParser )parseCmapSubtable10 (_efg int64 )error {if _fdb ._edc .Chars ==nil {_fdb ._edc .Chars =make (map[rune ]GID );
};_fdb ._faa .Seek (int64 (_fdb ._fab ["\u0063\u006d\u0061\u0070"])+_efg ,_g .SeekStart );var _dbdf ,_dfe uint32 ;_gac :=_fdb .ReadUShort ();if _gac < 8{_dbdf =uint32 (_fdb .ReadUShort ());_dfe =uint32 (_fdb .ReadUShort ());}else {_fdb .ReadUShort ();_dbdf =_fdb .ReadULong ();
_dfe =_fdb .ReadULong ();};_ad .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_gac ,_dbdf ,_dfe );
if _gac !=0{return _c .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gcgb ,_cabe :=_fdb .ReadStr (256);if _cabe !=nil {return _cabe ;
};_eag :=[]byte (_gcgb );for _ccfc ,_cbgb :=range _eag {_fdb ._edc .Chars [rune (_ccfc )]=GID (_cbgb );if _cbgb !=0{_fg .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_ccfc ,_cbgb ,rune (_cbgb ));
};};return nil ;};func (_ef *RuneCharSafeMap )Length ()int {_ef ._ea .RLock ();defer _ef ._ea .RUnlock ();return len (_ef ._e );};func init (){RegisterStdFont (HelveticaName ,_fbd ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_bae ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_bggg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_cbc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_bgg StdFont )ToPdfObject ()_ca .PdfObject {_fdd :=_ca .MakeDict ();_fdd .Set ("\u0054\u0079\u0070\u0065",_ca .MakeName ("\u0046\u006f\u006e\u0074"));_fdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ca .MakeName ("\u0054\u0079\u0070e\u0031"));
_fdd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ca .MakeName (_bgg .Name ()));_fdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgg ._fa .ToPdfObject ());return _ca .MakeIndirectObject (_fdd );};func _fag (){_cgf =MakeRuneCharSafeMap (len (_ff ));
_gcb =MakeRuneCharSafeMap (len (_ff ));_fba =MakeRuneCharSafeMap (len (_ff ));_aeac =MakeRuneCharSafeMap (len (_ff ));for _egb ,_bdf :=range _ff {_cgf .Write (_bdf ,CharMetrics {Wx :float64 (_gaf [_egb ])});_gcb .Write (_bdf ,CharMetrics {Wx :float64 (_fbba [_egb ])});
_fba .Write (_bdf ,CharMetrics {Wx :float64 (_ccg [_egb ])});_aeac .Write (_bdf ,CharMetrics {Wx :float64 (_gcg [_egb ])});};};func (_ffgb *ttfParser )ParseHhea ()error {if _dec :=_ffgb .Seek ("\u0068\u0068\u0065\u0061");_dec !=nil {return _dec ;};_ffgb .Skip (4+15*2);
_ffgb ._cfc =_ffgb .ReadUShort ();return nil ;};func (_dda *ttfParser )Parse ()(TtfType ,error ){_acg ,_gec :=_dda .ReadStr (4);if _gec !=nil {return TtfType {},_gec ;};if _acg =="\u0074\u0074\u0063\u0066"{return _dda .parseTTC ();}else if _acg !="\u0000\u0001\u0000\u0000"&&_acg !="\u0074\u0072\u0075\u0065"{_ad .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_acg );
};_dae :=int (_dda .ReadUShort ());_dda .Skip (3*2);_dda ._fab =make (map[string ]uint32 );var _abbf string ;for _egg :=0;_egg < _dae ;_egg ++{_abbf ,_gec =_dda .ReadStr (4);if _gec !=nil {return TtfType {},_gec ;};_dda .Skip (4);_abd :=_dda .ReadULong ();
_dda .Skip (4);_dda ._fab [_abbf ]=_abd ;};_ad .Log .Trace (_fcc (_dda ._fab ));if _gec =_dda .ParseComponents ();_gec !=nil {return TtfType {},_gec ;};return _dda ._edc ,nil ;};func (_ecbf *ttfParser )Skip (n int ){_ecbf ._faa .Seek (int64 (n ),_g .SeekCurrent )};
var _cgf *RuneCharSafeMap ;func (_efe *ttfParser )parseCmapFormat12 ()error {_bgcf :=_efe .ReadULong ();_ad .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_efe ._edc .String (),_bgcf );
for _aeg :=uint32 (0);_aeg < _bgcf ;_aeg ++{_dbdb :=_efe .ReadULong ();_edb :=_efe .ReadULong ();_ddd :=_efe .ReadULong ();if _dbdb > 0x0010FFFF||(0xD800<=_dbdb &&_dbdb <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _edb < _dbdb ||_edb > 0x0010FFFF||(0xD800<=_edb &&_edb <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bedc :=_dbdb ;_bedc <=_edb ;
_bedc ++{if _bedc > 0x10FFFF{_ad .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_efe ._edc .Chars [rune (_bedc )]=GID (_ddd );_ddd ++;};};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _a .TextEncoder )StdFont {var _fgf rune =0xA0;if _ ,_da :=metrics .Read (_fgf );!_da {_ge ,_ :=metrics .Read (0x20);
metrics .Write (_fgf ,_ge );};return StdFont {_dgd :desc ,_aea :metrics ,_fa :encoder };};func (_eede *ttfParser )parseCmapFormat6 ()error {_egga :=int (_eede .ReadUShort ());_baaf :=int (_eede .ReadUShort ());_ad .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_eede ._edc .String (),_egga ,_baaf );
for _gacf :=0;_gacf < _baaf ;_gacf ++{_adg :=GID (_eede .ReadUShort ());_eede ._edc .Chars [rune (_gacf +_egga )]=_adg ;};return nil ;};func (_daef *ttfParser )readByte ()(_acb uint8 ){_fb .Read (_daef ._faa ,_fb .BigEndian ,&_acb );return _acb ;};type Descriptor struct{Name StdFontName ;
Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_aaff *ttfParser )ReadSByte ()(_fed int8 ){_fb .Read (_aaff ._faa ,_fb .BigEndian ,&_fed );
return _fed ;};func _bggg ()StdFont {_fegf .Do (_gfd );_aa :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_aa ,_egdg );};func init (){RegisterStdFont (SymbolName ,_baa ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dbf );};var _gcb *RuneCharSafeMap ;func (_bg StdFont )Name ()string {return string (_bg ._dgd .Name )};func (_geg StdFont )Encoder ()_a .TextEncoder {return _geg ._fa };var _gag *RuneCharSafeMap ;var _egdg *RuneCharSafeMap ;
func init (){RegisterStdFont (TimesRomanName ,_eeb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_ccf ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fgfc ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cca ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _cca ()StdFont {_adb .Do (_fag );_bfg :=Descriptor {Name :TimesBoldItalicName ,Family :_caaa ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_bfg ,_fba );};var _fbe =&fontMap {_gda :make (map[StdFontName ]func ()StdFont )};func (_dbfc *ttfParser )ParseComponents ()error {if _eca :=_dbfc .ParseHead ();_eca !=nil {return _eca ;};if _gde :=_dbfc .ParseHhea ();_gde !=nil {return _gde ;
};if _cdef :=_dbfc .ParseMaxp ();_cdef !=nil {return _cdef ;};if _dbd :=_dbfc .ParseHmtx ();_dbd !=nil {return _dbd ;};if _ ,_bed :=_dbfc ._fab ["\u006e\u0061\u006d\u0065"];_bed {if _egbf :=_dbfc .ParseName ();_egbf !=nil {return _egbf ;};};if _ ,_agb :=_dbfc ._fab ["\u004f\u0053\u002f\u0032"];
_agb {if _eabb :=_dbfc .ParseOS2 ();_eabb !=nil {return _eabb ;};};if _ ,_eed :=_dbfc ._fab ["\u0070\u006f\u0073\u0074"];_eed {if _dc :=_dbfc .ParsePost ();_dc !=nil {return _dc ;};};if _ ,_ccfg :=_dbfc ._fab ["\u0063\u006d\u0061\u0070"];_ccfg {if _ccff :=_dbfc .ParseCmap ();
_ccff !=nil {return _ccff ;};};return nil ;};var _fegf _fe .Once ;func (_cac *ttfParser )ParseName ()error {if _ccd :=_cac .Seek ("\u006e\u0061\u006d\u0065");_ccd !=nil {return _ccd ;};_gfgg ,_ :=_cac ._faa .Seek (0,_g .SeekCurrent );_cac ._edc .PostScriptName ="";
_cac .Skip (2);_gaga :=_cac .ReadUShort ();_eggd :=_cac .ReadUShort ();for _ggc :=uint16 (0);_ggc < _gaga &&_cac ._edc .PostScriptName =="";_ggc ++{_cac .Skip (3*2);_aeae :=_cac .ReadUShort ();_eefe :=_cac .ReadUShort ();_acgd :=_cac .ReadUShort ();if _aeae ==6{_cac ._faa .Seek (_gfgg +int64 (_eggd )+int64 (_acgd ),_g .SeekStart );
_ddce ,_bfff :=_cac .ReadStr (int (_eefe ));if _bfff !=nil {return _bfff ;};_ddce =_b .Replace (_ddce ,"\u0000","",-1);_afc ,_bfff :=_fd .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _bfff !=nil {return _bfff ;
};_cac ._edc .PostScriptName =_afc .ReplaceAllString (_ddce ,"");};};if _cac ._edc .PostScriptName ==""{_ad .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_gge *ttfParser )ReadShort ()(_ecagg int16 ){_fb .Read (_gge ._faa ,_fb .BigEndian ,&_ecagg );return _ecagg ;};type FontWeight int ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;
TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_fgc *fontMap )read (_fdg StdFontName )(func ()StdFont ,bool ){_fgc .Lock ();
defer _fgc .Unlock ();_afg ,_ed :=_fgc ._gda [_fdg ];return _afg ,_ed ;};type GlyphName =_a .GlyphName ;type RuneCharSafeMap struct{_e map[rune ]CharMetrics ;_ea _fe .RWMutex ;};func (_bcd *ttfParser )ParseCmap ()error {var _ebc int64 ;if _adae :=_bcd .Seek ("\u0063\u006d\u0061\u0070");
_adae !=nil {return _adae ;};_bcd .ReadUShort ();_dfee :=int (_bcd .ReadUShort ());_gfdc :=int64 (0);_gceb :=int64 (0);_eda :=int64 (0);for _dgc :=0;_dgc < _dfee ;_dgc ++{_ggb :=_bcd .ReadUShort ();_daf :=_bcd .ReadUShort ();_ebc =int64 (_bcd .ReadULong ());
if _ggb ==3&&_daf ==1{_gceb =_ebc ;}else if _ggb ==3&&_daf ==10{_eda =_ebc ;}else if _ggb ==1&&_daf ==0{_gfdc =_ebc ;};};if _gfdc !=0{if _cafg :=_bcd .parseCmapVersion (_gfdc );_cafg !=nil {return _cafg ;};};if _gceb !=0{if _eaa :=_bcd .parseCmapSubtable31 (_gceb );
_eaa !=nil {return _eaa ;};};if _eda !=0{if _deb :=_bcd .parseCmapVersion (_eda );_deb !=nil {return _deb ;};};if _gceb ==0&&_gfdc ==0&&_eda ==0{_ad .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_e :make (map[rune ]CharMetrics ,length )};};func NewFontFile2FromPdfObject (obj _ca .PdfObject )(TtfType ,error ){obj =_ca .TraceToDirectObject (obj );_ecg ,_agg :=obj .(*_ca .PdfObjectStream );
if !_agg {_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_ca .ErrTypeError ;
};_gddb ,_gbb :=_ca .DecodeStream (_ecg );if _gbb !=nil {return TtfType {},_gbb ;};_edcf :=ttfParser {_faa :_cg .NewReader (_gddb )};return _edcf .Parse ();};type fontMap struct{_fe .Mutex ;_gda map[StdFontName ]func ()StdFont ;};func _fcc (_cag map[string ]uint32 )string {var _aggc []string ;
for _bfd :=range _cag {_aggc =append (_aggc ,_bfd );};_d .Slice (_aggc ,func (_dbe ,_dgb int )bool {return _cag [_aggc [_dbe ]]< _cag [_aggc [_dgb ]]});_aae :=[]string {_fg .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cag ))};
for _ ,_ecdg :=range _aggc {_aae =append (_aae ,_fg .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ecdg ,_cag [_ecdg ]));};return _b .Join (_aae ,"\u000a");};func TtfParse (r _g .ReadSeeker )(TtfType ,error ){_aaf :=&ttfParser {_faa :r };return _aaf .Parse ()};
func (_fae *ttfParser )Seek (tag string )error {_dede ,_dba :=_fae ._fab [tag ];if !_dba {return _fg .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_fae ._faa .Seek (int64 (_dede ),_g .SeekStart );
return nil ;};func (_age *TtfType )MakeToUnicode ()*_ab .CMap {_gef :=make (map[_ab .CharCode ]rune );if len (_age .GlyphNames )==0{for _ggd :=range _age .Chars {_gef [_ab .CharCode (_ggd )]=_ggd ;};return _ab .NewToUnicodeCMap (_gef );};for _aefb ,_ddc :=range _age .Chars {_dbb :=_ab .CharCode (_aefb );
_bcf :=_age .GlyphNames [_ddc ];_ade ,_gba :=_a .GlyphToRune (_bcf );if !_gba {_ad .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_aefb ,_bcf );
_ade =_a .MissingCodeRune ;};_gef [_dbb ]=_ade ;};return _ab .NewToUnicodeCMap (_gef );};func (_af *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ae :=MakeRuneCharSafeMap (_af .Length ());_af .Range (func (_bd rune ,_gg CharMetrics )(_eg bool ){_ae ._e [_bd ]=_gg ;
return false });return _ae ;};func _cbc ()StdFont {_fegf .Do (_gfd );_cae :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cae ,_gag );};func _gfd (){_acc =MakeRuneCharSafeMap (len (_ff ));_gfbf =MakeRuneCharSafeMap (len (_ff ));for _agf ,_ebb :=range _ff {_acc .Write (_ebb ,CharMetrics {Wx :float64 (_df [_agf ])});_gfbf .Write (_ebb ,CharMetrics {Wx :float64 (_fce [_agf ])});
};_egdg =_acc .Copy ();_gag =_gfbf .Copy ();};var _cbe =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type StdFontName string ;func (_fdgfg *ttfParser )parseCmapFormat0 ()error {_ebg ,_abg :=_fdgfg .ReadStr (256);if _abg !=nil {return _abg ;};_acgg :=[]byte (_ebg );_ad .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_fdgfg ._edc .String (),_ebg ,_acgg );
for _dgbb ,_cfd :=range _acgg {_fdgfg ._edc .Chars [rune (_dgbb )]=GID (_cfd );};return nil ;};func (_eea *ttfParser )ReadUShort ()(_ffd uint16 ){_fb .Read (_eea ._faa ,_fb .BigEndian ,&_ffd );return _ffd ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_fgg *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fgg ._ea .Lock ();defer _fgg ._ea .Unlock ();_fgg ._e [b ]=r ;};func (_fdf StdFont )GetMetricsTable ()*RuneCharSafeMap {return _fdf ._aea };func _fbd ()StdFont {_fegf .Do (_gfd );_cgd :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cgd ,_acc );};func (_cfe *ttfParser )parseCmapSubtable31 (_gfc int64 )error {_baag :=make ([]rune ,0,8);_fbdd :=make ([]rune ,0,8);_cafa :=make ([]int16 ,0,8);_fbbc :=make ([]uint16 ,0,8);_cfe ._edc .Chars =make (map[rune ]GID );_cfe ._faa .Seek (int64 (_cfe ._fab ["\u0063\u006d\u0061\u0070"])+_gfc ,_g .SeekStart );
_baf :=_cfe .ReadUShort ();if _baf !=4{_ad .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_baf );return nil ;
};_cfe .Skip (2*2);_bcfe :=int (_cfe .ReadUShort ()/2);_cfe .Skip (3*2);for _bdg :=0;_bdg < _bcfe ;_bdg ++{_fbdd =append (_fbdd ,rune (_cfe .ReadUShort ()));};_cfe .Skip (2);for _agd :=0;_agd < _bcfe ;_agd ++{_baag =append (_baag ,rune (_cfe .ReadUShort ()));
};for _baff :=0;_baff < _bcfe ;_baff ++{_cafa =append (_cafa ,_cfe .ReadShort ());};_cbcc ,_ :=_cfe ._faa .Seek (int64 (0),_g .SeekCurrent );for _cbd :=0;_cbd < _bcfe ;_cbd ++{_fbbc =append (_fbbc ,_cfe .ReadUShort ());};for _aaee :=0;_aaee < _bcfe ;_aaee ++{_gbe :=_baag [_aaee ];
_cdc :=_fbdd [_aaee ];_aafb :=_cafa [_aaee ];_fbg :=_fbbc [_aaee ];if _fbg > 0{_cfe ._faa .Seek (_cbcc +2*int64 (_aaee )+int64 (_fbg ),_g .SeekStart );};for _gbd :=_gbe ;_gbd <=_cdc ;_gbd ++{if _gbd ==0xFFFF{break ;};var _eefd int32 ;if _fbg > 0{_eefd =int32 (_cfe .ReadUShort ());
if _eefd > 0{_eefd +=int32 (_aafb );};}else {_eefd =_gbd +int32 (_aafb );};if _eefd >=65536{_eefd -=65536;};if _eefd > 0{_cfe ._edc .Chars [_gbd ]=GID (_eefd );};};};return nil ;};func (_abe *fontMap )write (_gb StdFontName ,_fc func ()StdFont ){_abe .Lock ();
defer _abe .Unlock ();_abe ._gda [_gb ]=_fc ;};var _fdgd *RuneCharSafeMap ;var _gfbf *RuneCharSafeMap ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_egd :=_fbe .read (name );_egd {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_fbe .write (name ,fnc );for _ ,_ce :=range aliases {RegisterStdFont (_ce ,fnc );};};func (_gfb StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dad ,_gfg :=_gfb ._aea .Read (r );return _dad ,_gfg ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ee ,_dg :=_fbe .read (name );
if !_dg {return StdFont {},false ;};return _ee (),true ;};func _ga ()StdFont {_cea .Do (_ba );_dadd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dadd ,_abf );};func (_gee *ttfParser )ParsePost ()error {if _aaaa :=_gee .Seek ("\u0070\u006f\u0073\u0074");_aaaa !=nil {return _aaaa ;};_beae :=_gee .Read32Fixed ();_gee ._edc .ItalicAngle =_gee .Read32Fixed ();_gee ._edc .UnderlinePosition =_gee .ReadShort ();
_gee ._edc .UnderlineThickness =_gee .ReadShort ();_gee ._edc .IsFixedPitch =_gee .ReadULong ()!=0;_gee .ReadULong ();_gee .ReadULong ();_gee .ReadULong ();_gee .ReadULong ();_ad .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_beae );
switch _beae {case 1.0:_gee ._edc .GlyphNames =_cbe ;case 2.0:_fddf :=int (_gee .ReadUShort ());_bgcfa :=make ([]int ,_fddf );_gee ._edc .GlyphNames =make ([]GlyphName ,_fddf );_ccb :=-1;for _gdeb :=0;_gdeb < _fddf ;_gdeb ++{_caca :=int (_gee .ReadUShort ());
_bgcfa [_gdeb ]=_caca ;if _caca <=0x7fff&&_caca > _ccb {_ccb =_caca ;};};var _bdfg []GlyphName ;if _ccb >=len (_cbe ){_bdfg =make ([]GlyphName ,_ccb -len (_cbe )+1);for _afcb :=0;_afcb < _ccb -len (_cbe )+1;_afcb ++{_cce :=int (_gee .readByte ());_bedb ,_ddcf :=_gee .ReadStr (_cce );
if _ddcf !=nil {return _ddcf ;};_bdfg [_afcb ]=GlyphName (_bedb );};};for _bec :=0;_bec < _fddf ;_bec ++{_cbgc :=_bgcfa [_bec ];if _cbgc < len (_cbe ){_gee ._edc .GlyphNames [_bec ]=_cbe [_cbgc ];}else if _cbgc >=len (_cbe )&&_cbgc <=32767{_gee ._edc .GlyphNames [_bec ]=_bdfg [_cbgc -len (_cbe )];
}else {_gee ._edc .GlyphNames [_bec ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cbf :=make ([]int ,_gee ._aec );for _gbee :=0;_gbee < len (_cbf );_gbee ++{_ecb :=int (_gee .ReadSByte ());_cbf [_gbee ]=_gbee +1+_ecb ;};
_gee ._edc .GlyphNames =make ([]GlyphName ,len (_cbf ));for _eagc :=0;_eagc < len (_gee ._edc .GlyphNames );_eagc ++{_feec :=_cbe [_cbf [_eagc ]];_gee ._edc .GlyphNames [_eagc ]=_feec ;};case 3.0:_ad .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ad .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_beae );};return nil ;};type Font interface{Encoder ()_a .TextEncoder ;GetRuneMetrics (_fbb rune )(CharMetrics ,bool );
};type GID =_a .GID ;const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _adb _fe .Once ;func _dbf ()StdFont {_de :=_a .NewZapfDingbatsEncoder ();_aef :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_aef ,_agc ,_de );};func (_caa *RuneCharSafeMap )Range (f func (_aee rune ,_feg CharMetrics )(_dd bool )){_caa ._ea .RLock ();defer _caa ._ea .RUnlock ();for _gga ,_eab :=range _caa ._e {if f (_gga ,_eab ){break ;};};};var _fce =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func _fgfc ()StdFont {_adb .Do (_fag );_bgc :=Descriptor {Name :TimesItalicName ,Family :_caaa ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_bgc ,_aeac );};var _bdd *RuneCharSafeMap ;func (_aeb *ttfParser )Read32Fixed ()float64 {_ddb :=float64 (_aeb .ReadShort ());_eba :=float64 (_aeb .ReadUShort ())/65536.0;return _ddb +_eba ;};func (_feb *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_feb ._ea .RLock ();
defer _feb ._ea .RUnlock ();_gd ,_fbbf :=_feb ._e [b ];return _gd ,_fbbf ;};func _ebd ()StdFont {_cea .Do (_ba );_bga :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bga ,_ac );};const (_caaa ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _ac *RuneCharSafeMap ;
func (_bgb *ttfParser )parseCmapVersion (_adeb int64 )error {_ad .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_adeb );if _bgb ._edc .Chars ==nil {_bgb ._edc .Chars =make (map[rune ]GID );
};_bgb ._faa .Seek (int64 (_bgb ._fab ["\u0063\u006d\u0061\u0070"])+_adeb ,_g .SeekStart );var _dada ,_fbac uint32 ;_gecb :=_bgb .ReadUShort ();if _gecb < 8{_dada =uint32 (_bgb .ReadUShort ());_fbac =uint32 (_bgb .ReadUShort ());}else {_bgb .ReadUShort ();
_dada =_bgb .ReadULong ();_fbac =_bgb .ReadULong ();};_ad .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_gecb ,_dada ,_fbac );
switch _gecb {case 0:return _bgb .parseCmapFormat0 ();case 6:return _bgb .parseCmapFormat6 ();case 12:return _bgb .parseCmapFormat12 ();default:_ad .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_gecb );
return nil ;};};