//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_c "bytes";_gbd "encoding/binary";_ag "errors";_f "fmt";_gaa "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/core";_e "github.com/unidoc/unipdf/v3/internal/cmap";_gg "github.com/unidoc/unipdf/v3/internal/textencoding";
_de "io";_ga "os";_a "regexp";_gb "sort";_d "strings";_ac "sync";);var _ffc _ac .Once ;type RuneCharSafeMap struct{_fa map[rune ]CharMetrics ;_ff _ac .RWMutex ;};func _ace ()StdFont {_agaf :=_gg .NewZapfDingbatsEncoder ();_egg :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_egg ,_eac ,_agaf );};var _gdb *RuneCharSafeMap ;func (_df CharMetrics )String ()string {return _f .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_df .Wx ,_df .Wy );};type ttfParser struct{_gbf TtfType ;
_fea _de .ReadSeeker ;_fge map[string ]uint32 ;_dbf uint16 ;_dcb uint16 ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_egb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _egb ._cef };func _aga ()StdFont {_efg .Do (_dbe );
_ge :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_ge ,_aba );
};func (_bc *RuneCharSafeMap )Range (f func (_cb rune ,_eg CharMetrics )(_fe bool )){_bc ._ff .RLock ();defer _bc ._ff .RUnlock ();for _ef ,_ba :=range _bc ._fa {if f (_ef ,_ba ){break ;};};};func (_dfgg *TtfType )NewEncoder ()_gg .TextEncoder {return _gg .NewTrueTypeFontEncoder (_dfgg .Chars )};
type GID =_gg .GID ;type StdFont struct{_gff Descriptor ;_cef *RuneCharSafeMap ;_dfg _gg .TextEncoder ;};func (_gdbb *TtfType )MakeToUnicode ()*_e .CMap {_efc :=make (map[_e .CharCode ]rune );if len (_gdbb .GlyphNames )==0{for _dbbcc :=range _gdbb .Chars {_efc [_e .CharCode (_dbbcc )]=_dbbcc ;
};return _e .NewToUnicodeCMap (_efc );};for _faafc ,_eed :=range _gdbb .Chars {_bgc :=_e .CharCode (_faafc );_faad :=_gdbb .GlyphNames [_eed ];_gdg ,_dcg :=_gg .GlyphToRune (_faad );if !_dcg {_gaa .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_faafc ,_faad );
_gdg =_gg .MissingCodeRune ;};_efc [_bgc ]=_gdg ;};return _e .NewToUnicodeCMap (_efc );};func NewFontFile2FromPdfObject (obj _cg .PdfObject )(TtfType ,error ){obj =_cg .TraceToDirectObject (obj );_fb ,_dfgb :=obj .(*_cg .PdfObjectStream );if !_dfgb {_gaa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_cg .ErrTypeError ;};_ddg ,_eaf :=_cg .DecodeStream (_fb );if _eaf !=nil {return TtfType {},_eaf ;};_egae :=ttfParser {_fea :_c .NewReader (_ddg )};return _egae .Parse ();};func (_bfd *fontMap )write (_fc StdFontName ,_faa func ()StdFont ){_bfd .Lock ();
defer _bfd .Unlock ();_bfd ._bf [_fc ]=_faa ;};var _gaf *RuneCharSafeMap ;func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ad ,_gf :=_dff .read (name );if !_gf {return StdFont {},false ;};return _ad (),true ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_eb :=_dff .read (name );
_eb {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_dff .write (name ,fnc );for _ ,_bg :=range aliases {RegisterStdFont (_bg ,fnc );};};var _efg _ac .Once ;
const (_ece ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func _agc (_ggg map[string ]uint32 )string {var _dba []string ;for _gfd :=range _ggg {_dba =append (_dba ,_gfd );};_gb .Slice (_dba ,func (_gcb ,_eggf int )bool {return _ggg [_dba [_gcb ]]< _ggg [_dba [_eggf ]]});
_abc :=[]string {_f .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_ggg ))};for _ ,_dcd :=range _dba {_abc =append (_abc ,_f .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dcd ,_ggg [_dcd ]));
};return _d .Join (_abc ,"\u000a");};var _add =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););type fontMap struct{_ac .Mutex ;_bf map[StdFontName ]func ()StdFont ;};func (_ca StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aa ,_ebg :=_ca ._cef .Read (r );
return _aa ,_ebg ;};var _bcfg _ac .Once ;var _cbb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_ce *RuneCharSafeMap )Length ()int {_ce ._ff .RLock ();defer _ce ._ff .RUnlock ();return len (_ce ._fa );};func _cgb ()StdFont {_efg .Do (_dbe );_ffg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ffg ,_ceg );};func IsStdFont (name StdFontName )bool {_ ,_faaf :=_dff .read (name );return _faaf };func _dfag ()StdFont {_efg .Do (_dbe );_acb :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_acb ,_gaf );};func init (){RegisterStdFont (CourierName ,_aaa ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_cgb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_dfag ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_aga ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func _fef ()StdFont {_ffc .Do (_eba );_gec :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gec ,_bcf );};func (_dc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_dc ._ff .Lock ();defer _dc ._ff .Unlock ();_dc ._fa [b ]=r ;};func (_bcca *ttfParser )Seek (tag string )error {_bdc ,_efe :=_bcca ._fge [tag ];if !_efe {return _f .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_bcca ._fea .Seek (int64 (_bdc ),_de .SeekStart );return nil ;};var _egd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _aba *RuneCharSafeMap ;var _ceg *RuneCharSafeMap ;func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_fa :make (map[rune ]CharMetrics ,length )};};var _dfc *RuneCharSafeMap ;func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_gg .NewStandardEncoder ());
};func (_ea *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_db :=MakeRuneCharSafeMap (_ea .Length ());_ea .Range (func (_gae rune ,_b CharMetrics )(_ee bool ){_db ._fa [_gae ]=_b ;return false });return _db ;};var _eac =&RuneCharSafeMap {_fa :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func init (){RegisterStdFont (HelveticaName ,_fef ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_cbf ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fefg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_eef ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);var _fbg =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type Font interface{Encoder ()_gg .TextEncoder ;GetRuneMetrics (_fd rune )(CharMetrics ,bool );};func _eef ()StdFont {_ffc .Do (_eba );_dcc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dcc ,_dfc );};var _bcf *RuneCharSafeMap ;func (_gdd *ttfParser )parseCmapFormat6 ()error {_fcdc :=int (_gdd .ReadUShort ());_cgd :=int (_gdd .ReadUShort ());_gaa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gdd ._gbf .String (),_fcdc ,_cgd );
for _dge :=0;_dge < _cgd ;_dge ++{_bda :=GID (_gdd .ReadUShort ());_gdd ._gbf .Chars [rune (_dge +_fcdc )]=_bda ;};return nil ;};var _gece =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ab StdFont )Name ()string {return string (_ab ._gff .Name )};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;
StemV float64 ;StemH float64 ;};func (_dfcc *ttfParser )ParsePost ()error {if _eabf :=_dfcc .Seek ("\u0070\u006f\u0073\u0074");_eabf !=nil {return _eabf ;};_cag :=_dfcc .Read32Fixed ();_dfcc ._gbf .ItalicAngle =_dfcc .Read32Fixed ();_dfcc ._gbf .UnderlinePosition =_dfcc .ReadShort ();
_dfcc ._gbf .UnderlineThickness =_dfcc .ReadShort ();_dfcc ._gbf .IsFixedPitch =_dfcc .ReadULong ()!=0;_dfcc .ReadULong ();_dfcc .ReadULong ();_dfcc .ReadULong ();_dfcc .ReadULong ();_gaa .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cag );
switch _cag {case 1.0:_dfcc ._gbf .GlyphNames =_fbg ;case 2.0:_bef :=int (_dfcc .ReadUShort ());_dagd :=make ([]int ,_bef );_dfcc ._gbf .GlyphNames =make ([]GlyphName ,_bef );_bfg :=-1;for _gda :=0;_gda < _bef ;_gda ++{_ddd :=int (_dfcc .ReadUShort ());
_dagd [_gda ]=_ddd ;if _ddd <=0x7fff&&_ddd > _bfg {_bfg =_ddd ;};};var _beg []GlyphName ;if _bfg >=len (_fbg ){_beg =make ([]GlyphName ,_bfg -len (_fbg )+1);for _cbfc :=0;_cbfc < _bfg -len (_fbg )+1;_cbfc ++{_fgae :=int (_dfcc .readByte ());_gbc ,_cfd :=_dfcc .ReadStr (_fgae );
if _cfd !=nil {return _cfd ;};_beg [_cbfc ]=GlyphName (_gbc );};};for _ebfd :=0;_ebfd < _bef ;_ebfd ++{_dgb :=_dagd [_ebfd ];if _dgb < len (_fbg ){_dfcc ._gbf .GlyphNames [_ebfd ]=_fbg [_dgb ];}else if _dgb >=len (_fbg )&&_dgb <=32767{_dfcc ._gbf .GlyphNames [_ebfd ]=_beg [_dgb -len (_fbg )];
}else {_dfcc ._gbf .GlyphNames [_ebfd ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_aea :=make ([]int ,_dfcc ._dcb );for _edb :=0;_edb < len (_aea );_edb ++{_dbbcf :=int (_dfcc .ReadSByte ());_aea [_edb ]=_edb +1+_dbbcf ;
};_dfcc ._gbf .GlyphNames =make ([]GlyphName ,len (_aea ));for _gfa :=0;_gfa < len (_dfcc ._gbf .GlyphNames );_gfa ++{_ecf :=_fbg [_aea [_gfa ]];_dfcc ._gbf .GlyphNames [_gfa ]=_ecf ;};case 3.0:_gaa .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gaa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cag );};return nil ;};func (_da StdFont )ToPdfObject ()_cg .PdfObject {_gaed :=_cg .MakeDict ();
_gaed .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074"));_gaed .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054\u0079\u0070e\u0031"));_gaed .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cg .MakeName (_da .Name ()));
_gaed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_da ._dfg .ToPdfObject ());return _cg .MakeIndirectObject (_gaed );};func (_ae *ttfParser )Parse ()(TtfType ,error ){_deb ,_gca :=_ae .ReadStr (4);if _gca !=nil {return TtfType {},_gca ;};if _deb =="\u0074\u0074\u0063\u0066"{return _ae .parseTTC ();
}else if _deb !="\u0000\u0001\u0000\u0000"&&_deb !="\u0074\u0072\u0075\u0065"{_gaa .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_deb );
};_dfggd :=int (_ae .ReadUShort ());_ae .Skip (3*2);_ae ._fge =make (map[string ]uint32 );var _gef string ;for _cfe :=0;_cfe < _dfggd ;_cfe ++{_gef ,_gca =_ae .ReadStr (4);if _gca !=nil {return TtfType {},_gca ;};_ae .Skip (4);_fbf :=_ae .ReadULong ();
_ae .Skip (4);_ae ._fge [_gef ]=_fbf ;};_gaa .Log .Trace (_agc (_ae ._fge ));if _gca =_ae .ParseComponents ();_gca !=nil {return TtfType {},_gca ;};return _ae ._gbf ,nil ;};func (_ggba *ttfParser )Read32Fixed ()float64 {_ead :=float64 (_ggba .ReadShort ());
_bcfa :=float64 (_ggba .ReadUShort ())/65536.0;return _ead +_bcfa ;};func init (){RegisterStdFont (SymbolName ,_bgf ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ace );};type GlyphName =_gg .GlyphName ;func (_fcc *ttfParser )ParseCmap ()error {var _cfc int64 ;if _eca :=_fcc .Seek ("\u0063\u006d\u0061\u0070");_eca !=nil {return _eca ;};_fcc .ReadUShort ();_aaad :=int (_fcc .ReadUShort ());
_fgad :=int64 (0);_aef :=int64 (0);_aee :=int64 (0);for _ebf :=0;_ebf < _aaad ;_ebf ++{_beb :=_fcc .ReadUShort ();_cdfe :=_fcc .ReadUShort ();_cfc =int64 (_fcc .ReadULong ());if _beb ==3&&_cdfe ==1{_aef =_cfc ;}else if _beb ==3&&_cdfe ==10{_aee =_cfc ;
}else if _beb ==1&&_cdfe ==0{_fgad =_cfc ;};};if _fgad !=0{if _gdf :=_fcc .parseCmapVersion (_fgad );_gdf !=nil {return _gdf ;};};if _aef !=0{if _gdce :=_fcc .parseCmapSubtable31 (_aef );_gdce !=nil {return _gdce ;};};if _aee !=0{if _gag :=_fcc .parseCmapVersion (_aee );
_gag !=nil {return _gag ;};};if _aef ==0&&_fgad ==0&&_aee ==0{_gaa .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_egaea *ttfParser )parseCmapSubtable10 (_cae int64 )error {if _egaea ._gbf .Chars ==nil {_egaea ._gbf .Chars =make (map[rune ]GID );};_egaea ._fea .Seek (int64 (_egaea ._fge ["\u0063\u006d\u0061\u0070"])+_cae ,_de .SeekStart );var _eeg ,_agea uint32 ;
_adfb :=_egaea .ReadUShort ();if _adfb < 8{_eeg =uint32 (_egaea .ReadUShort ());_agea =uint32 (_egaea .ReadUShort ());}else {_egaea .ReadUShort ();_eeg =_egaea .ReadULong ();_agea =_egaea .ReadULong ();};_gaa .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_adfb ,_eeg ,_agea );
if _adfb !=0{return _ag .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bd ,_agf :=_egaea .ReadStr (256);
if _agf !=nil {return _agf ;};_fbb :=[]byte (_bd );for _fbc ,_eafca :=range _fbb {_egaea ._gbf .Chars [rune (_fbc )]=GID (_eafca );if _eafca !=0{_f .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fbc ,_eafca ,rune (_eafca ));
};};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _gg .TextEncoder )StdFont {var _cd rune =0xA0;if _ ,_dfa :=metrics .Read (_cd );!_dfa {_eec ,_ :=metrics .Read (0x20);metrics .Write (_cd ,_eec );};return StdFont {_gff :desc ,_cef :metrics ,_dfg :encoder };
};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func init (){RegisterStdFont (TimesRomanName ,_dffb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_eab ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_ggf ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_bcd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ccb *ttfParser )parseCmapFormat0 ()error {_cbg ,_aafb :=_ccb .ReadStr (256);if _aafb !=nil {return _aafb ;};_eee :=[]byte (_cbg );_gaa .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ccb ._gbf .String (),_cbg ,_eee );
for _gfe ,_cga :=range _eee {_ccb ._gbf .Chars [rune (_gfe )]=GID (_cga );};return nil ;};func (_gaad StdFont )Encoder ()_gg .TextEncoder {return _gaad ._dfg };func _dffb ()StdFont {_bcfg .Do (_fca );_egbf :=Descriptor {Name :TimesRomanName ,Family :_ece ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_egbf ,_abf );};func (_fddb *ttfParser )Skip (n int ){_fddb ._fea .Seek (int64 (n ),_de .SeekCurrent )};func _fefg ()StdFont {_ffc .Do (_eba );_dd :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dd ,_fga );};func (_baca *ttfParser )ReadSByte ()(_abfaa int8 ){_gbd .Read (_baca ._fea ,_gbd .BigEndian ,&_abfaa );return _abfaa ;};func TtfParseFile (fileStr string )(TtfType ,error ){_bee ,_cegf :=_ga .Open (fileStr );if _cegf !=nil {return TtfType {},_cegf ;
};defer _bee .Close ();return TtfParse (_bee );};func (_fgec *ttfParser )ParseHmtx ()error {if _bcdc :=_fgec .Seek ("\u0068\u006d\u0074\u0078");_bcdc !=nil {return _bcdc ;};_fgec ._gbf .Widths =make ([]uint16 ,0,8);for _dea :=uint16 (0);_dea < _fgec ._dbf ;
_dea ++{_fgec ._gbf .Widths =append (_fgec ._gbf .Widths ,_fgec .ReadUShort ());_fgec .Skip (2);};if _fgec ._dbf < _fgec ._dcb &&_fgec ._dbf > 0{_gcbd :=_fgec ._gbf .Widths [_fgec ._dbf -1];for _geg :=_fgec ._dbf ;_geg < _fgec ._dcb ;_geg ++{_fgec ._gbf .Widths =append (_fgec ._gbf .Widths ,_gcbd );
};};return nil ;};func (_fae *ttfParser )ReadULong ()(_bb uint32 ){_gbd .Read (_fae ._fea ,_gbd .BigEndian ,&_bb );return _bb ;};func _aaa ()StdFont {_efg .Do (_dbe );_dbbc :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dbbc ,_cff );};type StdFontName string ;var _efga =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_cf StdFont )Descriptor ()Descriptor {return _cf ._gff };func _eba (){_bcf =MakeRuneCharSafeMap (len (_cbb ));_ega =MakeRuneCharSafeMap (len (_cbb ));for _eaa ,_gce :=range _cbb {_bcf .Write (_gce ,CharMetrics {Wx :float64 (_egc [_eaa ])});_ega .Write (_gce ,CharMetrics {Wx :float64 (_add [_eaa ])});
};_fga =_bcf .Copy ();_dfc =_ega .Copy ();};func (_bca *ttfParser )ReadStr (length int )(string ,error ){_fcb :=make ([]byte ,length );_ccbc ,_aaadg :=_bca ._fea .Read (_fcb );if _aaadg !=nil {return "",_aaadg ;}else if _ccbc !=length {return "",_f .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fcb ),nil ;};func _ggf ()StdFont {_bcfg .Do (_fca );_cba :=Descriptor {Name :TimesItalicName ,Family :_ece ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cba ,_ced );};func _bcd ()StdFont {_bcfg .Do (_fca );_dag :=Descriptor {Name :TimesBoldItalicName ,Family :_ece ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dag ,_bce );};func (_fg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fg ._ff .RLock ();defer _fg ._ff .RUnlock ();_dbb ,_dfd :=_fg ._fa [b ];return _dbb ,_dfd ;};func _dbe (){const _gba =600;_cff =MakeRuneCharSafeMap (len (_cbb ));
for _ ,_be :=range _cbb {_cff .Write (_be ,CharMetrics {Wx :_gba });};_ceg =_cff .Copy ();_aba =_cff .Copy ();_gaf =_cff .Copy ();};func (_bfbe *ttfParser )readByte ()(_cfb uint8 ){_gbd .Read (_bfbe ._fea ,_gbd .BigEndian ,&_cfb );return _cfb ;};func (_cgf *ttfParser )ParseHead ()error {if _aaag :=_cgf .Seek ("\u0068\u0065\u0061\u0064");
_aaag !=nil {return _aaag ;};_cgf .Skip (3*4);_eacf :=_cgf .ReadULong ();if _eacf !=0x5F0F3CF5{_gaa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cgf );
};_cgf .Skip (2);_cgf ._gbf .UnitsPerEm =_cgf .ReadUShort ();_cgf .Skip (2*8);_cgf ._gbf .Xmin =_cgf .ReadShort ();_cgf ._gbf .Ymin =_cgf .ReadShort ();_cgf ._gbf .Xmax =_cgf .ReadShort ();_cgf ._gbf .Ymax =_cgf .ReadShort ();return nil ;};func (_fee *ttfParser )parseCmapVersion (_ceb int64 )error {_gaa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_ceb );
if _fee ._gbf .Chars ==nil {_fee ._gbf .Chars =make (map[rune ]GID );};_fee ._fea .Seek (int64 (_fee ._fge ["\u0063\u006d\u0061\u0070"])+_ceb ,_de .SeekStart );var _deef ,_ccg uint32 ;_eaab :=_fee .ReadUShort ();if _eaab < 8{_deef =uint32 (_fee .ReadUShort ());
_ccg =uint32 (_fee .ReadUShort ());}else {_fee .ReadUShort ();_deef =_fee .ReadULong ();_ccg =_fee .ReadULong ();};_gaa .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_eaab ,_deef ,_ccg );
switch _eaab {case 0:return _fee .parseCmapFormat0 ();case 6:return _fee .parseCmapFormat6 ();case 12:return _fee .parseCmapFormat12 ();default:_gaa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_eaab );
return nil ;};};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_bge *ttfParser )parseTTC ()(TtfType ,error ){_bge .Skip (2*2);_gdgc :=_bge .ReadULong ();if _gdgc < 1{return TtfType {},_ag .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_adf :=_bge .ReadULong ();_ ,_bad :=_bge ._fea .Seek (int64 (_adf ),_de .SeekStart );if _bad !=nil {return TtfType {},_bad ;};return _bge .Parse ();};func (_eagg *ttfParser )parseCmapSubtable31 (_cc int64 )error {_fgb :=make ([]rune ,0,8);_bcc :=make ([]rune ,0,8);
_fbe :=make ([]int16 ,0,8);_gdc :=make ([]uint16 ,0,8);_eagg ._gbf .Chars =make (map[rune ]GID );_eagg ._fea .Seek (int64 (_eagg ._fge ["\u0063\u006d\u0061\u0070"])+_cc ,_de .SeekStart );_fag :=_eagg .ReadUShort ();if _fag !=4{_gaa .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_fag );
return nil ;};_eagg .Skip (2*2);_cgff :=int (_eagg .ReadUShort ()/2);_eagg .Skip (3*2);for _cbd :=0;_cbd < _cgff ;_cbd ++{_bcc =append (_bcc ,rune (_eagg .ReadUShort ()));};_eagg .Skip (2);for _dgg :=0;_dgg < _cgff ;_dgg ++{_fgb =append (_fgb ,rune (_eagg .ReadUShort ()));
};for _dab :=0;_dab < _cgff ;_dab ++{_fbe =append (_fbe ,_eagg .ReadShort ());};_cbdd ,_ :=_eagg ._fea .Seek (int64 (0),_de .SeekCurrent );for _gbg :=0;_gbg < _cgff ;_gbg ++{_gdc =append (_gdc ,_eagg .ReadUShort ());};for _bgce :=0;_bgce < _cgff ;_bgce ++{_adg :=_fgb [_bgce ];
_ccd :=_bcc [_bgce ];_aaf :=_fbe [_bgce ];_dbae :=_gdc [_bgce ];if _dbae > 0{_eagg ._fea .Seek (_cbdd +2*int64 (_bgce )+int64 (_dbae ),_de .SeekStart );};for _dee :=_adg ;_dee <=_ccd ;_dee ++{if _dee ==0xFFFF{break ;};var _aaae int32 ;if _dbae > 0{_aaae =int32 (_eagg .ReadUShort ());
if _aaae > 0{_aaae +=int32 (_aaf );};}else {_aaae =_dee +int32 (_aaf );};if _aaae >=65536{_aaae -=65536;};if _aaae > 0{_eagg ._gbf .Chars [_dee ]=GID (_aaae );};};};return nil ;};var _dff =&fontMap {_bf :make (map[StdFontName ]func ()StdFont )};func (_ede *ttfParser )ParseName ()error {if _dgcd :=_ede .Seek ("\u006e\u0061\u006d\u0065");
_dgcd !=nil {return _dgcd ;};_eff ,_ :=_ede ._fea .Seek (0,_de .SeekCurrent );_ede ._gbf .PostScriptName ="";_ede .Skip (2);_aeg :=_ede .ReadUShort ();_dbea :=_ede .ReadUShort ();for _acg :=uint16 (0);_acg < _aeg &&_ede ._gbf .PostScriptName =="";_acg ++{_ede .Skip (3*2);
_dae :=_ede .ReadUShort ();_bfb :=_ede .ReadUShort ();_efff :=_ede .ReadUShort ();if _dae ==6{_ede ._fea .Seek (_eff +int64 (_dbea )+int64 (_efff ),_de .SeekStart );_ggce ,_gecg :=_ede .ReadStr (int (_bfb ));if _gecg !=nil {return _gecg ;};_ggce =_d .Replace (_ggce ,"\u0000","",-1);
_acbb ,_gecg :=_a .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _gecg !=nil {return _gecg ;};_ede ._gbf .PostScriptName =_acbb .ReplaceAllString (_ggce ,"");};};if _ede ._gbf .PostScriptName ==""{_gaa .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _ega *RuneCharSafeMap ;var _egc =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _fca (){_abf =MakeRuneCharSafeMap (len (_cbb ));_gdb =MakeRuneCharSafeMap (len (_cbb ));_bce =MakeRuneCharSafeMap (len (_cbb ));_ced =MakeRuneCharSafeMap (len (_cbb ));for _fcd ,_gecf :=range _cbb {_abf .Write (_gecf ,CharMetrics {Wx :float64 (_gece [_fcd ])});
_gdb .Write (_gecf ,CharMetrics {Wx :float64 (_egd [_fcd ])});_bce .Write (_gecf ,CharMetrics {Wx :float64 (_dfcf [_fcd ])});_ced .Write (_gecf ,CharMetrics {Wx :float64 (_efga [_fcd ])});};};func _cbf ()StdFont {_ffc .Do (_eba );_dgc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dgc ,_ega );};var _dfcf =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _fga *RuneCharSafeMap ;const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););var _cff *RuneCharSafeMap ;func (_afc *ttfParser )ParseMaxp ()error {if _acc :=_afc .Seek ("\u006d\u0061\u0078\u0070");
_acc !=nil {return _acc ;};_afc .Skip (4);_afc ._dcb =_afc .ReadUShort ();return nil ;};func (_adc *TtfType )MakeEncoder ()(_gg .SimpleEncoder ,error ){_aad :=make (map[_gg .CharCode ]GlyphName );for _cedb :=_gg .CharCode (0);_cedb <=256;_cedb ++{_fdb :=rune (_cedb );
_gfb ,_ffd :=_adc .Chars [_fdb ];if !_ffd {continue ;};var _af GlyphName ;if int (_gfb )>=0&&int (_gfb )< len (_adc .GlyphNames ){_af =_adc .GlyphNames [_gfb ];}else {_bgg :=rune (_gfb );if _eecb ,_eag :=_gg .RuneToGlyph (_bgg );_eag {_af =_eecb ;};};if _af !=""{_aad [_cedb ]=_af ;
};};if len (_aad )==0{_gaa .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_adc ,_adc .Chars );
};return _gg .NewCustomSimpleTextEncoder (_aad ,nil );};func (_cgbg *ttfParser )ReadUShort ()(_ecad uint16 ){_gbd .Read (_cgbg ._fea ,_gbd .BigEndian ,&_ecad );return _ecad ;};func (_gc *fontMap )read (_gbe StdFontName )(func ()StdFont ,bool ){_gc .Lock ();
defer _gc .Unlock ();_bfc ,_dg :=_gc ._bf [_gbe ];return _bfc ,_dg ;};var _egac =&RuneCharSafeMap {_fa :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
var _ Font =StdFont {};func (_cde *ttfParser )ParseOS2 ()error {if _cca :=_cde .Seek ("\u004f\u0053\u002f\u0032");_cca !=nil {return _cca ;};_abd :=_cde .ReadUShort ();_cde .Skip (4*2);_cde .Skip (11*2+10+4*4+4);_aegd :=_cde .ReadUShort ();_cde ._gbf .Bold =(_aegd &32)!=0;
_cde .Skip (2*2);_cde ._gbf .TypoAscender =_cde .ReadShort ();_cde ._gbf .TypoDescender =_cde .ReadShort ();if _abd >=2{_cde .Skip (3*2+2*4+2);_cde ._gbf .CapHeight =_cde .ReadShort ();}else {_cde ._gbf .CapHeight =0;};return nil ;};var _ced *RuneCharSafeMap ;
func (_ebd *TtfType )String ()string {return _f .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ebd .PostScriptName ,_ebd .UnitsPerEm ,_ebd .Bold ,_ebd .ItalicAngle ,_ebd .CapHeight ,len (_ebd .Chars ),len (_ebd .GlyphNames ));
};func _eab ()StdFont {_bcfg .Do (_fca );_cdc :=Descriptor {Name :TimesBoldName ,Family :_ece ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_cdc ,_gdb );};func (_ggc *ttfParser )parseCmapFormat12 ()error {_ebb :=_ggc .ReadULong ();_gaa .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ggc ._gbf .String (),_ebb );
for _ed :=uint32 (0);_ed < _ebb ;_ed ++{_fgd :=_ggc .ReadULong ();_caa :=_ggc .ReadULong ();_dac :=_ggc .ReadULong ();if _fgd > 0x0010FFFF||(0xD800<=_fgd &&_fgd <=0xDFFF){return _ag .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _caa < _fgd ||_caa > 0x0010FFFF||(0xD800<=_caa &&_caa <=0xDFFF){return _ag .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bcga :=_fgd ;_bcga <=_caa ;
_bcga ++{if _bcga > 0x10FFFF{_gaa .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ggc ._gbf .Chars [rune (_bcga )]=GID (_dac );_dac ++;};};return nil ;};var _abf *RuneCharSafeMap ;type FontWeight int ;func (_aag *ttfParser )ParseComponents ()error {if _bcgc :=_aag .ParseHead ();_bcgc !=nil {return _bcgc ;};if _fdd :=_aag .ParseHhea ();
_fdd !=nil {return _fdd ;};if _debg :=_aag .ParseMaxp ();_debg !=nil {return _debg ;};if _abfg :=_aag .ParseHmtx ();_abfg !=nil {return _abfg ;};if _ ,_eafc :=_aag ._fge ["\u006e\u0061\u006d\u0065"];_eafc {if _aec :=_aag .ParseName ();_aec !=nil {return _aec ;
};};if _ ,_efgb :=_aag ._fge ["\u004f\u0053\u002f\u0032"];_efgb {if _ecg :=_aag .ParseOS2 ();_ecg !=nil {return _ecg ;};};if _ ,_adb :=_aag ._fge ["\u0070\u006f\u0073\u0074"];_adb {if _dfgga :=_aag .ParsePost ();_dfgga !=nil {return _dfgga ;};};if _ ,_bac :=_aag ._fge ["\u0063\u006d\u0061\u0070"];
_bac {if _abfa :=_aag .ParseCmap ();_abfa !=nil {return _abfa ;};};return nil ;};func TtfParse (r _de .ReadSeeker )(TtfType ,error ){_def :=&ttfParser {_fea :r };return _def .Parse ()};func (_gee *ttfParser )ReadShort ()(_eeec int16 ){_gbd .Read (_gee ._fea ,_gbd .BigEndian ,&_eeec );
return _eeec ;};func _bgf ()StdFont {_aac :=_gg .NewSymbolEncoder ();_bcg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_bcg ,_egac ,_aac );};func (_dgd *ttfParser )ParseHhea ()error {if _aceb :=_dgd .Seek ("\u0068\u0068\u0065\u0061");_aceb !=nil {return _aceb ;};_dgd .Skip (4+15*2);_dgd ._dbf =_dgd .ReadUShort ();return nil ;};var _bce *RuneCharSafeMap ;
