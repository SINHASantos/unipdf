//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_f "bytes";_eg "encoding/binary";_cf "errors";_ec "fmt";_d "github.com/unidoc/unipdf/v3/common";_fa "github.com/unidoc/unipdf/v3/core";_fc "github.com/unidoc/unipdf/v3/internal/cmap";_bc "github.com/unidoc/unipdf/v3/internal/textencoding";
_c "io";_a "os";_b "regexp";_g "sort";_ef "strings";_ff "sync";);func _cab ()StdFont {_bee .Do (_dcc );_afae :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_afae ,_ddb );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_fd :make (map[rune ]CharMetrics ,length )};};func (_bgd *ttfParser )ParseCmap ()error {var _eaf int64 ;if _ccaa :=_bgd .Seek ("\u0063\u006d\u0061\u0070");
_ccaa !=nil {return _ccaa ;};_bgd .ReadUShort ();_gfeb :=int (_bgd .ReadUShort ());_adc :=int64 (0);_fgc :=int64 (0);_bafg :=int64 (0);for _bgae :=0;_bgae < _gfeb ;_bgae ++{_adcf :=_bgd .ReadUShort ();_dff :=_bgd .ReadUShort ();_eaf =int64 (_bgd .ReadULong ());
if _adcf ==3&&_dff ==1{_fgc =_eaf ;}else if _adcf ==3&&_dff ==10{_bafg =_eaf ;}else if _adcf ==1&&_dff ==0{_adc =_eaf ;};};if _adc !=0{if _bdbb :=_bgd .parseCmapVersion (_adc );_bdbb !=nil {return _bdbb ;};};if _fgc !=0{if _bge :=_bgd .parseCmapSubtable31 (_fgc );
_bge !=nil {return _bge ;};};if _bafg !=0{if _add :=_bgd .parseCmapVersion (_bafg );_add !=nil {return _add ;};};if _fgc ==0&&_adc ==0&&_bafg ==0{_d .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_bcd *fontMap )read (_af StdFontName )(func ()StdFont ,bool ){_bcd .Lock ();defer _bcd .Unlock ();_da ,_afa :=_bcd ._df [_af ];return _da ,_afa ;};func (_ebf StdFont )ToPdfObject ()_fa .PdfObject {_aea :=_fa .MakeDict ();_aea .Set ("\u0054\u0079\u0070\u0065",_fa .MakeName ("\u0046\u006f\u006e\u0074"));
_aea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fa .MakeName ("\u0054\u0079\u0070e\u0031"));_aea .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fa .MakeName (_ebf .Name ()));_aea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebf ._be .ToPdfObject ());
return _fa .MakeIndirectObject (_aea );};func _ggb (){_fae =MakeRuneCharSafeMap (len (_efac ));_ggf =MakeRuneCharSafeMap (len (_efac ));_gfaa =MakeRuneCharSafeMap (len (_efac ));_adf =MakeRuneCharSafeMap (len (_efac ));for _acc ,_gcdf :=range _efac {_fae .Write (_gcdf ,CharMetrics {Wx :float64 (_edc [_acc ])});
_ggf .Write (_gcdf ,CharMetrics {Wx :float64 (_ee [_acc ])});_gfaa .Write (_gcdf ,CharMetrics {Wx :float64 (_afe [_acc ])});_adf .Write (_gcdf ,CharMetrics {Wx :float64 (_aed [_acc ])});};};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _bc .TextEncoder )StdFont {var _dc rune =0xA0;
if _ ,_bdc :=metrics .Read (_dc );!_bdc {_fdd ,_ :=metrics .Read (0x20);metrics .Write (_dc ,_fdd );};return StdFont {_fgee :desc ,_cgf :metrics ,_be :encoder };};var _gfaa *RuneCharSafeMap ;type StdFontName string ;var _fgd =&RuneCharSafeMap {_fd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _ggf *RuneCharSafeMap ;type Font interface{Encoder ()_bc .TextEncoder ;GetRuneMetrics (_ca rune )(CharMetrics ,bool );};func (_efe CharMetrics )String ()string {return _ec .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_efe .Wx ,_efe .Wy );
};func _bgf (){_ffd =MakeRuneCharSafeMap (len (_efac ));_dfeg =MakeRuneCharSafeMap (len (_efac ));for _deb ,_bcbf :=range _efac {_ffd .Write (_bcbf ,CharMetrics {Wx :float64 (_gcc [_deb ])});_dfeg .Write (_bcbf ,CharMetrics {Wx :float64 (_bca [_deb ])});
};_ecg =_ffd .Copy ();_dcd =_dfeg .Copy ();};func (_fade *ttfParser )parseTTC ()(TtfType ,error ){_fade .Skip (2*2);_agf :=_fade .ReadULong ();if _agf < 1{return TtfType {},_cf .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_eded :=_fade .ReadULong ();_ ,_fdg :=_fade ._dafg .Seek (int64 (_eded ),_c .SeekStart );if _fdg !=nil {return TtfType {},_fdg ;};return _fade .Parse ();};func (_daee *ttfParser )ParseHhea ()error {if _badg :=_daee .Seek ("\u0068\u0068\u0065\u0061");
_badg !=nil {return _badg ;};_daee .Skip (4+15*2);_daee ._bdb =_daee .ReadUShort ();return nil ;};type RuneCharSafeMap struct{_fd map[rune ]CharMetrics ;_bb _ff .RWMutex ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_bgb *ttfParser )Skip (n int ){_bgb ._dafg .Seek (int64 (n ),_c .SeekCurrent )};
func _fbc (_cgc map[string ]uint32 )string {var _babc []string ;for _dbc :=range _cgc {_babc =append (_babc ,_dbc );};_g .Slice (_babc ,func (_dce ,_fcd int )bool {return _cgc [_babc [_dce ]]< _cgc [_babc [_fcd ]]});_aae :=[]string {_ec .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cgc ))};
for _ ,_ebff :=range _babc {_aae =append (_aae ,_ec .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ebff ,_cgc [_ebff ]));};return _ef .Join (_aae ,"\u000a");};func _fad ()StdFont {_caea .Do (_ggb );_ab :=Descriptor {Name :TimesBoldName ,Family :_ace ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_ab ,_ggf );};type GID =_bc .GID ;func (_gcb *ttfParser )readByte ()(_ged uint8 ){_eg .Read (_gcb ._dafg ,_eg .BigEndian ,&_ged );return _ged ;};type FontWeight int ;var _bee _ff .Once ;var _efac =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_ggg *ttfParser )ParsePost ()error {if _ccgb :=_ggg .Seek ("\u0070\u006f\u0073\u0074");_ccgb !=nil {return _ccgb ;};_agfe :=_ggg .Read32Fixed ();_ggg ._cag .ItalicAngle =_ggg .Read32Fixed ();_ggg ._cag .UnderlinePosition =_ggg .ReadShort ();_ggg ._cag .UnderlineThickness =_ggg .ReadShort ();
_ggg ._cag .IsFixedPitch =_ggg .ReadULong ()!=0;_ggg .ReadULong ();_ggg .ReadULong ();_ggg .ReadULong ();_ggg .ReadULong ();_d .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_agfe );
switch _agfe {case 1.0:_ggg ._cag .GlyphNames =_bbbb ;case 2.0:_fdcfa :=int (_ggg .ReadUShort ());_fab :=make ([]int ,_fdcfa );_ggg ._cag .GlyphNames =make ([]GlyphName ,_fdcfa );_bac :=-1;for _bfd :=0;_bfd < _fdcfa ;_bfd ++{_dace :=int (_ggg .ReadUShort ());
_fab [_bfd ]=_dace ;if _dace <=0x7fff&&_dace > _bac {_bac =_dace ;};};var _gcfg []GlyphName ;if _bac >=len (_bbbb ){_gcfg =make ([]GlyphName ,_bac -len (_bbbb )+1);for _fff :=0;_fff < _bac -len (_bbbb )+1;_fff ++{_fabf :=int (_ggg .readByte ());_dacc ,_eag :=_ggg .ReadStr (_fabf );
if _eag !=nil {return _eag ;};_gcfg [_fff ]=GlyphName (_dacc );};};for _deba :=0;_deba < _fdcfa ;_deba ++{_dbcb :=_fab [_deba ];if _dbcb < len (_bbbb ){_ggg ._cag .GlyphNames [_deba ]=_bbbb [_dbcb ];}else if _dbcb >=len (_bbbb )&&_dbcb <=32767{_ggg ._cag .GlyphNames [_deba ]=_gcfg [_dbcb -len (_bbbb )];
}else {_ggg ._cag .GlyphNames [_deba ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_gbfd :=make ([]int ,_ggg ._daeb );for _bea :=0;_bea < len (_gbfd );_bea ++{_dbgd :=int (_ggg .ReadSByte ());_gbfd [_bea ]=_bea +1+_dbgd ;
};_ggg ._cag .GlyphNames =make ([]GlyphName ,len (_gbfd ));for _dfc :=0;_dfc < len (_ggg ._cag .GlyphNames );_dfc ++{_bfa :=_bbbb [_gbfd [_dfc ]];_ggg ._cag .GlyphNames [_dfc ]=_bfa ;};case 3.0:_d .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_d .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_agfe );};return nil ;};func (_aebd *ttfParser )ParseOS2 ()error {if _bae :=_aebd .Seek ("\u004f\u0053\u002f\u0032");
_bae !=nil {return _bae ;};_caa :=_aebd .ReadUShort ();_aebd .Skip (4*2);_aebd .Skip (11*2+10+4*4+4);_ccag :=_aebd .ReadUShort ();_aebd ._cag .Bold =(_ccag &32)!=0;_aebd .Skip (2*2);_aebd ._cag .TypoAscender =_aebd .ReadShort ();_aebd ._cag .TypoDescender =_aebd .ReadShort ();
if _caa >=2{_aebd .Skip (3*2+2*4+2);_aebd ._cag .CapHeight =_aebd .ReadShort ();}else {_aebd ._cag .CapHeight =0;};return nil ;};func (_bg StdFont )Descriptor ()Descriptor {return _bg ._fgee };func _cfb ()StdFont {_bba :=_bc .NewSymbolEncoder ();_bgc :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_bgc ,_bf ,_bba );};func (_ece *ttfParser )Parse ()(TtfType ,error ){_ecgb ,_fdc :=_ece .ReadStr (4);if _fdc !=nil {return TtfType {},_fdc ;};if _ecgb =="\u0074\u0074\u0063\u0066"{return _ece .parseTTC ();}else if _ecgb !="\u0000\u0001\u0000\u0000"&&_ecgb !="\u0074\u0072\u0075\u0065"{_d .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_ecgb );
};_cdge :=int (_ece .ReadUShort ());_ece .Skip (3*2);_ece ._ddd =make (map[string ]uint32 );var _fbg string ;for _ced :=0;_ced < _cdge ;_ced ++{_fbg ,_fdc =_ece .ReadStr (4);if _fdc !=nil {return TtfType {},_fdc ;};_ece .Skip (4);_bbc :=_ece .ReadULong ();
_ece .Skip (4);_ece ._ddd [_fbg ]=_bbc ;};_d .Log .Trace (_fbc (_ece ._ddd ));if _fdc =_ece .ParseComponents ();_fdc !=nil {return TtfType {},_fdc ;};return _ece ._cag ,nil ;};var _bf =&RuneCharSafeMap {_fd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func init (){RegisterStdFont (CourierName ,_gf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_bcc ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_cgg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_cab ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_db *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fg :=MakeRuneCharSafeMap (_db .Length ());_db .Range (func (_dg rune ,_gd CharMetrics )(_fe bool ){_fg ._fd [_dg ]=_gd ;return false });return _fg ;};func (_ffe *ttfParser )parseCmapVersion (_gag int64 )error {_d .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gag );
if _ffe ._cag .Chars ==nil {_ffe ._cag .Chars =make (map[rune ]GID );};_ffe ._dafg .Seek (int64 (_ffe ._ddd ["\u0063\u006d\u0061\u0070"])+_gag ,_c .SeekStart );var _ecad ,_ebb uint32 ;_afag :=_ffe .ReadUShort ();if _afag < 8{_ecad =uint32 (_ffe .ReadUShort ());
_ebb =uint32 (_ffe .ReadUShort ());}else {_ffe .ReadUShort ();_ecad =_ffe .ReadULong ();_ebb =_ffe .ReadULong ();};_d .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_afag ,_ecad ,_ebb );
switch _afag {case 0:return _ffe .parseCmapFormat0 ();case 6:return _ffe .parseCmapFormat6 ();case 12:return _ffe .parseCmapFormat12 ();default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_afag );
return nil ;};};func (_fbga *ttfParser )ParseHead ()error {if _dbe :=_fbga .Seek ("\u0068\u0065\u0061\u0064");_dbe !=nil {return _dbe ;};_fbga .Skip (3*4);_cgb :=_fbga .ReadULong ();if _cgb !=0x5F0F3CF5{_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fbga );
};_fbga .Skip (2);_fbga ._cag .UnitsPerEm =_fbga .ReadUShort ();_fbga .Skip (2*8);_fbga ._cag .Xmin =_fbga .ReadShort ();_fbga ._cag .Ymin =_fbga .ReadShort ();_fbga ._cag .Xmax =_fbga .ReadShort ();_fbga ._cag .Ymax =_fbga .ReadShort ();return nil ;};
var _caea _ff .Once ;func (_edfe *ttfParser )parseCmapFormat6 ()error {_ge :=int (_edfe .ReadUShort ());_cedb :=int (_edfe .ReadUShort ());_d .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_edfe ._cag .String (),_ge ,_cedb );
for _cggd :=0;_cggd < _cedb ;_cggd ++{_cebe :=GID (_edfe .ReadUShort ());_edfe ._cag .Chars [rune (_cggd +_ge )]=_cebe ;};return nil ;};func (_cga *ttfParser )Seek (tag string )error {_bgfe ,_fgb :=_cga ._ddd [tag ];if !_fgb {return _ec .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_cga ._dafg .Seek (int64 (_bgfe ),_c .SeekStart );return nil ;};func (_bdg *ttfParser )parseCmapFormat0 ()error {_febb ,_dfbb :=_bdg .ReadStr (256);if _dfbb !=nil {return _dfbb ;};_fadd :=[]byte (_febb );_d .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bdg ._cag .String (),_febb ,_fadd );
for _cef ,_edcc :=range _fadd {_bdg ._cag .Chars [rune (_cef )]=GID (_edcc );};return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_efa ,_dfd :=_egf .read (name );if !_dfd {return StdFont {},false ;};return _efa (),true ;};func _ffg ()StdFont {_gcec .Do (_bgf );
_gfe :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_gfe ,_ffd );
};type StdFont struct{_fgee Descriptor ;_cgf *RuneCharSafeMap ;_be _bc .TextEncoder ;};var _cfd *RuneCharSafeMap ;func init (){RegisterStdFont (HelveticaName ,_ffg ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ce ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_cee ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_efaf ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _gf ()StdFont {_bee .Do (_dcc );_cfc :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cfc ,_fdb );};func (_acca *ttfParser )ReadShort ()(_fcfd int16 ){_eg .Read (_acca ._dafg ,_eg .BigEndian ,&_fcfd );return _fcfd ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_gbc :=_egf .read (name );
_gbc {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_egf .write (name ,fnc );for _ ,_ga :=range aliases {RegisterStdFont (_ga ,fnc );};};var _gcc =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
type GlyphName =_bc .GlyphName ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};const (_ace ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););type fontMap struct{_ff .Mutex ;_df map[StdFontName ]func ()StdFont ;};func TtfParseFile (fileStr string )(TtfType ,error ){_ege ,_aacf :=_a .Open (fileStr );
if _aacf !=nil {return TtfType {},_aacf ;};defer _ege .Close ();return TtfParse (_ege );};var _gcec _ff .Once ;func TtfParse (r _c .ReadSeeker )(TtfType ,error ){_edf :=&ttfParser {_dafg :r };return _edf .Parse ()};func (_cae StdFont )Encoder ()_bc .TextEncoder {return _cae ._be };
func (_dbbf *ttfParser )parseCmapSubtable10 (_cdf int64 )error {if _dbbf ._cag .Chars ==nil {_dbbf ._cag .Chars =make (map[rune ]GID );};_dbbf ._dafg .Seek (int64 (_dbbf ._ddd ["\u0063\u006d\u0061\u0070"])+_cdf ,_c .SeekStart );var _fdcf ,_dfb uint32 ;
_bfe :=_dbbf .ReadUShort ();if _bfe < 8{_fdcf =uint32 (_dbbf .ReadUShort ());_dfb =uint32 (_dbbf .ReadUShort ());}else {_dbbf .ReadUShort ();_fdcf =_dbbf .ReadULong ();_dfb =_dbbf .ReadULong ();};_d .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_bfe ,_fdcf ,_dfb );
if _bfe !=0{return _cf .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbg ,_eff :=_dbbf .ReadStr (256);if _eff !=nil {return _eff ;
};_cdc :=[]byte (_cbg );for _egd ,_ega :=range _cdc {_dbbf ._cag .Chars [rune (_egd )]=GID (_ega );if _ega !=0{_ec .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_egd ,_ega ,rune (_ega ));
};};return nil ;};func init (){RegisterStdFont (SymbolName ,_cfb ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_fea );};var _aed =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _cbb *RuneCharSafeMap ;var _fae *RuneCharSafeMap ;var _fdb *RuneCharSafeMap ;func (_dgbe *ttfParser )ParseComponents ()error {if _abe :=_dgbe .ParseHead ();_abe !=nil {return _abe ;};if _cc :=_dgbe .ParseHhea ();_cc !=nil {return _cc ;};if _ggfdb :=_dgbe .ParseMaxp ();
_ggfdb !=nil {return _ggfdb ;};if _ffb :=_dgbe .ParseHmtx ();_ffb !=nil {return _ffb ;};if _ ,_efafg :=_dgbe ._ddd ["\u006e\u0061\u006d\u0065"];_efafg {if _ebe :=_dgbe .ParseName ();_ebe !=nil {return _ebe ;};};if _ ,_abb :=_dgbe ._ddd ["\u004f\u0053\u002f\u0032"];
_abb {if _fba :=_dgbe .ParseOS2 ();_fba !=nil {return _fba ;};};if _ ,_dddb :=_dgbe ._ddd ["\u0070\u006f\u0073\u0074"];_dddb {if _bdaf :=_dgbe .ParsePost ();_bdaf !=nil {return _bdaf ;};};if _ ,_cea :=_dgbe ._ddd ["\u0063\u006d\u0061\u0070"];_cea {if _cbd :=_dgbe .ParseCmap ();
_cbd !=nil {return _cbd ;};};return nil ;};func init (){RegisterStdFont (TimesRomanName ,_ede ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_fad ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_bec ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_fbb *ttfParser )parseCmapFormat12 ()error {_bbd :=_fbb .ReadULong ();_d .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_fbb ._cag .String (),_bbd );
for _dccac :=uint32 (0);_dccac < _bbd ;_dccac ++{_fcc :=_fbb .ReadULong ();_fgca :=_fbb .ReadULong ();_febe :=_fbb .ReadULong ();if _fcc > 0x0010FFFF||(0xD800<=_fcc &&_fcc <=0xDFFF){return _cf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fgca < _fcc ||_fgca > 0x0010FFFF||(0xD800<=_fgca &&_fgca <=0xDFFF){return _cf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _adb :=_fcc ;_adb <=_fgca ;
_adb ++{if _adb > 0x10FFFF{_d .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_fbb ._cag .Chars [rune (_adb )]=GID (_febe );_febe ++;};};return nil ;};func _cd ()StdFont {_caea .Do (_ggb );_ggc :=Descriptor {Name :TimesBoldItalicName ,Family :_ace ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ggc ,_gfaa );};var _ Font =StdFont {};type ttfParser struct{_cag TtfType ;_dafg _c .ReadSeeker ;_ddd map[string ]uint32 ;_bdb uint16 ;_daeb uint16 ;};var _dcd *RuneCharSafeMap ;func (_abd *TtfType )MakeToUnicode ()*_fc .CMap {_ag :=make (map[_fc .CharCode ]rune );
if len (_abd .GlyphNames )==0{for _cfg :=range _abd .Chars {_ag [_fc .CharCode (_cfg )]=_cfg ;};return _fc .NewToUnicodeCMap (_ag );};for _bdd ,_beee :=range _abd .Chars {_aee :=_fc .CharCode (_bdd );_dbb :=_abd .GlyphNames [_beee ];_fcf ,_bab :=_bc .GlyphToRune (_dbb );
if !_bab {_d .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bdd ,_dbb );_fcf =_bc .MissingCodeRune ;};_ag [_aee ]=_fcf ;};return _fc .NewToUnicodeCMap (_ag );
};func (_dgb *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_dgb ._bb .Lock ();defer _dgb ._bb .Unlock ();_dgb ._fd [b ]=r ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_eb *RuneCharSafeMap )Range (f func (_dgc rune ,_ded CharMetrics )(_faf bool )){_eb ._bb .RLock ();
defer _eb ._bb .RUnlock ();for _fb ,_ae :=range _eb ._fd {if f (_fb ,_ae ){break ;};};};func _ce ()StdFont {_gcec .Do (_bgf );_gg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gg ,_dfeg );};var _ee =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_beg *ttfParser )ReadStr (length int )(string ,error ){_gec :=make ([]byte ,length );_ada ,_efae :=_beg ._dafg .Read (_gec );if _efae !=nil {return "",_efae ;}else if _ada !=length {return "",_ec .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_gec ),nil ;};func (_efab *ttfParser )ReadSByte ()(_cfbb int8 ){_eg .Read (_efab ._dafg ,_eg .BigEndian ,&_cfbb );return _cfbb ;};func NewFontFile2FromPdfObject (obj _fa .PdfObject )(TtfType ,error ){obj =_fa .TraceToDirectObject (obj );
_ffga ,_dccd :=obj .(*_fa .PdfObjectStream );if !_dccd {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_fa .ErrTypeError ;};_bbb ,_beea :=_fa .DecodeStream (_ffga );if _beea !=nil {return TtfType {},_beea ;};_bda :=ttfParser {_dafg :_f .NewReader (_bbb )};return _bda .Parse ();};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_bc .NewStandardEncoder ());
};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_bga *ttfParser )ParseHmtx ()error {if _bdce :=_bga .Seek ("\u0068\u006d\u0074\u0078");_bdce !=nil {return _bdce ;
};_bga ._cag .Widths =make ([]uint16 ,0,8);for _dba :=uint16 (0);_dba < _bga ._bdb ;_dba ++{_bga ._cag .Widths =append (_bga ._cag .Widths ,_bga .ReadUShort ());_bga .Skip (2);};if _bga ._bdb < _bga ._daeb &&_bga ._bdb > 0{_aad :=_bga ._cag .Widths [_bga ._bdb -1];
for _bdca :=_bga ._bdb ;_bdca < _bga ._daeb ;_bdca ++{_bga ._cag .Widths =append (_bga ._cag .Widths ,_aad );};};return nil ;};func (_cb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _cb ._cgf };func (_fge *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fge ._bb .RLock ();
defer _fge ._bb .RUnlock ();_de ,_bcb :=_fge ._fd [b ];return _de ,_bcb ;};var _afe =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_aef StdFont )Name ()string {return string (_aef ._fgee .Name )};func (_gb *fontMap )write (_ba StdFontName ,_dae func ()StdFont ){_gb .Lock ();defer _gb .Unlock ();_gb ._df [_ba ]=_dae ;};func _cgg ()StdFont {_bee .Do (_dcc );_gce :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gce ,_cbb );};var _ffd *RuneCharSafeMap ;func (_fcda *ttfParser )ReadULong ()(_dca uint32 ){_eg .Read (_fcda ._dafg ,_eg .BigEndian ,&_dca );return _dca ;};func _dcc (){const _ed =600;_fdb =MakeRuneCharSafeMap (len (_efac ));for _ ,_fafc :=range _efac {_fdb .Write (_fafc ,CharMetrics {Wx :_ed });
};_cfd =_fdb .Copy ();_ddb =_fdb .Copy ();_cbb =_fdb .Copy ();};func _efaf ()StdFont {_gcec .Do (_bgf );_aeg :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_aeg ,_dcd );};var _dfeg *RuneCharSafeMap ;var _bbbb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _bca =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _adf *RuneCharSafeMap ;func (_eca *TtfType )NewEncoder ()_bc .TextEncoder {return _bc .NewTrueTypeFontEncoder (_eca .Chars )};
func (_ac *RuneCharSafeMap )Length ()int {_ac ._bb .RLock ();defer _ac ._bb .RUnlock ();return len (_ac ._fd );};func IsStdFont (name StdFontName )bool {_ ,_ffc :=_egf .read (name );return _ffc };var _ddb *RuneCharSafeMap ;func (_aeb *ttfParser )parseCmapSubtable31 (_cgd int64 )error {_eae :=make ([]rune ,0,8);
_cfdd :=make ([]rune ,0,8);_dad :=make ([]int16 ,0,8);_acf :=make ([]uint16 ,0,8);_aeb ._cag .Chars =make (map[rune ]GID );_aeb ._dafg .Seek (int64 (_aeb ._ddd ["\u0063\u006d\u0061\u0070"])+_cgd ,_c .SeekStart );_ccad :=_aeb .ReadUShort ();if _ccad !=4{_d .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_ccad );
return nil ;};_aeb .Skip (2*2);_gda :=int (_aeb .ReadUShort ()/2);_aeb .Skip (3*2);for _ccg :=0;_ccg < _gda ;_ccg ++{_cfdd =append (_cfdd ,rune (_aeb .ReadUShort ()));};_aeb .Skip (2);for _gge :=0;_gge < _gda ;_gge ++{_eae =append (_eae ,rune (_aeb .ReadUShort ()));
};for _gcf :=0;_gcf < _gda ;_gcf ++{_dad =append (_dad ,_aeb .ReadShort ());};_dcdd ,_ :=_aeb ._dafg .Seek (int64 (0),_c .SeekCurrent );for _dgd :=0;_dgd < _gda ;_dgd ++{_acf =append (_acf ,_aeb .ReadUShort ());};for _ceea :=0;_ceea < _gda ;_ceea ++{_ceb :=_eae [_ceea ];
_dbgb :=_cfdd [_ceea ];_feae :=_dad [_ceea ];_gbff :=_acf [_ceea ];if _gbff > 0{_aeb ._dafg .Seek (_dcdd +2*int64 (_ceea )+int64 (_gbff ),_c .SeekStart );};for _fbad :=_ceb ;_fbad <=_dbgb ;_fbad ++{if _fbad ==0xFFFF{break ;};var _cba int32 ;if _gbff > 0{_cba =int32 (_aeb .ReadUShort ());
if _cba > 0{_cba +=int32 (_feae );};}else {_cba =_fbad +int32 (_feae );};if _cba >=65536{_cba -=65536;};if _cba > 0{_aeb ._cag .Chars [_fbad ]=GID (_cba );};};};return nil ;};func _bcc ()StdFont {_bee .Do (_dcc );_dac :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dac ,_cfd );};func (_cdg *TtfType )String ()string {return _ec .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cdg .PostScriptName ,_cdg .UnitsPerEm ,_cdg .Bold ,_cdg .ItalicAngle ,_cdg .CapHeight ,len (_cdg .Chars ),len (_cdg .GlyphNames ));
};func (_dd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ad ,_bef :=_dd ._cgf .Read (r );return _ad ,_bef ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;
TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_gbf *TtfType )MakeEncoder ()(_bc .SimpleEncoder ,error ){_fcb :=make (map[_bc .CharCode ]GlyphName );
for _afab :=_bc .CharCode (0);_afab <=256;_afab ++{_aa :=rune (_afab );_abc ,_aac :=_gbf .Chars [_aa ];if !_aac {continue ;};var _ea GlyphName ;if int (_abc )>=0&&int (_abc )< len (_gbf .GlyphNames ){_ea =_gbf .GlyphNames [_abc ];}else {_gab :=rune (_abc );
if _dcf ,_gdf :=_bc .RuneToGlyph (_gab );_gdf {_ea =_dcf ;};};if _ea !=""{_fcb [_afab ]=_ea ;};};if len (_fcb )==0{_d .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gbf ,_gbf .Chars );
};return _bc .NewCustomSimpleTextEncoder (_fcb ,nil );};func (_dfeb *ttfParser )ParseMaxp ()error {if _dbg :=_dfeb .Seek ("\u006d\u0061\u0078\u0070");_dbg !=nil {return _dbg ;};_dfeb .Skip (4);_dfeb ._daeb =_dfeb .ReadUShort ();return nil ;};func _cee ()StdFont {_gcec .Do (_bgf );
_ffca :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_ffca ,_ecg );
};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func _fea ()StdFont {_daf :=_bc .NewZapfDingbatsEncoder ();_fafb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fafb ,_fgd ,_daf );};func (_gef *ttfParser )ParseName ()error {if _dgf :=_gef .Seek ("\u006e\u0061\u006d\u0065");_dgf !=nil {return _dgf ;};_fdda ,_ :=_gef ._dafg .Seek (0,_c .SeekCurrent );_gef ._cag .PostScriptName ="";
_gef .Skip (2);_fbe :=_gef .ReadUShort ();_aegg :=_gef .ReadUShort ();for _beed :=uint16 (0);_beed < _fbe &&_gef ._cag .PostScriptName =="";_beed ++{_gef .Skip (3*2);_cff :=_gef .ReadUShort ();_gcg :=_gef .ReadUShort ();_dcde :=_gef .ReadUShort ();if _cff ==6{_gef ._dafg .Seek (_fdda +int64 (_aegg )+int64 (_dcde ),_c .SeekStart );
_ffbf ,_befb :=_gef .ReadStr (int (_gcg ));if _befb !=nil {return _befb ;};_ffbf =_ef .Replace (_ffbf ,"\u0000","",-1);_bcf ,_befb :=_b .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _befb !=nil {return _befb ;
};_gef ._cag .PostScriptName =_bcf .ReplaceAllString (_ffbf ,"");};};if _gef ._cag .PostScriptName ==""{_d .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_ecd *ttfParser )Read32Fixed ()float64 {_gff :=float64 (_ecd .ReadShort ());_dbdd :=float64 (_ecd .ReadUShort ())/65536.0;return _gff +_dbdd ;};var _egf =&fontMap {_df :make (map[StdFontName ]func ()StdFont )};var _ecg *RuneCharSafeMap ;
func _bec ()StdFont {_caea .Do (_ggb );_dcca :=Descriptor {Name :TimesItalicName ,Family :_ace ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_dcca ,_adf );};func _ede ()StdFont {_caea .Do (_ggb );_feb :=Descriptor {Name :TimesRomanName ,Family :_ace ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_feb ,_fae );};var _edc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_cgfc *ttfParser )ReadUShort ()(_cac uint16 ){_eg .Read (_cgfc ._dafg ,_eg .BigEndian ,&_cac );return _cac ;};