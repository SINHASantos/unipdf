//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gc "bytes";_f "encoding/binary";_eb "errors";_dg "fmt";_ee "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/core";_fa "github.com/unidoc/unipdf/v3/internal/cmap";_af "github.com/unidoc/unipdf/v3/internal/textencoding";
_e "io";_ad "os";_a "regexp";_dd "sort";_g "strings";_df "sync";);var _baa =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _fdg ()StdFont {_ddg .Do (_fda );_fba :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fba ,_ccc );};func (_eaca *ttfParser )ReadULong ()(_eca uint32 ){_f .Read (_eaca ._ceca ,_f .BigEndian ,&_eca );return _eca ;};const (_ea ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func _aeb ()StdFont {_eea .Do (_bff );_fb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fb ,_afc );};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _af .TextEncoder )StdFont {var _bcc rune =0xA0;if _ ,_aeg :=metrics .Read (_bcc );!_aeg {_bfc ,_ :=metrics .Read (0x20);metrics .Write (_bcc ,_bfc );
};return StdFont {_cea :desc ,_dc :metrics ,_cfcc :encoder };};var _gb _df .Once ;func (_egaa *ttfParser )ReadSByte ()(_eba int8 ){_f .Read (_egaa ._ceca ,_f .BigEndian ,&_eba );return _eba ;};func (_gf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gf ._ga .Lock ();
defer _gf ._ga .Unlock ();_gf ._cd [b ]=r ;};func (_add *ttfParser )parseCmapSubtable10 (_gedd int64 )error {if _add ._cfg .Chars ==nil {_add ._cfg .Chars =make (map[rune ]GID );};_add ._ceca .Seek (int64 (_add ._aebd ["\u0063\u006d\u0061\u0070"])+_gedd ,_e .SeekStart );
var _aga ,_bab uint32 ;_cdd :=_add .ReadUShort ();if _cdd < 8{_aga =uint32 (_add .ReadUShort ());_bab =uint32 (_add .ReadUShort ());}else {_add .ReadUShort ();_aga =_add .ReadULong ();_bab =_add .ReadULong ();};_ee .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cdd ,_aga ,_bab );
if _cdd !=0{return _eb .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gfa ,_cdb :=_add .ReadStr (256);if _cdb !=nil {return _cdb ;
};_faf :=[]byte (_gfa );for _bafc ,_dccc :=range _faf {_add ._cfg .Chars [rune (_bafc )]=GID (_dccc );if _dccc !=0{_dg .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bafc ,_dccc ,rune (_dccc ));
};};return nil ;};type Font interface{Encoder ()_af .TextEncoder ;GetRuneMetrics (_ec rune )(CharMetrics ,bool );};func _dea ()StdFont {_eea .Do (_bff );_ca :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ca ,_gab );};type FontWeight int ;func (_beg *ttfParser )Parse ()(TtfType ,error ){_edg ,_dfc :=_beg .ReadStr (4);if _dfc !=nil {return TtfType {},_dfc ;};if _edg =="\u0074\u0074\u0063\u0066"{return _beg .parseTTC ();}else if _edg !="\u0000\u0001\u0000\u0000"&&_edg !="\u0074\u0072\u0075\u0065"{_ee .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_edg );
};_ggd :=int (_beg .ReadUShort ());_beg .Skip (3*2);_beg ._aebd =make (map[string ]uint32 );var _ggc string ;for _aeef :=0;_aeef < _ggd ;_aeef ++{_ggc ,_dfc =_beg .ReadStr (4);if _dfc !=nil {return TtfType {},_dfc ;};_beg .Skip (4);_bef :=_beg .ReadULong ();
_beg .Skip (4);_beg ._aebd [_ggc ]=_bef ;};_ee .Log .Trace (_bfa (_beg ._aebd ));if _dfc =_beg .ParseComponents ();_dfc !=nil {return TtfType {},_dfc ;};return _beg ._cfg ,nil ;};func _gee ()StdFont {_ddg .Do (_fda );_ebc :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ebc ,_bgd );};func (_gfec *ttfParser )ParseName ()error {if _afb :=_gfec .Seek ("\u006e\u0061\u006d\u0065");_afb !=nil {return _afb ;};_aade ,_ :=_gfec ._ceca .Seek (0,_e .SeekCurrent );_gfec ._cfg .PostScriptName ="";_gfec .Skip (2);
_edb :=_gfec .ReadUShort ();_ggb :=_gfec .ReadUShort ();for _edgb :=uint16 (0);_edgb < _edb &&_gfec ._cfg .PostScriptName =="";_edgb ++{_gfec .Skip (3*2);_dce :=_gfec .ReadUShort ();_dbc :=_gfec .ReadUShort ();_aab :=_gfec .ReadUShort ();if _dce ==6{_gfec ._ceca .Seek (_aade +int64 (_ggb )+int64 (_aab ),_e .SeekStart );
_eddb ,_gae :=_gfec .ReadStr (int (_dbc ));if _gae !=nil {return _gae ;};_eddb =_g .Replace (_eddb ,"\u0000","",-1);_egg ,_gae :=_a .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _gae !=nil {return _gae ;
};_gfec ._cfg .PostScriptName =_egg .ReplaceAllString (_eddb ,"");};};if _gfec ._cfg .PostScriptName ==""{_ee .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _cc ()StdFont {_eea .Do (_bff );_baf :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_baf ,_dde );};func (_gca StdFont )ToPdfObject ()_c .PdfObject {_be :=_c .MakeDict ();_be .Set ("\u0054\u0079\u0070\u0065",_c .MakeName ("\u0046\u006f\u006e\u0074"));_be .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_c .MakeName ("\u0054\u0079\u0070e\u0031"));
_be .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_c .MakeName (_gca .Name ()));_be .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gca ._cfcc .ToPdfObject ());return _c .MakeIndirectObject (_be );};var _abaf =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_gea *ttfParser )Skip (n int ){_gea ._ceca .Seek (int64 (n ),_e .SeekCurrent )};func (_cfc *fontMap )read (_ebf StdFontName )(func ()StdFont ,bool ){_cfc .Lock ();defer _cfc .Unlock ();_ae ,_fg :=_cfc ._ag [_ebf ];return _ae ,_fg ;};func (_cde *RuneCharSafeMap )Range (f func (_gff rune ,_dgg CharMetrics )(_gac bool )){_cde ._ga .RLock ();
defer _cde ._ga .RUnlock ();for _bb ,_bc :=range _cde ._cd {if f (_bb ,_bc ){break ;};};};func _aaf ()StdFont {_eea .Do (_bff );_gce :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gce ,_bd );};var _fgb *RuneCharSafeMap ;func _fda (){_cac =MakeRuneCharSafeMap (len (_aef ));_ccc =MakeRuneCharSafeMap (len (_aef ));for _bgc ,_dgeaa :=range _aef {_cac .Write (_dgeaa ,CharMetrics {Wx :float64 (_ff [_bgc ])});_ccc .Write (_dgeaa ,CharMetrics {Wx :float64 (_cfdg [_bgc ])});
};_bgd =_cac .Copy ();_fgb =_ccc .Copy ();};func (_cfcb *TtfType )String ()string {return _dg .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cfcb .PostScriptName ,_cfcb .UnitsPerEm ,_cfcb .Bold ,_cfcb .ItalicAngle ,_cfcb .CapHeight ,len (_cfcb .Chars ),len (_cfcb .GlyphNames ));
};var _gag =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_badc *ttfParser )parseCmapFormat6 ()error {_eeaa :=int (_badc .ReadUShort ());_gcf :=int (_badc .ReadUShort ());_ee .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_badc ._cfg .String (),_eeaa ,_gcf );
for _acb :=0;_acb < _gcf ;_acb ++{_cfce :=GID (_badc .ReadUShort ());_badc ._cfg .Chars [rune (_acb +_eeaa )]=_cfce ;};return nil ;};func NewFontFile2FromPdfObject (obj _c .PdfObject )(TtfType ,error ){obj =_c .TraceToDirectObject (obj );_fdc ,_fdcd :=obj .(*_c .PdfObjectStream );
if !_fdcd {_ee .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_c .ErrTypeError ;
};_adf ,_age :=_c .DecodeStream (_fdc );if _age !=nil {return TtfType {},_age ;};_fag :=ttfParser {_ceca :_gc .NewReader (_adf )};return _fag .Parse ();};var _ Font =StdFont {};func _cce ()StdFont {_fc :=_af .NewZapfDingbatsEncoder ();_bae :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bae ,_baa ,_fc );};func _dabb (){_db =MakeRuneCharSafeMap (len (_aef ));_gdf =MakeRuneCharSafeMap (len (_aef ));_dbe =MakeRuneCharSafeMap (len (_aef ));_fgbb =MakeRuneCharSafeMap (len (_aef ));for _gbc ,_bbf :=range _aef {_db .Write (_bbf ,CharMetrics {Wx :float64 (_bgcc [_gbc ])});
_gdf .Write (_bbf ,CharMetrics {Wx :float64 (_fdag [_gbc ])});_dbe .Write (_bbf ,CharMetrics {Wx :float64 (_cb [_gbc ])});_fgbb .Write (_bbf ,CharMetrics {Wx :float64 (_gag [_gbc ])});};};func init (){RegisterStdFont (CourierName ,_dea ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_aeb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_aaf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_cc ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_acg *ttfParser )parseTTC ()(TtfType ,error ){_acg .Skip (2*2);_cda :=_acg .ReadULong ();if _cda < 1{return TtfType {},_eb .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_cbc :=_acg .ReadULong ();_ ,_gebf :=_acg ._ceca .Seek (int64 (_cbc ),_e .SeekStart );if _gebf !=nil {return TtfType {},_gebf ;};return _acg .Parse ();};var _cac *RuneCharSafeMap ;func _beb ()StdFont {_gb .Do (_dabb );_afd :=Descriptor {Name :TimesBoldName ,Family :_ea ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_afd ,_gdf );};func (_dgea StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ecb ,_eee :=_dgea ._dc .Read (r );return _ecb ,_eee ;};func (_cba *TtfType )NewEncoder ()_af .TextEncoder {return _af .NewTrueTypeFontEncoder (_cba .Chars )};
var _cb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_aed StdFont )Name ()string {return string (_aed ._cea .Name )};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);type ttfParser struct{_cfg TtfType ;_ceca _e .ReadSeeker ;_aebd map[string ]uint32 ;_gfe uint16 ;_bcb uint16 ;};func (_bfaae *ttfParser )ReadShort ()(_fabg int16 ){_f .Read (_bfaae ._ceca ,_f .BigEndian ,&_fabg );return _fabg ;};var _eea _df .Once ;func init (){RegisterStdFont (HelveticaName ,_bad ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_fdg ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_gee ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gec ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_dafg *ttfParser )ReadUShort ()(_gffd uint16 ){_f .Read (_dafg ._ceca ,_f .BigEndian ,&_gffd );return _gffd ;};var _ff =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););type CharMetrics struct{Wx float64 ;Wy float64 ;};func TtfParse (r _e .ReadSeeker )(TtfType ,error ){_ggee :=&ttfParser {_ceca :r };
return _ggee .Parse ()};func (_bg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_bg ._ga .RLock ();defer _bg ._ga .RUnlock ();_ac ,_gad :=_bg ._cd [b ];return _ac ,_gad ;};type fontMap struct{_df .Mutex ;_ag map[StdFontName ]func ()StdFont ;};func _deb ()StdFont {_aaa :=_af .NewSymbolEncoder ();
_bgcf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_bgcf ,_cdec ,_aaa );
};var _dbe *RuneCharSafeMap ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _cdec =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
var _fgbb *RuneCharSafeMap ;func (_faeb *ttfParser )ReadStr (length int )(string ,error ){_acbb :=make ([]byte ,length );_cfba ,_dgc :=_faeb ._ceca .Read (_acbb );if _dgc !=nil {return "",_dgc ;}else if _cfba !=length {return "",_dg .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_acbb ),nil ;};func init (){RegisterStdFont (SymbolName ,_deb ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_cce );};func _bff (){const _dcc =600;_gab =MakeRuneCharSafeMap (len (_aef ));for _ ,_fdf :=range _aef {_gab .Write (_fdf ,CharMetrics {Wx :_dcc });};_afc =_gab .Copy ();_dde =_gab .Copy ();_bd =_gab .Copy ();};func (_dagd *ttfParser )parseCmapFormat0 ()error {_efb ,_dgae :=_dagd .ReadStr (256);
if _dgae !=nil {return _dgae ;};_eeb :=[]byte (_efb );_ee .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dagd ._cfg .String (),_efb ,_eeb );
for _cdeb ,_gecdg :=range _eeb {_dagd ._cfg .Chars [rune (_cdeb )]=GID (_gecdg );};return nil ;};var _gdf *RuneCharSafeMap ;var _bgcc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _cfdg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func init (){RegisterStdFont (TimesRomanName ,_dab ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_beb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_ebg ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_eeab ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _bad ()StdFont {_ddg .Do (_fda );_edad :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_edad ,_cac );};func (_ecg *ttfParser )ParseHhea ()error {if _dfd :=_ecg .Seek ("\u0068\u0068\u0065\u0061");_dfd !=nil {return _dfd ;};_ecg .Skip (4+15*2);_ecg ._gfe =_ecg .ReadUShort ();return nil ;};var _db *RuneCharSafeMap ;func (_aadg *ttfParser )ParseCmap ()error {var _dag int64 ;
if _fbac :=_aadg .Seek ("\u0063\u006d\u0061\u0070");_fbac !=nil {return _fbac ;};_aadg .ReadUShort ();_bdgf :=int (_aadg .ReadUShort ());_cfga :=int64 (0);_bada :=int64 (0);_ebdc :=int64 (0);for _fgcf :=0;_fgcf < _bdgf ;_fgcf ++{_dga :=_aadg .ReadUShort ();
_gaa :=_aadg .ReadUShort ();_dag =int64 (_aadg .ReadULong ());if _dga ==3&&_gaa ==1{_bada =_dag ;}else if _dga ==3&&_gaa ==10{_ebdc =_dag ;}else if _dga ==1&&_gaa ==0{_cfga =_dag ;};};if _cfga !=0{if _ddcb :=_aadg .parseCmapVersion (_cfga );_ddcb !=nil {return _ddcb ;
};};if _bada !=0{if _fgg :=_aadg .parseCmapSubtable31 (_bada );_fgg !=nil {return _fgg ;};};if _ebdc !=0{if _dba :=_aadg .parseCmapVersion (_ebdc );_dba !=nil {return _dba ;};};if _bada ==0&&_cfga ==0&&_ebdc ==0{_ee .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_b CharMetrics )String ()string {return _dg .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_b .Wx ,_b .Wy );};func (_dfe StdFont )Descriptor ()Descriptor {return _dfe ._cea };func (_egc *TtfType )MakeEncoder ()(_af .SimpleEncoder ,error ){_fgc :=make (map[_af .CharCode ]GlyphName );
for _gcg :=_af .CharCode (0);_gcg <=256;_gcg ++{_ef :=rune (_gcg );_dgef ,_ebfg :=_egc .Chars [_ef ];if !_ebfg {continue ;};var _def GlyphName ;if int (_dgef )>=0&&int (_dgef )< len (_egc .GlyphNames ){_def =_egc .GlyphNames [_dgef ];}else {_gbe :=rune (_dgef );
if _eeef ,_dcd :=_af .RuneToGlyph (_gbe );_dcd {_def =_eeef ;};};if _def !=""{_fgc [_gcg ]=_def ;};};if len (_fgc )==0{_ee .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_egc ,_egc .Chars );
};return _af .NewCustomSimpleTextEncoder (_fgc ,nil );};type StdFont struct{_cea Descriptor ;_dc *RuneCharSafeMap ;_cfcc _af .TextEncoder ;};func (_ba StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ba ._dc };func (_gba *ttfParser )ParseHead ()error {if _gabf :=_gba .Seek ("\u0068\u0065\u0061\u0064");
_gabf !=nil {return _gabf ;};_gba .Skip (3*4);_baab :=_gba .ReadULong ();if _baab !=0x5F0F3CF5{_ee .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_gba );
};_gba .Skip (2);_gba ._cfg .UnitsPerEm =_gba .ReadUShort ();_gba .Skip (2*8);_gba ._cfg .Xmin =_gba .ReadShort ();_gba ._cfg .Ymin =_gba .ReadShort ();_gba ._cfg .Xmax =_gba .ReadShort ();_gba ._cfg .Ymax =_gba .ReadShort ();return nil ;};func IsStdFont (name StdFontName )bool {_ ,_bf :=_ce .read (name );
return _bf };func (_fad *ttfParser )parseCmapFormat12 ()error {_ccg :=_fad .ReadULong ();_ee .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_fad ._cfg .String (),_ccg );
for _fbag :=uint32 (0);_fbag < _ccg ;_fbag ++{_cad :=_fad .ReadULong ();_ffg :=_fad .ReadULong ();_addb :=_fad .ReadULong ();if _cad > 0x0010FFFF||(0xD800<=_cad &&_cad <=0xDFFF){return _eb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _ffg < _cad ||_ffg > 0x0010FFFF||(0xD800<=_ffg &&_ffg <=0xDFFF){return _eb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fgf :=_cad ;_fgf <=_ffg ;
_fgf ++{if _fgf > 0x10FFFF{_ee .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_fad ._cfg .Chars [rune (_fgf )]=GID (_addb );_addb ++;};};return nil ;};func (_egb *ttfParser )parseCmapVersion (_fab int64 )error {_ee .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_fab );
if _egb ._cfg .Chars ==nil {_egb ._cfg .Chars =make (map[rune ]GID );};_egb ._ceca .Seek (int64 (_egb ._aebd ["\u0063\u006d\u0061\u0070"])+_fab ,_e .SeekStart );var _aegf ,_dcdf uint32 ;_bcf :=_egb .ReadUShort ();if _bcf < 8{_aegf =uint32 (_egb .ReadUShort ());
_dcdf =uint32 (_egb .ReadUShort ());}else {_egb .ReadUShort ();_aegf =_egb .ReadULong ();_dcdf =_egb .ReadULong ();};_ee .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bcf ,_aegf ,_dcdf );
switch _bcf {case 0:return _egb .parseCmapFormat0 ();case 6:return _egb .parseCmapFormat6 ();case 12:return _egb .parseCmapFormat12 ();default:_ee .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bcf );
return nil ;};};func (_bfe *ttfParser )ParseOS2 ()error {if _fae :=_bfe .Seek ("\u004f\u0053\u002f\u0032");_fae !=nil {return _fae ;};_ebcd :=_bfe .ReadUShort ();_bfe .Skip (4*2);_bfe .Skip (11*2+10+4*4+4);_cbae :=_bfe .ReadUShort ();_bfe ._cfg .Bold =(_cbae &32)!=0;
_bfe .Skip (2*2);_bfe ._cfg .TypoAscender =_bfe .ReadShort ();_bfe ._cfg .TypoDescender =_bfe .ReadShort ();if _ebcd >=2{_bfe .Skip (3*2+2*4+2);_bfe ._cfg .CapHeight =_bfe .ReadShort ();}else {_bfe ._cfg .CapHeight =0;};return nil ;};type GID =_af .GID ;
func (_aba *ttfParser )ParseMaxp ()error {if _bagd :=_aba .Seek ("\u006d\u0061\u0078\u0070");_bagd !=nil {return _bagd ;};_aba .Skip (4);_aba ._bcb =_aba .ReadUShort ();return nil ;};func (_cec StdFont )Encoder ()_af .TextEncoder {return _cec ._cfcc };
func (_fca *ttfParser )ParsePost ()error {if _ebdcd :=_fca .Seek ("\u0070\u006f\u0073\u0074");_ebdcd !=nil {return _ebdcd ;};_gaea :=_fca .Read32Fixed ();_fca ._cfg .ItalicAngle =_fca .Read32Fixed ();_fca ._cfg .UnderlinePosition =_fca .ReadShort ();_fca ._cfg .UnderlineThickness =_fca .ReadShort ();
_fca ._cfg .IsFixedPitch =_fca .ReadULong ()!=0;_fca .ReadULong ();_fca .ReadULong ();_fca .ReadULong ();_fca .ReadULong ();_ee .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gaea );
switch _gaea {case 1.0:_fca ._cfg .GlyphNames =_abaf ;case 2.0:_ggdf :=int (_fca .ReadUShort ());_gebe :=make ([]int ,_ggdf );_fca ._cfg .GlyphNames =make ([]GlyphName ,_ggdf );_ced :=-1;for _cca :=0;_cca < _ggdf ;_cca ++{_fcf :=int (_fca .ReadUShort ());
_gebe [_cca ]=_fcf ;if _fcf <=0x7fff&&_fcf > _ced {_ced =_fcf ;};};var _ecd []GlyphName ;if _ced >=len (_abaf ){_ecd =make ([]GlyphName ,_ced -len (_abaf )+1);for _cfb :=0;_cfb < _ced -len (_abaf )+1;_cfb ++{_gdbg :=int (_fca .readByte ());_gceg ,_dca :=_fca .ReadStr (_gdbg );
if _dca !=nil {return _dca ;};_ecd [_cfb ]=GlyphName (_gceg );};};for _gebc :=0;_gebc < _ggdf ;_gebc ++{_fggb :=_gebe [_gebc ];if _fggb < len (_abaf ){_fca ._cfg .GlyphNames [_gebc ]=_abaf [_fggb ];}else if _fggb >=len (_abaf )&&_fggb <=32767{_fca ._cfg .GlyphNames [_gebc ]=_ecd [_fggb -len (_abaf )];
}else {_fca ._cfg .GlyphNames [_gebc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_edda :=make ([]int ,_fca ._bcb );for _eac :=0;_eac < len (_edda );_eac ++{_fee :=int (_fca .ReadSByte ());_edda [_eac ]=_eac +1+_fee ;};
_fca ._cfg .GlyphNames =make ([]GlyphName ,len (_edda ));for _cfe :=0;_cfe < len (_fca ._cfg .GlyphNames );_cfe ++{_cga :=_abaf [_edda [_cfe ]];_fca ._cfg .GlyphNames [_cfe ]=_cga ;};case 3.0:_ee .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ee .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gaea );};return nil ;};var _ce =&fontMap {_ag :make (map[StdFontName ]func ()StdFont )};
func (_eag *TtfType )MakeToUnicode ()*_fa .CMap {_gdb :=make (map[_fa .CharCode ]rune );if len (_eag .GlyphNames )==0{for _geb :=range _eag .Chars {_gdb [_fa .CharCode (_geb )]=_geb ;};return _fa .NewToUnicodeCMap (_gdb );};for _ffc ,_aac :=range _eag .Chars {_ded :=_fa .CharCode (_ffc );
_fcd :=_eag .GlyphNames [_aac ];_defd ,_daf :=_af .GlyphToRune (_fcd );if !_daf {_ee .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_ffc ,_fcd );
_defd =_af .MissingCodeRune ;};_gdb [_ded ]=_defd ;};return _fa .NewToUnicodeCMap (_gdb );};var _bd *RuneCharSafeMap ;var _ddg _df .Once ;func (_fcc *ttfParser )parseCmapSubtable31 (_fdfe int64 )error {_fcg :=make ([]rune ,0,8);_cef :=make ([]rune ,0,8);
_ebgb :=make ([]int16 ,0,8);_adae :=make ([]uint16 ,0,8);_fcc ._cfg .Chars =make (map[rune ]GID );_fcc ._ceca .Seek (int64 (_fcc ._aebd ["\u0063\u006d\u0061\u0070"])+_fdfe ,_e .SeekStart );_abc :=_fcc .ReadUShort ();if _abc !=4{_ee .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_abc );
return nil ;};_fcc .Skip (2*2);_dee :=int (_fcc .ReadUShort ()/2);_fcc .Skip (3*2);for _dff :=0;_dff < _dee ;_dff ++{_cef =append (_cef ,rune (_fcc .ReadUShort ()));};_fcc .Skip (2);for _ede :=0;_ede < _dee ;_ede ++{_fcg =append (_fcg ,rune (_fcc .ReadUShort ()));
};for _fccc :=0;_fccc < _dee ;_fccc ++{_ebgb =append (_ebgb ,_fcc .ReadShort ());};_ega ,_ :=_fcc ._ceca .Seek (int64 (0),_e .SeekCurrent );for _bdg :=0;_bdg < _dee ;_bdg ++{_adae =append (_adae ,_fcc .ReadUShort ());};for _feg :=0;_feg < _dee ;_feg ++{_cff :=_fcg [_feg ];
_agd :=_cef [_feg ];_gecd :=_ebgb [_feg ];_acff :=_adae [_feg ];if _acff > 0{_fcc ._ceca .Seek (_ega +2*int64 (_feg )+int64 (_acff ),_e .SeekStart );};for _dec :=_cff ;_dec <=_agd ;_dec ++{if _dec ==0xFFFF{break ;};var _cgba int32 ;if _acff > 0{_cgba =int32 (_fcc .ReadUShort ());
if _cgba > 0{_cgba +=int32 (_gecd );};}else {_cgba =_dec +int32 (_gecd );};if _cgba >=65536{_cgba -=65536;};if _cgba > 0{_fcc ._cfg .Chars [_dec ]=GID (_cgba );};};};return nil ;};func (_aadd *ttfParser )ParseHmtx ()error {if _dbd :=_aadd .Seek ("\u0068\u006d\u0074\u0078");
_dbd !=nil {return _dbd ;};_aadd ._cfg .Widths =make ([]uint16 ,0,8);for _ebd :=uint16 (0);_ebd < _aadd ._gfe ;_ebd ++{_aadd ._cfg .Widths =append (_aadd ._cfg .Widths ,_aadd .ReadUShort ());_aadd .Skip (2);};if _aadd ._gfe < _aadd ._bcb &&_aadd ._gfe > 0{_dede :=_aadd ._cfg .Widths [_aadd ._gfe -1];
for _ada :=_aadd ._gfe ;_ada < _aadd ._bcb ;_ada ++{_aadd ._cfg .Widths =append (_aadd ._cfg .Widths ,_dede );};};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;
TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _ebg ()StdFont {_gb .Do (_dabb );_ecff :=Descriptor {Name :TimesItalicName ,Family :_ea ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ecff ,_fgbb );};var _aef =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_ace *RuneCharSafeMap )Length ()int {_ace ._ga .RLock ();
defer _ace ._ga .RUnlock ();return len (_ace ._cd );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_eg :=_ce .read (name );_eg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ce .write (name ,fnc );for _ ,_fd :=range aliases {RegisterStdFont (_fd ,fnc );};};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_af .NewStandardEncoder ());};func TtfParseFile (fileStr string )(TtfType ,error ){_gde ,_cg :=_ad .Open (fileStr );
if _cg !=nil {return TtfType {},_cg ;};defer _gde .Close ();return TtfParse (_gde );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cd :make (map[rune ]CharMetrics ,length )};};func (_ed *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_cf :=MakeRuneCharSafeMap (_ed .Length ());
_ed .Range (func (_ab rune ,_da CharMetrics )(_fe bool ){_cf ._cd [_ab ]=_da ;return false });return _cf ;};func _gec ()StdFont {_ddg .Do (_fda );_gge :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gge ,_fgb );};func (_bbb *ttfParser )readByte ()(_bfab uint8 ){_f .Read (_bbb ._ceca ,_f .BigEndian ,&_bfab );return _bfab ;};func _bfa (_gdbb map[string ]uint32 )string {var _dad []string ;for _cdc :=range _gdbb {_dad =append (_dad ,_cdc );
};_dd .Slice (_dad ,func (_acf ,_gcd int )bool {return _gdbb [_dad [_acf ]]< _gdbb [_dad [_gcd ]]});_afcb :=[]string {_dg .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_gdbb ))};
for _ ,_cbaf :=range _dad {_afcb =append (_afcb ,_dg .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cbaf ,_gdbb [_cbaf ]));};return _g .Join (_afcb ,"\u000a");};func (_gg *fontMap )write (_de StdFontName ,_abe func ()StdFont ){_gg .Lock ();defer _gg .Unlock ();
_gg ._ag [_de ]=_abe ;};func _eeab ()StdFont {_gb .Do (_dabb );_dcb :=Descriptor {Name :TimesBoldItalicName ,Family :_ea ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dcb ,_dbe );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_gd ,_dge :=_ce .read (name );if !_dge {return StdFont {},false ;};return _gd (),true ;};func (_cbb *ttfParser )ParseComponents ()error {if _cge :=_cbb .ParseHead ();
_cge !=nil {return _cge ;};if _edd :=_cbb .ParseHhea ();_edd !=nil {return _edd ;};if _cbe :=_cbb .ParseMaxp ();_cbe !=nil {return _cbe ;};if _aad :=_cbb .ParseHmtx ();_aad !=nil {return _aad ;};if _ ,_ccb :=_cbb ._aebd ["\u006e\u0061\u006d\u0065"];_ccb {if _dbg :=_cbb .ParseName ();
_dbg !=nil {return _dbg ;};};if _ ,_gdd :=_cbb ._aebd ["\u004f\u0053\u002f\u0032"];_gdd {if _ceg :=_cbb .ParseOS2 ();_ceg !=nil {return _ceg ;};};if _ ,_bfaa :=_cbb ._aebd ["\u0070\u006f\u0073\u0074"];_bfaa {if _ged :=_cbb .ParsePost ();_ged !=nil {return _ged ;
};};if _ ,_ddc :=_cbb ._aebd ["\u0063\u006d\u0061\u0070"];_ddc {if _bag :=_cbb .ParseCmap ();_bag !=nil {return _bag ;};};return nil ;};type GlyphName =_af .GlyphName ;func (_ffe *ttfParser )Read32Fixed ()float64 {_eaa :=float64 (_ffe .ReadShort ());_bcff :=float64 (_ffe .ReadUShort ())/65536.0;
return _eaa +_bcff ;};func (_gfaa *ttfParser )Seek (tag string )error {_ccd ,_aea :=_gfaa ._aebd [tag ];if !_aea {return _dg .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_gfaa ._ceca .Seek (int64 (_ccd ),_e .SeekStart );
return nil ;};var _bgd *RuneCharSafeMap ;var _fdag =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _afc *RuneCharSafeMap ;type RuneCharSafeMap struct{_cd map[rune ]CharMetrics ;_ga _df .RWMutex ;};var _gab *RuneCharSafeMap ;var _ccc *RuneCharSafeMap ;type StdFontName string ;var _dde *RuneCharSafeMap ;func _dab ()StdFont {_gb .Do (_dabb );_dae :=Descriptor {Name :TimesRomanName ,Family :_ea ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_dae ,_db );};