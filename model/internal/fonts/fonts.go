//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_dg "bytes";_c "encoding/binary";_ec "errors";_a "fmt";_fa "github.com/unidoc/unipdf/v3/common";_ff "github.com/unidoc/unipdf/v3/core";_ae "github.com/unidoc/unipdf/v3/internal/cmap";_cd "github.com/unidoc/unipdf/v3/internal/textencoding";
_ee "io";_f "os";_b "regexp";_d "sort";_e "strings";_gg "sync";);func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_eec :=_ba .read (name );_eec {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ba .write (name ,fnc );for _ ,_fg :=range aliases {RegisterStdFont (_fg ,fnc );};};var _ceb _gg .Once ;func _eb ()StdFont {_ceb .Do (_faf );_bcae :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bcae ,_fge );};func (_fdc *ttfParser )parseCmapVersion (_abbe int64 )error {_fa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_abbe );
if _fdc ._aca .Chars ==nil {_fdc ._aca .Chars =make (map[rune ]GID );};_fdc ._fab .Seek (int64 (_fdc ._fbf ["\u0063\u006d\u0061\u0070"])+_abbe ,_ee .SeekStart );var _gff ,_acfc uint32 ;_ggf :=_fdc .ReadUShort ();if _ggf < 8{_gff =uint32 (_fdc .ReadUShort ());
_acfc =uint32 (_fdc .ReadUShort ());}else {_fdc .ReadUShort ();_gff =_fdc .ReadULong ();_acfc =_fdc .ReadULong ();};_fa .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_ggf ,_gff ,_acfc );
switch _ggf {case 0:return _fdc .parseCmapFormat0 ();case 6:return _fdc .parseCmapFormat6 ();case 12:return _fdc .parseCmapFormat12 ();default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_ggf );
return nil ;};};func _cge ()StdFont {_ccd .Do (_bfdg );_ced :=Descriptor {Name :TimesBoldItalicName ,Family :_ggb ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ced ,_ddd );};func NewFontFile2FromPdfObject (obj _ff .PdfObject )(TtfType ,error ){obj =_ff .TraceToDirectObject (obj );_dgfg ,_afa :=obj .(*_ff .PdfObjectStream );if !_afa {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ff .ErrTypeError ;};_dbf ,_cdbe :=_ff .DecodeStream (_dgfg );if _cdbe !=nil {return TtfType {},_cdbe ;};_aag :=ttfParser {_fab :_dg .NewReader (_dbf )};return _aag .Parse ();};var _bgeg *RuneCharSafeMap ;type GID =_cd .GID ;func (_fdaa *ttfParser )ReadShort ()(_gdec int16 ){_c .Read (_fdaa ._fab ,_c .BigEndian ,&_gdec );
return _gdec ;};func (_beda *ttfParser )ParseComponents ()error {if _beg :=_beda .ParseHead ();_beg !=nil {return _beg ;};if _gee :=_beda .ParseHhea ();_gee !=nil {return _gee ;};if _gcc :=_beda .ParseMaxp ();_gcc !=nil {return _gcc ;};if _bad :=_beda .ParseHmtx ();
_bad !=nil {return _bad ;};if _ ,_ebd :=_beda ._fbf ["\u006e\u0061\u006d\u0065"];_ebd {if _ddf :=_beda .ParseName ();_ddf !=nil {return _ddf ;};};if _ ,_cfb :=_beda ._fbf ["\u004f\u0053\u002f\u0032"];_cfb {if _eaf :=_beda .ParseOS2 ();_eaf !=nil {return _eaf ;
};};if _ ,_eefd :=_beda ._fbf ["\u0070\u006f\u0073\u0074"];_eefd {if _ace :=_beda .ParsePost ();_ace !=nil {return _ace ;};};if _ ,_abb :=_beda ._fbf ["\u0063\u006d\u0061\u0070"];_abb {if _fda :=_beda .ParseCmap ();_fda !=nil {return _fda ;};};return nil ;
};func (_fd *ttfParser )Parse ()(TtfType ,error ){_gdcf ,_cef :=_fd .ReadStr (4);if _cef !=nil {return TtfType {},_cef ;};if _gdcf =="\u0074\u0074\u0063\u0066"{return _fd .parseTTC ();}else if _gdcf !="\u0000\u0001\u0000\u0000"&&_gdcf !="\u0074\u0072\u0075\u0065"{_fa .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_gdcf );
};_fef :=int (_fd .ReadUShort ());_fd .Skip (3*2);_fd ._fbf =make (map[string ]uint32 );var _adg string ;for _aeb :=0;_aeb < _fef ;_aeb ++{_adg ,_cef =_fd .ReadStr (4);if _cef !=nil {return TtfType {},_cef ;};_fd .Skip (4);_fec :=_fd .ReadULong ();_fd .Skip (4);
_fd ._fbf [_adg ]=_fec ;};_fa .Log .Trace (_aegf (_fd ._fbf ));if _cef =_fd .ParseComponents ();_cef !=nil {return TtfType {},_cef ;};return _fd ._aca ,nil ;};type fontMap struct{_gg .Mutex ;_db map[StdFontName ]func ()StdFont ;};var _dgff =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_def *ttfParser )ParseHmtx ()error {if _fbfg :=_def .Seek ("\u0068\u006d\u0074\u0078");_fbfg !=nil {return _fbfg ;};_def ._aca .Widths =make ([]uint16 ,0,8);for _cac :=uint16 (0);_cac < _def ._bed ;_cac ++{_def ._aca .Widths =append (_def ._aca .Widths ,_def .ReadUShort ());
_def .Skip (2);};if _def ._bed < _def ._fad &&_def ._bed > 0{_aaa :=_def ._aca .Widths [_def ._bed -1];for _fbb :=_def ._bed ;_fbb < _def ._fad ;_fbb ++{_def ._aca .Widths =append (_def ._aca .Widths ,_aaa );};};return nil ;};func _dga ()StdFont {_ceb .Do (_faf );
_ce :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_ce ,_cg );
};func (_fgef *TtfType )MakeEncoder ()(_cd .SimpleEncoder ,error ){_aaf :=make (map[_cd .CharCode ]GlyphName );for _deb :=_cd .CharCode (0);_deb <=256;_deb ++{_daf :=rune (_deb );_feg ,_ffe :=_fgef .Chars [_daf ];if !_ffe {continue ;};var _ag GlyphName ;
if int (_feg )>=0&&int (_feg )< len (_fgef .GlyphNames ){_ag =_fgef .GlyphNames [_feg ];}else {_bgega :=rune (_feg );if _fce ,_fgc :=_cd .RuneToGlyph (_bgega );_fgc {_ag =_fce ;};};if _ag !=""{_aaf [_deb ]=_ag ;};};if len (_aaf )==0{_fa .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fgef ,_fgef .Chars );
};return _cd .NewCustomSimpleTextEncoder (_aaf ,nil );};func (_fafe *ttfParser )parseTTC ()(TtfType ,error ){_fafe .Skip (2*2);_gfge :=_fafe .ReadULong ();if _gfge < 1{return TtfType {},_ec .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_aede :=_fafe .ReadULong ();_ ,_faa :=_fafe ._fab .Seek (int64 (_aede ),_ee .SeekStart );if _faa !=nil {return TtfType {},_faa ;};return _fafe .Parse ();};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _cd .TextEncoder )StdFont {var _cdb rune =0xA0;
if _ ,_afe :=metrics .Read (_cdb );!_afe {_gfg ,_ :=metrics .Read (0x20);metrics .Write (_cdb ,_gfg );};return StdFont {_cb :desc ,_cbc :metrics ,_cbf :encoder };};var _fga _gg .Once ;func _faf (){const _dgfd =600;_fge =MakeRuneCharSafeMap (len (_dgff ));
for _ ,_gce :=range _dgff {_fge .Write (_gce ,CharMetrics {Wx :_dgfd });};_dce =_fge .Copy ();_cg =_fge .Copy ();_eag =_fge .Copy ();};func _dcd ()StdFont {_fga .Do (_bbd );_gbb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gbb ,_eef );};var _ Font =StdFont {};var _eag *RuneCharSafeMap ;var _gbg *RuneCharSafeMap ;func (_fba *ttfParser )parseCmapFormat12 ()error {_acfbf :=_fba .ReadULong ();_fa .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_fba ._aca .String (),_acfbf );
for _cgd :=uint32 (0);_cgd < _acfbf ;_cgd ++{_gcf :=_fba .ReadULong ();_fgce :=_fba .ReadULong ();_cdgg :=_fba .ReadULong ();if _gcf > 0x0010FFFF||(0xD800<=_gcf &&_gcf <=0xDFFF){return _ec .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fgce < _gcf ||_fgce > 0x0010FFFF||(0xD800<=_fgce &&_fgce <=0xDFFF){return _ec .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _afc :=_gcf ;_afc <=_fgce ;
_afc ++{if _afc > 0x10FFFF{_fa .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_fba ._aca .Chars [rune (_afc )]=GID (_cdgg );_cdgg ++;};};return nil ;};var _ed =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _eg ()StdFont {_ccd .Do (_bfdg );_fgag :=Descriptor {Name :TimesBoldName ,Family :_ggb ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fgag ,_dea );};func (_bb StdFont )ToPdfObject ()_ff .PdfObject {_aege :=_ff .MakeDict ();_aege .Set ("\u0054\u0079\u0070\u0065",_ff .MakeName ("\u0046\u006f\u006e\u0074"));_aege .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ff .MakeName ("\u0054\u0079\u0070e\u0031"));
_aege .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ff .MakeName (_bb .Name ()));_aege .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bb ._cbf .ToPdfObject ());return _ff .MakeIndirectObject (_aege );};func (_daag *ttfParser )ReadStr (length int )(string ,error ){_fecb :=make ([]byte ,length );
_eac ,_acdc :=_daag ._fab .Read (_fecb );if _acdc !=nil {return "",_acdc ;}else if _eac !=length {return "",_a .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fecb ),nil ;};type FontWeight int ;func (_abc *ttfParser )ParsePost ()error {if _edfg :=_abc .Seek ("\u0070\u006f\u0073\u0074");_edfg !=nil {return _edfg ;};_gcb :=_abc .Read32Fixed ();_abc ._aca .ItalicAngle =_abc .Read32Fixed ();_abc ._aca .UnderlinePosition =_abc .ReadShort ();
_abc ._aca .UnderlineThickness =_abc .ReadShort ();_abc ._aca .IsFixedPitch =_abc .ReadULong ()!=0;_abc .ReadULong ();_abc .ReadULong ();_abc .ReadULong ();_abc .ReadULong ();_fa .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gcb );
switch _gcb {case 1.0:_abc ._aca .GlyphNames =_abg ;case 2.0:_fdge :=int (_abc .ReadUShort ());_acgd :=make ([]int ,_fdge );_abc ._aca .GlyphNames =make ([]GlyphName ,_fdge );_gde :=-1;for _egb :=0;_egb < _fdge ;_egb ++{_ebaf :=int (_abc .ReadUShort ());
_acgd [_egb ]=_ebaf ;if _ebaf <=0x7fff&&_ebaf > _gde {_gde =_ebaf ;};};var _eeg []GlyphName ;if _gde >=len (_abg ){_eeg =make ([]GlyphName ,_gde -len (_abg )+1);for _fbe :=0;_fbe < _gde -len (_abg )+1;_fbe ++{_bce :=int (_abc .readByte ());_egee ,_cff :=_abc .ReadStr (_bce );
if _cff !=nil {return _cff ;};_eeg [_fbe ]=GlyphName (_egee );};};for _bcdf :=0;_bcdf < _fdge ;_bcdf ++{_bcaf :=_acgd [_bcdf ];if _bcaf < len (_abg ){_abc ._aca .GlyphNames [_bcdf ]=_abg [_bcaf ];}else if _bcaf >=len (_abg )&&_bcaf <=32767{_abc ._aca .GlyphNames [_bcdf ]=_eeg [_bcaf -len (_abg )];
}else {_abc ._aca .GlyphNames [_bcdf ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_aced :=make ([]int ,_abc ._fad );for _cab :=0;_cab < len (_aced );_cab ++{_badb :=int (_abc .ReadSByte ());_aced [_cab ]=_cab +1+_badb ;
};_abc ._aca .GlyphNames =make ([]GlyphName ,len (_aced ));for _egde :=0;_egde < len (_abc ._aca .GlyphNames );_egde ++{_dgaa :=_abg [_aced [_egde ]];_abc ._aca .GlyphNames [_egde ]=_dgaa ;};case 3.0:_fa .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gcb );};return nil ;};func (_aeg StdFont )Descriptor ()Descriptor {return _aeg ._cb };
func init (){RegisterStdFont (CourierName ,_eb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_daa ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_ea ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_dga ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func _baad ()StdFont {_ccd .Do (_bfdg );_bfd :=Descriptor {Name :TimesRomanName ,Family :_ggb ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_bfd ,_gdc );};func (_cec *TtfType )NewEncoder ()_cd .TextEncoder {return _cd .NewTrueTypeFontEncoder (_cec .Chars )};func _cda ()StdFont {_fga .Do (_bbd );_eagf :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eagf ,_gbg );};var _cg *RuneCharSafeMap ;func (_efdf *ttfParser )ParseCmap ()error {var _cgb int64 ;if _edf :=_efdf .Seek ("\u0063\u006d\u0061\u0070");_edf !=nil {return _edf ;};_efdf .ReadUShort ();_gca :=int (_efdf .ReadUShort ());
_efde :=int64 (0);_baab :=int64 (0);_efa :=int64 (0);for _ccbe :=0;_ccbe < _gca ;_ccbe ++{_ead :=_efdf .ReadUShort ();_acfb :=_efdf .ReadUShort ();_cgb =int64 (_efdf .ReadULong ());if _ead ==3&&_acfb ==1{_baab =_cgb ;}else if _ead ==3&&_acfb ==10{_efa =_cgb ;
}else if _ead ==1&&_acfb ==0{_efde =_cgb ;};};if _efde !=0{if _gfe :=_efdf .parseCmapVersion (_efde );_gfe !=nil {return _gfe ;};};if _baab !=0{if _eaa :=_efdf .parseCmapSubtable31 (_baab );_eaa !=nil {return _eaa ;};};if _efa !=0{if _add :=_efdf .parseCmapVersion (_efa );
_add !=nil {return _add ;};};if _baab ==0&&_efde ==0&&_efa ==0{_fa .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _ba =&fontMap {_db :make (map[StdFontName ]func ()StdFont )};var _gdc *RuneCharSafeMap ;func (_gb *RuneCharSafeMap )Range (f func (_ggc rune ,_gfb CharMetrics )(_bc bool )){_gb ._bg .RLock ();defer _gb ._bg .RUnlock ();for _bgc ,_da :=range _gb ._dgf {if f (_bgc ,_da ){break ;
};};};func (_dfe StdFont )Name ()string {return string (_dfe ._cb .Name )};var _afef =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
type StdFont struct{_cb Descriptor ;_cbc *RuneCharSafeMap ;_cbf _cd .TextEncoder ;};func init (){RegisterStdFont (HelveticaName ,_baf ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_cda ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_dcd ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_baa ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _eef *RuneCharSafeMap ;var _ga =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_acfd *ttfParser )ParseOS2 ()error {if _caad :=_acfd .Seek ("\u004f\u0053\u002f\u0032");_caad !=nil {return _caad ;};_ccaa :=_acfd .ReadUShort ();_acfd .Skip (4*2);_acfd .Skip (11*2+10+4*4+4);_ecc :=_acfd .ReadUShort ();_acfd ._aca .Bold =(_ecc &32)!=0;
_acfd .Skip (2*2);_acfd ._aca .TypoAscender =_acfd .ReadShort ();_acfd ._aca .TypoDescender =_acfd .ReadShort ();if _ccaa >=2{_acfd .Skip (3*2+2*4+2);_acfd ._aca .CapHeight =_acfd .ReadShort ();}else {_acfd ._aca .CapHeight =0;};return nil ;};func (_cdg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_gc :=MakeRuneCharSafeMap (_cdg .Length ());
_cdg .Range (func (_dd rune ,_gf CharMetrics )(_gga bool ){_gc ._dgf [_dd ]=_gf ;return false });return _gc ;};var _acf =&RuneCharSafeMap {_dgf :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_dgf :make (map[rune ]CharMetrics ,length )};};func (_ge *fontMap )read (_aa StdFontName )(func ()StdFont ,bool ){_ge .Lock ();
defer _ge .Unlock ();_ecb ,_de :=_ge ._db [_aa ];return _ecb ,_de ;};func (_ac *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ac ._bg .Lock ();defer _ac ._bg .Unlock ();_ac ._dgf [b ]=r ;};func _aegf (_bfc map[string ]uint32 )string {var _dead []string ;
for _cgf :=range _bfc {_dead =append (_dead ,_cgf );};_d .Slice (_dead ,func (_efd ,_effe int )bool {return _bfc [_dead [_efd ]]< _bfc [_dead [_effe ]]});_gab :=[]string {_a .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_bfc ))};
for _ ,_gdb :=range _dead {_gab =append (_gab ,_a .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gdb ,_bfc [_gdb ]));};return _e .Join (_gab ,"\u000a");};func (_egf *ttfParser )ParseName ()error {if _bbe :=_egf .Seek ("\u006e\u0061\u006d\u0065");_bbe !=nil {return _bbe ;
};_fcg ,_ :=_egf ._fab .Seek (0,_ee .SeekCurrent );_egf ._aca .PostScriptName ="";_egf .Skip (2);_eca :=_egf .ReadUShort ();_baee :=_egf .ReadUShort ();for _cebg :=uint16 (0);_cebg < _eca &&_egf ._aca .PostScriptName =="";_cebg ++{_egf .Skip (3*2);_faab :=_egf .ReadUShort ();
_agce :=_egf .ReadUShort ();_feb :=_egf .ReadUShort ();if _faab ==6{_egf ._fab .Seek (_fcg +int64 (_baee )+int64 (_feb ),_ee .SeekStart );_eea ,_bgg :=_egf .ReadStr (int (_agce ));if _bgg !=nil {return _bgg ;};_eea =_e .Replace (_eea ,"\u0000","",-1);_aec ,_bgg :=_b .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _bgg !=nil {return _bgg ;};_egf ._aca .PostScriptName =_aec .ReplaceAllString (_eea ,"");};};if _egf ._aca .PostScriptName ==""{_fa .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_fcc *TtfType )MakeToUnicode ()*_ae .CMap {_agc :=make (map[_ae .CharCode ]rune );if len (_fcc .GlyphNames )==0{for _dbd :=range _fcc .Chars {_agc [_ae .CharCode (_dbd )]=_dbd ;};return _ae .NewToUnicodeCMap (_agc );};for _eda ,_bfdc :=range _fcc .Chars {_gbd :=_ae .CharCode (_eda );
_fcb :=_fcc .GlyphNames [_bfdc ];_cdad ,_cae :=_cd .GlyphToRune (_fcb );if !_cae {_fa .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_eda ,_fcb );
_cdad =_cd .MissingCodeRune ;};_agc [_gbd ]=_cdad ;};return _ae .NewToUnicodeCMap (_agc );};func TtfParseFile (fileStr string )(TtfType ,error ){_gfgb ,_dca :=_f .Open (fileStr );if _dca !=nil {return TtfType {},_dca ;};defer _gfgb .Close ();return TtfParse (_gfgb );
};func init (){RegisterStdFont (SymbolName ,_afd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_eff );};func _ea ()StdFont {_ceb .Do (_faf );_ecf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ecf ,_eag );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););var _ccb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _bgb *RuneCharSafeMap ;func _baf ()StdFont {_fga .Do (_bbd );_fc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_fc ,_baae );};func init (){RegisterStdFont (TimesRomanName ,_baad ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_eg ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_abf ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cge ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _gaf =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _dea *RuneCharSafeMap ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dgc ,_ad :=_ba .read (name );
if !_ad {return StdFont {},false ;};return _dgc (),true ;};var _bfdd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_edd *ttfParser )Read32Fixed ()float64 {_ggg :=float64 (_edd .ReadShort ());_dbb :=float64 (_edd .ReadUShort ())/65536.0;return _ggg +_dbb ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _dce *RuneCharSafeMap ;func (_bca StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bca ._cbc };
var _fea =&RuneCharSafeMap {_dgf :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
type Font interface{Encoder ()_cd .TextEncoder ;GetRuneMetrics (_be rune )(CharMetrics ,bool );};func (_egd *ttfParser )ParseHhea ()error {if _gfgf :=_egd .Seek ("\u0068\u0068\u0065\u0061");_gfgf !=nil {return _gfgf ;};_egd .Skip (4+15*2);_egd ._bed =_egd .ReadUShort ();
return nil ;};func _eff ()StdFont {_dcef :=_cd .NewZapfDingbatsEncoder ();_cfd :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_cfd ,_acf ,_dcef );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_aef *fontMap )write (_bge StdFontName ,_bf func ()StdFont ){_aef .Lock ();defer _aef .Unlock ();_aef ._db [_bge ]=_bf ;
};func _daa ()StdFont {_ceb .Do (_faf );_gfbf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_gfbf ,_dce );};func (_cc StdFont )Encoder ()_cd .TextEncoder {return _cc ._cbf };func (_dc *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_dc ._bg .RLock ();defer _dc ._bg .RUnlock ();_bd ,_cf :=_dc ._dgf [b ];return _bd ,_cf ;
};func (_ggbd *ttfParser )parseCmapFormat6 ()error {_aafb :=int (_ggbd .ReadUShort ());_bee :=int (_ggbd .ReadUShort ());_fa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_ggbd ._aca .String (),_aafb ,_bee );
for _cgc :=0;_cgc < _bee ;_cgc ++{_dcbb :=GID (_ggbd .ReadUShort ());_ggbd ._aca .Chars [rune (_cgc +_aafb )]=_dcbb ;};return nil ;};var _baae *RuneCharSafeMap ;func (_ddfd *ttfParser )parseCmapSubtable31 (_bbc int64 )error {_ceg :=make ([]rune ,0,8);_ecbd :=make ([]rune ,0,8);
_gbf :=make ([]int16 ,0,8);_bgef :=make ([]uint16 ,0,8);_ddfd ._aca .Chars =make (map[rune ]GID );_ddfd ._fab .Seek (int64 (_ddfd ._fbf ["\u0063\u006d\u0061\u0070"])+_bbc ,_ee .SeekStart );_fag :=_ddfd .ReadUShort ();if _fag !=4{_fa .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_fag );
return nil ;};_ddfd .Skip (2*2);_cga :=int (_ddfd .ReadUShort ()/2);_ddfd .Skip (3*2);for _afg :=0;_afg < _cga ;_afg ++{_ecbd =append (_ecbd ,rune (_ddfd .ReadUShort ()));};_ddfd .Skip (2);for _fbfd :=0;_fbfd < _cga ;_fbfd ++{_ceg =append (_ceg ,rune (_ddfd .ReadUShort ()));
};for _acd :=0;_acd < _cga ;_acd ++{_gbf =append (_gbf ,_ddfd .ReadShort ());};_ggaf ,_ :=_ddfd ._fab .Seek (int64 (0),_ee .SeekCurrent );for _edc :=0;_edc < _cga ;_edc ++{_bgef =append (_bgef ,_ddfd .ReadUShort ());};for _ege :=0;_ege < _cga ;_ege ++{_fdf :=_ceg [_ege ];
_fed :=_ecbd [_ege ];_fdg :=_gbf [_ege ];_bcd :=_bgef [_ege ];if _bcd > 0{_ddfd ._fab .Seek (_ggaf +2*int64 (_ege )+int64 (_bcd ),_ee .SeekStart );};for _dcea :=_fdf ;_dcea <=_fed ;_dcea ++{if _dcea ==0xFFFF{break ;};var _bdf int32 ;if _bcd > 0{_bdf =int32 (_ddfd .ReadUShort ());
if _bdf > 0{_bdf +=int32 (_fdg );};}else {_bdf =_dcea +int32 (_fdg );};if _bdf >=65536{_bdf -=65536;};if _bdf > 0{_ddfd ._aca .Chars [_dcea ]=GID (_bdf );};};};return nil ;};func (_cfe *ttfParser )ReadULong ()(_cdbf uint32 ){_c .Read (_cfe ._fab ,_c .BigEndian ,&_cdbf );
return _cdbf ;};func _baa ()StdFont {_fga .Do (_bbd );_fgf :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fgf ,_bgb );};func (_abfc *ttfParser )ParseHead ()error {if _dcba :=_abfc .Seek ("\u0068\u0065\u0061\u0064");_dcba !=nil {return _dcba ;};_abfc .Skip (3*4);_ade :=_abfc .ReadULong ();if _ade !=0x5F0F3CF5{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_abfc );
};_abfc .Skip (2);_abfc ._aca .UnitsPerEm =_abfc .ReadUShort ();_abfc .Skip (2*8);_abfc ._aca .Xmin =_abfc .ReadShort ();_abfc ._aca .Ymin =_abfc .ReadShort ();_abfc ._aca .Xmax =_abfc .ReadShort ();_abfc ._aca .Ymax =_abfc .ReadShort ();return nil ;};
func (_daaf *ttfParser )ReadSByte ()(_dec int8 ){_c .Read (_daaf ._fab ,_c .BigEndian ,&_dec );return _dec ;};func (_agf *ttfParser )Skip (n int ){_agf ._fab .Seek (int64 (n ),_ee .SeekCurrent )};func IsStdFont (name StdFontName )bool {_ ,_df :=_ba .read (name );
return _df };func (_ffaa *ttfParser )readByte ()(_dbdg uint8 ){_c .Read (_ffaa ._fab ,_c .BigEndian ,&_dbdg );return _dbdg ;};func (_dgb *ttfParser )parseCmapSubtable10 (_dae int64 )error {if _dgb ._aca .Chars ==nil {_dgb ._aca .Chars =make (map[rune ]GID );
};_dgb ._fab .Seek (int64 (_dgb ._fbf ["\u0063\u006d\u0061\u0070"])+_dae ,_ee .SeekStart );var _fgd ,_fabb uint32 ;_cedc :=_dgb .ReadUShort ();if _cedc < 8{_fgd =uint32 (_dgb .ReadUShort ());_fabb =uint32 (_dgb .ReadUShort ());}else {_dgb .ReadUShort ();
_fgd =_dgb .ReadULong ();_fabb =_dgb .ReadULong ();};_fa .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cedc ,_fgd ,_fabb );
if _cedc !=0{return _ec .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_abe ,_dfc :=_dgb .ReadStr (256);if _dfc !=nil {return _dfc ;
};_fbg :=[]byte (_abe );for _bdd ,_efb :=range _fbg {_dgb ._aca .Chars [rune (_bdd )]=GID (_efb );if _efb !=0{_a .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bdd ,_efb ,rune (_efb ));
};};return nil ;};var _abg =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_bef CharMetrics )String ()string {return _a .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bef .Wx ,_bef .Wy );};func (_ged *ttfParser )Seek (tag string )error {_ffa ,_fdac :=_ged ._fbf [tag ];if !_fdac {return _a .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_ged ._fab .Seek (int64 (_ffa ),_ee .SeekStart );return nil ;};func (_eba *ttfParser )parseCmapFormat0 ()error {_adde ,_caeg :=_eba .ReadStr (256);if _caeg !=nil {return _caeg ;};_gcg :=[]byte (_adde );_fa .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_eba ._aca .String (),_adde ,_gcg );
for _fefd ,_fff :=range _gcg {_eba ._aca .Chars [rune (_fefd )]=GID (_fff );};return nil ;};var _fge *RuneCharSafeMap ;var _ccd _gg .Once ;func _abf ()StdFont {_ccd .Do (_bfdg );_bcb :=Descriptor {Name :TimesItalicName ,Family :_ggb ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_bcb ,_bgeg );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cd .NewStandardEncoder ());};func TtfParse (r _ee .ReadSeeker )(TtfType ,error ){_aed :=&ttfParser {_fab :r };
return _aed .Parse ()};func (_gd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ef ,_dde :=_gd ._cbc .Read (r );return _ef ,_dde ;};func (_gad *ttfParser )ParseMaxp ()error {if _adf :=_gad .Seek ("\u006d\u0061\u0078\u0070");_adf !=nil {return _adf ;
};_gad .Skip (4);_gad ._fad =_gad .ReadUShort ();return nil ;};func (_fegb *TtfType )String ()string {return _a .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fegb .PostScriptName ,_fegb .UnitsPerEm ,_fegb .Bold ,_fegb .ItalicAngle ,_fegb .CapHeight ,len (_fegb .Chars ),len (_fegb .GlyphNames ));
};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _bbd (){_baae =MakeRuneCharSafeMap (len (_dgff ));
_gbg =MakeRuneCharSafeMap (len (_dgff ));for _bae ,_dfb :=range _dgff {_baae .Write (_dfb ,CharMetrics {Wx :float64 (_ga [_bae ])});_gbg .Write (_dfb ,CharMetrics {Wx :float64 (_afef [_bae ])});};_eef =_baae .Copy ();_bgb =_gbg .Copy ();};func (_ca *RuneCharSafeMap )Length ()int {_ca ._bg .RLock ();
defer _ca ._bg .RUnlock ();return len (_ca ._dgf );};type StdFontName string ;func _afd ()StdFont {_fe :=_cd .NewSymbolEncoder ();_gcd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_gcd ,_fea ,_fe );};type RuneCharSafeMap struct{_dgf map[rune ]CharMetrics ;_bg _gg .RWMutex ;};func (_egdg *ttfParser )ReadUShort ()(_cde uint16 ){_c .Read (_egdg ._fab ,_c .BigEndian ,&_cde );return _cde ;};type ttfParser struct{_aca TtfType ;
_fab _ee .ReadSeeker ;_fbf map[string ]uint32 ;_bed uint16 ;_fad uint16 ;};const (_ggb ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););type GlyphName =_cd .GlyphName ;
func _bfdg (){_gdc =MakeRuneCharSafeMap (len (_dgff ));_dea =MakeRuneCharSafeMap (len (_dgff ));_ddd =MakeRuneCharSafeMap (len (_dgff ));_bgeg =MakeRuneCharSafeMap (len (_dgff ));for _fcf ,_cca :=range _dgff {_gdc .Write (_cca ,CharMetrics {Wx :float64 (_ed [_fcf ])});
_dea .Write (_cca ,CharMetrics {Wx :float64 (_gaf [_fcf ])});_ddd .Write (_cca ,CharMetrics {Wx :float64 (_ccb [_fcf ])});_bgeg .Write (_cca ,CharMetrics {Wx :float64 (_bfdd [_fcf ])});};};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;
);var _ddd *RuneCharSafeMap ;