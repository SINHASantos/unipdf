//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package docutil ;import (_c "errors";_d "fmt";_ga "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/core";);func (_ede *Document )FindCatalog ()(*Catalog ,bool ){var _bcd *_g .PdfObjectDictionary ;for _ ,_ggg :=range _ede .Objects {_gfd ,_fee :=_g .GetDict (_ggg );
if !_fee {continue ;};if _bbe ,_ab :=_g .GetName (_gfd .Get ("\u0054\u0079\u0070\u0065"));_ab &&*_bbe =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_bcd =_gfd ;break ;};};if _bcd ==nil {return nil ,false ;};return &Catalog {Object :_bcd ,_b :_ede },true ;};
func (_fcc *OutputIntents )Add (oi _g .PdfObject )error {_cg ,_gb :=oi .(*_g .PdfObjectDictionary );if !_gb {return _c .New ("\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006et\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0061\u006e\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if _daf ,_ag :=_g .GetStream (_cg .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));_ag {_fcc ._ee .Objects =append (_fcc ._ee .Objects ,_daf );};_cff ,_eea :=oi .(*_g .PdfIndirectObject );if !_eea {_cff =_g .MakeIndirectObject (oi );
};if _fcc ._edb ==nil {_fcc ._edb =_g .MakeArray (_cff );}else {_fcc ._edb .Append (_cff );};_fcc ._ee .Objects =append (_fcc ._ee .Objects ,_cff );return nil ;};func (_bbf *OutputIntents )Len ()int {return _bbf ._edb .Len ()};func (_ca *Catalog )SetOutputIntents (outputIntents *OutputIntents ){if _fc :=_ca .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
_fc !=nil {for _fe ,_bb :=range _ca ._b .Objects {if _bb ==_fc {if outputIntents ._ff ==_fc {return ;};_ca ._b .Objects =append (_ca ._b .Objects [:_fe ],_ca ._b .Objects [_fe +1:]...);break ;};};};_be :=outputIntents ._ff ;if _be ==nil {_be =_g .MakeIndirectObject (outputIntents ._edb );
};_ca .Object .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_be );_ca ._b .Objects =append (_ca ._b .Objects ,_be );};func (_ddc *Document )AddIndirectObject (indirect *_g .PdfIndirectObject ){for _ ,_cfc :=range _ddc .Objects {if _cfc ==indirect {return ;
};};_ddc .Objects =append (_ddc .Objects ,indirect );};type Catalog struct{Object *_g .PdfObjectDictionary ;_b *Document ;};type OutputIntent struct{Object *_g .PdfObjectDictionary ;};func (_bf *Document )GetPages ()([]Page ,bool ){_edg ,_fff :=_bf .FindCatalog ();
if !_fff {return nil ,false ;};return _edg .GetPages ();};func (_bd *Catalog )GetPages ()([]Page ,bool ){_f ,_eb :=_g .GetDict (_bd .Object .Get ("\u0050\u0061\u0067e\u0073"));if !_eb {return nil ,false ;};_fd ,_gf :=_g .GetArray (_f .Get ("\u004b\u0069\u0064\u0073"));
if !_gf {return nil ,false ;};_fa :=make ([]Page ,_fd .Len ());for _ebe ,_ce :=range _fd .Elements (){_ae ,_cb :=_g .GetDict (_ce );if !_cb {continue ;};_fa [_ebe ]=Page {Object :_ae ,_afc :_ebe +1,_df :_bd ._b };};return _fa ,true ;};func (_ccb Page )GetResources ()(*_g .PdfObjectDictionary ,bool ){return _g .GetDict (_ccb .Object .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
};type ImageSMask struct{Image *Image ;Stream *_g .PdfObjectStream ;};func (_gfg *Catalog )GetOutputIntents ()(*OutputIntents ,bool ){_ed :=_gfg .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");if _ed ==nil {return nil ,false ;
};_ebg ,_fb :=_g .GetIndirect (_ed );if !_fb {return nil ,false ;};_ea ,_bc :=_g .GetArray (_ebg .PdfObject );if !_bc {return nil ,false ;};return &OutputIntents {_ff :_ebg ,_edb :_ea ,_ee :_gfg ._b },true ;};func (_ddf Page )GetResourcesXObject ()(*_g .PdfObjectDictionary ,bool ){_aa ,_fab :=_ddf .GetResources ();
if !_fab {return nil ,false ;};return _g .GetDict (_aa .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));};func (_bdc *Catalog )GetMetadata ()(*_g .PdfObjectStream ,bool ){_db ,_dbg :=_g .GetStream (_bdc .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));
return _db ,_dbg ;};func (_eggc *Content )SetData (data []byte )error {_cfg ,_bba :=_g .MakeStream (data ,_g .NewFlateEncoder ());if _bba !=nil {return _bba ;};_gggd ,_fba :=_g .GetArray (_eggc ._dfe .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_fba &&_eggc ._ecc ==0{_eggc ._dfe .Object .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cfg );}else {if _bba =_gggd .Set (_eggc ._ecc ,_cfg );_bba !=nil {return _bba ;};};_eggc ._dfe ._df .Objects =append (_eggc ._dfe ._df .Objects ,_cfg );
return nil ;};func (_de *Catalog )HasMetadata ()bool {_cbc :=_de .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cbc !=nil ;};func (_da *Catalog )NewOutputIntents ()*OutputIntents {return &OutputIntents {_ee :_da ._b }};func (_ac *Catalog )SetMarkInfo (mi _g .PdfObject ){_dd :=_g .MakeIndirectObject (mi );
_ac .Object .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",_dd );_ac ._b .Objects =append (_ac ._b .Objects ,_dd );};type OutputIntents struct{_edb *_g .PdfObjectArray ;_ee *Document ;_ff *_g .PdfIndirectObject ;};func (_ada Content )GetData ()([]byte ,error ){_gbb ,_cdf :=_g .NewEncoderFromStream (_ada .Stream );
if _cdf !=nil {return nil ,_cdf ;};_bfd ,_cdf :=_gbb .DecodeStream (_ada .Stream );if _cdf !=nil {return nil ,_cdf ;};return _bfd ,nil ;};func (_gcg *Page )Number ()int {return _gcg ._afc };func (_dab Page )GetContents ()([]Content ,bool ){_ecf ,_efg :=_g .GetArray (_dab .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_efg {_bdd ,_egd :=_g .GetStream (_dab .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_egd {return nil ,false ;};return []Content {{Stream :_bdd ,_dfe :_dab ,_ecc :0}},true ;};_dgb :=make ([]Content ,_ecf .Len ());for _cec ,_cgb :=range _ecf .Elements (){_dac ,_fag :=_g .GetStream (_cgb );
if !_fag {continue ;};_dgb [_cec ]=Content {Stream :_dac ,_dfe :_dab ,_ecc :_cec };};return _dgb ,true ;};func (_e *Catalog )SetVersion (){_e .Object .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_g .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_e ._b .Version .Major ,_e ._b .Version .Minor )));
};func (_gfb Page )FindXObjectImages ()([]*Image ,error ){_fffb ,_faed :=_gfb .GetResourcesXObject ();if !_faed {return nil ,nil ;};var _ad []*Image ;var _cfbc error ;_eca :=map[*_g .PdfObjectStream ]int {};_beg :=map[*_g .PdfObjectStream ]struct{}{};var _fdf int ;
for _ ,_gd :=range _fffb .Keys (){_dfc ,_ggc :=_g .GetStream (_fffb .Get (_gd ));if !_ggc {continue ;};if _ ,_ebef :=_eca [_dfc ];_ebef {continue ;};_bge ,_gab :=_g .GetName (_dfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gab ||_bge .String ()!="\u0049\u006d\u0061g\u0065"{continue ;
};_acef :=Image {BitsPerComponent :8,Stream :_dfc ,Name :string (_gd )};if _acef .Colorspace ,_cfbc =_ccd (_dfc .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_cfbc !=nil {_ga .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_cfbc );
continue ;};if _aad ,_dgc :=_g .GetIntVal (_dfc .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dgc {_acef .BitsPerComponent =_aad ;};if _ecfb ,_cae :=_g .GetIntVal (_dfc .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));
_cae {_acef .Width =_ecfb ;};if _dee ,_fdb :=_g .GetIntVal (_dfc .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_fdb {_acef .Height =_dee ;};if _aced ,_egf :=_g .GetStream (_dfc .Get ("\u0053\u004d\u0061s\u006b"));_egf {_acef .SMask =&ImageSMask {Image :&_acef ,Stream :_aced };
_beg [_aced ]=struct{}{};};switch _acef .Colorspace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_acef .ColorComponents =3;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_acef .ColorComponents =1;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":_acef .ColorComponents =4;
default:_acef .ColorComponents =-1;};_eca [_dfc ]=_fdf ;_ad =append (_ad ,&_acef );_fdf ++;};var _ceg []int ;for _ ,_ded :=range _ad {if _ded .SMask !=nil {_gff ,_cab :=_eca [_ded .SMask .Stream ];if _cab {_ceg =append (_ceg ,_gff );};};};_deg :=make ([]*Image ,len (_ad )-len (_ceg ));
_fdf =0;_cce :for _dga ,_eda :=range _ad {for _ ,_gffc :=range _ceg {if _dga ==_gffc {continue _cce ;};};_deg [_fdf ]=_eda ;_fdf ++;};return _ad ,nil ;};func _ccd (_dg _g .PdfObject )(_g .PdfObjectName ,error ){var _gbd *_g .PdfObjectName ;var _ffc *_g .PdfObjectArray ;
if _abe ,_agf :=_dg .(*_g .PdfIndirectObject );_agf {if _ced ,_gae :=_abe .PdfObject .(*_g .PdfObjectArray );_gae {_ffc =_ced ;}else if _eeg ,_ef :=_abe .PdfObject .(*_g .PdfObjectName );_ef {_gbd =_eeg ;};}else if _aga ,_bec :=_dg .(*_g .PdfObjectArray );
_bec {_ffc =_aga ;}else if _eeea ,_ecd :=_dg .(*_g .PdfObjectName );_ecd {_gbd =_eeea ;};if _gbd !=nil {switch *_gbd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gbd ,nil ;
case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gbd ,nil ;};};if _ffc !=nil &&_ffc .Len ()> 0{if _bdcd ,_aeg :=_ffc .Get (0).(*_g .PdfObjectName );_aeg {switch *_bdcd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ffc .Len ()==1{return *_bdcd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bdcd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bdcd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bdcd ,nil ;};};};return "",nil ;};func (_fae *Catalog )SetMetadata (data []byte )error {_cf ,_cc :=_g .MakeStream (data ,nil );if _cc !=nil {return _cc ;
};_cf .Set ("\u0054\u0079\u0070\u0065",_g .MakeName ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));_cf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_g .MakeName ("\u0058\u004d\u004c"));_fae .Object .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cf );
_fae ._b .Objects =append (_fae ._b .Objects ,_cf );return nil ;};func (_bfg *Document )AddStream (stream *_g .PdfObjectStream ){for _ ,_bfge :=range _bfg .Objects {if _bfge ==stream {return ;};};_bfg .Objects =append (_bfg .Objects ,stream );};type Image struct{Name string ;
Width int ;Height int ;Colorspace _g .PdfObjectName ;ColorComponents int ;BitsPerComponent int ;SMask *ImageSMask ;Stream *_g .PdfObjectStream ;};type Content struct{Stream *_g .PdfObjectStream ;_ecc int ;_dfe Page ;};func (_ceb Page )FindXObjectForms ()[]*_g .PdfObjectStream {_egg ,_cece :=_ceb .GetResourcesXObject ();
if !_cece {return nil ;};_fbeg :=map[*_g .PdfObjectStream ]struct{}{};var _fbc func (_gaa *_g .PdfObjectDictionary ,_gag map[*_g .PdfObjectStream ]struct{});_fbc =func (_dbd *_g .PdfObjectDictionary ,_bfgb map[*_g .PdfObjectStream ]struct{}){for _ ,_acf :=range _dbd .Keys (){_bgf ,_cag :=_g .GetStream (_dbd .Get (_acf ));
if !_cag {continue ;};if _ ,_efd :=_bfgb [_bgf ];_efd {continue ;};_gfdc ,_gca :=_g .GetName (_bgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gca ||_gfdc .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_bfgb [_bgf ]=struct{}{};_fabe ,_gca :=_g .GetDict (_bgf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_gca {continue ;};_egdg ,_eef :=_g .GetDict (_fabe .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if _eef {_fbc (_egdg ,_bfgb );};};};_fbc (_egg ,_fbeg );var _afa []*_g .PdfObjectStream ;for _aae :=range _fbeg {_afa =append (_afa ,_aae );};return _afa ;
};func (_ace *OutputIntents )Get (i int )(OutputIntent ,bool ){if _ace ._edb ==nil {return OutputIntent {},false ;};if i >=_ace ._edb .Len (){return OutputIntent {},false ;};_af :=_ace ._edb .Get (i );_eee ,_gg :=_g .GetIndirect (_af );if !_gg {_ega ,_ggd :=_g .GetDict (_af );
return OutputIntent {Object :_ega },_ggd ;};_cfb ,_fec :=_g .GetDict (_eee .PdfObject );return OutputIntent {Object :_cfb },_fec ;};type Page struct{_afc int ;Object *_g .PdfObjectDictionary ;_df *Document ;};func (_ec *Catalog )GetMarkInfo ()(*_g .PdfObjectDictionary ,bool ){_eg ,_bg :=_g .GetDict (_ec .Object .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f"));
return _eg ,_bg ;};type Document struct{ID [2]string ;Version _g .Version ;Objects []_g .PdfObject ;Info _g .PdfObject ;Crypt *_g .PdfCrypt ;UseHashBasedID bool ;};