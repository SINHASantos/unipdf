//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_g "bufio";_cd "bytes";_ga "crypto/md5";_ff "crypto/rand";_fe "crypto/sha1";_dfd "crypto/x509";_de "encoding/binary";_aa "encoding/hex";_cdf "errors";_e "fmt";_gg "github.com/gabriel-vasile/mimetype";_ed "github.com/unidoc/pkcs7";
_fca "github.com/unidoc/unipdf/v3/common";_cee "github.com/unidoc/unipdf/v3/core";_ba "github.com/unidoc/unipdf/v3/core/security";_dad "github.com/unidoc/unipdf/v3/core/security/crypt";_dgg "github.com/unidoc/unipdf/v3/internal/cmap";_ca "github.com/unidoc/unipdf/v3/internal/imageutil";
_ade "github.com/unidoc/unipdf/v3/internal/license";_ag "github.com/unidoc/unipdf/v3/internal/sampling";_dae "github.com/unidoc/unipdf/v3/internal/textencoding";_af "github.com/unidoc/unipdf/v3/internal/timeutils";_ac "github.com/unidoc/unipdf/v3/internal/transform";
_ee "github.com/unidoc/unipdf/v3/internal/uuid";_fg "github.com/unidoc/unipdf/v3/model/internal/docutil";_ce "github.com/unidoc/unipdf/v3/model/internal/fonts";_cc "github.com/unidoc/unipdf/v3/model/mdp";_ae "github.com/unidoc/unipdf/v3/model/sigutil";
_daa "github.com/unidoc/unipdf/v3/ps";_eag "github.com/unidoc/unitype";_dg "golang.org/x/xerrors";_ea "hash";_bg "image";_f "image/color";_ "image/gif";_ "image/png";_fc "io";_aaa "math";_bf "math/rand";_fef "os";_ef "path/filepath";_bgc "regexp";_da "sort";
_fa "strconv";_ad "strings";_d "sync";_gc "time";_a "unicode";_c "unicode/utf8";);

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_cee .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_cee .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// Encoder iterates through the list of fonts and returns a working encoder
func (_gbdg *MultipleFontEncoder )Encoder (rn rune )(_dae .TextEncoder ,bool ){_bcbbb :=_gbdg .CurrentFont ;_gacb :=_bcbbb .Encoder ();_ ,_ecbec :=_gacb .RuneToCharcode (rn );for _ddaca :=1;_ddaca < len (_gbdg ._ecfa )&&!_ecbec ;_ddaca ++{_bcbbb =_gbdg ._ecfa [_ddaca ];
_gacb =_bcbbb .Encoder ();_ ,_ecbec =_gacb .RuneToCharcode (rn );_gbdg .CurrentFont =_bcbbb ;};return _gacb ,_ecbec ;};func (_cbec *fontFile )parseASCIIPart (_fcfd []byte )error {if len (_fcfd )< 2||string (_fcfd [:2])!="\u0025\u0021"{return _cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fbbee ,_fdce ,_fdbc :=_gdcff (_fcfd );if _fdbc !=nil {return _fdbc ;};_gagfb :=_gbeda (_fbbee );_cbec ._cffac =_gagfb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cbec ._cffac ==""{_fca .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fdce !=""{_cfcff ,_ffdc :=_dcfgc (_fdce );if _ffdc !=nil {return _ffdc ;};_gfda ,_ffdc :=_dae .NewCustomSimpleTextEncoder (_cfcff ,nil );if _ffdc !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ffdc );
return nil ;};_cbec ._beggd =_gfda ;};return nil ;};func (_efgbd *PdfReader )newPdfFieldFromIndirectObject (_dfegd *_cee .PdfIndirectObject ,_agab *PdfField )(*PdfField ,error ){if _cbgf ,_gcbc :=_efgbd ._fcgbe .GetModelFromPrimitive (_dfegd ).(*PdfField );
_gcbc {return _cbgf ,nil ;};_edgegg ,_agaf :=_cee .GetDict (_dfegd );if !_agaf {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fgae :=NewPdfField ();_fgae ._ccbb =_dfegd ;_fgae ._ccbb .PdfObject =_edgegg ;if _fggf ,_cffa :=_cee .GetName (_edgegg .Get ("\u0046\u0054"));_cffa {_fgae .FT =_fggf ;};if _agab !=nil {_fgae .Parent =_agab ;};_fgae .T ,_ =_edgegg .Get ("\u0054").(*_cee .PdfObjectString );
_fgae .TU ,_ =_edgegg .Get ("\u0054\u0055").(*_cee .PdfObjectString );_fgae .TM ,_ =_edgegg .Get ("\u0054\u004d").(*_cee .PdfObjectString );_fgae .Ff ,_ =_edgegg .Get ("\u0046\u0066").(*_cee .PdfObjectInteger );_fgae .V =_edgegg .Get ("\u0056");_fgae .DV =_edgegg .Get ("\u0044\u0056");
_fgae .AA =_edgegg .Get ("\u0041\u0041");if DA :=_edgegg .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_cee .GetString (DA );_fgae .VariableText =&VariableText {DA :DA };Q ,_ :=_edgegg .Get ("\u0051").(*_cee .PdfObjectInteger );DS ,_ :=_edgegg .Get ("\u0044\u0053").(*_cee .PdfObjectString );
RV :=_edgegg .Get ("\u0052\u0056");_fgae .VariableText .Q =Q ;_fgae .VariableText .DS =DS ;_fgae .VariableText .RV =RV ;};_cbdde :=_fgae .FT ;if _cbdde ==nil &&_agab !=nil {_cbdde =_agab .FT ;};if _cbdde !=nil {switch *_cbdde {case "\u0054\u0078":_aefgf ,_ceg :=_ccbbb (_edgegg );
if _ceg !=nil {return nil ,_ceg ;};_aefgf .PdfField =_fgae ;_fgae ._egab =_aefgf ;case "\u0043\u0068":_gbgbed ,_edgfg :=_gbbc (_edgegg );if _edgfg !=nil {return nil ,_edgfg ;};_gbgbed .PdfField =_fgae ;_fgae ._egab =_gbgbed ;case "\u0042\u0074\u006e":_gbdd ,_feedc :=_cfgg (_edgegg );
if _feedc !=nil {return nil ,_feedc ;};_gbdd .PdfField =_fgae ;_fgae ._egab =_gbdd ;case "\u0053\u0069\u0067":_dfbd ,_aagc :=_efgbd .newPdfFieldSignatureFromDict (_edgegg );if _aagc !=nil {return nil ,_aagc ;};_dfbd .PdfField =_fgae ;_fgae ._egab =_dfbd ;
default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_fgae .FT );return nil ,_cdf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _agdd ,_bcfg :=_cee .GetName (_edgegg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bcfg {if *_agdd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cafef ,_fgec :=_efgbd .newPdfAnnotationFromIndirectObject (_dfegd );if _fgec !=nil {return nil ,_fgec ;
};_deged ,_gacee :=_cafef .GetContext ().(*PdfAnnotationWidget );if !_gacee {return nil ,_cdf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_deged ._dec =_fgae ;_deged .Parent =_fgae ._ccbb ;
_fgae .Annotations =append (_fgae .Annotations ,_deged );return _fgae ,nil ;};};_dacfa :=true ;if _fgadf ,_beaa :=_cee .GetArray (_edgegg .Get ("\u004b\u0069\u0064\u0073"));_beaa {_ggfdc :=make ([]*_cee .PdfIndirectObject ,0,_fgadf .Len ());for _ ,_gdbe :=range _fgadf .Elements (){_acdcc ,_fede :=_cee .GetIndirect (_gdbe );
if !_fede {_fdgf ,_effbd :=_cee .GetStream (_gdbe );if _effbd &&_fdgf .PdfObjectDictionary !=nil {_defaf ,_dffd :=_cee .GetNameVal (_fdgf .Get ("\u0054\u0079\u0070\u0065"));if _dffd &&_defaf =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fca .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cdf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ecgd ,_eebd :=_cee .GetDict (_acdcc );
if !_eebd {return nil ,ErrTypeCheck ;};if _dacfa {_dacfa =!_bacd (_ecgd );};_ggfdc =append (_ggfdc ,_acdcc );};for _ ,_bdee :=range _ggfdc {if _dacfa {_dede ,_fcefe :=_efgbd .newPdfAnnotationFromIndirectObject (_bdee );if _fcefe !=nil {_fca .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fcefe );
return nil ,_fcefe ;};_abafd ,_ffbc :=_dede ._ecf .(*PdfAnnotationWidget );if !_ffbc {return nil ,ErrTypeCheck ;};_abafd ._dec =_fgae ;_fgae .Annotations =append (_fgae .Annotations ,_abafd );}else {_abed ,_dfda :=_efgbd .newPdfFieldFromIndirectObject (_bdee ,_fgae );
if _dfda !=nil {_fca .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_dfda );return nil ,_dfda ;};_fgae .Kids =append (_fgae .Kids ,_abed );
};};};return _fgae ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cefe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cdf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gdcf ,_cdcg :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbfg ,img ._cabgb );if _cdcg !=nil {return img ,_cdcg ;};_ffdf ,_cdcg :=_ca .GrayConverter .Convert (_gdcf );if _cdcg !=nil {return img ,_cdcg ;
};return _acecd (_ffdf .Base ()),nil ;};

// Encoder returns the font's text encoder.
func (_abaff pdfCIDFontType2 )Encoder ()_dae .TextEncoder {return _abaff ._dffe };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_bag :=NewPdfAction ();_cb :=&PdfActionSetOCGState {};_cb .PdfAction =_bag ;_bag .SetContext (_cb );return _cb ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject implements interface PdfModel.
func (_gfae *EmbeddedFile )ToPdfObject ()_cee .PdfObject {_cccb :=_cee .NewFlateEncoder ();_bffeg ,_dbab :=_cee .MakeStream (_gfae .Content ,_cccb );if _dbab !=nil {_fca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dbab );
return nil ;};_aeceg :=_bffeg .PdfObjectDictionary ;_aeceg .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_aeceg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_afbgd :=_cee .MakeDict ();_afbgd .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_cee .MakeString (_gfae .Hash [:]));_afbgd .Set ("\u0053\u0069\u007a\u0065",_cee .MakeInteger (int64 (len (_gfae .Content ))));_fcgba :=_gfae .CreationTime ;if _fcgba .IsZero (){_fcgba =_gc .Now ();
};_acaeg :=_gfae .ModTime ;if _acaeg .IsZero (){_acaeg =_fcgba ;};_dggd ,_dbab :=NewPdfDateFromTime (_fcgba );if _dbab !=nil {_fca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dbab );
return nil ;};_bccbd ,_dbab :=NewPdfDateFromTime (_acaeg );if _dbab !=nil {_fca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dbab );
return nil ;};_afbgd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dggd .ToPdfObject ());_afbgd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bccbd .ToPdfObject ());_aeceg .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_afbgd );
_bedfd :=_cee .MakeDict ();_bedfd .Set (*_cee .MakeName ("\u0046"),_bffeg );return _bedfd ;};func _cdgaf (_dbbefa _cee .PdfObject )(*PdfShading ,error ){_dbbea :=&PdfShading {};var _bffc *_cee .PdfObjectDictionary ;if _ccbfa ,_fgade :=_cee .GetIndirect (_dbbefa );
_fgade {_dbbea ._dfgbe =_ccbfa ;_gaeaf ,_dbeba :=_ccbfa .PdfObject .(*_cee .PdfObjectDictionary );if !_dbeba {_fca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_cee .ErrTypeError ;};_bffc =_gaeaf ;}else if _gaecc ,_faccc :=_cee .GetStream (_dbbefa );_faccc {_dbbea ._dfgbe =_gaecc ;_bffc =_gaecc .PdfObjectDictionary ;}else if _ccbca ,_egge :=_cee .GetDict (_dbbefa );_egge {_dbbea ._dfgbe =_ccbca ;_bffc =_ccbca ;
}else {_fca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_dbbefa );return nil ,_cee .ErrTypeError ;};if _bffc ==nil {_fca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cdf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dbbefa =_bffc .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dbbefa ==nil {_fca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbbefa =_cee .TraceToDirectObject (_dbbefa );_cdge ,_dafa :=_dbbefa .(*_cee .PdfObjectInteger );if !_dafa {_fca .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dbbefa );
return nil ,_cee .ErrTypeError ;};if *_cdge < 1||*_cdge > 7{_fca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_cdge );
return nil ,_cee .ErrTypeError ;};_dbbea .ShadingType =_cdge ;_dbbefa =_bffc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _dbbefa ==nil {_fca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_abecc ,_egad :=NewPdfColorspaceFromPdfObject (_dbbefa );if _egad !=nil {_fca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_egad );
return nil ,_egad ;};_dbbea .ColorSpace =_abecc ;_dbbefa =_bffc .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _dbbefa !=nil {_dbbefa =_cee .TraceToDirectObject (_dbbefa );_fade ,_fbaegf :=_dbbefa .(*_cee .PdfObjectArray );if !_fbaegf {_fca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dbbefa );
return nil ,_cee .ErrTypeError ;};_dbbea .Background =_fade ;};_dbbefa =_bffc .Get ("\u0042\u0042\u006f\u0078");if _dbbefa !=nil {_dbbefa =_cee .TraceToDirectObject (_dbbefa );_fdag ,_aedge :=_dbbefa .(*_cee .PdfObjectArray );if !_aedge {_fca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dbbefa );
return nil ,_cee .ErrTypeError ;};_ddad ,_agbed :=NewPdfRectangle (*_fdag );if _agbed !=nil {_fca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_agbed );return nil ,_agbed ;};_dbbea .BBox =_ddad ;};_dbbefa =_bffc .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _dbbefa !=nil {_dbbefa =_cee .TraceToDirectObject (_dbbefa );_cbbfb ,_feae :=_dbbefa .(*_cee .PdfObjectBool );if !_feae {_fca .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbbefa );
return nil ,_cee .ErrTypeError ;};_dbbea .AntiAlias =_cbbfb ;};switch *_cdge {case 1:_dfdccc ,_gbbbb :=_ffce (_bffc );if _gbbbb !=nil {return nil ,_gbbbb ;};_dfdccc .PdfShading =_dbbea ;_dbbea ._ddffe =_dfdccc ;return _dbbea ,nil ;case 2:_deef ,_gbfagf :=_abcf (_bffc );
if _gbfagf !=nil {return nil ,_gbfagf ;};_deef .PdfShading =_dbbea ;_dbbea ._ddffe =_deef ;return _dbbea ,nil ;case 3:_fcacc ,_eaeef :=_eaaca (_bffc );if _eaeef !=nil {return nil ,_eaeef ;};_fcacc .PdfShading =_dbbea ;_dbbea ._ddffe =_fcacc ;return _dbbea ,nil ;
case 4:_cefgc ,_cbgaa :=_baggd (_bffc );if _cbgaa !=nil {return nil ,_cbgaa ;};_cefgc .PdfShading =_dbbea ;_dbbea ._ddffe =_cefgc ;return _dbbea ,nil ;case 5:_baaa ,_gbcea :=_cdffc (_bffc );if _gbcea !=nil {return nil ,_gbcea ;};_baaa .PdfShading =_dbbea ;
_dbbea ._ddffe =_baaa ;return _dbbea ,nil ;case 6:_bdcg ,_gfedb :=_ggdeb (_bffc );if _gfedb !=nil {return nil ,_gfedb ;};_bdcg .PdfShading =_dbbea ;_dbbea ._ddffe =_bdcg ;return _dbbea ,nil ;case 7:_edaa ,_dbad :=_ffcag (_bffc );if _dbad !=nil {return nil ,_dbad ;
};_edaa .PdfShading =_dbbea ;_dbbea ._ddffe =_edaa ;return _dbbea ,nil ;};return nil ,_cdf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject returns the PDF representation of the function.
func (_gdca *PdfFunctionType2 )ToPdfObject ()_cee .PdfObject {_eaba :=_cee .MakeDict ();_eaba .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cee .MakeInteger (2));_bcfcd :=&_cee .PdfObjectArray {};for _ ,_gcgd :=range _gdca .Domain {_bcfcd .Append (_cee .MakeFloat (_gcgd ));
};_eaba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcfcd );if _gdca .Range !=nil {_fdbef :=&_cee .PdfObjectArray {};for _ ,_ddcad :=range _gdca .Range {_fdbef .Append (_cee .MakeFloat (_ddcad ));};_eaba .Set ("\u0052\u0061\u006eg\u0065",_fdbef );};if _gdca .C0 !=nil {_cbfe :=&_cee .PdfObjectArray {};
for _ ,_ceae :=range _gdca .C0 {_cbfe .Append (_cee .MakeFloat (_ceae ));};_eaba .Set ("\u0043\u0030",_cbfe );};if _gdca .C1 !=nil {_dgbgd :=&_cee .PdfObjectArray {};for _ ,_acced :=range _gdca .C1 {_dgbgd .Append (_cee .MakeFloat (_acced ));};_eaba .Set ("\u0043\u0031",_dgbgd );
};_eaba .Set ("\u004e",_cee .MakeFloat (_gdca .N ));if _gdca ._eebdf !=nil {_gdca ._eebdf .PdfObject =_eaba ;return _gdca ._eebdf ;};return _eaba ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ggef *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbbbf :=vals [0];if _bbbbf < 0.0||_bbbbf > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbbbf );
return nil ,ErrColorOutOfRange ;};_ddda :=vals [1];if _ddda < 0.0||_ddda > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ddda );return nil ,ErrColorOutOfRange ;
};_cfaab :=vals [2];if _cfaab < 0.0||_cfaab > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfaab );return nil ,ErrColorOutOfRange ;};_bdbdb :=NewPdfColorCalRGB (_bbbbf ,_ddda ,_cfaab );
return _bdbdb ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;var _ccda =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// GetCharMetrics returns the char metrics for character code `code`.
func (_abdg pdfCIDFontType2 )GetCharMetrics (code _dae .CharCode )(_ce .CharMetrics ,bool ){if _bcdde ,_dbbg :=_abdg ._dbffc [code ];_dbbg {return _ce .CharMetrics {Wx :_bcdde },true ;};_ecce :=rune (code );_fedd ,_edce :=_abdg ._abdc [_ecce ];if !_edce {_fedd =int (_abdg ._dfae );
};return _ce .CharMetrics {Wx :float64 (_fedd )},true ;};func (_ecdge fontCommon )coreString ()string {_ebece :="";if _ecdge ._ebcad !=nil {_ebece =_ecdge ._ebcad .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ecdge ._ccdeg ,_ecdge ._fbcf ,_ecdge ._ccgfa ,_ecdge ._facc ,_ecdge ._deccd !=nil ,_ecdge .fontFlags (),_ebece );
};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_defag *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bggd :=0.3*_defag .R ()+0.59*_defag .G ()+0.11*_defag .B ();_bggd =_aaa .Min (_aaa .Max (_bggd ,0.0),1.0);return NewPdfColorDeviceGray (_bggd );};

// C returns the value of the cyan component of the color.
func (_gcg *PdfColorDeviceCMYK )C ()float64 {return _gcg [0]};func (_eabdg *PdfReader )newPdfAnnotationCaretFromDict (_cdbb *_cee .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bgg :=PdfAnnotationCaret {};_gdda ,_bgab :=_eabdg .newPdfAnnotationMarkupFromDict (_cdbb );
if _bgab !=nil {return nil ,_bgab ;};_bgg .PdfAnnotationMarkup =_gdda ;_bgg .RD =_cdbb .Get ("\u0052\u0044");_bgg .Sy =_cdbb .Get ("\u0053\u0079");return &_bgg ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_cee .PdfObjectName ;P *_cee .PdfObjectInteger ;V *_cee .PdfObjectName ;};func (_cfaee *PdfWriter )hasObject (_fbbaf _cee .PdfObject )bool {_ ,_dbebd :=_cfaee ._dgbgbb [_fbbaf ];return _dbebd ;};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_cfafc *PdfPage )GetStructParentsKey ()int {if _bbegb ,_gfcge :=_cee .GetIntVal (_cfafc .StructParents );_gfcge {return _bbegb ;};return -1;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bdcab :_cee .MakeIndirectObject (_cee .MakeDict ()),VRI :map[string ]*VRI {}};};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _eeeea (_edafc *XObjectImage )error {if _edafc .SMask ==nil {return nil ;};_cefeae ,_fcbcc :=_edafc .SMask .(*_cee .PdfObjectStream );if !_fcbcc {_fca .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _cee .ErrTypeError ;};_ebgcg :=_cefeae .PdfObjectDictionary ;_efee :=_ebgcg .Get ("\u004d\u0061\u0074t\u0065");if _efee ==nil {return nil ;};_debc ,_fcgge :=_eagcc (_efee .(*_cee .PdfObjectArray ));if _fcgge !=nil {return _fcgge ;};_edeba :=_cee .MakeArrayFromFloats ([]float64 {_debc });
_ebgcg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_edeba );return nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dcbag *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dcbag ._bacda =optimizer };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cbfg []byte ;_cabgb []float64 ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_fccaf :=_gg .Detect (content );_dcgb :=_ga .Sum (content );_bdgge :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_fccaf .String (),Hash :_aa .EncodeToString (_dcgb [:])};
return _bdgge ,nil ;};func (_dgege *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_dgege ._gceef .Major ,_dgege ._gceef .Minor );};func (_egdf *PdfWriter )writeDocumentVersion (){if _egdf ._fbaeb {_egdf .writeString ("\u000a");
}else {_egdf .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_egdf ._gceef .Major ,_egdf ._gceef .Minor ));_egdf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func _bdeb (_beffc ,_cafge string )string {if _ad .Contains (_beffc ,"\u002b"){_gfegd :=_ad .Split (_beffc ,"\u002b");
if len (_gfegd )==2{_beffc =_gfegd [1];};};return _cafge +"\u002b"+_beffc ;};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfAnnotationHighlight )ToPdfObject ()_cee .PdfObject {_ddf .PdfAnnotation .ToPdfObject ();_dddg :=_ddf ._eddc ;_bffe :=_dddg .PdfObject .(*_cee .PdfObjectDictionary );_ddf .PdfAnnotationMarkup .appendToPdfDictionary (_bffe );_bffe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_bffe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddf .QuadPoints );return _dddg ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_aecdg *PdfField )FullName ()(string ,error ){var _adbe _cd .Buffer ;_fgeb :=[]string {};if _aecdg .T !=nil {_fgeb =append (_fgeb ,_aecdg .T .Decoded ());};_bgbc :=map[*PdfField ]bool {};_bgbc [_aecdg ]=true ;_dgfgc :=_aecdg .Parent ;for _dgfgc !=nil {if _ ,_egcb :=_bgbc [_dgfgc ];
_egcb {return _adbe .String (),_cdf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _dgfgc .T ==nil {return _adbe .String (),_cdf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fgeb =append (_fgeb ,_dgfgc .T .Decoded ());_bgbc [_dgfgc ]=true ;_dgfgc =_dgfgc .Parent ;};for _bfce :=len (_fgeb )-1;_bfce >=0;_bfce --{_adbe .WriteString (_fgeb [_bfce ]);if _bfce > 0{_adbe .WriteString ("\u002e");};};return _adbe .String (),nil ;
};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cee .PdfObject ;Name _cee .PdfObject ;State _cee .PdfObject ;StateModel _cee .PdfObject ;};

// Items returns all children outline items.
func (_cdeba *OutlineItem )Items ()[]*OutlineItem {return _cdeba .Entries };type pdfCIDFontType0 struct{fontCommon ;_dgfd *_cee .PdfIndirectObject ;_cedgg _dae .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cee .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cee .PdfObject ;W _cee .PdfObject ;DW2 _cee .PdfObject ;W2 _cee .PdfObject ;_gdde map[_dae .CharCode ]float64 ;_bfecd float64 ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_acgab *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fbbfa :=[]float64 {0.0};if _acgab .C0 !=nil {_fbbfa =_acgab .C0 ;};_ecbfa :=[]float64 {1.0};if _acgab .C1 !=nil {_ecbfa =_acgab .C1 ;};var _eacgg []float64 ;for _eceffd :=0;_eceffd < len (_fbbfa );_eceffd ++{_efcb :=_fbbfa [_eceffd ]+_aaa .Pow (x [0],_acgab .N )*(_ecbfa [_eceffd ]-_fbbfa [_eceffd ]);
_eacgg =append (_eacgg ,_efcb );};return _eacgg ,nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_ecfcc :=&PdfShadingPatternType2 {};_ecfcc .Matrix =_cee .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ecfcc .PdfPattern =&PdfPattern {};_ecfcc .PdfPattern .PatternType =int64 (*_cee .MakeInteger (2));
_ecfcc .PdfPattern ._gabf =_ecfcc ;_ecfcc .PdfPattern ._bgabc =_cee .MakeIndirectObject (_cee .MakeDict ());return _ecfcc ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_dbca *PdfFieldSignature )ToPdfObject ()_cee .PdfObject {if _dbca .PdfAnnotationWidget !=nil {_dbca .PdfAnnotationWidget .ToPdfObject ();};_dbca .PdfField .ToPdfObject ();_babcf :=_dbca ._ccbb ;_egbc :=_babcf .PdfObject .(*_cee .PdfObjectDictionary );
_egbc .SetIfNotNil ("\u0046\u0054",_cee .MakeName ("\u0053\u0069\u0067"));_egbc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_dbca .Lock );_egbc .SetIfNotNil ("\u0053\u0056",_dbca .SV );if _dbca .V !=nil {_egbc .SetIfNotNil ("\u0056",_dbca .V .ToPdfObject ());
};return _babcf ;};

// ParserMetadata gets the parser  metadata.
func (_cgbe *CompliancePdfReader )ParserMetadata ()_cee .ParserMetadata {if _cgbe ._eabdgb ==(_cee .ParserMetadata {}){_cgbe ._eabdgb ,_ =_cgbe ._ffdgf .ParserMetadata ();};return _cgbe ._eabdgb ;};func (_fead *PdfReader )newPdfAnnotationHighlightFromDict (_bcf *_cee .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_efd :=PdfAnnotationHighlight {};
_dbgd ,_ccc :=_fead .newPdfAnnotationMarkupFromDict (_bcf );if _ccc !=nil {return nil ,_ccc ;};_efd .PdfAnnotationMarkup =_dbgd ;_efd .QuadPoints =_bcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_efd ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_dcca :=NewPdfAnnotation ();_aaag :=&PdfAnnotationPrinterMark {};_aaag .PdfAnnotation =_dcca ;_dcca .SetContext (_aaag );return _aaag ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bac :=NewPdfAction ();_eaf :=&PdfActionURI {};_eaf .PdfAction =_bac ;_bac .SetContext (_eaf );return _eaf ;};func (_bdfbe *PdfWriter )AttachFile (file *EmbeddedFile )error {_fcebf :=_bdfbe ._bbcfgd ;if _fcebf ==nil {_fcebf =_fddc ();
};_dadcd :=_fcebf .addEmbeddedFile (file );if _dadcd !=nil {return _dadcd ;};_bdfbe ._bbcfgd =_fcebf ;return nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cee .PdfObject ;FS _cee .PdfObject ;F _cee .PdfObject ;UF _cee .PdfObject ;DOS _cee .PdfObject ;Mac _cee .PdfObject ;Unix _cee .PdfObject ;ID _cee .PdfObject ;V _cee .PdfObject ;EF _cee .PdfObject ;RF _cee .PdfObject ;Desc _cee .PdfObject ;
CI _cee .PdfObject ;AFRelationship _cee .PdfObject ;_gbfeg _cee .PdfObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cee .PdfObject ;IC _cee .PdfObject ;RO _cee .PdfObject ;OverlayText _cee .PdfObject ;Repeat _cee .PdfObject ;DA _cee .PdfObject ;Q _cee .PdfObject ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// Subtype returns the font's "Subtype" field.
func (_cgeg *PdfFont )Subtype ()string {_dbee :=_cgeg .baseFields ()._ccdeg ;if _agfb ,_bggb :=_cgeg ._bggcf .(*pdfFontType0 );_bggb {_dbee =_dbee +"\u003a"+_agfb .DescendantFont .Subtype ();};return _dbee ;};func (_efcef *LTV )generateVRIKey (_cbfee *PdfSignature )(string ,error ){_dgeed ,_fcddd :=_cefaf (_cbfee .Contents .Bytes ());
if _fcddd !=nil {return "",_fcddd ;};return _ad .ToUpper (_aa .EncodeToString (_dgeed )),nil ;};

// ToPdfObject implements interface PdfModel.
func (_acba *PdfAnnotationLink )ToPdfObject ()_cee .PdfObject {_acba .PdfAnnotation .ToPdfObject ();_cbdf :=_acba ._eddc ;_bbf :=_cbdf .PdfObject .(*_cee .PdfObjectDictionary );_bbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u004c\u0069\u006e\u006b"));
if _acba ._bef !=nil &&_acba ._bef ._afe !=nil {_bbf .Set ("\u0041",_acba ._bef ._afe .ToPdfObject ());}else if _acba .A !=nil {_bbf .Set ("\u0041",_acba .A );};_bbf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_acba .Dest );_bbf .SetIfNotNil ("\u0048",_acba .H );
_bbf .SetIfNotNil ("\u0050\u0041",_acba .PA );_bbf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acba .QuadPoints );_bbf .SetIfNotNil ("\u0042\u0053",_acba .BS );return _cbdf ;};

// GetChildren returns the children of the K dictionary object.
func (_cgfa *KDict )GetChildren ()[]*KValue {return _cgfa ._affgf };

// Encoder returns the font's text encoder.
func (_bagge pdfFontType0 )Encoder ()_dae .TextEncoder {return _bagge ._daac };

// SetPrintArea sets the value of the printArea.
func (_fffda *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_fffda ._eedee =printArea };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gec :=NewPdfAnnotation ();_eagb :=&PdfAnnotationStamp {};_eagb .PdfAnnotation =_gec ;_eagb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gec .SetContext (_eagb );return _eagb ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gdade *Image )ToGoImage ()(_bg .Image ,error ){_fca .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fgbda ,_aagge :=_ca .NewImage (int (_gdade .Width ),int (_gdade .Height ),int (_gdade .BitsPerComponent ),_gdade .ColorComponents ,_gdade .Data ,_gdade ._cbfg ,_gdade ._cabgb );
if _aagge !=nil {return nil ,_aagge ;};return _fgbda ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_aafgg *pdfFontSimple )ToPdfObject ()_cee .PdfObject {if _aafgg ._eggbg ==nil {_aafgg ._eggbg =&_cee .PdfIndirectObject {};};_ebgg :=_aafgg .baseFields ().asPdfObjectDictionary ("");_aafgg ._eggbg .PdfObject =_ebgg ;if _aafgg .FirstChar !=nil {_ebgg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aafgg .FirstChar );
};if _aafgg .LastChar !=nil {_ebgg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aafgg .LastChar );};if _aafgg .Widths !=nil {_ebgg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aafgg .Widths );};if _aafgg .Encoding !=nil {_ebgg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aafgg .Encoding );
}else if _aafgg ._bgggf !=nil {_fdcg :=_aafgg ._bgggf .ToPdfObject ();if _fdcg !=nil {_ebgg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdcg );};};return _aafgg ._eggbg ;};func (_beae *PdfReader )newPdfAnnotationProjectionFromDict (_dbba *_cee .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_gfec :=&PdfAnnotationProjection {};
_fbbf ,_afeb :=_beae .newPdfAnnotationMarkupFromDict (_dbba );if _afeb !=nil {return nil ,_afeb ;};_gfec .PdfAnnotationMarkup =_fbbf ;return _gfec ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_deeda *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cada ,_bffegb :=_cee .GetDict (_deeda ._cdebc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bffegb {_cada =_cee .MakeDict ();_deeda ._cdebc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cada );
};_aadd ,_bffegb :=_cee .GetDict (_cada .Get (_cee .PdfObjectName (extName )));if !_bffegb {_aadd =_cee .MakeDict ();_cada .Set (_cee .PdfObjectName (extName ),_aadd );};if _acea ,_ :=_cee .GetNameVal (_aadd .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_acea !=baseVersion {_aadd .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cee .MakeName (baseVersion ));};if _eafcd ,_ :=_cee .GetIntVal (_aadd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_eafcd !=extLevel {_aadd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cee .MakeInteger (int64 (extLevel )));};};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cee .PdfObjectInteger ;BitsPerComponent *_cee .PdfObjectInteger ;BitsPerFlag *_cee .PdfObjectInteger ;Decode *_cee .PdfObjectArray ;Function []PdfFunction ;};func (_fbcdd *PdfReader )resolveReference (_eadgc *_cee .PdfObjectReference )(_cee .PdfObject ,bool ,error ){_afgfb ,_bggfffg :=_fbcdd ._ffdgf .ObjCache [int (_eadgc .ObjectNumber )];
if !_bggfffg {_fca .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_eadgc );_gaae ,_fgbg :=_fbcdd ._ffdgf .LookupByReference (*_eadgc );if _fgbg !=nil {return nil ,false ,_fgbg ;};_fbcdd ._ffdgf .ObjCache [int (_eadgc .ObjectNumber )]=_gaae ;
return _gaae ,false ,nil ;};return _afgfb ,true ,nil ;};func _aefb (_dea _cee .PdfObject )(*PdfColorspaceLab ,error ){_gfgga :=NewPdfColorspaceLab ();if _fdefb ,_gdeb :=_dea .(*_cee .PdfIndirectObject );_gdeb {_gfgga ._acff =_fdefb ;};_dea =_cee .TraceToDirectObject (_dea );
_cag ,_gfcb :=_dea .(*_cee .PdfObjectArray );if !_gfcb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cag .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_dea =_cee .TraceToDirectObject (_cag .Get (0));_efdcb ,_gfcb :=_dea .(*_cee .PdfObjectName );if !_gfcb {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_efdcb !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_dea =_cee .TraceToDirectObject (_cag .Get (1));_aedg ,_gfcb :=_dea .(*_cee .PdfObjectDictionary );
if !_gfcb {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_dea =_aedg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_dea =_cee .TraceToDirectObject (_dea );_eccad ,_gfcb :=_dea .(*_cee .PdfObjectArray );if !_gfcb {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _eccad .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_afbaf ,_eaead :=_eccad .GetAsFloat64Slice ();if _eaead !=nil {return nil ,_eaead ;};_gfgga .WhitePoint =_afbaf ;_dea =_aedg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dea !=nil {_dea =_cee .TraceToDirectObject (_dea );
_adfeb ,_agfc :=_dea .(*_cee .PdfObjectArray );if !_agfc {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _adfeb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_cfef ,_ccaf :=_adfeb .GetAsFloat64Slice ();if _ccaf !=nil {return nil ,_ccaf ;};_gfgga .BlackPoint =_cfef ;};_dea =_aedg .Get ("\u0052\u0061\u006eg\u0065");if _dea !=nil {_dea =_cee .TraceToDirectObject (_dea );_daae ,_begf :=_dea .(*_cee .PdfObjectArray );
if !_begf {_fca .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _daae .Len ()!=4{_fca .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gaag ,_aaff :=_daae .GetAsFloat64Slice ();if _aaff !=nil {return nil ,_aaff ;};_gfgga .Range =_gaag ;};return _gfgga ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_ggdc *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bfab :=pageNum -1;for _efc :=range _ggdc ._afca {if _efc ==_bfab {_bfae :=page .Duplicate ();_adfebd (_bfae );_ggdc ._afca [_efc ]=_bfae ;};};};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cafc *PdfOutline )GetContainingPdfObject ()_cee .PdfObject {return _cafc ._bbda };var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_ecbcb *PdfPage )setContainer (_bbecg *_cee .PdfIndirectObject ){_bbecg .PdfObject =_ecbcb ._cfdab ;_ecbcb ._bafab =_bbecg ;
};func (_dgdbd *fontFile )loadFromSegments (_efcf ,_ecgc []byte )error {_fca .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_efcf ),len (_ecgc ));_ddcdf :=_dgdbd .parseASCIIPart (_efcf );
if _ddcdf !=nil {return _ddcdf ;};_fca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dgdbd );if len (_ecgc )==0{return nil ;};_fca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dgdbd );return nil ;
};func (_gcfff *pdfFontType0 )bytesToCharcodes (_geba []byte )([]_dae .CharCode ,bool ){if _gcfff ._dcffd ==nil {return nil ,false ;};_efga ,_edef :=_gcfff ._dcffd .BytesToCharcodes (_geba );if !_edef {return nil ,false ;};_degeb :=make ([]_dae .CharCode ,len (_efga ));
for _adcfd ,_edgba :=range _efga {_degeb [_adcfd ]=_dae .CharCode (_edgba );};return _degeb ,true ;};

// SetFitWindow sets the value of the fitWindow flag.
func (_ddaff *ViewerPreferences )SetFitWindow (fitWindow bool ){_ddaff ._cbdgc =&fitWindow };

// ColorToRGB converts a CalGray color to an RGB color.
func (_gdfg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbgb ,_cace :=color .(*PdfColorCalGray );if !_cace {_fca .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cbgb .Val ();X :=_gdfg .WhitePoint [0]*_aaa .Pow (ANorm ,_gdfg .Gamma );Y :=_gdfg .WhitePoint [1]*_aaa .Pow (ANorm ,_gdfg .Gamma );
Z :=_gdfg .WhitePoint [2]*_aaa .Pow (ANorm ,_gdfg .Gamma );_bfda :=3.240479*X +-1.537150*Y +-0.498535*Z ;_adbc :=-0.969256*X +1.875992*Y +0.041556*Z ;_eadf :=0.055648*X +-0.204043*Y +1.057311*Z ;_bfda =_aaa .Min (_aaa .Max (_bfda ,0),1.0);_adbc =_aaa .Min (_aaa .Max (_adbc ,0),1.0);
_eadf =_aaa .Min (_aaa .Max (_eadf ,0),1.0);return NewPdfColorDeviceRGB (_bfda ,_adbc ,_eadf ),nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gebg *PdfColorspaceICCBased )ToPdfObject ()_cee .PdfObject {_cdaf :=&_cee .PdfObjectArray {};_cdaf .Append (_cee .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bfbd *_cee .PdfObjectStream ;if _gebg ._gcdbe !=nil {_bfbd =_gebg ._gcdbe ;
}else {_bfbd =&_cee .PdfObjectStream {};};_abcgc :=_cee .MakeDict ();_abcgc .Set ("\u004e",_cee .MakeInteger (int64 (_gebg .N )));if _gebg .Alternate !=nil {_abcgc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gebg .Alternate .ToPdfObject ());};
if _gebg .Metadata !=nil {_abcgc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gebg .Metadata );};if _gebg .Range !=nil {var _daga []_cee .PdfObject ;for _ ,_eaga :=range _gebg .Range {_daga =append (_daga ,_cee .MakeFloat (_eaga ));};_abcgc .Set ("\u0052\u0061\u006eg\u0065",_cee .MakeArray (_daga ...));
};_abcgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_gebg .Data ))));_bfbd .Stream =_gebg .Data ;_bfbd .PdfObjectDictionary =_abcgc ;_cdaf .Append (_bfbd );if _gebg ._gagc !=nil {_gebg ._gagc .PdfObject =_cdaf ;return _gebg ._gagc ;
};return _cdaf ;};func _eddfe ()string {_dggagg .Lock ();defer _dggagg .Unlock ();return _aafgb };

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_bdadf :=&PdfSignature {Type :_cee .MakeName ("\u0053\u0069\u0067"),Handler :handler };_eccga :=&pdfSignDictionary {PdfObjectDictionary :_cee .MakeDict (),_efde :&handler ,_dddage :_bdadf };
_bdadf ._gcfbb =_cee .MakeIndirectObject (_eccga );return _bdadf ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gacae *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bagdd :=NewPdfWriter ();_bagdd .SetFileName (_gacae ._ddbge );if opts ==nil {opts =&ReaderToWriterOpts {};};_bbcce ,_cadd :=_gacae .GetNumPages ();if _cadd !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cadd );
return nil ,_cadd ;};for _gfce :=1;_gfce <=_bbcce ;_gfce ++{_eaaeg ,_ccafge :=_gacae .GetPage (_gfce );if _ccafge !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccafge );return nil ,_ccafge ;};if opts .PageProcessCallback !=nil {_ccafge =opts .PageProcessCallback (_gfce ,_eaaeg );
if _ccafge !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccafge );return nil ,_ccafge ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gfce ,_eaaeg );};_ccafge =_bagdd .AddPage (_eaaeg );if _ccafge !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccafge );
return nil ,_ccafge ;};};_bagdd ._gceef =_gacae .PdfVersion ();if !opts .SkipInfo {_bfba ,_ecffgd :=_gacae .GetPdfInfo ();if _ecffgd !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecffgd );}else {_bagdd ._cbfac .PdfObject =_bfba .ToPdfObject ();
};};if !opts .SkipMetadata {if _eadaec :=_gacae ._cacfe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eadaec !=nil {if _fecd :=_bagdd .SetCatalogMetadata (_eadaec );_fecd !=nil {return nil ,_fecd ;};};};if !opts .SkipMarkInfo {if _agfcef ,_ggcga :=_gacae .GetCatalogMarkInfo ();
_ggcga {if _cbded :=_bagdd .SetCatalogMarkInfo (_agfcef );_cbded !=nil {return nil ,_cbded ;};};};if !opts .SkipAcroForm {_cddcf :=_bagdd .SetForms (_gacae .AcroForm );if _cddcf !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddcf );
return nil ,_cddcf ;};};if !opts .SkipViewerPreferences {if _caaae ,_bfdg :=_gacae .GetCatalogViewerPreferences ();_bfdg {if _ebae :=_bagdd .SetCatalogViewerPreferences (_caaae );_ebae !=nil {return nil ,_ebae ;};};};if !opts .SkipLanguage {if _baggb ,_cccgd :=_gacae .GetCatalogLanguage ();
_cccgd {if _beege :=_bagdd .SetCatalogLanguage (_baggb );_beege !=nil {return nil ,_beege ;};};};if !opts .SkipOutlines {_bagdd .AddOutlineTree (_gacae .GetOutlineTree ());};if !opts .SkipOCProperties {_gedbba ,_ebgc :=_gacae .GetOCProperties ();if _ebgc !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebgc );
}else {_ebgc =_bagdd .SetOCProperties (_gedbba );if _ebgc !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebgc );};};};if !opts .SkipPageLabels {_fedb ,_ffgfgb :=_gacae .GetPageLabels ();if _ffgfgb !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffgfgb );
}else {_ffgfgb =_bagdd .SetPageLabels (_fedb );if _ffgfgb !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffgfgb );};};};if !opts .SkipNamedDests {_bbbgd ,_eeegf :=_gacae .GetNamedDestinations ();if _eeegf !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeegf );
}else {_eeegf =_bagdd .SetNamedDestinations (_bbbgd );if _eeegf !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeegf );};};};if !opts .SkipNameDictionary {_egdc ,_beaf :=_gacae .GetNameDictionary ();if _beaf !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beaf );
}else {_beaf =_bagdd .SetNameDictionary (_egdc );if _beaf !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beaf );};};};_gccgf ,_egaa :=_gacae .GetCatalogStructTreeRoot ();if _egaa {_dacc :=_bagdd .SetCatalogStructTreeRoot (_gccgf );
if _dacc !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dacc );};};if !opts .SkipRotation &&_gacae .Rotate !=nil {if _fbcbd :=_bagdd .SetRotation (*_gacae .Rotate );_fbcbd !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbcbd );
};};return &_bagdd ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_affa *PdfColorspaceCalRGB )ToPdfObject ()_cee .PdfObject {_eeee :=&_cee .PdfObjectArray {};_eeee .Append (_cee .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fbba :=_cee .MakeDict ();if _affa .WhitePoint !=nil {_bbdgd :=_cee .MakeArray (_cee .MakeFloat (_affa .WhitePoint [0]),_cee .MakeFloat (_affa .WhitePoint [1]),_cee .MakeFloat (_affa .WhitePoint [2]));
_fbba .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbdgd );}else {_fca .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _affa .BlackPoint !=nil {_egcg :=_cee .MakeArray (_cee .MakeFloat (_affa .BlackPoint [0]),_cee .MakeFloat (_affa .BlackPoint [1]),_cee .MakeFloat (_affa .BlackPoint [2]));_fbba .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_egcg );
};if _affa .Gamma !=nil {_ecca :=_cee .MakeArray (_cee .MakeFloat (_affa .Gamma [0]),_cee .MakeFloat (_affa .Gamma [1]),_cee .MakeFloat (_affa .Gamma [2]));_fbba .Set ("\u0047\u0061\u006dm\u0061",_ecca );};if _affa .Matrix !=nil {_ddfe :=_cee .MakeArray (_cee .MakeFloat (_affa .Matrix [0]),_cee .MakeFloat (_affa .Matrix [1]),_cee .MakeFloat (_affa .Matrix [2]),_cee .MakeFloat (_affa .Matrix [3]),_cee .MakeFloat (_affa .Matrix [4]),_cee .MakeFloat (_affa .Matrix [5]),_cee .MakeFloat (_affa .Matrix [6]),_cee .MakeFloat (_affa .Matrix [7]),_cee .MakeFloat (_affa .Matrix [8]));
_fbba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ddfe );};_eeee .Append (_fbba );if _affa ._fbgd !=nil {_affa ._fbgd .PdfObject =_eeee ;return _affa ._fbgd ;};return _eeee ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_aae :=NewPdfAction ();_aaed :=&PdfActionSubmitForm {};_aaed .PdfAction =_aae ;_aae .SetContext (_aaed );return _aaed ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_efae *PdfAppender )UpdateObject (obj _cee .PdfObject ){_efae .replaceObject (obj ,obj );if _ ,_cadg :=_efae ._efdc [obj ];!_cadg {_efae ._eccb =append (_efae ._eccb ,obj );_efae ._efdc [obj ]=struct{}{};};};

// SetImage updates XObject Image with new image data.
func (_aeffdf *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_aeffdf .Filter .UpdateParams (img .GetParamsDict ());_adcab ,_daafc :=_aeffdf .Filter .EncodeBytes (img .Data );if _daafc !=nil {return _daafc ;};_aeffdf .Stream =_adcab ;_agaac :=img .Width ;
_aeffdf .Width =&_agaac ;_ddcae :=img .Height ;_aeffdf .Height =&_ddcae ;_fbdagd :=img .BitsPerComponent ;_aeffdf .BitsPerComponent =&_fbdagd ;if cs ==nil {if img .ColorComponents ==1{_aeffdf .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_aeffdf .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_aeffdf .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cdf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_aeffdf .ColorSpace =cs ;};return nil ;
};func (_geegd *PdfWriter )writeObject (_ffagd int ,_dcebb _cee .PdfObject ){_fca .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_ffagd );if _bbbff ,_aefec :=_dcebb .(*_cee .PdfIndirectObject );_aefec {_geegd ._gceegb [_ffagd ]=crossReference {Type :1,Offset :_geegd ._gfee ,Generation :_bbbff .GenerationNumber };
_abcc :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffagd );if _eacdb ,_fbfad :=_bbbff .PdfObject .(*pdfSignDictionary );_fbfad {_eacdb ._gcccf =_geegd ._gfee +int64 (len (_abcc ));};if _bbbff .PdfObject ==nil {_fca .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_bbbff .PdfObject =_cee .MakeNull ();};_abcc +=_bbbff .PdfObject .WriteString ();_abcc +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_geegd .writeString (_abcc );return ;};if _gbfd ,_acgd :=_dcebb .(*_cee .PdfObjectStream );_acgd {_geegd ._gceegb [_ffagd ]=crossReference {Type :1,Offset :_geegd ._gfee ,Generation :_gbfd .GenerationNumber };
_gadaa :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffagd );_gadaa +=_gbfd .PdfObjectDictionary .WriteString ();_gadaa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_geegd .writeString (_gadaa );if _gbfd .Lazy {_dgcd ,_gdaf :=_fef .ReadFile (_gbfd .TempFile );
if _gdaf !=nil {_fca .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gbfd .TempFile );return ;};_geegd .writeBytes (_dgcd );
_fef .Remove (_gbfd .TempFile );}else {_geegd .writeBytes (_gbfd .Stream );};_geegd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _aceaa ,_bbbbc :=_dcebb .(*_cee .PdfObjectStreams );
_bbbbc {_geegd ._gceegb [_ffagd ]=crossReference {Type :1,Offset :_geegd ._gfee ,Generation :_aceaa .GenerationNumber };_bafcf :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffagd );var _cgebg []string ;var _gbfgbf string ;var _fcgca int64 ;
for _fdgdda ,_bbfeg :=range _aceaa .Elements (){_eaab ,_fdgfg :=_bbfeg .(*_cee .PdfIndirectObject );if !_fdgfg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_ffagd ,_bbfeg );
continue ;};_efbca :=_eaab .PdfObject .WriteString ()+"\u0020";_gbfgbf =_gbfgbf +_efbca ;_cgebg =append (_cgebg ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_eaab .ObjectNumber ,_fcgca ));_geegd ._gceegb [int (_eaab .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_ffagd ,Index :_fdgdda };
_fcgca =_fcgca +int64 (len ([]byte (_efbca )));};_cffgf :=_ad .Join (_cgebg ,"\u0020")+"\u0020";_bgcb :=_cee .NewFlateEncoder ();_agbbe :=_bgcb .MakeStreamDict ();_agbbe .Set (_cee .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cee .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gfced :=int64 (_aceaa .Len ());_agbbe .Set (_cee .PdfObjectName ("\u004e"),_cee .MakeInteger (_gfced ));_fdegf :=int64 (len (_cffgf ));_agbbe .Set (_cee .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cee .MakeInteger (_fdegf ));_gebbf ,_ :=_bgcb .EncodeBytes ([]byte (_cffgf +_gbfgbf ));
_cbced :=int64 (len (_gebbf ));_agbbe .Set (_cee .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cee .MakeInteger (_cbced ));_bafcf +=_agbbe .WriteString ();_bafcf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_geegd .writeString (_bafcf );
_geegd .writeBytes (_gebbf );_geegd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_geegd .writeString (_dcebb .WriteString ());};func _aebcf (_abae *_cee .PdfObjectDictionary )(*PdfShadingPattern ,error ){_fcbeag :=&PdfShadingPattern {};
_edgdd :=_abae .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _edgdd ==nil {_fca .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bfgb ,_fbegd :=_cdgaf (_edgdd );
if _fbegd !=nil {_fca .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fbegd );return nil ,_fbegd ;};_fcbeag .Shading =_bfgb ;if _afaegd :=_abae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_afaegd !=nil {_bdddd ,_cbgbd :=_afaegd .(*_cee .PdfObjectArray );if !_cbgbd {_fca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afaegd );
return nil ,_cee .ErrTypeError ;};_fcbeag .Matrix =_bdddd ;};if _gbdgf :=_abae .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbdgf !=nil {_fcbeag .ExtGState =_gbdgf ;};return _fcbeag ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_cee .PdfParser ;DiffPolicy _cc .DiffPolicy ;};func _fceag (_eafbg _cee .PdfObject )(map[_dae .CharCode ]float64 ,error ){if _eafbg ==nil {return nil ,nil ;};_feadc ,_gdae :=_cee .GetArray (_eafbg );if !_gdae {return nil ,nil ;
};_bebe :=map[_dae .CharCode ]float64 {};_caba :=_feadc .Len ();for _gddgb :=0;_gddgb < _caba -1;_gddgb ++{_baed :=_cee .TraceToDirectObject (_feadc .Get (_gddgb ));_dccg ,_adfdb :=_cee .GetIntVal (_baed );if !_adfdb {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gddgb ,_baed );
};_gddgb ++;if _gddgb > _caba -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_feadc );};_cdbbd :=_cee .TraceToDirectObject (_feadc .Get (_gddgb ));
switch _cdbbd .(type ){case *_cee .PdfObjectArray :_afgaf ,_ :=_cee .GetArray (_cdbbd );if _bcacc ,_bagcf :=_afgaf .ToFloat64Array ();_bagcf ==nil {for _cdgg :=0;_cdgg < len (_bcacc );_cdgg ++{_bebe [_dae .CharCode (_dccg +_cdgg )]=_bcacc [_cdgg ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gddgb ,_cdbbd );
};case *_cee .PdfObjectInteger :_bfbdb ,_acec :=_cee .GetIntVal (_cdbbd );if !_acec {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gddgb ,_cdbbd );
};_gddgb ++;if _gddgb > _caba -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_feadc );};_bfbgc :=_feadc .Get (_gddgb );_ddef ,_egeeb :=_cee .GetNumberAsFloat (_bfbgc );
if _egeeb !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gddgb ,_bfbgc );};for _eafa :=_dccg ;_eafa <=_bfbdb ;
_eafa ++{_bebe [_dae .CharCode (_eafa )]=_ddef ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gddgb ,_cdbbd );
};};return _bebe ,nil ;};

// Height returns the height of `rect`.
func (_adgcb *PdfRectangle )Height ()float64 {return _aaa .Abs (_adgcb .Ury -_adgcb .Lly )};

// ToPdfObject implements interface PdfModel.
func (_ffe *PdfActionRendition )ToPdfObject ()_cee .PdfObject {_ffe .PdfAction .ToPdfObject ();_gce :=_ffe ._gaf ;_aed :=_gce .PdfObject .(*_cee .PdfObjectDictionary );_aed .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeRendition )));_aed .SetIfNotNil ("\u0052",_ffe .R );
_aed .SetIfNotNil ("\u0041\u004e",_ffe .AN );_aed .SetIfNotNil ("\u004f\u0050",_ffe .OP );_aed .SetIfNotNil ("\u004a\u0053",_ffe .JS );return _gce ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_cggd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gbcca :=_ag .NewReader (img .getBase ());_adgb :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cddeb :=_ag .NewWriter (_adgb );
_dbda :=_aaa .Pow (2,float64 (img .BitsPerComponent ))-1;_ecdfg :=make ([]uint32 ,3);var (_cfga error ;_dbgfg ,_gbfe ,_edgeg ,_fae ,_bcbf ,_dgcfb float64 ;);for {_cfga =_gbcca .ReadSamples (_ecdfg );if _cfga ==_fc .EOF {break ;}else if _cfga !=nil {return img ,_cfga ;
};_dbgfg =float64 (_ecdfg [0])/_dbda ;_gbfe =float64 (_ecdfg [1])/_dbda ;_edgeg =float64 (_ecdfg [2])/_dbda ;_fae =_cggd .Matrix [0]*_aaa .Pow (_dbgfg ,_cggd .Gamma [0])+_cggd .Matrix [3]*_aaa .Pow (_gbfe ,_cggd .Gamma [1])+_cggd .Matrix [6]*_aaa .Pow (_edgeg ,_cggd .Gamma [2]);
_bcbf =_cggd .Matrix [1]*_aaa .Pow (_dbgfg ,_cggd .Gamma [0])+_cggd .Matrix [4]*_aaa .Pow (_gbfe ,_cggd .Gamma [1])+_cggd .Matrix [7]*_aaa .Pow (_edgeg ,_cggd .Gamma [2]);_dgcfb =_cggd .Matrix [2]*_aaa .Pow (_dbgfg ,_cggd .Gamma [0])+_cggd .Matrix [5]*_aaa .Pow (_gbfe ,_cggd .Gamma [1])+_cggd .Matrix [8]*_aaa .Pow (_edgeg ,_cggd .Gamma [2]);
_dbgfg =3.240479*_fae +-1.537150*_bcbf +-0.498535*_dgcfb ;_gbfe =-0.969256*_fae +1.875992*_bcbf +0.041556*_dgcfb ;_edgeg =0.055648*_fae +-0.204043*_bcbf +1.057311*_dgcfb ;_dbgfg =_aaa .Min (_aaa .Max (_dbgfg ,0),1.0);_gbfe =_aaa .Min (_aaa .Max (_gbfe ,0),1.0);
_edgeg =_aaa .Min (_aaa .Max (_edgeg ,0),1.0);_ecdfg [0]=uint32 (_dbgfg *_dbda );_ecdfg [1]=uint32 (_gbfe *_dbda );_ecdfg [2]=uint32 (_edgeg *_dbda );if _cfga =_cddeb .WriteSamples (_ecdfg );_cfga !=nil {return img ,_cfga ;};};return _acecd (&_adgb ),nil ;
};

// RemoveStructParentsKey removes the StructParents key.
func (_ecge *PdfPage )RemoveStructParentsKey (){_ecge .StructParents =nil };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_affb *PdfFieldButton )SetType (btype ButtonType ){_abad :=uint32 (0);if _affb .Ff !=nil {_abad =uint32 (*_affb .Ff );};switch btype {case ButtonTypePush :_abad |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abad |=FieldFlagRadio .Mask ();
};_affb .Ff =_cee .MakeInteger (int64 (_abad ));};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_eddee *PdfReader )Decrypt (password []byte )(bool ,error ){_bdebe ,_bdffc :=_eddee ._ffdgf .Decrypt (password );if _bdffc !=nil {return false ,_bdffc ;};if !_bdebe {return false ,nil ;};_bdffc =_eddee .loadStructure ();if _bdffc !=nil {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bdffc );
return false ,_bdffc ;};return true ,nil ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cdbg *PdfAppender )GetDSS ()(_ddbb *DSS ){return _cdbg ._ccee };

// ToPdfObject implements interface PdfModel.
func (_edbga *PdfAnnotation3D )ToPdfObject ()_cee .PdfObject {_edbga .PdfAnnotation .ToPdfObject ();_defd :=_edbga ._eddc ;_acbe :=_defd .PdfObject .(*_cee .PdfObjectDictionary );_acbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0033\u0044"));
_acbe .SetIfNotNil ("\u0033\u0044\u0044",_edbga .T3DD );_acbe .SetIfNotNil ("\u0033\u0044\u0056",_edbga .T3DV );_acbe .SetIfNotNil ("\u0033\u0044\u0041",_edbga .T3DA );_acbe .SetIfNotNil ("\u0033\u0044\u0049",_edbga .T3DI );_acbe .SetIfNotNil ("\u0033\u0044\u0042",_edbga .T3DB );
return _defd ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_geebf :=&XObjectImage {};_cbacc :=&_cee .PdfObjectStream {};_cbacc .PdfObjectDictionary =_cee .MakeDict ();_geebf ._fggac =_cbacc ;return _geebf ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _cee .PdfObject )(*PdfInfo ,error ){var _gcec PdfInfo ;_fcbe ,_gadbe :=obj .(*_cee .PdfObjectDictionary );if !_gadbe {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_cdaeg :=range _fcbe .Keys (){switch _cdaeg {case "\u0054\u0069\u0074l\u0065":_gcec .Title ,_ =_cee .GetString (_fcbe .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_gcec .Author ,_ =_cee .GetString (_fcbe .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gcec .Subject ,_ =_cee .GetString (_fcbe .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gcec .Keywords ,_ =_cee .GetString (_fcbe .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gcec .Creator ,_ =_cee .GetString (_fcbe .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gcec .Producer ,_ =_cee .GetString (_fcbe .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gcec .Trapped ,_ =_cee .GetName (_fcbe .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _eagaf ,_bcdga :=_cee .GetString (_fcbe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_bcdga &&_eagaf .String ()!=""{_ddfa ,_ccdaf :=NewPdfDate (_eagaf .String ());if _ccdaf !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_ccdaf );
};_gcec .CreationDate =&_ddfa ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cfgfb ,_egfg :=_cee .GetString (_fcbe .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_egfg &&_cfgfb .String ()!=""{_bcdc ,_bbab :=NewPdfDate (_cfgfb .String ());if _bbab !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bbab );
};_gcec .ModifiedDate =&_bcdc ;};default:_gbbg ,_ :=_cee .GetString (_fcbe .Get (_cdaeg ));if _gcec ._ecfea ==nil {_gcec ._ecfea =_cee .MakeDict ();};_gcec ._ecfea .Set (_cdaeg ,_gbbg );};};return &_gcec ,nil ;};func (_cfc *PdfReader )newPdfActionGotoEFromDict (_dgd *_cee .PdfObjectDictionary )(*PdfActionGoToE ,error ){_fgc ,_cff :=_daf (_dgd .Get ("\u0046"));
if _cff !=nil {return nil ,_cff ;};return &PdfActionGoToE {D :_dgd .Get ("\u0044"),NewWindow :_dgd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dgd .Get ("\u0054"),F :_fgc },nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_bbef :=&PdfFilespec {};_bbef ._gbfeg =_cee .MakeIndirectObject (_cee .MakeDict ());_bbef .Desc =_cee .MakeString (file .Description );_bbef .EF =file .ToPdfObject ();_bbef .F =_cee .MakeString (file .Name );
_bbef .UF =_cee .MakeEncodedString (file .Name ,true );_bbff :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_bbff ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_bbff ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_bbff ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_bbff ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_bbef .AFRelationship =_cee .MakeName (_bbff );return _bbef ;
};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_cafec *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _cafec .UnderlyingCS .GetNumComponents ();};

// HasFontByName checks if has font resource by name.
func (_ddebc *PdfPage )HasFontByName (name _cee .PdfObjectName )bool {_gdce ,_fcae :=_ddebc .Resources .Font .(*_cee .PdfObjectDictionary );if !_fcae {return false ;};if _gfddc :=_gdce .Get (name );_gfddc !=nil {return true ;};return false ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_baac pdfFontType0 )GetCharMetrics (code _dae .CharCode )(_ce .CharMetrics ,bool ){if _baac .DescendantFont ==nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_baac );
return _ce .CharMetrics {},false ;};return _baac .DescendantFont .GetCharMetrics (code );};

// GetNumComponents returns the number of color components (3 for Lab).
func (_fabf *PdfColorLab )GetNumComponents ()int {return 3};func _gcfe (_cbceb _cee .PdfObject ,_gcefc *PdfReader )(*OutlineDest ,error ){_bcacd ,_eafed :=_cee .GetArray (_cbceb );if !_eafed {return nil ,_cdf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_aaagd :=_bcacd .Len ();if _aaagd < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_aaagd );
};_cgcef :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gdabf :=_bcacd .Get (0);if _fedeea ,_dbggf :=_cee .GetIndirect (_gdabf );_dbggf {if _ ,_fcece ,_dfdgga :=_gcefc .PageFromIndirectObject (_fedeea );_dfdgga ==nil {_cgcef .Page =int64 (_fcece -1);}else {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_fedeea );
};_cgcef .PageObj =_fedeea ;}else if _dfdda ,_dcce :=_cee .GetIntVal (_gdabf );_dcce {if _dfdda >=0&&_dfdda < len (_gcefc .PageList ){_cgcef .PageObj =_gcefc .PageList [_dfdda ].GetPageAsIndirectObject ();}else {_fca .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_dfdda );
};_cgcef .Page =int64 (_dfdda );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gdabf );};_ddff ,_eafed :=_cee .GetNameVal (_bcacd .Get (1));
if !_eafed {_fca .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_bcacd .Get (1));
return _cgcef ,nil ;};switch _ddff {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _aaagd > 2{_cgcef .Y ,_ =_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_bcacd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _aaagd > 2{_cgcef .X ,_ =_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_bcacd .Get (2)));
};case "\u0058\u0059\u005a":if _aaagd > 4{_cgcef .X ,_ =_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_bcacd .Get (2)));_cgcef .Y ,_ =_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_bcacd .Get (3)));_cgcef .Zoom ,_ =_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_bcacd .Get (4)));
};default:_ddff ="\u0046\u0069\u0074";};_cgcef .Mode =_ddff ;return _cgcef ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_bfg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bfg ._bef !=nil {return _bfg ._bef ,nil ;};if _bfg .A ==nil {return nil ,nil ;};if _bfg ._cfd ==nil {return nil ,nil ;};_feaa ,_cad :=_bfg ._cfd .loadAction (_bfg .A );if _cad !=nil {return nil ,_cad ;
};_bfg ._bef =_feaa ;return _bfg ._bef ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_agdde pdfFontSimple )GetCharMetrics (code _dae .CharCode )(_ce .CharMetrics ,bool ){if _bgfg ,_fgcfe :=_agdde ._ccfb [code ];_fgcfe {return _ce .CharMetrics {Wx :_bgfg },true ;};if _ce .IsStdFont (_ce .StdFontName (_agdde ._fbcf )){return _ce .CharMetrics {Wx :250},true ;
};return _ce .CharMetrics {},false ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bcfbd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bcfbd ._ecfaf !=nil {return _bcfbd ._ecfaf ,nil ;};if _bcfbd .ColorSpace ==nil {return nil ,nil ;};_cefea ,_ceaed :=_dabe (_bcfbd .ColorSpace );if _ceaed !=nil {return nil ,_ceaed ;
};_bcfbd ._ecfaf =_cefea ;return _bcfbd ._ecfaf ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_afgeb *PdfPageResources )GetShadingByName (keyName _cee .PdfObjectName )(*PdfShading ,bool ){if _afgeb .Shading ==nil {return nil ,false ;};_fdced ,_facgaf :=_cee .TraceToDirectObject (_afgeb .Shading ).(*_cee .PdfObjectDictionary );if !_facgaf {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afgeb .Shading );
return nil ,false ;};if _beebd :=_fdced .Get (keyName );_beebd !=nil {_acfca ,_aefbf :=_cdgaf (_beebd );if _aefbf !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_aefbf );
return nil ,false ;};return _acfca ,true ;};return nil ,false ;};var ErrColorOutOfRange =_cdf .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_eead *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cgcbd []_dae .TextEncoder ;var _cfgae _dae .CMapEncoder ;if _eaca :=_eead .baseFields ()._abcbf ;_eaca !=nil {_cfgae =_dae .NewCMapEncoder ("",nil ,_eaca );};_bgbd :=_eead .Encoder ();
if _bgbd !=nil {switch _bgge :=_bgbd .(type ){case _dae .SimpleEncoder :_cfabb :=_bgge .BaseName ();if _ ,_ggggf :=_fceac [_cfabb ];_ggggf {_cgcbd =append (_cgcbd ,_bgbd );};};};if len (_cgcbd )==0{if _eead .baseFields ()._abcbf !=nil {_cgcbd =append (_cgcbd ,_cfgae );
};if _bgbd !=nil {_cgcbd =append (_cgcbd ,_bgbd );};};var _baaga _cd .Buffer ;var _gcga int ;for _ ,_ccafd :=range data {var _edafac bool ;for _ ,_geffd :=range _cgcbd {if _adgca :=_geffd .Encode (string (_ccafd ));len (_adgca )> 0{_baaga .Write (_adgca );
_edafac =true ;break ;};};if !_edafac {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_ccafd );
_gcga ++;};};if _gcga !=0{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gcga ,_eead ,_cgcbd );
};return _baaga .Bytes (),_gcga ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fc .ReadSeeker )(*PdfFont ,error ){_ccbad ,_ebcg :=_fc .ReadAll (r );if _ebcg !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ebcg );
return nil ,_ebcg ;};_eegab ,_ebcg :=_ce .TtfParse (_cd .NewReader (_ccbad ));if _ebcg !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ebcg );
return nil ,_ebcg ;};_gfac :=&pdfCIDFontType2 {fontCommon :fontCommon {_ccdeg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cee .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_eegab .Widths )<=0{return nil ,_cdf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ddecg :=1000.0/float64 (_eegab .UnitsPerEm );_caff :=_ddecg *float64 (_eegab .Widths [0]);_degdb :=make (map[rune ]int );_eaae :=make (map[_ce .GID ]int );_dafdg :=_ce .GID (len (_eegab .Widths ));for _edbea ,_ebed :=range _eegab .Chars {if _ebed > _dafdg -1{continue ;
};_egcgc :=int (_ddecg *float64 (_eegab .Widths [_ebed ]));_degdb [_edbea ]=_egcgc ;_eaae [_ebed ]=_egcgc ;};_gfac ._abdc =_degdb ;_gfac .DW =_cee .MakeInteger (int64 (_caff ));_cebf :=_caaf (_eaae ,uint16 (_dafdg ));_gfac .W =_cee .MakeIndirectObject (_cebf );
_ebda :=_cee .MakeDict ();_ebda .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cee .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_ebda .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cee .MakeString ("\u0041\u0064\u006fb\u0065"));
_ebda .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cee .MakeInteger (0));_gfac .CIDSystemInfo =_ebda ;_bddfd :=&PdfFontDescriptor {FontName :_cee .MakeName (_eegab .PostScriptName ),Ascent :_cee .MakeFloat (_ddecg *float64 (_eegab .TypoAscender )),Descent :_cee .MakeFloat (_ddecg *float64 (_eegab .TypoDescender )),CapHeight :_cee .MakeFloat (_ddecg *float64 (_eegab .CapHeight )),FontBBox :_cee .MakeArrayFromFloats ([]float64 {_ddecg *float64 (_eegab .Xmin ),_ddecg *float64 (_eegab .Ymin ),_ddecg *float64 (_eegab .Xmax ),_ddecg *float64 (_eegab .Ymax )}),ItalicAngle :_cee .MakeFloat (_eegab .ItalicAngle ),MissingWidth :_cee .MakeFloat (_caff )};
_aaga ,_ebcg :=_cee .MakeStream (_ccbad ,_cee .NewFlateEncoder ());if _ebcg !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ebcg );
return nil ,_ebcg ;};_aaga .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cee .MakeInteger (int64 (len (_ccbad ))));_bddfd .FontFile2 =_aaga ;if _eegab .Bold {_bddfd .StemV =_cee .MakeInteger (120);}else {_bddfd .StemV =_cee .MakeInteger (70);
};_cgcdb :=_cddf ;if _eegab .IsFixedPitch {_cgcdb |=_aabcf ;};if _eegab .ItalicAngle !=0{_cgcdb |=_dgbc ;};_bddfd .Flags =_cee .MakeInteger (int64 (_cgcdb ));_gfac ._fbcf =_eegab .PostScriptName ;_gfac ._ebcad =_bddfd ;_aafg :=pdfFontType0 {fontCommon :fontCommon {_ccdeg :"\u0054\u0079\u0070e\u0030",_fbcf :_eegab .PostScriptName },DescendantFont :&PdfFont {_bggcf :_gfac },Encoding :_cee .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_daac :_eegab .NewEncoder ()};
if len (_eegab .Chars )> 0{_eegdb :=make (map[_dgg .CharCode ]rune ,len (_eegab .Chars ));for _bgdaf ,_eacff :=range _eegab .Chars {_faagb :=_dgg .CharCode (_eacff );if _caeb ,_eabegd :=_eegdb [_faagb ];!_eabegd ||(_eabegd &&_caeb > _bgdaf ){_eegdb [_faagb ]=_bgdaf ;
};};_aafg ._abcbf =_dgg .NewToUnicodeCMap (_eegdb );};_cbeeb :=PdfFont {_bggcf :&_aafg };return &_cbeeb ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gbgg pdfFontType0 )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){if _gbgg .DescendantFont ==nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gbgg );
return _ce .CharMetrics {},false ;};return _gbgg .DescendantFont .GetRuneMetrics (r );};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_agb :=NewPdfAnnotation ();_cfde :=&PdfAnnotationScreen {};_cfde .PdfAnnotation =_agb ;_agb .SetContext (_cfde );return _cfde ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_aeccg *PdfWriter )SetCatalogMetadata (meta _cee .PdfObject )error {if meta ==nil {_aeccg ._cdebc .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_ggdca ,_ecgbd :=_cee .GetStream (meta );if !_ecgbd {return _cdf .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_aeccg .addObject (_ggdca );_aeccg ._cdebc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ggdca );return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_afcbg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dgbfg *PdfPage )GetContentStreamObjs ()[]_cee .PdfObject {if _dgbfg .Contents ==nil {return nil ;};_efgef :=_cee .TraceToDirectObject (_dgbfg .Contents );if _gddd ,_bafed :=_efgef .(*_cee .PdfObjectArray );_bafed {return _gddd .Elements ();};return []_cee .PdfObject {_efgef };
};func (_ecagd *PdfReader )loadDSS ()(*DSS ,error ){if _ecagd ._ffdgf .GetCrypter ()!=nil &&!_ecagd ._ffdgf .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adcbd :=_ecagd ._cacfe .Get ("\u0044\u0053\u0053");if _adcbd ==nil {return nil ,nil ;};_begfd ,_ :=_cee .GetIndirect (_adcbd );_adcbd =_cee .TraceToDirectObject (_adcbd );switch _gdcbe :=_adcbd .(type ){case *_cee .PdfObjectNull :return nil ,nil ;case *_cee .PdfObjectDictionary :return _adgcf (_begfd ,_gdcbe );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_adcbd );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bgada *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bgada ._eeaba !=nil {return _bgada ._eeaba ,nil ;};if _bgada .Annots ==nil {_bgada ._eeaba =[]*PdfAnnotation {};return nil ,nil ;};if _bgada ._acbbg ==nil {_bgada ._eeaba =[]*PdfAnnotation {};
return nil ,nil ;};_acge ,_efeg :=_bgada ._acbbg .loadAnnotations (_bgada .Annots );if _efeg !=nil {return nil ,_efeg ;};if _acge ==nil {_bgada ._eeaba =[]*PdfAnnotation {};};_bgada ._eeaba =_acge ;return _bgada ._eeaba ,nil ;};func (_beda *PdfReader )newPdfAnnotationFromIndirectObject (_aebd *_cee .PdfIndirectObject )(*PdfAnnotation ,error ){_ddb ,_babg :=_aebd .PdfObject .(*_cee .PdfObjectDictionary );
if !_babg {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_beda ._fcgbe .GetModelFromPrimitive (_ddb );model !=nil {_ceeg ,_aga :=model .(*PdfAnnotation );if !_aga {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ceeg ,nil ;};_aea :=&PdfAnnotation {};_aea ._eddc =_aebd ;_beda ._fcgbe .Register (_ddb ,_aea );if _ega :=_ddb .Get ("\u0054\u0079\u0070\u0065");_ega !=nil {_bgdb ,_eafg :=_ega .(*_cee .PdfObjectName );if !_eafg {_fca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ega );
}else {if *_bgdb !="\u0041\u006e\u006eo\u0074"{_fca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bgdb );};};};
if _beed :=_ddb .Get ("\u0052\u0065\u0063\u0074");_beed !=nil {_aea .Rect =_beed ;};if _gcff :=_ddb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gcff !=nil {_aea .Contents =_gcff ;};if _baa :=_ddb .Get ("\u0050");_baa !=nil {_aea .P =_baa ;
};if _fgea :=_ddb .Get ("\u004e\u004d");_fgea !=nil {_aea .NM =_fgea ;};if _dcaa :=_ddb .Get ("\u004d");_dcaa !=nil {_aea .M =_dcaa ;};if _eecg :=_ddb .Get ("\u0046");_eecg !=nil {_aea .F =_eecg ;};if _gaffa :=_ddb .Get ("\u0041\u0050");_gaffa !=nil {_aea .AP =_gaffa ;
};if _gad :=_ddb .Get ("\u0041\u0053");_gad !=nil {_aea .AS =_gad ;};if _cgge :=_ddb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cgge !=nil {_aea .Border =_cgge ;};if _eabd :=_ddb .Get ("\u0043");_eabd !=nil {_aea .C =_eabd ;};if _dagec :=_ddb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dagec !=nil {_aea .StructParent =_dagec ;};if _beff :=_ddb .Get ("\u004f\u0043");_beff !=nil {_aea .OC =_beff ;};_cea :=_ddb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cea ==nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_aea ._ecf =nil ;return _aea ,nil ;};_daff ,_cfdc :=_cea .(*_cee .PdfObjectName );if !_cfdc {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cea );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cea );};switch *_daff {case "\u0054\u0065\u0078\u0074":_aab ,_ddcb :=_beda .newPdfAnnotationTextFromDict (_ddb );
if _ddcb !=nil {return nil ,_ddcb ;};_aab .PdfAnnotation =_aea ;_aea ._ecf =_aab ;return _aea ,nil ;case "\u004c\u0069\u006e\u006b":_cec ,_bgdg :=_beda .newPdfAnnotationLinkFromDict (_ddb );if _bgdg !=nil {return nil ,_bgdg ;};_cec .PdfAnnotation =_aea ;
_aea ._ecf =_cec ;return _aea ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fbd ,_cgb :=_beda .newPdfAnnotationFreeTextFromDict (_ddb );if _cgb !=nil {return nil ,_cgb ;};_fbd .PdfAnnotation =_aea ;_aea ._ecf =_fbd ;return _aea ,nil ;case "\u004c\u0069\u006e\u0065":_dge ,_ggcd :=_beda .newPdfAnnotationLineFromDict (_ddb );
if _ggcd !=nil {return nil ,_ggcd ;};_dge .PdfAnnotation =_aea ;_aea ._ecf =_dge ;_fca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_aea ,_aea );
_fca .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dge ,_dge );_fca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dge .PdfAnnotationMarkup ,_dge .PdfAnnotationMarkup );
return _aea ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cde ,_faf :=_beda .newPdfAnnotationSquareFromDict (_ddb );if _faf !=nil {return nil ,_faf ;};_cde .PdfAnnotation =_aea ;_aea ._ecf =_cde ;return _aea ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_gbdb ,_bea :=_beda .newPdfAnnotationCircleFromDict (_ddb );
if _bea !=nil {return nil ,_bea ;};_gbdb .PdfAnnotation =_aea ;_aea ._ecf =_gbdb ;return _aea ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_egfd ,_eca :=_beda .newPdfAnnotationPolygonFromDict (_ddb );if _eca !=nil {return nil ,_eca ;};_egfd .PdfAnnotation =_aea ;
_aea ._ecf =_egfd ;return _aea ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgcc ,_gadb :=_beda .newPdfAnnotationPolyLineFromDict (_ddb );if _gadb !=nil {return nil ,_gadb ;};_fgcc .PdfAnnotation =_aea ;_aea ._ecf =_fgcc ;return _aea ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_afbf ,_bcg :=_beda .newPdfAnnotationHighlightFromDict (_ddb );if _bcg !=nil {return nil ,_bcg ;};_afbf .PdfAnnotation =_aea ;_aea ._ecf =_afbf ;return _aea ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bbgg ,_cabd :=_beda .newPdfAnnotationUnderlineFromDict (_ddb );
if _cabd !=nil {return nil ,_cabd ;};_bbgg .PdfAnnotation =_aea ;_aea ._ecf =_bbgg ;return _aea ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cba ,_dafc :=_beda .newPdfAnnotationSquigglyFromDict (_ddb );if _dafc !=nil {return nil ,_dafc ;
};_cba .PdfAnnotation =_aea ;_aea ._ecf =_cba ;return _aea ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ebe ,_baga :=_beda .newPdfAnnotationStrikeOut (_ddb );if _baga !=nil {return nil ,_baga ;};_ebe .PdfAnnotation =_aea ;_aea ._ecf =_ebe ;
return _aea ,nil ;case "\u0043\u0061\u0072e\u0074":_ggee ,_efaf :=_beda .newPdfAnnotationCaretFromDict (_ddb );if _efaf !=nil {return nil ,_efaf ;};_ggee .PdfAnnotation =_aea ;_aea ._ecf =_ggee ;return _aea ,nil ;case "\u0053\u0074\u0061m\u0070":_fbbe ,_feg :=_beda .newPdfAnnotationStampFromDict (_ddb );
if _feg !=nil {return nil ,_feg ;};_fbbe .PdfAnnotation =_aea ;_aea ._ecf =_fbbe ;return _aea ,nil ;case "\u0049\u006e\u006b":_bfeb ,_gcd :=_beda .newPdfAnnotationInkFromDict (_ddb );if _gcd !=nil {return nil ,_gcd ;};_bfeb .PdfAnnotation =_aea ;_aea ._ecf =_bfeb ;
return _aea ,nil ;case "\u0050\u006f\u0070u\u0070":_gbdce ,_facd :=_beda .newPdfAnnotationPopupFromDict (_ddb );if _facd !=nil {return nil ,_facd ;};_gbdce .PdfAnnotation =_aea ;_aea ._ecf =_gbdce ;return _aea ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ggcda ,_eed :=_beda .newPdfAnnotationFileAttachmentFromDict (_ddb );
if _eed !=nil {return nil ,_eed ;};_ggcda .PdfAnnotation =_aea ;_aea ._ecf =_ggcda ;return _aea ,nil ;case "\u0053\u006f\u0075n\u0064":_fgfd ,_gafa :=_beda .newPdfAnnotationSoundFromDict (_ddb );if _gafa !=nil {return nil ,_gafa ;};_fgfd .PdfAnnotation =_aea ;
_aea ._ecf =_fgfd ;return _aea ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gacg ,_fgbf :=_beda .newPdfAnnotationRichMediaFromDict (_ddb );if _fgbf !=nil {return nil ,_fgbf ;};_gacg .PdfAnnotation =_aea ;_aea ._ecf =_gacg ;return _aea ,nil ;
case "\u004d\u006f\u0076i\u0065":_agcb ,_dgag :=_beda .newPdfAnnotationMovieFromDict (_ddb );if _dgag !=nil {return nil ,_dgag ;};_agcb .PdfAnnotation =_aea ;_aea ._ecf =_agcb ;return _aea ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cecg ,_dbg :=_beda .newPdfAnnotationScreenFromDict (_ddb );
if _dbg !=nil {return nil ,_dbg ;};_cecg .PdfAnnotation =_aea ;_aea ._ecf =_cecg ;return _aea ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bbbe ,_fcd :=_beda .newPdfAnnotationWidgetFromDict (_ddb );if _fcd !=nil {return nil ,_fcd ;};_bbbe .PdfAnnotation =_aea ;
_aea ._ecf =_bbbe ;return _aea ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gceg ,_egb :=_beda .newPdfAnnotationPrinterMarkFromDict (_ddb );if _egb !=nil {return nil ,_egb ;};_gceg .PdfAnnotation =_aea ;_aea ._ecf =_gceg ;
return _aea ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_aebfb ,_cdbe :=_beda .newPdfAnnotationTrapNetFromDict (_ddb );if _cdbe !=nil {return nil ,_cdbe ;};_aebfb .PdfAnnotation =_aea ;_aea ._ecf =_aebfb ;return _aea ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fce ,_aaeg :=_beda .newPdfAnnotationWatermarkFromDict (_ddb );
if _aaeg !=nil {return nil ,_aaeg ;};_fce .PdfAnnotation =_aea ;_aea ._ecf =_fce ;return _aea ,nil ;case "\u0033\u0044":_gcea ,_cbdg :=_beda .newPdfAnnotation3DFromDict (_ddb );if _cbdg !=nil {return nil ,_cbdg ;};_gcea .PdfAnnotation =_aea ;_aea ._ecf =_gcea ;
return _aea ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fbdb ,_gfb :=_beda .newPdfAnnotationProjectionFromDict (_ddb );if _gfb !=nil {return nil ,_gfb ;};_fbdb .PdfAnnotation =_aea ;_aea ._ecf =_fbdb ;return _aea ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_edbe ,_fddb :=_beda .newPdfAnnotationRedactFromDict (_ddb );
if _fddb !=nil {return nil ,_fddb ;};_edbe .PdfAnnotation =_aea ;_aea ._ecf =_edbe ;return _aea ,nil ;};_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_daff );
return nil ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gbgbe *PdfField )SetContext (ctx PdfModel ){_gbgbe ._egab =ctx };

// ToPdfObject implements interface PdfModel.
func (_gdd *PdfActionImportData )ToPdfObject ()_cee .PdfObject {_gdd .PdfAction .ToPdfObject ();_fec :=_gdd ._gaf ;_aebf :=_fec .PdfObject .(*_cee .PdfObjectDictionary );_aebf .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeImportData )));if _gdd .F !=nil {_aebf .Set ("\u0046",_gdd .F .ToPdfObject ());
};return _fec ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_bdccd *PdfPageResources )GetColorspaceByName (keyName _cee .PdfObjectName )(PdfColorspace ,bool ){_aabae ,_abbb :=_bdccd .GetColorspaces ();if _abbb !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abbb );
return nil ,false ;};if _aabae ==nil {return nil ,false ;};_cbbbe ,_cefa :=_aabae .Colorspaces [string (keyName )];if !_cefa {return nil ,false ;};return _cbbbe ,true ;};

// Encoder returns the font's text encoder.
func (_fcacd pdfCIDFontType0 )Encoder ()_dae .TextEncoder {return _fcacd ._cedgg };func _ebad (_eacce *_cee .PdfObjectDictionary ){_gecggc ,_eccgf :=_cee .GetArray (_eacce .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_aeacg ,_cgbfb :=_cee .GetIntVal (_eacce .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_fefce ,_cfefc :=_cee .GetIntVal (_eacce .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _eccgf &&_cgbfb &&_cfefc {_cfgcc :=_gecggc .Len ();if _cfgcc !=_fefce -_aeacg +1{_fca .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_cfgcc ,_fefce );
_bgccc :=_cee .PdfObjectInteger (_aeacg +_cfgcc -1);_eacce .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bgccc );};};};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cee .PdfObjectArray ;_effg *Image ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_edecb *pdfCIDFontType0 )ToPdfObject ()_cee .PdfObject {return _cee .MakeNull ()};

// M returns the value of the magenta component of the color.
func (_cdded *PdfColorDeviceCMYK )M ()float64 {return _cdded [1]};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdefd *PdfColorspaceSpecialIndexed )ToPdfObject ()_cee .PdfObject {_cccea :=_cee .MakeArray (_cee .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cccea .Append (_fdefd .Base .ToPdfObject ());_cccea .Append (_cee .MakeInteger (int64 (_fdefd .HiVal )));
_cccea .Append (_fdefd .Lookup );if _fdefd ._cgbb !=nil {_fdefd ._cgbb .PdfObject =_cccea ;return _fdefd ._cgbb ;};return _cccea ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bdbfe *PdfReader )GetOutlines ()(*Outline ,error ){if _bdbfe ==nil {return nil ,_cdf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dbeb :=_bdbfe .GetOutlineTree ();if _dbeb ==nil {return nil ,_cdf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fceee func (_feddf *PdfOutlineTreeNode ,_cedeg *[]*OutlineItem );_fceee =func (_cagc *PdfOutlineTreeNode ,_efef *[]*OutlineItem ){if _cagc ==nil {return ;};if _cagc ._afcbg ==nil {_fca .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _eecd *OutlineItem ;if _cgeaf ,_gbdbg :=_cagc ._afcbg .(*PdfOutlineItem );_gbdbg {_baegg :=_cgeaf .Dest ;if (_baegg ==nil ||_cee .IsNullObject (_baegg ))&&_cgeaf .A !=nil {if _cgbda ,_cgeb :=_cee .GetDict (_cgeaf .A );_cgeb {if _facaf ,_bffbdd :=_cee .GetArray (_cgbda .Get ("\u0044"));
_bffbdd {_baegg =_facaf ;}else {_dagbc ,_afge :=_cee .GetString (_cgbda .Get ("\u0044"));if !_afge {return ;};_ecedf ,_afge :=_bdbfe ._cacfe .Get ("\u004e\u0061\u006de\u0073").(*_cee .PdfObjectReference );if !_afge {return ;};_dggfa ,_gbdccb :=_bdbfe ._ffdgf .LookupByReference (*_ecedf );
if _gbdccb !=nil {_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_gbdccb .Error ());
return ;};_dcfa ,_afge :=_dggfa .(*_cee .PdfIndirectObject );if !_afge {return ;};_cebba :=map[_cee .PdfObject ]struct{}{};_gbdccb =_bdbfe .buildNameNodes (_dcfa ,_cebba );if _gbdccb !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_gbdccb .Error ());
return ;};for _ddab :=range _cebba {_fcafa ,_afdef :=_cee .GetDict (_ddab );if !_afdef {continue ;};_egba ,_afdef :=_cee .GetArray (_fcafa .Get ("\u004e\u0061\u006de\u0073"));if !_afdef {continue ;};for _bfbbc ,_gafbf :=range _egba .Elements (){switch _gafbf .(type ){case *_cee .PdfObjectString :if _gafbf .String ()==_dagbc .String (){if _efbb :=_egba .Get (_bfbbc +1);
_efbb !=nil {if _gdbgd ,_efecg :=_cee .GetDict (_efbb );_efecg {_baegg =_gdbgd .Get ("\u0044");break ;};};};};};};};};};var _afbbd OutlineDest ;if _baegg !=nil &&!_cee .IsNullObject (_baegg ){if _eagac ,_eafdf :=_gcfe (_baegg ,_bdbfe );_eafdf ==nil {_afbbd =*_eagac ;
}else {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_baegg ,_eafdf );
};};_eecd =NewOutlineItem (_cgeaf .Title .Decoded (),_afbbd );*_efef =append (*_efef ,_eecd );if _cgeaf .Next !=nil {_fceee (_cgeaf .Next ,_efef );};};if _cagc .First !=nil {if _eecd !=nil {_efef =&_eecd .Entries ;};_fceee (_cagc .First ,_efef );};};_aeae :=NewOutline ();
_fceee (_dbeb ,&_aeae .Entries );return _aeae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbed *PdfBorderStyle )ToPdfObject ()_cee .PdfObject {_gdbd :=_cee .MakeDict ();if _fbed ._gbgb !=nil {if _edde ,_cdg :=_fbed ._gbgb .(*_cee .PdfIndirectObject );_cdg {_edde .PdfObject =_gdbd ;};};_gdbd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fbed .W !=nil {_gdbd .Set ("\u0057",_cee .MakeFloat (*_fbed .W ));};if _fbed .S !=nil {_gdbd .Set ("\u0053",_cee .MakeName (_fbed .S .GetPdfName ()));};if _fbed .D !=nil {_gdbd .Set ("\u0044",_cee .MakeArrayFromIntegers (*_fbed .D ));};if _fbed ._gbgb !=nil {return _fbed ._gbgb ;
};return _gdbd ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_geaaa *PdfShadingPatternType2 )ToPdfObject ()_cee .PdfObject {_geaaa .PdfPattern .ToPdfObject ();_egaef :=_geaaa .getDict ();if _geaaa .Shading !=nil {_egaef .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_geaaa .Shading .ToPdfObject ());};if _geaaa .Matrix !=nil {_egaef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_geaaa .Matrix );
};if _geaaa .ExtGState !=nil {_egaef .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_geaaa .ExtGState );};return _geaaa ._bgabc ;};

// SetPage directly sets the page object.
func (_dabbg *KDict )SetPage (page *_cee .PdfIndirectObject ){_dabbg .Pg =page };func (_cddebc *PdfAcroForm )filteredFields (_gbccc FieldFilterFunc ,_gdbde bool )[]*PdfField {if _cddebc ==nil {return nil ;};return _fegd (_cddebc .Fields ,_gbccc ,_gdbde );
};func (_dcc *PdfReader )newPdfActionSubmitFormFromDict (_bfe *_cee .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gace ,_def :=_daf (_bfe .Get ("\u0046"));if _def !=nil {return nil ,_def ;};return &PdfActionSubmitForm {F :_gace ,Fields :_bfe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bfe .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_cee .PdfObjectArray ;ExtGState _cee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gfc *PdfAnnotation )ToPdfObject ()_cee .PdfObject {_cbdd :=_gfc ._eddc ;_fbec :=_cbdd .PdfObject .(*_cee .PdfObjectDictionary );_fbec .Clear ();_fbec .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0041\u006e\u006eo\u0074"));_fbec .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gfc .Rect );
_fbec .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gfc .Contents );_fbec .SetIfNotNil ("\u0050",_gfc .P );_fbec .SetIfNotNil ("\u004e\u004d",_gfc .NM );_fbec .SetIfNotNil ("\u004d",_gfc .M );_fbec .SetIfNotNil ("\u0046",_gfc .F );_fbec .SetIfNotNil ("\u0041\u0050",_gfc .AP );
_fbec .SetIfNotNil ("\u0041\u0053",_gfc .AS );_fbec .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gfc .Border );_fbec .SetIfNotNil ("\u0043",_gfc .C );_fbec .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gfc .StructParent );
_fbec .SetIfNotNil ("\u004f\u0043",_gfc .OC );return _cbdd ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;type pdfFontType3 struct{fontCommon ;_eacaf *_cee .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cee .PdfObject ;Encoding _cee .PdfObject ;FontBBox _cee .PdfObject ;FontMatrix _cee .PdfObject ;FirstChar _cee .PdfObject ;LastChar _cee .PdfObject ;Widths _cee .PdfObject ;Resources _cee .PdfObject ;_fdfff map[_dae .CharCode ]float64 ;_fgaa _dae .TextEncoder ;
};func (_cedd *DSS )add (_afdfe *[]*_cee .PdfObjectStream ,_aaggf map[string ]*_cee .PdfObjectStream ,_efaee [][]byte )([]*_cee .PdfObjectStream ,error ){_ceeb :=make ([]*_cee .PdfObjectStream ,0,len (_efaee ));for _ ,_bggc :=range _efaee {_bebab ,_cgdge :=_cefaf (_bggc );
if _cgdge !=nil {return nil ,_cgdge ;};_beeg ,_dfgbd :=_aaggf [string (_bebab )];if !_dfgbd {_beeg ,_cgdge =_cee .MakeStream (_bggc ,_cee .NewRawEncoder ());if _cgdge !=nil {return nil ,_cgdge ;};_aaggf [string (_bebab )]=_beeg ;*_afdfe =append (*_afdfe ,_beeg );
};_ceeb =append (_ceeb ,_beeg );};return _ceeb ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dggagg .Lock ();defer _dggagg .Unlock ();_dgbgaa =creator };func (_debge *LTV )getCerts (_egfe []*_dfd .Certificate )([][]byte ,error ){_bcgb :=make ([][]byte ,0,len (_egfe ));for _ ,_bagce :=range _egfe {_bcgb =append (_bcgb ,_bagce .Raw );
};return _bcgb ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_ebaa *pdfFontType3 )ToPdfObject ()_cee .PdfObject {if _ebaa ._eacaf ==nil {_ebaa ._eacaf =&_cee .PdfIndirectObject {};};_gabdb :=_ebaa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ebaa ._eacaf .PdfObject =_gabdb ;if _ebaa .FirstChar !=nil {_gabdb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ebaa .FirstChar );
};if _ebaa .LastChar !=nil {_gabdb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ebaa .LastChar );};if _ebaa .Widths !=nil {_gabdb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ebaa .Widths );};if _ebaa .Encoding !=nil {_gabdb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebaa .Encoding );
}else if _ebaa ._fgaa !=nil {_cacde :=_ebaa ._fgaa .ToPdfObject ();if _cacde !=nil {_gabdb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cacde );};};if _ebaa .FontBBox !=nil {_gabdb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ebaa .FontBBox );
};if _ebaa .FontMatrix !=nil {_gabdb .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ebaa .FontMatrix );};if _ebaa .CharProcs !=nil {_gabdb .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ebaa .CharProcs );};if _ebaa .Resources !=nil {_gabdb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebaa .Resources );
};return _ebaa ._eacaf ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_gffbe int64 ;_dabdg int64 ;_cfdgf int64 ;_bbeea int64 ;_bfaec int64 ;_begea int64 ;_cfbed byte ;_gccea int64 ;_cacedd int64 ;};func (_afadd *Names )addEmbeddedFile (_addf *EmbeddedFile )error {if _afadd .EmbeddedFiles ==nil {_afadd .EmbeddedFiles =_cee .MakeDict ();
_afadd .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_cee .MakeArray ());};_geccb :=NewPdfFileSpecFromEmbeddedFile (_addf );_cccf :=_afadd .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_agded ,_ecdec :=_cccf .(*_cee .PdfObjectArray );if !_ecdec {return _cdf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_fedcf string ;_fgdgd *PdfFilespec ;};_gdbfc :=[]FileSpecMap {};for _egef :=0;_egef < len (_agded .Elements ());_egef +=2{if _egef %2==0{_dbgdb :=_agded .Get (_egef );if _dbgdb !=nil {_dabdc :=_dbgdb .(*_cee .PdfObjectString );
_edefa :=_agded .Get (_egef +1);_fecf ,_cgggf :=NewPdfFilespecFromObj (_edefa );if _cgggf !=nil {return _cgggf ;};_gdbfc =append (_gdbfc ,FileSpecMap {_fedcf :_dabdc .String (),_fgdgd :_fecf });};};};_gdbfc =append (_gdbfc ,FileSpecMap {_fedcf :_addf .Name ,_fgdgd :_geccb });
_da .Slice (_gdbfc ,func (_baef ,_baagfc int )bool {return _gdbfc [_baef ]._fedcf < _gdbfc [_baagfc ]._fedcf });_agded =_cee .MakeArray ();for _ ,_degaf :=range _gdbfc {_agded .Append (_cee .MakeString (_degaf ._fedcf ));_agded .Append (_degaf ._fgdgd .ToPdfObject ());
};_afadd .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_agded );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dgedg pdfFontType3 )GetCharMetrics (code _dae .CharCode )(_ce .CharMetrics ,bool ){if _bbfe ,_adbba :=_dgedg ._fdfff [code ];_adbba {return _ce .CharMetrics {Wx :_bbfe },true ;};if _ce .IsStdFont (_ce .StdFontName (_dgedg ._fbcf )){return _ce .CharMetrics {Wx :250},true ;
};return _ce .CharMetrics {},false ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ffgf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddg ,_gcfa :=_cee .GetNumbersAsFloat (objects );
if _gcfa !=nil {return nil ,_gcfa ;};return _ffgf .ColorFromFloats (_eddg );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cfca *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cfca .GetNumComponents (){return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deeef ,_fcdd :=_cfca .TintTransform .Evaluate (vals );
if _fcdd !=nil {return nil ,_fcdd ;};_dfge ,_fcdd :=_cfca .AlternateSpace .ColorFromFloats (_deeef );if _fcdd !=nil {return nil ,_fcdd ;};return _dfge ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_bfeeb *_cee .PdfIndirectObject ;_dffe _dae .TextEncoder ;


// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cee .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cee .PdfObject ;W _cee .PdfObject ;DW2 _cee .PdfObject ;W2 _cee .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cee .PdfObject ;_dbffc map[_dae .CharCode ]float64 ;_dfae float64 ;_abdc map[rune ]int ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_ccdff *KDict )ToPdfObject ()_cee .PdfObject {_dffdb :=_cee .MakeDict ();if _ccdff .ID !=nil {_dffdb .Set ("\u0049\u0044",_ccdff .ID );};if _ccdff .K !=nil {_dffdb .Set ("\u004b",_ccdff .K );}else if len (_ccdff ._affgf )> 0{if len (_ccdff ._affgf )==1{_ccdff .K =_ccdff ._affgf [0].ToPdfObject ();
}else {_eefce :=_cee .MakeArray ();for _ ,_fggb :=range _ccdff ._affgf {_eefce .Append (_fggb .ToPdfObject ());};_ccdff .K =_eefce ;};_dffdb .Set ("\u004b",_ccdff .K );};if _ccdff .S !=nil {_dffdb .Set ("\u0053",_ccdff .S );};if _ccdff .P !=nil {_dffdb .Set ("\u0050",_ccdff .P );
};if _ccdff .Pg !=nil {_dffdb .Set ("\u0050\u0067",_ccdff .Pg );};if _ccdff .C !=nil {_dffdb .Set ("\u0043",_ccdff .C );};if _ccdff .R !=nil {_dffdb .Set ("\u0052",_ccdff .R );};if _ccdff .T !=nil {_dffdb .Set ("\u0054",_ccdff .T );};if _ccdff .Lang !=nil {_dffdb .Set ("\u004c\u0061\u006e\u0067",_ccdff .Lang );
};if _ccdff .Alt !=nil {_dffdb .Set ("\u0041\u006c\u0074",_ccdff .Alt );};if _ccdff .E !=nil {_dffdb .Set ("\u0045",_ccdff .E );};if _ccdff .A !=nil {_dffdb .Set ("\u0041",_ccdff .A );}else if _ccdff ._daafg !=nil {_agdbe :=_cee .MakeArrayFromFloats ([]float64 {_ccdff ._daafg .Llx ,_ccdff ._daafg .Lly ,_ccdff ._daafg .Urx ,_ccdff ._daafg .Ury });
_adcca :=_cee .MakeDict ();_adcca .Set ("\u0042\u0042\u006f\u0078",_agdbe );_adcca .Set ("\u004f",_cee .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_dffdb .Set ("\u0041",_cee .MakeIndirectObject (_adcca ));};return _dffdb ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _gc .Time ){_dggagg .Lock ();defer _dggagg .Unlock ();_dddda =creationDate ;};func (_gde *PdfReader )newPdfAnnotationRichMediaFromDict (_ddcd *_cee .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_babc :=&PdfAnnotationRichMedia {};
_babc .RichMediaSettings =_ddcd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_babc .RichMediaContent =_ddcd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _babc ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_dcbgf *PdfFont )BaseFont ()string {return _dcbgf .baseFields ()._fbcf };

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_cfagg :=&PdfColorPattern {};return _cfagg };

// Add appends a top level outline item to the outline.
func (_gcfb *Outline )Add (item *OutlineItem ){_gcfb .Entries =append (_gcfb .Entries ,item )};

// GetPage returns the PdfPage model for the specified page number.
func (_fbfdd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fbfdd ._ffdgf .GetCrypter ()!=nil &&!_fbfdd ._ffdgf .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fbfdd ._fded )< pageNumber {return nil ,_cdf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ggeag :=pageNumber -1;if _ggeag < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cdcag :=_fbfdd .PageList [_ggeag ];
return _cdcag ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_daeb *PdfAction )GetContainingPdfObject ()_cee .PdfObject {return _daeb ._gaf };

// ImageToRGB convert an indexed image to RGB.
func (_faeb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_faeb .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_dfbc :=_ca .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cbfg ,img ._cabgb );_gfeac :=_ag .NewReader (img .getBase ());_eaff :=_ag .NewWriter (_dfbc );var (_egeaa uint32 ;_ggdbe int ;_fbce error ;);for {_egeaa ,_fbce =_gfeac .ReadSample ();
if _fbce ==_fc .EOF {break ;}else if _fbce !=nil {return img ,_fbce ;};_ggdbe =int (_egeaa );_fca .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ggdbe ,N ,len (_faeb ._aecec ));
if (_ggdbe +1)*N > len (_faeb ._aecec ){_ggdbe =len (_faeb ._aecec )/N -1;_fca .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ggdbe );if _ggdbe < 0{_fca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _gacdg :=_ggdbe *N ;_gacdg < (_ggdbe +1)*N ;_gacdg ++{if _fbce =_eaff .WriteSample (uint32 (_faeb ._aecec [_gacdg ]));_fbce !=nil {return img ,_fbce ;};};};return _faeb .Base .ImageToRGB (_acecd (&_dfbc ));};

// RemveTabOrder removes the tab order for the page.
func (_eaffdb *PdfPage )RemoveTabOrder (){_eaffdb .Tabs =nil };

// PrintClip returns the value of the printClip.
func (_fgbcg *ViewerPreferences )PrintClip ()PageBoundary {return _fgbcg ._fcddg };

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ggdea *LTV )Enable (sig *PdfSignature ,extraCerts []*_dfd .Certificate )error {if _eeagb :=_ggdea .validateSig (sig );_eeagb !=nil {return _eeagb ;};_faedd ,_gfeb :=_ggdea .generateVRIKey (sig );if _gfeb !=nil {return _gfeb ;};if _ ,_bddbg :=_ggdea ._fcbgb .VRI [_faedd ];
_bddbg &&_ggdea .SkipExisting {return nil ;};_gdbeg ,_gfeb :=sig .GetCerts ();if _gfeb !=nil {return _gfeb ;};return _ggdea .enable (_gdbeg ,extraCerts ,_faedd );};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cgbac *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gcde *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abac :=vals [0];if _abac < 0.0||_abac > 1.0{_fca .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _abac < 0.0{_abac =0.0;}else if _abac > 1.0{_abac =1.0;};return NewPdfColorDeviceGray (_abac ),nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gadbd []byte )(_efdfg int ,_cfagfc error );};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_acga *PdfColorspaceLab )DecodeArray ()[]float64 {_fcdf :=[]float64 {0,100};if _acga !=nil &&_acga .Range !=nil &&len (_acga .Range )==4{_fcdf =append (_fcdf ,_acga .Range ...);}else {_fcdf =append (_fcdf ,-100,100,-100,100);};return _fcdf ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cee .PdfObject ;BS _cee .PdfObject ;LE _cee .PdfObject ;IC _cee .PdfObject ;LL _cee .PdfObject ;LLE _cee .PdfObject ;Cap _cee .PdfObject ;IT _cee .PdfObject ;LLO _cee .PdfObject ;CP _cee .PdfObject ;
Measure _cee .PdfObject ;CO _cee .PdfObject ;};func (_gcba *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ccfde *PdfPageResources )SetXObjectFormByName (keyName _cee .PdfObjectName ,xform *XObjectForm )error {_bcgdc :=xform .ToPdfObject ().(*_cee .PdfObjectStream );_dbded :=_ccfde .SetXObjectByName (keyName ,_bcgdc );return _dbded ;};const (FieldFlagClear FieldFlag =0;
FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);
FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);
FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ToPdfObject implements interface PdfModel.
func (_gdg *PdfAnnotationProjection )ToPdfObject ()_cee .PdfObject {_gdg .PdfAnnotation .ToPdfObject ();_acg :=_gdg ._eddc ;_bbdga :=_acg .PdfObject .(*_cee .PdfObjectDictionary );_gdg .PdfAnnotationMarkup .appendToPdfDictionary (_bbdga );return _acg ;
};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_dbbef *PdfReader )GetIndirectObjectByNumber (number int )(_cee .PdfObject ,error ){_faebf ,_dbedg :=_dbbef ._ffdgf .LookupByNumber (number );return _faebf ,_dbedg ;};func (_egdb *PdfPage )flattenFieldsWithOpts (_cdbefc FieldAppearanceGenerator ,_gebgdg *FieldFlattenOpts ,_faea map[*PdfAnnotation ]bool )error {var _aadgg []*PdfAnnotation ;
if _cdbefc !=nil {if _eddfc :=_cdbefc .WrapContentStream (_egdb );_eddfc !=nil {return _eddfc ;};};_cbada ,_eacf :=_egdb .GetAnnotations ();if _eacf !=nil {return _eacf ;};for _ ,_dbfd :=range _cbada {_aebff ,_cfgfa :=_faea [_dbfd ];if !_cfgfa &&_gebgdg .AnnotFilterFunc !=nil {if _ ,_aadec :=_dbfd .GetContext ().(*PdfAnnotationWidget );
!_aadec {_cfgfa =_gebgdg .AnnotFilterFunc (_dbfd );};};if !_cfgfa {_aadgg =append (_aadgg ,_dbfd );continue ;};switch _dbfd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_abcgb ,_ggdd ,_bbga :=_agca (_dbfd );if _bbga !=nil {if !_aebff {_fca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bbga );
continue ;};if _abcgb ==nil {continue ;};_bddbd :=_egdb .Resources .GenerateXObjectName ();_egdb .Resources .SetXObjectFormByName (_bddbd ,_abcgb );_becc ,_gefed ,_bbga :=_bafda (_abcgb );if _bbga !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_bbga );
}else {_cgcd :=_ac .IdentityMatrix ();_cgcd =_cgcd .Translate (-_becc .Llx ,-_becc .Lly );if _gefed {_aafe :=0.0;if _becc .Width ()> 0{_aafe =_ggdd .Width ()/_becc .Width ();};_bccf :=0.0;if _becc .Height ()> 0{_bccf =_ggdd .Height ()/_becc .Height ();
};_cgcd =_cgcd .Scale (_aafe ,_bccf );};_ggdd .Transform (_cgcd );};_ebeca :=_aaa .Min (_ggdd .Llx ,_ggdd .Urx );_cefgb :=_aaa .Min (_ggdd .Lly ,_ggdd .Ury );var _fagee []string ;_fagee =append (_fagee ,"\u0071");_fagee =append (_fagee ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ebeca ,_cefgb ));
_fagee =append (_fagee ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bddbd .String ()));_fagee =append (_fagee ,"\u0051");_efac :=_ad .Join (_fagee ,"\u000a");_bbga =_egdb .AppendContentStream (_efac );if _bbga !=nil {return _bbga ;};if _abcgb .Resources !=nil {_gdgbb ,_gead :=_cee .GetDict (_abcgb .Resources .Font );
if _gead {for _ ,_fgfbad :=range _gdgbb .Keys (){if !_egdb .Resources .HasFontByName (_fgfbad ){_egdb .Resources .SetFontByName (_fgfbad ,_gdgbb .Get (_fgfbad ));};};};};};if len (_aadgg )> 0{_egdb ._eeaba =_aadgg ;}else {_egdb ._eeaba =[]*PdfAnnotation {};
};return nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_efca *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_ebga *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject implements interface PdfModel.
func (_gacc *PdfAnnotationUnderline )ToPdfObject ()_cee .PdfObject {_gacc .PdfAnnotation .ToPdfObject ();_adfg :=_gacc ._eddc ;_ebca :=_adfg .PdfObject .(*_cee .PdfObjectDictionary );_gacc .PdfAnnotationMarkup .appendToPdfDictionary (_ebca );_ebca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ebca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gacc .QuadPoints );return _adfg ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dagefg pdfFontSimple )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){if _dagefg ._daefa !=nil {_bdecg ,_eace :=_dagefg ._daefa .Read (r );if _eace {return _bdecg ,true ;};};_eccd :=_dagefg .Encoder ();if _eccd ==nil {_fca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dagefg );
return _ce .CharMetrics {},false ;};_eefbc ,_bafcc :=_eccd .RuneToCharcode (r );if !_bafcc {if r !=' '{_fca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dagefg );
};return _ce .CharMetrics {},false ;};_ggcc ,_gdfe :=_dagefg .GetCharMetrics (_eefbc );return _ggcc ,_gdfe ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fddf *PdfColorspaceDeviceCMYK )ToPdfObject ()_cee .PdfObject {return _cee .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// IsPush returns true if the button field represents a push button, false otherwise.
func (_aefg *PdfFieldButton )IsPush ()bool {return _aefg .GetType ()==ButtonTypePush };func (_fdgc *PdfAnnotation )String ()string {_fgfb :="";_aca ,_cgf :=_fdgc .ToPdfObject ().(*_cee .PdfIndirectObject );if _cgf {_fgfb =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdgc ._ecf ,_aca .PdfObject .String ());
};return _fgfb ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fdd :=NewPdfAnnotation ();_edb :=&PdfAnnotationSquare {};_edb .PdfAnnotation =_fdd ;_edb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdd .SetContext (_edb );return _edb ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_efda *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efda .Base ==nil {return nil ,_cdf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _efda .Base .ColorToRGB (color );};

// PrintPageRange returns the value of the printPageRange.
func (_acgag *ViewerPreferences )PrintPageRange ()[]int {return _acgag ._acfdg };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cfcfa *PdfShading )GetContainingPdfObject ()_cee .PdfObject {return _cfcfa ._dfgbe };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_baf :=NewPdfAnnotation ();_gbb :=&PdfAnnotationRedact {};_gbb .PdfAnnotation =_baf ;_gbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_baf .SetContext (_gbb );return _gbb ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bcge *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bcge .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bcge ._ceed =acroForm ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gefe FieldFlag )Mask ()uint32 {return uint32 (_gefe )};func (_efgb *PdfReader )newPdfAnnotationUnderlineFromDict (_befc *_cee .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_aceg :=PdfAnnotationUnderline {};_bgcg ,_ggfb :=_efgb .newPdfAnnotationMarkupFromDict (_befc );
if _ggfb !=nil {return nil ,_ggfb ;};_aceg .PdfAnnotationMarkup =_bgcg ;_aceg .QuadPoints =_befc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aceg ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bbedg *PdfFieldChoice )ToPdfObject ()_cee .PdfObject {_bbedg .PdfField .ToPdfObject ();_geecc :=_bbedg ._ccbb ;_gdba :=_geecc .PdfObject .(*_cee .PdfObjectDictionary );_gdba .Set ("\u0046\u0054",_cee .MakeName ("\u0043\u0068"));if _bbedg .Opt !=nil {_gdba .Set ("\u004f\u0070\u0074",_bbedg .Opt );
};if _bbedg .TI !=nil {_gdba .Set ("\u0054\u0049",_bbedg .TI );};if _bbedg .I !=nil {_gdba .Set ("\u0049",_bbedg .I );};return _geecc ;};

// HasExtGState checks if ExtGState name is available.
func (_bbfde *PdfPage )HasExtGState (name _cee .PdfObjectName )bool {if _bbfde .Resources ==nil {return false ;};if _bbfde .Resources .ExtGState ==nil {return false ;};_becee ,_fbaa :=_cee .TraceToDirectObject (_bbfde .Resources .ExtGState ).(*_cee .PdfObjectDictionary );
if !_fbaa {_fca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cee .TraceToDirectObject (_bbfde .Resources .ExtGState ));
return false ;};_dbcb :=_becee .Get (name );_fbdag :=_dbcb !=nil ;return _fbdag ;};

// SetViewArea sets the value of the viewArea.
func (_gfebc *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_gfebc ._gagga =viewArea };

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _fc .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _cbbdc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _agfga (rs ,opts ,true ,_cbbdc );
};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gddc *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cdf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dcgd :=field .V ;if _dcgd ==nil {return _cdf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_dadc :=pageNum -1;
if _dadc < 0||_dadc > len (_gddc ._afca )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_dccb :=_gddc .Reader .PageList [_dadc ];field .P =_dccb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_cee .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_dccb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gddc ._ceed ==_gddc ._ebdd .AcroForm {_gddc ._ceed =_gddc .Reader .AcroForm ;};_gca :=_gddc ._ceed ;if _gca ==nil {_gca =NewPdfAcroForm ();};_gca .SigFlags =_cee .MakeInteger (3);if _gca .NeedAppearances !=nil {_gca .NeedAppearances =nil ;
};_bgga :=append (_gca .AllFields (),field .PdfField );_gca .Fields =&_bgga ;_gddc .ReplaceAcroForm (_gca );_gddc .UpdatePage (_dccb );_gddc ._afca [_dadc ]=_dccb ;if _ ,_dbff :=field .V .GetDocMDPPermission ();_dbff {_gddc ._dbec =NewPermissions (field .V );
};return nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_aedc :=PdfWriter {};_aedc ._dgbgbb =map[_cee .PdfObject ]struct{}{};_aedc ._gccff =[]_cee .PdfObject {};_aedc ._fgadee =map[_cee .PdfObject ][]*_cee .PdfObjectDictionary {};_aedc ._befcg =map[_cee .PdfObject ]struct{}{};
_aedc ._gceef .Major =1;_aedc ._gceef .Minor =3;_bbcdc :=_cee .MakeDict ();_fgebe :=[]struct{_ggeeg _cee .PdfObjectName ;_bdaaf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_egbad ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cgcdbe ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_eddfe ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gadad ()},{"\u0054\u0069\u0074l\u0065",_deeea ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gadfef ()}};
for _ ,_ebagaa :=range _fgebe {if _ebagaa ._bdaaf !=""{_bbcdc .Set (_ebagaa ._ggeeg ,_cee .MakeString (_ebagaa ._bdaaf ));};};if _gegbb :=_efffg ();!_gegbb .IsZero (){if _gbddd ,_gcedc :=NewPdfDateFromTime (_gegbb );_gcedc ==nil {_bbcdc .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gbddd .ToPdfObject ());
};};if _dgdba :=_acgef ();!_dgdba .IsZero (){if _dgfde ,_fcacaf :=NewPdfDateFromTime (_dgdba );_fcacaf ==nil {_bbcdc .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_dgfde .ToPdfObject ());};};_adebc :=_cee .PdfIndirectObject {};_adebc .PdfObject =_bbcdc ;
_aedc ._cbfac =&_adebc ;_aedc .addObject (&_adebc );_gacf :=_cee .PdfIndirectObject {};_bcaf :=_cee .MakeDict ();_bcaf .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_gacf .PdfObject =_bcaf ;_aedc ._fadf =&_gacf ;
_aedc .addObject (_aedc ._fadf );_dabaa ,_dgaa :=_dbdaag ("\u0077");if _dgaa !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgaa );};_aedc ._cbdcf =_dabaa ;_bfcfa :=_cee .PdfIndirectObject {};_cdbegd :=_cee .MakeDict ();_cdbegd .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0050\u0061\u0067e\u0073"));
_beede :=_cee .PdfObjectArray {};_cdbegd .Set ("\u004b\u0069\u0064\u0073",&_beede );_cdbegd .Set ("\u0043\u006f\u0075n\u0074",_cee .MakeInteger (0));_bfcfa .PdfObject =_cdbegd ;_aedc ._cdggg =&_bfcfa ;_aedc ._gecd =map[_cee .PdfObject ]struct{}{};_aedc ._dcdg =[]*_cee .PdfIndirectObject {};
_aedc .addObject (_aedc ._cdggg );_bcaf .Set ("\u0050\u0061\u0067e\u0073",&_bfcfa );_aedc ._cdebc =_bcaf ;_fca .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_gacf );return _aedc ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ecaa *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_daffc :=pageNum -1;var _fdae *PdfPage ;for _gdbf ,_fgccfc :=range _ecaa ._afca {if _gdbf ==_daffc {_fdae =_fgccfc ;};};if _fdae ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _fdae ._bafab !=nil &&_fdae ._bafab .GetParser ()==_ecaa ._ebdd ._ffdgf {_fdae =_fdae .Duplicate ();_ecaa ._afca [_daffc ]=_fdae ;};page =page .Duplicate ();_adfebd (page );_cbf :=_aagg (_fdae );_ddbg :=_aagg (page );_eaa :=make (map[_cee .PdfObjectName ]_cee .PdfObjectName );
for _ggdb :=range _ddbg {if _ ,_cfbf :=_cbf [_ggdb ];_cfbf {for _ageb :=1;true ;_ageb ++{_dbed :=_cee .PdfObjectName (string (_ggdb )+_fa .Itoa (_ageb ));if _ ,_bcac :=_cbf [_dbed ];!_bcac {_eaa [_ggdb ]=_dbed ;break ;};};};};_fed ,_faac :=page .GetContentStreams ();
if _faac !=nil {return _faac ;};_acfa ,_faac :=_fdae .GetContentStreams ();if _faac !=nil {return _faac ;};for _degd ,_gdgg :=range _fed {for _degda ,_badb :=range _eaa {_gdgg =_ad .Replace (_gdgg ,"\u002f"+string (_degda ),"\u002f"+string (_badb ),-1);
};_fed [_degd ]=_gdgg ;};_acfa =append (_acfa ,_fed ...);if _dagf :=_fdae .SetContentStreams (_acfa ,_cee .NewFlateEncoder ());_dagf !=nil {return _dagf ;};_fdae ._eeaba =append (_fdae ._eeaba ,page ._eeaba ...);if _fdae .Resources ==nil {_fdae .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_fdae .Resources .Font =_ecaa .mergeResources (_fdae .Resources .Font ,page .Resources .Font ,_eaa );_fdae .Resources .XObject =_ecaa .mergeResources (_fdae .Resources .XObject ,page .Resources .XObject ,_eaa );_fdae .Resources .Properties =_ecaa .mergeResources (_fdae .Resources .Properties ,page .Resources .Properties ,_eaa );
if _fdae .Resources .ProcSet ==nil {_fdae .Resources .ProcSet =page .Resources .ProcSet ;};_fdae .Resources .Shading =_ecaa .mergeResources (_fdae .Resources .Shading ,page .Resources .Shading ,_eaa );_fdae .Resources .ExtGState =_ecaa .mergeResources (_fdae .Resources .ExtGState ,page .Resources .ExtGState ,_eaa );
};_gaad ,_faac :=_fdae .GetMediaBox ();if _faac !=nil {return _faac ;};_feebf ,_faac :=page .GetMediaBox ();if _faac !=nil {return _faac ;};var _feed bool ;if _gaad .Llx > _feebf .Llx {_gaad .Llx =_feebf .Llx ;_feed =true ;};if _gaad .Lly > _feebf .Lly {_gaad .Lly =_feebf .Lly ;
_feed =true ;};if _gaad .Urx < _feebf .Urx {_gaad .Urx =_feebf .Urx ;_feed =true ;};if _gaad .Ury < _feebf .Ury {_gaad .Ury =_feebf .Ury ;_feed =true ;};if _feed {_fdae .MediaBox =_gaad ;};return nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cee .PdfObject ;LE _cee .PdfObject ;BS _cee .PdfObject ;IC _cee .PdfObject ;BE _cee .PdfObject ;IT _cee .PdfObject ;Measure _cee .PdfObject ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cee .PdfObject ;IC _cee .PdfObject ;BE _cee .PdfObject ;RD _cee .PdfObject ;};func (_bffb *PdfReader )newPdfAnnotationWidgetFromDict (_eggb *_cee .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_aade :=PdfAnnotationWidget {};
_aade .H =_eggb .Get ("\u0048");_aade .MK =_eggb .Get ("\u004d\u004b");_aade .A =_eggb .Get ("\u0041");_aade .AA =_eggb .Get ("\u0041\u0041");_aade .BS =_eggb .Get ("\u0042\u0053");_aade .Parent =_eggb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_aade ,nil ;
};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_efaec :map[_cee .PdfObject ]struct{}{},_fcgbe :_baaedg (),_ffdgf :_cee .NewParserFromString (txt )};};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cbd :=NewPdfAction ();_dee :=&PdfActionTrans {};_dee .PdfAction =_cbd ;_cbd .SetContext (_dee );return _dee ;};

// A returns the value of the A component of the color.
func (_cdgf *PdfColorLab )A ()float64 {return _cdgf [1]};

// ToPdfObject implements interface PdfModel.
func (_age *PdfActionURI )ToPdfObject ()_cee .PdfObject {_age .PdfAction .ToPdfObject ();_aeb :=_age ._gaf ;_eee :=_aeb .PdfObject .(*_cee .PdfObjectDictionary );_eee .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeURI )));_eee .SetIfNotNil ("\u0055\u0052\u0049",_age .URI );
_eee .SetIfNotNil ("\u0049\u0073\u004da\u0070",_age .IsMap );return _aeb ;};func (_fagc *PdfReader )newPdfAnnotationLinkFromDict (_daef *_cee .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_eef :=PdfAnnotationLink {};_eef .A =_daef .Get ("\u0041");
_eef .Dest =_daef .Get ("\u0044\u0065\u0073\u0074");_eef .H =_daef .Get ("\u0048");_eef .PA =_daef .Get ("\u0050\u0041");_eef .QuadPoints =_daef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eef .BS =_daef .Get ("\u0042\u0053");
return &_eef ,nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cga :=NewPdfAnnotation ();_ggcg :=&PdfAnnotationTrapNet {};_ggcg .PdfAnnotation =_cga ;_cga .SetContext (_ggcg );return _ggcg ;};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_egeg *PdfReader )GetCatalogViewerPreferences ()(_cee .PdfObject ,bool ){if _egeg ._cacfe ==nil {return nil ,false ;};_daeeb :=_egeg ._cacfe .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _daeeb ,_daeeb !=nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ace :=NewPdfAction ();_cfa :=&PdfActionGoTo {};_cfa .PdfAction =_ace ;_ace .SetContext (_cfa );return _cfa ;};

// ToPdfObject implements interface PdfModel.
func (_db *PdfActionTrans )ToPdfObject ()_cee .PdfObject {_db .PdfAction .ToPdfObject ();_fdc :=_db ._gaf ;_aag :=_fdc .PdfObject .(*_cee .PdfObjectDictionary );_aag .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeTrans )));_aag .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_db .Trans );
return _fdc ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_aeggc *PdfPattern )SetContext (ctx PdfModel ){_aeggc ._gabf =ctx };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_cbeff *PdfPage )AddContentStreamByString (contentStr string )error {_afbc ,_adeff :=_cee .MakeStream ([]byte (contentStr ),_cee .NewFlateEncoder ());if _adeff !=nil {return _adeff ;};if _cbeff .Contents ==nil {_cbeff .Contents =_afbc ;}else {_cedbg :=_cee .TraceToDirectObject (_cbeff .Contents );
_dbde ,_fcadf :=_cedbg .(*_cee .PdfObjectArray );if !_fcadf {_dbde =_cee .MakeArray (_cedbg );};_dbde .Append (_afbc );_cbeff .Contents =_dbde ;};return nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_dffa *DSS )AddOCSPs (ocsps [][]byte )([]*_cee .PdfObjectStream ,error ){return _dffa .add (&_dffa .OCSPs ,_dffa ._dcff ,ocsps );};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ffec *PdfAcroForm ,_cgee *PdfField ,_beec *PdfAnnotationWidget )(*_cee .PdfObjectDictionary ,error );};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_debg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_eebee *_cee .PdfObjectDictionary ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ggcag *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ggcag ._ecfaf =colorspace ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_fbda FieldFlag )Has (fl FieldFlag )bool {return (_fbda .Mask ()&fl .Mask ())> 0};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bd :=NewPdfAction ();_aad :=&PdfActionNamed {};_aad .PdfAction =_bd ;_bd .SetContext (_aad );return _aad ;};type fontCommon struct{_fbcf string ;_ccdeg string ;_ccgfa string ;_deccd _cee .PdfObject ;_abcbf *_dgg .CMap ;
_ebcad *PdfFontDescriptor ;_facc int64 ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fbddf *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_cfg *PdfActionLaunch )ToPdfObject ()_cee .PdfObject {_cfg .PdfAction .ToPdfObject ();_ggd :=_cfg ._gaf ;_dage :=_ggd .PdfObject .(*_cee .PdfObjectDictionary );_dage .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeLaunch )));if _cfg .F !=nil {_dage .Set ("\u0046",_cfg .F .ToPdfObject ());
};_dage .SetIfNotNil ("\u0057\u0069\u006e",_cfg .Win );_dage .SetIfNotNil ("\u004d\u0061\u0063",_cfg .Mac );_dage .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cfg .Unix );_dage .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cfg .NewWindow );
return _ggd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdag pdfCIDFontType0 )GetCharMetrics (code _dae .CharCode )(_ce .CharMetrics ,bool ){_gaaga :=_cdag ._bfecd ;if _edbdg ,_aggea :=_cdag ._gdde [code ];_aggea {_gaaga =_edbdg ;};return _ce .CharMetrics {Wx :_gaaga },true ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ceefb *PdfColorspaceDeviceN )GetNumComponents ()int {return _ceefb .ColorantNames .Len ()};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ceacf pdfCIDFontType0 )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){return _ce .CharMetrics {Wx :_ceacf ._bfecd },true ;};func (_fdcea *PdfReader )buildNameNodes (_cddgc *_cee .PdfIndirectObject ,_dfbfc map[_cee .PdfObject ]struct{})error {if _cddgc ==nil {return nil ;
};if _ ,_ceaa :=_dfbfc [_cddgc ];_ceaa {_fca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cddgc .ObjectNumber );
return nil ;};_dfbfc [_cddgc ]=struct{}{};_aeaa ,_bgbcf :=_cddgc .PdfObject .(*_cee .PdfObjectDictionary );if !_bgbcf {return _cdf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _bebf ,_cbeeg :=_cee .GetDict (_aeaa .Get ("\u0044\u0065\u0073t\u0073"));
_cbeeg {_bgggee ,_gdded :=_cee .GetArray (_bebf .Get ("\u004b\u0069\u0064\u0073"));if !_gdded {return _cdf .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_fca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bgggee );
for _acbdc ,_fcbed :=range _bgggee .Elements (){_ggcbe ,_efbcg :=_cee .GetIndirect (_fcbed );if !_efbcg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_ggcbe );
return _cdf .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_bgggee .Set (_acbdc ,_ggcbe );_afafd :=_fdcea .buildNameNodes (_ggcbe ,_dfbfc );if _afafd !=nil {return _afafd ;
};};};if _cfcee ,_decgbc :=_cee .GetDict (_aeaa );_decgbc {if !_cee .IsNullObject (_cfcee .Get ("\u004b\u0069\u0064\u0073")){if _gefc ,_fbfeg :=_cee .GetArray (_cfcee .Get ("\u004b\u0069\u0064\u0073"));_fbfeg {for _bgca ,_gggga :=range _gefc .Elements (){if _cfcda ,_abfffd :=_cee .GetIndirect (_gggga );
_abfffd {_gefc .Set (_bgca ,_cfcda );_acdgc :=_fdcea .buildNameNodes (_cfcda ,_dfbfc );if _acdgc !=nil {return _acdgc ;};};};};};};return nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cee .PdfObject ;Name _cee .PdfObject ;};func (_dadd *PdfReader )newPdfAnnotationInkFromDict (_bgbb *_cee .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fbfd :=PdfAnnotationInk {};
_fbfc ,_fdcb :=_dadd .newPdfAnnotationMarkupFromDict (_bgbb );if _fdcb !=nil {return nil ,_fdcb ;};_fbfd .PdfAnnotationMarkup =_fbfc ;_fbfd .InkList =_bgbb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fbfd .BS =_bgbb .Get ("\u0042\u0053");return &_fbfd ,nil ;
};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dbdbc *Image )SetSamples (samples []uint32 ){if _dbdbc .BitsPerComponent < 8{samples =_dbdbc .samplesAddPadding (samples );};_aageg :=_ag .ResampleUint32 (samples ,int (_dbdbc .BitsPerComponent ),8);_gccdaa :=make ([]byte ,len (_aageg ));for _bbaf ,_agga :=range _aageg {_gccdaa [_bbaf ]=byte (_agga );
};_dbdbc .Data =_gccdaa ;};func _geca (_dbfga _cee .PdfObject )(*PdfColorspaceICCBased ,error ){_bdfa :=&PdfColorspaceICCBased {};if _cgca ,_dgffc :=_dbfga .(*_cee .PdfIndirectObject );_dgffc {_bdfa ._gagc =_cgca ;};_dbfga =_cee .TraceToDirectObject (_dbfga );
_gcegd ,_bdda :=_dbfga .(*_cee .PdfObjectArray );if !_bdda {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcegd .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_dbfga =_cee .TraceToDirectObject (_gcegd .Get (0));_ged ,_bdda :=_dbfga .(*_cee .PdfObjectName );if !_bdda {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ged !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dbfga =_gcegd .Get (1);
_acc ,_bdda :=_cee .GetStream (_dbfga );if !_bdda {_fca .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dbfga );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aggge :=_acc .PdfObjectDictionary ;_gafe ,_bdda :=_aggge .Get ("\u004e").(*_cee .PdfObjectInteger );
if !_bdda {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_gafe !=1&&*_gafe !=3&&*_gafe !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bdfa .N =int (*_gafe );if _egea :=_aggge .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_egea !=nil {_bceb ,_dafd :=NewPdfColorspaceFromPdfObject (_egea );if _dafd !=nil {return nil ,_dafd ;};_bdfa .Alternate =_bceb ;};if _cceef :=_aggge .Get ("\u0052\u0061\u006eg\u0065");
_cceef !=nil {_cceef =_cee .TraceToDirectObject (_cceef );_dfed ,_cfdef :=_cceef .(*_cee .PdfObjectArray );if !_cfdef {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dfed .Len ()!=2*_bdfa .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_eefc ,_adbb :=_dfed .GetAsFloat64Slice ();if _adbb !=nil {return nil ,_adbb ;};_bdfa .Range =_eefc ;}else {_bdfa .Range =make ([]float64 ,2*_bdfa .N );for _gfca :=0;_gfca < _bdfa .N ;_gfca ++{_bdfa .Range [2*_gfca ]=0.0;_bdfa .Range [2*_gfca +1]=1.0;
};};if _fbef :=_aggge .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fbef !=nil {_gegd ,_eegd :=_fbef .(*_cee .PdfObjectStream );if !_eegd {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bdfa .Metadata =_gegd ;};_bbec ,_efdf :=_cee .DecodeStream (_acc );if _efdf !=nil {return nil ,_efdf ;};_bdfa .Data =_bbec ;_bdfa ._gcdbe =_acc ;return _bdfa ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gadc *Image )ColorAt (x ,y int )(_f .Color ,error ){_dafg :=_ca .BytesPerLine (int (_gadc .Width ),int (_gadc .BitsPerComponent ),_gadc .ColorComponents );switch _gadc .ColorComponents {case 1:return _ca .ColorAtGrayscale (x ,y ,int (_gadc .BitsPerComponent ),_dafg ,_gadc .Data ,_gadc ._cabgb );
case 3:return _ca .ColorAtNRGBA (x ,y ,int (_gadc .Width ),_dafg ,int (_gadc .BitsPerComponent ),_gadc .Data ,_gadc ._cbfg ,_gadc ._cabgb );case 4:return _ca .ColorAtCMYK (x ,y ,int (_gadc .Width ),_gadc .Data ,_gadc ._cabgb );};_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gadc .ColorComponents ,_gadc .BitsPerComponent );
return nil ,_cdf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_ffg *PdfReader )newPdfAnnotationPolyLineFromDict (_edbg *_cee .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_fdec :=PdfAnnotationPolyLine {};
_gfba ,_ggeb :=_ffg .newPdfAnnotationMarkupFromDict (_edbg );if _ggeb !=nil {return nil ,_ggeb ;};_fdec .PdfAnnotationMarkup =_gfba ;_fdec .Vertices =_edbg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fdec .LE =_edbg .Get ("\u004c\u0045");
_fdec .BS =_edbg .Get ("\u0042\u0053");_fdec .IC =_edbg .Get ("\u0049\u0043");_fdec .BE =_edbg .Get ("\u0042\u0045");_fdec .IT =_edbg .Get ("\u0049\u0054");_fdec .Measure =_edbg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fdec ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ebfg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_ddcee *PdfSignature ,_fbbdab Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_dfdcb *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_eadbg *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_ceceg *PdfSignature ,_efcd Hasher )error ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cee .StreamEncoder ;Intent _cee .PdfObject ;ImageMask _cee .PdfObject ;Mask _cee .PdfObject ;Matte _cee .PdfObject ;Decode _cee .PdfObject ;Interpolate _cee .PdfObject ;
Alternatives _cee .PdfObject ;SMask _cee .PdfObject ;SMaskInData _cee .PdfObject ;Name _cee .PdfObject ;StructParent _cee .PdfObject ;ID _cee .PdfObject ;OPI _cee .PdfObject ;Metadata _cee .PdfObject ;OC _cee .PdfObject ;Stream []byte ;_fggac *_cee .PdfObjectStream ;
_cdgeg bool ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ffeg *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ffeg .UnderlyingCS ==nil {return nil ,_cdf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ffeg .UnderlyingCS .ColorFromFloats (vals );};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_gabfc *PdfWriter )copyObjects (){_fbdcgb :=make (map[_cee .PdfObject ]_cee .PdfObject );_fgafed :=make ([]_cee .PdfObject ,0,len (_gabfc ._gccff ));_faddb :=make (map[_cee .PdfObject ]struct{},len (_gabfc ._gccff ));
_edcfc :=make (map[_cee .PdfObject ]struct{});for _ ,_bfcbdc :=range _gabfc ._gccff {_gdddf :=_gabfc .copyObject (_bfcbdc ,_fbdcgb ,_edcfc ,false );if _ ,_gabfcg :=_edcfc [_bfcbdc ];_gabfcg {continue ;};_fgafed =append (_fgafed ,_gdddf );_faddb [_gdddf ]=struct{}{};
};_gabfc ._gccff =_fgafed ;_gabfc ._dgbgbb =_faddb ;_gabfc ._cbfac =_gabfc .copyObject (_gabfc ._cbfac ,_fbdcgb ,nil ,false ).(*_cee .PdfIndirectObject );_gabfc ._fadf =_gabfc .copyObject (_gabfc ._fadf ,_fbdcgb ,nil ,false ).(*_cee .PdfIndirectObject );
if _gabfc ._bbfag !=nil {_gabfc ._bbfag =_gabfc .copyObject (_gabfc ._bbfag ,_fbdcgb ,nil ,false ).(*_cee .PdfIndirectObject );};if _gabfc ._fbaeb {_fbdbc :=make (map[_cee .PdfObject ]int64 );for _fgfbd ,_fagfe :=range _gabfc ._ccaed {if _aaeffa ,_bgcga :=_fbdcgb [_fgfbd ];
_bgcga {_fbdbc [_aaeffa ]=_fagfe ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gabfc ._ccaed =_fbdbc ;};};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_aabg :=&PdfFieldSignature {};_aabg .PdfField =NewPdfField ();_aabg .PdfField .SetContext (_aabg );_aabg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_aabg .PdfAnnotationWidget .SetContext (_aabg );
_aabg .PdfAnnotationWidget ._eddc =_aabg .PdfField ._ccbb ;_aabg .T =_cee .MakeString ("");_aabg .F =_cee .MakeInteger (132);_aabg .V =signature ;return _aabg ;};

// AllFields returns a flattened list of all fields in the form.
func (_dfab *PdfAcroForm )AllFields ()[]*PdfField {if _dfab ==nil {return nil ;};var _bgee []*PdfField ;if _dfab .Fields !=nil {for _ ,_gffdfg :=range *_dfab .Fields {_bgee =append (_bgee ,_adfcc (_gffdfg )...);};};return _bgee ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_efddf *PdfPageResources )GetFontByName (keyName _cee .PdfObjectName )(_cee .PdfObject ,bool ){if _efddf .Font ==nil {return nil ,false ;};_deede ,_decd :=_cee .TraceToDirectObject (_efddf .Font ).(*_cee .PdfObjectDictionary );if !_decd {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cee .TraceToDirectObject (_efddf .Font ));
return nil ,false ;};if _eebbb :=_deede .Get (keyName );_eebbb !=nil {return _eebbb ,true ;};return nil ,false ;};

// AddMCIDChild adds a child MCID object.
func (_ffaac *KDict )AddMCIDChild (mcid int ){_ffaac ._affgf =append (_ffaac ._affgf ,&KValue {_dfcf :&mcid });};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bec *PdfAnnotationWidget )Field ()*PdfField {return _bec ._dec };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fbgdg *PdfOutline )ToPdfObject ()_cee .PdfObject {_fabfb :=_fbgdg ._bbda ;_fbcfg :=_fabfb .PdfObject .(*_cee .PdfObjectDictionary );_fbcfg .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fbgdg .First !=nil {_fbcfg .Set ("\u0046\u0069\u0072s\u0074",_fbgdg .First .ToPdfObject ());
};if _fbgdg .Last !=nil {_fbcfg .Set ("\u004c\u0061\u0073\u0074",_fbgdg .Last .GetContext ().GetContainingPdfObject ());};if _fbgdg .Parent !=nil {_fbcfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgdg .Parent .GetContext ().GetContainingPdfObject ());
};if _fbgdg .Count !=nil {_fbcfg .Set ("\u0043\u006f\u0075n\u0074",_cee .MakeInteger (*_fbgdg .Count ));};return _fabfb ;};func (_eacc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bgbg *_cee .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fgge :=PdfAnnotationFileAttachment {};
_caea ,_eff :=_eacc .newPdfAnnotationMarkupFromDict (_bgbg );if _eff !=nil {return nil ,_eff ;};_fgge .PdfAnnotationMarkup =_caea ;_fgge .FS =_bgbg .Get ("\u0046\u0053");_fgge .Name =_bgbg .Get ("\u004e\u0061\u006d\u0065");return &_fgge ,nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_aeba *PdfColorspaceICCBased )GetContainingPdfObject ()_cee .PdfObject {return _aeba ._gcdbe };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cee .PdfObject ;NewWindow _cee .PdfObject ;T _cee .PdfObject ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_bacbd *PdfReader )GetEncryptionMethod ()string {_gegaf :=_bacbd ._ffdgf .GetCrypter ();return _gegaf .String ();};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_cacgfg PdfOutputIntentType )String ()string {switch _cacgfg {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func _cgcdbe ()string {_dggagg .Lock ();
defer _dggagg .Unlock ();if len (_dgbgaa )> 0{return _dgbgaa ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToPdfObject converts the font to a PDF representation.
func (_dded *pdfFontType0 )ToPdfObject ()_cee .PdfObject {if _dded ._eddba ==nil {_dded ._eddba =&_cee .PdfIndirectObject {};};_gded :=_dded .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dded ._eddba .PdfObject =_gded ;if _dded .Encoding !=nil {_gded .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dded .Encoding );
}else if _dded ._daac !=nil {_gded .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dded ._daac .ToPdfObject ());};if _dded .DescendantFont !=nil {_gded .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cee .MakeArray (_dded .DescendantFont .ToPdfObject ()));
};return _dded ._eddba ;};var (ErrRequiredAttributeMissing =_cdf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dagd =_cdf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_cdf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_cdf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_dg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cee .ErrNotSupported );
ErrType1CFontNotSupported =_dg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cee .ErrNotSupported );
ErrType3FontNotSupported =_dg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cee .ErrNotSupported );
ErrTTCmapNotSupported =_dg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cee .ErrNotSupported );
ErrSignNotEnoughSpace =_dg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_adbg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dbfe :=_adbg ._ebcad ;
_dbfe !=nil {return _dbfe ;};return _adbg ._aaec ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cee .PdfObjectInteger ;BitsPerComponent *_cee .PdfObjectInteger ;BitsPerFlag *_cee .PdfObjectInteger ;Decode *_cee .PdfObjectArray ;Function []PdfFunction ;};func _agfga (_ecada _fc .ReadSeeker ,_aefggc *ReaderOpts ,_bbaa bool ,_cgbd string )(*PdfReader ,error ){if _aefggc ==nil {_aefggc =NewReaderOpts ();
};_effgb :="";if _gabgg ,_ggefg :=_ecada .(*_fef .File );_ggefg {_effgb =_gabgg .Name ();};_dead :=*_aefggc ;_dcced :=&PdfReader {_cadbb :_ecada ,_efaec :map[_cee .PdfObject ]struct{}{},_fcgbe :_baaedg (),_dbfb :_aefggc .LazyLoad ,_cgegc :_aefggc .ComplianceMode ,_dddf :_bbaa ,_accf :&_dead ,_ddbge :_effgb };
_aceea ,_dbgda :=_dbdaag ("\u0072");if _dbgda !=nil {return nil ,_dbgda ;};_dbgda =_ade .Track (_aceea ,_cgbd ,_dcced ._ddbge );if _dbgda !=nil {return nil ,_dbgda ;};_dcced ._cdddg =_aceea ;var _gcdbc *_cee .PdfParser ;if !_dcced ._cgegc {_gcdbc ,_dbgda =_cee .NewParser (_ecada );
}else {_gcdbc ,_dbgda =_cee .NewCompliancePdfParser (_ecada );};if _dbgda !=nil {return nil ,_dbgda ;};_dcced ._ffdgf =_gcdbc ;_fgcb ,_dbgda :=_dcced .IsEncrypted ();if _dbgda !=nil {return nil ,_dbgda ;};if !_fgcb {_dbgda =_dcced .loadStructure ();if _dbgda !=nil {return nil ,_dbgda ;
};}else if _bbaa {_gfaee ,_egceb :=_dcced .Decrypt ([]byte (_aefggc .Password ));if _egceb !=nil {return nil ,_egceb ;};if !_gfaee {return nil ,_cdf .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_dcced ._gccce =make (map[*PdfReader ]*PdfReader );_dcced ._befca =make ([]*PdfReader ,_gcdbc .GetRevisionNumber ());return _dcced ,nil ;};func (_dgfb *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func (_acfe *pdfCIDFontType2 )baseFields ()*fontCommon {return &_acfe .fontCommon };
func (_ceeadf *PdfWriter )writeBytes (_bffee []byte ){if _ceeadf ._efdcg !=nil {return ;};_edaeb ,_abab :=_ceeadf ._cbeea .Write (_bffee );_ceeadf ._gfee +=int64 (_edaeb );_ceeadf ._efdcg =_abab ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_aegcb *IDTree )ToPdfObject ()_cee .PdfObject {_dgcac :=_cee .MakeDict ();if _aegcb .Names !=nil &&_aegcb .Names .Len ()> 0{_dgcac .Set ("\u004e\u0061\u006de\u0073",_aegcb .Names );_dgcac .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_aegcb .Limits );
};if len (_aegcb .Kids )> 0{_ccfe :=_cee .MakeArray ();for _ ,_efecb :=range _aegcb .Kids {_ccfe .Append (_efecb .ToPdfObject ());};_egbaf :=_cee .MakeDict ();_egbaf .Set ("\u004b\u0069\u0064\u0073",_ccfe );_dgcac .Set ("\u004b\u0069\u0064\u0073",_egbaf );
};return _dgcac ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cbcab *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cdf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cee .PdfObject ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aegb *PdfReader )GetNameDictionary ()(_cee .PdfObject ,error ){_gbadb :=_cee .ResolveReference (_aegb ._cacfe .Get ("\u004e\u0061\u006de\u0073"));if _gbadb ==nil {return nil ,nil ;};if !_aegb ._dbfb {_gcad :=_aegb .traverseObjectData (_gbadb );if _gcad !=nil {return nil ,_gcad ;
};};return _gbadb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dacga *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faag ,_fbg :=_cee .GetNumbersAsFloat (objects );
if _fbg !=nil {return nil ,_fbg ;};return _dacga .ColorFromFloats (_faag );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bead *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efbd :=vals [0];if _efbd < 0.0||_efbd > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_efbd );
return nil ,ErrColorOutOfRange ;};_bgeg :=NewPdfColorCalGray (_efbd );return _bgeg ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_befef *PdfPage )AddFont (name _cee .PdfObjectName ,font _cee .PdfObject )error {if _befef .Resources ==nil {_befef .Resources =NewPdfPageResources ();};if _befef .Resources .Font ==nil {_befef .Resources .Font =_cee .MakeDict ();};_edga ,_bfaab :=_cee .TraceToDirectObject (_befef .Resources .Font ).(*_cee .PdfObjectDictionary );
if !_bfaab {_fca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cee .TraceToDirectObject (_befef .Resources .Font ));
return _cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edga .Set (name ,font );return nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_gcagb *Names )ToPdfObject ()_cee .PdfObject {_egedd :=_gcagb ._fggag ;_eabcb ,_cfcd :=_egedd .PdfObject .(*_cee .PdfObjectDictionary );if !_cfcd {_fca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _egedd ;};if _gcagb .EmbeddedFiles !=nil {_eabcb .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_cee .MakeIndirectObject (_gcagb .EmbeddedFiles ));};return _egedd ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _cee .PdfObject )(*PdfOutputIntent ,error ){_cbffd :=&PdfOutputIntent {};if _edddg :=_cbffd .ParsePdfObject (object );_edddg !=nil {return nil ,_edddg ;};return _cbffd ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_badbg *PdfPageResources )SetXObjectImageByName (keyName _cee .PdfObjectName ,ximg *XObjectImage )error {_dcgdgb :=ximg .ToPdfObject ().(*_cee .PdfObjectStream );_bafba :=_badbg .SetXObjectByName (keyName ,_dcgdgb );return _bafba ;};func (_cafga *DSS )generateHashMap (_bfed []*_cee .PdfObjectStream )(map[string ]*_cee .PdfObjectStream ,error ){_eacgd :=map[string ]*_cee .PdfObjectStream {};
for _ ,_ceacg :=range _bfed {_fdgg ,_ffgfg :=_cee .DecodeStream (_ceacg );if _ffgfg !=nil {return nil ,_ffgfg ;};_acef ,_ffgfg :=_cefaf (_fdgg );if _ffgfg !=nil {return nil ,_ffgfg ;};_eacgd [string (_acef )]=_ceacg ;};return _eacgd ,nil ;};func _deeb (_aaebb []*_cee .PdfObjectStream )*_cee .PdfObjectArray {if len (_aaebb )==0{return nil ;
};_afced :=make ([]_cee .PdfObject ,0,len (_aaebb ));for _ ,_afagc :=range _aaebb {_afced =append (_afced ,_afagc );};return _cee .MakeArray (_afced ...);};func (_gdfcg *PdfWriter )writeString (_edddb string ){if _gdfcg ._efdcg !=nil {return ;};_fggbg ,_dcfag :=_gdfcg ._cbeea .WriteString (_edddb );
_gdfcg ._gfee +=int64 (_fggbg );_gdfcg ._efdcg =_dcfag ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_afa :=NewPdfAction ();_cae :=&PdfActionMovie {};_cae .PdfAction =_afa ;_afa .SetContext (_cae );return _cae ;};func (_ffcdf *PdfReader )lookupPageByObject (_fcbbd _cee .PdfObject )(*PdfPage ,error ){return nil ,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_cfgc *PdfColorDeviceGray )GetNumComponents ()int {return 1};var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_accd *pdfCIDFontType0 )baseFields ()*fontCommon {return &_accd .fontCommon };

// String returns a string that describes `base`.
func (_eabc fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_eabc .coreString ());};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gcb :=NewPdfAction ();_dda :=&PdfActionImportData {};_dda .PdfAction =_gcb ;_gcb .SetContext (_dda );return _dda ;};

// IsSimple returns true if `font` is a simple font.
func (_dfdbd *PdfFont )IsSimple ()bool {_ ,_fgbbb :=_dfdbd ._bggcf .(*pdfFontSimple );return _fgbbb };func _acecd (_fffed *_ca .ImageBase )(_cebbg Image ){_cebbg .Width =int64 (_fffed .Width );_cebbg .Height =int64 (_fffed .Height );_cebbg .BitsPerComponent =int64 (_fffed .BitsPerComponent );
_cebbg .ColorComponents =_fffed .ColorComponents ;_cebbg .Data =_fffed .Data ;_cebbg ._cabgb =_fffed .Decode ;_cebbg ._cbfg =_fffed .Alpha ;return _cebbg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gegdd *Permissions )GetContainingPdfObject ()_cee .PdfObject {return _gegdd ._bgaae };

// ViewClip returns the value of the viewClip.
func (_gdadf *ViewerPreferences )ViewClip ()PageBoundary {return _gdadf ._baegf };

// AddAnnotation appends `annot` to the list of page annotations.
func (_fegfd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fegfd ._eeaba ==nil {_fegfd .GetAnnotations ();};_fegfd ._eeaba =append (_fegfd ._eeaba ,annot );};func _dabe (_gdgcc _cee .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fdgb :=&PdfPageResourcesColorspaces {};
if _dfada ,_gbeb :=_gdgcc .(*_cee .PdfIndirectObject );_gbeb {_fdgb ._cdgce =_dfada ;_gdgcc =_dfada .PdfObject ;};_cabac ,_cdga :=_cee .GetDict (_gdgcc );if !_cdga {return nil ,_cdf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_fdgb .Names =[]string {};_fdgb .Colorspaces =map[string ]PdfColorspace {};for _ ,_ccef :=range _cabac .Keys (){_cbaa :=_cabac .Get (_ccef );_fdgb .Names =append (_fdgb .Names ,string (_ccef ));_cagab ,_abfafd :=NewPdfColorspaceFromPdfObject (_cbaa );
if _abfafd !=nil {return nil ,_abfafd ;};_fdgb .Colorspaces [string (_ccef )]=_cagab ;};return _fdgb ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gfcg *_cee .PdfIndirectObject ;};

// WriteString outputs the object as it is to be written to file.
func (_egdba *pdfSignDictionary )WriteString ()string {_egdba ._dfadcd =0;_egdba ._geecb =0;_egdba ._beddd =0;_egdba ._cfedc =0;_cgfg :=_cd .NewBuffer (nil );_cgfg .WriteString ("\u003c\u003c");for _ ,_bafaeb :=range _egdba .Keys (){_cdaggcc :=_egdba .Get (_bafaeb );
switch _bafaeb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cgfg .WriteString (_bafaeb .WriteString ());_cgfg .WriteString ("\u0020");_egdba ._beddd =_cgfg .Len ();_cgfg .WriteString (_cdaggcc .WriteString ());_cgfg .WriteString ("\u0020");_egdba ._cfedc =_cgfg .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cgfg .WriteString (_bafaeb .WriteString ());_cgfg .WriteString ("\u0020");_egdba ._dfadcd =_cgfg .Len ();_cgfg .WriteString (_cdaggcc .WriteString ());_cgfg .WriteString ("\u0020");_egdba ._geecb =_cgfg .Len ()-1;
default:_cgfg .WriteString (_bafaeb .WriteString ());_cgfg .WriteString ("\u0020");_cgfg .WriteString (_cdaggcc .WriteString ());};};_cgfg .WriteString ("\u003e\u003e");return _cgfg .String ();};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dfacd *PdfPageResources )GetPatternByName (keyName _cee .PdfObjectName )(*PdfPattern ,bool ){if _dfacd .Pattern ==nil {return nil ,false ;};_ffbg ,_cdcgg :=_cee .TraceToDirectObject (_dfacd .Pattern ).(*_cee .PdfObjectDictionary );if !_cdcgg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfacd .Pattern );
return nil ,false ;};if _ggcff :=_ffbg .Get (keyName );_ggcff !=nil {_gdffa ,_dfaag :=_abbe (_ggcff );if _dfaag !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dfaag );
return nil ,false ;};return _gdffa ,true ;};return nil ,false ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cee .PdfObject )(_cee .PdfObjectName ,error ){var _gccd *_cee .PdfObjectName ;var _eade *_cee .PdfObjectArray ;if _facga ,_aaaa :=obj .(*_cee .PdfIndirectObject );_aaaa {if _ecec ,_dbgf :=_facga .PdfObject .(*_cee .PdfObjectArray );
_dbgf {_eade =_ecec ;}else if _fcbg ,_fefd :=_facga .PdfObject .(*_cee .PdfObjectName );_fefd {_gccd =_fcbg ;};}else if _ddce ,_agee :=obj .(*_cee .PdfObjectArray );_agee {_eade =_ddce ;}else if _bcgfb ,_bbac :=obj .(*_cee .PdfObjectName );_bbac {_gccd =_bcgfb ;
};if _gccd !=nil {switch *_gccd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gccd ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gccd ,nil ;
};};if _eade !=nil &&_eade .Len ()> 0{if _bgaf ,_babb :=_eade .Get (0).(*_cee .PdfObjectName );_babb {switch *_bgaf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _eade .Len ()==1{return *_bgaf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bgaf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bgaf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bgaf ,nil ;};};};return "",nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bbgb *PdfFont )ToPdfObject ()_cee .PdfObject {if _bbgb ._bggcf ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cee .MakeNull ();
};return _bbgb ._bggcf .ToPdfObject ();};func _ebdfb (_dggeg _cee .PdfObject ,_afdg _cee .PdfObject ,_gdebfb map[_cee .PdfObject ][]_cee .PdfObject ,_daeee map[string ]_cee .PdfObject ,_fdffe *[]_cee .PdfObject ){var _gcdde *_cee .PdfIndirectObject ;if _gdacg ,_eeedf :=_cee .GetIndirect (_dggeg );
_eeedf {_gcdde =_gdacg ;_dggeg =_gdacg .PdfObject ;};switch _cgfde :=_dggeg .(type ){case *_cee .PdfObjectDictionary :if _cgfde .Get ("\u0053")==nil {return ;};_cgfde .Set ("\u0050",_afdg );if _dagab :=_cgfde .Get ("\u0050\u0067");_dagab !=nil {if _eccgab ,_fgcd :=_cee .GetIndirect (_dagab );
_fgcd &&_eccgab !=nil &&_eccgab .PdfObject !=nil {_gdebfb [_dagab ]=append (_gdebfb [_dagab ],_gcdde );};};if _caccbb :=_cgfde .Get ("\u0053");_caccbb !=nil {if _fegcf ,_fceab :=_cee .GetNameVal (_caccbb );_fceab {if _fegcf ==StructureTypeLink {if _acaa :=_cgfde .Get ("\u004b");
_acaa !=nil {if _dgaee ,_daebb :=_cee .GetArray (_acaa );_daebb &&_dgaee .Len ()==2{_ecgba :=false ;_adgbb :=false ;for _ ,_feffe :=range _dgaee .Elements (){if _cdeadg ,_fccdd :=_cee .GetDict (_feffe );_fccdd {if _cbfgg ,_dcbge :=_cee .GetName (_cdeadg .Get ("\u0054\u0079\u0070\u0065"));
_dcbge &&_cbfgg .String ()=="\u004f\u0042\u004a\u0052"{_adgbb =true ;};}else if _ ,_fgcdd :=_cee .GetInt (_feffe );_fgcdd {_ecgba =true ;};};if _ecgba &&_adgbb {*_fdffe =append (*_fdffe ,_gcdde );};}else if _bebgb ,_fgffa :=_cee .GetDict (_acaa );_fgffa {if _fdfga ,_ffaca :=_cee .GetName (_bebgb .Get ("\u0054\u0079\u0070\u0065"));
_ffaca &&_fdfga .String ()=="\u004f\u0042\u004a\u0052"{*_fdffe =append (*_fdffe ,_gcdde );};};};};};};if _cffccb :=_cgfde .Get ("\u0049\u0044");_cffccb !=nil {_daeee [_cffccb .String ()]=_dggeg ;};if _abdd :=_cgfde .Get ("\u004b");_abdd !=nil {_ebdfb (_abdd ,_gcdde ,_gdebfb ,_daeee ,_fdffe );
};case *_cee .PdfObjectArray :for _ ,_fccbf :=range _cgfde .Elements (){_ebdfb (_fccbf ,_afdg ,_gdebfb ,_daeee ,_fdffe );};default:};};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ececf *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ececf .AlternateSpace ==nil {return nil ,_cdf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ececf .AlternateSpace .ColorToRGB (color );};func _afaaf (_bgag _cee .PdfObject )*Names {_gffc :=_fddc ();_dcgda :=_cee .TraceToDirectObject (_bgag ).(*_cee .PdfObjectDictionary );if _fgaea :=_dcgda .Get ("\u0044\u0065\u0073t\u0073");_fgaea !=nil {_gffc .Dests =_cee .TraceToDirectObject (_fgaea ).(*_cee .PdfObjectDictionary );
};if _gffag :=_dcgda .Get ("\u0041\u0050");_gffag !=nil {_gffc .AP =_cee .TraceToDirectObject (_gffag ).(*_cee .PdfObjectDictionary );};if _ebage :=_dcgda .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_ebage !=nil {_gffc .JavaScript =_cee .TraceToDirectObject (_ebage ).(*_cee .PdfObjectDictionary );
};if _fcgd :=_dcgda .Get ("\u0050\u0061\u0067e\u0073");_fcgd !=nil {_gffc .Pages =_cee .TraceToDirectObject (_fcgd ).(*_cee .PdfObjectDictionary );};if _cfddc :=_dcgda .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_cfddc !=nil {_gffc .Templates =_cee .TraceToDirectObject (_cfddc ).(*_cee .PdfObjectDictionary );
};if _fbeaa :=_dcgda .Get ("\u0049\u0044\u0053");_fbeaa !=nil {_gffc .IDS =_cee .TraceToDirectObject (_fbeaa ).(*_cee .PdfObjectDictionary );};if _ddfaf :=_dcgda .Get ("\u0055\u0052\u004c\u0053");_ddfaf !=nil {_gffc .URLS =_cee .TraceToDirectObject (_ddfaf ).(*_cee .PdfObjectDictionary );
};if _deca :=_dcgda .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_deca !=nil {_gffc .EmbeddedFiles =_cee .TraceToDirectObject (_deca ).(*_cee .PdfObjectDictionary );};if _begcc :=_dcgda .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_begcc !=nil {_gffc .AlternatePresentations =_cee .TraceToDirectObject (_begcc ).(*_cee .PdfObjectDictionary );};if _cgccd :=_dcgda .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_cgccd !=nil {_gffc .Renditions =_cee .TraceToDirectObject (_cgccd ).(*_cee .PdfObjectDictionary );
};return _gffc ;};func _efcfd (_gffeg []byte )bool {if len (_gffeg )< 4{return true ;};for _fbfbe :=range _gffeg [:4]{_befcb :=rune (_fbfbe );if !_a .Is (_a .ASCII_Hex_Digit ,_befcb )&&!_a .IsSpace (_befcb ){return true ;};};return false ;};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ebfbd *PdfPageResources )GenerateXObjectName ()_cee .PdfObjectName {_fecdc :=1;for {_acac :=_cee .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fecdc ));if !_ebfbd .HasXObjectByName (*_acac ){return *_acac ;};_fecdc ++;};};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _cee .PdfObjectName ;};

// GetNumComponents returns the number of color components.
func (_egfa *PdfColorspaceICCBased )GetNumComponents ()int {return _egfa .N };func (_ebcb *PdfReader )loadPerms ()(*Permissions ,error ){if _fcfe :=_ebcb ._cacfe .Get ("\u0050\u0065\u0072m\u0073");_fcfe !=nil {if _ffcf ,_fffc :=_cee .GetDict (_fcfe );_fffc {_dagde :=_ffcf .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _dagde ==nil {return nil ,nil ;};if _bafce ,_gddcc :=_cee .GetIndirect (_dagde );_gddcc {_cccff ,_cacc :=_ebcb .newPdfSignatureFromIndirect (_bafce );if _cacc !=nil {return nil ,_cacc ;};return NewPermissions (_cccff ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};func _bacd (_fgfe *_cee .PdfObjectDictionary )bool {for _ ,_ffcc :=range _fgfe .Keys (){if _ ,_ggda :=_cgfc [_ffcc .String ()];
_ggda {return true ;};};return false ;};func _dcfgc (_bfdfb string )(map[_dae .CharCode ]_dae .GlyphName ,error ){_bfdd :=_ad .Split (_bfdfb ,"\u000a");_aacg :=make (map[_dae .CharCode ]_dae .GlyphName );for _ ,_cagf :=range _bfdd {_gceegc :=_fcbea .FindStringSubmatch (_cagf );
if _gceegc ==nil {continue ;};_dbbec ,_ddbfeb :=_gceegc [1],_gceegc [2];_agfde ,_cdcc :=_fa .Atoi (_dbbec );if _cdcc !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cagf );
return nil ,_cee .ErrTypeError ;};_aacg [_dae .CharCode (_agfde )]=_dae .GlyphName (_ddbfeb );};_fca .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_aacg );
return _aacg ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_ecdeb *modelManager )GetPrimitiveFromModel (model PdfModel )_cee .PdfObject {_cccac ,_ecggbd :=_ecdeb ._gfdc [model ];if !_ecggbd {return nil ;};return _cccac ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cee .PdfObjectStream ;Data []byte ;_gagc *_cee .PdfIndirectObject ;_gcdbe *_cee .PdfObjectStream ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_abcd *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcffb ,_bada :=_cee .GetNumbersAsFloat (objects );
if _bada !=nil {return nil ,_bada ;};return _abcd .ColorFromFloats (_gcffb );};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_edbde *OutlineItem )Insert (index uint ,item *OutlineItem ){_gegge :=uint (len (_edbde .Entries ));if index > _gegge {index =_gegge ;};_edbde .Entries =append (_edbde .Entries [:index ],append ([]*OutlineItem {item },_edbde .Entries [index :]...)...);
};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_aedf *DSS )GetContainingPdfObject ()_cee .PdfObject {return _aedf ._bdcab };

// Direction represents the predominant reading order for text.
type Direction string ;

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dgge :=NewPdfAnnotation ();_ccbc :=&PdfAnnotationPolygon {};_ccbc .PdfAnnotation =_dgge ;_ccbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgge .SetContext (_ccbc );return _ccbc ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_caec *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cee .PdfObject ;GetContainingPdfObject ()_cee .PdfObject ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_beffbd *KValue )ToPdfObject ()_cee .PdfObject {if _beffbd ._aedde !=nil {return _cee .MakeIndirectObject (_beffbd ._aedde .ToPdfObject ());};if _beffbd ._abcfb !=nil {return _beffbd ._abcfb ;};if _beffbd ._dfcf !=nil {return _cee .MakeInteger (int64 (*_beffbd ._dfcf ));
};return nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gdgd *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bcfd :=range pages {_bcfd =_bcfd .Duplicate ();_adfebd (_bcfd );_gdgd ._afca =append (_gdgd ._afca ,_bcfd );};};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_dcgef :=&PdfPageResourcesColorspaces {};_dcgef .Names =[]string {};_dcgef .Colorspaces =map[string ]PdfColorspace {};_dcgef ._cdgce =&_cee .PdfIndirectObject {};return _dcgef ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func _ggdeb (_edcec *_cee .PdfObjectDictionary )(*PdfShadingType6 ,error ){_dbaga :=PdfShadingType6 {};_gcddg :=_edcec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gcddg ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggeg ,_ddbga :=_gcddg .(*_cee .PdfObjectInteger );if !_ddbga {_fca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcddg );
return nil ,_cee .ErrTypeError ;};_dbaga .BitsPerCoordinate =_ggeg ;_gcddg =_edcec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gcddg ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ggeg ,_ddbga =_gcddg .(*_cee .PdfObjectInteger );if !_ddbga {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gcddg );
return nil ,_cee .ErrTypeError ;};_dbaga .BitsPerComponent =_ggeg ;_gcddg =_edcec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gcddg ==nil {_fca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggeg ,_ddbga =_gcddg .(*_cee .PdfObjectInteger );if !_ddbga {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gcddg );
return nil ,_cee .ErrTypeError ;};_dbaga .BitsPerComponent =_ggeg ;_gcddg =_edcec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gcddg ==nil {_fca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebdabf ,_ddbga :=_gcddg .(*_cee .PdfObjectArray );if !_ddbga {_fca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcddg );
return nil ,_cee .ErrTypeError ;};_dbaga .Decode =_ebdabf ;if _cegfd :=_edcec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cegfd !=nil {_dbaga .Function =[]PdfFunction {};if _ccac ,_ddbdb :=_cegfd .(*_cee .PdfObjectArray );_ddbdb {for _ ,_degfgc :=range _ccac .Elements (){_cgafad ,_egbbd :=_eeaec (_degfgc );
if _egbbd !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egbbd );return nil ,_egbbd ;};_dbaga .Function =append (_dbaga .Function ,_cgafad );
};}else {_bffab ,_gfdb :=_eeaec (_cegfd );if _gfdb !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfdb );return nil ,_gfdb ;
};_dbaga .Function =append (_dbaga .Function ,_bffab );};};return &_dbaga ,nil ;};func (_ccbaa *PdfWriter )addObject (_dceea _cee .PdfObject )bool {_gdbfd :=_ccbaa .hasObject (_dceea );if !_gdbfd {_cfged :=_cee .ResolveReferencesDeep (_dceea ,_ccbaa ._befcg );
if _cfged !=nil {_fca .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cfged );};_ccbaa ._gccff =append (_ccbaa ._gccff ,_dceea );_ccbaa ._dgbgbb [_dceea ]=struct{}{};return true ;};return false ;
};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fcecf *Outline )Insert (index uint ,item *OutlineItem ){_fbeg :=uint (len (_fcecf .Entries ));if index > _fbeg {index =_fbeg ;};_fcecf .Entries =append (_fcecf .Entries [:index ],append ([]*OutlineItem {item },_fcecf .Entries [index :]...)...);};


// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cee .PdfIndirectObject ;SV *_cee .PdfIndirectObject ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_edgff *PdfAcroForm )ToPdfObject ()_cee .PdfObject {_gdgda :=_edgff ._cebbd ;_fadcdf :=_gdgda .PdfObject .(*_cee .PdfObjectDictionary );if _edgff .Fields !=nil {_badc :=_cee .PdfObjectArray {};for _ ,_egeac :=range *_edgff .Fields {_bedge :=_egeac .GetContext ();
if _bedge !=nil {_badc .Append (_bedge .ToPdfObject ());}else {_badc .Append (_egeac .ToPdfObject ());};};_fadcdf .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_badc );};if _edgff .NeedAppearances !=nil {_fadcdf .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_edgff .NeedAppearances );
}else {if _bgece :=_fadcdf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bgece !=nil {_fadcdf .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _edgff .SigFlags !=nil {_fadcdf .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_edgff .SigFlags );
};if _edgff .CO !=nil {_fadcdf .Set ("\u0043\u004f",_edgff .CO );};if _edgff .DR !=nil {_fadcdf .Set ("\u0044\u0052",_edgff .DR .ToPdfObject ());};if _edgff .DA !=nil {_fadcdf .Set ("\u0044\u0041",_edgff .DA );};if _edgff .Q !=nil {_fadcdf .Set ("\u0051",_edgff .Q );
};if _edgff .XFA !=nil {_fadcdf .Set ("\u0058\u0046\u0041",_edgff .XFA );};if _edgff .ADBEEchoSign !=nil {_fadcdf .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_edgff .ADBEEchoSign );};return _gdgda ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cddfe *PdfPageResources )GetContainingPdfObject ()_cee .PdfObject {return _cddfe ._agdcc };

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cee .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// GetContainingPdfObject implements interface PdfModel.
func (_edeb *PdfFilespec )GetContainingPdfObject ()_cee .PdfObject {return _edeb ._gbfeg };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_fbbab :=&PdfOutlineItem {_bfcbc :_cee .MakeIndirectObject (_cee .MakeDict ())};_fbbab ._afcbg =_fbbab ;return _fbbab ;};func (_eaebf *PdfFilespec )getDict ()*_cee .PdfObjectDictionary {if _bgad ,_gceed :=_eaebf ._gbfeg .(*_cee .PdfIndirectObject );
_gceed {_agbec ,_bdeeb :=_bgad .PdfObject .(*_cee .PdfObjectDictionary );if !_bdeeb {return nil ;};return _agbec ;}else if _gdega ,_daabb :=_eaebf ._gbfeg .(*_cee .PdfObjectDictionary );_daabb {return _gdega ;}else {_fca .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_eaebf ._gbfeg );
return nil ;};};func (_bafcb *pdfFontSimple )getFontEncoding ()(_dfef string ,_bgddc map[_dae .CharCode ]_dae .GlyphName ,_gbab error ){_dfef ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _babge ,_bgdcd :=_ggfcf [_bafcb ._fbcf ];
_bgdcd {_dfef =_babge ;}else if _bafcb .fontFlags ()&_cddf !=0{for _fedef ,_bbcfg :=range _ggfcf {if _ad .Contains (_bafcb ._fbcf ,_fedef ){_dfef =_bbcfg ;break ;};};};if _bafcb .Encoding ==nil {return _dfef ,nil ,nil ;};switch _dccbg :=_bafcb .Encoding .(type ){case *_cee .PdfObjectName :return string (*_dccbg ),nil ,nil ;
case *_cee .PdfObjectDictionary :_eaeade ,_ecbf :=_cee .GetName (_dccbg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ecbf {_dfef =_eaeade .String ();};if _cabga :=_dccbg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_cabga !=nil {_acdg ,_begg :=_cee .GetArray (_cabga );if !_begg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dccbg ,_dccbg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cee .ErrTypeError ;};_bgddc ,_gbab =_dae .FromFontDifferences (_acdg );};return _dfef ,_bgddc ,_gbab ;default:_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bafcb .Encoding ,_bafcb .Encoding );
return "",nil ,_cee .ErrTypeError ;};};

// SetPageNumber sets the page number.
func (_ggdfd *KDict )SetPageNumber (pageNumber int64 ){_ggdfd ._efbbe =pageNumber };func (_ceaf *PdfReader )newPdfAnnotationTrapNetFromDict (_cdae *_cee .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fefe :=PdfAnnotationTrapNet {};return &_fefe ,nil ;
};func _gdcff (_bbag []byte )(_efeb ,_dadcce string ,_fgga error ){_fca .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bbag ));_afecb :=_adcc .FindIndex (_bbag );if _afecb ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cee .ErrTypeError ;};_gdea :=_afecb [1];_eecab :=_ad .Index (string (_bbag [_gdea :]),_cgbec );if _eecab < 0{_efeb =string (_bbag [_gdea :]);return _efeb ,"",nil ;};_bacbb :=_gdea +_eecab ;_efeb =string (_bbag [_gdea :_bacbb ]);_dgbca :=_bacbb ;
_eecab =_ad .Index (string (_bbag [_dgbca :]),_edecc );if _eecab < 0{_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgga );
return "","",_cee .ErrTypeError ;};_agbdg :=_dgbca +_eecab ;_dadcce =string (_bbag [_dgbca :_agbdg ]);return _efeb ,_dadcce ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cee .PdfObject )(*PdfFont ,error ){return _dfbe (fontObj ,true )};

// WriteString outputs the object as it is to be written to file.
func (_aeead *PdfTransformParamsDocMDP )WriteString ()string {return _aeead .ToPdfObject ().WriteString ();};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bggge :=appender .Reader .DSS ;if _bggge ==nil {_bggge =NewDSS ();};if _ccaec :=_bggge .GenerateHashMaps ();_ccaec !=nil {return nil ,_ccaec ;};return &LTV {CertClient :_ae .NewCertClient (),OCSPClient :_ae .NewOCSPClient (),CRLClient :_ae .NewCRLClient (),SkipExisting :true ,_gdggc :appender ,_fcbgb :_bggge },nil ;
};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cee .PdfObject ;};func _ggfdcd ()string {_dbfac :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _caced _cd .Buffer ;for _beaaf :=0;_beaaf < 6;_beaaf ++{_caced .WriteRune (rune (_dbfac [_bf .Intn (len (_dbfac ))]));};return _caced .String ();};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _cee .PdfObject )(*EmbeddedFile ,error ){_gcaac :=_cee .TraceToDirectObject (obj );_gcac ,_adfc :=_gcaac .(*_cee .PdfObjectDictionary );if !_adfc {return nil ,_cdf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fbeba :=_cee .TraceToDirectObject (_gcac .Get ("\u0046"));if _fbeba ==nil {return nil ,_cdf .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_beea ,_adfc :=_fbeba .(*_cee .PdfObjectStream );
if !_adfc {return nil ,_cdf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_egcgg :=_beea .PdfObjectDictionary ;_fddd :=_egcgg .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _fddd ==nil {return nil ,_cdf .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_gcefb ,_adfc :=_fddd .(*_cee .PdfObjectDictionary );if !_adfc {return nil ,_cdf .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_defc :="";_cbff :=_gcefb .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _cbff !=nil {_defc =_cbff .(*_cee .PdfObjectString ).Str ();};_aaffg ,_ddcg :=_cee .DecodeStream (_beea );if _ddcg !=nil {return nil ,_ddcg ;};_eaeeb :=&EmbeddedFile {Content :_aaffg ,Hash :_defc };return _eaeeb ,nil ;};func (_dcfgca *PdfWriter )setWriter (_fgfga _fc .Writer ){_dcfgca ._gfee =_dcfgca ._cdcea ;
_dcfgca ._cbeea =_g .NewWriter (_fgfga );};func (_ada *PdfReader )newPdfActionGotoRFromDict (_cbdc *_cee .PdfObjectDictionary )(*PdfActionGoToR ,error ){_geb ,_cafg :=_daf (_cbdc .Get ("\u0046"));if _cafg !=nil {return nil ,_cafg ;};return &PdfActionGoToR {D :_cbdc .Get ("\u0044"),NewWindow :_cbdc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_geb },nil ;
};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bff :=NewPdfAnnotation ();_dbb :=&PdfAnnotationProjection {};_dbb .PdfAnnotation =_bff ;_dbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bff .SetContext (_dbb );return _dbb ;};func (_bddf *PdfReader )newPdfAnnotationScreenFromDict (_bafc *_cee .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ggeee :=PdfAnnotationScreen {};
_ggeee .T =_bafc .Get ("\u0054");_ggeee .MK =_bafc .Get ("\u004d\u004b");_ggeee .A =_bafc .Get ("\u0041");_ggeee .AA =_bafc .Get ("\u0041\u0041");return &_ggeee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcef *PdfAnnotationRedact )ToPdfObject ()_cee .PdfObject {_gcef .PdfAnnotation .ToPdfObject ();_cceg :=_gcef ._eddc ;_bagd :=_cceg .PdfObject .(*_cee .PdfObjectDictionary );_gcef .PdfAnnotationMarkup .appendToPdfDictionary (_bagd );_bagd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_bagd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcef .QuadPoints );_bagd .SetIfNotNil ("\u0049\u0043",_gcef .IC );_bagd .SetIfNotNil ("\u0052\u004f",_gcef .RO );_bagd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gcef .OverlayText );
_bagd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gcef .Repeat );_bagd .SetIfNotNil ("\u0044\u0041",_gcef .DA );_bagd .SetIfNotNil ("\u0051",_gcef .Q );return _cceg ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cee .PdfObject ;FontFamily _cee .PdfObject ;FontStretch _cee .PdfObject ;FontWeight _cee .PdfObject ;Flags _cee .PdfObject ;FontBBox _cee .PdfObject ;ItalicAngle _cee .PdfObject ;Ascent _cee .PdfObject ;Descent _cee .PdfObject ;
Leading _cee .PdfObject ;CapHeight _cee .PdfObject ;XHeight _cee .PdfObject ;StemV _cee .PdfObject ;StemH _cee .PdfObject ;AvgWidth _cee .PdfObject ;MaxWidth _cee .PdfObject ;MissingWidth _cee .PdfObject ;FontFile _cee .PdfObject ;FontFile2 _cee .PdfObject ;
FontFile3 _cee .PdfObject ;CharSet _cee .PdfObject ;_cadgge int ;_efacg float64 ;*fontFile ;_bcga *_ce .TtfType ;

// Additional entries for CIDFonts
Style _cee .PdfObject ;Lang _cee .PdfObject ;FD _cee .PdfObject ;CIDSet _cee .PdfObject ;_gbfec *_cee .PdfIndirectObject ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bddec *PdfPage )AppendContentStream (contentStr string )error {_fddff ,_ecgbe :=_bddec .GetContentStreams ();if _ecgbe !=nil {return _ecgbe ;};if len (_fddff )==0{_fddff =[]string {contentStr };return _bddec .SetContentStreams (_fddff ,_cee .NewFlateEncoder ());
};var _dcadg _cd .Buffer ;_dcadg .WriteString (_fddff [len (_fddff )-1]);_dcadg .WriteString ("\u000a");_dcadg .WriteString (contentStr );_fddff [len (_fddff )-1]=_dcadg .String ();return _bddec .SetContentStreams (_fddff ,_cee .NewFlateEncoder ());};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fb :=NewPdfAction ();_bed :=&PdfActionLaunch {};_bed .PdfAction =_fb ;_fb .SetContext (_bed );return _bed ;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_baea *ViewerPreferences )PickTrayByPDFSize ()bool {if _baea ._bdfed ==nil {return false ;};return *_baea ._bdfed ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fdfab *PdfRectangle )Normalize (){if _fdfab .Llx > _fdfab .Urx {_fdfab .Llx ,_fdfab .Urx =_fdfab .Urx ,_fdfab .Llx ;};if _fdfab .Lly > _fdfab .Ury {_fdfab .Lly ,_fdfab .Ury =_fdfab .Ury ,_fdfab .Lly ;};};

// GetStructRoot gets the StructTreeRoot object
func (_bbbbfg *PdfPage )GetStructTreeRoot ()(*_cee .PdfObject ,bool ){_gcdag ,_gfdf :=_bbbbfg ._acbbg .GetCatalogStructTreeRoot ();return &_gcdag ,_gfdf ;};

// ToPdfObject implements interface PdfModel.
func (_gfea *PdfAnnotationText )ToPdfObject ()_cee .PdfObject {_gfea .PdfAnnotation .ToPdfObject ();_geea :=_gfea ._eddc ;_dafcd :=_geea .PdfObject .(*_cee .PdfObjectDictionary );if _gfea .PdfAnnotationMarkup !=nil {_gfea .PdfAnnotationMarkup .appendToPdfDictionary (_dafcd );
};_dafcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0054\u0065\u0078\u0074"));_dafcd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gfea .Open );_dafcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gfea .Name );_dafcd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gfea .State );
_dafcd .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gfea .StateModel );return _geea ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bbfd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_agaa ,_gcagd :=color .(*PdfColorDeviceRGB );if !_gcagd {_fca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _agaa ,nil ;};

// L returns the value of the L component of the color.
func (_eddbc *PdfColorLab )L ()float64 {return _eddbc [0]};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_aeafd *PdfTilingPattern )ToPdfObject ()_cee .PdfObject {_aeafd .PdfPattern .ToPdfObject ();_aede :=_aeafd .getDict ();if _aeafd .PaintType !=nil {_aede .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_aeafd .PaintType );};if _aeafd .TilingType !=nil {_aede .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_aeafd .TilingType );
};if _aeafd .BBox !=nil {_aede .Set ("\u0042\u0042\u006f\u0078",_aeafd .BBox .ToPdfObject ());};if _aeafd .XStep !=nil {_aede .Set ("\u0058\u0053\u0074e\u0070",_aeafd .XStep );};if _aeafd .YStep !=nil {_aede .Set ("\u0059\u0053\u0074e\u0070",_aeafd .YStep );
};if _aeafd .Resources !=nil {_aede .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aeafd .Resources .ToPdfObject ());};if _aeafd .Matrix !=nil {_aede .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aeafd .Matrix );};return _aeafd ._bgabc ;};func _cfdb (_adgcd *_cee .PdfObjectDictionary ,_dadcc *fontCommon )(*pdfCIDFontType0 ,error ){if _dadcc ._ccdeg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dadcc );
return nil ,_cee .ErrRangeError ;};_fdab :=_aeafc (_dadcc );_fbae ,_aeea :=_cee .GetDict (_adgcd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aeea {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dadcc );
return nil ,ErrRequiredAttributeMissing ;};_fdab .CIDSystemInfo =_fbae ;_fdab .DW =_adgcd .Get ("\u0044\u0057");_fdab .W =_adgcd .Get ("\u0057");_fdab .DW2 =_adgcd .Get ("\u0044\u0057\u0032");_fdab .W2 =_adgcd .Get ("\u0057\u0032");_fdab ._bfecd =1000.0;
if _ffage ,_ecagc :=_cee .GetNumberAsFloat (_fdab .DW );_ecagc ==nil {_fdab ._bfecd =_ffage ;};_fcgbc ,_fcgc :=_fceag (_fdab .W );if _fcgc !=nil {return nil ,_fcgc ;};if _fcgbc ==nil {_fcgbc =map[_dae .CharCode ]float64 {};};_fdab ._gdde =_fcgbc ;return _fdab ,nil ;
};

// G returns the value of the green component of the color.
func (_egfda *PdfColorDeviceRGB )G ()float64 {return _egfda [1]};

// Val returns the value of the color.
func (_bggg *PdfColorCalGray )Val ()float64 {return float64 (*_bggg )};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_fdba *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bedb :=_ag .NewReader (img .getBase ());_dbfg :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aee :=_ag .NewWriter (_dbfg );
_bbbea :=_aaa .Pow (2,float64 (img .BitsPerComponent ))-1;_eddgd :=make ([]uint32 ,3);var (_fcaf uint32 ;ANorm ,X ,Y ,Z ,_dedc ,_gebcb ,_dadaa float64 ;_geeb error ;);for {_fcaf ,_geeb =_bedb .ReadSample ();if _geeb ==_fc .EOF {break ;}else if _geeb !=nil {return img ,_geeb ;
};ANorm =float64 (_fcaf )/_bbbea ;X =_fdba .WhitePoint [0]*_aaa .Pow (ANorm ,_fdba .Gamma );Y =_fdba .WhitePoint [1]*_aaa .Pow (ANorm ,_fdba .Gamma );Z =_fdba .WhitePoint [2]*_aaa .Pow (ANorm ,_fdba .Gamma );_dedc =3.240479*X +-1.537150*Y +-0.498535*Z ;
_gebcb =-0.969256*X +1.875992*Y +0.041556*Z ;_dadaa =0.055648*X +-0.204043*Y +1.057311*Z ;_dedc =_aaa .Min (_aaa .Max (_dedc ,0),1.0);_gebcb =_aaa .Min (_aaa .Max (_gebcb ,0),1.0);_dadaa =_aaa .Min (_aaa .Max (_dadaa ,0),1.0);_eddgd [0]=uint32 (_dedc *_bbbea );
_eddgd [1]=uint32 (_gebcb *_bbbea );_eddgd [2]=uint32 (_dadaa *_bbbea );if _geeb =_aee .WriteSamples (_eddgd );_geeb !=nil {return img ,_geeb ;};};return _acecd (&_dbfg ),nil ;};func (_befg Image )getBase ()_ca .ImageBase {return _ca .NewImageBase (int (_befg .Width ),int (_befg .Height ),int (_befg .BitsPerComponent ),_befg .ColorComponents ,_befg .Data ,_befg ._cbfg ,_befg ._cabgb );
};

// PartialName returns the partial name of the field.
func (_abeef *PdfField )PartialName ()string {_debgc :="";if _abeef .T !=nil {_debgc =_abeef .T .Decoded ();}else {_fca .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _debgc ;};

// String returns the name of the colorspace (DeviceN).
func (_ccafg *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// String returns a string representation of what flags are set.
func (_febf FieldFlag )String ()string {_dcab :="";if _febf ==FieldFlagClear {_dcab ="\u0043\u006c\u0065a\u0072";return _dcab ;};if _febf &FieldFlagReadOnly > 0{_dcab +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _febf &FieldFlagRequired > 0{_dcab +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _febf &FieldFlagNoExport > 0{_dcab +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _febf &FieldFlagNoToggleToOff > 0{_dcab +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _febf &FieldFlagRadio > 0{_dcab +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _febf &FieldFlagPushbutton > 0{_dcab +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _febf &FieldFlagRadiosInUnision > 0{_dcab +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _febf &FieldFlagMultiline > 0{_dcab +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _febf &FieldFlagPassword > 0{_dcab +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _febf &FieldFlagFileSelect > 0{_dcab +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _febf &FieldFlagDoNotScroll > 0{_dcab +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _febf &FieldFlagComb > 0{_dcab +="\u007c\u0043\u006fm\u0062";};if _febf &FieldFlagRichText > 0{_dcab +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _febf &FieldFlagDoNotSpellCheck > 0{_dcab +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _febf &FieldFlagCombo > 0{_dcab +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _febf &FieldFlagEdit > 0{_dcab +="\u007c\u0045\u0064i\u0074";};if _febf &FieldFlagSort > 0{_dcab +="\u007c\u0053\u006fr\u0074";};if _febf &FieldFlagMultiSelect > 0{_dcab +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _febf &FieldFlagCommitOnSelChange > 0{_dcab +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ad .Trim (_dcab ,"\u007c");};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cee .PdfObject ;Mac _cee .PdfObject ;Unix _cee .PdfObject ;NewWindow _cee .PdfObject ;};

// ToInteger convert to an integer format.
func (_ececa *PdfColorLab )ToInteger (bits int )[3]uint32 {_adcbg :=_aaa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_adcbg *_ececa .L ()),uint32 (_adcbg *_ececa .A ()),uint32 (_adcbg *_ececa .B ())};};func _ccbbb (_gabde *_cee .PdfObjectDictionary )(*PdfFieldText ,error ){_aeffa :=&PdfFieldText {};
_aeffa .DA ,_ =_cee .GetString (_gabde .Get ("\u0044\u0041"));_aeffa .Q ,_ =_cee .GetInt (_gabde .Get ("\u0051"));_aeffa .DS ,_ =_cee .GetString (_gabde .Get ("\u0044\u0053"));_aeffa .RV =_gabde .Get ("\u0052\u0056");_aeffa .MaxLen ,_ =_cee .GetInt (_gabde .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _aeffa ,nil ;};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_fbbc *PdfWriter )GetPageIndirectObject (pageNum int )(*_cee .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_fbbc ._dcdg ){return nil ,_cdf .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _fbbc ._dcdg [pageNum ],nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cee .PdfObjectInteger ;BitsPerComponent *_cee .PdfObjectInteger ;BitsPerFlag *_cee .PdfObjectInteger ;Decode *_cee .PdfObjectArray ;Function []PdfFunction ;};

// ToGoTime returns the date in time.Time format.
func (_fcdgf PdfDate )ToGoTime ()_gc .Time {_ffcgb :=int (_fcdgf ._gccea *60*60+_fcdgf ._cacedd *60);switch _fcdgf ._cfbed {case '-':_ffcgb =-_ffcgb ;case 'Z':_ffcgb =0;};_bfeef :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fcdgf ._cfbed ,_fcdgf ._gccea ,_fcdgf ._cacedd );
_cbcgg :=_gc .FixedZone (_bfeef ,_ffcgb );return _gc .Date (int (_fcdgf ._gffbe ),_gc .Month (_fcdgf ._dabdg ),int (_fcdgf ._cfdgf ),int (_fcdgf ._bbeea ),int (_fcdgf ._bfaec ),int (_fcdgf ._begea ),0,_cbcgg );};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bcbee *PdfPage )Size ()(float64 ,float64 ,error ){_debb ,_cbdag :=_bcbee .GetMediaBox ();if _cbdag !=nil {return 0,0,_cbdag ;};_edfea ,_ffede :=_debb .Width (),_debb .Height ();_bdaf ,_cbdag :=_bcbee .GetRotate ();if _cbdag !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cbdag .Error ());
};if _abcaf :=_bdaf ;_abcaf %360!=0&&_abcaf %90==0{if _fcbf :=(360+_abcaf %360)%360;_fcbf ==90||_fcbf ==270{_edfea ,_ffede =_ffede ,_edfea ;};};return _edfea ,_ffede ,nil ;};func (_aceef *LTV )getCRLs (_gcegc []*_dfd .Certificate )([][]byte ,error ){_ceab :=make ([][]byte ,0,len (_gcegc ));
for _ ,_eggg :=range _gcegc {for _ ,_dffef :=range _eggg .CRLDistributionPoints {if _aceef .CertClient .IsCA (_eggg ){continue ;};_bccd ,_fabdc :=_aceef .CRLClient .MakeRequest (_dffef ,_eggg );if _fabdc !=nil {_fca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fabdc );
continue ;};_ceab =append (_ceab ,_bccd );};};return _ceab ,nil ;};func _ccba (_afbafc _cee .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dceg :=&PdfColorspaceDeviceNAttributes {};var _faage *_cee .PdfObjectDictionary ;switch _gbfb :=_afbafc .(type ){case *_cee .PdfIndirectObject :_dceg ._gedbb =_gbfb ;
var _acgf bool ;_faage ,_acgf =_gbfb .PdfObject .(*_cee .PdfObjectDictionary );if !_acgf {_fca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cee .PdfObjectDictionary :_faage =_gbfb ;case *_cee .PdfObjectReference :_cbdfc :=_gbfb .Resolve ();return _ccba (_cbdfc );default:_fca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecdd :=_faage .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ecdd !=nil {_ecaae ,_dbgbe :=_cee .TraceToDirectObject (_ecdd ).(*_cee .PdfObjectName );if !_dbgbe {_fca .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dceg .Subtype =_ecaae ;};if _dbgbc :=_faage .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_dbgbc !=nil {_dceg .Colorants =_dbgbc ;};if _cfac :=_faage .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cfac !=nil {_dceg .Process =_cfac ;};if _gcdbbf :=_faage .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gcdbbf !=nil {_dceg .MixingHints =_gcdbbf ;};return _dceg ,nil ;};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_baceb *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_baceb ._gbbca =&displayDocTitle ;};

// ToInteger convert to an integer format.
func (_cafgc *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ggfc :=_aaa .Pow (2,float64 (bits ))-1;return uint32 (_ggfc *_cafgc .Val ());};func (_ceecd *PdfReader )newPdfSignatureFromIndirect (_aaecd *_cee .PdfIndirectObject )(*PdfSignature ,error ){_cdbbe ,_egbfc :=_aaecd .PdfObject .(*_cee .PdfObjectDictionary );
if !_egbfc {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gbfad ,_gdbad :=_ceecd ._fcgbe .GetModelFromPrimitive (_aaecd ).(*PdfSignature );_gdbad {return _gbfad ,nil ;};_cceb :=&PdfSignature {};_cceb ._gcfbb =_aaecd ;_cceb .Type ,_ =_cee .GetName (_cdbbe .Get ("\u0054\u0079\u0070\u0065"));
_cceb .Filter ,_egbfc =_cee .GetName (_cdbbe .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_egbfc {_fca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cceb .SubFilter ,_ =_cee .GetName (_cdbbe .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cceb .Contents ,_egbfc =_cee .GetString (_cdbbe .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_egbfc {_fca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _fdafa ,_ecacb :=_cee .GetArray (_cdbbe .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ecacb {_cceb .Reference =_cee .MakeArray ();for _ ,_cbcb :=range _fdafa .Elements (){_afcbd ,_fadcf :=_cee .GetDict (_cbcb );
if !_fadcf {_fca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_bdfea ,_ccega :=_ceecd .newPdfSignatureReferenceFromDict (_afcbd );if _ccega !=nil {return nil ,_ccega ;};_cceb .Reference .Append (_bdfea .ToPdfObject ());};};_cceb .Cert =_cdbbe .Get ("\u0043\u0065\u0072\u0074");_cceb .ByteRange ,_ =_cee .GetArray (_cdbbe .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_cceb .Changes ,_ =_cee .GetArray (_cdbbe .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cceb .Name ,_ =_cee .GetString (_cdbbe .Get ("\u004e\u0061\u006d\u0065"));_cceb .M ,_ =_cee .GetString (_cdbbe .Get ("\u004d"));_cceb .Location ,_ =_cee .GetString (_cdbbe .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cceb .Reason ,_ =_cee .GetString (_cdbbe .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cceb .ContactInfo ,_ =_cee .GetString (_cdbbe .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cceb .R ,_ =_cee .GetInt (_cdbbe .Get ("\u0052"));
_cceb .V ,_ =_cee .GetInt (_cdbbe .Get ("\u0056"));_cceb .PropBuild ,_ =_cee .GetDict (_cdbbe .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cceb .PropAuthTime ,_ =_cee .GetInt (_cdbbe .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cceb .PropAuthType ,_ =_cee .GetName (_cdbbe .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_ceecd ._fcgbe .Register (_aaecd ,_cceb );return _cceb ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ffb :=NewPdfAction ();_fgd :=&PdfActionGoToE {};_fgd .PdfAction =_ffb ;_ffb .SetContext (_fgd );return _fgd ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gdbfg *PdfPage )GetContainingPdfObject ()_cee .PdfObject {return _gdbfg ._bafab };

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _gc .Time ){_dggagg .Lock ();defer _dggagg .Unlock ();_cedfg =modifiedDate ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ecfe *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dddc *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbgc ,_egec :=color .(*PdfColorPattern );if !_egec {_fca .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _dbgc .Color ==nil {return color ,nil ;};if _dddc .UnderlyingCS ==nil {return nil ,_cdf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dddc .UnderlyingCS .ColorToRGB (_dbgc .Color );
};

// SetKDict sets the KDict for the KValue.
func (_bgdeb *KValue )SetKDict (kDict *KDict ){_bgdeb .Clear ();_bgdeb ._aedde =kDict };func (_ccdd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// GetOutlineTree returns the outline tree.
func (_ddddf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ddddf ._bafag };func _dbead (_fagcg _cee .PdfObject )(*fontFile ,error ){_fca .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fagcg );
_cead :=&fontFile {};_fagcg =_cee .TraceToDirectObject (_fagcg );_egbb ,_dgfea :=_fagcg .(*_cee .PdfObjectStream );if !_dgfea {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fagcg );
return nil ,_cee .ErrTypeError ;};_gffdf :=_egbb .PdfObjectDictionary ;_ffdbg ,_eddce :=_cee .DecodeStream (_egbb );if _eddce !=nil {return nil ,_eddce ;};_eada ,_dgfea :=_cee .GetNameVal (_gffdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dgfea {_cead ._ggage =_eada ;
if _eada =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fca .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cedgb ,_ :=_cee .GetIntVal (_gffdf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_dgea ,_ :=_cee .GetIntVal (_gffdf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cedgb > len (_ffdbg ){_cedgb =len (_ffdbg );
};if _cedgb +_dgea > len (_ffdbg ){_dgea =len (_ffdbg )-_cedgb ;};_bcab :=_ffdbg [:_cedgb ];var _cadcb []byte ;if _dgea > 0{_cadcb =_ffdbg [_cedgb :_cedgb +_dgea ];};if _cedgb > 0&&_dgea > 0{_bgfb :=_cead .loadFromSegments (_bcab ,_cadcb );if _bgfb !=nil {return nil ,_bgfb ;
};};return _cead ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gacgf *PdfAnnotationStrikeOut )ToPdfObject ()_cee .PdfObject {_gacgf .PdfAnnotation .ToPdfObject ();_fbbfg :=_gacgf ._eddc ;_ecag :=_fbbfg .PdfObject .(*_cee .PdfObjectDictionary );_gacgf .PdfAnnotationMarkup .appendToPdfDictionary (_ecag );_ecag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_ecag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gacgf .QuadPoints );return _fbbfg ;};

// SetTabOrder sets the tab order for the page.
func (_bbbf *PdfPage )SetTabOrder (order TabOrderType ){_bbbf .Tabs =_cee .MakeName (string (order ))};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bbda *_cee .PdfIndirectObject ;};

// Direction returns the value of the direction.
func (_ccff *ViewerPreferences )Direction ()Direction {return _ccff ._gfegc };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cbddd *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bfcbd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bfcbd .Alternate ==nil {_fca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bfcbd .N ==1{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_acbaa :=NewPdfColorspaceDeviceGray ();return _acbaa .ImageToRGB (img );}else if _bfcbd .N ==3{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _bfcbd .N ==4{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_abfe :=NewPdfColorspaceDeviceCMYK ();return _abfe .ImageToRGB (img );}else {return img ,_cdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bfcbd );
_fggg ,_feeeb :=_bfcbd .Alternate .ImageToRGB (img );_fca .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fca .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fggg );
return _fggg ,_feeeb ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gbdbb *pdfCIDFontType2 )ToPdfObject ()_cee .PdfObject {if _gbdbb ._bfeeb ==nil {_gbdbb ._bfeeb =&_cee .PdfIndirectObject {};};_cddae :=_gbdbb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_gbdbb ._bfeeb .PdfObject =_cddae ;if _gbdbb .CIDSystemInfo !=nil {_cddae .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gbdbb .CIDSystemInfo );};if _gbdbb .DW !=nil {_cddae .Set ("\u0044\u0057",_gbdbb .DW );};if _gbdbb .DW2 !=nil {_cddae .Set ("\u0044\u0057\u0032",_gbdbb .DW2 );
};if _gbdbb .W !=nil {_cddae .Set ("\u0057",_gbdbb .W );};if _gbdbb .W2 !=nil {_cddae .Set ("\u0057\u0032",_gbdbb .W2 );};if _gbdbb .CIDToGIDMap !=nil {_cddae .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gbdbb .CIDToGIDMap );};
return _gbdbb ._bfeeb ;};func (_cdaaf *PdfSignature )extractChainFromPKCS7 ()([]*_dfd .Certificate ,error ){_daafb ,_eedd :=_ed .Parse (_cdaaf .Contents .Bytes ());if _eedd !=nil {return nil ,_eedd ;};return _daafb .Certificates ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dfbgb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cfee []*PdfField ;_caac :=map[*_cee .PdfIndirectObject ]struct{}{};for _ ,_aagb :=range _dfbgb .PageList {_eebeb ,_fceec :=_aagb .GetAnnotations ();if _fceec !=nil {return _fceec ;
};for _ ,_efdca :=range _eebeb {var _caacf *PdfField ;switch _bgefe :=_efdca .GetContext ().(type ){case *PdfAnnotationWidget :if _bgefe ._dec !=nil {_caacf =_bgefe ._dec ;break ;};if _cdbf ,_fbebf :=_cee .GetIndirect (_bgefe .Parent );_fbebf {_caacf ,_fceec =_dfbgb .newPdfFieldFromIndirectObject (_cdbf ,nil );
if _fceec ==nil {break ;};_fca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cdbf ,_fceec );
};if _bgefe ._eddc !=nil {_caacf ,_fceec =_dfbgb .newPdfFieldFromIndirectObject (_bgefe ._eddc ,nil );if _fceec ==nil {break ;};_fca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bgefe ._eddc ,_fceec );
};};if _caacf ==nil {continue ;};if _ ,_gfbdg :=_caac [_caacf ._ccbb ];_gfbdg {continue ;};_caac [_caacf ._ccbb ]=struct{}{};_cfee =append (_cfee ,_caacf );};};if len (_cfee )==0{return nil ;};if _dfbgb .AcroForm ==nil {_dfbgb .AcroForm =NewPdfAcroForm ();
};_dfbgb .AcroForm .Fields =&_cfee ;return nil ;};

// B returns the value of the blue component of the color.
func (_dcfb *PdfColorDeviceRGB )B ()float64 {return _dcfb [2]};func (_afbd *PdfAppender )mergeResources (_egfdf ,_befe _cee .PdfObject ,_gaba map[_cee .PdfObjectName ]_cee .PdfObjectName )_cee .PdfObject {if _befe ==nil &&_egfdf ==nil {return nil ;};if _befe ==nil {return _egfdf ;
};_acae ,_bfaa :=_cee .GetDict (_befe );if !_bfaa {return _egfdf ;};if _egfdf ==nil {_afae :=_cee .MakeDict ();_afae .Merge (_acae );return _befe ;};_egd ,_bfaa :=_cee .GetDict (_egfdf );if !_bfaa {_fca .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_egd =_cee .MakeDict ();};for _ ,_gddb :=range _acae .Keys (){if _bcgf ,_eaeb :=_gaba [_gddb ];_eaeb {_egd .Set (_bcgf ,_acae .Get (_gddb ));}else {_egd .Set (_gddb ,_acae .Get (_gddb ));};};return _egd ;};func _bbcd (_ebbf *PdfField ,_dfcb _cee .PdfObject )error {switch _ebbf .GetContext ().(type ){case *PdfFieldText :switch _ceead :=_dfcb .(type ){case *_cee .PdfObjectName :_fcgg :=_ceead ;
_fca .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_fcgg .String ());
_ebbf .V =_cee .MakeEncodedString (_ceead .String (),true );case *_cee .PdfObjectString :_ebbf .V =_cee .MakeEncodedString (_ceead .String (),true );default:_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_ceead ,_ceead );
};case *PdfFieldButton :switch _dfcb .(type ){case *_cee .PdfObjectName :if len (_dfcb .String ())> 0{_ebbf .V =_dfcb ;_feceb (_ebbf ,_dfcb );};case *_cee .PdfObjectString :if len (_dfcb .String ())> 0{_ebbf .V =_cee .MakeName (_dfcb .String ());_feceb (_ebbf ,_ebbf .V );
};default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ebbf .PartialName (),_dfcb );_ebbf .V =_dfcb ;};case *PdfFieldChoice :switch _dfcb .(type ){case *_cee .PdfObjectName :if len (_dfcb .String ())> 0{_ebbf .V =_cee .MakeString (_dfcb .String ());
_feceb (_ebbf ,_dfcb );};case *_cee .PdfObjectString :if len (_dfcb .String ())> 0{_ebbf .V =_dfcb ;_feceb (_ebbf ,_cee .MakeName (_dfcb .String ()));};default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ebbf .PartialName (),_dfcb );
_ebbf .V =_dfcb ;};case *PdfFieldSignature :_fca .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ebbf .PartialName (),_dfcb );
};return nil ;};func (_gda *PdfReader )newPdfActionGotoFromDict (_afga *_cee .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_afga .Get ("\u0044")},nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_bgdgg *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_abef ,_ ,_gcbff :=_bgdgg .CharcodesToUnicodeWithStats (_bgdgg .BytesToCharcodes (data ));_ecdb :=_dae .ExpandLigatures (_abef );return _ecdb ,_c .RuneCountInString (_ecdb ),_gcbff ;
};

// ToPdfObject convert PdfInfo to pdf object.
func (_geaae *PdfInfo )ToPdfObject ()_cee .PdfObject {_cbee :=_cee .MakeDict ();_cbee .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_geaae .Title );_cbee .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_geaae .Author );_cbee .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_geaae .Subject );
_cbee .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_geaae .Keywords );_cbee .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_geaae .Creator );_cbee .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_geaae .Producer );
_cbee .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_geaae .Trapped );if _geaae .CreationDate !=nil {_cbee .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_geaae .CreationDate .ToPdfObject ());};if _geaae .ModifiedDate !=nil {_cbee .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_geaae .ModifiedDate .ToPdfObject ());
};for _ ,_bgcc :=range _geaae ._ecfea .Keys (){_cbee .SetIfNotNil (_bgcc ,_geaae ._ecfea .Get (_bgcc ));};return _cbee ;};func _dabde (_acbbff *_cee .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ffbd :=&PdfTilingPattern {};_egddd :=_acbbff .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _egddd ==nil {_fca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_accdb ,_cdaggc :=_egddd .(*_cee .PdfObjectInteger );if !_cdaggc {_fca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_egddd );
return nil ,_cee .ErrTypeError ;};_ffbd .PaintType =_accdb ;_egddd =_acbbff .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _egddd ==nil {_fca .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aagd ,_cdaggc :=_egddd .(*_cee .PdfObjectInteger );if !_cdaggc {_fca .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egddd );
return nil ,_cee .ErrTypeError ;};_ffbd .TilingType =_aagd ;_egddd =_acbbff .Get ("\u0042\u0042\u006f\u0078");if _egddd ==nil {_fca .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_egddd =_cee .TraceToDirectObject (_egddd );_gcdc ,_cdaggc :=_egddd .(*_cee .PdfObjectArray );if !_cdaggc {_fca .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egddd );
return nil ,_cee .ErrTypeError ;};_fcffd ,_dgfcc :=NewPdfRectangle (*_gcdc );if _dgfcc !=nil {_fca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dgfcc );return nil ,_dgfcc ;};_ffbd .BBox =_fcffd ;_egddd =_acbbff .Get ("\u0058\u0053\u0074e\u0070");
if _egddd ==nil {_fca .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fggdf ,_dgfcc :=_cee .GetNumberAsFloat (_egddd );if _dgfcc !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fggdf );
return nil ,_dgfcc ;};_ffbd .XStep =_cee .MakeFloat (_fggdf );_egddd =_acbbff .Get ("\u0059\u0053\u0074e\u0070");if _egddd ==nil {_fca .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_aggd ,_dgfcc :=_cee .GetNumberAsFloat (_egddd );if _dgfcc !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_aggd );
return nil ,_dgfcc ;};_ffbd .YStep =_cee .MakeFloat (_aggd );_egddd =_acbbff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _egddd ==nil {_fca .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acbbff ,_cdaggc =_cee .TraceToDirectObject (_egddd ).(*_cee .PdfObjectDictionary );if !_cdaggc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_egddd );
};_adddg ,_dgfcc :=NewPdfPageResourcesFromDict (_acbbff );if _dgfcc !=nil {return nil ,_dgfcc ;};_ffbd .Resources =_adddg ;if _fegcg :=_acbbff .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fegcg !=nil {_eeefc ,_fgdb :=_fegcg .(*_cee .PdfObjectArray );
if !_fgdb {_fca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fegcg );return nil ,_cee .ErrTypeError ;};_ffbd .Matrix =_eeefc ;};return _ffbd ,nil ;
};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bbb :=NewPdfAnnotation ();_fdf :=&PdfAnnotationCircle {};_fdf .PdfAnnotation =_bbb ;_fdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbb .SetContext (_fdf );return _fdf ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_acbeg :=&PdfColorspaceCalRGB {};_acbeg .BlackPoint =[]float64 {0.0,0.0,0.0};_acbeg .Gamma =[]float64 {1.0,1.0,1.0};_acbeg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _acbeg ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cee .PdfObjectArray ;ExtGState _cee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cdaa *PdfFilespec )ToPdfObject ()_cee .PdfObject {_bacgg :=_cdaa .getDict ();_bacgg .Clear ();_bacgg .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bacgg .SetIfNotNil ("\u0046\u0053",_cdaa .FS );
_bacgg .SetIfNotNil ("\u0046",_cdaa .F );_bacgg .SetIfNotNil ("\u0055\u0046",_cdaa .UF );_bacgg .SetIfNotNil ("\u0044\u004f\u0053",_cdaa .DOS );_bacgg .SetIfNotNil ("\u004d\u0061\u0063",_cdaa .Mac );_bacgg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cdaa .Unix );
_bacgg .SetIfNotNil ("\u0049\u0044",_cdaa .ID );_bacgg .SetIfNotNil ("\u0056",_cdaa .V );_bacgg .SetIfNotNil ("\u0045\u0046",_cdaa .EF );_bacgg .SetIfNotNil ("\u0052\u0046",_cdaa .RF );_bacgg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_cdaa .Desc );_bacgg .SetIfNotNil ("\u0043\u0049",_cdaa .CI );
_bacgg .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_cdaa .AFRelationship );return _cdaa ._gbfeg ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject implements interface PdfModel.
func (_acf *PdfAction )ToPdfObject ()_cee .PdfObject {_dd :=_acf ._gaf ;_adg :=_dd .PdfObject .(*_cee .PdfObjectDictionary );_adg .Clear ();_adg .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_adg .SetIfNotNil ("\u0053",_acf .S );
_adg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_acf .Next );return _dd ;};

// GetCatalogLanguage gets catalog Language object.
func (_agbc *PdfReader )GetCatalogLanguage ()(_cee .PdfObject ,bool ){if _agbc ._cacfe ==nil {return nil ,false ;};_gcdbed :=_agbc ._cacfe .Get ("\u004c\u0061\u006e\u0067");return _gcdbed ,_gcdbed !=nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cee .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cee .PdfObject ;Contents _cee .PdfObject ;
Rotate *int64 ;Group _cee .PdfObject ;Thumb _cee .PdfObject ;B _cee .PdfObject ;Dur _cee .PdfObject ;Trans _cee .PdfObject ;AA _cee .PdfObject ;Metadata _cee .PdfObject ;PieceInfo _cee .PdfObject ;StructParents _cee .PdfObject ;ID _cee .PdfObject ;PZ _cee .PdfObject ;
SeparationInfo _cee .PdfObject ;Tabs _cee .PdfObject ;TemplateInstantiated _cee .PdfObject ;PresSteps _cee .PdfObject ;UserUnit _cee .PdfObject ;VP _cee .PdfObject ;Annots _cee .PdfObject ;_eeaba []*PdfAnnotation ;_cfdab *_cee .PdfObjectDictionary ;_bafab *_cee .PdfIndirectObject ;
_bfeab _cee .PdfObjectDictionary ;_acbbg *PdfReader ;};func (_edeea *PdfWriter )adjustXRefAffectedVersion (_fecgec bool ){if _fecgec &&_edeea ._gceef .Major ==1&&_edeea ._gceef .Minor < 5{_edeea ._gceef .Minor =5;};};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cee .PdfObject ;Open _cee .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fege *PdfColorspaceSpecialSeparation )ToPdfObject ()_cee .PdfObject {_efcag :=_cee .MakeArray (_cee .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_efcag .Append (_fege .ColorantName );_efcag .Append (_fege .AlternateSpace .ToPdfObject ());
_efcag .Append (_fege .TintTransform .ToPdfObject ());if _fege ._dfgac !=nil {_fege ._dfgac .PdfObject =_efcag ;return _fege ._dfgac ;};return _efcag ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_efacbe *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_gffegf :=[]*EmbeddedFile {};_acfdd ,_bedbfg :=_efacbe .GetNameDictionary ();if _bedbfg !=nil {return nil ,_bedbfg ;};if _acfdd ==nil {return _gffegf ,nil ;};_eedc :=_afaaf (_acfdd );
if _eedc .EmbeddedFiles ==nil {return nil ,nil ;};_efdaa :=_eedc .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_baecd ,_gcbga :=_efdaa .(*_cee .PdfObjectArray );if !_gcbga {return nil ,_cdf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _gecaca :=1;_gecaca < len (_baecd .Elements ());_gecaca +=2{if _gecaca %2!=0{_bdeef :=_baecd .Get (_gecaca );_eacggb ,_gged :=NewPdfFilespecFromObj (_bdeef );if _gged !=nil {return nil ,_gged ;};_cgbee ,_gged :=NewEmbeddedFileFromObject (_eacggb .EF );
if _gged !=nil {return nil ,_gged ;};_ceacd ,_gfcbf :=_eacggb .F .(*_cee .PdfObjectString );if _gfcbf {_cgbee .Name =_ceacd .Str ();};_cgbee .Description =_eacggb .Desc .WriteString ();_cgbee .Relationship =RelationshipUnspecified ;if _eacggb .AFRelationship !=nil {switch _eacggb .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_cgbee .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_cgbee .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_cgbee .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_cgbee .Relationship =RelationshipSupplement ;
default:_cgbee .Relationship =RelationshipUnspecified ;};};_gffegf =append (_gffegf ,_cgbee );};};return _gffegf ,nil ;};func NewViewerPreferencesFromPdfObject (obj _cee .PdfObject )(*ViewerPreferences ,error ){_abdf :=_cee .ResolveReference (obj );_feffb ,_acgfc :=_cee .GetDict (_abdf );
if !_acgfc {return nil ,_e .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gfecd :=NewViewerPreferences ();if _cbcbg :=_feffb .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_cbcbg !=nil {if _cbfd ,_dbbb :=_cee .GetBool (_cbcbg );_dbbb {_gfecd ._bfff =(*bool )(_cbfd );};};if _eeeba :=_feffb .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_eeeba !=nil {if _ggbff ,_geggg :=_cee .GetBool (_eeeba );_geggg {_gfecd ._fcbcb =(*bool )(_ggbff );};};if _egccf :=_feffb .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_egccf !=nil {if _acffc ,_ffeaa :=_cee .GetBool (_egccf );
_ffeaa {_gfecd ._gfffg =(*bool )(_acffc );};};if _cdbfe :=_feffb .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_cdbfe !=nil {if _egedb ,_ebaeba :=_cee .GetBool (_cdbfe );_ebaeba {_gfecd ._cbdgc =(*bool )(_egedb );};};if _dbbeg :=_feffb .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_dbbeg !=nil {if _efefb ,_efcbg :=_cee .GetBool (_dbbeg );_efcbg {_gfecd ._gaffg =(*bool )(_efefb );};};if _bgbaf :=_feffb .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_bgbaf !=nil {if _gacab ,_fbbeb :=_cee .GetBool (_bgbaf );
_fbbeb {_gfecd ._gbbca =(*bool )(_gacab );};};if _ecagb :=_feffb .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_ecagb !=nil {if _efbgc ,_ccege :=_cee .GetName (_ecagb );_ccege {_gfecd ._efgaa =NonFullScreenPageMode (*_efbgc );
};};if _aaggdg :=_feffb .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_aaggdg !=nil {if _bccgf ,_bfbbe :=_cee .GetName (_aaggdg );_bfbbe {_gfecd ._gfegc =Direction (*_bccgf );};};if _egfece :=_feffb .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_egfece !=nil {if _bbbde ,_faeg :=_cee .GetName (_egfece );_faeg {_gfecd ._gagga =PageBoundary (*_bbbde );};};if _gcacd :=_feffb .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_gcacd !=nil {if _dgada ,_dccafc :=_cee .GetName (_gcacd );_dccafc {_gfecd ._baegf =PageBoundary (*_dgada );
};};if _gggcd :=_feffb .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_gggcd !=nil {if _fecfg ,_gcbbe :=_cee .GetName (_gggcd );_gcbbe {_gfecd ._eedee =PageBoundary (*_fecfg );};};if _gaed :=_feffb .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_gaed !=nil {if _bdcce ,_gcadf :=_cee .GetName (_gaed );_gcadf {_gfecd ._fcddg =PageBoundary (*_bdcce );};};if _afcad :=_feffb .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_afcad !=nil {if _gdacd ,_fdgcba :=_cee .GetName (_afcad );
_fdgcba {_gfecd ._fgbdf =PrintScaling (*_gdacd );};};if _cgaad :=_feffb .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_cgaad !=nil {if _ffadd ,_ebgca :=_cee .GetName (_cgaad );_ebgca {_gfecd ._cadea =Duplex (*_ffadd );};};if _aafda :=_feffb .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_aafda !=nil {if _cgfbe ,_bcfeg :=_cee .GetBool (_aafda );_bcfeg {_gfecd ._bdfed =(*bool )(_cgfbe );};};if _ebebg :=_feffb .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_ebebg !=nil {if _bacaf ,_gbedd :=_cee .GetArray (_ebebg );
_gbedd {_gfecd ._acfdg =make ([]int ,_bacaf .Len ());for _cacge :=range _gfecd ._acfdg {if _eeeadd :=_bacaf .Get (_cacge );_eeeadd !=nil {if _fffad ,_bgegdg :=_cee .GetInt (_eeeadd );_bgegdg {_gfecd ._acfdg [_cacge ]=int (*_fffad );};};};};};if _fbdcgf :=_feffb .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_fbdcgf !=nil {if _ffbbbe ,_eagca :=_cee .GetInt (_fbdcgf );_eagca {_gfecd ._dbcbe =int (*_ffbbbe );};};return _gfecd ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _gc .Time )(PdfDate ,error ){_geagge :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_dfdge ,_ :=_fa .ParseInt (_geagge [1:3],10,32);_dcdbc ,_ :=_fa .ParseInt (_geagge [4:6],10,32);return PdfDate {_gffbe :int64 (timeObj .Year ()),_dabdg :int64 (timeObj .Month ()),_cfdgf :int64 (timeObj .Day ()),_bbeea :int64 (timeObj .Hour ()),_bfaec :int64 (timeObj .Minute ()),_begea :int64 (timeObj .Second ()),_cfbed :_geagge [0],_gccea :_dfdge ,_cacedd :_dcdbc },nil ;
};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bggdb *PdfField )GetContext ()PdfModel {return _bggdb ._egab };func _ceabe (_cbefa rune )string {for _ccgcd ,_eccfe :=range _a .Categories {if len (_ccgcd )==2&&_a .Is (_eccfe ,_cbefa ){return _ccgcd ;};};return "\u0043\u006e";};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gbac *VRI )ToPdfObject ()*_cee .PdfObjectDictionary {_adfebe :=_cee .MakeDict ();_adfebe .SetIfNotNil (_cee .PdfObjectName ("\u0043\u0065\u0072\u0074"),_deeb (_gbac .Cert ));_adfebe .SetIfNotNil (_cee .PdfObjectName ("\u004f\u0043\u0053\u0050"),_deeb (_gbac .OCSP ));
_adfebe .SetIfNotNil (_cee .PdfObjectName ("\u0043\u0052\u004c"),_deeb (_gbac .CRL ));_adfebe .SetIfNotNil ("\u0054\u0055",_gbac .TU );_adfebe .SetIfNotNil ("\u0054\u0053",_gbac .TS );return _adfebe ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fbgde *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fbgde .NumInputs {_fca .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fbgde ._efcg ==nil {_eebea :=_fbgde .processSamples ();if _eebea !=nil {return nil ,_eebea ;};};_deaf :=_fbgde .Encode ;if _deaf ==nil {_deaf =[]float64 {};
for _eabdd :=0;_eabdd < len (_fbgde .Size );_eabdd ++{_deaf =append (_deaf ,0);_deaf =append (_deaf ,float64 (_fbgde .Size [_eabdd ]-1));};};_degfd :=_fbgde .Decode ;if _degfd ==nil {_degfd =_fbgde .Range ;};_bdae :=make ([]int ,len (x ));for _caeda :=0;
_caeda < len (x );_caeda ++{_cbdcd :=x [_caeda ];_aded :=_aaa .Min (_aaa .Max (_cbdcd ,_fbgde .Domain [2*_caeda ]),_fbgde .Domain [2*_caeda +1]);_dgead :=_ca .LinearInterpolate (_aded ,_fbgde .Domain [2*_caeda ],_fbgde .Domain [2*_caeda +1],_deaf [2*_caeda ],_deaf [2*_caeda +1]);
_fcafd :=_aaa .Min (_aaa .Max (_dgead ,0),float64 (_fbgde .Size [_caeda ]-1));_aecga :=int (_aaa .Floor (_fcafd +0.5));if _aecga < 0{_aecga =0;}else if _aecga > _fbgde .Size [_caeda ]{_aecga =_fbgde .Size [_caeda ]-1;};_bdae [_caeda ]=_aecga ;};_bfcd :=_bdae [0];
for _fegeb :=1;_fegeb < _fbgde .NumInputs ;_fegeb ++{_gfcda :=_bdae [_fegeb ];for _aefbe :=0;_aefbe < _fegeb ;_aefbe ++{_gfcda *=_fbgde .Size [_aefbe ];};_bfcd +=_gfcda ;};_bfcd *=_fbgde .NumOutputs ;var _aada []float64 ;for _dccaf :=0;_dccaf < _fbgde .NumOutputs ;
_dccaf ++{_ebdb :=_bfcd +_dccaf ;if _ebdb >=len (_fbgde ._efcg ){_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dggba :=_fbgde ._efcg [_ebdb ];_bddabd :=_ca .LinearInterpolate (float64 (_dggba ),0,_aaa .Pow (2,float64 (_fbgde .BitsPerSample )),_degfd [2*_dccaf ],_degfd [2*_dccaf +1]);_bbgbb :=_aaa .Min (_aaa .Max (_bddabd ,_fbgde .Range [2*_dccaf ]),_fbgde .Range [2*_dccaf +1]);
_aada =append (_aada ,_bbgbb );};return _aada ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fccab :=&PdfFilespec {};_fccab ._gbfeg =_cee .MakeIndirectObject (_cee .MakeDict ());return _fccab ;};func _cfffg (_agbbf _cee .PdfObject )(*KDict ,error ){_aebcb :=_cee .ResolveReference (_agbbf );if _aebcb ==nil {return nil ,_e .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};_beafg ,_gccb :=_cee .GetDict (_aebcb );if !_gccb {return nil ,_e .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_fffab :=&KDict {};if _baab :=_beafg .Get ("\u0053");
_baab !=nil {_fffab .S =_baab ;};if _cdace :=_beafg .Get ("\u0050");_cdace !=nil {_fffab .P =_cdace ;};if _ggaeg :=_beafg .Get ("\u0049\u0044");_ggaeg !=nil {if _cecde ,_aaefc :=_cee .GetString (_ggaeg );_aaefc {_fffab .ID =_cecde ;};};if _fggdg :=_beafg .Get ("\u0050\u0067");
_fggdg !=nil {_fffab .Pg =_fggdg ;};if _aaffe :=_beafg .Get ("\u004b");_aaffe !=nil {_fffab .K =_aaffe ;switch _cbfea :=_aaffe .(type ){case *_cee .PdfObjectArray :if _dgffd ,_fgfeg :=_cee .GetArray (_aaffe );_fgfeg {for _ ,_cfded :=range _dgffd .Elements (){switch _eaada :=_cfded .(type ){case *_cee .PdfIndirectObject :_dfbbc ,_dcefb :=_cfffg (_eaada );
if _dcefb !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_dcefb );continue ;};_fffab ._affgf =append (_fffab ._affgf ,&KValue {_aedde :_dfbbc });
case *_cee .PdfObjectInteger :if _gcfdf ,_abbf :=_cee .GetIntVal (_cfded );_abbf {_fffab ._affgf =append (_fffab ._affgf ,&KValue {_dfcf :&_gcfdf });};case *_cee .PdfObjectDictionary :_fffab ._affgf =append (_fffab ._affgf ,&KValue {_abcfb :_cfded });};
};};case *_cee .PdfIndirectObject :_cddefg ,_fbad :=_cfffg (_cbfea );if _fbad !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_fbad );
};if _cddefg !=nil {_fffab ._affgf =append (_fffab ._affgf ,&KValue {_aedde :_cddefg });};case *_cee .PdfObjectDictionary :_fffab ._affgf =append (_fffab ._affgf ,&KValue {_abcfb :_cbfea });case *_cee .PdfObjectInteger :if _acacf ,_efed :=_cee .GetIntVal (_aaffe );
_efed {_fffab ._affgf =append (_fffab ._affgf ,&KValue {_dfcf :&_acacf });};};};if _agdda :=_beafg .Get ("\u0041");_agdda !=nil {_fffab .A =_agdda ;};if _eceb :=_beafg .Get ("\u0043");_eceb !=nil {_fffab .C =_eceb ;};if _cacgd :=_beafg .Get ("\u0052");
_cacgd !=nil {if _bgacf ,_efeaf :=_cee .GetInt (_cacgd );_efeaf {_fffab .R =_bgacf ;};};if _febc :=_beafg .Get ("\u0054");_febc !=nil {if _fcbbe ,_afbbg :=_cee .GetString (_febc );_afbbg {_fffab .T =_fcbbe ;};};if _gcfag :=_beafg .Get ("\u004c\u0061\u006e\u0067");
_gcfag !=nil {if _agbeb ,_ecdgad :=_cee .GetString (_gcfag );_ecdgad {_fffab .Lang =_agbeb ;};};if _aeedg :=_beafg .Get ("\u0041\u006c\u0074");_aeedg !=nil {if _bfgcf ,_cgfb :=_cee .GetString (_aeedg );_cgfb {_fffab .Alt =_bfgcf ;};};if _ccdegg :=_beafg .Get ("\u0045");
_ccdegg !=nil {if _gdbfgd ,_fffgd :=_cee .GetString (_ccdegg );_fffgd {_fffab .E =_gdbfgd ;};};return _fffab ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cee .PdfObject ;IsMap _cee .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bbcf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_bfgd *PdfReader )newPdfAnnotationSquareFromDict (_bfcf *_cee .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_ced :=PdfAnnotationSquare {};_cecf ,_bcgd :=_bfgd .newPdfAnnotationMarkupFromDict (_bfcf );
if _bcgd !=nil {return nil ,_bcgd ;};_ced .PdfAnnotationMarkup =_cecf ;_ced .BS =_bfcf .Get ("\u0042\u0053");_ced .IC =_bfcf .Get ("\u0049\u0043");_ced .BE =_bfcf .Get ("\u0042\u0045");_ced .RD =_bfcf .Get ("\u0052\u0044");return &_ced ,nil ;};

// SetCenterWindow sets the value of the centerWindow flag.
func (_bbcgg *ViewerPreferences )SetCenterWindow (centerWindow bool ){_bbcgg ._gaffg =&centerWindow };var _cgfc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// SetPrintClip sets the value of the printClip.
func (_gbdfg *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_gbdfg ._fcddg =printClip };

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fgfdc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dae .CharCode )(_feege []rune ,_eafgde ,_dfgd int ){_ccca ,_eafgde ,_dfgd :=_fgfdc .CharcodesToStrings (charcodes ,"");return []rune (_ad .Join (_ccca ,"")),_eafgde ,_dfgd ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cee .PdfObjectArray ;TI *_cee .PdfObjectInteger ;I *_cee .PdfObjectArray ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gcbaa *PdfPageResources )GetXObjectByName (keyName _cee .PdfObjectName )(*_cee .PdfObjectStream ,XObjectType ){if _gcbaa .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dfgcea ,_bfeeg :=_cee .TraceToDirectObject (_gcbaa .XObject ).(*_cee .PdfObjectDictionary );
if !_bfeeg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cee .TraceToDirectObject (_gcbaa .XObject ));
return nil ,XObjectTypeUndefined ;};if _dadaag :=_dfgcea .Get (keyName );_dadaag !=nil {_bcff ,_fgbdb :=_cee .GetStream (_dadaag );if !_fgbdb {_fca .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dadaag );
return nil ,XObjectTypeUndefined ;};_ebbec :=_bcff .PdfObjectDictionary ;_aagaa ,_fgbdb :=_cee .TraceToDirectObject (_ebbec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cee .PdfObjectName );if !_fgbdb {_fca .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ebbec .String ());
return nil ,XObjectTypeUndefined ;};if *_aagaa =="\u0049\u006d\u0061g\u0065"{return _bcff ,XObjectTypeImage ;}else if *_aagaa =="\u0046\u006f\u0072\u006d"{return _bcff ,XObjectTypeForm ;}else if *_aagaa =="\u0050\u0053"{return _bcff ,XObjectTypePS ;}else {_fca .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_aagaa );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gdaa :=&PdfColorspaceSpecialSeparation {};return _gdaa ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);
func (_cacg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cacg ._ebcad ==nil &&_cacg .DescendantFont !=nil {return _cacg .DescendantFont .FontDescriptor ();};return _cacg ._ebcad ;};

// SetVersion sets the PDF version of the output file.
func (_cbbacc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cbbacc ._gceef .Major =majorVersion ;_cbbacc ._gceef .Minor =minorVersion ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bfbcb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_efbc *Image )GetSamples ()[]uint32 {_cdfb :=_ag .ResampleBytes (_efbc .Data ,int (_efbc .BitsPerComponent ));if _efbc .BitsPerComponent < 8{_cdfb =_efbc .samplesTrimPadding (_cdfb );};_bffedb :=int (_efbc .Width )*int (_efbc .Height )*_efbc .ColorComponents ;
if len (_cdfb )< _bffedb {_fca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_cdfb ),_bffedb );
return _cdfb ;}else if len (_cdfb )> _bffedb {_fca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_cdfb ),_bffedb );
_cdfb =_cdfb [:_bffedb ];};return _cdfb ;};

// ToPdfObject implements interface PdfModel.
func (_fbefg *PdfSignatureReference )ToPdfObject ()_cee .PdfObject {_ebcae :=_cee .MakeDict ();_ebcae .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fbefg .Type );_ebcae .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_fbefg .TransformMethod );
_ebcae .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_fbefg .TransformParams );_ebcae .SetIfNotNil ("\u0044\u0061\u0074\u0061",_fbefg .Data );_ebcae .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_fbefg .DigestMethod );
return _ebcae ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dbbag :=PdfColorCalRGB {a ,b ,c };return &_dbbag ;};

// ToPdfObject implements interface PdfModel.
func (_fee *PdfActionSetOCGState )ToPdfObject ()_cee .PdfObject {_fee .PdfAction .ToPdfObject ();_edg :=_fee ._gaf ;_agf :=_edg .PdfObject .(*_cee .PdfObjectDictionary );_agf .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeSetOCGState )));_agf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fee .State );
_agf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_fee .PreserveRB );return _edg ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ecf PdfModel ;Rect _cee .PdfObject ;Contents _cee .PdfObject ;P _cee .PdfObject ;NM _cee .PdfObject ;M _cee .PdfObject ;F _cee .PdfObject ;AP _cee .PdfObject ;AS _cee .PdfObject ;Border _cee .PdfObject ;C _cee .PdfObject ;StructParent _cee .PdfObject ;
OC _cee .PdfObject ;_eddc *_cee .PdfIndirectObject ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_degea *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_degea .ToPdfOutline ().PdfOutlineTreeNode ;};

// String returns a human readable description of `fontfile`.
func (_eacgb *fontFile )String ()string {_bdbf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _eacgb ._beggd !=nil {_bdbf =_eacgb ._beggd .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_eacgb ._cffac ,_bdbf );
};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cee .PdfObjectInteger ;BitsPerComponent *_cee .PdfObjectInteger ;VerticesPerRow *_cee .PdfObjectInteger ;Decode *_cee .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fecg *PdfColorspaceDeviceGray )ToPdfObject ()_cee .PdfObject {return _cee .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_gbgb _cee .PdfObject ;};type pdfFont interface{_ce .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cee .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cee .PdfObject ;NewWindow _cee .PdfObject ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_cfcb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_cfcb ;};func _ccae (_bffbd *_cee .PdfObjectDictionary )*VRI {_beedd ,_ :=_cee .GetString (_bffbd .Get ("\u0054\u0055"));_dcagd ,_ :=_cee .GetString (_bffbd .Get ("\u0054\u0053"));
return &VRI {Cert :_efcfc (_bffbd .Get ("\u0043\u0065\u0072\u0074")),OCSP :_efcfc (_bffbd .Get ("\u004f\u0043\u0053\u0050")),CRL :_efcfc (_bffbd .Get ("\u0043\u0052\u004c")),TU :_beedd ,TS :_dcagd };};func _daf (_afdd _cee .PdfObject )(*PdfFilespec ,error ){if _afdd ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_afdd );};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_adad *PdfFont )CharcodesToStrings (charcodes []_dae .CharCode ,replacementText string )([]string ,int ,int ){_bafe :=_adad .baseFields ();_dcaba :=make ([]string ,0,len (charcodes ));_begc :=0;_bfbgd :=_adad .Encoder ();_adgd :=_bafe ._abcbf !=nil &&_adad .IsSimple ()&&_adad .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ad .Contains (_bafe ._abcbf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_adgd &&_bfbgd !=nil {switch _cfdg :=_bfbgd .(type ){case _dae .SimpleEncoder :_abfff :=_cfdg .BaseName ();if _ ,_afbga :=_fceac [_abfff ];_afbga {for _ ,_gbed :=range charcodes {if _ffecb ,_edba :=_bfbgd .CharcodeToRune (_gbed );_edba {_dcaba =append (_dcaba ,string (_ffecb ));
}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gbed ,charcodes ,_bafe .isCIDFont (),_adad ,_bfbgd );
_begc ++;_dcaba =append (_dcaba ,_dgg .MissingCodeString );};};return _dcaba ,len (_dcaba ),_begc ;};};};for _ ,_bcef :=range charcodes {if _bafe ._abcbf !=nil {if _dgffa ,_agbfe :=_bafe ._abcbf .CharcodeToUnicode (_dgg .CharCode (_bcef ));_agbfe {_faceg ,_ :=_c .DecodeLastRuneInString (_dgffa );
_bdac :=_ceabe (_faceg );if !(_bdac =="\u0043\u006f"){_dcaba =append (_dcaba ,_dgffa );continue ;};_fca .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_bcef ,_dgffa );
};};if _bfbgd !=nil {if _cfgfg ,_dagcc :=_bfbgd .CharcodeToRune (_bcef );_dagcc {_edafa :=_ceabe (_cfgfg );if !(_edafa =="\u0043\u006f"){_dcaba =append (_dcaba ,string (_cfgfg ));continue ;};_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_bcef ,string (_cfgfg ));
};};if replacementText !=""{_dcaba =append (_dcaba ,replacementText );}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bcef ,charcodes ,_bafe .isCIDFont (),_adad ,_bfbgd );
_begc ++;_dcaba =append (_dcaba ,_dgg .MissingCodeString );};};if _begc !=0{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_begc ,_adad );
};return _dcaba ,len (_dcaba ),_begc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edff *PdfShadingType3 )ToPdfObject ()_cee .PdfObject {_edff .PdfShading .ToPdfObject ();_dbcfe ,_cbeg :=_edff .getShadingDict ();if _cbeg !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edff .Coords !=nil {_dbcfe .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_edff .Coords );};if _edff .Domain !=nil {_dbcfe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edff .Domain );};if _edff .Function !=nil {if len (_edff .Function )==1{_dbcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edff .Function [0].ToPdfObject ());
}else {_bdceg :=_cee .MakeArray ();for _ ,_cbdba :=range _edff .Function {_bdceg .Append (_cbdba .ToPdfObject ());};_dbcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdceg );};};if _edff .Extend !=nil {_dbcfe .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_edff .Extend );
};return _edff ._dfgbe ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_bdbe :=&PdfColorPatternType3 {};return _bdbe };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_caad *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfge :=vals [0];if _bfge < 0.0||_bfge > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfge );
return nil ,ErrColorOutOfRange ;};_ecaf :=vals [1];if _ecaf < 0.0||_ecaf > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecaf );return nil ,ErrColorOutOfRange ;
};_gdbg :=vals [2];if _gdbg < 0.0||_gdbg > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdbg );return nil ,ErrColorOutOfRange ;};_fcce :=vals [3];
if _fcce < 0.0||_fcce > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcce );return nil ,ErrColorOutOfRange ;};_cfae :=NewPdfColorDeviceCMYK (_bfge ,_ecaf ,_gdbg ,_fcce );
return _cfae ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gdcd *PdfWriter )SetDocInfo (info *PdfInfo ){_gdcd .setDocInfo (info .ToPdfObject ())};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_dgbfe *PdfField )Flags ()FieldFlag {var _gbea FieldFlag ;_cadgg ,_dagfe :=_dgbfe .inherit (func (_eegb *PdfField )bool {if _eegb .Ff !=nil {_gbea =FieldFlag (*_eegb .Ff );return true ;};return false ;});if _dagfe !=nil {_fca .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dagfe );
};if !_cadgg {_fca .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _gbea ;};func (_cbe *PdfReader )newPdfActionNamedFromDict (_gbc *_cee .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gbc .Get ("\u004e")},nil ;
};func _ecad (_ccgb *_cee .PdfObjectDictionary ,_eagc *fontCommon ,_ebea _dae .TextEncoder )(*pdfFontSimple ,error ){_deab :=_ceafg (_eagc );_deab ._bdecc =_ebea ;if _ebea ==nil {_fcdfd :=_ccgb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fcdfd ==nil {_fcdfd =_cee .MakeInteger (0);
};_deab .FirstChar =_fcdfd ;_gffbd ,_cege :=_cee .GetIntVal (_fcdfd );if !_cege {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fcdfd );
return nil ,_cee .ErrTypeError ;};_eaed :=_dae .CharCode (_gffbd );_fcdfd =_ccgb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fcdfd ==nil {_fcdfd =_cee .MakeInteger (255);};_deab .LastChar =_fcdfd ;_gffbd ,_cege =_cee .GetIntVal (_fcdfd );
if !_cege {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fcdfd );return nil ,_cee .ErrTypeError ;
};_abefg :=_dae .CharCode (_gffbd );_deab ._ccfb =make (map[_dae .CharCode ]float64 );_fcdfd =_ccgb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fcdfd !=nil {_deab .Widths =_fcdfd ;_ccddb ,_acega :=_cee .GetArray (_fcdfd );if !_acega {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fcdfd );
return nil ,_cee .ErrTypeError ;};_fcada ,_dbdfd :=_ccddb .ToFloat64Array ();if _dbdfd !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dbdfd ;};if len (_fcada )!=int (_abefg -_eaed +1){_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_abefg -_eaed +1,len (_fcada ));
return nil ,_cee .ErrRangeError ;};for _bcfea ,_cfcab :=range _fcada {_deab ._ccfb [_eaed +_dae .CharCode (_bcfea )]=_cfcab ;};};};_deab .Encoding =_cee .TraceToDirectObject (_ccgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _deab ,nil ;
};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gaaad :=NewPdfOutline ();_gaaad ._afcbg =&_gaaad ;return _gaaad ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// String returns a string describing the font descriptor.
func (_aeec *PdfFontDescriptor )String ()string {var _adec []string ;if _aeec .FontName !=nil {_adec =append (_adec ,_aeec .FontName .String ());};if _aeec .FontFamily !=nil {_adec =append (_adec ,_aeec .FontFamily .String ());};if _aeec .fontFile !=nil {_adec =append (_adec ,_aeec .fontFile .String ());
};if _aeec ._bcga !=nil {_adec =append (_adec ,_aeec ._bcga .String ());};_adec =append (_adec ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_aeec .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ad .Join (_adec ,"\u002c\u0020"));
};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fcff :=PdfColorDeviceRGB {r ,g ,b };return &_fcff ;};func (_bedbf *PdfAcroForm )fillImageWithAppearance (_daea FieldImageProvider ,_fdbed FieldAppearanceGenerator )error {if _bedbf ==nil {return nil ;
};_gagfd ,_dega :=_daea .FieldImageValues ();if _dega !=nil {return _dega ;};for _ ,_dbgba :=range _bedbf .AllFields (){_ddge :=_dbgba .PartialName ();_gcbca ,_dcgdc :=_gagfd [_ddge ];if !_dcgdc {if _baeef ,_gedc :=_dbgba .FullName ();_gedc ==nil {_gcbca ,_dcgdc =_gagfd [_baeef ];
};};if !_dcgdc {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ddge );
continue ;};switch _fbefc :=_dbgba .GetContext ().(type ){case *PdfFieldButton :if _fbefc .IsPush (){_fbefc .SetFillImage (_gcbca );};};if _fdbed ==nil {continue ;};for _ ,_cdaeb :=range _dbgba .Annotations {_cgec ,_dgbgab :=_fdbed .GenerateAppearanceDict (_bedbf ,_dbgba ,_cdaeb );
if _dgbgab !=nil {return _dgbgab ;};_cdaeb .AP =_cgec ;_cdaeb .ToPdfObject ();};};return nil ;};var (_dggagg _d .Mutex ;_aafgb ="";_dddda _gc .Time ;_dgbgaa ="";_dcae ="";_cedfg _gc .Time ;_bdefe ="";_bebae ="";_bcfcc ="";);

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_fbf :=NewPdfAnnotation ();_abd :=&PdfAnnotationWidget {};_abd .PdfAnnotation =_fbf ;_fbf .SetContext (_abd );return _abd ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cee .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_gegg *Image )ConvertToBinary ()error {if _gegg .ColorComponents ==1&&_gegg .BitsPerComponent ==1{return nil ;};_acab ,_eggc :=_gegg .ToGoImage ();if _eggc !=nil {return _eggc ;};_feedba ,_eggc :=_ca .MonochromeConverter .Convert (_acab );if _eggc !=nil {return _eggc ;
};_gegg .Data =_feedba .Base ().Data ;_gegg ._cbfg ,_eggc =_ca .ScaleAlphaToMonochrome (_gegg ._cbfg ,int (_gegg .Width ),int (_gegg .Height ));if _eggc !=nil {return _eggc ;};_gegg .BitsPerComponent =1;_gegg .ColorComponents =1;_gegg ._cabgb =nil ;return nil ;
};func (_cdfef *PdfAcroForm )fill (_agdbd FieldValueProvider ,_bgde FieldAppearanceGenerator )error {if _cdfef ==nil {return nil ;};_bbeg ,_dgeb :=_agdbd .FieldValues ();if _dgeb !=nil {return _dgeb ;};for _ ,_fbcba :=range _cdfef .AllFields (){_cadec :=_fbcba .PartialName ();
_cabef ,_gfegg :=_bbeg [_cadec ];if !_gfegg {if _ecbbb ,_bbcba :=_fbcba .FullName ();_bbcba ==nil {_cabef ,_gfegg =_bbeg [_ecbbb ];};};if !_gfegg {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cadec );
continue ;};if _cffg :=_bbcd (_fbcba ,_cabef );_cffg !=nil {return _cffg ;};if _bgde ==nil {continue ;};for _ ,_ceec :=range _fbcba .Annotations {_gacea ,_fgafe :=_bgde .GenerateAppearanceDict (_cdfef ,_fbcba ,_ceec );if _fgafe !=nil {return _fgafe ;};
_ceec .AP =_gacea ;_ceec .ToPdfObject ();};};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dgcc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// IsColored specifies if the pattern is colored.
func (_ecgbf *PdfTilingPattern )IsColored ()bool {if _ecgbf .PaintType !=nil &&*_ecgbf .PaintType ==1{return true ;};return false ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_feee *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fddbg ,_deed :=color .(*PdfColorDeviceGray );if !_deed {_fca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fddbg ),float64 (*_fddbg ),float64 (*_fddbg )),nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_eeeb *PdfFont )BytesToCharcodes (data []byte )[]_dae .CharCode {_fca .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ddgc ,_cecb :=_eeeb ._bggcf .(*pdfFontType0 );_cecb &&_ddgc ._dcffd !=nil {if _fgdf ,_aefdd :=_ddgc .bytesToCharcodes (data );_aefdd {return _fgdf ;};};var (_cabe =make ([]_dae .CharCode ,0,len (data )+len (data )%2);_afbfg =_eeeb .baseFields (););
if _afbfg ._abcbf !=nil {if _fbcg ,_gdgbe :=_afbfg ._abcbf .BytesToCharcodes (data );_gdgbe {for _ ,_bagc :=range _fbcg {_cabe =append (_cabe ,_dae .CharCode (_bagc ));};return _cabe ;};};if _afbfg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _dfcc :=0;_dfcc < len (data );_dfcc +=2{_agdf :=uint16 (data [_dfcc ])<<8|uint16 (data [_dfcc +1]);_cabe =append (_cabe ,_dae .CharCode (_agdf ));};}else {for _ ,_bcbce :=range data {_cabe =append (_cabe ,_dae .CharCode (_bcbce ));
};};return _cabe ;};

// Reset sets the multi font encoder to its initial state.
func (_edefe *MultipleFontEncoder )Reset (){_edefe .CurrentFont =_edefe ._ecfa [0]};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_dabg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_acfc :=_dabg .actualFont ();if _acfc ==nil {_fca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dabg ._bggcf );
return _ce .CharMetrics {},false ;};if _fbbea ,_cgdgef :=_acfc .GetRuneMetrics (r );_cgdgef {return _fbbea ,true ;};if _bdcb ,_egaf :=_dabg .GetFontDescriptor ();_egaf ==nil &&_bdcb !=nil {return _ce .CharMetrics {Wx :_bdcb ._efacg },true ;};_fca .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dabg );
return _ce .CharMetrics {},false ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fgbd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fgbd .Range };func _gadfef ()string {_dggagg .Lock ();defer _dggagg .Unlock ();return _dcae };

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ddca :=&PdfBorderStyle {};return _ddca };

// SetDirection sets the value of the direction.
func (_fcfdg *ViewerPreferences )SetDirection (direction Direction ){_fcfdg ._gfegc =direction };func _agca (_cecfd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bgea ,_fdeff :=_cee .GetDict (_cecfd .AP );if !_fdeff {return nil ,nil ,_cdf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _bgea ==nil {return nil ,nil ,nil ;};_aadgf ,_fdeff :=_cee .GetArray (_cecfd .Rect );if !_fdeff ||_aadgf .Len ()!=4{return nil ,nil ,_cdf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ccgc ,_eebe :=NewPdfRectangle (*_aadgf );
if _eebe !=nil {return nil ,nil ,_eebe ;};_ceff :=_cee .TraceToDirectObject (_bgea .Get ("\u004e"));switch _efaeg :=_ceff .(type ){case *_cee .PdfObjectStream :_fabe :=_efaeg ;_fgeeb ,_bagfa :=NewXObjectFormFromStream (_fabe );return _fgeeb ,_ccgc ,_bagfa ;
case *_cee .PdfObjectDictionary :_cfab :=_efaeg ;if _cfab ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _cebce _cee .PdfObject ;_geccd ,_ffed :=_cee .GetName (_cecfd .AS );if _ffed {_cebce =_cfab .Get (*_geccd );}else {_abgb :=_cecfd ._eddc .PdfObject .(*_cee .PdfObjectDictionary );if _abgb ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _gbddf :=_abgb .Get ("\u0056");_gbddf !=nil {_cebce =_cfab .Get (_cee .PdfObjectName (_gbddf .String ()));};};if _cebce ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_gcda ,_ffed :=_cee .GetStream (_cebce );if !_ffed {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_geccd );
return nil ,nil ,_cdf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_acggb ,_acfff :=NewXObjectFormFromStream (_gcda );return _acggb ,_ccgc ,_acfff ;};_fca .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ceff );
return nil ,nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_edfgf *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_eggbf :=_edfgf ._ffdgf .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _eggbf {return nil ,_cdf .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_eggbf {return _edfgf ,nil ;};if _edfgf ._befca [revisionNumber ]!=nil {return _edfgf ._befca [revisionNumber ],nil ;};_dbbaa :=_edfgf ;for _ceda :=_eggbf -1;_ceda >=revisionNumber ;_ceda --{_dgfdb ,_cdafeb :=_dbbaa .GetPreviousRevision ();
if _cdafeb !=nil {return nil ,_cdafeb ;};_edfgf ._befca [_ceda ]=_dgfdb ;_dbbaa =_dgfdb ;};return _dbbaa ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dfgg pdfCIDFontType2 )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){_ecdgg ,_bcda :=_dfgg ._abdc [r ];if !_bcda {_aabd ,_ebgb :=_cee .GetInt (_dfgg .DW );if !_ebgb {return _ce .CharMetrics {},false ;};_ecdgg =int (*_aabd );};return _ce .CharMetrics {Wx :float64 (_ecdgg )},true ;
};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_decg :=&PdfAnnotation {};_decg ._eddc =_cee .MakeIndirectObject (_cee .MakeDict ());return _decg ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_cgccc *PdfReader )GetRevisionNumber ()int {return _cgccc ._ffdgf .GetRevisionNumber ()};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_cee .PdfObjectString ;Q *_cee .PdfObjectInteger ;DS *_cee .PdfObjectString ;RV _cee .PdfObject ;};func _dffed (_fcffgd _cee .PdfObject )(string ,error ){_fcffgd =_cee .TraceToDirectObject (_fcffgd );switch _affc :=_fcffgd .(type ){case *_cee .PdfObjectString :return _affc .Str (),nil ;
case *_cee .PdfObjectStream :_dbga ,_agdbb :=_cee .DecodeStream (_affc );if _agdbb !=nil {return "",_agdbb ;};return string (_dbga ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fcffgd );
};func _bbeb (_cede *_cee .PdfObjectDictionary ,_dggb *fontCommon )(*pdfCIDFontType2 ,error ){if _dggb ._ccdeg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dggb );
return nil ,_cee .ErrRangeError ;};_cgbea :=_cdba (_dggb );_bggda ,_dagae :=_cee .GetDict (_cede .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dagae {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dggb );
return nil ,ErrRequiredAttributeMissing ;};_cgbea .CIDSystemInfo =_bggda ;_cgbea .DW =_cede .Get ("\u0044\u0057");_cgbea .W =_cede .Get ("\u0057");_cgbea .DW2 =_cede .Get ("\u0044\u0057\u0032");_cgbea .W2 =_cede .Get ("\u0057\u0032");_cgbea .CIDToGIDMap =_cede .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cgbea ._dfae =1000.0;if _geadf ,_cfaaf :=_cee .GetNumberAsFloat (_cgbea .DW );_cfaaf ==nil {_cgbea ._dfae =_geadf ;};_facdg ,_dbaf :=_fceag (_cgbea .W );if _dbaf !=nil {return nil ,_dbaf ;};if _facdg ==nil {_facdg =map[_dae .CharCode ]float64 {};};_cgbea ._dbffc =_facdg ;
return _cgbea ,nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bgabf *PdfPageResources )SetColorspaceByName (keyName _cee .PdfObjectName ,cs PdfColorspace )error {_degc ,_dddeaf :=_bgabf .GetColorspaces ();if _dddeaf !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dddeaf );
return _dddeaf ;};if _degc ==nil {_degc =NewPdfPageResourcesColorspaces ();_bgabf .SetColorSpace (_degc );};_degc .Set (keyName ,cs );return nil ;};func (_facdf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// ToPdfObject implements interface PdfModel.
func (_dcd *PdfAnnotationSquiggly )ToPdfObject ()_cee .PdfObject {_dcd .PdfAnnotation .ToPdfObject ();_dgba :=_dcd ._eddc ;_dfec :=_dgba .PdfObject .(*_cee .PdfObjectDictionary );_dcd .PdfAnnotationMarkup .appendToPdfDictionary (_dfec );_dfec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_dfec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcd .QuadPoints );return _dgba ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// B returns the value of the B component of the color.
func (_feadd *PdfColorCalRGB )B ()float64 {return _feadd [1]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_edcg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfdad ,_abcb :=_cee .GetNumbersAsFloat (objects );
if _abcb !=nil {return nil ,_abcb ;};return _edcg .ColorFromFloats (_bfdad );};

// AddOutlineTree adds outlines to a PDF file.
func (_debbd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_debbd ._fecge =outlineTree };

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cee .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dfgac *_cee .PdfIndirectObject ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cfdd *PdfField )GetContainingPdfObject ()_cee .PdfObject {return _cfdd ._ccbb };

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_ebd *PdfReader )newPdfActionFromIndirectObject (_fcb *_cee .PdfIndirectObject )(*PdfAction ,error ){_acbc ,_bbcc :=_fcb .PdfObject .(*_cee .PdfObjectDictionary );if !_bbcc {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ebd ._fcgbe .GetModelFromPrimitive (_acbc );model !=nil {_aaeb ,_gea :=model .(*PdfAction );if !_gea {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _aaeb ,nil ;};_gac :=&PdfAction {};_gac ._gaf =_fcb ;_ebd ._fcgbe .Register (_acbc ,_gac );if _dbf :=_acbc .Get ("\u0054\u0079\u0070\u0065");_dbf !=nil {_bacf ,_gbf :=_dbf .(*_cee .PdfObjectName );if !_gbf {_fca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dbf );
}else {if *_bacf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fca .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bacf );
};_gac .Type =_bacf ;};};if _fea :=_acbc .Get ("\u004e\u0065\u0078\u0074");_fea !=nil {_gac .Next =_fea ;};if _ebdf :=_acbc .Get ("\u0053");_ebdf !=nil {_gac .S =_ebdf ;};_cce ,_fefb :=_gac .S .(*_cee .PdfObjectName );if !_fefb {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gac .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gac .S );};_ggf :=PdfActionType (_cce .String ());
switch _ggf {case ActionTypeGoTo :_add ,_agg :=_ebd .newPdfActionGotoFromDict (_acbc );if _agg !=nil {return nil ,_agg ;};_add .PdfAction =_gac ;_gac ._afe =_add ;return _gac ,nil ;case ActionTypeGoToR :_cfb ,_edgg :=_ebd .newPdfActionGotoRFromDict (_acbc );
if _edgg !=nil {return nil ,_edgg ;};_cfb .PdfAction =_gac ;_gac ._afe =_cfb ;return _gac ,nil ;case ActionTypeGoToE :_bgda ,_fgf :=_ebd .newPdfActionGotoEFromDict (_acbc );if _fgf !=nil {return nil ,_fgf ;};_bgda .PdfAction =_gac ;_gac ._afe =_bgda ;return _gac ,nil ;
case ActionTypeLaunch :_ddc ,_fgb :=_ebd .newPdfActionLaunchFromDict (_acbc );if _fgb !=nil {return nil ,_fgb ;};_ddc .PdfAction =_gac ;_gac ._afe =_ddc ;return _gac ,nil ;case ActionTypeThread :_eab ,_eac :=_ebd .newPdfActionThreadFromDict (_acbc );if _eac !=nil {return nil ,_eac ;
};_eab .PdfAction =_gac ;_gac ._afe =_eab ;return _gac ,nil ;case ActionTypeURI :_gaa ,_eeec :=_ebd .newPdfActionURIFromDict (_acbc );if _eeec !=nil {return nil ,_eeec ;};_gaa .PdfAction =_gac ;_gac ._afe =_gaa ;return _gac ,nil ;case ActionTypeSound :_ffd ,_gaff :=_ebd .newPdfActionSoundFromDict (_acbc );
if _gaff !=nil {return nil ,_gaff ;};_ffd .PdfAction =_gac ;_gac ._afe =_ffd ;return _gac ,nil ;case ActionTypeMovie :_gcee ,_gff :=_ebd .newPdfActionMovieFromDict (_acbc );if _gff !=nil {return nil ,_gff ;};_gcee .PdfAction =_gac ;_gac ._afe =_gcee ;return _gac ,nil ;
case ActionTypeHide :_cdc ,_fge :=_ebd .newPdfActionHideFromDict (_acbc );if _fge !=nil {return nil ,_fge ;};_cdc .PdfAction =_gac ;_gac ._afe =_cdc ;return _gac ,nil ;case ActionTypeNamed :_dgc ,_afcf :=_ebd .newPdfActionNamedFromDict (_acbc );if _afcf !=nil {return nil ,_afcf ;
};_dgc .PdfAction =_gac ;_gac ._afe =_dgc ;return _gac ,nil ;case ActionTypeSubmitForm :_eeg ,_gfe :=_ebd .newPdfActionSubmitFormFromDict (_acbc );if _gfe !=nil {return nil ,_gfe ;};_eeg .PdfAction =_gac ;_gac ._afe =_eeg ;return _gac ,nil ;case ActionTypeResetForm :_afd ,_dde :=_ebd .newPdfActionResetFormFromDict (_acbc );
if _dde !=nil {return nil ,_dde ;};_afd .PdfAction =_gac ;_gac ._afe =_afd ;return _gac ,nil ;case ActionTypeImportData :_dga ,_adgc :=_ebd .newPdfActionImportDataFromDict (_acbc );if _adgc !=nil {return nil ,_adgc ;};_dga .PdfAction =_gac ;_gac ._afe =_dga ;
return _gac ,nil ;case ActionTypeSetOCGState :_fcc ,_cgd :=_ebd .newPdfActionSetOCGStateFromDict (_acbc );if _cgd !=nil {return nil ,_cgd ;};_fcc .PdfAction =_gac ;_gac ._afe =_fcc ;return _gac ,nil ;case ActionTypeRendition :_edc ,_gdf :=_ebd .newPdfActionRenditionFromDict (_acbc );
if _gdf !=nil {return nil ,_gdf ;};_edc .PdfAction =_gac ;_gac ._afe =_edc ;return _gac ,nil ;case ActionTypeTrans :_dfa ,_dca :=_ebd .newPdfActionTransFromDict (_acbc );if _dca !=nil {return nil ,_dca ;};_dfa .PdfAction =_gac ;_gac ._afe =_dfa ;return _gac ,nil ;
case ActionTypeGoTo3DView :_gbfg ,_efa :=_ebd .newPdfActionGoTo3DViewFromDict (_acbc );if _efa !=nil {return nil ,_efa ;};_gbfg .PdfAction =_gac ;_gac ._afe =_gbfg ;return _gac ,nil ;case ActionTypeJavaScript :_eege ,_gcf :=_ebd .newPdfActionJavaScriptFromDict (_acbc );
if _gcf !=nil {return nil ,_gcf ;};_eege .PdfAction =_gac ;_gac ._afe =_eege ;return _gac ,nil ;};_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ggf );
return nil ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fc .ReadSeeker )(*PdfReader ,error ){const _aeede ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _agfga (rs ,&ReaderOpts {LazyLoad :true },false ,_aeede );
};

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfActionResetForm )ToPdfObject ()_cee .PdfObject {_bdg .PdfAction .ToPdfObject ();_gbd :=_bdg ._gaf ;_ege :=_gbd .PdfObject .(*_cee .PdfObjectDictionary );_ege .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeResetForm )));_ege .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bdg .Fields );
_ege .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bdg .Flags );return _gbd ;};

// Add appends an outline item as a child of the current outline item.
func (_ccab *OutlineItem )Add (item *OutlineItem ){_ccab .Entries =append (_ccab .Entries ,item )};func _fddc ()*Names {return &Names {_fggag :_cee .MakeIndirectObject (_cee .MakeDict ())}};

// Register registers (caches) a model to primitive object relationship.
func (_efad *modelManager )Register (primitive _cee .PdfObject ,model PdfModel ){_efad ._gfdc [model ]=primitive ;_efad ._gdbbg [primitive ]=model ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cee .PdfObject ;B _cee .PdfObject ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};func (_aedd *pdfFontSimple )baseFields ()*fontCommon {return &_aedd .fontCommon };

// GetContainingPdfObject implements interface PdfModel.
func (_dgbg *PdfAnnotation )GetContainingPdfObject ()_cee .PdfObject {return _dgbg ._eddc };

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cefc *PdfField )IsTerminal ()bool {return len (_cefc .Kids )==0};func (_daaa *PdfReader )newPdfActionThreadFromDict (_eddb *_cee .PdfObjectDictionary )(*PdfActionThread ,error ){_bdd ,_ccf :=_daf (_eddb .Get ("\u0046"));if _ccf !=nil {return nil ,_ccf ;
};return &PdfActionThread {D :_eddb .Get ("\u0044"),B :_eddb .Get ("\u0042"),F :_bdd },nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_efbac *XObjectImage )ToImage ()(*Image ,error ){_bbcga :=&Image {};if _efbac .Height ==nil {return nil ,_cdf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bbcga .Height =*_efbac .Height ;if _efbac .Width ==nil {return nil ,_cdf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bbcga .Width =*_efbac .Width ;if _efbac .BitsPerComponent ==nil {switch _efbac .Filter .(type ){case *_cee .CCITTFaxEncoder ,*_cee .JBIG2Encoder :_bbcga .BitsPerComponent =1;
case *_cee .LZWEncoder ,*_cee .RunLengthEncoder :_bbcga .BitsPerComponent =8;default:return nil ,_cdf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bbcga .BitsPerComponent =*_efbac .BitsPerComponent ;};_bbcga .ColorComponents =_efbac .ColorSpace .GetNumComponents ();_efbac ._fggac .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cee .MakeInteger (int64 (_bbcga .ColorComponents )));
_ccabcg ,_geaeg :=_cee .DecodeStream (_efbac ._fggac );if _geaeg !=nil {return nil ,_geaeg ;};_bbcga .Data =_ccabcg ;if _efbac .Decode !=nil {_dfgcg ,_bfbgf :=_efbac .Decode .(*_cee .PdfObjectArray );if !_bfbgf {_fca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cdf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_dccbb ,_gadab :=_dfgcg .ToFloat64Array ();if _gadab !=nil {return nil ,_gadab ;};switch _efbac .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_bced :=_efbac .ColorSpace .DecodeArray ();
if _bced [0]==_dccbb [0]&&_bced [1]==_dccbb [1]&&_bced [2]==_dccbb [2]&&_bced [3]==_dccbb [3]{_bbcga ._cabgb =_dccbb ;};default:_bbcga ._cabgb =_dccbb ;};};return _bbcga ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_efdcbf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bcad :=func (_cdef float64 )float64 {if _cdef >=6.0/29{return _cdef *_cdef *_cdef ;};return 108.0/841*(_cdef -4.0/29.0);};_dfb :=img ._cabgb ;if len (_dfb )!=6{_fca .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dfb =_efdcbf .DecodeArray ();};_dgffe :=_ag .NewReader (img .getBase ());_fgfbb :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cbfg ,img ._cabgb );_defaa :=_ag .NewWriter (_fgfbb );_eegg :=_aaa .Pow (2,float64 (img .BitsPerComponent ))-1;
_feab :=make ([]uint32 ,3);var (_bgba error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ccdf ,_aeef ,_acffd float64 ;);for {_bgba =_dgffe .ReadSamples (_feab );if _bgba ==_fc .EOF {break ;}else if _bgba !=nil {return img ,_bgba ;};Ls =float64 (_feab [0])/_eegg ;As =float64 (_feab [1])/_eegg ;
Bs =float64 (_feab [2])/_eegg ;Ls =_ca .LinearInterpolate (Ls ,0.0,1.0,_dfb [0],_dfb [1]);As =_ca .LinearInterpolate (As ,0.0,1.0,_dfb [2],_dfb [3]);Bs =_ca .LinearInterpolate (Bs ,0.0,1.0,_dfb [4],_dfb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;
X =_efdcbf .WhitePoint [0]*_bcad (L );Y =_efdcbf .WhitePoint [1]*_bcad (M );Z =_efdcbf .WhitePoint [2]*_bcad (N );_ccdf =3.240479*X +-1.537150*Y +-0.498535*Z ;_aeef =-0.969256*X +1.875992*Y +0.041556*Z ;_acffd =0.055648*X +-0.204043*Y +1.057311*Z ;_ccdf =_aaa .Min (_aaa .Max (_ccdf ,0),1.0);
_aeef =_aaa .Min (_aaa .Max (_aeef ,0),1.0);_acffd =_aaa .Min (_aaa .Max (_acffd ,0),1.0);_feab [0]=uint32 (_ccdf *_eegg );_feab [1]=uint32 (_aeef *_eegg );_feab [2]=uint32 (_acffd *_eegg );if _bgba =_defaa .WriteSamples (_feab );_bgba !=nil {return img ,_bgba ;
};};return _acecd (&_fgfbb ),nil ;};func (_fdb *PdfReader )newPdfActionLaunchFromDict (_ggc *_cee .PdfObjectDictionary )(*PdfActionLaunch ,error ){_egf ,_gbdc :=_daf (_ggc .Get ("\u0046"));if _gbdc !=nil {return nil ,_gbdc ;};return &PdfActionLaunch {Win :_ggc .Get ("\u0057\u0069\u006e"),Mac :_ggc .Get ("\u004d\u0061\u0063"),Unix :_ggc .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ggc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_egf },nil ;
};

// RemovePage removes a page by number.
func (_ecdg *PdfAppender )RemovePage (pageNum int ){_cggeg :=pageNum -1;_ecdg ._afca =append (_ecdg ._afca [0:_cggeg ],_ecdg ._afca [pageNum :]...);};

// A returns the value of the A component of the color.
func (_cfdeg *PdfColorCalRGB )A ()float64 {return _cfdeg [0]};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cee .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cee .PdfObject ;A _cee .PdfObject ;SE _cee .PdfObject ;C _cee .PdfObject ;F _cee .PdfObject ;
_bfcbc *_cee .PdfIndirectObject ;};func (_abag *PdfReader )newPdfAnnotationSoundFromDict (_gccg *_cee .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fecaf :=PdfAnnotationSound {};_efbf ,_dacf :=_abag .newPdfAnnotationMarkupFromDict (_gccg );if _dacf !=nil {return nil ,_dacf ;
};_fecaf .PdfAnnotationMarkup =_efbf ;_fecaf .Name =_gccg .Get ("\u004e\u0061\u006d\u0065");_fecaf .Sound =_gccg .Get ("\u0053\u006f\u0075n\u0064");return &_fecaf ,nil ;};func (_caa *PdfReader )newPdfAnnotationLineFromDict (_gae *_cee .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_ddd :=PdfAnnotationLine {};
_daca ,_dbe :=_caa .newPdfAnnotationMarkupFromDict (_gae );if _dbe !=nil {return nil ,_dbe ;};_ddd .PdfAnnotationMarkup =_daca ;_ddd .L =_gae .Get ("\u004c");_ddd .BS =_gae .Get ("\u0042\u0053");_ddd .LE =_gae .Get ("\u004c\u0045");_ddd .IC =_gae .Get ("\u0049\u0043");
_ddd .LL =_gae .Get ("\u004c\u004c");_ddd .LLE =_gae .Get ("\u004c\u004c\u0045");_ddd .Cap =_gae .Get ("\u0043\u0061\u0070");_ddd .IT =_gae .Get ("\u0049\u0054");_ddd .LLO =_gae .Get ("\u004c\u004c\u004f");_ddd .CP =_gae .Get ("\u0043\u0050");_ddd .Measure =_gae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_ddd .CO =_gae .Get ("\u0043\u004f");return &_ddd ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _fc .ReadSeeker )(*CompliancePdfReader ,error ){const _ffac ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_cfgfd ,_bedgg :=_agfga (rs ,&ReaderOpts {ComplianceMode :true },false ,_ffac );
if _bedgg !=nil {return nil ,_bedgg ;};return &CompliancePdfReader {PdfReader :_cfgfd },nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cfff *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fca .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fca .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fca .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fca .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bfbb ,_cadb :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbfg ,img ._cabgb );if _cadb !=nil {return Image {},_cadb ;};_ggba ,_cadb :=_ca .NRGBAConverter .Convert (_bfbb );if _cadb !=nil {return Image {},_cadb ;
};return _acecd (_ggba .Base ()),nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cf :=&PdfAction {};_cf ._gaf =_cee .MakeIndirectObject (_cee .MakeDict ());return _cf ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_cebb :=&PdfAppender {_dege :reader ._cadbb ,Reader :reader ,_cbdb :reader ._ffdgf ,_gabb :reader ._efaec };_gebb ,_ede :=_cebb ._dege .Seek (0,_fc .SeekEnd );
if _ede !=nil {return nil ,_ede ;};_cebb ._gbcc =_gebb ;if _ ,_ede =_cebb ._dege .Seek (0,_fc .SeekStart );_ede !=nil {return nil ,_ede ;};_cebb ._ebdd ,_ede =NewPdfReaderWithOpts (_cebb ._dege ,opts );if _ede !=nil {return nil ,_ede ;};for _ ,_dbeg :=range _cebb .Reader .GetObjectNums (){if _cebb ._cdbef < _dbeg {_cebb ._cdbef =_dbeg ;
};};_cebb ._beg =_cebb ._cbdb .GetXrefTable ();_cebb ._aaf =_cebb ._cbdb .GetXrefOffset ();_cebb ._afca =append (_cebb ._afca ,_cebb ._ebdd .PageList ...);_cebb ._efdc =make (map[_cee .PdfObject ]struct{});_cebb ._edae =make (map[_cee .PdfObject ]int64 );
_cebb ._abda =make (map[_cee .PdfObject ]struct{});_cebb ._ceed =_cebb ._ebdd .AcroForm ;_cebb ._ccee =_cebb ._ebdd .DSS ;if opts !=nil {_cebb ._cbac =opts .Password ;};if encryptOptions !=nil {_cebb ._beb =encryptOptions ;};return _cebb ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_dfeab *XObjectForm )SetContentStream (content []byte ,encoder _cee .StreamEncoder )error {_baaf :=content ;if encoder ==nil {if _dfeab .Filter !=nil {encoder =_dfeab .Filter ;}else {encoder =_cee .NewRawEncoder ();};};_fddgd ,_ddfd :=encoder .EncodeBytes (_baaf );
if _ddfd !=nil {return _ddfd ;};_baaf =_fddgd ;_dfeab .Stream =_baaf ;_dfeab .Filter =encoder ;return nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cee .PdfObject ;Sy _cee .PdfObject ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bebaf *PdfWriter )SetOptimizer (optimizer Optimizer ){_bebaf ._ecgef =optimizer };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func _feceb (_gdgbf *PdfField ,_dbac _cee .PdfObject ){for _ ,_dedd :=range _gdgbf .Annotations {_dedd .AS =_dbac ;_dedd .ToPdfObject ();};};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cee .PdfObject ;Name _cee .PdfObject ;};func (_fcbge fontCommon )isCIDFont ()bool {if _fcbge ._ccdeg ==""{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcbge );
};_bdcad :=false ;switch _fcbge ._ccdeg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bdcad =true ;};_fca .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bdcad ,_fcbge );
return _bdcad ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_cecdc *ViewerPreferences )IsHideToolbar ()bool {if _cecdc ._bfff ==nil {return false ;};return *_cecdc ._bfff ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gd :=NewPdfAction ();_gge :=&PdfActionHide {};_gge .PdfAction =_gd ;_gd .SetContext (_gge );return _gge ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ddffd *PdfReader )GetCatalogStructTreeRoot ()(_cee .PdfObject ,bool ){_cffcc :=_cee .ResolveReference (_ddffd ._cacfe .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _cffcc ==nil {return nil ,false ;};
if !_ddffd ._dbfb {_cceab :=_ddffd .traverseObjectData (_cffcc );if _cceab !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_cceab );
return nil ,false ;};};return _cffcc ,true ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_fefbc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_bbcbf :=RC4_128bit ;if options !=nil {_bbcbf =options .Algorithm ;};_ggcgb :=_ba .PermOwner ;if options !=nil {_ggcgb =options .Permissions ;};var _cfagc _dad .Filter ;
switch _bbcbf {case RC4_128bit :_cfagc =_dad .NewFilterV2 (16);case AES_128bit :_cfagc =_dad .NewFilterAESV2 ();case AES_256bit :_cfagc =_dad .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_cebdf ,_aeacf ,_bfgff :=_cee .PdfCryptNewEncrypt (_cfagc ,userPass ,ownerPass ,_ggcgb );if _bfgff !=nil {return _bfgff ;};_fefbc ._ddafb =_cebdf ;if _aeacf .Major !=0{_fefbc .SetVersion (_aeacf .Major ,_aeacf .Minor );};_fefbc ._ggfgf =_aeacf .Encrypt ;
_fefbc ._dfea ,_fefbc ._bcggd =_aeacf .ID0 ,_aeacf .ID1 ;_aaffd :=_cee .MakeIndirectObject (_aeacf .Encrypt );_fefbc ._bbfag =_aaffd ;_fefbc .addObject (_aaffd );return nil ;};

// Write writes out the PDF.
func (_effca *PdfWriter )Write (writer _fc .Writer )error {_fca .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _bagca ,_adadda :=writer .(*_fef .File );_adadda {_effca .SetFileName (_bagca .Name ());};_cgebd :=_effca .checkLicense ();if _cgebd !=nil {return _cgebd ;
};if _cgebd =_effca .writeOutlines ();_cgebd !=nil {return _cgebd ;};if _cgebd =_effca .writeAcroFormFields ();_cgebd !=nil {return _cgebd ;};if _cgebd =_effca .writeNamesDictionary ();_cgebd !=nil {return _cgebd ;};_effca .checkPendingObjects ();if _cgebd =_effca .writeOutputIntents ();
_cgebd !=nil {return _cgebd ;};_effca .setCatalogVersion ();_effca .copyObjects ();if _cgebd =_effca .optimize ();_cgebd !=nil {return _cgebd ;};if _cgebd =_effca .optimizeDocument ();_cgebd !=nil {return _cgebd ;};var _aafac _ea .Hash ;if _effca ._dabaf {_aafac =_ga .New ();
writer =_fc .MultiWriter (_aafac ,writer );};_effca .setWriter (writer );_bgfa :=_effca .checkCrossReferenceStream ();_cfbad ,_bgfa :=_effca .mapObjectStreams (_bgfa );_effca .adjustXRefAffectedVersion (_bgfa );_effca .writeDocumentVersion ();_effca .updateObjectNumbers ();
_effca .writeObjects ();if _cgebd =_effca .writeObjectsInStreams (_cfbad );_cgebd !=nil {return _cgebd ;};_afcfg :=_effca ._gfee ;var _gdfgcb int ;for _facdfg :=range _effca ._gceegb {if _facdfg > _gdfgcb {_gdfgcb =_facdfg ;};};if _effca ._dabaf {if _cgebd =_effca .setHashIDs (_aafac );
_cgebd !=nil {return _cgebd ;};};if _bgfa {if _cgebd =_effca .writeXRefStreams (_gdfgcb ,_afcfg );_cgebd !=nil {return _cgebd ;};}else {_effca .writeTrailer (_gdfgcb );};_effca .makeOffSetReference (_afcfg );if _cgebd =_effca .flushWriter ();_cgebd !=nil {return _cgebd ;
};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fage *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdeg :=vals [0];_dfdde :=[]float64 {_gdeg };_adfd ,_eacge :=_fage .TintTransform .Evaluate (_dfdde );
if _eacge !=nil {_fca .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_eacge );_fca .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fage .TintTransform );
return nil ,_eacge ;};_fca .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_adfd ,_fage .AlternateSpace );
_cagd ,_eacge :=_fage .AlternateSpace .ColorFromFloats (_adfd );if _eacge !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_eacge );
return nil ,_eacge ;};return _cagd ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_eece DefaultImageHandler )NewGrayImageFromGoImage (goimg _bg .Image )(*Image ,error ){_aggaa :=goimg .Bounds ();_dcecc :=&Image {Width :int64 (_aggaa .Dx ()),Height :int64 (_aggaa .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dfaeg :=goimg .(type ){case *_bg .Gray :if len (_dfaeg .Pix )!=_aggaa .Dx ()*_aggaa .Dy (){_gbeaa ,_ecac :=_ca .GrayConverter .Convert (goimg );
if _ecac !=nil {return nil ,_ecac ;};_dcecc .Data =_gbeaa .Pix ();}else {_dcecc .Data =_dfaeg .Pix ;};case *_bg .Gray16 :_dcecc .BitsPerComponent =16;if len (_dfaeg .Pix )!=_aggaa .Dx ()*_aggaa .Dy ()*2{_ffeba ,_feff :=_ca .Gray16Converter .Convert (goimg );
if _feff !=nil {return nil ,_feff ;};_dcecc .Data =_ffeba .Pix ();}else {_dcecc .Data =_dfaeg .Pix ;};case _ca .Image :_ddcef :=_dfaeg .Base ();if _ddcef .ColorComponents ==1{_dcecc .BitsPerComponent =int64 (_ddcef .BitsPerComponent );_dcecc .Data =_ddcef .Data ;
return _dcecc ,nil ;};_ebgad ,_fbdce :=_ca .GrayConverter .Convert (goimg );if _fbdce !=nil {return nil ,_fbdce ;};_dcecc .Data =_ebgad .Pix ();default:_cgdf ,_bbcdf :=_ca .GrayConverter .Convert (goimg );if _bbcdf !=nil {return nil ,_bbcdf ;};_dcecc .Data =_cgdf .Pix ();
};return _dcecc ,nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_egfdga *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_ecdfb :=NewPdfOutlineItem ();_ecdfb .Title =_cee .MakeEncodedString (_egfdga .Title ,true );_ecdfb .Dest =_egfdga .Dest .ToPdfObject ();var _dgdg []*PdfOutlineItem ;var _cccba int64 ;
var _egcfa *PdfOutlineItem ;for _ ,_becb :=range _egfdga .Entries {_eacd ,_decef :=_becb .ToPdfOutlineItem ();_eacd .Parent =&_ecdfb .PdfOutlineTreeNode ;if _egcfa !=nil {_egcfa .Next =&_eacd .PdfOutlineTreeNode ;_eacd .Prev =&_egcfa .PdfOutlineTreeNode ;
};_dgdg =append (_dgdg ,_eacd );_cccba +=_decef ;_egcfa =_eacd ;};_ffgge :=len (_dgdg );_cccba +=int64 (_ffgge );if _ffgge > 0{_ecdfb .First =&_dgdg [0].PdfOutlineTreeNode ;_ecdfb .Last =&_dgdg [_ffgge -1].PdfOutlineTreeNode ;_ecdfb .Count =&_cccba ;};
return _ecdfb ,_cccba ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fdgbg *PdfPageResources )HasXObjectByName (keyName _cee .PdfObjectName )bool {_fcdcb ,_ :=_fdgbg .GetXObjectByName (keyName );return _fcdcb !=nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cee .PdfObjectStream )(*XObjectForm ,error ){_fggcg :=&XObjectForm {};_fggcg ._fbged =stream ;_bccad :=*(stream .PdfObjectDictionary );_aabcfb ,_fbfega :=_cee .NewEncoderFromStream (stream );if _fbfega !=nil {return nil ,_fbfega ;
};_fggcg .Filter =_aabcfb ;if _cfdgd :=_bccad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfdgd !=nil {_eagge ,_dgefa :=_cfdgd .(*_cee .PdfObjectName );if !_dgefa {return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_eagge !="\u0046\u006f\u0072\u006d"{_fca .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _agggeg :=_bccad .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_agggeg !=nil {_fggcg .FormType =_agggeg ;};if _efdfgc :=_bccad .Get ("\u0042\u0042\u006f\u0078");_efdfgc !=nil {_fggcg .BBox =_efdfgc ;};if _feba :=_bccad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_feba !=nil {_fggcg .Matrix =_feba ;};if _abbgd :=_bccad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_abbgd !=nil {_abbgd =_cee .TraceToDirectObject (_abbgd );_dbdde ,_bcfce :=_abbgd .(*_cee .PdfObjectDictionary );if !_bcfce {_fca .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cee .ErrTypeError ;};_fccf ,_ddgd :=NewPdfPageResourcesFromDict (_dbdde );if _ddgd !=nil {_fca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_ddgd ;};_fggcg .Resources =_fccf ;_fca .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fggcg .Resources );};_fggcg .Group =_bccad .Get ("\u0047\u0072\u006fu\u0070");_fggcg .Ref =_bccad .Get ("\u0052\u0065\u0066");
_fggcg .MetaData =_bccad .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fggcg .PieceInfo =_bccad .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fggcg .LastModified =_bccad .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_fggcg .StructParent =_bccad .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fggcg .StructParents =_bccad .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fggcg .OPI =_bccad .Get ("\u004f\u0050\u0049");
_fggcg .OC =_bccad .Get ("\u004f\u0043");_fggcg .Name =_bccad .Get ("\u004e\u0061\u006d\u0065");_fggcg .Stream =stream .Stream ;return _fggcg ,nil ;};func (_ggcdc *PdfShading )getShadingDict ()(*_cee .PdfObjectDictionary ,error ){_aacd :=_ggcdc ._dfgbe ;
if _fffce ,_gegc :=_aacd .(*_cee .PdfIndirectObject );_gegc {_fgceb ,_agggg :=_fffce .PdfObject .(*_cee .PdfObjectDictionary );if !_agggg {return nil ,_cee .ErrTypeError ;};return _fgceb ,nil ;}else if _gaaf ,_cbbfe :=_aacd .(*_cee .PdfObjectStream );_cbbfe {return _gaaf .PdfObjectDictionary ,nil ;
}else if _ffcae ,_dfde :=_aacd .(*_cee .PdfObjectDictionary );_dfde {return _ffcae ,nil ;}else {_fca .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_cee .ErrTypeError ;};};func (_abacg *PdfWriter )setHashIDs (_feffa _ea .Hash )error {_dcaaa :=_feffa .Sum (nil );if _abacg ._dfea ==""{_abacg ._dfea =_aa .EncodeToString (_dcaaa [:8]);};_abacg .setDocumentIDs (_abacg ._dfea ,_aa .EncodeToString (_dcaaa [8:]));
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgae *PdfAnnotationPolygon )ToPdfObject ()_cee .PdfObject {_dgae .PdfAnnotation .ToPdfObject ();_bcdg :=_dgae ._eddc ;_bfec :=_bcdg .PdfObject .(*_cee .PdfObjectDictionary );_dgae .PdfAnnotationMarkup .appendToPdfDictionary (_bfec );_bfec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bfec .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dgae .Vertices );_bfec .SetIfNotNil ("\u004c\u0045",_dgae .LE );_bfec .SetIfNotNil ("\u0042\u0053",_dgae .BS );_bfec .SetIfNotNil ("\u0049\u0043",_dgae .IC );_bfec .SetIfNotNil ("\u0042\u0045",_dgae .BE );
_bfec .SetIfNotNil ("\u0049\u0054",_dgae .IT );_bfec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dgae .Measure );return _bcdg ;};func _aagg (_aff *PdfPage )map[_cee .PdfObjectName ]_cee .PdfObject {_bacfb :=make (map[_cee .PdfObjectName ]_cee .PdfObject );
if _aff .Resources ==nil {return _bacfb ;};if _aff .Resources .Font !=nil {if _dfeb ,_gebe :=_cee .GetDict (_aff .Resources .Font );_gebe {for _ ,_bfecg :=range _dfeb .Keys (){_bacfb [_bfecg ]=_dfeb .Get (_bfecg );};};};if _aff .Resources .ExtGState !=nil {if _dcb ,_gfcd :=_cee .GetDict (_aff .Resources .ExtGState );
_gfcd {for _ ,_cgcb :=range _dcb .Keys (){_bacfb [_cgcb ]=_dcb .Get (_cgcb );};};};if _aff .Resources .XObject !=nil {if _dada ,_gecg :=_cee .GetDict (_aff .Resources .XObject );_gecg {for _ ,_fbea :=range _dada .Keys (){_bacfb [_fbea ]=_dada .Get (_fbea );
};};};if _aff .Resources .Pattern !=nil {if _bfd ,_ebce :=_cee .GetDict (_aff .Resources .Pattern );_ebce {for _ ,_bdbg :=range _bfd .Keys (){_bacfb [_bdbg ]=_bfd .Get (_bdbg );};};};if _aff .Resources .Shading !=nil {if _abebf ,_baae :=_cee .GetDict (_aff .Resources .Shading );
_baae {for _ ,_ccbcf :=range _abebf .Keys (){_bacfb [_ccbcf ]=_abebf .Get (_ccbcf );};};};if _aff .Resources .ProcSet !=nil {if _decgb ,_ecae :=_cee .GetDict (_aff .Resources .ProcSet );_ecae {for _ ,_edf :=range _decgb .Keys (){_bacfb [_edf ]=_decgb .Get (_edf );
};};};if _aff .Resources .Properties !=nil {if _eeb ,_bfa :=_cee .GetDict (_aff .Resources .Properties );_bfa {for _ ,_fgcf :=range _eeb .Keys (){_bacfb [_fgcf ]=_eeb .Get (_fgcf );};};};return _bacfb ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dacged *PdfOutlineItem )ToPdfObject ()_cee .PdfObject {_fceba :=_dacged ._bfcbc ;_eafff :=_fceba .PdfObject .(*_cee .PdfObjectDictionary );_eafff .Set ("\u0054\u0069\u0074l\u0065",_dacged .Title );if _dacged .A !=nil {_eafff .Set ("\u0041",_dacged .A );
};if _ggfca :=_eafff .Get ("\u0053\u0045");_ggfca !=nil {_eafff .Remove ("\u0053\u0045");};if _dacged .C !=nil {_eafff .Set ("\u0043",_dacged .C );};if _dacged .Dest !=nil {_eafff .Set ("\u0044\u0065\u0073\u0074",_dacged .Dest );};if _dacged .F !=nil {_eafff .Set ("\u0046",_dacged .F );
};if _dacged .Count !=nil {_eafff .Set ("\u0043\u006f\u0075n\u0074",_cee .MakeInteger (*_dacged .Count ));};if _dacged .Next !=nil {_eafff .Set ("\u004e\u0065\u0078\u0074",_dacged .Next .ToPdfObject ());};if _dacged .First !=nil {_eafff .Set ("\u0046\u0069\u0072s\u0074",_dacged .First .ToPdfObject ());
};if _dacged .Prev !=nil {_eafff .Set ("\u0050\u0072\u0065\u0076",_dacged .Prev .GetContext ().GetContainingPdfObject ());};if _dacged .Last !=nil {_eafff .Set ("\u004c\u0061\u0073\u0074",_dacged .Last .GetContext ().GetContainingPdfObject ());};if _dacged .Parent !=nil {_eafff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dacged .Parent .GetContext ().GetContainingPdfObject ());
};return _fceba ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cdbgf *PdfPageResourcesColorspaces )ToPdfObject ()_cee .PdfObject {_adcd :=_cee .MakeDict ();for _ ,_agfe :=range _cdbgf .Names {_adcd .Set (_cee .PdfObjectName (_agfe ),_cdbgf .Colorspaces [_agfe ].ToPdfObject ());};if _cdbgf ._cdgce !=nil {_cdbgf ._cdgce .PdfObject =_adcd ;
return _cdbgf ._cdgce ;};return _adcd ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_ecfa []*PdfFont ;CurrentFont *PdfFont ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _edgd (_cbdcg _cee .PdfObject )(*PdfColorspaceCalRGB ,error ){_ecagg :=NewPdfColorspaceCalRGB ();if _ggbd ,_abfb :=_cbdcg .(*_cee .PdfIndirectObject );_abfb {_ecagg ._fbgd =_ggbd ;};_cbdcg =_cee .TraceToDirectObject (_cbdcg );
_dcba ,_eebb :=_cbdcg .(*_cee .PdfObjectArray );if !_eebb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcba .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cbdcg =_cee .TraceToDirectObject (_dcba .Get (0));_dgbf ,_eebb :=_cbdcg .(*_cee .PdfObjectName );if !_eebb {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_dgbf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cbdcg =_cee .TraceToDirectObject (_dcba .Get (1));
_bgdd ,_eebb :=_cbdcg .(*_cee .PdfObjectDictionary );if !_eebb {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_cbdcg =_bgdd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cbdcg =_cee .TraceToDirectObject (_cbdcg );_cgad ,_eebb :=_cbdcg .(*_cee .PdfObjectArray );if !_eebb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cgad .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ddeb ,_aadef :=_cgad .GetAsFloat64Slice ();
if _aadef !=nil {return nil ,_aadef ;};_ecagg .WhitePoint =_ddeb ;_cbdcg =_bgdd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cbdcg !=nil {_cbdcg =_cee .TraceToDirectObject (_cbdcg );_ddbf ,_abgc :=_cbdcg .(*_cee .PdfObjectArray );
if !_abgc {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ddbf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_affg ,_bggff :=_ddbf .GetAsFloat64Slice ();if _bggff !=nil {return nil ,_bggff ;};_ecagg .BlackPoint =_affg ;};_cbdcg =_bgdd .Get ("\u0047\u0061\u006dm\u0061");if _cbdcg !=nil {_cbdcg =_cee .TraceToDirectObject (_cbdcg );_bedf ,_effb :=_cbdcg .(*_cee .PdfObjectArray );
if !_effb {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bedf .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_acbcd ,_aegc :=_bedf .GetAsFloat64Slice ();if _aegc !=nil {return nil ,_aegc ;};_ecagg .Gamma =_acbcd ;};_cbdcg =_bgdd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cbdcg !=nil {_cbdcg =_cee .TraceToDirectObject (_cbdcg );_abca ,_fccb :=_cbdcg .(*_cee .PdfObjectArray );
if !_fccb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _abca .Len ()!=9{_fca .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_abca .String ());
return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_ceac ,_fgfde :=_abca .GetAsFloat64Slice ();if _fgfde !=nil {return nil ,_fgfde ;
};_ecagg .Matrix =_ceac ;};return _ecagg ,nil ;};

// Width returns the width of `rect`.
func (_bcddd *PdfRectangle )Width ()float64 {return _aaa .Abs (_bcddd .Urx -_bcddd .Llx )};

// Encoder returns the font's text encoder.
func (_acfee pdfFontType3 )Encoder ()_dae .TextEncoder {return _acfee ._fgaa };

// ToPdfObject implements interface PdfModel.
func (_aeg *PdfAnnotationCaret )ToPdfObject ()_cee .PdfObject {_aeg .PdfAnnotation .ToPdfObject ();_gaaa :=_aeg ._eddc ;_feaag :=_gaaa .PdfObject .(*_cee .PdfObjectDictionary );_aeg .PdfAnnotationMarkup .appendToPdfDictionary (_feaag );_feaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0043\u0061\u0072e\u0074"));
_feaag .SetIfNotNil ("\u0052\u0044",_aeg .RD );_feaag .SetIfNotNil ("\u0053\u0079",_aeg .Sy );return _gaaa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bgdc *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecbe :=vals [0];if _ecbe < 0.0||_ecbe > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecbe );
return nil ,ErrColorOutOfRange ;};_face :=vals [1];if _face < 0.0||_face > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecbe );return nil ,ErrColorOutOfRange ;
};_ffcb :=vals [2];if _ffcb < 0.0||_ffcb > 1.0{_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecbe );return nil ,ErrColorOutOfRange ;};_bdbd :=NewPdfColorDeviceRGB (_ecbe ,_face ,_ffcb );
return _bdbd ,nil ;};func (_ffgfe *pdfFontType0 )subsetRegistered ()error {_ebee ,_ggaa :=_ffgfe .DescendantFont ._bggcf .(*pdfCIDFontType2 );if !_ggaa {_fca .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_ffgfe .DescendantFont );
return nil ;};if _ebee ==nil {return nil ;};if _ebee ._ebcad ==nil {_fca .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _ffgfe ._daac ==nil {_fca .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gdcc ,_ggaa :=_cee .GetStream (_ebee ._ebcad .FontFile2 );if !_ggaa {_fca .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cdf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_acebd ,_fefced :=_cee .DecodeStream (_gdcc );if _fefced !=nil {_fca .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fefced );
return _fefced ;};_eegec ,_fefced :=_eag .Parse (_cd .NewReader (_acebd ));if _fefced !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gdcc .Stream ));
return _fefced ;};var _aecbf []rune ;var _begfb *_eag .Font ;switch _gdgf :=_ffgfe ._daac .(type ){case *_dae .TrueTypeFontEncoder :_aecbf =_gdgf .RegisteredRunes ();_begfb ,_fefced =_eegec .SubsetKeepRunes (_aecbf );if _fefced !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefced );
return _fefced ;};_gdgf .SubsetRegistered ();case *_dae .IdentityEncoder :_aecbf =_gdgf .RegisteredRunes ();_geaf :=make ([]_eag .GlyphIndex ,len (_aecbf ));for _bggfa ,_acbf :=range _aecbf {_geaf [_bggfa ]=_eag .GlyphIndex (_acbf );};_begfb ,_fefced =_eegec .SubsetKeepIndices (_geaf );
if _fefced !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefced );return _fefced ;};case _dae .SimpleEncoder :_ecggb :=_gdgf .Charcodes ();for _ ,_ccfdf :=range _ecggb {_eegge ,_egcae :=_gdgf .CharcodeToRune (_ccfdf );if !_egcae {_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ccfdf );
continue ;};_aecbf =append (_aecbf ,_eegge );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_ffgfe ._daac );
};var _fedc _cd .Buffer ;_fefced =_begfb .Write (&_fedc );if _fefced !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefced );return _fefced ;};if _ffgfe ._abcbf !=nil {_bedd :=make (map[_dgg .CharCode ]rune ,len (_aecbf ));for _ ,_ccfdc :=range _aecbf {_efdd ,_ffgd :=_ffgfe ._daac .RuneToCharcode (_ccfdc );
if !_ffgd {continue ;};_bedd [_dgg .CharCode (_efdd )]=_ccfdc ;};_ffgfe ._abcbf =_dgg .NewToUnicodeCMap (_bedd );};_gdcc ,_fefced =_cee .MakeStream (_fedc .Bytes (),_cee .NewFlateEncoder ());if _fefced !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefced );
return _fefced ;};_gdcc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cee .MakeInteger (int64 (_fedc .Len ())));if _dffb ,_eadg :=_cee .GetStream (_ebee ._ebcad .FontFile2 );_eadg {*_dffb =*_gdcc ;}else {_ebee ._ebcad .FontFile2 =_gdcc ;};_cgbg :=_ggfdcd ();
if len (_ffgfe ._fbcf )> 0{_ffgfe ._fbcf =_bdeb (_ffgfe ._fbcf ,_cgbg );};if len (_ebee ._fbcf )> 0{_ebee ._fbcf =_bdeb (_ebee ._fbcf ,_cgbg );};if len (_ffgfe ._ccgfa )> 0{_ffgfe ._ccgfa =_bdeb (_ffgfe ._ccgfa ,_cgbg );};if _ebee ._ebcad !=nil {_bdde ,_bgegd :=_cee .GetName (_ebee ._ebcad .FontName );
if _bgegd &&len (_bdde .String ())> 0{_gceeg :=_bdeb (_bdde .String (),_cgbg );_ebee ._ebcad .FontName =_cee .MakeName (_gceeg );};};return nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ead :=NewPdfAnnotation ();_afb :=&PdfAnnotationFileAttachment {};_afb .PdfAnnotation =_ead ;_afb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ead .SetContext (_afb );return _afb ;};


// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dcga *PdfColorspaceLab )ToPdfObject ()_cee .PdfObject {_gafd :=_cee .MakeArray ();_gafd .Append (_cee .MakeName ("\u004c\u0061\u0062"));_ddde :=_cee .MakeDict ();if _dcga .WhitePoint !=nil {_dfaa :=_cee .MakeArray (_cee .MakeFloat (_dcga .WhitePoint [0]),_cee .MakeFloat (_dcga .WhitePoint [1]),_cee .MakeFloat (_dcga .WhitePoint [2]));
_ddde .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dfaa );}else {_fca .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _dcga .BlackPoint !=nil {_cdda :=_cee .MakeArray (_cee .MakeFloat (_dcga .BlackPoint [0]),_cee .MakeFloat (_dcga .BlackPoint [1]),_cee .MakeFloat (_dcga .BlackPoint [2]));_ddde .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cdda );
};if _dcga .Range !=nil {_edag :=_cee .MakeArray (_cee .MakeFloat (_dcga .Range [0]),_cee .MakeFloat (_dcga .Range [1]),_cee .MakeFloat (_dcga .Range [2]),_cee .MakeFloat (_dcga .Range [3]));_ddde .Set ("\u0052\u0061\u006eg\u0065",_edag );};_gafd .Append (_ddde );
if _dcga ._acff !=nil {_dcga ._acff .PdfObject =_gafd ;return _dcga ._acff ;};return _gafd ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_fadf *_cee .PdfIndirectObject ;_cdggg *_cee .PdfIndirectObject ;_gecd map[_cee .PdfObject ]struct{};_dcdg []*_cee .PdfIndirectObject ;_gccff []_cee .PdfObject ;_dgbgbb map[_cee .PdfObject ]struct{};_fceged []*_cee .PdfIndirectObject ;
_fecge *PdfOutlineTreeNode ;_cdebc *_cee .PdfObjectDictionary ;_cfba []_cee .PdfObject ;_cbfac *_cee .PdfIndirectObject ;_cbeea *_g .Writer ;_gfee int64 ;_efdcg error ;_ddafb *_cee .PdfCrypt ;_ggfgf *_cee .PdfObjectDictionary ;_bbfag *_cee .PdfIndirectObject ;
_aeffd *_cee .PdfObjectArray ;_gceef _cee .Version ;_deda *bool ;_fgadee map[_cee .PdfObject ][]*_cee .PdfObjectDictionary ;_acfdc *PdfAcroForm ;_bbcfgd *Names ;_ecgef Optimizer ;_bacda StandardApplier ;_gceegb map[int ]crossReference ;_cdcea int64 ;ObjNumOffset int ;
_fbaeb bool ;_dedac _cee .XrefTable ;_dfdbb int64 ;_ffcbgf int64 ;_ccaed map[_cee .PdfObject ]int64 ;_befcg map[_cee .PdfObject ]struct{};_cbdcf string ;_cafaa string ;_dbbf []*PdfOutputIntent ;_dabaf bool ;_dfea ,_bcggd string ;};

// SetContext set the sub annotation (context).
func (_fffbc *PdfShading )SetContext (ctx PdfModel ){_fffbc ._ddffe =ctx };

// ToPdfObject returns the PDF representation of the colorspace.
func (_bage *PdfColorspaceDeviceRGB )ToPdfObject ()_cee .PdfObject {return _cee .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fba :=NewPdfAction ();_cfag :=&PdfActionSound {};_cfag .PdfAction =_fba ;_fba .SetContext (_cfag );return _cfag ;};

// ToPdfObject implements interface PdfModel.
func (_eafgb *PdfAnnotationScreen )ToPdfObject ()_cee .PdfObject {_eafgb .PdfAnnotation .ToPdfObject ();_fdecg :=_eafgb ._eddc ;_dgbaf :=_fdecg .PdfObject .(*_cee .PdfObjectDictionary );_dgbaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dgbaf .SetIfNotNil ("\u0054",_eafgb .T );_dgbaf .SetIfNotNil ("\u004d\u004b",_eafgb .MK );_dgbaf .SetIfNotNil ("\u0041",_eafgb .A );_dgbaf .SetIfNotNil ("\u0041\u0041",_eafgb .AA );return _fdecg ;};func (_cgecg *PdfWriter )setCatalogVersion (){_cgecg ._cdebc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cee .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_cgecg ._gceef .Major ,_cgecg ._gceef .Minor )));
};func (_cgcaf *PdfReader )loadAnnotations (_fegaa _cee .PdfObject )([]*PdfAnnotation ,error ){_ddga ,_fagga :=_cee .GetArray (_fegaa );if !_fagga {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _affab []*PdfAnnotation ;for _ ,_ceeea :=range _ddga .Elements (){_ceeea =_cee .ResolveReference (_ceeea );if _ ,_beaca :=_ceeea .(*_cee .PdfObjectNull );_beaca {continue ;};_cfge ,_ccfg :=_ceeea .(*_cee .PdfObjectDictionary );_ccadg ,_dcbe :=_ceeea .(*_cee .PdfIndirectObject );
if _ccfg {_ccadg =&_cee .PdfIndirectObject {};_ccadg .PdfObject =_cfge ;}else {if !_dcbe {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_edgec ,_fbff :=_cgcaf .newPdfAnnotationFromIndirectObject (_ccadg );if _fbff !=nil {return nil ,_fbff ;};switch _fcgcg :=_edgec .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_acggbb :=range _cgcaf .AcroForm .AllFields (){if _acggbb ._ccbb ==_fcgcg .Parent {_fcgcg ._dec =_acggbb ;
break ;};};};if _edgec !=nil {_affab =append (_affab ,_edgec );};};return _affab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfActionMovie )ToPdfObject ()_cee .PdfObject {_eg .PdfAction .ToPdfObject ();_adcb :=_eg ._gaf ;_gba :=_adcb .PdfObject .(*_cee .PdfObjectDictionary );_gba .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeMovie )));_gba .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eg .Annotation );
_gba .SetIfNotNil ("\u0054",_eg .T );_gba .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eg .Operation );return _adcb ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bfecgf *PdfPage )error ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dgceb *OutlineItem )ToPdfObject ()_cee .PdfObject {_gbbd ,_ :=_dgceb .ToPdfOutlineItem ();return _gbbd .ToPdfObject ();};

// String returns a string that describes `font`.
func (_aabe *PdfFont )String ()string {_fecb :="";if _aabe ._bggcf .Encoder ()!=nil {_fecb =_aabe ._bggcf .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_aabe ._bggcf ,_aabe .baseFields ().coreString (),_fecb );
};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_dcbec *PdfPattern )GetContext ()PdfModel {return _dcbec ._gabf };func (_fgfg *Image )samplesTrimPadding (_fdbb []uint32 )[]uint32 {_gfef :=_fgfg .ColorComponents *int (_fgfg .Width )*int (_fgfg .Height );if len (_fdbb )==_gfef {return _fdbb ;};_eageg :=make ([]uint32 ,_gfef );
_ggdec :=int (_fgfg .Width )*_fgfg .ColorComponents ;var _aafcb ,_facdfe ,_daefc ,_cdbeg int ;_cffe :=_ca .BytesPerLine (int (_fgfg .Width ),int (_fgfg .BitsPerComponent ),_fgfg .ColorComponents );for _aafcb =0;_aafcb < int (_fgfg .Height );_aafcb ++{_facdfe =_aafcb *int (_fgfg .Width );
_daefc =_aafcb *_cffe ;for _cdbeg =0;_cdbeg < _ggdec ;_cdbeg ++{_eageg [_facdfe +_cdbeg ]=_fdbb [_daefc +_cdbeg ];};};return _eageg ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_bgaae *_cee .PdfObjectDictionary ;};func (_dbfa *PdfReader )newPdfAnnotationMarkupFromDict (_aeac *_cee .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dbbc :=&PdfAnnotationMarkup {};if _bfee :=_aeac .Get ("\u0054");
_bfee !=nil {_dbbc .T =_bfee ;};if _bgdaa :=_aeac .Get ("\u0050\u006f\u0070u\u0070");_bgdaa !=nil {_cdad ,_fcf :=_bgdaa .(*_cee .PdfIndirectObject );if !_fcf {if _ ,_eddf :=_bgdaa .(*_cee .PdfObjectNull );!_eddf {return nil ,_cdf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fdgd ,_egae :=_dbfa .newPdfAnnotationFromIndirectObject (_cdad );if _egae !=nil {return nil ,_egae ;};if _fdgd !=nil {_gfgg ,_fgg :=_fdgd ._ecf .(*PdfAnnotationPopup );if !_fgg {return nil ,_cdf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dbbc .Popup =_gfgg ;};};};if _bad :=_aeac .Get ("\u0043\u0041");_bad !=nil {_dbbc .CA =_bad ;};if _dfdc :=_aeac .Get ("\u0052\u0043");_dfdc !=nil {_dbbc .RC =_dfdc ;};if _adaf :=_aeac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_adaf !=nil {_dbbc .CreationDate =_adaf ;};if _gga :=_aeac .Get ("\u0049\u0052\u0054");_gga !=nil {_dbbc .IRT =_gga ;};if _egff :=_aeac .Get ("\u0053\u0075\u0062\u006a");_egff !=nil {_dbbc .Subj =_egff ;};if _abe :=_aeac .Get ("\u0052\u0054");_abe !=nil {_dbbc .RT =_abe ;
};if _fcbc :=_aeac .Get ("\u0049\u0054");_fcbc !=nil {_dbbc .IT =_fcbc ;};if _bbdg :=_aeac .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bbdg !=nil {_dbbc .ExData =_bbdg ;};return _dbbc ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cee .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cee .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cee .PdfObjectBool ;_ddffe PdfModel ;_dfgbe _cee .PdfObject ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ffdb *PdfField )ToPdfObject ()_cee .PdfObject {_ffaa :=_ffdb ._ccbb ;_fggc :=_ffaa .PdfObject .(*_cee .PdfObjectDictionary );_geec :=_cee .MakeArray ();for _ ,_fddfc :=range _ffdb .Kids {_geec .Append (_fddfc .ToPdfObject ());};for _ ,_cdcb :=range _ffdb .Annotations {if _cdcb ._eddc !=_ffdb ._ccbb {_geec .Append (_cdcb .GetContext ().ToPdfObject ());
};};if _ffdb .Parent !=nil {_fggc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffdb .Parent .GetContainingPdfObject ());};if _geec .Len ()> 0{_fggc .Set ("\u004b\u0069\u0064\u0073",_geec );};_fggc .SetIfNotNil ("\u0046\u0054",_ffdb .FT );_fggc .SetIfNotNil ("\u0054",_ffdb .T );
_fggc .SetIfNotNil ("\u0054\u0055",_ffdb .TU );_fggc .SetIfNotNil ("\u0054\u004d",_ffdb .TM );_fggc .SetIfNotNil ("\u0046\u0066",_ffdb .Ff );_fggc .SetIfNotNil ("\u0056",_ffdb .V );_fggc .SetIfNotNil ("\u0044\u0056",_ffdb .DV );_fggc .SetIfNotNil ("\u0041\u0041",_ffdb .AA );
if _ffdb .VariableText !=nil {_fggc .SetIfNotNil ("\u0044\u0041",_ffdb .VariableText .DA );_fggc .SetIfNotNil ("\u0051",_ffdb .VariableText .Q );_fggc .SetIfNotNil ("\u0044\u0053",_ffdb .VariableText .DS );_fggc .SetIfNotNil ("\u0052\u0056",_ffdb .VariableText .RV );
};return _ffaa ;};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_ceedcc *PdfWriter )SetCatalogStructTreeRoot (tree _cee .PdfObject )error {if tree ==nil {_ceedcc ._cdebc .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_ceedcc ._cdebc .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _ceedcc .addObjects (tree );};

// NumCopies returns the value of the numCopies.
func (_bcdfe *ViewerPreferences )NumCopies ()int {return _bcdfe ._dbcbe };

// ToPdfObject returns the PDF representation of the pattern.
func (_bcabe *PdfPattern )ToPdfObject ()_cee .PdfObject {_abgaga :=_bcabe .getDict ();_abgaga .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_abgaga .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cee .MakeInteger (_bcabe .PatternType ));
return _bcabe ._bgabc ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cee .PdfObject ;Movie _cee .PdfObject ;A _cee .PdfObject ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cee .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _effge error ;encoder ,_effge =img .getSuitableEncoder ();if _effge !=nil {_fca .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_effge );
encoder =_cee .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_gfdef ,_gfcdb :=encoder .EncodeBytes (img .Data );if _gfcdb !=nil {_fca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gfcdb );
return nil ,_gfcdb ;};_bgbgd :=NewXObjectImage ();_aabgc :=img .Width ;_fdac :=img .Height ;_bgbgd .Width =&_aabgc ;_bgbgd .Height =&_fdac ;_gdeeg :=img .BitsPerComponent ;_bgbgd .BitsPerComponent =&_gdeeg ;_bgbgd .Filter =encoder ;_bgbgd .Stream =_gfdef ;
if cs ==nil {if img .ColorComponents ==1{_bgbgd .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_cee .DCTEncoder :_bgbgd .ColorSpace =NewPdfColorspaceDeviceRGB ();_gdeeg =8;_bgbgd .BitsPerComponent =&_gdeeg ;
};};}else if img .ColorComponents ==3{_bgbgd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_cee .DCTEncoder :_bgbgd .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_bgbgd .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_cdf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bgbgd .ColorSpace =cs ;};if len (img ._cbfg )!=0{_egcab :=NewXObjectImage ();_egcab .Filter =encoder ;_daebbe ,_gfgda :=encoder .EncodeBytes (img ._cbfg );
if _gfgda !=nil {_fca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gfgda );return nil ,_gfgda ;};_egcab .Stream =_daebbe ;_egcab .BitsPerComponent =_bgbgd .BitsPerComponent ;
_egcab .Width =&img .Width ;_egcab .Height =&img .Height ;_egcab .ColorSpace =NewPdfColorspaceDeviceGray ();_bgbgd .SMask =_egcab .ToPdfObject ();}else {_bgbgd .SMask =xobjIn .SMask ;_bgbgd .ImageMask =xobjIn .ImageMask ;if _bgbgd .ColorSpace .GetNumComponents ()==1{_eeeea (_bgbgd );
};};return _bgbgd ,nil ;};var _fceac =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cee .PdfObject ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gebf :=&PdfColorPatternType2 {};return _gebf };

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_fdffg *PdfPage )GetRotate ()(int64 ,error ){if _fdffg .Rotate !=nil {return *_fdffg .Rotate ,nil ;};_dfdga :=_fdffg .Parent ;for _dfdga !=nil {_eaeda ,_agafd :=_cee .GetDict (_dfdga );if !_agafd {return 0,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _eede :=_eaeda .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_eede !=nil {_dffbf ,_baca :=_cee .GetInt (_eede );if !_baca {return 0,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _dffbf !=nil {return int64 (*_dffbf ),nil ;
};return 0,_cdf .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dfdga =_eaeda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cdf .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// SetRefObject sets the reference object for the KValue.
func (_aeefd *KValue )SetRefObject (refObject _cee .PdfObject ){_aeefd .Clear ();_aeefd ._abcfb =refObject ;};func (_caed *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gdfc *_cee .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dbea :=PdfAnnotationPrinterMark {};
_dbea .MN =_gdfc .Get ("\u004d\u004e");return &_dbea ,nil ;};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_dcgfc *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_dcgfc ._gfffg =&hideWindowUI };

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dggagg .Lock ();defer _dggagg .Unlock ();_bdefe =producer };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_facef *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gafc :=_ag .NewReader (img .getBase ());_afcd :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cbfg ,img ._cabgb );
_dbef :=_ag .NewWriter (_afcd );_cgcc :=_aaa .Pow (2,float64 (img .BitsPerComponent ))-1;_daddd :=_facef .GetNumComponents ();_feeg :=make ([]uint32 ,_daddd );_gddg :=make ([]float64 ,_daddd );for {_dfad :=_gafc .ReadSamples (_feeg );if _dfad ==_fc .EOF {break ;
}else if _dfad !=nil {return img ,_dfad ;};for _afcb :=0;_afcb < _daddd ;_afcb ++{_gfcba :=float64 (_feeg [_afcb ])/_cgcc ;_gddg [_afcb ]=_gfcba ;};_bfbg ,_dfad :=_facef .TintTransform .Evaluate (_gddg );if _dfad !=nil {return img ,_dfad ;};for _ ,_efce :=range _bfbg {_efce =_aaa .Min (_aaa .Max (0,_efce ),1.0);
if _dfad =_dbef .WriteSample (uint32 (_efce *_cgcc ));_dfad !=nil {return img ,_dfad ;};};};return _facef .AlternateSpace .ImageToRGB (_acecd (&_afcd ));};func (_afcace *PdfReader )buildOutlineTree (_ddbec _cee .PdfObject ,_bbce *PdfOutlineTreeNode ,_dgfeae *PdfOutlineTreeNode ,_afbcg map[_cee .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _afbcg ==nil {_afbcg =map[_cee .PdfObject ]struct{}{};
};_afbcg [_ddbec ]=struct{}{};_dffg ,_caeff :=_ddbec .(*_cee .PdfIndirectObject );if !_caeff {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ddbec );
};_bgaca ,_gfegb :=_dffg .PdfObject .(*_cee .PdfObjectDictionary );if !_gfegb {return nil ,nil ,_cdf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bgaca ,_dffg ,_dffg );
if _gdggd :=_bgaca .Get ("\u0054\u0069\u0074l\u0065");_gdggd !=nil {_dcdb ,_egefg :=_afcace .newPdfOutlineItemFromIndirectObject (_dffg );if _egefg !=nil {return nil ,nil ,_egefg ;};_dcdb .Parent =_bbce ;_dcdb .Prev =_dgfeae ;_gbeaf :=_cee .ResolveReference (_bgaca .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_eaaae :=_afbcg [_gbeaf ];_gbeaf !=nil &&_gbeaf !=_dffg &&!_eaaae {if !_cee .IsNullObject (_gbeaf ){_dbacc ,_acfcb ,_agfbc :=_afcace .buildOutlineTree (_gbeaf ,&_dcdb .PdfOutlineTreeNode ,nil ,_afbcg );if _agfbc !=nil {_fca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_agfbc );
}else {_dcdb .First =_dbacc ;_dcdb .Last =_acfcb ;};};};_ceaff :=_cee .ResolveReference (_bgaca .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ecdbde :=_afbcg [_ceaff ];_ceaff !=nil &&_ceaff !=_dffg &&!_ecdbde {if !_cee .IsNullObject (_ceaff ){_efdb ,_edbab ,_ffadf :=_afcace .buildOutlineTree (_ceaff ,_bbce ,&_dcdb .PdfOutlineTreeNode ,_afbcg );
if _ffadf !=nil {_fca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ffadf );
}else {_dcdb .Next =_efdb ;return &_dcdb .PdfOutlineTreeNode ,_edbab ,nil ;};};};return &_dcdb .PdfOutlineTreeNode ,&_dcdb .PdfOutlineTreeNode ,nil ;};_afbfa ,_degeg :=_ffcg (_dffg );if _degeg !=nil {return nil ,nil ,_degeg ;};_afbfa .Parent =_bbce ;if _adbef :=_bgaca .Get ("\u0046\u0069\u0072s\u0074");
_adbef !=nil {_adbef =_cee .ResolveReference (_adbef );if _ ,_ecfad :=_afbcg [_adbef ];_adbef !=nil &&_adbef !=_dffg &&!_ecfad {_cdgb :=_cee .TraceToDirectObject (_adbef );if _ ,_gadgg :=_cdgb .(*_cee .PdfObjectNull );!_gadgg &&_cdgb !=nil {_ffdd ,_ebbgcf ,_efced :=_afcace .buildOutlineTree (_adbef ,&_afbfa .PdfOutlineTreeNode ,nil ,_afbcg );
if _efced !=nil {_fca .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_efced );
}else {_afbfa .First =_ffdd ;_afbfa .Last =_ebbgcf ;};};};};return &_afbfa .PdfOutlineTreeNode ,&_afbfa .PdfOutlineTreeNode ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cee .PdfObject ,error );};

// ToPdfObject returns the PDF representation of the function.
func (_afaf *PdfFunctionType0 )ToPdfObject ()_cee .PdfObject {if _afaf ._gaagd ==nil {_afaf ._gaagd =&_cee .PdfObjectStream {};};_aaef :=_cee .MakeDict ();_aaef .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cee .MakeInteger (0));
_dcgdg :=&_cee .PdfObjectArray {};for _ ,_dgfcd :=range _afaf .Domain {_dcgdg .Append (_cee .MakeFloat (_dgfcd ));};_aaef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcgdg );_cbdcc :=&_cee .PdfObjectArray {};for _ ,_eabca :=range _afaf .Range {_cbdcc .Append (_cee .MakeFloat (_eabca ));
};_aaef .Set ("\u0052\u0061\u006eg\u0065",_cbdcc );_adee :=&_cee .PdfObjectArray {};for _ ,_cgbae :=range _afaf .Size {_adee .Append (_cee .MakeInteger (int64 (_cgbae )));};_aaef .Set ("\u0053\u0069\u007a\u0065",_adee );_aaef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cee .MakeInteger (int64 (_afaf .BitsPerSample )));
if _afaf .Order !=1{_aaef .Set ("\u004f\u0072\u0064e\u0072",_cee .MakeInteger (int64 (_afaf .Order )));};_aaef .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_afaf ._bbdc ))));_afaf ._gaagd .Stream =_afaf ._bbdc ;_afaf ._gaagd .PdfObjectDictionary =_aaef ;
return _afaf ._gaagd ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_cc .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _gc .Time ;};func (_acdga *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _acdga ._ffdgf .GetCrypter ()!=nil &&!_acdga ._ffdgf .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_egfec :=_acdga ._cacfe ;_bfddfe :=_egfec .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bfddfe ==nil {return nil ,nil ;};_cedce ,_agdaa :=_cee .GetIndirect (_bfddfe );_bfddfe =_cee .TraceToDirectObject (_bfddfe );if _cee .IsNullObject (_bfddfe ){_fca .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_afgf ,_eeaf :=_cee .GetDict (_bfddfe );if !_eeaf {_fca .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bfddfe );_fca .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bfddfe );};_fca .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_acdga ._dbfb {_dddeb :=_acdga .traverseObjectData (_afgf );
if _dddeb !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_dddeb );
return nil ,_dddeb ;};};_eeafb ,_bgaac :=_acdga .newPdfAcroFormFromDict (_cedce ,_afgf );if _bgaac !=nil {return nil ,_bgaac ;};_eeafb ._gcfcc =!_agdaa ;return _eeafb ,nil ;};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_aeeba *ViewerPreferences )ToPdfObject ()_cee .PdfObject {_gaafb :=_cee .MakeDict ();if _aeeba ._bfff !=nil {_gaafb .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_cee .MakeBool (*_aeeba ._bfff ));};if _aeeba ._fcbcb !=nil {_gaafb .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_cee .MakeBool (*_aeeba ._fcbcb ));
};if _aeeba ._gfffg !=nil {_gaafb .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_cee .MakeBool (*_aeeba ._gfffg ));};if _aeeba ._cbdgc !=nil {_gaafb .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_cee .MakeBool (*_aeeba ._cbdgc ));
};if _aeeba ._gaffg !=nil {_gaafb .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_cee .MakeBool (*_aeeba ._gaffg ));};if _aeeba ._gbbca !=nil {_gaafb .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_cee .MakeBool (*_aeeba ._gbbca ));
};if _aeeba ._efgaa !=""{_gaafb .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_cee .MakeName (string (_aeeba ._efgaa )));};if _aeeba ._gfegc !=""{_gaafb .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_cee .MakeName (string (_aeeba ._gfegc )));
};if _aeeba ._gagga !=""{_gaafb .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_cee .MakeName (string (_aeeba ._gagga )));};if _aeeba ._baegf !=""{_gaafb .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_cee .MakeName (string (_aeeba ._baegf )));
};if _aeeba ._eedee !=""{_gaafb .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_cee .MakeName (string (_aeeba ._eedee )));};if _aeeba ._fcddg !=""{_gaafb .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_cee .MakeName (string (_aeeba ._fcddg )));
};if _aeeba ._fgbdf !=""{_gaafb .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_cee .MakeName (string (_aeeba ._fgbdf )));};if _aeeba ._cadea !=""{_gaafb .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_cee .MakeName (string (_aeeba ._cadea )));
};if _aeeba ._bdfed !=nil {_gaafb .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_cee .MakeBool (*_aeeba ._bdfed ));};if _aeeba ._acfdg !=nil {_gaafb .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_cee .MakeArrayFromIntegers (_aeeba ._acfdg ));
};if _aeeba ._dbcbe !=0{_gaafb .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_cee .MakeInteger (int64 (_aeeba ._dbcbe )));};return _gaafb ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ffeegf *PdfPage )GetPageAsIndirectObject ()*_cee .PdfIndirectObject {return _ffeegf ._bafab };

// Encoder returns the font's text encoder.
func (_ccge *PdfFont )Encoder ()_dae .TextEncoder {_fega :=_ccge .actualFont ();if _fega ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ccge ._bggcf );
return nil ;};return _fega .Encoder ();};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_gabf PdfModel ;_bgabc _cee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cgg *PdfActionHide )ToPdfObject ()_cee .PdfObject {_cgg .PdfAction .ToPdfObject ();_cca :=_cgg ._gaf ;_dfc :=_cca .PdfObject .(*_cee .PdfObjectDictionary );_dfc .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeHide )));_dfc .SetIfNotNil ("\u0054",_cgg .T );
_dfc .SetIfNotNil ("\u0048",_cgg .H );return _cca ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cee .PdfObjectStream ;OCSP []*_cee .PdfObjectStream ;CRL []*_cee .PdfObjectStream ;TU *_cee .PdfObjectString ;TS *_cee .PdfObjectString ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ddceg *PdfReader )GetObjectNums ()[]int {return _ddceg ._ffdgf .GetObjectNums ()};func (_eacfd *PdfWriter )setDocInfo (_acbbdc _cee .PdfObject ){if _eacfd .hasObject (_eacfd ._cbfac ){delete (_eacfd ._dgbgbb ,_eacfd ._cbfac );delete (_eacfd ._befcg ,_eacfd ._cbfac );
for _feaae ,_gdgdc :=range _eacfd ._gccff {if _gdgdc ==_eacfd ._cbfac {copy (_eacfd ._gccff [_feaae :],_eacfd ._gccff [_feaae +1:]);_eacfd ._gccff [len (_eacfd ._gccff )-1]=nil ;_eacfd ._gccff =_eacfd ._gccff [:len (_eacfd ._gccff )-1];break ;};};};_fegba :=_cee .PdfIndirectObject {};
_fegba .PdfObject =_acbbdc ;_eacfd ._cbfac =&_fegba ;_eacfd .addObject (&_fegba );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bedga *PdfOutlineTreeNode )GetContext ()PdfModel {if _cddg ,_fcffgb :=_bedga ._afcbg .(*PdfOutline );_fcffgb {return _cddg ;};if _cddc ,_fbfa :=_bedga ._afcbg .(*PdfOutlineItem );_fbfa {return _cddc ;};_fca .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_aabde OutlineDest )ToPdfObject ()_cee .PdfObject {if (_aabde .PageObj ==nil &&_aabde .Page < 0)||_aabde .Mode ==""{return _cee .MakeNull ();};_bcbdb :=_cee .MakeArray ();if _aabde .PageObj !=nil {_bcbdb .Append (_aabde .PageObj );}else {_bcbdb .Append (_cee .MakeInteger (_aabde .Page ));
};_bcbdb .Append (_cee .MakeName (_aabde .Mode ));switch _aabde .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_bcbdb .Append (_cee .MakeFloat (_aabde .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_bcbdb .Append (_cee .MakeFloat (_aabde .X ));
case "\u0058\u0059\u005a":_bcbdb .Append (_cee .MakeFloat (_aabde .X ));_bcbdb .Append (_cee .MakeFloat (_aabde .Y ));_bcbdb .Append (_cee .MakeFloat (_aabde .Zoom ));default:_bcbdb .Set (1,_cee .MakeName ("\u0046\u0069\u0074"));};return _bcbdb ;};

// SetName sets the `Name` field of the signature.
func (_bbccf *PdfSignature )SetName (name string ){_bbccf .Name =_cee .MakeEncodedString (name ,true )};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_effdc *XObjectForm )GetContainingPdfObject ()_cee .PdfObject {return _effdc ._fbged };

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dbcdf *PdfPageResources )HasFontByName (keyName _cee .PdfObjectName )bool {_ ,_aagfd :=_dbcdf .GetFontByName (keyName );return _aagfd ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_cdb *PdfAnnotation )GetContext ()PdfModel {if _cdb ==nil {return nil ;};return _cdb ._ecf ;};func (_eaea *PdfAnnotationMarkup )appendToPdfDictionary (_bfgdf *_cee .PdfObjectDictionary ){_bfgdf .SetIfNotNil ("\u0054",_eaea .T );if _eaea .Popup !=nil {_bfgdf .Set ("\u0050\u006f\u0070u\u0070",_eaea .Popup .ToPdfObject ());
};_bfgdf .SetIfNotNil ("\u0043\u0041",_eaea .CA );_bfgdf .SetIfNotNil ("\u0052\u0043",_eaea .RC );_bfgdf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaea .CreationDate );_bfgdf .SetIfNotNil ("\u0049\u0052\u0054",_eaea .IRT );
_bfgdf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eaea .Subj );_bfgdf .SetIfNotNil ("\u0052\u0054",_eaea .RT );_bfgdf .SetIfNotNil ("\u0049\u0054",_eaea .IT );_bfgdf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eaea .ExData );};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ce .CharMetrics ;

// GetNumComponents returns the number of color components (1 for Separation).
func (_gdee *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_dfdaf *_fg .Document )error ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_faede *PdfWriter )SetNamedDestinations (dests _cee .PdfObject )error {if dests ==nil {return nil ;};_fca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_faede ._cdebc .Set ("\u0044\u0065\u0073t\u0073",dests );return _faede .addObjects (dests );};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cdefc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_edbf :=_cdefc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_edbf )> 0;_eaeg :=_cee .NewFlateEncoder ();_fgbae :=_cee .MakeArray ();if wrapContents {_bdfe ,_afecg :=_cee .MakeStream ([]byte ("\u0071\u000a"),_eaeg );
if _afecg !=nil {return _afecg ;};_fgbae .Append (_bdfe );};_fgbae .Append (_edbf ...);if wrapContents {_dffde ,_agfbd :=_cee .MakeStream ([]byte ("\u000a\u0051\u000a"),_eaeg );if _agfbd !=nil {return _agfbd ;};_fgbae .Append (_dffde );};_eabda ,_bccbc :=_cee .MakeStream (cs ,_eaeg );
if _bccbc !=nil {return _bccbc ;};_fgbae .Append (_eabda );_cdefc .Contents =_fgbae ;return nil ;};

// IsValid checks if the given pdf output intent type is valid.
func (_fgac PdfOutputIntentType )IsValid ()bool {return _fgac >=PdfOutputIntentTypeA1 &&_fgac <=PdfOutputIntentTypeX ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cgc :=NewPdfAnnotation ();_dfdg :=&PdfAnnotationWatermark {};_dfdg .PdfAnnotation =_cgc ;_cgc .SetContext (_dfdg );return _dfdg ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cfagd :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cfagd .N =N ;return _cfagd ,nil ;};func (_bgfgd *Image )resampleLowBits (_ccada []uint32 ){_bdfb :=_ca .BytesPerLine (int (_bgfgd .Width ),int (_bgfgd .BitsPerComponent ),_bgfgd .ColorComponents );_edgda :=make ([]byte ,_bgfgd .ColorComponents *_bdfb *int (_bgfgd .Height ));
_agdg :=int (_bgfgd .BitsPerComponent )*_bgfgd .ColorComponents *int (_bgfgd .Width );_dgeag :=uint8 (8);var (_cbacg ,_ggdad int ;_cdccb uint32 ;);for _acecg :=0;_acecg < int (_bgfgd .Height );_acecg ++{_ggdad =_acecg *_bdfb ;for _agfbf :=0;_agfbf < _agdg ;
_agfbf ++{_cdccb =_ccada [_cbacg ];_dgeag -=uint8 (_bgfgd .BitsPerComponent );_edgda [_ggdad ]|=byte (_cdccb )<<_dgeag ;if _dgeag ==0{_dgeag =8;_ggdad ++;};_cbacg ++;};};_bgfgd .Data =_edgda ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cee .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _geagg *_cee .PdfIndirectObject ;var _dacg *_cee .PdfObjectName ;var _afbb *_cee .PdfObjectArray ;if _bdf ,_afddb :=obj .(*_cee .PdfIndirectObject );
_afddb {_geagg =_bdf ;};obj =_cee .TraceToDirectObject (obj );switch _cdca :=obj .(type ){case *_cee .PdfObjectArray :_afbb =_cdca ;case *_cee .PdfObjectName :_dacg =_cdca ;};if _dacg !=nil {switch *_dacg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_dacg );return nil ,_dagd ;};};if _afbb !=nil &&_afbb .Len ()> 0{var _bagdf _cee .PdfObject =_geagg ;
if _geagg ==nil {_bagdf =_afbb ;};if _bbgc ,_fcea :=_cee .GetName (_afbb .Get (0));_fcea {switch _bbgc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _afbb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _afbb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _afbb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _edgf (_bagdf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _edgd (_bagdf );
case "\u004c\u0061\u0062":return _aefb (_bagdf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _geca (_bagdf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gabea (_bagdf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gdcb (_bagdf );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cbda (_bagdf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _eeeg (_bagdf );default:_fca .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bbgc );
};};};_fca .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ecbcg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ecbcg ._gfcca ==nil {_ecbcg ._gfcca =_daa .NewPSExecutor (_ecbcg .Program );};var _bfgc []_daa .PSObject ;for _ ,_gabcd :=range xVec {_bfgc =append (_bfgc ,_daa .MakeReal (_gabcd ));
};_cgegb ,_gdfeb :=_ecbcg ._gfcca .Execute (_bfgc );if _gdfeb !=nil {return nil ,_gdfeb ;};_defcb ,_gdfeb :=_daa .PSObjectArrayToFloat64Array (_cgegb );if _gdfeb !=nil {return nil ,_gdfeb ;};return _defcb ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfegf *PdfShadingType4 )ToPdfObject ()_cee .PdfObject {_gfegf .PdfShading .ToPdfObject ();_eadfa ,_efgefd :=_gfegf .getShadingDict ();if _efgefd !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfegf .BitsPerCoordinate !=nil {_eadfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfegf .BitsPerCoordinate );};if _gfegf .BitsPerComponent !=nil {_eadfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfegf .BitsPerComponent );
};if _gfegf .BitsPerFlag !=nil {_eadfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfegf .BitsPerFlag );};if _gfegf .Decode !=nil {_eadfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfegf .Decode );};if _gfegf .Function !=nil {if len (_gfegf .Function )==1{_eadfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfegf .Function [0].ToPdfObject ());
}else {_fbbde :=_cee .MakeArray ();for _ ,_caffe :=range _gfegf .Function {_fbbde .Append (_caffe .ToPdfObject ());};_eadfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbbde );};};return _gfegf ._dfgbe ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cadbc *PdfWriter )SetOpenAction (dest _cee .PdfObject )error {if dest ==nil ||_cee .IsNullObject (dest ){return nil ;};_cadbc ._cdebc .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cadbc .addObjects (dest );};


// ToPdfObject returns the PDF representation of the function.
func (_dagge *PdfFunctionType4 )ToPdfObject ()_cee .PdfObject {_ffgeg :=_dagge ._agbg ;if _ffgeg ==nil {_dagge ._agbg =&_cee .PdfObjectStream {};_ffgeg =_dagge ._agbg ;};_ggfcb :=_cee .MakeDict ();_ggfcb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cee .MakeInteger (4));
_defbe :=&_cee .PdfObjectArray {};for _ ,_afcae :=range _dagge .Domain {_defbe .Append (_cee .MakeFloat (_afcae ));};_ggfcb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_defbe );_gacgg :=&_cee .PdfObjectArray {};for _ ,_ceag :=range _dagge .Range {_gacgg .Append (_cee .MakeFloat (_ceag ));
};_ggfcb .Set ("\u0052\u0061\u006eg\u0065",_gacgg );if _dagge ._fedee ==nil &&_dagge .Program !=nil {_dagge ._fedee =[]byte (_dagge .Program .String ());};_ggfcb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_dagge ._fedee ))));
_ffgeg .Stream =_dagge ._fedee ;_ffgeg .PdfObjectDictionary =_ggfcb ;return _ffgeg ;};

// SetDuplex sets the value of the duplex.
func (_gadfd *ViewerPreferences )SetDuplex (duplex Duplex ){_gadfd ._cadea =duplex };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cagfa *XObjectImage )GetContainingPdfObject ()_cee .PdfObject {return _cagfa ._fggac };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetContainingPdfObject implements interface PdfModel.
func (_dbce *PdfSignature )GetContainingPdfObject ()_cee .PdfObject {return _dbce ._gcfbb };type fontFile struct{_cffac string ;_ggage string ;_beggd _dae .SimpleEncoder ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_deg :=NewPdfAnnotation ();_daec :=&PdfAnnotationText {};_daec .PdfAnnotation =_deg ;_daec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deg .SetContext (_daec );return _daec ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_ecadaa *PdfPageResources )SetPatternByName (keyName _cee .PdfObjectName ,pattern _cee .PdfObject )error {if _ecadaa .Pattern ==nil {_ecadaa .Pattern =_cee .MakeDict ();};_fagbe ,_bbcg :=_cee .GetDict (_ecadaa .Pattern );if !_bbcg {return _cee .ErrTypeError ;
};_fagbe .Set (keyName ,pattern );return nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_bfegdg *_cee .PdfObjectDictionary ;Type *_cee .PdfObjectName ;TransformMethod *_cee .PdfObjectName ;TransformParams _cee .PdfObject ;Data _cee .PdfObject ;DigestMethod *_cee .PdfObjectName ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_ceca *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _ceca ._ffdgf .GetRevisionNumber ()==0{return nil ,_cdf .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fcbadc ,_egfc :=_ceca ._gccce [_ceca ];_egfc {return _fcbadc ,nil ;};_ffggb ,_cdcae :=_ceca ._ffdgf .GetPreviousRevisionReadSeeker ();if _cdcae !=nil {return nil ,_cdcae ;};_ebfeb ,_cdcae :=_agfga (_ffggb ,_ceca ._accf ,_ceca ._dddf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cdcae !=nil {return nil ,_cdcae ;};_ceca ._befca [_ceca ._ffdgf .GetRevisionNumber ()-1]=_ebfeb ;_ceca ._gccce [_ceca ]=_ebfeb ;_ebfeb ._gccce =_ceca ._gccce ;return _ebfeb ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cee .PdfObject ;Q _cee .PdfObject ;RC _cee .PdfObject ;DS _cee .PdfObject ;CL _cee .PdfObject ;IT _cee .PdfObject ;BE _cee .PdfObject ;RD _cee .PdfObject ;BS _cee .PdfObject ;LE _cee .PdfObject ;
};func (_dgfa *PdfReader )newPdfAnnotationTextFromDict (_fcac *_cee .PdfObjectDictionary )(*PdfAnnotationText ,error ){_geeg :=PdfAnnotationText {};_bce ,_afba :=_dgfa .newPdfAnnotationMarkupFromDict (_fcac );if _afba !=nil {return nil ,_afba ;};_geeg .PdfAnnotationMarkup =_bce ;
_geeg .Open =_fcac .Get ("\u004f\u0070\u0065\u006e");_geeg .Name =_fcac .Get ("\u004e\u0061\u006d\u0065");_geeg .State =_fcac .Get ("\u0053\u0074\u0061t\u0065");_geeg .StateModel =_fcac .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_geeg ,nil ;};

// ViewArea returns the value of the viewArea.
func (_bdccb *ViewerPreferences )ViewArea ()PageBoundary {return _bdccb ._gagga };

// SetFlag sets the flag for the field.
func (_cagg *PdfField )SetFlag (flag FieldFlag ){_cagg .Ff =_cee .MakeInteger (int64 (flag ))};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gbdeab pdfFontType3 )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){_fcffg :=_gbdeab .Encoder ();if _fcffg ==nil {_fca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gbdeab );
return _ce .CharMetrics {},false ;};_fbfg ,_ccfdb :=_fcffg .RuneToCharcode (r );if !_ccfdb {if r !=' '{_fca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gbdeab );
};return _ce .CharMetrics {},false ;};_edcf ,_dbggg :=_gbdeab .GetCharMetrics (_fbfg );return _edcf ,_dbggg ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_bbcfa *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _cee .GetNumberAsFloat (_bbcfa .XHeight );};

// ToPdfObject implements interface PdfModel.
func (_aefe *PdfAnnotationFreeText )ToPdfObject ()_cee .PdfObject {_aefe .PdfAnnotation .ToPdfObject ();_dagg :=_aefe ._eddc ;_fefad :=_dagg .PdfObject .(*_cee .PdfObjectDictionary );_aefe .PdfAnnotationMarkup .appendToPdfDictionary (_fefad );_fefad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fefad .SetIfNotNil ("\u0044\u0041",_aefe .DA );_fefad .SetIfNotNil ("\u0051",_aefe .Q );_fefad .SetIfNotNil ("\u0052\u0043",_aefe .RC );_fefad .SetIfNotNil ("\u0044\u0053",_aefe .DS );_fefad .SetIfNotNil ("\u0043\u004c",_aefe .CL );_fefad .SetIfNotNil ("\u0049\u0054",_aefe .IT );
_fefad .SetIfNotNil ("\u0042\u0045",_aefe .BE );_fefad .SetIfNotNil ("\u0052\u0044",_aefe .RD );_fefad .SetIfNotNil ("\u0042\u0053",_aefe .BS );_fefad .SetIfNotNil ("\u004c\u0045",_aefe .LE );return _dagg ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ffecbg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bcgfbf ,_ccdee :=_ffecbg .GetTrailer ();if _ccdee !=nil {return nil ,_ccdee ;};var _bbceb *_cee .PdfObjectDictionary ;_ebaf :=_bcgfbf .Get ("\u0049\u006e\u0066\u006f");switch _dfag :=_ebaf .(type ){case *_cee .PdfObjectReference :_cafaf :=_dfag ;
_ebaf ,_ccdee =_ffecbg .GetIndirectObjectByNumber (int (_cafaf .ObjectNumber ));_ebaf =_cee .TraceToDirectObject (_ebaf );if _ccdee !=nil {return nil ,_ccdee ;};_bbceb ,_ =_ebaf .(*_cee .PdfObjectDictionary );case *_cee .PdfObjectDictionary :_bbceb =_dfag ;
};if _bbceb ==nil {return nil ,_cdf .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ffbcg ,_ccdee :=NewPdfInfoFromObject (_bbceb );if _ccdee !=nil {return nil ,_ccdee ;
};return _ffbcg ,nil ;};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";StructureTypeSection ="\u0053\u0065\u0063\u0074";StructureTypeDivision ="\u0044\u0069\u0076";
StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";StructureTypeTOCI ="\u0054\u004f\u0043\u0049";StructureTypeIndex ="\u0049\u006e\u0064e\u0078";
StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ceba *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ceba .Type ,_ceba .P ,_ceba .V );};func (_eafb *PdfReader )newPdfActionJavaScriptFromDict (_fgfa *_cee .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fgfa .Get ("\u004a\u0053")},nil ;
};func (_gbde *PdfReader )newPdfActionSetOCGStateFromDict (_cge *_cee .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cge .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cge .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};var _ pdfFont =(*pdfFontSimple )(nil );

// SetDecode sets the decode image float slice.
func (_gbggg *Image )SetDecode (decode []float64 ){_gbggg ._cabgb =decode };

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_caagd *PdfPattern )GetContainingPdfObject ()_cee .PdfObject {return _caagd ._bgabc };

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gcbf *PdfFont )ToUnicode ()string {if _gcbf .baseFields ()._abcbf ==nil {return "";};return _gcbf .baseFields ()._abcbf .Name ();};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_bddg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_bddg .HiVal )};};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cee .PdfObject ;Dest _cee .PdfObject ;H _cee .PdfObject ;PA _cee .PdfObject ;QuadPoints _cee .PdfObject ;BS _cee .PdfObject ;_bef *PdfAction ;_cfd *PdfReader ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_dbeec *PdfAcroForm )GetContainingPdfObject ()_cee .PdfObject {return _dbeec ._cebbd };

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_bbfda :=&PdfShadingType2 {};_bbfda .PdfShading =&PdfShading {};_bbfda .PdfShading ._dfgbe =_cee .MakeIndirectObject (_cee .MakeDict ());_bbfda .PdfShading ._ddffe =_bbfda ;return _bbfda ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gafg *PdfPageResources )SetXObjectImageByNameLazy (keyName _cee .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_agccc :=ximg .ToPdfObject ().(*_cee .PdfObjectStream );if lazy {_agccc .MakeLazy ();};_dbfedg :=_gafg .SetXObjectByName (keyName ,_agccc );
return _dbfedg ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_gfge *PdfReader )GetCatalogMetadata ()(_cee .PdfObject ,bool ){if _gfge ._cacfe ==nil {return nil ,false ;};_bdgccf :=_gfge ._cacfe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bdgccf ,_bdgccf !=nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_egcad *PdfOutputIntent )ToPdfObject ()_cee .PdfObject {if _egcad ._eebee ==nil {_egcad ._eebee =_cee .MakeDict ();};_dgeab :=_egcad ._eebee ;if _egcad .Type !=""{_dgeab .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName (_egcad .Type ));};_dgeab .Set ("\u0053",_cee .MakeName (_egcad .S .String ()));
if _egcad .OutputCondition !=""{_dgeab .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_cee .MakeString (_egcad .OutputCondition ));};_dgeab .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_cee .MakeString (_egcad .OutputConditionIdentifier ));
_dgeab .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_cee .MakeString (_egcad .RegistryName ));if _egcad .Info !=""{_dgeab .Set ("\u0049\u006e\u0066\u006f",_cee .MakeString (_egcad .Info ));};if len (_egcad .DestOutputProfile )!=0{_bdga ,_gbce :=_cee .MakeStream (_egcad .DestOutputProfile ,_cee .NewFlateEncoder ());
if _gbce !=nil {_fca .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gbce );
};_bdga .PdfObjectDictionary .Set ("\u004e",_cee .MakeInteger (int64 (_egcad .ColorComponents )));_gabbc :=make ([]float64 ,_egcad .ColorComponents *2);for _ffffg :=0;_ffffg < _egcad .ColorComponents *2;_ffffg ++{_aabdc :=0.0;if _ffffg %2!=0{_aabdc =1.0;
};_gabbc [_ffffg ]=_aabdc ;};_bdga .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_cee .MakeArrayFromFloats (_gabbc ));_dgeab .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_bdga );};return _dgeab ;
};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fdff *PdfFieldButton )GetType ()ButtonType {_afbgb :=ButtonTypeCheckbox ;if _fdff .Ff !=nil {if (uint32 (*_fdff .Ff )&FieldFlagPushbutton .Mask ())> 0{_afbgb =ButtonTypePush ;}else if (uint32 (*_fdff .Ff )&FieldFlagRadio .Mask ())> 0{_afbgb =ButtonTypeRadio ;
};};return _afbgb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fccc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if _fccc .Alternate ==nil {if _fccc .N ==1{_aagf :=NewPdfColorspaceDeviceGray ();return _aagf .ColorFromPdfObjects (objects );}else if _fccc .N ==3{_aage :=NewPdfColorspaceDeviceRGB ();
return _aage .ColorFromPdfObjects (objects );}else if _fccc .N ==4{_fgdd :=NewPdfColorspaceDeviceCMYK ();return _fgdd .ColorFromPdfObjects (objects );}else {return nil ,_cdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fccc .Alternate .ColorFromPdfObjects (objects );};func (_fgcdb *PdfWriter )writeOutlines ()error {if _fgcdb ._fecge ==nil {return nil ;};_fca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fgcdb ._fecge );
_agae :=_fgcdb ._fecge .ToPdfObject ();_fca .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_agae ,_agae ,_agae );_fgcdb ._cdebc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_agae );
_eeede :=_fgcdb .addObjects (_agae );if _eeede !=nil {return _eeede ;};return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_efgf *PdfReader )GetNamedDestinations ()(_cee .PdfObject ,error ){_baec :=_cee .ResolveReference (_efgf ._cacfe .Get ("\u0044\u0065\u0073t\u0073"));if _baec ==nil {return nil ,nil ;};if !_efgf ._dbfb {_geef :=_efgf .traverseObjectData (_baec );if _geef !=nil {return nil ,_geef ;
};};return _baec ,nil ;};

// AddKDict adds a K dictionary object to the structure tree root.
func (_fecab *StructTreeRoot )AddKDict (k *KDict ){_fecab .K =append (_fecab .K ,k )};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdfad *PdfShading )ToPdfObject ()_cee .PdfObject {_eaafg :=_fdfad ._dfgbe ;_ebagae ,_egeea :=_fdfad .getShadingDict ();if _egeea !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdfad .ShadingType !=nil {_ebagae .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fdfad .ShadingType );};if _fdfad .ColorSpace !=nil {_ebagae .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fdfad .ColorSpace .ToPdfObject ());
};if _fdfad .Background !=nil {_ebagae .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fdfad .Background );};if _fdfad .BBox !=nil {_ebagae .Set ("\u0042\u0042\u006f\u0078",_fdfad .BBox .ToPdfObject ());};if _fdfad .AntiAlias !=nil {_ebagae .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fdfad .AntiAlias );
};return _eaafg ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dggagg .Lock ();defer _dggagg .Unlock ();_dcae =keywords };

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_afag *PdfPageResources )HasPatternByName (keyName _cee .PdfObjectName )bool {_ ,_fafcc :=_afag .GetPatternByName (keyName );return _fafcc ;};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";
StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";
StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";StructureTypeTableHeaderCell ="\u0054\u0048";StructureTypeTableData ="\u0054\u0044";
StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);

// SetHideMenubar sets the value of the hideMenubar flag.
func (_eadebg *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_eadebg ._fcbcb =&hideMenubar };

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_cbed *LTV )EnableChain (chain []*_dfd .Certificate )error {return _cbed .enable (nil ,chain ,"")};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cee .PdfObject ;T _cee .PdfObject ;Operation _cee .PdfObject ;};

// ToInteger convert to an integer format.
func (_aadb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ecbb :=_aaa .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ecbb *_aadb .C ()),uint32 (_ecbb *_aadb .M ()),uint32 (_ecbb *_aadb .Y ()),uint32 (_ecbb *_aadb .K ())};};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_daa .PSProgram ;_gfcca *_daa .PSExecutor ;_fedee []byte ;_agbg *_cee .PdfObjectStream ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cee .PdfObject ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_aggbb *PdfShading )GetContext ()PdfModel {return _aggbb ._ddffe };

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cee .PdfObjectInteger ;TilingType *_cee .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cee .PdfObjectFloat ;YStep *_cee .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cee .PdfObjectArray ;};


// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func _cfgd ()string {return _fca .Version };func (_cgaf *LTV )buildCertChain (_beegg ,_bgafb []*_dfd .Certificate )([]*_dfd .Certificate ,map[string ]*_dfd .Certificate ,error ){_gaggg :=map[string ]*_dfd .Certificate {};
for _ ,_eaecc :=range _beegg {_gaggg [_eaecc .Subject .CommonName ]=_eaecc ;};_adgde :=_beegg ;for _ ,_fcbee :=range _bgafb {_abafda :=_fcbee .Subject .CommonName ;if _ ,_agaab :=_gaggg [_abafda ];_agaab {continue ;};_gaggg [_abafda ]=_fcbee ;_adgde =append (_adgde ,_fcbee );
};if len (_adgde )==0{return nil ,nil ,ErrSignNoCertificates ;};var _babbc error ;for _bgafg :=_adgde [0];_bgafg !=nil &&!_cgaf .CertClient .IsCA (_bgafg );{_egdga ,_cgcf :=_gaggg [_bgafg .Issuer .CommonName ];if !_cgcf {if _egdga ,_babbc =_cgaf .CertClient .GetIssuer (_bgafg );
_babbc !=nil {_fca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_babbc );
break ;};_gaggg [_bgafg .Issuer .CommonName ]=_egdga ;_adgde =append (_adgde ,_egdga );};_bgafg =_egdga ;};return _adgde ,_gaggg ,nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cg :=NewPdfAction ();_gf :=&PdfActionResetForm {};_gf .PdfAction =_cg ;_cg .SetContext (_gf );return _gf ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_dgf :=NewPdfAnnotation ();_degf :=&PdfAnnotationLink {};_degf .PdfAnnotation =_dgf ;_dgf .SetContext (_degf );return _degf ;};

// ToPdfObject implements interface PdfModel.
func (_adb *PdfActionJavaScript )ToPdfObject ()_cee .PdfObject {_adb .PdfAction .ToPdfObject ();_gef :=_adb ._gaf ;_gee :=_gef .PdfObject .(*_cee .PdfObjectDictionary );_gee .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeJavaScript )));_gee .SetIfNotNil ("\u004a\u0053",_adb .JS );
return _gef ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gfbg []_cee .PdfObject )([]_cee .PdfObject ,error );};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cee .PdfObject ;LE _cee .PdfObject ;BS _cee .PdfObject ;IC _cee .PdfObject ;BE _cee .PdfObject ;IT _cee .PdfObject ;Measure _cee .PdfObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_aacc :=&PdfOutline {_bbda :_cee .MakeIndirectObject (_cee .MakeDict ())};_aacc ._afcbg =_aacc ;return _aacc ;};func _ebdab (_fgfac _ce .StdFont )pdfFontSimple {_becce :=_fgfac .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ccdeg :"\u0054\u0079\u0070e\u0031",_fbcf :_fgfac .Name ()},_daefa :_fgfac .GetMetricsTable (),_aaec :&PdfFontDescriptor {FontName :_cee .MakeName (string (_becce .Name )),FontFamily :_cee .MakeName (_becce .Family ),FontWeight :_cee .MakeFloat (float64 (_becce .Weight )),Flags :_cee .MakeInteger (int64 (_becce .Flags )),FontBBox :_cee .MakeArrayFromFloats (_becce .BBox [:]),ItalicAngle :_cee .MakeFloat (_becce .ItalicAngle ),Ascent :_cee .MakeFloat (_becce .Ascent ),Descent :_cee .MakeFloat (_becce .Descent ),CapHeight :_cee .MakeFloat (_becce .CapHeight ),XHeight :_cee .MakeFloat (_becce .XHeight ),StemV :_cee .MakeFloat (_becce .StemV ),StemH :_cee .MakeFloat (_becce .StemH )},_bdecc :_fgfac .Encoder ()};
};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_efcab *PdfFieldButton )ToPdfObject ()_cee .PdfObject {_efcab .PdfField .ToPdfObject ();_gecf :=_efcab ._ccbb ;_gabee :=_gecf .PdfObject .(*_cee .PdfObjectDictionary );_gabee .Set ("\u0046\u0054",_cee .MakeName ("\u0042\u0074\u006e"));if _efcab .Opt !=nil {_gabee .Set ("\u004f\u0070\u0074",_efcab .Opt );
};return _gecf ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ageeg *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_abacc ,_bgf :=color .(*PdfColorDeviceCMYK );if !_bgf {_fca .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abdb :=_abacc .C ();_fadc :=_abacc .M ();_ageegd :=_abacc .Y ();_gbdea :=_abacc .K ();_abdb =_abdb *(1-_gbdea )+_gbdea ;_fadc =_fadc *(1-_gbdea )+_gbdea ;
_ageegd =_ageegd *(1-_gbdea )+_gbdea ;_dadf :=1-_abdb ;_cbbaf :=1-_fadc ;_dgga :=1-_ageegd ;return NewPdfColorDeviceRGB (_dadf ,_cbbaf ,_dgga ),nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fcffc *PdfPageResourcesColorspaces )Set (key _cee .PdfObjectName ,val PdfColorspace ){if _ ,_dbcdd :=_fcffc .Colorspaces [string (key )];!_dbcdd {_fcffc .Names =append (_fcffc .Names ,string (key ));};_fcffc .Colorspaces [string (key )]=val ;};func (_agc *PdfReader )newPdfActionImportDataFromDict (_bbg *_cee .PdfObjectDictionary )(*PdfActionImportData ,error ){_fdbg ,_gcbg :=_daf (_bbg .Get ("\u0046"));
if _gcbg !=nil {return nil ,_gcbg ;};return &PdfActionImportData {F :_fdbg },nil ;};func _edgf (_fdef _cee .PdfObject )(*PdfColorspaceCalGray ,error ){_gabd :=NewPdfColorspaceCalGray ();if _bcc ,_agbd :=_fdef .(*_cee .PdfIndirectObject );_agbd {_gabd ._afbg =_bcc ;
};_fdef =_cee .TraceToDirectObject (_fdef );_ecda ,_cfe :=_fdef .(*_cee .PdfObjectArray );if !_cfe {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecda .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fdef =_cee .TraceToDirectObject (_ecda .Get (0));_daaae ,_cfe :=_fdef .(*_cee .PdfObjectName );if !_cfe {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_daaae !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fdef =_cee .TraceToDirectObject (_ecda .Get (1));
_debf ,_cfe :=_fdef .(*_cee .PdfObjectDictionary );if !_cfe {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_fdef =_debf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fdef =_cee .TraceToDirectObject (_fdef );_fcca ,_cfe :=_fdef .(*_cee .PdfObjectArray );if !_cfe {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _fcca .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ffee ,_aagga :=_fcca .GetAsFloat64Slice ();
if _aagga !=nil {return nil ,_aagga ;};_gabd .WhitePoint =_ffee ;_fdef =_debf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fdef !=nil {_fdef =_cee .TraceToDirectObject (_fdef );_cacd ,_egbg :=_fdef .(*_cee .PdfObjectArray );
if !_egbg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cacd .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_dbcf ,_cfgf :=_cacd .GetAsFloat64Slice ();if _cfgf !=nil {return nil ,_cfgf ;};_gabd .BlackPoint =_dbcf ;};_fdef =_debf .Get ("\u0047\u0061\u006dm\u0061");if _fdef !=nil {_fdef =_cee .TraceToDirectObject (_fdef );_aggg ,_bdbc :=_cee .GetNumberAsFloat (_fdef );
if _bdbc !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gabd .Gamma =_aggg ;};return _gabd ,nil ;};func _gabea (_gcbe _cee .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fca .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gcbe .String (),_gcbe );
_dagc :=NewPdfColorspaceSpecialPattern ();if _bacb ,_aebfc :=_gcbe .(*_cee .PdfIndirectObject );_aebfc {_dagc ._gfcg =_bacb ;};_gcbe =_cee .TraceToDirectObject (_gcbe );if _ggca ,_gedb :=_gcbe .(*_cee .PdfObjectName );_gedb {if *_ggca !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dagc ,nil ;};_ddbc ,_eegf :=_gcbe .(*_cee .PdfObjectArray );if !_eegf {_fca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gcbe );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _ddbc .Len ()!=1&&_ddbc .Len ()!=2{_fca .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_ddbc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gcbe =_ddbc .Get (0);if _gaga ,_fceg :=_gcbe .(*_cee .PdfObjectName );_fceg {if *_gaga !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fca .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gaga );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _ddbc .Len ()> 1{_gcbe =_ddbc .Get (1);_gcbe =_cee .TraceToDirectObject (_gcbe );_eafcg ,_fccd :=NewPdfColorspaceFromPdfObject (_gcbe );if _fccd !=nil {return nil ,_fccd ;
};_dagc .UnderlyingCS =_eafcg ;};_fca .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dagc .UnderlyingCS );
return _dagc ,nil ;};func (_gegb SignatureValidationResult )String ()string {var _fcege _cd .Buffer ;_fcege .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gegb .Name ));if _gegb .Date ._gffbe > 0{_fcege .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gegb .Date .ToGoTime ().String ()));
}else {_fcege .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gegb .Reason )> 0{_fcege .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gegb .Reason ));
}else {_fcege .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_gegb .Location )> 0{_fcege .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gegb .Location ));
}else {_fcege .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gegb .ContactInfo )> 0{_fcege .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gegb .ContactInfo ));
}else {_fcege .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_fcege .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gegb .Fields )));
if _gegb .IsSigned {_fcege .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_fcege .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _gegb .IsVerified {_fcege .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_fcege .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _gegb .IsTrusted {_fcege .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_fcege .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_gegb .GeneralizedTime .IsZero (){_fcege .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gegb .GeneralizedTime .String ()));};if _gegb .DiffResults !=nil {_fcege .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_gegb .DiffResults .IsPermitted ()));
if len (_gegb .DiffResults .Warnings )> 0{_fcege .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_ddeba :=range _gegb .DiffResults .Warnings {_fcege .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ddeba ));
};};if len (_gegb .DiffResults .Errors )> 0{_fcege .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_cdcac :=range _gegb .DiffResults .Errors {_fcege .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_cdcac ));
};};};if _gegb .IsCrlFound {_fcege .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");}else {_fcege .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};if _gegb .IsOcspFound {_fcege .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");}else {_fcege .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};return _fcege .String ();};func (_fffgb *pdfFontType3 )baseFields ()*fontCommon {return &_fffgb .fontCommon };

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_agcc *PdfPageResources )SetXObjectByName (keyName _cee .PdfObjectName ,stream *_cee .PdfObjectStream )error {if _agcc .XObject ==nil {_agcc .XObject =_cee .MakeDict ();};_gedfa :=_cee .TraceToDirectObject (_agcc .XObject );_ggge ,_adeca :=_gedfa .(*_cee .PdfObjectDictionary );
if !_adeca {_fca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_agcc .XObject ,_gedfa );return _cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggge .Set (keyName ,stream );return nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gcdbb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gcdbb .AlternateSpace ==nil {return nil ,_cdf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gcdbb .AlternateSpace .ColorToRGB (color );};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_caddc *PdfReader )Inspect ()(map[string ]int ,error ){return _caddc ._ffdgf .Inspect ()};

// StdFontName represents name of a standard font.
type StdFontName =_ce .StdFontName ;

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_daecdb *PdfReader )CheckAccessRights (password []byte )(bool ,_ba .Permissions ,error ){return _daecdb ._ffdgf .CheckAccessRights (password );};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_cee .MakeDict (),ParentTreeNextKey :0};};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_bedg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject returns the PDF representation of the shading pattern.
func (_feeggd *PdfShadingPattern )ToPdfObject ()_cee .PdfObject {_feeggd .PdfPattern .ToPdfObject ();_gaea :=_feeggd .getDict ();if _feeggd .Shading !=nil {_gaea .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_feeggd .Shading .ToPdfObject ());};if _feeggd .Matrix !=nil {_gaea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_feeggd .Matrix );
};if _feeggd .ExtGState !=nil {_gaea .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_feeggd .ExtGState );};return _feeggd ._bgabc ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_afff *PdfOutlineTreeNode )ToPdfObject ()_cee .PdfObject {return _afff .GetContext ().ToPdfObject ();};

// GetOCProperties returns the optional content properties PdfObject.
func (_begfbb *PdfReader )GetOCProperties ()(_cee .PdfObject ,error ){_befa :=_begfbb ._cacfe ;_gbcda :=_befa .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gbcda =_cee .ResolveReference (_gbcda );if !_begfbb ._dbfb {_bffbe :=_begfbb .traverseObjectData (_gbcda );
if _bffbe !=nil {return nil ,_bffbe ;};};return _gbcda ,nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_beef :=Permissions {};_beef .DocMDP =docMdp ;_eefa :=_cee .MakeDict ();_eefa .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_beef ._bgaae =_eefa ;return &_beef ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_dgfec *PdfReader )GetCatalogMarkInfo ()(_cee .PdfObject ,bool ){if _dgfec ._cacfe ==nil {return nil ,false ;};_acbac :=_dgfec ._cacfe .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _acbac ,_acbac !=nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_ddcf *XObjectForm )GetContentStream ()([]byte ,error ){_gdbdc ,_ebbb :=_cee .DecodeStream (_ddcf ._fbged );if _ebbb !=nil {return nil ,_ebbb ;};return _gdbdc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eba *PdfActionGoToE )ToPdfObject ()_cee .PdfObject {_eba .PdfAction .ToPdfObject ();_fac :=_eba ._gaf ;_abf :=_fac .PdfObject .(*_cee .PdfObjectDictionary );_abf .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeGoToE )));if _eba .F !=nil {_abf .Set ("\u0046",_eba .F .ToPdfObject ());
};_abf .SetIfNotNil ("\u0044",_eba .D );_abf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eba .NewWindow );_abf .SetIfNotNil ("\u0054",_eba .T );return _fac ;};

// ToPdfObject implements interface PdfModel.
func (_faddd *Permissions )ToPdfObject ()_cee .PdfObject {return _faddd ._bgaae };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_adc :=NewPdfAction ();_aac :=&PdfActionRendition {};_aac .PdfAction =_adc ;_adc .SetContext (_aac );return _aac ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ffdgf *_cee .PdfParser ;_adcdc _cee .PdfObject ;_gfgcd *_cee .PdfIndirectObject ;_bfcgg *_cee .PdfObjectDictionary ;_fded []*_cee .PdfIndirectObject ;PageList []*PdfPage ;_gadfe int ;_cacfe *_cee .PdfObjectDictionary ;_bafag *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_aaggd *Permissions ;_gccce map[*PdfReader ]*PdfReader ;_befca []*PdfReader ;_fcgbe *modelManager ;_dbfb bool ;_efaec map[_cee .PdfObject ]struct{};_cadbb _fc .ReadSeeker ;_cdddg string ;_cgegc bool ;_ddbge string ;
_accf *ReaderOpts ;_dddf bool ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cdgce *_cee .PdfIndirectObject ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_fgab *PdfAppender )SetDocInfo (info *PdfInfo ){_fgab ._eafc =info };func _eagcc (_acdcf *_cee .PdfObjectArray )(float64 ,error ){_gdcgf ,_bdacg :=_acdcf .ToFloat64Array ();if _bdacg !=nil {_fca .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acdcf ,_bdacg );
};switch len (_gdcgf ){case 1:return _gdcgf [0],nil ;case 3:_acffca :=PdfColorspaceDeviceRGB {};_cabcf ,_ebdfc :=_acffca .ColorFromFloats (_gdcgf );if _ebdfc !=nil {return 0.0,_ebdfc ;};return _cabcf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ecbbe :=PdfColorspaceDeviceCMYK {};
_agfgaa ,_fdbgb :=_ecbbe .ColorFromFloats (_gdcgf );if _fdbgb !=nil {return 0.0,_fdbgb ;};_ccbfc ,_fdbgb :=_ecbbe .ColorToRGB (_agfgaa .(*PdfColorDeviceCMYK ));if _fdbgb !=nil {return 0.0,_fdbgb ;};return _ccbfc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_bdacg =_cdf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fca .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acdcf ,_bdacg );
return 0.0,_bdacg ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cee .PdfObjectStream )(*XObjectImage ,error ){_dgbgbd :=&XObjectImage {};_dgbgbd ._fggac =stream ;_ccccf :=*(stream .PdfObjectDictionary );_cedfgg ,_fcfbad :=_cee .NewEncoderFromStream (stream );if _fcfbad !=nil {return nil ,_fcfbad ;
};_dgbgbd .Filter =_cedfgg ;if _fbdgea :=_cee .TraceToDirectObject (_ccccf .Get ("\u0057\u0069\u0064t\u0068"));_fbdgea !=nil {_dgab ,_edcfd :=_fbdgea .(*_cee .PdfObjectInteger );if !_edcfd {return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_bbcceb :=int64 (*_dgab );_dgbgbd .Width =&_bbcceb ;}else {return nil ,_cdf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _eadea :=_cee .TraceToDirectObject (_ccccf .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_eadea !=nil {_bfebg ,_dace :=_eadea .(*_cee .PdfObjectInteger );if !_dace {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dceab :=int64 (*_bfebg );
_dgbgbd .Height =&_dceab ;}else {return nil ,_cdf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _ccedb :=_cee .TraceToDirectObject (_ccccf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_ccedb !=nil {_ceaea ,_gagfc :=NewPdfColorspaceFromPdfObject (_ccedb );if _gagfc !=nil {return nil ,_gagfc ;};_dgbgbd .ColorSpace =_ceaea ;}else {_fca .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_dgbgbd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fgdee :=_cee .TraceToDirectObject (_ccccf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fgdee !=nil {_defde ,_faad :=_fgdee .(*_cee .PdfObjectInteger );
if !_faad {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ebfdd :=int64 (*_defde );_dgbgbd .BitsPerComponent =&_ebfdd ;};_dgbgbd .Intent =_ccccf .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dgbgbd .ImageMask =_ccccf .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dgbgbd .Mask =_ccccf .Get ("\u004d\u0061\u0073\u006b");_dgbgbd .Decode =_ccccf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dgbgbd .Interpolate =_ccccf .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dgbgbd .Alternatives =_ccccf .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dgbgbd .SMask =_ccccf .Get ("\u0053\u004d\u0061s\u006b");_dgbgbd .SMaskInData =_ccccf .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dgbgbd .Matte =_ccccf .Get ("\u004d\u0061\u0074t\u0065");_dgbgbd .Name =_ccccf .Get ("\u004e\u0061\u006d\u0065");_dgbgbd .StructParent =_ccccf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dgbgbd .ID =_ccccf .Get ("\u0049\u0044");
_dgbgbd .OPI =_ccccf .Get ("\u004f\u0050\u0049");_dgbgbd .Metadata =_ccccf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dgbgbd .OC =_ccccf .Get ("\u004f\u0043");_dgbgbd .Stream =stream .Stream ;return _dgbgbd ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ccbb :_cee .MakeIndirectObject (_cee .MakeDict ())}};func (_aef *PdfReader )newPdfAnnotationFreeTextFromDict (_decf *_cee .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gbdbd :=PdfAnnotationFreeText {};
_aebdb ,_bafb :=_aef .newPdfAnnotationMarkupFromDict (_decf );if _bafb !=nil {return nil ,_bafb ;};_gbdbd .PdfAnnotationMarkup =_aebdb ;_gbdbd .DA =_decf .Get ("\u0044\u0041");_gbdbd .Q =_decf .Get ("\u0051");_gbdbd .RC =_decf .Get ("\u0052\u0043");_gbdbd .DS =_decf .Get ("\u0044\u0053");
_gbdbd .CL =_decf .Get ("\u0043\u004c");_gbdbd .IT =_decf .Get ("\u0049\u0054");_gbdbd .BE =_decf .Get ("\u0042\u0045");_gbdbd .RD =_decf .Get ("\u0052\u0044");_gbdbd .BS =_decf .Get ("\u0042\u0053");_gbdbd .LE =_decf .Get ("\u004c\u0045");return &_gbdbd ,nil ;
};

// SetFillImage attach a model.Image to push button.
func (_gffb *PdfFieldButton )SetFillImage (image *Image ){if _gffb .IsPush (){_gffb ._effg =image ;};};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_dgaeb :=map[rune ]int {};for _ ,_dacdf :=range text {_dgaeb [_dacdf ]++;};return _dgaeb ;};func (_feca *PdfReader )newPdfAnnotationStrikeOut (_ecc *_cee .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bcd :=PdfAnnotationStrikeOut {};
_cbg ,_aabc :=_feca .newPdfAnnotationMarkupFromDict (_ecc );if _aabc !=nil {return nil ,_aabc ;};_bcd .PdfAnnotationMarkup =_cbg ;_bcd .QuadPoints =_ecc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bcd ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cece :=&PdfColorspaceCalGray {};_cece .BlackPoint =[]float64 {0.0,0.0,0.0};_cece .Gamma =1;return _cece ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ffecg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ffecg ._gabf .(*PdfShadingPattern );};

// ToPdfObject implements interface PdfModel.
func (_dbagg *PdfSignature )ToPdfObject ()_cee .PdfObject {_bffbb :=_dbagg ._gcfbb ;var _ccbfd *_cee .PdfObjectDictionary ;if _daagg ,_acaee :=_bffbb .PdfObject .(*pdfSignDictionary );_acaee {_ccbfd =_daagg .PdfObjectDictionary ;}else {_ccbfd =_bffbb .PdfObject .(*_cee .PdfObjectDictionary );
};_ccbfd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dbagg .Type );_ccbfd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dbagg .Filter );_ccbfd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dbagg .SubFilter );_ccbfd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dbagg .ByteRange );
_ccbfd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dbagg .Contents );_ccbfd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dbagg .Cert );_ccbfd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dbagg .Name );_ccbfd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dbagg .Reason );
_ccbfd .SetIfNotNil ("\u004d",_dbagg .M );_ccbfd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dbagg .Reference );_ccbfd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dbagg .Changes );_ccbfd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dbagg .ContactInfo );
_ccbfd .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_dbagg .Location );return _bffbb ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cee .PdfObjectString ;Author *_cee .PdfObjectString ;Subject *_cee .PdfObjectString ;Keywords *_cee .PdfObjectString ;Creator *_cee .PdfObjectString ;Producer *_cee .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_cee .PdfObjectName ;_ecfea *_cee .PdfObjectDictionary ;};

// SetCatalogLanguage sets the catalog language.
func (_cbbfbd *PdfWriter )SetCatalogLanguage (lang _cee .PdfObject )error {if lang ==nil {_cbbfbd ._cdebc .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_cbbfbd .addObject (lang );_cbbfbd ._cdebc .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;
};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_abcda *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _abcda .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_beab *PdfReader )newPdfAnnotationMovieFromDict (_ccfd *_cee .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_aadf :=PdfAnnotationMovie {};
_aadf .T =_ccfd .Get ("\u0054");_aadf .Movie =_ccfd .Get ("\u004d\u006f\u0076i\u0065");_aadf .A =_ccfd .Get ("\u0041");return &_aadf ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_aecca *PdfPage )AddExtGState (name _cee .PdfObjectName ,egs *_cee .PdfObjectDictionary )error {if _aecca .Resources ==nil {_aecca .Resources =NewPdfPageResources ();};if _aecca .Resources .ExtGState ==nil {_aecca .Resources .ExtGState =_cee .MakeDict ();
};_gecac ,_eddbe :=_cee .TraceToDirectObject (_aecca .Resources .ExtGState ).(*_cee .PdfObjectDictionary );if !_eddbe {_fca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cee .TraceToDirectObject (_aecca .Resources .ExtGState ));
return _cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gecac .Set (name ,egs );return nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_gddcb :=&PdfShadingPatternType3 {};_gddcb .Matrix =_cee .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gddcb .PdfPattern =&PdfPattern {};_gddcb .PdfPattern .PatternType =int64 (*_cee .MakeInteger (2));
_gddcb .PdfPattern ._gabf =_gddcb ;_gddcb .PdfPattern ._bgabc =_cee .MakeIndirectObject (_cee .MakeDict ());return _gddcb ;};

// ToPdfObject implements interface PdfModel.
func (_bb *PdfActionThread )ToPdfObject ()_cee .PdfObject {_bb .PdfAction .ToPdfObject ();_fde :=_bb ._gaf ;_afc :=_fde .PdfObject .(*_cee .PdfObjectDictionary );_afc .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeThread )));if _bb .F !=nil {_afc .Set ("\u0046",_bb .F .ToPdfObject ());
};_afc .SetIfNotNil ("\u0044",_bb .D );_afc .SetIfNotNil ("\u0042",_bb .B );return _fde ;};func _eeaec (_ggccd _cee .PdfObject )(PdfFunction ,error ){_ggccd =_cee .ResolveReference (_ggccd );if _agcdc ,_gdcba :=_ggccd .(*_cee .PdfObjectStream );_gdcba {_ffacc :=_agcdc .PdfObjectDictionary ;
_gcaca ,_beeac :=_ffacc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cee .PdfObjectInteger );if !_beeac {_fca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gcaca ==0{return _fabef (_agcdc );}else if *_gcaca ==4{return _agac (_agcdc );
}else {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cfgcf ,_fdbgf :=_ggccd .(*_cee .PdfIndirectObject );_fdbgf {_bfcfd ,_gbca :=_cfgcf .PdfObject .(*_cee .PdfObjectDictionary );
if !_gbca {_fca .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dggea ,_gbca :=_bfcfd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cee .PdfObjectInteger );
if !_gbca {_fca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dggea ==2{return _fegfe (_cfgcf );}else if *_dggea ==3{return _afgafg (_cfgcf );}else {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dcef ,_gcfffb :=_ggccd .(*_cee .PdfObjectDictionary );
_gcfffb {_gfde ,_effbb :=_dcef .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cee .PdfObjectInteger );if !_effbb {_fca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gfde ==2{return _fegfe (_dcef );}else if *_gfde ==3{return _afgafg (_dcef );
}else {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fca .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ggccd );
return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_efagdb *XObjectImage )getParamsDict ()*_cee .PdfObjectDictionary {_afefbb :=_cee .MakeDict ();_afefbb .Set ("\u0057\u0069\u0064t\u0068",_cee .MakeInteger (*_efagdb .Width ));
_afefbb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cee .MakeInteger (*_efagdb .Height ));_afefbb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cee .MakeInteger (int64 (_efagdb .ColorSpace .GetNumComponents ())));
_afefbb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cee .MakeInteger (*_efagdb .BitsPerComponent ));return _afefbb ;};

// IsFitWindow returns the value of the fitWindow flag.
func (_ecfbg *ViewerPreferences )IsFitWindow ()bool {if _ecfbg ._cbdgc ==nil {return false ;};return *_ecfbg ._cbdgc ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func _cdba (_bdad *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bdad }};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cee .PdfObject ;MK _cee .PdfObject ;A _cee .PdfObject ;AA _cee .PdfObject ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _cee .PdfObjectName ;};

// Initialize initializes the PdfSignature.
func (_daega *PdfSignature )Initialize ()error {if _daega .Handler ==nil {return _cdf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _daega .Handler .InitSignature (_daega );};func (_degfg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_fdabd :=_degfg .Parent ;for _fdabd !=nil {_fbbdb ,_ffcbg :=_cee .GetDict (_fdabd );if !_ffcbg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cdf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ggcgd :=_fbbdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggcgd !=nil {_eccgc ,_fegdb :=_cee .GetDict (_ggcgd );
if !_fegdb {return nil ,_cdf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_ebab ,_fdaee :=NewPdfPageResourcesFromDict (_eccgc );if _fdaee !=nil {return nil ,_fdaee ;};return _ebab ,nil ;
};_fdabd =_fbbdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_baacd *PdfPage )HasXObjectByName (name _cee .PdfObjectName )bool {_fbfbgf ,_bdaa :=_baacd .Resources .XObject .(*_cee .PdfObjectDictionary );if !_bdaa {return false ;};if _ggaagc :=_fbfbgf .Get (name );_ggaagc !=nil {return true ;};return false ;
};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_egab PdfModel ;_ccbb *_cee .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cee .PdfObjectName ;T *_cee .PdfObjectString ;TU *_cee .PdfObjectString ;TM *_cee .PdfObjectString ;Ff *_cee .PdfObjectInteger ;
V _cee .PdfObject ;DV _cee .PdfObject ;AA _cee .PdfObject ;VariableText *VariableText ;};func (_dcfe *pdfFontSimple )updateStandard14Font (){_cddd ,_debgcd :=_dcfe .Encoder ().(_dae .SimpleEncoder );if !_debgcd {_fca .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dcfe .Encoder (),_dcfe );
return ;};_bbgbg :=_cddd .Charcodes ();_dcfe ._ccfb =make (map[_dae .CharCode ]float64 ,len (_bbgbg ));for _ ,_gaaae :=range _bbgbg {_efafg ,_ :=_cddd .CharcodeToRune (_gaaae );_dfdbc ,_ :=_dcfe ._daefa .Read (_efafg );_dcfe ._ccfb [_gaaae ]=_dfdbc .Wx ;
};};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gcfbb *_cee .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cee .PdfObjectName ;Filter *_cee .PdfObjectName ;SubFilter *_cee .PdfObjectName ;Contents *_cee .PdfObjectString ;Cert _cee .PdfObject ;ByteRange *_cee .PdfObjectArray ;Reference *_cee .PdfObjectArray ;Changes *_cee .PdfObjectArray ;Name *_cee .PdfObjectString ;
M *_cee .PdfObjectString ;Location *_cee .PdfObjectString ;Reason *_cee .PdfObjectString ;ContactInfo *_cee .PdfObjectString ;R *_cee .PdfObjectInteger ;V *_cee .PdfObjectInteger ;PropBuild *_cee .PdfObjectDictionary ;PropAuthTime *_cee .PdfObjectInteger ;
PropAuthType *_cee .PdfObjectName ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bbdc []byte ;_efcg []uint32 ;_gaagd *_cee .PdfObjectStream ;};func (_gebfb *PdfReader )newPdfSignatureReferenceFromDict (_bdfcd *_cee .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _gbef ,_fcgbg :=_gebfb ._fcgbe .GetModelFromPrimitive (_bdfcd ).(*PdfSignatureReference );
_fcgbg {return _gbef ,nil ;};_bcbcg :=&PdfSignatureReference {_bfegdg :_bdfcd ,Data :_bdfcd .Get ("\u0044\u0061\u0074\u0061")};var _ccdegb bool ;_bcbcg .Type ,_ =_cee .GetName (_bdfcd .Get ("\u0054\u0079\u0070\u0065"));_bcbcg .TransformMethod ,_ccdegb =_cee .GetName (_bdfcd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ccdegb {_fca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bcbcg .TransformParams ,_ =_cee .GetDict (_bdfcd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bcbcg .DigestMethod ,_ =_cee .GetName (_bdfcd .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _bcbcg ,nil ;};

// GetMCID returns the MCID of the KValue.
func (_efeag *KValue )GetMCID ()*int {return _efeag ._dfcf };

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cee .PdfObject ;Flags _cee .PdfObject ;};

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_abbff *ViewerPreferences )IsHideWindowUI ()bool {if _abbff ._gfffg ==nil {return false ;};return *_abbff ._gfffg ;};func (_adege *PdfReader )newPdfPageFromDict (_geee *_cee .PdfObjectDictionary )(*PdfPage ,error ){_efcee :=NewPdfPage ();_efcee ._cfdab =_geee ;
_efcee ._bfeab =*_geee ;_aebad :=*_geee ;_ggebg ,_afgg :=_aebad .Get ("\u0054\u0079\u0070\u0065").(*_cee .PdfObjectName );if !_afgg {return nil ,_cdf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_ggebg !="\u0050\u0061\u0067\u0065"{return nil ,_cdf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _bcgdf :=_aebad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bcgdf !=nil {_efcee .Parent =_bcgdf ;};if _agafe :=_aebad .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_agafe !=nil {_fgbc ,_agda :=_cee .GetString (_agafe );if !_agda {return nil ,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_ecgdf ,_gbfgg :=NewPdfDate (_fgbc .Str ());if _gbfgg !=nil {return nil ,_gbfgg ;};_efcee .LastModified =&_ecgdf ;};if _dgfac :=_aebad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dgfac !=nil &&!_cee .IsNullObject (_dgfac ){_edfa ,_dbdg :=_cee .GetDict (_dgfac );
if !_dbdg {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dgfac );};var _befde error ;_efcee .Resources ,_befde =NewPdfPageResourcesFromDict (_edfa );
if _befde !=nil {return nil ,_befde ;};}else {_bedbb ,_eegaf :=_efcee .getParentResources ();if _eegaf !=nil {return nil ,_eegaf ;};if _bedbb ==nil {_bedbb =NewPdfPageResources ();};_efcee .Resources =_bedbb ;};if _eaedg :=_aebad .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_eaedg !=nil {_aaagc ,_gbdgb :=_cee .GetArray (_eaedg );if !_gbdgb {return nil ,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gadg error ;
_efcee .MediaBox ,_gadg =NewPdfRectangle (*_aaagc );if _gadg !=nil {return nil ,_gadg ;};};if _facadb :=_aebad .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_facadb !=nil {_cdfc ,_efgg :=_cee .GetArray (_facadb );if !_efgg {return nil ,_cdf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _abfaf error ;_efcee .CropBox ,_abfaf =NewPdfRectangle (*_cdfc );if _abfaf !=nil {return nil ,_abfaf ;};};if _fefgc :=_aebad .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fefgc !=nil {_gddag ,_aebee :=_cee .GetArray (_fefgc );if !_aebee {return nil ,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ddaf error ;_efcee .BleedBox ,_ddaf =NewPdfRectangle (*_gddag );if _ddaf !=nil {return nil ,_ddaf ;};};if _fafc :=_aebad .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fafc !=nil {_cdbbf ,_fgegbe :=_cee .GetArray (_fafc );if !_fgegbe {return nil ,_cdf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _aaagf error ;_efcee .TrimBox ,_aaagf =NewPdfRectangle (*_cdbbf );if _aaagf !=nil {return nil ,_aaagf ;};};if _ebgd :=_aebad .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_ebgd !=nil {_efec ,_bcagde :=_cee .GetArray (_ebgd );if !_bcagde {return nil ,_cdf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gecbe error ;_efcee .ArtBox ,_gecbe =NewPdfRectangle (*_efec );if _gecbe !=nil {return nil ,_gecbe ;};};if _fgba :=_aebad .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fgba !=nil {_efcee .BoxColorInfo =_fgba ;};if _eeedb :=_aebad .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_eeedb !=nil {_efcee .Contents =_eeedb ;};if _bgfc :=_aebad .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bgfc !=nil {_fgfc ,_edggf :=_cee .GetNumberAsInt64 (_bgfc );if _edggf !=nil {return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_efcee .Rotate =&_fgfc ;};if _cfdbb :=_aebad .Get ("\u0047\u0072\u006fu\u0070");_cfdbb !=nil {_efcee .Group =_cfdbb ;};if _caffg :=_aebad .Get ("\u0054\u0068\u0075m\u0062");_caffg !=nil {_efcee .Thumb =_caffg ;};if _ggfa :=_aebad .Get ("\u0042");_ggfa !=nil {_efcee .B =_ggfa ;
};if _cffcd :=_aebad .Get ("\u0044\u0075\u0072");_cffcd !=nil {_efcee .Dur =_cffcd ;};if _cfcea :=_aebad .Get ("\u0054\u0072\u0061n\u0073");_cfcea !=nil {_efcee .Trans =_cfcea ;};if _adff :=_aebad .Get ("\u0041\u0041");_adff !=nil {_efcee .AA =_adff ;};
if _fabce :=_aebad .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fabce !=nil {_efcee .Metadata =_fabce ;};if _gdbbf :=_aebad .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gdbbf !=nil {_efcee .PieceInfo =_gdbbf ;};if _cggf :=_aebad .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_cggf !=nil {_efcee .StructParents =_cggf ;};if _eaaa :=_aebad .Get ("\u0049\u0044");_eaaa !=nil {_efcee .ID =_eaaa ;};if _dfaf :=_aebad .Get ("\u0050\u005a");_dfaf !=nil {_efcee .PZ =_dfaf ;};if _cfacd :=_aebad .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cfacd !=nil {_efcee .SeparationInfo =_cfacd ;};if _egcc :=_aebad .Get ("\u0054\u0061\u0062\u0073");_egcc !=nil {_efcee .Tabs =_egcc ;};if _ffca :=_aebad .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_ffca !=nil {_efcee .TemplateInstantiated =_ffca ;};if _beece :=_aebad .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_beece !=nil {_efcee .PresSteps =_beece ;};if _ebcgf :=_aebad .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ebcgf !=nil {_efcee .UserUnit =_ebcgf ;
};if _aefdg :=_aebad .Get ("\u0056\u0050");_aefdg !=nil {_efcee .VP =_aefdg ;};if _caeca :=_aebad .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_caeca !=nil {_efcee .Annots =_caeca ;};_efcee ._acbbg =_adege ;return _efcee ,nil ;};func _dbaba (_baegc _cee .PdfObject ,_efgbg *fontCommon )(*_dgg .CMap ,error ){_adfdf ,_gfab :=_cee .GetStream (_baegc );
if !_gfab {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_baegc );
return nil ,_cee .ErrTypeError ;};_geaaef ,_dabgg :=_cee .DecodeStream (_adfdf );if _dabgg !=nil {return nil ,_dabgg ;};_ecdeg ,_dabgg :=_dgg .LoadCmapFromData (_geaaef ,!_efgbg .isCIDFont ());if _dabgg !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_adfdf .ObjectNumber ,_dabgg );
};return _ecdeg ,_dabgg ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject implements interface PdfModel.
func (_abeb *PdfAnnotationPopup )ToPdfObject ()_cee .PdfObject {_abeb .PdfAnnotation .ToPdfObject ();_ecb :=_abeb ._eddc ;_fcg :=_ecb .PdfObject .(*_cee .PdfObjectDictionary );_fcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0050\u006f\u0070u\u0070"));
_fcg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_abeb .Parent );_fcg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_abeb .Open );return _ecb ;};

// K returns the value of the key component of the color.
func (_gade *PdfColorDeviceCMYK )K ()float64 {return _gade [3]};func (_ebbc fontCommon )fontFlags ()int {if _ebbc ._ebcad ==nil {return 0;};return _ebbc ._ebcad ._cadgge ;};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_fgbge *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_fgbge ._efgaa =nonFullScreenPageMode ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_eabfa *PdfPageResources )GetXObjectFormByName (keyName _cee .PdfObjectName )(*XObjectForm ,error ){_adca ,_cdbdf :=_eabfa .GetXObjectByName (keyName );if _adca ==nil {return nil ,nil ;};if _cdbdf !=XObjectTypeForm {return nil ,_cdf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_dddag ,_cegc :=NewXObjectFormFromStream (_adca );if _cegc !=nil {return nil ,_cegc ;};return _dddag ,nil ;};func (_cgdde *PdfWriter )writeNamesDictionary ()error {if _cgdde ._bbcfgd ==nil {return nil ;};_bddbe :=_cgdde ._bbcfgd .ToPdfObject ();_cgdde ._cdebc .Set ("\u004e\u0061\u006de\u0073",_bddbe );
_agagc :=_cgdde .addObjects (_bddbe );if _agagc !=nil {return _agagc ;};return nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cee .PdfObject ;T3DV _cee .PdfObject ;T3DA _cee .PdfObject ;T3DI _cee .PdfObject ;T3DB _cee .PdfObject ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_cgdg *PdfReader )newPdfActionResetFormFromDict (_eafd *_cee .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_eafd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eafd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_bdccf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bdccf ._ebcad };

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_febd *PdfPageResources )AddExtGState (gsName _cee .PdfObjectName ,gsDict _cee .PdfObject )error {if _febd .ExtGState ==nil {_febd .ExtGState =_cee .MakeDict ();};_gadfa :=_febd .ExtGState ;_cced ,_fbfff :=_cee .TraceToDirectObject (_gadfa ).(*_cee .PdfObjectDictionary );
if !_fbfff {_fca .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gadfa ,_cee .TraceToDirectObject (_gadfa ));
return _cee .ErrTypeError ;};_cced .Set (gsName ,gsDict );return nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dbgb *PdfColorCalGray )GetNumComponents ()int {return 1};

// SetAction sets the PDF action for the annotation link.
func (_dgaf *PdfAnnotationLink )SetAction (action *PdfAction ){_dgaf ._bef =action ;if action ==nil {_dgaf .A =nil ;};};func (_aafacb *PdfWriter )writeTrailer (_efcba int ){_aafacb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _efab :=0;_efab <=_efcba ;
{for ;_efab <=_efcba ;_efab ++{_fcedb ,_dcbff :=_aafacb ._gceegb [_efab ];if _dcbff &&(!_aafacb ._fbaeb ||_aafacb ._fbaeb &&(_fcedb .Type ==1&&_fcedb .Offset >=_aafacb ._ffcbgf ||_fcedb .Type ==0)){break ;};};var _dcbgb int ;for _dcbgb =_efab +1;_dcbgb <=_efcba ;
_dcbgb ++{_daffb ,_fbbcc :=_aafacb ._gceegb [_dcbgb ];if _fbbcc &&(!_aafacb ._fbaeb ||_aafacb ._fbaeb &&(_daffb .Type ==1&&_daffb .Offset > _aafacb ._ffcbgf )){continue ;};break ;};_gcfdc :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_efab ,_dcbgb -_efab );
_aafacb .writeString (_gcfdc );for _bdeefe :=_efab ;_bdeefe < _dcbgb ;_bdeefe ++{_efaag :=_aafacb ._gceegb [_bdeefe ];switch _efaag .Type {case 0:_gcfdc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_aafacb .writeString (_gcfdc );case 1:_gcfdc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_efaag .Offset ,0);_aafacb .writeString (_gcfdc );};};_efab =_dcbgb +1;};_efgbdg :=_cee .MakeDict ();_efgbdg .Set ("\u0049\u006e\u0066\u006f",_aafacb ._cbfac );
_efgbdg .Set ("\u0052\u006f\u006f\u0074",_aafacb ._fadf );_efgbdg .Set ("\u0053\u0069\u007a\u0065",_cee .MakeInteger (int64 (_efcba +1)));if _aafacb ._fbaeb &&_aafacb ._dfdbb > 0{_efgbdg .Set ("\u0050\u0072\u0065\u0076",_cee .MakeInteger (_aafacb ._dfdbb ));
};if _aafacb ._ddafb !=nil {_efgbdg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aafacb ._bbfag );};if _aafacb ._aeffd ==nil &&_aafacb ._dfea !=""&&_aafacb ._bcggd !=""{_aafacb ._aeffd =_cee .MakeArray (_cee .MakeHexString (_aafacb ._dfea ),_cee .MakeHexString (_aafacb ._bcggd ));
};if _aafacb ._aeffd !=nil {_efgbdg .Set ("\u0049\u0044",_aafacb ._aeffd );_fca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aafacb ._aeffd );};_aafacb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_aafacb .writeString (_efgbdg .WriteString ());
_aafacb .writeString ("\u000a");};

// SetPrintPageRange sets the value of the printPageRange.
func (_gcggf *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_gcggf ._acfdg =printPageRange ;};

// ToPdfObject implements interface PdfModel.
func (_bbc *PdfActionSubmitForm )ToPdfObject ()_cee .PdfObject {_bbc .PdfAction .ToPdfObject ();_dc :=_bbc ._gaf ;_bc :=_dc .PdfObject .(*_cee .PdfObjectDictionary );_bc .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeSubmitForm )));if _bbc .F !=nil {_bc .Set ("\u0046",_bbc .F .ToPdfObject ());
};_bc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bbc .Fields );_bc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bbc .Flags );return _dc ;};

// PrintScaling returns the value of the printScaling.
func (_dbdba *ViewerPreferences )PrintScaling ()PrintScaling {return _dbdba ._fgbdf };

// ToPdfObject implements interface PdfModel.
func (_bddb *PdfAnnotationWidget )ToPdfObject ()_cee .PdfObject {_bddb .PdfAnnotation .ToPdfObject ();_addb :=_bddb ._eddc ;_dcaf :=_addb .PdfObject .(*_cee .PdfObjectDictionary );if _bddb ._dcf {return _addb ;};_bddb ._dcf =true ;_dcaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_dcaf .SetIfNotNil ("\u0048",_bddb .H );_dcaf .SetIfNotNil ("\u004d\u004b",_bddb .MK );_dcaf .SetIfNotNil ("\u0041",_bddb .A );_dcaf .SetIfNotNil ("\u0041\u0041",_bddb .AA );_dcaf .SetIfNotNil ("\u0042\u0053",_bddb .BS );_dgfg :=_bddb .Parent ;if _bddb ._dec !=nil {if _bddb ._dec ._ccbb ==_bddb ._eddc {_bddb ._dec .ToPdfObject ();
};_dgfg =_bddb ._dec .GetContainingPdfObject ();};if _dgfg !=_addb {_dcaf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgfg );};_bddb ._dcf =false ;return _addb ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bab :=NewPdfAnnotation ();_dgcf :=&PdfAnnotationStrikeOut {};_dgcf .PdfAnnotation =_bab ;_dgcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bab .SetContext (_dgcf );return _dgcf ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_gfg :=NewPdfAnnotation ();_ccb :=&PdfAnnotationLine {};_ccb .PdfAnnotation =_gfg ;_ccb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfg .SetContext (_ccb );return _ccb ;};func (_dgfeg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _dgfeg ._ebcad };


// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cee .PdfObjectArray )(*PdfRectangle ,error ){_bagcfb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ecedb error ;_bagcfb .Llx ,_ecedb =_cee .GetNumberAsFloat (arr .Get (0));if _ecedb !=nil {return nil ,_ecedb ;};_bagcfb .Lly ,_ecedb =_cee .GetNumberAsFloat (arr .Get (1));if _ecedb !=nil {return nil ,_ecedb ;};_bagcfb .Urx ,_ecedb =_cee .GetNumberAsFloat (arr .Get (2));
if _ecedb !=nil {return nil ,_ecedb ;};_bagcfb .Ury ,_ecedb =_cee .GetNumberAsFloat (arr .Get (3));if _ecedb !=nil {return nil ,_ecedb ;};return &_bagcfb ,nil ;};func (_bgbac *PdfField )inherit (_adfa func (*PdfField )bool )(bool ,error ){_dffaa :=map[*PdfField ]bool {};
_cbc :=false ;_bade :=_bgbac ;for _bade !=nil {if _ ,_cgbc :=_dffaa [_bade ];_cgbc {return false ,_cdf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_efaeea :=_adfa (_bade );if _efaeea {_cbc =true ;
break ;};_dffaa [_bade ]=true ;_bade =_bade .Parent ;};return _cbc ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_aadc DefaultImageHandler )NewImageFromGoImage (goimg _bg .Image )(*Image ,error ){_bgfe ,_gfgc :=_ca .FromGoImage (goimg );if _gfgc !=nil {return nil ,_gfgc ;};_fbbd :=_acecd (_bgfe .Base ());return &_fbbd ,nil ;};func _agac (_ecbg *_cee .PdfObjectStream )(*PdfFunctionType4 ,error ){_dfgce :=&PdfFunctionType4 {};
_dfgce ._agbg =_ecbg ;_eddd :=_ecbg .PdfObjectDictionary ;_gbegb ,_bdade :=_cee .TraceToDirectObject (_eddd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cee .PdfObjectArray );if !_bdade {_fca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gbegb .Len ()%2!=0{_fca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cegdc ,_feabc :=_gbegb .ToFloat64Array ();if _feabc !=nil {return nil ,_feabc ;};_dfgce .Domain =_cegdc ;_gbegb ,_bdade =_cee .TraceToDirectObject (_eddd .Get ("\u0052\u0061\u006eg\u0065")).(*_cee .PdfObjectArray );
if _bdade {if _gbegb .Len ()< 0||_gbegb .Len ()%2!=0{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cgbfc ,_bffega :=_gbegb .ToFloat64Array ();if _bffega !=nil {return nil ,_bffega ;};_dfgce .Range =_cgbfc ;
};_daage ,_feabc :=_cee .DecodeStream (_ecbg );if _feabc !=nil {return nil ,_feabc ;};_dfgce ._fedee =_daage ;_cecd :=_daa .NewPSParser (_daage );_abgcc ,_feabc :=_cecd .Parse ();if _feabc !=nil {return nil ,_feabc ;};_dfgce .Program =_abgcc ;return _dfgce ,nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbedgd *PdfShadingType1 )ToPdfObject ()_cee .PdfObject {_dbedgd .PdfShading .ToPdfObject ();_eaedaa ,_bgfcf :=_dbedgd .getShadingDict ();if _bgfcf !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbedgd .Domain !=nil {_eaedaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbedgd .Domain );};if _dbedgd .Matrix !=nil {_eaedaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbedgd .Matrix );};if _dbedgd .Function !=nil {if len (_dbedgd .Function )==1{_eaedaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbedgd .Function [0].ToPdfObject ());
}else {_afcff :=_cee .MakeArray ();for _ ,_fafccd :=range _dbedgd .Function {_afcff .Append (_fafccd .ToPdfObject ());};_eaedaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afcff );};};return _dbedgd ._dfgbe ;};func (_cebd PdfFont )actualFont ()pdfFont {if _cebd ._bggcf ==nil {_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cebd );
};return _cebd ._bggcf ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cegdf *LTV )EnableByName (name string ,extraCerts []*_dfd .Certificate )error {_feaf :=_cegdf ._gdggc ._ebdd .AcroForm ;for _ ,_dbdaa :=range _feaf .AllFields (){_cbaeb ,_ :=_dbdaa .GetContext ().(*PdfFieldSignature );if _cbaeb ==nil {continue ;
};if _ggaag :=_cbaeb .PartialName ();_ggaag !=name {continue ;};return _cegdf .Enable (_cbaeb .V ,extraCerts );};return nil ;};

// GetPerms returns the Permissions dictionary
func (_cefb *PdfReader )GetPerms ()*Permissions {return _cefb ._aaggd };

// ToPdfObject implements interface PdfModel.
func (_gbgf *PdfAnnotationInk )ToPdfObject ()_cee .PdfObject {_gbgf .PdfAnnotation .ToPdfObject ();_dba :=_gbgf ._eddc ;_cade :=_dba .PdfObject .(*_cee .PdfObjectDictionary );_gbgf .PdfAnnotationMarkup .appendToPdfDictionary (_cade );_cade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0049\u006e\u006b"));
_cade .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gbgf .InkList );_cade .SetIfNotNil ("\u0042\u0053",_gbgf .BS );return _dba ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_aeeb *PdfInfo )AddCustomInfo (name string ,value string )error {if _aeeb ._ecfea ==nil {_aeeb ._ecfea =_cee .MakeDict ();};if _ ,_acce :=_ccda [name ];_acce {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_aeeb ._ecfea .SetIfNotNil (*_cee .MakeName (name ),_cee .MakeString (value ));return nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_abdae *PdfAppender )Write (w _fc .Writer )error {if _abdae ._ccd {return _cdf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cdab :=NewPdfWriter ();_bfb ,_cbbde :=_cee .GetDict (_cdab ._cdggg );if !_cbbde {return _cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bggf ,_cbbde :=_bfb .Get ("\u004b\u0069\u0064\u0073").(*_cee .PdfObjectArray );if !_cbbde {return _cdf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_deega ,_cbbde :=_bfb .Get ("\u0043\u006f\u0075n\u0074").(*_cee .PdfObjectInteger );if !_cbbde {return _cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ffda :=_abdae ._ebdd ._ffdgf ;_ggbf :=_ffda .GetTrailer ();if _ggbf ==nil {return _cdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gfeg ,_cbbde :=_cee .GetIndirect (_ggbf .Get ("\u0052\u006f\u006f\u0074"));
if !_cbbde {return _cdf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ffag ,_cbbde :=_cee .GetDict (_gfeg );if !_cbbde {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gfeg ,*_ggbf );
return _cdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fbeb :=false ;for _ ,_edfb :=range _abdae ._ebdd .AcroForm .signatureFields (){if _edfb .Lock !=nil {_fbeb =true ;break ;};};if _fbeb {_cdab ._fadf =_gfeg ;
};for _ ,_eddbd :=range _ffag .Keys (){if _cdab ._cdebc .Get (_eddbd )==nil {_aabcb :=_ffag .Get (_eddbd );_cdab ._cdebc .Set (_eddbd ,_aabcb );};};if _abdae ._ceed !=nil {if _abdae ._ceed ._gcfcc {if _ebg :=_cee .TraceToDirectObject (_abdae ._ceed .ToPdfObject ());
!_cee .IsNullObject (_ebg ){_cdab ._cdebc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ebg );_abdae .updateObjectsDeep (_ebg ,nil );}else {_fca .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_cdab ._cdebc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_abdae ._ceed .ToPdfObject ());_abdae .updateObjectsDeep (_abdae ._ceed .ToPdfObject (),nil );};};if _abdae ._ccee !=nil {_abdae .updateObjectsDeep (_abdae ._ccee .ToPdfObject (),nil );
_cdab ._cdebc .Set ("\u0044\u0053\u0053",_abdae ._ccee .GetContainingPdfObject ());};if _abdae ._dbec !=nil {_cdab ._cdebc .Set ("\u0050\u0065\u0072m\u0073",_abdae ._dbec .ToPdfObject ());_abdae .updateObjectsDeep (_abdae ._dbec .ToPdfObject (),nil );};
if _cdab ._gceef .Major < 2{_cdab .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_cdab .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _bcfe ,_dfdb :=_cee .GetDict (_ggbf .Get ("\u0049\u006e\u0066\u006f"));_dfdb {if _ebec ,_fffb :=_cee .GetDict (_cdab ._cbfac );
_fffb {for _ ,_eabeg :=range _bcfe .Keys (){if _ebec .Get (_eabeg )==nil {_ebec .Set (_eabeg ,_bcfe .Get (_eabeg ));};};};};if _abdae ._eafc !=nil {_cdab ._cbfac =_cee .MakeIndirectObject (_abdae ._eafc .ToPdfObject ());};_abdae .updateObjectsDeep (_cdab ._cbfac ,nil );
_abdae .updateObjectsDeep (_cdab ._fadf ,nil );_bece :=false ;if len (_abdae ._ebdd .PageList )!=len (_abdae ._afca ){_bece =true ;}else {for _gbdcc :=range _abdae ._ebdd .PageList {switch {case _abdae ._afca [_gbdcc ]==_abdae ._ebdd .PageList [_gbdcc ]:case _abdae ._afca [_gbdcc ]==_abdae .Reader .PageList [_gbdcc ]:default:_bece =true ;
};if _bece {break ;};};};if _bece {_abdae .updateObjectsDeep (_cdab ._cdggg ,nil );}else {_abdae ._abda [_cdab ._cdggg ]=struct{}{};};_cdab ._cdggg .ObjectNumber =_abdae .Reader ._gfgcd .ObjectNumber ;_abdae ._edae [_cdab ._cdggg ]=_abdae .Reader ._gfgcd .ObjectNumber ;
_abgf :=[]_cee .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_gdcga :=range _abdae ._afca {_acaf :=_gdcga .ToPdfObject ();
*_deega =*_deega +1;if _gabe ,_cgba :=_acaf .(*_cee .PdfIndirectObject );_cgba &&_gabe .GetParser ()==_abdae ._ebdd ._ffdgf {_bggf .Append (&_gabe .PdfObjectReference );continue ;};if _ccce ,_dfdd :=_cee .GetDict (_acaf );_dfdd {_dcag ,_gaec :=_ccce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cee .PdfIndirectObject );
for _gaec {_fca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcag );_dccc ,_cedg :=_dcag .PdfObject .(*_cee .PdfObjectDictionary );if !_cedg {return _cdf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bacg :=range _abgf {_fca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacg );if _fefc :=_ccce .Get (_bacg );_fefc !=nil {_fca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
if len (_gdcga ._bfeab .Keys ())> 0&&!_bece {_bfcg :=_gdcga ._bfeab ;if _bdgc :=_bfcg .Get (_bacg );_bdgc !=nil {if _fefc !=_bdgc {_fca .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_bacg ,_bdgc );
_ccce .Set (_bacg ,_bdgc );};};};continue ;};if _gggc :=_dccc .Get (_bacg );_gggc !=nil {_fca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacg );_ccce .Set (_bacg ,_gggc );};};
_dcag ,_gaec =_dccc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cee .PdfIndirectObject );_fca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dccc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _bece {_ccce .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdab ._cdggg );
};};_abdae .updateObjectsDeep (_acaf ,nil );_bggf .Append (_acaf );};if _ ,_bagf :=_abdae ._dege .Seek (0,_fc .SeekStart );_bagf !=nil {return _bagf ;};_fcga :=make (map[SignatureHandler ]_fc .Writer );_acbeb :=_cee .MakeArray ();for _ ,_fbc :=range _abdae ._eccb {if _bfebf ,_ffcd :=_cee .GetIndirect (_fbc );
_ffcd {if _geegc ,_ecdf :=_bfebf .PdfObject .(*pdfSignDictionary );_ecdf {_dccf :=*_geegc ._efde ;var _cafe error ;_fcga [_dccf ],_cafe =_dccf .NewDigest (_geegc ._dddage );if _cafe !=nil {return _cafe ;};_acbeb .Append (_cee .MakeInteger (0xfffff),_cee .MakeInteger (0xfffff));
};};};if _acbeb .Len ()> 0{_acbeb .Append (_cee .MakeInteger (0xfffff),_cee .MakeInteger (0xfffff));};for _ ,_acbb :=range _abdae ._eccb {if _cef ,_gcag :=_cee .GetIndirect (_acbb );_gcag {if _gcaa ,_efag :=_cef .PdfObject .(*pdfSignDictionary );_efag {_gcaa .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_acbeb );
};};};_abee :=len (_fcga )> 0;var _ddbe _fc .Reader =_abdae ._dege ;if _abee {_bcfa :=make ([]_fc .Writer ,0,len (_fcga ));for _ ,_edaf :=range _fcga {_bcfa =append (_bcfa ,_edaf );};_ddbe =_fc .TeeReader (_abdae ._dege ,_fc .MultiWriter (_bcfa ...));};
_dce ,_cdadc :=_fc .Copy (w ,_ddbe );if _cdadc !=nil {return _cdadc ;};if len (_abdae ._eccb )==0{return nil ;};_cdab ._cdcea =_dce ;_cdab .ObjNumOffset =_abdae ._cdbef ;_cdab ._fbaeb =true ;_cdab ._dedac =_abdae ._beg ;_cdab ._dfdbb =_abdae ._aaf ;_cdab ._ffcbgf =_abdae ._gbcc ;
_cdab ._gceef =_abdae ._ebdd .PdfVersion ();_cdab ._ccaed =_abdae ._edae ;_cdab ._ddafb =_abdae ._cbdb .GetCrypter ();_cdab ._bbfag =_abdae ._cbdb .GetEncryptObj ();_cggg :=_abdae ._cbdb .GetXrefType ();if _cggg !=nil {_eagg :=*_cggg ==_cee .XrefTypeObjectStream ;
_cdab ._deda =&_eagg ;};_cdab ._dgbgbb =map[_cee .PdfObject ]struct{}{};_cdab ._gccff =[]_cee .PdfObject {};for _ ,_abeed :=range _abdae ._eccb {if _ ,_fbeca :=_abdae ._abda [_abeed ];_fbeca {continue ;};_cdab .addObject (_abeed );};_aacf :=w ;if _abee {_aacf =_cd .NewBuffer (nil );
};if _abdae ._cbac !=""&&_cdab ._ddafb ==nil {_cdab .Encrypt ([]byte (_abdae ._cbac ),[]byte (_abdae ._cbac ),_abdae ._beb );};if _fad :=_ggbf .Get ("\u0049\u0044");_fad !=nil {if _aefd ,_abfa :=_cee .GetArray (_fad );_abfa {_cdab ._aeffd =_aefd ;};};if _beba :=_cdab .Write (_aacf );
_beba !=nil {return _beba ;};if _abee {_gdgb :=_aacf .(*_cd .Buffer ).Bytes ();_edee :=_cee .MakeArray ();var _deec []*pdfSignDictionary ;var _fgaf int64 ;for _ ,_fece :=range _cdab ._gccff {if _cdde ,_egee :=_cee .GetIndirect (_fece );_egee {if _daba ,_bda :=_cdde .PdfObject .(*pdfSignDictionary );
_bda {_deec =append (_deec ,_daba );_edbd :=_daba ._gcccf +int64 (_daba ._dfadcd );_edee .Append (_cee .MakeInteger (_fgaf ),_cee .MakeInteger (_edbd -_fgaf ));_fgaf =_daba ._gcccf +int64 (_daba ._geecb );};};};_edee .Append (_cee .MakeInteger (_fgaf ),_cee .MakeInteger (_dce +int64 (len (_gdgb ))-_fgaf ));
_fadd :=[]byte (_edee .WriteString ());for _ ,_fffg :=range _deec {_dabb :=int (_fffg ._gcccf -_dce );for _aafc :=_fffg ._beddd ;_aafc < _fffg ._cfedc ;_aafc ++{_gdgb [_dabb +_aafc ]=' ';};_eeda :=_gdgb [_dabb +_fffg ._beddd :_dabb +_fffg ._cfedc ];copy (_eeda ,_fadd );
};var _geaa int ;for _ ,_fcad :=range _deec {_fdgaa :=int (_fcad ._gcccf -_dce );_gafb :=_gdgb [_geaa :_fdgaa +_fcad ._dfadcd ];_ceea :=*_fcad ._efde ;_fcga [_ceea ].Write (_gafb );_geaa =_fdgaa +_fcad ._geecb ;};for _ ,_bcfc :=range _deec {_dedg :=_gdgb [_geaa :];
_fced :=*_bcfc ._efde ;_fcga [_fced ].Write (_dedg );};for _ ,_agebf :=range _deec {_fdeg :=int (_agebf ._gcccf -_dce );_fcag :=*_agebf ._efde ;_agef :=_fcga [_fcag ];if _eacg :=_fcag .Sign (_agebf ._dddage ,_agef );_eacg !=nil {return _eacg ;};_agebf ._dddage .ByteRange =_edee ;
_gcbb :=[]byte (_agebf ._dddage .Contents .WriteString ());for _cedc :=_agebf ._beddd ;_cedc < _agebf ._cfedc ;_cedc ++{_gdgb [_fdeg +_cedc ]=' ';};for _dbag :=_agebf ._dfadcd ;_dbag < _agebf ._geecb ;_dbag ++{_gdgb [_fdeg +_dbag ]=' ';};_gfa :=_gdgb [_fdeg +_agebf ._beddd :_fdeg +_agebf ._cfedc ];
copy (_gfa ,_fadd );_gfa =_gdgb [_fdeg +_agebf ._dfadcd :_fdeg +_agebf ._geecb ];copy (_gfa ,_gcbb );};_dgac :=_cd .NewBuffer (_gdgb );_ ,_cdadc =_fc .Copy (w ,_dgac );if _cdadc !=nil {return _cdadc ;};};_abdae ._ccd =true ;return nil ;};

// SetContext sets the sub annotation (context).
func (_fefa *PdfAnnotation )SetContext (ctx PdfModel ){_fefa ._ecf =ctx };func (_cbbd *PdfReader )newPdfAnnotation3DFromDict (_fffa *_cee .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dfe :=PdfAnnotation3D {};_dfe .T3DD =_fffa .Get ("\u0033\u0044\u0044");
_dfe .T3DV =_fffa .Get ("\u0033\u0044\u0056");_dfe .T3DA =_fffa .Get ("\u0033\u0044\u0041");_dfe .T3DI =_fffa .Get ("\u0033\u0044\u0049");_dfe .T3DB =_fffa .Get ("\u0033\u0044\u0042");return &_dfe ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_egg :=NewPdfAnnotation ();_ecd :=&PdfAnnotationPopup {};_ecd .PdfAnnotation =_egg ;_egg .SetContext (_ecd );return _ecd ;};

// AddRefChild adds a child reference object.
func (_ccedc *KDict )AddRefChild (kChild *_cee .PdfObjectDictionary ){_ccedc ._affgf =append (_ccedc ._affgf ,&KValue {_abcfb :kChild });};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cee .PdfObjectName ;};

// ToPdfObject converts date to a PDF string object.
func (_gecca *PdfDate )ToPdfObject ()_cee .PdfObject {_agcbda :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gecca ._gffbe ,_gecca ._dabdg ,_gecca ._cfdgf ,_gecca ._bbeea ,_gecca ._bfaec ,_gecca ._begea ,_gecca ._cfbed ,_gecca ._gccea ,_gecca ._cacedd );
return _cee .MakeString (_agcbda );};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_eebee :_cee .MakeDict ()};
};

// ToPdfObject converts the structure tree root to a PDF object.
func (_cgcbf *StructTreeRoot )ToPdfObject ()_cee .PdfObject {_dcacg :=_cgcbf ._fgafdd ;if _dcacg ==nil {_dcacg =&_cee .PdfIndirectObject {};_dcacg .PdfObject =_cee .MakeDict ();};_aeaaf :=_dcacg .PdfObject .(*_cee .PdfObjectDictionary );var _cdabda _cee .PdfObject ;
if len (_cgcbf .K )==1{_cdabda =_cee .MakeIndirectObject (_cgcbf .K [0].ToPdfObject ());}else {_gbaa :=_cee .MakeArray ();for _ ,K :=range _cgcbf .K {_gbaa .Append (_cee .MakeIndirectObject (K .ToPdfObject ()));};_cdabda =_gbaa ;};var (_gfbab =[]_cee .PdfObject {};
_dadda =map[_cee .PdfObject ][]_cee .PdfObject {};_bcdfd =map[string ]_cee .PdfObject {};);_ebdfb (_cdabda ,_dcacg ,_dadda ,_bcdfd ,&_gfbab );_aeaaf .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_aeaaf .Set ("\u004b",_cdabda );if _cgcbf .IDTree !=nil {_aeaaf .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_cee .MakeIndirectObject (_cgcbf .IDTree .ToPdfObject ()));}else if len (_bcdfd )> 0{_agacb :=_cee .MakeArray ();_bcce :=make ([]string ,0,len (_bcdfd ));
for _eeeca :=range _bcdfd {_bcce =append (_bcce ,_eeeca );};_da .Strings (_bcce );for _ ,_gafcee :=range _bcce {_agacb .Append (_cee .MakeString (_gafcee ));_agacb .Append (_bcdfd [_gafcee ]);};_cgcbf .IDTree =&IDTree {Names :_agacb ,Limits :_cee .MakeArray (_cee .MakeString (_bcce [0]),_cee .MakeString (_bcce [len (_bcce )-1]))};
_aeaaf .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_cee .MakeIndirectObject (_cgcbf .IDTree .ToPdfObject ()));};if _cgcbf .ParentTree !=nil {_aeaaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_cee .MakeIndirectObject (_cgcbf .ParentTree ));
}else if len (_dadda )> 0||len (_gfbab )> 0{_ddee :=_cee .MakeArray ();_abcaac :=0;for _bfecf ,_abcfg :=range _dadda {_adaec :=_cee .MakeArray ();for _ ,_gefa :=range _abcfg {_adaec .Append (_gefa );};_bdgce :=_cee .MakeInteger (int64 (_abcaac ));_ddee .Append (_bdgce );
_ddee .Append (_cee .MakeIndirectObject (_adaec ));if _gdfac ,_gfggg :=_cee .GetIndirect (_bfecf );_gfggg {if _ccgda ,_faffd :=_cee .GetDict (_gdfac .PdfObject );_faffd {_dgfba :=_ccgda .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _dgfba !=nil {if _dceba ,_dbbgd :=_cee .GetIntVal (_dgfba );_dbbgd {if _abcaac < _dceba {_ccgda .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bdgce );};};}else {_ccgda .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bdgce );
};};};_abcaac ++;};_dgbgg :=func (_adab _cee .PdfObject ,_dcgeb *_cee .PdfObjectDictionary )bool {if _baeed :=_dcgeb .Get ("\u004f\u0062\u006a");_baeed !=nil {if _ffcde ,_acde :=_cee .GetDict (_baeed );_acde {_cagce :=_ffcde .Get ("\u0054\u0079\u0070\u0065");
_fgeab :=_ffcde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cagce !=nil &&_cagce .String ()=="\u0041\u006e\u006eo\u0074"&&_fgeab !=nil &&_fgeab .String ()=="\u004c\u0069\u006e\u006b"{_bbabeb :=_cee .MakeInteger (int64 (_abcaac ));_ffcde .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bbabeb );
_ddee .Append (_bbabeb );_ddee .Append (_adab );_abcaac ++;return true ;};};};return false ;};for _ ,_ceagf :=range _gfbab {if _feadg ,_fcaca :=_cee .GetDict (_ceagf );_fcaca {if _fbdbb :=_feadg .Get ("\u0053");_fbdbb !=nil {if _cgecf ,_beged :=_cee .GetNameVal (_fbdbb );
_beged &&_cgecf ==StructureTypeLink {if _aaccc :=_feadg .Get ("\u004b");_aaccc !=nil {if _deabd ,_egbgf :=_cee .GetArray (_aaccc );_egbgf {for _ ,_bebfc :=range _deabd .Elements (){if _gebbe ,_bggeb :=_cee .GetDict (_bebfc );_bggeb {_dgbgg (_ceagf ,_gebbe );
};};}else if _fbdcg ,_cdead :=_cee .GetDict (_aaccc );_cdead {_dgbgg (_ceagf ,_fbdcg );};};};};};};_cgcbf .ParentTree =_cee .MakeDict ();_cgcbf .ParentTree .Set ("\u004e\u0075\u006d\u0073",_ddee );_cgcbf .ParentTreeNextKey =int64 (_abcaac );_aeaaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_cee .MakeIndirectObject (_cgcbf .ParentTree ));
};_aeaaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_cee .MakeInteger (_cgcbf .ParentTreeNextKey ));if _cgcbf .RoleMap !=nil {_aeaaf .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_cgcbf .RoleMap );
};if _cgcbf .ClassMap !=nil {_aeaaf .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_cgcbf .ClassMap );};return _dcacg ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_bgbf *PdfPageResources )SetFontByName (keyName _cee .PdfObjectName ,obj _cee .PdfObject )error {if _bgbf .Font ==nil {_bgbf .Font =_cee .MakeDict ();};_adae ,_gfccae :=_cee .TraceToDirectObject (_bgbf .Font ).(*_cee .PdfObjectDictionary );if !_gfccae {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cee .TraceToDirectObject (_bgbf .Font ));
return _cee .ErrTypeError ;};_adae .Set (keyName ,obj );return nil ;};func _ffcg (_bgeab *_cee .PdfIndirectObject )(*PdfOutline ,error ){_geccc ,_baacf :=_bgeab .PdfObject .(*_cee .PdfObjectDictionary );if !_baacf {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_abaaa :=NewPdfOutline ();if _eadec :=_geccc .Get ("\u0054\u0079\u0070\u0065");_eadec !=nil {_gfbdb ,_fdgge :=_eadec .(*_cee .PdfObjectName );if _fdgge {if *_gfbdb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gfbdb );
};};};if _abfba :=_geccc .Get ("\u0043\u006f\u0075n\u0074");_abfba !=nil {_dgeec ,_ggcbc :=_cee .GetNumberAsInt64 (_abfba );if _ggcbc !=nil {return nil ,_ggcbc ;};_abaaa .Count =&_dgeec ;};return _abaaa ,nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_eddcg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cee .StreamEncoder ,error ){_feegg ,_bcee :=_eddcg ._bgabc .(*_cee .PdfObjectStream );if !_bcee {_fca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eddcg ._bgabc );
return nil ,nil ,_cee .ErrTypeError ;};_dbaff ,_ebfaf :=_cee .DecodeStream (_feegg );if _ebfaf !=nil {_fca .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ebfaf );
return nil ,nil ,_ebfaf ;};_cdff ,_ebfaf :=_cee .NewEncoderFromStream (_feegg );if _ebfaf !=nil {_fca .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ebfaf );
return nil ,nil ,_ebfaf ;};return _dbaff ,_cdff ,nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cee .PdfObject ;Popup *PdfAnnotationPopup ;CA _cee .PdfObject ;RC _cee .PdfObject ;CreationDate _cee .PdfObject ;IRT _cee .PdfObject ;Subj _cee .PdfObject ;RT _cee .PdfObject ;IT _cee .PdfObject ;ExData _cee .PdfObject ;
};func (_eedac *PdfWriter )checkLicense ()error {_dddcf :=_ade .GetLicenseKey ();if (_dddcf ==nil ||!_dddcf .IsLicensed ())&&!_ggdge {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cdf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_cee .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _cee .PdfObject ;ClassMap *_cee .PdfObjectDictionary ;_fgafdd *_cee .PdfIndirectObject ;_gfcefg []_ee .UUID ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_begd *Outline )ToPdfObject ()_cee .PdfObject {return _begd .ToPdfOutline ().ToPdfObject ()};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bdfd *PdfFont )SubsetRegistered ()error {switch _gedec :=_bdfd ._bggcf .(type ){case *pdfFontType0 :_ecffg :=_gedec .subsetRegistered ();if _ecffg !=nil {_fca .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ecffg );
return _ecffg ;};if _gedec ._eddba !=nil {if _gedec ._daac !=nil {_gedec ._daac .ToPdfObject ();};_gedec .ToPdfObject ();};default:_fca .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gedec );
};return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_aeeag int ,_dfdgc *PdfPage );

// GetFillImage get attached model.Image in push button.
func (_cgffe *PdfFieldButton )GetFillImage ()*Image {if _cgffe .IsPush (){return _cgffe ._effg ;};return nil ;};var _eefd =_bgc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_dafcb *LTV )getOCSPs (_gceea []*_dfd .Certificate ,_fbdad map[string ]*_dfd .Certificate )([][]byte ,error ){_gcagf :=make ([][]byte ,0,len (_gceea ));
for _ ,_beee :=range _gceea {for _ ,_daee :=range _beee .OCSPServer {if _dafcb .CertClient .IsCA (_beee ){continue ;};_eeead ,_gcbfe :=_fbdad [_beee .Issuer .CommonName ];if !_gcbfe {_fca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_acgae ,_badea :=_dafcb .OCSPClient .MakeRequest (_daee ,_beee ,_eeead );if _badea !=nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_badea );
continue ;};_gcagf =append (_gcagf ,_acgae );};};return _gcagf ,nil ;};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _cee .PdfObject )(*StructTreeRoot ,error ){_eceda :=_cee .ResolveReference (obj );_fgeebc ,_cddcg :=_cee .GetDict (_eceda );if !_cddcg {return nil ,_e .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_ccdbc :=&StructTreeRoot {};_ccdbc ._fgafdd =_cee .MakeIndirectObject (_cee .MakeDict ());if _gffcd :=_fgeebc .Get ("\u004b");_gffcd !=nil {_ecba :=_cee .ResolveReference (_gffcd );_gaadeb :=_cee .ResolveReferencesDeep (_ecba ,nil );if _gaadeb !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_gaadeb );
};_ccdbc .K =[]*KDict {};if _egefb ,_fdaa :=_cee .GetArray (_ecba );_fdaa {for _gbbcg :=0;_gbbcg < _egefb .Len ();_gbbcg ++{_bagba :=_egefb .Get (_gbbcg );_fbgc ,_gecge :=_cfffg (_bagba );if _gecge !=nil {return nil ,_gecge ;};_ccdbc .K =append (_ccdbc .K ,_fbgc );
};}else {_efddd ,_caacg :=_cfffg (_ecba );if _caacg !=nil {return nil ,_caacg ;};_ccdbc .K =append (_ccdbc .K ,_efddd );};};if _cafca :=_fgeebc .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_cafca !=nil {_ccdbc .IDTree =_edddd (_cafca );};if _cgcfd :=_fgeebc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");
_cgcfd !=nil {_bdgac :=_cee .ResolveReference (_cgcfd );if _efbfd ,_eafab :=_cee .GetDict (_bdgac );_eafab {_ccdbc .ParentTree =_efbfd ;};};if _ccabc :=_fgeebc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_ccabc !=nil {_ ,_ddgab :=_cee .GetInt (_ccabc );if _ddgab {_gaadd ,_cdbfd :=_cee .GetNumberAsInt64 (_ccabc );if _cdbfd !=nil {return nil ,_cdbfd ;};_ccdbc .ParentTreeNextKey =_gaadd ;};};if _bbfdb :=_fgeebc .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");
_bbfdb !=nil {switch _gcggg :=_bbfdb .(type ){case *_cee .PdfIndirectObject :if _abebd ,_degag :=_cee .GetDict (_gcggg .PdfObject );_degag {_ccdbc .RoleMap =_abebd ;};case *_cee .PdfObjectDictionary :_ccdbc .RoleMap =_gcggg ;case *_cee .PdfObjectString :_ccdbc .RoleMap =_gcggg ;
};};if _fgdbd :=_fgeebc .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_fgdbd !=nil {if _efffc ,_fbdge :=_cee .GetDict (_fgdbd );_fbdge {_ccdbc .ClassMap =_efffc ;};};return _ccdbc ,nil ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_affgf :make ([]*KValue ,0),_efbbe :-1}};

// SetViewClip sets the value of the viewClip.
func (_bdag *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_bdag ._baegf =viewClip };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cabaa *PdfPageResources )GetExtGState (keyName _cee .PdfObjectName )(_cee .PdfObject ,bool ){if _cabaa .ExtGState ==nil {return nil ,false ;};_eggbc ,_aabcfc :=_cee .TraceToDirectObject (_cabaa .ExtGState ).(*_cee .PdfObjectDictionary );if !_aabcfc {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cabaa .ExtGState );
return nil ,false ;};if _aagdd :=_eggbc .Get (keyName );_aagdd !=nil {return _aagdd ,true ;};return nil ,false ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;
);

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_aba :=NewPdfAnnotation ();_bbd :=&PdfAnnotationSquiggly {};_bbd .PdfAnnotation =_aba ;_bbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aba .SetContext (_bbd );return _bbd ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fbfdc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fbfdc .flattenFieldsWithOpts (false ,appgen ,opts );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cebbf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_dgfeb *PdfReader )buildPageList (_aefa *_cee .PdfIndirectObject ,_ffdfb *_cee .PdfIndirectObject ,_abeede map[_cee .PdfObject ]struct{})error {if _aefa ==nil {return nil ;
};if _ ,_geeef :=_abeede [_aefa ];_geeef {_fca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_aefa .ObjectNumber );
return nil ;};_abeede [_aefa ]=struct{}{};_bbdd ,_dfgbb :=_aefa .PdfObject .(*_cee .PdfObjectDictionary );if !_dfgbb {return _cdf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gfgce ,_dfgbb :=(*_bbdd ).Get ("\u0054\u0079\u0070\u0065").(*_cee .PdfObjectName );
if !_dfgbb {if _bbdd .Get ("\u004b\u0069\u0064\u0073")==nil {return _cdf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gfgce =_cee .MakeName ("\u0050\u0061\u0067e\u0073");_bbdd .Set ("\u0054\u0079\u0070\u0065",_gfgce );};_fca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gfgce ,_aefa );
if *_gfgce =="\u0050\u0061\u0067\u0065"{_abfcg ,_cafa :=_dgfeb .newPdfPageFromDict (_bbdd );if _cafa !=nil {return _cafa ;};_abfcg .setContainer (_aefa );if _ffdfb !=nil {_bbdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffdfb );};_dgfeb ._fded =append (_dgfeb ._fded ,_aefa );
_dgfeb .PageList =append (_dgfeb .PageList ,_abfcg );return nil ;};if *_gfgce !="\u0050\u0061\u0067e\u0073"{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gfgce );
return _cdf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ffdfb !=nil {_bbdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffdfb );};if !_dgfeb ._dbfb {_cgag :=_dgfeb .traverseObjectData (_aefa );if _cgag !=nil {return _cgag ;};};_cgcbe ,_ggdac :=_dgfeb ._ffdgf .Resolve (_bbdd .Get ("\u004b\u0069\u0064\u0073"));
if _ggdac !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _ggdac ;};var _ecdba *_cee .PdfObjectArray ;
_ecdba ,_dfgbb =_cgcbe .(*_cee .PdfObjectArray );if !_dfgbb {_efceg ,_afcbgf :=_cgcbe .(*_cee .PdfIndirectObject );if !_afcbgf {return _cdf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ecdba ,_dfgbb =_efceg .PdfObject .(*_cee .PdfObjectArray );if !_dfgbb {return _cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ecdba );
for _edac ,_dfecb :=range _ecdba .Elements (){_ebaea ,_cfeec :=_cee .GetIndirect (_dfecb );if !_cfeec {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ebaea );
return _cdf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ecdba .Set (_edac ,_ebaea );_ggdac =_dgfeb .buildPageList (_ebaea ,_aefa ,_abeede );if _ggdac !=nil {return _ggdac ;
};};return nil ;};

// SetPrintScaling sets the value of the printScaling.
func (_ecgcg *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_ecgcg ._fgbdf =printScaling ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ebf :=NewPdfAnnotation ();_bga :=&PdfAnnotationCaret {};_bga .PdfAnnotation =_ebf ;_bga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebf .SetContext (_bga );return _bga ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cee .PdfObject ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cee .PdfObjectBool ;SigFlags *_cee .PdfObjectInteger ;CO *_cee .PdfObjectArray ;DR *PdfPageResources ;DA *_cee .PdfObjectString ;Q *_cee .PdfObjectInteger ;XFA _cee .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _cee .PdfObject ;_cebbd *_cee .PdfIndirectObject ;_gcfcc bool ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_defe *DSS )GenerateHashMaps ()error {_cfcf ,_adge :=_defe .generateHashMap (_defe .Certs );if _adge !=nil {return _adge ;};_cedb ,_adge :=_defe .generateHashMap (_defe .OCSPs );if _adge !=nil {return _adge ;};_afeg ,_adge :=_defe .generateHashMap (_defe .CRLs );
if _adge !=nil {return _adge ;};_defe ._eged =_cfcf ;_defe ._dcff =_cedb ;_defe ._fbfec =_afeg ;return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dfbeg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dfbeg .MediaBox !=nil {return _dfbeg .MediaBox ,nil ;};_fdcf :=_dfbeg .Parent ;for _fdcf !=nil {_egefa ,_dbabe :=_cee .GetDict (_fdcf );if !_dbabe {return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bgbcc :=_egefa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bgbcc !=nil {_eadeb ,_gbbgb :=_cee .GetArray (_bgbcc );if !_gbbgb {return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_bbcaf ,_edgde :=NewPdfRectangle (*_eadeb );if _edgde !=nil {return nil ,_edgde ;};return _bbcaf ,nil ;};_fdcf =_egefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cdf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func (_gceca *Image )samplesAddPadding (_eceaa []uint32 )[]uint32 {_cedf :=_ca .BytesPerLine (int (_gceca .Width ),int (_gceca .BitsPerComponent ),_gceca .ColorComponents )*(8/int (_gceca .BitsPerComponent ));_beag :=_cedf *int (_gceca .Height );if len (_eceaa )==_beag {return _eceaa ;
};_cacb :=make ([]uint32 ,_beag );_gfgcc :=int (_gceca .Width )*_gceca .ColorComponents ;for _dceb :=0;_dceb < int (_gceca .Height );_dceb ++{_cgdb :=_dceb *int (_gceca .Width );_bfaaa :=_dceb *_cedf ;for _dcbad :=0;_dcbad < _gfgcc ;_dcbad ++{_cacb [_bfaaa +_dcbad ]=_eceaa [_cgdb +_dcbad ];
};};return _cacb ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ggeeeg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ggeeeg .Alternate ==nil {_fca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ggeeeg .N ==1{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_aebc :=NewPdfColorspaceDeviceGray ();return _aebc .ColorToRGB (color );}else if _ggeeeg .N ==3{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ggeeeg .N ==4{_fca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bgff :=NewPdfColorspaceDeviceCMYK ();return _bgff .ColorToRGB (color );}else {return nil ,_cdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ggeeeg );
return _ggeeeg .Alternate .ColorToRGB (color );};func (_abfc *PdfReader )newPdfActionTransFromDict (_aecd *_cee .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_aecd .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_faeaa *PdfPattern )IsShading ()bool {return _faeaa .PatternType ==2};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ebff *_cee .PdfIndirectObject ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _cee .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _cee .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_cee .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _cee .PdfObject ;

// The children of this structure element.
K _cee .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _cee .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _cee .PdfObject ;

// The current revision number of this structure element
R *_cee .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_cee .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_cee .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_cee .PdfObjectString ;

// The expanded form of an abbreviation.
E *_cee .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_cee .PdfObjectString ;_affgf []*KValue ;_efbbe int64 ;_daafg *PdfRectangle ;};func _acgef ()_gc .Time {_dggagg .Lock ();defer _dggagg .Unlock ();return _cedfg };func _eeeg (_gffd _cee .PdfObject )(*PdfColorspaceDeviceN ,error ){_gfeged :=NewPdfColorspaceDeviceN ();
if _bggffa ,_ffbbb :=_gffd .(*_cee .PdfIndirectObject );_ffbbb {_gfeged ._eaee =_bggffa ;};_gffd =_cee .TraceToDirectObject (_gffd );_fefdb ,_bcbc :=_gffd .(*_cee .PdfObjectArray );if !_bcbc {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _fefdb .Len ()!=4&&_fefdb .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gffd =_fefdb .Get (0);
_gbcd ,_bcbc :=_gffd .(*_cee .PdfObjectName );if !_bcbc {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gbcd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gffd =_fefdb .Get (1);
_gffd =_cee .TraceToDirectObject (_gffd );_aecb ,_bcbc :=_gffd .(*_cee .PdfObjectArray );if !_bcbc {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfeged .ColorantNames =_aecb ;_gffd =_fefdb .Get (2);_caag ,_cefg :=NewPdfColorspaceFromPdfObject (_gffd );if _cefg !=nil {return nil ,_cefg ;};_gfeged .AlternateSpace =_caag ;_affe ,_cefg :=_eeaec (_fefdb .Get (3));if _cefg !=nil {return nil ,_cefg ;
};_gfeged .TintTransform =_affe ;if _fefdb .Len ()==5{_efge ,_acfae :=_ccba (_fefdb .Get (4));if _acfae !=nil {return nil ,_acfae ;};_gfeged .Attributes =_efge ;};return _gfeged ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cab *PdfActionNamed )ToPdfObject ()_cee .PdfObject {_cab .PdfAction .ToPdfObject ();_aadg :=_cab ._gaf ;_eae :=_aadg .PdfObject .(*_cee .PdfObjectDictionary );_eae .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeNamed )));_eae .SetIfNotNil ("\u004e",_cab .N );
return _aadg ;};func _gadad ()string {_dggagg .Lock ();defer _dggagg .Unlock ();return _bebae };func _baggd (_dfdbg *_cee .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gcdf :=PdfShadingType4 {};_aabfa :=_dfdbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _aabfa ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffddg ,_bbecf :=_aabfa .(*_cee .PdfObjectInteger );if !_bbecf {_fca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aabfa );
return nil ,_cee .ErrTypeError ;};_gcdf .BitsPerCoordinate =_ffddg ;_aabfa =_dfdbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aabfa ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ffddg ,_bbecf =_aabfa .(*_cee .PdfObjectInteger );if !_bbecf {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aabfa );
return nil ,_cee .ErrTypeError ;};_gcdf .BitsPerComponent =_ffddg ;_aabfa =_dfdbg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aabfa ==nil {_fca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffddg ,_bbecf =_aabfa .(*_cee .PdfObjectInteger );if !_bbecf {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aabfa );
return nil ,_cee .ErrTypeError ;};_gcdf .BitsPerComponent =_ffddg ;_aabfa =_dfdbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aabfa ==nil {_fca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_daegg ,_bbecf :=_aabfa .(*_cee .PdfObjectArray );if !_bbecf {_fca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabfa );
return nil ,_cee .ErrTypeError ;};_gcdf .Decode =_daegg ;_aabfa =_dfdbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aabfa ==nil {_fca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gcdf .Function =[]PdfFunction {};if _gdbag ,_dbacf :=_aabfa .(*_cee .PdfObjectArray );_dbacf {for _ ,_dfbfd :=range _gdbag .Elements (){_dfbee ,_eccfb :=_eeaec (_dfbfd );if _eccfb !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eccfb );
return nil ,_eccfb ;};_gcdf .Function =append (_gcdf .Function ,_dfbee );};}else {_cbecc ,_cgddc :=_eeaec (_aabfa );if _cgddc !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgddc );
return nil ,_cgddc ;};_gcdf .Function =append (_gcdf .Function ,_cbecc );};return &_gcdf ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_aggf *PdfFieldButton )IsCheckbox ()bool {return _aggf .GetType ()==ButtonTypeCheckbox };

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fcbd *PdfReader )GetPageLabels ()(_cee .PdfObject ,error ){_fgagf :=_cee .ResolveReference (_fcbd ._cacfe .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fgagf ==nil {return nil ,nil ;};if !_fcbd ._dbfb {_cdfcb :=_fcbd .traverseObjectData (_fgagf );
if _cdfcb !=nil {return nil ,_cdfcb ;};};return _fgagf ,nil ;};func (_dabbb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetShadingByName sets a shading resource specified by keyName.
func (_bgabb *PdfPageResources )SetShadingByName (keyName _cee .PdfObjectName ,shadingObj _cee .PdfObject )error {if _bgabb .Shading ==nil {_bgabb .Shading =_cee .MakeDict ();};_caccb ,_daddb :=_cee .GetDict (_bgabb .Shading );if !_daddb {return _cee .ErrTypeError ;
};_caccb .Set (keyName ,shadingObj );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_defg *PdfFont )GetCharMetrics (code _dae .CharCode )(CharMetrics ,bool ){var _fdbe _ce .CharMetrics ;switch _aabf :=_defg ._bggcf .(type ){case *pdfFontSimple :if _faacb ,_gfgd :=_aabf .GetCharMetrics (code );_gfgd {return _faacb ,_gfgd ;};case *pdfFontType0 :if _agfd ,_afcbc :=_aabf .GetCharMetrics (code );
_afcbc {return _agfd ,_afcbc ;};case *pdfCIDFontType0 :if _cbgg ,_eafe :=_aabf .GetCharMetrics (code );_eafe {return _cbgg ,_eafe ;};case *pdfCIDFontType2 :if _cbae ,_fecag :=_aabf .GetCharMetrics (code );_fecag {return _cbae ,_fecag ;};case *pdfFontType3 :if _adeg ,_daefb :=_aabf .GetCharMetrics (code );
_daefb {return _adeg ,_daefb ;};default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_defg ._bggcf );
return _fdbe ,false ;};if _eefg ,_bace :=_defg .GetFontDescriptor ();_bace ==nil &&_eefg !=nil {return _ce .CharMetrics {Wx :_eefg ._efacg },true ;};_fca .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_defg );
return _fdbe ,false ;};

// AddCerts adds certificates to DSS.
func (_dacag *DSS )AddCerts (certs [][]byte )([]*_cee .PdfObjectStream ,error ){return _dacag .add (&_dacag .Certs ,_dacag ._eged ,certs );};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_edgc :=NewPdfAnnotation ();_fff :=&PdfAnnotation3D {};_fff .PdfAnnotation =_edgc ;_edgc .SetContext (_fff );return _fff ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cee .PdfObject ;ColorSpace _cee .PdfObject ;Pattern _cee .PdfObject ;Shading _cee .PdfObject ;XObject _cee .PdfObject ;Font _cee .PdfObject ;ProcSet _cee .PdfObject ;Properties _cee .PdfObject ;_agdcc *_cee .PdfObjectDictionary ;
_ecfaf *PdfPageResourcesColorspaces ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bdff :=PdfColorDeviceGray (grayVal );return &_bdff ;};

// GetOptimizer returns current PDF optimizer.
func (_adgg *PdfWriter )GetOptimizer ()Optimizer {return _adgg ._ecgef };func _adgcf (_abgfg *_cee .PdfIndirectObject ,_dfbb *_cee .PdfObjectDictionary )(*DSS ,error ){if _abgfg ==nil {_abgfg =_cee .MakeIndirectObject (nil );};_abgfg .PdfObject =_cee .MakeDict ();
_bccb :=map[string ]*VRI {};if _fbdc ,_cfea :=_cee .GetDict (_dfbb .Get ("\u0056\u0052\u0049"));_cfea {for _ ,_fbcd :=range _fbdc .Keys (){if _bfegd ,_cbgef :=_cee .GetDict (_fbdc .Get (_fbcd ));_cbgef {_bccb [_ad .ToUpper (_fbcd .String ())]=_ccae (_bfegd );
};};};return &DSS {Certs :_efcfc (_dfbb .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_efcfc (_dfbb .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_efcfc (_dfbb .Get ("\u0043\u0052\u004c\u0073")),VRI :_bccb ,_bdcab :_abgfg },nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cee .PdfObjectName ;Colorants _cee .PdfObject ;Process _cee .PdfObject ;MixingHints _cee .PdfObject ;_gedbb *_cee .PdfIndirectObject ;};func _fegfe (_dacb _cee .PdfObject )(*PdfFunctionType2 ,error ){_egcea :=&PdfFunctionType2 {};
var _acbcf *_cee .PdfObjectDictionary ;if _fdecd ,_cage :=_dacb .(*_cee .PdfIndirectObject );_cage {_bdcd ,_faacg :=_fdecd .PdfObject .(*_cee .PdfObjectDictionary );if !_faacg {return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_egcea ._eebdf =_fdecd ;_acbcf =_bdcd ;}else if _edebe ,_acbbf :=_dacb .(*_cee .PdfObjectDictionary );_acbbf {_acbcf =_edebe ;}else {return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fca .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_acbcf .String ());
_bcagd ,_becd :=_cee .TraceToDirectObject (_acbcf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cee .PdfObjectArray );if !_becd {_fca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bcagd .Len ()< 0||_bcagd .Len ()%2!=0{_fca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_deege ,_egfdg :=_bcagd .ToFloat64Array ();if _egfdg !=nil {return nil ,_egfdg ;};_egcea .Domain =_deege ;_bcagd ,_becd =_cee .TraceToDirectObject (_acbcf .Get ("\u0052\u0061\u006eg\u0065")).(*_cee .PdfObjectArray );if _becd {if _bcagd .Len ()< 0||_bcagd .Len ()%2!=0{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cagef ,_bebg :=_bcagd .ToFloat64Array ();if _bebg !=nil {return nil ,_bebg ;};_egcea .Range =_cagef ;};_bcagd ,_becd =_cee .TraceToDirectObject (_acbcf .Get ("\u0043\u0030")).(*_cee .PdfObjectArray );if _becd {_cedca ,_bgbda :=_bcagd .ToFloat64Array ();
if _bgbda !=nil {return nil ,_bgbda ;};_egcea .C0 =_cedca ;};_bcagd ,_becd =_cee .TraceToDirectObject (_acbcf .Get ("\u0043\u0031")).(*_cee .PdfObjectArray );if _becd {_eedge ,_fbac :=_bcagd .ToFloat64Array ();if _fbac !=nil {return nil ,_fbac ;};_egcea .C1 =_eedge ;
};if len (_egcea .C0 )!=len (_egcea .C1 ){_fca .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_cee .ErrRangeError ;};N ,_egfdg :=_cee .GetNumberAsFloat (_cee .TraceToDirectObject (_acbcf .Get ("\u004e")));
if _egfdg !=nil {_fca .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_acbcf .String ());return nil ,_egfdg ;};_egcea .N =N ;
return _egcea ,nil ;};func (_gfged *PdfWriter )writeObjects (){_fca .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gfged ._gccff ));_gfged ._gceegb =make (map[int ]crossReference );_gfged ._gceegb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _gfged ._dedac .ObjectMap !=nil {for _fdbd ,_adacb :=range _gfged ._dedac .ObjectMap {if _fdbd ==0{continue ;};if _adacb .XType ==_cee .XrefTypeObjectStream {_afgdc :=crossReference {Type :2,ObjectNumber :_adacb .OsObjNumber ,Index :_adacb .OsObjIndex };
_gfged ._gceegb [_fdbd ]=_afgdc ;};if _adacb .XType ==_cee .XrefTypeTableEntry {_bfde :=crossReference {Type :1,ObjectNumber :_adacb .ObjectNumber ,Offset :_adacb .Offset };_gfged ._gceegb [_fdbd ]=_bfde ;};};};};

// AddChild adds a child object.
func (_ddegf *KDict )AddChild (kv *KValue ){_ddegf ._affgf =append (_ddegf ._affgf ,kv )};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_agacc *KDict )GenerateRandomID ()string {_eabbde ,_ecfaa :=_ee .NewUUID ();if _ecfaa !=nil {_fca .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_ecfaa );};if _eabbde !=_ee .Nil {_ceebb :=_eabbde .String ();
_agacc .ID =_cee .MakeString (_ceebb );return _ceebb ;};return "";};func (_fcafc *PdfWriter )seekByName (_eaece _cee .PdfObject ,_gcbge []string ,_ecacf string )([]_cee .PdfObject ,error ){_fca .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_eaece );
var _ebeda []_cee .PdfObject ;if _fdgdd ,_abecg :=_eaece .(*_cee .PdfIndirectObject );_abecg {return _fcafc .seekByName (_fdgdd .PdfObject ,_gcbge ,_ecacf );};if _dbgggg ,_aaage :=_eaece .(*_cee .PdfObjectStream );_aaage {return _fcafc .seekByName (_dbgggg .PdfObjectDictionary ,_gcbge ,_ecacf );
};if _facfe ,_abfbd :=_eaece .(*_cee .PdfObjectDictionary );_abfbd {_fca .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_dadab :=range _facfe .Keys (){_fbgbg :=_facfe .Get (_dadab );if string (_dadab )==_ecacf {_ebeda =append (_ebeda ,_fbgbg );};for _ ,_gfeacb :=range _gcbge {if string (_dadab )==_gfeacb {_fca .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gfeacb );
_agag ,_gadffa :=_fcafc .seekByName (_fbgbg ,_gcbge ,_ecacf );if _gadffa !=nil {return _ebeda ,_gadffa ;};_ebeda =append (_ebeda ,_agag ...);break ;};};};return _ebeda ,nil ;};return _ebeda ,nil ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_agbeg :=&PdfShadingType3 {};_agbeg .PdfShading =&PdfShading {};_agbeg .PdfShading ._dfgbe =_cee .MakeIndirectObject (_cee .MakeDict ());_agbeg .PdfShading ._ddffe =_agbeg ;return _agbeg ;};func (_acebb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _acebb ._ffdgf .GetCrypter ()!=nil &&!_acebb ._ffdgf .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcfba :=_acebb ._cacfe ;_cbedd :=_fcfba .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cbedd ==nil {return nil ,nil ;};_fca .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_acfffa :=_cee .ResolveReference (_cbedd );
_fca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_acfffa );if _cbeef :=_cee .IsNullObject (_acfffa );_cbeef {_fca .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_acggg ,_bfabe :=_acfffa .(*_cee .PdfIndirectObject );if !_bfabe {if _ ,_beceg :=_cee .GetDict (_acfffa );!_beceg {_fca .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fca .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_acggg =_cee .MakeIndirectObject (_acfffa );};_gfgdd ,_bfabe :=_acggg .PdfObject .(*_cee .PdfObjectDictionary );if !_bfabe {return nil ,_cdf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fca .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_gfgdd );_bfeca ,_ ,_fdbfc :=_acebb .buildOutlineTree (_acggg ,nil ,nil ,nil );if _fdbfc !=nil {return nil ,_fdbfc ;};_fca .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_bfeca );
return _bfeca ,nil ;};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_dddeba *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _dddeba ._efgaa ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_agdcd *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _eded []*PdfOutlineTreeNode ;var _fbdcb []string ;var _efddcg func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_efddcg =func (_gdcgc *PdfOutlineTreeNode ,_dceaa *[]*PdfOutlineTreeNode ,_cdbd *[]string ,_eeeac int ){if _gdcgc ==nil {return ;
};if _gdcgc ._afcbg ==nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ffabe ,_dgdcb :=_gdcgc ._afcbg .(*PdfOutlineItem );if _dgdcb {*_dceaa =append (*_dceaa ,&_ffabe .PdfOutlineTreeNode );
_fggfa :=_ad .Repeat ("\u0020",_eeeac *2)+_ffabe .Title .Decoded ();*_cdbd =append (*_cdbd ,_fggfa );};if _gdcgc .First !=nil {_edfgd :=_ad .Repeat ("\u0020",_eeeac *2)+"\u002b";*_cdbd =append (*_cdbd ,_edfgd );_efddcg (_gdcgc .First ,_dceaa ,_cdbd ,_eeeac +1);
};if _dgdcb &&_ffabe .Next !=nil {_efddcg (_ffabe .Next ,_dceaa ,_cdbd ,_eeeac );};};_efddcg (_agdcd ._bafag ,&_eded ,&_fbdcb ,0);return _eded ,_fbdcb ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bgb :=NewPdfAnnotation ();_bdb :=&PdfAnnotationHighlight {};_bdb .PdfAnnotation =_bgb ;_bdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgb .SetContext (_bdb );return _bdb ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eb *PdfAction )GetContext ()PdfModel {if _eb ==nil {return nil ;};return _eb ._afe ;};func _cefaf (_dcbfgf []byte )([]byte ,error ){_adfea :=_fe .New ();if _ ,_bgbcg :=_fc .Copy (_adfea ,_cd .NewReader (_dcbfgf ));_bgbcg !=nil {return nil ,_bgbcg ;
};return _adfea .Sum (nil ),nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_dcgee ,_ecff :=_fef .ReadFile (path );if _ecff !=nil {return nil ,_ecff ;};_cfffb :=_gg .Detect (_dcgee );_dbge :=_ga .Sum (_dcgee );_cgea :=&EmbeddedFile {Name :_ef .Base (path ),Content :_dcgee ,FileType :_cfffb .String (),Hash :_aa .EncodeToString (_dbge [:])};
return _cgea ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_degee *PdfPageResources )HasExtGState (keyName _cee .PdfObjectName )bool {_ ,_eefbf :=_degee .GetFontByName (keyName );return _eefbf ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject returns the PDF representation of the page resources.
func (_ccbff *PdfPageResources )ToPdfObject ()_cee .PdfObject {_bfac :=_ccbff ._agdcc ;_bfac .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ccbff .ExtGState );if _ccbff ._ecfaf !=nil {_ccbff .ColorSpace =_ccbff ._ecfaf .ToPdfObject ();};
_bfac .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ccbff .ColorSpace );_bfac .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ccbff .Pattern );_bfac .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ccbff .Shading );
_bfac .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ccbff .XObject );_bfac .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ccbff .Font );_bfac .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ccbff .ProcSet );_bfac .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ccbff .Properties );
return _bfac ;};const (_aabcf =0x00001;_bffa =0x00002;_cddf =0x00004;_edec =0x00008;_caaa =0x00020;_dgbc =0x00040;_dfgace =0x10000;_cgedg =0x20000;_ggdg =0x40000;);

// IsTiling specifies if the pattern is a tiling pattern.
func (_faga *PdfPattern )IsTiling ()bool {return _faga .PatternType ==1};func _abcf (_cdadd *_cee .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dgcfc :=PdfShadingType2 {};_bafdf :=_cdadd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bafdf ==nil {_fca .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_dddb ,_ddabc :=_bafdf .(*_cee .PdfObjectArray );if !_ddabc {_fca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bafdf );
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _dddb .Len ()!=4{_fca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dddb .Len ());
return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dgcfc .Coords =_dddb ;if _bdfg :=_cdadd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdfg !=nil {_bdfg =_cee .TraceToDirectObject (_bdfg );
_ffeda ,_ebcfc :=_bdfg .(*_cee .PdfObjectArray );if !_ebcfc {_fca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdfg );return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgcfc .Domain =_ffeda ;};_bafdf =_cdadd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bafdf ==nil {_fca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgcfc .Function =[]PdfFunction {};if _geced ,_dgdd :=_bafdf .(*_cee .PdfObjectArray );_dgdd {for _ ,_ecfccg :=range _geced .Elements (){_afdb ,_fffga :=_eeaec (_ecfccg );if _fffga !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fffga );
return nil ,_fffga ;};_dgcfc .Function =append (_dgcfc .Function ,_afdb );};}else {_fecfa ,_afdce :=_eeaec (_bafdf );if _afdce !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afdce );
return nil ,_afdce ;};_dgcfc .Function =append (_dgcfc .Function ,_fecfa );};if _ddegb :=_cdadd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ddegb !=nil {_ddegb =_cee .TraceToDirectObject (_ddegb );_gcbfd ,_acedg :=_ddegb .(*_cee .PdfObjectArray );if !_acedg {_fca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddegb );
return nil ,_cee .ErrTypeError ;};if _gcbfd .Len ()!=2{_fca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcbfd .Len ());return nil ,ErrInvalidAttribute ;
};_dgcfc .Extend =_gcbfd ;};return &_dgcfc ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cee .StreamEncoder ;FormType _cee .PdfObject ;BBox _cee .PdfObject ;Matrix _cee .PdfObject ;Resources *PdfPageResources ;Group _cee .PdfObject ;Ref _cee .PdfObject ;MetaData _cee .PdfObject ;PieceInfo _cee .PdfObject ;LastModified _cee .PdfObject ;
StructParent _cee .PdfObject ;StructParents _cee .PdfObject ;OPI _cee .PdfObject ;OC _cee .PdfObject ;Name _cee .PdfObject ;

// Stream data.
Stream []byte ;_fbged *_cee .PdfObjectStream ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_acdcg ,_cdcf :=_cbcc (basefont );if _cdcf !=nil {return nil ,_cdcf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_acdcg ._bgggf =_dae .NewWinAnsiEncoder ();};return &PdfFont {_bggcf :&_acdcg },nil ;
};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bee :=NewPdfAnnotation ();_gbg :=&PdfAnnotationInk {};_gbg .PdfAnnotation =_bee ;_gbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bee .SetContext (_gbg );return _gbg ;};func _cbcc (_bgbe StdFontName )(pdfFontSimple ,error ){_fdda ,_edda :=_ce .NewStdFontByName (_bgbe );
if !_edda {return pdfFontSimple {},ErrFontNotSupported ;};_gebd :=_ebdab (_fdda );return _gebd ,nil ;};

// SetDate sets the `M` field of the signature.
func (_adfebb *PdfSignature )SetDate (date _gc .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_adfebb .M =_cee .MakeString (date .Format (format ));
};func _egbad ()string {_dggagg .Lock ();defer _dggagg .Unlock ();_bdfdf :=_ade .GetLicenseKey ();if len (_bdefe )> 0&&(_bdfdf .IsLicensed ()||_ggdge ){return _bdefe ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cfgd (),_bdfdf .TypeToString ());
};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bbagf *PdfOutlineItem )GetContainingPdfObject ()_cee .PdfObject {return _bbagf ._bfcbc };

// ToPdfObject implements interface PdfModel.
func (_gbgd *PdfAnnotationSquare )ToPdfObject ()_cee .PdfObject {_gbgd .PdfAnnotation .ToPdfObject ();_geff :=_gbgd ._eddc ;_feeb :=_geff .PdfObject .(*_cee .PdfObjectDictionary );if _gbgd .PdfAnnotationMarkup !=nil {_gbgd .PdfAnnotationMarkup .appendToPdfDictionary (_feeb );
};_feeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_feeb .SetIfNotNil ("\u0042\u0053",_gbgd .BS );_feeb .SetIfNotNil ("\u0049\u0043",_gbgd .IC );_feeb .SetIfNotNil ("\u0042\u0045",_gbgd .BE );
_feeb .SetIfNotNil ("\u0052\u0044",_gbgd .RD );return _geff ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cee .PdfObject )(*PdfFilespec ,error ){_fcdg :=&PdfFilespec {};var _dabac *_cee .PdfObjectDictionary ;if _ffaad ,_fdea :=_cee .GetIndirect (obj );_fdea {_fcdg ._gbfeg =_ffaad ;_bfgeg ,_gdcfb :=_cee .GetDict (_ffaad .PdfObject );
if !_gdcfb {_fca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cee .ErrTypeError ;};_dabac =_bfgeg ;}else if _ecdfd ,_cabc :=_cee .GetDict (obj );
_cabc {_fcdg ._gbfeg =_ecdfd ;_dabac =_ecdfd ;}else {_fca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cee .ErrTypeError ;};if _dabac ==nil {_fca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cdf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _afda :=_dabac .Get ("\u0054\u0079\u0070\u0065");_afda !=nil {_dcge ,_ccad :=_afda .(*_cee .PdfObjectName );if !_ccad {_fca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afda );
}else {if *_dcge !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_dcge );
};};};if _fafb :=_dabac .Get ("\u0046\u0053");_fafb !=nil {_fcdg .FS =_fafb ;};if _gfd :=_dabac .Get ("\u0046");_gfd !=nil {_fcdg .F =_gfd ;};if _bbgd :=_dabac .Get ("\u0055\u0046");_bbgd !=nil {_fcdg .UF =_bbgd ;};if _aaea :=_dabac .Get ("\u0044\u004f\u0053");
_aaea !=nil {_fcdg .DOS =_aaea ;};if _dfdgg :=_dabac .Get ("\u004d\u0061\u0063");_dfdgg !=nil {_fcdg .Mac =_dfdgg ;};if _cabcc :=_dabac .Get ("\u0055\u006e\u0069\u0078");_cabcc !=nil {_fcdg .Unix =_cabcc ;};if _affbg :=_dabac .Get ("\u0049\u0044");_affbg !=nil {_fcdg .ID =_affbg ;
};if _eagga :=_dabac .Get ("\u0056");_eagga !=nil {_fcdg .V =_eagga ;};if _eccg :=_dabac .Get ("\u0045\u0046");_eccg !=nil {_fcdg .EF =_eccg ;};if _edgdf :=_dabac .Get ("\u0052\u0046");_edgdf !=nil {_fcdg .RF =_edgdf ;};if _gggf :=_dabac .Get ("\u0044\u0065\u0073\u0063");
_gggf !=nil {_fcdg .Desc =_gggf ;};if _eegag :=_dabac .Get ("\u0043\u0049");_eegag !=nil {_fcdg .CI =_eegag ;};if _baeg :=_dabac .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_baeg !=nil {_fcdg .AFRelationship =_baeg ;
};return _fcdg ,nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_beagd :=PdfPage {};_beagd ._cfdab =_cee .MakeDict ();_beagd .Resources =NewPdfPageResources ();_fdcgg :=_cee .PdfIndirectObject {};_fdcgg .PdfObject =_beagd ._cfdab ;_beagd ._bafab =&_fdcgg ;_beagd ._bfeab =*_beagd ._cfdab ;
return &_beagd ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToInteger convert to an integer format.
func (_ecegc *PdfColorCalGray )ToInteger (bits int )uint32 {_aece :=_aaa .Pow (2,float64 (bits ))-1;return uint32 (_aece *_ecegc .Val ());};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dae .SimpleEncoder ,error ){_cddef ,_fada :=_cbcc (basefont );if _fada !=nil {return nil ,nil ,_fada ;};_gdad ,_caef :=_cddef .Encoder ().(_dae .SimpleEncoder );
if !_caef {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cddef .Encoder ());
};_bdbdf :=make (map[rune ]_dae .GlyphName );for _ffff :=range alphabet {if _ ,_ccbd :=_gdad .RuneToCharcode (_ffff );!_ccbd {_ ,_dggf :=_cddef ._daefa .Read (_ffff );if !_dggf {_fca .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ffff ,_ffff );
continue ;};_acda ,_dggf :=_dae .RuneToGlyph (_ffff );if !_dggf {_fca .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ffff ,_ffff );continue ;};if len (_bdbdf )>=255{return nil ,nil ,_cdf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bdbdf [_ffff ]=_acda ;};};var (_eaffa []_dae .CharCode ;_dcgc []_dae .CharCode ;);for _ecde :=_dae .CharCode (1);_ecde <=0xff;_ecde ++{_gcca ,_fdgfc :=_gdad .CharcodeToRune (_ecde );if !_fdgfc {_eaffa =append (_eaffa ,_ecde );continue ;};if _ ,_fdgfc =alphabet [_gcca ];
!_fdgfc {_dcgc =append (_dcgc ,_ecde );};};_fefec :=append (_eaffa ,_dcgc ...);if len (_fefec )< len (_bdbdf ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bdbdf ),len (_fefec ));
};_aebe :=make ([]rune ,0,len (_bdbdf ));for _ggbb :=range _bdbdf {_aebe =append (_aebe ,_ggbb );};_da .Slice (_aebe ,func (_ffde ,_ececb int )bool {return _aebe [_ffde ]< _aebe [_ececb ]});_bagff :=make (map[_dae .CharCode ]_dae .GlyphName ,len (_aebe ));
for _ ,_abacb :=range _aebe {_agff :=_fefec [0];_fefec =_fefec [1:];_bagff [_agff ]=_bdbdf [_abacb ];};_gdad =_dae .ApplyDifferences (_gdad ,_bagff );_cddef .SetEncoder (_gdad );return &PdfFont {_bggcf :&_cddef },_gdad ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efg *PdfActionGoTo )ToPdfObject ()_cee .PdfObject {_efg .PdfAction .ToPdfObject ();_fbe :=_efg ._gaf ;_bgd :=_fbe .PdfObject .(*_cee .PdfObjectDictionary );_bgd .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeGoTo )));_bgd .SetIfNotNil ("\u0044",_efg .D );
return _fbe ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dggagg .Lock ();defer _dggagg .Unlock ();_bcfcc =title };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bdca *PdfAppender )UpdatePage (page *PdfPage ){_bdca .updateObjectsDeep (page .ToPdfObject (),nil )};func (_gbbb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gbbb ._ebcad };func (_eec *PdfReader )newPdfActionHideFromDict (_gcc *_cee .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gcc .Get ("\u0054"),H :_gcc .Get ("\u0048")},nil ;
};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fbcb :=PdfColorLab {l ,a ,b };return &_fbcb };

// AddKChild adds a child K dictionary object.
func (_dgfbd *KDict )AddKChild (kChild *KDict ){_dgfbd ._affgf =append (_dgfbd ._affgf ,&KValue {_aedde :kChild });};type pdfFontSimple struct{fontCommon ;_eggbg *_cee .PdfIndirectObject ;_ccfb map[_dae .CharCode ]float64 ;_bgggf _dae .TextEncoder ;_bdecc _dae .TextEncoder ;
_aaec *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cee .PdfObject ;LastChar _cee .PdfObject ;Widths _cee .PdfObject ;Encoding _cee .PdfObject ;_daefa *_ce .RuneCharSafeMap ;};

// SetAlpha sets the alpha layer for the image.
func (_fbga *Image )SetAlpha (alpha []byte ){_fbga ._cbfg =alpha };var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_eegea *PdfAnnotationWatermark )ToPdfObject ()_cee .PdfObject {_eegea .PdfAnnotation .ToPdfObject ();_gecb :=_eegea ._eddc ;_eagd :=_gecb .PdfObject .(*_cee .PdfObjectDictionary );_eagd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_eagd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_eegea .FixedPrint );return _gecb ;};func _badf (_eeca *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_eeca }};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_ecfa :fonts ,CurrentFont :fonts [0]};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_egdd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgafd ,_ccdfa :=_cee .GetNumbersAsFloat (objects );
if _ccdfa !=nil {return nil ,_ccdfa ;};return _egdd .ColorFromFloats (_bgafd );};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fc .ReadSeeker )(*PdfFont ,error ){const _adag =_dae .CharCode (32);const _gcfce =_dae .CharCode (255);_gfece ,_dcabb :=_fc .ReadAll (r );if _dcabb !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dcabb );
return nil ,_dcabb ;};_dabc ,_dcabb :=_ce .TtfParse (_cd .NewReader (_gfece ));if _dcabb !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dcabb );
return nil ,_dcabb ;};_adagg :=&pdfFontSimple {_ccfb :make (map[_dae .CharCode ]float64 ),fontCommon :fontCommon {_ccdeg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_adagg ._bgggf =_dae .NewWinAnsiEncoder ();_adagg ._fbcf =_dabc .PostScriptName ;
_adagg .FirstChar =_cee .MakeInteger (int64 (_adag ));_adagg .LastChar =_cee .MakeInteger (int64 (_gcfce ));_eaad :=1000.0/float64 (_dabc .UnitsPerEm );if len (_dabc .Widths )<=0{return nil ,_cdf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cffc :=_eaad *float64 (_dabc .Widths [0]);_ggada :=make ([]float64 ,0,_gcfce -_adag +1);for _bdace :=_adag ;_bdace <=_gcfce ;_bdace ++{_ccceg ,_dbgcd :=_adagg .Encoder ().CharcodeToRune (_bdace );if !_dbgcd {_fca .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bdace );
_ggada =append (_ggada ,_cffc );continue ;};_bcec ,_dbcfd :=_dabc .Chars [_ccceg ];if !_dbcfd {_fca .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_ggada =append (_ggada ,_cffc );continue ;
};_gbaf :=_eaad *float64 (_dabc .Widths [_bcec ]);_ggada =append (_ggada ,_gbaf );};_adagg .Widths =_cee .MakeIndirectObject (_cee .MakeArrayFromFloats (_ggada ));if len (_ggada )< int (_gcfce -_adag +1){_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_ggada ),255-32+1);
return nil ,_cee .ErrRangeError ;};for _ecgb :=_adag ;_ecgb <=_gcfce ;_ecgb ++{_adagg ._ccfb [_ecgb ]=_ggada [_ecgb -_adag ];};_adagg .Encoding =_cee .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fbeda :=&PdfFontDescriptor {};
_fbeda .FontName =_cee .MakeName (_dabc .PostScriptName );_fbeda .Ascent =_cee .MakeFloat (_eaad *float64 (_dabc .TypoAscender ));_fbeda .Descent =_cee .MakeFloat (_eaad *float64 (_dabc .TypoDescender ));_fbeda .CapHeight =_cee .MakeFloat (_eaad *float64 (_dabc .CapHeight ));
_fbeda .FontBBox =_cee .MakeArrayFromFloats ([]float64 {_eaad *float64 (_dabc .Xmin ),_eaad *float64 (_dabc .Ymin ),_eaad *float64 (_dabc .Xmax ),_eaad *float64 (_dabc .Ymax )});_fbeda .ItalicAngle =_cee .MakeFloat (_dabc .ItalicAngle );_fbeda .MissingWidth =_cee .MakeFloat (_eaad *float64 (_dabc .Widths [0]));
_edfc ,_dcabb :=_cee .MakeStream (_gfece ,_cee .NewFlateEncoder ());if _dcabb !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dcabb );
return nil ,_dcabb ;};_edfc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cee .MakeInteger (int64 (len (_gfece ))));_fbeda .FontFile2 =_edfc ;if _dabc .Bold {_fbeda .StemV =_cee .MakeInteger (120);}else {_fbeda .StemV =_cee .MakeInteger (70);
};_defgc :=_caaa ;if _dabc .IsFixedPitch {_defgc |=_aabcf ;};if _dabc .ItalicAngle !=0{_defgc |=_dgbc ;};_fbeda .Flags =_cee .MakeInteger (int64 (_defgc ));_adagg ._ebcad =_fbeda ;_gcce :=&PdfFont {_bggcf :_adagg };return _gcce ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_cafb *Image )Resample (targetBitsPerComponent int64 ){if _cafb .BitsPerComponent ==targetBitsPerComponent {return ;};_cdgc :=_cafb .GetSamples ();if targetBitsPerComponent < _cafb .BitsPerComponent {_dfgef :=_cafb .BitsPerComponent -targetBitsPerComponent ;
for _debff :=range _cdgc {_cdgc [_debff ]>>=uint (_dfgef );};}else if targetBitsPerComponent > _cafb .BitsPerComponent {_ggccf :=targetBitsPerComponent -_cafb .BitsPerComponent ;for _cdea :=range _cdgc {_cdgc [_cdea ]<<=uint (_ggccf );};};_cafb .BitsPerComponent =targetBitsPerComponent ;
if _cafb .BitsPerComponent < 8{_cafb .resampleLowBits (_cdgc );return ;};_dffea :=_ca .BytesPerLine (int (_cafb .Width ),int (_cafb .BitsPerComponent ),_cafb .ColorComponents );_dfee :=make ([]byte ,_dffea *int (_cafb .Height ));var (_gddfb ,_bbdbe ,_bddda ,_bddaba int ;
_debfb uint32 ;);for _bddda =0;_bddda < int (_cafb .Height );_bddda ++{_gddfb =_bddda *_dffea ;_bbdbe =(_bddda +1)*_dffea -1;_geeccd :=_ag .ResampleUint32 (_cdgc [_gddfb :_bbdbe ],int (targetBitsPerComponent ),8);for _bddaba ,_debfb =range _geeccd {_dfee [_bddaba +_gddfb ]=byte (_debfb );
};};_cafb .Data =_dfee ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_eebdf *_cee .PdfIndirectObject ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fgfcf *PdfSignature )GetDocMDPPermission ()(_cc .DocMDPPermission ,bool ){for _ ,_dggbc :=range _fgfcf .Reference .Elements (){if _cfdeb ,_dffgg :=_cee .GetDict (_dggbc );_dffgg {if _eabbd ,_aeafb :=_cee .GetNameVal (_cfdeb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_aeafb &&_eabbd =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _gbfaca ,_adced :=_cee .GetDict (_cfdeb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_adced {if P ,_bcfgg :=_cee .GetIntVal (_gbfaca .Get ("\u0050"));
_bcfgg {return _cc .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// WriteToFile writes the Appender output to file specified by path.
func (_abaae *PdfAppender )WriteToFile (outputPath string )error {_bddc ,_baag :=_fef .Create (outputPath );if _baag !=nil {return _baag ;};defer _bddc .Close ();return _abaae .Write (_bddc );};func _fabef (_eegbb *_cee .PdfObjectStream )(*PdfFunctionType0 ,error ){_aaeeb :=&PdfFunctionType0 {};
_aaeeb ._gaagd =_eegbb ;_efebf :=_eegbb .PdfObjectDictionary ;_gacad ,_cbfa :=_cee .TraceToDirectObject (_efebf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cee .PdfObjectArray );if !_cbfa {_fca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gacad .Len ()< 0||_gacad .Len ()%2!=0{_fca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aaeeb .NumInputs =_gacad .Len ()/2;_adeb ,_ccbg :=_gacad .ToFloat64Array ();if _ccbg !=nil {return nil ,_ccbg ;};_aaeeb .Domain =_adeb ;
_gacad ,_cbfa =_cee .TraceToDirectObject (_efebf .Get ("\u0052\u0061\u006eg\u0065")).(*_cee .PdfObjectArray );if !_cbfa {_fca .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gacad .Len ()< 0||_gacad .Len ()%2!=0{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aaeeb .NumOutputs =_gacad .Len ()/2;_ggbab ,_ccbg :=_gacad .ToFloat64Array ();if _ccbg !=nil {return nil ,_ccbg ;
};_aaeeb .Range =_ggbab ;_gacad ,_cbfa =_cee .TraceToDirectObject (_efebf .Get ("\u0053\u0069\u007a\u0065")).(*_cee .PdfObjectArray );if !_cbfa {_fca .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_agcbg ,_ccbg :=_gacad .ToIntegerArray ();
if _ccbg !=nil {return nil ,_ccbg ;};if len (_agcbg )!=_aaeeb .NumInputs {_fca .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaeeb .Size =_agcbg ;_dfgdb ,_cbfa :=_cee .TraceToDirectObject (_efebf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cee .PdfObjectInteger );
if !_cbfa {_fca .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_dfgdb !=1&&*_dfgdb !=2&&*_dfgdb !=4&&*_dfgdb !=8&&*_dfgdb !=12&&*_dfgdb !=16&&*_dfgdb !=24&&*_dfgdb !=32{_fca .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_dfgdb );
return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaeeb .BitsPerSample =int (*_dfgdb );_aaeeb .Order =1;_fgfee ,_cbfa :=_cee .TraceToDirectObject (_efebf .Get ("\u004f\u0072\u0064e\u0072")).(*_cee .PdfObjectInteger );
if _cbfa {if *_fgfee !=1&&*_fgfee !=3{_fca .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fgfee );return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaeeb .Order =int (*_fgfee );
};_gacad ,_cbfa =_cee .TraceToDirectObject (_efebf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cee .PdfObjectArray );if _cbfa {_dbgbad ,_cfdf :=_gacad .ToFloat64Array ();if _cfdf !=nil {return nil ,_cfdf ;};_aaeeb .Encode =_dbgbad ;};_gacad ,_cbfa =_cee .TraceToDirectObject (_efebf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cee .PdfObjectArray );
if _cbfa {_bgdbeb ,_gaecg :=_gacad .ToFloat64Array ();if _gaecg !=nil {return nil ,_gaecg ;};_aaeeb .Decode =_bgdbeb ;};_dfba ,_ccbg :=_cee .DecodeStream (_eegbb );if _ccbg !=nil {return nil ,_ccbg ;};_aaeeb ._bbdc =_dfba ;return _aaeeb ,nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_acff *_cee .PdfIndirectObject ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_aec :=NewPdfAction ();_edd :=&PdfActionGoTo3DView {};_edd .PdfAction =_aec ;_aec .SetContext (_edd );return _edd ;};

// ToPdfObject implements interface PdfModel.
func (_dbbae *PdfAnnotationRichMedia )ToPdfObject ()_cee .PdfObject {_dbbae .PdfAnnotation .ToPdfObject ();_aaba :=_dbbae ._eddc ;_cfgb :=_aaba .PdfObject .(*_cee .PdfObjectDictionary );_cfgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_cfgb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_dbbae .RichMediaSettings );_cfgb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_dbbae .RichMediaContent );
return _aaba ;};func _adfebd (_addeb *PdfPage ){_fgdc :=_ade .GetLicenseKey ();if _fgdc !=nil &&_fgdc .IsLicensed (){return ;};_begb :=_cee .PdfObjectName ("\u0055\u0046\u0031");if !_addeb .Resources .HasFontByName (_begb ){_addeb .Resources .SetFontByName (_begb ,DefaultFont ().ToPdfObject ());
};var _dacaf []string ;_dacaf =append (_dacaf ,"\u0071");_dacaf =append (_dacaf ,"\u0042\u0054");_dacaf =append (_dacaf ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_begb .String ()));_dacaf =append (_dacaf ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_dacaf =append (_dacaf ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_ccegaa :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dacaf =append (_dacaf ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ccegaa ));_dacaf =append (_dacaf ,"\u0045\u0054");_dacaf =append (_dacaf ,"\u0051");_fedg :=_ad .Join (_dacaf ,"\u000a");_addeb .AddContentStreamByString (_fedg );_addeb .ToPdfObject ();
};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cee .PdfObject ;};func _afgafg (_abeeg _cee .PdfObject )(*PdfFunctionType3 ,error ){_beabc :=&PdfFunctionType3 {};var _defb *_cee .PdfObjectDictionary ;if _gbfgb ,_eeedd :=_abeeg .(*_cee .PdfIndirectObject );
_eeedd {_bgfda ,_gegf :=_gbfgb .PdfObject .(*_cee .PdfObjectDictionary );if !_gegf {return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_beabc ._ebff =_gbfgb ;_defb =_bgfda ;}else if _bgce ,_facad :=_abeeg .(*_cee .PdfObjectDictionary );
_facad {_defb =_bgce ;}else {return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdabc ,_fdcda :=_cee .TraceToDirectObject (_defb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cee .PdfObjectArray );
if !_fdcda {_fca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bdabc .Len ()!=2{_fca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cdf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cegd ,_efffd :=_bdabc .ToFloat64Array ();
if _efffd !=nil {return nil ,_efffd ;};_beabc .Domain =_cegd ;_bdabc ,_fdcda =_cee .TraceToDirectObject (_defb .Get ("\u0052\u0061\u006eg\u0065")).(*_cee .PdfObjectArray );if _fdcda {if _bdabc .Len ()< 0||_bdabc .Len ()%2!=0{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bcgc ,_bcfgc :=_bdabc .ToFloat64Array ();if _bcfgc !=nil {return nil ,_bcfgc ;};_beabc .Range =_bcgc ;};_bdabc ,_fdcda =_cee .TraceToDirectObject (_defb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cee .PdfObjectArray );if !_fdcda {_fca .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_beabc .Functions =[]PdfFunction {};
for _ ,_agabf :=range _bdabc .Elements (){_ggbag ,_acecf :=_eeaec (_agabf );if _acecf !=nil {return nil ,_acecf ;};_beabc .Functions =append (_beabc .Functions ,_ggbag );};_bdabc ,_fdcda =_cee .TraceToDirectObject (_defb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cee .PdfObjectArray );
if !_fdcda {_fca .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gdeefe ,_efffd :=_bdabc .ToFloat64Array ();if _efffd !=nil {return nil ,_efffd ;};_beabc .Bounds =_gdeefe ;if len (_beabc .Bounds )!=len (_beabc .Functions )-1{_fca .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_beabc .Bounds ),len (_beabc .Functions ));
return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdabc ,_fdcda =_cee .TraceToDirectObject (_defb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cee .PdfObjectArray );if !_fdcda {_fca .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cdf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bbggb ,_efffd :=_bdabc .ToFloat64Array ();
if _efffd !=nil {return nil ,_efffd ;};_beabc .Encode =_bbggb ;if len (_beabc .Encode )!=2*len (_beabc .Functions ){_fca .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_beabc .Encode ),len (_beabc .Functions ));
return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _beabc ,nil ;};

// GetCerts returns the signature certificate chain.
func (_gadec *PdfSignature )GetCerts ()([]*_dfd .Certificate ,error ){var _facdgb []func ()([]*_dfd .Certificate ,error );switch _dggag ,_ :=_cee .GetNameVal (_gadec .SubFilter );_dggag {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_facdgb =append (_facdgb ,_gadec .extractChainFromPKCS7 ,_gadec .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_facdgb =append (_facdgb ,_gadec .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_facdgb =append (_facdgb ,_gadec .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_dggag );};for _ ,_cgddb :=range _facdgb {_dcacf ,_fcecg :=_cgddb ();if _fcecg !=nil {return nil ,_fcecg ;
};if len (_dcacf )> 0{return _dcacf ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_ffge *PdfAppender )replaceObject (_edgb ,_dbc _cee .PdfObject ){switch _fbdg :=_edgb .(type ){case *_cee .PdfIndirectObject :_ffge ._edae [_dbc ]=_fbdg .ObjectNumber ;
case *_cee .PdfObjectStream :_ffge ._edae [_dbc ]=_fbdg .ObjectNumber ;};};func (_gfedd *PdfWriter )checkPendingObjects (){for _eacca ,_cagac :=range _gfedd ._fgadee {if !_gfedd .hasObject (_eacca ){_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_eacca ,_eacca ,_eacca );
for _ ,_feedbc :=range _cagac {for _ ,_eeeda :=range _feedbc .Keys (){_cdeaf :=_feedbc .Get (_eeeda );if _cdeaf ==_eacca {_fca .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_feedbc .Set (_eeeda ,_cee .MakeNull ());break ;};};};};};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_gdga *PdfColorspaceLab )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babce ,_eced :=_cee .GetNumbersAsFloat (objects );
if _eced !=nil {return nil ,_eced ;};return _gdga .ColorFromFloats (_babce );};

// ToPdfObject implements interface PdfModel.
func (_abec *PdfAnnotationCircle )ToPdfObject ()_cee .PdfObject {_abec .PdfAnnotation .ToPdfObject ();_bfeg :=_abec ._eddc ;_abagd :=_bfeg .PdfObject .(*_cee .PdfObjectDictionary );_abec .PdfAnnotationMarkup .appendToPdfDictionary (_abagd );_abagd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_abagd .SetIfNotNil ("\u0042\u0053",_abec .BS );_abagd .SetIfNotNil ("\u0049\u0043",_abec .IC );_abagd .SetIfNotNil ("\u0042\u0045",_abec .BE );_abagd .SetIfNotNil ("\u0052\u0044",_abec .RD );return _bfeg ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dfga *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_bfbbac *PdfPattern )getDict ()*_cee .PdfObjectDictionary {if _bddfc ,_befcc :=_bfbbac ._bgabc .(*_cee .PdfIndirectObject );_befcc {_eaeac ,_ffagc :=_bddfc .PdfObject .(*_cee .PdfObjectDictionary );
if !_ffagc {return nil ;};return _eaeac ;}else if _fbdcee ,_dbgde :=_bfbbac ._bgabc .(*_cee .PdfObjectStream );_dbgde {return _fbdcee .PdfObjectDictionary ;}else {_fca .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bfbbac ._bgabc );
return nil ;};};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_aedgd *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_aedgd ._bdfed =&pickTrayByPDFSize ;};

// SetMCID sets the MCID for the KValue.
func (_acecdc *KValue )SetMCID (mcid int ){_acecdc .Clear ();_acecdc ._dfcf =&mcid };var _ggfcf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcae *PdfShadingType2 )ToPdfObject ()_cee .PdfObject {_gcae .PdfShading .ToPdfObject ();_bbfdge ,_fceeb :=_gcae .getShadingDict ();if _fceeb !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbfdge ==nil {_fca .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gcae .Coords !=nil {_bbfdge .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gcae .Coords );
};if _gcae .Domain !=nil {_bbfdge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcae .Domain );};if _gcae .Function !=nil {if len (_gcae .Function )==1{_bbfdge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcae .Function [0].ToPdfObject ());
}else {_dccgg :=_cee .MakeArray ();for _ ,_cffd :=range _gcae .Function {_dccgg .Append (_cffd .ToPdfObject ());};_bbfdge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dccgg );};};if _gcae .Extend !=nil {_bbfdge .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gcae .Extend );
};return _gcae ._dfgbe ;};func _caaf (_ecdgb map[_ce .GID ]int ,_dfgc uint16 )*_cee .PdfObjectArray {_aaee :=&_cee .PdfObjectArray {};_fffbf :=_ce .GID (_dfgc );for _gfggc :=_ce .GID (0);_gfggc < _fffbf ;{_fcbb ,_bbbg :=_ecdgb [_gfggc ];if !_bbbg {_gfggc ++;
continue ;};_gfcf :=_gfggc ;for _gbfc :=_gfcf +1;_gbfc < _fffbf ;_gbfc ++{if _cbbf ,_ffeeg :=_ecdgb [_gbfc ];!_ffeeg ||_fcbb !=_cbbf {break ;};_gfcf =_gbfc ;};_aaee .Append (_cee .MakeInteger (int64 (_gfggc )));_aaee .Append (_cee .MakeInteger (int64 (_gfcf )));
_aaee .Append (_cee .MakeInteger (int64 (_fcbb )));_gfggc =_gfcf +1;};return _aaee ;};

// ValidateSignatures validates digital signatures in the document.
func (_dgbgb *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dgbgb .AcroForm ==nil {return nil ,nil ;};if _dgbgb .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ebac *PdfSignature ;
_gefb *PdfField ;_fcdde SignatureHandler ;};var _bdabb []*sigFieldPair ;for _ ,_fdfg :=range _dgbgb .AcroForm .AllFields (){if _fdfg .V ==nil {continue ;};if _geefb ,_cdbdg :=_cee .GetDict (_fdfg .V );_cdbdg {if _adcac ,_cdcfc :=_cee .GetNameVal (_geefb .Get ("\u0054\u0079\u0070\u0065"));
_cdcfc &&(_adcac =="\u0053\u0069\u0067"||_adcac =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_ccabg ,_ccdfg :=_cee .GetIndirect (_fdfg .V );if !_ccdfg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ddece ,_dcgde :=_dgbgb .newPdfSignatureFromIndirect (_ccabg );if _dcgde !=nil {return nil ,_dcgde ;};var _dbgea SignatureHandler ;for _ ,_adecf :=range handlers {if _adecf .IsApplicable (_ddece ){_dbgea =_adecf ;break ;};};
_bdabb =append (_bdabb ,&sigFieldPair {_ebac :_ddece ,_gefb :_fdfg ,_fcdde :_dbgea });};};};var _aafdd []SignatureValidationResult ;for _ ,_fdgfd :=range _bdabb {_cfabd :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fdgfd ._gefb }};
if _fdgfd ._fcdde ==nil {_cfabd .Errors =append (_cfabd .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_aafdd =append (_aafdd ,_cfabd );continue ;};_gabgb ,_bacc :=_fdgfd ._fcdde .NewDigest (_fdgfd ._ebac );
if _bacc !=nil {_cfabd .Errors =append (_cfabd .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bacc .Error ());_aafdd =append (_aafdd ,_cfabd );continue ;};_gdebf :=_fdgfd ._ebac .ByteRange ;if _gdebf ==nil {_cfabd .Errors =append (_cfabd .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_aafdd =append (_aafdd ,_cfabd );continue ;};for _dbbeb :=0;_dbbeb < _gdebf .Len ();_dbbeb =_dbbeb +2{_gedaf ,_ :=_cee .GetNumberAsInt64 (_gdebf .Get (_dbbeb ));_afgff ,_ :=_cee .GetIntVal (_gdebf .Get (_dbbeb +1));if _ ,_ffgfb :=_dgbgb ._cadbb .Seek (_gedaf ,_fc .SeekStart );
_ffgfb !=nil {return nil ,_ffgfb ;};_ffcec :=make ([]byte ,_afgff );if _ ,_debda :=_dgbgb ._cadbb .Read (_ffcec );_debda !=nil {return nil ,_debda ;};_gabgb .Write (_ffcec );};var _edgfb SignatureValidationResult ;if _cdce ,_cdgd :=_fdgfd ._fcdde .(SignatureHandlerDocMDP );
_cdgd {_edgfb ,_bacc =_cdce .ValidateWithOpts (_fdgfd ._ebac ,_gabgb ,SignatureHandlerDocMDPParams {Parser :_dgbgb ._ffdgf });}else {_edgfb ,_bacc =_fdgfd ._fcdde .Validate (_fdgfd ._ebac ,_gabgb );};if _bacc !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_bacc ,_fdgfd ._fcdde );
_edgfb .Errors =append (_edgfb .Errors ,_bacc .Error ());};_edgfb .Name =_fdgfd ._ebac .Name .Decoded ();_edgfb .Reason =_fdgfd ._ebac .Reason .Decoded ();if _fdgfd ._ebac .M !=nil {_ccfbg ,_gadff :=NewPdfDate (_fdgfd ._ebac .M .String ());if _gadff !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gadff );
_edgfb .Errors =append (_edgfb .Errors ,_gadff .Error ());continue ;};_edgfb .Date =_ccfbg ;};_edgfb .ContactInfo =_fdgfd ._ebac .ContactInfo .Decoded ();_edgfb .Location =_fdgfd ._ebac .Location .Decoded ();_edgfb .Fields =_cfabd .Fields ;_aafdd =append (_aafdd ,_edgfb );
};return _aafdd ,nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_eebee :_cee .MakeDict (),ColorComponents :colorComponents };
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gfcc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbc :=vals [0];if _bfbc < 0.0||_bfbc > 100.0{_fca .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_bfbc );
return nil ,ErrColorOutOfRange ;};_dgeg :=vals [1];_fgee :=float64 (-100);_bfag :=float64 (100);if len (_gfcc .Range )> 1{_fgee =_gfcc .Range [0];_bfag =_gfcc .Range [1];};if _dgeg < _fgee ||_dgeg > _bfag {_fca .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dgeg ,_fgee ,_bfag );
return nil ,ErrColorOutOfRange ;};_gddf :=vals [2];_agge :=float64 (-100);_efbdg :=float64 (100);if len (_gfcc .Range )> 3{_agge =_gfcc .Range [2];_efbdg =_gfcc .Range [3];};if _gddf < _agge ||_gddf > _efbdg {_fca .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gddf ,_agge ,_efbdg );
return nil ,ErrColorOutOfRange ;};_egffa :=NewPdfColorLab (_bfbc ,_dgeg ,_gddf );return _egffa ,nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cdagd *LTV )EnableAll (extraCerts []*_dfd .Certificate )error {_eadgb :=_cdagd ._gdggc ._ebdd .AcroForm ;for _ ,_gggfe :=range _eadgb .AllFields (){_fdfc ,_ :=_gggfe .GetContext ().(*PdfFieldSignature );if _fdfc ==nil {continue ;};_abedg :=_fdfc .V ;
if _edfed :=_cdagd .validateSig (_abedg );_edfed !=nil {_fca .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_edfed );
};if _fbdae :=_cdagd .Enable (_abedg ,extraCerts );_fbdae !=nil {return _fbdae ;};};return nil ;};func (_aaegf *PdfReader )flattenFieldsWithOpts (_gcgf bool ,_dbcd FieldAppearanceGenerator ,_agcf *FieldFlattenOpts )error {if _agcf ==nil {_agcf =&FieldFlattenOpts {};
};var _gccc bool ;_aebaf :=map[*PdfAnnotation ]bool {};{var _ebgaf []*PdfField ;_ecbde :=_aaegf .AcroForm ;if _ecbde !=nil {if _agcf .FilterFunc !=nil {_ebgaf =_ecbde .filteredFields (_agcf .FilterFunc ,true );_gccc =_ecbde .Fields !=nil &&len (*_ecbde .Fields )> 0;
}else {_ebgaf =_ecbde .AllFields ();};};for _ ,_bgeba :=range _ebgaf {if len (_bgeba .Annotations )< 1{_fca .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_bgeba .PartialName ());
for _ebbed ,_cddec :=range _bgeba .Kids {for _ ,_bfbdf :=range _cddec .Annotations {_aebaf [_bfbdf .PdfAnnotation ]=_bgeba .V !=nil ;if _cddec .V ==nil {_cddec .V =_bgeba .V ;};if _cddec .T ==nil {_cddec .T =_cee .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_bgeba .PartialName (),_ebbed ));
};if _dbcd !=nil {_bedgf ,_afed :=_dbcd .GenerateAppearanceDict (_ecbde ,_cddec ,_bfbdf );if _afed !=nil {return _afed ;};_bfbdf .AP =_bedgf ;};};};};for _ ,_gede :=range _bgeba .Annotations {_aebaf [_gede .PdfAnnotation ]=_bgeba .V !=nil ;if _dbcd !=nil {_afdc ,_fffd :=_dbcd .GenerateAppearanceDict (_ecbde ,_bgeba ,_gede );
if _fffd !=nil {return _fffd ;};_gede .AP =_afdc ;};};};};if _gcgf {for _ ,_fabd :=range _aaegf .PageList {_adef ,_eefb :=_fabd .GetAnnotations ();if _eefb !=nil {return _eefb ;};for _ ,_bdcc :=range _adef {_aebaf [_bdcc ]=true ;};};};for _ ,_gdeef :=range _aaegf .PageList {_gacge :=_gdeef .flattenFieldsWithOpts (_dbcd ,_agcf ,_aebaf );
if _gacge !=nil {return _gacge ;};};if !_gccc {_aaegf .AcroForm =nil ;};return nil ;};

// Duplex returns the value of the duplex.
func (_gfggac *ViewerPreferences )Duplex ()Duplex {return _gfggac ._cadea };func (_dfgbdf *pdfFontSimple )addEncoding ()error {var (_bfeed string ;_gcfgd map[_dae .CharCode ]_dae .GlyphName ;_dcbde _dae .SimpleEncoder ;);if _dfgbdf .Encoder ()!=nil {_aecf ,_bffgc :=_dfgbdf .Encoder ().(_dae .SimpleEncoder );
if _bffgc &&_aecf !=nil {_bfeed =_aecf .BaseName ();};};if _dfgbdf .Encoding !=nil {_gdcce ,_dgdc ,_ecfba :=_dfgbdf .getFontEncoding ();if _ecfba !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfgbdf ._fbcf ,_dfgbdf ._ccdeg ,_dfgbdf .Encoding ,_dfgbdf .Encoding ,_ecfba );
return _ecfba ;};if _gdcce !=""{_bfeed =_gdcce ;};_gcfgd =_dgdc ;_dcbde ,_ecfba =_dae .NewSimpleTextEncoder (_bfeed ,_gcfgd );if _ecfba !=nil {return _ecfba ;};};if _dcbde ==nil {_bfeea :=_dfgbdf ._ebcad ;if _bfeea !=nil {switch _dfgbdf ._ccdeg {case "\u0054\u0079\u0070e\u0031":if _bfeea .fontFile !=nil &&_bfeea .fontFile ._beggd !=nil {_fca .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_dcbde =_bfeea .fontFile ._beggd ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bfeea ._bcga !=nil {_fca .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_beecc ,_defab :=_bfeea ._bcga .MakeEncoder ();
if _defab ==nil {_dcbde =_beecc ;};if _dfgbdf ._abcbf ==nil {_dfgbdf ._abcbf =_bfeea ._bcga .MakeToUnicode ();};};};};};if _dcbde !=nil {if _gcfgd !=nil {_fca .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcfgd ,_dfgbdf .baseFields ());
_dcbde =_dae .ApplyDifferences (_dcbde ,_gcfgd );};_dfgbdf .SetEncoder (_dcbde );};return nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cee .PdfObject ;_aecec []byte ;_cgbb *_cee .PdfIndirectObject ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_addd *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_geag *PdfAnnotationMovie )ToPdfObject ()_cee .PdfObject {_geag .PdfAnnotation .ToPdfObject ();_bcbd :=_geag ._eddc ;_bbed :=_bcbd .PdfObject .(*_cee .PdfObjectDictionary );_bbed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u004d\u006f\u0076i\u0065"));
_bbed .SetIfNotNil ("\u0054",_geag .T );_bbed .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_geag .Movie );_bbed .SetIfNotNil ("\u0041",_geag .A );return _bcbd ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dggagg .Lock ();defer _dggagg .Unlock ();_aafgb =author };func _adfcc (_bcdf *PdfField )[]*PdfField {_cefcd :=[]*PdfField {_bcdf };for _ ,_ffedg :=range _bcdf .Kids {_cefcd =append (_cefcd ,_adfcc (_ffedg )...);};return _cefcd ;
};

// SetBoundingBox sets the bounding box in the attribute object.
func (_fgddf *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_fgddf ._daafg =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cfeg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cfeg .Mask ()&^fl .Mask ())};func (_gbeg *PdfAppender )addNewObject (_cbade _cee .PdfObject ){if _ ,_eebc :=_gbeg ._efdc [_cbade ];!_eebc {_gbeg ._eccb =append (_gbeg ._eccb ,_cbade );
_gbeg ._efdc [_cbade ]=struct{}{};};};func (_fgccf *PdfAppender )updateObjectsDeep (_eedf _cee .PdfObject ,_bbdb map[_cee .PdfObject ]struct{}){if _bbdb ==nil {_bbdb =map[_cee .PdfObject ]struct{}{};};if _ ,_fcef :=_bbdb [_eedf ];_fcef ||_eedf ==nil {return ;
};_bbdb [_eedf ]=struct{}{};_gacd :=_cee .ResolveReferencesDeep (_eedf ,_fgccf ._gabb );if _gacd !=nil {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gacd );};switch _efff :=_eedf .(type ){case *_cee .PdfIndirectObject :switch {case _efff .GetParser ()==_fgccf ._ebdd ._ffdgf :return ;
case _efff .GetParser ()==_fgccf .Reader ._ffdgf :_dab ,_ :=_fgccf ._ebdd .GetIndirectObjectByNumber (int (_efff .ObjectNumber ));_dcg ,_aggb :=_dab .(*_cee .PdfIndirectObject );if _aggb &&_dcg !=nil {if _dcg .PdfObject !=_efff .PdfObject &&_dcg .PdfObject .WriteString ()!=_efff .PdfObject .WriteString (){if _ad .Contains (_efff .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_ad .Contains (_efff .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_fgccf .addNewObject (_eedf );_fgccf ._edae [_eedf ]=_efff .ObjectNumber ;};};default:_fgccf .addNewObject (_eedf );};_fgccf .updateObjectsDeep (_efff .PdfObject ,_bbdb );case *_cee .PdfObjectArray :for _ ,_agcd :=range _efff .Elements (){_fgccf .updateObjectsDeep (_agcd ,_bbdb );
};case *_cee .PdfObjectDictionary :for _ ,_dgfe :=range _efff .Keys (){_fgccf .updateObjectsDeep (_efff .Get (_dgfe ),_bbdb );};case *_cee .PdfObjectStreams :if _efff .GetParser ()!=_fgccf ._ebdd ._ffdgf {for _ ,_ebb :=range _efff .Elements (){_fgccf .updateObjectsDeep (_ebb ,_bbdb );
};};case *_cee .PdfObjectStream :switch {case _efff .GetParser ()==_fgccf ._ebdd ._ffdgf :return ;case _efff .GetParser ()==_fgccf .Reader ._ffdgf :if _bfdf ,_dged :=_fgccf ._ebdd ._ffdgf .LookupByReference (_efff .PdfObjectReference );_dged ==nil {var _dbdf bool ;
if _dfg ,_bfdff :=_cee .GetStream (_bfdf );_bfdff &&_cd .Equal (_dfg .Stream ,_efff .Stream ){_dbdf =true ;};if _deba ,_dcbc :=_cee .GetDict (_bfdf );_dbdf &&_dcbc {_dbdf =_deba .WriteString ()==_efff .PdfObjectDictionary .WriteString ();};if _dbdf {return ;
};};if _efff .ObjectNumber !=0{_fgccf ._edae [_eedf ]=_efff .ObjectNumber ;};default:if _ ,_ccgg :=_fgccf ._efdc [_eedf ];!_ccgg {_fgccf .addNewObject (_eedf );};};_fgccf .updateObjectsDeep (_efff .PdfObjectDictionary ,_bbdb );};};

// Encoder returns the font's text encoder.
func (_ggaae *pdfFontSimple )Encoder ()_dae .TextEncoder {if _ggaae ._bgggf !=nil {return _ggaae ._bgggf ;};if _ggaae ._bdecc !=nil {return _ggaae ._bdecc ;};_gaccc ,_ :=_dae .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gaccc ;};func _gbeda (_gdfec string )map[string ]string {_ccdad :=_eefd .Split (_gdfec ,-1);_adbgc :=map[string ]string {};for _ ,_ddbdg :=range _ccdad {_dgec :=_bgfgf .FindStringSubmatch (_ddbdg );if _dgec ==nil {continue ;};_fadcd ,_gfaeg :=_dgec [1],_dgec [2];
_adbgc [_fadcd ]=_gfaeg ;};return _adbgc ;};func (_ece *PdfReader )newPdfActionURIFromDict (_gebc *_cee .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_gebc .Get ("\u0055\u0052\u0049"),IsMap :_gebc .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dgee *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dgee .updateObjectsDeep (dss .ToPdfObject (),nil );};_dgee ._ccee =dss ;};func (_bbaac *PdfWriter )flushWriter ()error {if _bbaac ._efdcg ==nil {_bbaac ._efdcg =_bbaac ._cbeea .Flush ();};return _bbaac ._efdcg ;
};func _gcdb (_aebb _cee .PdfObject )(*PdfBorderStyle ,error ){_gab :=&PdfBorderStyle {};_gab ._gbgb =_aebb ;var _bbca *_cee .PdfObjectDictionary ;_aebb =_cee .TraceToDirectObject (_aebb );_bbca ,_cfda :=_aebb .(*_cee .PdfObjectDictionary );if !_cfda {return nil ,_cdf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};if _fbdd :=_bbca .Get ("\u0054\u0079\u0070\u0065");_fbdd !=nil {_gece ,_afec :=_fbdd .(*_cee .PdfObjectName );if !_afec {_fca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_fbdd );
}else {if *_gece !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fca .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gece );};};};if _fgad :=_bbca .Get ("\u0057");
_fgad !=nil {_cbad ,_daecd :=_cee .GetNumberAsFloat (_fgad );if _daecd !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_daecd );return nil ,_daecd ;};_gab .W =&_cbad ;
};if _fbfe :=_bbca .Get ("\u0053");_fbfe !=nil {_gbe ,_cccc :=_fbfe .(*_cee .PdfObjectName );if !_cccc {return nil ,_cdf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _bba BorderStyle ;switch *_gbe {case "\u0053":_bba =BorderStyleSolid ;case "\u0044":_bba =BorderStyleDashed ;case "\u0042":_bba =BorderStyleBeveled ;case "\u0049":_bba =BorderStyleInset ;case "\u0055":_bba =BorderStyleUnderline ;default:_fca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gbe );
return nil ,_cdf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gab .S =&_bba ;};if _bagg :=_bbca .Get ("\u0044");_bagg !=nil {_eedg ,_aegg :=_bagg .(*_cee .PdfObjectArray );
if !_aegg {_fca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bagg );return nil ,_cdf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bdgg ,_cfbe :=_eedg .ToIntegerArray ();if _cfbe !=nil {_fca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cfbe );
return nil ,_cfbe ;};_gab .D =&_bdgg ;};return _gab ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetContentStream returns the pattern cell's content stream
func (_bddcc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fegc ,_ ,_geedd :=_bddcc .GetContentStreamWithEncoder ();return _fegc ,_geedd ;};func _efffg ()_gc .Time {_dggagg .Lock ();defer _dggagg .Unlock ();return _dddda };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bbabe *PdfPage )SetContentStreams (cStreams []string ,encoder _cee .StreamEncoder )error {if len (cStreams )==0{_bbabe .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cee .NewRawEncoder ();};var _bggfg []*_cee .PdfObjectStream ;for _ ,_aadgfc :=range cStreams {_gdaba :=&_cee .PdfObjectStream {};
_edad :=encoder .MakeStreamDict ();_bcbba ,_fcfc :=encoder .EncodeBytes ([]byte (_aadgfc ));if _fcfc !=nil {return _fcfc ;};_edad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_bcbba ))));_gdaba .PdfObjectDictionary =_edad ;
_gdaba .Stream =_bcbba ;_bggfg =append (_bggfg ,_gdaba );};if len (_bggfg )==1{_bbabe .Contents =_bggfg [0];}else {_aeab :=_cee .MakeArray ();for _ ,_dfce :=range _bggfg {_aeab .Append (_dfce );};_bbabe .Contents =_aeab ;};return nil ;};

// Items returns all children outline items.
func (_fddaf *Outline )Items ()[]*OutlineItem {return _fddaf .Entries };func _dfbe (_ebdfg _cee .PdfObject ,_bedc bool )(*PdfFont ,error ){_ggbda ,_dbbe ,_ffdge :=_babe (_ebdfg );if _ggbda !=nil {_ebad (_ggbda );};if _ffdge !=nil {if _ffdge ==ErrType1CFontNotSupported {_cbce ,_bebd :=_ecad (_ggbda ,_dbbe ,nil );
if _bebd !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dbbe ,_bebd );
return nil ,_ffdge ;};return &PdfFont {_bggcf :_cbce },_ffdge ;};return nil ,_ffdge ;};_faff :=&PdfFont {};switch _dbbe ._ccdeg {case "\u0054\u0079\u0070e\u0030":if !_bedc {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbbe );
return nil ,_cdf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dggef ,_gfff :=_cgbbg (_ggbda ,_dbbe );if _gfff !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbbe ,_gfff );
return nil ,_gfff ;};_faff ._bggcf =_dggef ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _babbe *pdfFontSimple ;_gcgfg ,_fdbf :=_ce .NewStdFontByName (_ce .StdFontName (_dbbe ._fbcf ));
if _fdbf {_gabbf :=_ebdab (_gcgfg );_faff ._bggcf =&_gabbf ;_gdbge :=_cee .TraceToDirectObject (_gabbf .ToPdfObject ());_adgbg ,_cdcdb ,_ddbd :=_babe (_gdbge );if _ddbd !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dbbe ,_gabbf );
return nil ,_ddbd ;};for _ ,_agfce :=range _ggbda .Keys (){_adgbg .Set (_agfce ,_ggbda .Get (_agfce ));};_babbe ,_ddbd =_ecad (_adgbg ,_cdcdb ,_gabbf ._bdecc );if _ddbd !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dbbe ,_gabbf );
return nil ,_ddbd ;};_babbe ._ccfb =_gabbf ._ccfb ;_babbe ._daefa =_gabbf ._daefa ;if _babbe ._aaec ==nil {_babbe ._aaec =_gabbf ._aaec ;};}else {_babbe ,_ffdge =_ecad (_ggbda ,_dbbe ,nil );if _ffdge !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dbbe ,_ffdge );
return nil ,_ffdge ;};};_ffdge =_babbe .addEncoding ();if _ffdge !=nil {return nil ,_ffdge ;};if _fdbf {_babbe .updateStandard14Font ();};if _fdbf &&_babbe ._bgggf ==nil &&_babbe ._bdecc ==nil {_fca .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_babbe );
_fca .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_gcgfg );};if len (_babbe ._ccfb )==0{_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_babbe );};_faff ._bggcf =_babbe ;
case "\u0054\u0079\u0070e\u0033":_feabf ,_gcfc :=_feedb (_ggbda ,_dbbe );if _gcfc !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gcfc );
return nil ,_gcfc ;};_faff ._bggcf =_feabf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_agbb ,_fcdcg :=_cfdb (_ggbda ,_dbbe );if _fcdcg !=nil {_fca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fcdcg );
return nil ,_fcdcg ;};_faff ._bggcf =_agbb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aacb ,_baega :=_bbeb (_ggbda ,_dbbe );if _baega !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbbe ,_baega );
return nil ,_baega ;};_faff ._bggcf =_aacb ;default:_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dbbe );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbbe );};return _faff ,nil ;};func (_bffae *LTV )validateSig (_gdaef *PdfSignature )error {if _gdaef ==nil ||_gdaef .Contents ==nil ||len (_gdaef .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_gdaef );
};return nil ;};

// ToInteger convert to an integer format.
func (_cgbf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gega :=_aaa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gega *_cgbf .A ()),uint32 (_gega *_cgbf .B ()),uint32 (_gega *_cgbf .C ())};};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_gcggb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _gcggb ._gabf .(*PdfTilingPattern );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ffab *PdfShadingPatternType3 )ToPdfObject ()_cee .PdfObject {_ffab .PdfPattern .ToPdfObject ();_egfeb :=_ffab .getDict ();if _ffab .Shading !=nil {_egfeb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ffab .Shading .ToPdfObject ());};if _ffab .Matrix !=nil {_egfeb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ffab .Matrix );
};if _ffab .ExtGState !=nil {_egfeb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ffab .ExtGState );};return _ffab ._bgabc ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ceef *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// SetStructParentsKey sets the StructParents key.
func (_gdef *PdfPage )SetStructParentsKey (key int ){if key ==-1{_gdef .StructParents =nil ;}else {_gdef .StructParents =_cee .MakeInteger (int64 (key ));};};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_ffdg *PdfColorspaceDeviceN )ToPdfObject ()_cee .PdfObject {_bebb :=_cee .MakeArray (_cee .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bebb .Append (_ffdg .ColorantNames );_bebb .Append (_ffdg .AlternateSpace .ToPdfObject ());_bebb .Append (_ffdg .TintTransform .ToPdfObject ());
if _ffdg .Attributes !=nil {_bebb .Append (_ffdg .Attributes .ToPdfObject ());};if _ffdg ._eaee !=nil {_ffdg ._eaee .PdfObject =_bebb ;return _ffdg ._eaee ;};return _bebb ;};func _cgbaea (_eeagaa _cee .PdfObject ){_fca .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_eeagaa ,_eeagaa .String ());
if _beafb ,_gbgdc :=_eeagaa .(*_cee .PdfObjectStream );_gbgdc {_cefff ,_cfdae :=_cee .DecodeStream (_beafb );if _cfdae !=nil {_fca .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cfdae );return ;};_fca .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_cefff );
}else if _cedfd ,_fefdba :=_eeagaa .(*_cee .PdfIndirectObject );_fefdba {_fca .Log .Debug ("\u0025\u0054\u0020%\u0076",_cedfd .PdfObject ,_cedfd .PdfObject );_fca .Log .Debug ("\u0025\u0073",_cedfd .PdfObject .String ());};};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cgff :=NewPdfAnnotation ();_addg :=&PdfAnnotationUnderline {};_addg .PdfAnnotation =_cgff ;_addg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgff .SetContext (_addg );return _addg ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_debad *PdfWriter )GetPdfVersion ()string {return _debad .getPdfVersion ()};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_eeaa *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_eeaa ._bfff =&hideToolbar };func (_dccge *PdfWriter )mapObjectStreams (_dbebde bool )(map[_cee .PdfObject ]bool ,bool ){_baddf :=make (map[_cee .PdfObject ]bool );for _ ,_ggbfd :=range _dccge ._gccff {if _bbggf ,_faaa :=_ggbfd .(*_cee .PdfObjectStreams );
_faaa {_dbebde =true ;for _ ,_ecdad :=range _bbggf .Elements (){_baddf [_ecdad ]=true ;if _gfggaa ,_aaaf :=_ecdad .(*_cee .PdfIndirectObject );_aaaf {_baddf [_gfggaa .PdfObject ]=true ;};};};};return _baddf ,_dbebde ;};func (_gag *PdfReader )newPdfAnnotationCircleFromDict (_gagg *_cee .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dbd :=PdfAnnotationCircle {};
_adcf ,_deeg :=_gag .newPdfAnnotationMarkupFromDict (_gagg );if _deeg !=nil {return nil ,_deeg ;};_dbd .PdfAnnotationMarkup =_adcf ;_dbd .BS =_gagg .Get ("\u0042\u0053");_dbd .IC =_gagg .Get ("\u0049\u0043");_dbd .BE =_gagg .Get ("\u0042\u0045");_dbd .RD =_gagg .Get ("\u0052\u0044");
return &_dbd ,nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_gfcff *PdfReader )GetTrailer ()(*_cee .PdfObjectDictionary ,error ){_cbcd :=_gfcff ._ffdgf .GetTrailer ();if _cbcd ==nil {return nil ,_cdf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cbcd ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_faa *PdfAnnotationFileAttachment )ToPdfObject ()_cee .PdfObject {_faa .PdfAnnotation .ToPdfObject ();_dff :=_faa ._eddc ;_bfcfc :=_dff .PdfObject .(*_cee .PdfObjectDictionary );_faa .PdfAnnotationMarkup .appendToPdfDictionary (_bfcfc );_bfcfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_bfcfc .SetIfNotNil ("\u0046\u0053",_faa .FS );_bfcfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_faa .Name );return _dff ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cee .PdfObject ;IC _cee .PdfObject ;BE _cee .PdfObject ;RD _cee .PdfObject ;};

// Transform rectangle with the supplied matrix.
func (_eabfab *PdfRectangle )Transform (transformMatrix _ac .Matrix ){_eabfab .Llx ,_eabfab .Lly =transformMatrix .Transform (_eabfab .Llx ,_eabfab .Lly );_eabfab .Urx ,_eabfab .Ury =transformMatrix .Transform (_eabfab .Urx ,_eabfab .Ury );_eabfab .Normalize ();
};

// Fill populates `form` with values provided by `provider`.
func (_gbcdg *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gbcdg .fill (provider ,nil )};

// ToPdfObject converts rectangle to a PDF object.
func (_abgfe *PdfRectangle )ToPdfObject ()_cee .PdfObject {return _cee .MakeArray (_cee .MakeFloat (_abgfe .Llx ),_cee .MakeFloat (_abgfe .Lly ),_cee .MakeFloat (_abgfe .Urx ),_cee .MakeFloat (_abgfe .Ury ));};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_ecbd *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=_ecbd .GetNumComponents (){return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccde ,_bbfc :=_cee .GetNumbersAsFloat (objects );
if _bbfc !=nil {return nil ,_bbfc ;};return _ecbd .ColorFromFloats (_ccde );};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cee .PdfObject ;RichMediaContent _cee .PdfObject ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cebg :=&PdfColorspaceLab {};_cebg .BlackPoint =[]float64 {0.0,0.0,0.0};_cebg .Range =[]float64 {-100,100,-100,100};return _cebg ;};func (_adf *PdfReader )loadAction (_afef _cee .PdfObject )(*PdfAction ,error ){if _gbbf ,_cbb :=_cee .GetIndirect (_afef );
_cbb {_ecg ,_ggfd :=_adf .newPdfActionFromIndirectObject (_gbbf );if _ggfd !=nil {return nil ,_ggfd ;};return _ecg ,nil ;}else if !_cee .IsNullObject (_afef ){return nil ,_cdf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_bfggb *ViewerPreferences )IsCenterWindow ()bool {if _bfggb ._gaffg ==nil {return false ;};return *_bfggb ._gaffg ;};func (_cggda *PdfWriter )copyObject (_gcdcb _cee .PdfObject ,_cefba map[_cee .PdfObject ]_cee .PdfObject ,_ddfb map[_cee .PdfObject ]struct{},_fcccg bool )_cee .PdfObject {_acbfc :=!_cggda ._fbaeb &&_ddfb !=nil ;
if _feef ,_fegb :=_cefba [_gcdcb ];_fegb {if _acbfc &&!_fcccg {delete (_ddfb ,_gcdcb );};return _feef ;};if _gcdcb ==nil {_bdgf :=_cee .MakeNull ();return _bdgf ;};_beedee :=_gcdcb ;switch _gfeaca :=_gcdcb .(type ){case *_cee .PdfObjectArray :_fabfa :=_cee .MakeArray ();
_beedee =_fabfa ;_cefba [_gcdcb ]=_beedee ;for _ ,_fcffgg :=range _gfeaca .Elements (){_fabfa .Append (_cggda .copyObject (_fcffgg ,_cefba ,_ddfb ,_fcccg ));};case *_cee .PdfObjectStreams :_dfgfg :=&_cee .PdfObjectStreams {PdfObjectReference :_gfeaca .PdfObjectReference };
_beedee =_dfgfg ;_cefba [_gcdcb ]=_beedee ;for _ ,_eaffad :=range _gfeaca .Elements (){_dfgfg .Append (_cggda .copyObject (_eaffad ,_cefba ,_ddfb ,_fcccg ));};case *_cee .PdfObjectStream :_bcba :=&_cee .PdfObjectStream {Stream :_gfeaca .Stream ,PdfObjectReference :_gfeaca .PdfObjectReference ,Lazy :_gfeaca .Lazy ,TempFile :_gfeaca .TempFile };
_beedee =_bcba ;_cefba [_gcdcb ]=_beedee ;_bcba .PdfObjectDictionary =_cggda .copyObject (_gfeaca .PdfObjectDictionary ,_cefba ,_ddfb ,_fcccg ).(*_cee .PdfObjectDictionary );case *_cee .PdfObjectDictionary :var _cbfge bool ;if _acbfc &&!_fcccg {if _bbbbd ,_ :=_cee .GetNameVal (_gfeaca .Get ("\u0054\u0079\u0070\u0065"));
_bbbbd =="\u0050\u0061\u0067\u0065"{_ ,_bcbdd :=_cggda ._gecd [_gfeaca ];_fcccg =!_bcbdd ;_cbfge =_fcccg ;};};_facgg :=_cee .MakeDict ();_beedee =_facgg ;_cefba [_gcdcb ]=_beedee ;for _ ,_ffbdg :=range _gfeaca .Keys (){_facgg .Set (_ffbdg ,_cggda .copyObject (_gfeaca .Get (_ffbdg ),_cefba ,_ddfb ,_fcccg ));
};if _cbfge {_beedee =_cee .MakeNull ();_fcccg =false ;};case *_cee .PdfIndirectObject :_bceeb :=&_cee .PdfIndirectObject {PdfObjectReference :_gfeaca .PdfObjectReference };_beedee =_bceeb ;_cefba [_gcdcb ]=_beedee ;_bceeb .PdfObject =_cggda .copyObject (_gfeaca .PdfObject ,_cefba ,_ddfb ,_fcccg );
case *_cee .PdfObjectString :_dfeeb :=*_gfeaca ;_beedee =&_dfeeb ;_cefba [_gcdcb ]=_beedee ;case *_cee .PdfObjectName :_geagd :=*_gfeaca ;_beedee =&_geagd ;_cefba [_gcdcb ]=_beedee ;case *_cee .PdfObjectNull :_beedee =_cee .MakeNull ();_cefba [_gcdcb ]=_beedee ;
case *_cee .PdfObjectInteger :_aefbfa :=*_gfeaca ;_beedee =&_aefbfa ;_cefba [_gcdcb ]=_beedee ;case *_cee .PdfObjectReference :_afab :=*_gfeaca ;_beedee =&_afab ;_cefba [_gcdcb ]=_beedee ;case *_cee .PdfObjectFloat :_aaeffe :=*_gfeaca ;_beedee =&_aaeffe ;
_cefba [_gcdcb ]=_beedee ;case *_cee .PdfObjectBool :_agcg :=*_gfeaca ;_beedee =&_agcg ;_cefba [_gcdcb ]=_beedee ;case *pdfSignDictionary :_febdf :=&pdfSignDictionary {PdfObjectDictionary :_cee .MakeDict (),_efde :_gfeaca ._efde ,_dddage :_gfeaca ._dddage };
_beedee =_febdf ;_cefba [_gcdcb ]=_beedee ;for _ ,_bdgb :=range _gfeaca .Keys (){_febdf .Set (_bdgb ,_cggda .copyObject (_gfeaca .Get (_bdgb ),_cefba ,_ddfb ,_fcccg ));};default:_fca .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gcdcb );
};if _acbfc &&_fcccg {_ddfb [_gcdcb ]=struct{}{};};return _beedee ;};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_effd *PdfWriter )SetCatalogViewerPreferences (pref _cee .PdfObject )error {if pref ==nil {_effd ._cdebc .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _cbcca ,_acgfcc :=pref .(*_cee .PdfObjectReference );
_acgfcc {pref =_cbcca .Resolve ();if pref ==nil {_effd ._cdebc .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_effd .addObject (pref );_effd ._cdebc .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};

// GetStandardApplier gets currently used StandardApplier..
func (_fdbfa *PdfWriter )GetStandardApplier ()StandardApplier {return _fdbfa ._bacda };

// ToPdfObject implements interface PdfModel.
func (_cbga *PdfAnnotationPolyLine )ToPdfObject ()_cee .PdfObject {_cbga .PdfAnnotation .ToPdfObject ();_fdga :=_cbga ._eddc ;_efe :=_fdga .PdfObject .(*_cee .PdfObjectDictionary );_cbga .PdfAnnotationMarkup .appendToPdfDictionary (_efe );_efe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_efe .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbga .Vertices );_efe .SetIfNotNil ("\u004c\u0045",_cbga .LE );_efe .SetIfNotNil ("\u0042\u0053",_cbga .BS );_efe .SetIfNotNil ("\u0049\u0043",_cbga .IC );_efe .SetIfNotNil ("\u0042\u0045",_cbga .BE );
_efe .SetIfNotNil ("\u0049\u0054",_cbga .IT );_efe .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbga .Measure );return _fdga ;};func _edddd (_fgfcg _cee .PdfObject )*IDTree {_fgfcg =_cee .ResolveReference (_fgfcg );_gfddcb :=_cee .MakeArray ();
_ececad :=_cee .MakeArray ();_agedd :=[]*IDTree {};if _bfbbf ,_facfa :=_cee .GetDict (_fgfcg );_facfa {if _dggege :=_bfbbf .Get ("\u004e\u0061\u006de\u0073");_dggege !=nil {_dggege =_cee .ResolveReference (_dggege );if _bbfce ,_cbaf :=_cee .GetArray (_dggege );
_cbaf {for _ ,_egacc :=range _bbfce .Elements (){_gfddcb .Append (_egacc );};};};if _fagba :=_bfbbf .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_fagba !=nil {_fagba =_cee .ResolveReference (_fagba );if _gdagf ,_cbdbg :=_cee .GetArray (_fagba );_cbdbg {for _gbbda :=0;
_gbbda < 2;_gbbda ++{_ececad .Append (_gdagf .Get (_gbbda ));};};};if _ffedea :=_bfbbf .Get ("\u004b\u0069\u0064\u0073");_ffedea !=nil {_ffedea =_cee .ResolveReference (_ffedea );if _fdged ,_dggdd :=_cee .GetArray (_ffedea );_dggdd {for _ ,_bcadc :=range _fdged .Elements (){_cdfca :=_edddd (_bcadc );
_agedd =append (_agedd ,_cdfca );};};};};_fadeg :=&IDTree {Names :_gfddcb ,Limits :_ececad };if len (_agedd )> 0{_fadeg .Kids =_agedd ;};return _fadeg ;};type pdfFontType0 struct{fontCommon ;_eddba *_cee .PdfIndirectObject ;_daac _dae .TextEncoder ;Encoding _cee .PdfObject ;
DescendantFont *PdfFont ;_dcffd *_dgg .CMap ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_eeefa ,_agbf :=NewStandard14Font (basefont );if _agbf !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _eeefa ;};

// PrintArea returns the value of the printArea.
func (_dbabea *ViewerPreferences )PrintArea ()PageBoundary {return _dbabea ._eedee };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ffcdg *PdfWriter )AddPage (page *PdfPage )error {const _eeaaa ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_adfebd (page );_gagb :=page .ToPdfObject ();_fca .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fca .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_gagb );_afbba ,_ddfaa :=_cee .GetIndirect (_gagb );if !_ddfaa {return _cdf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fca .Log .Trace ("\u0025\u0073",_afbba );_fca .Log .Trace ("\u0025\u0073",_afbba .PdfObject );_gaeda ,_ddfaa :=_cee .GetDict (_afbba .PdfObject );if !_ddfaa {return _cdf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccgdb ,_ddfaa :=_cee .GetName (_gaeda .Get ("\u0054\u0079\u0070\u0065"));if !_ddfaa {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gaeda .Get ("\u0054\u0079\u0070\u0065"));
};if _ccgdb .String ()!="\u0050\u0061\u0067\u0065"{return _cdf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fcedfg :=[]_cee .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_fagcf ,_affeb :=_cee .GetIndirect (_gaeda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fca .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gaeda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_affeb );
for _affeb {_fca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fagcf );_dgcee ,_eeebg :=_cee .GetDict (_fagcf .PdfObject );if !_eeebg {return _cdf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_gccef :=range _fcedfg {_fca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gccef );if _gaeda .Get (_gccef )!=nil {_fca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _fbfcg :=_dgcee .Get (_gccef );_fbfcg !=nil {_fca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gccef );_gaeda .Set (_gccef ,_fbfcg );};};_fagcf ,_affeb =_cee .GetIndirect (_dgcee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dgcee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_gaeda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffcdg ._cdggg );_afbba .PdfObject =_gaeda ;_cfbfed ,_ddfaa :=_cee .GetDict (_ffcdg ._cdggg .PdfObject );if !_ddfaa {return _cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ceebbg ,_ddfaa :=_cee .GetArray (_cfbfed .Get ("\u004b\u0069\u0064\u0073"));if !_ddfaa {return _cdf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ceebbg .Append (_afbba );_ffcdg ._gecd [_gaeda ]=struct{}{};_ffcdg ._dcdg =append (_ffcdg ._dcdg ,_afbba );_ffgff ,_ddfaa :=_cee .GetInt (_cfbfed .Get ("\u0043\u006f\u0075n\u0074"));if !_ddfaa {return _cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ffgff =*_ffgff +1;if page ._acbbg ==nil {_bcadb :=_ade .Track (_ffcdg ._cbdcf ,_eeaaa ,_ffcdg ._cafaa );if _bcadb !=nil {return _bcadb ;};}else {_egbada :=_ade .Track (page ._acbbg ._cdddg ,_eeaaa ,page ._acbbg ._ddbge );if _egbada !=nil {return _egbada ;
};};_ffcdg .addObject (_afbba );_deff :=_ffcdg .addObjects (_gaeda );if _deff !=nil {return _deff ;};return nil ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_gggca *MultipleFontEncoder )GetRuneMetrics (r rune )(_ce .CharMetrics ,bool ){_bfegdb :=_gggca .CurrentFont ;_ffgg ,_fabac :=_bfegdb .GetRuneMetrics (r );for _feddb :=1;_feddb < len (_gggca ._ecfa )&&_ffgg .Wx ==0;_feddb ++{_bfegdb =_gggca ._ecfa [_feddb ];
_ffgg ,_fabac =_bfegdb .GetRuneMetrics (r );};return _ffgg ,_fabac ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bafcbf *XObjectImage )SetFilter (encoder _cee .StreamEncoder )error {_eegc :=_bafcbf .Stream ;_dggg ,_gggfc :=_bafcbf .Filter .DecodeBytes (_eegc );if _gggfc !=nil {return _gggfc ;};_bafcbf .Filter =encoder ;encoder .UpdateParams (_bafcbf .getParamsDict ());
_eegc ,_gggfc =encoder .EncodeBytes (_dggg );if _gggfc !=nil {return _gggfc ;};_bafcbf .Stream =_eegc ;return nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bbbb :=NewPdfAnnotation ();_cadc :=&PdfAnnotationRichMedia {};_cadc .PdfAnnotation =_bbbb ;_bbbb .SetContext (_cadc );return _cadc ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cee .PdfIndirectObject )*PdfOutlineItem {_gbcff :=PdfOutlineItem {};_gbcff ._afcbg =&_gbcff ;_gbcff .Title =_cee .MakeString (title );_eabfg :=_cee .MakeArray ();_eabfg .Append (page );_eabfg .Append (_cee .MakeName ("\u0046\u0069\u0074"));
_gbcff .Dest =_eabfg ;return &_gbcff ;};func (_ecgfg *PdfReader )traverseObjectData (_gggce _cee .PdfObject )error {return _cee .ResolveReferencesDeep (_gggce ,_ecgfg ._efaec );};

// IsCID returns true if the underlying font is CID.
func (_ffega *PdfFont )IsCID ()bool {return _ffega .baseFields ().isCIDFont ()};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// SetContext sets the sub action (context).
func (_bge *PdfAction )SetContext (ctx PdfModel ){_bge ._afe =ctx };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_afaa *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _afaa .Alternate ==nil {if _afaa .N ==1{_eeef :=NewPdfColorspaceDeviceGray ();return _eeef .ColorFromFloats (vals );}else if _afaa .N ==3{_fdgcb :=NewPdfColorspaceDeviceRGB ();
return _fdgcb .ColorFromFloats (vals );}else if _afaa .N ==4{_dcfg :=NewPdfColorspaceDeviceCMYK ();return _dcfg .ColorFromFloats (vals );}else {return nil ,_cdf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _afaa .Alternate .ColorFromFloats (vals );};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cfeb *PdfWriter )SetPageLabels (pageLabels _cee .PdfObject )error {if pageLabels ==nil {return nil ;};_fca .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_cfeb ._cdebc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cfeb .addObjects (pageLabels );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cdd :=NewPdfAction ();_ffc :=&PdfActionThread {};_ffc .PdfAction =_cdd ;_cdd .SetContext (_ffc );return _ffc ;};

// AddWatermarkImage adds a watermark to the page.
func (_bdeed *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cfagf ,_cffb :=_bdeed .GetMediaBox ();if _cffb !=nil {return _cffb ;};_bbggbc :=_cfagf .Urx -_cfagf .Llx ;_fbefee :=_cfagf .Ury -_cfagf .Lly ;_fbbbe :=float64 (*ximg .Width );
_bdce :=(_bbggbc -_fbbbe )/2;if opt .FitToWidth {_fbbbe =_bbggbc ;_bdce =0;};_addgd :=_fbefee ;_afbbb :=float64 (0);if opt .PreserveAspectRatio {_addgd =_fbbbe *float64 (*ximg .Height )/float64 (*ximg .Width );_afbbb =(_fbefee -_addgd )/2;};if _bdeed .Resources ==nil {_bdeed .Resources =NewPdfPageResources ();
};_agbgc :=0;_abaffd :=_cee .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_agbgc ));for _bdeed .Resources .HasXObjectByName (_abaffd ){_agbgc ++;_abaffd =_cee .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_agbgc ));};_cffb =_bdeed .AddImageResource (_abaffd ,ximg );
if _cffb !=nil {return _cffb ;};_agbgc =0;_egdgf :=_cee .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_agbgc ));for _bdeed .HasExtGState (_egdgf ){_agbgc ++;_egdgf =_cee .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_agbgc ));};_ceega :=_cee .MakeDict ();
_ceega .Set ("\u0042\u004d",_cee .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ceega .Set ("\u0043\u0041",_cee .MakeFloat (opt .Alpha ));_ceega .Set ("\u0063\u0061",_cee .MakeFloat (opt .Alpha ));_cffb =_bdeed .AddExtGState (_egdgf ,_ceega );if _cffb !=nil {return _cffb ;
};_acggd :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_egdgf ,_fbbbe ,_addgd ,_bdce ,_afbbb ,_abaffd );
_bdeed .AddContentStreamByString (_acggd );return nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dfeg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdgcc ,_eebce :=color .(*PdfColorCalRGB );if !_eebce {_fca .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbfb :=_bdgcc .A ();_dagff :=_bdgcc .B ();_fdbga :=_bdgcc .C ();X :=_dfeg .Matrix [0]*_aaa .Pow (_fbfb ,_dfeg .Gamma [0])+_dfeg .Matrix [3]*_aaa .Pow (_dagff ,_dfeg .Gamma [1])+_dfeg .Matrix [6]*_aaa .Pow (_fdbga ,_dfeg .Gamma [2]);
Y :=_dfeg .Matrix [1]*_aaa .Pow (_fbfb ,_dfeg .Gamma [0])+_dfeg .Matrix [4]*_aaa .Pow (_dagff ,_dfeg .Gamma [1])+_dfeg .Matrix [7]*_aaa .Pow (_fdbga ,_dfeg .Gamma [2]);Z :=_dfeg .Matrix [2]*_aaa .Pow (_fbfb ,_dfeg .Gamma [0])+_dfeg .Matrix [5]*_aaa .Pow (_dagff ,_dfeg .Gamma [1])+_dfeg .Matrix [8]*_aaa .Pow (_fdbga ,_dfeg .Gamma [2]);
_fbde :=3.240479*X +-1.537150*Y +-0.498535*Z ;_afcfa :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_fbde =_aaa .Min (_aaa .Max (_fbde ,0),1.0);_afcfa =_aaa .Min (_aaa .Max (_afcfa ,0),1.0);_bcdb =_aaa .Min (_aaa .Max (_bcdb ,0),1.0);
return NewPdfColorDeviceRGB (_fbde ,_afcfa ,_bcdb ),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_edbb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bgec *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bgec .baseFields ()._ebcad !=nil {return _bgec .baseFields ()._ebcad ;};if _eagdc :=_bgec ._bggcf .getFontDescriptor ();_eagdc !=nil {return _eagdc ;};_fca .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bgec );
return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dfdcc *PdfColorspaceLab )GetNumComponents ()int {return 3};

// AddImageResource adds an image to the XObject resources.
func (_cgfdg *PdfPage )AddImageResource (name _cee .PdfObjectName ,ximg *XObjectImage )error {var _abffe *_cee .PdfObjectDictionary ;if _cgfdg .Resources .XObject ==nil {_abffe =_cee .MakeDict ();_cgfdg .Resources .XObject =_abffe ;}else {var _bfede bool ;
_abffe ,_bfede =(_cgfdg .Resources .XObject ).(*_cee .PdfObjectDictionary );if !_bfede {return _cdf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_abffe .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gbgge ,_faef :=_af .ParsePdfTime (dateStr );if _faef !=nil {return PdfDate {},_faef ;};return NewPdfDateFromTime (_gbgge );};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_edgfe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cee .PdfObject {_fabfg :=_cee .MakeDict ();if _edgfe .Subtype !=nil {_fabfg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_edgfe .Subtype );};_fabfg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_edgfe .Colorants );
_fabfg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_edgfe .Process );_fabfg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_edgfe .MixingHints );if _edgfe ._gedbb !=nil {_edgfe ._gedbb .PdfObject =_fabfg ;return _edgfe ._gedbb ;
};return _fabfg ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gdgc ,_acee :=_fef .Open (filePath );if _acee !=nil {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_acee );
return nil ,_acee ;};defer _gdgc .Close ();return NewCompositePdfFontFromTTF (_gdgc );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bgfdf *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbbd ,_cabg :=_cee .GetNumbersAsFloat (objects );
if _cabg !=nil {return nil ,_cabg ;};return _bgfdf .ColorFromFloats (_bbbd );};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_adcg :=&PdfAppender {_dege :reader ._cadbb ,Reader :reader ,_cbdb :reader ._ffdgf ,_gabb :reader ._efaec };_ddec ,_bca :=_adcg ._dege .Seek (0,_fc .SeekEnd );if _bca !=nil {return nil ,_bca ;
};_adcg ._gbcc =_ddec ;if _ ,_bca =_adcg ._dege .Seek (0,_fc .SeekStart );_bca !=nil {return nil ,_bca ;};_adcg ._ebdd ,_bca =NewPdfReader (_adcg ._dege );if _bca !=nil {return nil ,_bca ;};for _ ,_cdcd :=range _adcg .Reader .GetObjectNums (){if _adcg ._cdbef < _cdcd {_adcg ._cdbef =_cdcd ;
};};_adcg ._beg =_adcg ._cbdb .GetXrefTable ();_adcg ._aaf =_adcg ._cbdb .GetXrefOffset ();_adcg ._afca =append (_adcg ._afca ,_adcg ._ebdd .PageList ...);_adcg ._efdc =make (map[_cee .PdfObject ]struct{});_adcg ._edae =make (map[_cee .PdfObject ]int64 );
_adcg ._abda =make (map[_cee .PdfObject ]struct{});_adcg ._ceed =_adcg ._ebdd .AcroForm ;_adcg ._ccee =_adcg ._ebdd .DSS ;return _adcg ,nil ;};var (CourierName =_ce .CourierName ;CourierBoldName =_ce .CourierBoldName ;CourierObliqueName =_ce .CourierObliqueName ;
CourierBoldObliqueName =_ce .CourierBoldObliqueName ;HelveticaName =_ce .HelveticaName ;HelveticaBoldName =_ce .HelveticaBoldName ;HelveticaObliqueName =_ce .HelveticaObliqueName ;HelveticaBoldObliqueName =_ce .HelveticaBoldObliqueName ;SymbolName =_ce .SymbolName ;
ZapfDingbatsName =_ce .ZapfDingbatsName ;TimesRomanName =_ce .TimesRomanName ;TimesBoldName =_ce .TimesBoldName ;TimesItalicName =_ce .TimesItalicName ;TimesBoldItalicName =_ce .TimesBoldItalicName ;);func (_aeag *PdfReader )newPdfAnnotationStampFromDict (_eeed *_cee .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_gcfg :=PdfAnnotationStamp {};
_ecea ,_bcb :=_aeag .newPdfAnnotationMarkupFromDict (_eeed );if _bcb !=nil {return nil ,_bcb ;};_gcfg .PdfAnnotationMarkup =_ecea ;_gcfg .Name =_eeed .Get ("\u004e\u0061\u006d\u0065");return &_gcfg ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_gaca *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_gage :=map[*PdfAnnotation ]bool {};_eage ,_gfdd :=_gaca .GetAnnotations ();if _gfdd !=nil {return _gfdd ;};_dbgg :=false ;for _ ,_faae :=range _eage {if opts .AnnotFilterFunc !=nil {_gage [_faae ]=opts .AnnotFilterFunc (_faae );
}else {_gage [_faae ]=true ;};if _gage [_faae ]{_dbgg =true ;};};if !_dbgg {return nil ;};return _gaca .flattenFieldsWithOpts (appgen ,opts ,_gage );};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_fgde *PdfPageResources )HasShadingByName (keyName _cee .PdfObjectName )bool {_ ,_beacg :=_fgde .GetShadingByName (keyName );return _beacg ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cee .PdfObjectArray ;Domain *_cee .PdfObjectArray ;Function []PdfFunction ;Extend *_cee .PdfObjectArray ;};

// ToPdfObject returns the PDF representation of the function.
func (_cgcca *PdfFunctionType3 )ToPdfObject ()_cee .PdfObject {_aeecf :=_cee .MakeDict ();_aeecf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cee .MakeInteger (3));_fbgeb :=&_cee .PdfObjectArray {};for _ ,_dffbc :=range _cgcca .Domain {_fbgeb .Append (_cee .MakeFloat (_dffbc ));
};_aeecf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbgeb );if _cgcca .Range !=nil {_gdgcb :=&_cee .PdfObjectArray {};for _ ,_cabad :=range _cgcca .Range {_gdgcb .Append (_cee .MakeFloat (_cabad ));};_aeecf .Set ("\u0052\u0061\u006eg\u0065",_gdgcb );
};if _cgcca .Functions !=nil {_agfdg :=&_cee .PdfObjectArray {};for _ ,_cacef :=range _cgcca .Functions {_agfdg .Append (_cacef .ToPdfObject ());};_aeecf .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_agfdg );};if _cgcca .Bounds !=nil {_bgdgb :=&_cee .PdfObjectArray {};
for _ ,_cdfgf :=range _cgcca .Bounds {_bgdgb .Append (_cee .MakeFloat (_cdfgf ));};_aeecf .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_bgdgb );};if _cgcca .Encode !=nil {_badd :=&_cee .PdfObjectArray {};for _ ,_dcged :=range _cgcca .Encode {_badd .Append (_cee .MakeFloat (_dcged ));
};_aeecf .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_badd );};if _cgcca ._ebff !=nil {_cgcca ._ebff .PdfObject =_aeecf ;return _cgcca ._ebff ;};return _aeecf ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_dece :=NewPdfAnnotation ();_aecg :=&PdfAnnotationFreeText {};_aecg .PdfAnnotation =_dece ;_aecg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dece .SetContext (_aecg );return _aecg ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ebgf *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cee .GetNumberAsFloat (_ebgf .Descent );};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cfaef *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_abff :=&PdfColorPattern {};_cbge ,_bfad :=objects [len (objects )-1].(*_cee .PdfObjectName );if !_bfad {_fca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_abff .PatternName =*_cbge ;if len (objects )> 1{_cggef :=objects [0:len (objects )-1];if _cfaef .UnderlyingCS ==nil {_fca .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cdf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fgag ,_daag :=_cfaef .UnderlyingCS .ColorFromPdfObjects (_cggef );if _daag !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_daag );
return nil ,_daag ;};_abff .Color =_fgag ;};return _abff ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ggcb ,_fgef :=_ce .NewStdFontByName (HelveticaName );if !_fgef {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ddbfe :=_ebdab (_ggcb );return &PdfFont {_bggcf :&_ddbfe };};func _deeea ()string {_dggagg .Lock ();defer _dggagg .Unlock ();return _bcfcc };func _gbbc (_gcbd *_cee .PdfObjectDictionary )(*PdfFieldChoice ,error ){_faba :=&PdfFieldChoice {};_faba .Opt ,_ =_cee .GetArray (_gcbd .Get ("\u004f\u0070\u0074"));
_faba .TI ,_ =_cee .GetInt (_gcbd .Get ("\u0054\u0049"));_faba .I ,_ =_cee .GetArray (_gcbd .Get ("\u0049"));return _faba ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cfbg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cee .GetNumberAsFloat (_cfbg .CapHeight );};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_gafec *ViewerPreferences )IsHideMenubar ()bool {if _gafec ._fcbcb ==nil {return false ;};return *_gafec ._fcbcb ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cee .PdfObjectDictionary )(*PdfPageResources ,error ){_bcecf :=NewPdfPageResources ();if _gccf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gccf !=nil {_bcecf .ExtGState =_gccf ;};if _babgg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_babgg !=nil &&!_cee .IsNullObject (_babgg ){_bcecf .ColorSpace =_babgg ;};if _dbccf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_dbccf !=nil {_bcecf .Pattern =_dbccf ;};if _ggeaa :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ggeaa !=nil {_bcecf .Shading =_ggeaa ;
};if _bggcd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bggcd !=nil {_bcecf .XObject =_bggcd ;};if _adcbc :=_cee .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_adcbc !=nil {_bcecf .Font =_adcbc ;};if _bcfb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_bcfb !=nil {_bcecf .ProcSet =_bcfb ;};if _dbfed :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbfed !=nil {_bcecf .Properties =_dbfed ;};return _bcecf ,nil ;};func _bafda (_egcbf *XObjectForm )(*PdfRectangle ,bool ,error ){if _ebcd ,_faed :=_egcbf .BBox .(*_cee .PdfObjectArray );
_faed {_cfbb ,_cdafe :=NewPdfRectangle (*_ebcd );if _cdafe !=nil {return nil ,false ,_cdafe ;};if _aedfe ,_ebfe :=_egcbf .Matrix .(*_cee .PdfObjectArray );_ebfe {_fgaeg ,_bcfec :=_aedfe .ToFloat64Array ();if _bcfec !=nil {return nil ,false ,_bcfec ;};_fgbfa :=_ac .IdentityMatrix ();
if len (_fgaeg )==6{_fgbfa =_ac .NewMatrix (_fgaeg [0],_fgaeg [1],_fgaeg [2],_fgaeg [3],_fgaeg [4],_fgaeg [5]);};_cfbb .Transform (_fgbfa );return _cfbb ,true ,nil ;};return _cfbb ,false ,nil ;};return nil ,false ,_cdf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";
NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";
PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";
PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";
DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ecef *PdfFieldButton )IsRadio ()bool {return _ecef .GetType ()==ButtonTypeRadio };func (_dfaaa *PdfFont )baseFields ()*fontCommon {if _dfaaa ._bggcf ==nil {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dfaaa ._bggcf .baseFields ();};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bbae :=&PdfColorspaceDeviceN {};return _bbae };func (_bgfd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// WriteToFile writes the output PDF to file.
func (_egfdfa *PdfWriter )WriteToFile (outputFilePath string )error {_cdfcf ,_fgdgf :=_fef .Create (outputFilePath );if _fgdgf !=nil {return _fgdgf ;};defer _cdfcf .Close ();return _egfdfa .Write (_cdfcf );};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dbbgg *PdfPage )ToPdfObject ()_cee .PdfObject {_dcdd :=_dbbgg ._bafab ;_dbbgg .GetPageDict ();return _dcdd ;};func (_bfgg *PdfSignature )extractChainFromCert ()([]*_dfd .Certificate ,error ){var _dcbdc *_cee .PdfObjectArray ;switch _agad :=_bfgg .Cert .(type ){case *_cee .PdfObjectString :_dcbdc =_cee .MakeArray (_agad );
case *_cee .PdfObjectArray :_dcbdc =_agad ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_agad );
};var _cgefe _cd .Buffer ;for _ ,_fgff :=range _dcbdc .Elements (){_fdada ,_ebgbg :=_cee .GetString (_fgff );if !_ebgbg {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fgff );
};if _ ,_caagg :=_cgefe .Write (_fdada .Bytes ());_caagg !=nil {return nil ,_caagg ;};};return _dfd .ParseCertificates (_cgefe .Bytes ());};type modelManager struct{_gfdc map[PdfModel ]_cee .PdfObject ;_gdbbg map[_cee .PdfObject ]PdfModel ;};func _ggad (_cdeg _cee .PdfObject )(*PdfFontDescriptor ,error ){_gdag :=&PdfFontDescriptor {};
_cdeg =_cee .ResolveReference (_cdeg );if _acbbd ,_ggfg :=_cdeg .(*_cee .PdfIndirectObject );_ggfg {_gdag ._gbfec =_acbbd ;_cdeg =_acbbd .PdfObject ;};_cfaf ,_eaffd :=_cee .GetDict (_cdeg );if !_eaffd {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdeg );
return nil ,_cee .ErrTypeError ;};if _eaaf :=_cfaf .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eaaf !=nil {_gdag .FontName =_eaaf ;}else {_fca .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_dedcf ,_ :=_cee .GetName (_gdag .FontName );if _ffbbe :=_cfaf .Get ("\u0054\u0079\u0070\u0065");_ffbbe !=nil {_fbfbg ,_fgafd :=_ffbbe .(*_cee .PdfObjectName );if !_fgafd ||string (*_fbfbg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ffbbe ,_dedcf ,_gdag .FontName );
};}else {_fca .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dedcf ,_gdag .FontName );
};_gdag .FontFamily =_cfaf .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gdag .FontStretch =_cfaf .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gdag .FontWeight =_cfaf .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gdag .Flags =_cfaf .Get ("\u0046\u006c\u0061g\u0073");_gdag .FontBBox =_cfaf .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gdag .ItalicAngle =_cfaf .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gdag .Ascent =_cfaf .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gdag .Descent =_cfaf .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gdag .Leading =_cfaf .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gdag .CapHeight =_cfaf .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gdag .XHeight =_cfaf .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gdag .StemV =_cfaf .Get ("\u0053\u0074\u0065m\u0056");_gdag .StemH =_cfaf .Get ("\u0053\u0074\u0065m\u0048");_gdag .AvgWidth =_cfaf .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gdag .MaxWidth =_cfaf .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gdag .MissingWidth =_cfaf .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gdag .FontFile =_cfaf .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gdag .FontFile2 =_cfaf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gdag .FontFile3 =_cfaf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gdag .CharSet =_cfaf .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gdag .Style =_cfaf .Get ("\u0053\u0074\u0079l\u0065");_gdag .Lang =_cfaf .Get ("\u004c\u0061\u006e\u0067");
_gdag .FD =_cfaf .Get ("\u0046\u0044");_gdag .CIDSet =_cfaf .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gdag .Flags !=nil {if _cgggc ,_ggfdg :=_cee .GetIntVal (_gdag .Flags );_ggfdg {_gdag ._cadgge =_cgggc ;};};if _gdag .MissingWidth !=nil {if _gdagb ,_fbebab :=_cee .GetNumberAsFloat (_gdag .MissingWidth );
_fbebab ==nil {_gdag ._efacg =_gdagb ;};};if _gdag .FontFile !=nil {_becf ,_cbde :=_dbead (_gdag .FontFile );if _cbde !=nil {return _gdag ,_cbde ;};_fca .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_becf );_gdag .fontFile =_becf ;
};if _gdag .FontFile2 !=nil {_bcgdb ,_agdc :=_ce .NewFontFile2FromPdfObject (_gdag .FontFile2 );if _agdc !=nil {return _gdag ,_agdc ;};_fca .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_bcgdb .String ());_gdag ._bcga =&_bcgdb ;
};return _gdag ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_addgf *PdfFont )CharcodesToUnicode (charcodes []_dae .CharCode )[]rune {_dcea ,_ ,_ :=_addgf .CharcodesToUnicodeWithStats (charcodes );return _dcea ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cee .PdfObject ;BS _cee .PdfObject ;};func (_cda *PdfReader )newPdfActionMovieFromDict (_abc *_cee .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_abc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_abc .Get ("\u0054"),Operation :_abc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_fga *PdfReader )newPdfActionRenditionFromDict (_fdg *_cee .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fdg .Get ("\u0052"),AN :_fdg .Get ("\u0041\u004e"),OP :_fdg .Get ("\u004f\u0050"),JS :_fdg .Get ("\u004a\u0053")},nil ;
};

// GetCustomInfo returns a custom info value for the specified name.
func (_egca *PdfInfo )GetCustomInfo (name string )*_cee .PdfObjectString {var _ddg *_cee .PdfObjectString ;if _egca ._ecfea ==nil {return _ddg ;};if _bega ,_ageeb :=_egca ._ecfea .Get (*_cee .MakeName (name )).(*_cee .PdfObjectString );_ageeb {_ddg =_bega ;
};return _ddg ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_fggag *_cee .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_cee .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_cee .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_cee .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_cee .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_cee .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_cee .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_cee .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_cee .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_cee .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_cee .PdfObjectDictionary ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cebbd :_cee .MakeIndirectObject (_cee .MakeDict ())};};func _ceafg (_fadab *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fadab }};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cee .PdfObject ;};func (_begfe *PdfReader )newPdfOutlineItemFromIndirectObject (_ccbbe *_cee .PdfIndirectObject )(*PdfOutlineItem ,error ){_fgabe ,_fecaa :=_ccbbe .PdfObject .(*_cee .PdfObjectDictionary );if !_fecaa {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bafg :=NewPdfOutlineItem ();_gfcad :=_fgabe .Get ("\u0054\u0069\u0074l\u0065");if _gfcad ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_bcgab ,_bbeda :=_cee .GetString (_gfcad );if !_bbeda {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gfcad );};_bafg .Title =_bcgab ;if _cegde :=_fgabe .Get ("\u0043\u006f\u0075n\u0074");
_cegde !=nil {_dgca ,_egcbe :=_cegde .(*_cee .PdfObjectInteger );if !_egcbe {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cegde );};_dcgeac :=int64 (*_dgca );
_bafg .Count =&_dcgeac ;};if _ebagc :=_fgabe .Get ("\u0044\u0065\u0073\u0074");_ebagc !=nil {_bafg .Dest =_cee .ResolveReference (_ebagc );if !_begfe ._dbfb {_gbdf :=_begfe .traverseObjectData (_bafg .Dest );if _gbdf !=nil {return nil ,_gbdf ;};};};if _gcffe :=_fgabe .Get ("\u0041");
_gcffe !=nil {_bafg .A =_cee .ResolveReference (_gcffe );if !_begfe ._dbfb {_cccfd :=_begfe .traverseObjectData (_bafg .A );if _cccfd !=nil {return nil ,_cccfd ;};};};if _bgbga :=_fgabe .Get ("\u0053\u0045");_bgbga !=nil {_bafg .SE =nil ;};if _gbdfd :=_fgabe .Get ("\u0043");
_gbdfd !=nil {_bafg .C =_cee .ResolveReference (_gbdfd );};if _bfegb :=_fgabe .Get ("\u0046");_bfegb !=nil {_bafg .F =_cee .ResolveReference (_bfegb );};return _bafg ,nil ;};var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";
StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";
StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";
StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";StructureTypeForm ="\u0046\u006f\u0072\u006d";
);func _gcbce (_fadcg []byte )[]byte {const _fbca =52845;const _fgaab =22719;_dcgea :=55665;for _ ,_aagee :=range _fadcg [:4]{_dcgea =(int (_aagee )+_dcgea )*_fbca +_fgaab ;};_gdbee :=make ([]byte ,len (_fadcg )-4);for _cgadf ,_dfcg :=range _fadcg [4:]{_gdbee [_cgadf ]=byte (int (_dfcg )^_dcgea >>8);
_dcgea =(int (_dfcg )+_dcgea )*_fbca +_fgaab ;};return _gdbee ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bffg *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bffg .Base .GetNumComponents ();_ccea :=int (vals [0])*N ;
if _ccea < 0||(_ccea +N -1)>=len (_bffg ._aecec ){_fca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ccea );return nil ,ErrColorOutOfRange ;};_gbfac :=_bffg ._aecec [_ccea :_ccea +N ];
var _ebbe []float64 ;for _ ,_dbcg :=range _gbfac {_ebbe =append (_ebbe ,float64 (_dbcg )/255.0);};_geda ,_deecc :=_bffg .Base .ColorFromFloats (_ebbe );if _deecc !=nil {return nil ,_deecc ;};return _geda ,nil ;};

// GetKDict returns the KDict of the KValue.
func (_fecc *KValue )GetKDict ()*KDict {return _fecc ._aedde };func _baaedg ()*modelManager {_cacgf :=modelManager {};_cacgf ._gfdc =map[PdfModel ]_cee .PdfObject {};_cacgf ._gdbbg =map[_cee .PdfObject ]PdfModel {};return &_cacgf ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ParsePdfObject parses input pdf object into given output intent.
func (_fdaf *PdfOutputIntent )ParsePdfObject (object _cee .PdfObject )error {_gfbb ,_agce :=_cee .GetDict (object );if !_agce {_fca .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cdf .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fdaf ._eebee =_gfbb ;_fdaf .Type ,_ =_gfbb .GetString ("\u0054\u0079\u0070\u0065");_eeba ,_agce :=_gfbb .GetString ("\u0053");if _agce {switch _eeba {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fdaf .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fdaf .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fdaf .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fdaf .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fdaf .S =PdfOutputIntentTypeX ;
};};_fdaf .OutputCondition ,_ =_gfbb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fdaf .OutputConditionIdentifier ,_ =_gfbb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fdaf .RegistryName ,_ =_gfbb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fdaf .Info ,_ =_gfbb .GetString ("\u0049\u006e\u0066\u006f");if _cgcfg ,_gegdc :=_cee .GetStream (_gfbb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_gegdc {_fdaf .ColorComponents ,_ =_cee .GetIntVal (_cgcfg .Get ("\u004e"));_bfcae ,_egbe :=_cee .DecodeStream (_cgcfg );if _egbe !=nil {return _egbe ;};_fdaf .DestOutputProfile =_bfcae ;};return nil ;};func (_ffea *Image )getSuitableEncoder ()(_cee .StreamEncoder ,error ){var (_ebbgc ,_cafeb =int (_ffea .Width ),int (_ffea .Height );
_cbbe =make (map[string ]bool );_afadc =true ;_dfdgf =false ;_fgeee =func ()*_cee .DCTEncoder {return _cee .NewDCTEncoder ()};_gbad =func ()*_cee .DCTEncoder {_ffae :=_cee .NewDCTEncoder ();_ffae .BitsPerComponent =16;return _ffae };);for _efea :=0;_efea < _cafeb ;
_efea ++{for _egac :=0;_egac < _ebbgc ;_egac ++{_eecb ,_abgag :=_ffea .ColorAt (_egac ,_efea );if _abgag !=nil {return nil ,_abgag ;};_bafa ,_aacfg ,_eccac ,_ggde :=_eecb .RGBA ();if _afadc &&(_bafa !=_aacfg ||_bafa !=_eccac ||_aacfg !=_eccac ){_afadc =false ;
};if !_dfdgf {switch _eecb .(type ){case _f .NRGBA :_dfdgf =_ggde > 0;};};_cbbe [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_bafa ,_aacfg ,_eccac )]=true ;if len (_cbbe )> 2&&_dfdgf {return _gbad (),nil ;};};};if _dfdgf ||len (_ffea ._cbfg )> 0{return _cee .NewFlateEncoder (),nil ;
};if len (_cbbe )<=2{_cdagg :=_ffea .ConvertToBinary ();if _cdagg !=nil {return nil ,_cdagg ;};return _cee .NewJBIG2Encoder (),nil ;};if _afadc {return _fgeee (),nil ;};if _ffea .ColorComponents ==1{if _ffea .BitsPerComponent ==1{return _cee .NewJBIG2Encoder (),nil ;
}else if _ffea .BitsPerComponent ==8{_fbfeb :=_cee .NewDCTEncoder ();_fbfeb .ColorComponents =1;return _fbfeb ,nil ;};}else if _ffea .ColorComponents ==3{if _ffea .BitsPerComponent ==8{return _fgeee (),nil ;}else if _ffea .BitsPerComponent ==16{return _gbad (),nil ;
};}else if _ffea .ColorComponents ==4{_bafae :=_gbad ();_bafae .ColorComponents =4;return _bafae ,nil ;};return _gbad (),nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetVersion gets the document version.
func (_fgcef *PdfWriter )GetVersion ()_cee .Version {return _fgcef ._gceef };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_afbg *_cee .PdfIndirectObject ;};var _ pdfFont =(*pdfFontType3 )(nil );

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_cbcf *PdfFunctionType0 )processSamples ()error {_decfc :=_ag .ResampleBytes (_cbcf ._bbdc ,_cbcf .BitsPerSample );_cbcf ._efcg =_decfc ;return nil ;};

// String implements interface PdfObject.
func (_ab *PdfAction )String ()string {_gb ,_dag :=_ab .ToPdfObject ().(*_cee .PdfIndirectObject );if _dag {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ab ._afe ,_gb .PdfObject .String ());};return "";};var (_adcc =_bgc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_bgfgf =_bgc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_fcbea =_bgc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cgbec ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_edecc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_fcgce ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// R returns the value of the red component of the color.
func (_bafd *PdfColorDeviceRGB )R ()float64 {return _bafd [0]};

// SetAnnotations sets the annotations list.
func (_efagd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_efagd ._eeaba =annotations };func (_ggaf *PdfWriter )writeObjectsInStreams (_bfdde map[_cee .PdfObject ]bool )error {for _ ,_edeeb :=range _ggaf ._gccff {if _bdfag :=_bfdde [_edeeb ];
_bdfag {continue ;};_ebbff :=int64 (0);switch _ggebgf :=_edeeb .(type ){case *_cee .PdfIndirectObject :_ebbff =_ggebgf .ObjectNumber ;case *_cee .PdfObjectStream :_ebbff =_ggebgf .ObjectNumber ;case *_cee .PdfObjectStreams :_ebbff =_ggebgf .ObjectNumber ;
case *_cee .PdfObjectDictionary ,*_cee .PdfObjectString :default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_edeeb ,_ggebgf );
return ErrTypeCheck ;};if _ggaf ._ddafb !=nil &&_edeeb !=_ggaf ._bbfag {_bafga :=_ggaf ._ddafb .Encrypt (_edeeb ,_ebbff ,0);if _bafga !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bafga );
return _bafga ;};};_ggaf .writeObject (int (_ebbff ),_edeeb );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_abaa *PdfAnnotationTrapNet )ToPdfObject ()_cee .PdfObject {_abaa .PdfAnnotation .ToPdfObject ();_gdc :=_abaa ._eddc ;_cfaa :=_gdc .PdfObject .(*_cee .PdfObjectDictionary );_cfaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gdc ;};func (_abge *PdfWriter )makeOffSetReference (_dgcde int64 ){_facgd :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dgcde );_abge .writeString (_facgd );_abge .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};func _aeafc (_cgaeg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cgaeg }};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bddbdg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bddbdg .RunesToCharcodeBytes ([]rune (str ));};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bddfg *BorderStyle )GetPdfName ()string {switch *_bddfg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfObject implements interface PdfModel.
func (_dagb *PdfAnnotationSound )ToPdfObject ()_cee .PdfObject {_dagb .PdfAnnotation .ToPdfObject ();_agbe :=_dagb ._eddc ;_gfbf :=_agbe .PdfObject .(*_cee .PdfObjectDictionary );_dagb .PdfAnnotationMarkup .appendToPdfDictionary (_gfbf );_gfbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053\u006f\u0075n\u0064"));
_gfbf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dagb .Sound );_gfbf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dagb .Name );return _agbe ;};func (_ddae *PdfWriter )setDocumentIDs (_fffac ,_daad string ){_ddae ._aeffd =_cee .MakeArray (_cee .MakeHexString (_fffac ),_cee .MakeHexString (_daad ));
};func (_dbage *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_eeaga *PdfReader )newPdfAcroFormFromDict (_abga *_cee .PdfIndirectObject ,_eadb *_cee .PdfObjectDictionary )(*PdfAcroForm ,error ){_dgcgf :=NewPdfAcroForm ();
if _abga !=nil {_dgcgf ._cebbd =_abga ;_abga .PdfObject =_cee .MakeDict ();};if _bbee :=_eadb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_bbee !=nil &&!_cee .IsNullObject (_bbee ){_efddc ,_bbfa :=_cee .GetArray (_bbee );if !_bbfa {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bbee );
};var _bdfc []*PdfField ;for _ ,_daacg :=range _efddc .Elements (){_bdfaf ,_cddfd :=_cee .GetIndirect (_daacg );if !_cddfd {if _ ,_gdbb :=_daacg .(*_cee .PdfObjectNull );_gdbb {_fca .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fca .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_daacg );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aefgg ,_egeab :=_eeaga .newPdfFieldFromIndirectObject (_bdfaf ,nil );
if _egeab !=nil {return nil ,_egeab ;};_fca .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_aefgg );_bdfc =append (_bdfc ,_aefgg );};_dgcgf .Fields =&_bdfc ;};if _dgfc :=_eadb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dgfc !=nil {_ceedc ,_bbeec :=_cee .GetBool (_dgfc );if _bbeec {_dgcgf .NeedAppearances =_ceedc ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dgfc );
};};if _ebfb :=_eadb .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ebfb !=nil {_gfga ,_gbcf :=_cee .GetInt (_ebfb );if _gbcf {_dgcgf .SigFlags =_gfga ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebfb );
};};if _dbddc :=_eadb .Get ("\u0043\u004f");_dbddc !=nil {_cedea ,_cfec :=_cee .GetArray (_dbddc );if _cfec {_dgcgf .CO =_cedea ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dbddc );
};};if _gafed :=_eadb .Get ("\u0044\u0052");_gafed !=nil {if _fagg ,_dagba :=_cee .GetDict (_gafed );_dagba {_gafaf ,_ggcdae :=NewPdfPageResourcesFromDict (_fagg );if _ggcdae !=nil {_fca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ggcdae );
return nil ,_ggcdae ;};_dgcgf .DR =_gafaf ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gafed );};};if _fgeg :=_eadb .Get ("\u0044\u0041");
_fgeg !=nil {_gadf ,_bdcabc :=_cee .GetString (_fgeg );if _bdcabc {_dgcgf .DA =_gadf ;}else {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fgeg );
};};if _fbcc :=_eadb .Get ("\u0051");_fbcc !=nil {_gdccb ,_bbcad :=_cee .GetInt (_fbcc );if _bbcad {_dgcgf .Q =_gdccb ;}else {_fca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbcc );
};};if _fcadg :=_eadb .Get ("\u0058\u0046\u0041");_fcadg !=nil {_dgcgf .XFA =_fcadg ;};if _bddee :=_eadb .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_bddee !=nil {_dgcgf .ADBEEchoSign =_bddee ;};_dgcgf .ToPdfObject ();
return _dgcgf ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cee .PdfObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dege _fc .ReadSeeker ;_cbdb *_cee .PdfParser ;_ebdd *PdfReader ;Reader *PdfReader ;_afca []*PdfPage ;_ceed *PdfAcroForm ;_ccee *DSS ;_dbec *Permissions ;_beg _cee .XrefTable ;_aaf int64 ;_cdbef int ;_eccb []_cee .PdfObject ;_efdc map[_cee .PdfObject ]struct{};
_edae map[_cee .PdfObject ]int64 ;_abda map[_cee .PdfObject ]struct{};_gabb map[_cee .PdfObject ]struct{};_gbcc int64 ;_ccd bool ;_cbac string ;_beb *EncryptOptions ;_eafc *PdfInfo ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fagbc *PdfShadingType6 )ToPdfObject ()_cee .PdfObject {_fagbc .PdfShading .ToPdfObject ();_afgaa ,_fcfg :=_fagbc .getShadingDict ();if _fcfg !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fagbc .BitsPerCoordinate !=nil {_afgaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fagbc .BitsPerCoordinate );};if _fagbc .BitsPerComponent !=nil {_afgaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fagbc .BitsPerComponent );
};if _fagbc .BitsPerFlag !=nil {_afgaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fagbc .BitsPerFlag );};if _fagbc .Decode !=nil {_afgaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fagbc .Decode );};if _fagbc .Function !=nil {if len (_fagbc .Function )==1{_afgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fagbc .Function [0].ToPdfObject ());
}else {_fbffg :=_cee .MakeArray ();for _ ,_fddg :=range _fagbc .Function {_fbffg .Append (_fddg .ToPdfObject ());};_afgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbffg );};};return _fagbc ._dfgbe ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gcdd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cee .GetNumberAsFloat (_gcdd .Ascent );};func (_ggea *PdfReader )newPdfAnnotationPopupFromDict (_bagb *_cee .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_befd :=PdfAnnotationPopup {};
_befd .Parent =_bagb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_befd .Open =_bagb .Get ("\u004f\u0070\u0065\u006e");return &_befd ,nil ;};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_aedde *KDict ;_abcfb _cee .PdfObject ;_dfcf *int ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_fccafg *PdfSignature ,_cbbac Hasher ,_gdfgc SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ccdg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cee .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_adce []_cee .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_edge []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetBorderWidth returns the border style's width.
func (_gdcg *PdfBorderStyle )GetBorderWidth ()float64 {if _gdcg .W ==nil {return 1;};return *_gdcg .W ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_agedg int ,_eagbe *PdfPage )error ;

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_dccca *PdfOutlineTreeNode )GetContainingPdfObject ()_cee .PdfObject {return _dccca .GetContext ().GetContainingPdfObject ();};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_cebc *PdfColorspaceCalGray )ToPdfObject ()_cee .PdfObject {_cged :=&_cee .PdfObjectArray {};_cged .Append (_cee .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_dcac :=_cee .MakeDict ();if _cebc .WhitePoint !=nil {_dcac .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cee .MakeArray (_cee .MakeFloat (_cebc .WhitePoint [0]),_cee .MakeFloat (_cebc .WhitePoint [1]),_cee .MakeFloat (_cebc .WhitePoint [2])));
}else {_fca .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _cebc .BlackPoint !=nil {_dcac .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cee .MakeArray (_cee .MakeFloat (_cebc .BlackPoint [0]),_cee .MakeFloat (_cebc .BlackPoint [1]),_cee .MakeFloat (_cebc .BlackPoint [2])));
};_dcac .Set ("\u0047\u0061\u006dm\u0061",_cee .MakeFloat (_cebc .Gamma ));_cged .Append (_dcac );if _cebc ._afbg !=nil {_cebc ._afbg .PdfObject =_cged ;return _cebc ._afbg ;};return _cged ;};

// Clear clears the KValue.
func (_fgbdc *KValue )Clear (){_fgbdc ._aedde =nil ;_fgbdc ._abcfb =nil ;_fgbdc ._dfcf =nil };

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cee .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_fabb *PdfTilingPattern )SetContentStream (content []byte ,encoder _cee .StreamEncoder )error {_accc ,_fbddd :=_fabb ._bgabc .(*_cee .PdfObjectStream );if !_fbddd {_fca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fabb ._bgabc );
return _cee .ErrTypeError ;};if encoder ==nil {encoder =_cee .NewRawEncoder ();};_cacdg :=_accc .PdfObjectDictionary ;_dfbf :=encoder .MakeStreamDict ();_cacdg .Merge (_dfbf );_cfbfe ,_ggfge :=encoder .EncodeBytes (content );if _ggfge !=nil {return _ggfge ;
};_cacdg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_cfbfe ))));_accc .Stream =_cfbfe ;return nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_eafbf *PdfOutputIntent )GetContainingPdfObject ()_cee .PdfObject {return _eafbf ._eebee };func _cfgg (_bbabd *_cee .PdfObjectDictionary )(*PdfFieldButton ,error ){_gcecc :=&PdfFieldButton {};_gcecc .PdfField =NewPdfField ();_gcecc .PdfField .SetContext (_gcecc );
_gcecc .Opt ,_ =_cee .GetArray (_bbabd .Get ("\u004f\u0070\u0074"));_cgbbf :=NewPdfAnnotationWidget ();_cgbbf .A ,_ =_cee .GetDict (_bbabd .Get ("\u0041"));_cgbbf .AP ,_ =_cee .GetDict (_bbabd .Get ("\u0041\u0050"));_cgbbf .SetContext (_gcecc );_gcecc .PdfField .Annotations =append (_gcecc .PdfField .Annotations ,_cgbbf );
return _gcecc ,nil ;};func _gdcb (_fgabc _cee .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_agdb :=NewPdfColorspaceSpecialIndexed ();if _dgad ,_dacge :=_fgabc .(*_cee .PdfIndirectObject );_dacge {_agdb ._cgbb =_dgad ;};_fgabc =_cee .TraceToDirectObject (_fgabc );
_dggee ,_ccccg :=_fgabc .(*_cee .PdfObjectArray );if !_ccccg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dggee .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_fgabc =_dggee .Get (0);_ffaga ,_ccccg :=_fgabc .(*_cee .PdfObjectName );if !_ccccg {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ffaga !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fgabc =_dggee .Get (1);_gecc ,_afaeg :=DetermineColorspaceNameFromPdfObject (_fgabc );if _afaeg !=nil {return nil ,_afaeg ;};if _gecc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gecc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fca .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gecc );
return nil ,_dagd ;};_gbgc ,_afaeg :=NewPdfColorspaceFromPdfObject (_fgabc );if _afaeg !=nil {return nil ,_afaeg ;};_agdb .Base =_gbgc ;_fgabc =_dggee .Get (2);_dagef ,_afaeg :=_cee .GetNumberAsInt64 (_fgabc );if _afaeg !=nil {return nil ,_afaeg ;};if _dagef > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_agdb .HiVal =int (_dagef );_fgabc =_dggee .Get (3);_agdb .Lookup =_fgabc ;_fgabc =_cee .TraceToDirectObject (_fgabc );var _gfcgc []byte ;if _abfeg ,_acbad :=_fgabc .(*_cee .PdfObjectString );_acbad {_gfcgc =_abfeg .Bytes ();_fca .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gfcgc );
}else if _cggeb ,_ebge :=_fgabc .(*_cee .PdfObjectStream );_ebge {_fca .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fgabc .String ());_fca .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cggeb .Stream ),_cggeb .Stream );
_cdabd ,_fbdda :=_cee .DecodeStream (_cggeb );if _fbdda !=nil {return nil ,_fbdda ;};_fca .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cdabd ),_cdabd );_gfcgc =_cdabd ;}else {_fca .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fgabc );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gfcgc )< _agdb .Base .GetNumComponents ()*(_agdb .HiVal +1){_fca .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fca .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gfcgc ),_agdb .Base .GetNumComponents (),_agdb .HiVal );
}else {_gfcgc =_gfcgc [:_agdb .Base .GetNumComponents ()*(_agdb .HiVal +1)];};_agdb ._aecec =_gfcgc ;return _agdb ,nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_abce *PdfWriter )SetFileName (name string ){_abce ._cafaa =name };

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cee .PdfObject ;PreserveRB _cee .PdfObject ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_afe PdfModel ;Type _cee .PdfObject ;S _cee .PdfObject ;Next _cee .PdfObject ;_gaf *_cee .PdfIndirectObject ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cee .PdfObject ;AN _cee .PdfObject ;OP _cee .PdfObject ;JS _cee .PdfObject ;};

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_bfff *bool ;_fcbcb *bool ;_gfffg *bool ;_cbdgc *bool ;_gaffg *bool ;_gbbca *bool ;_efgaa NonFullScreenPageMode ;_gfegc Direction ;_gagga PageBoundary ;_baegf PageBoundary ;_eedee PageBoundary ;_fcddg PageBoundary ;_fgbdf PrintScaling ;
_cadea Duplex ;_bdfed *bool ;_acfdg []int ;_dbcbe int ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_fcgb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_ccec :=_ag .NewReader (img .getBase ());_dfebf :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_fcgb .AlternateSpace .GetNumComponents (),nil ,img ._cbfg ,nil );
_eafgd :=_ag .NewWriter (_dfebf );_bcebd :=_aaa .Pow (2,float64 (img .BitsPerComponent ))-1;_fca .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fca .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_fcgb .TintTransform );_fgbfc :=_fcgb .AlternateSpace .DecodeArray ();var (_acaeb uint32 ;_agde error ;);for {_acaeb ,_agde =_ccec .ReadSample ();
if _agde ==_fc .EOF {break ;};if _agde !=nil {return img ,_agde ;};_fffe :=float64 (_acaeb )/_bcebd ;_dadca ,_dddcc :=_fcgb .TintTransform .Evaluate ([]float64 {_fffe });if _dddcc !=nil {return img ,_dddcc ;};for _ebbg ,_fdgaae :=range _dadca {_gaccf :=_ca .LinearInterpolate (_fdgaae ,_fgbfc [_ebbg *2],_fgbfc [_ebbg *2+1],0,1);
if _dddcc =_eafgd .WriteSample (uint32 (_gaccf *_bcebd ));_dddcc !=nil {return img ,_dddcc ;};};};return _fcgb .AlternateSpace .ImageToRGB (_acecd (&_dfebf ));};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_aebfbg *DSS )ToPdfObject ()_cee .PdfObject {_abb :=_aebfbg ._bdcab .PdfObject .(*_cee .PdfObjectDictionary );_abb .Clear ();_gebgd :=_cee .MakeDict ();for _deeeg ,_cdcad :=range _aebfbg .VRI {_gebgd .Set (*_cee .MakeName (_deeeg ),_cdcad .ToPdfObject ());
};_abb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_deeb (_aebfbg .Certs ));_abb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_deeb (_aebfbg .OCSPs ));_abb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_deeb (_aebfbg .CRLs ));_abb .Set ("\u0056\u0052\u0049",_gebgd );
return _aebfbg ._bdcab ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_bbcca *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dggagg .Lock ();defer _dggagg .Unlock ();_bebae =subject };func (_bfcb *PdfReader )newPdfActionSoundFromDict (_facg *_cee .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_facg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_facg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_facg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_facg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_facg .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_cee .PdfObjectArray ;ExtGState _cee .PdfObject ;};func _eaaca (_ebabb *_cee .PdfObjectDictionary )(*PdfShadingType3 ,error ){_ecee :=PdfShadingType3 {};_begdd :=_ebabb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _begdd ==nil {_fca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_ccaaf ,_adgcg :=_begdd .(*_cee .PdfObjectArray );if !_adgcg {_fca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_begdd );return nil ,_cee .ErrTypeError ;
};if _ccaaf .Len ()!=6{_fca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ccaaf .Len ());return nil ,ErrInvalidAttribute ;};_ecee .Coords =_ccaaf ;
if _ecbbc :=_ebabb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ecbbc !=nil {_ecbbc =_cee .TraceToDirectObject (_ecbbc );_bdbea ,_dgega :=_ecbbc .(*_cee .PdfObjectArray );if !_dgega {_fca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecbbc );
return nil ,_cee .ErrTypeError ;};_ecee .Domain =_bdbea ;};_begdd =_ebabb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _begdd ==nil {_fca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ecee .Function =[]PdfFunction {};if _ceacc ,_ebedf :=_begdd .(*_cee .PdfObjectArray );_ebedf {for _ ,_gdbfe :=range _ceacc .Elements (){_dgcfbg ,_ecefc :=_eeaec (_gdbfe );if _ecefc !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecefc );
return nil ,_ecefc ;};_ecee .Function =append (_ecee .Function ,_dgcfbg );};}else {_ebdc ,_gdcgce :=_eeaec (_begdd );if _gdcgce !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdcgce );
return nil ,_gdcgce ;};_ecee .Function =append (_ecee .Function ,_ebdc );};if _dcbfg :=_ebabb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dcbfg !=nil {_dcbfg =_cee .TraceToDirectObject (_dcbfg );_bcgga ,_eagbc :=_dcbfg .(*_cee .PdfObjectArray );if !_eagbc {_fca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcbfg );
return nil ,_cee .ErrTypeError ;};if _bcgga .Len ()!=2{_fca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bcgga .Len ());return nil ,ErrInvalidAttribute ;
};_ecee .Extend =_bcgga ;};return &_ecee ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cee .PdfObject ;};func _cdffc (_ccadb *_cee .PdfObjectDictionary )(*PdfShadingType5 ,error ){_caaaed :=PdfShadingType5 {};_bedad :=_ccadb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bedad ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gggcg ,_gedfg :=_bedad .(*_cee .PdfObjectInteger );if !_gedfg {_fca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bedad );
return nil ,_cee .ErrTypeError ;};_caaaed .BitsPerCoordinate =_gggcg ;_bedad =_ccadb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bedad ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gggcg ,_gedfg =_bedad .(*_cee .PdfObjectInteger );if !_gedfg {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bedad );
return nil ,_cee .ErrTypeError ;};_caaaed .BitsPerComponent =_gggcg ;_bedad =_ccadb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _bedad ==nil {_fca .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gggcg ,_gedfg =_bedad .(*_cee .PdfObjectInteger );if !_gedfg {_fca .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bedad );
return nil ,_cee .ErrTypeError ;};_caaaed .VerticesPerRow =_gggcg ;_bedad =_ccadb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bedad ==nil {_fca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gfcffb ,_gedfg :=_bedad .(*_cee .PdfObjectArray );if !_gedfg {_fca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bedad );
return nil ,_cee .ErrTypeError ;};_caaaed .Decode =_gfcffb ;if _gcgcf :=_ccadb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gcgcf !=nil {_caaaed .Function =[]PdfFunction {};if _afbfc ,_ffeac :=_gcgcf .(*_cee .PdfObjectArray );_ffeac {for _ ,_fbedb :=range _afbfc .Elements (){_bfaee ,_bfcde :=_eeaec (_fbedb );
if _bfcde !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcde );return nil ,_bfcde ;};_caaaed .Function =append (_caaaed .Function ,_bfaee );
};}else {_fcgae ,_bbaeg :=_eeaec (_gcgcf );if _bbaeg !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbaeg );return nil ,_bbaeg ;
};_caaaed .Function =append (_caaaed .Function ,_fcgae );};};return &_caaaed ,nil ;};func (_fcdbd *PdfWriter )addObjects (_feafd _cee .PdfObject )error {_fca .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _gfbc ,_cbag :=_feafd .(*_cee .PdfIndirectObject );_cbag {_fca .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_fca .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_feafd ,_gfbc );_fca .Log .Trace ("\u002d\u0020\u0025\u0073",_gfbc .PdfObject );
if _fcdbd .addObject (_gfbc ){_ggccb :=_fcdbd .addObjects (_gfbc .PdfObject );if _ggccb !=nil {return _ggccb ;};};return nil ;};if _dbdbe ,_dbdedd :=_feafd .(*_cee .PdfObjectStream );_dbdedd {_fca .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fca .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_feafd ,_feafd );
if _fcdbd .addObject (_dbdbe ){_dadb :=_fcdbd .addObjects (_dbdbe .PdfObjectDictionary );if _dadb !=nil {return _dadb ;};};return nil ;};if _dccbc ,_deffb :=_feafd .(*_cee .PdfObjectDictionary );_deffb {_fca .Log .Trace ("\u0044\u0069\u0063\u0074");_fca .Log .Trace ("\u002d\u0020\u0025\u0073",_feafd );
for _ ,_edfbe :=range _dccbc .Keys (){_eecf :=_dccbc .Get (_edfbe );if _fgdef ,_gbdfe :=_eecf .(*_cee .PdfObjectReference );_gbdfe {_eecf =_fgdef .Resolve ();_dccbc .Set (_edfbe ,_eecf );};if _edfbe !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _afdac :=_fcdbd .addObjects (_eecf );
_afdac !=nil {return _afdac ;};}else {if _ ,_cdcbb :=_eecf .(*_cee .PdfObjectNull );_cdcbb {continue ;};if _dcgfb :=_fcdbd .hasObject (_eecf );!_dcgfb {_fca .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_eecf ,_eecf ,_eecf );
_fcdbd ._fgadee [_eecf ]=append (_fcdbd ._fgadee [_eecf ],_dccbc );};};};return nil ;};if _fefbb ,_eeddg :=_feafd .(*_cee .PdfObjectArray );_eeddg {_fca .Log .Trace ("\u0041\u0072\u0072a\u0079");_fca .Log .Trace ("\u002d\u0020\u0025\u0073",_feafd );if _fefbb ==nil {return _cdf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _aefeb ,_bbfdee :=range _fefbb .Elements (){if _abgba ,_dbfbg :=_bbfdee .(*_cee .PdfObjectReference );_dbfbg {_bbfdee =_abgba .Resolve ();_fefbb .Set (_aefeb ,_bbfdee );};if _bgbag :=_fcdbd .addObjects (_bbfdee );_bgbag !=nil {return _bgbag ;};};
return nil ;};if _ ,_eadgce :=_feafd .(*_cee .PdfObjectReference );_eadgce {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_feafd );
return _cdf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject returns a stream object.
func (_ffaf *XObjectImage )ToPdfObject ()_cee .PdfObject {_fdefe :=_ffaf ._fggac ;if _ffaf ._cdgeg {return _fdefe ;};_faefb :=_fdefe .PdfObjectDictionary ;if _ffaf .Filter !=nil {_faefb =_ffaf .Filter .MakeStreamDict ();_fdefe .PdfObjectDictionary =_faefb ;
};_faefb .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_faefb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0049\u006d\u0061g\u0065"));_faefb .Set ("\u0057\u0069\u0064t\u0068",_cee .MakeInteger (*(_ffaf .Width )));
_faefb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cee .MakeInteger (*(_ffaf .Height )));if _ffaf .BitsPerComponent !=nil {_faefb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cee .MakeInteger (*(_ffaf .BitsPerComponent )));
};if _ffaf .ColorSpace !=nil {_faefb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ffaf .ColorSpace .ToPdfObject ());};_faefb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ffaf .Intent );_faefb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ffaf .ImageMask );
_faefb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ffaf .Mask );_gfbae :=_faefb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _ffaf .Decode ==nil &&_gfbae {_faefb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ffaf .Decode !=nil {_faefb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffaf .Decode );
};_faefb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ffaf .Interpolate );_faefb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ffaf .Alternatives );_faefb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ffaf .SMask );
_faefb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ffaf .SMaskInData );_faefb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ffaf .Matte );_faefb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffaf .Name );_faefb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ffaf .StructParent );
_faefb .SetIfNotNil ("\u0049\u0044",_ffaf .ID );_faefb .SetIfNotNil ("\u004f\u0050\u0049",_ffaf .OPI );_faefb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ffaf .Metadata );_faefb .SetIfNotNil ("\u004f\u0043",_ffaf .OC );_faefb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_ffaf .Stream ))));
_fdefe .Stream =_ffaf .Stream ;_ffaf ._cdgeg =true ;return _fdefe ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_affgg fontCommon )asPdfObjectDictionary (_fgdad string )*_cee .PdfObjectDictionary {if _fgdad !=""&&_affgg ._ccdeg !=""&&_fgdad !=_affgg ._ccdeg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fgdad ,_affgg );
}else if _fgdad ==""&&_affgg ._ccdeg ==""{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_affgg );
}else if _affgg ._ccdeg ==""{_affgg ._ccdeg =_fgdad ;};_egbf :=_cee .MakeDict ();_egbf .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0046\u006f\u006e\u0074"));_egbf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cee .MakeName (_affgg ._fbcf ));
_egbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName (_affgg ._ccdeg ));if _affgg ._ebcad !=nil {_egbf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_affgg ._ebcad .ToPdfObject ());};if _affgg ._deccd !=nil {_egbf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_affgg ._deccd );
}else if _affgg ._abcbf !=nil {_eeea ,_gfgdf :=_affgg ._abcbf .Stream ();if _gfgdf !=nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_gfgdf );
}else {_egbf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eeea );};};return _egbf ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fc .ReadSeeker )(*PdfReader ,error ){const _gbcdc ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _agfga (rs ,&ReaderOpts {},false ,_gbcdc );};

// ToInteger convert to an integer format.
func (_bdab *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fgda :=_aaa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fgda *_bdab .R ()),uint32 (_fgda *_bdab .G ()),uint32 (_fgda *_bdab .B ())};};

// GetXObjectByName gets XObject by name.
func (_aegcdb *PdfPage )GetXObjectByName (name _cee .PdfObjectName )(_cee .PdfObject ,bool ){_cgbgd ,_babd :=_aegcdb .Resources .XObject .(*_cee .PdfObjectDictionary );if !_babd {return nil ,false ;};if _fageg :=_cgbgd .Get (name );_fageg !=nil {return _fageg ,true ;
};return nil ,false ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ggg :=NewPdfAction ();_acfb :=&PdfActionGoToR {};_acfb .PdfAction =_ggg ;_ggg .SetContext (_acfb );return _acfb ;};func _cgbbg (_cgce *_cee .PdfObjectDictionary ,_gcgc *fontCommon )(*pdfFontType0 ,error ){_gafce ,_aegcd :=_cee .GetArray (_cgce .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_aegcd {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gcgc );
return nil ,_cee .ErrRangeError ;};if _gafce .Len ()!=1{_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gafce .Len ());
return nil ,_cee .ErrRangeError ;};_agbdf ,_eabf :=_dfbe (_gafce .Get (0),false );if _eabf !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_eabf ,_gcgc );
return nil ,_eabf ;};_ebaga :=_cgce .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_agfg :="";_cega :=_faca (_gcgc );_cega .DescendantFont =_agbdf ;switch _gaade :=_ebaga .(type ){case *_cee .PdfObjectName :_agfg ,_aegcd =_cee .GetNameVal (_ebaga );
if _aegcd {if _agfg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_agfg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_cega ._daac =_dae .NewIdentityTextEncoder (_agfg );}else if _dgg .IsPredefinedCMap (_agfg ){_cega ._dcffd ,_eabf =_dgg .LoadPredefinedCMap (_agfg );
if _eabf !=nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_agfg ,_eabf );
};}else {_fca .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_agfg );};};case *_cee .PdfObjectStream :if _cega ._deccd ==nil {_gcgg ,_afde :=_dgg .NewCIDSystemInfo (_gaade .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _afde !=nil {_fca .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_afde );};_afad :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gcgg .Registry ,_gcgg .Ordering );
if _dgg .IsPredefinedCMap (_afad ){_cega ._dcffd ,_afde =_dgg .LoadPredefinedCMap (_afad );if _afde !=nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_afad ,_afde );
};}else {_afad =_gaade .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_eafce ,_fegf :=_cee .DecodeStream (_gaade );if _fegf !=nil {_fca .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_fegf );
return _cega ,_fegf ;};if _aedgg :=_afad =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_afad =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_aedgg {_cega ._dcffd ,_fegf =_dgg .LoadCmapFromData (_eafce ,_aedgg );
if _fegf !=nil {_fca .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_fegf ,string (_eafce ));
return _cega ,_fegf ;};_gecba :=make (map[_dgg .CharCode ]rune ,256);for _aeefg :=0x00;_aeefg <=0xFF;_aeefg ++{_gecba [_dgg .CharCode (_aeefg )]=rune (_aeefg );};_cega ._abcbf =_dgg .NewToUnicodeCMap (_gecba );};};};};if _adgcfa :=_agbdf .baseFields ()._abcbf ;
_adgcfa !=nil {if _cdfg :=_adgcfa .Name ();_cdfg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cdfg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cdfg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cdfg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_cega ._daac =_dae .NewCMapEncoder (_agfg ,_cega ._dcffd ,_adgcfa );
};};return _cega ,nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_ffcdd *PdfPage )GetContentStreams ()([]string ,error ){_gggb :=_ffcdd .GetContentStreamObjs ();var _ggbde []string ;for _ ,_cdaca :=range _gggb {_dgfcdf ,_eaade :=_dffed (_cdaca );if _eaade !=nil {return nil ,_eaade ;};_ggbde =append (_ggbde ,_dgfcdf );
};return _ggbde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionSound )ToPdfObject ()_cee .PdfObject {_bfc .PdfAction .ToPdfObject ();_afg :=_bfc ._gaf ;_daab :=_afg .PdfObject .(*_cee .PdfObjectDictionary );_daab .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeSound )));_daab .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bfc .Sound );
_daab .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bfc .Volume );_daab .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bfc .Synchronous );_daab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bfc .Repeat );
_daab .SetIfNotNil ("\u004d\u0069\u0078",_bfc .Mix );return _afg ;};

// SetOCProperties sets the optional content properties.
func (_fbdca *PdfWriter )SetOCProperties (ocProperties _cee .PdfObject )error {_dfaac :=_fbdca ._cdebc ;if ocProperties !=nil {_fca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dfaac .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _fbdca .addObjects (ocProperties );};return nil ;};func (_bdcdb *PdfWriter )checkCrossReferenceStream ()bool {_gbded :=_bdcdb ._gceef .Major > 1||(_bdcdb ._gceef .Major ==1&&_bdcdb ._gceef .Minor > 4);
if _bdcdb ._deda !=nil {_gbded =*_bdcdb ._deda ;};return _gbded ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fedbf *PdfSignatureReference )GetContainingPdfObject ()_cee .PdfObject {return _fedbf ._bfegdg };

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dgff *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cdf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adfec ,_eceg :=_cee .GetNumbersAsFloat (objects );
if _eceg !=nil {return nil ,_eceg ;};return _dgff .ColorFromFloats (_adfec );};

// GetRefObject returns the reference object of the KValue.
func (_gdcad *KValue )GetRefObject ()_cee .PdfObject {return _gdcad ._abcfb };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfbba *PdfFieldText )ToPdfObject ()_cee .PdfObject {_bfbba .PdfField .ToPdfObject ();_decgbe :=_bfbba ._ccbb ;_fbfce :=_decgbe .PdfObject .(*_cee .PdfObjectDictionary );_fbfce .Set ("\u0046\u0054",_cee .MakeName ("\u0054\u0078"));if _bfbba .DA !=nil {_fbfce .Set ("\u0044\u0041",_bfbba .DA );
};if _bfbba .Q !=nil {_fbfce .Set ("\u0051",_bfbba .Q );};if _bfbba .DS !=nil {_fbfce .Set ("\u0044\u0053",_bfbba .DS );};if _bfbba .RV !=nil {_fbfce .Set ("\u0052\u0056",_bfbba .RV );};if _bfbba .MaxLen !=nil {_fbfce .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfbba .MaxLen );
};return _decgbe ;};

// Tab order types.
type TabOrderType string ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_cecga *PdfColorspaceSpecialPattern )ToPdfObject ()_cee .PdfObject {if _cecga .UnderlyingCS ==nil {return _cee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_fefg :=_cee .MakeArray (_cee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_fefg .Append (_cecga .UnderlyingCS .ToPdfObject ());if _cecga ._gfcg !=nil {_cecga ._gfcg .PdfObject =_fefg ;return _cecga ._gfcg ;};return _fefg ;};func _ffce (_fadb *_cee .PdfObjectDictionary )(*PdfShadingType1 ,error ){_eeabe :=PdfShadingType1 {};if _dcdc :=_fadb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_dcdc !=nil {_dcdc =_cee .TraceToDirectObject (_dcdc );_ffbf ,_fbcae :=_dcdc .(*_cee .PdfObjectArray );if !_fbcae {_fca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcdc );
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eeabe .Domain =_ffbf ;};if _dfcdc :=_fadb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfcdc !=nil {_dfcdc =_cee .TraceToDirectObject (_dfcdc );
_gceb ,_gdefg :=_dfcdc .(*_cee .PdfObjectArray );if !_gdefg {_fca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfcdc );return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eeabe .Matrix =_gceb ;};_fcefd :=_fadb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fcefd ==nil {_fca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_eeabe .Function =[]PdfFunction {};if _ageff ,_dbafg :=_fcefd .(*_cee .PdfObjectArray );_dbafg {for _ ,_dbbecb :=range _ageff .Elements (){_abcaa ,_bffege :=_eeaec (_dbbecb );if _bffege !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bffege );
return nil ,_bffege ;};_eeabe .Function =append (_eeabe .Function ,_abcaa );};}else {_ebaeb ,_ggae :=_eeaec (_fcefd );if _ggae !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggae );
return nil ,_ggae ;};_eeabe .Function =append (_eeabe .Function ,_ebaeb );};return &_eeabe ,nil ;};func (_deee *PdfReader )newPdfActionGoTo3DViewFromDict (_deb *_cee .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_deb .Get ("\u0054\u0041"),V :_deb .Get ("\u0056")},nil ;
};var _ggdge =false ;

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fbefd *PdfReader )PageFromIndirectObject (ind *_cee .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fbefd .PageList )!=len (_fbefd ._fded ){return nil ,0,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _gfbdbf ,_dgebb :=range _fbefd ._fded {if _dgebb ==ind {return _fbefd .PageList [_gfbdbf ],_gfbdbf +1,nil ;};};return nil ,0,_cdf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject implements interface PdfModel.
func (_fcaff *PdfTransformParamsDocMDP )ToPdfObject ()_cee .PdfObject {_cbcg :=_cee .MakeDict ();_cbcg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fcaff .Type );_cbcg .SetIfNotNil ("\u0056",_fcaff .V );_cbcg .SetIfNotNil ("\u0050",_fcaff .P );return _cbcg ;
};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cgde *PdfReader )IsEncrypted ()(bool ,error ){return _cgde ._ffdgf .IsEncrypted ()};func (_baagf *PdfReader )newPdfFieldSignatureFromDict (_fbefe *_cee .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ggcac :=&PdfFieldSignature {};_dbbad ,_fbag :=_cee .GetIndirect (_fbefe .Get ("\u0056"));
if _fbag {var _gffad error ;_ggcac .V ,_gffad =_baagf .newPdfSignatureFromIndirect (_dbbad );if _gffad !=nil {return nil ,_gffad ;};};_ggcac .Lock ,_ =_cee .GetIndirect (_fbefe .Get ("\u004c\u006f\u0063\u006b"));_ggcac .SV ,_ =_cee .GetIndirect (_fbefe .Get ("\u0053\u0056"));
return _ggcac ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bggef *PdfShadingType5 )ToPdfObject ()_cee .PdfObject {_bggef .PdfShading .ToPdfObject ();_dcdfd ,_geece :=_bggef .getShadingDict ();if _geece !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bggef .BitsPerCoordinate !=nil {_dcdfd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bggef .BitsPerCoordinate );};if _bggef .BitsPerComponent !=nil {_dcdfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bggef .BitsPerComponent );
};if _bggef .VerticesPerRow !=nil {_dcdfd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bggef .VerticesPerRow );};if _bggef .Decode !=nil {_dcdfd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bggef .Decode );};
if _bggef .Function !=nil {if len (_bggef .Function )==1{_dcdfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bggef .Function [0].ToPdfObject ());}else {_fdede :=_cee .MakeArray ();for _ ,_acbce :=range _bggef .Function {_fdede .Append (_acbce .ToPdfObject ());
};_dcdfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdede );};};return _bggef ._dfgbe ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ebcbd *PdfWriter )SetRotation (rotate int64 )error {_cegfe ,_acabe :=_cee .GetDict (_ebcbd ._cdggg );if !_acabe {return ErrTypeCheck ;};_cegfe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cee .MakeInteger (rotate ));return nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fbb :=NewPdfAnnotation ();_fab :=&PdfAnnotationPolyLine {};_fab .PdfAnnotation =_fbb ;_fab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbb .SetContext (_fab );return _fab ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_eabdgb _cee .ParserMetadata ;};

// ToPdfObject implements interface PdfModel.
func (_aeff *PdfAnnotationLine )ToPdfObject ()_cee .PdfObject {_aeff .PdfAnnotation .ToPdfObject ();_eea :=_aeff ._eddc ;_fdcbg :=_eea .PdfObject .(*_cee .PdfObjectDictionary );_aeff .PdfAnnotationMarkup .appendToPdfDictionary (_fdcbg );_fdcbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u004c\u0069\u006e\u0065"));
_fdcbg .SetIfNotNil ("\u004c",_aeff .L );_fdcbg .SetIfNotNil ("\u0042\u0053",_aeff .BS );_fdcbg .SetIfNotNil ("\u004c\u0045",_aeff .LE );_fdcbg .SetIfNotNil ("\u0049\u0043",_aeff .IC );_fdcbg .SetIfNotNil ("\u004c\u004c",_aeff .LL );_fdcbg .SetIfNotNil ("\u004c\u004c\u0045",_aeff .LLE );
_fdcbg .SetIfNotNil ("\u0043\u0061\u0070",_aeff .Cap );_fdcbg .SetIfNotNil ("\u0049\u0054",_aeff .IT );_fdcbg .SetIfNotNil ("\u004c\u004c\u004f",_aeff .LLO );_fdcbg .SetIfNotNil ("\u0043\u0050",_aeff .CP );_fdcbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aeff .Measure );
_fdcbg .SetIfNotNil ("\u0043\u004f",_aeff .CO );return _eea ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_cagdc *PdfFont )GetCIDToGIDMapObject ()_cee .PdfObject {_gdbef ,_eafdg :=_cagdc ._bggcf .(*pdfCIDFontType2 );if _eafdg {return _gdbef .CIDToGIDMap ;};return nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _cc .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_cee .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_cee .MakeInteger (int64 (permission )),V :_cee .MakeName ("\u0031\u002e\u0032")};
};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cee .PdfObject ;Flags _cee .PdfObject ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_eaec DefaultImageHandler )Read (reader _fc .Reader )(*Image ,error ){_dgfgb ,_ ,_bbbbfc :=_bg .Decode (reader );if _bbbbfc !=nil {_fca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bbbbfc );
return nil ,_bbbbfc ;};return _eaec .NewImageFromGoImage (_dgfgb );};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_fef .File ,error ){const _ecdga ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_bgebd ,_ggdf :=_fef .Open (pdfFile );if _ggdf !=nil {return nil ,nil ,_ggdf ;};_bebc ,_ggdf :=_agfga (_bgebd ,opts ,true ,_ecdga );if _ggdf !=nil {_bgebd .Close ();return nil ,nil ,_ggdf ;};_bebc ._ddbge =pdfFile ;return _bebc ,_bgebd ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ebcf *PdfPageResources )GetXObjectImageByName (keyName _cee .PdfObjectName )(*XObjectImage ,error ){_bbfdfb ,_fbgec :=_ebcf .GetXObjectByName (keyName );if _bbfdfb ==nil {return nil ,nil ;};if _fbgec !=XObjectTypeImage {return nil ,_cdf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_eegeg ,_fdcdf :=NewXObjectImageFromStream (_bbfdfb );if _fdcdf !=nil {return nil ,_fdcdf ;};return _eegeg ,nil ;};func (_dbedc *PdfWriter )writeAcroFormFields ()error {if _dbedc ._acfdc ==nil {return nil ;};_fca .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_dgacc :=_dbedc ._acfdc .ToPdfObject ();_fca .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dgacc );_dbedc ._cdebc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dgacc );_abgfd :=_dbedc .addObjects (_dgacc );
if _abgfd !=nil {return _abgfd ;};return nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// SetReason sets the `Reason` field of the signature.
func (_bggfc *PdfSignature )SetReason (reason string ){_bggfc .Reason =_cee .MakeEncodedString (reason ,true );};

// CustomKeys returns all custom info keys as list.
func (_fgfba *PdfInfo )CustomKeys ()[]string {if _fgfba ._ecfea ==nil {return nil ;};_gdbfa :=make ([]string ,len (_fgfba ._ecfea .Keys ()));for _ ,_bbfdg :=range _fgfba ._ecfea .Keys (){_gdbfa =append (_gdbfa ,_bbfdg .String ());};return _gdbfa ;};

// SetLocation sets the `Location` field of the signature.
func (_gddee *PdfSignature )SetLocation (location string ){_gddee .Location =_cee .MakeEncodedString (location ,true );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bdcab *_cee .PdfIndirectObject ;Certs []*_cee .PdfObjectStream ;OCSPs []*_cee .PdfObjectStream ;CRLs []*_cee .PdfObjectStream ;VRI map[string ]*VRI ;_eged map[string ]*_cee .PdfObjectStream ;_dcff map[string ]*_cee .PdfObjectStream ;_fbfec map[string ]*_cee .PdfObjectStream ;
};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bddd *pdfFontSimple )SetEncoder (encoder _dae .TextEncoder ){_bddd ._bgggf =encoder };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dcdf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bcca ,_cbecg :=range _dcdf ._cbfg {_dcdf ._cbfg [_bcca ]=mapFunc (_cbecg );};};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_afddf *Outline )ToPdfOutline ()*PdfOutline {_cgafa :=NewPdfOutline ();var _fcdfg []*PdfOutlineItem ;var _bbdbf int64 ;var _bfca *PdfOutlineItem ;for _ ,_cffga :=range _afddf .Entries {_fdfa ,_gbdeg :=_cffga .ToPdfOutlineItem ();_fdfa .Parent =&_cgafa .PdfOutlineTreeNode ;
if _bfca !=nil {_bfca .Next =&_fdfa .PdfOutlineTreeNode ;_fdfa .Prev =&_bfca .PdfOutlineTreeNode ;};_fcdfg =append (_fcdfg ,_fdfa );_bbdbf +=_gbdeg ;_bfca =_fdfa ;};_fdbaa :=int64 (len (_fcdfg ));_bbdbf +=_fdbaa ;if _fdbaa > 0{_cgafa .First =&_fcdfg [0].PdfOutlineTreeNode ;
_cgafa .Last =&_fcdfg [_fdbaa -1].PdfOutlineTreeNode ;_cgafa .Count =&_bbdbf ;};return _cgafa ;};

// C returns the value of the C component of the color.
func (_egcf *PdfColorCalRGB )C ()float64 {return _egcf [2]};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_cee .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_cee .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func _efcfc (_fdbeb _cee .PdfObject )[]*_cee .PdfObjectStream {if _fdbeb ==nil {return nil ;};_dedb ,_dbaa :=_cee .GetArray (_fdbeb );if !_dbaa ||_dedb .Len ()==0{return nil ;};_cecag :=make ([]*_cee .PdfObjectStream ,0,_dedb .Len ());for _ ,_gdfb :=range _dedb .Elements (){if _egaab ,_abeefd :=_cee .GetStream (_gdfb );
_abeefd {_cecag =append (_cecag ,_egaab );};};return _cecag ;};func (_bcfgf *PdfWriter )optimizeDocument ()error {if _bcfgf ._bacda ==nil {return nil ;};_eadd ,_bebgg :=_cee .GetDict (_bcfgf ._cbfac );if !_bebgg {return _cdf .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_caedf :=_fg .Document {ID :[2]string {_bcfgf ._dfea ,_bcfgf ._bcggd },Version :_bcfgf ._gceef ,Objects :_bcfgf ._gccff ,Info :_eadd ,Crypt :_bcfgf ._ddafb ,UseHashBasedID :_bcfgf ._dabaf };if _ddgee :=_bcfgf ._bacda .ApplyStandard (&_caedf );_ddgee !=nil {return _ddgee ;
};_bcfgf ._dfea ,_bcfgf ._bcggd =_caedf .ID [0],_caedf .ID [1];_bcfgf ._gceef =_caedf .Version ;_bcfgf ._gccff =_caedf .Objects ;_bcfgf ._cbfac .PdfObject =_caedf .Info ;_bcfgf ._dabaf =_caedf .UseHashBasedID ;_bcfgf ._ddafb =_caedf .Crypt ;_bgddd :=make (map[_cee .PdfObject ]struct{},len (_bcfgf ._gccff ));
for _ ,_eafgg :=range _bcfgf ._gccff {_bgddd [_eafgg ]=struct{}{};};_bcfgf ._dgbgbb =_bgddd ;return nil ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_bdcde *ViewerPreferences )IsDisplayDocTitle ()bool {if _bdcde ._gbbca ==nil {return false ;};return *_bdcde ._gbbca ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_cacdf *modelManager )GetModelFromPrimitive (primitive _cee .PdfObject )PdfModel {model ,_cgbaed :=_cacdf ._gdbbg [primitive ];if !_cgbaed {return nil ;};return model ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _gc .Time ;ModTime _gc .Time ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ccdcb *PdfWriter )SetNameDictionary (names _cee .PdfObject )error {if names ==nil {return nil ;};_ccdcb ._bbcfgd =_afaaf (names );_fca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_ccdcb ._cdebc .Set ("\u004e\u0061\u006de\u0073",names );return _ccdcb .addObjects (names );};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_aecea *CompliancePdfReader )error ;};func (_ecgg *PdfReader )newPdfAnnotationWatermarkFromDict (_geg *_cee .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eda :=PdfAnnotationWatermark {};_eda .FixedPrint =_geg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_eda ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfeggb *PdfShadingType7 )ToPdfObject ()_cee .PdfObject {_gfeggb .PdfShading .ToPdfObject ();_caab ,_fbbda :=_gfeggb .getShadingDict ();if _fbbda !=nil {_fca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfeggb .BitsPerCoordinate !=nil {_caab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfeggb .BitsPerCoordinate );};if _gfeggb .BitsPerComponent !=nil {_caab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfeggb .BitsPerComponent );
};if _gfeggb .BitsPerFlag !=nil {_caab .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfeggb .BitsPerFlag );};if _gfeggb .Decode !=nil {_caab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfeggb .Decode );};if _gfeggb .Function !=nil {if len (_gfeggb .Function )==1{_caab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfeggb .Function [0].ToPdfObject ());
}else {_gcebb :=_cee .MakeArray ();for _ ,_dfbgd :=range _gfeggb .Function {_gcebb .Append (_dfbgd .ToPdfObject ());};_caab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcebb );};};return _gfeggb ._dfgbe ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_cee .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_eaee *_cee .PdfIndirectObject ;};

// ToPdfObject returns a stream object.
func (_dfbac *XObjectForm )ToPdfObject ()_cee .PdfObject {_ecbgd :=_dfbac ._fbged ;_eaaea :=_ecbgd .PdfObjectDictionary ;if _dfbac .Filter !=nil {_eaaea =_dfbac .Filter .MakeStreamDict ();_ecbgd .PdfObjectDictionary =_eaaea ;};_eaaea .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eaaea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0046\u006f\u0072\u006d"));_eaaea .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dfbac .FormType );_eaaea .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dfbac .BBox );
_eaaea .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfbac .Matrix );if _dfbac .Resources !=nil {_eaaea .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dfbac .Resources .ToPdfObject ());};_eaaea .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dfbac .Group );
_eaaea .SetIfNotNil ("\u0052\u0065\u0066",_dfbac .Ref );_eaaea .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dfbac .MetaData );_eaaea .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dfbac .PieceInfo );_eaaea .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dfbac .LastModified );
_eaaea .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dfbac .StructParent );_eaaea .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dfbac .StructParents );_eaaea .SetIfNotNil ("\u004f\u0050\u0049",_dfbac .OPI );
_eaaea .SetIfNotNil ("\u004f\u0043",_dfbac .OC );_eaaea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfbac .Name );_eaaea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cee .MakeInteger (int64 (len (_dfbac .Stream ))));_ecbgd .Stream =_dfbac .Stream ;return _ecbgd ;
};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gegdg _fc .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_geebe _bg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_aeacgd _bg .Image )(*Image ,error );

// Compress an image.
Compress (_feebd *Image ,_afgd int64 )(*Image ,error );};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_eaccb :=PdfColorCalGray (grayVal );return &_eaccb ;};

// AddCRLs adds CRLs to DSS.
func (_dgbga *DSS )AddCRLs (crls [][]byte )([]*_cee .PdfObjectStream ,error ){return _dgbga .add (&_dgbga .CRLs ,_dgbga ._fbfec ,crls );};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_abaf :=NewPdfAnnotation ();_acd :=&PdfAnnotationMovie {};_acd .PdfAnnotation =_abaf ;_abaf .SetContext (_acd );return _acd ;};func (_aafb *PdfWriter )updateObjectNumbers (){_ebgcf :=_aafb .ObjNumOffset ;
_bcfaa :=0;for _ ,_feafc :=range _aafb ._gccff {_eafde :=int64 (_bcfaa +1+_ebgcf );_ecbdea :=true ;if _aafb ._fbaeb {if _aaab ,_gbceaa :=_aafb ._ccaed [_feafc ];_gbceaa {_eafde =_aaab ;_ecbdea =false ;};};switch _cecab :=_feafc .(type ){case *_cee .PdfIndirectObject :_cecab .ObjectNumber =_eafde ;
_cecab .GenerationNumber =0;case *_cee .PdfObjectStream :_cecab .ObjectNumber =_eafde ;_cecab .GenerationNumber =0;case *_cee .PdfObjectStreams :_cecab .ObjectNumber =_eafde ;_cecab .GenerationNumber =0;case *_cee .PdfObjectReference :_cecab .ObjectNumber =_eafde ;
_cecab .GenerationNumber =0;case *_cee .PdfObjectDictionary ,*_cee .PdfObjectString :default:_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cecab );
continue ;};if _ecbdea {_bcfaa ++;};};_cabadc :=func (_eeac _cee .PdfObject )int64 {switch _dffbfg :=_eeac .(type ){case *_cee .PdfIndirectObject :return _dffbfg .ObjectNumber ;case *_cee .PdfObjectStream :return _dffbfg .ObjectNumber ;case *_cee .PdfObjectStreams :return _dffbfg .ObjectNumber ;
case *_cee .PdfObjectReference :return _dffbfg .ObjectNumber ;};return 0;};_da .SliceStable (_aafb ._gccff ,func (_beeae ,_bebgc int )bool {return _cabadc (_aafb ._gccff [_beeae ])< _cabadc (_aafb ._gccff [_bebgc ])});};func (_eagae *pdfFontType0 )baseFields ()*fontCommon {return &_eagae .fontCommon };


// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_fcec *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cdf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_dcbg ,_caeg :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbfg ,img ._cabgb );if _caeg !=nil {return img ,_caeg ;};_dfdba ,_caeg :=_ca .NRGBAConverter .Convert (_dcbg );if _caeg !=nil {return img ,_caeg ;
};_ageec :=_acecd (_dfdba .Base ());_fca .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fca .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fca .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ageec .Data );
_fca .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ageec );return _ageec ,nil ;};

// Val returns the color value.
func (_abcg *PdfColorDeviceGray )Val ()float64 {return float64 (*_abcg )};

// SetForms sets the Acroform for a PDF file.
func (_aagcb *PdfWriter )SetForms (form *PdfAcroForm )error {_aagcb ._acfdc =form ;return nil };

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gaac FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gaac .Mask ()|fl .Mask ())};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dccd *Image )ToJBIG2Image ()(*_cee .JBIG2Image ,error ){_fgbfd ,_cfgbe :=_dccd .ToGoImage ();if _cfgbe !=nil {return nil ,_cfgbe ;};return _cee .GoImageToJBIG2 (_fgbfd ,_cee .JB2ImageAutoThreshold );};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ebafe :=&XObjectForm {};_cabec :=&_cee .PdfObjectStream {};_cabec .PdfObjectDictionary =_cee .MakeDict ();_ebafe ._fbged =_cabec ;return _ebafe ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;

// GetPageDict converts the Page to a PDF object dictionary.
func (_aaae *PdfPage )GetPageDict ()*_cee .PdfObjectDictionary {_aeafe :=_aaae ._cfdab ;_aeafe .Clear ();_aeafe .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0050\u0061\u0067\u0065"));_aeafe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aaae .Parent );
if _aaae .LastModified !=nil {_aeafe .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aaae .LastModified .ToPdfObject ());};if _aaae .Resources !=nil {_aeafe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aaae .Resources .ToPdfObject ());
};if _aaae .CropBox !=nil {_aeafe .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_aaae .CropBox .ToPdfObject ());};if _aaae .MediaBox !=nil {_aeafe .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_aaae .MediaBox .ToPdfObject ());};if _aaae .BleedBox !=nil {_aeafe .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_aaae .BleedBox .ToPdfObject ());
};if _aaae .TrimBox !=nil {_aeafe .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_aaae .TrimBox .ToPdfObject ());};if _aaae .ArtBox !=nil {_aeafe .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_aaae .ArtBox .ToPdfObject ());};_aeafe .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_aaae .BoxColorInfo );
_aeafe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aaae .Contents );if _aaae .Rotate !=nil {_aeafe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cee .MakeInteger (*_aaae .Rotate ));};_aeafe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aaae .Group );
_aeafe .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_aaae .Thumb );_aeafe .SetIfNotNil ("\u0042",_aaae .B );_aeafe .SetIfNotNil ("\u0044\u0075\u0072",_aaae .Dur );_aeafe .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_aaae .Trans );_aeafe .SetIfNotNil ("\u0041\u0041",_aaae .AA );
_aeafe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aaae .Metadata );_aeafe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aaae .PieceInfo );_aeafe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aaae .StructParents );
_aeafe .SetIfNotNil ("\u0049\u0044",_aaae .ID );_aeafe .SetIfNotNil ("\u0050\u005a",_aaae .PZ );_aeafe .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_aaae .SeparationInfo );_aeafe .SetIfNotNil ("\u0054\u0061\u0062\u0073",_aaae .Tabs );
_aeafe .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_aaae .TemplateInstantiated );_aeafe .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_aaae .PresSteps );_aeafe .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_aaae .UserUnit );
_aeafe .SetIfNotNil ("\u0056\u0050",_aaae .VP );if _aaae ._eeaba !=nil {_eeecg :=_cee .MakeArray ();for _ ,_cbeb :=range _aaae ._eeaba {if _gfbfe :=_cbeb .GetContext ();_gfbfe !=nil {_eeecg .Append (_gfbfe .ToPdfObject ());}else {_eeecg .Append (_cbeb .ToPdfObject ());
};};if _eeecg .Len ()> 0{_aeafe .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eeecg );};}else if _aaae .Annots !=nil {_aeafe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_aaae .Annots );};return _aeafe ;};

// ToPdfObject implements interface PdfModel.
func (_ge *PdfActionGoTo3DView )ToPdfObject ()_cee .PdfObject {_ge .PdfAction .ToPdfObject ();_dac :=_ge ._gaf ;_ec :=_dac .PdfObject .(*_cee .PdfObjectDictionary );_ec .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeGoTo3DView )));_ec .SetIfNotNil ("\u0054\u0041",_ge .TA );
_ec .SetIfNotNil ("\u0056",_ge .V );return _dac ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cee .PdfObject ;Volume _cee .PdfObject ;Synchronous _cee .PdfObject ;Repeat _cee .PdfObject ;Mix _cee .PdfObject ;};func _babe (_fcdgc _cee .PdfObject )(*_cee .PdfObjectDictionary ,*fontCommon ,error ){_gabg :=&fontCommon {};
if _dbdd ,_dfac :=_fcdgc .(*_cee .PdfIndirectObject );_dfac {_gabg ._facc =_dbdd .ObjectNumber ;};_ebfa ,_cfgbg :=_cee .GetDict (_fcdgc );if !_cfgbg {_fca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcdgc );
return nil ,nil ,ErrFontNotSupported ;};_fdge ,_cfgbg :=_cee .GetNameVal (_ebfa .Get ("\u0054\u0079\u0070\u0065"));if !_cfgbg {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fdge !="\u0046\u006f\u006e\u0074"{_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fdge ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cee .ErrTypeError ;};_gbfag ,_cfgbg :=_cee .GetNameVal (_ebfa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cfgbg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gabg ._ccdeg =_gbfag ;_cbbb ,_cfgbg :=_cee .GetNameVal (_ebfa .Get ("\u004e\u0061\u006d\u0065"));if _cfgbg {_gabg ._ccgfa =_cbbb ;};_adddd :=_ebfa .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _adddd !=nil {_gabg ._deccd =_cee .TraceToDirectObject (_adddd );
_gcgfd ,_faffa :=_dbaba (_gabg ._deccd ,_gabg );if _faffa !=nil {return _ebfa ,_gabg ,_faffa ;};_gabg ._abcbf =_gcgfd ;}else if _gbfag =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gbfag =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cgef ,_ecbc :=_dgg .NewCIDSystemInfo (_ebfa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ecbc !=nil {return _ebfa ,_gabg ,_ecbc ;};_efbg :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cgef .Registry ,_cgef .Ordering );if _dgg .IsPredefinedCMap (_efbg ){_gabg ._abcbf ,_ecbc =_dgg .LoadPredefinedCMap (_efbg );
if _ecbc !=nil {_fca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_efbg ,_ecbc );
};};};_beedb :=_ebfa .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _beedb !=nil {_bcddf ,_gccda :=_ggad (_beedb );if _gccda !=nil {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gccda );
return _ebfa ,_gabg ,_gccda ;};_gabg ._ebcad =_bcddf ;};if _gbfag !="\u0054\u0079\u0070e\u0033"{_bgbec ,_bdba :=_cee .GetNameVal (_ebfa .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bdba {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _ebfa ,_gabg ,ErrRequiredAttributeMissing ;};_gabg ._fbcf =_bgbec ;};return _ebfa ,_gabg ,nil ;};

// PdfVersion returns version of the PDF file.
func (_bdcbe *PdfReader )PdfVersion ()_cee .Version {return _bdcbe ._ffdgf .PdfVersion ()};

// ToPdfObject implements interface PdfModel.
func (_caf *PdfActionGoToR )ToPdfObject ()_cee .PdfObject {_caf .PdfAction .ToPdfObject ();_fd :=_caf ._gaf ;_acb :=_fd .PdfObject .(*_cee .PdfObjectDictionary );_acb .SetIfNotNil ("\u0053",_cee .MakeName (string (ActionTypeGoToR )));if _caf .F !=nil {_acb .Set ("\u0046",_caf .F .ToPdfObject ());
};_acb .SetIfNotNil ("\u0044",_caf .D );_acb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_caf .NewWindow );return _fd ;};func (_afdad *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fggd []*PdfFieldSignature ;for _ ,_ccgdf :=range _afdad .AllFields (){switch _ddgg :=_ccgdf .GetContext ().(type ){case *PdfFieldSignature :_eeag :=_ddgg ;
_fggd =append (_fggd ,_eeag );};};return _fggd ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_cdfe :=NewPdfAction ();_fag :=&PdfActionJavaScript {};_fag .PdfAction =_cdfe ;_cdfe .SetContext (_fag );return _fag ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ba .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cee .PdfObject ;MK _cee .PdfObject ;A _cee .PdfObject ;AA _cee .PdfObject ;BS _cee .PdfObject ;Parent _cee .PdfObject ;_dec *PdfField ;_dcf bool ;};type pdfSignDictionary struct{*_cee .PdfObjectDictionary ;
_efde *SignatureHandler ;_dddage *PdfSignature ;_gcccf int64 ;_dfadcd int ;_geecb int ;_beddd int ;_cfedc int ;};

// String returns a string representation of the field.
func (_bfgdc *PdfField )String ()string {if _efaa ,_baba :=_bfgdc .ToPdfObject ().(*_cee .PdfIndirectObject );_baba {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bfgdc ._egab ,_efaa .PdfObject .String ());};return "";};func _faca (_faab *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_faab }};


// ToPdfObject implements interface PdfModel.
func (_bcdd *PdfAnnotationPrinterMark )ToPdfObject ()_cee .PdfObject {_bcdd .PdfAnnotation .ToPdfObject ();_beeb :=_bcdd ._eddc ;_bgdbe :=_beeb .PdfObject .(*_cee .PdfObjectDictionary );_bgdbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_bgdbe .SetIfNotNil ("\u004d\u004e",_bcdd .MN );return _beeb ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_eabeb *_cee .PdfObjectDictionary ;_fbgd *_cee .PdfIndirectObject ;};func (_efb *PdfReader )newPdfAnnotationPolygonFromDict (_decc *_cee .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_gdb :=PdfAnnotationPolygon {};
_ggag ,_acdc :=_efb .newPdfAnnotationMarkupFromDict (_decc );if _acdc !=nil {return nil ,_acdc ;};_gdb .PdfAnnotationMarkup =_ggag ;_gdb .Vertices =_decc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gdb .LE =_decc .Get ("\u004c\u0045");_gdb .BS =_decc .Get ("\u0042\u0053");
_gdb .IC =_decc .Get ("\u0049\u0043");_gdb .BE =_decc .Get ("\u0042\u0045");_gdb .IT =_decc .Get ("\u0049\u0054");_gdb .Measure =_decc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gdb ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_addge *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _aceb []float64 ;for _bcddg :=0;_bcddg < _addge .GetNumComponents ();_bcddg ++{_aceb =append (_aceb ,0.0,1.0);};return _aceb ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dabd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_fda *PdfReader )newPdfAnnotationSquigglyFromDict (_aeca *_cee .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bbe :=PdfAnnotationSquiggly {};_dgb ,_dfdf :=_fda .newPdfAnnotationMarkupFromDict (_aeca );
if _dfdf !=nil {return nil ,_dfdf ;};_bbe .PdfAnnotationMarkup =_dgb ;_bbe .QuadPoints =_aeca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbe ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cee .PdfObject ;H _cee .PdfObject ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bbfdf ,_gbbfb :=_fef .Open (filePath );if _gbbfb !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gbbfb );
return nil ,_gbbfb ;};defer _bbfdf .Close ();return NewPdfFontFromTTF (_bbfdf );};

// SetBorderWidth sets the style's border width.
func (_ggb *PdfBorderStyle )SetBorderWidth (width float64 ){_ggb .W =&width };

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ae .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ae .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ae .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gdggc *PdfAppender ;_fcbgb *DSS ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fgegb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_cdcgd :=_fgegb .fill (provider ,appGen );if _cdcgd !=nil {return _cdcgd ;};if _ ,_deea :=provider .(FieldImageProvider );_deea {_cdcgd =_fgegb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _cdcgd ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_facff *PdfWriter )SetCatalogMarkInfo (info _cee .PdfObject )error {if info ==nil {_facff ._cdebc .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _cgda ,_cfadc :=info .(*_cee .PdfObjectReference );_cfadc {info =_cgda .Resolve ();
if info ==nil {_facff ._cdebc .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_facff .addObject (info );_facff ._cdebc .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};func (_cbbbb *PdfWriter )writeXRefStreams (_ceadd int ,_dffeab int64 )error {_dcacd :=_ceadd +1;
_cbbbb ._gceegb [_dcacd ]=crossReference {Type :1,ObjectNumber :_dcacd ,Offset :_dffeab };_ecfadc :=_cd .NewBuffer (nil );_eccbg :=_cee .MakeArray ();for _ageddd :=0;_ageddd <=_ceadd ;{for ;_ageddd <=_ceadd ;_ageddd ++{_cbfgc ,_gfgb :=_cbbbb ._gceegb [_ageddd ];
if _gfgb &&(!_cbbbb ._fbaeb ||_cbbbb ._fbaeb &&(_cbfgc .Type ==1&&_cbfgc .Offset >=_cbbbb ._ffcbgf ||_cbfgc .Type ==0)){break ;};};var _gaeac int ;for _gaeac =_ageddd +1;_gaeac <=_ceadd ;_gaeac ++{_fdeaf ,_gefedf :=_cbbbb ._gceegb [_gaeac ];if _gefedf &&(!_cbbbb ._fbaeb ||_cbbbb ._fbaeb &&(_fdeaf .Type ==1&&_fdeaf .Offset > _cbbbb ._ffcbgf )){continue ;
};break ;};_eccbg .Append (_cee .MakeInteger (int64 (_ageddd )),_cee .MakeInteger (int64 (_gaeac -_ageddd )));for _cbgd :=_ageddd ;_cbgd < _gaeac ;_cbgd ++{_adfcf :=_cbbbb ._gceegb [_cbgd ];switch _adfcf .Type {case 0:_de .Write (_ecfadc ,_de .BigEndian ,byte (0));
_de .Write (_ecfadc ,_de .BigEndian ,uint32 (0));_de .Write (_ecfadc ,_de .BigEndian ,uint16 (0xFFFF));case 1:_de .Write (_ecfadc ,_de .BigEndian ,byte (1));_de .Write (_ecfadc ,_de .BigEndian ,uint32 (_adfcf .Offset ));_de .Write (_ecfadc ,_de .BigEndian ,uint16 (_adfcf .Generation ));
case 2:_de .Write (_ecfadc ,_de .BigEndian ,byte (2));_de .Write (_ecfadc ,_de .BigEndian ,uint32 (_adfcf .ObjectNumber ));_de .Write (_ecfadc ,_de .BigEndian ,uint16 (_adfcf .Index ));};};_ageddd =_gaeac +1;};_gedbf ,_ffeega :=_cee .MakeStream (_ecfadc .Bytes (),_cee .NewFlateEncoder ());
if _ffeega !=nil {return _ffeega ;};_gedbf .ObjectNumber =int64 (_dcacd );_gedbf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0058\u0052\u0065\u0066"));_gedbf .PdfObjectDictionary .Set ("\u0057",_cee .MakeArray (_cee .MakeInteger (1),_cee .MakeInteger (4),_cee .MakeInteger (2)));
_gedbf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eccbg );_gedbf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cee .MakeInteger (int64 (_dcacd )));_gedbf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cbbbb ._cbfac );_gedbf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cbbbb ._fadf );
if _cbbbb ._fbaeb &&_cbbbb ._dfdbb > 0{_gedbf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cee .MakeInteger (_cbbbb ._dfdbb ));};if _cbbbb ._ddafb !=nil {_gedbf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbbbb ._bbfag );};if _cbbbb ._aeffd ==nil &&_cbbbb ._dfea !=""&&_cbbbb ._bcggd !=""{_cbbbb ._aeffd =_cee .MakeArray (_cee .MakeHexString (_cbbbb ._dfea ),_cee .MakeHexString (_cbbbb ._bcggd ));
};if _cbbbb ._aeffd !=nil {_fca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbbbb ._aeffd );_gedbf .Set ("\u0049\u0044",_cbbbb ._aeffd );};_cbbbb .writeObject (int (_gedbf .ObjectNumber ),_gedbf );return nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_fagb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cdf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func _dbdaag (_dcaae string )(string ,error ){var _aaac _cd .Buffer ;
_aaac .WriteString (_dcaae );_bdcbb :=make ([]byte ,8+16);_cggc :=_gc .Now ().UTC ().UnixNano ();_de .BigEndian .PutUint64 (_bdcbb ,uint64 (_cggc ));_ ,_badff :=_ff .Read (_bdcbb [8:]);if _badff !=nil {return "",_badff ;};_aaac .WriteString (_aa .EncodeToString (_bdcbb ));
return _aaac .String (),nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_agba byte )byte ;

// B returns the value of the B component of the color.
func (_gdff *PdfColorLab )B ()float64 {return _gdff [2]};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_eadfb *PdfPage )Duplicate ()*PdfPage {_ccgea :=*_eadfb ;_ccgea ._cfdab =_cee .MakeDict ();_ccgea ._bafab =_cee .MakeIndirectObject (_ccgea ._cfdab );_ccgea ._bfeab =*_ccgea ._cfdab ;return &_ccgea ;};

// Y returns the value of the yellow component of the color.
func (_aced *PdfColorDeviceCMYK )Y ()float64 {return _aced [2]};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_aaeff *PdfPageResources )HasColorspaceByName (keyName _cee .PdfObjectName )bool {_gfcef ,_adebd :=_aaeff .GetColorspaces ();if _adebd !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adebd );
return false ;};if _gfcef ==nil {return false ;};_ ,_eccbb :=_gfcef .Colorspaces [string (keyName )];return _eccbb ;};func (_cbgc *PdfWriter )writeOutputIntents ()error {if len (_cbgc ._dbbf )==0{return nil ;};_eabad :=make ([]_cee .PdfObject ,len (_cbgc ._dbbf ));
for _gdadc ,_bdfce :=range _cbgc ._dbbf {_cbgbg :=_bdfce .ToPdfObject ();_eabad [_gdadc ]=_cee .MakeIndirectObject (_cbgbg );};_aecad :=_cee .MakeIndirectObject (_cee .MakeArray (_eabad ...));_cbgc ._cdebc .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_aecad );
if _dfbegd :=_cbgc .addObjects (_aecad );_dfbegd !=nil {return _dfbegd ;};return nil ;};func _fegd (_bedgc *[]*PdfField ,_egbgc FieldFilterFunc ,_gcfgc bool )[]*PdfField {if _bedgc ==nil {return nil ;};_gcaf :=*_bedgc ;if len (*_bedgc )==0{return nil ;
};_fgbfg :=_gcaf [:0];if _egbgc ==nil {_egbgc =func (*PdfField )bool {return true };};var _bcbb []*PdfField ;for _ ,_ecddc :=range _gcaf {_edaff :=_egbgc (_ecddc );if _edaff {_bcbb =append (_bcbb ,_ecddc );if len (_ecddc .Kids )> 0{_bcbb =append (_bcbb ,_fegd (&_ecddc .Kids ,_egbgc ,_gcfgc )...);
};};if !_gcfgc ||!_edaff ||len (_ecddc .Kids )> 0{_fgbfg =append (_fgbfg ,_ecddc );};};*_bedgc =_fgbfg ;return _bcbb ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_aeed *PdfPage )GetAllContentStreams ()(string ,error ){_gfed ,_bddeb :=_aeed .GetContentStreams ();if _bddeb !=nil {return "",_bddeb ;};return _ad .Join (_gfed ,"\u0020"),nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_gdfa *pdfSignDictionary )GetSubFilter ()string {_cadcg :=_gdfa .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _cadcg ==nil {return "";};if _gebag ,_dcddd :=_cee .GetNameVal (_cadcg );_dcddd {return _gebag ;};return "";};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cee .PdfObject ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cee .StreamEncoder )(*XObjectImage ,error ){_deggd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_deggd ,img ,cs ,encoder );};func _abbe (_ebeb _cee .PdfObject )(*PdfPattern ,error ){_eadae :=&PdfPattern {};
var _geab *_cee .PdfObjectDictionary ;if _dddea ,_ccaee :=_cee .GetIndirect (_ebeb );_ccaee {_eadae ._bgabc =_dddea ;_fcfa ,_fcfb :=_dddea .PdfObject .(*_cee .PdfObjectDictionary );if !_fcfb {_fca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dddea .PdfObject );
return nil ,_cee .ErrTypeError ;};_geab =_fcfa ;}else if _bfcad ,_deedg :=_cee .GetStream (_ebeb );_deedg {_eadae ._bgabc =_bfcad ;_geab =_bfcad .PdfObjectDictionary ;}else {_fca .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ebeb );
return nil ,_cee .ErrTypeError ;};_aged :=_geab .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aged ==nil {_fca .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dddga ,_ebcec :=_aged .(*_cee .PdfObjectInteger );if !_ebcec {_fca .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aged );
return nil ,_cee .ErrTypeError ;};if *_dddga !=1&&*_dddga !=2{_fca .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_dddga );return nil ,_cee .ErrRangeError ;
};_eadae .PatternType =int64 (*_dddga );switch *_dddga {case 1:_gced ,_feea :=_dabde (_geab );if _feea !=nil {return nil ,_feea ;};_gced .PdfPattern =_eadae ;_eadae ._gabf =_gced ;return _eadae ,nil ;case 2:_aedb ,_bbdca :=_aebcf (_geab );if _bbdca !=nil {return nil ,_bbdca ;
};_aedb .PdfPattern =_eadae ;_eadae ._gabf =_aedb ;return _eadae ,nil ;};return nil ,_cdf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _cbda (_eega _cee .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_edfdc :=NewPdfColorspaceSpecialSeparation ();
if _daeg ,_ceegc :=_eega .(*_cee .PdfIndirectObject );_ceegc {_edfdc ._dfgac =_daeg ;};_eega =_cee .TraceToDirectObject (_eega );_gffa ,_dgef :=_eega .(*_cee .PdfObjectArray );if !_dgef {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gffa .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_eega =_gffa .Get (0);
_bfcc ,_dgef :=_eega .(*_cee .PdfObjectName );if !_dgef {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bfcc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_eega =_gffa .Get (1);_bfcc ,_dgef =_eega .(*_cee .PdfObjectName );if !_dgef {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_edfdc .ColorantName =_bfcc ;_eega =_gffa .Get (2);_bfdac ,_dcec :=NewPdfColorspaceFromPdfObject (_eega );if _dcec !=nil {return nil ,_dcec ;};_edfdc .AlternateSpace =_bfdac ;_gdac ,_dcec :=_eeaec (_gffa .Get (3));if _dcec !=nil {return nil ,_dcec ;};
_edfdc .TintTransform =_gdac ;return _edfdc ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_ebc :=NewPdfAnnotation ();_abg :=&PdfAnnotationSound {};_abg .PdfAnnotation =_ebc ;_abg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebc .SetContext (_abg );return _abg ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fccbg *PdfFontDescriptor )ToPdfObject ()_cee .PdfObject {_eeggc :=_cee .MakeDict ();if _fccbg ._gbfec ==nil {_fccbg ._gbfec =&_cee .PdfIndirectObject {};};_fccbg ._gbfec .PdfObject =_eeggc ;_eeggc .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fccbg .FontName !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fccbg .FontName );};if _fccbg .FontFamily !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fccbg .FontFamily );};if _fccbg .FontStretch !=nil {_eeggc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fccbg .FontStretch );
};if _fccbg .FontWeight !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fccbg .FontWeight );};if _fccbg .Flags !=nil {_eeggc .Set ("\u0046\u006c\u0061g\u0073",_fccbg .Flags );};if _fccbg .FontBBox !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fccbg .FontBBox );
};if _fccbg .ItalicAngle !=nil {_eeggc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fccbg .ItalicAngle );};if _fccbg .Ascent !=nil {_eeggc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fccbg .Ascent );};if _fccbg .Descent !=nil {_eeggc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fccbg .Descent );
};if _fccbg .Leading !=nil {_eeggc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fccbg .Leading );};if _fccbg .CapHeight !=nil {_eeggc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fccbg .CapHeight );};if _fccbg .XHeight !=nil {_eeggc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fccbg .XHeight );
};if _fccbg .StemV !=nil {_eeggc .Set ("\u0053\u0074\u0065m\u0056",_fccbg .StemV );};if _fccbg .StemH !=nil {_eeggc .Set ("\u0053\u0074\u0065m\u0048",_fccbg .StemH );};if _fccbg .AvgWidth !=nil {_eeggc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fccbg .AvgWidth );
};if _fccbg .MaxWidth !=nil {_eeggc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fccbg .MaxWidth );};if _fccbg .MissingWidth !=nil {_eeggc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fccbg .MissingWidth );};
if _fccbg .FontFile !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fccbg .FontFile );};if _fccbg .FontFile2 !=nil {_eeggc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fccbg .FontFile2 );};if _fccbg .FontFile3 !=nil {_eeggc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fccbg .FontFile3 );
};if _fccbg .CharSet !=nil {_eeggc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fccbg .CharSet );};if _fccbg .Style !=nil {_eeggc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fccbg .FontName );};if _fccbg .Lang !=nil {_eeggc .Set ("\u004c\u0061\u006e\u0067",_fccbg .Lang );
};if _fccbg .FD !=nil {_eeggc .Set ("\u0046\u0044",_fccbg .FD );};if _fccbg .CIDSet !=nil {_eeggc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fccbg .CIDSet );};return _fccbg ._gbfec ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cee .PdfObject ;V _cee .PdfObject ;};func (_ffad *PdfReader )loadStructure ()error {if _ffad ._ffdgf .GetCrypter ()!=nil &&!_ffad ._ffdgf .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dfadc :=_ffad ._ffdgf .GetTrailer ();if _dfadc ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dbbd ,_fedcc :=_dfadc .Get ("\u0052\u006f\u006f\u0074").(*_cee .PdfObjectReference );if !_fedcc {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dfadc );
};_egcbfa ,_bacgge :=_ffad ._ffdgf .LookupByReference (*_dbbd );if _bacgge !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bacgge );
return _bacgge ;};_cffec ,_fedcc :=_egcbfa .(*_cee .PdfIndirectObject );if !_fedcc {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_egcbfa ,*_dfadc );
return _cdf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eecc ,_fedcc :=(*_cffec ).PdfObject .(*_cee .PdfObjectDictionary );if !_fedcc {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cffec .PdfObject );
return _cdf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fca .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eecc );_dfgf ,_fedcc :=_eecc .Get ("\u0050\u0061\u0067e\u0073").(*_cee .PdfObjectReference );
if !_fedcc {return _cdf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bgbeg ,_bacgge :=_ffad ._ffdgf .LookupByReference (*_dfgf );
if _bacgge !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bacgge ;};_dfbeb ,_fedcc :=_bgbeg .(*_cee .PdfIndirectObject );if !_fedcc {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fca .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dfbeb );return _cdf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gfdca ,_fedcc :=_dfbeb .PdfObject .(*_cee .PdfObjectDictionary );if !_fedcc {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dfbeb );
return _cdf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_baagg ,_fedcc :=_cee .GetInt (_gfdca .Get ("\u0043\u006f\u0075n\u0074"));if !_fedcc {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cdf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fedcc =_cee .GetName (_gfdca .Get ("\u0054\u0079\u0070\u0065"));!_fedcc {_fca .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_gfdca .Set ("\u0054\u0079\u0070\u0065",_cee .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cdcbf ,_gbbge :=_cee .GetInt (_gfdca .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gbbge {_gbag :=int64 (*_cdcbf );_ffad .Rotate =&_gbag ;};_ffad ._adcdc =_dbbd ;
_ffad ._cacfe =_eecc ;_ffad ._bfcgg =_gfdca ;_ffad ._gfgcd =_dfbeb ;_ffad ._gadfe =int (*_baagg );_ffad ._fded =[]*_cee .PdfIndirectObject {};_ecdbd :=map[_cee .PdfObject ]struct{}{};_bacgge =_ffad .buildPageList (_dfbeb ,nil ,_ecdbd );if _bacgge !=nil {return _bacgge ;
};_fca .Log .Trace ("\u002d\u002d\u002d");_fca .Log .Trace ("\u0054\u004f\u0043");_fca .Log .Trace ("\u0050\u0061\u0067e\u0073");_fca .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ffad ._fded ),_ffad ._fded );_ffad ._bafag ,_bacgge =_ffad .loadOutlines ();
if _bacgge !=nil {_fca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bacgge );
return _bacgge ;};_ffad .AcroForm ,_bacgge =_ffad .loadForms ();if _bacgge !=nil {return _bacgge ;};_ffad .DSS ,_bacgge =_ffad .loadDSS ();if _bacgge !=nil {return _bacgge ;};_ffad ._aaggd ,_bacgge =_ffad .loadPerms ();if _bacgge !=nil {return _bacgge ;
};return nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_gfad *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfege :=func (_febb float64 )float64 {if _febb >=6.0/29{return _febb *_febb *_febb ;};return 108.0/841*(_febb -4.0/29.0);};_dgcff ,_aeeg :=color .(*PdfColorLab );if !_aeeg {_fca .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cdf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dgcff .L ();AStar :=_dgcff .A ();BStar :=_dgcff .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_gfad .WhitePoint [0]*_gfege (L );Y :=_gfad .WhitePoint [1]*_gfege (M );Z :=_gfad .WhitePoint [2]*_gfege (N );_fafe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dcbd :=-0.969256*X +1.875992*Y +0.041556*Z ;_gagf :=0.055648*X +-0.204043*Y +1.057311*Z ;_fafe =_aaa .Min (_aaa .Max (_fafe ,0),1.0);
_dcbd =_aaa .Min (_aaa .Max (_dcbd ,0),1.0);_gagf =_aaa .Min (_aaa .Max (_gagf ,0),1.0);return NewPdfColorDeviceRGB (_fafe ,_dcbd ,_gagf ),nil ;};func (_eccf *PdfReader )newPdfAnnotationRedactFromDict (_egc *_cee .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ffa :=PdfAnnotationRedact {};
_bdc ,_ccg :=_eccf .newPdfAnnotationMarkupFromDict (_egc );if _ccg !=nil {return nil ,_ccg ;};_ffa .PdfAnnotationMarkup =_bdc ;_ffa .QuadPoints =_egc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ffa .IC =_egc .Get ("\u0049\u0043");
_ffa .RO =_egc .Get ("\u0052\u004f");_ffa .OverlayText =_egc .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ffa .Repeat =_egc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ffa .DA =_egc .Get ("\u0044\u0041");_ffa .Q =_egc .Get ("\u0051");
return &_ffa ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func _ffcag (_ggefa *_cee .PdfObjectDictionary )(*PdfShadingType7 ,error ){_beffb :=PdfShadingType7 {};_cddde :=_ggefa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cddde ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbdbeb ,_eagec :=_cddde .(*_cee .PdfObjectInteger );if !_eagec {_fca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cddde );
return nil ,_cee .ErrTypeError ;};_beffb .BitsPerCoordinate =_bbdbeb ;_cddde =_ggefa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cddde ==nil {_fca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bbdbeb ,_eagec =_cddde .(*_cee .PdfObjectInteger );if !_eagec {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cddde );
return nil ,_cee .ErrTypeError ;};_beffb .BitsPerComponent =_bbdbeb ;_cddde =_ggefa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cddde ==nil {_fca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbdbeb ,_eagec =_cddde .(*_cee .PdfObjectInteger );if !_eagec {_fca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cddde );
return nil ,_cee .ErrTypeError ;};_beffb .BitsPerComponent =_bbdbeb ;_cddde =_ggefa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cddde ==nil {_fca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_afaed ,_eagec :=_cddde .(*_cee .PdfObjectArray );if !_eagec {_fca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cddde );
return nil ,_cee .ErrTypeError ;};_beffb .Decode =_afaed ;if _deafc :=_ggefa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_deafc !=nil {_beffb .Function =[]PdfFunction {};if _fgbgc ,_dbbca :=_deafc .(*_cee .PdfObjectArray );_dbbca {for _ ,_bfegg :=range _fgbgc .Elements (){_cdbc ,_daeea :=_eeaec (_bfegg );
if _daeea !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daeea );return nil ,_daeea ;};_beffb .Function =append (_beffb .Function ,_cdbc );
};}else {_gabgd ,_ecfce :=_eeaec (_deafc );if _ecfce !=nil {_fca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecfce );return nil ,_ecfce ;
};_beffb .Function =append (_beffb .Function ,_gabgd );};};return &_beffb ,nil ;};func (_cffce *LTV )enable (_aege ,_bcddb []*_dfd .Certificate ,_bdef string )error {_ecfbd ,_cfcc ,_cacf :=_cffce .buildCertChain (_aege ,_bcddb );if _cacf !=nil {return _cacf ;
};_ggcf ,_cacf :=_cffce .getCerts (_ecfbd );if _cacf !=nil {return _cacf ;};var _fdbgg ,_dbgfge [][]byte ;if _cffce .OCSPClient !=nil {_fdbgg ,_cacf =_cffce .getOCSPs (_ecfbd ,_cfcc );if _cacf !=nil {return _cacf ;};};if _cffce .CRLClient !=nil {_dbgfge ,_cacf =_cffce .getCRLs (_ecfbd );
if _cacf !=nil {return _cacf ;};};_acbd :=_cffce ._fcbgb ;_cbfc ,_cacf :=_acbd .AddCerts (_ggcf );if _cacf !=nil {return _cacf ;};_aeccd ,_cacf :=_acbd .AddOCSPs (_fdbgg );if _cacf !=nil {return _cacf ;};_degff ,_cacf :=_acbd .AddCRLs (_dbgfge );if _cacf !=nil {return _cacf ;
};if _bdef !=""{_acbd .VRI [_bdef ]=&VRI {Cert :_cbfc ,OCSP :_aeccd ,CRL :_degff };};_cffce ._gdggc .SetDSS (_acbd );return nil ;};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_faebe *KDict )GetPageNumber ()int64 {return _faebe ._efbbe };

// SetNumCopies sets the value of the numCopies.
func (_ecgfc *ViewerPreferences )SetNumCopies (numCopies int ){_ecgfc ._dbcbe =numCopies };

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_cfecd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cdf .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_cfecd .S =subtype ;return nil ;};func (_defa *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func _feedb (_fgdg *_cee .PdfObjectDictionary ,_bfeff *fontCommon )(*pdfFontType3 ,error ){_abbg :=_badf (_bfeff );
_edfg :=_fgdg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _edfg ==nil {_edfg =_cee .MakeInteger (0);};_abbg .FirstChar =_edfg ;_ebgbb ,_abffg :=_cee .GetIntVal (_edfg );if !_abffg {_fca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_edfg );
return nil ,_cee .ErrTypeError ;};_bggfff :=_dae .CharCode (_ebgbb );_edfg =_fgdg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _edfg ==nil {_edfg =_cee .MakeInteger (255);};_abbg .LastChar =_edfg ;_ebgbb ,_abffg =_cee .GetIntVal (_edfg );
if !_abffg {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_edfg );return nil ,_cee .ErrTypeError ;
};_gbdceb :=_dae .CharCode (_ebgbb );_edfg =_fgdg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _edfg !=nil {_abbg .Resources =_edfg ;};_edfg =_fgdg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _edfg ==nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_edfg );
return nil ,_cee .ErrNotSupported ;};_abbg .CharProcs =_edfg ;_edfg =_fgdg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _edfg ==nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_edfg );
return nil ,_cee .ErrNotSupported ;};_abbg .FontMatrix =_edfg ;_abbg ._fdfff =make (map[_dae .CharCode ]float64 );_edfg =_fgdg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _edfg !=nil {_abbg .Widths =_edfg ;_gbafb ,_ebcc :=_cee .GetArray (_edfg );if !_ebcc {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_edfg );
return nil ,_cee .ErrTypeError ;};_ceee ,_dffc :=_gbafb .ToFloat64Array ();if _dffc !=nil {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dffc ;};if len (_ceee )!=int (_gbdceb -_bggfff +1){_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gbdceb -_bggfff +1,len (_ceee ));
return nil ,_cee .ErrRangeError ;};_cfce ,_ebcc :=_cee .GetArray (_abbg .FontMatrix );if !_ebcc {_fca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cfce );
return nil ,_dffc ;};_ccdc ,_dffc :=_cfce .ToFloat64Array ();if _dffc !=nil {_fca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dffc ;};_effgf :=_ac .NewMatrix (_ccdc [0],_ccdc [1],_ccdc [2],_ccdc [3],_ccdc [4],_ccdc [5]);for _efdfc ,_gdab :=range _ceee {_abefe ,_ :=_effgf .Transform (_gdab ,_gdab );_abbg ._fdfff [_bggfff +_dae .CharCode (_efdfc )]=_abefe ;};};_abbg .Encoding =_cee .TraceToDirectObject (_fgdg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cgfd :=_fgdg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cgfd !=nil {_abbg ._deccd =_cee .TraceToDirectObject (_cgfd );_abcbd ,_beccf :=_dbaba (_abbg ._deccd ,&_abbg .fontCommon );if _beccf !=nil {return nil ,_beccf ;};_abbg ._abcbf =_abcbd ;
};if _gggfd :=_abbg ._abcbf ;_gggfd !=nil {_abbg ._fgaa =_dae .NewCMapEncoder ("",nil ,_gggfd );}else {_abbg ._fgaa =_dae .NewPdfDocEncoder ();};return _abbg ,nil ;};func (_fccbe *PdfWriter )optimize ()error {if _fccbe ._ecgef ==nil {return nil ;};var _becag error ;
_fccbe ._gccff ,_becag =_fccbe ._ecgef .Optimize (_fccbe ._gccff );if _becag !=nil {return _becag ;};_eaeefd :=make (map[_cee .PdfObject ]struct{},len (_fccbe ._gccff ));for _ ,_effdg :=range _fccbe ._gccff {_eaeefd [_effdg ]=struct{}{};};_fccbe ._dgbgbb =_eaeefd ;
return nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fcceb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _dgadd []*PdfField ;if _fcceb .AcroForm !=nil {_dgadd =_fcceb .AcroForm .AllFields ();};_acgac :=make (map[*PdfField ]struct{},len (_dgadd ));for _ ,_afcc :=range _dgadd {_acgac [_afcc ]=struct{}{};
};for _ ,_dbcc :=range _fcceb .PageList {_abbee ,_dddec :=_dbcc .GetAnnotations ();if _dddec !=nil {return false ,_dddec ;};for _ ,_gfggcc :=range _abbee {_dceccd ,_bfgf :=_gfggcc .GetContext ().(*PdfAnnotationWidget );if !_bfgf {continue ;};_gbda :=_dceccd .Field ();
if _gbda ==nil {return true ,nil ;};if _ ,_fagf :=_acgac [_gbda ];!_fagf {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdeb *PdfAnnotationStamp )ToPdfObject ()_cee .PdfObject {_cdeb .PdfAnnotation .ToPdfObject ();_eeae :=_cdeb ._eddc ;_ceb :=_eeae .PdfObject .(*_cee .PdfObjectDictionary );_cdeb .PdfAnnotationMarkup .appendToPdfDictionary (_ceb );_ceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cee .MakeName ("\u0053\u0074\u0061m\u0070"));
_ceb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdeb .Name );return _eeae ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bggcf pdfFont };func (_cac *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bfead *Image )GetParamsDict ()*_cee .PdfObjectDictionary {_fadg :=_cee .MakeDict ();_fadg .Set ("\u0057\u0069\u0064t\u0068",_cee .MakeInteger (_bfead .Width ));_fadg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cee .MakeInteger (_bfead .Height ));
_fadg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cee .MakeInteger (int64 (_bfead .ColorComponents )));_fadg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cee .MakeInteger (_bfead .BitsPerComponent ));
return _fadg ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cee .PdfObjectArray ;Matrix *_cee .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eeegd :=&PdfPageResources {};_eeegd ._agdcc =_cee .MakeDict ();return _eeegd ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _cee .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_fbagg :=NewXObjectImage ();if lazy {_cdacea ,_dbdef :=UpdateXObjectImageFromImage (_fbagg ,img ,cs ,encoder );if _dbdef !=nil {return nil ,_dbdef ;
};_cdacea .ToPdfObject ();_dbdef =_cdacea ._fggac .MakeLazy ();if _dbdef !=nil {return nil ,_dbdef ;};_cdacea .Stream =nil ;return _cdacea ,nil ;};return UpdateXObjectImageFromImage (_fbagg ,img ,cs ,encoder );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cee .PdfObjectString ;Q *_cee .PdfObjectInteger ;DS *_cee .PdfObjectString ;RV _cee .PdfObject ;MaxLen *_cee .PdfObjectInteger ;};

// GetNumPages returns the number of pages in the document.
func (_efged *PdfReader )GetNumPages ()(int ,error ){if _efged ._ffdgf .GetCrypter ()!=nil &&!_efged ._ffdgf .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_efged ._fded ),nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cee .PdfObjectArray ;Domain *_cee .PdfObjectArray ;Function []PdfFunction ;Extend *_cee .PdfObjectArray ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_gedbbe PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gedbbe ._bggcf .getFontDescriptor (),nil ;};