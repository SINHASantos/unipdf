//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_bb "bufio";_de "bytes";_ad "crypto/md5";_ca "crypto/rand";_cg "crypto/sha1";_fe "crypto/x509";_dc "encoding/binary";_eaa "encoding/hex";_gf "errors";_b "fmt";_ef "github.com/gabriel-vasile/mimetype";_eg "github.com/unidoc/freetype";
_eaaa "github.com/unidoc/freetype/truetype";_eb "github.com/unidoc/pkcs7";_df "github.com/unidoc/unipdf/v3/common";_bbfa "github.com/unidoc/unipdf/v3/core";_fb "github.com/unidoc/unipdf/v3/core/security";_dag "github.com/unidoc/unipdf/v3/core/security/crypt";
_dea "github.com/unidoc/unipdf/v3/internal/cmap";_bbf "github.com/unidoc/unipdf/v3/internal/imageutil";_dfc "github.com/unidoc/unipdf/v3/internal/license";_cgb "github.com/unidoc/unipdf/v3/internal/sampling";_efd "github.com/unidoc/unipdf/v3/internal/textencoding";
_ac "github.com/unidoc/unipdf/v3/internal/timeutils";_ag "github.com/unidoc/unipdf/v3/internal/transform";_ee "github.com/unidoc/unipdf/v3/internal/uuid";_ga "github.com/unidoc/unipdf/v3/model/internal/docutil";_fg "github.com/unidoc/unipdf/v3/model/internal/fonts";
_cgg "github.com/unidoc/unipdf/v3/model/mdp";_adf "github.com/unidoc/unipdf/v3/model/sigutil";_aa "github.com/unidoc/unipdf/v3/ps";_af "github.com/unidoc/unitype";_gae "golang.org/x/image/font";_fc "golang.org/x/xerrors";_bf "hash";_gd "image";_f "image/color";
_c "image/draw";_ "image/gif";_a "image/png";_cb "io";_dg "math";_cfb "math/rand";_dgf "os";_dbd "path/filepath";_cf "regexp";_da "sort";_ec "strconv";_ge "strings";_g "sync";_ea "time";_db "unicode";_bg "unicode/utf8";);

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_geagd *PdfWriter )SetCatalogMarkInfo (info _bbfa .PdfObject )error {if info ==nil {_geagd ._cgfbd .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _eeeeb ,_ggcgc :=info .(*_bbfa .PdfObjectReference );_ggcgc {info =_eeeeb .Resolve ();
if info ==nil {_geagd ._cgfbd .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};if _ ,_badac :=info .(*_bbfa .PdfIndirectObject );_badac {_geagd .addObject (info );};_geagd ._cgfbd .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );
return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bgadf *PdfFieldButton )GetType ()ButtonType {_ecad :=ButtonTypeCheckbox ;if _bgadf .Ff !=nil {if (uint32 (*_bgadf .Ff )&FieldFlagPushbutton .Mask ())> 0{_ecad =ButtonTypePush ;}else if (uint32 (*_bgadf .Ff )&FieldFlagRadio .Mask ())> 0{_ecad =ButtonTypeRadio ;
};};return _ecad ;};

// RemoveStructParentsKey removes the StructParents key.
func (_aaee *PdfPage )RemoveStructParentsKey (){_aaee .StructParents =nil };

// ToPdfObject implements interface PdfModel.
func (_dge *PdfActionTrans )ToPdfObject ()_bbfa .PdfObject {_dge .PdfAction .ToPdfObject ();_gdg :=_dge ._ff ;_dec :=_gdg .PdfObject .(*_bbfa .PdfObjectDictionary );_dec .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeTrans )));_dec .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dge .Trans );
return _gdg ;};func (_decdc *PdfWriter )optimize ()error {if _decdc ._bdaec ==nil {return nil ;};var _ddbaa error ;_decdc ._ecdbe ,_ddbaa =_decdc ._bdaec .Optimize (_decdc ._ecdbe );if _ddbaa !=nil {return _ddbaa ;};_gcdge :=make (map[_bbfa .PdfObject ]struct{},len (_decdc ._ecdbe ));
for _ ,_ebege :=range _decdc ._ecdbe {_gcdge [_ebege ]=struct{}{};};_decdc ._fdaa =_gcdge ;return nil ;};func (_bffed *PdfReader )newPdfFieldSignatureFromDict (_aefb *_bbfa .PdfObjectDictionary )(*PdfFieldSignature ,error ){_eefcf :=&PdfFieldSignature {};
_adgdb ,_gaff :=_bbfa .GetIndirect (_aefb .Get ("\u0056"));if _gaff {var _bbbg error ;_eefcf .V ,_bbbg =_bffed .newPdfSignatureFromIndirect (_adgdb );if _bbbg !=nil {return nil ,_bbbg ;};};_eefcf .Lock ,_ =_bbfa .GetIndirect (_aefb .Get ("\u004c\u006f\u0063\u006b"));
_eefcf .SV ,_ =_bbfa .GetIndirect (_aefb .Get ("\u0053\u0056"));return _eefcf ,nil ;};func (_ffdgd *PdfReader )traverseObjectData (_gfedfb _bbfa .PdfObject )error {return _bbfa .ResolveReferencesDeep (_gfedfb ,_ffdgd ._gdfeg );};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ebdfb *PdfPageResources )GetXObjectByName (keyName _bbfa .PdfObjectName )(*_bbfa .PdfObjectStream ,XObjectType ){if _ebdfb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cegccb ,_ceffd :=_bbfa .TraceToDirectObject (_ebdfb .XObject ).(*_bbfa .PdfObjectDictionary );
if !_ceffd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbfa .TraceToDirectObject (_ebdfb .XObject ));
return nil ,XObjectTypeUndefined ;};if _eggeg :=_cegccb .Get (keyName );_eggeg !=nil {_dbffd ,_ceacb :=_bbfa .GetStream (_eggeg );if !_ceacb {_df .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_eggeg );
return nil ,XObjectTypeUndefined ;};_bbbcg :=_dbffd .PdfObjectDictionary ;_abaf ,_ceacb :=_bbfa .TraceToDirectObject (_bbbcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bbfa .PdfObjectName );if !_ceacb {_df .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_bbbcg .String ());
return nil ,XObjectTypeUndefined ;};if *_abaf =="\u0049\u006d\u0061g\u0065"{return _dbffd ,XObjectTypeImage ;}else if *_abaf =="\u0046\u006f\u0072\u006d"{return _dbffd ,XObjectTypeForm ;}else if *_abaf =="\u0050\u0053"{return _dbffd ,XObjectTypePS ;}else {_df .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_abaf );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_bbebg *OutlineItem )Insert (index uint ,item *OutlineItem ){_bgfcc :=uint (len (_bbebg .Entries ));if index > _bgfcc {index =_bgfcc ;};_bbebg .Entries =append (_bbebg .Entries [:index ],append ([]*OutlineItem {item },_bbebg .Entries [index :]...)...);
};func _gbbe (_cggbb *_bbfa .PdfObjectDictionary )bool {for _ ,_gbbd :=range _cggbb .Keys (){if _ ,_cdfa :=_bdbb [_gbbd .String ()];_cdfa {return true ;};};return false ;};

// Encoder returns the font's text encoder.
func (_gbad pdfCIDFontType0 )Encoder ()_efd .TextEncoder {return _gbad ._gcfa };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_egf :=NewPdfAction ();_bc :=&PdfActionGoToE {};_bc .PdfAction =_egf ;_egf .SetContext (_bc );return _bc ;};

// GetRefObject returns the reference object of the KValue.
func (_gcbfc *KValue )GetRefObject ()_bbfa .PdfObject {return _gcbfc ._ffbe };

// Y returns the value of the yellow component of the color.
func (_aebfe *PdfColorDeviceCMYK )Y ()float64 {return _aebfe [2]};func (_bcdcc *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ecafg *_bbfa .PdfIndirectObject ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_bbggdd *KDict )ToPdfObject ()_bbfa .PdfObject {_fedeeac :=_bbfa .MakeDict ();if _bbggdd .ID !=nil {_fedeeac .Set ("\u0049\u0044",_bbggdd .ID );};if _bbggdd .K !=nil {_fedeeac .Set ("\u004b",_bbggdd .K );}else if len (_bbggdd ._cbag )> 0{if len (_bbggdd ._cbag )==1{_bbggdd .K =_bbggdd ._cbag [0].ToPdfObject ();
}else {_dgcde :=_bbfa .MakeArray ();for _ ,_bcgff :=range _bbggdd ._cbag {_dgcde .Append (_bcgff .ToPdfObject ());};_bbggdd .K =_dgcde ;};_fedeeac .Set ("\u004b",_bbggdd .K );};if _bbggdd .S !=nil {_fedeeac .Set ("\u0053",_bbggdd .S );};if _bbggdd .P !=nil {_fedeeac .Set ("\u0050",_bbggdd .P );
};if _bbggdd .Pg !=nil {_fedeeac .Set ("\u0050\u0067",_bbggdd .Pg );};if _bbggdd .C !=nil {_fedeeac .Set ("\u0043",_bbggdd .C );};if _bbggdd .R !=nil {_fedeeac .Set ("\u0052",_bbggdd .R );};if _bbggdd .T !=nil {_fedeeac .Set ("\u0054",_bbggdd .T );};if _bbggdd .Lang !=nil {_fedeeac .Set ("\u004c\u0061\u006e\u0067",_bbggdd .Lang );
};if _bbggdd .Alt !=nil {_fedeeac .Set ("\u0041\u006c\u0074",_bbggdd .Alt );};if _bbggdd .E !=nil {_fedeeac .Set ("\u0045",_bbggdd .E );};if _bbggdd .A !=nil {_fedeeac .Set ("\u0041",_bbggdd .A );}else if _bbggdd ._eaddd !=nil {_bbedf :=_bbfa .MakeArrayFromFloats ([]float64 {_bbggdd ._eaddd .Llx ,_bbggdd ._eaddd .Lly ,_bbggdd ._eaddd .Urx ,_bbggdd ._eaddd .Ury });
_dgecd :=_bbfa .MakeDict ();_dgecd .Set ("\u0042\u0042\u006f\u0078",_bbedf );_dgecd .Set ("\u004f",_bbfa .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_fedeeac .Set ("\u0041",_bbfa .MakeIndirectObject (_dgecd ));};if _bbggdd .ActualText !=nil {_fedeeac .Set ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074",_bbggdd .ActualText );
};if _bbggdd .E !=nil {_fedeeac .Set ("\u0045",_bbggdd .E );};if _bbggdd .Alt !=nil {_fedeeac .Set ("\u0041\u006c\u0074",_bbggdd .Alt );};return _fedeeac ;};

// ToPdfObject returns a stream object.
func (_dced *XObjectImage )ToPdfObject ()_bbfa .PdfObject {_accfd :=_dced ._bgffa ;if _dced ._dbdacb {return _accfd ;};_acgcc :=_accfd .PdfObjectDictionary ;if _dced .Filter !=nil {_acgcc =_dced .Filter .MakeStreamDict ();_accfd .PdfObjectDictionary =_acgcc ;
};_acgcc .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_acgcc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0049\u006d\u0061g\u0065"));_acgcc .Set ("\u0057\u0069\u0064t\u0068",_bbfa .MakeInteger (*(_dced .Width )));
_acgcc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbfa .MakeInteger (*(_dced .Height )));if _dced .BitsPerComponent !=nil {_acgcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbfa .MakeInteger (*(_dced .BitsPerComponent )));
};if _dced .ColorSpace !=nil {_acgcc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dced .ColorSpace .ToPdfObject ());};_acgcc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_dced .Intent );_acgcc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_dced .ImageMask );
_acgcc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_dced .Mask );_abcee :=_acgcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _dced .Decode ==nil &&_abcee {_acgcc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _dced .Decode !=nil {_acgcc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dced .Decode );
};_acgcc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_dced .Interpolate );_acgcc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_dced .Alternatives );_acgcc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_dced .SMask );
_acgcc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_dced .SMaskInData );_acgcc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dced .Matte );_acgcc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dced .Name );_acgcc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dced .StructParent );
_acgcc .SetIfNotNil ("\u0049\u0044",_dced .ID );_acgcc .SetIfNotNil ("\u004f\u0050\u0049",_dced .OPI );_acgcc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dced .Metadata );_acgcc .SetIfNotNil ("\u004f\u0043",_dced .OC );_acgcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_dced .Stream ))));
_accfd .Stream =_dced .Stream ;_dced ._dbdacb =true ;return _accfd ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_bdfd *PdfReader )GetCatalogMarkInfo ()(_bbfa .PdfObject ,bool ){if _bdfd ._abdcg ==nil {return nil ,false ;};_aabee :=_bdfd ._abdcg .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _aabee ,_aabee !=nil ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func (_bcaa *PdfReader )newPdfActionGoTo3DViewFromDict (_bcc *_bbfa .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bcc .Get ("\u0054\u0041"),V :_bcc .Get ("\u0056")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_aegf *PdfAnnotation3D )ToPdfObject ()_bbfa .PdfObject {_aegf .PdfAnnotation .ToPdfObject ();_gdb :=_aegf ._dbge ;_deece :=_gdb .PdfObject .(*_bbfa .PdfObjectDictionary );_deece .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0033\u0044"));
_deece .SetIfNotNil ("\u0033\u0044\u0044",_aegf .T3DD );_deece .SetIfNotNil ("\u0033\u0044\u0056",_aegf .T3DV );_deece .SetIfNotNil ("\u0033\u0044\u0041",_aegf .T3DA );_deece .SetIfNotNil ("\u0033\u0044\u0049",_aegf .T3DI );_deece .SetIfNotNil ("\u0033\u0044\u0042",_aegf .T3DB );
return _gdb ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_cgagf *PdfPageResources )GenerateXObjectName ()_bbfa .PdfObjectName {_edbc :=1;for {_effcc :=_bbfa .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_edbc ));if !_cgagf .HasXObjectByName (*_effcc ){return *_effcc ;};_edbc ++;};};func (_ebgb PdfFont )actualFont ()pdfFont {if _ebgb ._gdfa ==nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebgb );
};return _ebgb ._gdfa ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fcfed *PdfWriter )SetNameDictionary (names _bbfa .PdfObject )error {if names ==nil {return nil ;};_fcfed ._bfcba =_agabe (names );_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fcfed ._cgfbd .Set ("\u004e\u0061\u006de\u0073",names );return _fcfed .addObjects (names );};func (_fbfdc *PdfWriter )writeTrailer (_begbg int ){_fbfdc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ggeeb :=0;_ggeeb <=_begbg ;{for ;_ggeeb <=_begbg ;
_ggeeb ++{_fffag ,_dccb :=_fbfdc ._cbaff [_ggeeb ];if _dccb &&(!_fbfdc ._fccec ||_fbfdc ._fccec &&(_fffag .Type ==1&&_fffag .Offset >=_fbfdc ._ddddgb ||_fffag .Type ==0)){break ;};};var _bgfdf int ;for _bgfdf =_ggeeb +1;_bgfdf <=_begbg ;_bgfdf ++{_dafge ,_ggfdda :=_fbfdc ._cbaff [_bgfdf ];
if _ggfdda &&(!_fbfdc ._fccec ||_fbfdc ._fccec &&(_dafge .Type ==1&&_dafge .Offset > _fbfdc ._ddddgb )){continue ;};break ;};_bgedc :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ggeeb ,_bgfdf -_ggeeb );_fbfdc .writeString (_bgedc );for _cdccc :=_ggeeb ;
_cdccc < _bgfdf ;_cdccc ++{_dbfe :=_fbfdc ._cbaff [_cdccc ];switch _dbfe .Type {case 0:_bgedc =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_fbfdc .writeString (_bgedc );case 1:_bgedc =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dbfe .Offset ,0);
_fbfdc .writeString (_bgedc );};};_ggeeb =_bgfdf +1;};_aedcd :=_bbfa .MakeDict ();_aedcd .Set ("\u0049\u006e\u0066\u006f",_fbfdc ._agfdbb );_aedcd .Set ("\u0052\u006f\u006f\u0074",_fbfdc ._abaae );_aedcd .Set ("\u0053\u0069\u007a\u0065",_bbfa .MakeInteger (int64 (_begbg +1)));
if _fbfdc ._fccec &&_fbfdc ._fbdad > 0{_aedcd .Set ("\u0050\u0072\u0065\u0076",_bbfa .MakeInteger (_fbfdc ._fbdad ));};if _fbfdc ._begfb !=nil {_aedcd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fbfdc ._agfff );};if _fbfdc ._fedbc ==nil &&_fbfdc ._gdbcf !=""&&_fbfdc ._cdfc !=""{_fbfdc ._fedbc =_bbfa .MakeArray (_bbfa .MakeHexString (_fbfdc ._gdbcf ),_bbfa .MakeHexString (_fbfdc ._cdfc ));
};if _fbfdc ._fedbc !=nil {_aedcd .Set ("\u0049\u0044",_fbfdc ._fedbc );_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fbfdc ._fedbc );};_fbfdc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_fbfdc .writeString (_aedcd .WriteString ());
_fbfdc .writeString ("\u000a");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_fecac *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbg :=vals [0];if _gfbg < 0.0||_gfbg > 100.0{_df .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_gfbg );
return nil ,ErrColorOutOfRange ;};_dfcg :=vals [1];_bbcc :=float64 (-100);_bceab :=float64 (100);if len (_fecac .Range )> 1{_bbcc =_fecac .Range [0];_bceab =_fecac .Range [1];};if _dfcg < _bbcc ||_dfcg > _bceab {_df .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dfcg ,_bbcc ,_bceab );
return nil ,ErrColorOutOfRange ;};_dbeb :=vals [2];_bgdac :=float64 (-100);_efga :=float64 (100);if len (_fecac .Range )> 3{_bgdac =_fecac .Range [2];_efga =_fecac .Range [3];};if _dbeb < _bgdac ||_dbeb > _efga {_df .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dbeb ,_bgdac ,_efga );
return nil ,ErrColorOutOfRange ;};_gbcf :=NewPdfColorLab (_gfbg ,_dfcg ,_dbeb );return _gbcf ,nil ;};

// SetAnnotations sets the annotations list.
func (_fgfdc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_fgfdc ._eaabc =annotations };

// GetAction returns the PDF action for the annotation link.
func (_efg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _efg ._dba !=nil {return _efg ._dba ,nil ;};if _efg .A ==nil {return nil ,nil ;};if _efg ._bdb ==nil {return nil ,nil ;};_abb ,_daef :=_efg ._bdb .loadAction (_efg .A );if _daef !=nil {return nil ,_daef ;
};_efg ._dba =_abb ;return _efg ._dba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cddg *PdfAnnotationInk )ToPdfObject ()_bbfa .PdfObject {_cddg .PdfAnnotation .ToPdfObject ();_gade :=_cddg ._dbge ;_fcbg :=_gade .PdfObject .(*_bbfa .PdfObjectDictionary );_cddg .PdfAnnotationMarkup .appendToPdfDictionary (_fcbg );_fcbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0049\u006e\u006b"));
_fcbg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cddg .InkList );_fcbg .SetIfNotNil ("\u0042\u0053",_cddg .BS );return _gade ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ccd :=NewPdfAnnotation ();_bdaf :=&PdfAnnotationWatermark {};_bdaf .PdfAnnotation =_ccd ;_ccd .SetContext (_bdaf );return _bdaf ;};func (_dafde fontCommon )asPdfObjectDictionary (_gege string )*_bbfa .PdfObjectDictionary {if _gege !=""&&_dafde ._eebdg !=""&&_gege !=_dafde ._eebdg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gege ,_dafde );
}else if _gege ==""&&_dafde ._eebdg ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dafde );
}else if _dafde ._eebdg ==""{_dafde ._eebdg =_gege ;};_fdbcc :=_bbfa .MakeDict ();_fdbcc .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u006f\u006e\u0074"));_fdbcc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bbfa .MakeName (_dafde ._fdace ));
_fdbcc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName (_dafde ._eebdg ));if _dafde ._cbbb !=nil {_fdbcc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dafde ._cbbb .ToPdfObject ());};if _dafde ._abfce !=nil {_fdbcc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dafde ._abfce );
}else if _dafde ._degfb !=nil {_eaac ,_eddaf :=_dafde ._degfb .Stream ();if _eddaf !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_eddaf );
}else {_fdbcc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eaac );};};return _fdbcc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dggefc pdfCIDFontType2 )GetCharMetrics (code _efd .CharCode )(_fg .CharMetrics ,bool ){if _egcaf ,_gcecd :=_dggefc ._bafe [code ];_gcecd {return _fg .CharMetrics {Wx :_egcaf },true ;};_bcgf :=rune (code );_cafd ,_cfbd :=_dggefc ._baggg [_bcgf ];
if !_cfbd {_cafd =int (_dggefc ._dgbfc );};return _fg .CharMetrics {Wx :float64 (_cafd )},true ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bbfa .PdfObject ;};func (_aeed *DSS )add (_ffdge *[]*_bbfa .PdfObjectStream ,_bgebdf map[string ]*_bbfa .PdfObjectStream ,_ebefa [][]byte )([]*_bbfa .PdfObjectStream ,error ){_bebda :=make ([]*_bbfa .PdfObjectStream ,0,len (_ebefa ));
for _ ,_ecab :=range _ebefa {_deda ,_feeae :=_dcefc (_ecab );if _feeae !=nil {return nil ,_feeae ;};_agead ,_cfcee :=_bgebdf [string (_deda )];if !_cfcee {_agead ,_feeae =_bbfa .MakeStream (_ecab ,_bbfa .NewRawEncoder ());if _feeae !=nil {return nil ,_feeae ;
};_bgebdf [string (_deda )]=_agead ;*_ffdge =append (*_ffdge ,_agead );};_bebda =append (_bebda ,_agead );};return _bebda ,nil ;};func (_fdbfd *PdfWriter )writeNamesDictionary ()error {if _fdbfd ._bfcba ==nil {return nil ;};_gfeea :=_fdbfd ._bfcba .ToPdfObject ();
_fdbfd ._cgfbd .Set ("\u004e\u0061\u006de\u0073",_gfeea );_aabag :=_fdbfd .addObjects (_gfeea );if _aabag !=nil {return _aabag ;};return nil ;};func (_gbaad *LTV )getCRLs (_aagcf []*_fe .Certificate )([][]byte ,error ){_caade :=make ([][]byte ,0,len (_aagcf ));
for _ ,_abceg :=range _aagcf {for _ ,_ccaab :=range _abceg .CRLDistributionPoints {if _gbaad .CertClient .IsCA (_abceg ){continue ;};_fdefe ,_decf :=_gbaad .CRLClient .MakeRequest (_ccaab ,_abceg );if _decf !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_decf );
continue ;};_caade =append (_caade ,_fdefe );};};return _caade ,nil ;};func (_edegb *PdfWriter )setWriter (_fdcge _cb .Writer ){_edegb ._efebf =_edegb ._gaafea ;_edegb ._gdcce =_bb .NewWriter (_fdcge );};func (_gace *PdfReader )newPdfAnnotationSquareFromDict (_edgc *_bbfa .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fdfa :=PdfAnnotationSquare {};
_gddb ,_bbfab :=_gace .newPdfAnnotationMarkupFromDict (_edgc );if _bbfab !=nil {return nil ,_bbfab ;};_fdfa .PdfAnnotationMarkup =_gddb ;_fdfa .BS =_edgc .Get ("\u0042\u0053");_fdfa .IC =_edgc .Get ("\u0049\u0043");_fdfa .BE =_edgc .Get ("\u0042\u0045");
_fdfa .RD =_edgc .Get ("\u0052\u0044");return &_fdfa ,nil ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _ea .Time ;ModTime _ea .Time ;};

// NewKDictFromPdfObject creates a new K dictionary object from a PDF object.
func NewKDictFromPdfObject (obj _bbfa .PdfObject )(*KDict ,error ){_adbcg :=_bbfa .ResolveReference (obj );if _adbcg ==nil {return nil ,_b .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_cacfa ,_fdab :=_bbfa .GetDict (_adbcg );
if !_fdab {return nil ,_b .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_gdada :=&KDict {};if _dbbg :=_cacfa .Get ("\u0053");_dbbg !=nil {_gdada .S =_dbbg ;
};if _aggg :=_cacfa .Get ("\u0050");_aggg !=nil {_gdada .P =_aggg ;};if _caee :=_cacfa .Get ("\u0049\u0044");_caee !=nil {if _dagdb ,_bceb :=_bbfa .GetString (_caee );_bceb {_gdada .ID =_dagdb ;};};if _aadcf :=_cacfa .Get ("\u0050\u0067");_aadcf !=nil {_gdada .Pg =_aadcf ;
};if _ddeb :=_cacfa .Get ("\u004b");_ddeb !=nil {_gdada .K =_ddeb ;switch _defadg :=_ddeb .(type ){case *_bbfa .PdfObjectArray :if _gcafd ,_ddcba :=_bbfa .GetArray (_ddeb );_ddcba {for _ ,_gegae :=range _gcafd .Elements (){switch _adgde :=_gegae .(type ){case *_bbfa .PdfIndirectObject :_cdbbe ,_cefcf :=NewKDictFromPdfObject (_adgde );
if _cefcf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_cefcf );continue ;};_gdada ._cbag =append (_gdada ._cbag ,&KValue {_fcgfe :_cdbbe });
case *_bbfa .PdfObjectInteger :if _fcbda ,_becdfa :=_bbfa .GetIntVal (_gegae );_becdfa {_gdada ._cbag =append (_gdada ._cbag ,&KValue {_aagdb :&_fcbda });};case *_bbfa .PdfObjectDictionary :_gdada ._cbag =append (_gdada ._cbag ,&KValue {_ffbe :_gegae });
};};};case *_bbfa .PdfIndirectObject :_ggbga ,_ffebc :=NewKDictFromPdfObject (_defadg );if _ffebc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_ffebc );
};if _ggbga !=nil {_gdada ._cbag =append (_gdada ._cbag ,&KValue {_fcgfe :_ggbga });};case *_bbfa .PdfObjectDictionary :_gdada ._cbag =append (_gdada ._cbag ,&KValue {_ffbe :_defadg });case *_bbfa .PdfObjectInteger :if _cafeae ,_dcbfb :=_bbfa .GetIntVal (_ddeb );
_dcbfb {_gdada ._cbag =append (_gdada ._cbag ,&KValue {_aagdb :&_cafeae });};};};if _eaccd :=_cacfa .Get ("\u0041");_eaccd !=nil {_gdada .A =_eaccd ;};if _cceab :=_cacfa .Get ("\u0043");_cceab !=nil {_gdada .C =_cceab ;};if _abccbb :=_cacfa .Get ("\u0052");
_abccbb !=nil {if _gecaa ,_cddbe :=_bbfa .GetInt (_abccbb );_cddbe {_gdada .R =_gecaa ;};};if _afbcb :=_cacfa .Get ("\u0054");_afbcb !=nil {if _fcgad ,_agebd :=_bbfa .GetString (_afbcb );_agebd {_gdada .T =_fcgad ;};};if _gcdcf :=_cacfa .Get ("\u004c\u0061\u006e\u0067");
_gcdcf !=nil {if _beefgf ,_fffa :=_bbfa .GetString (_gcdcf );_fffa {_gdada .Lang =_beefgf ;};};if _ddcdb :=_cacfa .Get ("\u0041\u006c\u0074");_ddcdb !=nil {if _gcbg ,_bcaec :=_bbfa .GetString (_ddcdb );_bcaec {_gdada .Alt =_gcbg ;};};if _afagc :=_cacfa .Get ("\u0045");
_afagc !=nil {if _fdbgb ,_efgdec :=_bbfa .GetString (_afagc );_efgdec {_gdada .E =_fdbgb ;};};if _ecgca :=_cacfa .Get ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074");_ecgca !=nil {if _gfeee ,_cffba :=_bbfa .GetString (_ecgca );_cffba {_gdada .ActualText =_gfeee ;
};};return _gdada ,nil ;};func (_deba *PdfReader )newPdfAnnotationTextFromDict (_cgf *_bbfa .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cba :=PdfAnnotationText {};_dabd ,_cgdf :=_deba .newPdfAnnotationMarkupFromDict (_cgf );if _cgdf !=nil {return nil ,_cgdf ;
};_cba .PdfAnnotationMarkup =_dabd ;_cba .Open =_cgf .Get ("\u004f\u0070\u0065\u006e");_cba .Name =_cgf .Get ("\u004e\u0061\u006d\u0065");_cba .State =_cgf .Get ("\u0053\u0074\u0061t\u0065");_cba .StateModel =_cgf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_cba ,nil ;};func (_dbba *PdfReader )newPdfAnnotationWatermarkFromDict (_dcff *_bbfa .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fdbd :=PdfAnnotationWatermark {};_fdbd .FixedPrint =_dcff .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_fdbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdg *PdfActionRendition )ToPdfObject ()_bbfa .PdfObject {_fdg .PdfAction .ToPdfObject ();_ba :=_fdg ._ff ;_gfa :=_ba .PdfObject .(*_bbfa .PdfObjectDictionary );_gfa .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeRendition )));_gfa .SetIfNotNil ("\u0052",_fdg .R );
_gfa .SetIfNotNil ("\u0041\u004e",_fdg .AN );_gfa .SetIfNotNil ("\u004f\u0050",_fdg .OP );_gfa .SetIfNotNil ("\u004a\u0053",_fdg .JS );return _ba ;};func (_dgcd *PdfReader )newPdfAnnotationScreenFromDict (_dagd *_bbfa .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fbge :=PdfAnnotationScreen {};
_fbge .T =_dagd .Get ("\u0054");_fbge .MK =_dagd .Get ("\u004d\u004b");_fbge .A =_dagd .Get ("\u0041");_fbge .AA =_dagd .Get ("\u0041\u0041");return &_fbge ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_aaeccd *PdfReader )PageFromIndirectObject (ind *_bbfa .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_aaeccd .PageList )!=len (_aaeccd ._ceebee ){return nil ,0,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bbbbb ,_ecfbg :=range _aaeccd ._ceebee {if _ecfbg ==ind {return _aaeccd .PageList [_bbbbb ],_bbbbb +1,nil ;};};return nil ,0,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_dgeee *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gcbd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gcbd .MediaBox !=nil {return _gcbd .MediaBox ,nil ;};_ggcbgf :=_gcbd .Parent ;for _ggcbgf !=nil {_gbeed ,_gbfa :=_bbfa .GetDict (_ggcbgf );if !_gbfa {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cedcg :=_gbeed .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cedcg !=nil {_efbeb ,_ffbaa :=_bbfa .GetArray (_cedcg );if !_ffbaa {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dcce ,_dbacg :=NewPdfRectangle (*_efbeb );if _dbacg !=nil {return nil ,_dbacg ;};return _dcce ,nil ;};_ggcbgf =_gbeed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_gf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func _fcebf (_fgcbd _cb .ReadSeeker ,_gaafe *ReaderOpts ,_eegdf bool ,_bgdc string )(*PdfReader ,error ){if _gaafe ==nil {_gaafe =NewReaderOpts ();};_efda :="";if _gefaa ,_gcff :=_fgcbd .(*_dgf .File );_gcff {_efda =_gefaa .Name ();};_defad :=*_gaafe ;
_dcffa :=&PdfReader {_aaafe :_fgcbd ,_gdfeg :map[_bbfa .PdfObject ]struct{}{},_accb :_cadgb (),_bbbee :_gaafe .LazyLoad ,_cgcdc :_gaafe .ComplianceMode ,_bfgee :_eegdf ,_ccbfd :&_defad ,_affg :_efda };_bbfdg ,_cgfcg :=_ddccf ("\u0072");if _cgfcg !=nil {return nil ,_cgfcg ;
};_cgfcg =_dfc .Track (_bbfdg ,_bgdc ,_dcffa ._affg );if _cgfcg !=nil {return nil ,_cgfcg ;};_dcffa ._fage =_bbfdg ;var _caebf *_bbfa .PdfParser ;if !_dcffa ._cgcdc {if _gaafe !=nil {_dcad :=_bbfa .ParserOpts {RelaxedMode :_gaafe .RelaxedMode };_caebf ,_cgfcg =_bbfa .NewParserWithOpts (_fgcbd ,_dcad );
}else {_caebf ,_cgfcg =_bbfa .NewParser (_fgcbd );};}else {_caebf ,_cgfcg =_bbfa .NewCompliancePdfParser (_fgcbd );};if _cgfcg !=nil {return nil ,_cgfcg ;};_dcffa ._fdefeb =_caebf ;_fccef ,_cgfcg :=_dcffa .IsEncrypted ();if _cgfcg !=nil {return nil ,_cgfcg ;
};if !_fccef {_cgfcg =_dcffa .loadStructure ();if _cgfcg !=nil {return nil ,_cgfcg ;};}else if _eegdf {_fgfgfg ,_gdbga :=_dcffa .Decrypt ([]byte (_gaafe .Password ));if _gdbga !=nil {return nil ,_gdbga ;};if !_fgfgfg {return nil ,_gf .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_dcffa ._aaedg =make (map[*PdfReader ]*PdfReader );_dcffa ._eddee =make ([]*PdfReader ,_caebf .GetRevisionNumber ());return _dcffa ,nil ;};func (_gb *PdfReader )newPdfActionMovieFromDict (_gfac *_bbfa .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gfac .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gfac .Get ("\u0054"),Operation :_gfac .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_gadec *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gadec ._fdefeb .GetCrypter ()!=nil &&!_gadec ._fdefeb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_befbc :=_gadec ._abdcg ;_gdagf :=_befbc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gdagf ==nil {return nil ,nil ;};_ggbeg ,_dggbc :=_bbfa .GetIndirect (_gdagf );_gdagf =_bbfa .TraceToDirectObject (_gdagf );if _bbfa .IsNullObject (_gdagf ){_df .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_cdcdbb ,_dgebd :=_bbfa .GetDict (_gdagf );if !_dgebd {_df .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gdagf );_df .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _gadec ._ccbfd .RelaxedMode {_df .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gdagf );};_df .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gadec ._bbbee {_gegdbe :=_gadec .traverseObjectData (_cdcdbb );
if _gegdbe !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gegdbe );
return nil ,_gegdbe ;};};_geacg ,_cfgfe :=_gadec .newPdfAcroFormFromDict (_ggbeg ,_cdcdbb );if _cfgfe !=nil {return nil ,_cfgfe ;};_geacg ._gaeca =!_dggbc ;return _geacg ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bbfa .PdfObject ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_gfcee *PdfOutputIntent )GetContainingPdfObject ()_bbfa .PdfObject {return _gfcee ._fdggg };func (_fabb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fabb ._fdefeb .GetCrypter ()!=nil &&!_fabb ._fdefeb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbfg :=_fabb ._abdcg ;_cbgf :=_dbfg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cbgf ==nil {return nil ,nil ;};_df .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bgfef :=_bbfa .ResolveReference (_cbgf );
_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bgfef );if _dacff :=_bbfa .IsNullObject (_bgfef );_dacff {_df .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_babfb ,_aaebg :=_bgfef .(*_bbfa .PdfIndirectObject );if !_aaebg {if _ ,_ggfec :=_bbfa .GetDict (_bgfef );!_ggfec {_df .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_df .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_babfb =_bbfa .MakeIndirectObject (_bgfef );};_acfgg ,_aaebg :=_babfb .PdfObject .(*_bbfa .PdfObjectDictionary );if !_aaebg {return nil ,_gf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_df .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_acfgg );_ecefd ,_ ,_cdgca :=_fabb .buildOutlineTree (_babfb ,nil ,nil ,nil );if _cdgca !=nil {return nil ,_cdgca ;};_df .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ecefd );
return _ecefd ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_ddcf FieldFlag )Has (fl FieldFlag )bool {return (_ddcf .Mask ()&fl .Mask ())> 0};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cbcag *PdfAcroForm ,_bffg *PdfField ,_cgeae *PdfAnnotationWidget )(*_bbfa .PdfObjectDictionary ,error );};func _daaa (_ceegf _bbfa .PdfObject )(*PdfFunctionType2 ,error ){_fedf :=&PdfFunctionType2 {};
var _bagfa *_bbfa .PdfObjectDictionary ;if _fadea ,_acgbf :=_ceegf .(*_bbfa .PdfIndirectObject );_acgbf {_ggbd ,_fbcbc :=_fadea .PdfObject .(*_bbfa .PdfObjectDictionary );if !_fbcbc {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fedf ._bafga =_fadea ;_bagfa =_ggbd ;}else if _cabec ,_ddbfc :=_ceegf .(*_bbfa .PdfObjectDictionary );_ddbfc {_bagfa =_cabec ;}else {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_df .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bagfa .String ());
_aagdd ,_eebde :=_bbfa .TraceToDirectObject (_bagfa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbfa .PdfObjectArray );if !_eebde {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aagdd .Len ()< 0||_aagdd .Len ()%2!=0{_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dbdgd ,_cacdg :=_aagdd .ToFloat64Array ();if _cacdg !=nil {return nil ,_cacdg ;};_fedf .Domain =_dbdgd ;_aagdd ,_eebde =_bbfa .TraceToDirectObject (_bagfa .Get ("\u0052\u0061\u006eg\u0065")).(*_bbfa .PdfObjectArray );
if _eebde {if _aagdd .Len ()< 0||_aagdd .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bebgg ,_gaecd :=_aagdd .ToFloat64Array ();if _gaecd !=nil {return nil ,_gaecd ;};_fedf .Range =_bebgg ;
};_aagdd ,_eebde =_bbfa .TraceToDirectObject (_bagfa .Get ("\u0043\u0030")).(*_bbfa .PdfObjectArray );if _eebde {_bggge ,_cfaac :=_aagdd .ToFloat64Array ();if _cfaac !=nil {return nil ,_cfaac ;};_fedf .C0 =_bggge ;};_aagdd ,_eebde =_bbfa .TraceToDirectObject (_bagfa .Get ("\u0043\u0031")).(*_bbfa .PdfObjectArray );
if _eebde {_dffbe ,_dbgg :=_aagdd .ToFloat64Array ();if _dbgg !=nil {return nil ,_dbgg ;};_fedf .C1 =_dffbe ;};if len (_fedf .C0 )!=len (_fedf .C1 ){_df .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bbfa .ErrRangeError ;};N ,_cacdg :=_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_bagfa .Get ("\u004e")));if _cacdg !=nil {_df .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bagfa .String ());
return nil ,_cacdg ;};_fedf .N =N ;return _fedf ,nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cffee *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_badgf ,_bagf :=color .(*PdfColorCalGray );if !_bagf {_df .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_badgf .Val ();X :=_cffee .WhitePoint [0]*_dg .Pow (ANorm ,_cffee .Gamma );Y :=_cffee .WhitePoint [1]*_dg .Pow (ANorm ,_cffee .Gamma );
Z :=_cffee .WhitePoint [2]*_dg .Pow (ANorm ,_cffee .Gamma );_bfbg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_becg :=-0.969256*X +1.875992*Y +0.041556*Z ;_abg :=0.055648*X +-0.204043*Y +1.057311*Z ;_bfbg =_dg .Min (_dg .Max (_bfbg ,0),1.0);_becg =_dg .Min (_dg .Max (_becg ,0),1.0);
_abg =_dg .Min (_dg .Max (_abg ,0),1.0);return NewPdfColorDeviceRGB (_bfbg ,_becg ,_abg ),nil ;};func (_ebefg *PdfAcroForm )filteredFields (_badag FieldFilterFunc ,_gggbdg bool )[]*PdfField {if _ebefg ==nil {return nil ;};return _abebe (_ebefg .Fields ,_badag ,_gggbdg );
};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gbbb *PdfColorCalRGB )GetNumComponents ()int {return 3};func _fbegc (_eebfa string )(map[_efd .CharCode ]_efd .GlyphName ,error ){_bbcd :=_ge .Split (_eebfa ,"\u000a");_cbbgb :=make (map[_efd .CharCode ]_efd .GlyphName );for _ ,_ddcbc :=range _bbcd {_cafbf :=_beae .FindStringSubmatch (_ddcbc );
if _cafbf ==nil {continue ;};_fcbe ,_fgbee :=_cafbf [1],_cafbf [2];_eeacd ,_fdgea :=_ec .Atoi (_fcbe );if _fdgea !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ddcbc );
return nil ,_bbfa .ErrTypeError ;};_cbbgb [_efd .CharCode (_eeacd )]=_efd .GlyphName (_fgbee );};_df .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cbbgb );
return _cbbgb ,nil ;};func _befdaf (_fefe _bbfa .PdfObject )(*PdfFontDescriptor ,error ){_adca :=&PdfFontDescriptor {};_fefe =_bbfa .ResolveReference (_fefe );if _fefaab ,_ecca :=_fefe .(*_bbfa .PdfIndirectObject );_ecca {_adca ._ccgbb =_fefaab ;_fefe =_fefaab .PdfObject ;
};_gfaed ,_fcgc :=_bbfa .GetDict (_fefe );if !_fcgc {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fefe );
return nil ,_bbfa .ErrTypeError ;};if _ffegg :=_gfaed .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ffegg !=nil {_adca .FontName =_ffegg ;}else {_df .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gdfc ,_ :=_bbfa .GetName (_adca .FontName );if _bddee :=_gfaed .Get ("\u0054\u0079\u0070\u0065");_bddee !=nil {_ggcd ,_fgfaf :=_bddee .(*_bbfa .PdfObjectName );if !_fgfaf ||string (*_ggcd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bddee ,_gdfc ,_adca .FontName );
};}else {_df .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gdfc ,_adca .FontName );
};_adca .FontFamily =_gfaed .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_adca .FontStretch =_gfaed .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_adca .FontWeight =_gfaed .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_adca .Flags =_gfaed .Get ("\u0046\u006c\u0061g\u0073");_adca .FontBBox =_gfaed .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_adca .ItalicAngle =_gfaed .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_adca .Ascent =_gfaed .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_adca .Descent =_gfaed .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_adca .Leading =_gfaed .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_adca .CapHeight =_gfaed .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_adca .XHeight =_gfaed .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_adca .StemV =_gfaed .Get ("\u0053\u0074\u0065m\u0056");_adca .StemH =_gfaed .Get ("\u0053\u0074\u0065m\u0048");_adca .AvgWidth =_gfaed .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_adca .MaxWidth =_gfaed .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_adca .MissingWidth =_gfaed .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_adca .FontFile =_gfaed .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_adca .FontFile2 =_gfaed .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_adca .FontFile3 =_gfaed .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_adca .CharSet =_gfaed .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_adca .Style =_gfaed .Get ("\u0053\u0074\u0079l\u0065");_adca .Lang =_gfaed .Get ("\u004c\u0061\u006e\u0067");
_adca .FD =_gfaed .Get ("\u0046\u0044");_adca .CIDSet =_gfaed .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _adca .Flags !=nil {if _gdcc ,_acecg :=_bbfa .GetIntVal (_adca .Flags );_acecg {_adca ._cgbfa =_gdcc ;};};if _adca .MissingWidth !=nil {if _cdbcc ,_cbba :=_bbfa .GetNumberAsFloat (_adca .MissingWidth );
_cbba ==nil {_adca ._fgegg =_cdbcc ;};};if _adca .FontFile !=nil {_gcacf ,_dfebg :=_ccaee (_adca .FontFile );if _dfebg !=nil {return _adca ,_dfebg ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gcacf );_adca .fontFile =_gcacf ;
};if _adca .FontFile2 !=nil {_ecfb ,_bbec :=_fg .NewFontFile2FromPdfObject (_adca .FontFile2 );if _bbec !=nil {return _adca ,_bbec ;};_df .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ecfb .String ());_adca ._fcced =&_ecfb ;
};return _adca ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_dfe *PdfAction )GetContext ()PdfModel {if _dfe ==nil {return nil ;};return _dfe ._cad ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bfec ,_cdbcb :=_fg .NewStdFontByName (HelveticaName );if !_cdbcb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dbdgb :=_cgcd (_bfec );return &PdfFont {_gdfa :&_dbdgb };};func (_ceece *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func _dcfb (_ebeeg *_bbfa .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fcdb :=PdfShadingType3 {};
_adgaa :=_ebeeg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _adgaa ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bbadd ,_fafe :=_adgaa .(*_bbfa .PdfObjectArray );if !_fafe {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adgaa );
return nil ,_bbfa .ErrTypeError ;};if _bbadd .Len ()!=6{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bbadd .Len ());return nil ,ErrInvalidAttribute ;
};_fcdb .Coords =_bbadd ;if _gdfgb :=_ebeeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gdfgb !=nil {_gdfgb =_bbfa .TraceToDirectObject (_gdfgb );_bbfgec ,_gdgdd :=_gdfgb .(*_bbfa .PdfObjectArray );if !_gdgdd {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdfgb );
return nil ,_bbfa .ErrTypeError ;};_fcdb .Domain =_bbfgec ;};_adgaa =_ebeeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _adgaa ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fcdb .Function =[]PdfFunction {};if _ceeac ,_gecdc :=_adgaa .(*_bbfa .PdfObjectArray );_gecdc {for _ ,_fbdff :=range _ceeac .Elements (){_ebdag ,_bccgeg :=_fcgca (_fbdff );if _bccgeg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bccgeg );
return nil ,_bccgeg ;};_fcdb .Function =append (_fcdb .Function ,_ebdag );};}else {_efffeb ,_acdgb :=_fcgca (_adgaa );if _acdgb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acdgb );
return nil ,_acdgb ;};_fcdb .Function =append (_fcdb .Function ,_efffeb );};if _abafc :=_ebeeg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_abafc !=nil {_abafc =_bbfa .TraceToDirectObject (_abafc );_afeed ,_bdbfe :=_abafc .(*_bbfa .PdfObjectArray );if !_bdbfe {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abafc );
return nil ,_bbfa .ErrTypeError ;};if _afeed .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_afeed .Len ());return nil ,ErrInvalidAttribute ;
};_fcdb .Extend =_afeed ;};return &_fcdb ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_deecddb *_bbfa .PdfObjectDictionary ;_cgga *_bbfa .PdfIndirectObject ;};

// HasExtGState checks if ExtGState name is available.
func (_ggbf *PdfPage )HasExtGState (name _bbfa .PdfObjectName )bool {if _ggbf .Resources ==nil {return false ;};if _ggbf .Resources .ExtGState ==nil {return false ;};_dcgbd ,_efadb :=_bbfa .TraceToDirectObject (_ggbf .Resources .ExtGState ).(*_bbfa .PdfObjectDictionary );
if !_efadb {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbfa .TraceToDirectObject (_ggbf .Resources .ExtGState ));
return false ;};_ggba :=_dcgbd .Get (name );_bbabf :=_ggba !=nil ;return _bbabf ;};func _cegg (_cdbb _bbfa .PdfObject )(*PdfColorspaceICCBased ,error ){_cfdc :=&PdfColorspaceICCBased {};if _eeccf ,_dbefc :=_cdbb .(*_bbfa .PdfIndirectObject );_dbefc {_cfdc ._fcbgf =_eeccf ;
};_cdbb =_bbfa .TraceToDirectObject (_cdbb );_ebbb ,_dffb :=_cdbb .(*_bbfa .PdfObjectArray );if !_dffb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebbb .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_cdbb =_bbfa .TraceToDirectObject (_ebbb .Get (0));_fdge ,_dffb :=_cdbb .(*_bbfa .PdfObjectName );if !_dffb {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fdge !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cdbb =_ebbb .Get (1);
_bfde ,_dffb :=_bbfa .GetStream (_cdbb );if !_dffb {_df .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cdbb );
return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_egdd :=_bfde .PdfObjectDictionary ;_bgcf ,_dffb :=_egdd .Get ("\u004e").(*_bbfa .PdfObjectInteger );
if !_dffb {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bgcf !=1&&*_bgcf !=3&&*_bgcf !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cfdc .N =int (*_bgcf );if _aabe :=_egdd .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_aabe !=nil {_fafa ,_fdeeee :=NewPdfColorspaceFromPdfObject (_aabe );if _fdeeee !=nil {return nil ,_fdeeee ;};_cfdc .Alternate =_fafa ;};if _cefb :=_egdd .Get ("\u0052\u0061\u006eg\u0065");
_cefb !=nil {_cefb =_bbfa .TraceToDirectObject (_cefb );_gdac ,_degae :=_cefb .(*_bbfa .PdfObjectArray );if !_degae {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gdac .Len ()!=2*_cfdc .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_ddab ,_fgfe :=_gdac .GetAsFloat64Slice ();if _fgfe !=nil {return nil ,_fgfe ;};_cfdc .Range =_ddab ;}else {_cfdc .Range =make ([]float64 ,2*_cfdc .N );for _accf :=0;_accf < _cfdc .N ;_accf ++{_cfdc .Range [2*_accf ]=0.0;_cfdc .Range [2*_accf +1]=1.0;
};};if _adga :=_egdd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adga !=nil {_cefc ,_geae :=_adga .(*_bbfa .PdfObjectStream );if !_geae {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cfdc .Metadata =_cefc ;};_gcga ,_gdgde :=_bbfa .DecodeStream (_bfde );if _gdgde !=nil {return nil ,_gdgde ;};_cfdc .Data =_gcga ;_cfdc ._eeaa =_bfde ;return _cfdc ,nil ;};func (_geg *PdfReader )newPdfAnnotationPolygonFromDict (_ceec *_bbfa .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fef :=PdfAnnotationPolygon {};
_dfed ,_ced :=_geg .newPdfAnnotationMarkupFromDict (_ceec );if _ced !=nil {return nil ,_ced ;};_fef .PdfAnnotationMarkup =_dfed ;_fef .Vertices =_ceec .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fef .LE =_ceec .Get ("\u004c\u0045");_fef .BS =_ceec .Get ("\u0042\u0053");
_fef .IC =_ceec .Get ("\u0049\u0043");_fef .BE =_ceec .Get ("\u0042\u0045");_fef .IT =_ceec .Get ("\u0049\u0054");_fef .Measure =_ceec .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fef ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eebd :=NewPdfAnnotation ();_fcc :=&PdfAnnotationPolygon {};_fcc .PdfAnnotation =_eebd ;_fcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eebd .SetContext (_fcc );return _fcc ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gebf *PdfField )SetContext (ctx PdfModel ){_gebf ._ebede =ctx };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_bbfa .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_afdd *_bbfa .PdfIndirectObject ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bdfec *PdfPage )AppendContentStream (contentStr string )error {_afbgc ,_bbdfd :=_bdfec .GetContentStreams ();if _bbdfd !=nil {return _bbdfd ;};if len (_afbgc )==0{_afbgc =[]string {contentStr };return _bdfec .SetContentStreams (_afbgc ,_bbfa .NewFlateEncoder ());
};var _bgcbfc _de .Buffer ;_bgcbfc .WriteString (_afbgc [len (_afbgc )-1]);_bgcbfc .WriteString ("\u000a");_bgcbfc .WriteString (contentStr );_afbgc [len (_afbgc )-1]=_bgcbfc .String ();return _bdfec .SetContentStreams (_afbgc ,_bbfa .NewFlateEncoder ());
};func (_bdeccf *PdfWriter )updateObjectNumbers (){_egfbe :=_bdeccf .ObjNumOffset ;_eeeb :=0;for _ ,_adgaf :=range _bdeccf ._ecdbe {_acbdf :=int64 (_eeeb +1+_egfbe );_dcdca :=true ;if _bdeccf ._fccec {if _abefe ,_eeef :=_bdeccf ._cffac [_adgaf ];_eeef {_acbdf =_abefe ;
_dcdca =false ;};};switch _efgca :=_adgaf .(type ){case *_bbfa .PdfIndirectObject :_efgca .ObjectNumber =_acbdf ;_efgca .GenerationNumber =0;case *_bbfa .PdfObjectStream :_efgca .ObjectNumber =_acbdf ;_efgca .GenerationNumber =0;case *_bbfa .PdfObjectStreams :_efgca .ObjectNumber =_acbdf ;
_efgca .GenerationNumber =0;case *_bbfa .PdfObjectReference :_efgca .ObjectNumber =_acbdf ;_efgca .GenerationNumber =0;case *_bbfa .PdfObjectDictionary ,*_bbfa .PdfObjectString :default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_efgca );
continue ;};if _dcdca {_eeeb ++;};};_bbcb :=func (_baff _bbfa .PdfObject )int64 {switch _feccg :=_baff .(type ){case *_bbfa .PdfIndirectObject :return _feccg .ObjectNumber ;case *_bbfa .PdfObjectStream :return _feccg .ObjectNumber ;case *_bbfa .PdfObjectStreams :return _feccg .ObjectNumber ;
case *_bbfa .PdfObjectReference :return _feccg .ObjectNumber ;};return 0;};_da .SliceStable (_bdeccf ._ecdbe ,func (_abfb ,_ebdbb int )bool {return _bbcb (_bdeccf ._ecdbe [_abfb ])< _bbcb (_bdeccf ._ecdbe [_ebdbb ])});};var (_efgcc _g .Mutex ;_cdgce ="";
_cafef _ea .Time ;_bbac ="";_fabgb ="";_afbaa _ea .Time ;_aebd ="";_fggc ="";_abaebc ="";);

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_baa :=NewPdfAnnotation ();_debg :=&PdfAnnotationRichMedia {};_debg .PdfAnnotation =_baa ;_baa .SetContext (_debg );return _debg ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ceff :=NewPdfAnnotation ();_dbbc :=&PdfAnnotationCaret {};_dbbc .PdfAnnotation =_ceff ;_dbbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceff .SetContext (_dbbc );return _dbbc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fffda *PdfColorspaceSpecialPattern )ToPdfObject ()_bbfa .PdfObject {if _fffda .UnderlyingCS ==nil {return _bbfa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bgdb :=_bbfa .MakeArray (_bbfa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_bgdb .Append (_fffda .UnderlyingCS .ToPdfObject ());if _fffda ._afeg !=nil {_fffda ._afeg .PdfObject =_bgdb ;return _fffda ._afeg ;};return _bgdb ;};func (_eed *PdfReader )newPdfActionJavaScriptFromDict (_ddgg *_bbfa .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_ddgg .Get ("\u004a\u0053")},nil ;
};

// SetLocation sets the `Location` field of the signature.
func (_defde *PdfSignature )SetLocation (location string ){_defde .Location =_bbfa .MakeEncodedString (location ,true );};

// GetDescent returns the Descent of the font `descriptor`.
func (_bbage *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bbfa .GetNumberAsFloat (_bbage .Descent );};func _aagd (_bdcfb *XObjectForm )(*PdfRectangle ,bool ,error ){if _abbeb ,_ddfb :=_bdcfb .BBox .(*_bbfa .PdfObjectArray );_ddfb {_gabf ,_cgfa :=NewPdfRectangle (*_abbeb );
if _cgfa !=nil {return nil ,false ,_cgfa ;};if _eded ,_ggge :=_bdcfb .Matrix .(*_bbfa .PdfObjectArray );_ggge {_dddc ,_edeb :=_eded .ToFloat64Array ();if _edeb !=nil {return nil ,false ,_edeb ;};_dfdge :=_ag .IdentityMatrix ();if len (_dddc )==6{_dfdge =_ag .NewMatrix (_dddc [0],_dddc [1],_dddc [2],_dddc [3],_dddc [4],_dddc [5]);
};_gabf .Transform (_dfdge );return _gabf ,true ,nil ;};return _gabf ,false ,nil ;};return nil ,false ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// ImageToRGB convert an indexed image to RGB.
func (_gfad *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gfad .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_efbc :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._eccdd ,img ._acgd );_agef :=_cgb .NewReader (img .getBase ());_ffgf :=_cgb .NewWriter (_efbc );var (_agbd uint32 ;_ddbf int ;_afbb error ;);for {_agbd ,_afbb =_agef .ReadSample ();
if _afbb ==_cb .EOF {break ;}else if _afbb !=nil {return img ,_afbb ;};_ddbf =int (_agbd );_df .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ddbf ,N ,len (_gfad ._aadc ));
if (_ddbf +1)*N > len (_gfad ._aadc ){_ddbf =len (_gfad ._aadc )/N -1;_df .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ddbf );if _ddbf < 0{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ccgf :=_ddbf *N ;_ccgf < (_ddbf +1)*N ;_ccgf ++{if _afbb =_ffgf .WriteSample (uint32 (_gfad ._aadc [_ccgf ]));_afbb !=nil {return img ,_afbb ;};};};return _gfad .Base .ImageToRGB (_ebdgf (&_efbc ));};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_ccbbdc *_bbfa .PdfObjectDictionary ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bbfa .PdfObject ;Popup *PdfAnnotationPopup ;CA _bbfa .PdfObject ;RC _bbfa .PdfObject ;CreationDate _bbfa .PdfObject ;IRT _bbfa .PdfObject ;Subj _bbfa .PdfObject ;RT _bbfa .PdfObject ;IT _bbfa .PdfObject ;ExData _bbfa .PdfObject ;
};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ada :=NewPdfAnnotation ();_ebbd :=&PdfAnnotationProjection {};_ebbd .PdfAnnotation =_ada ;_ebbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ada .SetContext (_ebbd );return _ebbd ;};

// SetImage updates XObject Image with new image data.
func (_gcggad *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gcggad .Filter .UpdateParams (img .GetParamsDict ());_gcage ,_dbcda :=_gcggad .Filter .EncodeBytes (img .Data );if _dbcda !=nil {return _dbcda ;};_gcggad .Stream =_gcage ;_cbgdbg :=img .Width ;
_gcggad .Width =&_cbgdbg ;_ebcee :=img .Height ;_gcggad .Height =&_ebcee ;_aafda :=img .BitsPerComponent ;_gcggad .BitsPerComponent =&_aafda ;if cs ==nil {if img .ColorComponents ==1{_gcggad .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gcggad .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gcggad .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _gf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gcggad .ColorSpace =cs ;};return nil ;
};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bbfa .PdfObject ;PreserveRB _bbfa .PdfObject ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bbfa .PdfObjectDictionary )(*PdfPageResources ,error ){_bdage :=NewPdfPageResources ();if _cdec :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cdec !=nil {_bdage .ExtGState =_cdec ;};if _cfdeg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_cfdeg !=nil &&!_bbfa .IsNullObject (_cfdeg ){_bdage .ColorSpace =_cfdeg ;};if _abeac :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_abeac !=nil {_bdage .Pattern =_abeac ;};if _cdebe :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_cdebe !=nil {_bdage .Shading =_cdebe ;
};if _edagaf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_edagaf !=nil {_bdage .XObject =_edagaf ;};if _ffae :=_bbfa .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_ffae !=nil {_bdage .Font =_ffae ;};if _gcbbd :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_gcbbd !=nil {_bdage .ProcSet =_gcbbd ;};if _aebee :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aebee !=nil {_bdage .Properties =_aebee ;};return _bdage ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_deegb *_bbfa .PdfIndirectObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dagdd *PdfFilespec )GetContainingPdfObject ()_bbfa .PdfObject {return _dagdd ._bdbfc };

// ParserMetadata gets the parser  metadata.
func (_fdeea *CompliancePdfReader )ParserMetadata ()_bbfa .ParserMetadata {if _fdeea ._fgbe ==(_bbfa .ParserMetadata {}){_fdeea ._fgbe ,_ =_fdeea ._fdefeb .ParserMetadata ();};return _fdeea ._fgbe ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dac :=NewPdfAnnotation ();_gcec :=&PdfAnnotationSound {};_gcec .PdfAnnotation =_dac ;_gcec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dac .SetContext (_gcec );return _gcec ;};

// GetVersion gets the document version.
func (_beceb *PdfWriter )GetVersion ()_bbfa .Version {return _beceb ._cbaaeg };var _ pdfFont =(*pdfCIDFontType0 )(nil );

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cgggc pdfFontType3 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){_cgfaf :=_cgggc .Encoder ();if _cgfaf ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cgggc );
return _fg .CharMetrics {},false ;};_dagb ,_fffbd :=_cgfaf .RuneToCharcode (r );if !_fffbd {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cgggc );
};return _fg .CharMetrics {},false ;};_fcgdf ,_ecga :=_cgggc .GetCharMetrics (_dagb );return _fcgdf ,_ecga ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bbfa .PdfObject ;BS _bbfa .PdfObject ;};type modelManager struct{_abbbd map[PdfModel ]_bbfa .PdfObject ;_cbgc map[_bbfa .PdfObject ]PdfModel ;_beag _g .RWMutex ;_gcgc _g .RWMutex ;
};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cggef *XObjectImage )GetContainingPdfObject ()_bbfa .PdfObject {return _cggef ._bgffa };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eggc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceee :=vals [0];if _ceee < 0.0||_ceee > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ceee );
return nil ,ErrColorOutOfRange ;};_dabfa :=vals [1];if _dabfa < 0.0||_dabfa > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dabfa );return nil ,ErrColorOutOfRange ;
};_afgf :=vals [2];if _afgf < 0.0||_afgf > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afgf );return nil ,ErrColorOutOfRange ;};_deagc :=vals [3];
if _deagc < 0.0||_deagc > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_deagc );return nil ,ErrColorOutOfRange ;};_egag :=NewPdfColorDeviceCMYK (_ceee ,_dabfa ,_afgf ,_deagc );
return _egag ,nil ;};func _ddccf (_dabef string )(string ,error ){var _fcfa _de .Buffer ;_fcfa .WriteString (_dabef );_cbbcae :=make ([]byte ,8+16);_egeec :=_ea .Now ().UTC ().UnixNano ();_dc .BigEndian .PutUint64 (_cbbcae ,uint64 (_egeec ));_ ,_dcadf :=_ca .Read (_cbbcae [8:]);
if _dcadf !=nil {return "",_dcadf ;};_fcfa .WriteString (_eaa .EncodeToString (_cbbcae ));return _fcfa .String (),nil ;};func (_aeedf *fontFile )loadFromSegments (_cgaea ,_bceff []byte )error {_df .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cgaea ),len (_bceff ));
_cbfg :=_aeedf .parseASCIIPart (_cgaea );if _cbfg !=nil {return _cbfg ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aeedf );if len (_bceff )==0{return nil ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aeedf );
return nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gdaca *PdfAcroForm )ToPdfObject ()_bbfa .PdfObject {_fdbge :=_gdaca ._dbddd ;_accdd :=_fdbge .PdfObject .(*_bbfa .PdfObjectDictionary );if _gdaca .Fields !=nil {_bffb :=_bbfa .PdfObjectArray {};for _ ,_cbgdb :=range *_gdaca .Fields {_ebbf :=_cbgdb .GetContext ();
if _ebbf !=nil {_bffb .Append (_ebbf .ToPdfObject ());}else {_bffb .Append (_cbgdb .ToPdfObject ());};};_accdd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_bffb );};if _gdaca .NeedAppearances !=nil {_accdd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gdaca .NeedAppearances );
}else {if _decad :=_accdd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_decad !=nil {_accdd .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _gdaca .SigFlags !=nil {_accdd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gdaca .SigFlags );
};if _gdaca .CO !=nil {_accdd .Set ("\u0043\u004f",_gdaca .CO );};if _gdaca .DR !=nil {_accdd .Set ("\u0044\u0052",_gdaca .DR .ToPdfObject ());};if _gdaca .DA !=nil {_accdd .Set ("\u0044\u0041",_gdaca .DA );};if _gdaca .Q !=nil {_accdd .Set ("\u0051",_gdaca .Q );
};if _gdaca .XFA !=nil {_accdd .Set ("\u0058\u0046\u0041",_gdaca .XFA );};if _gdaca .ADBEEchoSign !=nil {_accdd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_gdaca .ADBEEchoSign );};return _fdbge ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bbfa .PdfObject )(*PdfOutputIntent ,error ){_gebfdg :=&PdfOutputIntent {};if _geec :=_gebfdg .ParsePdfObject (object );_geec !=nil {return nil ,_geec ;};return _gebfdg ,nil ;};func _dggbe (_gdfd _bbfa .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_efacc :=NewPdfColorspaceSpecialSeparation ();
if _bgag ,_ebbba :=_gdfd .(*_bbfa .PdfIndirectObject );_ebbba {_efacc ._cgace =_bgag ;};_gdfd =_bbfa .TraceToDirectObject (_gdfd );_gebgb ,_gaebd :=_gdfd .(*_bbfa .PdfObjectArray );if !_gaebd {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gebgb .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gdfd =_gebgb .Get (0);
_egfb ,_gaebd :=_gdfd .(*_bbfa .PdfObjectName );if !_gaebd {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_egfb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gdfd =_gebgb .Get (1);_egfb ,_gaebd =_gdfd .(*_bbfa .PdfObjectName );if !_gaebd {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_efacc .ColorantName =_egfb ;_gdfd =_gebgb .Get (2);_ccbe ,_bdeb :=NewPdfColorspaceFromPdfObject (_gdfd );if _bdeb !=nil {return nil ,_bdeb ;};_efacc .AlternateSpace =_ccbe ;_gbcg ,_bdeb :=_fcgca (_gebgb .Get (3));if _bdeb !=nil {return nil ,_bdeb ;};
_efacc .TintTransform =_gbcg ;return _efacc ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fdeec :=PdfColorDeviceRGB {r ,g ,b };return &_fdeec ;};

// IsCID returns true if the underlying font is CID.
func (_abbb *PdfFont )IsCID ()bool {return _abbb .baseFields ().isCIDFont ()};

// IsValid checks if the given pdf output intent type is valid.
func (_beaeb PdfOutputIntentType )IsValid ()bool {return _beaeb >=PdfOutputIntentTypeA1 &&_beaeb <=PdfOutputIntentTypeX ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bbced :=PdfWriter {};_bbced ._fdaa =map[_bbfa .PdfObject ]struct{}{};_bbced ._ecdbe =[]_bbfa .PdfObject {};_bbced ._fgfff =map[_bbfa .PdfObject ][]*_bbfa .PdfObjectDictionary {};_bbced ._aeead =map[_bbfa .PdfObject ]struct{}{};
_bbced ._cbaaeg .Major =1;_bbced ._cbaaeg .Minor =3;_addd :=_bbfa .MakeDict ();_aeebe :=[]struct{_ffagef _bbfa .PdfObjectName ;_gcea string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dedgb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dgdga ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_geffb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ebbac ()},{"\u0054\u0069\u0074l\u0065",_dabab ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cddbcf ()}};
for _ ,_ggbbab :=range _aeebe {if _ggbbab ._gcea !=""{_addd .Set (_ggbbab ._ffagef ,_bbfa .MakeString (_ggbbab ._gcea ));};};if _fefda :=_ebfdfb ();!_fefda .IsZero (){if _bgefb ,_fabfc :=NewPdfDateFromTime (_fefda );_fabfc ==nil {_addd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bgefb .ToPdfObject ());
};};if _fbbbf :=_ffgdg ();!_fbbbf .IsZero (){if _ccgdd ,_cfcg :=NewPdfDateFromTime (_fbbbf );_cfcg ==nil {_addd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ccgdd .ToPdfObject ());};};_eeag :=_bbfa .PdfIndirectObject {};_eeag .PdfObject =_addd ;_bbced ._agfdbb =&_eeag ;
_bbced .addObject (&_eeag );_beead :=_bbfa .PdfIndirectObject {};_gaadb :=_bbfa .MakeDict ();_gaadb .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_beead .PdfObject =_gaadb ;_bbced ._abaae =&_beead ;_bbced .addObject (_bbced ._abaae );
_cfbcfb ,_ggdb :=_ddccf ("\u0077");if _ggdb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdb );};_bbced ._gagae =_cfbcfb ;_ggfdf :=_bbfa .PdfIndirectObject {};_cbbgc :=_bbfa .MakeDict ();_cbbgc .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0050\u0061\u0067e\u0073"));
_cgca :=_bbfa .PdfObjectArray {};_cbbgc .Set ("\u004b\u0069\u0064\u0073",&_cgca );_cbbgc .Set ("\u0043\u006f\u0075n\u0074",_bbfa .MakeInteger (0));_ggfdf .PdfObject =_cbbgc ;_bbced ._fcbdd =&_ggfdf ;_bbced ._bdceaa =map[_bbfa .PdfObject ]struct{}{};_bbced ._gfddc =[]*_bbfa .PdfIndirectObject {};
_bbced .addObject (_bbced ._fcbdd );_gaadb .Set ("\u0050\u0061\u0067e\u0073",&_ggfdf );_bbced ._cgfbd =_gaadb ;_df .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_beead );return _bbced ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_gdcfd *ViewerPreferences )IsHideToolbar ()bool {if _gdcfd ._bffef ==nil {return false ;};return *_gdcfd ._bffef ;};

// WriteString outputs the object as it is to be written to file.
func (_dfded *pdfSignDictionary )WriteString ()string {_dfded ._deaab =0;_dfded ._cadba =0;_dfded ._bbae =0;_dfded ._bdeee =0;_gfefd :=_de .NewBuffer (nil );_gfefd .WriteString ("\u003c\u003c");for _ ,_afaf :=range _dfded .Keys (){_babfd :=_dfded .Get (_afaf );
switch _afaf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gfefd .WriteString (_afaf .WriteString ());_gfefd .WriteString ("\u0020");_dfded ._bbae =_gfefd .Len ();_gfefd .WriteString (_babfd .WriteString ());_gfefd .WriteString ("\u0020");_dfded ._bdeee =_gfefd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gfefd .WriteString (_afaf .WriteString ());_gfefd .WriteString ("\u0020");_dfded ._deaab =_gfefd .Len ();_gfefd .WriteString (_babfd .WriteString ());_gfefd .WriteString ("\u0020");_dfded ._cadba =_gfefd .Len ()-1;
default:_gfefd .WriteString (_afaf .WriteString ());_gfefd .WriteString ("\u0020");_gfefd .WriteString (_babfd .WriteString ());};};_gfefd .WriteString ("\u003e\u003e");return _gfefd .String ();};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";
StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";
StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";StructureTypeTableHeaderCell ="\u0054\u0048";
StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ecd :=NewPdfAnnotation ();_eca :=&PdfAnnotationCircle {};_eca .PdfAnnotation =_ecd ;_eca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecd .SetContext (_eca );return _eca ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_eeg :=NewPdfAnnotation ();_gce :=&PdfAnnotationText {};_gce .PdfAnnotation =_eeg ;_gce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeg .SetContext (_gce );return _gce ;};func (_gaceg *DSS )generateHashMap (_eagd []*_bbfa .PdfObjectStream )(map[string ]*_bbfa .PdfObjectStream ,error ){_bdbdd :=map[string ]*_bbfa .PdfObjectStream {};
for _ ,_agfc :=range _eagd {_aaad ,_aegae :=_bbfa .DecodeStream (_agfc );if _aegae !=nil {return nil ,_aegae ;};_befc ,_aegae :=_dcefc (_aaad );if _aegae !=nil {return nil ,_aegae ;};_bdbdd [string (_befc )]=_agfc ;};return _bdbdd ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bbfa .PdfObject ;MK _bbfa .PdfObject ;A _bbfa .PdfObject ;AA _bbfa .PdfObject ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_eecc :=&PdfAnnotation {};_eecc ._dbge =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());return _eecc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bgdab *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bgdab .Base .GetNumComponents ();_faff :=int (vals [0])*N ;
if _faff < 0||(_faff +N -1)>=len (_bgdab ._aadc ){_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_faff );return nil ,ErrColorOutOfRange ;};_gebc :=_bgdab ._aadc [_faff :_faff +N ];
var _deegc []float64 ;for _ ,_egfdc :=range _gebc {_deegc =append (_deegc ,float64 (_egfdc )/255.0);};_gefe ,_aebga :=_bgdab .Base .ColorFromFloats (_deegc );if _aebga !=nil {return nil ,_aebga ;};return _gefe ,nil ;};func (_faf *PdfReader )newPdfAnnotationMarkupFromDict (_fedc *_bbfa .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_fdb :=&PdfAnnotationMarkup {};
if _cea :=_fedc .Get ("\u0054");_cea !=nil {_fdb .T =_cea ;};if _bga :=_fedc .Get ("\u0050\u006f\u0070u\u0070");_bga !=nil {_cadf ,_cadfa :=_bga .(*_bbfa .PdfIndirectObject );if !_cadfa {if _ ,_gfe :=_bga .(*_bbfa .PdfObjectNull );!_gfe {return nil ,_gf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_eag ,_acc :=_faf .newPdfAnnotationFromIndirectObject (_cadf );if _acc !=nil {return nil ,_acc ;};if _eag !=nil {_cadd ,_fecb :=_eag ._bgeb .(*PdfAnnotationPopup );if !_fecb {return nil ,_gf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_fdb .Popup =_cadd ;};};};if _ega :=_fedc .Get ("\u0043\u0041");_ega !=nil {_fdb .CA =_ega ;};if _geb :=_fedc .Get ("\u0052\u0043");_geb !=nil {_fdb .RC =_geb ;};if _gfda :=_fedc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_gfda !=nil {_fdb .CreationDate =_gfda ;};if _gdgf :=_fedc .Get ("\u0049\u0052\u0054");_gdgf !=nil {_fdb .IRT =_gdgf ;};if _eega :=_fedc .Get ("\u0053\u0075\u0062\u006a");_eega !=nil {_fdb .Subj =_eega ;};if _eafg :=_fedc .Get ("\u0052\u0054");_eafg !=nil {_fdb .RT =_eafg ;
};if _cga :=_fedc .Get ("\u0049\u0054");_cga !=nil {_fdb .IT =_cga ;};if _fgga :=_fedc .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fgga !=nil {_fdb .ExData =_fgga ;};return _fdb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gagg *PdfAnnotationRedact )ToPdfObject ()_bbfa .PdfObject {_gagg .PdfAnnotation .ToPdfObject ();_agee :=_gagg ._dbge ;_fbab :=_agee .PdfObject .(*_bbfa .PdfObjectDictionary );_gagg .PdfAnnotationMarkup .appendToPdfDictionary (_fbab );_fbab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_fbab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gagg .QuadPoints );_fbab .SetIfNotNil ("\u0049\u0043",_gagg .IC );_fbab .SetIfNotNil ("\u0052\u004f",_gagg .RO );_fbab .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gagg .OverlayText );
_fbab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gagg .Repeat );_fbab .SetIfNotNil ("\u0044\u0041",_gagg .DA );_fbab .SetIfNotNil ("\u0051",_gagg .Q );return _agee ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_eegf *PdfPageResources )GetExtGState (keyName _bbfa .PdfObjectName )(_bbfa .PdfObject ,bool ){if _eegf .ExtGState ==nil {return nil ,false ;};_edada ,_cgfca :=_bbfa .TraceToDirectObject (_eegf .ExtGState ).(*_bbfa .PdfObjectDictionary );if !_cgfca {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eegf .ExtGState );
return nil ,false ;};if _cecbcc :=_edada .Get (keyName );_cecbcc !=nil {return _cecbcc ,true ;};return nil ,false ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_afbd *PdfPage )RemoveWatermarkImage (name string )error {if _afbd .Resources !=nil &&_afbd .Resources .XObject !=nil {if _edfedg ,_gafd :=_bbfa .GetDict (_afbd .Resources .XObject );_gafd {for _ ,_aggb :=range _edfedg .Keys (){if name ==_aggb .String (){_afbd .removeXObj (_edfedg ,_aggb );
continue ;};_fbdge ,_gggeb :=_bbfa .GetStream (_edfedg .Get (_aggb ));if !_gggeb {continue ;};_daddg ,_gggeb :=_bbfa .GetDict (_fbdge .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_gggeb {continue ;};_eceg ,_gggeb :=_bbfa .GetDict (_daddg .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_gggeb {continue ;};if _eceg .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_eceg .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_afbd .removeXObj (_edfedg ,_aggb );};};};};_bdadg ,_adbgbg :=_afbd .GetAnnotations ();
if _adbgbg ==nil {_fdffc :=make ([]*PdfAnnotation ,0);for _ ,_dagea :=range _bdadg {switch _dagea .GetContext ().(type ){case *PdfAnnotationWatermark :default:_fdffc =append (_fdffc ,_dagea );};};_afbd .SetAnnotations (_fdffc );};return nil ;};func (_dcaa SignatureValidationResult )String ()string {var _adadad _de .Buffer ;
_adadad .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_dcaa .Name ));if _dcaa .Date ._fbfea > 0{_adadad .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_dcaa .Date .ToGoTime ().String ()));}else {_adadad .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_dcaa .Reason )> 0{_adadad .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dcaa .Reason ));}else {_adadad .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_dcaa .Location )> 0{_adadad .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dcaa .Location ));}else {_adadad .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_dcaa .ContactInfo )> 0{_adadad .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_dcaa .ContactInfo ));}else {_adadad .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_adadad .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_dcaa .Fields )));if _dcaa .IsSigned {_adadad .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_adadad .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _dcaa .IsVerified {_adadad .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_adadad .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _dcaa .IsTrusted {_adadad .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_adadad .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_dcaa .GeneralizedTime .IsZero (){_adadad .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_dcaa .GeneralizedTime .String ()));
};if _dcaa .DiffResults !=nil {_adadad .WriteString (_b .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_dcaa .DiffResults .IsPermitted ()));if len (_dcaa .DiffResults .Warnings )> 0{_adadad .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_bbbbba :=range _dcaa .DiffResults .Warnings {_adadad .WriteString (_b .Sprintf ("\u0009\u0025\u0073\u000a",_bbbbba ));};};if len (_dcaa .DiffResults .Errors )> 0{_adadad .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_gffa :=range _dcaa .DiffResults .Errors {_adadad .WriteString (_b .Sprintf ("\u0009\u0025\u0073\u000a",_gffa ));};};};if _dcaa .IsCrlFound {_adadad .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_adadad .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _dcaa .IsOcspFound {_adadad .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_adadad .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _adadad .String ();};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fdfbg :=&PdfColorspaceSpecialSeparation {};return _fdfbg ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _bbfa .PdfObjectName ;};func (_ege *PdfReader )newPdfActionImportDataFromDict (_bgeg *_bbfa .PdfObjectDictionary )(*PdfActionImportData ,error ){_fab ,_bfgc :=_cge (_bgeg .Get ("\u0046"));if _bfgc !=nil {return nil ,_bfgc ;
};return &PdfActionImportData {F :_fab },nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bbfa .PdfObjectName ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cdff *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _efgf []float64 ;for _feea :=0;_feea < _cdff .GetNumComponents ();_feea ++{_efgf =append (_efgf ,0.0,1.0);};return _efgf ;};const (_aegcb =0x00001;_bcca =0x00002;_cdca =0x00004;_gfab =0x00008;
_fbfb =0x00020;_fgef =0x00040;_dfdfa =0x10000;_gfff =0x20000;_ccbb =0x40000;);

// GetOptimizer returns current PDF optimizer.
func (_egbgbd *PdfWriter )GetOptimizer ()Optimizer {return _egbgbd ._bdaec };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fg .CharMetrics ;

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bbfa .PdfParser ;DiffPolicy _cgg .DiffPolicy ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bgdag *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bbfa .StreamEncoder )(*XObjectImage ,error ){_cade :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cade ,img ,cs ,encoder );};func (_gee *PdfReader )newPdfAnnotationCircleFromDict (_eagf *_bbfa .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fgf :=PdfAnnotationCircle {};
_dcbc ,_adge :=_gee .newPdfAnnotationMarkupFromDict (_eagf );if _adge !=nil {return nil ,_adge ;};_fgf .PdfAnnotationMarkup =_dcbc ;_fgf .BS =_eagf .Get ("\u0042\u0053");_fgf .IC =_eagf .Get ("\u0049\u0043");_fgf .BE =_eagf .Get ("\u0042\u0045");_fgf .RD =_eagf .Get ("\u0052\u0044");
return &_fgf ,nil ;};func (_acca *PdfWriter )writeBytes (_aceab []byte ){if _acca ._efgab !=nil {return ;};_eaea ,_daefd :=_acca ._gdcce .Write (_aceab );_acca ._efebf +=int64 (_eaea );_acca ._efgab =_daefd ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bbfa .PdfObject ;FontFamily _bbfa .PdfObject ;FontStretch _bbfa .PdfObject ;FontWeight _bbfa .PdfObject ;Flags _bbfa .PdfObject ;FontBBox _bbfa .PdfObject ;ItalicAngle _bbfa .PdfObject ;Ascent _bbfa .PdfObject ;Descent _bbfa .PdfObject ;
Leading _bbfa .PdfObject ;CapHeight _bbfa .PdfObject ;XHeight _bbfa .PdfObject ;StemV _bbfa .PdfObject ;StemH _bbfa .PdfObject ;AvgWidth _bbfa .PdfObject ;MaxWidth _bbfa .PdfObject ;MissingWidth _bbfa .PdfObject ;FontFile _bbfa .PdfObject ;FontFile2 _bbfa .PdfObject ;
FontFile3 _bbfa .PdfObject ;CharSet _bbfa .PdfObject ;_cgbfa int ;_fgegg float64 ;*fontFile ;_fcced *_fg .TtfType ;

// Additional entries for CIDFonts
Style _bbfa .PdfObject ;Lang _bbfa .PdfObject ;FD _bbfa .PdfObject ;CIDSet _bbfa .PdfObject ;_ccgbb *_bbfa .PdfIndirectObject ;};func (_cgeg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ddcb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cb .ReadSeeker )(*PdfReader ,error ){const _ecceb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fcebf (rs ,&ReaderOpts {LazyLoad :true },false ,_ecceb );
};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_eefd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_cbag :make ([]*KValue ,0),_ecdbc :-1}};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_gaae :=&PdfColorPatternType3 {};return _gaae };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_egdaa *XObjectImage )ToImage ()(*Image ,error ){_cefag :=&Image {};if _egdaa .Height ==nil {return nil ,_gf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cefag .Height =*_egdaa .Height ;if _egdaa .Width ==nil {return nil ,_gf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cefag .Width =*_egdaa .Width ;if _egdaa .BitsPerComponent ==nil {switch _egdaa .Filter .(type ){case *_bbfa .CCITTFaxEncoder ,*_bbfa .JBIG2Encoder :_cefag .BitsPerComponent =1;
case *_bbfa .LZWEncoder ,*_bbfa .RunLengthEncoder :_cefag .BitsPerComponent =8;default:return nil ,_gf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cefag .BitsPerComponent =*_egdaa .BitsPerComponent ;};_cefag .ColorComponents =_egdaa .ColorSpace .GetNumComponents ();_egdaa ._bgffa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbfa .MakeInteger (int64 (_cefag .ColorComponents )));
_aecbeg ,_adcfb :=_bbfa .DecodeStream (_egdaa ._bgffa );if _adcfb !=nil {return nil ,_adcfb ;};_cefag .Data =_aecbeg ;if _egdaa .Decode !=nil {_daacf ,_fagaf :=_egdaa .Decode .(*_bbfa .PdfObjectArray );if !_fagaf {_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_gf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bagbe ,_fbbgf :=_daacf .ToFloat64Array ();if _fbbgf !=nil {return nil ,_fbbgf ;};switch _egdaa .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_afggd :=_egdaa .ColorSpace .DecodeArray ();
if _afggd [0]==_bagbe [0]&&_afggd [1]==_bagbe [1]&&_afggd [2]==_bagbe [2]&&_afggd [3]==_bagbe [3]{_cefag ._acgd =_bagbe ;};default:_cefag ._acgd =_bagbe ;};};return _cefag ,nil ;};func (_cbcdgf *PdfWriter )setDocInfo (_feba _bbfa .PdfObject ){if _cbcdgf .hasObject (_cbcdgf ._agfdbb ){delete (_cbcdgf ._fdaa ,_cbcdgf ._agfdbb );
delete (_cbcdgf ._aeead ,_cbcdgf ._agfdbb );for _ddbe ,_gfcd :=range _cbcdgf ._ecdbe {if _gfcd ==_cbcdgf ._agfdbb {copy (_cbcdgf ._ecdbe [_ddbe :],_cbcdgf ._ecdbe [_ddbe +1:]);_cbcdgf ._ecdbe [len (_cbcdgf ._ecdbe )-1]=nil ;_cbcdgf ._ecdbe =_cbcdgf ._ecdbe [:len (_cbcdgf ._ecdbe )-1];
break ;};};};_gabgc :=_bbfa .PdfIndirectObject {};_gabgc .PdfObject =_feba ;_cbcdgf ._agfdbb =&_gabgc ;_cbcdgf .addObject (&_gabgc );};

// Height returns the height of `rect`.
func (_dbfaab *PdfRectangle )Height ()float64 {return _dg .Abs (_dbfaab .Ury -_dbfaab .Lly )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_efac *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abce ,_cfgg :=_bbfa .GetNumbersAsFloat (objects );
if _cfgg !=nil {return nil ,_cfgg ;};return _efac .ColorFromFloats (_abce );};

// Encoder returns the font's text encoder.
func (_abgb pdfCIDFontType2 )Encoder ()_efd .TextEncoder {return _abgb ._dacc };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// Evaluate runs the function on the passed in slice and returns the results.
func (_bedeg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_bedeg .NumInputs {_df .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_gf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _bedeg ._fgdc ==nil {_cdbce :=_bedeg .processSamples ();if _cdbce !=nil {return nil ,_cdbce ;};};_ecdce :=_bedeg .Encode ;if _ecdce ==nil {_ecdce =[]float64 {};
for _feacd :=0;_feacd < len (_bedeg .Size );_feacd ++{_ecdce =append (_ecdce ,0);_ecdce =append (_ecdce ,float64 (_bedeg .Size [_feacd ]-1));};};_aged :=_bedeg .Decode ;if _aged ==nil {_aged =_bedeg .Range ;};_cbbda :=make ([]int ,len (x ));for _ggcab :=0;
_ggcab < len (x );_ggcab ++{_gaafb :=x [_ggcab ];_gdccb :=_dg .Min (_dg .Max (_gaafb ,_bedeg .Domain [2*_ggcab ]),_bedeg .Domain [2*_ggcab +1]);_bbddd :=_bbf .LinearInterpolate (_gdccb ,_bedeg .Domain [2*_ggcab ],_bedeg .Domain [2*_ggcab +1],_ecdce [2*_ggcab ],_ecdce [2*_ggcab +1]);
_efbfc :=_dg .Min (_dg .Max (_bbddd ,0),float64 (_bedeg .Size [_ggcab ]-1));_febge :=int (_dg .Floor (_efbfc +0.5));if _febge < 0{_febge =0;}else if _febge > _bedeg .Size [_ggcab ]{_febge =_bedeg .Size [_ggcab ]-1;};_cbbda [_ggcab ]=_febge ;};_eceda :=_cbbda [0];
for _eege :=1;_eege < _bedeg .NumInputs ;_eege ++{_gedcb :=_cbbda [_eege ];for _fadbb :=0;_fadbb < _eege ;_fadbb ++{_gedcb *=_bedeg .Size [_fadbb ];};_eceda +=_gedcb ;};_eceda *=_bedeg .NumOutputs ;var _fdafc []float64 ;for _fcggc :=0;_fcggc < _bedeg .NumOutputs ;
_fcggc ++{_agaf :=_eceda +_fcggc ;if _agaf >=len (_bedeg ._fgdc ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_egded :=_bedeg ._fgdc [_agaf ];_dbdda :=_bbf .LinearInterpolate (float64 (_egded ),0,_dg .Pow (2,float64 (_bedeg .BitsPerSample )),_aged [2*_fcggc ],_aged [2*_fcggc +1]);_ebfbc :=_dg .Min (_dg .Max (_dbdda ,_bedeg .Range [2*_fcggc ]),_bedeg .Range [2*_fcggc +1]);
_fdafc =append (_fdafc ,_ebfbc );};return _fdafc ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_bccb :=NewPdfAnnotation ();_acbf :=&PdfAnnotationStamp {};_acbf .PdfAnnotation =_bccb ;_acbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bccb .SetContext (_acbf );return _acbf ;};func _ebbce (_dcffc *_bbfa .PdfObjectDictionary )(*PdfShadingType6 ,error ){_edgfa :=PdfShadingType6 {};
_eccb :=_dcffc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eccb ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dafcc ,_ffdag :=_eccb .(*_bbfa .PdfObjectInteger );if !_ffdag {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eccb );
return nil ,_bbfa .ErrTypeError ;};_edgfa .BitsPerCoordinate =_dafcc ;_eccb =_dcffc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eccb ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dafcc ,_ffdag =_eccb .(*_bbfa .PdfObjectInteger );if !_ffdag {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eccb );
return nil ,_bbfa .ErrTypeError ;};_edgfa .BitsPerComponent =_dafcc ;_eccb =_dcffc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eccb ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dafcc ,_ffdag =_eccb .(*_bbfa .PdfObjectInteger );if !_ffdag {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eccb );
return nil ,_bbfa .ErrTypeError ;};_edgfa .BitsPerComponent =_dafcc ;_eccb =_dcffc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eccb ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_facdc ,_ffdag :=_eccb .(*_bbfa .PdfObjectArray );if !_ffdag {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eccb );
return nil ,_bbfa .ErrTypeError ;};_edgfa .Decode =_facdc ;if _bffeb :=_dcffc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bffeb !=nil {_edgfa .Function =[]PdfFunction {};if _gfgcf ,_afcfd :=_bffeb .(*_bbfa .PdfObjectArray );_afcfd {for _ ,_ecdfe :=range _gfgcf .Elements (){_aecec ,_gbgf :=_fcgca (_ecdfe );
if _gbgf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbgf );return nil ,_gbgf ;};_edgfa .Function =append (_edgfa .Function ,_aecec );
};}else {_dedeb ,_gbac :=_fcgca (_bffeb );if _gbac !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbac );return nil ,_gbac ;};
_edgfa .Function =append (_edgfa .Function ,_dedeb );};};return &_edgfa ,nil ;};func (_dbb *PdfReader )newPdfActionFromIndirectObject (_beg *_bbfa .PdfIndirectObject )(*PdfAction ,error ){_aae ,_ggf :=_beg .PdfObject .(*_bbfa .PdfObjectDictionary );if !_ggf {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dbb ._accb .GetModelFromPrimitive (_aae );model !=nil {_fce ,_cada :=model .(*PdfAction );if !_cada {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _fce ,nil ;};_ffc :=&PdfAction {};_ffc ._ff =_beg ;_dbb ._accb .Register (_aae ,_ffc );if _ceb :=_aae .Get ("\u0054\u0079\u0070\u0065");_ceb !=nil {_eab ,_dbe :=_ceb .(*_bbfa .PdfObjectName );if !_dbe {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ceb );
}else {if *_eab !="\u0041\u0063\u0074\u0069\u006f\u006e"{_df .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eab );
};_ffc .Type =_eab ;};};if _agf :=_aae .Get ("\u004e\u0065\u0078\u0074");_agf !=nil {_ffc .Next =_agf ;};if _ebg :=_aae .Get ("\u0053");_ebg !=nil {_ffc .S =_ebg ;};_ace ,_gaaf :=_ffc .S .(*_bbfa .PdfObjectName );if !_gaaf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ffc .S );
return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ffc .S );};_eeb :=PdfActionType (_ace .String ());
switch _eeb {case ActionTypeGoTo :_aad ,_afc :=_dbb .newPdfActionGotoFromDict (_aae );if _afc !=nil {return nil ,_afc ;};_aad .PdfAction =_ffc ;_ffc ._cad =_aad ;return _ffc ,nil ;case ActionTypeGoToR :_ddg ,_bff :=_dbb .newPdfActionGotoRFromDict (_aae );
if _bff !=nil {return nil ,_bff ;};_ddg .PdfAction =_ffc ;_ffc ._cad =_ddg ;return _ffc ,nil ;case ActionTypeGoToE :_agc ,_feeb :=_dbb .newPdfActionGotoEFromDict (_aae );if _feeb !=nil {return nil ,_feeb ;};_agc .PdfAction =_ffc ;_ffc ._cad =_agc ;return _ffc ,nil ;
case ActionTypeLaunch :_gdc ,_eae :=_dbb .newPdfActionLaunchFromDict (_aae );if _eae !=nil {return nil ,_eae ;};_gdc .PdfAction =_ffc ;_ffc ._cad =_gdc ;return _ffc ,nil ;case ActionTypeThread :_aed ,_dbf :=_dbb .newPdfActionThreadFromDict (_aae );if _dbf !=nil {return nil ,_dbf ;
};_aed .PdfAction =_ffc ;_ffc ._cad =_aed ;return _ffc ,nil ;case ActionTypeURI :_ebc ,_bbfg :=_dbb .newPdfActionURIFromDict (_aae );if _bbfg !=nil {return nil ,_bbfg ;};_ebc .PdfAction =_ffc ;_ffc ._cad =_ebc ;return _ffc ,nil ;case ActionTypeSound :_ccfa ,_caec :=_dbb .newPdfActionSoundFromDict (_aae );
if _caec !=nil {return nil ,_caec ;};_ccfa .PdfAction =_ffc ;_ffc ._cad =_ccfa ;return _ffc ,nil ;case ActionTypeMovie :_aec ,_ffde :=_dbb .newPdfActionMovieFromDict (_aae );if _ffde !=nil {return nil ,_ffde ;};_aec .PdfAction =_ffc ;_ffc ._cad =_aec ;
return _ffc ,nil ;case ActionTypeHide :_dgg ,_dfd :=_dbb .newPdfActionHideFromDict (_aae );if _dfd !=nil {return nil ,_dfd ;};_dgg .PdfAction =_ffc ;_ffc ._cad =_dgg ;return _ffc ,nil ;case ActionTypeNamed :_gcb ,_egbb :=_dbb .newPdfActionNamedFromDict (_aae );
if _egbb !=nil {return nil ,_egbb ;};_gcb .PdfAction =_ffc ;_ffc ._cad =_gcb ;return _ffc ,nil ;case ActionTypeSubmitForm :_gaef ,_cfd :=_dbb .newPdfActionSubmitFormFromDict (_aae );if _cfd !=nil {return nil ,_cfd ;};_gaef .PdfAction =_ffc ;_ffc ._cad =_gaef ;
return _ffc ,nil ;case ActionTypeResetForm :_ecc ,_gefa :=_dbb .newPdfActionResetFormFromDict (_aae );if _gefa !=nil {return nil ,_gefa ;};_ecc .PdfAction =_ffc ;_ffc ._cad =_ecc ;return _ffc ,nil ;case ActionTypeImportData :_fbf ,_bcfd :=_dbb .newPdfActionImportDataFromDict (_aae );
if _bcfd !=nil {return nil ,_bcfd ;};_fbf .PdfAction =_ffc ;_ffc ._cad =_fbf ;return _ffc ,nil ;case ActionTypeSetOCGState :_dddd ,_eaf :=_dbb .newPdfActionSetOCGStateFromDict (_aae );if _eaf !=nil {return nil ,_eaf ;};_dddd .PdfAction =_ffc ;_ffc ._cad =_dddd ;
return _ffc ,nil ;case ActionTypeRendition :_baf ,_eef :=_dbb .newPdfActionRenditionFromDict (_aae );if _eef !=nil {return nil ,_eef ;};_baf .PdfAction =_ffc ;_ffc ._cad =_baf ;return _ffc ,nil ;case ActionTypeTrans :_gcf ,_fcd :=_dbb .newPdfActionTransFromDict (_aae );
if _fcd !=nil {return nil ,_fcd ;};_gcf .PdfAction =_ffc ;_ffc ._cad =_gcf ;return _ffc ,nil ;case ActionTypeGoTo3DView :_bbe ,_bebf :=_dbb .newPdfActionGoTo3DViewFromDict (_aae );if _bebf !=nil {return nil ,_bebf ;};_bbe .PdfAction =_ffc ;_ffc ._cad =_bbe ;
return _ffc ,nil ;case ActionTypeJavaScript :_ged ,_dae :=_dbb .newPdfActionJavaScriptFromDict (_aae );if _dae !=nil {return nil ,_dae ;};_ged .PdfAction =_ffc ;_ffc ._cad =_ged ;return _ffc ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_eeb );
return nil ,nil ;};func (_gecbec *PdfWriter )copyObject (_dcbb _bbfa .PdfObject ,_bfdabb map[_bbfa .PdfObject ]_bbfa .PdfObject ,_cdafb map[_bbfa .PdfObject ]struct{},_gdebg bool )_bbfa .PdfObject {_dafgb :=!_gecbec ._fccec &&_cdafb !=nil ;if _cdfcc ,_abdfg :=_bfdabb [_dcbb ];
_abdfg {if _dafgb &&!_gdebg {delete (_cdafb ,_dcbb );};return _cdfcc ;};if _dcbb ==nil {_cbagd :=_bbfa .MakeNull ();return _cbagd ;};_bcag :=_dcbb ;switch _cfdbd :=_dcbb .(type ){case *_bbfa .PdfObjectArray :_beda :=_bbfa .MakeArray ();_bcag =_beda ;_bfdabb [_dcbb ]=_bcag ;
for _ ,_acgbfc :=range _cfdbd .Elements (){_beda .Append (_gecbec .copyObject (_acgbfc ,_bfdabb ,_cdafb ,_gdebg ));};case *_bbfa .PdfObjectStreams :_afggc :=&_bbfa .PdfObjectStreams {PdfObjectReference :_cfdbd .PdfObjectReference };_bcag =_afggc ;_bfdabb [_dcbb ]=_bcag ;
for _ ,_caecbg :=range _cfdbd .Elements (){_afggc .Append (_gecbec .copyObject (_caecbg ,_bfdabb ,_cdafb ,_gdebg ));};case *_bbfa .PdfObjectStream :_gfadbd :=&_bbfa .PdfObjectStream {Stream :_cfdbd .Stream ,PdfObjectReference :_cfdbd .PdfObjectReference ,Lazy :_cfdbd .Lazy ,TempFile :_cfdbd .TempFile };
_bcag =_gfadbd ;_bfdabb [_dcbb ]=_bcag ;_gfadbd .PdfObjectDictionary =_gecbec .copyObject (_cfdbd .PdfObjectDictionary ,_bfdabb ,_cdafb ,_gdebg ).(*_bbfa .PdfObjectDictionary );case *_bbfa .PdfObjectDictionary :var _bgadb bool ;if _dafgb &&!_gdebg {if _aadaa ,_ :=_bbfa .GetNameVal (_cfdbd .Get ("\u0054\u0079\u0070\u0065"));
_aadaa =="\u0050\u0061\u0067\u0065"{_ ,_aafafd :=_gecbec ._bdceaa [_cfdbd ];_gdebg =!_aafafd ;_bgadb =_gdebg ;};};_dgdae :=_bbfa .MakeDict ();_bcag =_dgdae ;_bfdabb [_dcbb ]=_bcag ;for _ ,_bfbaa :=range _cfdbd .Keys (){_dgdae .Set (_bfbaa ,_gecbec .copyObject (_cfdbd .Get (_bfbaa ),_bfdabb ,_cdafb ,_gdebg ));
};if _bgadb {_bcag =_bbfa .MakeNull ();_gdebg =false ;};case *_bbfa .PdfIndirectObject :_cabae :=&_bbfa .PdfIndirectObject {PdfObjectReference :_cfdbd .PdfObjectReference };_bcag =_cabae ;_bfdabb [_dcbb ]=_bcag ;_cabae .PdfObject =_gecbec .copyObject (_cfdbd .PdfObject ,_bfdabb ,_cdafb ,_gdebg );
case *_bbfa .PdfObjectString :_degdc :=*_cfdbd ;_bcag =&_degdc ;_bfdabb [_dcbb ]=_bcag ;case *_bbfa .PdfObjectName :_bdcfd :=*_cfdbd ;_bcag =&_bdcfd ;_bfdabb [_dcbb ]=_bcag ;case *_bbfa .PdfObjectNull :_bcag =_bbfa .MakeNull ();_bfdabb [_dcbb ]=_bcag ;
case *_bbfa .PdfObjectInteger :_ddgcf :=*_cfdbd ;_bcag =&_ddgcf ;_bfdabb [_dcbb ]=_bcag ;case *_bbfa .PdfObjectReference :_bcabb :=*_cfdbd ;_bcag =&_bcabb ;_bfdabb [_dcbb ]=_bcag ;case *_bbfa .PdfObjectFloat :_fbde :=*_cfdbd ;_bcag =&_fbde ;_bfdabb [_dcbb ]=_bcag ;
case *_bbfa .PdfObjectBool :_ggbea :=*_cfdbd ;_bcag =&_ggbea ;_bfdabb [_dcbb ]=_bcag ;case *pdfSignDictionary :_afgcbge :=&pdfSignDictionary {PdfObjectDictionary :_bbfa .MakeDict (),_dbaad :_cfdbd ._dbaad ,_cegcg :_cfdbd ._cegcg };_bcag =_afgcbge ;_bfdabb [_dcbb ]=_bcag ;
for _ ,_gcbfgf :=range _cfdbd .Keys (){_afgcbge .Set (_gcbfgf ,_gecbec .copyObject (_cfdbd .Get (_gcbfgf ),_bfdabb ,_cdafb ,_gdebg ));};default:_df .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_dcbb );
};if _dafgb &&_gdebg {_cdafb [_dcbb ]=struct{}{};};return _bcag ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_afage *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject implements interface PdfModel.
func (_edb *PdfAnnotationSquiggly )ToPdfObject ()_bbfa .PdfObject {_edb .PdfAnnotation .ToPdfObject ();_adee :=_edb ._dbge ;_bdcg :=_adee .PdfObject .(*_bbfa .PdfObjectDictionary );_edb .PdfAnnotationMarkup .appendToPdfDictionary (_bdcg );_bdcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bdcg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_edb .QuadPoints );return _adee ;};func _facgc (_ecdge *_bbfa .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebgff :=&PdfTilingPattern {};_gdcdf :=_ecdge .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _gdcdf ==nil {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cagde ,_aafbb :=_gdcdf .(*_bbfa .PdfObjectInteger );if !_aafbb {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gdcdf );
return nil ,_bbfa .ErrTypeError ;};_ebgff .PaintType =_cagde ;_gdcdf =_ecdge .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gdcdf ==nil {_df .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbaeb ,_aafbb :=_gdcdf .(*_bbfa .PdfObjectInteger );if !_aafbb {_df .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdcdf );
return nil ,_bbfa .ErrTypeError ;};_ebgff .TilingType =_dbaeb ;_gdcdf =_ecdge .Get ("\u0042\u0042\u006f\u0078");if _gdcdf ==nil {_df .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gdcdf =_bbfa .TraceToDirectObject (_gdcdf );_gaad ,_aafbb :=_gdcdf .(*_bbfa .PdfObjectArray );if !_aafbb {_df .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdcdf );
return nil ,_bbfa .ErrTypeError ;};_dgbgd ,_eeaf :=NewPdfRectangle (*_gaad );if _eeaf !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_eeaf );return nil ,_eeaf ;};_ebgff .BBox =_dgbgd ;_gdcdf =_ecdge .Get ("\u0058\u0053\u0074e\u0070");
if _gdcdf ==nil {_df .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_caede ,_eeaf :=_bbfa .GetNumberAsFloat (_gdcdf );if _eeaf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_caede );
return nil ,_eeaf ;};_ebgff .XStep =_bbfa .MakeFloat (_caede );_gdcdf =_ecdge .Get ("\u0059\u0053\u0074e\u0070");if _gdcdf ==nil {_df .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ebfda ,_eeaf :=_bbfa .GetNumberAsFloat (_gdcdf );if _eeaf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ebfda );
return nil ,_eeaf ;};_ebgff .YStep =_bbfa .MakeFloat (_ebfda );_gdcdf =_ecdge .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gdcdf ==nil {_df .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ecdge ,_aafbb =_bbfa .TraceToDirectObject (_gdcdf ).(*_bbfa .PdfObjectDictionary );if !_aafbb {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdcdf );
};_aacg ,_eeaf :=NewPdfPageResourcesFromDict (_ecdge );if _eeaf !=nil {return nil ,_eeaf ;};_ebgff .Resources =_aacg ;if _aeabb :=_ecdge .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aeabb !=nil {_bfddc ,_fadaa :=_aeabb .(*_bbfa .PdfObjectArray );if !_fadaa {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeabb );
return nil ,_bbfa .ErrTypeError ;};_ebgff .Matrix =_bfddc ;};return _ebgff ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_addf *Image )GetSamples ()[]uint32 {_ebcf :=_cgb .ResampleBytes (_addf .Data ,int (_addf .BitsPerComponent ));if _addf .BitsPerComponent < 8{_ebcf =_addf .samplesTrimPadding (_ebcf );};_effg :=int (_addf .Width )*int (_addf .Height )*_addf .ColorComponents ;
if len (_ebcf )< _effg {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ebcf ),_effg );
return _ebcf ;}else if len (_ebcf )> _effg {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ebcf ),_effg );
_ebcf =_ebcf [:_effg ];};return _ebcf ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_eaef :=NewPdfAnnotation ();_geac :=&PdfAnnotationFileAttachment {};_geac .PdfAnnotation =_eaef ;_geac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaef .SetContext (_geac );return _geac ;
};

// SetPrintClip sets the value of the printClip.
func (_dddbg *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_dddbg ._dcfaa =printClip };

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_efdd *Image )Resample (targetBitsPerComponent int64 ){if _efdd .BitsPerComponent ==targetBitsPerComponent {return ;};_bfacc :=_efdd .GetSamples ();if targetBitsPerComponent < _efdd .BitsPerComponent {_abdfa :=_efdd .BitsPerComponent -targetBitsPerComponent ;
for _fdddg :=range _bfacc {_bfacc [_fdddg ]>>=uint (_abdfa );};}else if targetBitsPerComponent > _efdd .BitsPerComponent {_ecec :=targetBitsPerComponent -_efdd .BitsPerComponent ;for _dagcb :=range _bfacc {_bfacc [_dagcb ]<<=uint (_ecec );};};_efdd .BitsPerComponent =targetBitsPerComponent ;
if _efdd .BitsPerComponent < 8{_efdd .resampleLowBits (_bfacc );return ;};_fcbbf :=_bbf .BytesPerLine (int (_efdd .Width ),int (_efdd .BitsPerComponent ),_efdd .ColorComponents );_bcfad :=make ([]byte ,_fcbbf *int (_efdd .Height ));var (_efddc ,_febfdg ,_bbda ,_cdaef int ;
_dggg uint32 ;);for _bbda =0;_bbda < int (_efdd .Height );_bbda ++{_efddc =_bbda *_fcbbf ;_febfdg =(_bbda +1)*_fcbbf -1;_fefac :=_cgb .ResampleUint32 (_bfacc [_efddc :_febfdg ],int (targetBitsPerComponent ),8);for _cdaef ,_dggg =range _fefac {_bcfad [_cdaef +_efddc ]=byte (_dggg );
};};_efdd .Data =_bcfad ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgfge *PdfShadingType5 )ToPdfObject ()_bbfa .PdfObject {_cgfge .PdfShading .ToPdfObject ();_daagd ,_egfcb :=_cgfge .getShadingDict ();if _egfcb !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgfge .BitsPerCoordinate !=nil {_daagd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgfge .BitsPerCoordinate );};if _cgfge .BitsPerComponent !=nil {_daagd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgfge .BitsPerComponent );
};if _cgfge .VerticesPerRow !=nil {_daagd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cgfge .VerticesPerRow );};if _cgfge .Decode !=nil {_daagd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgfge .Decode );};
if _cgfge .Function !=nil {if len (_cgfge .Function )==1{_daagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgfge .Function [0].ToPdfObject ());}else {_gabag :=_bbfa .MakeArray ();for _ ,_gaag :=range _cgfge .Function {_gabag .Append (_gaag .ToPdfObject ());
};_daagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gabag );};};return _cgfge ._facd ;};

// GetCatalogLanguage gets catalog Language object.
func (_cgff *PdfReader )GetCatalogLanguage ()(_bbfa .PdfObject ,bool ){if _cgff ._abdcg ==nil {return nil ,false ;};_cgade :=_cgff ._abdcg .Get ("\u004c\u0061\u006e\u0067");return _cgade ,_cgade !=nil ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _bbfa .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_cggga :=NewXObjectImage ();if lazy {_feegf ,_addfa :=UpdateXObjectImageFromImage (_cggga ,img ,cs ,encoder );if _addfa !=nil {return nil ,_addfa ;
};_feegf .ToPdfObject ();_addfa =_feegf ._bgffa .MakeLazy ();if _addfa !=nil {return nil ,_addfa ;};_feegf .Stream =nil ;return _feegf ,nil ;};return UpdateXObjectImageFromImage (_cggga ,img ,cs ,encoder );};

// C returns the value of the C component of the color.
func (_cacd *PdfColorCalRGB )C ()float64 {return _cacd [2]};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func _cffff (_fegg *_bbfa .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fgagac :=PdfShadingType5 {};_caedec :=_fegg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _caedec ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eegdeg ,_gdbdd :=_caedec .(*_bbfa .PdfObjectInteger );if !_gdbdd {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caedec );
return nil ,_bbfa .ErrTypeError ;};_fgagac .BitsPerCoordinate =_eegdeg ;_caedec =_fegg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _caedec ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eegdeg ,_gdbdd =_caedec .(*_bbfa .PdfObjectInteger );if !_gdbdd {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_caedec );
return nil ,_bbfa .ErrTypeError ;};_fgagac .BitsPerComponent =_eegdeg ;_caedec =_fegg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _caedec ==nil {_df .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_eegdeg ,_gdbdd =_caedec .(*_bbfa .PdfObjectInteger );if !_gdbdd {_df .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_caedec );
return nil ,_bbfa .ErrTypeError ;};_fgagac .VerticesPerRow =_eegdeg ;_caedec =_fegg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _caedec ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgccd ,_gdbdd :=_caedec .(*_bbfa .PdfObjectArray );if !_gdbdd {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_caedec );
return nil ,_bbfa .ErrTypeError ;};_fgagac .Decode =_fgccd ;if _ebgga :=_fegg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebgga !=nil {_fgagac .Function =[]PdfFunction {};if _bggdb ,_cfdef :=_ebgga .(*_bbfa .PdfObjectArray );_cfdef {for _ ,_dceed :=range _bggdb .Elements (){_bcdeb ,_gced :=_fcgca (_dceed );
if _gced !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gced );return nil ,_gced ;};_fgagac .Function =append (_fgagac .Function ,_bcdeb );
};}else {_aeecg ,_acdc :=_fcgca (_ebgga );if _acdc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acdc );return nil ,_acdc ;};
_fgagac .Function =append (_fgagac .Function ,_aeecg );};};return &_fgagac ,nil ;};

// SetViewClip sets the value of the viewClip.
func (_dfdgc *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_dfdgc ._ggbae =viewClip };

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_dbddd :_bbfa .MakeIndirectObject (_bbfa .MakeDict ())};};

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfActionSubmitForm )ToPdfObject ()_bbfa .PdfObject {_cgd .PdfAction .ToPdfObject ();_gde :=_cgd ._ff ;_egc :=_gde .PdfObject .(*_bbfa .PdfObjectDictionary );_egc .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeSubmitForm )));if _cgd .F !=nil {_egc .Set ("\u0046",_cgd .F .ToPdfObject ());
};_egc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cgd .Fields );_egc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cgd .Flags );return _gde ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_eaaaa *PdfReader )CheckAccessRights (password []byte )(bool ,_fb .Permissions ,error ){return _eaaaa ._fdefeb .CheckAccessRights (password );};func (_ecge fontCommon )isCIDFont ()bool {if _ecge ._eebdg ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecge );
};_fbaaa :=false ;switch _ecge ._eebdg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fbaaa =true ;};_df .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fbaaa ,_ecge );
return _fbaaa ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_cedfc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func (_eabdb *Names )addEmbeddedFile (_agff *EmbeddedFile )error {if _eabdb .EmbeddedFiles ==nil {_eabdb .EmbeddedFiles =_bbfa .MakeDict ();_eabdb .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_bbfa .MakeArray ());
};_faeag :=NewPdfFileSpecFromEmbeddedFile (_agff );_gfbac :=_eabdb .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ecced ,_baaf :=_gfbac .(*_bbfa .PdfObjectArray );if !_baaf {return _gf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_fceg string ;_ffdba *PdfFilespec ;};_bcefg :=[]FileSpecMap {};for _bccg :=0;_bccg < len (_ecced .Elements ());_bccg +=2{if _bccg %2==0{_dgab :=_ecced .Get (_bccg );if _dgab !=nil {_abcab :=_dgab .(*_bbfa .PdfObjectString );_cdge :=_ecced .Get (_bccg +1);
_eface ,_aadcd :=NewPdfFilespecFromObj (_cdge );if _aadcd !=nil {return _aadcd ;};_bcefg =append (_bcefg ,FileSpecMap {_fceg :_abcab .String (),_ffdba :_eface });};};};_bcefg =append (_bcefg ,FileSpecMap {_fceg :_agff .Name ,_ffdba :_faeag });_da .Slice (_bcefg ,func (_aacde ,_gbfbb int )bool {return _bcefg [_aacde ]._fceg < _bcefg [_gbfbb ]._fceg });
_ecced =_bbfa .MakeArray ();for _ ,_bcfgc :=range _bcefg {_ecced .Append (_bbfa .MakeString (_bcfgc ._fceg ));_ecced .Append (_bcfgc ._ffdba .ToPdfObject ());};_eabdb .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ecced );return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_aced *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgeab ,_ccbfe :=color .(*PdfColorPattern );if !_ccbfe {_df .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _cgeab .Color ==nil {return color ,nil ;};if _aced .UnderlyingCS ==nil {return nil ,_gf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _aced .UnderlyingCS .ColorToRGB (_cgeab .Color );
};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_egbgd *_bbfa .PdfObjectDictionary ;Type *_bbfa .PdfObjectName ;TransformMethod *_bbfa .PdfObjectName ;TransformParams _bbfa .PdfObject ;Data _bbfa .PdfObject ;DigestMethod *_bbfa .PdfObjectName ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dgf .File ,error ){const _acdgf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_febdf ,_gadeb :=_dgf .Open (pdfFile );if _gadeb !=nil {return nil ,nil ,_gadeb ;};_daegb ,_gadeb :=_fcebf (_febdf ,opts ,true ,_acdgf );if _gadeb !=nil {_febdf .Close ();return nil ,nil ,_gadeb ;};_daegb ._affg =pdfFile ;return _daegb ,_febdf ,nil ;};


// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dggb _cb .ReadSeeker ;_dgdb *_bbfa .PdfParser ;_deeg *PdfReader ;Reader *PdfReader ;_cefa []*PdfPage ;_dgca *PdfAcroForm ;_bdbd *DSS ;_dddg *Permissions ;_fac _bbfa .XrefTable ;_eagc int64 ;_adgg int ;_fgee []_bbfa .PdfObject ;
_bbddc map[_bbfa .PdfObject ]struct{};_ccge map[_bbfa .PdfObject ]int64 ;_cca map[_bbfa .PdfObject ]struct{};_febe map[_bbfa .PdfObject ]struct{};_gfdf int64 ;_dbdcc bool ;_dbgeb string ;_efee *EncryptOptions ;_gfg *PdfInfo ;};func (_acbaa *PdfSignature )extractChainFromCert ()([]*_fe .Certificate ,error ){var _degfd *_bbfa .PdfObjectArray ;
switch _cafgg :=_acbaa .Cert .(type ){case *_bbfa .PdfObjectString :_degfd =_bbfa .MakeArray (_cafgg );case *_bbfa .PdfObjectArray :_degfd =_cafgg ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cafgg );
};var _eacfg _de .Buffer ;for _ ,_abfdc :=range _degfd .Elements (){_cbcb ,_cafeg :=_bbfa .GetString (_abfdc );if !_cafeg {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_abfdc );
};if _ ,_gadcd :=_eacfg .Write (_cbcb .Bytes ());_gadcd !=nil {return nil ,_gadcd ;};};return _fe .ParseCertificates (_eacfg .Bytes ());};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_egfde *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bffe ,_deeb :=color .(*PdfColorCalRGB );if !_deeb {_df .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcgdc :=_bffe .A ();_dgedg :=_bffe .B ();_cbca :=_bffe .C ();X :=_egfde .Matrix [0]*_dg .Pow (_fcgdc ,_egfde .Gamma [0])+_egfde .Matrix [3]*_dg .Pow (_dgedg ,_egfde .Gamma [1])+_egfde .Matrix [6]*_dg .Pow (_cbca ,_egfde .Gamma [2]);
Y :=_egfde .Matrix [1]*_dg .Pow (_fcgdc ,_egfde .Gamma [0])+_egfde .Matrix [4]*_dg .Pow (_dgedg ,_egfde .Gamma [1])+_egfde .Matrix [7]*_dg .Pow (_cbca ,_egfde .Gamma [2]);Z :=_egfde .Matrix [2]*_dg .Pow (_fcgdc ,_egfde .Gamma [0])+_egfde .Matrix [5]*_dg .Pow (_dgedg ,_egfde .Gamma [1])+_egfde .Matrix [8]*_dg .Pow (_cbca ,_egfde .Gamma [2]);
_ccae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bfef :=-0.969256*X +1.875992*Y +0.041556*Z ;_geeb :=0.055648*X +-0.204043*Y +1.057311*Z ;_ccae =_dg .Min (_dg .Max (_ccae ,0),1.0);_bfef =_dg .Min (_dg .Max (_bfef ,0),1.0);_geeb =_dg .Min (_dg .Max (_geeb ,0),1.0);
return NewPdfColorDeviceRGB (_ccae ,_bfef ,_geeb ),nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_cecec ,_cgaf :=_dgf .ReadFile (path );if _cgaf !=nil {return nil ,_cgaf ;};_cbcf :=_ef .Detect (_cecec );_aecb :=_ad .Sum (_cecec );_dfeff :=&EmbeddedFile {Name :_dbd .Base (path ),Content :_cecec ,FileType :_cbcf .String (),Hash :_eaa .EncodeToString (_aecb [:])};
return _dfeff ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_dgec FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_dgec .Mask ()&^fl .Mask ())};func (_decg *PdfReader )newPdfAnnotationProjectionFromDict (_bdcb *_bbfa .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_febc :=&PdfAnnotationProjection {};
_feee ,_bef :=_decg .newPdfAnnotationMarkupFromDict (_bdcb );if _bef !=nil {return nil ,_bef ;};_febc .PdfAnnotationMarkup =_feee ;return _febc ,nil ;};func _aafa (_eaedg *_bbfa .PdfObjectDictionary )(*PdfFieldText ,error ){_gdaf :=&PdfFieldText {};_gdaf .DA ,_ =_bbfa .GetString (_eaedg .Get ("\u0044\u0041"));
_gdaf .Q ,_ =_bbfa .GetInt (_eaedg .Get ("\u0051"));_gdaf .DS ,_ =_bbfa .GetString (_eaedg .Get ("\u0044\u0053"));_gdaf .RV =_eaedg .Get ("\u0052\u0056");_gdaf .MaxLen ,_ =_bbfa .GetInt (_eaedg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gdaf ,nil ;
};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ggbee []byte ;_fgdc []uint32 ;_cdcd *_bbfa .PdfObjectStream ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bbfa .PdfObject ;};var ErrColorOutOfRange =_gf .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// ToPdfObject implements interface PdfModel.
func (_adff *PdfActionGoToE )ToPdfObject ()_bbfa .PdfObject {_adff .PdfAction .ToPdfObject ();_deb :=_adff ._ff ;_deg :=_deb .PdfObject .(*_bbfa .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeGoToE )));if _adff .F !=nil {_deg .Set ("\u0046",_adff .F .ToPdfObject ());
};_deg .SetIfNotNil ("\u0044",_adff .D );_deg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_adff .NewWindow );_deg .SetIfNotNil ("\u0054",_adff .T );return _deb ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_effea *PdfWriter )SetOptimizer (optimizer Optimizer ){_effea ._bdaec =optimizer };

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_eabcc PdfModel ;_cgad _bbfa .PdfObject ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ggc :=&PdfAction {};_ggc ._ff =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());return _ggc ;};type pdfFontType3 struct{fontCommon ;_cfga *_bbfa .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bbfa .PdfObject ;Encoding _bbfa .PdfObject ;FontBBox _bbfa .PdfObject ;FontMatrix _bbfa .PdfObject ;FirstChar _bbfa .PdfObject ;LastChar _bbfa .PdfObject ;Widths _bbfa .PdfObject ;Resources _bbfa .PdfObject ;_ddgdf map[_efd .CharCode ]float64 ;
_eagbd _efd .TextEncoder ;};func (_dccf *PdfReader )loadPerms ()(*Permissions ,error ){if _edaa :=_dccf ._abdcg .Get ("\u0050\u0065\u0072m\u0073");_edaa !=nil {if _ffffc ,_bcafa :=_bbfa .GetDict (_edaa );_bcafa {_dbeaf :=_ffffc .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _dbeaf ==nil {return nil ,nil ;};if _bfgfb ,_dfebgd :=_bbfa .GetIndirect (_dbeaf );_dfebgd {_agccd ,_abbbc :=_dccf .newPdfSignatureFromIndirect (_bfgfb );if _abbbc !=nil {return nil ,_abbbc ;};return NewPermissions (_agccd ),nil ;};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gegf *PdfAnnotationPolyLine )ToPdfObject ()_bbfa .PdfObject {_gegf .PdfAnnotation .ToPdfObject ();_gdgd :=_gegf ._dbge ;_daa :=_gdgd .PdfObject .(*_bbfa .PdfObjectDictionary );_gegf .PdfAnnotationMarkup .appendToPdfDictionary (_daa );_daa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_daa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gegf .Vertices );_daa .SetIfNotNil ("\u004c\u0045",_gegf .LE );_daa .SetIfNotNil ("\u0042\u0053",_gegf .BS );_daa .SetIfNotNil ("\u0049\u0043",_gegf .IC );_daa .SetIfNotNil ("\u0042\u0045",_gegf .BE );
_daa .SetIfNotNil ("\u0049\u0054",_gegf .IT );_daa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gegf .Measure );return _gdgd ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bbfa .PdfObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bafga *_bbfa .PdfIndirectObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ccac *PdfColorspaceCalRGB )ToPdfObject ()_bbfa .PdfObject {_egeee :=&_bbfa .PdfObjectArray {};_egeee .Append (_bbfa .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ggbb :=_bbfa .MakeDict ();if _ccac .WhitePoint !=nil {_beef :=_bbfa .MakeArray (_bbfa .MakeFloat (_ccac .WhitePoint [0]),_bbfa .MakeFloat (_ccac .WhitePoint [1]),_bbfa .MakeFloat (_ccac .WhitePoint [2]));
_ggbb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_beef );}else {_df .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _ccac .BlackPoint !=nil {_fgbf :=_bbfa .MakeArray (_bbfa .MakeFloat (_ccac .BlackPoint [0]),_bbfa .MakeFloat (_ccac .BlackPoint [1]),_bbfa .MakeFloat (_ccac .BlackPoint [2]));_ggbb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fgbf );
};if _ccac .Gamma !=nil {_dfdc :=_bbfa .MakeArray (_bbfa .MakeFloat (_ccac .Gamma [0]),_bbfa .MakeFloat (_ccac .Gamma [1]),_bbfa .MakeFloat (_ccac .Gamma [2]));_ggbb .Set ("\u0047\u0061\u006dm\u0061",_dfdc );};if _ccac .Matrix !=nil {_ecac :=_bbfa .MakeArray (_bbfa .MakeFloat (_ccac .Matrix [0]),_bbfa .MakeFloat (_ccac .Matrix [1]),_bbfa .MakeFloat (_ccac .Matrix [2]),_bbfa .MakeFloat (_ccac .Matrix [3]),_bbfa .MakeFloat (_ccac .Matrix [4]),_bbfa .MakeFloat (_ccac .Matrix [5]),_bbfa .MakeFloat (_ccac .Matrix [6]),_bbfa .MakeFloat (_ccac .Matrix [7]),_bbfa .MakeFloat (_ccac .Matrix [8]));
_ggbb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecac );};_egeee .Append (_ggbb );if _ccac ._cgga !=nil {_ccac ._cgga .PdfObject =_egeee ;return _ccac ._cgga ;};return _egeee ;};func _daeaa (_bgbbc _bbfa .PdfObject )(*_bbfa .PdfObjectDictionary ,*fontCommon ,error ){_caadc :=&fontCommon {};
if _effdd ,_ecgb :=_bgbbc .(*_bbfa .PdfIndirectObject );_ecgb {_caadc ._bebac =_effdd .ObjectNumber ;};_efeff ,_cgbcg :=_bbfa .GetDict (_bgbbc );if !_cgbcg {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bgbbc );
return nil ,nil ,ErrFontNotSupported ;};_adgdac ,_cgbcg :=_bbfa .GetNameVal (_efeff .Get ("\u0054\u0079\u0070\u0065"));if !_cgbcg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _adgdac !="\u0046\u006f\u006e\u0074"{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_adgdac ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bbfa .ErrTypeError ;};_fgbb ,_cgbcg :=_bbfa .GetNameVal (_efeff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cgbcg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_caadc ._eebdg =_fgbb ;_cffb ,_cgbcg :=_bbfa .GetNameVal (_efeff .Get ("\u004e\u0061\u006d\u0065"));if _cgbcg {_caadc ._gbbg =_cffb ;};_abdf :=_efeff .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _abdf !=nil {_caadc ._abfce =_bbfa .TraceToDirectObject (_abdf );_fgac ,_eaddb :=_bffa (_caadc ._abfce ,_caadc );if _eaddb !=nil {return _efeff ,_caadc ,_eaddb ;};_caadc ._degfb =_fgac ;}else if _fgbb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fgbb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ecdc ,_fccdg :=_dea .NewCIDSystemInfo (_efeff .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _fccdg !=nil {return _efeff ,_caadc ,_fccdg ;};_aafb :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_ecdc .Registry ,_ecdc .Ordering );if _dea .IsPredefinedCMap (_aafb ){_caadc ._degfb ,_fccdg =_dea .LoadPredefinedCMap (_aafb );
if _fccdg !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aafb ,_fccdg );
};};};_dgbf :=_efeff .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dgbf !=nil {_abcec ,_aaca :=_befdaf (_dgbf );if _aaca !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aaca );
return _efeff ,_caadc ,_aaca ;};_caadc ._cbbb =_abcec ;};if _fgbb !="\u0054\u0079\u0070e\u0033"{_dbgb ,_deafd :=_bbfa .GetNameVal (_efeff .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_deafd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _efeff ,_caadc ,ErrRequiredAttributeMissing ;};_caadc ._fdace =_dbgb ;};return _efeff ,_caadc ,nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_deced *PdfAnnotationTrapNet )ToPdfObject ()_bbfa .PdfObject {_deced .PdfAnnotation .ToPdfObject ();_fbce :=_deced ._dbge ;_fbe :=_fbce .PdfObject .(*_bbfa .PdfObjectDictionary );_fbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _fbce ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_gcafe *PdfPage )Duplicate ()*PdfPage {_gedaa :=*_gcafe ;_gedaa ._cgef =_bbfa .MakeDict ();_gedaa ._bfaag =_bbfa .MakeIndirectObject (_gedaa ._cgef );_gedaa ._cgbfde =*_gedaa ._cgef ;return &_gedaa ;};

// SetDecode sets the decode image float slice.
func (_ecbe *Image )SetDecode (decode []float64 ){_ecbe ._acgd =decode };

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_egcdg *PdfPageResources )HasColorspaceByName (keyName _bbfa .PdfObjectName )bool {_ddbaf ,_dabee :=_egcdg .GetColorspaces ();if _dabee !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dabee );
return false ;};if _ddbaf ==nil {return false ;};_ ,_aggca :=_ddbaf .Colorspaces [string (keyName )];return _aggca ;};

// GetPdfInfo returns the PDF info dictionary.
func (_becdf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_gfgee ,_gaacc :=_becdf .GetTrailer ();if _gaacc !=nil {return nil ,_gaacc ;};var _dcga *_bbfa .PdfObjectDictionary ;_gdfae :=_gfgee .Get ("\u0049\u006e\u0066\u006f");switch _dggae :=_gdfae .(type ){case *_bbfa .PdfObjectReference :_baacf :=_dggae ;
_gdfae ,_gaacc =_becdf .GetIndirectObjectByNumber (int (_baacf .ObjectNumber ));_gdfae =_bbfa .TraceToDirectObject (_gdfae );if _gaacc !=nil {return nil ,_gaacc ;};_dcga ,_ =_gdfae .(*_bbfa .PdfObjectDictionary );case *_bbfa .PdfObjectDictionary :_dcga =_dggae ;
};if _dcga ==nil {return nil ,_gf .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_gcbba ,_gaacc :=NewPdfInfoFromObject (_dcga );if _gaacc !=nil {return nil ,_gaacc ;
};return _gcbba ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// GetStandardApplier gets currently used StandardApplier..
func (_agbce *PdfWriter )GetStandardApplier ()StandardApplier {return _agbce ._dffca };

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_edgdg *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_edgdg ._bgedd =&displayDocTitle ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func (_gfd *PdfReader )newPdfActionSoundFromDict (_faa *_bbfa .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_faa .Get ("\u0053\u006f\u0075n\u0064"),Volume :_faa .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_faa .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_faa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_faa .Get ("\u004d\u0069\u0078")},nil ;
};func (_afacb *PdfFont )baseFields ()*fontCommon {if _afacb ._gdfa ==nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _afacb ._gdfa .baseFields ();};func (_cebeg *PdfReader )lookupPageByObject (_gdgea _bbfa .PdfObject )(*PdfPage ,error ){return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PartialName returns the partial name of the field.
func (_dcdb *PdfField )PartialName ()string {_fcaeg :="";if _dcdb .T !=nil {_fcaeg =_dcdb .T .Decoded ();}else {_df .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _fcaeg ;};func _dcefc (_gceca []byte )([]byte ,error ){_cgeed :=_cg .New ();if _ ,_cebfcd :=_cb .Copy (_cgeed ,_de .NewReader (_gceca ));_cebfcd !=nil {return nil ,_cebfcd ;};return _cgeed .Sum (nil ),nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cb .ReadSeeker )(*PdfFont ,error ){_fefd ,_defe :=_cb .ReadAll (r );if _defe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_defe );
return nil ,_defe ;};_daag ,_defe :=_fg .TtfParse (_de .NewReader (_fefd ));if _defe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_defe );
return nil ,_defe ;};_fcbba :=&pdfCIDFontType2 {fontCommon :fontCommon {_eebdg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bbfa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_daag .Widths )<=0{return nil ,_gf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cdcea :=1000.0/float64 (_daag .UnitsPerEm );_dfbec :=_cdcea *float64 (_daag .Widths [0]);_cfdgg :=make (map[rune ]int );_dafgf :=make (map[_fg .GID ]int );_edagf :=_fg .GID (len (_daag .Widths ));for _eceeg ,_aacfd :=range _daag .Chars {if _aacfd > _edagf -1{continue ;
};_dbbcf :=int (_cdcea *float64 (_daag .Widths [_aacfd ]));_cfdgg [_eceeg ]=_dbbcf ;_dafgf [_aacfd ]=_dbbcf ;};_fcbba ._baggg =_cfdgg ;_fcbba .DW =_bbfa .MakeInteger (int64 (_dfbec ));_gfec :=_dgga (_dafgf ,uint16 (_edagf ));_fcbba .W =_bbfa .MakeIndirectObject (_gfec );
_bdgb :=_bbfa .MakeDict ();_bdgb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bbfa .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_bdgb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bbfa .MakeString ("\u0041\u0064\u006fb\u0065"));
_bdgb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bbfa .MakeInteger (0));_fcbba .CIDSystemInfo =_bdgb ;_fdbbf :=&PdfFontDescriptor {FontName :_bbfa .MakeName (_daag .PostScriptName ),Ascent :_bbfa .MakeFloat (_cdcea *float64 (_daag .TypoAscender )),Descent :_bbfa .MakeFloat (_cdcea *float64 (_daag .TypoDescender )),CapHeight :_bbfa .MakeFloat (_cdcea *float64 (_daag .CapHeight )),FontBBox :_bbfa .MakeArrayFromFloats ([]float64 {_cdcea *float64 (_daag .Xmin ),_cdcea *float64 (_daag .Ymin ),_cdcea *float64 (_daag .Xmax ),_cdcea *float64 (_daag .Ymax )}),ItalicAngle :_bbfa .MakeFloat (_daag .ItalicAngle ),MissingWidth :_bbfa .MakeFloat (_dfbec )};
_gbdg ,_defe :=_bbfa .MakeStream (_fefd ,_bbfa .NewFlateEncoder ());if _defe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_defe );
return nil ,_defe ;};_gbdg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbfa .MakeInteger (int64 (len (_fefd ))));_fdbbf .FontFile2 =_gbdg ;if _daag .Bold {_fdbbf .StemV =_bbfa .MakeInteger (120);}else {_fdbbf .StemV =_bbfa .MakeInteger (70);
};_beaa :=_cdca ;if _daag .IsFixedPitch {_beaa |=_aegcb ;};if _daag .ItalicAngle !=0{_beaa |=_fgef ;};_fdbbf .Flags =_bbfa .MakeInteger (int64 (_beaa ));_fcbba ._fdace =_daag .PostScriptName ;_fcbba ._cbbb =_fdbbf ;_adac :=pdfFontType0 {fontCommon :fontCommon {_eebdg :"\u0054\u0079\u0070e\u0030",_fdace :_daag .PostScriptName },DescendantFont :&PdfFont {_gdfa :_fcbba },Encoding :_bbfa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_agcb :_daag .NewEncoder ()};
if len (_daag .Chars )> 0{_ceabb :=make (map[_dea .CharCode ]rune ,len (_daag .Chars ));for _dbgc ,_adagb :=range _daag .Chars {_cccdd :=_dea .CharCode (_adagb );if _daad ,_cdgfcb :=_ceabb [_cccdd ];!_cdgfcb ||(_cdgfcb &&_daad > _dbgc ){_ceabb [_cccdd ]=_dbgc ;
};};_adac ._degfb =_dea .NewToUnicodeCMap (_ceabb );};_fdag :=PdfFont {_gdfa :&_adac };return &_fdag ,nil ;};

// R returns the value of the red component of the color.
func (_eff *PdfColorDeviceRGB )R ()float64 {return _eff [0]};func (_fefag *PdfField )inherit (_aedea func (*PdfField )bool )(bool ,error ){_bcdf :=map[*PdfField ]bool {};_eaaba :=false ;_fgbca :=_fefag ;for _fgbca !=nil {if _ ,_gdfdc :=_bcdf [_fgbca ];
_gdfdc {return false ,_gf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_aaged :=_aedea (_fgbca );if _aaged {_eaaba =true ;break ;};_bcdf [_fgbca ]=true ;_fgbca =_fgbca .Parent ;};return _eaaba ,nil ;
};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _cgg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bbfa .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bbfa .MakeInteger (int64 (permission )),V :_bbfa .MakeName ("\u0031\u002e\u0032")};
};

// WriteToFile writes the Appender output to file specified by path.
func (_bgac *PdfAppender )WriteToFile (outputPath string )error {_ecbc ,_abdge :=_dgf .Create (outputPath );if _abdge !=nil {return _abdge ;};defer _ecbc .Close ();return _bgac .Write (_ecbc );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_aabbca *XObjectImage )SetFilter (encoder _bbfa .StreamEncoder )error {_addab :=_aabbca .Stream ;_efeeg ,_geedg :=_aabbca .Filter .DecodeBytes (_addab );if _geedg !=nil {return _geedg ;};_aabbca .Filter =encoder ;encoder .UpdateParams (_aabbca .getParamsDict ());
_addab ,_geedg =encoder .EncodeBytes (_efeeg );if _geedg !=nil {return _geedg ;};_aabbca .Stream =_addab ;return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_agdf *PdfColorspaceICCBased )GetContainingPdfObject ()_bbfa .PdfObject {return _agdf ._eeaa };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_ecee *_bbfa .PdfIndirectObject ;};

// SetReason sets the `Reason` field of the signature.
func (_dadef *PdfSignature )SetReason (reason string ){_dadef .Reason =_bbfa .MakeEncodedString (reason ,true );};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_gafef DefaultImageHandler )Read (reader _cb .Reader )(*Image ,error ){_bggcg ,_ ,_cbbca :=_gd .Decode (reader );if _cbbca !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cbbca );
return nil ,_cbbca ;};return _gafef .NewImageFromGoImage (_bggcg );};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_acef :=NewPdfAnnotation ();_efgd :=&PdfAnnotationWidget {};_efgd .PdfAnnotation =_acef ;_acef .SetContext (_efgd );return _efgd ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);var ImageHandling ImageHandler =DefaultImageHandler {};

// GetBorderWidth returns the border style's width.
func (_egg *PdfBorderStyle )GetBorderWidth ()float64 {if _egg .W ==nil {return 1;};return *_egg .W ;};

// SetDirection sets the value of the direction.
func (_cbgb *ViewerPreferences )SetDirection (direction Direction ){_cbgb ._acdab =direction };func (_cgeabd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _geeaa []*PdfFieldSignature ;for _ ,_gebb :=range _cgeabd .AllFields (){switch _aefd :=_gebb .GetContext ().(type ){case *PdfFieldSignature :_eabad :=_aefd ;
_geeaa =append (_geeaa ,_eabad );};};return _geeaa ;};func _eabec (_bebge _bbfa .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bgbg :=&PdfPageResourcesColorspaces {};if _afdfa ,_acbaf :=_bebge .(*_bbfa .PdfIndirectObject );_acbaf {_bgbg ._ggccg =_afdfa ;
_bebge =_afdfa .PdfObject ;};_gagef ,_aeaac :=_bbfa .GetDict (_bebge );if !_aeaac {return nil ,_gf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bgbg .Names =[]string {};
_bgbg .Colorspaces =map[string ]PdfColorspace {};for _ ,_dceec :=range _gagef .Keys (){_cdddb :=_gagef .Get (_dceec );_bgbg .Names =append (_bgbg .Names ,string (_dceec ));_fdcgd ,_beagf :=NewPdfColorspaceFromPdfObject (_cdddb );if _beagf !=nil {return nil ,_beagf ;
};_bgbg .Colorspaces [string (_dceec )]=_fdcgd ;};return _bgbg ,nil ;};func (_eabdbf *PdfPage )loadFont (_dbff string )(*_eaaa .Font ,error ){_bgde ,_ffda :=_dgf .ReadFile (_dbff );if _ffda !=nil {return nil ,_ffda ;};_edbed ,_ffda :=_eg .ParseFont (_bgde );
if _ffda !=nil {return nil ,_ffda ;};return _edbed ,nil ;};

// SetFitWindow sets the value of the fitWindow flag.
func (_edgcg *ViewerPreferences )SetFitWindow (fitWindow bool ){_edgcg ._dbdga =&fitWindow };

// Clear clears the KValue.
func (_dgabd *KValue )Clear (){_dgabd ._fcgfe =nil ;_dgabd ._ffbe =nil ;_dgabd ._aagdb =nil };

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// SetNumCopies sets the value of the numCopies.
func (_cffdc *ViewerPreferences )SetNumCopies (numCopies int ){_cffdc ._dbaae =numCopies };

// DecodeArray returns the component range values for the Indexed colorspace.
func (_dfdf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_dfdf .HiVal )};};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_beefg *PdfPageResources )GetFontByName (keyName _bbfa .PdfObjectName )(_bbfa .PdfObject ,bool ){if _beefg .Font ==nil {return nil ,false ;};_dddbc ,_aagde :=_bbfa .TraceToDirectObject (_beefg .Font ).(*_bbfa .PdfObjectDictionary );if !_aagde {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbfa .TraceToDirectObject (_beefg .Font ));
return nil ,false ;};if _eegef :=_dddbc .Get (keyName );_eegef !=nil {return _eegef ,true ;};return nil ,false ;};func (_dab *PdfReader )newPdfActionThreadFromDict (_dee *_bbfa .PdfObjectDictionary )(*PdfActionThread ,error ){_bge ,_acg :=_cge (_dee .Get ("\u0046"));
if _acg !=nil {return nil ,_acg ;};return &PdfActionThread {D :_dee .Get ("\u0044"),B :_dee .Get ("\u0042"),F :_bge },nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_daea :=NewPdfAnnotation ();_ffe :=&PdfAnnotationLink {};_ffe .PdfAnnotation =_daea ;_daea .SetContext (_ffe );return _ffe ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dggd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bbfa .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gfag []_bbfa .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gbee []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// Encoder returns the font's text encoder.
func (_aafg pdfFontType0 )Encoder ()_efd .TextEncoder {return _aafg ._agcb };func _ddgbgc (_cacdc []byte )[]byte {const _acabc =52845;const _ebfb =22719;_gbcb :=55665;for _ ,_cgbd :=range _cacdc [:4]{_gbcb =(int (_cgbd )+_gbcb )*_acabc +_ebfb ;};_agbfb :=make ([]byte ,len (_cacdc )-4);
for _egdcb ,_cdcfc :=range _cacdc [4:]{_agbfb [_egdcb ]=byte (int (_cdcfc )^_gbcb >>8);_gbcb =(int (_cdcfc )+_gbcb )*_acabc +_ebfb ;};return _agbfb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ffbbg *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ffbbg .UnderlyingCS ==nil {return nil ,_gf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ffbbg .UnderlyingCS .ColorFromFloats (vals );};func (_fgca *PdfReader )newPdfAnnotationRedactFromDict (_aede *_bbfa .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fdfd :=PdfAnnotationRedact {};_efcg ,_bbfgd :=_fgca .newPdfAnnotationMarkupFromDict (_aede );
if _bbfgd !=nil {return nil ,_bbfgd ;};_fdfd .PdfAnnotationMarkup =_efcg ;_fdfd .QuadPoints =_aede .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fdfd .IC =_aede .Get ("\u0049\u0043");_fdfd .RO =_aede .Get ("\u0052\u004f");_fdfd .OverlayText =_aede .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fdfd .Repeat =_aede .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fdfd .DA =_aede .Get ("\u0044\u0041");_fdfd .Q =_aede .Get ("\u0051");return &_fdfd ,nil ;};

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_bffef *bool ;_febff *bool ;_egeca *bool ;_dbdga *bool ;_dfdab *bool ;_bgedd *bool ;_dbcge NonFullScreenPageMode ;_acdab Direction ;_edbad PageBoundary ;_ggbae PageBoundary ;_abfgd PageBoundary ;_dcfaa PageBoundary ;_beced PrintScaling ;
_agca Duplex ;_dbacd *bool ;_dcdbb []int ;_dbaae int ;};

// ToInteger convert to an integer format.
func (_cfag *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gcdc :=_dg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gcdc *_cfag .C ()),uint32 (_gcdc *_cfag .M ()),uint32 (_gcdc *_cfag .Y ()),uint32 (_gcdc *_cfag .K ())};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eadad ,_aefg :=_dgf .Open (filePath );if _aefg !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aefg );
return nil ,_aefg ;};defer _eadad .Close ();return NewCompositePdfFontFromTTF (_eadad );};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ebab *PdfColorspaceLab )DecodeArray ()[]float64 {_cafb :=[]float64 {0,100};if _ebab !=nil &&_ebab .Range !=nil &&len (_ebab .Range )==4{_cafb =append (_cafb ,_ebab .Range ...);}else {_cafb =append (_cafb ,-100,100,-100,100);};return _cafb ;};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";
NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";
DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";
PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";
DuplexNone Duplex ="\u006e\u006f\u006e\u0065";DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bdbad *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_fgfcfa :=_bdbad .fill (provider ,appGen );if _fgfcfa !=nil {return _fgfcfa ;};if _ ,_cgcc :=provider .(FieldImageProvider );_cgcc {_fgfcfa =_bdbad .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _fgfcfa ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_fegbg *ViewerPreferences )IsDisplayDocTitle ()bool {if _fegbg ._bgedd ==nil {return false ;};return *_fegbg ._bgedd ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fbfea int64 ;_dbgfe int64 ;_gadge int64 ;_egfad int64 ;_bggf int64 ;_acecab int64 ;_ccce byte ;_fedea int64 ;_cabba int64 ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_abcd *PdfSignature )extractChainFromPKCS7 ()([]*_fe .Certificate ,error ){_bcff ,_agefcf :=_eb .Parse (_abcd .Contents .Bytes ());if _agefcf !=nil {return nil ,_agefcf ;};return _bcff .Certificates ,nil ;};

// String returns a string that describes `base`.
func (_efcgee fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_efcgee .coreString ());};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bbfa .PdfObject ;MK _bbfa .PdfObject ;A _bbfa .PdfObject ;AA _bbfa .PdfObject ;BS _bbfa .PdfObject ;Parent _bbfa .PdfObject ;_cfc *PdfField ;_bcae bool ;};func (_agdea *PdfWriter )addObjects (_fcgga _bbfa .PdfObject )error {_df .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _gcce ,_fefeb :=_fcgga .(*_bbfa .PdfIndirectObject );_fefeb {_df .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fcgga ,_gcce );_df .Log .Trace ("\u002d\u0020\u0025\u0073",_gcce .PdfObject );
if _agdea .addObject (_gcce ){_bdcede :=_agdea .addObjects (_gcce .PdfObject );if _bdcede !=nil {return _bdcede ;};};return nil ;};if _fcabc ,_cdfdb :=_fcgga .(*_bbfa .PdfObjectStream );_cdfdb {_df .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fcgga ,_fcgga );
if _agdea .addObject (_fcabc ){_ffdee :=_agdea .addObjects (_fcabc .PdfObjectDictionary );if _ffdee !=nil {return _ffdee ;};};return nil ;};if _gfbfd ,_dcfacg :=_fcgga .(*_bbfa .PdfObjectDictionary );_dcfacg {_df .Log .Trace ("\u0044\u0069\u0063\u0074");
_df .Log .Trace ("\u002d\u0020\u0025\u0073",_fcgga );for _ ,_cceaa :=range _gfbfd .Keys (){_dcdecg :=_gfbfd .Get (_cceaa );if _gebbb ,_agfdbc :=_dcdecg .(*_bbfa .PdfObjectReference );_agfdbc {_dcdecg =_gebbb .Resolve ();_gfbfd .Set (_cceaa ,_dcdecg );};
if _cceaa !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bbede :=_agdea .addObjects (_dcdecg );_bbede !=nil {return _bbede ;};}else {if _ ,_ccfaca :=_dcdecg .(*_bbfa .PdfObjectNull );_ccfaca {continue ;};if _edeee :=_agdea .hasObject (_dcdecg );!_edeee {_df .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_dcdecg ,_dcdecg ,_dcdecg );
_agdea ._fgfff [_dcdecg ]=append (_agdea ._fgfff [_dcdecg ],_gfbfd );};};};return nil ;};if _edefe ,_bcfda :=_fcgga .(*_bbfa .PdfObjectArray );_bcfda {_df .Log .Trace ("\u0041\u0072\u0072a\u0079");_df .Log .Trace ("\u002d\u0020\u0025\u0073",_fcgga );if _edefe ==nil {return _gf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bbfag ,_adfdec :=range _edefe .Elements (){if _gggcd ,_affce :=_adfdec .(*_bbfa .PdfObjectReference );_affce {_adfdec =_gggcd .Resolve ();_edefe .Set (_bbfag ,_adfdec );};if _afeeg :=_agdea .addObjects (_adfdec );_afeeg !=nil {return _afeeg ;};};
return nil ;};if _ ,_gcbaf :=_fcgga .(*_bbfa .PdfObjectReference );_gcbaf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fcgga );
return _gf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aaec *PdfAnnotationFreeText )ToPdfObject ()_bbfa .PdfObject {_aaec .PdfAnnotation .ToPdfObject ();_febf :=_aaec ._dbge ;_cff :=_febf .PdfObject .(*_bbfa .PdfObjectDictionary );_aaec .PdfAnnotationMarkup .appendToPdfDictionary (_cff );_cff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cff .SetIfNotNil ("\u0044\u0041",_aaec .DA );_cff .SetIfNotNil ("\u0051",_aaec .Q );_cff .SetIfNotNil ("\u0052\u0043",_aaec .RC );_cff .SetIfNotNil ("\u0044\u0053",_aaec .DS );_cff .SetIfNotNil ("\u0043\u004c",_aaec .CL );_cff .SetIfNotNil ("\u0049\u0054",_aaec .IT );
_cff .SetIfNotNil ("\u0042\u0045",_aaec .BE );_cff .SetIfNotNil ("\u0052\u0044",_aaec .RD );_cff .SetIfNotNil ("\u0042\u0053",_aaec .BS );_cff .SetIfNotNil ("\u004c\u0045",_aaec .LE );return _febf ;};

// SetPrintScaling sets the value of the printScaling.
func (_faeb *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_faeb ._beced =printScaling ;};

// RemveTabOrder removes the tab order for the page.
func (_gdecg *PdfPage )RemoveTabOrder (){_gdecg .Tabs =nil };

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gaab :=&PdfFilespec {};_gaab ._bdbfc =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());return _gaab ;};func (_fgcdc *PdfWriter )flushWriter ()error {if _fgcdc ._efgab ==nil {_fgcdc ._efgab =_fgcdc ._gdcce .Flush ();};
return _fgcdc ._efgab ;};var _eecb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func (_ceffdc *PdfWriter )writeString (_dfdabc string ){if _ceffdc ._efgab !=nil {return ;};_aceacb ,_fccea :=_ceffdc ._gdcce .WriteString (_dfdabc );_ceffdc ._efebf +=int64 (_aceacb );_ceffdc ._efgab =_fccea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gabaa *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febcc ,_dgde :=_bbfa .GetNumbersAsFloat (objects );
if _dgde !=nil {return nil ,_dgde ;};return _gabaa .ColorFromFloats (_febcc );};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_efaa :fonts ,CurrentFont :fonts [0]};};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_aebgaf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _aebgaf ._eaabc !=nil {return _aebgaf ._eaabc ,nil ;};if _aebgaf .Annots ==nil {_aebgaf ._eaabc =[]*PdfAnnotation {};return nil ,nil ;};if _aebgaf ._gcfgf ==nil {_aebgaf ._eaabc =[]*PdfAnnotation {};
return nil ,nil ;};_ccgfc ,_afegc :=_aebgaf ._gcfgf .loadAnnotations (_aebgaf .Annots );if _afegc !=nil {return nil ,_afegc ;};if _ccgfc ==nil {_aebgaf ._eaabc =[]*PdfAnnotation {};};_aebgaf ._eaabc =_ccgfc ;return _aebgaf ._eaabc ,nil ;};

// Direction represents the predominant reading order for text.
type Direction string ;func _baabg (_ceca *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ceca }};func _geffb ()string {_efgcc .Lock ();defer _efgcc .Unlock ();return _cdgce };

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_agcba *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_agcba ._egeca =&hideWindowUI };func (_face *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject implements interface PdfModel.
func (_cbeg *PdfAnnotationCircle )ToPdfObject ()_bbfa .PdfObject {_cbeg .PdfAnnotation .ToPdfObject ();_ceab :=_cbeg ._dbge ;_deeea :=_ceab .PdfObject .(*_bbfa .PdfObjectDictionary );_cbeg .PdfAnnotationMarkup .appendToPdfDictionary (_deeea );_deeea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_deeea .SetIfNotNil ("\u0042\u0053",_cbeg .BS );_deeea .SetIfNotNil ("\u0049\u0043",_cbeg .IC );_deeea .SetIfNotNil ("\u0042\u0045",_cbeg .BE );_deeea .SetIfNotNil ("\u0052\u0044",_cbeg .RD );return _ceab ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdgaa *PdfColorspaceDeviceRGB )ToPdfObject ()_bbfa .PdfObject {return _bbfa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToInteger convert to an integer format.
func (_eebdf *PdfColorLab )ToInteger (bits int )[3]uint32 {_bgebd :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bgebd *_eebdf .L ()),uint32 (_bgebd *_eebdf .A ()),uint32 (_bgebd *_eebdf .B ())};};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bfaa *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_df .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_df .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_df .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_df .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_ecfa ,_gacf :=_bbf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eccdd ,img ._acgd );if _gacf !=nil {return Image {},_gacf ;};_eefe ,_gacf :=_bbf .NRGBAConverter .Convert (_ecfa );if _gacf !=nil {return Image {},_gacf ;
};return _ebdgf (_eefe .Base ()),nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bbga *PdfShadingPatternType3 )ToPdfObject ()_bbfa .PdfObject {_bbga .PdfPattern .ToPdfObject ();_gaaa :=_bbga .getDict ();if _bbga .Shading !=nil {_gaaa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bbga .Shading .ToPdfObject ());};if _bbga .Matrix !=nil {_gaaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbga .Matrix );
};if _bbga .ExtGState !=nil {_gaaa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bbga .ExtGState );};return _bbga ._cgad ;};func (_cee *PdfReader )newPdfActionSubmitFormFromDict (_bad *_bbfa .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_abd ,_gbg :=_cge (_bad .Get ("\u0046"));
if _gbg !=nil {return nil ,_gbg ;};return &PdfActionSubmitForm {F :_abd ,Fields :_bad .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bad .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bbfa .PdfObjectArray ;Domain *_bbfa .PdfObjectArray ;Function []PdfFunction ;Extend *_bbfa .PdfObjectArray ;};func _cgcd (_bddaeg _fg .StdFont )pdfFontSimple {_ecgd :=_bddaeg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_eebdg :"\u0054\u0079\u0070e\u0031",_fdace :_bddaeg .Name ()},_bgbe :_bddaeg .GetMetricsTable (),_badb :&PdfFontDescriptor {FontName :_bbfa .MakeName (string (_ecgd .Name )),FontFamily :_bbfa .MakeName (_ecgd .Family ),FontWeight :_bbfa .MakeFloat (float64 (_ecgd .Weight )),Flags :_bbfa .MakeInteger (int64 (_ecgd .Flags )),FontBBox :_bbfa .MakeArrayFromFloats (_ecgd .BBox [:]),ItalicAngle :_bbfa .MakeFloat (_ecgd .ItalicAngle ),Ascent :_bbfa .MakeFloat (_ecgd .Ascent ),Descent :_bbfa .MakeFloat (_ecgd .Descent ),CapHeight :_bbfa .MakeFloat (_ecgd .CapHeight ),XHeight :_bbfa .MakeFloat (_ecgd .XHeight ),StemV :_bbfa .MakeFloat (_ecgd .StemV ),StemH :_bbfa .MakeFloat (_ecgd .StemH )},_gfce :_bddaeg .Encoder ()};
};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ebdgd *PdfWriter )SetDocInfo (info *PdfInfo ){_ebdgd .setDocInfo (info .ToPdfObject ())};

// G returns the value of the green component of the color.
func (_gadd *PdfColorDeviceRGB )G ()float64 {return _gadd [1]};var _bggab =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_bdcd *PdfFilespec )getDict ()*_bbfa .PdfObjectDictionary {if _cddbc ,_ebbda :=_bdcd ._bdbfc .(*_bbfa .PdfIndirectObject );_ebbda {_ecgc ,_fbaa :=_cddbc .PdfObject .(*_bbfa .PdfObjectDictionary );if !_fbaa {return nil ;};return _ecgc ;}else if _eebf ,_dcdgf :=_bdcd ._bdbfc .(*_bbfa .PdfObjectDictionary );
_dcdgf {return _eebf ;}else {_df .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_bdcd ._bdbfc );
return nil ;};};func (_bfbd *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_ebddf *PdfReader )buildPageList (_fbdfb *_bbfa .PdfIndirectObject ,_fbcad *_bbfa .PdfIndirectObject ,_eecdd map[_bbfa .PdfObject ]struct{})error {if _fbdfb ==nil {return nil ;
};if _ ,_ddff :=_eecdd [_fbdfb ];_ddff {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fbdfb .ObjectNumber );
return nil ;};_eecdd [_fbdfb ]=struct{}{};_eeecd ,_gafaf :=_fbdfb .PdfObject .(*_bbfa .PdfObjectDictionary );if !_gafaf {return _gf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_aebcd ,_gafaf :=(*_eeecd ).Get ("\u0054\u0079\u0070\u0065").(*_bbfa .PdfObjectName );
if !_gafaf {if _eeecd .Get ("\u004b\u0069\u0064\u0073")==nil {return _gf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_aebcd =_bbfa .MakeName ("\u0050\u0061\u0067e\u0073");_eeecd .Set ("\u0054\u0079\u0070\u0065",_aebcd );};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_aebcd ,_fbdfb );
if *_aebcd =="\u0050\u0061\u0067\u0065"{_feda ,_bdcbf :=_ebddf .newPdfPageFromDict (_eeecd );if _bdcbf !=nil {return _bdcbf ;};_feda .setContainer (_fbdfb );if _fbcad !=nil {_eeecd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbcad );};_ebddf ._ceebee =append (_ebddf ._ceebee ,_fbdfb );
_ebddf .PageList =append (_ebddf .PageList ,_feda );return nil ;};if *_aebcd !="\u0050\u0061\u0067e\u0073"{if _ebddf ._fdefeb .Opts !=nil &&_ebddf ._fdefeb .Opts .RelaxedMode {_df .Log .Warning ("\u0057\u0061\u0072\u006e\u0069\u006e\u0067\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066 \u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050a\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063t\u0021\u0020(\u0025s\u0029",_aebcd );
return nil ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_aebcd );
return _gf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _fbcad !=nil {_eeecd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbcad );};if !_ebddf ._bbbee {_dfdfb :=_ebddf .traverseObjectData (_fbdfb );if _dfdfb !=nil {return _dfdfb ;};};_ffca ,_aaeef :=_ebddf ._fdefeb .Resolve (_eeecd .Get ("\u004b\u0069\u0064\u0073"));
if _aaeef !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _aaeef ;};var _afdaee *_bbfa .PdfObjectArray ;
_afdaee ,_gafaf =_ffca .(*_bbfa .PdfObjectArray );if !_gafaf {_gafbc ,_fcfbg :=_ffca .(*_bbfa .PdfIndirectObject );if !_fcfbg {return _gf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_afdaee ,_gafaf =_gafbc .PdfObject .(*_bbfa .PdfObjectArray );if !_gafaf {return _gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_afdaee );
for _bdcba ,_bfeb :=range _afdaee .Elements (){_cebgd ,_cceag :=_bbfa .GetIndirect (_bfeb );if !_cceag {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cebgd );
return _gf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_afdaee .Set (_bdcba ,_cebgd );_aaeef =_ebddf .buildPageList (_cebgd ,_fbdfb ,_eecdd );if _aaeef !=nil {return _aaeef ;
};};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gefc *PdfFont )GetCharMetrics (code _efd .CharCode )(CharMetrics ,bool ){var _agba _fg .CharMetrics ;switch _fggbc :=_gefc ._gdfa .(type ){case *pdfFontSimple :if _bgfc ,_cfaaf :=_fggbc .GetCharMetrics (code );_cfaaf {return _bgfc ,_cfaaf ;};case *pdfFontType0 :if _aabf ,_gdbdf :=_fggbc .GetCharMetrics (code );
_gdbdf {return _aabf ,_gdbdf ;};case *pdfCIDFontType0 :if _efad ,_bcgcf :=_fggbc .GetCharMetrics (code );_bcgcf {return _efad ,_bcgcf ;};case *pdfCIDFontType2 :if _debga ,_fcgg :=_fggbc .GetCharMetrics (code );_fcgg {return _debga ,_fcgg ;};case *pdfFontType3 :if _gedgc ,_gfed :=_fggbc .GetCharMetrics (code );
_gfed {return _gedgc ,_gfed ;};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gefc ._gdfa );
return _agba ,false ;};if _efebg ,_fbbgg :=_gefc .GetFontDescriptor ();_fbbgg ==nil &&_efebg !=nil {return _fg .CharMetrics {Wx :_efebg ._fgegg },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gefc );
return _agba ,false ;};func (_bbafb *pdfFontSimple )addEncoding ()error {var (_gdegd string ;_fcffc map[_efd .CharCode ]_efd .GlyphName ;_fcfd _efd .SimpleEncoder ;);if _bbafb .Encoder ()!=nil {_aegg ,_fdffe :=_bbafb .Encoder ().(_efd .SimpleEncoder );
if _fdffe &&_aegg !=nil {_gdegd =_aegg .BaseName ();};};if _bbafb .Encoding !=nil {_dfca ,_ceadgf ,_gddcd :=_bbafb .getFontEncoding ();if _gddcd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbafb ._fdace ,_bbafb ._eebdg ,_bbafb .Encoding ,_bbafb .Encoding ,_gddcd );
return _gddcd ;};if _dfca !=""{_gdegd =_dfca ;};_fcffc =_ceadgf ;_fcfd ,_gddcd =_efd .NewSimpleTextEncoder (_gdegd ,_fcffc );if _gddcd !=nil {return _gddcd ;};};if _fcfd ==nil {_fgba :=_bbafb ._cbbb ;if _fgba !=nil {switch _bbafb ._eebdg {case "\u0054\u0079\u0070e\u0031":if _fgba .fontFile !=nil &&_fgba .fontFile ._gccbc !=nil {_df .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_fcfd =_fgba .fontFile ._gccbc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fgba ._fcced !=nil {_df .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_baad ,_aaffd :=_fgba ._fcced .MakeEncoder ();
if _aaffd ==nil {_fcfd =_baad ;};if _bbafb ._degfb ==nil {_bbafb ._degfb =_fgba ._fcced .MakeToUnicode ();};};};};};if _fcfd !=nil {if _fcffc !=nil {_df .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcffc ,_bbafb .baseFields ());
_fcfd =_efd .ApplyDifferences (_fcfd ,_fcffc );};_bbafb .SetEncoder (_fcfd );};return nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_bba :=NewPdfAction ();_bbb :=&PdfActionSubmitForm {};_bbb .PdfAction =_bba ;_bba .SetContext (_bbb );return _bbb ;};

// ToPdfObject implements interface PdfModel.
func (_bbgd *PdfAnnotationLink )ToPdfObject ()_bbfa .PdfObject {_bbgd .PdfAnnotation .ToPdfObject ();_adgef :=_bbgd ._dbge ;_eegae :=_adgef .PdfObject .(*_bbfa .PdfObjectDictionary );_eegae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u004c\u0069\u006e\u006b"));
if _bbgd ._dba !=nil &&_bbgd ._dba ._cad !=nil {_eegae .Set ("\u0041",_bbgd ._dba ._cad .ToPdfObject ());}else if _bbgd .A !=nil {_eegae .Set ("\u0041",_bbgd .A );};_eegae .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bbgd .Dest );_eegae .SetIfNotNil ("\u0048",_bbgd .H );
_eegae .SetIfNotNil ("\u0050\u0041",_bbgd .PA );_eegae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbgd .QuadPoints );_eegae .SetIfNotNil ("\u0042\u0053",_bbgd .BS );return _adgef ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fgec *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if _fgec .Alternate ==nil {if _fgec .N ==1{_cbaa :=NewPdfColorspaceDeviceGray ();return _cbaa .ColorFromPdfObjects (objects );}else if _fgec .N ==3{_agaec :=NewPdfColorspaceDeviceRGB ();
return _agaec .ColorFromPdfObjects (objects );}else if _fgec .N ==4{_edbd :=NewPdfColorspaceDeviceCMYK ();return _edbd .ColorFromPdfObjects (objects );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fgec .Alternate .ColorFromPdfObjects (objects );};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbfa .PdfObject ;IC _bbfa .PdfObject ;BE _bbfa .PdfObject ;RD _bbfa .PdfObject ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gfcg *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_cgee *PdfAnnotationScreen )ToPdfObject ()_bbfa .PdfObject {_cgee .PdfAnnotation .ToPdfObject ();_gdgb :=_cgee ._dbge ;_dggef :=_gdgb .PdfObject .(*_bbfa .PdfObjectDictionary );_dggef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dggef .SetIfNotNil ("\u0054",_cgee .T );_dggef .SetIfNotNil ("\u004d\u004b",_cgee .MK );_dggef .SetIfNotNil ("\u0041",_cgee .A );_dggef .SetIfNotNil ("\u0041\u0041",_cgee .AA );return _gdgb ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bfgb *PdfColorLab )GetNumComponents ()int {return 3};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbfa .PdfObject ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ggfa *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ggfa ._ecgeb ==nil {_ggfa ._ecgeb =_aa .NewPSExecutor (_ggfa .Program );};var _edae []_aa .PSObject ;for _ ,_gaea :=range xVec {_edae =append (_edae ,_aa .MakeReal (_gaea ));
};_fffbdf ,_gfefc :=_ggfa ._ecgeb .Execute (_edae );if _gfefc !=nil {return nil ,_gfefc ;};_gfba ,_gfefc :=_aa .PSObjectArrayToFloat64Array (_fffbdf );if _gfefc !=nil {return nil ,_gfefc ;};return _gfba ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetMCID returns the MCID of the KValue.
func (_cacg *KValue )GetMCID ()*int {return _cacg ._aagdb };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cgdfd ,_ebefag :=NewStandard14Font (basefont );if _ebefag !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _cgdfd ;};func (_egceae *XObjectImage )getParamsDict ()*_bbfa .PdfObjectDictionary {_dbedg :=_bbfa .MakeDict ();_dbedg .Set ("\u0057\u0069\u0064t\u0068",_bbfa .MakeInteger (*_egceae .Width ));_dbedg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbfa .MakeInteger (*_egceae .Height ));
_dbedg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbfa .MakeInteger (int64 (_egceae .ColorSpace .GetNumComponents ())));_dbedg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbfa .MakeInteger (*_egceae .BitsPerComponent ));
return _dbedg ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bbfa .PdfObjectName ;Colorants _bbfa .PdfObject ;Process _bbfa .PdfObject ;MixingHints _bbfa .PdfObject ;_ddfa *_bbfa .PdfIndirectObject ;};func (_gaba *PdfReader )newPdfAnnotationLinkFromDict (_dfdg *_bbfa .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_dfce :=PdfAnnotationLink {};
_dfce .A =_dfdg .Get ("\u0041");_dfce .Dest =_dfdg .Get ("\u0044\u0065\u0073\u0074");_dfce .H =_dfdg .Get ("\u0048");_dfce .PA =_dfdg .Get ("\u0050\u0041");_dfce .QuadPoints =_dfdg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dfce .BS =_dfdg .Get ("\u0042\u0053");
return &_dfce ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dffaa *PdfReader )GetPageLabels ()(_bbfa .PdfObject ,error ){_bgdabf :=_bbfa .ResolveReference (_dffaa ._abdcg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bgdabf ==nil {return nil ,nil ;};if !_dffaa ._bbbee {_agfdbf :=_dffaa .traverseObjectData (_bgdabf );
if _agfdbf !=nil {return nil ,_agfdbf ;};};return _bgdabf ,nil ;};func NewViewerPreferencesFromPdfObject (obj _bbfa .PdfObject )(*ViewerPreferences ,error ){_ccefc :=_bbfa .ResolveReference (obj );_begc ,_gcgff :=_bbfa .GetDict (_ccefc );if !_gcgff {return nil ,_b .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gdegc :=NewViewerPreferences ();if _geggf :=_begc .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_geggf !=nil {if _afdeg ,_dcefb :=_bbfa .GetBool (_geggf );_dcefb {_gdegc ._bffef =(*bool )(_afdeg );};};if _ecdff :=_begc .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_ecdff !=nil {if _bcecgg ,_bagba :=_bbfa .GetBool (_ecdff );_bagba {_gdegc ._febff =(*bool )(_bcecgg );};};if _eegac :=_begc .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_eegac !=nil {if _abeed ,_daafc :=_bbfa .GetBool (_eegac );
_daafc {_gdegc ._egeca =(*bool )(_abeed );};};if _cdaed :=_begc .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_cdaed !=nil {if _egcfb ,_adeed :=_bbfa .GetBool (_cdaed );_adeed {_gdegc ._dbdga =(*bool )(_egcfb );};};if _geeed :=_begc .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_geeed !=nil {if _acebf ,_aefbe :=_bbfa .GetBool (_geeed );_aefbe {_gdegc ._dfdab =(*bool )(_acebf );};};if _fcccc :=_begc .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_fcccc !=nil {if _bfcaf ,_dfgd :=_bbfa .GetBool (_fcccc );
_dfgd {_gdegc ._bgedd =(*bool )(_bfcaf );};};if _ededf :=_begc .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_ededf !=nil {if _ebdfd ,_edee :=_bbfa .GetName (_ededf );_edee {_gdegc ._dbcge =NonFullScreenPageMode (*_ebdfd );
};};if _bcedb :=_begc .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_bcedb !=nil {if _fddeb ,_aeggc :=_bbfa .GetName (_bcedb );_aeggc {_gdegc ._acdab =Direction (*_fddeb );};};if _gbbga :=_begc .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_gbbga !=nil {if _cfafc ,_dcdf :=_bbfa .GetName (_gbbga );_dcdf {_gdegc ._edbad =PageBoundary (*_cfafc );};};if _dedb :=_begc .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_dedb !=nil {if _ebfca ,_fabbf :=_bbfa .GetName (_dedb );_fabbf {_gdegc ._ggbae =PageBoundary (*_ebfca );
};};if _aggfecg :=_begc .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_aggfecg !=nil {if _bbdgc ,_dcdcb :=_bbfa .GetName (_aggfecg );_dcdcb {_gdegc ._abfgd =PageBoundary (*_bbdgc );};};if _bdaaa :=_begc .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_bdaaa !=nil {if _bcaagf ,_acdcb :=_bbfa .GetName (_bdaaa );_acdcb {_gdegc ._dcfaa =PageBoundary (*_bcaagf );};};if _aeddf :=_begc .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_aeddf !=nil {if _cbacdb ,_dbefe :=_bbfa .GetName (_aeddf );
_dbefe {_gdegc ._beced =PrintScaling (*_cbacdb );};};if _ceedg :=_begc .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_ceedg !=nil {if _dbdac ,_ddgc :=_bbfa .GetName (_ceedg );_ddgc {_gdegc ._agca =Duplex (*_dbdac );};};if _gbbdg :=_begc .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_gbbdg !=nil {if _ddfef ,_gcaaee :=_bbfa .GetBool (_gbbdg );_gcaaee {_gdegc ._dbacd =(*bool )(_ddfef );};};if _baadc :=_begc .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_baadc !=nil {if _becb ,_ecada :=_bbfa .GetArray (_baadc );
_ecada {_gdegc ._dcdbb =make ([]int ,_becb .Len ());for _fdcee :=range _gdegc ._dcdbb {if _edfbg :=_becb .Get (_fdcee );_edfbg !=nil {if _fdfc ,_gbba :=_bbfa .GetInt (_edfbg );_gbba {_gdegc ._dcdbb [_fdcee ]=int (*_fdfc );};};};};};if _fgdcb :=_begc .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_fgdcb !=nil {if _afcdae ,_faddc :=_bbfa .GetInt (_fgdcb );_faddc {_gdegc ._dbaae =int (*_afcdae );};};return _gdegc ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ddccbe *XObjectForm )GetContainingPdfObject ()_bbfa .PdfObject {return _ddccbe ._cdbdc };func (_fddf *LTV )generateVRIKey (_gcge *PdfSignature )(string ,error ){_addeg ,_acefd :=_dcefc (_gcge .Contents .Bytes ());if _acefd !=nil {return "",_acefd ;
};return _ge .ToUpper (_eaa .EncodeToString (_addeg )),nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cbc :=NewPdfAction ();_dcd :=&PdfActionGoTo3DView {};_dcd .PdfAction =_cbc ;_cbc .SetContext (_dcd );return _dcd ;};func _agabe (_aggeg _bbfa .PdfObject )*Names {_cbfe :=_bdebf ();_fgedc :=_bbfa .TraceToDirectObject (_aggeg ).(*_bbfa .PdfObjectDictionary );
if _bcecd :=_fgedc .Get ("\u0044\u0065\u0073t\u0073");_bcecd !=nil {_cbfe .Dests =_bbfa .TraceToDirectObject (_bcecd ).(*_bbfa .PdfObjectDictionary );};if _abdgc :=_fgedc .Get ("\u0041\u0050");_abdgc !=nil {_cbfe .AP =_bbfa .TraceToDirectObject (_abdgc ).(*_bbfa .PdfObjectDictionary );
};if _fbadc :=_fgedc .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_fbadc !=nil {_cbfe .JavaScript =_bbfa .TraceToDirectObject (_fbadc ).(*_bbfa .PdfObjectDictionary );};if _bbfc :=_fgedc .Get ("\u0050\u0061\u0067e\u0073");_bbfc !=nil {_cbfe .Pages =_bbfa .TraceToDirectObject (_bbfc ).(*_bbfa .PdfObjectDictionary );
};if _bffab :=_fgedc .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_bffab !=nil {_cbfe .Templates =_bbfa .TraceToDirectObject (_bffab ).(*_bbfa .PdfObjectDictionary );};if _abcfg :=_fgedc .Get ("\u0049\u0044\u0053");_abcfg !=nil {_cbfe .IDS =_bbfa .TraceToDirectObject (_abcfg ).(*_bbfa .PdfObjectDictionary );
};if _fbfe :=_fgedc .Get ("\u0055\u0052\u004c\u0053");_fbfe !=nil {_cbfe .URLS =_bbfa .TraceToDirectObject (_fbfe ).(*_bbfa .PdfObjectDictionary );};if _fcgcg :=_fgedc .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_fcgcg !=nil {_cbfe .EmbeddedFiles =_bbfa .TraceToDirectObject (_fcgcg ).(*_bbfa .PdfObjectDictionary );};if _dcbfd :=_fgedc .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_dcbfd !=nil {_cbfe .AlternatePresentations =_bbfa .TraceToDirectObject (_dcbfd ).(*_bbfa .PdfObjectDictionary );};if _bfgeg :=_fgedc .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_bfgeg !=nil {_cbfe .Renditions =_bbfa .TraceToDirectObject (_bfgeg ).(*_bbfa .PdfObjectDictionary );
};return _cbfe ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ddgegc *PdfReader )GetIndirectObjectByNumber (number int )(_bbfa .PdfObject ,error ){_aeccgg ,_efdaf :=_ddgegc ._fdefeb .LookupByNumber (number );return _aeccgg ,_efdaf ;};func (_bbdeb *PdfReader )newPdfSignatureReferenceFromDict (_cgdffe *_bbfa .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _cgegg ,_faegb :=_bbdeb ._accb .GetModelFromPrimitive (_cgdffe ).(*PdfSignatureReference );
_faegb {return _cgegg ,nil ;};_bacef :=&PdfSignatureReference {_egbgd :_cgdffe ,Data :_cgdffe .Get ("\u0044\u0061\u0074\u0061")};var _aeddd bool ;_bacef .Type ,_ =_bbfa .GetName (_cgdffe .Get ("\u0054\u0079\u0070\u0065"));_bacef .TransformMethod ,_aeddd =_bbfa .GetName (_cgdffe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_aeddd {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bacef .TransformParams ,_ =_bbfa .GetDict (_cgdffe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bacef .DigestMethod ,_ =_bbfa .GetName (_cgdffe .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _bacef ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_aefbd *PdfPattern )SetContext (ctx PdfModel ){_aefbd ._eabcc =ctx };

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_cad PdfModel ;Type _bbfa .PdfObject ;S _bbfa .PdfObject ;Next _bbfa .PdfObject ;_ff *_bbfa .PdfIndirectObject ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bbfa .PdfObject ;AN _bbfa .PdfObject ;OP _bbfa .PdfObject ;JS _bbfa .PdfObject ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_afbe *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cbee :=&PdfColorPattern {};_adfde ,_gfcgg :=objects [len (objects )-1].(*_bbfa .PdfObjectName );if !_gfcgg {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cbee .PatternName =*_adfde ;if len (objects )> 1{_becd :=objects [0:len (objects )-1];if _afbe .UnderlyingCS ==nil {_df .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_gf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_afcg ,_bccfd :=_afbe .UnderlyingCS .ColorFromPdfObjects (_becd );if _bccfd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bccfd );
return nil ,_bccfd ;};_cbee .Color =_afcg ;};return _cbee ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baega *PdfShadingType2 )ToPdfObject ()_bbfa .PdfObject {_baega .PdfShading .ToPdfObject ();_ffbbc ,_dcgca :=_baega .getShadingDict ();if _dcgca !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ffbbc ==nil {_df .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _baega .Coords !=nil {_ffbbc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_baega .Coords );
};if _baega .Domain !=nil {_ffbbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_baega .Domain );};if _baega .Function !=nil {if len (_baega .Function )==1{_ffbbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baega .Function [0].ToPdfObject ());
}else {_gfaee :=_bbfa .MakeArray ();for _ ,_bddfg :=range _baega .Function {_gfaee .Append (_bddfg .ToPdfObject ());};_ffbbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfaee );};};if _baega .Extend !=nil {_ffbbc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_baega .Extend );
};return _baega ._facd ;};

// SetBorderWidth sets the style's border width.
func (_fgfg *PdfBorderStyle )SetBorderWidth (width float64 ){_fgfg .W =&width };

// SetDate sets the `M` field of the signature.
func (_ebcacf *PdfSignature )SetDate (date _ea .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ebcacf .M =_bbfa .MakeString (date .Format (format ));
};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ae :=NewPdfAction ();_fa :=&PdfActionGoToR {};_fa .PdfAction =_ae ;_ae .SetContext (_fa );return _fa ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gece *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gece .Base ==nil {return nil ,_gf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gece .Base .ColorToRGB (color );};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_afg :=NewPdfAnnotation ();_dbdf :=&PdfAnnotationLine {};_dbdf .PdfAnnotation =_afg ;_dbdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afg .SetContext (_dbdf );return _dbdf ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_dbgdd *PdfField )GetContainingPdfObject ()_bbfa .PdfObject {return _dbgdd ._dfeg };func (_bed *PdfReader )newPdfActionGotoEFromDict (_efde *_bbfa .PdfObjectDictionary )(*PdfActionGoToE ,error ){_cdb ,_bda :=_cge (_efde .Get ("\u0046"));if _bda !=nil {return nil ,_bda ;
};return &PdfActionGoToE {D :_efde .Get ("\u0044"),NewWindow :_efde .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_efde .Get ("\u0054"),F :_cdb },nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_bbfa .MakeDict (),ParentTreeNextKey :0};};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cdgcb :=&PdfSignature {Type :_bbfa .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bdbddg :=&pdfSignDictionary {PdfObjectDictionary :_bbfa .MakeDict (),_dbaad :&handler ,_cegcg :_cdgcb };
_cdgcb ._dddfg =_bbfa .MakeIndirectObject (_bdbddg );return _cdgcb ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bbfa .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_gadg :=&PdfColorPattern {};return _gadg };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_efd .SimpleEncoder ,error ){_dgdg ,_gbaa :=_baba (basefont );if _gbaa !=nil {return nil ,nil ,_gbaa ;};_gfcc ,_ebaf :=_dgdg .Encoder ().(_efd .SimpleEncoder );
if !_ebaf {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_dgdg .Encoder ());
};_cggc :=make (map[rune ]_efd .GlyphName );for _gggg :=range alphabet {if _ ,_egeb :=_gfcc .RuneToCharcode (_gggg );!_egeb {_ ,_gcde :=_dgdg ._bgbe .Read (_gggg );if !_gcde {_df .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gggg ,_gggg );
continue ;};_fggb ,_gcde :=_efd .RuneToGlyph (_gggg );if !_gcde {_df .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gggg ,_gggg );continue ;};if len (_cggc )>=255{return nil ,nil ,_gf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_cggc [_gggg ]=_fggb ;};};var (_gedc []_efd .CharCode ;_dbefg []_efd .CharCode ;);for _bcbfa :=_efd .CharCode (1);_bcbfa <=0xff;_bcbfa ++{_aggd ,_fgege :=_gfcc .CharcodeToRune (_bcbfa );if !_fgege {_gedc =append (_gedc ,_bcbfa );continue ;};if _ ,_fgege =alphabet [_aggd ];
!_fgege {_dbefg =append (_dbefg ,_bcbfa );};};_fcee :=append (_gedc ,_dbefg ...);if len (_fcee )< len (_cggc ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_cggc ),len (_fcee ));
};_facf :=make ([]rune ,0,len (_cggc ));for _ggefa :=range _cggc {_facf =append (_facf ,_ggefa );};_da .Slice (_facf ,func (_dfaca ,_cfbbc int )bool {return _facf [_dfaca ]< _facf [_cfbbc ]});_bfda :=make (map[_efd .CharCode ]_efd .GlyphName ,len (_facf ));
for _ ,_egfe :=range _facf {_fafd :=_fcee [0];_fcee =_fcee [1:];_bfda [_fafd ]=_cggc [_egfe ];};_gfcc =_efd .ApplyDifferences (_gfcc ,_bfda );_dgdg .SetEncoder (_gfcc );return &PdfFont {_gdfa :&_dgdg },_gfcc ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cedae *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cebge ,_gcgfe :=_bbfa .GetDict (_cedae ._cgfbd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_gcgfe {_cebge =_bbfa .MakeDict ();_cedae ._cgfbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cebge );
};_eged ,_gcgfe :=_bbfa .GetDict (_cebge .Get (_bbfa .PdfObjectName (extName )));if !_gcgfe {_eged =_bbfa .MakeDict ();_cebge .Set (_bbfa .PdfObjectName (extName ),_eged );};if _eaadd ,_ :=_bbfa .GetNameVal (_eged .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_eaadd !=baseVersion {_eged .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bbfa .MakeName (baseVersion ));};if _cebga ,_ :=_bbfa .GetIntVal (_eged .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cebga !=extLevel {_eged .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bbfa .MakeInteger (int64 (extLevel )));};};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_bgece *XObjectForm )SetContentStream (content []byte ,encoder _bbfa .StreamEncoder )error {_abfdcf :=content ;if encoder ==nil {if _bgece .Filter !=nil {encoder =_bgece .Filter ;}else {encoder =_bbfa .NewRawEncoder ();};};_ffaaf ,_bedg :=encoder .EncodeBytes (_abfdcf );
if _bedg !=nil {return _bedg ;};_abfdcf =_ffaaf ;_bgece .Stream =_abfdcf ;_bgece .Filter =encoder ;return nil ;};var _fgcd =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gadc *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gadc ._eabcc .(*PdfShadingPattern );};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_edaga *PdfAppender )GetDSS ()(_cfce *DSS ){return _edaga ._bdbd };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fceag *PdfPageResources )SetXObjectImageByName (keyName _bbfa .PdfObjectName ,ximg *XObjectImage )error {_ecdga :=ximg .ToPdfObject ().(*_bbfa .PdfObjectStream );_ddbdb :=_fceag .SetXObjectByName (keyName ,_ecdga );return _ddbdb ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// HasFontByName checks if has font resource by name.
func (_bgcbf *PdfPage )HasFontByName (name _bbfa .PdfObjectName )bool {_cebca ,_fcfbc :=_bgcbf .Resources .Font .(*_bbfa .PdfObjectDictionary );if !_fcfbc {return false ;};if _efbcc :=_cebca .Get (name );_efbcc !=nil {return true ;};return false ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bbfa .PdfObjectStream ;Data []byte ;_fcbgf *_bbfa .PdfIndirectObject ;_eeaa *_bbfa .PdfObjectStream ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_bcdcd *PdfPageResources )HasXObjectByName (keyName _bbfa .PdfObjectName )bool {_addba ,_ :=_bcdcd .GetXObjectByName (keyName );return _addba !=nil ;};

// B returns the value of the B component of the color.
func (_adggc *PdfColorLab )B ()float64 {return _adggc [2]};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_efbb *PdfColorspaceICCBased )ToPdfObject ()_bbfa .PdfObject {_ccaef :=&_bbfa .PdfObjectArray {};_ccaef .Append (_bbfa .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bdcf *_bbfa .PdfObjectStream ;if _efbb ._eeaa !=nil {_bdcf =_efbb ._eeaa ;
}else {_bdcf =&_bbfa .PdfObjectStream {};};_efcbg :=_bbfa .MakeDict ();_efcbg .Set ("\u004e",_bbfa .MakeInteger (int64 (_efbb .N )));if _efbb .Alternate !=nil {_efcbg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_efbb .Alternate .ToPdfObject ());
};if _efbb .Metadata !=nil {_efcbg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_efbb .Metadata );};if _efbb .Range !=nil {var _cegb []_bbfa .PdfObject ;for _ ,_baca :=range _efbb .Range {_cegb =append (_cegb ,_bbfa .MakeFloat (_baca ));};_efcbg .Set ("\u0052\u0061\u006eg\u0065",_bbfa .MakeArray (_cegb ...));
};_efcbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_efbb .Data ))));_bdcf .Stream =_efbb .Data ;_bdcf .PdfObjectDictionary =_efcbg ;_ccaef .Append (_bdcf );if _efbb ._fcbgf !=nil {_efbb ._fcbgf .PdfObject =_ccaef ;return _efbb ._fcbgf ;
};return _ccaef ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cgfg _cb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_aefdc _gd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_bffde _gd .Image )(*Image ,error );

// Compress an image.
Compress (_ebfeg *Image ,_eaeg int64 )(*Image ,error );};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_fgd *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_bdcab *PdfFunctionType0 )processSamples ()error {_ddgeg :=_cgb .ResampleBytes (_bdcab ._ggbee ,_bdcab .BitsPerSample );_bdcab ._fgdc =_ddgeg ;return nil ;
};

// SetCenterWindow sets the value of the centerWindow flag.
func (_fcgab *ViewerPreferences )SetCenterWindow (centerWindow bool ){_fcgab ._dfdab =&centerWindow };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_dabf :=NewPdfAnnotation ();_fbc :=&PdfAnnotationUnderline {};_fbc .PdfAnnotation =_dabf ;_fbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dabf .SetContext (_fbc );return _fbc ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_eceegf *modelManager )GetModelFromPrimitive (primitive _bbfa .PdfObject )PdfModel {_eceegf ._gcgc .RLock ();defer _eceegf ._gcgc .RUnlock ();model ,_adfbb :=_eceegf ._cbgc [primitive ];if !_adfbb {return nil ;};return model ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fgad *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_egee ,_afeb :=color .(*PdfColorDeviceRGB );if !_afeb {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _egee ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bbfa .PdfObjectInteger ;BitsPerComponent *_bbfa .PdfObjectInteger ;BitsPerFlag *_bbfa .PdfObjectInteger ;Decode *_bbfa .PdfObjectArray ;Function []PdfFunction ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bdae *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bdae .Alternate ==nil {if _bdae .N ==1{_cgdg :=NewPdfColorspaceDeviceGray ();return _cgdg .ColorFromFloats (vals );}else if _bdae .N ==3{_bbde :=NewPdfColorspaceDeviceRGB ();
return _bbde .ColorFromFloats (vals );}else if _bdae .N ==4{_gcbf :=NewPdfColorspaceDeviceCMYK ();return _gcbf .ColorFromFloats (vals );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bdae .Alternate .ColorFromFloats (vals );};

// SetName sets the `Name` field of the signature.
func (_dggee *PdfSignature )SetName (name string ){_dggee .Name =_bbfa .MakeEncodedString (name ,true )};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_bageb *PdfWriter )SetOpenAction (dest _bbfa .PdfObject )error {if dest ==nil ||_bbfa .IsNullObject (dest ){return nil ;};_bageb ._cgfbd .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _bageb .addObjects (dest );
};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_dgeg *pdfFontSimple )SetEncoder (encoder _efd .TextEncoder ){_dgeg ._cdea =encoder };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fefb :=&PdfFieldSignature {};_fefb .PdfField =NewPdfField ();_fefb .PdfField .SetContext (_fefb );_fefb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fefb .PdfAnnotationWidget .SetContext (_fefb );
_fefb .PdfAnnotationWidget ._dbge =_fefb .PdfField ._dfeg ;_fefb .T =_bbfa .MakeString ("");_fefb .F =_bbfa .MakeInteger (132);_fefb .V =signature ;return _fefb ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bbfa .PdfObject ;};func _bdebf ()*Names {return &Names {_ggfg :_bbfa .MakeIndirectObject (_bbfa .MakeDict ())}};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fdec FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fdec .Mask ()|fl .Mask ())};

// Direction returns the value of the direction.
func (_cacba *ViewerPreferences )Direction ()Direction {return _cacba ._acdab };

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_eefca *ViewerPreferences )IsHideWindowUI ()bool {if _eefca ._egeca ==nil {return false ;};return *_eefca ._egeca ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fed *PdfAnnotation )GetContext ()PdfModel {if _fed ==nil {return nil ;};return _fed ._bgeb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cccd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bbfa .PdfObject ;Mac _bbfa .PdfObject ;Unix _bbfa .PdfObject ;NewWindow _bbfa .PdfObject ;};func _bac (_fdba _bbfa .PdfObject )(*PdfBorderStyle ,error ){_gdad :=&PdfBorderStyle {};_gdad ._bdcc =_fdba ;
var _eaag *_bbfa .PdfObjectDictionary ;_fdba =_bbfa .TraceToDirectObject (_fdba );_eaag ,_ebed :=_fdba .(*_bbfa .PdfObjectDictionary );if !_ebed {return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ebdg :=_eaag .Get ("\u0054\u0079\u0070\u0065");
_ebdg !=nil {_bdd ,_afa :=_ebdg .(*_bbfa .PdfObjectName );if !_afa {_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ebdg );
}else {if *_bdd !="\u0042\u006f\u0072\u0064\u0065\u0072"{_df .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bdd );};};};if _gdf :=_eaag .Get ("\u0057");
_gdf !=nil {_cegc ,_fgff :=_bbfa .GetNumberAsFloat (_gdf );if _fgff !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fgff );return nil ,_fgff ;};_gdad .W =&_cegc ;
};if _cfaf :=_eaag .Get ("\u0053");_cfaf !=nil {_bbab ,_ccea :=_cfaf .(*_bbfa .PdfObjectName );if !_ccea {return nil ,_gf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dce BorderStyle ;switch *_bbab {case "\u0053":_dce =BorderStyleSolid ;case "\u0044":_dce =BorderStyleDashed ;case "\u0042":_dce =BorderStyleBeveled ;case "\u0049":_dce =BorderStyleInset ;case "\u0055":_dce =BorderStyleUnderline ;default:_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bbab );
return nil ,_gf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gdad .S =&_dce ;};if _cbfd :=_eaag .Get ("\u0044");_cbfd !=nil {_efgde ,_agga :=_cbfd .(*_bbfa .PdfObjectArray );
if !_agga {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cbfd );return nil ,_gf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_feaf ,_gbf :=_efgde .ToIntegerArray ();if _gbf !=nil {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_gbf );
return nil ,_gbf ;};_gdad .D =&_feaf ;};return _gdad ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ffcd :=PdfColorCalRGB {a ,b ,c };return &_ffcd ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cead *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_eegg :=_cgb .NewReader (img .getBase ());_fafab :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cead .AlternateSpace .GetNumComponents (),nil ,img ._eccdd ,nil );
_fadb :=_cgb .NewWriter (_fafab );_gfbc :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_df .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_df .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cead .TintTransform );_fdac :=_cead .AlternateSpace .DecodeArray ();var (_abea uint32 ;_agcga error ;);for {_abea ,_agcga =_eegg .ReadSample ();
if _agcga ==_cb .EOF {break ;};if _agcga !=nil {return img ,_agcga ;};_adffe :=float64 (_abea )/_gfbc ;_cbde ,_faad :=_cead .TintTransform .Evaluate ([]float64 {_adffe });if _faad !=nil {return img ,_faad ;};for _ddae ,_gcaae :=range _cbde {_gacd :=_bbf .LinearInterpolate (_gcaae ,_fdac [_ddae *2],_fdac [_ddae *2+1],0,1);
if _faad =_fadb .WriteSample (uint32 (_gacd *_gfbc ));_faad !=nil {return img ,_faad ;};};};return _cead .AlternateSpace .ImageToRGB (_ebdgf (&_fafab ));};func _abebe (_ecef *[]*PdfField ,_cagd FieldFilterFunc ,_deccg bool )[]*PdfField {if _ecef ==nil {return nil ;
};_eefcc :=*_ecef ;if len (*_ecef )==0{return nil ;};_fedda :=_eefcc [:0];if _cagd ==nil {_cagd =func (*PdfField )bool {return true };};var _gbea []*PdfField ;for _ ,_agcc :=range _eefcc {_beabe :=_cagd (_agcc );if _beabe {_gbea =append (_gbea ,_agcc );
if len (_agcc .Kids )> 0{_gbea =append (_gbea ,_abebe (&_agcc .Kids ,_cagd ,_deccg )...);};};if !_deccg ||!_beabe ||len (_agcc .Kids )> 0{_fedda =append (_fedda ,_agcc );};};*_ecef =_fedda ;return _gbea ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dgbcf :=&PdfOutlineItem {_efffa :_bbfa .MakeIndirectObject (_bbfa .MakeDict ())};_dgbcf ._cedfc =_dgbcf ;return _dgbcf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbgae *PdfShading )ToPdfObject ()_bbfa .PdfObject {_debgg :=_cbgae ._facd ;_edefd ,_fgecc :=_cbgae .getShadingDict ();if _fgecc !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cbgae .ShadingType !=nil {_edefd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cbgae .ShadingType );};if _cbgae .ColorSpace !=nil {_edefd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cbgae .ColorSpace .ToPdfObject ());
};if _cbgae .Background !=nil {_edefd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cbgae .Background );};if _cbgae .BBox !=nil {_edefd .Set ("\u0042\u0042\u006f\u0078",_cbgae .BBox .ToPdfObject ());};if _cbgae .AntiAlias !=nil {_edefd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cbgae .AntiAlias );
};return _debgg ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func _gfggg (_gaefc *_bbfa .PdfObjectDictionary ,_ggcaeb *fontCommon ,_babg _efd .TextEncoder )(*pdfFontSimple ,error ){_edff :=_ffgd (_ggcaeb );_edff ._gfce =_babg ;if _babg ==nil {_cfcc :=_gaefc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _cfcc ==nil {_cfcc =_bbfa .MakeInteger (0);};_edff .FirstChar =_cfcc ;_bfge ,_cabe :=_bbfa .GetIntVal (_cfcc );if !_cabe {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cfcc );
return nil ,_bbfa .ErrTypeError ;};_dgdeb :=_efd .CharCode (_bfge );_cfcc =_gaefc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cfcc ==nil {_cfcc =_bbfa .MakeInteger (255);};_edff .LastChar =_cfcc ;_bfge ,_cabe =_bbfa .GetIntVal (_cfcc );
if !_cabe {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cfcc );return nil ,_bbfa .ErrTypeError ;
};_aegabc :=_efd .CharCode (_bfge );_edff ._ggfc =make (map[_efd .CharCode ]float64 );_cfcc =_gaefc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cfcc !=nil {_edff .Widths =_cfcc ;_edfed ,_fdbg :=_bbfa .GetArray (_cfcc );if !_fdbg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cfcc );
return nil ,_bbfa .ErrTypeError ;};_ccbcb ,_deccd :=_edfed .ToFloat64Array ();if _deccd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_deccd ;};if len (_ccbcb )!=int (_aegabc -_dgdeb +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_aegabc -_dgdeb +1,len (_ccbcb ));
return nil ,_bbfa .ErrRangeError ;};for _ddgd ,_fcdec :=range _ccbcb {_edff ._ggfc [_dgdeb +_efd .CharCode (_ddgd )]=_fcdec ;};};};_edff .Encoding =_bbfa .TraceToDirectObject (_gaefc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _edff ,nil ;
};

// SetDuplex sets the value of the duplex.
func (_ffagb *ViewerPreferences )SetDuplex (duplex Duplex ){_ffagb ._agca =duplex };

// ToPdfObject implements interface PdfModel.
func (_bbfe *PdfActionGoTo )ToPdfObject ()_bbfa .PdfObject {_bbfe .PdfAction .ToPdfObject ();_ffd :=_bbfe ._ff ;_ddb :=_ffd .PdfObject .(*_bbfa .PdfObjectDictionary );_ddb .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeGoTo )));_ddb .SetIfNotNil ("\u0044",_bbfe .D );
return _ffd ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_aeceb *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_cedf :=map[*PdfAnnotation ]bool {};_cggab ,_fegfa :=_aeceb .GetAnnotations ();if _fegfa !=nil {return _fegfa ;};_fdde :=false ;for _ ,_cbdf :=range _cggab {if opts .AnnotFilterFunc !=nil {_cedf [_cbdf ]=opts .AnnotFilterFunc (_cbdf );
}else {_cedf [_cbdf ]=true ;};if _cedf [_cbdf ]{_fdde =true ;};};if !_fdde {return nil ;};return _aeceb .flattenFieldsWithOpts (appgen ,opts ,_cedf );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bdda *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_eegc *PdfAnnotationPrinterMark )ToPdfObject ()_bbfa .PdfObject {_eegc .PdfAnnotation .ToPdfObject ();_dcbg :=_eegc ._dbge ;_gaafd :=_dcbg .PdfObject .(*_bbfa .PdfObjectDictionary );_gaafd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_gaafd .SetIfNotNil ("\u004d\u004e",_eegc .MN );return _dcbg ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bbfa .PdfObject ;ColorSpace _bbfa .PdfObject ;Pattern _bbfa .PdfObject ;Shading _bbfa .PdfObject ;XObject _bbfa .PdfObject ;Font _bbfa .PdfObject ;ProcSet _bbfa .PdfObject ;Properties _bbfa .PdfObject ;_gddca *_bbfa .PdfObjectDictionary ;
_aeee *PdfPageResourcesColorspaces ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cb .ReadSeeker )(*PdfFont ,error ){const _dfbba =_efd .CharCode (32);const _cegbg =_efd .CharCode (255);_afdaf ,_edgfd :=_cb .ReadAll (r );if _edgfd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_edgfd );
return nil ,_edgfd ;};_faaeb ,_edgfd :=_fg .TtfParse (_de .NewReader (_afdaf ));if _edgfd !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_edgfd );
return nil ,_edgfd ;};_fcbgb :=&pdfFontSimple {_ggfc :make (map[_efd .CharCode ]float64 ),fontCommon :fontCommon {_eebdg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fcbgb ._cdea =_efd .NewWinAnsiEncoder ();_fcbgb ._fdace =_faaeb .PostScriptName ;
_fcbgb .FirstChar =_bbfa .MakeInteger (int64 (_dfbba ));_fcbgb .LastChar =_bbfa .MakeInteger (int64 (_cegbg ));_gafca :=1000.0/float64 (_faaeb .UnitsPerEm );if len (_faaeb .Widths )<=0{return nil ,_gf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cegbf :=_gafca *float64 (_faaeb .Widths [0]);_deegd :=make ([]float64 ,0,_cegbg -_dfbba +1);for _daff :=_dfbba ;_daff <=_cegbg ;_daff ++{_daac ,_ccagc :=_fcbgb .Encoder ().CharcodeToRune (_daff );if !_ccagc {_df .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_daff );
_deegd =append (_deegd ,_cegbf );continue ;};_ddca ,_babgc :=_faaeb .Chars [_daac ];if !_babgc {_df .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_deegd =append (_deegd ,_cegbf );continue ;
};_ddfga :=_gafca *float64 (_faaeb .Widths [_ddca ]);_deegd =append (_deegd ,_ddfga );};_fcbgb .Widths =_bbfa .MakeIndirectObject (_bbfa .MakeArrayFromFloats (_deegd ));if len (_deegd )< int (_cegbg -_dfbba +1){_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_deegd ),255-32+1);
return nil ,_bbfa .ErrRangeError ;};for _acde :=_dfbba ;_acde <=_cegbg ;_acde ++{_fcbgb ._ggfc [_acde ]=_deegd [_acde -_dfbba ];};_fcbgb .Encoding =_bbfa .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fcgegc :=&PdfFontDescriptor {};
_fcgegc .FontName =_bbfa .MakeName (_faaeb .PostScriptName );_fcgegc .Ascent =_bbfa .MakeFloat (_gafca *float64 (_faaeb .TypoAscender ));_fcgegc .Descent =_bbfa .MakeFloat (_gafca *float64 (_faaeb .TypoDescender ));_fcgegc .CapHeight =_bbfa .MakeFloat (_gafca *float64 (_faaeb .CapHeight ));
_fcgegc .FontBBox =_bbfa .MakeArrayFromFloats ([]float64 {_gafca *float64 (_faaeb .Xmin ),_gafca *float64 (_faaeb .Ymin ),_gafca *float64 (_faaeb .Xmax ),_gafca *float64 (_faaeb .Ymax )});_fcgegc .ItalicAngle =_bbfa .MakeFloat (_faaeb .ItalicAngle );_fcgegc .MissingWidth =_bbfa .MakeFloat (_gafca *float64 (_faaeb .Widths [0]));
_gcfgd ,_edgfd :=_bbfa .MakeStream (_afdaf ,_bbfa .NewFlateEncoder ());if _edgfd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_edgfd );
return nil ,_edgfd ;};_gcfgd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbfa .MakeInteger (int64 (len (_afdaf ))));_fcgegc .FontFile2 =_gcfgd ;if _faaeb .Bold {_fcgegc .StemV =_bbfa .MakeInteger (120);}else {_fcgegc .StemV =_bbfa .MakeInteger (70);
};_ggec :=_fbfb ;if _faaeb .IsFixedPitch {_ggec |=_aegcb ;};if _faaeb .ItalicAngle !=0{_ggec |=_fgef ;};_fcgegc .Flags =_bbfa .MakeInteger (int64 (_ggec ));_fcbgb ._cbbb =_fcgegc ;_cbbf :=&PdfFont {_gdfa :_fcbgb };return _cbbf ,nil ;};

// Items returns all children outline items.
func (_gdacg *Outline )Items ()[]*OutlineItem {return _gdacg .Entries };func (_cbg *PdfReader )newPdfAnnotation3DFromDict (_adag *_bbfa .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_aeg :=PdfAnnotation3D {};_aeg .T3DD =_adag .Get ("\u0033\u0044\u0044");
_aeg .T3DV =_adag .Get ("\u0033\u0044\u0056");_aeg .T3DA =_adag .Get ("\u0033\u0044\u0041");_aeg .T3DI =_adag .Get ("\u0033\u0044\u0049");_aeg .T3DB =_adag .Get ("\u0033\u0044\u0042");return &_aeg ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dbace *PdfReader )GetNamedDestinations ()(_bbfa .PdfObject ,error ){_faegg :=_bbfa .ResolveReference (_dbace ._abdcg .Get ("\u0044\u0065\u0073t\u0073"));if _faegg ==nil {return nil ,nil ;};if !_dbace ._bbbee {_gfagb :=_dbace .traverseObjectData (_faegg );
if _gfagb !=nil {return nil ,_gfagb ;};};return _faegg ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fdcf *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fdcf .Range };

// ToPdfObject implements interface PdfModel.
func (_ggbg *PdfAnnotationText )ToPdfObject ()_bbfa .PdfObject {_ggbg .PdfAnnotation .ToPdfObject ();_cdf :=_ggbg ._dbge ;_baeg :=_cdf .PdfObject .(*_bbfa .PdfObjectDictionary );if _ggbg .PdfAnnotationMarkup !=nil {_ggbg .PdfAnnotationMarkup .appendToPdfDictionary (_baeg );
};_baeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0054\u0065\u0078\u0074"));_baeg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ggbg .Open );_baeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggbg .Name );_baeg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ggbg .State );
_baeg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ggbg .StateModel );return _cdf ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bbfa .PdfObjectInteger ;BitsPerComponent *_bbfa .PdfObjectInteger ;BitsPerFlag *_bbfa .PdfObjectInteger ;Decode *_bbfa .PdfObjectArray ;Function []PdfFunction ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fgcf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fgcf ._aeee =colorspace ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bbfa .PdfObject ;Open _bbfa .PdfObject ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_dfeg :_bbfa .MakeIndirectObject (_bbfa .MakeDict ())}};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_ebebd :=&PdfShadingType2 {};_ebebd .PdfShading =&PdfShading {};_ebebd .PdfShading ._facd =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());_ebebd .PdfShading ._bagea =_ebebd ;return _ebebd ;};func _dedgb ()string {_efgcc .Lock ();
defer _efgcc .Unlock ();_gfcfe :=_dfc .GetLicenseKey ();if len (_aebd )> 0&&(_gfcfe .IsLicensed ()||_abbfdd ){return _aebd ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cdfb (),_gfcfe .TypeToString ());
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efgec *PdfShadingType6 )ToPdfObject ()_bbfa .PdfObject {_efgec .PdfShading .ToPdfObject ();_dbaec ,_cccfb :=_efgec .getShadingDict ();if _cccfb !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efgec .BitsPerCoordinate !=nil {_dbaec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_efgec .BitsPerCoordinate );};if _efgec .BitsPerComponent !=nil {_dbaec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efgec .BitsPerComponent );
};if _efgec .BitsPerFlag !=nil {_dbaec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_efgec .BitsPerFlag );};if _efgec .Decode !=nil {_dbaec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_efgec .Decode );};if _efgec .Function !=nil {if len (_efgec .Function )==1{_dbaec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efgec .Function [0].ToPdfObject ());
}else {_bbbefe :=_bbfa .MakeArray ();for _ ,_caceb :=range _efgec .Function {_bbbefe .Append (_caceb .ToPdfObject ());};_dbaec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbbefe );};};return _efgec ._facd ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_eagb *DSS )GenerateHashMaps ()error {_fgaa ,_fbda :=_eagb .generateHashMap (_eagb .Certs );if _fbda !=nil {return _fbda ;};_faca ,_fbda :=_eagb .generateHashMap (_eagb .OCSPs );if _fbda !=nil {return _fbda ;};_cfab ,_fbda :=_eagb .generateHashMap (_eagb .CRLs );
if _fbda !=nil {return _fbda ;};_eagb ._geeg =_fgaa ;_eagb ._ebeb =_faca ;_eagb ._dfff =_cfab ;return nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_dgede *PdfTransformParamsDocMDP )String ()string {return _b .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_dgede .Type ,_dgede .P ,_dgede .V );};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_efgcc .Lock ();defer _efgcc .Unlock ();_fabgb =keywords };func (_ccbca *PdfReader )loadDSS ()(*DSS ,error ){if _ccbca ._fdefeb .GetCrypter ()!=nil &&!_ccbca ._fdefeb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ccff :=_ccbca ._abdcg .Get ("\u0044\u0053\u0053");if _ccff ==nil {return nil ,nil ;};_eadbc ,_ :=_bbfa .GetIndirect (_ccff );_ccff =_bbfa .TraceToDirectObject (_ccff );switch _ggce :=_ccff .(type ){case *_bbfa .PdfObjectNull :return nil ,nil ;case *_bbfa .PdfObjectDictionary :return _dfddfc (_eadbc ,_ggce );
};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_ccff );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gafb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bbfa .StreamEncoder ,error ){_debe ,_deabd :=_gafb ._cgad .(*_bbfa .PdfObjectStream );if !_deabd {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gafb ._cgad );
return nil ,nil ,_bbfa .ErrTypeError ;};_ddga ,_dcfef :=_bbfa .DecodeStream (_debe );if _dcfef !=nil {_df .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dcfef );
return nil ,nil ,_dcfef ;};_gcdca ,_dcfef :=_bbfa .NewEncoderFromStream (_debe );if _dcfef !=nil {_df .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dcfef );
return nil ,nil ,_dcfef ;};return _ddga ,_gcdca ,nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_dcef :=Permissions {};_dcef .DocMDP =docMdp ;_daeag :=_bbfa .MakeDict ();_daeag .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_dcef ._ccbbdc =_daeag ;return &_dcef ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gcebb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_efd .CharCode )(_aafd []rune ,_gggb ,_fcff int ){_bafgf ,_gggb ,_fcff :=_gcebb .CharcodesToStrings (charcodes ,"");return []rune (_ge .Join (_bafgf ,"")),_gggb ,_fcff ;};

// AddCRLs adds CRLs to DSS.
func (_bega *DSS )AddCRLs (crls [][]byte )([]*_bbfa .PdfObjectStream ,error ){return _bega .add (&_bega .CRLs ,_bega ._dfff ,crls );};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_fabg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fabg .AlternateSpace ==nil {return nil ,_gf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fabg .AlternateSpace .ColorToRGB (color );};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_adf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_adf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_adf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fcgbg *PdfAppender ;_egbca *DSS ;};func (_cdd *PdfReader )newPdfAnnotationFromIndirectObject (_gag *_bbfa .PdfIndirectObject )(*PdfAnnotation ,error ){_aba ,_afd :=_gag .PdfObject .(*_bbfa .PdfObjectDictionary );if !_afd {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cdd ._accb .GetModelFromPrimitive (_aba );model !=nil {_ddfd ,_fgc :=model .(*PdfAnnotation );if !_fgc {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ddfd ,nil ;};_baac :=&PdfAnnotation {};_baac ._dbge =_gag ;_cdd ._accb .Register (_aba ,_baac );if _efeb :=_aba .Get ("\u0054\u0079\u0070\u0065");_efeb !=nil {_gec ,_cgea :=_efeb .(*_bbfa .PdfObjectName );if !_cgea {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_efeb );
}else {if *_gec !="\u0041\u006e\u006eo\u0074"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gec );};};};if _fcb :=_aba .Get ("\u0052\u0065\u0063\u0074");
_fcb !=nil {_baac .Rect =_fcb ;};if _bdg :=_aba .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bdg !=nil {_baac .Contents =_bdg ;};if _cce :=_aba .Get ("\u0050");_cce !=nil {_baac .P =_cce ;};if _daf :=_aba .Get ("\u004e\u004d");_daf !=nil {_baac .NM =_daf ;
};if _eedf :=_aba .Get ("\u004d");_eedf !=nil {_baac .M =_eedf ;};if _caecg :=_aba .Get ("\u0046");_caecg !=nil {_baac .F =_caecg ;};if _cadad :=_aba .Get ("\u0041\u0050");_cadad !=nil {_baac .AP =_cadad ;};if _cggg :=_aba .Get ("\u0041\u0053");_cggg !=nil {_baac .AS =_cggg ;
};if _fbcf :=_aba .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fbcf !=nil {_baac .Border =_fbcf ;};if _deaa :=_aba .Get ("\u0043");_deaa !=nil {_baac .C =_deaa ;};if _cdgf :=_aba .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_cdgf !=nil {_baac .StructParent =_cdgf ;};if _bbbd :=_aba .Get ("\u004f\u0043");_bbbd !=nil {_baac .OC =_bbbd ;};_bgd :=_aba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bgd ==nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_baac ._bgeb =nil ;return _baac ,nil ;};_cbeca ,_ddef :=_bgd .(*_bbfa .PdfObjectName );if !_ddef {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bgd );
return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bgd );};switch *_cbeca {case "\u0054\u0065\u0078\u0074":_fbd ,_dgd :=_cdd .newPdfAnnotationTextFromDict (_aba );
if _dgd !=nil {return nil ,_dgd ;};_fbd .PdfAnnotation =_baac ;_baac ._bgeb =_fbd ;return _baac ,nil ;case "\u004c\u0069\u006e\u006b":_dfbd ,_cebe :=_cdd .newPdfAnnotationLinkFromDict (_aba );if _cebe !=nil {return nil ,_cebe ;};_dfbd .PdfAnnotation =_baac ;
_baac ._bgeb =_dfbd ;return _baac ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dged ,_dfea :=_cdd .newPdfAnnotationFreeTextFromDict (_aba );if _dfea !=nil {return nil ,_dfea ;};_dged .PdfAnnotation =_baac ;_baac ._bgeb =_dged ;return _baac ,nil ;
case "\u004c\u0069\u006e\u0065":_cadg ,_cfbc :=_cdd .newPdfAnnotationLineFromDict (_aba );if _cfbc !=nil {return nil ,_cfbc ;};_cadg .PdfAnnotation =_baac ;_baac ._bgeb =_cadg ;_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_baac ,_baac );
_df .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cadg ,_cadg );_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cadg .PdfAnnotationMarkup ,_cadg .PdfAnnotationMarkup );
return _baac ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_feedb ,_fff :=_cdd .newPdfAnnotationSquareFromDict (_aba );if _fff !=nil {return nil ,_fff ;};_feedb .PdfAnnotation =_baac ;_baac ._bgeb =_feedb ;return _baac ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dadf ,_agb :=_cdd .newPdfAnnotationCircleFromDict (_aba );
if _agb !=nil {return nil ,_agb ;};_dadf .PdfAnnotation =_baac ;_baac ._bgeb =_dadf ;return _baac ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ebfa ,_dga :=_cdd .newPdfAnnotationPolygonFromDict (_aba );if _dga !=nil {return nil ,_dga ;};_ebfa .PdfAnnotation =_baac ;
_baac ._bgeb =_ebfa ;return _baac ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_eea ,_bgb :=_cdd .newPdfAnnotationPolyLineFromDict (_aba );if _bgb !=nil {return nil ,_bgb ;};_eea .PdfAnnotation =_baac ;_baac ._bgeb =_eea ;return _baac ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aee ,_dece :=_cdd .newPdfAnnotationHighlightFromDict (_aba );if _dece !=nil {return nil ,_dece ;};_aee .PdfAnnotation =_baac ;_baac ._bgeb =_aee ;return _baac ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dgfb ,_deec :=_cdd .newPdfAnnotationUnderlineFromDict (_aba );
if _deec !=nil {return nil ,_deec ;};_dgfb .PdfAnnotation =_baac ;_baac ._bgeb =_dgfb ;return _baac ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_deac ,_gac :=_cdd .newPdfAnnotationSquigglyFromDict (_aba );if _gac !=nil {return nil ,_gac ;
};_deac .PdfAnnotation =_baac ;_baac ._bgeb =_deac ;return _baac ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_eaed ,_abf :=_cdd .newPdfAnnotationStrikeOut (_aba );if _abf !=nil {return nil ,_abf ;};_eaed .PdfAnnotation =_baac ;_baac ._bgeb =_eaed ;
return _baac ,nil ;case "\u0043\u0061\u0072e\u0074":_bcfa ,_ggfd :=_cdd .newPdfAnnotationCaretFromDict (_aba );if _ggfd !=nil {return nil ,_ggfd ;};_bcfa .PdfAnnotation =_baac ;_baac ._bgeb =_bcfa ;return _baac ,nil ;case "\u0053\u0074\u0061m\u0070":_eeccc ,_aada :=_cdd .newPdfAnnotationStampFromDict (_aba );
if _aada !=nil {return nil ,_aada ;};_eeccc .PdfAnnotation =_baac ;_baac ._bgeb =_eeccc ;return _baac ,nil ;case "\u0049\u006e\u006b":_fdad ,_fbg :=_cdd .newPdfAnnotationInkFromDict (_aba );if _fbg !=nil {return nil ,_fbg ;};_fdad .PdfAnnotation =_baac ;
_baac ._bgeb =_fdad ;return _baac ,nil ;case "\u0050\u006f\u0070u\u0070":_bcd ,_bfb :=_cdd .newPdfAnnotationPopupFromDict (_aba );if _bfb !=nil {return nil ,_bfb ;};_bcd .PdfAnnotation =_baac ;_baac ._bgeb =_bcd ;return _baac ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_acaa ,_cbbe :=_cdd .newPdfAnnotationFileAttachmentFromDict (_aba );
if _cbbe !=nil {return nil ,_cbbe ;};_acaa .PdfAnnotation =_baac ;_baac ._bgeb =_acaa ;return _baac ,nil ;case "\u0053\u006f\u0075n\u0064":_geag ,_aeda :=_cdd .newPdfAnnotationSoundFromDict (_aba );if _aeda !=nil {return nil ,_aeda ;};_geag .PdfAnnotation =_baac ;
_baac ._bgeb =_geag ;return _baac ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_eaab ,_efcb :=_cdd .newPdfAnnotationRichMediaFromDict (_aba );if _efcb !=nil {return nil ,_efcb ;};_eaab .PdfAnnotation =_baac ;_baac ._bgeb =_eaab ;return _baac ,nil ;
case "\u004d\u006f\u0076i\u0065":_gda ,_fdd :=_cdd .newPdfAnnotationMovieFromDict (_aba );if _fdd !=nil {return nil ,_fdd ;};_gda .PdfAnnotation =_baac ;_baac ._bgeb =_gda ;return _baac ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cbbc ,_fdga :=_cdd .newPdfAnnotationScreenFromDict (_aba );
if _fdga !=nil {return nil ,_fdga ;};_cbbc .PdfAnnotation =_baac ;_baac ._bgeb =_cbbc ;return _baac ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gdea ,_dfef :=_cdd .newPdfAnnotationWidgetFromDict (_aba );if _dfef !=nil {return nil ,_dfef ;};_gdea .PdfAnnotation =_baac ;
_baac ._bgeb =_gdea ;return _baac ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_edg ,_eedfb :=_cdd .newPdfAnnotationPrinterMarkFromDict (_aba );if _eedfb !=nil {return nil ,_eedfb ;};_edg .PdfAnnotation =_baac ;_baac ._bgeb =_edg ;
return _baac ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fgg ,_dcg :=_cdd .newPdfAnnotationTrapNetFromDict (_aba );if _dcg !=nil {return nil ,_dcg ;};_fgg .PdfAnnotation =_baac ;_baac ._bgeb =_fgg ;return _baac ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fea ,_gdgc :=_cdd .newPdfAnnotationWatermarkFromDict (_aba );
if _gdgc !=nil {return nil ,_gdgc ;};_fea .PdfAnnotation =_baac ;_baac ._bgeb =_fea ;return _baac ,nil ;case "\u0033\u0044":_ddc ,_gede :=_cdd .newPdfAnnotation3DFromDict (_aba );if _gede !=nil {return nil ,_gede ;};_ddc .PdfAnnotation =_baac ;_baac ._bgeb =_ddc ;
return _baac ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_edc ,_ddcd :=_cdd .newPdfAnnotationProjectionFromDict (_aba );if _ddcd !=nil {return nil ,_ddcd ;};_edc .PdfAnnotation =_baac ;_baac ._bgeb =_edc ;return _baac ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gad ,_caag :=_cdd .newPdfAnnotationRedactFromDict (_aba );if _caag !=nil {return nil ,_caag ;};_gad .PdfAnnotation =_baac ;_baac ._bgeb =_gad ;return _baac ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cbeca );
return nil ,nil ;};func (_ddffb *PdfReader )newPdfSignatureFromIndirect (_beeea *_bbfa .PdfIndirectObject )(*PdfSignature ,error ){_fdbdce ,_gfgbg :=_beeea .PdfObject .(*_bbfa .PdfObjectDictionary );if !_gfgbg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gbfc ,_bcdcg :=_ddffb ._accb .GetModelFromPrimitive (_beeea ).(*PdfSignature );_bcdcg {return _gbfc ,nil ;};_ccgbe :=&PdfSignature {};_ccgbe ._dddfg =_beeea ;_ccgbe .Type ,_ =_bbfa .GetName (_fdbdce .Get ("\u0054\u0079\u0070\u0065"));
_ccgbe .Filter ,_gfgbg =_bbfa .GetName (_fdbdce .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gfgbg {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ccgbe .SubFilter ,_ =_bbfa .GetName (_fdbdce .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ccgbe .Contents ,_gfgbg =_bbfa .GetString (_fdbdce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gfgbg {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _dbfdgf ,_bedbb :=_bbfa .GetArray (_fdbdce .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bedbb {_ccgbe .Reference =_bbfa .MakeArray ();for _ ,_fedcce :=range _dbfdgf .Elements (){_dbgae ,_adaga :=_bbfa .GetDict (_fedcce );
if !_adaga {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_gdcdd ,_gdbea :=_ddffb .newPdfSignatureReferenceFromDict (_dbgae );if _gdbea !=nil {return nil ,_gdbea ;};_ccgbe .Reference .Append (_gdcdd .ToPdfObject ());};};_ccgbe .Cert =_fdbdce .Get ("\u0043\u0065\u0072\u0074");_ccgbe .ByteRange ,_ =_bbfa .GetArray (_fdbdce .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_ccgbe .Changes ,_ =_bbfa .GetArray (_fdbdce .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ccgbe .Name ,_ =_bbfa .GetString (_fdbdce .Get ("\u004e\u0061\u006d\u0065"));_ccgbe .M ,_ =_bbfa .GetString (_fdbdce .Get ("\u004d"));_ccgbe .Location ,_ =_bbfa .GetString (_fdbdce .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ccgbe .Reason ,_ =_bbfa .GetString (_fdbdce .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ccgbe .ContactInfo ,_ =_bbfa .GetString (_fdbdce .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ccgbe .R ,_ =_bbfa .GetInt (_fdbdce .Get ("\u0052"));
_ccgbe .V ,_ =_bbfa .GetInt (_fdbdce .Get ("\u0056"));_ccgbe .PropBuild ,_ =_bbfa .GetDict (_fdbdce .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ccgbe .PropAuthTime ,_ =_bbfa .GetInt (_fdbdce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ccgbe .PropAuthType ,_ =_bbfa .GetName (_fdbdce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_ddffb ._accb .Register (_beeea ,_ccgbe );return _ccgbe ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_bdac *PdfAnnotationLink )SetAction (action *PdfAction ){_bdac ._dba =action ;if action ==nil {_bdac .A =nil ;};};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cgeb *BorderStyle )GetPdfName ()string {switch *_cgeb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_cfcf *Names )ToPdfObject ()_bbfa .PdfObject {_cbabe :=_cfcf ._ggfg ;_aace ,_ddecd :=_cbabe .PdfObject .(*_bbfa .PdfObjectDictionary );if !_ddecd {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _cbabe ;};if _cfcf .EmbeddedFiles !=nil {_aace .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_bbfa .MakeIndirectObject (_cfcf .EmbeddedFiles ));};return _cbabe ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dabdbb *Outline )Insert (index uint ,item *OutlineItem ){_aebc :=uint (len (_dabdbb .Entries ));if index > _aebc {index =_aebc ;};_dabdbb .Entries =append (_dabdbb .Entries [:index ],append ([]*OutlineItem {item },_dabdbb .Entries [index :]...)...);
};

// Transform rectangle with the supplied matrix.
func (_acbege *PdfRectangle )Transform (transformMatrix _ag .Matrix ){_acbege .Llx ,_acbege .Lly =transformMatrix .Transform (_acbege .Llx ,_acbege .Lly );_acbege .Urx ,_acbege .Ury =transformMatrix .Transform (_acbege .Urx ,_acbege .Ury );_acbege .Normalize ();
};

// PrintArea returns the value of the printArea.
func (_aggfec *ViewerPreferences )PrintArea ()PageBoundary {return _aggfec ._abfgd };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dddfg *_bbfa .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bbfa .PdfObjectName ;Filter *_bbfa .PdfObjectName ;SubFilter *_bbfa .PdfObjectName ;Contents *_bbfa .PdfObjectString ;Cert _bbfa .PdfObject ;ByteRange *_bbfa .PdfObjectArray ;Reference *_bbfa .PdfObjectArray ;Changes *_bbfa .PdfObjectArray ;Name *_bbfa .PdfObjectString ;
M *_bbfa .PdfObjectString ;Location *_bbfa .PdfObjectString ;Reason *_bbfa .PdfObjectString ;ContactInfo *_bbfa .PdfObjectString ;R *_bbfa .PdfObjectInteger ;V *_bbfa .PdfObjectInteger ;PropBuild *_bbfa .PdfObjectDictionary ;PropAuthTime *_bbfa .PdfObjectInteger ;
PropAuthType *_bbfa .PdfObjectName ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_fbea *PdfSignature ,_aabcg Hasher ,_bedfe SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func _gbfbg (_bebacg *PdfField )[]*PdfField {_daaf :=[]*PdfField {_bebacg };for _ ,_bdeba :=range _bebacg .Kids {_daaf =append (_daaf ,_gbfbg (_bdeba )...);
};return _daaf ;};func _dbgd (_fdbb _bbfa .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cdfdg :=&PdfColorspaceDeviceNAttributes {};var _dfba *_bbfa .PdfObjectDictionary ;switch _gfcgd :=_fdbb .(type ){case *_bbfa .PdfIndirectObject :_cdfdg ._ddfa =_gfcgd ;
var _bcfe bool ;_dfba ,_bcfe =_gfcgd .PdfObject .(*_bbfa .PdfObjectDictionary );if !_bcfe {_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bbfa .PdfObjectDictionary :_dfba =_gfcgd ;case *_bbfa .PdfObjectReference :_dagdf :=_gfcgd .Resolve ();return _dbgd (_dagdf );default:_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _edfe :=_dfba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_edfe !=nil {_cddba ,_ccfd :=_bbfa .TraceToDirectObject (_edfe ).(*_bbfa .PdfObjectName );if !_ccfd {_df .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdfdg .Subtype =_cddba ;};if _gbfb :=_dfba .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gbfb !=nil {_cdfdg .Colorants =_gbfb ;};if _bggd :=_dfba .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_bggd !=nil {_cdfdg .Process =_bggd ;};if _ccda :=_dfba .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ccda !=nil {_cdfdg .MixingHints =_ccda ;};return _cdfdg ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_dfffc pdfFontSimple )GetCharMetrics (code _efd .CharCode )(_fg .CharMetrics ,bool ){if _bcde ,_aaff :=_dfffc ._ggfc [code ];_aaff {return _fg .CharMetrics {Wx :_bcde },true ;};if _fg .IsStdFont (_fg .StdFontName (_dfffc ._fdace )){return _fg .CharMetrics {Wx :250},true ;
};return _fg .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_bd *PdfActionMovie )ToPdfObject ()_bbfa .PdfObject {_bd .PdfAction .ToPdfObject ();_egb :=_bd ._ff ;_ce :=_egb .PdfObject .(*_bbfa .PdfObjectDictionary );_ce .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeMovie )));_ce .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bd .Annotation );
_ce .SetIfNotNil ("\u0054",_bd .T );_ce .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bd .Operation );return _egb ;};

// ToPdfObject implements interface PdfModel.
func (_gaf *PdfAnnotationLine )ToPdfObject ()_bbfa .PdfObject {_gaf .PdfAnnotation .ToPdfObject ();_eaee :=_gaf ._dbge ;_gddf :=_eaee .PdfObject .(*_bbfa .PdfObjectDictionary );_gaf .PdfAnnotationMarkup .appendToPdfDictionary (_gddf );_gddf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u004c\u0069\u006e\u0065"));
_gddf .SetIfNotNil ("\u004c",_gaf .L );_gddf .SetIfNotNil ("\u0042\u0053",_gaf .BS );_gddf .SetIfNotNil ("\u004c\u0045",_gaf .LE );_gddf .SetIfNotNil ("\u0049\u0043",_gaf .IC );_gddf .SetIfNotNil ("\u004c\u004c",_gaf .LL );_gddf .SetIfNotNil ("\u004c\u004c\u0045",_gaf .LLE );
_gddf .SetIfNotNil ("\u0043\u0061\u0070",_gaf .Cap );_gddf .SetIfNotNil ("\u0049\u0054",_gaf .IT );_gddf .SetIfNotNil ("\u004c\u004c\u004f",_gaf .LLO );_gddf .SetIfNotNil ("\u0043\u0050",_gaf .CP );_gddf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gaf .Measure );
_gddf .SetIfNotNil ("\u0043\u004f",_gaf .CO );return _eaee ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bbfa .PdfObject ;Sy _bbfa .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cgce *PdfOutlineItem )ToPdfObject ()_bbfa .PdfObject {_efdcc :=_cgce ._efffa ;_gggeca :=_efdcc .PdfObject .(*_bbfa .PdfObjectDictionary );_gggeca .Set ("\u0054\u0069\u0074l\u0065",_cgce .Title );if _cgce .A !=nil {_gggeca .Set ("\u0041",_cgce .A );
};if _aafbc :=_gggeca .Get ("\u0053\u0045");_aafbc !=nil {_gggeca .Remove ("\u0053\u0045");};if _cgce .C !=nil {_gggeca .Set ("\u0043",_cgce .C );};if _cgce .Dest !=nil {_gggeca .Set ("\u0044\u0065\u0073\u0074",_cgce .Dest );};if _cgce .F !=nil {_gggeca .Set ("\u0046",_cgce .F );
};if _cgce .Count !=nil {_gggeca .Set ("\u0043\u006f\u0075n\u0074",_bbfa .MakeInteger (*_cgce .Count ));};if _cgce .Next !=nil {_gggeca .Set ("\u004e\u0065\u0078\u0074",_cgce .Next .ToPdfObject ());};if _cgce .First !=nil {_gggeca .Set ("\u0046\u0069\u0072s\u0074",_cgce .First .ToPdfObject ());
};if _cgce .Prev !=nil {_gggeca .Set ("\u0050\u0072\u0065\u0076",_cgce .Prev .GetContext ().GetContainingPdfObject ());};if _cgce .Last !=nil {_gggeca .Set ("\u004c\u0061\u0073\u0074",_cgce .Last .GetContext ().GetContainingPdfObject ());};if _cgce .Parent !=nil {_gggeca .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgce .Parent .GetContext ().GetContainingPdfObject ());
};return _efdcc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_afced :=PdfPage {};_afced ._cgef =_bbfa .MakeDict ();_afced .Resources =NewPdfPageResources ();_egacgf :=_bbfa .PdfIndirectObject {};_egacgf .PdfObject =_afced ._cgef ;_afced ._bfaag =&_egacgf ;_afced ._cgbfde =*_afced ._cgef ;
return &_afced ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dddb *PdfAppender )SetDocInfo (info *PdfInfo ){_dddb ._gfg =info };

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_efaa []*PdfFont ;CurrentFont *PdfFont ;};func (_dfad *PdfReader )newPdfPageFromDict (_aegfg *_bbfa .PdfObjectDictionary )(*PdfPage ,error ){_fcgba :=NewPdfPage ();_fcgba ._cgef =_aegfg ;_fcgba ._cgbfde =*_aegfg ;_gfbade :=*_aegfg ;
_bfbaf ,_gaffg :=_gfbade .Get ("\u0054\u0079\u0070\u0065").(*_bbfa .PdfObjectName );if !_gaffg {return nil ,_gf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bfbaf !="\u0050\u0061\u0067\u0065"{return nil ,_gf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _bdfcd :=_gfbade .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bdfcd !=nil {_fcgba .Parent =_bdfcd ;};if _cefd :=_gfbade .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cefd !=nil {_gcef ,_ffegbd :=_bbfa .GetString (_cefd );if !_ffegbd {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gbadd ,_fbfc :=NewPdfDate (_gcef .Str ());if _fbfc !=nil {return nil ,_fbfc ;};_fcgba .LastModified =&_gbadd ;};if _abef :=_gfbade .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_abef !=nil &&!_bbfa .IsNullObject (_abef ){_deab ,_cgbb :=_bbfa .GetDict (_abef );
if !_cgbb {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_abef );};var _adeb error ;_fcgba .Resources ,_adeb =NewPdfPageResourcesFromDict (_deab );
if _adeb !=nil {return nil ,_adeb ;};}else {_ddbfca ,_aggcc :=_fcgba .getParentResources ();if _aggcc !=nil {return nil ,_aggcc ;};if _ddbfca ==nil {_ddbfca =NewPdfPageResources ();};_fcgba .Resources =_ddbfca ;};if _gefad :=_gfbade .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gefad !=nil {_gabfc ,_gedfc :=_bbfa .GetArray (_gefad );if !_gedfc {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bbdca error ;
_fcgba .MediaBox ,_bbdca =NewPdfRectangle (*_gabfc );if _bbdca !=nil {return nil ,_bbdca ;};};if _abfg :=_gfbade .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_abfg !=nil {_cbfbc ,_bdfbe :=_bbfa .GetArray (_abfg );if !_bdfbe {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _facfc error ;_fcgba .CropBox ,_facfc =NewPdfRectangle (*_cbfbc );if _facfc !=nil {return nil ,_facfc ;};};if _ggbgd :=_gfbade .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_ggbgd !=nil {_bcccg ,_deef :=_bbfa .GetArray (_ggbgd );if !_deef {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _aefgg error ;_fcgba .BleedBox ,_aefgg =NewPdfRectangle (*_bcccg );if _aefgg !=nil {return nil ,_aefgg ;};};if _fcbef :=_gfbade .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fcbef !=nil {_ceaaa ,_dgeba :=_bbfa .GetArray (_fcbef );if !_dgeba {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dade error ;_fcgba .TrimBox ,_dade =NewPdfRectangle (*_ceaaa );if _dade !=nil {return nil ,_dade ;};};if _cagf :=_gfbade .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cagf !=nil {_cdad ,_abeg :=_bbfa .GetArray (_cagf );if !_abeg {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _efecb error ;_fcgba .ArtBox ,_efecb =NewPdfRectangle (*_cdad );if _efecb !=nil {return nil ,_efecb ;};};if _agbb :=_gfbade .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_agbb !=nil {_fcgba .BoxColorInfo =_agbb ;};if _afbbd :=_gfbade .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_afbbd !=nil {_fcgba .Contents =_afbbd ;};if _gfege :=_gfbade .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gfege !=nil {_egge ,_ebcag :=_bbfa .GetNumberAsInt64 (_gfege );if _ebcag !=nil {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fcgba .Rotate =&_egge ;};if _eede :=_gfbade .Get ("\u0047\u0072\u006fu\u0070");_eede !=nil {_fcgba .Group =_eede ;};if _caeba :=_gfbade .Get ("\u0054\u0068\u0075m\u0062");_caeba !=nil {_fcgba .Thumb =_caeba ;};if _ecea :=_gfbade .Get ("\u0042");_ecea !=nil {_fcgba .B =_ecea ;
};if _gcfab :=_gfbade .Get ("\u0044\u0075\u0072");_gcfab !=nil {_fcgba .Dur =_gcfab ;};if _egbff :=_gfbade .Get ("\u0054\u0072\u0061n\u0073");_egbff !=nil {_fcgba .Trans =_egbff ;};if _dedc :=_gfbade .Get ("\u0041\u0041");_dedc !=nil {_fcgba .AA =_dedc ;
};if _cabcg :=_gfbade .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cabcg !=nil {_fcgba .Metadata =_cabcg ;};if _cacb :=_gfbade .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cacb !=nil {_fcgba .PieceInfo =_cacb ;};if _fgagd :=_gfbade .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_fgagd !=nil {_fcgba .StructParents =_fgagd ;};if _befge :=_gfbade .Get ("\u0049\u0044");_befge !=nil {_fcgba .ID =_befge ;};if _fbdb :=_gfbade .Get ("\u0050\u005a");_fbdb !=nil {_fcgba .PZ =_fbdb ;};if _beaee :=_gfbade .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_beaee !=nil {_fcgba .SeparationInfo =_beaee ;};if _begf :=_gfbade .Get ("\u0054\u0061\u0062\u0073");_begf !=nil {_fcgba .Tabs =_begf ;};if _dgegf :=_gfbade .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_dgegf !=nil {_fcgba .TemplateInstantiated =_dgegf ;};if _eedca :=_gfbade .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_eedca !=nil {_fcgba .PresSteps =_eedca ;};if _egfgd :=_gfbade .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_egfgd !=nil {_fcgba .UserUnit =_egfgd ;
};if _ffdd :=_gfbade .Get ("\u0056\u0050");_ffdd !=nil {_fcgba .VP =_ffdd ;};if _bgcg :=_gfbade .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bgcg !=nil {_fcgba .Annots =_bgcg ;};_fcgba ._gcfgf =_dfad ;return _fcgba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gaeb *PdfAnnotationRichMedia )ToPdfObject ()_bbfa .PdfObject {_gaeb .PdfAnnotation .ToPdfObject ();_gefg :=_gaeb ._dbge ;_gcfb :=_gefg .PdfObject .(*_bbfa .PdfObjectDictionary );_gcfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_gcfb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gaeb .RichMediaSettings );_gcfb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gaeb .RichMediaContent );
return _gefg ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fdefeb *_bbfa .PdfParser ;_gcaeg _bbfa .PdfObject ;_gada *_bbfa .PdfIndirectObject ;_fbaf *_bbfa .PdfObjectDictionary ;_ceebee []*_bbfa .PdfIndirectObject ;PageList []*PdfPage ;_bgdf int ;_abdcg *_bbfa .PdfObjectDictionary ;_cffec *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_abfea *Permissions ;_aaedg map[*PdfReader ]*PdfReader ;_eddee []*PdfReader ;_accb *modelManager ;_bbbee bool ;_gdfeg map[_bbfa .PdfObject ]struct{};_aaafe _cb .ReadSeeker ;_fage string ;_cgcdc bool ;_affg string ;
_ccbfd *ReaderOpts ;_bfgee bool ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bbfa .PdfObject ;GetContainingPdfObject ()_bbfa .PdfObject ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_dfbag *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_bbabg :=_dfbag ._fdefeb .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _bbabg {return nil ,_gf .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_bbabg {return _dfbag ,nil ;};if _dfbag ._eddee [revisionNumber ]!=nil {return _dfbag ._eddee [revisionNumber ],nil ;};_dccfc :=_dfbag ;for _becc :=_bbabg -1;_becc >=revisionNumber ;_becc --{_dbbf ,_eafgd :=_dccfc .GetPreviousRevision ();
if _eafgd !=nil {return nil ,_eafgd ;};_dfbag ._eddee [_becc ]=_dbbf ;_dccfc =_dbbf ;};return _dccfc ,nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};func (_eec *PdfReader )newPdfActionTransFromDict (_fge *_bbfa .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_fge .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_aa .PSProgram ;_ecgeb *_aa .PSExecutor ;_aafaf []byte ;_fcgde *_bbfa .PdfObjectStream ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_egff :=NewPdfAction ();_dcf :=&PdfActionURI {};_dcf .PdfAction =_egff ;_egff .SetContext (_dcf );return _dcf ;};func (_cggf *pdfFontSimple )getFontEncoding ()(_ggbcd string ,_cfde map[_efd .CharCode ]_efd .GlyphName ,_faeg error ){_ggbcd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _aeag ,_cefe :=_bggab [_cggf ._fdace ];_cefe {_ggbcd =_aeag ;}else if _cggf .fontFlags ()&_cdca !=0{for _badbf ,_cgae :=range _bggab {if _ge .Contains (_cggf ._fdace ,_badbf ){_ggbcd =_cgae ;break ;};};};if _cggf .Encoding ==nil {return _ggbcd ,nil ,nil ;
};switch _efcc :=_cggf .Encoding .(type ){case *_bbfa .PdfObjectName :return string (*_efcc ),nil ,nil ;case *_bbfa .PdfObjectDictionary :_gddcf ,_dfdccb :=_bbfa .GetName (_efcc .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _dfdccb {_ggbcd =_gddcf .String ();};if _ffgb :=_efcc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ffgb !=nil {_dfebf ,_dgecg :=_bbfa .GetArray (_ffgb );if !_dgecg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_efcc ,_efcc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bbfa .ErrTypeError ;};_cfde ,_faeg =_efd .FromFontDifferences (_dfebf );};return _ggbcd ,_cfde ,_faeg ;default:_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cggf .Encoding ,_cggf .Encoding );
return "",nil ,_bbfa .ErrTypeError ;};};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gdecb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_gafg :=NewPdfWriter ();_gafg .SetFileName (_gdecb ._affg );if opts ==nil {opts =&ReaderToWriterOpts {};};_acdec ,_bbbeg :=_gdecb .GetNumPages ();if _bbbeg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbbeg );
return nil ,_bbbeg ;};for _bdecc :=1;_bdecc <=_acdec ;_bdecc ++{_eccf ,_aeccf :=_gdecb .GetPage (_bdecc );if _aeccf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeccf );return nil ,_aeccf ;};if opts .PageProcessCallback !=nil {_aeccf =opts .PageProcessCallback (_bdecc ,_eccf );
if _aeccf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeccf );return nil ,_aeccf ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bdecc ,_eccf );};_aeccf =_gafg .AddPage (_eccf );if _aeccf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeccf );
return nil ,_aeccf ;};};_gafg ._cbaaeg =_gdecb .PdfVersion ();if !opts .SkipInfo {_gddfdd ,_addb :=_gdecb .GetPdfInfo ();if _addb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_addb );}else {_gafg ._agfdbb .PdfObject =_gddfdd .ToPdfObject ();
};};if !opts .SkipMetadata {if _cggaf :=_gdecb ._abdcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cggaf !=nil {if _babad :=_gafg .SetCatalogMetadata (_cggaf );_babad !=nil {return nil ,_babad ;};};};if !opts .SkipMarkInfo {if _cefca ,_agacg :=_gdecb .GetCatalogMarkInfo ();
_agacg {if _ebac :=_gafg .SetCatalogMarkInfo (_cefca );_ebac !=nil {return nil ,_ebac ;};};};if !opts .SkipAcroForm {_cceba :=_gafg .SetForms (_gdecb .AcroForm );if _cceba !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cceba );
return nil ,_cceba ;};};if !opts .SkipViewerPreferences {if _abaed ,_gedef :=_gdecb .GetCatalogViewerPreferences ();_gedef {if _bfcb :=_gafg .SetCatalogViewerPreferences (_abaed );_bfcb !=nil {return nil ,_bfcb ;};};};if !opts .SkipLanguage {if _cdada ,_fdbbc :=_gdecb .GetCatalogLanguage ();
_fdbbc {if _bdgbf :=_gafg .SetCatalogLanguage (_cdada );_bdgbf !=nil {return nil ,_bdgbf ;};};};if !opts .SkipOutlines {_gafg .AddOutlineTree (_gdecb .GetOutlineTree ());};if !opts .SkipOCProperties {_gedefb ,_baabf :=_gdecb .GetOCProperties ();if _baabf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baabf );
}else {_baabf =_gafg .SetOCProperties (_gedefb );if _baabf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baabf );};};};if !opts .SkipPageLabels {_cddgfb ,_cced :=_gdecb .GetPageLabels ();if _cced !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cced );
}else {_cced =_gafg .SetPageLabels (_cddgfb );if _cced !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cced );};};};if !opts .SkipNamedDests {_bedf ,_ebgcf :=_gdecb .GetNamedDestinations ();if _ebgcf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebgcf );
}else {_ebgcf =_gafg .SetNamedDestinations (_bedf );if _ebgcf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebgcf );};};};if !opts .SkipNameDictionary {_dcfac ,_gcgbec :=_gdecb .GetNameDictionary ();if _gcgbec !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcgbec );
}else {_gcgbec =_gafg .SetNameDictionary (_dcfac );if _gcgbec !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcgbec );};};};_cdcdb ,_cfbeb :=_gdecb .GetCatalogStructTreeRoot ();if _cfbeb {_gdbff :=_gafg .SetCatalogStructTreeRoot (_cdcdb );
if _gdbff !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdbff );};};if !opts .SkipRotation &&_gdecb .Rotate !=nil {if _bgee :=_gafg .SetRotation (*_gdecb .Rotate );_bgee !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgee );
};};return &_gafg ,nil ;};func (_fgaad *PdfWriter )checkCrossReferenceStream ()bool {_efegfb :=_fgaad ._cbaaeg .Major > 1||(_fgaad ._cbaaeg .Major ==1&&_fgaad ._cbaaeg .Minor > 4);if _fgaad ._egbgb !=nil {_efegfb =*_fgaad ._egbgb ;};return _efegfb ;};func _ebfdfb ()_ea .Time {_efgcc .Lock ();
defer _efgcc .Unlock ();return _cafef };

// Val returns the color value.
func (_aea *PdfColorDeviceGray )Val ()float64 {return float64 (*_aea )};func (_cgdd *PdfWriter )makeOffSetReference (_ccadd int64 ){_fcdag :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ccadd );_cgdd .writeString (_fcdag );
_cgdd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// Duplex returns the value of the duplex.
func (_egadf *ViewerPreferences )Duplex ()Duplex {return _egadf ._agca };func _dbfaa (_afccf *_bbfa .PdfObjectDictionary ,_bage *fontCommon )(*pdfFontType3 ,error ){_adbcd :=_baabg (_bage );_bgaa :=_afccf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bgaa ==nil {_bgaa =_bbfa .MakeInteger (0);};_adbcd .FirstChar =_bgaa ;_ebedb ,_dgcc :=_bbfa .GetIntVal (_bgaa );if !_dgcc {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bgaa );
return nil ,_bbfa .ErrTypeError ;};_geba :=_efd .CharCode (_ebedb );_bgaa =_afccf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bgaa ==nil {_bgaa =_bbfa .MakeInteger (255);};_adbcd .LastChar =_bgaa ;_ebedb ,_dgcc =_bbfa .GetIntVal (_bgaa );
if !_dgcc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bgaa );return nil ,_bbfa .ErrTypeError ;
};_efcca :=_efd .CharCode (_ebedb );_bgaa =_afccf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bgaa !=nil {_adbcd .Resources =_bgaa ;};_bgaa =_afccf .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bgaa ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bgaa );
return nil ,_bbfa .ErrNotSupported ;};_adbcd .CharProcs =_bgaa ;_bgaa =_afccf .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bgaa ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bgaa );
return nil ,_bbfa .ErrNotSupported ;};_adbcd .FontMatrix =_bgaa ;_adbcd ._ddgdf =make (map[_efd .CharCode ]float64 );_bgaa =_afccf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bgaa !=nil {_adbcd .Widths =_bgaa ;_ffegb ,_dabdf :=_bbfa .GetArray (_bgaa );
if !_dabdf {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bgaa );return nil ,_bbfa .ErrTypeError ;
};_bedde ,_efacg :=_ffegb .ToFloat64Array ();if _efacg !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_efacg ;};if len (_bedde )!=int (_efcca -_geba +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_efcca -_geba +1,len (_bedde ));
return nil ,_bbfa .ErrRangeError ;};_gcdfb ,_dabdf :=_bbfa .GetArray (_adbcd .FontMatrix );if !_dabdf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gcdfb );
return nil ,_efacg ;};_dbaa ,_efacg :=_gcdfb .ToFloat64Array ();if _efacg !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_efacg ;};_bdebb :=_ag .NewMatrix (_dbaa [0],_dbaa [1],_dbaa [2],_dbaa [3],_dbaa [4],_dbaa [5]);for _eegcfb ,_fagfb :=range _bedde {_cabbc ,_ :=_bdebb .Transform (_fagfb ,_fagfb );_adbcd ._ddgdf [_geba +_efd .CharCode (_eegcfb )]=_cabbc ;};
};_adbcd .Encoding =_bbfa .TraceToDirectObject (_afccf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_bbagd :=_afccf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bbagd !=nil {_adbcd ._abfce =_bbfa .TraceToDirectObject (_bbagd );
_dbdce ,_fcggb :=_bffa (_adbcd ._abfce ,&_adbcd .fontCommon );if _fcggb !=nil {return nil ,_fcggb ;};_adbcd ._degfb =_dbdce ;};if _cdee :=_adbcd ._degfb ;_cdee !=nil {_adbcd ._eagbd =_efd .NewCMapEncoder ("",nil ,_cdee );}else {_adbcd ._eagbd =_efd .NewPdfDocEncoder ();
};return _adbcd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dddf *PdfAnnotationSound )ToPdfObject ()_bbfa .PdfObject {_dddf .PdfAnnotation .ToPdfObject ();_ccga :=_dddf ._dbge ;_dbdc :=_ccga .PdfObject .(*_bbfa .PdfObjectDictionary );_dddf .PdfAnnotationMarkup .appendToPdfDictionary (_dbdc );_dbdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u006f\u0075n\u0064"));
_dbdc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dddf .Sound );_dbdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dddf .Name );return _ccga ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_eaae *PdfFieldSignature )ToPdfObject ()_bbfa .PdfObject {if _eaae .PdfAnnotationWidget !=nil {_eaae .PdfAnnotationWidget .ToPdfObject ();};_eaae .PdfField .ToPdfObject ();_fefaa :=_eaae ._dfeg ;_faffd :=_fefaa .PdfObject .(*_bbfa .PdfObjectDictionary );
_faffd .SetIfNotNil ("\u0046\u0054",_bbfa .MakeName ("\u0053\u0069\u0067"));_faffd .SetIfNotNil ("\u004c\u006f\u0063\u006b",_eaae .Lock );_faffd .SetIfNotNil ("\u0053\u0056",_eaae .SV );if _eaae .V !=nil {_faffd .SetIfNotNil ("\u0056",_eaae .V .ToPdfObject ());
};return _fefaa ;};

// String returns a string that describes `font`.
func (_becfc *PdfFont )String ()string {_afdf :="";if _becfc ._gdfa .Encoder ()!=nil {_afdf =_becfc ._gdfa .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_becfc ._gdfa ,_becfc .baseFields ().coreString (),_afdf );
};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ececf *PdfPage )GetAllContentStreams ()(string ,error ){_dbcbd ,_dbgf :=_ececf .GetContentStreams ();if _dbgf !=nil {return "",_dbgf ;};return _ge .Join (_dbcbd ,"\u0020"),nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ab :=NewPdfAction ();_cc :=&PdfActionMovie {};_cc .PdfAction =_ab ;_ab .SetContext (_cc );return _cc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcgb pdfFontType0 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){if _fcgb .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fcgb );
return _fg .CharMetrics {},false ;};return _fcgb .DescendantFont .GetRuneMetrics (r );};func (_cgba *PdfReader )newPdfAnnotationPrinterMarkFromDict (_acac *_bbfa .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_cfdb :=PdfAnnotationPrinterMark {};
_cfdb .MN =_acac .Get ("\u004d\u004e");return &_cfdb ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_aaeccf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _aaeccf ._cbbb };

// Reset sets the multi font encoder to its initial state.
func (_defd *MultipleFontEncoder )Reset (){_defd .CurrentFont =_defd ._efaa [0]};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bbfa .PdfObject ;RichMediaContent _bbfa .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_accc *Outline )ToPdfObject ()_bbfa .PdfObject {return _accc .ToPdfOutline ().ToPdfObject ()};func _bgfb ()string {_cbcdg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _dbdfg _de .Buffer ;for _geda :=0;_geda < 6;_geda ++{_dbdfg .WriteRune (rune (_cbcdg [_cfb .Intn (len (_cbcdg ))]));};return _dbdfg .String ();};func (_dgcg *PdfReader )newPdfAnnotationInkFromDict (_dbea *_bbfa .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_dbdd :=PdfAnnotationInk {};
_egaeg ,_ffdg :=_dgcg .newPdfAnnotationMarkupFromDict (_dbea );if _ffdg !=nil {return nil ,_ffdg ;};_dbdd .PdfAnnotationMarkup =_egaeg ;_dbdd .InkList =_dbea .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_dbdd .BS =_dbea .Get ("\u0042\u0053");return &_dbdd ,nil ;
};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func _ebdgf (_gecbe *_bbf .ImageBase )(_aebgff Image ){_aebgff .Width =int64 (_gecbe .Width );_aebgff .Height =int64 (_gecbe .Height );_aebgff .BitsPerComponent =int64 (_gecbe .BitsPerComponent );_aebgff .ColorComponents =_gecbe .ColorComponents ;
_aebgff .Data =_gecbe .Data ;_aebgff ._acgd =_gecbe .Decode ;_aebgff ._eccdd =_gecbe .Alpha ;return _aebgff ;};

// ReplacePage replaces the original page to a new page.
func (_fbff *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dadc :=pageNum -1;for _cafg :=range _fbff ._cefa {if _cafg ==_dadc {_eefa :=page .Duplicate ();_acaga (_eefa );_fbff ._cefa [_cafg ]=_eefa ;};};};func (_gdccbd *PdfWriter )writeDocumentVersion (){if _gdccbd ._fccec {_gdccbd .writeString ("\u000a");
}else {_gdccbd .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gdccbd ._cbaaeg .Major ,_gdccbd ._cbaaeg .Minor ));_gdccbd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gaegd *PdfOutlineTreeNode )GetContainingPdfObject ()_bbfa .PdfObject {return _gaegd .GetContext ().GetContainingPdfObject ();};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_bbfa .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _bbfa .PdfObject ;ClassMap *_bbfa .PdfObjectDictionary ;_acgfc *_bbfa .PdfIndirectObject ;_gebfdd []_ee .UUID ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cgfc *Outline )ToPdfOutline ()*PdfOutline {_ffbgc :=NewPdfOutline ();var _cbfef []*PdfOutlineItem ;var _bcfag int64 ;var _efge *PdfOutlineItem ;for _ ,_defc :=range _cgfc .Entries {_abcfgg ,_ccdb :=_defc .ToPdfOutlineItem ();_abcfgg .Parent =&_ffbgc .PdfOutlineTreeNode ;
if _efge !=nil {_efge .Next =&_abcfgg .PdfOutlineTreeNode ;_abcfgg .Prev =&_efge .PdfOutlineTreeNode ;};_cbfef =append (_cbfef ,_abcfgg );_bcfag +=_ccdb ;_efge =_abcfgg ;};_egfbb :=int64 (len (_cbfef ));_bcfag +=_egfbb ;if _egfbb > 0{_ffbgc .First =&_cbfef [0].PdfOutlineTreeNode ;
_ffbgc .Last =&_cbfef [_egfbb -1].PdfOutlineTreeNode ;_ffbgc .Count =&_bcfag ;};return _ffbgc ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbfa .PdfObject ;};

// SetStructParentsKey sets the StructParents key.
func (_addg *PdfPage )SetStructParentsKey (key int ){if key ==-1{_addg .StructParents =nil ;}else {_addg .StructParents =_bbfa .MakeInteger (int64 (key ));};};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bebc *LTV )Enable (sig *PdfSignature ,extraCerts []*_fe .Certificate )error {if _dbbce :=_bebc .validateSig (sig );_dbbce !=nil {return _dbbce ;};_acbe ,_aecbe :=_bebc .generateVRIKey (sig );if _aecbe !=nil {return _aecbe ;};if _ ,_bafebd :=_bebc ._egbca .VRI [_acbe ];
_bafebd &&_bebc .SkipExisting {return nil ;};_abbebc ,_aecbe :=sig .GetCerts ();if _aecbe !=nil {return _aecbe ;};return _bebc .enable (_abbebc ,extraCerts ,_acbe );};

// Val returns the value of the color.
func (_gcdg *PdfColorCalGray )Val ()float64 {return float64 (*_gcdg )};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_bgab *PdfPage )GetStructParentsKey ()int {if _adaff ,_agaa :=_bbfa .GetIntVal (_bgab .StructParents );_agaa {return _adaff ;};return -1;};

// BaseFont returns the font's "BaseFont" field.
func (_dafd *PdfFont )BaseFont ()string {return _dafd .baseFields ()._fdace };func _bcedf (_defae []byte )(_cgabg ,_dedad string ,_cdde error ){_df .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_defae ));
_bcgfe :=_gbab .FindIndex (_defae );if _bcgfe ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bbfa .ErrTypeError ;};_ceecb :=_bcgfe [1];_gdaac :=_ge .Index (string (_defae [_ceecb :]),_egcee );if _gdaac < 0{_cgabg =string (_defae [_ceecb :]);return _cgabg ,"",nil ;};_bggc :=_ceecb +_gdaac ;_cgabg =string (_defae [_ceecb :_bggc ]);
_befdd :=_bggc ;_gdaac =_ge .Index (string (_defae [_befdd :]),_fccg );if _gdaac < 0{_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdde );
return "","",_bbfa .ErrTypeError ;};_accdb :=_befdd +_gdaac ;_dedad =string (_defae [_befdd :_accdb ]);return _cgabg ,_dedad ,nil ;};func (_abdb *PdfWriter )getPdfVersion ()string {return _b .Sprintf ("\u0025\u0064\u002e%\u0064",_abdb ._cbaaeg .Major ,_abdb ._cbaaeg .Minor );
};func _eacfc (_aebgd _bbfa .PdfObject ,_abcb *PdfReader )(*OutlineDest ,error ){_fdeae ,_ccfgc :=_bbfa .GetArray (_aebgd );if !_ccfgc {return nil ,_gf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fcffb :=_fdeae .Len ();if _fcffb < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fcffb );
};_fbccb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gdfdcb :=_fdeae .Get (0);if _dbgba ,_gddfg :=_bbfa .GetIndirect (_gdfdcb );_gddfg {if _ ,_ggecf ,_eecba :=_abcb .PageFromIndirectObject (_dbgba );_eecba ==nil {_fbccb .Page =int64 (_ggecf -1);}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dbgba );
};_fbccb .PageObj =_dbgba ;}else if _dbgab ,_dfgff :=_bbfa .GetIntVal (_gdfdcb );_dfgff {if _dbgab >=0&&_dbgab < len (_abcb .PageList ){_fbccb .PageObj =_abcb .PageList [_dbgab ].GetPageAsIndirectObject ();}else {_df .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_dbgab );
};_fbccb .Page =int64 (_dbgab );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gdfdcb );};_fdgge ,_ccfgc :=_bbfa .GetNameVal (_fdeae .Get (1));
if !_ccfgc {_df .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fdeae .Get (1));
return _fbccb ,nil ;};switch _fdgge {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fcffb > 2{_fbccb .Y ,_ =_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_fdeae .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fcffb > 2{_fbccb .X ,_ =_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_fdeae .Get (2)));
};case "\u0058\u0059\u005a":if _fcffb > 4{_fbccb .X ,_ =_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_fdeae .Get (2)));_fbccb .Y ,_ =_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_fdeae .Get (3)));_fbccb .Zoom ,_ =_bbfa .GetNumberAsFloat (_bbfa .TraceToDirectObject (_fdeae .Get (4)));
};default:_fdgge ="\u0046\u0069\u0074";};_fbccb .Mode =_fdgge ;return _fbccb ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_agcdd *PdfReader )GetNumPages ()(int ,error ){if _agcdd ._fdefeb .GetCrypter ()!=nil &&!_agcdd ._fdefeb .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_agcdd ._ceebee ),nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_afcc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_afdae *fontFile )parseASCIIPart (_bddg []byte )error {if len (_bddg )< 2||string (_bddg [:2])!="\u0025\u0021"{return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_bbgfc ,_gebe ,_cfea :=_bcedf (_bddg );if _cfea !=nil {return _cfea ;};_eggg :=_bgage (_bbgfc );_afdae ._dgddaf =_eggg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _afdae ._dgddaf ==""{_df .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _gebe !=""{_cgge ,_geee :=_fbegc (_gebe );if _geee !=nil {return _geee ;};_ebfe ,_geee :=_efd .NewCustomSimpleTextEncoder (_cgge ,nil );if _geee !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_geee );
return nil ;};_afdae ._gccbc =_ebfe ;};return nil ;};var _bdbb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_dega *PdfReader )newPdfActionSetOCGStateFromDict (_fabe *_bbfa .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fabe .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fabe .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_afab *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbf ,_beba :=_bbfa .GetNumbersAsFloat (objects );
if _beba !=nil {return nil ,_beba ;};return _afab .ColorFromFloats (_cgbf );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dbcfec *PdfField )GetContext ()PdfModel {return _dbcfec ._ebede };

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fabd *PdfColorspaceLab )ToPdfObject ()_bbfa .PdfObject {_daba :=_bbfa .MakeArray ();_daba .Append (_bbfa .MakeName ("\u004c\u0061\u0062"));_bgg :=_bbfa .MakeDict ();if _fabd .WhitePoint !=nil {_fgfc :=_bbfa .MakeArray (_bbfa .MakeFloat (_fabd .WhitePoint [0]),_bbfa .MakeFloat (_fabd .WhitePoint [1]),_bbfa .MakeFloat (_fabd .WhitePoint [2]));
_bgg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fgfc );}else {_df .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fabd .BlackPoint !=nil {_gbc :=_bbfa .MakeArray (_bbfa .MakeFloat (_fabd .BlackPoint [0]),_bbfa .MakeFloat (_fabd .BlackPoint [1]),_bbfa .MakeFloat (_fabd .BlackPoint [2]));_bgg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gbc );
};if _fabd .Range !=nil {_gedb :=_bbfa .MakeArray (_bbfa .MakeFloat (_fabd .Range [0]),_bbfa .MakeFloat (_fabd .Range [1]),_bbfa .MakeFloat (_fabd .Range [2]),_bbfa .MakeFloat (_fabd .Range [3]));_bgg .Set ("\u0052\u0061\u006eg\u0065",_gedb );};_daba .Append (_bgg );
if _fabd ._ecee !=nil {_fabd ._ecee .PdfObject =_daba ;return _fabd ._ecee ;};return _daba ;};func _cge (_ebcc _bbfa .PdfObject )(*PdfFilespec ,error ){if _ebcc ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ebcc );};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_fdggg :_bbfa .MakeDict ()};
};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_dcea *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gabg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_abca byte )byte ;

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gebfd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gebfd .baseFields ()._cbbb !=nil {return _gebfd .baseFields ()._cbbb ;};if _bfaf :=_gebfd ._gdfa .getFontDescriptor ();_bfaf !=nil {return _bfaf ;};_df .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gebfd );
return nil ;};

// SetFlag sets the flag for the field.
func (_baebf *PdfField )SetFlag (flag FieldFlag ){_baebf .Ff =_bbfa .MakeInteger (int64 (flag ))};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bddeef pdfFontSimple )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){if _bddeef ._bgbe !=nil {_eaca ,_gbfdc :=_bddeef ._bgbe .Read (r );if _gbfdc {return _eaca ,true ;};};_bdcdf :=_bddeef .Encoder ();if _bdcdf ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bddeef );
return _fg .CharMetrics {},false ;};_befg ,_eggf :=_bdcdf .RuneToCharcode (r );if !_eggf {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bddeef );
};return _fg .CharMetrics {},false ;};_ebca ,_ffff :=_bddeef .GetCharMetrics (_befg );return _ebca ,_ffff ;};type pdfFontType0 struct{fontCommon ;_fbecg *_bbfa .PdfIndirectObject ;_agcb _efd .TextEncoder ;Encoding _bbfa .PdfObject ;DescendantFont *PdfFont ;
_deaca *_dea .CMap ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_begaf :=NewPdfOutline ();_begaf ._cedfc =&_begaf ;return _begaf ;};

// ToPdfObject implements interface PdfModel.
func (_cffe *PdfAnnotationSquare )ToPdfObject ()_bbfa .PdfObject {_cffe .PdfAnnotation .ToPdfObject ();_gcd :=_cffe ._dbge ;_edd :=_gcd .PdfObject .(*_bbfa .PdfObjectDictionary );if _cffe .PdfAnnotationMarkup !=nil {_cffe .PdfAnnotationMarkup .appendToPdfDictionary (_edd );
};_edd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_edd .SetIfNotNil ("\u0042\u0053",_cffe .BS );_edd .SetIfNotNil ("\u0049\u0043",_cffe .IC );_edd .SetIfNotNil ("\u0042\u0045",_cffe .BE );
_edd .SetIfNotNil ("\u0052\u0044",_cffe .RD );return _gcd ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_becdg *PdfPage )SetContentStreams (cStreams []string ,encoder _bbfa .StreamEncoder )error {if len (cStreams )==0{_becdg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bbfa .NewRawEncoder ();};var _fagd []*_bbfa .PdfObjectStream ;for _ ,_ecgde :=range cStreams {_abfde :=&_bbfa .PdfObjectStream {};
_agfbf :=encoder .MakeStreamDict ();_aabcf ,_ffbdc :=encoder .EncodeBytes ([]byte (_ecgde ));if _ffbdc !=nil {return _ffbdc ;};_agfbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_aabcf ))));_abfde .PdfObjectDictionary =_agfbf ;
_abfde .Stream =_aabcf ;_fagd =append (_fagd ,_abfde );};if len (_fagd )==1{_becdg .Contents =_fagd [0];}else {_dgdca :=_bbfa .MakeArray ();for _ ,_dcab :=range _fagd {_dgdca .Append (_dcab );};_becdg .Contents =_dgdca ;};return nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_eecace *PdfReader )GetCatalogMetadata ()(_bbfa .PdfObject ,bool ){if _eecace ._abdcg ==nil {return nil ,false ;};_dcge :=_eecace ._abdcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _dcge ,_dcge !=nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_feca :=NewPdfAnnotation ();_feb :=&PdfAnnotationRedact {};_feb .PdfAnnotation =_feca ;_feb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_feca .SetContext (_feb );return _feb ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bbfa .PdfObject ;Flags _bbfa .PdfObject ;};type fontFile struct{_dgddaf string ;_dgdde string ;_gccbc _efd .SimpleEncoder ;};

// ToPdfObject implements interface PdfModel.
func (_fceb *PdfAnnotationUnderline )ToPdfObject ()_bbfa .PdfObject {_fceb .PdfAnnotation .ToPdfObject ();_cfec :=_fceb ._dbge ;_bcba :=_cfec .PdfObject .(*_bbfa .PdfObjectDictionary );_fceb .PdfAnnotationMarkup .appendToPdfDictionary (_bcba );_bcba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_bcba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fceb .QuadPoints );return _cfec ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_aadab *PdfReader )flattenFieldsWithOpts (_gcgb bool ,_bfbgb FieldAppearanceGenerator ,_dfced *FieldFlattenOpts )error {if _dfced ==nil {_dfced =&FieldFlattenOpts {};};var _bcbag bool ;_aggf :=map[*PdfAnnotation ]bool {};
{var _egdfc []*PdfField ;_eace :=_aadab .AcroForm ;if _eace !=nil {if _dfced .FilterFunc !=nil {_egdfc =_eace .filteredFields (_dfced .FilterFunc ,true );_bcbag =_eace .Fields !=nil &&len (*_eace .Fields )> 0;}else {_egdfc =_eace .AllFields ();};};for _ ,_ccbff :=range _egdfc {if len (_ccbff .Annotations )< 1{_df .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_ccbff .PartialName ());
for _gfaeg ,_fgbcad :=range _ccbff .Kids {for _ ,_ggdf :=range _fgbcad .Annotations {_aggf [_ggdf .PdfAnnotation ]=_ccbff .V !=nil ;if _fgbcad .V ==nil {_fgbcad .V =_ccbff .V ;};if _fgbcad .T ==nil {_fgbcad .T =_bbfa .MakeString (_b .Sprintf ("\u0025\u0073\u0023%\u0064",_ccbff .PartialName (),_gfaeg ));
};if _bfbgb !=nil {_gfddb ,_acda :=_bfbgb .GenerateAppearanceDict (_eace ,_fgbcad ,_ggdf );if _acda !=nil {return _acda ;};_ggdf .AP =_gfddb ;};};};};for _ ,_edcdc :=range _ccbff .Annotations {_aggf [_edcdc .PdfAnnotation ]=_ccbff .V !=nil ;if _bfbgb !=nil {_caead ,_affe :=_bfbgb .GenerateAppearanceDict (_eace ,_ccbff ,_edcdc );
if _affe !=nil {return _affe ;};_edcdc .AP =_caead ;};};};};if _gcgb {for _ ,_feaa :=range _aadab .PageList {_aacf ,_ddefe :=_feaa .GetAnnotations ();if _ddefe !=nil {return _ddefe ;};for _ ,_gdbf :=range _aacf {_aggf [_gdbf ]=true ;};};};for _ ,_efbg :=range _aadab .PageList {_ggcbg :=_efbg .flattenFieldsWithOpts (_bfbgb ,_dfced ,_aggf );
if _ggcbg !=nil {return _ggcbg ;};};if !_bcbag {_aadab .AcroForm =nil ;};return nil ;};

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _f .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};func (_bgbc *PdfReader )newPdfAnnotationMovieFromDict (_bdc *_bbfa .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bgae :=PdfAnnotationMovie {};_bgae .T =_bdc .Get ("\u0054");_bgae .Movie =_bdc .Get ("\u004d\u006f\u0076i\u0065");_bgae .A =_bdc .Get ("\u0041");
return &_bgae ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_gbfbe *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bbfa .GetNumberAsFloat (_gbfbe .CapHeight );};func _fbebd (_ddgbg *_bbfa .PdfObjectDictionary ){_ccfac ,_befde :=_bbfa .GetArray (_ddgbg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ggdc ,_bebgc :=_bbfa .GetIntVal (_ddgbg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_dgeddc ,_dacfd :=_bbfa .GetIntVal (_ddgbg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _befde &&_bebgc &&_dacfd {_gegda :=_ccfac .Len ();if _gegda !=_dgeddc -_ggdc +1{_df .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_gegda ,_dgeddc );
_afgb :=_bbfa .PdfObjectInteger (_ggdc +_gegda -1);_ddgbg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_afgb );};};};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bbfa .PdfObject ;T _bbfa .PdfObject ;Operation _bbfa .PdfObject ;};func (_deegf *pdfFontType0 )subsetRegistered ()error {_adgab ,_dgff :=_deegf .DescendantFont ._gdfa .(*pdfCIDFontType2 );if !_dgff {_df .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_deegf .DescendantFont );
return nil ;};if _adgab ==nil {return nil ;};if _adgab ._cbbb ==nil {_df .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _deegf ._agcb ==nil {_df .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_eaaad ,_dgff :=_bbfa .GetStream (_adgab ._cbbb .FontFile2 );if !_dgff {_df .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _gf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fcgf ,_dbfc :=_bbfa .DecodeStream (_eaaad );if _dbfc !=nil {_df .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dbfc );
return _dbfc ;};_abde ,_dbfc :=_af .Parse (_de .NewReader (_fcgf ));if _dbfc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_eaaad .Stream ));
return _dbfc ;};var _bfag []rune ;var _aabb *_af .Font ;switch _afgge :=_deegf ._agcb .(type ){case *_efd .TrueTypeFontEncoder :_bfag =_afgge .RegisteredRunes ();_aabb ,_dbfc =_abde .SubsetKeepRunes (_bfag );if _dbfc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfc );
return _dbfc ;};_afgge .SubsetRegistered ();case *_efd .IdentityEncoder :_bfag =_afgge .RegisteredRunes ();_abfe :=make ([]_af .GlyphIndex ,len (_bfag ));for _gead ,_aacag :=range _bfag {_abfe [_gead ]=_af .GlyphIndex (_aacag );};_aabb ,_dbfc =_abde .SubsetKeepIndices (_abfe );
if _dbfc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfc );return _dbfc ;};case _efd .SimpleEncoder :_gbgb :=_afgge .Charcodes ();for _ ,_fbdae :=range _gbgb {_abbfd ,_dceb :=_afgge .CharcodeToRune (_fbdae );if !_dceb {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fbdae );
continue ;};_bfag =append (_bfag ,_abbfd );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_deegf ._agcb );
};var _bcfcd _de .Buffer ;_dbfc =_aabb .Write (&_bcfcd );if _dbfc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfc );return _dbfc ;};if _deegf ._degfb !=nil {_dage :=make (map[_dea .CharCode ]rune ,len (_bfag ));for _ ,_afacec :=range _bfag {_gdbe ,_aceff :=_deegf ._agcb .RuneToCharcode (_afacec );
if !_aceff {continue ;};_dage [_dea .CharCode (_gdbe )]=_afacec ;};_deegf ._degfb =_dea .NewToUnicodeCMap (_dage );};_eaaad ,_dbfc =_bbfa .MakeStream (_bcfcd .Bytes (),_bbfa .NewFlateEncoder ());if _dbfc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfc );
return _dbfc ;};_eaaad .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbfa .MakeInteger (int64 (_bcfcd .Len ())));if _gddfcd ,_bbcab :=_bbfa .GetStream (_adgab ._cbbb .FontFile2 );_bbcab {*_gddfcd =*_eaaad ;}else {_adgab ._cbbb .FontFile2 =_eaaad ;};_gggbd :=_bgfb ();
if len (_deegf ._fdace )> 0{_deegf ._fdace =_fdaf (_deegf ._fdace ,_gggbd );};if len (_adgab ._fdace )> 0{_adgab ._fdace =_fdaf (_adgab ._fdace ,_gggbd );};if len (_deegf ._gbbg )> 0{_deegf ._gbbg =_fdaf (_deegf ._gbbg ,_gggbd );};if _adgab ._cbbb !=nil {_deafae ,_fabef :=_bbfa .GetName (_adgab ._cbbb .FontName );
if _fabef &&len (_deafae .String ())> 0{_bdgfa :=_fdaf (_deafae .String (),_gggbd );_adgab ._cbbb .FontName =_bbfa .MakeName (_bdgfa );};};return nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bbfa .PdfObjectString ;Q *_bbfa .PdfObjectInteger ;DS *_bbfa .PdfObjectString ;RV _bbfa .PdfObject ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bbfa .PdfObjectArray ;TI *_bbfa .PdfObjectInteger ;I *_bbfa .PdfObjectArray ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_gceeb *PdfReader )GetTrailer ()(*_bbfa .PdfObjectDictionary ,error ){_baedc :=_gceeb ._fdefeb .GetTrailer ();if _baedc ==nil {return nil ,_gf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _baedc ,nil ;
};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _ffgd (_fccca *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fccca }};

// ToInteger convert to an integer format.
func (_adcc *PdfColorCalGray )ToInteger (bits int )uint32 {_cecg :=_dg .Pow (2,float64 (bits ))-1;return uint32 (_cecg *_adcc .Val ());};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bgcd pdfCIDFontType0 )GetCharMetrics (code _efd .CharCode )(_fg .CharMetrics ,bool ){_bacb :=_bgcd ._bbgf ;if _cegd ,_feef :=_bgcd ._beabg [code ];_feef {_bacb =_cegd ;};return _fg .CharMetrics {Wx :_bacb },true ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cb .ReadSeeker )(*PdfReader ,error ){const _efbfd ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fcebf (rs ,&ReaderOpts {},false ,_efbfd );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_degfde *_ga .Document )error ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_egac *PdfAnnotationStrikeOut )ToPdfObject ()_bbfa .PdfObject {_egac .PdfAnnotation .ToPdfObject ();_ebea :=_egac ._dbge ;_dbcb :=_ebea .PdfObject .(*_bbfa .PdfObjectDictionary );_egac .PdfAnnotationMarkup .appendToPdfDictionary (_dbcb );_dbcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dbcb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_egac .QuadPoints );return _ebea ;};

// AddChild adds a child object.
func (_bdgfd *KDict )AddChild (kv *KValue ){_bdgfd ._cbag =append (_bdgfd ._cbag ,kv )};func _fddee (_afbgb *PdfField ,_dgebg _bbfa .PdfObject )error {switch _afbgb .GetContext ().(type ){case *PdfFieldText :switch _efeed :=_dgebg .(type ){case *_bbfa .PdfObjectName :_gegc :=_efeed ;
_df .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gegc .String ());
_afbgb .V =_bbfa .MakeEncodedString (_efeed .String (),true );case *_bbfa .PdfObjectString :_afbgb .V =_bbfa .MakeEncodedString (_efeed .String (),true );default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_efeed ,_efeed );
};case *PdfFieldButton :switch _dgebg .(type ){case *_bbfa .PdfObjectName :if len (_dgebg .String ())> 0{_afbgb .V =_dgebg ;_dgfcg (_afbgb ,_dgebg );};case *_bbfa .PdfObjectString :if len (_dgebg .String ())> 0{_afbgb .V =_bbfa .MakeName (_dgebg .String ());
_dgfcg (_afbgb ,_afbgb .V );};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_afbgb .PartialName (),_dgebg );_afbgb .V =_dgebg ;
};case *PdfFieldChoice :switch _dgebg .(type ){case *_bbfa .PdfObjectName :if len (_dgebg .String ())> 0{_afbgb .V =_bbfa .MakeString (_dgebg .String ());_dgfcg (_afbgb ,_dgebg );};case *_bbfa .PdfObjectString :if len (_dgebg .String ())> 0{_afbgb .V =_dgebg ;
_dgfcg (_afbgb ,_bbfa .MakeName (_dgebg .String ()));};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_afbgb .PartialName (),_dgebg );
_afbgb .V =_dgebg ;};case *PdfFieldSignature :_df .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_afbgb .PartialName (),_dgebg );
};return nil ;};func _cfgfd (_adgbc _bbfa .PdfObject )(*PdfFunctionType3 ,error ){_dfdeb :=&PdfFunctionType3 {};var _fada *_bbfa .PdfObjectDictionary ;if _cgfb ,_bgcb :=_adgbc .(*_bbfa .PdfIndirectObject );_bgcb {_agdgd ,_cbgad :=_cgfb .PdfObject .(*_bbfa .PdfObjectDictionary );
if !_cbgad {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfdeb ._ecafg =_cgfb ;_fada =_agdgd ;}else if _gcadb ,_bdcdg :=_adgbc .(*_bbfa .PdfObjectDictionary );_bdcdg {_fada =_gcadb ;
}else {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edffe ,_bdcde :=_bbfa .TraceToDirectObject (_fada .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbfa .PdfObjectArray );if !_bdcde {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _edffe .Len ()!=2{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gbcfc ,_facfd :=_edffe .ToFloat64Array ();if _facfd !=nil {return nil ,_facfd ;};_dfdeb .Domain =_gbcfc ;_edffe ,_bdcde =_bbfa .TraceToDirectObject (_fada .Get ("\u0052\u0061\u006eg\u0065")).(*_bbfa .PdfObjectArray );
if _bdcde {if _edffe .Len ()< 0||_edffe .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_efbab ,_cgafc :=_edffe .ToFloat64Array ();if _cgafc !=nil {return nil ,_cgafc ;};_dfdeb .Range =_efbab ;
};_edffe ,_bdcde =_bbfa .TraceToDirectObject (_fada .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bbfa .PdfObjectArray );if !_bdcde {_df .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dfdeb .Functions =[]PdfFunction {};
for _ ,_bdfaa :=range _edffe .Elements (){_bgfed ,_aebgf :=_fcgca (_bdfaa );if _aebgf !=nil {return nil ,_aebgf ;};_dfdeb .Functions =append (_dfdeb .Functions ,_bgfed );};_edffe ,_bdcde =_bbfa .TraceToDirectObject (_fada .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bbfa .PdfObjectArray );
if !_bdcde {_df .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gaaed ,_facfd :=_edffe .ToFloat64Array ();if _facfd !=nil {return nil ,_facfd ;};_dfdeb .Bounds =_gaaed ;if len (_dfdeb .Bounds )!=len (_dfdeb .Functions )-1{_df .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dfdeb .Bounds ),len (_dfdeb .Functions ));
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edffe ,_bdcde =_bbfa .TraceToDirectObject (_fada .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbfa .PdfObjectArray );if !_bdcde {_df .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gedag ,_facfd :=_edffe .ToFloat64Array ();
if _facfd !=nil {return nil ,_facfd ;};_dfdeb .Encode =_gedag ;if len (_dfdeb .Encode )!=2*len (_dfdeb .Functions ){_df .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dfdeb .Encode ),len (_dfdeb .Functions ));
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dfdeb ,nil ;};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_decaf *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _decaf ._dbcge };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dgcga *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dgcga .GetNumComponents (){return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbbcc ,_aeec :=_dgcga .TintTransform .Evaluate (vals );
if _aeec !=nil {return nil ,_aeec ;};_cbbdd ,_aeec :=_dgcga .AlternateSpace .ColorFromFloats (_fbbcc );if _aeec !=nil {return nil ,_aeec ;};return _cbbdd ,nil ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_degde *IDTree )ToPdfObject ()_bbfa .PdfObject {_ggaaf :=_bbfa .MakeDict ();if _degde .Names !=nil &&_degde .Names .Len ()> 0{_ggaaf .Set ("\u004e\u0061\u006de\u0073",_degde .Names );_ggaaf .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_degde .Limits );
};if len (_degde .Kids )> 0{_aedga :=_bbfa .MakeArray ();for _ ,_bbdga :=range _degde .Kids {_aedga .Append (_bbdga .ToPdfObject ());};_fabce :=_bbfa .MakeDict ();_fabce .Set ("\u004b\u0069\u0064\u0073",_aedga );_ggaaf .Set ("\u004b\u0069\u0064\u0073",_fabce );
};return _ggaaf ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_dgecc PdfOutputIntentType )String ()string {switch _dgecc {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_bcbbg *PdfPage )GetRotate ()(int64 ,error ){if _bcbbg .Rotate !=nil {return *_bcbbg .Rotate ,nil ;};_fecabd :=_bcbbg .Parent ;for _fecabd !=nil {_fgfde ,_afad :=_bbfa .GetDict (_fecabd );if !_afad {return 0,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fecade :=_fgfde .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fecade !=nil {_cefg ,_dddbe :=_bbfa .GetInt (_fecade );if !_dddbe {return 0,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");
};if _cefg !=nil {return int64 (*_cefg ),nil ;};return 0,_gf .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_fecabd =_fgfde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_gf .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject converts the structure tree root to a PDF object.
func (_cacae *StructTreeRoot )ToPdfObject ()_bbfa .PdfObject {_gecac :=_cacae ._acgfc ;if _gecac ==nil {_gecac =&_bbfa .PdfIndirectObject {};_gecac .PdfObject =_bbfa .MakeDict ();};_cdfdd :=_gecac .PdfObject .(*_bbfa .PdfObjectDictionary );var _cadga _bbfa .PdfObject ;
if len (_cacae .K )==1{_cadga =_bbfa .MakeIndirectObject (_cacae .K [0].ToPdfObject ());}else {_egabf :=_bbfa .MakeArray ();for _ ,K :=range _cacae .K {_egabf .Append (_bbfa .MakeIndirectObject (K .ToPdfObject ()));};_cadga =_egabf ;};var (_gbgbc =[]_bbfa .PdfObject {};
_ffbdf =map[_bbfa .PdfObject ][]_bbfa .PdfObject {};_cdbaa =map[string ]_bbfa .PdfObject {};);_fgcef (_cadga ,_gecac ,_ffbdf ,_cdbaa ,&_gbgbc );_cdfdd .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_cdfdd .Set ("\u004b",_cadga );if _cacae .IDTree !=nil {_cdfdd .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_bbfa .MakeIndirectObject (_cacae .IDTree .ToPdfObject ()));}else if len (_cdbaa )> 0{_baeba :=_bbfa .MakeArray ();_ddaac :=make ([]string ,0,len (_cdbaa ));
for _eefgc :=range _cdbaa {_ddaac =append (_ddaac ,_eefgc );};_da .Strings (_ddaac );for _ ,_feebc :=range _ddaac {_baeba .Append (_bbfa .MakeString (_feebc ));_baeba .Append (_cdbaa [_feebc ]);};_cacae .IDTree =&IDTree {Names :_baeba ,Limits :_bbfa .MakeArray (_bbfa .MakeString (_ddaac [0]),_bbfa .MakeString (_ddaac [len (_ddaac )-1]))};
_cdfdd .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_bbfa .MakeIndirectObject (_cacae .IDTree .ToPdfObject ()));};if _cacae .ParentTree !=nil {_cdfdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_bbfa .MakeIndirectObject (_cacae .ParentTree ));
}else if len (_ffbdf )> 0||len (_gbgbc )> 0{_bebaca :=_bbfa .MakeArray ();_aaegbe :=0;for _ddbgg ,_afabe :=range _ffbdf {_fcebae :=_bbfa .MakeArray ();for _ ,_fabbb :=range _afabe {_fcebae .Append (_fabbb );};_bcdec :=_bbfa .MakeInteger (int64 (_aaegbe ));
_bebaca .Append (_bcdec );_bebaca .Append (_bbfa .MakeIndirectObject (_fcebae ));if _dbaee ,_dgfgg :=_bbfa .GetIndirect (_ddbgg );_dgfgg {if _decae ,_cgbbcg :=_bbfa .GetDict (_dbaee .PdfObject );_cgbbcg {_faabd :=_decae .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _faabd !=nil {if _gfbbac ,_efbfg :=_bbfa .GetIntVal (_faabd );_efbfg {if _aaegbe < _gfbbac {_decae .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bcdec );};};}else {_decae .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bcdec );
};};};_aaegbe ++;};_aagec :=func (_dggca _bbfa .PdfObject ,_efcd *_bbfa .PdfObjectDictionary )bool {if _edcg :=_efcd .Get ("\u004f\u0062\u006a");_edcg !=nil {if _fabcfg ,_cbgee :=_bbfa .GetDict (_edcg );_cbgee {_debed :=_fabcfg .Get ("\u0054\u0079\u0070\u0065");
_fegcb :=_fabcfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _debed !=nil &&_debed .String ()=="\u0041\u006e\u006eo\u0074"&&_fegcb !=nil &&_fegcb .String ()=="\u004c\u0069\u006e\u006b"{_eaggg :=_bbfa .MakeInteger (int64 (_aaegbe ));_fabcfg .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eaggg );
_bebaca .Append (_eaggg );_bebaca .Append (_dggca );_aaegbe ++;return true ;};};};return false ;};for _ ,_aagdc :=range _gbgbc {if _abdga ,_fcdfa :=_bbfa .GetDict (_aagdc );_fcdfa {if _fadaae :=_abdga .Get ("\u0053");_fadaae !=nil {if _daddc ,_gadgb :=_bbfa .GetNameVal (_fadaae );
_gadgb &&_daddc ==StructureTypeLink {if _cdgff :=_abdga .Get ("\u004b");_cdgff !=nil {if _bbce ,_ddbbg :=_bbfa .GetArray (_cdgff );_ddbbg {for _ ,_bfacf :=range _bbce .Elements (){if _caffd ,_dfebfc :=_bbfa .GetDict (_bfacf );_dfebfc {_aagec (_aagdc ,_caffd );
};};}else if _gccd ,_fdfbb :=_bbfa .GetDict (_cdgff );_fdfbb {_aagec (_aagdc ,_gccd );};};};};};};_cacae .ParentTree =_bbfa .MakeDict ();_cacae .ParentTree .Set ("\u004e\u0075\u006d\u0073",_bebaca );_cacae .ParentTreeNextKey =int64 (_aaegbe );_cdfdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_bbfa .MakeIndirectObject (_cacae .ParentTree ));
};_cdfdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_bbfa .MakeInteger (_cacae .ParentTreeNextKey ));if _cacae .RoleMap !=nil {_cdfdd .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_cacae .RoleMap );
};if _cacae .ClassMap !=nil {_cdfdd .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_cacae .ClassMap );};return _gecac ;};func (_aebf *PdfReader )newPdfAnnotationSquigglyFromDict (_cabf *_bbfa .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_ddfdg :=PdfAnnotationSquiggly {};
_bccc ,_bcea :=_aebf .newPdfAnnotationMarkupFromDict (_cabf );if _bcea !=nil {return nil ,_bcea ;};_ddfdg .PdfAnnotationMarkup =_bccc ;_ddfdg .QuadPoints =_cabf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ddfdg ,nil ;
};

// String returns the name of the colorspace (DeviceN).
func (_dgedd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_babd DefaultImageHandler )NewImageFromGoImage (goimg _gd .Image )(*Image ,error ){_acbc ,_aebe :=_bbf .FromGoImage (goimg );if _aebe !=nil {return nil ,_aebe ;};_edga :=_ebdgf (_acbc .Base ());return &_edga ,nil ;};func (_fbecga *PdfWriter )seekByName (_daed _bbfa .PdfObject ,_gaefg []string ,_egbfd string )([]_bbfa .PdfObject ,error ){_df .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_daed );
var _bcdba []_bbfa .PdfObject ;if _adef ,_cdcgd :=_daed .(*_bbfa .PdfIndirectObject );_cdcgd {return _fbecga .seekByName (_adef .PdfObject ,_gaefg ,_egbfd );};if _egdge ,_ggdac :=_daed .(*_bbfa .PdfObjectStream );_ggdac {return _fbecga .seekByName (_egdge .PdfObjectDictionary ,_gaefg ,_egbfd );
};if _edgdfb ,_cgegf :=_daed .(*_bbfa .PdfObjectDictionary );_cgegf {_df .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_eafbb :=range _edgdfb .Keys (){_edfgaa :=_edgdfb .Get (_eafbb );if string (_eafbb )==_egbfd {_bcdba =append (_bcdba ,_edfgaa );};for _ ,_effad :=range _gaefg {if string (_eafbb )==_effad {_df .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_effad );
_cbfgc ,_fbaec :=_fbecga .seekByName (_edfgaa ,_gaefg ,_egbfd );if _fbaec !=nil {return _bcdba ,_fbaec ;};_bcdba =append (_bcdba ,_cbfgc ...);break ;};};};return _bcdba ,nil ;};return _bcdba ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_acfb *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _acfb ._aeee !=nil {return _acfb ._aeee ,nil ;};if _acfb .ColorSpace ==nil {return nil ,nil ;};_fdacba ,_dada :=_eabec (_acfb .ColorSpace );if _dada !=nil {return nil ,_dada ;
};_acfb ._aeee =_fdacba ;return _acfb ._aeee ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_ffadb *PdfFunctionType3 )ToPdfObject ()_bbfa .PdfObject {_bdafd :=_bbfa .MakeDict ();_bdafd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbfa .MakeInteger (3));_bffdb :=&_bbfa .PdfObjectArray {};for _ ,_fabdf :=range _ffadb .Domain {_bffdb .Append (_bbfa .MakeFloat (_fabdf ));
};_bdafd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bffdb );if _ffadb .Range !=nil {_gbdc :=&_bbfa .PdfObjectArray {};for _ ,_faeac :=range _ffadb .Range {_gbdc .Append (_bbfa .MakeFloat (_faeac ));};_bdafd .Set ("\u0052\u0061\u006eg\u0065",_gbdc );
};if _ffadb .Functions !=nil {_ddea :=&_bbfa .PdfObjectArray {};for _ ,_bebb :=range _ffadb .Functions {_ddea .Append (_bebb .ToPdfObject ());};_bdafd .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ddea );};if _ffadb .Bounds !=nil {_ageee :=&_bbfa .PdfObjectArray {};
for _ ,_fafbe :=range _ffadb .Bounds {_ageee .Append (_bbfa .MakeFloat (_fafbe ));};_bdafd .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_ageee );};if _ffadb .Encode !=nil {_dbbd :=&_bbfa .PdfObjectArray {};for _ ,_fecf :=range _ffadb .Encode {_dbbd .Append (_bbfa .MakeFloat (_fecf ));
};_bdafd .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_dbbd );};if _ffadb ._ecafg !=nil {_ffadb ._ecafg .PdfObject =_bdafd ;return _ffadb ._ecafg ;};return _bdafd ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cffd :=PdfColorLab {l ,a ,b };return &_cffd };

// PrintPageRange returns the value of the printPageRange.
func (_cbfbf *ViewerPreferences )PrintPageRange ()[]int {return _cbfbf ._dcdbb };

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bgebfb *PdfWriter )SetNamedDestinations (dests _bbfa .PdfObject )error {if dests ==nil {return nil ;};_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_bgebfb ._cgfbd .Set ("\u0044\u0065\u0073t\u0073",dests );return _bgebfb .addObjects (dests );};

// ToPdfObject implements interface PdfModel.
func (_ecf *PdfActionGoToR )ToPdfObject ()_bbfa .PdfObject {_ecf .PdfAction .ToPdfObject ();_agd :=_ecf ._ff ;_cbe :=_agd .PdfObject .(*_bbfa .PdfObjectDictionary );_cbe .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeGoToR )));if _ecf .F !=nil {_cbe .Set ("\u0046",_ecf .F .ToPdfObject ());
};_cbe .SetIfNotNil ("\u0044",_ecf .D );_cbe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ecf .NewWindow );return _agd ;};

// SetHideMenubar sets the value of the hideMenubar flag.
func (_ebedbb *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_ebedbb ._febff =&hideMenubar };

// SetVersion sets the PDF version of the output file.
func (_gecca *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gecca ._cbaaeg .Major =majorVersion ;_gecca ._cbaaeg .Minor =minorVersion ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbfa .PdfObject ;LE _bbfa .PdfObject ;BS _bbfa .PdfObject ;IC _bbfa .PdfObject ;BE _bbfa .PdfObject ;IT _bbfa .PdfObject ;Measure _bbfa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbaf *PdfAnnotationWatermark )ToPdfObject ()_bbfa .PdfObject {_bbaf .PdfAnnotation .ToPdfObject ();_acff :=_bbaf ._dbge ;_aff :=_acff .PdfObject .(*_bbfa .PdfObjectDictionary );_aff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_aff .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_bbaf .FixedPrint );return _acff ;};func (_eaddc *PdfWriter )writeObject (_bddeb int ,_acgab _bbfa .PdfObject ){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bddeb );
if _fdbfc ,_baabec :=_acgab .(*_bbfa .PdfIndirectObject );_baabec {_eaddc ._cbaff [_bddeb ]=crossReference {Type :1,Offset :_eaddc ._efebf ,Generation :_fdbfc .GenerationNumber };_dbege :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bddeb );
if _agfde ,_afdad :=_fdbfc .PdfObject .(*pdfSignDictionary );_afdad {_agfde ._gcdgb =_eaddc ._efebf +int64 (len (_dbege ));};if _fdbfc .PdfObject ==nil {_df .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_fdbfc .PdfObject =_bbfa .MakeNull ();};_dbege +=_fdbfc .PdfObject .WriteString ();_dbege +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_eaddc .writeString (_dbege );return ;};if _aefdb ,_bdaeg :=_acgab .(*_bbfa .PdfObjectStream );_bdaeg {_eaddc ._cbaff [_bddeb ]=crossReference {Type :1,Offset :_eaddc ._efebf ,Generation :_aefdb .GenerationNumber };
_gcadd :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bddeb );_gcadd +=_aefdb .PdfObjectDictionary .WriteString ();_gcadd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eaddc .writeString (_gcadd );if _aefdb .Lazy {_bdace ,_daccfb :=_dgf .ReadFile (_aefdb .TempFile );
if _daccfb !=nil {_df .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_aefdb .TempFile );return ;};_eaddc .writeBytes (_bdace );
_dgf .Remove (_aefdb .TempFile );}else {_eaddc .writeBytes (_aefdb .Stream );};_eaddc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _bgdgc ,_baeac :=_acgab .(*_bbfa .PdfObjectStreams );
_baeac {_eaddc ._cbaff [_bddeb ]=crossReference {Type :1,Offset :_eaddc ._efebf ,Generation :_bgdgc .GenerationNumber };_fbbe :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bddeb );var _cebdf []string ;var _aedfg string ;var _fadgc int64 ;
for _cbaec ,_ffega :=range _bgdgc .Elements (){_abcdb ,_cbgbe :=_ffega .(*_bbfa .PdfIndirectObject );if !_cbgbe {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bddeb ,_ffega );
continue ;};_fefad :=_abcdb .PdfObject .WriteString ()+"\u0020";_aedfg =_aedfg +_fefad ;_cebdf =append (_cebdf ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_abcdb .ObjectNumber ,_fadgc ));_eaddc ._cbaff [int (_abcdb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bddeb ,Index :_cbaec };
_fadgc =_fadgc +int64 (len ([]byte (_fefad )));};_bggb :=_ge .Join (_cebdf ,"\u0020")+"\u0020";_ecgaf :=_bbfa .NewFlateEncoder ();_aaba :=_ecgaf .MakeStreamDict ();_aaba .Set (_bbfa .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bbfa .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_dgdfg :=int64 (_bgdgc .Len ());_aaba .Set (_bbfa .PdfObjectName ("\u004e"),_bbfa .MakeInteger (_dgdfg ));_dcbde :=int64 (len (_bggb ));_aaba .Set (_bbfa .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bbfa .MakeInteger (_dcbde ));_bcfabd ,_ :=_ecgaf .EncodeBytes ([]byte (_bggb +_aedfg ));
_ddeba :=int64 (len (_bcfabd ));_aaba .Set (_bbfa .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bbfa .MakeInteger (_ddeba ));_fbbe +=_aaba .WriteString ();_fbbe +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eaddc .writeString (_fbbe );
_eaddc .writeBytes (_bcfabd );_eaddc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_eaddc .writeString (_acgab .WriteString ());};func (_aecaf *PdfShading )getShadingDict ()(*_bbfa .PdfObjectDictionary ,error ){_bdebad :=_aecaf ._facd ;
if _ddegf ,_aaedb :=_bdebad .(*_bbfa .PdfIndirectObject );_aaedb {_gfdc ,_agedc :=_ddegf .PdfObject .(*_bbfa .PdfObjectDictionary );if !_agedc {return nil ,_bbfa .ErrTypeError ;};return _gfdc ,nil ;}else if _egbgg ,_ebce :=_bdebad .(*_bbfa .PdfObjectStream );
_ebce {return _egbgg .PdfObjectDictionary ,nil ;}else if _gfgga ,_cgdfdg :=_bdebad .(*_bbfa .PdfObjectDictionary );_cgdfdg {return _gfgga ,nil ;}else {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_bbfa .ErrTypeError ;};};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_feadb :=&PdfOutline {_cfaba :_bbfa .MakeIndirectObject (_bbfa .MakeDict ())};_feadb ._cedfc =_feadb ;return _feadb ;};func (_gggebb *PdfWriter )setDocumentIDs (_fdaba ,_abebef string ){_gggebb ._fedbc =_bbfa .MakeArray (_bbfa .MakeHexString (_fdaba ),_bbfa .MakeHexString (_abebef ));
};func _deefg (_egddg *_bbfa .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ddccb :=&PdfShadingPattern {};_ggcdd :=_egddg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ggcdd ==nil {_df .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gddcg ,_cgaab :=_cgdee (_ggcdd );if _cgaab !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_cgaab );return nil ,_cgaab ;
};_ddccb .Shading =_gddcg ;if _fcfbf :=_egddg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fcfbf !=nil {_baaa ,_bdccd :=_fcfbf .(*_bbfa .PdfObjectArray );if !_bdccd {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcfbf );
return nil ,_bbfa .ErrTypeError ;};_ddccb .Matrix =_baaa ;};if _bfdfb :=_egddg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bfdfb !=nil {_ddccb .ExtGState =_bfdfb ;};return _ddccb ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_eabcf *PdfShading )GetContainingPdfObject ()_bbfa .PdfObject {return _eabcf ._facd };

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_ccfcg *LTV )EnableChain (chain []*_fe .Certificate )error {return _ccfcg .enable (nil ,chain ,"")};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbfa .PdfObject ;IC _bbfa .PdfObject ;BE _bbfa .PdfObject ;RD _bbfa .PdfObject ;};func _gfbe (_dgace *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_agadb ,_ggcgfc :=_bbfa .GetDict (_dgace .AP );
if !_ggcgfc {return nil ,nil ,_gf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _agadb ==nil {return nil ,nil ,nil ;};_bebfc ,_ggcgfc :=_bbfa .GetArray (_dgace .Rect );
if !_ggcgfc ||_bebfc .Len ()!=4{return nil ,nil ,_gf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dabfae ,_bdad :=NewPdfRectangle (*_bebfc );if _bdad !=nil {return nil ,nil ,_bdad ;};_cedgf :=_bbfa .TraceToDirectObject (_agadb .Get ("\u004e"));
switch _fbcfb :=_cedgf .(type ){case *_bbfa .PdfObjectStream :_gfgec :=_fbcfb ;_abeabc ,_beca :=NewXObjectFormFromStream (_gfgec );return _abeabc ,_dabfae ,_beca ;case *_bbfa .PdfObjectDictionary :_gcbfb :=_fbcfb ;if _gcbfb ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _dggeg _bbfa .PdfObject ;_cedc ,_fcdef :=_bbfa .GetName (_dgace .AS );if _fcdef {_dggeg =_gcbfb .Get (*_cedc );}else {_adfb :=_dgace ._dbge .PdfObject .(*_bbfa .PdfObjectDictionary );if _adfb ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _gfbf :=_adfb .Get ("\u0056");_gfbf !=nil {_dggeg =_gcbfb .Get (_bbfa .PdfObjectName (_gfbf .String ()));};};if _dggeg ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_edcdb ,_fcdef :=_bbfa .GetStream (_dggeg );if !_fcdef {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cedc );
return nil ,nil ,_gf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cebee ,_befda :=NewXObjectFormFromStream (_edcdb );return _cebee ,_dabfae ,_befda ;};_df .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cedgf );
return nil ,nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};type pdfCIDFontType0 struct{fontCommon ;_cecf *_bbfa .PdfIndirectObject ;_gcfa _efd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bbfa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbfa .PdfObject ;W _bbfa .PdfObject ;DW2 _bbfa .PdfObject ;W2 _bbfa .PdfObject ;_beabg map[_efd .CharCode ]float64 ;_bbgf float64 ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ddbb *PdfPattern )GetContext ()PdfModel {return _ddbb ._eabcc };

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_afbbg *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gaabc :=NewPdfOutlineItem ();_gaabc .Title =_bbfa .MakeEncodedString (_afbbg .Title ,true );_gaabc .Dest =_afbbg .Dest .ToPdfObject ();var _ecbfd []*PdfOutlineItem ;var _gfece int64 ;
var _geegc *PdfOutlineItem ;for _ ,_dcfe :=range _afbbg .Entries {_degc ,_ecff :=_dcfe .ToPdfOutlineItem ();_degc .Parent =&_gaabc .PdfOutlineTreeNode ;if _geegc !=nil {_geegc .Next =&_degc .PdfOutlineTreeNode ;_degc .Prev =&_geegc .PdfOutlineTreeNode ;
};_ecbfd =append (_ecbfd ,_degc );_gfece +=_ecff ;_geegc =_degc ;};_bgfab :=len (_ecbfd );_gfece +=int64 (_bgfab );if _bgfab > 0{_gaabc .First =&_ecbfd [0].PdfOutlineTreeNode ;_gaabc .Last =&_ecbfd [_bgfab -1].PdfOutlineTreeNode ;_gaabc .Count =&_gfece ;
};return _gaabc ,_gfece ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cgbc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abec :=vals [0];if _abec < 0.0||_abec > 1.0{_df .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _abec < 0.0{_abec =0.0;}else if _abec > 1.0{_abec =1.0;};return NewPdfColorDeviceGray (_abec ),nil ;};func (_acaf *Image )samplesTrimPadding (_cccbe []uint32 )[]uint32 {_aecf :=_acaf .ColorComponents *int (_acaf .Width )*int (_acaf .Height );if len (_cccbe )==_aecf {return _cccbe ;
};_befgf :=make ([]uint32 ,_aecf );_gfaeb :=int (_acaf .Width )*_acaf .ColorComponents ;var _ggggf ,_fcdd ,_ggffc ,_cacce int ;_bfffd :=_bbf .BytesPerLine (int (_acaf .Width ),int (_acaf .BitsPerComponent ),_acaf .ColorComponents );for _ggggf =0;_ggggf < int (_acaf .Height );
_ggggf ++{_fcdd =_ggggf *int (_acaf .Width );_ggffc =_ggggf *_bfffd ;for _cacce =0;_cacce < _gfaeb ;_cacce ++{_befgf [_fcdd +_cacce ]=_cccbe [_ggffc +_cacce ];};};return _befgf ;};

// GetFillImage get attached model.Image in push button.
func (_bcga *PdfFieldButton )GetFillImage ()*Image {if _bcga .IsPush (){return _bcga ._ddaf ;};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ebgc *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_acce :=_cgb .NewReader (img .getBase ());_dbeag :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cacda :=_cgb .NewWriter (_dbeag );
_dfeda :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_cabb :=make ([]uint32 ,3);var (_cddb error ;_bccf ,_efb ,_egbcd ,_gcaa ,_dbfd ,_aegd float64 ;);for {_cddb =_acce .ReadSamples (_cabb );if _cddb ==_cb .EOF {break ;}else if _cddb !=nil {return img ,_cddb ;
};_bccf =float64 (_cabb [0])/_dfeda ;_efb =float64 (_cabb [1])/_dfeda ;_egbcd =float64 (_cabb [2])/_dfeda ;_gcaa =_ebgc .Matrix [0]*_dg .Pow (_bccf ,_ebgc .Gamma [0])+_ebgc .Matrix [3]*_dg .Pow (_efb ,_ebgc .Gamma [1])+_ebgc .Matrix [6]*_dg .Pow (_egbcd ,_ebgc .Gamma [2]);
_dbfd =_ebgc .Matrix [1]*_dg .Pow (_bccf ,_ebgc .Gamma [0])+_ebgc .Matrix [4]*_dg .Pow (_efb ,_ebgc .Gamma [1])+_ebgc .Matrix [7]*_dg .Pow (_egbcd ,_ebgc .Gamma [2]);_aegd =_ebgc .Matrix [2]*_dg .Pow (_bccf ,_ebgc .Gamma [0])+_ebgc .Matrix [5]*_dg .Pow (_efb ,_ebgc .Gamma [1])+_ebgc .Matrix [8]*_dg .Pow (_egbcd ,_ebgc .Gamma [2]);
_bccf =3.240479*_gcaa +-1.537150*_dbfd +-0.498535*_aegd ;_efb =-0.969256*_gcaa +1.875992*_dbfd +0.041556*_aegd ;_egbcd =0.055648*_gcaa +-0.204043*_dbfd +1.057311*_aegd ;_bccf =_dg .Min (_dg .Max (_bccf ,0),1.0);_efb =_dg .Min (_dg .Max (_efb ,0),1.0);_egbcd =_dg .Min (_dg .Max (_egbcd ,0),1.0);
_cabb [0]=uint32 (_bccf *_dfeda );_cabb [1]=uint32 (_efb *_dfeda );_cabb [2]=uint32 (_egbcd *_dfeda );if _cddb =_cacda .WriteSamples (_cabb );_cddb !=nil {return img ,_cddb ;};};return _ebdgf (&_dbeag ),nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bbfa .PdfObjectBool ;SigFlags *_bbfa .PdfObjectInteger ;CO *_bbfa .PdfObjectArray ;DR *PdfPageResources ;DA *_bbfa .PdfObjectString ;Q *_bbfa .PdfObjectInteger ;XFA _bbfa .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _bbfa .PdfObject ;_dbddd *_bbfa .PdfIndirectObject ;_gaeca bool ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_cgg .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ea .Time ;};

// AddOutlineTree adds outlines to a PDF file.
func (_bccab *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bccab ._bggced =outlineTree ;};

// GetPage returns the PdfPage model for the specified page number.
func (_faega *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _faega ._fdefeb .GetCrypter ()!=nil &&!_faega ._fdefeb .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_faega ._ceebee )< pageNumber {return nil ,_gf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_becfg :=pageNumber -1;if _becfg < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_eaebf :=_faega .PageList [_becfg ];
return _eaebf ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_fdbdd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_gf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cbecd ,_fcgd :=_bbf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eccdd ,img ._acgd );if _fcgd !=nil {return img ,_fcgd ;};_fffg ,_fcgd :=_bbf .NRGBAConverter .Convert (_cbecd );if _fcgd !=nil {return img ,_fcgd ;
};_fead :=_ebdgf (_fffg .Base ());_df .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_df .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_df .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fead .Data );
_df .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fead );return _fead ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ecegb *PdfPattern )IsTiling ()bool {return _ecegb .PatternType ==1};

// AddMCIDChild adds a child MCID object.
func (_ecbda *KDict )AddMCIDChild (mcid int ){_ecbda ._cbag =append (_ecbda ._cbag ,&KValue {_aagdb :&mcid });};

// GetRevisionNumber returns the version of the current Pdf document
func (_cbgea *PdfReader )GetRevisionNumber ()int {return _cbgea ._fdefeb .GetRevisionNumber ()};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_acgda []byte )(_efaba int ,_agfdg error );};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fdgae *PdfPageResourcesColorspaces )Set (key _bbfa .PdfObjectName ,val PdfColorspace ){if _ ,_febfa :=_fdgae .Colorspaces [string (key )];!_febfa {_fdgae .Names =append (_fdgae .Names ,string (key ));};_fdgae .Colorspaces [string (key )]=val ;};


// SetMCID sets the MCID for the KValue.
func (_fegcbc *KValue )SetMCID (mcid int ){_fegcbc .Clear ();_fegcbc ._aagdb =&mcid };func _aead (_fdea _bbfa .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_df .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fdea .String (),_fdea );
_dceee :=NewPdfColorspaceSpecialPattern ();if _bbfd ,_bbbff :=_fdea .(*_bbfa .PdfIndirectObject );_bbbff {_dceee ._afeg =_bbfd ;};_fdea =_bbfa .TraceToDirectObject (_fdea );if _adce ,_gegfg :=_fdea .(*_bbfa .PdfObjectName );_gegfg {if *_adce !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dceee ,nil ;};_gcbb ,_fcbfa :=_fdea .(*_bbfa .PdfObjectArray );if !_fcbfa {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fdea );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gcbb .Len ()!=1&&_gcbb .Len ()!=2{_df .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gcbb );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fdea =_gcbb .Get (0);if _dbafb ,_dcdg :=_fdea .(*_bbfa .PdfObjectName );_dcdg {if *_dbafb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dbafb );
return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gcbb .Len ()> 1{_fdea =_gcbb .Get (1);_fdea =_bbfa .TraceToDirectObject (_fdea );_cgeeb ,_ffba :=NewPdfColorspaceFromPdfObject (_fdea );if _ffba !=nil {return nil ,_ffba ;
};_dceee .UnderlyingCS =_cgeeb ;};_df .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dceee .UnderlyingCS );
return _dceee ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ffa :=NewPdfAction ();_bce :=&PdfActionTrans {};_bce .PdfAction =_ffa ;_ffa .SetContext (_bce );return _bce ;};

// ToGoTime returns the date in time.Time format.
func (_ggbefb PdfDate )ToGoTime ()_ea .Time {_faadb :=int (_ggbefb ._fedea *60*60+_ggbefb ._cabba *60);switch _ggbefb ._ccce {case '-':_faadb =-_faadb ;case 'Z':_faadb =0;};_egcf :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ggbefb ._ccce ,_ggbefb ._fedea ,_ggbefb ._cabba );
_aafcae :=_ea .FixedZone (_egcf ,_faadb );return _ea .Date (int (_ggbefb ._fbfea ),_ea .Month (_ggbefb ._dbgfe ),int (_ggbefb ._gadge ),int (_ggbefb ._egfad ),int (_ggbefb ._bggf ),int (_ggbefb ._acecab ),0,_aafcae );};

// AddWatermarkText adds a text watermark to the page.
func (_cgggcg *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _gf .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _gf .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_f .Black ;};_dbfdg ,_bgfedg :=_cgggcg .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _bgfedg !=nil {return _bgfedg ;
};_gbeb ,_ ,_bgfedg :=_gd .Decode (_de .NewReader (_dbfdg ));if _bgfedg !=nil {return _bgfedg ;};_cggac ,_bgfedg :=ImageHandling .NewImageFromGoImage (_gbeb );if _bgfedg !=nil {return _bgfedg ;};_agce ,_bgfedg :=NewXObjectImageFromImage (_cggac ,nil ,_bbfa .NewFlateEncoder ());
if _bgfedg !=nil {return _bgfedg ;};_cggce :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _cgggcg .AddWatermarkImage (_agce ,_cggce );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_fafb *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dbbb :=NewPdfAnnotation ();_bbg :=&PdfAnnotationMovie {};_bbg .PdfAnnotation =_dbbb ;_dbbb .SetContext (_bbg );return _bbg ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_dagdag *PdfPageResources )ToPdfObject ()_bbfa .PdfObject {_bcgdf :=_dagdag ._gddca ;_bcgdf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dagdag .ExtGState );if _dagdag ._aeee !=nil {_dagdag .ColorSpace =_dagdag ._aeee .ToPdfObject ();
};_bcgdf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dagdag .ColorSpace );_bcgdf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dagdag .Pattern );_bcgdf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dagdag .Shading );
_bcgdf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dagdag .XObject );_bcgdf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dagdag .Font );_bcgdf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dagdag .ProcSet );_bcgdf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dagdag .Properties );
return _bcgdf ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;

// SetContentStream sets the pattern cell's content stream.
func (_bccge *PdfTilingPattern )SetContentStream (content []byte ,encoder _bbfa .StreamEncoder )error {_gdfdcg ,_edcf :=_bccge ._cgad .(*_bbfa .PdfObjectStream );if !_edcf {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bccge ._cgad );
return _bbfa .ErrTypeError ;};if encoder ==nil {encoder =_bbfa .NewRawEncoder ();};_fdbdc :=_gdfdcg .PdfObjectDictionary ;_adea :=encoder .MakeStreamDict ();_fdbdc .Merge (_adea );_dafga ,_gged :=encoder .EncodeBytes (content );if _gged !=nil {return _gged ;
};_fdbdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_dafga ))));_gdfdcg .Stream =_dafga ;return nil ;};

// SetPage directly sets the page object.
func (_gabfd *KDict )SetPage (page *_bbfa .PdfIndirectObject ){_gabfd .Pg =page };

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bbfa .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bbfa .PdfObject ;A _bbfa .PdfObject ;SE _bbfa .PdfObject ;C _bbfa .PdfObject ;
F _bbfa .PdfObject ;_efffa *_bbfa .PdfIndirectObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bbfa .PdfObjectInteger ;TilingType *_bbfa .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bbfa .PdfObjectFloat ;YStep *_bbfa .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bbfa .PdfObjectArray ;
};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _bbfa .PdfObject )(*StructTreeRoot ,error ){_aeabg :=_bbfa .ResolveReference (obj );_aebgae ,_gdddf :=_bbfa .GetDict (_aeabg );if !_gdddf {return nil ,_b .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_fbcae :=&StructTreeRoot {};_fbcae ._acgfc =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());if _dbeaa :=_aebgae .Get ("\u004b");_dbeaa !=nil {_cbbbe :=_bbfa .ResolveReference (_dbeaa );_gdba :=_bbfa .ResolveReferencesDeep (_cbbbe ,nil );if _gdba !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_gdba );
};_fbcae .K =[]*KDict {};if _bcgaee ,_dfddb :=_bbfa .GetArray (_cbbbe );_dfddb {for _fbgg :=0;_fbgg < _bcgaee .Len ();_fbgg ++{_gbdae :=_bcgaee .Get (_fbgg );_fedeea ,_dcfff :=NewKDictFromPdfObject (_gbdae );if _dcfff !=nil {return nil ,_dcfff ;};_fbcae .K =append (_fbcae .K ,_fedeea );
};}else {_ffcb ,_ffea :=NewKDictFromPdfObject (_cbbbe );if _ffea !=nil {return nil ,_ffea ;};_fbcae .K =append (_fbcae .K ,_ffcb );};};if _bccdb :=_aebgae .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_bccdb !=nil {_fbcae .IDTree =_eacd (_bccdb );};if _cdeag :=_aebgae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");
_cdeag !=nil {_eeadf :=_bbfa .ResolveReference (_cdeag );if _agcde ,_cafbb :=_bbfa .GetDict (_eeadf );_cafbb {_fbcae .ParentTree =_agcde ;};};if _ffafa :=_aebgae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_ffafa !=nil {_ ,_gbce :=_bbfa .GetInt (_ffafa );if _gbce {_cbfcf ,_aaadd :=_bbfa .GetNumberAsInt64 (_ffafa );if _aaadd !=nil {return nil ,_aaadd ;};_fbcae .ParentTreeNextKey =_cbfcf ;};};if _dgeccb :=_aebgae .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");
_dgeccb !=nil {switch _ffgdcc :=_dgeccb .(type ){case *_bbfa .PdfIndirectObject :if _becfe ,_fgggc :=_bbfa .GetDict (_ffgdcc .PdfObject );_fgggc {_fbcae .RoleMap =_becfe ;};case *_bbfa .PdfObjectDictionary :_fbcae .RoleMap =_ffgdcc ;case *_bbfa .PdfObjectString :_fbcae .RoleMap =_ffgdcc ;
};};if _edagd :=_aebgae .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_edagd !=nil {if _abfddf ,_cbce :=_bbfa .GetDict (_edagd );_cbce {_fbcae .ClassMap =_abfddf ;};};return _fbcae ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_eedfc *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dfaa []*PdfOutlineTreeNode ;var _ebddb []string ;var _acgbff func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_acgbff =func (_dbcbc *PdfOutlineTreeNode ,_bffbfa *[]*PdfOutlineTreeNode ,_aacge *[]string ,_fcad int ){if _dbcbc ==nil {return ;
};if _dbcbc ._cedfc ==nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ecacb ,_ggde :=_dbcbc ._cedfc .(*PdfOutlineItem );if _ggde {*_bffbfa =append (*_bffbfa ,&_ecacb .PdfOutlineTreeNode );
_egggd :=_ge .Repeat ("\u0020",_fcad *2)+_ecacb .Title .Decoded ();*_aacge =append (*_aacge ,_egggd );};if _dbcbc .First !=nil {_ccbgc :=_ge .Repeat ("\u0020",_fcad *2)+"\u002b";*_aacge =append (*_aacge ,_ccbgc );_acgbff (_dbcbc .First ,_bffbfa ,_aacge ,_fcad +1);
};if _ggde &&_ecacb .Next !=nil {_acgbff (_ecacb .Next ,_bffbfa ,_aacge ,_fcad );};};_acgbff (_eedfc ._cffec ,&_dfaa ,&_ebddb ,0);return _dfaa ,_ebddb ,nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bbfa .PdfObject ;T3DV _bbfa .PdfObject ;T3DA _bbfa .PdfObject ;T3DI _bbfa .PdfObject ;T3DB _bbfa .PdfObject ;};func (_bcfec *PdfReader )newPdfAcroFormFromDict (_egga *_bbfa .PdfIndirectObject ,_bafeb *_bbfa .PdfObjectDictionary )(*PdfAcroForm ,error ){_abbbe :=NewPdfAcroForm ();
if _egga !=nil {_abbbe ._dbddd =_egga ;_egga .PdfObject =_bbfa .MakeDict ();};if _ccdd :=_bafeb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ccdd !=nil &&!_bbfa .IsNullObject (_ccdd ){_fegac ,_badgc :=_bbfa .GetArray (_ccdd );if !_badgc {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ccdd );
};var _ebfgb []*PdfField ;for _ ,_aaea :=range _fegac .Elements (){_baed ,_fbbca :=_bbfa .GetIndirect (_aaea );if !_fbbca {if _ ,_bcaf :=_aaea .(*_bbfa .PdfObjectNull );_bcaf {_df .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_df .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_aaea );
return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_abda ,_cccg :=_bcfec .newPdfFieldFromIndirectObject (_baed ,nil );
if _cccg !=nil {return nil ,_cccg ;};_df .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_abda );_ebfgb =append (_ebfgb ,_abda );};_abbbe .Fields =&_ebfgb ;};if _cbecf :=_bafeb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_cbecf !=nil {_bbddg ,_baegb :=_bbfa .GetBool (_cbecf );if _baegb {_abbbe .NeedAppearances =_bbddg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cbecf );
};};if _cbgd :=_bafeb .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cbgd !=nil {_ebbe ,_eaefa :=_bbfa .GetInt (_cbgd );if _eaefa {_abbbe .SigFlags =_ebbe ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbgd );
};};if _gbbfe :=_bafeb .Get ("\u0043\u004f");_gbbfe !=nil {_aaeb ,_adbgb :=_bbfa .GetArray (_gbbfe );if _adbgb {_abbbe .CO =_aaeb ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gbbfe );
};};if _fdbaf :=_bafeb .Get ("\u0044\u0052");_fdbaf !=nil {if _efgaa ,_ebdbf :=_bbfa .GetDict (_fdbaf );_ebdbf {_cede ,_ddgf :=NewPdfPageResourcesFromDict (_efgaa );if _ddgf !=nil {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ddgf );
return nil ,_ddgf ;};_abbbe .DR =_cede ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdbaf );};};if _fcaea :=_bafeb .Get ("\u0044\u0041");
_fcaea !=nil {_gbfba ,_bagac :=_bbfa .GetString (_fcaea );if _bagac {_abbbe .DA =_gbfba ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fcaea );
};};if _bbcae :=_bafeb .Get ("\u0051");_bbcae !=nil {_cgcb ,_ffgbg :=_bbfa .GetInt (_bbcae );if _ffgbg {_abbbe .Q =_cgcb ;}else {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bbcae );
};};if _gbda :=_bafeb .Get ("\u0058\u0046\u0041");_gbda !=nil {_abbbe .XFA =_gbda ;};if _dfefg :=_bafeb .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_dfefg !=nil {_abbbe .ADBEEchoSign =_dfefg ;};_abbbe .ToPdfObject ();
return _abbbe ,nil ;};func _bfbgc (_cdab _bbfa .PdfObject ){_df .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cdab ,_cdab .String ());if _ecace ,_cedea :=_cdab .(*_bbfa .PdfObjectStream );_cedea {_dacbg ,_ccccc :=_bbfa .DecodeStream (_ecace );
if _ccccc !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_ccccc );return ;};_df .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dacbg );}else if _gdae ,_aadcc :=_cdab .(*_bbfa .PdfIndirectObject );_aadcc {_df .Log .Debug ("\u0025\u0054\u0020%\u0076",_gdae .PdfObject ,_gdae .PdfObject );
_df .Log .Debug ("\u0025\u0073",_gdae .PdfObject .String ());};};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edac pdfCIDFontType2 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){_cbffa ,_cebgg :=_edac ._baggg [r ];if !_cebgg {_bbddcg ,_ecccd :=_bbfa .GetInt (_edac .DW );if !_ecccd {return _fg .CharMetrics {},false ;};_cbffa =int (*_bbddcg );};return _fg .CharMetrics {Wx :float64 (_cbffa )},true ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ccbc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbfd :=vals [0];_fdbc :=[]float64 {_cgbfd };_deaag ,_gcbbg :=_ccbc .TintTransform .Evaluate (_fdbc );
if _gcbbg !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gcbbg );_df .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ccbc .TintTransform );
return nil ,_gcbbg ;};_df .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_deaag ,_ccbc .AlternateSpace );
_acgcb ,_gcbbg :=_ccbc .AlternateSpace .ColorFromFloats (_deaag );if _gcbbg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gcbbg );
return nil ,_gcbbg ;};return _acgcb ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_afacf *PdfOutlineTreeNode )ToPdfObject ()_bbfa .PdfObject {return _afacf .GetContext ().ToPdfObject ();};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// RemovePage removes a page by number.
func (_dcec *PdfAppender )RemovePage (pageNum int ){_eaad :=pageNum -1;_dcec ._cefa =append (_dcec ._cefa [0:_eaad ],_dcec ._cefa [pageNum :]...);};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_efcbaa *PdfColorspaceDeviceN )ToPdfObject ()_bbfa .PdfObject {_abcc :=_bbfa .MakeArray (_bbfa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_abcc .Append (_efcbaa .ColorantNames );_abcc .Append (_efcbaa .AlternateSpace .ToPdfObject ());_abcc .Append (_efcbaa .TintTransform .ToPdfObject ());
if _efcbaa .Attributes !=nil {_abcc .Append (_efcbaa .Attributes .ToPdfObject ());};if _efcbaa ._afdd !=nil {_efcbaa ._afdd .PdfObject =_abcc ;return _efcbaa ._afdd ;};return _abcc ;};func _gfea (_ggdfe *_bbfa .PdfObjectDictionary ,_eabac *fontCommon )(*pdfCIDFontType2 ,error ){if _eabac ._eebdg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eabac );
return nil ,_bbfa .ErrRangeError ;};_ebge :=_gabc (_eabac );_aegab ,_eead :=_bbfa .GetDict (_ggdfe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_eead {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eabac );
return nil ,ErrRequiredAttributeMissing ;};_ebge .CIDSystemInfo =_aegab ;_ebge .DW =_ggdfe .Get ("\u0044\u0057");_ebge .W =_ggdfe .Get ("\u0057");_ebge .DW2 =_ggdfe .Get ("\u0044\u0057\u0032");_ebge .W2 =_ggdfe .Get ("\u0057\u0032");_ebge .CIDToGIDMap =_ggdfe .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_ebge ._dgbfc =1000.0;if _gddfd ,_ceacd :=_bbfa .GetNumberAsFloat (_ebge .DW );_ceacd ==nil {_ebge ._dgbfc =_gddfd ;};_dgdda ,_dcece :=_cegdc (_ebge .W );if _dcece !=nil {return nil ,_dcece ;};if _dgdda ==nil {_dgdda =map[_efd .CharCode ]float64 {};};_ebge ._bafe =_dgdda ;
return _ebge ,nil ;};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_afca *PdfWriter )GetPageIndirectObject (pageNum int )(*_bbfa .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_afca ._gfddc ){return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _afca ._gfddc [pageNum ],nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_efabf *PdfPageResources )SetShadingByName (keyName _bbfa .PdfObjectName ,shadingObj _bbfa .PdfObject )error {if _efabf .Shading ==nil {_efabf .Shading =_bbfa .MakeDict ();};_bebag ,_fdcea :=_bbfa .GetDict (_efabf .Shading );if !_fdcea {return _bbfa .ErrTypeError ;
};_bebag .Set (keyName ,shadingObj );return nil ;};func (_abag *pdfFontType0 )bytesToCharcodes (_baggf []byte )([]_efd .CharCode ,bool ){if _abag ._deaca ==nil {return nil ,false ;};_dgba ,_cbbg :=_abag ._deaca .BytesToCharcodes (_baggf );if !_cbbg {return nil ,false ;
};_dggbf :=make ([]_efd .CharCode ,len (_dgba ));for _dfbb ,_bgcc :=range _dgba {_dggbf [_dfbb ]=_efd .CharCode (_bgcc );};return _dggbf ,true ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_gdcdg *PdfColorspaceCalGray )ToPdfObject ()_bbfa .PdfObject {_bbdc :=&_bbfa .PdfObjectArray {};_bbdc .Append (_bbfa .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_adfd :=_bbfa .MakeDict ();if _gdcdg .WhitePoint !=nil {_adfd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbfa .MakeArray (_bbfa .MakeFloat (_gdcdg .WhitePoint [0]),_bbfa .MakeFloat (_gdcdg .WhitePoint [1]),_bbfa .MakeFloat (_gdcdg .WhitePoint [2])));
}else {_df .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gdcdg .BlackPoint !=nil {_adfd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bbfa .MakeArray (_bbfa .MakeFloat (_gdcdg .BlackPoint [0]),_bbfa .MakeFloat (_gdcdg .BlackPoint [1]),_bbfa .MakeFloat (_gdcdg .BlackPoint [2])));
};_adfd .Set ("\u0047\u0061\u006dm\u0061",_bbfa .MakeFloat (_gdcdg .Gamma ));_bbdc .Append (_adfd );if _gdcdg ._deegb !=nil {_gdcdg ._deegb .PdfObject =_bbdc ;return _gdcdg ._deegb ;};return _bbdc ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bbfa .PdfObjectArray ;Domain *_bbfa .PdfObjectArray ;Function []PdfFunction ;Extend *_bbfa .PdfObjectArray ;};

// ValidateSignatures validates digital signatures in the document.
func (_cdga *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _cdga .AcroForm ==nil {return nil ,nil ;};if _cdga .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_aebgfa *PdfSignature ;
_dfaeb *PdfField ;_ceef SignatureHandler ;};var _dfcf []*sigFieldPair ;for _ ,_agbfbf :=range _cdga .AcroForm .AllFields (){if _agbfbf .V ==nil {continue ;};if _ffaf ,_fcbdf :=_bbfa .GetDict (_agbfbf .V );_fcbdf {if _agec ,_cggba :=_bbfa .GetNameVal (_ffaf .Get ("\u0054\u0079\u0070\u0065"));
_cggba &&(_agec =="\u0053\u0069\u0067"||_agec =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_bdbg ,_dfafd :=_bbfa .GetIndirect (_agbfbf .V );if !_dfafd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ceggd ,_ccdeb :=_cdga .newPdfSignatureFromIndirect (_bdbg );if _ccdeb !=nil {return nil ,_ccdeb ;};var _dddgg SignatureHandler ;for _ ,_gagee :=range handlers {if _gagee .IsApplicable (_ceggd ){_dddgg =_gagee ;break ;};};_dfcf =append (_dfcf ,&sigFieldPair {_aebgfa :_ceggd ,_dfaeb :_agbfbf ,_ceef :_dddgg });
};};};var _ceebc []SignatureValidationResult ;for _ ,_fgeebe :=range _dfcf {_gacge :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fgeebe ._dfaeb }};if _fgeebe ._ceef ==nil {_gacge .Errors =append (_gacge .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_ceebc =append (_ceebc ,_gacge );continue ;};_aaddg ,_cgcf :=_fgeebe ._ceef .NewDigest (_fgeebe ._aebgfa );if _cgcf !=nil {_gacge .Errors =append (_gacge .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cgcf .Error ());_ceebc =append (_ceebc ,_gacge );
continue ;};_acbbc :=_fgeebe ._aebgfa .ByteRange ;if _acbbc ==nil {_gacge .Errors =append (_gacge .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_ceebc =append (_ceebc ,_gacge );continue ;};
for _bgca :=0;_bgca < _acbbc .Len ();_bgca =_bgca +2{_bgefa ,_ :=_bbfa .GetNumberAsInt64 (_acbbc .Get (_bgca ));_geade ,_ :=_bbfa .GetIntVal (_acbbc .Get (_bgca +1));if _ ,_dgggd :=_cdga ._aaafe .Seek (_bgefa ,_cb .SeekStart );_dgggd !=nil {return nil ,_dgggd ;
};_ggegb :=make ([]byte ,_geade );if _ ,_cbgfg :=_cdga ._aaafe .Read (_ggegb );_cbgfg !=nil {return nil ,_cbgfg ;};_aaddg .Write (_ggegb );};var _cfbcce SignatureValidationResult ;if _dgag ,_bddag :=_fgeebe ._ceef .(SignatureHandlerDocMDP );_bddag {_cfbcce ,_cgcf =_dgag .ValidateWithOpts (_fgeebe ._aebgfa ,_aaddg ,SignatureHandlerDocMDPParams {Parser :_cdga ._fdefeb });
}else {_cfbcce ,_cgcf =_fgeebe ._ceef .Validate (_fgeebe ._aebgfa ,_aaddg );};if _cgcf !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cgcf ,_fgeebe ._ceef );_cfbcce .Errors =append (_cfbcce .Errors ,_cgcf .Error ());
};_cfbcce .Name =_fgeebe ._aebgfa .Name .Decoded ();_cfbcce .Reason =_fgeebe ._aebgfa .Reason .Decoded ();if _fgeebe ._aebgfa .M !=nil {_affca ,_daadc :=NewPdfDate (_fgeebe ._aebgfa .M .String ());if _daadc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daadc );
_cfbcce .Errors =append (_cfbcce .Errors ,_daadc .Error ());continue ;};_cfbcce .Date =_affca ;};_cfbcce .ContactInfo =_fgeebe ._aebgfa .ContactInfo .Decoded ();_cfbcce .Location =_fgeebe ._aebgfa .Location .Decoded ();_cfbcce .Fields =_gacge .Fields ;
_ceebc =append (_ceebc ,_cfbcce );};return _ceebc ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fb .Permissions ;Algorithm EncryptionAlgorithm ;};

// ToPdfObject returns the PDF representation of the function.
func (_fefdg *PdfFunctionType0 )ToPdfObject ()_bbfa .PdfObject {if _fefdg ._cdcd ==nil {_fefdg ._cdcd =&_bbfa .PdfObjectStream {};};_bgccf :=_bbfa .MakeDict ();_bgccf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbfa .MakeInteger (0));
_gded :=&_bbfa .PdfObjectArray {};for _ ,_ceega :=range _fefdg .Domain {_gded .Append (_bbfa .MakeFloat (_ceega ));};_bgccf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gded );_feeg :=&_bbfa .PdfObjectArray {};for _ ,_ddaaa :=range _fefdg .Range {_feeg .Append (_bbfa .MakeFloat (_ddaaa ));
};_bgccf .Set ("\u0052\u0061\u006eg\u0065",_feeg );_fcafc :=&_bbfa .PdfObjectArray {};for _ ,_gbgg :=range _fefdg .Size {_fcafc .Append (_bbfa .MakeInteger (int64 (_gbgg )));};_bgccf .Set ("\u0053\u0069\u007a\u0065",_fcafc );_bgccf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bbfa .MakeInteger (int64 (_fefdg .BitsPerSample )));
if _fefdg .Order !=1{_bgccf .Set ("\u004f\u0072\u0064e\u0072",_bbfa .MakeInteger (int64 (_fefdg .Order )));};_bgccf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_fefdg ._ggbee ))));_fefdg ._cdcd .Stream =_fefdg ._ggbee ;
_fefdg ._cdcd .PdfObjectDictionary =_bgccf ;return _fefdg ._cdcd ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_ccdc *PdfOutputIntent )ParsePdfObject (object _bbfa .PdfObject )error {_eegdc ,_bcgae :=_bbfa .GetDict (object );if !_bcgae {_df .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _gf .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_ccdc ._fdggg =_eegdc ;_ccdc .Type ,_ =_eegdc .GetString ("\u0054\u0079\u0070\u0065");_dgef ,_bcgae :=_eegdc .GetString ("\u0053");if _bcgae {switch _dgef {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_ccdc .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_ccdc .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_ccdc .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_ccdc .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_ccdc .S =PdfOutputIntentTypeX ;
};};_ccdc .OutputCondition ,_ =_eegdc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_ccdc .OutputConditionIdentifier ,_ =_eegdc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_ccdc .RegistryName ,_ =_eegdc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_ccdc .Info ,_ =_eegdc .GetString ("\u0049\u006e\u0066\u006f");if _ggcc ,_dcaf :=_bbfa .GetStream (_eegdc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_dcaf {_ccdc .ColorComponents ,_ =_bbfa .GetIntVal (_ggcc .Get ("\u004e"));_deafg ,_fcag :=_bbfa .DecodeStream (_ggcc );if _fcag !=nil {return _fcag ;};_ccdc .DestOutputProfile =_deafg ;};return nil ;};func (_bccba *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bccba ._cbbb ==nil &&_bccba .DescendantFont !=nil {return _bccba .DescendantFont .FontDescriptor ();
};return _bccba ._cbbb ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_eedcde *PdfReader )Inspect ()(map[string ]int ,error ){return _eedcde ._fdefeb .Inspect ()};

// MergePageWith appends page content to source Pdf file page content.
func (_dacd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bade :=pageNum -1;var _gacg *PdfPage ;for _fga ,_ddbcd :=range _dacd ._cefa {if _fga ==_bade {_gacg =_ddbcd ;};};if _gacg ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _gacg ._bfaag !=nil &&_gacg ._bfaag .GetParser ()==_dacd ._deeg ._fdefeb {_gacg =_gacg .Duplicate ();_dacd ._cefa [_bade ]=_gacg ;};page =page .Duplicate ();_acaga (page );_fdee :=_cfed (_gacg );_eaga :=_cfed (page );_eedc :=make (map[_bbfa .PdfObjectName ]_bbfa .PdfObjectName );
for _cfeb :=range _eaga {if _ ,_egba :=_fdee [_cfeb ];_egba {for _bea :=1;true ;_bea ++{_dda :=_bbfa .PdfObjectName (string (_cfeb )+_ec .Itoa (_bea ));if _ ,_fbag :=_fdee [_dda ];!_fbag {_eedc [_cfeb ]=_dda ;break ;};};};};_ggfe ,_cfef :=page .GetContentStreams ();
if _cfef !=nil {return _cfef ;};_egfdd ,_cfef :=_gacg .GetContentStreams ();if _cfef !=nil {return _cfef ;};for _acad ,_cbac :=range _ggfe {for _fgcg ,_acaeg :=range _eedc {_cbac =_ge .Replace (_cbac ,"\u002f"+string (_fgcg ),"\u002f"+string (_acaeg ),-1);
};_ggfe [_acad ]=_cbac ;};_egfdd =append (_egfdd ,_ggfe ...);if _ggd :=_gacg .SetContentStreams (_egfdd ,_bbfa .NewFlateEncoder ());_ggd !=nil {return _ggd ;};_gacg ._eaabc =append (_gacg ._eaabc ,page ._eaabc ...);if _gacg .Resources ==nil {_gacg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_gacg .Resources .Font =_dacd .mergeResources (_gacg .Resources .Font ,page .Resources .Font ,_eedc );_gacg .Resources .XObject =_dacd .mergeResources (_gacg .Resources .XObject ,page .Resources .XObject ,_eedc );_gacg .Resources .Properties =_dacd .mergeResources (_gacg .Resources .Properties ,page .Resources .Properties ,_eedc );
if _gacg .Resources .ProcSet ==nil {_gacg .Resources .ProcSet =page .Resources .ProcSet ;};_gacg .Resources .Shading =_dacd .mergeResources (_gacg .Resources .Shading ,page .Resources .Shading ,_eedc );_gacg .Resources .ExtGState =_dacd .mergeResources (_gacg .Resources .ExtGState ,page .Resources .ExtGState ,_eedc );
};_edfa ,_cfef :=_gacg .GetMediaBox ();if _cfef !=nil {return _cfef ;};_ccde ,_cfef :=page .GetMediaBox ();if _cfef !=nil {return _cfef ;};var _bbdg bool ;if _edfa .Llx > _ccde .Llx {_edfa .Llx =_ccde .Llx ;_bbdg =true ;};if _edfa .Lly > _ccde .Lly {_edfa .Lly =_ccde .Lly ;
_bbdg =true ;};if _edfa .Urx < _ccde .Urx {_edfa .Urx =_ccde .Urx ;_bbdg =true ;};if _edfa .Ury < _ccde .Ury {_edfa .Ury =_ccde .Ury ;_bbdg =true ;};if _bbdg {_gacg .MediaBox =_edfa ;};return nil ;};func _efcge (_bbfge _bbfa .PdfObject ,_gfbed bool )(*PdfFont ,error ){_eafgf ,_aeeb ,_cbcd :=_daeaa (_bbfge );
if _eafgf !=nil {_fbebd (_eafgf );};if _cbcd !=nil {if _cbcd ==ErrType1CFontNotSupported {_faba ,_fcac :=_gfggg (_eafgf ,_aeeb ,nil );if _fcac !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_aeeb ,_fcac );
return nil ,_cbcd ;};return &PdfFont {_gdfa :_faba },_cbcd ;};return nil ,_cbcd ;};_ggbe :=&PdfFont {};switch _aeeb ._eebdg {case "\u0054\u0079\u0070e\u0030":if !_gfbed {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aeeb );
return nil ,_gf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gecb ,_gfee :=_fabcf (_eafgf ,_aeeb );if _gfee !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aeeb ,_gfee );
return nil ,_gfee ;};_ggbe ._gdfa =_gecb ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bgfd *pdfFontSimple ;_geffa ,_fdcbc :=_fg .NewStdFontByName (_fg .StdFontName (_aeeb ._fdace ));
if _fdcbc {_ggea :=_cgcd (_geffa );_ggbe ._gdfa =&_ggea ;_agabg :=_bbfa .TraceToDirectObject (_ggea .ToPdfObject ());_effeg ,_baeeb ,_ggac :=_daeaa (_agabg );if _ggac !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_aeeb ,_ggea );
return nil ,_ggac ;};for _ ,_baeebe :=range _eafgf .Keys (){_effeg .Set (_baeebe ,_eafgf .Get (_baeebe ));};_bgfd ,_ggac =_gfggg (_effeg ,_baeeb ,_ggea ._gfce );if _ggac !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_aeeb ,_ggea );
return nil ,_ggac ;};_bgfd ._ggfc =_ggea ._ggfc ;_bgfd ._bgbe =_ggea ._bgbe ;if _bgfd ._badb ==nil {_bgfd ._badb =_ggea ._badb ;};}else {_bgfd ,_cbcd =_gfggg (_eafgf ,_aeeb ,nil );if _cbcd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_aeeb ,_cbcd );
return nil ,_cbcd ;};};_cbcd =_bgfd .addEncoding ();if _cbcd !=nil {return nil ,_cbcd ;};if _fdcbc {_bgfd .updateStandard14Font ();};if _fdcbc &&_bgfd ._cdea ==nil &&_bgfd ._gfce ==nil {_df .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgfd );
_df .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_geffa );};if len (_bgfd ._ggfc )==0{_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bgfd );};_ggbe ._gdfa =_bgfd ;
case "\u0054\u0079\u0070e\u0033":_cfgf ,_fdgf :=_dbfaa (_eafgf ,_aeeb );if _fdgf !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fdgf );
return nil ,_fdgf ;};_ggbe ._gdfa =_cfgf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_afaag ,_eecac :=_febgbg (_eafgf ,_aeeb );if _eecac !=nil {_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_eecac );
return nil ,_eecac ;};_ggbe ._gdfa =_afaag ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_efff ,_dagf :=_gfea (_eafgf ,_aeeb );if _dagf !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aeeb ,_dagf );
return nil ,_dagf ;};_ggbe ._gdfa =_efff ;default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_aeeb );
return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aeeb );};return _ggbe ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_egbg *Image )ConvertToBinary ()error {if _egbg .ColorComponents ==1&&_egbg .BitsPerComponent ==1{return nil ;};_ffeb ,_abfa :=_egbg .ToGoImage ();if _abfa !=nil {return _abfa ;};_ecde ,_abfa :=_bbf .MonochromeConverter .Convert (_ffeb );if _abfa !=nil {return _abfa ;
};_egbg .Data =_ecde .Base ().Data ;_egbg ._eccdd ,_abfa =_bbf .ScaleAlphaToMonochrome (_egbg ._eccdd ,int (_egbg .Width ),int (_egbg .Height ));if _abfa !=nil {return _abfa ;};_egbg .BitsPerComponent =1;_egbg .ColorComponents =1;_egbg ._acgd =nil ;return nil ;
};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_ecaf :=&PdfColorPatternType2 {};return _ecaf };

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ffga :=&PdfColorspaceDeviceN {};return _ffga };func (_fbbg *PdfAppender )updateObjectsDeep (_ffdb _bbfa .PdfObject ,_ccc map[_bbfa .PdfObject ]struct{}){if _ccc ==nil {_ccc =map[_bbfa .PdfObject ]struct{}{};
};if _ ,_edcd :=_ccc [_ffdb ];_edcd ||_ffdb ==nil {return ;};_ccc [_ffdb ]=struct{}{};_agab :=_bbfa .ResolveReferencesDeep (_ffdb ,_fbbg ._febe );if _agab !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agab );};switch _egde :=_ffdb .(type ){case *_bbfa .PdfIndirectObject :switch {case _egde .GetParser ()==_fbbg ._deeg ._fdefeb :return ;
case _egde .GetParser ()==_fbbg .Reader ._fdefeb :_fccb ,_ :=_fbbg ._deeg .GetIndirectObjectByNumber (int (_egde .ObjectNumber ));_bgda ,_fffe :=_fccb .(*_bbfa .PdfIndirectObject );if _fffe &&_bgda !=nil {if _bgda .PdfObject !=_egde .PdfObject &&_bgda .PdfObject .WriteString ()!=_egde .PdfObject .WriteString (){if _ge .Contains (_egde .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_ge .Contains (_egde .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_fbbg .addNewObject (_ffdb );_fbbg ._ccge [_ffdb ]=_egde .ObjectNumber ;};};default:_fbbg .addNewObject (_ffdb );};_fbbg .updateObjectsDeep (_egde .PdfObject ,_ccc );case *_bbfa .PdfObjectArray :for _ ,_affa :=range _egde .Elements (){_fbbg .updateObjectsDeep (_affa ,_ccc );
};case *_bbfa .PdfObjectDictionary :for _ ,_cebg :=range _egde .Keys (){_fbbg .updateObjectsDeep (_egde .Get (_cebg ),_ccc );};case *_bbfa .PdfObjectStreams :if _egde .GetParser ()!=_fbbg ._deeg ._fdefeb {for _ ,_eegcf :=range _egde .Elements (){_fbbg .updateObjectsDeep (_eegcf ,_ccc );
};};case *_bbfa .PdfObjectStream :switch {case _egde .GetParser ()==_fbbg ._deeg ._fdefeb :return ;case _egde .GetParser ()==_fbbg .Reader ._fdefeb :if _bgc ,_fecad :=_fbbg ._deeg ._fdefeb .LookupByReference (_egde .PdfObjectReference );_fecad ==nil {var _aedag bool ;
if _cag ,_bcfb :=_bbfa .GetStream (_bgc );_bcfb &&_de .Equal (_cag .Stream ,_egde .Stream ){_aedag =true ;};if _fcf ,_feedbc :=_bbfa .GetDict (_bgc );_aedag &&_feedbc {_aedag =_fcf .WriteString ()==_egde .PdfObjectDictionary .WriteString ();};if _aedag {return ;
};};if _egde .ObjectNumber !=0{_fbbg ._ccge [_ffdb ]=_egde .ObjectNumber ;};default:if _ ,_bcec :=_fbbg ._bbddc [_ffdb ];!_bcec {_fbbg .addNewObject (_ffdb );};};_fbbg .updateObjectsDeep (_egde .PdfObjectDictionary ,_ccc );};};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dfab :=&PdfAppender {_dggb :reader ._aaafe ,Reader :reader ,_dgdb :reader ._fdefeb ,_febe :reader ._gdfeg };_gedg ,_aaa :=_dfab ._dggb .Seek (0,_cb .SeekEnd );if _aaa !=nil {return nil ,_aaa ;
};_dfab ._gfdf =_gedg ;if _ ,_aaa =_dfab ._dggb .Seek (0,_cb .SeekStart );_aaa !=nil {return nil ,_aaa ;};_dfab ._deeg ,_aaa =NewPdfReader (_dfab ._dggb );if _aaa !=nil {return nil ,_aaa ;};for _ ,_faaf :=range _dfab .Reader .GetObjectNums (){if _dfab ._adgg < _faaf {_dfab ._adgg =_faaf ;
};};_dfab ._fac =_dfab ._dgdb .GetXrefTable ();_dfab ._eagc =_dfab ._dgdb .GetXrefOffset ();_dfab ._cefa =append (_dfab ._cefa ,_dfab ._deeg .PageList ...);_dfab ._bbddc =make (map[_bbfa .PdfObject ]struct{});_dfab ._ccge =make (map[_bbfa .PdfObject ]int64 );
_dfab ._cca =make (map[_bbfa .PdfObject ]struct{});_dfab ._dgca =_dfab ._deeg .AcroForm ;_dfab ._bdbd =_dfab ._deeg .DSS ;return _dfab ,nil ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_gadda *MultipleFontEncoder )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){_dabc :=_gadda .CurrentFont ;_edgb ,_fafg :=_dabc .GetRuneMetrics (r );for _gefcg :=1;_gefcg < len (_gadda ._efaa )&&_edgb .Wx ==0;_gefcg ++{_dabc =_gadda ._efaa [_gefcg ];
_edgb ,_fafg =_dabc .GetRuneMetrics (r );};return _edgb ,_fafg ;};func (_gecag *PdfWriter )AttachFile (file *EmbeddedFile )error {_feeabd :=_gecag ._bfcba ;if _feeabd ==nil {_feeabd =_bdebf ();};_cegdg :=_feeabd .addEmbeddedFile (file );if _cegdg !=nil {return _cegdg ;
};_gecag ._bfcba =_feeabd ;return nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_aegaf *PdfPage )error ;};func _ebde (_gadeba []*_bbfa .PdfObjectStream )*_bbfa .PdfObjectArray {if len (_gadeba )==0{return nil ;};_dfec :=make ([]_bbfa .PdfObject ,0,len (_gadeba ));for _ ,_bbege :=range _gadeba {_dfec =append (_dfec ,_bbege );
};return _bbfa .MakeArray (_dfec ...);};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_abbg *PdfAnnotationWidget )Field ()*PdfField {return _abbg ._cfc };

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_egcea *Image )ToJBIG2Image ()(*_bbfa .JBIG2Image ,error ){_edde ,_dbdeec :=_egcea .ToGoImage ();if _dbdeec !=nil {return nil ,_dbdeec ;};return _bbfa .GoImageToJBIG2 (_edde ,_bbfa .JB2ImageAutoThreshold );};func _ffgdg ()_ea .Time {_efgcc .Lock ();
defer _efgcc .Unlock ();return _afbaa };

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_ccegc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_adbg ,_ ,_edfde :=_ccegc .CharcodesToUnicodeWithStats (_ccegc .BytesToCharcodes (data ));_efeag :=_efd .ExpandLigatures (_adbg );return _efeag ,_bg .RuneCountInString (_efeag ),_edfde ;
};

// ToPdfObject implements interface PdfModel.
func (_egbc *PdfActionSetOCGState )ToPdfObject ()_bbfa .PdfObject {_egbc .PdfAction .ToPdfObject ();_ade :=_egbc ._ff ;_ebf :=_ade .PdfObject .(*_bbfa .PdfObjectDictionary );_ebf .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeSetOCGState )));
_ebf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_egbc .State );_ebf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_egbc .PreserveRB );return _ade ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _bbfa .PdfObjectName ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_ddge :=NewPdfAnnotation ();_aca :=&PdfAnnotationFreeText {};_aca .PdfAnnotation =_ddge ;_aca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddge .SetContext (_aca );return _aca ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bbfa .PdfObject ;Dest _bbfa .PdfObject ;H _bbfa .PdfObject ;PA _bbfa .PdfObject ;QuadPoints _bbfa .PdfObject ;BS _bbfa .PdfObject ;_dba *PdfAction ;_bdb *PdfReader ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bbca :_bbfa .MakeIndirectObject (_bbfa .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_fecae :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_fecae ;};

// ToInteger convert to an integer format.
func (_gedf *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fcfe :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fcfe *_gedf .R ()),uint32 (_fcfe *_gedf .G ()),uint32 (_fcfe *_gedf .B ())};};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cggbf *PdfField )IsTerminal ()bool {return len (_cggbf .Kids )==0};func _fcdf (_eagfa *_bbfa .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dagcd :=PdfShadingType4 {};_acedg :=_eagfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _acedg ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbace ,_aeeeb :=_acedg .(*_bbfa .PdfObjectInteger );if !_aeeeb {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acedg );
return nil ,_bbfa .ErrTypeError ;};_dagcd .BitsPerCoordinate =_cbace ;_acedg =_eagfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _acedg ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbace ,_aeeeb =_acedg .(*_bbfa .PdfObjectInteger );if !_aeeeb {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_acedg );
return nil ,_bbfa .ErrTypeError ;};_dagcd .BitsPerComponent =_cbace ;_acedg =_eagfa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _acedg ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbace ,_aeeeb =_acedg .(*_bbfa .PdfObjectInteger );if !_aeeeb {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_acedg );
return nil ,_bbfa .ErrTypeError ;};_dagcd .BitsPerComponent =_cbace ;_acedg =_eagfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _acedg ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddfac ,_aeeeb :=_acedg .(*_bbfa .PdfObjectArray );if !_aeeeb {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acedg );
return nil ,_bbfa .ErrTypeError ;};_dagcd .Decode =_ddfac ;_acedg =_eagfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _acedg ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dagcd .Function =[]PdfFunction {};if _dccd ,_gafaa :=_acedg .(*_bbfa .PdfObjectArray );_gafaa {for _ ,_eedef :=range _dccd .Elements (){_beaega ,_bddd :=_fcgca (_eedef );if _bddd !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bddd );
return nil ,_bddd ;};_dagcd .Function =append (_dagcd .Function ,_beaega );};}else {_eegdee ,_baef :=_fcgca (_acedg );if _baef !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_baef );
return nil ,_baef ;};_dagcd .Function =append (_dagcd .Function ,_eegdee );};return &_dagcd ,nil ;};var (ErrRequiredAttributeMissing =_gf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cfca =_gf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_gf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_gf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_fc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bbfa .ErrNotSupported );ErrType1CFontNotSupported =_fc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bbfa .ErrNotSupported );
ErrType3FontNotSupported =_fc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bbfa .ErrNotSupported );
ErrTTCmapNotSupported =_fc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bbfa .ErrNotSupported );
ErrSignNotEnoughSpace =_fc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_fc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););type pdfFont interface{_fg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bbfa .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToInteger convert to an integer format.
func (_dgcgd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bedcf :=_dg .Pow (2,float64 (bits ))-1;return uint32 (_bedcf *_dgcgd .Val ());};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bbfa .PdfObject ;H _bbfa .PdfObject ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bca :=NewPdfAction ();_ed :=&PdfActionThread {};_ed .PdfAction =_bca ;_bca .SetContext (_ed );return _ed ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bfad *LTV )EnableByName (name string ,extraCerts []*_fe .Certificate )error {_fcdg :=_bfad ._fcgbg ._deeg .AcroForm ;for _ ,_cececc :=range _fcdg .AllFields (){_bcfbg ,_ :=_cececc .GetContext ().(*PdfFieldSignature );if _bcfbg ==nil {continue ;};
if _fbccd :=_bcfbg .PartialName ();_fbccd !=name {continue ;};return _bfad .Enable (_bcfbg .V ,extraCerts );};return nil ;};func (_eagg *PdfReader )newPdfAnnotationTrapNetFromDict (_faea *_bbfa .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_agg :=PdfAnnotationTrapNet {};
return &_agg ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_efdbd *PdfFieldButton )IsCheckbox ()bool {return _efdbd .GetType ()==ButtonTypeCheckbox };

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetCerts returns the signature certificate chain.
func (_bfcca *PdfSignature )GetCerts ()([]*_fe .Certificate ,error ){var _adecef []func ()([]*_fe .Certificate ,error );switch _babgd ,_ :=_bbfa .GetNameVal (_bfcca .SubFilter );_babgd {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_adecef =append (_adecef ,_bfcca .extractChainFromPKCS7 ,_bfcca .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_adecef =append (_adecef ,_bfcca .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_adecef =append (_adecef ,_bfcca .extractChainFromPKCS7 );
default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_babgd );};for _ ,_gdcbg :=range _adecef {_bfdef ,_fgagaca :=_gdcbg ();if _fgagaca !=nil {return nil ,_fgagaca ;
};if len (_bfdef )> 0{return _bfdef ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_gg *PdfAction )ToPdfObject ()_bbfa .PdfObject {_gdd :=_gg ._ff ;_gef :=_gdd .PdfObject .(*_bbfa .PdfObjectDictionary );_gef .Clear ();_gef .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gef .SetIfNotNil ("\u0053",_gg .S );
_gef .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gg .Next );return _gdd ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_gfage *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_abbf :=_cgb .NewReader (img .getBase ());_fgcb :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dca :=_cgb .NewWriter (_fgcb );
_fegb :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_dfde :=make ([]uint32 ,3);var (_gacfc uint32 ;ANorm ,X ,Y ,Z ,_bfcg ,_bcfcf ,_edda float64 ;_aefe error ;);for {_gacfc ,_aefe =_abbf .ReadSample ();if _aefe ==_cb .EOF {break ;}else if _aefe !=nil {return img ,_aefe ;
};ANorm =float64 (_gacfc )/_fegb ;X =_gfage .WhitePoint [0]*_dg .Pow (ANorm ,_gfage .Gamma );Y =_gfage .WhitePoint [1]*_dg .Pow (ANorm ,_gfage .Gamma );Z =_gfage .WhitePoint [2]*_dg .Pow (ANorm ,_gfage .Gamma );_bfcg =3.240479*X +-1.537150*Y +-0.498535*Z ;
_bcfcf =-0.969256*X +1.875992*Y +0.041556*Z ;_edda =0.055648*X +-0.204043*Y +1.057311*Z ;_bfcg =_dg .Min (_dg .Max (_bfcg ,0),1.0);_bcfcf =_dg .Min (_dg .Max (_bcfcf ,0),1.0);_edda =_dg .Min (_dg .Max (_edda ,0),1.0);_dfde [0]=uint32 (_bfcg *_fegb );_dfde [1]=uint32 (_bcfcf *_fegb );
_dfde [2]=uint32 (_edda *_fegb );if _aefe =_dca .WriteSamples (_dfde );_aefe !=nil {return img ,_aefe ;};};return _ebdgf (&_fgcb ),nil ;};func (_dcfa *Image )resampleLowBits (_cecd []uint32 ){_efcf :=_bbf .BytesPerLine (int (_dcfa .Width ),int (_dcfa .BitsPerComponent ),_dcfa .ColorComponents );
_gfggb :=make ([]byte ,_dcfa .ColorComponents *_efcf *int (_dcfa .Height ));_bfbf :=int (_dcfa .BitsPerComponent )*_dcfa .ColorComponents *int (_dcfa .Width );_fabgf :=uint8 (8);var (_bdgcb ,_badgd int ;_caecgg uint32 ;);for _dbggg :=0;_dbggg < int (_dcfa .Height );
_dbggg ++{_badgd =_dbggg *_efcf ;for _fddbc :=0;_fddbc < _bfbf ;_fddbc ++{_caecgg =_cecd [_bdgcb ];_fabgf -=uint8 (_dcfa .BitsPerComponent );_gfggb [_badgd ]|=byte (_caecgg )<<_fabgf ;if _fabgf ==0{_fabgf =8;_badgd ++;};_bdgcb ++;};};_dcfa .Data =_gfggb ;
};func (_bdfb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bdfb .fontCommon };

// GetCharMetrics returns the char metrics for character code `code`.
func (_defa pdfFontType3 )GetCharMetrics (code _efd .CharCode )(_fg .CharMetrics ,bool ){if _gagga ,_eedb :=_defa ._ddgdf [code ];_eedb {return _fg .CharMetrics {Wx :_gagga },true ;};if _fg .IsStdFont (_fg .StdFontName (_defa ._fdace )){return _fg .CharMetrics {Wx :250},true ;
};return _fg .CharMetrics {},false ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_befb *PdfOutlineTreeNode )GetContext ()PdfModel {if _gafa ,_gagdc :=_befb ._cedfc .(*PdfOutline );_gagdc {return _gafa ;};if _aafgb ,_egbba :=_befb ._cedfc .(*PdfOutlineItem );_egbba {return _aafgb ;};_df .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_affee *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _affee ._fdefeb .GetRevisionNumber ()==0{return nil ,_gf .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _ffbcb ,_dddgc :=_affee ._aaedg [_affee ];_dddgc {return _ffbcb ,nil ;};_gfbge ,_bbea :=_affee ._fdefeb .GetPreviousRevisionReadSeeker ();if _bbea !=nil {return nil ,_bbea ;};_dgaf ,_bbea :=_fcebf (_gfbge ,_affee ._ccbfd ,_affee ._bfgee ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _bbea !=nil {return nil ,_bbea ;};_affee ._eddee [_affee ._fdefeb .GetRevisionNumber ()-1]=_dgaf ;_affee ._aaedg [_affee ]=_dgaf ;_dgaf ._aaedg =_affee ._aaedg ;return _dgaf ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_efgcc .Lock ();defer _efgcc .Unlock ();_aebd =producer };

// GetPageNumber returns the page number that has been assigned to the K object.
func (_defcc *KDict )GetPageNumber ()int64 {return _defcc ._ecdbc };

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cebf *PdfReader )Decrypt (password []byte )(bool ,error ){_gagb ,_fddea :=_cebf ._fdefeb .Decrypt (password );if _fddea !=nil {return false ,_fddea ;};if !_gagb {return false ,nil ;};_fddea =_cebf .loadStructure ();if _fddea !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fddea );
return false ,_fddea ;};return true ,nil ;};

// GetPerms returns the Permissions dictionary
func (_afcf *PdfReader )GetPerms ()*Permissions {return _afcf ._abfea };

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_edf :=NewPdfAnnotation ();_cbea :=&PdfAnnotationScreen {};_cbea .PdfAnnotation =_edf ;_edf .SetContext (_cbea );return _cbea ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbgdf *PdfShadingType4 )ToPdfObject ()_bbfa .PdfObject {_bbgdf .PdfShading .ToPdfObject ();_eggd ,_aaae :=_bbgdf .getShadingDict ();if _aaae !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbgdf .BitsPerCoordinate !=nil {_eggd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bbgdf .BitsPerCoordinate );};if _bbgdf .BitsPerComponent !=nil {_eggd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbgdf .BitsPerComponent );
};if _bbgdf .BitsPerFlag !=nil {_eggd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bbgdf .BitsPerFlag );};if _bbgdf .Decode !=nil {_eggd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbgdf .Decode );};if _bbgdf .Function !=nil {if len (_bbgdf .Function )==1{_eggd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbgdf .Function [0].ToPdfObject ());
}else {_agcea :=_bbfa .MakeArray ();for _ ,_eeff :=range _bbgdf .Function {_agcea .Append (_eeff .ToPdfObject ());};_eggd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agcea );};};return _bbgdf ._facd ;};func (_cdgc *PdfReader )loadAction (_fced _bbfa .PdfObject )(*PdfAction ,error ){if _cbd ,_gfcf :=_bbfa .GetIndirect (_fced );
_gfcf {_dabb ,_gdaa :=_cdgc .newPdfActionFromIndirectObject (_cbd );if _gdaa !=nil {return nil ,_gdaa ;};return _dabb ,nil ;}else if !_bbfa .IsNullObject (_fced ){return nil ,_gf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dafc *PdfAnnotationCaret )ToPdfObject ()_bbfa .PdfObject {_dafc .PdfAnnotation .ToPdfObject ();_aaed :=_dafc ._dbge ;_degd :=_aaed .PdfObject .(*_bbfa .PdfObjectDictionary );_dafc .PdfAnnotationMarkup .appendToPdfDictionary (_degd );_degd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0043\u0061\u0072e\u0074"));
_degd .SetIfNotNil ("\u0052\u0044",_dafc .RD );_degd .SetIfNotNil ("\u0053\u0079",_dafc .Sy );return _aaed ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcaf pdfCIDFontType0 )GetRuneMetrics (r rune )(_fg .CharMetrics ,bool ){return _fg .CharMetrics {Wx :_fcaf ._bbgf },true ;};func _bbdee (_fcgda _bbfa .PdfObject )(*PdfColorspaceDeviceN ,error ){_dgdf :=NewPdfColorspaceDeviceN ();if _facea ,_aeeg :=_fcgda .(*_bbfa .PdfIndirectObject );
_aeeg {_dgdf ._afdd =_facea ;};_fcgda =_bbfa .TraceToDirectObject (_fcgda );_gdbg ,_gbag :=_fcgda .(*_bbfa .PdfObjectArray );if !_gbag {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _gdbg .Len ()!=4&&_gdbg .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fcgda =_gdbg .Get (0);
_fcfb ,_gbag :=_fcgda .(*_bbfa .PdfObjectName );if !_gbag {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fcfb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fcgda =_gdbg .Get (1);
_fcgda =_bbfa .TraceToDirectObject (_fcgda );_febgg ,_gbag :=_fcgda .(*_bbfa .PdfObjectArray );if !_gbag {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_dgdf .ColorantNames =_febgg ;_fcgda =_gdbg .Get (2);_daeg ,_deecc :=NewPdfColorspaceFromPdfObject (_fcgda );if _deecc !=nil {return nil ,_deecc ;};_dgdf .AlternateSpace =_daeg ;_fadd ,_deecc :=_fcgca (_gdbg .Get (3));if _deecc !=nil {return nil ,_deecc ;
};_dgdf .TintTransform =_fadd ;if _gdbg .Len ()==5{_agcgd ,_bebfg :=_dbgd (_gdbg .Get (4));if _bebfg !=nil {return nil ,_bebfg ;};_dgdf .Attributes =_agcgd ;};return _dgdf ,nil ;};

// M returns the value of the magenta component of the color.
func (_bbbf *PdfColorDeviceCMYK )M ()float64 {return _bbbf [1]};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gfge *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cbdbb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cbdbb .ToPdfOutline ().PdfOutlineTreeNode ;};func (_bcab fontCommon )fontFlags ()int {if _bcab ._cbbb ==nil {return 0;};return _bcab ._cbbb ._cgbfa ;};func _geef (_bgfaf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bgfaf }};


// Evaluate runs the function on the passed in slice and returns the results.
func (_beacd *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_gf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// ToPdfObject implements interface PdfModel.
func (_ffag *PdfFilespec )ToPdfObject ()_bbfa .PdfObject {_aeffd :=_ffag .getDict ();_aeffd .Clear ();_aeffd .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_aeffd .SetIfNotNil ("\u0046\u0053",_ffag .FS );
_aeffd .SetIfNotNil ("\u0046",_ffag .F );_aeffd .SetIfNotNil ("\u0055\u0046",_ffag .UF );_aeffd .SetIfNotNil ("\u0044\u004f\u0053",_ffag .DOS );_aeffd .SetIfNotNil ("\u004d\u0061\u0063",_ffag .Mac );_aeffd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffag .Unix );
_aeffd .SetIfNotNil ("\u0049\u0044",_ffag .ID );_aeffd .SetIfNotNil ("\u0056",_ffag .V );_aeffd .SetIfNotNil ("\u0045\u0046",_ffag .EF );_aeffd .SetIfNotNil ("\u0052\u0046",_ffag .RF );_aeffd .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ffag .Desc );_aeffd .SetIfNotNil ("\u0043\u0049",_ffag .CI );
_aeffd .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_ffag .AFRelationship );return _ffag ._bdbfc ;};func (_bgfdb *LTV )enable (_baeee ,_bcfgg []*_fe .Certificate ,_dedg string )error {_cffdd ,_fdfaa ,_adece :=_bgfdb .buildCertChain (_baeee ,_bcfgg );
if _adece !=nil {return _adece ;};_aeccg ,_adece :=_bgfdb .getCerts (_cffdd );if _adece !=nil {return _adece ;};var _fdfbd ,_ecbec [][]byte ;if _bgfdb .OCSPClient !=nil {_fdfbd ,_adece =_bgfdb .getOCSPs (_cffdd ,_fdfaa );if _adece !=nil {return _adece ;
};};if _bgfdb .CRLClient !=nil {_ecbec ,_adece =_bgfdb .getCRLs (_cffdd );if _adece !=nil {return _adece ;};};_edbea :=_bgfdb ._egbca ;_ddcc ,_adece :=_edbea .AddCerts (_aeccg );if _adece !=nil {return _adece ;};_aeeaf ,_adece :=_edbea .AddOCSPs (_fdfbd );
if _adece !=nil {return _adece ;};_feccb ,_adece :=_edbea .AddCRLs (_ecbec );if _adece !=nil {return _adece ;};if _dedg !=""{_edbea .VRI [_dedg ]=&VRI {Cert :_ddcc ,OCSP :_aeeaf ,CRL :_feccb };};_bgfdb ._fcgbg .SetDSS (_edbea );return nil ;};func (_efdc *Image )getSuitableEncoder ()(_bbfa .StreamEncoder ,error ){var (_aceeb ,_ccddb =int (_efdc .Width ),int (_efdc .Height );
_ebgf =make (map[string ]bool );_edgd =true ;_geffe =false ;_dgged =func ()*_bbfa .DCTEncoder {return _bbfa .NewDCTEncoder ()};_dbcg =func ()*_bbfa .DCTEncoder {_aagc :=_bbfa .NewDCTEncoder ();_aagc .BitsPerComponent =16;return _aagc };);for _dfccee :=0;
_dfccee < _ccddb ;_dfccee ++{for _bgdbe :=0;_bgdbe < _aceeb ;_bgdbe ++{_daafg ,_fcef :=_efdc .ColorAt (_bgdbe ,_dfccee );if _fcef !=nil {return nil ,_fcef ;};_bfafe ,_dbed ,_bgdbf ,_bfgea :=_daafg .RGBA ();if _edgd &&(_bfafe !=_dbed ||_bfafe !=_bgdbf ||_dbed !=_bgdbf ){_edgd =false ;
};if !_geffe {switch _daafg .(type ){case _f .NRGBA :_geffe =_bfgea > 0;};};_ebgf [_b .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_bfafe ,_dbed ,_bgdbf )]=true ;if len (_ebgf )> 2&&_geffe {return _dbcg (),nil ;};};};if _geffe ||len (_efdc ._eccdd )> 0{return _bbfa .NewFlateEncoder (),nil ;
};if len (_ebgf )<=2{_gecgb :=_efdc .ConvertToBinary ();if _gecgb !=nil {return nil ,_gecgb ;};return _bbfa .NewJBIG2Encoder (),nil ;};if _edgd {return _dgged (),nil ;};if _efdc .ColorComponents ==1{if _efdc .BitsPerComponent ==1{return _bbfa .NewJBIG2Encoder (),nil ;
}else if _efdc .BitsPerComponent ==8{_gccc :=_bbfa .NewDCTEncoder ();_gccc .ColorComponents =1;return _gccc ,nil ;};}else if _efdc .ColorComponents ==3{if _efdc .BitsPerComponent ==8{return _dgged (),nil ;}else if _efdc .BitsPerComponent ==16{return _dbcg (),nil ;
};}else if _efdc .ColorComponents ==4{_eegb :=_dbcg ();_eegb .ColorComponents =4;return _eegb ,nil ;};return _dbcg (),nil ;};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_afaa *PdfField )Flags ()FieldFlag {var _gfddf FieldFlag ;_fcdaf ,_egca :=_afaa .inherit (func (_cdgcd *PdfField )bool {if _cdgcd .Ff !=nil {_gfddf =FieldFlag (*_cdgcd .Ff );return true ;};return false ;});if _egca !=nil {_df .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_egca );
};if !_fcdaf {_df .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _gfddf ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_ebef *PdfInfo )GetCustomInfo (name string )*_bbfa .PdfObjectString {var _fdacd *_bbfa .PdfObjectString ;if _ebef ._gaga ==nil {return _fdacd ;};if _febfd ,_abfc :=_ebef ._gaga .Get (*_bbfa .MakeName (name )).(*_bbfa .PdfObjectString );_abfc {_fdacd =_febfd ;
};return _fdacd ;};

// GetSubFilter returns SubFilter value or empty string.
func (_ddgba *pdfSignDictionary )GetSubFilter ()string {_dabad :=_ddgba .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dabad ==nil {return "";};if _gdcdc ,_faee :=_bbfa .GetNameVal (_dabad );_faee {return _gdcdc ;};return "";};

// ToPdfObject implements interface PdfModel.
func (_ceg *PdfAnnotationPolygon )ToPdfObject ()_bbfa .PdfObject {_ceg .PdfAnnotation .ToPdfObject ();_afgd :=_ceg ._dbge ;_fefa :=_afgd .PdfObject .(*_bbfa .PdfObjectDictionary );_ceg .PdfAnnotationMarkup .appendToPdfDictionary (_fefa );_fefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fefa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ceg .Vertices );_fefa .SetIfNotNil ("\u004c\u0045",_ceg .LE );_fefa .SetIfNotNil ("\u0042\u0053",_ceg .BS );_fefa .SetIfNotNil ("\u0049\u0043",_ceg .IC );_fefa .SetIfNotNil ("\u0042\u0045",_ceg .BE );
_fefa .SetIfNotNil ("\u0049\u0054",_ceg .IT );_fefa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ceg .Measure );return _afgd ;};func _fcgca (_fdadg _bbfa .PdfObject )(PdfFunction ,error ){_fdadg =_bbfa .ResolveReference (_fdadg );if _caagc ,_bggce :=_fdadg .(*_bbfa .PdfObjectStream );
_bggce {_feff :=_caagc .PdfObjectDictionary ;_gggc ,_ebfgf :=_feff .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbfa .PdfObjectInteger );if !_ebfgf {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gggc ==0{return _egfbf (_caagc );}else if *_gggc ==4{return _geaeb (_caagc );
}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eedg ,_fadbg :=_fdadg .(*_bbfa .PdfIndirectObject );_fadbg {_ebgg ,_cgacf :=_eedg .PdfObject .(*_bbfa .PdfObjectDictionary );
if !_cgacf {_df .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_eeabb ,_cgacf :=_ebgg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbfa .PdfObjectInteger );
if !_cgacf {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_eeabb ==2{return _daaa (_eedg );}else if *_eeabb ==3{return _cfgfd (_eedg );}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eddaa ,_fagb :=_fdadg .(*_bbfa .PdfObjectDictionary );
_fagb {_fgccb ,_cbbff :=_eddaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbfa .PdfObjectInteger );if !_cbbff {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fgccb ==2{return _daaa (_eddaa );}else if *_fgccb ==3{return _cfgfd (_eddaa );
}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_df .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fdadg );
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// Write writes out the PDF.
func (_bgfdg *PdfWriter )Write (writer _cb .Writer )error {_df .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _gdgfb ,_fagcd :=writer .(*_dgf .File );_fagcd {_bgfdg .SetFileName (_gdgfb .Name ());};_gccbd :=_bgfdg .checkLicense ();if _gccbd !=nil {return _gccbd ;
};if _gccbd =_bgfdg .writeOutlines ();_gccbd !=nil {return _gccbd ;};if _gccbd =_bgfdg .writeAcroFormFields ();_gccbd !=nil {return _gccbd ;};if _gccbd =_bgfdg .writeNamesDictionary ();_gccbd !=nil {return _gccbd ;};_bgfdg .checkPendingObjects ();if _gccbd =_bgfdg .writeOutputIntents ();
_gccbd !=nil {return _gccbd ;};_bgfdg .setCatalogVersion ();_bgfdg .copyObjects ();if _gccbd =_bgfdg .optimize ();_gccbd !=nil {return _gccbd ;};if _gccbd =_bgfdg .optimizeDocument ();_gccbd !=nil {return _gccbd ;};var _fgaaa _bf .Hash ;if _bgfdg ._egged {_fgaaa =_ad .New ();
writer =_cb .MultiWriter (_fgaaa ,writer );};_bgfdg .setWriter (writer );_abbed :=_bgfdg .checkCrossReferenceStream ();_fffc ,_abbed :=_bgfdg .mapObjectStreams (_abbed );_bgfdg .adjustXRefAffectedVersion (_abbed );_bgfdg .writeDocumentVersion ();_bgfdg .updateObjectNumbers ();
_bgfdg .writeObjects ();if _gccbd =_bgfdg .writeObjectsInStreams (_fffc );_gccbd !=nil {return _gccbd ;};_ddeef :=_bgfdg ._efebf ;var _bdaca int ;for _cbaaea :=range _bgfdg ._cbaff {if _cbaaea > _bdaca {_bdaca =_cbaaea ;};};if _bgfdg ._egged {if _gccbd =_bgfdg .setHashIDs (_fgaaa );
_gccbd !=nil {return _gccbd ;};};if _abbed {if _gccbd =_bgfdg .writeXRefStreams (_bdaca ,_ddeef );_gccbd !=nil {return _gccbd ;};}else {_bgfdg .writeTrailer (_bdaca );};_bgfdg .makeOffSetReference (_ddeef );if _gccbd =_bgfdg .flushWriter ();_gccbd !=nil {return _gccbd ;
};return nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_bafeg *PdfWriter )ApplyStandard (optimizer StandardApplier ){_bafeg ._dffca =optimizer };func (_agde *PdfReader )newPdfFieldFromIndirectObject (_ceaa *_bbfa .PdfIndirectObject ,_gegdb *PdfField )(*PdfField ,error ){if _cgdfa ,_bagg :=_agde ._accb .GetModelFromPrimitive (_ceaa ).(*PdfField );
_bagg {return _cgdfa ,nil ;};_eccg ,_bbee :=_bbfa .GetDict (_ceaa );if !_bbee {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fdadd :=NewPdfField ();_fdadd ._dfeg =_ceaa ;_fdadd ._dfeg .PdfObject =_eccg ;if _bdgff ,_eebe :=_bbfa .GetName (_eccg .Get ("\u0046\u0054"));_eebe {_fdadd .FT =_bdgff ;};if _gegdb !=nil {_fdadd .Parent =_gegdb ;};_fdadd .T ,_ =_eccg .Get ("\u0054").(*_bbfa .PdfObjectString );
_fdadd .TU ,_ =_eccg .Get ("\u0054\u0055").(*_bbfa .PdfObjectString );_fdadd .TM ,_ =_eccg .Get ("\u0054\u004d").(*_bbfa .PdfObjectString );_fdadd .Ff ,_ =_eccg .Get ("\u0046\u0066").(*_bbfa .PdfObjectInteger );_fdadd .V =_eccg .Get ("\u0056");_fdadd .DV =_eccg .Get ("\u0044\u0056");
_fdadd .AA =_eccg .Get ("\u0041\u0041");if DA :=_eccg .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bbfa .GetString (DA );_fdadd .VariableText =&VariableText {DA :DA };Q ,_ :=_eccg .Get ("\u0051").(*_bbfa .PdfObjectInteger );DS ,_ :=_eccg .Get ("\u0044\u0053").(*_bbfa .PdfObjectString );
RV :=_eccg .Get ("\u0052\u0056");_fdadd .VariableText .Q =Q ;_fdadd .VariableText .DS =DS ;_fdadd .VariableText .RV =RV ;};_gcdf :=_fdadd .FT ;if _gcdf ==nil &&_gegdb !=nil {_gcdf =_gegdb .FT ;};if _gcdf !=nil {switch *_gcdf {case "\u0054\u0078":_ddafd ,_gddc :=_aafa (_eccg );
if _gddc !=nil {return nil ,_gddc ;};_ddafd .PdfField =_fdadd ;_fdadd ._ebede =_ddafd ;case "\u0043\u0068":_bdea ,_ecfaf :=_fdbf (_eccg );if _ecfaf !=nil {return nil ,_ecfaf ;};_bdea .PdfField =_fdadd ;_fdadd ._ebede =_bdea ;case "\u0042\u0074\u006e":_abeab ,_gff :=_feedd (_eccg );
if _gff !=nil {return nil ,_gff ;};_abeab .PdfField =_fdadd ;_fdadd ._ebede =_abeab ;case "\u0053\u0069\u0067":_beeg ,_gegdbf :=_agde .newPdfFieldSignatureFromDict (_eccg );if _gegdbf !=nil {return nil ,_gegdbf ;};_beeg .PdfField =_fdadd ;_fdadd ._ebede =_beeg ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_fdadd .FT );return nil ,_gf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _fbabe ,_fgag :=_bbfa .GetName (_eccg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_fgag {if *_fbabe =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bdff ,_fccf :=_agde .newPdfAnnotationFromIndirectObject (_ceaa );if _fccf !=nil {return nil ,_fccf ;
};_dcda ,_fdacc :=_bdff .GetContext ().(*PdfAnnotationWidget );if !_fdacc {return nil ,_gf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dcda ._cfc =_fdadd ;_dcda .Parent =_fdadd ._dfeg ;
_fdadd .Annotations =append (_fdadd .Annotations ,_dcda );return _fdadd ,nil ;};};_cfdge :=true ;if _acfg ,_gebgf :=_bbfa .GetArray (_eccg .Get ("\u004b\u0069\u0064\u0073"));_gebgf {_ceebec :=make ([]*_bbfa .PdfIndirectObject ,0,_acfg .Len ());for _ ,_ggcf :=range _acfg .Elements (){_fccc ,_ecaeb :=_bbfa .GetIndirect (_ggcf );
if !_ecaeb {_aeeda ,_cdae :=_bbfa .GetStream (_ggcf );if _cdae &&_aeeda .PdfObjectDictionary !=nil {_bged ,_ceaca :=_bbfa .GetNameVal (_aeeda .Get ("\u0054\u0079\u0070\u0065"));if _ceaca &&_bged =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_df .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_gf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_gbff ,_egacg :=_bbfa .GetDict (_fccc );
if !_egacg {return nil ,ErrTypeCheck ;};if _cfdge {_cfdge =!_gbbe (_gbff );};_ceebec =append (_ceebec ,_fccc );};for _ ,_dgbca :=range _ceebec {if _cfdge {_dfda ,_adeg :=_agde .newPdfAnnotationFromIndirectObject (_dgbca );if _adeg !=nil {_df .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_adeg );
return nil ,_adeg ;};_dfffa ,_gagd :=_dfda ._bgeb .(*PdfAnnotationWidget );if !_gagd {return nil ,ErrTypeCheck ;};_dfffa ._cfc =_fdadd ;_fdadd .Annotations =append (_fdadd .Annotations ,_dfffa );}else {_gacb ,_cdce :=_agde .newPdfFieldFromIndirectObject (_dgbca ,_fdadd );
if _cdce !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cdce );return nil ,_cdce ;};_fdadd .Kids =append (_fdadd .Kids ,_gacb );
};};};return _fdadd ,nil ;};func _bffa (_ebeg _bbfa .PdfObject ,_bdaed *fontCommon )(*_dea .CMap ,error ){_eacfe ,_fgaca :=_bbfa .GetStream (_ebeg );if !_fgaca {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ebeg );
return nil ,_bbfa .ErrTypeError ;};_caeae ,_defgf :=_bbfa .DecodeStream (_eacfe );if _defgf !=nil {return nil ,_defgf ;};_aaabf ,_defgf :=_dea .LoadCmapFromData (_caeae ,!_bdaed .isCIDFont ());if _defgf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_eacfe .ObjectNumber ,_defgf );
};return _aaabf ,_defgf ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fadc *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gefba *OutlineItem )ToPdfObject ()_bbfa .PdfObject {_gfca ,_ :=_gefba .ToPdfOutlineItem ();return _gfca .ToPdfObject ();};func _ccaee (_acgad _bbfa .PdfObject )(*fontFile ,error ){_df .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_acgad );
_edfaa :=&fontFile {};_acgad =_bbfa .TraceToDirectObject (_acgad );_ddcab ,_gdeca :=_acgad .(*_bbfa .PdfObjectStream );if !_gdeca {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_acgad );
return nil ,_bbfa .ErrTypeError ;};_aeagb :=_ddcab .PdfObjectDictionary ;_eddc ,_cbggd :=_bbfa .DecodeStream (_ddcab );if _cbggd !=nil {return nil ,_cbggd ;};_egbfe ,_gdeca :=_bbfa .GetNameVal (_aeagb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gdeca {_edfaa ._dgdde =_egbfe ;
if _egbfe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_df .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cdcf ,_ :=_bbfa .GetIntVal (_aeagb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ddcdc ,_ :=_bbfa .GetIntVal (_aeagb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cdcf > len (_eddc ){_cdcf =len (_eddc );
};if _cdcf +_ddcdc > len (_eddc ){_ddcdc =len (_eddc )-_cdcf ;};_ebccg :=_eddc [:_cdcf ];var _eabdf []byte ;if _ddcdc > 0{_eabdf =_eddc [_cdcf :_cdcf +_ddcdc ];};if _cdcf > 0&&_ddcdc > 0{_abbge :=_edfaa .loadFromSegments (_ebccg ,_eabdf );if _abbge !=nil {return nil ,_abbge ;
};};return _edfaa ,nil ;};var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";
StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";
StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";
StructureTypeForm ="\u0046\u006f\u0072\u006d";);func (_eeecg *LTV )getCerts (_dagdc []*_fe .Certificate )([][]byte ,error ){_gcbbc :=make ([][]byte ,0,len (_dagdc ));for _ ,_abbd :=range _dagdc {_gcbbc =append (_gcbbc ,_abbd .Raw );};return _gcbbc ,nil ;
};func (_afeeda *PdfWriter )writeOutputIntents ()error {if len (_afeeda ._gefeg )==0{return nil ;};_fbecfg :=make ([]_bbfa .PdfObject ,len (_afeeda ._gefeg ));for _dfgcb ,_accef :=range _afeeda ._gefeg {_febce :=_accef .ToPdfObject ();_fbecfg [_dfgcb ]=_bbfa .MakeIndirectObject (_febce );
};_begdb :=_bbfa .MakeIndirectObject (_bbfa .MakeArray (_fbecfg ...));_afeeda ._cgfbd .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_begdb );if _beaab :=_afeeda .addObjects (_begdb );_beaab !=nil {return _beaab ;
};return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_fdfdf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_efade *PdfReader )loadAnnotations (_acgdf _bbfa .PdfObject )([]*PdfAnnotation ,error ){_fgagc ,_ggddc :=_bbfa .GetArray (_acgdf );
if !_ggddc {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dcfeb []*PdfAnnotation ;for _ ,_aedgd :=range _fgagc .Elements (){_aedgd =_bbfa .ResolveReference (_aedgd );
if _ ,_ffgg :=_aedgd .(*_bbfa .PdfObjectNull );_ffgg {continue ;};_cffed ,_bgea :=_aedgd .(*_bbfa .PdfObjectDictionary );_efffe ,_dbdeg :=_aedgd .(*_bbfa .PdfIndirectObject );if _bgea {_efffe =&_bbfa .PdfIndirectObject {};_efffe .PdfObject =_cffed ;}else {if !_dbdeg {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gecda ,_gabfb :=_efade .newPdfAnnotationFromIndirectObject (_efffe );if _gabfb !=nil {return nil ,_gabfb ;};switch _ddegb :=_gecda .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gfbedf :=range _efade .AcroForm .AllFields (){if _gfbedf ._dfeg ==_ddegb .Parent {_ddegb ._cfc =_gfbedf ;
break ;};};};if _gecda !=nil {_dcfeb =append (_dcfeb ,_gecda );};};return _dcfeb ,nil ;};func (_edce *LTV )getOCSPs (_eccag []*_fe .Certificate ,_caed map[string ]*_fe .Certificate )([][]byte ,error ){_cfbe :=make ([][]byte ,0,len (_eccag ));for _ ,_cbcagg :=range _eccag {for _ ,_ddee :=range _cbcagg .OCSPServer {if _edce .CertClient .IsCA (_cbcagg ){continue ;
};_agcfd ,_beea :=_caed [_cbcagg .Issuer .CommonName ];if !_beea {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bffede ,_eage :=_edce .OCSPClient .MakeRequest (_ddee ,_cbcagg ,_agcfd );if _eage !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_eage );
continue ;};_cfbe =append (_cfbe ,_bffede );};};return _cfbe ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_efgcc .Lock ();defer _efgcc .Unlock ();_fggc =subject };

// IsHideMenubar returns the value of the hideMenubar flag.
func (_bdecd *ViewerPreferences )IsHideMenubar ()bool {if _bdecd ._febff ==nil {return false ;};return *_bdecd ._febff ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject implements interface PdfModel.
func (_dbef *PdfBorderStyle )ToPdfObject ()_bbfa .PdfObject {_gdag :=_bbfa .MakeDict ();if _dbef ._bdcc !=nil {if _caeca ,_edgf :=_dbef ._bdcc .(*_bbfa .PdfIndirectObject );_edgf {_caeca .PdfObject =_gdag ;};};_gdag .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dbef .W !=nil {_gdag .Set ("\u0057",_bbfa .MakeFloat (*_dbef .W ));};if _dbef .S !=nil {_gdag .Set ("\u0053",_bbfa .MakeName (_dbef .S .GetPdfName ()));};if _dbef .D !=nil {_gdag .Set ("\u0044",_bbfa .MakeArrayFromIntegers (*_dbef .D ));};if _dbef ._bdcc !=nil {return _dbef ._bdcc ;
};return _gdag ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _cegdc (_cbed _bbfa .PdfObject )(map[_efd .CharCode ]float64 ,error ){if _cbed ==nil {return nil ,nil ;};_abaa ,_gbfg :=_bbfa .GetArray (_cbed );if !_gbfg {return nil ,nil ;};_fbbga :=map[_efd .CharCode ]float64 {};
_afgga :=_abaa .Len ();for _ddfba :=0;_ddfba < _afgga -1;_ddfba ++{_bcfg :=_bbfa .TraceToDirectObject (_abaa .Get (_ddfba ));_ebeeb ,_ecaed :=_bbfa .GetIntVal (_bcfg );if !_ecaed {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ddfba ,_bcfg );
};_ddfba ++;if _ddfba > _afgga -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abaa );};_bffaf :=_bbfa .TraceToDirectObject (_abaa .Get (_ddfba ));
switch _bffaf .(type ){case *_bbfa .PdfObjectArray :_ceae ,_ :=_bbfa .GetArray (_bffaf );if _gggbc ,_gccb :=_ceae .ToFloat64Array ();_gccb ==nil {for _acagg :=0;_acagg < len (_gggbc );_acagg ++{_fbbga [_efd .CharCode (_ebeeb +_acagg )]=_gggbc [_acagg ];
};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ddfba ,_bffaf );};case *_bbfa .PdfObjectInteger :_ccab ,_daccf :=_bbfa .GetIntVal (_bffaf );
if !_daccf {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ddfba ,_bffaf );};_ddfba ++;if _ddfba > _afgga -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abaa );
};_cddgf :=_abaa .Get (_ddfba );_bacg ,_ebfc :=_bbfa .GetNumberAsFloat (_cddgf );if _ebfc !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ddfba ,_cddgf );
};for _aeab :=_ebeeb ;_aeab <=_ccab ;_aeab ++{_fbbga [_efd .CharCode (_aeab )]=_bacg ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ddfba ,_bffaf );
};};return _fbbga ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bbfa .PdfObject ;Movie _bbfa .PdfObject ;A _bbfa .PdfObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_ffce *PdfAppender )addNewObject (_fedca _bbfa .PdfObject ){if _ ,_gdgdf :=_ffce ._bbddc [_fedca ];!_gdgdf {_ffce ._fgee =append (_ffce ._fgee ,_fedca );_ffce ._bbddc [_fedca ]=struct{}{};};};

// PrintClip returns the value of the printClip.
func (_adcgbb *ViewerPreferences )PrintClip ()PageBoundary {return _adcgbb ._dcfaa };

// SetViewArea sets the value of the viewArea.
func (_dgfcd *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_dgfcd ._edbad =viewArea };

// AddRefChild adds a child reference object.
func (_ggcaa *KDict )AddRefChild (kChild *_bbfa .PdfObjectDictionary ){_ggcaa ._cbag =append (_ggcaa ._cbag ,&KValue {_ffbe :kChild });};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_acaba ,_fffec :=_ac .ParsePdfTime (dateStr );if _fffec !=nil {return PdfDate {},_fffec ;};return NewPdfDateFromTime (_acaba );};func (_fedd *PdfReader )newPdfAnnotationUnderlineFromDict (_dgb *_bbfa .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_acf :=PdfAnnotationUnderline {};
_dgbc ,_acae :=_fedd .newPdfAnnotationMarkupFromDict (_dgb );if _acae !=nil {return nil ,_acae ;};_acf .PdfAnnotationMarkup =_dgbc ;_acf .QuadPoints =_dgb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_acf ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_afga *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _gf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_cggb :=field .V ;if _cggb ==nil {return _gf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aedd :=pageNum -1;
if _aedd < 0||_aedd > len (_afga ._cefa )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_adad :=_afga .Reader .PageList [_aedd ];field .P =_adad .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bbfa .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_adad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _afga ._dgca ==_afga ._deeg .AcroForm {_afga ._dgca =_afga .Reader .AcroForm ;};_ecae :=_afga ._dgca ;if _ecae ==nil {_ecae =NewPdfAcroForm ();};_ecae .SigFlags =_bbfa .MakeInteger (3);
if _ecae .NeedAppearances !=nil {_ecae .NeedAppearances =nil ;};_bbbe :=append (_ecae .AllFields (),field .PdfField );_ecae .Fields =&_bbbe ;_afga .ReplaceAcroForm (_ecae );_afga .UpdatePage (_adad );_afga ._cefa [_aedd ]=_adad ;if _ ,_acfd :=field .V .GetDocMDPPermission ();
_acfd {_afga ._dddg =NewPermissions (field .V );};return nil ;};func (_afabg *pdfFontSimple )updateStandard14Font (){_gbgdf ,_agcfe :=_afabg .Encoder ().(_efd .SimpleEncoder );if !_agcfe {_df .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_afabg .Encoder (),_afabg );
return ;};_dceef :=_gbgdf .Charcodes ();_afabg ._ggfc =make (map[_efd .CharCode ]float64 ,len (_dceef ));for _ ,_cafda :=range _dceef {_fbbb ,_ :=_gbgdf .CharcodeToRune (_cafda );_gcbe ,_ :=_afabg ._bgbe .Read (_fbbb );_afabg ._ggfc [_cafda ]=_gcbe .Wx ;
};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bbfa .PdfObjectArray )(*PdfRectangle ,error ){_bcdd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _daecf error ;_bcdd .Llx ,_daecf =_bbfa .GetNumberAsFloat (arr .Get (0));if _daecf !=nil {return nil ,_daecf ;};_bcdd .Lly ,_daecf =_bbfa .GetNumberAsFloat (arr .Get (1));if _daecf !=nil {return nil ,_daecf ;};_bcdd .Urx ,_daecf =_bbfa .GetNumberAsFloat (arr .Get (2));
if _daecf !=nil {return nil ,_daecf ;};_bcdd .Ury ,_daecf =_bbfa .GetNumberAsFloat (arr .Get (3));if _daecf !=nil {return nil ,_daecf ;};return &_bcdd ,nil ;};func (_cgcfe *PdfWriter )writeAcroFormFields ()error {if _cgcfe ._gdgfd ==nil {return nil ;};
_df .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_bebce :=_cgcfe ._gdgfd .ToPdfObject ();_df .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bebce );
_cgcfe ._cgfbd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bebce );_adfg :=_cgcfe .addObjects (_bebce );if _adfg !=nil {return _adfg ;};return nil ;};func (_aedc *pdfFontSimple )baseFields ()*fontCommon {return &_aedc .fontCommon };func _cdfb ()string {return _df .Version };


// GetOutlineTree returns the outline tree.
func (_egddb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _egddb ._cffec };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bbfa .PdfObjectArray ;ExtGState _bbfa .PdfObject ;};func (_fda *PdfReader )newPdfActionGotoFromDict (_bbd *_bbfa .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bbd .Get ("\u0044")},nil ;
};func (_cecb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_agfdf *PdfSignature )GetDocMDPPermission ()(_cgg .DocMDPPermission ,bool ){for _ ,_fbfca :=range _agfdf .Reference .Elements (){if _fbdbb ,_geaed :=_bbfa .GetDict (_fbfca );_geaed {if _gedga ,_cafdg :=_bbfa .GetNameVal (_fbdbb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_cafdg &&_gedga =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _beege ,_bedec :=_bbfa .GetDict (_fbdbb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bedec {if P ,_fgcbb :=_bbfa .GetIntVal (_beege .Get ("\u0050"));
_fgcbb {return _cgg .DocMDPPermission (P ),true ;};};};};};return 0,false ;};var (_gbab =_cf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ffdf =_cf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_beae =_cf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_egcee ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fccg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bfeg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func _gabgf (_ebae *_bbfa .PdfObjectDictionary )(*PdfShadingType7 ,error ){_efgae :=PdfShadingType7 {};_gegga :=_ebae .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gegga ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bgegd ,_fcdee :=_gegga .(*_bbfa .PdfObjectInteger );if !_fcdee {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gegga );
return nil ,_bbfa .ErrTypeError ;};_efgae .BitsPerCoordinate =_bgegd ;_gegga =_ebae .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gegga ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bgegd ,_fcdee =_gegga .(*_bbfa .PdfObjectInteger );if !_fcdee {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gegga );
return nil ,_bbfa .ErrTypeError ;};_efgae .BitsPerComponent =_bgegd ;_gegga =_ebae .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gegga ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bgegd ,_fcdee =_gegga .(*_bbfa .PdfObjectInteger );if !_fcdee {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gegga );
return nil ,_bbfa .ErrTypeError ;};_efgae .BitsPerComponent =_bgegd ;_gegga =_ebae .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gegga ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffdde ,_fcdee :=_gegga .(*_bbfa .PdfObjectArray );if !_fcdee {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gegga );
return nil ,_bbfa .ErrTypeError ;};_efgae .Decode =_ffdde ;if _gedea :=_ebae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gedea !=nil {_efgae .Function =[]PdfFunction {};if _bcecg ,_eebff :=_gedea .(*_bbfa .PdfObjectArray );_eebff {for _ ,_dfggb :=range _bcecg .Elements (){_adgfg ,_dgcdcb :=_fcgca (_dfggb );
if _dgcdcb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgcdcb );return nil ,_dgcdcb ;};_efgae .Function =append (_efgae .Function ,_adgfg );
};}else {_fbbcg ,_acaed :=_fcgca (_gedea );if _acaed !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acaed );return nil ,_acaed ;
};_efgae .Function =append (_efgae .Function ,_fbbcg );};};return &_efgae ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_acd :=NewPdfAnnotation ();_egd :=&PdfAnnotationSquare {};_egd .PdfAnnotation =_acd ;_egd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acd .SetContext (_egd );return _egd ;};func _bgce (_bdcfe rune )string {for _egda ,_abdde :=range _db .Categories {if len (_egda )==2&&_db .Is (_abdde ,_bdcfe ){return _egda ;
};};return "\u0043\u006e";};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_fcgfe *KDict ;_ffbe _bbfa .PdfObject ;_aagdb *int ;};

// WriteString outputs the object as it is to be written to file.
func (_aeccgb *PdfTransformParamsDocMDP )WriteString ()string {return _aeccgb .ToPdfObject ().WriteString ();};func _ddec (_cdgbc _bbfa .PdfObject )(*PdfColorspaceCalGray ,error ){_ecba :=NewPdfColorspaceCalGray ();if _bgbcd ,_cfcd :=_cdgbc .(*_bbfa .PdfIndirectObject );
_cfcd {_ecba ._deegb =_bgbcd ;};_cdgbc =_bbfa .TraceToDirectObject (_cdgbc );_afda ,_acbfb :=_cdgbc .(*_bbfa .PdfObjectArray );if !_acbfb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afda .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cdgbc =_bbfa .TraceToDirectObject (_afda .Get (0));_bada ,_acbfb :=_cdgbc .(*_bbfa .PdfObjectName );if !_acbfb {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bada !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cdgbc =_bbfa .TraceToDirectObject (_afda .Get (1));
_cgfd ,_acbfb :=_cdgbc .(*_bbfa .PdfObjectDictionary );if !_acbfb {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cdgbc =_cgfd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cdgbc =_bbfa .TraceToDirectObject (_cdgbc );_aceca ,_acbfb :=_cdgbc .(*_bbfa .PdfObjectArray );if !_acbfb {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _aceca .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fcbf ,_bcfc :=_aceca .GetAsFloat64Slice ();
if _bcfc !=nil {return nil ,_bcfc ;};_ecba .WhitePoint =_fcbf ;_cdgbc =_cgfd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cdgbc !=nil {_cdgbc =_bbfa .TraceToDirectObject (_cdgbc );_dfgf ,_dcgb :=_cdgbc .(*_bbfa .PdfObjectArray );
if !_dcgb {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _dfgf .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_bfcad ,_gcfg :=_dfgf .GetAsFloat64Slice ();if _gcfg !=nil {return nil ,_gcfg ;};_ecba .BlackPoint =_bfcad ;};_cdgbc =_cgfd .Get ("\u0047\u0061\u006dm\u0061");if _cdgbc !=nil {_cdgbc =_bbfa .TraceToDirectObject (_cdgbc );_fccdb ,_gaac :=_bbfa .GetNumberAsFloat (_cdgbc );
if _gaac !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ecba .Gamma =_fccdb ;};return _ecba ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cbecg *PdfSignature )GetContainingPdfObject ()_bbfa .PdfObject {return _cbecg ._dddfg };

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_egfgc *PdfFontDescriptor )ToPdfObject ()_bbfa .PdfObject {_gfbbb :=_bbfa .MakeDict ();if _egfgc ._ccgbb ==nil {_egfgc ._ccgbb =&_bbfa .PdfIndirectObject {};};_egfgc ._ccgbb .PdfObject =_gfbbb ;_gfbbb .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _egfgc .FontName !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_egfgc .FontName );};if _egfgc .FontFamily !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_egfgc .FontFamily );};if _egfgc .FontStretch !=nil {_gfbbb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_egfgc .FontStretch );
};if _egfgc .FontWeight !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_egfgc .FontWeight );};if _egfgc .Flags !=nil {_gfbbb .Set ("\u0046\u006c\u0061g\u0073",_egfgc .Flags );};if _egfgc .FontBBox !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_egfgc .FontBBox );
};if _egfgc .ItalicAngle !=nil {_gfbbb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_egfgc .ItalicAngle );};if _egfgc .Ascent !=nil {_gfbbb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_egfgc .Ascent );};if _egfgc .Descent !=nil {_gfbbb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_egfgc .Descent );
};if _egfgc .Leading !=nil {_gfbbb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_egfgc .Leading );};if _egfgc .CapHeight !=nil {_gfbbb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_egfgc .CapHeight );};if _egfgc .XHeight !=nil {_gfbbb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_egfgc .XHeight );
};if _egfgc .StemV !=nil {_gfbbb .Set ("\u0053\u0074\u0065m\u0056",_egfgc .StemV );};if _egfgc .StemH !=nil {_gfbbb .Set ("\u0053\u0074\u0065m\u0048",_egfgc .StemH );};if _egfgc .AvgWidth !=nil {_gfbbb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_egfgc .AvgWidth );
};if _egfgc .MaxWidth !=nil {_gfbbb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_egfgc .MaxWidth );};if _egfgc .MissingWidth !=nil {_gfbbb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_egfgc .MissingWidth );};
if _egfgc .FontFile !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_egfgc .FontFile );};if _egfgc .FontFile2 !=nil {_gfbbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_egfgc .FontFile2 );};if _egfgc .FontFile3 !=nil {_gfbbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_egfgc .FontFile3 );
};if _egfgc .CharSet !=nil {_gfbbb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_egfgc .CharSet );};if _egfgc .Style !=nil {_gfbbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_egfgc .FontName );};if _egfgc .Lang !=nil {_gfbbb .Set ("\u004c\u0061\u006e\u0067",_egfgc .Lang );
};if _egfgc .FD !=nil {_gfbbb .Set ("\u0046\u0044",_egfgc .FD );};if _egfgc .CIDSet !=nil {_gfbbb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_egfgc .CIDSet );};return _egfgc ._ccgbb ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bace int ,_cfgad *PdfPage );

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_aaeg :=appender .Reader .DSS ;if _aaeg ==nil {_aaeg =NewDSS ();};if _adde :=_aaeg .GenerateHashMaps ();_adde !=nil {return nil ,_adde ;};return &LTV {CertClient :_adf .NewCertClient (),OCSPClient :_adf .NewOCSPClient (),CRLClient :_adf .NewCRLClient (),SkipExisting :true ,_fcgbg :appender ,_egbca :_aaeg },nil ;
};func _ebbac ()string {_efgcc .Lock ();defer _efgcc .Unlock ();return _fggc };var _abbfdd =false ;

// PdfVersion returns version of the PDF file.
func (_ddddd *PdfReader )PdfVersion ()_bbfa .Version {return _ddddd ._fdefeb .PdfVersion ()};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gdge :=NewPdfAnnotation ();_gefaf :=&PdfAnnotationPrinterMark {};_gefaf .PdfAnnotation =_gdge ;_gdge .SetContext (_gefaf );return _gefaf ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dadfb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deacc ,_adfc :=_bbfa .GetNumbersAsFloat (objects );
if _adfc !=nil {return nil ,_adfc ;};return _dadfb .ColorFromFloats (_deacc );};

// ToPdfObject converts date to a PDF string object.
func (_fgbef *PdfDate )ToPdfObject ()_bbfa .PdfObject {_cddae :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fgbef ._fbfea ,_fgbef ._dbgfe ,_fgbef ._gadge ,_fgbef ._egfad ,_fgbef ._bggf ,_fgbef ._acecab ,_fgbef ._ccce ,_fgbef ._fedea ,_fgbef ._cabba );
return _bbfa .MakeString (_cddae );};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fedcc ,_cacf :=_baba (basefont );if _cacf !=nil {return nil ,_cacf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fedcc ._cdea =_efd .NewWinAnsiEncoder ();};return &PdfFont {_gdfa :&_fedcc },nil ;
};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_feedf *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_feedf ._dbacd =&pickTrayByPDFSize ;};

// GetContentStream returns the pattern cell's content stream
func (_bgecd *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cbabg ,_ ,_cggbfd :=_bgecd .GetContentStreamWithEncoder ();return _cbabg ,_cggbfd ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cded :=&PdfPageResources {};_cded ._gddca =_bbfa .MakeDict ();return _cded ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_becf *PdfColorspaceDeviceN )GetNumComponents ()int {return _becf .ColorantNames .Len ()};

// GetNumComponents returns the number of color components.
func (_ccag *PdfColorspaceICCBased )GetNumComponents ()int {return _ccag .N };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_abfdb *PdfOutline )ToPdfObject ()_bbfa .PdfObject {_aecg :=_abfdb ._cfaba ;_dddce :=_aecg .PdfObject .(*_bbfa .PdfObjectDictionary );_dddce .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _abfdb .First !=nil {_dddce .Set ("\u0046\u0069\u0072s\u0074",_abfdb .First .ToPdfObject ());
};if _abfdb .Last !=nil {_dddce .Set ("\u004c\u0061\u0073\u0074",_abfdb .Last .GetContext ().GetContainingPdfObject ());};if _abfdb .Parent !=nil {_dddce .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abfdb .Parent .GetContext ().GetContainingPdfObject ());
};if _abfdb .Count !=nil {_dddce .Set ("\u0043\u006f\u0075n\u0074",_bbfa .MakeInteger (*_abfdb .Count ));};return _aecg ;};

// SetAlpha sets the alpha layer for the image.
func (_ffceg *Image )SetAlpha (alpha []byte ){_ffceg ._eccdd =alpha };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bbfa .PdfObject ;FS _bbfa .PdfObject ;F _bbfa .PdfObject ;UF _bbfa .PdfObject ;DOS _bbfa .PdfObject ;Mac _bbfa .PdfObject ;Unix _bbfa .PdfObject ;ID _bbfa .PdfObject ;V _bbfa .PdfObject ;EF _bbfa .PdfObject ;RF _bbfa .PdfObject ;
Desc _bbfa .PdfObject ;CI _bbfa .PdfObject ;AFRelationship _bbfa .PdfObject ;_bdbfc _bbfa .PdfObject ;};func (_ccfe *PdfPage )generateImage (_fbfbcd string ,_acece float64 ,_eegeb string ,_fcgdb _f .Color )([]byte ,error ){_fbebb ,_bfcf ,_faed ,_ :=_fcgdb .RGBA ();
_afee :=_f .RGBA {uint8 (_fbebb >>8),uint8 (_bfcf >>8),uint8 (_faed >>8),255};_dfege :=_f .RGBA {0xff,0xff,0xff,0x00};_gbgc ,_cabff :=_ccfe .loadFont (_eegeb );if _cabff !=nil {return nil ,_cabff ;};_abdce :=_ge .Replace (_fbfbcd ,"\u0009","\u0020\u0020\u0020\u0020",-1);
_gaee :=_ge .Split (_abdce ,"\u000a");_fbaaf :=1.0;for _ ,_eeda :=range _gaee {if float64 (len (_eeda ))*_acece > _fbaaf {_fbaaf =float64 (len (_eeda ))*_acece ;};};if _fbaaf > _ccfe .MediaBox .Width (){_fbaaf =_ccfe .MediaBox .Width ();};_afgcbg :=_gd .NewUniform (_afee );
_abgge :=_gd .NewUniform (_dfege );_ceda :=_gd .NewRGBA (_gd .Rect (0,0,int (_fbaaf ),int (_acece *1.5*float64 (len (_gaee )))));_c .Draw (_ceda ,_ceda .Bounds (),_abgge ,_gd .Pt (0,0),_c .Src );_fcfdf :=_eg .NewContext ();_fcfdf .SetDPI (72);_fcfdf .SetFont (_gbgc );
_fcfdf .SetFontSize (_acece );_fcfdf .SetHinting (_gae .HintingNone );_fcfdf .SetClip (_ceda .Bounds ());_fcfdf .SetDst (_ceda );_fcfdf .SetSrc (_afgcbg );_cddd :=50;_eabeg :=10+int (_fcfdf .PointToFixed (_acece )>>6);_cfccc :=_eg .Pt (_cddd ,_eabeg );
for _ ,_bbafc :=range _gaee {_ ,_cabff =_fcfdf .DrawString (_ge .Replace (_bbafc ,"\u000d","",-1),_cfccc );if _cabff !=nil {return nil ,_cabff ;};_cfccc .Y +=_fcfdf .PointToFixed (_acece *1.5);};_bbff :=new (_de .Buffer );if _ebfac :=_a .Encode (_bbff ,_ceda );
_ebfac !=nil {return nil ,_ebfac ;};return _bbff .Bytes (),nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bbfa .PdfObject ;B _bbfa .PdfObject ;};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_bfab *ViewerPreferences )ToPdfObject ()_bbfa .PdfObject {_cdgab :=_bbfa .MakeDict ();if _bfab ._bffef !=nil {_cdgab .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_bbfa .MakeBool (*_bfab ._bffef ));};if _bfab ._febff !=nil {_cdgab .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_bbfa .MakeBool (*_bfab ._febff ));
};if _bfab ._egeca !=nil {_cdgab .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_bbfa .MakeBool (*_bfab ._egeca ));};if _bfab ._dbdga !=nil {_cdgab .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_bbfa .MakeBool (*_bfab ._dbdga ));
};if _bfab ._dfdab !=nil {_cdgab .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_bbfa .MakeBool (*_bfab ._dfdab ));};if _bfab ._bgedd !=nil {_cdgab .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_bbfa .MakeBool (*_bfab ._bgedd ));
};if _bfab ._dbcge !=""{_cdgab .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_bbfa .MakeName (string (_bfab ._dbcge )));};if _bfab ._acdab !=""{_cdgab .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_bbfa .MakeName (string (_bfab ._acdab )));
};if _bfab ._edbad !=""{_cdgab .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_bbfa .MakeName (string (_bfab ._edbad )));};if _bfab ._ggbae !=""{_cdgab .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_bbfa .MakeName (string (_bfab ._ggbae )));
};if _bfab ._abfgd !=""{_cdgab .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_bbfa .MakeName (string (_bfab ._abfgd )));};if _bfab ._dcfaa !=""{_cdgab .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_bbfa .MakeName (string (_bfab ._dcfaa )));
};if _bfab ._beced !=""{_cdgab .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_bbfa .MakeName (string (_bfab ._beced )));};if _bfab ._agca !=""{_cdgab .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_bbfa .MakeName (string (_bfab ._agca )));
};if _bfab ._dbacd !=nil {_cdgab .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_bbfa .MakeBool (*_bfab ._dbacd ));};if _bfab ._dcdbb !=nil {_cdgab .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_bbfa .MakeArrayFromIntegers (_bfab ._dcdbb ));
};if _bfab ._dbaae !=0{_cdgab .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_bbfa .MakeInteger (int64 (_bfab ._dbaae )));};return _cdgab ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);
FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);
FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);
FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bbfa .PdfObject )(*PdfInfo ,error ){var _ggee PdfInfo ;_abge ,_cfad :=obj .(*_bbfa .PdfObjectDictionary );if !_cfad {return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ceadg :=range _abge .Keys (){switch _ceadg {case "\u0054\u0069\u0074l\u0065":_ggee .Title ,_ =_bbfa .GetString (_abge .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_ggee .Author ,_ =_bbfa .GetString (_abge .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ggee .Subject ,_ =_bbfa .GetString (_abge .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ggee .Keywords ,_ =_bbfa .GetString (_abge .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ggee .Creator ,_ =_bbfa .GetString (_abge .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ggee .Producer ,_ =_bbfa .GetString (_abge .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ggee .Trapped ,_ =_bbfa .GetName (_abge .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cdba ,_aecc :=_bbfa .GetString (_abge .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_aecc &&_cdba .String ()!=""{_gbfbd ,_daggd :=NewPdfDate (_cdba .String ());if _daggd !=nil {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_daggd );
};_ggee .CreationDate =&_gbfbd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _gbed ,_facb :=_bbfa .GetString (_abge .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_facb &&_gbed .String ()!=""{_ecgg ,_bbad :=NewPdfDate (_gbed .String ());if _bbad !=nil {return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bbad );
};_ggee .ModifiedDate =&_ecgg ;};default:_bcg ,_ :=_bbfa .GetString (_abge .Get (_ceadg ));if _ggee ._gaga ==nil {_ggee ._gaga =_bbfa .MakeDict ();};_ggee ._gaga .Set (_ceadg ,_bcg );};};return &_ggee ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_eebbc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bbfa .PdfObject {_dadg :=_bbfa .MakeDict ();if _eebbc .Subtype !=nil {_dadg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eebbc .Subtype );};_dadg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_eebbc .Colorants );
_dadg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_eebbc .Process );_dadg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_eebbc .MixingHints );if _eebbc ._ddfa !=nil {_eebbc ._ddfa .PdfObject =_dadg ;return _eebbc ._ddfa ;
};return _dadg ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fbbde *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _adcf []_efd .TextEncoder ;var _gaca _efd .CMapEncoder ;if _abbff :=_fbbde .baseFields ()._degfb ;_abbff !=nil {_gaca =_efd .NewCMapEncoder ("",nil ,_abbff );};_ceddg :=_fbbde .Encoder ();
if _ceddg !=nil {switch _faaa :=_ceddg .(type ){case _efd .SimpleEncoder :_gbec :=_faaa .BaseName ();if _ ,_eade :=_eecb [_gbec ];_eade {_adcf =append (_adcf ,_ceddg );};};};if len (_adcf )==0{if _fbbde .baseFields ()._degfb !=nil {_adcf =append (_adcf ,_gaca );
};if _ceddg !=nil {_adcf =append (_adcf ,_ceddg );};};var _dgcb _de .Buffer ;var _agda int ;for _ ,_bece :=range data {var _gdbcg bool ;for _ ,_ebfgc :=range _adcf {if _acecc :=_ebfgc .Encode (string (_bece ));len (_acecc )> 0{_dgcb .Write (_acecc );_gdbcg =true ;
break ;};};if !_gdbcg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bece );
_agda ++;};};if _agda !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_agda ,_fbbde ,_adcf );
};return _dgcb .Bytes (),_agda ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fceff *PdfPageResources )GetPatternByName (keyName _bbfa .PdfObjectName )(*PdfPattern ,bool ){if _fceff .Pattern ==nil {return nil ,false ;};_dgdaf ,_dcdaed :=_bbfa .TraceToDirectObject (_fceff .Pattern ).(*_bbfa .PdfObjectDictionary );if !_dcdaed {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fceff .Pattern );
return nil ,false ;};if _cdafcb :=_dgdaf .Get (keyName );_cdafcb !=nil {_dffc ,_cefbd :=_befa (_cdafcb );if _cefbd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cefbd );
return nil ,false ;};return _dffc ,true ;};return nil ,false ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gedab *PdfWriter )SetPageLabels (pageLabels _bbfa .PdfObject )error {if pageLabels ==nil {return nil ;};_df .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_gedab ._cgfbd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _gedab .addObjects (pageLabels );};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fecd *PdfReader )GetEncryptionMethod ()string {_gfeff :=_fecd ._fdefeb .GetCrypter ();return _gfeff .String ();};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fdddf *PdfShading )GetContext ()PdfModel {return _fdddf ._bagea };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_ccfdf *ViewerPreferences )PickTrayByPDFSize ()bool {if _ccfdf ._dbacd ==nil {return false ;};return *_ccfdf ._dbacd ;};func (_bdeac *PdfWriter )copyObjects (){_dffbf :=make (map[_bbfa .PdfObject ]_bbfa .PdfObject );_aggccb :=make ([]_bbfa .PdfObject ,0,len (_bdeac ._ecdbe ));
_dbfgd :=make (map[_bbfa .PdfObject ]struct{},len (_bdeac ._ecdbe ));_dadeg :=make (map[_bbfa .PdfObject ]struct{});for _ ,_egeba :=range _bdeac ._ecdbe {_cgafd :=_bdeac .copyObject (_egeba ,_dffbf ,_dadeg ,false );if _ ,_bcfeca :=_dadeg [_egeba ];_bcfeca {continue ;
};_aggccb =append (_aggccb ,_cgafd );_dbfgd [_cgafd ]=struct{}{};};_bdeac ._ecdbe =_aggccb ;_bdeac ._fdaa =_dbfgd ;_bdeac ._agfdbb =_bdeac .copyObject (_bdeac ._agfdbb ,_dffbf ,nil ,false ).(*_bbfa .PdfIndirectObject );_bdeac ._abaae =_bdeac .copyObject (_bdeac ._abaae ,_dffbf ,nil ,false ).(*_bbfa .PdfIndirectObject );
if _bdeac ._agfff !=nil {_bdeac ._agfff =_bdeac .copyObject (_bdeac ._agfff ,_dffbf ,nil ,false ).(*_bbfa .PdfIndirectObject );};if _bdeac ._fccec {_acaaeb :=make (map[_bbfa .PdfObject ]int64 );for _eaccc ,_ecffg :=range _bdeac ._cffac {if _dffcd ,_cfcbe :=_dffbf [_eaccc ];
_cfcbe {_acaaeb [_dffcd ]=_ecffg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bdeac ._cffac =_acaaeb ;};};

// AddOCSPs adds OCSPs to DSS.
func (_cccb *DSS )AddOCSPs (ocsps [][]byte )([]*_bbfa .PdfObjectStream ,error ){return _cccb .add (&_cccb .OCSPs ,_cccb ._ebeb ,ocsps );};

// ToPdfObject returns the PDF representation of the pattern.
func (_eabge *PdfPattern )ToPdfObject ()_bbfa .PdfObject {_gcaca :=_eabge .getDict ();_gcaca .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gcaca .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bbfa .MakeInteger (_eabge .PatternType ));
return _eabge ._cgad ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gge :=NewPdfAnnotation ();_cbb :=&PdfAnnotationPopup {};_cbb .PdfAnnotation =_gge ;_gge .SetContext (_cbb );return _cbb ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ggaa *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ggca :=0.3*_ggaa .R ()+0.59*_ggaa .G ()+0.11*_ggaa .B ();_ggca =_dg .Min (_dg .Max (_ggca ,0.0),1.0);return NewPdfColorDeviceGray (_ggca );};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_dbdcd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _dbdcd .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_gcfca :=&PdfFilespec {};_gcfca ._bdbfc =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());_gcfca .Desc =_bbfa .MakeString (file .Description );_gcfca .EF =file .ToPdfObject ();_gcfca .F =_bbfa .MakeString (file .Name );
_gcfca .UF =_bbfa .MakeEncodedString (file .Name ,true );_cabag :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_cabag ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_cabag ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_cabag ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_cabag ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_gcfca .AFRelationship =_bbfa .MakeName (_cabag );
return _gcfca ;};

// ToPdfObject implements interface PdfModel.
func (_debb *PdfActionLaunch )ToPdfObject ()_bbfa .PdfObject {_debb .PdfAction .ToPdfObject ();_be :=_debb ._ff ;_bbag :=_be .PdfObject .(*_bbfa .PdfObjectDictionary );_bbag .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeLaunch )));if _debb .F !=nil {_bbag .Set ("\u0046",_debb .F .ToPdfObject ());
};_bbag .SetIfNotNil ("\u0057\u0069\u006e",_debb .Win );_bbag .SetIfNotNil ("\u004d\u0061\u0063",_debb .Mac );_bbag .SetIfNotNil ("\u0055\u006e\u0069\u0078",_debb .Unix );_bbag .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_debb .NewWindow );
return _be ;};

// ToPdfObject converts the font to a PDF representation.
func (_eafd *pdfFontType3 )ToPdfObject ()_bbfa .PdfObject {if _eafd ._cfga ==nil {_eafd ._cfga =&_bbfa .PdfIndirectObject {};};_eccgc :=_eafd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_eafd ._cfga .PdfObject =_eccgc ;if _eafd .FirstChar !=nil {_eccgc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eafd .FirstChar );
};if _eafd .LastChar !=nil {_eccgc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eafd .LastChar );};if _eafd .Widths !=nil {_eccgc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eafd .Widths );};if _eafd .Encoding !=nil {_eccgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eafd .Encoding );
}else if _eafd ._eagbd !=nil {_adgcc :=_eafd ._eagbd .ToPdfObject ();if _adgcc !=nil {_eccgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_adgcc );};};if _eafd .FontBBox !=nil {_eccgc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_eafd .FontBBox );
};if _eafd .FontMatrix !=nil {_eccgc .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_eafd .FontMatrix );};if _eafd .CharProcs !=nil {_eccgc .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_eafd .CharProcs );};if _eafd .Resources !=nil {_eccgc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eafd .Resources );
};return _eafd ._cfga ;};func (_daggdf *PdfWriter )writeXRefStreams (_gddde int ,_agceac int64 )error {_bgbag :=_gddde +1;_daggdf ._cbaff [_bgbag ]=crossReference {Type :1,ObjectNumber :_bgbag ,Offset :_agceac };_bdcdb :=_de .NewBuffer (nil );_ffggd :=_bbfa .MakeArray ();
for _bgcga :=0;_bgcga <=_gddde ;{for ;_bgcga <=_gddde ;_bgcga ++{_cdgec ,_ccgfca :=_daggdf ._cbaff [_bgcga ];if _ccgfca &&(!_daggdf ._fccec ||_daggdf ._fccec &&(_cdgec .Type ==1&&_cdgec .Offset >=_daggdf ._ddddgb ||_cdgec .Type ==0)){break ;};};var _ffadg int ;
for _ffadg =_bgcga +1;_ffadg <=_gddde ;_ffadg ++{_bgcgg ,_ccfga :=_daggdf ._cbaff [_ffadg ];if _ccfga &&(!_daggdf ._fccec ||_daggdf ._fccec &&(_bgcgg .Type ==1&&_bgcgg .Offset > _daggdf ._ddddgb )){continue ;};break ;};_ffggd .Append (_bbfa .MakeInteger (int64 (_bgcga )),_bbfa .MakeInteger (int64 (_ffadg -_bgcga )));
for _dacba :=_bgcga ;_dacba < _ffadg ;_dacba ++{_cbdc :=_daggdf ._cbaff [_dacba ];switch _cbdc .Type {case 0:_dc .Write (_bdcdb ,_dc .BigEndian ,byte (0));_dc .Write (_bdcdb ,_dc .BigEndian ,uint32 (0));_dc .Write (_bdcdb ,_dc .BigEndian ,uint16 (0xFFFF));
case 1:_dc .Write (_bdcdb ,_dc .BigEndian ,byte (1));_dc .Write (_bdcdb ,_dc .BigEndian ,uint32 (_cbdc .Offset ));_dc .Write (_bdcdb ,_dc .BigEndian ,uint16 (_cbdc .Generation ));case 2:_dc .Write (_bdcdb ,_dc .BigEndian ,byte (2));_dc .Write (_bdcdb ,_dc .BigEndian ,uint32 (_cbdc .ObjectNumber ));
_dc .Write (_bdcdb ,_dc .BigEndian ,uint16 (_cbdc .Index ));};};_bgcga =_ffadg +1;};_aeaae ,_gfade :=_bbfa .MakeStream (_bdcdb .Bytes (),_bbfa .NewFlateEncoder ());if _gfade !=nil {return _gfade ;};_aeaae .ObjectNumber =int64 (_bgbag );_aeaae .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0058\u0052\u0065\u0066"));
_aeaae .PdfObjectDictionary .Set ("\u0057",_bbfa .MakeArray (_bbfa .MakeInteger (1),_bbfa .MakeInteger (4),_bbfa .MakeInteger (2)));_aeaae .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_ffggd );_aeaae .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bbfa .MakeInteger (int64 (_bgbag )));
_aeaae .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_daggdf ._agfdbb );_aeaae .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_daggdf ._abaae );if _daggdf ._fccec &&_daggdf ._fbdad > 0{_aeaae .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bbfa .MakeInteger (_daggdf ._fbdad ));
};if _daggdf ._begfb !=nil {_aeaae .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_daggdf ._agfff );};if _daggdf ._fedbc ==nil &&_daggdf ._gdbcf !=""&&_daggdf ._cdfc !=""{_daggdf ._fedbc =_bbfa .MakeArray (_bbfa .MakeHexString (_daggdf ._gdbcf ),_bbfa .MakeHexString (_daggdf ._cdfc ));
};if _daggdf ._fedbc !=nil {_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_daggdf ._fedbc );_aeaae .Set ("\u0049\u0044",_daggdf ._fedbc );};_daggdf .writeObject (int (_aeaae .ObjectNumber ),_aeaae );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfae *PdfActionGoTo3DView )ToPdfObject ()_bbfa .PdfObject {_dfae .PdfAction .ToPdfObject ();_dgc :=_dfae ._ff ;_fee :=_dgc .PdfObject .(*_bbfa .PdfObjectDictionary );_fee .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeGoTo3DView )));_fee .SetIfNotNil ("\u0054\u0041",_dfae .TA );
_fee .SetIfNotNil ("\u0056",_dfae .V );return _dgc ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_fgbe _bbfa .ParserMetadata ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bbfef *DSS )ToPdfObject ()_bbfa .PdfObject {_fcbc :=_bbfef ._bbca .PdfObject .(*_bbfa .PdfObjectDictionary );_fcbc .Clear ();_bgad :=_bbfa .MakeDict ();for _eedcd ,_bcbac :=range _bbfef .VRI {_bgad .Set (*_bbfa .MakeName (_eedcd ),_bcbac .ToPdfObject ());
};_fcbc .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ebde (_bbfef .Certs ));_fcbc .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ebde (_bbfef .OCSPs ));_fcbc .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ebde (_bbfef .CRLs ));_fcbc .Set ("\u0056\u0052\u0049",_bgad );
return _bbfef ._bbca ;};

// GetStructRoot gets the StructTreeRoot object
func (_eaacc *PdfPage )GetStructTreeRoot ()(*_bbfa .PdfObject ,bool ){_ggfgb ,_accfb :=_eaacc ._gcfgf .GetCatalogStructTreeRoot ();return &_ggfgb ,_accfb ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_efeg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_efeg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_efeg ._dgca =acroForm ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fcge :=NewPdfAnnotation ();_cbec :=&PdfAnnotation3D {};_cbec .PdfAnnotation =_fcge ;_fcge .SetContext (_cbec );return _cbec ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_caeb *MultipleFontEncoder )Encoder (rn rune )(_efd .TextEncoder ,bool ){_bbcaea :=_caeb .CurrentFont ;_beff :=_bbcaea .Encoder ();_ ,_gccgc :=_beff .RuneToCharcode (rn );for _effa :=1;_effa < len (_caeb ._efaa )&&!_gccgc ;_effa ++{_bbcaea =_caeb ._efaa [_effa ];
_beff =_bbcaea .Encoder ();_ ,_gccgc =_beff .RuneToCharcode (rn );_caeb .CurrentFont =_bbcaea ;};return _beff ,_gccgc ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bbfa .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bbfa .PdfObject ;Contents _bbfa .PdfObject ;
Rotate *int64 ;Group _bbfa .PdfObject ;Thumb _bbfa .PdfObject ;B _bbfa .PdfObject ;Dur _bbfa .PdfObject ;Trans _bbfa .PdfObject ;AA _bbfa .PdfObject ;Metadata _bbfa .PdfObject ;PieceInfo _bbfa .PdfObject ;StructParents _bbfa .PdfObject ;ID _bbfa .PdfObject ;
PZ _bbfa .PdfObject ;SeparationInfo _bbfa .PdfObject ;Tabs _bbfa .PdfObject ;TemplateInstantiated _bbfa .PdfObject ;PresSteps _bbfa .PdfObject ;UserUnit _bbfa .PdfObject ;VP _bbfa .PdfObject ;Annots _bbfa .PdfObject ;_eaabc []*PdfAnnotation ;_cgef *_bbfa .PdfObjectDictionary ;
_bfaag *_bbfa .PdfIndirectObject ;_cgbfde _bbfa .PdfObjectDictionary ;_gcfgf *PdfReader ;};

// Width returns the width of `rect`.
func (_fdfbba *PdfRectangle )Width ()float64 {return _dg .Abs (_fdfbba .Urx -_fdfbba .Llx )};func (_bfdfa *PdfWriter )writeObjects (){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bfdfa ._ecdbe ));
_bfdfa ._cbaff =make (map[int ]crossReference );_bfdfa ._cbaff [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bfdfa ._bdagd .ObjectMap !=nil {for _dbgff ,_dffab :=range _bfdfa ._bdagd .ObjectMap {if _dbgff ==0{continue ;};if _dffab .XType ==_bbfa .XrefTypeObjectStream {_babdb :=crossReference {Type :2,ObjectNumber :_dffab .OsObjNumber ,Index :_dffab .OsObjIndex };
_bfdfa ._cbaff [_dbgff ]=_babdb ;};if _dffab .XType ==_bbfa .XrefTypeTableEntry {_bdgde :=crossReference {Type :1,ObjectNumber :_dffab .ObjectNumber ,Offset :_dffab .Offset };_bfdfa ._cbaff [_dbgff ]=_bdgde ;};};};};

// ColorToRGB converts gray -> rgb for a single color component.
func (_adb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbaa ,_dafg :=color .(*PdfColorDeviceGray );if !_dafg {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bbaa ),float64 (*_bbaa ),float64 (*_bbaa )),nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bbfa .PdfObjectArray ;Matrix *_bbfa .PdfObjectArray ;Function []PdfFunction ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bbfa .PdfObjectString ;Q *_bbfa .PdfObjectInteger ;DS *_bbfa .PdfObjectString ;RV _bbfa .PdfObject ;MaxLen *_bbfa .PdfObjectInteger ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gggec *pdfCIDFontType0 )ToPdfObject ()_bbfa .PdfObject {return _bbfa .MakeNull ()};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_efa :=NewPdfAction ();_bfd :=&PdfActionHide {};_bfd .PdfAction =_efa ;_efa .SetContext (_bfd );return _bfd ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cab :=NewPdfAnnotation ();_dbcf :=&PdfAnnotationTrapNet {};_dbcf .PdfAnnotation =_cab ;_cab .SetContext (_dbcf );return _dbcf ;};func _cgebc (_fdfad []byte )bool {if len (_fdfad )< 4{return true ;};
for _fabfb :=range _fdfad [:4]{_dbdb :=rune (_fabfb );if !_db .Is (_db .ASCII_Hex_Digit ,_dbdb )&&!_db .IsSpace (_dbdb ){return true ;};};return false ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ea .Time ){_efgcc .Lock ();defer _efgcc .Unlock ();_cafef =creationDate ;};

// AddFont adds a font dictionary to the Font resources.
func (_caeg *PdfPage )AddFont (name _bbfa .PdfObjectName ,font _bbfa .PdfObject )error {if _caeg .Resources ==nil {_caeg .Resources =NewPdfPageResources ();};if _caeg .Resources .Font ==nil {_caeg .Resources .Font =_bbfa .MakeDict ();};_ecebd ,_dafed :=_bbfa .TraceToDirectObject (_caeg .Resources .Font ).(*_bbfa .PdfObjectDictionary );
if !_dafed {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bbfa .TraceToDirectObject (_caeg .Resources .Font ));
return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecebd .Set (name ,font );return nil ;};func _fdbf (_fbcc *_bbfa .PdfObjectDictionary )(*PdfFieldChoice ,error ){_afega :=&PdfFieldChoice {};_afega .Opt ,_ =_bbfa .GetArray (_fbcc .Get ("\u004f\u0070\u0074"));
_afega .TI ,_ =_bbfa .GetInt (_fbcc .Get ("\u0054\u0049"));_afega .I ,_ =_bbfa .GetArray (_fbcc .Get ("\u0049"));return _afega ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fgbc *PdfFieldText )ToPdfObject ()_bbfa .PdfObject {_fgbc .PdfField .ToPdfObject ();_gfdg :=_fgbc ._dfeg ;_fcdcb :=_gfdg .PdfObject .(*_bbfa .PdfObjectDictionary );_fcdcb .Set ("\u0046\u0054",_bbfa .MakeName ("\u0054\u0078"));if _fgbc .DA !=nil {_fcdcb .Set ("\u0044\u0041",_fgbc .DA );
};if _fgbc .Q !=nil {_fcdcb .Set ("\u0051",_fgbc .Q );};if _fgbc .DS !=nil {_fcdcb .Set ("\u0044\u0053",_fgbc .DS );};if _fgbc .RV !=nil {_fcdcb .Set ("\u0052\u0056",_fgbc .RV );};if _fgbc .MaxLen !=nil {_fcdcb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fgbc .MaxLen );
};return _gfdg ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_abbgc :=&PdfShadingPatternType3 {};_abbgc .Matrix =_bbfa .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_abbgc .PdfPattern =&PdfPattern {};_abbgc .PdfPattern .PatternType =int64 (*_bbfa .MakeInteger (2));
_abbgc .PdfPattern ._eabcc =_abbgc ;_abbgc .PdfPattern ._cgad =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());return _abbgc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbecf pdfFontType0 )GetCharMetrics (code _efd .CharCode )(_fg .CharMetrics ,bool ){if _fbecf .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fbecf );
return _fg .CharMetrics {},false ;};return _fbecf .DescendantFont .GetCharMetrics (code );};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bbfa .PdfObject ;};

// AllFields returns a flattened list of all fields in the form.
func (_cccdb *PdfAcroForm )AllFields ()[]*PdfField {if _cccdb ==nil {return nil ;};var _eebdfc []*PdfField ;if _cccdb .Fields !=nil {for _ ,_efabd :=range *_cccdb .Fields {_eebdfc =append (_eebdfc ,_gbfbg (_efabd )...);};};return _eebdfc ;};

// SetContext sets the sub annotation (context).
func (_aedf *PdfAnnotation )SetContext (ctx PdfModel ){_aedf ._bgeb =ctx };

// IsFitWindow returns the value of the fitWindow flag.
func (_agcfc *ViewerPreferences )IsFitWindow ()bool {if _agcfc ._dbdga ==nil {return false ;};return *_agcfc ._dbdga ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dfadf *PdfPageResources )SetXObjectByName (keyName _bbfa .PdfObjectName ,stream *_bbfa .PdfObjectStream )error {if _dfadf .XObject ==nil {_dfadf .XObject =_bbfa .MakeDict ();};_egabb :=_bbfa .TraceToDirectObject (_dfadf .XObject );_bddb ,_gbcgg :=_egabb .(*_bbfa .PdfObjectDictionary );
if !_gbcgg {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dfadf .XObject ,_egabb );return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bddb .Set (keyName ,stream );return nil ;};

// WriteToFile writes the output PDF to file.
func (_dbeda *PdfWriter )WriteToFile (outputFilePath string )error {_bfeab ,_gfcffc :=_dgf .Create (outputFilePath );if _gfcffc !=nil {return _gfcffc ;};defer _bfeab .Close ();return _dbeda .Write (_bfeab );};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_ggfg *_bbfa .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_bbfa .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_bbfa .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_bbfa .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_bbfa .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_bbfa .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_bbfa .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_bbfa .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_bbfa .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_bbfa .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_bbfa .PdfObjectDictionary ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_dacdb *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_dacdb ._dcdbb =printPageRange ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cgde *PdfFieldButton )SetType (btype ButtonType ){_bggg :=uint32 (0);if _cgde .Ff !=nil {_bggg =uint32 (*_cgde .Ff );};switch btype {case ButtonTypePush :_bggg |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_bggg |=FieldFlagRadio .Mask ();
};_cgde .Ff =_bbfa .MakeInteger (int64 (_bggg ));};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dcfc *PdfPage )GetContentStreamObjs ()[]_bbfa .PdfObject {if _dcfc .Contents ==nil {return nil ;};_ddcag :=_bbfa .TraceToDirectObject (_dcfc .Contents );if _befgc ,_cfcedb :=_ddcag .(*_bbfa .PdfObjectArray );_cfcedb {return _befgc .Elements ();};
return []_bbfa .PdfObject {_ddcag };};func _cddbcf ()string {_efgcc .Lock ();defer _efgcc .Unlock ();return _fabgb };

// ToPdfObject returns the PDF representation of the function.
func (_fgeed *PdfFunctionType4 )ToPdfObject ()_bbfa .PdfObject {_fged :=_fgeed ._fcgde ;if _fged ==nil {_fgeed ._fcgde =&_bbfa .PdfObjectStream {};_fged =_fgeed ._fcgde ;};_gcdd :=_bbfa .MakeDict ();_gcdd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbfa .MakeInteger (4));
_ggbba :=&_bbfa .PdfObjectArray {};for _ ,_bcbfc :=range _fgeed .Domain {_ggbba .Append (_bbfa .MakeFloat (_bcbfc ));};_gcdd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ggbba );_dafe :=&_bbfa .PdfObjectArray {};for _ ,_egfa :=range _fgeed .Range {_dafe .Append (_bbfa .MakeFloat (_egfa ));
};_gcdd .Set ("\u0052\u0061\u006eg\u0065",_dafe );if _fgeed ._aafaf ==nil &&_fgeed .Program !=nil {_fgeed ._aafaf =[]byte (_fgeed .Program .String ());};_gcdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_fgeed ._aafaf ))));
_fged .Stream =_fgeed ._aafaf ;_fged .PdfObjectDictionary =_gcdd ;return _fged ;};

// String returns a string representation of what flags are set.
func (_bgga FieldFlag )String ()string {_fagg :="";if _bgga ==FieldFlagClear {_fagg ="\u0043\u006c\u0065a\u0072";return _fagg ;};if _bgga &FieldFlagReadOnly > 0{_fagg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bgga &FieldFlagRequired > 0{_fagg +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _bgga &FieldFlagNoExport > 0{_fagg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bgga &FieldFlagNoToggleToOff > 0{_fagg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bgga &FieldFlagRadio > 0{_fagg +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bgga &FieldFlagPushbutton > 0{_fagg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bgga &FieldFlagRadiosInUnision > 0{_fagg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bgga &FieldFlagMultiline > 0{_fagg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _bgga &FieldFlagPassword > 0{_fagg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bgga &FieldFlagFileSelect > 0{_fagg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bgga &FieldFlagDoNotScroll > 0{_fagg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _bgga &FieldFlagComb > 0{_fagg +="\u007c\u0043\u006fm\u0062";};if _bgga &FieldFlagRichText > 0{_fagg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bgga &FieldFlagDoNotSpellCheck > 0{_fagg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _bgga &FieldFlagCombo > 0{_fagg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bgga &FieldFlagEdit > 0{_fagg +="\u007c\u0045\u0064i\u0074";};if _bgga &FieldFlagSort > 0{_fagg +="\u007c\u0053\u006fr\u0074";};if _bgga &FieldFlagMultiSelect > 0{_fagg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bgga &FieldFlagCommitOnSelChange > 0{_fagg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ge .Trim (_fagg ,"\u007c");};

// GetXObjectByName gets XObject by name.
func (_bcfef *PdfPage )GetXObjectByName (name _bbfa .PdfObjectName )(_bbfa .PdfObject ,bool ){_gfbba ,_gefeb :=_bcfef .Resources .XObject .(*_bbfa .PdfObjectDictionary );if !_gefeb {return nil ,false ;};if _cbge :=_gfbba .Get (name );_cbge !=nil {return _cbge ,true ;
};return nil ,false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdfdc *PdfShadingType7 )ToPdfObject ()_bbfa .PdfObject {_fdfdc .PdfShading .ToPdfObject ();_gbge ,_ggcee :=_fdfdc .getShadingDict ();if _ggcee !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdfdc .BitsPerCoordinate !=nil {_gbge .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fdfdc .BitsPerCoordinate );};if _fdfdc .BitsPerComponent !=nil {_gbge .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdfdc .BitsPerComponent );
};if _fdfdc .BitsPerFlag !=nil {_gbge .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fdfdc .BitsPerFlag );};if _fdfdc .Decode !=nil {_gbge .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fdfdc .Decode );};if _fdfdc .Function !=nil {if len (_fdfdc .Function )==1{_gbge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdfdc .Function [0].ToPdfObject ());
}else {_egbbf :=_bbfa .MakeArray ();for _ ,_adggcf :=range _fdfdc .Function {_egbbf .Append (_adggcf .ToPdfObject ());};_gbge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egbbf );};};return _fdfdc ._facd ;};

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// GetAscent returns the Ascent of the font `descriptor`.
func (_eaaef *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bbfa .GetNumberAsFloat (_eaaef .Ascent );};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bcfab *PdfFieldButton )IsRadio ()bool {return _bcfab .GetType ()==ButtonTypeRadio };

// ToPdfObject implements interface PdfModel.
func (_abbe *PdfAnnotationMovie )ToPdfObject ()_bbfa .PdfObject {_abbe .PdfAnnotation .ToPdfObject ();_eagge :=_abbe ._dbge ;_dfefd :=_eagge .PdfObject .(*_bbfa .PdfObjectDictionary );_dfefd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u004d\u006f\u0076i\u0065"));
_dfefd .SetIfNotNil ("\u0054",_abbe .T );_dfefd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_abbe .Movie );_dfefd .SetIfNotNil ("\u0041",_abbe .A );return _eagge ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fag :=NewPdfAction ();_gfc :=&PdfActionResetForm {};_gfc .PdfAction =_fag ;_fag .SetContext (_gfc );return _gfc ;};func (_cgaba *PdfWriter )optimizeDocument ()error {if _cgaba ._dffca ==nil {return nil ;
};_ebacc ,_dagge :=_bbfa .GetDict (_cgaba ._agfdbb );if !_dagge {return _gf .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dbfbd :=_ga .Document {ID :[2]string {_cgaba ._gdbcf ,_cgaba ._cdfc },Version :_cgaba ._cbaaeg ,Objects :_cgaba ._ecdbe ,Info :_ebacc ,Crypt :_cgaba ._begfb ,UseHashBasedID :_cgaba ._egged };if _bgfg :=_cgaba ._dffca .ApplyStandard (&_dbfbd );_bgfg !=nil {return _bgfg ;
};_cgaba ._gdbcf ,_cgaba ._cdfc =_dbfbd .ID [0],_dbfbd .ID [1];_cgaba ._cbaaeg =_dbfbd .Version ;_cgaba ._ecdbe =_dbfbd .Objects ;_cgaba ._agfdbb .PdfObject =_dbfbd .Info ;_cgaba ._egged =_dbfbd .UseHashBasedID ;_cgaba ._begfb =_dbfbd .Crypt ;_fgeff :=make (map[_bbfa .PdfObject ]struct{},len (_cgaba ._ecdbe ));
for _ ,_fbacg :=range _cgaba ._ecdbe {_fgeff [_fbacg ]=struct{}{};};_cgaba ._fdaa =_fgeff ;return nil ;};

// IsColored specifies if the pattern is colored.
func (_ageb *PdfTilingPattern )IsColored ()bool {if _ageb .PaintType !=nil &&*_ageb .PaintType ==1{return true ;};return false ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_dde :=NewPdfAnnotation ();_fccd :=&PdfAnnotationHighlight {};_fccd .PdfAnnotation =_dde ;_fccd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dde .SetContext (_fccd );return _fccd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ccfcc *PdfAnnotation )GetContainingPdfObject ()_bbfa .PdfObject {return _ccfcc ._dbge };

// Encrypt encrypts the output file with a specified user/owner password.
func (_gbbac *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gbeaf :=RC4_128bit ;if options !=nil {_gbeaf =options .Algorithm ;};_bedbbg :=_fb .PermOwner ;if options !=nil {_bedbbg =options .Permissions ;};var _dfbaf _dag .Filter ;
switch _gbeaf {case RC4_128bit :_dfbaf =_dag .NewFilterV2 (16);case AES_128bit :_dfbaf =_dag .NewFilterAESV2 ();case AES_256bit :_dfbaf =_dag .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fdgdf ,_abfac ,_dfbea :=_bbfa .PdfCryptNewEncrypt (_dfbaf ,userPass ,ownerPass ,_bedbbg );if _dfbea !=nil {return _dfbea ;};_gbbac ._begfb =_fdgdf ;if _abfac .Major !=0{_gbbac .SetVersion (_abfac .Major ,_abfac .Minor );};_gbbac ._gfcfb =_abfac .Encrypt ;
_gbbac ._gdbcf ,_gbbac ._cdfc =_abfac .ID0 ,_abfac .ID1 ;_cagg :=_bbfa .MakeIndirectObject (_abfac .Encrypt );_gbbac ._agfff =_cagg ;_gbbac .addObject (_cagg );return nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_bbfa .PdfObjectArray ;ExtGState _bbfa .PdfObject ;};

// SetKDict sets the KDict for the KValue.
func (_bggea *KValue )SetKDict (kDict *KDict ){_bggea .Clear ();_bggea ._fcgfe =kDict };func (_gccca *PdfWriter )checkLicense ()error {_accge :=_dfc .GetLicenseKey ();if (_accge ==nil ||!_accge .IsLicensed ())&&!_abbfdd {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// SetFillImage attach a model.Image to push button.
func (_afbg *PdfFieldButton )SetFillImage (image *Image ){if _afbg .IsPush (){_afbg ._ddaf =image ;};};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dgdd *PdfField )ToPdfObject ()_bbfa .PdfObject {_eeec :=_dgdd ._dfeg ;_dfeb :=_eeec .PdfObject .(*_bbfa .PdfObjectDictionary );_cecbc :=_bbfa .MakeArray ();for _ ,_ffcfe :=range _dgdd .Kids {_cecbc .Append (_ffcfe .ToPdfObject ());};for _ ,_ddad :=range _dgdd .Annotations {if _ddad ._dbge !=_dgdd ._dfeg {_cecbc .Append (_ddad .GetContext ().ToPdfObject ());
};};if _dgdd .Parent !=nil {_dfeb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgdd .Parent .GetContainingPdfObject ());};if _cecbc .Len ()> 0{_dfeb .Set ("\u004b\u0069\u0064\u0073",_cecbc );};_dfeb .SetIfNotNil ("\u0046\u0054",_dgdd .FT );_dfeb .SetIfNotNil ("\u0054",_dgdd .T );
_dfeb .SetIfNotNil ("\u0054\u0055",_dgdd .TU );_dfeb .SetIfNotNil ("\u0054\u004d",_dgdd .TM );_dfeb .SetIfNotNil ("\u0046\u0066",_dgdd .Ff );_dfeb .SetIfNotNil ("\u0056",_dgdd .V );_dfeb .SetIfNotNil ("\u0044\u0056",_dgdd .DV );_dfeb .SetIfNotNil ("\u0041\u0041",_dgdd .AA );
if _dgdd .VariableText !=nil {_dfeb .SetIfNotNil ("\u0044\u0041",_dgdd .VariableText .DA );_dfeb .SetIfNotNil ("\u0051",_dgdd .VariableText .Q );_dfeb .SetIfNotNil ("\u0044\u0053",_dgdd .VariableText .DS );_dfeb .SetIfNotNil ("\u0052\u0056",_dgdd .VariableText .RV );
};return _eeec ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_efbfb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// AddCerts adds certificates to DSS.
func (_bdgc *DSS )AddCerts (certs [][]byte )([]*_bbfa .PdfObjectStream ,error ){return _bdgc .add (&_bdgc .Certs ,_bdgc ._geeg ,certs );};func (_ecg *PdfReader )newPdfAnnotationLineFromDict (_fabf *_bbfa .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gdcg :=PdfAnnotationLine {};
_adgf ,_aeca :=_ecg .newPdfAnnotationMarkupFromDict (_fabf );if _aeca !=nil {return nil ,_aeca ;};_gdcg .PdfAnnotationMarkup =_adgf ;_gdcg .L =_fabf .Get ("\u004c");_gdcg .BS =_fabf .Get ("\u0042\u0053");_gdcg .LE =_fabf .Get ("\u004c\u0045");_gdcg .IC =_fabf .Get ("\u0049\u0043");
_gdcg .LL =_fabf .Get ("\u004c\u004c");_gdcg .LLE =_fabf .Get ("\u004c\u004c\u0045");_gdcg .Cap =_fabf .Get ("\u0043\u0061\u0070");_gdcg .IT =_fabf .Get ("\u0049\u0054");_gdcg .LLO =_fabf .Get ("\u004c\u004c\u004f");_gdcg .CP =_fabf .Get ("\u0043\u0050");
_gdcg .Measure =_fabf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_gdcg .CO =_fabf .Get ("\u0043\u004f");return &_gdcg ,nil ;};func _feedd (_bced *_bbfa .PdfObjectDictionary )(*PdfFieldButton ,error ){_fbbdf :=&PdfFieldButton {};_fbbdf .PdfField =NewPdfField ();
_fbbdf .PdfField .SetContext (_fbbdf );_fbbdf .Opt ,_ =_bbfa .GetArray (_bced .Get ("\u004f\u0070\u0074"));_ecdg :=NewPdfAnnotationWidget ();_ecdg .A ,_ =_bbfa .GetDict (_bced .Get ("\u0041"));_ecdg .AP ,_ =_bbfa .GetDict (_bced .Get ("\u0041\u0050"));
_ecdg .SetContext (_fbbdf );_fbbdf .PdfField .Annotations =append (_fbbdf .PdfField .Annotations ,_ecdg );return _fbbdf ,nil ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_bbfa .PdfObjectArray ;ExtGState _bbfa .PdfObject ;};func (_eeab *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_eacb *Image )SetSamples (samples []uint32 ){if _eacb .BitsPerComponent < 8{samples =_eacb .samplesAddPadding (samples );};_bdeg :=_cgb .ResampleUint32 (samples ,int (_eacb .BitsPerComponent ),8);_afgda :=make ([]byte ,len (_bdeg ));for _cecae ,_dfdgga :=range _bdeg {_afgda [_cecae ]=byte (_dfdgga );
};_eacb .Data =_afgda ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gecc :=&PdfColorspaceCalRGB {};_gecc .BlackPoint =[]float64 {0.0,0.0,0.0};_gecc .Gamma =[]float64 {1.0,1.0,1.0};_gecc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gecc ;};

// SetContext set the sub annotation (context).
func (_cbad *PdfShading )SetContext (ctx PdfModel ){_cbad ._bagea =ctx };func _befa (_adbae _bbfa .PdfObject )(*PdfPattern ,error ){_edaeb :=&PdfPattern {};var _dfebb *_bbfa .PdfObjectDictionary ;if _afcda ,_bfefa :=_bbfa .GetIndirect (_adbae );_bfefa {_edaeb ._cgad =_afcda ;
_baegg ,_eafbf :=_afcda .PdfObject .(*_bbfa .PdfObjectDictionary );if !_eafbf {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_afcda .PdfObject );
return nil ,_bbfa .ErrTypeError ;};_dfebb =_baegg ;}else if _ggddce ,_ffgdc :=_bbfa .GetStream (_adbae );_ffgdc {_edaeb ._cgad =_ggddce ;_dfebb =_ggddce .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_adbae );
return nil ,_bbfa .ErrTypeError ;};_caaba :=_dfebb .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _caaba ==nil {_df .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cegcc ,_afbc :=_caaba .(*_bbfa .PdfObjectInteger );if !_afbc {_df .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_caaba );
return nil ,_bbfa .ErrTypeError ;};if *_cegcc !=1&&*_cegcc !=2{_df .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cegcc );return nil ,_bbfa .ErrRangeError ;
};_edaeb .PatternType =int64 (*_cegcc );switch *_cegcc {case 1:_gdeb ,_dfefa :=_facgc (_dfebb );if _dfefa !=nil {return nil ,_dfefa ;};_gdeb .PdfPattern =_edaeb ;_edaeb ._eabcc =_gdeb ;return _edaeb ,nil ;case 2:_fcba ,_ggcfg :=_deefg (_dfebb );if _ggcfg !=nil {return nil ,_ggcfg ;
};_fcba .PdfPattern =_edaeb ;_edaeb ._eabcc =_fcba ;return _edaeb ,nil ;};return nil ,_gf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_bagggc *PdfWriter )checkPendingObjects (){for _gcdad ,_ccfea :=range _bagggc ._fgfff {if !_bagggc .hasObject (_gcdad ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_gcdad ,_gcdad ,_gcdad );
for _ ,_bdffg :=range _ccfea {for _ ,_fadec :=range _bdffg .Keys (){_bgcag :=_bdffg .Get (_fadec );if _bgcag ==_gcdad {_df .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bdffg .Set (_fadec ,_bbfa .MakeNull ());break ;};};};};};};func (_caf *PdfAnnotation )String ()string {_ebb :="";_gbb ,_eda :=_caf .ToPdfObject ().(*_bbfa .PdfIndirectObject );if _eda {_ebb =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_caf ._bgeb ,_gbb .PdfObject .String ());
};return _ebb ;};

// ToPdfObject implements interface PdfModel.
func (_cgab *PdfAnnotationHighlight )ToPdfObject ()_bbfa .PdfObject {_cgab .PdfAnnotation .ToPdfObject ();_dcgg :=_cgab ._dbge ;_dfcc :=_dcgg .PdfObject .(*_bbfa .PdfObjectDictionary );_cgab .PdfAnnotationMarkup .appendToPdfDictionary (_dfcc );_dfcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_dfcc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgab .QuadPoints );return _dcgg ;};type pdfCIDFontType2 struct{fontCommon ;_fecacc *_bbfa .PdfIndirectObject ;_dacc _efd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bbfa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbfa .PdfObject ;W _bbfa .PdfObject ;DW2 _bbfa .PdfObject ;W2 _bbfa .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bbfa .PdfObject ;_bafe map[_efd .CharCode ]float64 ;_dgbfc float64 ;_baggg map[rune ]int ;};func (_dcbad *PdfReader )newPdfOutlineItemFromIndirectObject (_dbbaab *_bbfa .PdfIndirectObject )(*PdfOutlineItem ,error ){_adfcb ,_gfegc :=_dbbaab .PdfObject .(*_bbfa .PdfObjectDictionary );
if !_gfegc {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_abeca :=NewPdfOutlineItem ();_adcgd :=_adfcb .Get ("\u0054\u0069\u0074l\u0065");
if _adcgd ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_dfgffb ,_dbae :=_bbfa .GetString (_adcgd );if !_dbae {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_adcgd );};_abeca .Title =_dfgffb ;if _ddda :=_adfcb .Get ("\u0043\u006f\u0075n\u0074");
_ddda !=nil {_ffebf ,_ebcfc :=_ddda .(*_bbfa .PdfObjectInteger );if !_ebcfc {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ddda );};_fagfe :=int64 (*_ffebf );
_abeca .Count =&_fagfe ;};if _cedec :=_adfcb .Get ("\u0044\u0065\u0073\u0074");_cedec !=nil {_abeca .Dest =_bbfa .ResolveReference (_cedec );if !_dcbad ._bbbee {_aceb :=_dcbad .traverseObjectData (_abeca .Dest );if _aceb !=nil {return nil ,_aceb ;};};};
if _cdcde :=_adfcb .Get ("\u0041");_cdcde !=nil {_abeca .A =_bbfa .ResolveReference (_cdcde );if !_dcbad ._bbbee {_gffb :=_dcbad .traverseObjectData (_abeca .A );if _gffb !=nil {return nil ,_gffb ;};};};if _fcgdeb :=_adfcb .Get ("\u0053\u0045");_fcgdeb !=nil {_abeca .SE =nil ;
};if _abccb :=_adfcb .Get ("\u0043");_abccb !=nil {_abeca .C =_bbfa .ResolveReference (_abccb );};if _dafec :=_adfcb .Get ("\u0046");_dafec !=nil {_abeca .F =_bbfa .ResolveReference (_dafec );};return _abeca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cac *PdfActionHide )ToPdfObject ()_bbfa .PdfObject {_cac .PdfAction .ToPdfObject ();_cef :=_cac ._ff ;_gab :=_cef .PdfObject .(*_bbfa .PdfObjectDictionary );_gab .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeHide )));_gab .SetIfNotNil ("\u0054",_cac .T );
_gab .SetIfNotNil ("\u0048",_cac .H );return _cef ;};var _ pdfFont =(*pdfFontType3 )(nil );const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gabcf ,_bdbda :=_dgf .Open (filePath );if _bdbda !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bdbda );
return nil ,_bdbda ;};defer _gabcf .Close ();return NewPdfFontFromTTF (_gabcf );};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bbc :=NewPdfAction ();_ccfc :=&PdfActionJavaScript {};_ccfc .PdfAction =_bbc ;_bbc .SetContext (_ccfc );return _ccfc ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bbfa .PdfObjectString ;Author *_bbfa .PdfObjectString ;Subject *_bbfa .PdfObjectString ;Keywords *_bbfa .PdfObjectString ;Creator *_bbfa .PdfObjectString ;Producer *_bbfa .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bbfa .PdfObjectName ;_gaga *_bbfa .PdfObjectDictionary ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_efae *PdfInfo )ToPdfObject ()_bbfa .PdfObject {_dcae :=_bbfa .MakeDict ();_dcae .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_efae .Title );_dcae .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_efae .Author );_dcae .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_efae .Subject );
_dcae .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_efae .Keywords );_dcae .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_efae .Creator );_dcae .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_efae .Producer );
_dcae .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_efae .Trapped );if _efae .CreationDate !=nil {_dcae .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_efae .CreationDate .ToPdfObject ());};if _efae .ModifiedDate !=nil {_dcae .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_efae .ModifiedDate .ToPdfObject ());
};for _ ,_fdcff :=range _efae ._gaga .Keys (){_dcae .SetIfNotNil (_fdcff ,_efae ._gaga .Get (_fdcff ));};return _dcae ;};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_bbfa .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_bbfa .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dcebd *PdfReader )GetNameDictionary ()(_bbfa .PdfObject ,error ){_gafdf :=_bbfa .ResolveReference (_dcebd ._abdcg .Get ("\u004e\u0061\u006de\u0073"));if _gafdf ==nil {return nil ,nil ;};if !_dcebd ._bbbee {_bffga :=_dcebd .traverseObjectData (_gafdf );
if _bffga !=nil {return nil ,_bffga ;};};return _gafdf ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bbfa .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _acga *_bbfa .PdfIndirectObject ;var _gba *_bbfa .PdfObjectName ;var _ceed *_bbfa .PdfObjectArray ;if _accd ,_dgbg :=obj .(*_bbfa .PdfIndirectObject );
_dgbg {_acga =_accd ;};obj =_bbfa .TraceToDirectObject (obj );switch _fcae :=obj .(type ){case *_bbfa .PdfObjectArray :_ceed =_fcae ;case *_bbfa .PdfObjectName :_gba =_fcae ;};if _gba !=nil {switch *_gba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gba );return nil ,_cfca ;};};if _ceed !=nil &&_ceed .Len ()> 0{var _ggga _bbfa .PdfObject =_acga ;
if _acga ==nil {_ggga =_ceed ;};if _fcdc ,_cdfd :=_bbfa .GetName (_ceed .Get (0));_cdfd {switch _fcdc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _ceed .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _ceed .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ceed .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ddec (_ggga );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _adada (_ggga );
case "\u004c\u0061\u0062":return _dfdcc (_ggga );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cegg (_ggga );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _aead (_ggga );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cedd (_ggga );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dggbe (_ggga );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bbdee (_ggga );default:_df .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_fcdc );
};};};_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// Tab order types.
type TabOrderType string ;

// A returns the value of the A component of the color.
func (_bgfe *PdfColorCalRGB )A ()float64 {return _bgfe [0]};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bbed *pdfCIDFontType2 )ToPdfObject ()_bbfa .PdfObject {if _bbed ._fecacc ==nil {_bbed ._fecacc =&_bbfa .PdfIndirectObject {};};_bfbb :=_bbed .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_bbed ._fecacc .PdfObject =_bfbb ;if _bbed .CIDSystemInfo !=nil {_bfbb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bbed .CIDSystemInfo );};if _bbed .DW !=nil {_bfbb .Set ("\u0044\u0057",_bbed .DW );};if _bbed .DW2 !=nil {_bfbb .Set ("\u0044\u0057\u0032",_bbed .DW2 );
};if _bbed .W !=nil {_bfbb .Set ("\u0057",_bbed .W );};if _bbed .W2 !=nil {_bfbb .Set ("\u0057\u0032",_bbed .W2 );};if _bbed .CIDToGIDMap !=nil {_bfbb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bbed .CIDToGIDMap );};return _bbed ._fecacc ;
};func _fgcef (_aedcg _bbfa .PdfObject ,_ccggdf _bbfa .PdfObject ,_bgdcg map[_bbfa .PdfObject ][]_bbfa .PdfObject ,_afdea map[string ]_bbfa .PdfObject ,_addbg *[]_bbfa .PdfObject ){var _geacf *_bbfa .PdfIndirectObject ;if _gddac ,_gffe :=_bbfa .GetIndirect (_aedcg );
_gffe {_geacf =_gddac ;_aedcg =_gddac .PdfObject ;};switch _bfea :=_aedcg .(type ){case *_bbfa .PdfObjectDictionary :if _bfea .Get ("\u0053")==nil {return ;};_bfea .Set ("\u0050",_ccggdf );if _abegb :=_bfea .Get ("\u0050\u0067");_abegb !=nil {if _edba ,_gcbc :=_bbfa .GetIndirect (_abegb );
_gcbc &&_edba !=nil &&_edba .PdfObject !=nil {_bgdcg [_abegb ]=append (_bgdcg [_abegb ],_geacf );};};if _ccedg :=_bfea .Get ("\u0053");_ccedg !=nil {if _aeede ,_fbbda :=_bbfa .GetNameVal (_ccedg );_fbbda {if _aeede ==StructureTypeLink {if _ggcdg :=_bfea .Get ("\u004b");
_ggcdg !=nil {if _aeecf ,_fegcg :=_bbfa .GetArray (_ggcdg );_fegcg &&_aeecf .Len ()==2{_bcgbc :=false ;_gfagf :=false ;for _ ,_cbaac :=range _aeecf .Elements (){if _gbddbf ,_bbef :=_bbfa .GetDict (_cbaac );_bbef {if _fbafb ,_adagd :=_bbfa .GetName (_gbddbf .Get ("\u0054\u0079\u0070\u0065"));
_adagd &&_fbafb .String ()=="\u004f\u0042\u004a\u0052"{_gfagf =true ;};}else if _ ,_eedea :=_bbfa .GetInt (_cbaac );_eedea {_bcgbc =true ;};};if _bcgbc &&_gfagf {*_addbg =append (*_addbg ,_geacf );};}else if _gbaee ,_cebfc :=_bbfa .GetDict (_ggcdg );_cebfc {if _aefeg ,_bdfba :=_bbfa .GetName (_gbaee .Get ("\u0054\u0079\u0070\u0065"));
_bdfba &&_aefeg .String ()=="\u004f\u0042\u004a\u0052"{*_addbg =append (*_addbg ,_geacf );};};};};};};if _cdeed :=_bfea .Get ("\u0049\u0044");_cdeed !=nil {_afdea [_cdeed .String ()]=_aedcg ;};if _eaebd :=_bfea .Get ("\u004b");_eaebd !=nil {_fgcef (_eaebd ,_geacf ,_bgdcg ,_afdea ,_addbg );
};case *_bbfa .PdfObjectArray :for _ ,_dffdb :=range _bfea .Elements (){_fgcef (_dffdb ,_ccggdf ,_bgdcg ,_afdea ,_addbg );};default:};};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dad :=NewPdfAnnotation ();_cbf :=&PdfAnnotationSquiggly {};_cbf .PdfAnnotation =_dad ;_cbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dad .SetContext (_cbf );return _cbf ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dbga :=NewPdfAction ();_ccf :=&PdfActionSetOCGState {};_ccf .PdfAction =_dbga ;_dbga .SetContext (_ccf );return _ccf ;};func (_fdbeb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_fdbeb .fontCommon };
func (_fffbb *PdfPattern )getDict ()*_bbfa .PdfObjectDictionary {if _eddea ,_ebbbag :=_fffbb ._cgad .(*_bbfa .PdfIndirectObject );_ebbbag {_aacdec ,_acfe :=_eddea .PdfObject .(*_bbfa .PdfObjectDictionary );if !_acfe {return nil ;};return _aacdec ;}else if _bgdef ,_aacfg :=_fffbb ._cgad .(*_bbfa .PdfObjectStream );
_aacfg {return _bgdef .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fffbb ._cgad );
return nil ;};};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ebede PdfModel ;_dfeg *_bbfa .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bbfa .PdfObjectName ;T *_bbfa .PdfObjectString ;TU *_bbfa .PdfObjectString ;TM *_bbfa .PdfObjectString ;
Ff *_bbfa .PdfObjectInteger ;V _bbfa .PdfObject ;DV _bbfa .PdfObject ;AA _bbfa .PdfObject ;VariableText *VariableText ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gdfeg :map[_bbfa .PdfObject ]struct{}{},_accb :_cadgb (),_fdefeb :_bbfa .NewParserFromString (txt )};};

// StdFontName represents name of a standard font.
type StdFontName =_fg .StdFontName ;

// GetContainingPdfObject implements interface PdfModel.
func (_ebegc *PdfSignatureReference )GetContainingPdfObject ()_bbfa .PdfObject {return _ebegc ._egbgd };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bead *PdfReader )GetOutlines ()(*Outline ,error ){if _bead ==nil {return nil ,_gf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dgcbd :=_bead .GetOutlineTree ();if _dgcbd ==nil {return nil ,_gf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _eagbb func (_acgfg *PdfOutlineTreeNode ,_afff *[]*OutlineItem );_eagbb =func (_fcab *PdfOutlineTreeNode ,_acbee *[]*OutlineItem ){if _fcab ==nil {return ;};if _fcab ._cedfc ==nil {_df .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _geeag *OutlineItem ;if _abecb ,_bddga :=_fcab ._cedfc .(*PdfOutlineItem );_bddga {_ceebf :=_abecb .Dest ;if (_ceebf ==nil ||_bbfa .IsNullObject (_ceebf ))&&_abecb .A !=nil {if _acbg ,_babc :=_bbfa .GetDict (_abecb .A );_babc {if _gadebb ,_bcega :=_bbfa .GetArray (_acbg .Get ("\u0044"));
_bcega {_ceebf =_gadebb ;}else {_cabfb ,_fcbfda :=_bbfa .GetString (_acbg .Get ("\u0044"));if !_fcbfda {return ;};_dgdef ,_fcbfda :=_bead ._abdcg .Get ("\u004e\u0061\u006de\u0073").(*_bbfa .PdfObjectReference );if !_fcbfda {return ;};_ececfa ,_cgeec :=_bead ._fdefeb .LookupByReference (*_dgdef );
if _cgeec !=nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_cgeec .Error ());
return ;};_accca ,_fcbfda :=_ececfa .(*_bbfa .PdfIndirectObject );if !_fcbfda {return ;};_dfaf :=map[_bbfa .PdfObject ]struct{}{};_cgeec =_bead .buildNameNodes (_accca ,_dfaf );if _cgeec !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_cgeec .Error ());
return ;};for _caga :=range _dfaf {_bcgfa ,_bggdf :=_bbfa .GetDict (_caga );if !_bggdf {continue ;};_dcdbc ,_bggdf :=_bbfa .GetArray (_bcgfa .Get ("\u004e\u0061\u006de\u0073"));if !_bggdf {continue ;};for _ggbbc ,_ddecde :=range _dcdbc .Elements (){switch _ddecde .(type ){case *_bbfa .PdfObjectString :if _ddecde .String ()==_cabfb .String (){if _dgdab :=_dcdbc .Get (_ggbbc +1);
_dgdab !=nil {if _gdcf ,_dfdga :=_bbfa .GetDict (_dgdab );_dfdga {_ceebf =_gdcf .Get ("\u0044");break ;};};};};};};};};};var _ebfdf OutlineDest ;if _ceebf !=nil &&!_bbfa .IsNullObject (_ceebf ){if _eaegc ,_abcgc :=_eacfc (_ceebf ,_bead );_abcgc ==nil {_ebfdf =*_eaegc ;
}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_ceebf ,_abcgc );
};};_geeag =NewOutlineItem (_abecb .Title .Decoded (),_ebfdf );*_acbee =append (*_acbee ,_geeag );if _abecb .Next !=nil {_eagbb (_abecb .Next ,_acbee );};};if _fcab .First !=nil {if _geeag !=nil {_acbee =&_geeag .Entries ;};_eagbb (_fcab .First ,_acbee );
};};_cadgc :=NewOutline ();_eagbb (_dgcbd ,&_cadgc .Entries );return _cadgc ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_agfdb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fgega :=_cgb .NewReader (img .getBase ());_dede :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._eccdd ,img ._acgd );
_agge :=_cgb .NewWriter (_dede );_ceebe :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;_dcecd :=_agfdb .GetNumComponents ();_bcbb :=make ([]uint32 ,_dcecd );_ecbg :=make ([]float64 ,_dcecd );for {_accdf :=_fgega .ReadSamples (_bcbb );if _accdf ==_cb .EOF {break ;
}else if _accdf !=nil {return img ,_accdf ;};for _egaf :=0;_egaf < _dcecd ;_egaf ++{_agad :=float64 (_bcbb [_egaf ])/_ceebe ;_ecbg [_egaf ]=_agad ;};_dgcdc ,_accdf :=_agfdb .TintTransform .Evaluate (_ecbg );if _accdf !=nil {return img ,_accdf ;};for _ ,_fbdg :=range _dgcdc {_fbdg =_dg .Min (_dg .Max (0,_fbdg ),1.0);
if _accdf =_agge .WriteSample (uint32 (_fbdg *_ceebe ));_accdf !=nil {return img ,_accdf ;};};};return _agfdb .AlternateSpace .ImageToRGB (_ebdgf (&_dede ));};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_efdb :=&PdfBorderStyle {};return _efdb };

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_gbcgf *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_gbcgf ._dbcge =nonFullScreenPageMode ;};func (_fegde *PdfWriter )writeObjectsInStreams (_bcbae map[_bbfa .PdfObject ]bool )error {for _ ,_fbfffb :=range _fegde ._ecdbe {if _ffbga :=_bcbae [_fbfffb ];
_ffbga {continue ;};_cbegb :=int64 (0);switch _efeaf :=_fbfffb .(type ){case *_bbfa .PdfIndirectObject :_cbegb =_efeaf .ObjectNumber ;case *_bbfa .PdfObjectStream :_cbegb =_efeaf .ObjectNumber ;case *_bbfa .PdfObjectStreams :_cbegb =_efeaf .ObjectNumber ;
case *_bbfa .PdfObjectDictionary ,*_bbfa .PdfObjectString :default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_fbfffb ,_efeaf );
return ErrTypeCheck ;};if _fegde ._begfb !=nil &&_fbfffb !=_fegde ._agfff {_geagf :=_fegde ._begfb .Encrypt (_fbfffb ,_cbegb ,0);if _geagf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_geagf );
return _geagf ;};};_fegde .writeObject (int (_cbegb ),_fbfffb );};return nil ;};

// GetChildren returns the children of the K dictionary object.
func (_gcfcd *KDict )GetChildren ()[]*KValue {return _gcfcd ._cbag };

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_aadd *PdfOutlineItem )GetContainingPdfObject ()_bbfa .PdfObject {return _aadd ._efffa };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cbege *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_badc :=vals [0];if _badc < 0.0||_badc > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_badc );
return nil ,ErrColorOutOfRange ;};_fcfee :=NewPdfColorCalGray (_badc );return _fcfee ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_deaagc *PdfWriter )SetForms (form *PdfAcroForm )error {_deaagc ._gdgfd =form ;return nil };

// ToPdfObject returns the PDF representation of the colorspace.
func (_caea *PdfColorspaceDeviceCMYK )ToPdfObject ()_bbfa .PdfObject {return _bbfa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_bbdd *PdfReader )newPdfAnnotationPolyLineFromDict (_eebb *_bbfa .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_def :=PdfAnnotationPolyLine {};
_dacg ,_ebfg :=_bbdd .newPdfAnnotationMarkupFromDict (_eebb );if _ebfg !=nil {return nil ,_ebfg ;};_def .PdfAnnotationMarkup =_dacg ;_def .Vertices =_eebb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_def .LE =_eebb .Get ("\u004c\u0045");_def .BS =_eebb .Get ("\u0042\u0053");
_def .IC =_eebb .Get ("\u0049\u0043");_def .BE =_eebb .Get ("\u0042\u0045");_def .IT =_eebb .Get ("\u0049\u0054");_def .Measure =_eebb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_def ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_baegc *DSS )GetContainingPdfObject ()_bbfa .PdfObject {return _baegc ._bbca };

// ToPdfObject implements interface PdfModel.
func (_bbeb *PdfAnnotationProjection )ToPdfObject ()_bbfa .PdfObject {_bbeb .PdfAnnotation .ToPdfObject ();_ggef :=_bbeb ._dbge ;_fdc :=_ggef .PdfObject .(*_bbfa .PdfObjectDictionary );_bbeb .PdfAnnotationMarkup .appendToPdfDictionary (_fdc );return _ggef ;
};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_dgdcb *PdfPageResources )GetContainingPdfObject ()_bbfa .PdfObject {return _dgdcb ._gddca };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bbfa .PdfObject ;_aadc []byte ;_agcgg *_bbfa .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_feffc *PdfPageResourcesColorspaces )ToPdfObject ()_bbfa .PdfObject {_gbdaf :=_bbfa .MakeDict ();for _ ,_fgaga :=range _feffc .Names {_gbdaf .Set (_bbfa .PdfObjectName (_fgaga ),_feffc .Colorspaces [_fgaga ].ToPdfObject ());};if _feffc ._ggccg !=nil {_feffc ._ggccg .PdfObject =_gbdaf ;
return _feffc ._ggccg ;};return _gbdaf ;};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_afgbf *PdfWriter )SetCatalogStructTreeRoot (tree _bbfa .PdfObject )error {if tree ==nil {_afgbf ._cgfbd .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_afgbf ._cgfbd .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _afgbf .addObjects (tree );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_baec *PdfFieldChoice )ToPdfObject ()_bbfa .PdfObject {_baec .PdfField .ToPdfObject ();_fadcf :=_baec ._dfeg ;_dgdec :=_fadcf .PdfObject .(*_bbfa .PdfObjectDictionary );_dgdec .Set ("\u0046\u0054",_bbfa .MakeName ("\u0043\u0068"));if _baec .Opt !=nil {_dgdec .Set ("\u004f\u0070\u0074",_baec .Opt );
};if _baec .TI !=nil {_dgdec .Set ("\u0054\u0049",_baec .TI );};if _baec .I !=nil {_dgdec .Set ("\u0049",_baec .I );};return _fadcf ;};

// ToPdfObject implements interface PdfModel.
func (_dgac *EmbeddedFile )ToPdfObject ()_bbfa .PdfObject {_cdeb :=_bbfa .NewFlateEncoder ();_bedcg ,_dgbe :=_bbfa .MakeStream (_dgac .Content ,_cdeb );if _dgbe !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dgbe );
return nil ;};_cgeea :=_bedcg .PdfObjectDictionary ;_cgeea .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_cgeea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_fdef :=_bbfa .MakeDict ();_fdef .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_bbfa .MakeString (_dgac .Hash [:]));_fdef .Set ("\u0053\u0069\u007a\u0065",_bbfa .MakeInteger (int64 (len (_dgac .Content ))));_bcbf :=_dgac .CreationTime ;if _bcbf .IsZero (){_bcbf =_ea .Now ();
};_gcfgg :=_dgac .ModTime ;if _gcfgg .IsZero (){_gcfgg =_bcbf ;};_bggdg ,_dgbe :=NewPdfDateFromTime (_bcbf );if _dgbe !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dgbe );
return nil ;};_eaaec ,_dgbe :=NewPdfDateFromTime (_gcfgg );if _dgbe !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dgbe );
return nil ;};_fdef .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bggdg .ToPdfObject ());_fdef .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_eaaec .ToPdfObject ());_cgeea .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_fdef );
_bfba :=_bbfa .MakeDict ();_bfba .Set (*_bbfa .MakeName ("\u0046"),_bedcg );return _bfba ;};func _adada (_bdgfb _bbfa .PdfObject )(*PdfColorspaceCalRGB ,error ){_efegf :=NewPdfColorspaceCalRGB ();if _cfbcf ,_cedgb :=_bdgfb .(*_bbfa .PdfIndirectObject );
_cedgb {_efegf ._cgga =_cfbcf ;};_bdgfb =_bbfa .TraceToDirectObject (_bdgfb );_gdff ,_ffdce :=_bdgfb .(*_bbfa .PdfObjectArray );if !_ffdce {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdff .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bdgfb =_bbfa .TraceToDirectObject (_gdff .Get (0));_ebeae ,_ffdce :=_bdgfb .(*_bbfa .PdfObjectName );if !_ffdce {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_ebeae !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bdgfb =_bbfa .TraceToDirectObject (_gdff .Get (1));
_adgda ,_ffdce :=_bdgfb .(*_bbfa .PdfObjectDictionary );if !_ffdce {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_bdgfb =_adgda .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bdgfb =_bbfa .TraceToDirectObject (_bdgfb );_cgfdf ,_ffdce :=_bdgfb .(*_bbfa .PdfObjectArray );if !_ffdce {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cgfdf .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gdda ,_bdaa :=_cgfdf .GetAsFloat64Slice ();
if _bdaa !=nil {return nil ,_bdaa ;};_efegf .WhitePoint =_gdda ;_bdgfb =_adgda .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bdgfb !=nil {_bdgfb =_bbfa .TraceToDirectObject (_bdgfb );_aege ,_dgfbg :=_bdgfb .(*_bbfa .PdfObjectArray );
if !_dgfbg {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _aege .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_bfee ,_afag :=_aege .GetAsFloat64Slice ();if _afag !=nil {return nil ,_afag ;};_efegf .BlackPoint =_bfee ;};_bdgfb =_adgda .Get ("\u0047\u0061\u006dm\u0061");if _bdgfb !=nil {_bdgfb =_bbfa .TraceToDirectObject (_bdgfb );_gfagec ,_bdgfg :=_bdgfb .(*_bbfa .PdfObjectArray );
if !_bdgfg {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _gfagec .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_acgg ,_defg :=_gfagec .GetAsFloat64Slice ();if _defg !=nil {return nil ,_defg ;};_efegf .Gamma =_acgg ;};_bdgfb =_adgda .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bdgfb !=nil {_bdgfb =_bbfa .TraceToDirectObject (_bdgfb );_adcgb ,_ddbd :=_bdgfb .(*_bbfa .PdfObjectArray );
if !_ddbd {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _adcgb .Len ()!=9{_df .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_adcgb .String ());
return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_gagc ,_edeg :=_adcgb .GetAsFloat64Slice ();if _edeg !=nil {return nil ,_edeg ;
};_efegf .Matrix =_gagc ;};return _efegf ,nil ;};func (_dfdd *PdfAppender )mergeResources (_ecfc ,_agfd _bbfa .PdfObject ,_bdba map[_bbfa .PdfObjectName ]_bbfa .PdfObjectName )_bbfa .PdfObject {if _agfd ==nil &&_ecfc ==nil {return nil ;};if _agfd ==nil {return _ecfc ;
};_bfga ,_ccfg :=_bbfa .GetDict (_agfd );if !_ccfg {return _ecfc ;};if _ecfc ==nil {_edag :=_bbfa .MakeDict ();_edag .Merge (_bfga );return _agfd ;};_adfa ,_ccfg :=_bbfa .GetDict (_ecfc );if !_ccfg {_df .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_adfa =_bbfa .MakeDict ();};for _ ,_bfgf :=range _bfga .Keys (){if _cgdff ,_acgb :=_bdba [_bfgf ];_acgb {_adfa .Set (_cgdff ,_bfga .Get (_bfgf ));}else {_adfa .Set (_bfgf ,_bfga .Get (_bfgf ));};};return _adfa ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bbfa .PdfObjectName ;P *_bbfa .PdfObjectInteger ;V *_bbfa .PdfObjectName ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bbfa .PdfIndirectObject ;SV *_bbfa .PdfIndirectObject ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _bbfa .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _bbfa .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_bbfa .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _bbfa .PdfObject ;

// The children of this structure element.
K _bbfa .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _bbfa .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _bbfa .PdfObject ;

// The current revision number of this structure element
R *_bbfa .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_bbfa .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_bbfa .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_bbfa .PdfObjectString ;

// The expanded form of an abbreviation.
E *_bbfa .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_bbfa .PdfObjectString ;_cbag []*KValue ;_ecdbc int64 ;_eaddd *PdfRectangle ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_egeag :=&PdfColorspaceLab {};_egeag .BlackPoint =[]float64 {0.0,0.0,0.0};_egeag .Range =[]float64 {-100,100,-100,100};return _egeag ;};

// ToPdfObject implements interface PdfModel.
func (_gea *PdfActionImportData )ToPdfObject ()_bbfa .PdfObject {_gea .PdfAction .ToPdfObject ();_dfa :=_gea ._ff ;_ebd :=_dfa .PdfObject .(*_bbfa .PdfObjectDictionary );_ebd .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeImportData )));if _gea .F !=nil {_ebd .Set ("\u0046",_gea .F .ToPdfObject ());
};return _dfa ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ecaa :=&PdfColorspaceCalGray {};_ecaa .BlackPoint =[]float64 {0.0,0.0,0.0};_ecaa .Gamma =1;return _ecaa ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dacf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bccd *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _afcbf []*PdfField ;if _bccd .AcroForm !=nil {_afcbf =_bccd .AcroForm .AllFields ();};_eaaccd :=make (map[*PdfField ]struct{},len (_afcbf ));for _ ,_baaaa :=range _afcbf {_eaaccd [_baaaa ]=struct{}{};
};for _ ,_cccf :=range _bccd .PageList {_bgbad ,_dffd :=_cccf .GetAnnotations ();if _dffd !=nil {return false ,_dffd ;};for _ ,_efccd :=range _bgbad {_agaccc ,_facbf :=_efccd .GetContext ().(*PdfAnnotationWidget );if !_facbf {continue ;};_aecae :=_agaccc .Field ();
if _aecae ==nil {return true ,nil ;};if _ ,_bgaeg :=_eaaccd [_aecae ];!_bgaeg {return true ,nil ;};};};return false ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_efacd *XObjectForm )GetContentStream ()([]byte ,error ){_gdaacc ,_bcfcfg :=_bbfa .DecodeStream (_efacd ._cdbdc );if _bcfcfg !=nil {return nil ,_bcfcfg ;};return _gdaacc ,nil ;};

// SetRefObject sets the reference object for the KValue.
func (_eaadg *KValue )SetRefObject (refObject _bbfa .PdfObject ){_eaadg .Clear ();_eaadg ._ffbe =refObject ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bbfa .PdfObjectArray ;_ddaf *Image ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_geccb Image )getBase ()_bbf .ImageBase {return _bbf .NewImageBase (int (_geccb .Width ),int (_geccb .Height ),int (_geccb .BitsPerComponent ),_geccb .ColorComponents ,_geccb .Data ,_geccb ._eccdd ,_geccb ._acgd );
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_efdec *PdfColorspaceLab )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fddd ,_fbec :=_bbfa .GetNumbersAsFloat (objects );
if _fbec !=nil {return nil ,_fbec ;};return _efdec .ColorFromFloats (_fddd );};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gefbac *PdfPage )Size ()(float64 ,float64 ,error ){_cfggb ,_adacd :=_gefbac .GetMediaBox ();if _adacd !=nil {return 0,0,_adacd ;};_cbbba ,_fdggga :=_cfggb .Width (),_cfggb .Height ();_ffbdd ,_adacd :=_gefbac .GetRotate ();if _adacd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_adacd .Error ());
};if _gfbbbg :=_ffbdd ;_gfbbbg %360!=0&&_gfbbbg %90==0{if _bfbe :=(360+_gfbbbg %360)%360;_bfbe ==90||_bfbe ==270{_cbbba ,_fdggga =_fdggga ,_cbbba ;};};return _cbbba ,_fdggga ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fd :=NewPdfAction ();_caa :=&PdfActionRendition {};_caa .PdfAction =_fd ;_fd .SetContext (_caa );return _caa ;};func (_fcca *PdfWriter )adjustXRefAffectedVersion (_acfca bool ){if _acfca &&_fcca ._cbaaeg .Major ==1&&_fcca ._cbaaeg .Minor < 5{_fcca ._cbaaeg .Minor =5;
};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bgfeg *PdfShadingPatternType2 )ToPdfObject ()_bbfa .PdfObject {_bgfeg .PdfPattern .ToPdfObject ();_abbbf :=_bgfeg .getDict ();if _bgfeg .Shading !=nil {_abbbf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bgfeg .Shading .ToPdfObject ());};if _bgfeg .Matrix !=nil {_abbbf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgfeg .Matrix );
};if _bgfeg .ExtGState !=nil {_abbbf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bgfeg .ExtGState );};return _bgfeg ._cgad ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_abaae *_bbfa .PdfIndirectObject ;_fcbdd *_bbfa .PdfIndirectObject ;_bdceaa map[_bbfa .PdfObject ]struct{};_gfddc []*_bbfa .PdfIndirectObject ;_ecdbe []_bbfa .PdfObject ;_fdaa map[_bbfa .PdfObject ]struct{};_fgcfc []*_bbfa .PdfIndirectObject ;
_bggced *PdfOutlineTreeNode ;_cgfbd *_bbfa .PdfObjectDictionary ;_egcde []_bbfa .PdfObject ;_agfdbb *_bbfa .PdfIndirectObject ;_gdcce *_bb .Writer ;_efebf int64 ;_efgab error ;_begfb *_bbfa .PdfCrypt ;_gfcfb *_bbfa .PdfObjectDictionary ;_agfff *_bbfa .PdfIndirectObject ;
_fedbc *_bbfa .PdfObjectArray ;_cbaaeg _bbfa .Version ;_egbgb *bool ;_fgfff map[_bbfa .PdfObject ][]*_bbfa .PdfObjectDictionary ;_gdgfd *PdfAcroForm ;_bfcba *Names ;_bdaec Optimizer ;_dffca StandardApplier ;_cbaff map[int ]crossReference ;_gaafea int64 ;
ObjNumOffset int ;_fccec bool ;_bdagd _bbfa .XrefTable ;_fbdad int64 ;_ddddgb int64 ;_cffac map[_bbfa .PdfObject ]int64 ;_aeead map[_bbfa .PdfObject ]struct{};_gagae string ;_dbca string ;_gefeg []*PdfOutputIntent ;_egged bool ;_gdbcf ,_cdfc string ;};


// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_aeac *PdfReader )GetCatalogStructTreeRoot ()(_bbfa .PdfObject ,bool ){_efbca :=_bbfa .ResolveReference (_aeac ._abdcg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _efbca ==nil {return nil ,false ;};
if !_aeac ._bbbee {_eefab :=_aeac .traverseObjectData (_efbca );if _eefab !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_eefab );
return nil ,false ;};};return _efbca ,true ;};

// ViewArea returns the value of the viewArea.
func (_fdccf *ViewerPreferences )ViewArea ()PageBoundary {return _fdccf ._edbad };

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_egef *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gfceb []*PdfField ;_gfgf :=map[*_bbfa .PdfIndirectObject ]struct{}{};for _ ,_gbdce :=range _egef .PageList {_aeegd ,_fbebc :=_gbdce .GetAnnotations ();if _fbebc !=nil {return _fbebc ;
};for _ ,_eabef :=range _aeegd {var _gdfg *PdfField ;switch _ccefg :=_eabef .GetContext ().(type ){case *PdfAnnotationWidget :if _ccefg ._cfc !=nil {_gdfg =_ccefg ._cfc ;break ;};if _fagc ,_cfabf :=_bbfa .GetIndirect (_ccefg .Parent );_cfabf {_gdfg ,_fbebc =_egef .newPdfFieldFromIndirectObject (_fagc ,nil );
if _fbebc ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fagc ,_fbebc );
};if _ccefg ._dbge !=nil {_gdfg ,_fbebc =_egef .newPdfFieldFromIndirectObject (_ccefg ._dbge ,nil );if _fbebc ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ccefg ._dbge ,_fbebc );
};};if _gdfg ==nil {continue ;};if _ ,_bffdbb :=_gfgf [_gdfg ._dfeg ];_bffdbb {continue ;};_gfgf [_gdfg ._dfeg ]=struct{}{};_gfceb =append (_gfceb ,_gdfg );};};if len (_gfceb )==0{return nil ;};if _egef .AcroForm ==nil {_egef .AcroForm =NewPdfAcroForm ();
};_egef .AcroForm .Fields =&_gfceb ;return nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bbfa .PdfObject ;BS _bbfa .PdfObject ;LE _bbfa .PdfObject ;IC _bbfa .PdfObject ;LL _bbfa .PdfObject ;LLE _bbfa .PdfObject ;Cap _bbfa .PdfObject ;IT _bbfa .PdfObject ;LLO _bbfa .PdfObject ;
CP _bbfa .PdfObject ;Measure _bbfa .PdfObject ;CO _bbfa .PdfObject ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bdcc _bbfa .PdfObject ;};

// Items returns all children outline items.
func (_gegag *OutlineItem )Items ()[]*OutlineItem {return _gegag .Entries };func (_edegg *LTV )validateSig (_aggfg *PdfSignature )error {if _aggfg ==nil ||_aggfg .Contents ==nil ||len (_aggfg .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_aggfg );
};return nil ;};

// Encoder returns the font's text encoder.
func (_fcdafb *PdfFont )Encoder ()_efd .TextEncoder {_gegb :=_fcdafb .actualFont ();if _gegb ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_fcdafb ._gdfa );
return nil ;};return _gegb .Encoder ();};type pdfSignDictionary struct{*_bbfa .PdfObjectDictionary ;_dbaad *SignatureHandler ;_cegcg *PdfSignature ;_gcdgb int64 ;_deaab int ;_cadba int ;_bbae int ;_bdeee int ;};func (_decef *PdfPage )removeXObj (_dabfg *_bbfa .PdfObjectDictionary ,_ecebc _bbfa .PdfObjectName ){_dabfg .Remove (_ecebc );
_cbbce :=_bbfa .NewFlateEncoder ();_fdbae :=_decef .GetContentStreamObjs ();_aedcc :=_bbfa .MakeArray ();for _ ,_gggad :=range _fdbae {_aggfc ,_ :=_gbae (_gggad );if _ge .Contains (_aggfc ,_ecebc .String ()){_fffbc :=_ge .Index (_aggfc ,_ecebc .String ());
_ffdbc :=_ge .LastIndex (_aggfc [:_fffbc ],"\u0071");_edgdf :=_ge .Index (_aggfc [_fffbc :],"\u0051")+_fffbc +1;if _ffdbc >=0&&_edgdf >=0{var _ddefeb _ge .Builder ;_ddefeb .WriteString (_aggfc [:_ffdbc ]);_ddefeb .WriteString (_aggfc [_edgdf :]);_bbfabd ,_ggda :=_bbfa .MakeStream ([]byte (_ddefeb .String ()),_cbbce );
if _ggda ==nil {_aedcc .Append (_bbfabd );continue ;};};};_aedcc .Append (_gggad );};_decef .Contents =_aedcc ;};

// IsShading specifies if the pattern is a shading pattern.
func (_egbe *PdfPattern )IsShading ()bool {return _egbe .PatternType ==2};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_daeaf *PdfAnnotation )ToPdfObject ()_bbfa .PdfObject {_aag :=_daeaf ._dbge ;_eac :=_aag .PdfObject .(*_bbfa .PdfObjectDictionary );_eac .Clear ();_eac .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0041\u006e\u006eo\u0074"));_eac .SetIfNotNil ("\u0052\u0065\u0063\u0074",_daeaf .Rect );
_eac .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_daeaf .Contents );_eac .SetIfNotNil ("\u0050",_daeaf .P );_eac .SetIfNotNil ("\u004e\u004d",_daeaf .NM );_eac .SetIfNotNil ("\u004d",_daeaf .M );_eac .SetIfNotNil ("\u0046",_daeaf .F );
_eac .SetIfNotNil ("\u0041\u0050",_daeaf .AP );_eac .SetIfNotNil ("\u0041\u0053",_daeaf .AS );_eac .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_daeaf .Border );_eac .SetIfNotNil ("\u0043",_daeaf .C );_eac .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_daeaf .StructParent );
_eac .SetIfNotNil ("\u004f\u0043",_daeaf .OC );return _aag ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bbggf *PdfRectangle )Normalize (){if _bbggf .Llx > _bbggf .Urx {_bbggf .Llx ,_bbggf .Urx =_bbggf .Urx ,_bbggf .Llx ;};if _bbggf .Lly > _bbggf .Ury {_bbggf .Lly ,_bbggf .Ury =_bbggf .Ury ,_bbggf .Lly ;};};func _febgbg (_efffg *_bbfa .PdfObjectDictionary ,_edeac *fontCommon )(*pdfCIDFontType0 ,error ){if _edeac ._eebdg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_edeac );
return nil ,_bbfa .ErrRangeError ;};_cbbea :=_ccaa (_edeac );_fbfg ,_ecbf :=_bbfa .GetDict (_efffg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ecbf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_edeac );
return nil ,ErrRequiredAttributeMissing ;};_cbbea .CIDSystemInfo =_fbfg ;_cbbea .DW =_efffg .Get ("\u0044\u0057");_cbbea .W =_efffg .Get ("\u0057");_cbbea .DW2 =_efffg .Get ("\u0044\u0057\u0032");_cbbea .W2 =_efffg .Get ("\u0057\u0032");_cbbea ._bbgf =1000.0;
if _daca ,_ggbcc :=_bbfa .GetNumberAsFloat (_cbbea .DW );_ggbcc ==nil {_cbbea ._bbgf =_daca ;};_daeac ,_bfdab :=_cegdc (_cbbea .W );if _bfdab !=nil {return nil ,_bfdab ;};if _daeac ==nil {_daeac =map[_efd .CharCode ]float64 {};};_cbbea ._beabg =_daeac ;
return _cbbea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egffa *PdfAnnotationWidget )ToPdfObject ()_bbfa .PdfObject {_egffa .PdfAnnotation .ToPdfObject ();_dbeg :=_egffa ._dbge ;_dcbf :=_dbeg .PdfObject .(*_bbfa .PdfObjectDictionary );if _egffa ._bcae {return _dbeg ;};_egffa ._bcae =true ;_dcbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_dcbf .SetIfNotNil ("\u0048",_egffa .H );_dcbf .SetIfNotNil ("\u004d\u004b",_egffa .MK );_dcbf .SetIfNotNil ("\u0041",_egffa .A );_dcbf .SetIfNotNil ("\u0041\u0041",_egffa .AA );_dcbf .SetIfNotNil ("\u0042\u0053",_egffa .BS );_bfc :=_egffa .Parent ;if _egffa ._cfc !=nil {if _egffa ._cfc ._dfeg ==_egffa ._dbge {_egffa ._cfc .ToPdfObject ();
};_bfc =_egffa ._cfc .GetContainingPdfObject ();};if _bfc !=_dbeg {_dcbf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfc );};_egffa ._bcae =false ;return _dbeg ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_fgge *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gcebe *PdfPage )AddContentStreamByString (contentStr string )error {_efgdb ,_debbg :=_bbfa .MakeStream ([]byte (contentStr ),_bbfa .NewFlateEncoder ());if _debbg !=nil {return _debbg ;};if _gcebe .Contents ==nil {_gcebe .Contents =_efgdb ;}else {_dafb :=_bbfa .TraceToDirectObject (_gcebe .Contents );
_abaeb ,_bfbbb :=_dafb .(*_bbfa .PdfObjectArray );if !_bfbbb {_abaeb =_bbfa .MakeArray (_dafb );};_abaeb .Append (_efgdb );_gcebe .Contents =_abaeb ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfActionURI )ToPdfObject ()_bbfa .PdfObject {_ddf .PdfAction .ToPdfObject ();_ece :=_ddf ._ff ;_fba :=_ece .PdfObject .(*_bbfa .PdfObjectDictionary );_fba .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeURI )));_fba .SetIfNotNil ("\u0055\u0052\u0049",_ddf .URI );
_fba .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ddf .IsMap );return _ece ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bbfa .PdfObject ;V _bbfa .PdfObject ;};

// K returns the value of the key component of the color.
func (_cfg *PdfColorDeviceCMYK )K ()float64 {return _cfg [3]};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_cgag *PdfAcroForm )GetContainingPdfObject ()_bbfa .PdfObject {return _cgag ._dbddd };

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_babf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _gf .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_babf .S =subtype ;return nil ;};func (_gabgd *PdfReader )loadStructure ()error {if _gabgd ._fdefeb .GetCrypter ()!=nil &&!_gabgd ._fdefeb .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gbaf :=_gabgd ._fdefeb .GetTrailer ();if _gbaf ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eeccfe ,_gbef :=_gbaf .Get ("\u0052\u006f\u006f\u0074").(*_bbfa .PdfObjectReference );if !_gbef {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gbaf );
};_afcec ,_bdfg :=_gabgd ._fdefeb .LookupByReference (*_eeccfe );if _bdfg !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bdfg );
return _bdfg ;};_eeegd ,_gbef :=_afcec .(*_bbfa .PdfIndirectObject );if !_gbef {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_afcec ,*_gbaf );
return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eaeb ,_gbef :=(*_eeegd ).PdfObject .(*_bbfa .PdfObjectDictionary );if !_gbef {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_eeegd .PdfObject );
return _gf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_df .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eaeb );_cdbbf ,_gbef :=_eaeb .Get ("\u0050\u0061\u0067e\u0073").(*_bbfa .PdfObjectReference );
if !_gbef {return _gf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_eabb ,_bdfg :=_gabgd ._fdefeb .LookupByReference (*_cdbbf );
if _bdfg !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bdfg ;};_ecag ,_gbef :=_eabb .(*_bbfa .PdfIndirectObject );if !_gbef {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_df .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ecag );return _gf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cgbfaf ,_gbef :=_ecag .PdfObject .(*_bbfa .PdfObjectDictionary );if !_gbef {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ecag );
return _gf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cdfdc ,_gbef :=_bbfa .GetInt (_cgbfaf .Get ("\u0043\u006f\u0075n\u0074"));if !_gbef {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _gf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gbef =_bbfa .GetName (_cgbfaf .Get ("\u0054\u0079\u0070\u0065"));!_gbef {_df .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cgbfaf .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0050\u0061\u0067e\u0073"));};if _aeeab ,_begbc :=_bbfa .GetInt (_cgbfaf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_begbc {_adaef :=int64 (*_aeeab );_gabgd .Rotate =&_adaef ;};_gabgd ._gcaeg =_eeccfe ;
_gabgd ._abdcg =_eaeb ;_gabgd ._fbaf =_cgbfaf ;_gabgd ._gada =_ecag ;_gabgd ._bgdf =int (*_cdfdc );_gabgd ._ceebee =[]*_bbfa .PdfIndirectObject {};_gegg :=map[_bbfa .PdfObject ]struct{}{};_bdfg =_gabgd .buildPageList (_ecag ,nil ,_gegg );if _bdfg !=nil {return _bdfg ;
};_df .Log .Trace ("\u002d\u002d\u002d");_df .Log .Trace ("\u0054\u004f\u0043");_df .Log .Trace ("\u0050\u0061\u0067e\u0073");_df .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gabgd ._ceebee ),_gabgd ._ceebee );_gabgd ._cffec ,_bdfg =_gabgd .loadOutlines ();
if _bdfg !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bdfg );
return _bdfg ;};_gabgd .AcroForm ,_bdfg =_gabgd .loadForms ();if _bdfg !=nil {return _bdfg ;};_gabgd .DSS ,_bdfg =_gabgd .loadDSS ();if _bdfg !=nil {return _bdfg ;};_gabgd ._abfea ,_bdfg =_gabgd .loadPerms ();if _bdfg !=nil {return _bdfg ;};return nil ;
};type pdfFontSimple struct{fontCommon ;_baaga *_bbfa .PdfIndirectObject ;_ggfc map[_efd .CharCode ]float64 ;_cdea _efd .TextEncoder ;_gfce _efd .TextEncoder ;_badb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bbfa .PdfObject ;LastChar _bbfa .PdfObject ;Widths _bbfa .PdfObject ;Encoding _bbfa .PdfObject ;_bgbe *_fg .RuneCharSafeMap ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GetContainingPdfObject implements interface PdfModel.
func (_gc *PdfAction )GetContainingPdfObject ()_bbfa .PdfObject {return _gc ._ff };

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbfa .PdfObject ;};

// ToInteger convert to an integer format.
func (_cbfbb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cbff :=_dg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cbff *_cbfbb .A ()),uint32 (_cbff *_cbfbb .B ()),uint32 (_cbff *_cbfbb .C ())};};func (_gfbad *Image )samplesAddPadding (_bdacf []uint32 )[]uint32 {_bfdg :=_bbf .BytesPerLine (int (_gfbad .Width ),int (_gfbad .BitsPerComponent ),_gfbad .ColorComponents )*(8/int (_gfbad .BitsPerComponent ));
_aecag :=_bfdg *int (_gfbad .Height );if len (_bdacf )==_aecag {return _bdacf ;};_aacc :=make ([]uint32 ,_aecag );_bbcgc :=int (_gfbad .Width )*_gfbad .ColorComponents ;for _bdec :=0;_bdec < int (_gfbad .Height );_bdec ++{_dbac :=_bdec *int (_gfbad .Width );
_fdgg :=_bdec *_bfdg ;for _aabba :=0;_aabba < _bbcgc ;_aabba ++{_aacc [_fdgg +_aabba ]=_bdacf [_dbac +_aabba ];};};return _aacc ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bbca *_bbfa .PdfIndirectObject ;Certs []*_bbfa .PdfObjectStream ;OCSPs []*_bbfa .PdfObjectStream ;CRLs []*_bbfa .PdfObjectStream ;VRI map[string ]*VRI ;_geeg map[string ]*_bbfa .PdfObjectStream ;_ebeb map[string ]*_bbfa .PdfObjectStream ;
_dfff map[string ]*_bbfa .PdfObjectStream ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cafde *PdfPageResources )GetShadingByName (keyName _bbfa .PdfObjectName )(*PdfShading ,bool ){if _cafde .Shading ==nil {return nil ,false ;};_eedfe ,_aaddf :=_bbfa .TraceToDirectObject (_cafde .Shading ).(*_bbfa .PdfObjectDictionary );if !_aaddf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cafde .Shading );
return nil ,false ;};if _ccbdb :=_eedfe .Get (keyName );_ccbdb !=nil {_cdag ,_cafea :=_cgdee (_ccbdb );if _cafea !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cafea );
return nil ,false ;};return _cdag ,true ;};return nil ,false ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_agacc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_agacc .N =N ;return _agacc ,nil ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_bfdec *ViewerPreferences )IsCenterWindow ()bool {if _bfdec ._dfdab ==nil {return false ;};return *_bfdec ._dfdab ;};

// Add appends an outline item as a child of the current outline item.
func (_fefaac *OutlineItem )Add (item *OutlineItem ){_fefaac .Entries =append (_fefaac .Entries ,item )};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bbfa .PdfObject ;NewWindow _bbfa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fffd *PdfAnnotationStamp )ToPdfObject ()_bbfa .PdfObject {_fffd .PdfAnnotation .ToPdfObject ();_cfa :=_fffd ._dbge ;_ead :=_cfa .PdfObject .(*_bbfa .PdfObjectDictionary );_fffd .PdfAnnotationMarkup .appendToPdfDictionary (_ead );_ead .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0053\u0074\u0061m\u0070"));
_ead .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fffd .Name );return _cfa ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_afbf DefaultImageHandler )NewGrayImageFromGoImage (goimg _gd .Image )(*Image ,error ){_bbgg :=goimg .Bounds ();_gfdfc :=&Image {Width :int64 (_bbgg .Dx ()),Height :int64 (_bbgg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _acbd :=goimg .(type ){case *_gd .Gray :if len (_acbd .Pix )!=_bbgg .Dx ()*_bbgg .Dy (){_eddce ,_daegf :=_bbf .GrayConverter .Convert (goimg );
if _daegf !=nil {return nil ,_daegf ;};_gfdfc .Data =_eddce .Pix ();}else {_gfdfc .Data =_acbd .Pix ;};case *_gd .Gray16 :_gfdfc .BitsPerComponent =16;if len (_acbd .Pix )!=_bbgg .Dx ()*_bbgg .Dy ()*2{_bdaae ,_fbdfg :=_bbf .Gray16Converter .Convert (goimg );
if _fbdfg !=nil {return nil ,_fbdfg ;};_gfdfc .Data =_bdaae .Pix ();}else {_gfdfc .Data =_acbd .Pix ;};case _bbf .Image :_ggcfd :=_acbd .Base ();if _ggcfd .ColorComponents ==1{_gfdfc .BitsPerComponent =int64 (_ggcfd .BitsPerComponent );_gfdfc .Data =_ggcfd .Data ;
return _gfdfc ,nil ;};_ggcfc ,_afde :=_bbf .GrayConverter .Convert (goimg );if _afde !=nil {return nil ,_afde ;};_gfdfc .Data =_ggcfc .Pix ();default:_ddfbf ,_ffgfc :=_bbf .GrayConverter .Convert (goimg );if _ffgfc !=nil {return nil ,_ffgfc ;};_gfdfc .Data =_ddfbf .Pix ();
};return _gfdfc ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_ggcef *KDict )GenerateRandomID ()string {_gcfaf ,_badef :=_ee .NewUUID ();if _badef !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_badef );};if _gcfaf !=_ee .Nil {_cbacg :=_gcfaf .String ();
_ggcef .ID =_bbfa .MakeString (_cbacg );return _cbacg ;};return "";};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dgda *PdfTilingPattern )ToPdfObject ()_bbfa .PdfObject {_dgda .PdfPattern .ToPdfObject ();_baeeg :=_dgda .getDict ();if _dgda .PaintType !=nil {_baeeg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dgda .PaintType );};if _dgda .TilingType !=nil {_baeeg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dgda .TilingType );
};if _dgda .BBox !=nil {_baeeg .Set ("\u0042\u0042\u006f\u0078",_dgda .BBox .ToPdfObject ());};if _dgda .XStep !=nil {_baeeg .Set ("\u0058\u0053\u0074e\u0070",_dgda .XStep );};if _dgda .YStep !=nil {_baeeg .Set ("\u0059\u0053\u0074e\u0070",_dgda .YStep );
};if _dgda .Resources !=nil {_baeeg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dgda .Resources .ToPdfObject ());};if _dgda .Matrix !=nil {_baeeg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dgda .Matrix );};return _dgda ._cgad ;};func (_fcga *PdfAcroForm )fillImageWithAppearance (_dagda FieldImageProvider ,_gbddb FieldAppearanceGenerator )error {if _fcga ==nil {return nil ;
};_ggacc ,_fcea :=_dagda .FieldImageValues ();if _fcea !=nil {return _fcea ;};for _ ,_gecd :=range _fcga .AllFields (){_dbgcb :=_gecd .PartialName ();_debf ,_ffgae :=_ggacc [_dbgcb ];if !_ffgae {if _deecec ,_gccg :=_gecd .FullName ();_gccg ==nil {_debf ,_ffgae =_ggacc [_deecec ];
};};if !_ffgae {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dbgcb );
continue ;};switch _cafa :=_gecd .GetContext ().(type ){case *PdfFieldButton :if _cafa .IsPush (){_cafa .SetFillImage (_debf );};};if _gbddb ==nil {continue ;};for _ ,_gfgcc :=range _gecd .Annotations {_bafa ,_gfbgc :=_gbddb .GenerateAppearanceDict (_fcga ,_gecd ,_gfgcc );
if _gfbgc !=nil {return _gfbgc ;};_gfgcc .AP =_bafa ;_gfgcc .ToPdfObject ();};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_efdbg *PdfSignatureReference )ToPdfObject ()_bbfa .PdfObject {_cdgbe :=_bbfa .MakeDict ();_cdgbe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_efdbg .Type );_cdgbe .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_efdbg .TransformMethod );
_cdgbe .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_efdbg .TransformParams );_cdgbe .SetIfNotNil ("\u0044\u0061\u0074\u0061",_efdbg .Data );_cdgbe .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_efdbg .DigestMethod );
return _cdgbe ;};

// SetOCProperties sets the optional content properties.
func (_gbdgc *PdfWriter )SetOCProperties (ocProperties _bbfa .PdfObject )error {_acead :=_gbdgc ._cgfbd ;if ocProperties !=nil {_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_acead .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gbdgc .addObjects (ocProperties );};return nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_bbgabc *CompliancePdfReader )error ;};

// String returns a human readable description of `fontfile`.
func (_ddba *fontFile )String ()string {_dfegd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ddba ._gccbc !=nil {_dfegd =_ddba ._gccbc .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ddba ._dgddaf ,_dfegd );
};func _ccdbd (_bfbbg *_bbfa .PdfObjectArray )(float64 ,error ){_eaaee ,_ccfef :=_bfbbg .ToFloat64Array ();if _ccfef !=nil {_df .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfbbg ,_ccfef );
};switch len (_eaaee ){case 1:return _eaaee [0],nil ;case 3:_ggbdd :=PdfColorspaceDeviceRGB {};_gcdef ,_ggggg :=_ggbdd .ColorFromFloats (_eaaee );if _ggggg !=nil {return 0.0,_ggggg ;};return _gcdef .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fcgfb :=PdfColorspaceDeviceCMYK {};
_faeab ,_gfde :=_fcgfb .ColorFromFloats (_eaaee );if _gfde !=nil {return 0.0,_gfde ;};_afffd ,_gfde :=_fcgfb .ColorToRGB (_faeab .(*PdfColorDeviceCMYK ));if _gfde !=nil {return 0.0,_gfde ;};return _afffd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ccfef =_gf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_df .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfbbg ,_ccfef );return 0.0,_ccfef ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_bcgb :=&PdfPageResourcesColorspaces {};_bcgb .Names =[]string {};_bcgb .Colorspaces =map[string ]PdfColorspace {};_bcgb ._ggccg =&_bbfa .PdfIndirectObject {};return _bcgb ;};func (_ecce *PdfPage )flattenFieldsWithOpts (_gbd FieldAppearanceGenerator ,_bdab *FieldFlattenOpts ,_bdfe map[*PdfAnnotation ]bool )error {var _effc []*PdfAnnotation ;
if _gbd !=nil {if _aedac :=_gbd .WrapContentStream (_ecce );_aedac !=nil {return _aedac ;};};_eegca ,_aadca :=_ecce .GetAnnotations ();if _aadca !=nil {return _aadca ;};for _ ,_afcd :=range _eegca {_gffd ,_baea :=_bdfe [_afcd ];if !_baea &&_bdab .AnnotFilterFunc !=nil {if _ ,_fdcbe :=_afcd .GetContext ().(*PdfAnnotationWidget );
!_fdcbe {_baea =_bdab .AnnotFilterFunc (_afcd );};};if !_baea {_effc =append (_effc ,_afcd );continue ;};switch _afcd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_cfgc ,_fcce ,_aaab :=_gfbe (_afcd );if _aaab !=nil {if !_gffd {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_aaab );
continue ;};if _cfgc ==nil {continue ;};_bfff :=_ecce .Resources .GenerateXObjectName ();_ecce .Resources .SetXObjectFormByName (_bfff ,_cfgc );_dfcd ,_abcg ,_aaab :=_aagd (_cfgc );if _aaab !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_aaab );
}else {_dfdfd :=_ag .IdentityMatrix ();_dfdfd =_dfdfd .Translate (-_dfcd .Llx ,-_dfcd .Lly );if _abcg {_add :=1.0;if _dfcd .Width ()> 0{_add =_dg .Round (_fcce .Width ()/_dfcd .Width ());};_efba :=1.0;if _dfcd .Height ()> 0{_efba =_dg .Round (_fcce .Height ()/_dfcd .Height ());
};_dfdfd =_dfdfd .Scale (_add ,_efba );};_fcce .Transform (_dfdfd );};_gdgeb :=_dg .Min (_fcce .Llx ,_fcce .Urx );_fdcg :=_dg .Min (_fcce .Lly ,_fcce .Ury );var _gagge []string ;_gagge =append (_gagge ,"\u0071");_gagge =append (_gagge ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gdgeb ,_fdcg ));
_gagge =append (_gagge ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bfff .String ()));_gagge =append (_gagge ,"\u0051");_ffabc :=_ge .Join (_gagge ,"\u000a");_aaab =_ecce .AppendContentStream (_ffabc );if _aaab !=nil {return _aaab ;};if _cfgc .Resources !=nil {_bebdb ,_ggcgf :=_bbfa .GetDict (_cfgc .Resources .Font );
if _ggcgf {for _ ,_caad :=range _bebdb .Keys (){if !_ecce .Resources .HasFontByName (_caad ){_ecce .Resources .SetFontByName (_caad ,_bebdb .Get (_caad ));};};};};};if len (_effc )> 0{_ecce ._eaabc =_effc ;}else {_ecce ._eaabc =[]*PdfAnnotation {};};return nil ;
};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// AddWatermarkImage adds an image watermark to the page.
func (_dceg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_dggf ,_agcbc :=_dceg .GetMediaBox ();if _agcbc !=nil {return _agcbc ;};_fddg :=_dggf .Urx -_dggf .Llx ;_fedfa :=_dggf .Ury -_dggf .Lly ;_cdcdec :=opt .Angle *_dg .Pi /180;
_bcfade :=float64 (*ximg .Width );_adabf :=(_fddg -_bcfade *_dg .Cos (_cdcdec ))/2;if opt .FitToWidth {_bcfade =_fddg ;_adabf =0;};_ffgc :=_fedfa ;_dgae :=float64 (0);if opt .PreserveAspectRatio {_ffgc =_bcfade *float64 (*ximg .Height )/float64 (*ximg .Width );
_dgae =(_fedfa -_ffgc )/2;_dgae -=float64 (*ximg .Width )/2*_dg .Sin (_cdcdec );};if _dceg .Resources ==nil {_dceg .Resources =NewPdfPageResources ();};_dbbcec :=NewXObjectForm ();_dbbcec .BBox =_bbfa .MakeArrayFromFloats ([]float64 {0,0,_bcfade ,_ffgc });
_dbbcec .Resources =NewPdfPageResources ();_efffc :=0;_gdbeg :=_bbfa .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_efffc ));for _dbbcec .Resources .HasXObjectByName (_gdbeg ){_efffc ++;_gdbeg =_bbfa .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_efffc ));
};_agcbc =_dbbcec .Resources .SetXObjectImageByName (_gdbeg ,ximg );if _agcbc !=nil {return _agcbc ;};_efffc =0;_afegb :=_bbfa .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_efffc ));for _dbbcec .Resources .HasExtGState (_afegb ){_efffc ++;_afegb =_bbfa .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_efffc ));
};_feeab :=_bbfa .MakeDict ();_feeab .Set ("\u0042\u004d",_bbfa .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_feeab .Set ("\u0043\u0041",_bbfa .MakeFloat (opt .Alpha ));_feeab .Set ("\u0063\u0061",_bbfa .MakeFloat (opt .Alpha ));_agcbc =_dbbcec .Resources .AddExtGState (_afegb ,_feeab );
if _agcbc !=nil {return _agcbc ;};_dcafc :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_afegb ,_bcfade ,_ffgc ,0.0,0.0,_gdbeg );
_dbbcec .SetContentStream ([]byte (_dcafc ),nil );_abdad :=_ag .IdentityMatrix ().Rotate (_cdcdec );_bacba :=[]float64 {_abdad [0],_abdad [1],_abdad [3],_abdad [4],_abdad [6],_abdad [7]};_dbbcec .Matrix =_bbfa .MakeArrayFromFloats (_bacba );_bbdf :=_dceg .Resources .GenerateXObjectName ();
_agcbc =_dceg .Resources .SetXObjectFormByName (_bbdf ,_dbbcec );if _agcbc !=nil {return _agcbc ;};_facg :=_b .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_adabf ,_dgae ,_bbdf );
return _dceg .AppendContentBytes ([]byte (_facg ),true );};

// SetCatalogLanguage sets the catalog language.
func (_eeecb *PdfWriter )SetCatalogLanguage (lang _bbfa .PdfObject )error {if lang ==nil {_eeecb ._cgfbd .Remove ("\u004c\u0061\u006e\u0067");return nil ;};if _ ,_aeeca :=lang .(*_bbfa .PdfIndirectObject );_aeeca {_eeecb .addObject (lang );};_eeecb ._cgfbd .Set ("\u004c\u0061\u006e\u0067",lang );
return nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bbfa .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bbfa .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_eaedd *PdfColorspaceSpecialIndexed )ToPdfObject ()_bbfa .PdfObject {_dgaab :=_bbfa .MakeArray (_bbfa .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dgaab .Append (_eaedd .Base .ToPdfObject ());_dgaab .Append (_bbfa .MakeInteger (int64 (_eaedd .HiVal )));
_dgaab .Append (_eaedd .Lookup );if _eaedd ._agcgg !=nil {_eaedd ._agcgg .PdfObject =_dgaab ;return _eaedd ._agcgg ;};return _dgaab ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbfa .PdfObject ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_ggb *PdfReader )newPdfAnnotationHighlightFromDict (_bcb *_bbfa .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_adgb :=PdfAnnotationHighlight {};_degf ,_egfd :=_ggb .newPdfAnnotationMarkupFromDict (_bcb );if _egfd !=nil {return nil ,_egfd ;
};_adgb .PdfAnnotationMarkup =_degf ;_adgb .QuadPoints =_bcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adgb ,nil ;};func _gbae (_ceedb _bbfa .PdfObject )(string ,error ){_ceedb =_bbfa .TraceToDirectObject (_ceedb );
switch _cdeec :=_ceedb .(type ){case *_bbfa .PdfObjectString :return _cdeec .Str (),nil ;case *_bbfa .PdfObjectStream :_ebbc ,_ceegaf :=_bbfa .DecodeStream (_cdeec );if _ceegaf !=nil {return "",_ceegaf ;};return string (_ebbc ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ceedb );
};func _cadgb ()*modelManager {_acdf :=modelManager {};_acdf ._abbbd =map[PdfModel ]_bbfa .PdfObject {};_acdf ._cbgc =map[_bbfa .PdfObject ]PdfModel {};_acdf ._beag =_g .RWMutex {};_acdf ._gcgc =_g .RWMutex {};return &_acdf ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cb .ReadSeeker )(*CompliancePdfReader ,error ){const _aagf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_cfae ,_cbcad :=_fcebf (rs ,&ReaderOpts {ComplianceMode :true },false ,_aagf );
if _cbcad !=nil {return nil ,_cbcad ;};return &CompliancePdfReader {PdfReader :_cfae },nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_begdc :=PdfColorDeviceGray (grayVal );return &_begdc ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dcba *PdfFont )BytesToCharcodes (data []byte )[]_efd .CharCode {_df .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _edef ,_cdfde :=_dcba ._gdfa .(*pdfFontType0 );_cdfde &&_edef ._deaca !=nil {if _eaabe ,_gfdaf :=_edef .bytesToCharcodes (data );_gfdaf {return _eaabe ;};};var (_ggbed =make ([]_efd .CharCode ,0,len (data )+len (data )%2);_acba =_dcba .baseFields ();
);if _acba ._degfb !=nil {if _ggbc ,_gdeg :=_acba ._degfb .BytesToCharcodes (data );_gdeg {for _ ,_deebc :=range _ggbc {_ggbed =append (_ggbed ,_efd .CharCode (_deebc ));};return _ggbed ;};};if _acba .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cbaf :=0;_cbaf < len (data );_cbaf +=2{_efbaa :=uint16 (data [_cbaf ])<<8|uint16 (data [_cbaf +1]);_ggbed =append (_ggbed ,_efd .CharCode (_efbaa ));};}else {for _ ,_begdd :=range data {_ggbed =append (_ggbed ,_efd .CharCode (_begdd ));
};};return _ggbed ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bbfa .PdfIndirectObject )*PdfOutlineItem {_fdbgf :=PdfOutlineItem {};_fdbgf ._cedfc =&_fdbgf ;_fdbgf .Title =_bbfa .MakeString (title );_ceea :=_bbfa .MakeArray ();_ceea .Append (page );_ceea .Append (_bbfa .MakeName ("\u0046\u0069\u0074"));
_fdbgf .Dest =_ceea ;return &_fdbgf ;};

// GetContentStreams returns the content stream as an array of strings.
func (_gcbfg *PdfPage )GetContentStreams ()([]string ,error ){_ggbce :=_gcbfg .GetContentStreamObjs ();var _gbdgg []string ;for _ ,_acfgb :=range _ggbce {_cadag ,_dcfcd :=_gbae (_acfgb );if _dcfcd !=nil {return nil ,_dcfcd ;};_gbdgg =append (_gbdgg ,_cadag );
};return _gbdgg ,nil ;};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dfbdc *PdfAppender )UpdatePage (page *PdfPage ){_dfbdc .updateObjectsDeep (page .ToPdfObject (),nil );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bbfa .PdfObjectStream )(*XObjectImage ,error ){_bcebf :=&XObjectImage {};_bcebf ._bgffa =stream ;_afdbe :=*(stream .PdfObjectDictionary );_baegdb ,_cdece :=_bbfa .NewEncoderFromStream (stream );if _cdece !=nil {return nil ,_cdece ;
};_bcebf .Filter =_baegdb ;if _dddae :=_bbfa .TraceToDirectObject (_afdbe .Get ("\u0057\u0069\u0064t\u0068"));_dddae !=nil {_cgdef ,_eabfa :=_dddae .(*_bbfa .PdfObjectInteger );if !_eabfa {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_acgfa :=int64 (*_cgdef );_bcebf .Width =&_acgfa ;}else {return nil ,_gf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gdfcb :=_bbfa .TraceToDirectObject (_afdbe .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gdfcb !=nil {_egcfc ,_aafgbg :=_gdfcb .(*_bbfa .PdfObjectInteger );if !_aafgbg {return nil ,_gf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_baebcg :=int64 (*_egcfc );
_bcebf .Height =&_baebcg ;}else {return nil ,_gf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _afbbdc :=_bbfa .TraceToDirectObject (_afdbe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_afbbdc !=nil {_dggcc ,_fgged :=NewPdfColorspaceFromPdfObject (_afbbdc );if _fgged !=nil {return nil ,_fgged ;};_bcebf .ColorSpace =_dggcc ;}else {_df .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_bcebf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fccaa :=_bbfa .TraceToDirectObject (_afdbe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fccaa !=nil {_caedc ,_gbecd :=_fccaa .(*_bbfa .PdfObjectInteger );
if !_gbecd {return nil ,_gf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ebfaf :=int64 (*_caedc );_bcebf .BitsPerComponent =&_ebfaf ;};_bcebf .Intent =_afdbe .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_bcebf .ImageMask =_afdbe .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_bcebf .Mask =_afdbe .Get ("\u004d\u0061\u0073\u006b");_bcebf .Decode =_afdbe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_bcebf .Interpolate =_afdbe .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_bcebf .Alternatives =_afdbe .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_bcebf .SMask =_afdbe .Get ("\u0053\u004d\u0061s\u006b");_bcebf .SMaskInData =_afdbe .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_bcebf .Matte =_afdbe .Get ("\u004d\u0061\u0074t\u0065");_bcebf .Name =_afdbe .Get ("\u004e\u0061\u006d\u0065");_bcebf .StructParent =_afdbe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bcebf .ID =_afdbe .Get ("\u0049\u0044");
_bcebf .OPI =_afdbe .Get ("\u004f\u0050\u0049");_bcebf .Metadata =_afdbe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bcebf .OC =_afdbe .Get ("\u004f\u0043");_bcebf .Stream =stream .Stream ;return _bcebf ,nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bbfa .PdfObject ;Flags _bbfa .PdfObject ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_eacg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _eacg ._eaabc ==nil {_eacg .GetAnnotations ();};_eacg ._eaabc =append (_eacg ._eaabc ,annot );};

// SetPatternByName sets a pattern resource specified by keyName.
func (_eegde *PdfPageResources )SetPatternByName (keyName _bbfa .PdfObjectName ,pattern _bbfa .PdfObject )error {if _eegde .Pattern ==nil {_eegde .Pattern =_bbfa .MakeDict ();};_gddfcg ,_decb :=_bbfa .GetDict (_eegde .Pattern );if !_decb {return _bbfa .ErrTypeError ;
};_gddfcg .Set (keyName ,pattern );return nil ;};func _baba (_bgbb StdFontName )(pdfFontSimple ,error ){_daee ,_gabef :=_fg .NewStdFontByName (_bgbb );if !_gabef {return pdfFontSimple {},ErrFontNotSupported ;};_cceb :=_cgcd (_daee );return _cceb ,nil ;
};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_eccdd []byte ;_acgd []float64 ;};

// SetPageNumber sets the page number.
func (_egbfed *KDict )SetPageNumber (pageNumber int64 ){_egbfed ._ecdbc =pageNumber };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_egdc *PdfFont )SubsetRegistered ()error {switch _dcgfg :=_egdc ._gdfa .(type ){case *pdfFontType0 :_eabd :=_dcgfg .subsetRegistered ();if _eabd !=nil {_df .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eabd );
return _eabd ;};if _dcgfg ._fbecg !=nil {if _dcgfg ._agcb !=nil {_dcgfg ._agcb .ToPdfObject ();};_dcgfg .ToPdfObject ();};default:_df .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_dcgfg );
};return nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_gdbc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_gdbc .updateObjectsDeep (dss .ToPdfObject (),nil );};_gdbc ._bdbd =dss ;};func (_gfcff *PdfReader )buildOutlineTree (_bcaba _bbfa .PdfObject ,_ccdde *PdfOutlineTreeNode ,_aaebf *PdfOutlineTreeNode ,_gfabe map[_bbfa .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gfabe ==nil {_gfabe =map[_bbfa .PdfObject ]struct{}{};
};_gfabe [_bcaba ]=struct{}{};_dbbda ,_ccbg :=_bcaba .(*_bbfa .PdfIndirectObject );if !_ccbg {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bcaba );
};_bfeee ,_cfadf :=_dbbda .PdfObject .(*_bbfa .PdfObjectDictionary );if !_cfadf {return nil ,nil ,_gf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bfeee ,_dbbda ,_dbbda );
if _bdaedb :=_bfeee .Get ("\u0054\u0069\u0074l\u0065");_bdaedb !=nil {_eagbc ,_gbadf :=_gfcff .newPdfOutlineItemFromIndirectObject (_dbbda );if _gbadf !=nil {return nil ,nil ,_gbadf ;};_eagbc .Parent =_ccdde ;_eagbc .Prev =_aaebf ;_gcba :=_bbfa .ResolveReference (_bfeee .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_efgbb :=_gfabe [_gcba ];_gcba !=nil &&_gcba !=_dbbda &&!_efgbb {if !_bbfa .IsNullObject (_gcba ){_deegbc ,_febgce ,_abcac :=_gfcff .buildOutlineTree (_gcba ,&_eagbc .PdfOutlineTreeNode ,nil ,_gfabe );if _abcac !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_abcac );
}else {_eagbc .First =_deegbc ;_eagbc .Last =_febgce ;};};};_fbac :=_bbfa .ResolveReference (_bfeee .Get ("\u004e\u0065\u0078\u0074"));if _ ,_baabd :=_gfabe [_fbac ];_fbac !=nil &&_fbac !=_dbbda &&!_baabd {if !_bbfa .IsNullObject (_fbac ){_fgeca ,_faceac ,_gdcdb :=_gfcff .buildOutlineTree (_fbac ,_ccdde ,&_eagbc .PdfOutlineTreeNode ,_gfabe );
if _gdcdb !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gdcdb );
}else {_eagbc .Next =_fgeca ;return &_eagbc .PdfOutlineTreeNode ,_faceac ,nil ;};};};return &_eagbc .PdfOutlineTreeNode ,&_eagbc .PdfOutlineTreeNode ,nil ;};_dggc ,_aaegb :=_bebdg (_dbbda );if _aaegb !=nil {return nil ,nil ,_aaegb ;};_dggc .Parent =_ccdde ;
if _bbccg :=_bfeee .Get ("\u0046\u0069\u0072s\u0074");_bbccg !=nil {_bbccg =_bbfa .ResolveReference (_bbccg );if _ ,_bbbc :=_gfabe [_bbccg ];_bbccg !=nil &&_bbccg !=_dbbda &&!_bbbc {_bfcfe :=_bbfa .TraceToDirectObject (_bbccg );if _ ,_fbfbcdb :=_bfcfe .(*_bbfa .PdfObjectNull );
!_fbfbcdb &&_bfcfe !=nil {_cgdffc ,_fbca ,_cgefe :=_gfcff .buildOutlineTree (_bbccg ,&_dggc .PdfOutlineTreeNode ,nil ,_gfabe );if _cgefe !=nil {_df .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cgefe );
}else {_dggc .First =_cgdffc ;_dggc .Last =_fbca ;};};};};return &_dggc .PdfOutlineTreeNode ,&_dggc .PdfOutlineTreeNode ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcfc *PdfShadingType3 )ToPdfObject ()_bbfa .PdfObject {_fcfc .PdfShading .ToPdfObject ();_egeaf ,_eefea :=_fcfc .getShadingDict ();if _eefea !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fcfc .Coords !=nil {_egeaf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fcfc .Coords );};if _fcfc .Domain !=nil {_egeaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcfc .Domain );};if _fcfc .Function !=nil {if len (_fcfc .Function )==1{_egeaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcfc .Function [0].ToPdfObject ());
}else {_beefgc :=_bbfa .MakeArray ();for _ ,_caff :=range _fcfc .Function {_beefgc .Append (_caff .ToPdfObject ());};_egeaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beefgc );};};if _fcfc .Extend !=nil {_egeaf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fcfc .Extend );
};return _fcfc ._facd ;};

// ToPdfObject implements interface PdfModel.
func (_fcdgd *PdfSignature )ToPdfObject ()_bbfa .PdfObject {_fcace :=_fcdgd ._dddfg ;var _gebd *_bbfa .PdfObjectDictionary ;if _addaf ,_daagg :=_fcace .PdfObject .(*pdfSignDictionary );_daagg {_gebd =_addaf .PdfObjectDictionary ;}else {_gebd =_fcace .PdfObject .(*_bbfa .PdfObjectDictionary );
};_gebd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fcdgd .Type );_gebd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fcdgd .Filter );_gebd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fcdgd .SubFilter );_gebd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcdgd .ByteRange );
_gebd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcdgd .Contents );_gebd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fcdgd .Cert );_gebd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcdgd .Name );_gebd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fcdgd .Reason );
_gebd .SetIfNotNil ("\u004d",_fcdgd .M );_gebd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fcdgd .Reference );_gebd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fcdgd .Changes );_gebd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fcdgd .ContactInfo );
_gebd .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_fcdgd .Location );return _fcace ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gfedfg *PdfOutline )GetContainingPdfObject ()_bbfa .PdfObject {return _gfedfg ._cfaba };

// AddKChild adds a child K dictionary object.
func (_cdgfg *KDict )AddKChild (kChild *KDict ){_cdgfg ._cbag =append (_cdgfg ._cbag ,&KValue {_fcgfe :kChild });};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bdaad *PdfReader )GetObjectNums ()[]int {return _bdaad ._fdefeb .GetObjectNums ()};

// IsSimple returns true if `font` is a simple font.
func (_gcgg *PdfFont )IsSimple ()bool {_ ,_bgdd :=_gcgg ._gdfa .(*pdfFontSimple );return _bgdd };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gcggb OutlineDest )ToPdfObject ()_bbfa .PdfObject {if (_gcggb .PageObj ==nil &&_gcggb .Page < 0)||_gcggb .Mode ==""{return _bbfa .MakeNull ();};_ageadb :=_bbfa .MakeArray ();if _gcggb .PageObj !=nil {_ageadb .Append (_gcggb .PageObj );}else {_ageadb .Append (_bbfa .MakeInteger (_gcggb .Page ));
};_ageadb .Append (_bbfa .MakeName (_gcggb .Mode ));switch _gcggb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_ageadb .Append (_bbfa .MakeFloat (_gcggb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_ageadb .Append (_bbfa .MakeFloat (_gcggb .X ));
case "\u0058\u0059\u005a":_ageadb .Append (_bbfa .MakeFloat (_gcggb .X ));_ageadb .Append (_bbfa .MakeFloat (_gcggb .Y ));_ageadb .Append (_bbfa .MakeFloat (_gcggb .Zoom ));default:_ageadb .Set (1,_bbfa .MakeName ("\u0046\u0069\u0074"));};return _ageadb ;
};func (_eaefc *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_gaaff *PdfReader )newPdfAnnotationStampFromDict (_ffbb *_bbfa .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fgeg :=PdfAnnotationStamp {};
_egae ,_fabc :=_gaaff .newPdfAnnotationMarkupFromDict (_ffbb );if _fabc !=nil {return nil ,_fabc ;};_fgeg .PdfAnnotationMarkup =_egae ;_fgeg .Name =_ffbb .Get ("\u004e\u0061\u006d\u0065");return &_fgeg ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_cdffc *PdfWriter )GetPdfVersion ()string {return _cdffc .getPdfVersion ()};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bgdae *PdfInfo )AddCustomInfo (name string ,value string )error {if _bgdae ._gaga ==nil {_bgdae ._gaga =_bbfa .MakeDict ();};if _ ,_beab :=_fgcd [name ];_beab {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bgdae ._gaga .SetIfNotNil (*_bbfa .MakeName (name ),_bbfa .MakeString (value ));return nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bdfc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _daaaa ,_aeegg :=range _bdfc ._eccdd {_bdfc ._eccdd [_daaaa ]=mapFunc (_aeegg );};};

// GetKDict returns the KDict of the KValue.
func (_gebgd *KValue )GetKDict ()*KDict {return _gebgd ._fcgfe };

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_dceaa *PdfColorspaceSpecialSeparation )ToPdfObject ()_bbfa .PdfObject {_cdgfc :=_bbfa .MakeArray (_bbfa .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_cdgfc .Append (_dceaa .ColorantName );_cdgfc .Append (_dceaa .AlternateSpace .ToPdfObject ());
_cdgfc .Append (_dceaa .TintTransform .ToPdfObject ());if _dceaa ._cgace !=nil {_dceaa ._cgace .PdfObject =_cdgfc ;return _dceaa ._cgace ;};return _cdgfc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbbdf *PdfShadingType1 )ToPdfObject ()_bbfa .PdfObject {_bbbdf .PdfShading .ToPdfObject ();_caaa ,_bgge :=_bbbdf .getShadingDict ();if _bgge !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbbdf .Domain !=nil {_caaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbbdf .Domain );};if _bbbdf .Matrix !=nil {_caaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbbdf .Matrix );};if _bbbdf .Function !=nil {if len (_bbbdf .Function )==1{_caaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbbdf .Function [0].ToPdfObject ());
}else {_efecf :=_bbfa .MakeArray ();for _ ,_cfccf :=range _bbbdf .Function {_efecf .Append (_cfccf .ToPdfObject ());};_caaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efecf );};};return _bbbdf ._facd ;};

// NumCopies returns the value of the numCopies.
func (_bcdgg *ViewerPreferences )NumCopies ()int {return _bcdgg ._dbaae };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_cabc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gacc *_bbfa .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_edaf :=PdfAnnotationFileAttachment {};
_bcdc ,_bfdd :=_cabc .newPdfAnnotationMarkupFromDict (_gacc );if _bfdd !=nil {return nil ,_bfdd ;};_edaf .PdfAnnotationMarkup =_bcdc ;_edaf .FS =_gacc .Get ("\u0046\u0053");_edaf .Name =_gacc .Get ("\u004e\u0061\u006d\u0065");return &_edaf ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_eefge *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_eegd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddce :=vals [0];if _ddce < 0.0||_ddce > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ddce );
return nil ,ErrColorOutOfRange ;};_afba :=vals [1];if _afba < 0.0||_afba > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afba );return nil ,ErrColorOutOfRange ;
};_bdca :=vals [2];if _bdca < 0.0||_bdca > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bdca );return nil ,ErrColorOutOfRange ;};_deggb :=NewPdfColorCalRGB (_ddce ,_afba ,_bdca );
return _deggb ,nil ;};func _fabcf (_cbacd *_bbfa .PdfObjectDictionary ,_gafe *fontCommon )(*pdfFontType0 ,error ){_gfcgdf ,_eecg :=_bbfa .GetArray (_cbacd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_eecg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gafe );
return nil ,_bbfa .ErrRangeError ;};if _gfcgdf .Len ()!=1{_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gfcgdf .Len ());
return nil ,_bbfa .ErrRangeError ;};_ffbc ,_cbga :=_efcge (_gfcgdf .Get (0),false );if _cbga !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cbga ,_gafe );
return nil ,_cbga ;};_bedb :=_cbacd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gdgdfc :="";_bcaae :=_geef (_gafe );_bcaae .DescendantFont =_ffbc ;switch _cgdbb :=_bedb .(type ){case *_bbfa .PdfObjectName :_gdgdfc ,_eecg =_bbfa .GetNameVal (_bedb );
if _eecg {if _gdgdfc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gdgdfc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcaae ._agcb =_efd .NewIdentityTextEncoder (_gdgdfc );}else if _dea .IsPredefinedCMap (_gdgdfc ){_bcaae ._deaca ,_cbga =_dea .LoadPredefinedCMap (_gdgdfc );
if _cbga !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gdgdfc ,_cbga );
};}else {_df .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gdgdfc );};};case *_bbfa .PdfObjectStream :if _bcaae ._abfce ==nil {_caab ,_cbcdf :=_dea .NewCIDSystemInfo (_cgdbb .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cbcdf !=nil {_df .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_cbcdf );};_dcdae :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_caab .Registry ,_caab .Ordering );
if _dea .IsPredefinedCMap (_dcdae ){_bcaae ._deaca ,_cbcdf =_dea .LoadPredefinedCMap (_dcdae );if _cbcdf !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dcdae ,_cbcdf );
};}else {_dcdae =_cgdbb .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_gaffa ,_aabff :=_bbfa .DecodeStream (_cgdbb );if _aabff !=nil {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_aabff );
return _bcaae ,_aabff ;};if _aafca :=_dcdae =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_dcdae =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_aafca {_bcaae ._deaca ,_aabff =_dea .LoadCmapFromData (_gaffa ,_aafca );
if _aabff !=nil {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_aabff ,string (_gaffa ));
return _bcaae ,_aabff ;};_gcae :=make (map[_dea .CharCode ]rune ,256);for _ccgd :=0x00;_ccgd <=0xFF;_ccgd ++{_gcae [_dea .CharCode (_ccgd )]=rune (_ccgd );};_bcaae ._degfb =_dea .NewToUnicodeCMap (_gcae );};};};};if _fadg :=_ffbc .baseFields ()._degfb ;
_fadg !=nil {if _fedeg :=_fadg .Name ();_fedeg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fedeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fedeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fedeg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcaae ._agcb =_efd .NewCMapEncoder (_gdgdfc ,_bcaae ._deaca ,_fadg );
};};return _bcaae ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bbfa .PdfObject )(*PdfFilespec ,error ){_geff :=&PdfFilespec {};var _eafc *_bbfa .PdfObjectDictionary ;if _cdaec ,_edfb :=_bbfa .GetIndirect (obj );_edfb {_geff ._bdbfc =_cdaec ;_deafa ,_bbbb :=_bbfa .GetDict (_cdaec .PdfObject );
if !_bbbb {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bbfa .ErrTypeError ;};_eafc =_deafa ;}else if _cgdb ,_gabe :=_bbfa .GetDict (obj );
_gabe {_geff ._bdbfc =_cgdb ;_eafc =_cgdb ;}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bbfa .ErrTypeError ;};if _eafc ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_gf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bagfe :=_eafc .Get ("\u0054\u0079\u0070\u0065");_bagfe !=nil {_ebdd ,_egce :=_bagfe .(*_bbfa .PdfObjectName );if !_egce {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bagfe );
}else {if *_ebdd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ebdd );
};};};if _fbaea :=_eafc .Get ("\u0046\u0053");_fbaea !=nil {_geff .FS =_fbaea ;};if _fbbge :=_eafc .Get ("\u0046");_fbbge !=nil {_geff .F =_fbbge ;};if _egcd :=_eafc .Get ("\u0055\u0046");_egcd !=nil {_geff .UF =_egcd ;};if _caca :=_eafc .Get ("\u0044\u004f\u0053");
_caca !=nil {_geff .DOS =_caca ;};if _debd :=_eafc .Get ("\u004d\u0061\u0063");_debd !=nil {_geff .Mac =_debd ;};if _geed :=_eafc .Get ("\u0055\u006e\u0069\u0078");_geed !=nil {_geff .Unix =_geed ;};if _ggefb :=_eafc .Get ("\u0049\u0044");_ggefb !=nil {_geff .ID =_ggefb ;
};if _bfefg :=_eafc .Get ("\u0056");_bfefg !=nil {_geff .V =_bfefg ;};if _gcgf :=_eafc .Get ("\u0045\u0046");_gcgf !=nil {_geff .EF =_gcgf ;};if _ddfg :=_eafc .Get ("\u0052\u0046");_ddfg !=nil {_geff .RF =_ddfg ;};if _efea :=_eafc .Get ("\u0044\u0065\u0073\u0063");
_efea !=nil {_geff .Desc =_efea ;};if _bgba :=_eafc .Get ("\u0043\u0049");_bgba !=nil {_geff .CI =_bgba ;};if _facc :=_eafc .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_facc !=nil {_geff .AFRelationship =_facc ;
};return _geff ,nil ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);type fontCommon struct{_fdace string ;_eebdg string ;_gbbg string ;_abfce _bbfa .PdfObject ;_degfb *_dea .CMap ;
_cbbb *PdfFontDescriptor ;_bebac int64 ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_fggg *PdfFont )CharcodesToStrings (charcodes []_efd .CharCode ,replacementText string )([]string ,int ,int ){_egaa :=_fggg .baseFields ();_dffa :=make ([]string ,0,len (charcodes ));_adgcg :=0;_fcbfd :=_fggg .Encoder ();_ddcg :=_egaa ._degfb !=nil &&_fggg .IsSimple ()&&_fggg .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ge .Contains (_egaa ._degfb .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_ddcg &&_fcbfd !=nil {switch _gagcc :=_fcbfd .(type ){case _efd .SimpleEncoder :_dfffb :=_gagcc .BaseName ();if _ ,_fgfcf :=_eecb [_dfffb ];_fgfcf {for _ ,_abgg :=range charcodes {if _gega ,_afae :=_fcbfd .CharcodeToRune (_abgg );_afae {_dffa =append (_dffa ,string (_gega ));
}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_abgg ,charcodes ,_egaa .isCIDFont (),_fggg ,_fcbfd );
_adgcg ++;_dffa =append (_dffa ,_dea .MissingCodeString );};};return _dffa ,len (_dffa ),_adgcg ;};};};for _ ,_bddc :=range charcodes {if _egaa ._degfb !=nil {if _faac ,_aeedab :=_egaa ._degfb .CharcodeToUnicode (_dea .CharCode (_bddc ));_aeedab {_febd ,_ :=_bg .DecodeLastRuneInString (_faac );
_ebfdc :=_bgce (_febd );if !(_ebfdc =="\u0043\u006f"){_dffa =append (_dffa ,_faac );continue ;};_df .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_bddc ,_faac );
};};if _fcbfd !=nil {if _ceeeg ,_fega :=_fcbfd .CharcodeToRune (_bddc );_fega {_abee :=_bgce (_ceeeg );if !(_abee =="\u0043\u006f"){_dffa =append (_dffa ,string (_ceeeg ));continue ;};_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_bddc ,string (_ceeeg ));
};};if replacementText !=""{_dffa =append (_dffa ,replacementText );}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bddc ,charcodes ,_egaa .isCIDFont (),_fggg ,_fcbfd );
_adgcg ++;_dffa =append (_dffa ,_dea .MissingCodeString );};};if _adgcg !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_adgcg ,_fggg );
};return _dffa ,len (_dffa ),_adgcg ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_ebdbg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aafc :=_ebdbg .actualFont ();if _aafc ==nil {_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ebdbg ._gdfa );
return _fg .CharMetrics {},false ;};if _bbagf ,_adda :=_aafc .GetRuneMetrics (r );_adda {return _bbagf ,true ;};if _efbe ,_bbgb :=_ebdbg .GetFontDescriptor ();_bbgb ==nil &&_efbe !=nil {return _fg .CharMetrics {Wx :_efbe ._fgegg },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebdbg );
return _fg .CharMetrics {},false ;};func _dfddfc (_bede *_bbfa .PdfIndirectObject ,_dbdee *_bbfa .PdfObjectDictionary )(*DSS ,error ){if _bede ==nil {_bede =_bbfa .MakeIndirectObject (nil );};_bede .PdfObject =_bbfa .MakeDict ();_befe :=map[string ]*VRI {};
if _bedea ,_gfgaa :=_bbfa .GetDict (_dbdee .Get ("\u0056\u0052\u0049"));_gfgaa {for _ ,_fbfa :=range _bedea .Keys (){if _efgg ,_cdbc :=_bbfa .GetDict (_bedea .Get (_fbfa ));_cdbc {_befe [_ge .ToUpper (_fbfa .String ())]=_dbfdc (_efgg );};};};return &DSS {Certs :_aabcgb (_dbdee .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_aabcgb (_dbdee .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_aabcgb (_dbdee .Get ("\u0043\u0052\u004c\u0073")),VRI :_befe ,_bbca :_bede },nil ;
};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_bebea *PdfReader )GetCatalogViewerPreferences ()(_bbfa .PdfObject ,bool ){if _bebea ._abdcg ==nil {return nil ,false ;};_cccbeb :=_bebea ._abdcg .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _cccbeb ,_cccbeb !=nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bcfae *PdfPageResources )HasFontByName (keyName _bbfa .PdfObjectName )bool {_ ,_ebaba :=_bcfae .GetFontByName (keyName );return _ebaba ;};func (_gcfe *PdfReader )newPdfAnnotationRichMediaFromDict (_dagg *_bbfa .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_egec :=&PdfAnnotationRichMedia {};
_egec .RichMediaSettings =_dagg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_egec .RichMediaContent =_dagg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _egec ,nil ;};func _egfbf (_eccge *_bbfa .PdfObjectStream )(*PdfFunctionType0 ,error ){_cedga :=&PdfFunctionType0 {};_cedga ._cdcd =_eccge ;_cfeca :=_eccge .PdfObjectDictionary ;_efbbd ,_bdcea :=_bbfa .TraceToDirectObject (_cfeca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbfa .PdfObjectArray );
if !_bdcea {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efbbd .Len ()< 0||_efbbd .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cedga .NumInputs =_efbbd .Len ()/2;_bcgd ,_dfcag :=_efbbd .ToFloat64Array ();if _dfcag !=nil {return nil ,_dfcag ;};_cedga .Domain =_bcgd ;_efbbd ,_bdcea =_bbfa .TraceToDirectObject (_cfeca .Get ("\u0052\u0061\u006eg\u0065")).(*_bbfa .PdfObjectArray );
if !_bdcea {_df .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efbbd .Len ()< 0||_efbbd .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cedga .NumOutputs =_efbbd .Len ()/2;_efbf ,_dfcag :=_efbbd .ToFloat64Array ();if _dfcag !=nil {return nil ,_dfcag ;
};_cedga .Range =_efbf ;_efbbd ,_bdcea =_bbfa .TraceToDirectObject (_cfeca .Get ("\u0053\u0069\u007a\u0065")).(*_bbfa .PdfObjectArray );if !_bdcea {_df .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dfcce ,_dfcag :=_efbbd .ToIntegerArray ();
if _dfcag !=nil {return nil ,_dfcag ;};if len (_dfcce )!=_cedga .NumInputs {_df .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedga .Size =_dfcce ;_fegd ,_bdcea :=_bbfa .TraceToDirectObject (_cfeca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bbfa .PdfObjectInteger );
if !_bdcea {_df .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fegd !=1&&*_fegd !=2&&*_fegd !=4&&*_fegd !=8&&*_fegd !=12&&*_fegd !=16&&*_fegd !=24&&*_fegd !=32{_df .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fegd );
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedga .BitsPerSample =int (*_fegd );_cedga .Order =1;_dacb ,_bdcea :=_bbfa .TraceToDirectObject (_cfeca .Get ("\u004f\u0072\u0064e\u0072")).(*_bbfa .PdfObjectInteger );
if _bdcea {if *_dacb !=1&&*_dacb !=3{_df .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dacb );return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedga .Order =int (*_dacb );
};_efbbd ,_bdcea =_bbfa .TraceToDirectObject (_cfeca .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbfa .PdfObjectArray );if _bdcea {_efce ,_dfegb :=_efbbd .ToFloat64Array ();if _dfegb !=nil {return nil ,_dfegb ;};_cedga .Encode =_efce ;};_efbbd ,_bdcea =_bbfa .TraceToDirectObject (_cfeca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bbfa .PdfObjectArray );
if _bdcea {_edagag ,_fcec :=_efbbd .ToFloat64Array ();if _fcec !=nil {return nil ,_fcec ;};_cedga .Decode =_edagag ;};_egaga ,_dfcag :=_bbfa .DecodeStream (_eccge );if _dfcag !=nil {return nil ,_dfcag ;};_cedga ._ggbee =_egaga ;return _cedga ,nil ;};

// String implements interface PdfObject.
func (_dd *PdfAction )String ()string {_fgb ,_dcb :=_dd .ToPdfObject ().(*_bbfa .PdfIndirectObject );if _dcb {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dd ._cad ,_fgb .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_ggcb *PdfActionSound )ToPdfObject ()_bbfa .PdfObject {_ggcb .PdfAction .ToPdfObject ();_cdg :=_ggcb ._ff ;_beb :=_cdg .PdfObject .(*_bbfa .PdfObjectDictionary );_beb .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeSound )));_beb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ggcb .Sound );
_beb .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ggcb .Volume );_beb .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ggcb .Synchronous );_beb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ggcb .Repeat );
_beb .SetIfNotNil ("\u004d\u0069\u0078",_ggcb .Mix );return _cdg ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_dcdc *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_dcdc ._eaddd =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bbfa .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bbfa .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bbfa .PdfObjectBool ;_bagea PdfModel ;_facd _bbfa .PdfObject ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ddddg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddddg .AlternateSpace ==nil {return nil ,_gf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ddddg .AlternateSpace .ColorToRGB (color );};

// A returns the value of the A component of the color.
func (_agac *PdfColorLab )A ()float64 {return _agac [1]};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fbb :=NewPdfAction ();_ffg :=&PdfActionNamed {};_ffg .PdfAction =_fbb ;_fbb .SetContext (_ffg );return _ffg ;};

// HasXObjectByName checks if has XObject resource by name.
func (_fdbafg *PdfPage )HasXObjectByName (name _bbfa .PdfObjectName )bool {_aabc ,_fbagc :=_fdbafg .Resources .XObject .(*_bbfa .PdfObjectDictionary );if !_fbagc {return false ;};if _ecdd :=_aabc .Get (name );_ecdd !=nil {return true ;};return false ;};
func (_gbcbg *PdfWriter )setCatalogVersion (){_gbcbg ._cgfbd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bbfa .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_gbcbg ._cbaaeg .Major ,_gbcbg ._cbaaeg .Minor )));};func (_cebd *PdfReader )newPdfActionNamedFromDict (_cda *_bbfa .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_cda .Get ("\u004e")},nil ;
};func _aabcgb (_bgfea _bbfa .PdfObject )[]*_bbfa .PdfObjectStream {if _bgfea ==nil {return nil ;};_eabf ,_cfdd :=_bbfa .GetArray (_bgfea );if !_cfdd ||_eabf .Len ()==0{return nil ;};_cedcb :=make ([]*_bbfa .PdfObjectStream ,0,_eabf .Len ());for _ ,_bgabd :=range _eabf .Elements (){if _dgecdg ,_daegc :=_bbfa .GetStream (_bgabd );
_daegc {_cedcb =append (_cedcb ,_dgecdg );};};return _cedcb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gddfc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func _cedd (_dfcb _bbfa .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_fade :=NewPdfColorspaceSpecialIndexed ();if _abcf ,_dabdb :=_dfcb .(*_bbfa .PdfIndirectObject );_dabdb {_fade ._agcgg =_abcf ;
};_dfcb =_bbfa .TraceToDirectObject (_dfcb );_dbde ,_bgec :=_dfcb .(*_bbfa .PdfObjectArray );if !_bgec {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbde .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dfcb =_dbde .Get (0);_fbgf ,_bgec :=_dfcb .(*_bbfa .PdfObjectName );if !_bgec {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fbgf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_dfcb =_dbde .Get (1);_gdbde ,_gdbb :=DetermineColorspaceNameFromPdfObject (_dfcb );if _gdbb !=nil {return nil ,_gdbb ;};if _gdbde =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gdbde =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gdbde );
return nil ,_cfca ;};_acdg ,_gdbb :=NewPdfColorspaceFromPdfObject (_dfcb );if _gdbb !=nil {return nil ,_gdbb ;};_fade .Base =_acdg ;_dfcb =_dbde .Get (2);_geaaa ,_gdbb :=_bbfa .GetNumberAsInt64 (_dfcb );if _gdbb !=nil {return nil ,_gdbb ;};if _geaaa > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_fade .HiVal =int (_geaaa );_dfcb =_dbde .Get (3);_fade .Lookup =_dfcb ;_dfcb =_bbfa .TraceToDirectObject (_dfcb );var _beacf []byte ;if _cgege ,_fffge :=_dfcb .(*_bbfa .PdfObjectString );_fffge {_beacf =_cgege .Bytes ();_df .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_beacf );
}else if _bcdb ,_acgc :=_dfcb .(*_bbfa .PdfObjectStream );_acgc {_df .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dfcb .String ());_df .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_bcdb .Stream ),_bcdb .Stream );
_dfbg ,_cebcg :=_bbfa .DecodeStream (_bcdb );if _cebcg !=nil {return nil ,_cebcg ;};_df .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dfbg ),_dfbg );_beacf =_dfbg ;}else {_df .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dfcb );
return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_beacf )< _fade .Base .GetNumComponents ()*(_fade .HiVal +1){_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_df .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_beacf ),_fade .Base .GetNumComponents (),_fade .HiVal );
}else {_beacf =_beacf [:_fade .Base .GetNumComponents ()*(_fade .HiVal +1)];};_fade ._aadc =_beacf ;return _fade ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_efef *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgbff ,_deecb :=_bbfa .GetNumbersAsFloat (objects );
if _deecb !=nil {return nil ,_deecb ;};return _efef .ColorFromFloats (_bgbff );};

// ToPdfObject implements interface PdfModel.
func (_ecdb *Permissions )ToPdfObject ()_bbfa .PdfObject {return _ecdb ._ccbbdc };

// Mask returns the uin32 bitmask for the specific flag.
func (_bdbe FieldFlag )Mask ()uint32 {return uint32 (_bdbe )};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ea .Time ){_efgcc .Lock ();defer _efgcc .Unlock ();_afbaa =modifiedDate ;};func (_eee *PdfReader )newPdfAnnotationCaretFromDict (_begd *_bbfa .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_adae :=PdfAnnotationCaret {};
_dcc ,_ebee :=_eee .newPdfAnnotationMarkupFromDict (_begd );if _ebee !=nil {return nil ,_ebee ;};_adae .PdfAnnotationMarkup =_dcc ;_adae .RD =_begd .Get ("\u0052\u0044");_adae .Sy =_begd .Get ("\u0053\u0079");return &_adae ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bdag :=map[rune ]int {};for _ ,_cegf :=range text {_bdag [_cegf ]++;};return _bdag ;};

// CustomKeys returns all custom info keys as list.
func (_afgg *PdfInfo )CustomKeys ()[]string {if _afgg ._gaga ==nil {return nil ;};_eafa :=make ([]string ,len (_afgg ._gaga .Keys ()));for _ ,_fcgeg :=range _afgg ._gaga .Keys (){_eafa =append (_eafa ,_fcgeg .String ());};return _eafa ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_eacc *PdfPageResources )GetXObjectFormByName (keyName _bbfa .PdfObjectName )(*XObjectForm ,error ){_eacgb ,_gcdeb :=_eacc .GetXObjectByName (keyName );if _eacgb ==nil {return nil ,nil ;};if _gcdeb !=XObjectTypeForm {return nil ,_gf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_dcgc ,_afdb :=NewXObjectFormFromStream (_eacgb );if _afdb !=nil {return nil ,_afdb ;};return _dcgc ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_daaaf *modelManager )GetPrimitiveFromModel (model PdfModel )_bbfa .PdfObject {_daaaf ._beag .RLock ();defer _daaaf ._beag .RUnlock ();_abebg ,_caae :=_daaaf ._abbbd [model ];if !_caae {return nil ;};return _abebg ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_fdggg *_bbfa .PdfObjectDictionary ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_febb *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_fddbd :=[]*EmbeddedFile {};_aadf ,_gefafd :=_febb .GetNameDictionary ();if _gefafd !=nil {return nil ,_gefafd ;};if _aadf ==nil {return _fddbd ,nil ;};_ddgaa :=_agabe (_aadf );if _ddgaa .EmbeddedFiles ==nil {return nil ,nil ;
};_dfgge :=_ddgaa .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ffdcc ,_cfcag :=_dfgge .(*_bbfa .PdfObjectArray );if !_cfcag {return nil ,_gf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _bgfce :=1;_bgfce < len (_ffdcc .Elements ());_bgfce +=2{if _bgfce %2!=0{_efccad :=_ffdcc .Get (_bgfce );_gfgag ,_cegfa :=NewPdfFilespecFromObj (_efccad );if _cegfa !=nil {return nil ,_cegfa ;};_gfdge ,_cegfa :=NewEmbeddedFileFromObject (_gfgag .EF );
if _cegfa !=nil {return nil ,_cegfa ;};_dbbe ,_cbfc :=_gfgag .F .(*_bbfa .PdfObjectString );if _cbfc {_gfdge .Name =_dbbe .Str ();};_gfdge .Description =_gfgag .Desc .WriteString ();_gfdge .Relationship =RelationshipUnspecified ;if _gfgag .AFRelationship !=nil {switch _gfgag .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_gfdge .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_gfdge .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_gfdge .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_gfdge .Relationship =RelationshipSupplement ;
default:_gfdge .Relationship =RelationshipUnspecified ;};};_fddbd =append (_fddbd ,_gfdge );};};return _fddbd ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_fgecd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fgecd .fill (provider ,nil )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_aedg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gddg *PdfPage )GetPageDict ()*_bbfa .PdfObjectDictionary {_gdcba :=_gddg ._cgef ;_gdcba .Clear ();_gdcba .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0050\u0061\u0067\u0065"));_gdcba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gddg .Parent );
if _gddg .LastModified !=nil {_gdcba .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gddg .LastModified .ToPdfObject ());};if _gddg .Resources !=nil {_gdcba .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gddg .Resources .ToPdfObject ());
};if _gddg .CropBox !=nil {_gdcba .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gddg .CropBox .ToPdfObject ());};if _gddg .MediaBox !=nil {_gdcba .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gddg .MediaBox .ToPdfObject ());};if _gddg .BleedBox !=nil {_gdcba .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gddg .BleedBox .ToPdfObject ());
};if _gddg .TrimBox !=nil {_gdcba .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gddg .TrimBox .ToPdfObject ());};if _gddg .ArtBox !=nil {_gdcba .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gddg .ArtBox .ToPdfObject ());};_gdcba .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gddg .BoxColorInfo );
_gdcba .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gddg .Contents );if _gddg .Rotate !=nil {_gdcba .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbfa .MakeInteger (*_gddg .Rotate ));};_gdcba .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gddg .Group );
_gdcba .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gddg .Thumb );_gdcba .SetIfNotNil ("\u0042",_gddg .B );_gdcba .SetIfNotNil ("\u0044\u0075\u0072",_gddg .Dur );_gdcba .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gddg .Trans );_gdcba .SetIfNotNil ("\u0041\u0041",_gddg .AA );
_gdcba .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gddg .Metadata );_gdcba .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gddg .PieceInfo );_gdcba .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gddg .StructParents );
_gdcba .SetIfNotNil ("\u0049\u0044",_gddg .ID );_gdcba .SetIfNotNil ("\u0050\u005a",_gddg .PZ );_gdcba .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gddg .SeparationInfo );_gdcba .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gddg .Tabs );
_gdcba .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gddg .TemplateInstantiated );_gdcba .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gddg .PresSteps );_gdcba .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gddg .UserUnit );
_gdcba .SetIfNotNil ("\u0056\u0050",_gddg .VP );if _gddg ._eaabc !=nil {_edadc :=_bbfa .MakeArray ();for _ ,_eeae :=range _gddg ._eaabc {if _afccg :=_eeae .GetContext ();_afccg !=nil {_edadc .Append (_afccg .ToPdfObject ());}else {_edadc .Append (_eeae .ToPdfObject ());
};};if _edadc .Len ()> 0{_gdcba .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_edadc );};}else if _gddg .Annots !=nil {_gdcba .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gddg .Annots );};return _gdcba ;};

// SetContext sets the sub action (context).
func (_fcg *PdfAction )SetContext (ctx PdfModel ){_fcg ._cad =ctx };func (_ccef *PdfPage )setContainer (_dggbd *_bbfa .PdfIndirectObject ){_dggbd .PdfObject =_ccef ._cgef ;_ccef ._bfaag =_dggbd ;};

// Register registers (caches) a model to primitive object relationship.
func (_dbfag *modelManager )Register (primitive _bbfa .PdfObject ,model PdfModel ){_dbfag ._beag .Lock ();defer _dbfag ._beag .Unlock ();_dbfag ._gcgc .Lock ();defer _dbfag ._gcgc .Unlock ();_dbfag ._abbbd [model ]=primitive ;_dbfag ._cbgc [primitive ]=model ;
};

// ToPdfObject converts the font to a PDF representation.
func (_geead *pdfFontType0 )ToPdfObject ()_bbfa .PdfObject {if _geead ._fbecg ==nil {_geead ._fbecg =&_bbfa .PdfIndirectObject {};};_aafdc :=_geead .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_geead ._fbecg .PdfObject =_aafdc ;if _geead .Encoding !=nil {_aafdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geead .Encoding );
}else if _geead ._agcb !=nil {_aafdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_geead ._agcb .ToPdfObject ());};if _geead .DescendantFont !=nil {_aafdc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bbfa .MakeArray (_geead .DescendantFont .ToPdfObject ()));
};return _geead ._fbecg ;};func (_agea *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_efcbb *Image )ColorAt (x ,y int )(_f .Color ,error ){_gbeg :=_bbf .BytesPerLine (int (_efcbb .Width ),int (_efcbb .BitsPerComponent ),_efcbb .ColorComponents );switch _efcbb .ColorComponents {case 1:return _bbf .ColorAtGrayscale (x ,y ,int (_efcbb .BitsPerComponent ),_gbeg ,_efcbb .Data ,_efcbb ._acgd );
case 3:return _bbf .ColorAtNRGBA (x ,y ,int (_efcbb .Width ),_gbeg ,int (_efcbb .BitsPerComponent ),_efcbb .Data ,_efcbb ._eccdd ,_efcbb ._acgd );case 4:return _bbf .ColorAtCMYK (x ,y ,int (_efcbb .Width ),_efcbb .Data ,_efcbb ._acgd );};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efcbb .ColorComponents ,_efcbb .BitsPerComponent );
return nil ,_gf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_abfd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdaad ,_aeea :=color .(*PdfColorDeviceCMYK );if !_aeea {_df .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egea :=_gdaad .C ();_bdgf :=_gdaad .M ();_eced :=_gdaad .Y ();_efec :=_gdaad .K ();_egea =_egea *(1-_efec )+_efec ;_bdgf =_bdgf *(1-_efec )+_efec ;
_eced =_eced *(1-_efec )+_efec ;_eabe :=1-_egea ;_cecc :=1-_bdgf ;_adba :=1-_eced ;return NewPdfColorDeviceRGB (_eabe ,_cecc ,_adba ),nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_adab *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adab .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _adab .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cece :=NewPdfColorspaceDeviceGray ();return _cece .ColorToRGB (color );}else if _adab .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _adab .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_affad :=NewPdfColorspaceDeviceCMYK ();return _affad .ColorToRGB (color );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_adab );
return _adab .Alternate .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_fdf *PdfActionJavaScript )ToPdfObject ()_bbfa .PdfObject {_fdf .PdfAction .ToPdfObject ();_efe :=_fdf ._ff ;_fec :=_efe .PdfObject .(*_bbfa .PdfObjectDictionary );_fec .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeJavaScript )));_fec .SetIfNotNil ("\u004a\u0053",_fdf .JS );
return _efe ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_bfefc *PdfPageResources )HasPatternByName (keyName _bbfa .PdfObjectName )bool {_ ,_fceba :=_bfefc .GetPatternByName (keyName );return _fceba ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bbfa .PdfObject ;NewWindow _bbfa .PdfObject ;T _bbfa .PdfObject ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bbfa .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_cgace *_bbfa .PdfIndirectObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_aecbb *PdfPageResources )GetXObjectImageByName (keyName _bbfa .PdfObjectName )(*XObjectImage ,error ){_bgefg ,_ccccf :=_aecbb .GetXObjectByName (keyName );if _bgefg ==nil {return nil ,nil ;};if _ccccf !=XObjectTypeImage {return nil ,_gf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_dfaea ,_fdfbf :=NewXObjectImageFromStream (_bgefg );if _fdfbf !=nil {return nil ,_fdfbf ;};return _dfaea ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gfgb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedg :=vals [0];if _cedg < 0.0||_cedg > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cedg );
return nil ,ErrColorOutOfRange ;};_fdgaac :=vals [1];if _fdgaac < 0.0||_fdgaac > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cedg );return nil ,ErrColorOutOfRange ;
};_efgdg :=vals [2];if _efgdg < 0.0||_efgdg > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cedg );return nil ,ErrColorOutOfRange ;};_fdcc :=NewPdfColorDeviceRGB (_cedg ,_fdgaac ,_efgdg );
return _fdcc ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_dbc *PdfReader )newPdfActionURIFromDict (_aga *_bbfa .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_aga .Get ("\u0055\u0052\u0049"),IsMap :_aga .Get ("\u0049\u0073\u004da\u0070")},nil ;};const (XObjectTypeUndefined XObjectType =iota ;
XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// SetTabOrder sets the tab order for the page.
func (_dbag *PdfPage )SetTabOrder (order TabOrderType ){_dbag .Tabs =_bbfa .MakeName (string (order ))};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bbfa .PdfObject ;IsMap _bbfa .PdfObject ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _bbfa .PdfObject )(*EmbeddedFile ,error ){_cadc :=_bbfa .TraceToDirectObject (obj );_acaae ,_gcecb :=_cadc .(*_bbfa .PdfObjectDictionary );if !_gcecb {return nil ,_gf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_egdf :=_bbfa .TraceToDirectObject (_acaae .Get ("\u0046"));if _egdf ==nil {return nil ,_gf .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_ddfae ,_gcecb :=_egdf .(*_bbfa .PdfObjectStream );
if !_gcecb {return nil ,_gf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_fecc :=_ddfae .PdfObjectDictionary ;_effd :=_fecc .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _effd ==nil {return nil ,_gf .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_cfbge ,_gcecb :=_effd .(*_bbfa .PdfObjectDictionary );if !_gcecb {return nil ,_gf .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_ffage :="";_faae :=_cfbge .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _faae !=nil {_ffage =_faae .(*_bbfa .PdfObjectString ).Str ();};_fcdcd ,_ggfdd :=_bbfa .DecodeStream (_ddfae );if _ggfdd !=nil {return nil ,_ggfdd ;};_gcad :=&EmbeddedFile {Content :_fcdcd ,Hash :_ffage };return _gcad ,nil ;};func _cfed (_gfef *PdfPage )map[_bbfa .PdfObjectName ]_bbfa .PdfObject {_cbbef :=make (map[_bbfa .PdfObjectName ]_bbfa .PdfObject );
if _gfef .Resources ==nil {return _cbbef ;};if _gfef .Resources .Font !=nil {if _cbab ,_edcc :=_bbfa .GetDict (_gfef .Resources .Font );_edcc {for _ ,_geca :=range _cbab .Keys (){_cbbef [_geca ]=_cbab .Get (_geca );};};};if _gfef .Resources .ExtGState !=nil {if _fbabb ,_fde :=_bbfa .GetDict (_gfef .Resources .ExtGState );
_fde {for _ ,_agbe :=range _fbabb .Keys (){_cbbef [_agbe ]=_fbabb .Get (_agbe );};};};if _gfef .Resources .XObject !=nil {if _ceeb ,_bafg :=_bbfa .GetDict (_gfef .Resources .XObject );_bafg {for _ ,_fcbb :=range _ceeb .Keys (){_cbbef [_fcbb ]=_ceeb .Get (_fcbb );
};};};if _gfef .Resources .Pattern !=nil {if _eccd ,_bdcbe :=_bbfa .GetDict (_gfef .Resources .Pattern );_bdcbe {for _ ,_cbgg :=range _eccd .Keys (){_cbbef [_cbgg ]=_eccd .Get (_cbgg );};};};if _gfef .Resources .Shading !=nil {if _febg ,_ddbc :=_bbfa .GetDict (_gfef .Resources .Shading );
_ddbc {for _ ,_bcaed :=range _febg .Keys (){_cbbef [_bcaed ]=_febg .Get (_bcaed );};};};if _gfef .Resources .ProcSet !=nil {if _gfgg ,_dgee :=_bbfa .GetDict (_gfef .Resources .ProcSet );_dgee {for _ ,_agcg :=range _gfgg .Keys (){_cbbef [_agcg ]=_gfgg .Get (_agcg );
};};};if _gfef .Resources .Properties !=nil {if _gcg ,_adeec :=_bbfa .GetDict (_gfef .Resources .Properties );_adeec {for _ ,_dfbc :=range _gcg .Keys (){_cbbef [_dfbc ]=_gcg .Get (_dfbc );};};};return _cbbef ;};

// PrintScaling returns the value of the printScaling.
func (_acdb *ViewerPreferences )PrintScaling ()PrintScaling {return _acdb ._beced };

// AddImageResource adds an image to the XObject resources.
func (_cfac *PdfPage )AddImageResource (name _bbfa .PdfObjectName ,ximg *XObjectImage )error {var _cgbbc *_bbfa .PdfObjectDictionary ;if _cfac .Resources .XObject ==nil {_cgbbc =_bbfa .MakeDict ();_cfac .Resources .XObject =_cgbbc ;}else {var _acagga bool ;
_cgbbc ,_acagga =(_cfac .Resources .XObject ).(*_bbfa .PdfObjectDictionary );if !_acagga {return _gf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_cgbbc .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_fca *PdfReader )newPdfAnnotationFreeTextFromDict (_dgge *_bbfa .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_deee :=PdfAnnotationFreeText {};_adg ,_fad :=_fca .newPdfAnnotationMarkupFromDict (_dgge );if _fad !=nil {return nil ,_fad ;
};_deee .PdfAnnotationMarkup =_adg ;_deee .DA =_dgge .Get ("\u0044\u0041");_deee .Q =_dgge .Get ("\u0051");_deee .RC =_dgge .Get ("\u0052\u0043");_deee .DS =_dgge .Get ("\u0044\u0053");_deee .CL =_dgge .Get ("\u0043\u004c");_deee .IT =_dgge .Get ("\u0049\u0054");
_deee .BE =_dgge .Get ("\u0042\u0045");_deee .RD =_dgge .Get ("\u0052\u0044");_deee .BS =_dgge .Get ("\u0042\u0053");_deee .LE =_dgge .Get ("\u004c\u0045");return &_deee ,nil ;};func _cgdaf (_bgdfe *XObjectImage )error {if _bgdfe .SMask ==nil {return nil ;
};_ebfge ,_ccbdba :=_bgdfe .SMask .(*_bbfa .PdfObjectStream );if !_ccbdba {_df .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bbfa .ErrTypeError ;};_cdaff :=_ebfge .PdfObjectDictionary ;_dgdee :=_cdaff .Get ("\u004d\u0061\u0074t\u0065");if _dgdee ==nil {return nil ;};_cgfde ,_agbbc :=_ccdbd (_dgdee .(*_bbfa .PdfObjectArray ));if _agbbc !=nil {return _agbbc ;};_aeebc :=_bbfa .MakeArrayFromFloats ([]float64 {_cgfde });
_cdaff .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aeebc );return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_efed *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=_efed .GetNumComponents (){return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbae ,_gabdf :=_bbfa .GetNumbersAsFloat (objects );
if _gabdf !=nil {return nil ,_gabdf ;};return _efed .ColorFromFloats (_cbae );};func (_gfgbc *PdfWriter )addObject (_gaddf _bbfa .PdfObject )bool {_beeece :=_gfgbc .hasObject (_gaddf );if !_beeece {_gffff :=_bbfa .ResolveReferencesDeep (_gaddf ,_gfgbc ._aeead );
if _gffff !=nil {_df .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gffff );};_gfgbc ._ecdbe =append (_gfgbc ._ecdbe ,_gaddf );_gfgbc ._fdaa [_gaddf ]=struct{}{};return true ;};return false ;
};func (_fggec *pdfFontType3 )baseFields ()*fontCommon {return &_fggec .fontCommon };

// ViewClip returns the value of the viewClip.
func (_gabb *ViewerPreferences )ViewClip ()PageBoundary {return _gabb ._ggbae };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bde :=PdfColorCalGray (grayVal );return &_bde ;};func (_adeba *PdfReader )resolveReference (_cgcbg *_bbfa .PdfObjectReference )(_bbfa .PdfObject ,bool ,error ){_gdab ,_ceebed :=_adeba ._fdefeb .ObjCache [int (_cgcbg .ObjectNumber )];
if !_ceebed {_df .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cgcbg );_fgade ,_gagea :=_adeba ._fdefeb .LookupByReference (*_cgcbg );if _gagea !=nil {return nil ,false ,_gagea ;};
_adeba ._fdefeb .ObjCache [int (_cgcbg .ObjectNumber )]=_fgade ;return _fgade ,false ,nil ;};return _gdab ,true ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bbfa .PdfObject ;Name _bbfa .PdfObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbfa .PdfObject ;IC _bbfa .PdfObject ;RO _bbfa .PdfObject ;OverlayText _bbfa .PdfObject ;Repeat _bbfa .PdfObject ;DA _bbfa .PdfObject ;Q _bbfa .PdfObject ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_aef :=NewPdfAnnotation ();_cbfb :=&PdfAnnotationInk {};_cbfb .PdfAnnotation =_aef ;_cbfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aef .SetContext (_cbfb );return _cbfb ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_effgb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gdgfg :=_effgb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gdgfg )> 0;_aceac :=_bbfa .NewFlateEncoder ();_geaeg :=_bbfa .MakeArray ();if wrapContents {_gcbdb ,_ccbd :=_bbfa .MakeStream ([]byte ("\u0071\u000a"),_aceac );
if _ccbd !=nil {return _ccbd ;};_geaeg .Append (_gcbdb );};_geaeg .Append (_gdgfg ...);if wrapContents {_gdgca ,_aceed :=_bbfa .MakeStream ([]byte ("\u000a\u0051\u000a"),_aceac );if _aceed !=nil {return _aceed ;};_geaeg .Append (_gdgca );};_acabg ,_dbdbe :=_bbfa .MakeStream (cs ,_aceac );
if _dbdbe !=nil {return _dbdbe ;};_geaeg .Append (_acabg );_effgb .Contents =_geaeg ;return nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_abae *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_dfbcb :=func (_fbad float64 )float64 {if _fbad >=6.0/29{return _fbad *_fbad *_fbad ;};return 108.0/841*(_fbad -4.0/29.0);};_geccg :=img ._acgd ;if len (_geccg )!=6{_df .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_geccg =_abae .DecodeArray ();};_fcbd :=_cgb .NewReader (img .getBase ());_gfga :=_bbf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._eccdd ,img ._acgd );_dbda :=_cgb .NewWriter (_gfga );_fdae :=_dg .Pow (2,float64 (img .BitsPerComponent ))-1;
_fecab :=make ([]uint32 ,3);var (_dfccg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fgfa ,_dabbg ,_cbbd float64 ;);for {_dfccg =_fcbd .ReadSamples (_fecab );if _dfccg ==_cb .EOF {break ;}else if _dfccg !=nil {return img ,_dfccg ;};Ls =float64 (_fecab [0])/_fdae ;
As =float64 (_fecab [1])/_fdae ;Bs =float64 (_fecab [2])/_fdae ;Ls =_bbf .LinearInterpolate (Ls ,0.0,1.0,_geccg [0],_geccg [1]);As =_bbf .LinearInterpolate (As ,0.0,1.0,_geccg [2],_geccg [3]);Bs =_bbf .LinearInterpolate (Bs ,0.0,1.0,_geccg [4],_geccg [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_abae .WhitePoint [0]*_dfbcb (L );Y =_abae .WhitePoint [1]*_dfbcb (M );Z =_abae .WhitePoint [2]*_dfbcb (N );_fgfa =3.240479*X +-1.537150*Y +-0.498535*Z ;_dabbg =-0.969256*X +1.875992*Y +0.041556*Z ;
_cbbd =0.055648*X +-0.204043*Y +1.057311*Z ;_fgfa =_dg .Min (_dg .Max (_fgfa ,0),1.0);_dabbg =_dg .Min (_dg .Max (_dabbg ,0),1.0);_cbbd =_dg .Min (_dg .Max (_cbbd ,0),1.0);_fecab [0]=uint32 (_fgfa *_fdae );_fecab [1]=uint32 (_dabbg *_fdae );_fecab [2]=uint32 (_cbbd *_fdae );
if _dfccg =_dbda .WriteSamples (_fecab );_dfccg !=nil {return img ,_dfccg ;};};return _ebdgf (&_gfga ),nil ;};func (_gcfc *PdfReader )newPdfAnnotationWidgetFromDict (_gabd *_bbfa .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_eafe :=PdfAnnotationWidget {};
_eafe .H =_gabd .Get ("\u0048");_eafe .MK =_gabd .Get ("\u004d\u004b");_eafe .A =_gabd .Get ("\u0041");_eafe .AA =_gabd .Get ("\u0041\u0041");_eafe .BS =_gabd .Get ("\u0042\u0053");_eafe .Parent =_gabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_eafe ,nil ;
};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cfbb :=NewPdfAnnotation ();_abe :=&PdfAnnotationPolyLine {};_abe .PdfAnnotation =_cfbb ;_abe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfbb .SetContext (_abe );return _abe ;};func _acaga (_cddfd *PdfPage ){_gageg :=_dfc .GetLicenseKey ();
if _gageg !=nil &&_gageg .IsLicensed (){return ;};_agccb :=_bbfa .PdfObjectName ("\u0055\u0046\u0031");if !_cddfd .Resources .HasFontByName (_agccb ){_cddfd .Resources .SetFontByName (_agccb ,DefaultFont ().ToPdfObject ());};var _dadcb []string ;_dadcb =append (_dadcb ,"\u0071");
_dadcb =append (_dadcb ,"\u0042\u0054");_dadcb =append (_dadcb ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_agccb .String ()));_dadcb =append (_dadcb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dadcb =append (_dadcb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_agbef :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dadcb =append (_dadcb ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_agbef ));_dadcb =append (_dadcb ,"\u0045\u0054");_dadcb =append (_dadcb ,"\u0051");_gdfcc :=_ge .Join (_dadcb ,"\u000a");_cddfd .AddContentStreamByString (_gdfcc );_cddfd .ToPdfObject ();
};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject converts rectangle to a PDF object.
func (_cdfdgb *PdfRectangle )ToPdfObject ()_bbfa .PdfObject {return _bbfa .MakeArray (_bbfa .MakeFloat (_cdfdgb .Llx ),_bbfa .MakeFloat (_cdfdgb .Lly ),_bbfa .MakeFloat (_cdfdgb .Urx ),_bbfa .MakeFloat (_cdfdgb .Ury ));};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dfdb *PdfField )FullName ()(string ,error ){var _fgce _de .Buffer ;_afac :=[]string {};if _dfdb .T !=nil {_afac =append (_afac ,_dfdb .T .Decoded ());};_gfdff :=map[*PdfField ]bool {};_gfdff [_dfdb ]=true ;_ddece :=_dfdb .Parent ;for _ddece !=nil {if _ ,_gbbf :=_gfdff [_ddece ];
_gbbf {return _fgce .String (),_gf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ddece .T ==nil {return _fgce .String (),_gf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_afac =append (_afac ,_ddece .T .Decoded ());_gfdff [_ddece ]=true ;_ddece =_ddece .Parent ;};for _dgad :=len (_afac )-1;_dgad >=0;_dgad --{_fgce .WriteString (_afac [_dgad ]);if _dgad > 0{_fgce .WriteString ("\u002e");};};return _fgce .String (),nil ;
};

// ToPdfObject implements interface PdfModel.
func (_cfff *PdfAnnotationFileAttachment )ToPdfObject ()_bbfa .PdfObject {_cfff .PdfAnnotation .ToPdfObject ();_gcaf :=_cfff ._dbge ;_eeac :=_gcaf .PdfObject .(*_bbfa .PdfObjectDictionary );_cfff .PdfAnnotationMarkup .appendToPdfDictionary (_eeac );_eeac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_eeac .SetIfNotNil ("\u0046\u0053",_cfff .FS );_eeac .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cfff .Name );return _gcaf ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_aebgc *PdfFont )ToPdfObject ()_bbfa .PdfObject {if _aebgc ._gdfa ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bbfa .MakeNull ();
};return _aebgc ._gdfa .ToPdfObject ();};

// String returns a string representation of the field.
func (_ffbae *PdfField )String ()string {if _effe ,_adec :=_ffbae .ToPdfObject ().(*_bbfa .PdfIndirectObject );_adec {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffbae ._ebede ,_effe .PdfObject .String ());};return "";};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func (_acee *PdfReader )newPdfAnnotationSoundFromDict (_gage *_bbfa .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ebgd :=PdfAnnotationSound {};_ede ,_dgedf :=_acee .newPdfAnnotationMarkupFromDict (_gage );if _dgedf !=nil {return nil ,_dgedf ;
};_ebgd .PdfAnnotationMarkup =_ede ;_ebgd .Name =_gage .Get ("\u004e\u0061\u006d\u0065");_ebgd .Sound =_gage .Get ("\u0053\u006f\u0075n\u0064");return &_ebgd ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ggccg *_bbfa .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfAnnotationPopup )ToPdfObject ()_bbfa .PdfObject {_ecb .PdfAnnotation .ToPdfObject ();_gegd :=_ecb ._dbge ;_bfac :=_gegd .PdfObject .(*_bbfa .PdfObjectDictionary );_bfac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0050\u006f\u0070u\u0070"));
_bfac .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecb .Parent );_bfac .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ecb .Open );return _gegd ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bbfa .PdfObjectInteger ;BitsPerComponent *_bbfa .PdfObjectInteger ;BitsPerFlag *_bbfa .PdfObjectInteger ;Decode *_bbfa .PdfObjectArray ;Function []PdfFunction ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bbfa .PdfObjectStream )(*XObjectForm ,error ){_ggffcf :=&XObjectForm {};_ggffcf ._cdbdc =stream ;_eeefa :=*(stream .PdfObjectDictionary );_cffde ,_cdfe :=_bbfa .NewEncoderFromStream (stream );if _cdfe !=nil {return nil ,_cdfe ;
};_ggffcf .Filter =_cffde ;if _fgfdg :=_eeefa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fgfdg !=nil {_gdbdc ,_ebec :=_fgfdg .(*_bbfa .PdfObjectName );if !_ebec {return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gdbdc !="\u0046\u006f\u0072\u006d"{_df .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _ebebb :=_eeefa .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ebebb !=nil {_ggffcf .FormType =_ebebb ;};if _bdcdbb :=_eeefa .Get ("\u0042\u0042\u006f\u0078");_bdcdbb !=nil {_ggffcf .BBox =_bdcdbb ;};if _gbggf :=_eeefa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gbggf !=nil {_ggffcf .Matrix =_gbggf ;};if _cebdg :=_eeefa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cebdg !=nil {_cebdg =_bbfa .TraceToDirectObject (_cebdg );_fabbfc ,_fbabba :=_cebdg .(*_bbfa .PdfObjectDictionary );if !_fbabba {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bbfa .ErrTypeError ;};_ffeeg ,_ggbbabc :=NewPdfPageResourcesFromDict (_fabbfc );if _ggbbabc !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_ggbbabc ;};_ggffcf .Resources =_ffeeg ;_df .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ggffcf .Resources );};_ggffcf .Group =_eeefa .Get ("\u0047\u0072\u006fu\u0070");
_ggffcf .Ref =_eeefa .Get ("\u0052\u0065\u0066");_ggffcf .MetaData =_eeefa .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ggffcf .PieceInfo =_eeefa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ggffcf .LastModified =_eeefa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ggffcf .StructParent =_eeefa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ggffcf .StructParents =_eeefa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ggffcf .OPI =_eeefa .Get ("\u004f\u0050\u0049");
_ggffcf .OC =_eeefa .Get ("\u004f\u0043");_ggffcf .Name =_eeefa .Get ("\u004e\u0061\u006d\u0065");_ggffcf .Stream =stream .Stream ;return _ggffcf ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bbfa .PdfObject ;Volume _bbfa .PdfObject ;Synchronous _bbfa .PdfObject ;Repeat _bbfa .PdfObject ;Mix _bbfa .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bbfa .StreamEncoder ;FormType _bbfa .PdfObject ;BBox _bbfa .PdfObject ;Matrix _bbfa .PdfObject ;Resources *PdfPageResources ;Group _bbfa .PdfObject ;Ref _bbfa .PdfObject ;MetaData _bbfa .PdfObject ;PieceInfo _bbfa .PdfObject ;
LastModified _bbfa .PdfObject ;StructParent _bbfa .PdfObject ;StructParents _bbfa .PdfObject ;OPI _bbfa .PdfObject ;OC _bbfa .PdfObject ;Name _bbfa .PdfObject ;

// Stream data.
Stream []byte ;_cdbdc *_bbfa .PdfObjectStream ;};

// ToPdfObject returns a stream object.
func (_defca *XObjectForm )ToPdfObject ()_bbfa .PdfObject {_ddefb :=_defca ._cdbdc ;_dbgaa :=_ddefb .PdfObjectDictionary ;if _defca .Filter !=nil {_dbgaa =_defca .Filter .MakeStreamDict ();_ddefb .PdfObjectDictionary =_dbgaa ;};_dbgaa .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dbgaa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbfa .MakeName ("\u0046\u006f\u0072\u006d"));_dbgaa .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_defca .FormType );_dbgaa .SetIfNotNil ("\u0042\u0042\u006f\u0078",_defca .BBox );
_dbgaa .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_defca .Matrix );if _defca .Resources !=nil {_dbgaa .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_defca .Resources .ToPdfObject ());};_dbgaa .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_defca .Group );
_dbgaa .SetIfNotNil ("\u0052\u0065\u0066",_defca .Ref );_dbgaa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_defca .MetaData );_dbgaa .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_defca .PieceInfo );_dbgaa .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_defca .LastModified );
_dbgaa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_defca .StructParent );_dbgaa .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_defca .StructParents );_dbgaa .SetIfNotNil ("\u004f\u0050\u0049",_defca .OPI );
_dbgaa .SetIfNotNil ("\u004f\u0043",_defca .OC );_dbgaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_defca .Name );_dbgaa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbfa .MakeInteger (int64 (len (_defca .Stream ))));_ddefb .Stream =_defca .Stream ;return _ddefb ;
};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_afb :=&PdfAppender {_dggb :reader ._aaafe ,Reader :reader ,_dgdb :reader ._fdefeb ,_febe :reader ._gdfeg };_dagc ,_bgbf :=_afb ._dggb .Seek (0,_cb .SeekEnd );
if _bgbf !=nil {return nil ,_bgbf ;};_afb ._gfdf =_dagc ;if _ ,_bgbf =_afb ._dggb .Seek (0,_cb .SeekStart );_bgbf !=nil {return nil ,_bgbf ;};_afb ._deeg ,_bgbf =NewPdfReaderWithOpts (_afb ._dggb ,opts );if _bgbf !=nil {return nil ,_bgbf ;};for _ ,_efgc :=range _afb .Reader .GetObjectNums (){if _afb ._adgg < _efgc {_afb ._adgg =_efgc ;
};};_afb ._fac =_afb ._dgdb .GetXrefTable ();_afb ._eagc =_afb ._dgdb .GetXrefOffset ();_afb ._cefa =append (_afb ._cefa ,_afb ._deeg .PageList ...);_afb ._bbddc =make (map[_bbfa .PdfObject ]struct{});_afb ._ccge =make (map[_bbfa .PdfObject ]int64 );_afb ._cca =make (map[_bbfa .PdfObject ]struct{});
_afb ._dgca =_afb ._deeg .AcroForm ;_afb ._bdbd =_afb ._deeg .DSS ;if opts !=nil {_afb ._dbgeb =opts .Password ;};if encryptOptions !=nil {_afb ._efee =encryptOptions ;};return _afb ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gga *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_acec :=range pages {_acec =_acec .Duplicate ();_acaga (_acec );_gga ._cefa =append (_gga ._cefa ,_acec );};};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bbfa .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _eecdf error ;encoder ,_eecdf =img .getSuitableEncoder ();if _eecdf !=nil {_df .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eecdf );
encoder =_bbfa .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_gbbfb ,_fcggd :=encoder .EncodeBytes (img .Data );if _fcggd !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fcggd );
return nil ,_fcggd ;};_eaagc :=NewXObjectImage ();_cgfafa :=img .Width ;_ebade :=img .Height ;_eaagc .Width =&_cgfafa ;_eaagc .Height =&_ebade ;_ageaf :=img .BitsPerComponent ;_eaagc .BitsPerComponent =&_ageaf ;_eaagc .Filter =encoder ;_eaagc .Stream =_gbbfb ;
if cs ==nil {if img .ColorComponents ==1{_eaagc .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_bbfa .DCTEncoder :_eaagc .ColorSpace =NewPdfColorspaceDeviceRGB ();_ageaf =8;_eaagc .BitsPerComponent =&_ageaf ;
};};}else if img .ColorComponents ==3{_eaagc .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_bbfa .DCTEncoder :_eaagc .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_eaagc .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_gf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_eaagc .ColorSpace =cs ;};if len (img ._eccdd )!=0{_ffbddg :=NewXObjectImage ();_ffbddg .Filter =encoder ;_aadac ,_fbaga :=encoder .EncodeBytes (img ._eccdd );
if _fbaga !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fbaga );return nil ,_fbaga ;};_ffbddg .Stream =_aadac ;_ffbddg .BitsPerComponent =_eaagc .BitsPerComponent ;
_ffbddg .Width =&img .Width ;_ffbddg .Height =&img .Height ;_ffbddg .ColorSpace =NewPdfColorspaceDeviceGray ();_eaagc .SMask =_ffbddg .ToPdfObject ();}else {_eaagc .SMask =xobjIn .SMask ;_eaagc .ImageMask =xobjIn .ImageMask ;if _eaagc .ColorSpace .GetNumComponents ()==1{_cgdaf (_eaagc );
};};return _eaagc ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ecfce *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdf ,_adgfd :=_bbfa .GetNumbersAsFloat (objects );
if _adgfd !=nil {return nil ,_adgfd ;};return _ecfce .ColorFromFloats (_bdf );};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_abdff *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _abdff ._eabcc .(*PdfTilingPattern );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_ggcae *PdfFont )CharcodesToUnicode (charcodes []_efd .CharCode )[]rune {_dfdbc ,_ ,_ :=_ggcae .CharcodesToUnicodeWithStats (charcodes );return _dfdbc ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_cfe :=NewPdfAction ();_dfb :=&PdfActionGoTo {};_dfb .PdfAction =_cfe ;_cfe .SetContext (_dfb );return _dfb ;};func _dfdcc (_efag _bbfa .PdfObject )(*PdfColorspaceLab ,error ){_ebdc :=NewPdfColorspaceLab ();if _gcag ,_eccc :=_efag .(*_bbfa .PdfIndirectObject );
_eccc {_ebdc ._ecee =_gcag ;};_efag =_bbfa .TraceToDirectObject (_efag );_ffcf ,_eddb :=_efag .(*_bbfa .PdfObjectArray );if !_eddb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffcf .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_efag =_bbfa .TraceToDirectObject (_ffcf .Get (0));_fbbc ,_eddb :=_efag .(*_bbfa .PdfObjectName );if !_eddb {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_fbbc !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_efag =_bbfa .TraceToDirectObject (_ffcf .Get (1));_ccdg ,_eddb :=_efag .(*_bbfa .PdfObjectDictionary );
if !_eddb {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_efag =_ccdg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_efag =_bbfa .TraceToDirectObject (_efag );_gaaca ,_eddb :=_efag .(*_bbfa .PdfObjectArray );if !_eddb {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gaaca .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gcac ,_gdbd :=_gaaca .GetAsFloat64Slice ();if _gdbd !=nil {return nil ,_gdbd ;};_ebdc .WhitePoint =_gcac ;_efag =_ccdg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _efag !=nil {_efag =_bbfa .TraceToDirectObject (_efag );_aeff ,_gebg :=_efag .(*_bbfa .PdfObjectArray );
if !_gebg {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _aeff .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_fdgd ,_ffge :=_aeff .GetAsFloat64Slice ();if _ffge !=nil {return nil ,_ffge ;};_ebdc .BlackPoint =_fdgd ;};_efag =_ccdg .Get ("\u0052\u0061\u006eg\u0065");if _efag !=nil {_efag =_bbfa .TraceToDirectObject (_efag );_aggcd ,_aacd :=_efag .(*_bbfa .PdfObjectArray );
if !_aacd {_df .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aggcd .Len ()!=4{_df .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gfbb ,_egad :=_aggcd .GetAsFloat64Slice ();if _egad !=nil {return nil ,_egad ;};_ebdc .Range =_gfbb ;};return _ebdc ,nil ;};func (_gbe *PdfReader )newPdfActionResetFormFromDict (_aab *_bbfa .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_aab .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aab .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _bgage (_gcee string )map[string ]string {_bgebf :=_feebe .Split (_gcee ,-1);_edebb :=map[string ]string {};for _ ,_bbgbf :=range _bgebf {_eegaec :=_ffdf .FindStringSubmatch (_bbgbf );if _eegaec ==nil {continue ;};_bbcf ,_eeee :=_eegaec [1],_eegaec [2];
_edebb [_bbcf ]=_eeee ;};return _edebb ;};func (_gdee *PdfReader )newPdfActionRenditionFromDict (_badg *_bbfa .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_badg .Get ("\u0052"),AN :_badg .Get ("\u0041\u004e"),OP :_badg .Get ("\u004f\u0050"),JS :_badg .Get ("\u004a\u0053")},nil ;
};

// SetFontByName sets the font specified by keyName to the given object.
func (_baagag *PdfPageResources )SetFontByName (keyName _bbfa .PdfObjectName ,obj _bbfa .PdfObject )error {if _baagag .Font ==nil {_baagag .Font =_bbfa .MakeDict ();};_accg ,_bbaff :=_bbfa .TraceToDirectObject (_baagag .Font ).(*_bbfa .PdfObjectDictionary );
if !_bbaff {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbfa .TraceToDirectObject (_baagag .Font ));
return _bbfa .ErrTypeError ;};_accg .Set (keyName ,obj );return nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_efgcc .Lock ();defer _efgcc .Unlock ();_bbac =creator };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bbfa .PdfObjectInteger ;BitsPerComponent *_bbfa .PdfObjectInteger ;VerticesPerRow *_bbfa .PdfObjectInteger ;Decode *_bbfa .PdfObjectArray ;Function []PdfFunction ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bbfa .StreamEncoder ;Intent _bbfa .PdfObject ;ImageMask _bbfa .PdfObject ;Mask _bbfa .PdfObject ;Matte _bbfa .PdfObject ;Decode _bbfa .PdfObject ;Interpolate _bbfa .PdfObject ;
Alternatives _bbfa .PdfObject ;SMask _bbfa .PdfObject ;SMaskInData _bbfa .PdfObject ;Name _bbfa .PdfObject ;StructParent _bbfa .PdfObject ;ID _bbfa .PdfObject ;OPI _bbfa .PdfObject ;Metadata _bbfa .PdfObject ;OC _bbfa .PdfObject ;Stream []byte ;_bgffa *_bbfa .PdfObjectStream ;
_dbdacb bool ;};func _fabdd (_aabbc *_bbfa .PdfObjectDictionary )(*PdfShadingType2 ,error ){_abggec :=PdfShadingType2 {};_bded :=_aabbc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bded ==nil {_df .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_acbb ,_bdeaf :=_bded .(*_bbfa .PdfObjectArray );if !_bdeaf {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bded );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _acbb .Len ()!=4{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acbb .Len ());
return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_abggec .Coords =_acbb ;if _gaegg :=_aabbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gaegg !=nil {_gaegg =_bbfa .TraceToDirectObject (_gaegg );
_dbfb ,_addge :=_gaegg .(*_bbfa .PdfObjectArray );if !_addge {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaegg );return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_abggec .Domain =_dbfb ;};_bded =_aabbc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bded ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abggec .Function =[]PdfFunction {};if _aaebfa ,_gbbba :=_bded .(*_bbfa .PdfObjectArray );_gbbba {for _ ,_dgbea :=range _aaebfa .Elements (){_cfcce ,_fbfdg :=_fcgca (_dgbea );if _fbfdg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbfdg );
return nil ,_fbfdg ;};_abggec .Function =append (_abggec .Function ,_cfcce );};}else {_ebad ,_aceg :=_fcgca (_bded );if _aceg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aceg );
return nil ,_aceg ;};_abggec .Function =append (_abggec .Function ,_ebad );};if _aegcg :=_aabbc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aegcg !=nil {_aegcg =_bbfa .TraceToDirectObject (_aegcg );_cccgg ,_aegge :=_aegcg .(*_bbfa .PdfObjectArray );
if !_aegge {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aegcg );return nil ,_bbfa .ErrTypeError ;};if _cccgg .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cccgg .Len ());
return nil ,ErrInvalidAttribute ;};_abggec .Extend =_cccgg ;};return &_abggec ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fabda *PdfWriter )AddPage (page *PdfPage )error {const _egbbg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_acaga (page );_degca :=page .ToPdfObject ();_df .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_df .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_degca );_ebffd ,_decd :=_bbfa .GetIndirect (_degca );if !_decd {return _gf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_df .Log .Trace ("\u0025\u0073",_ebffd );_df .Log .Trace ("\u0025\u0073",_ebffd .PdfObject );_aefa ,_decd :=_bbfa .GetDict (_ebffd .PdfObject );if !_decd {return _gf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dfcfa ,_decd :=_bbfa .GetName (_aefa .Get ("\u0054\u0079\u0070\u0065"));if !_decd {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_aefa .Get ("\u0054\u0079\u0070\u0065"));
};if _dfcfa .String ()!="\u0050\u0061\u0067\u0065"{return _gf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_ggbcf :=[]_bbfa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_bgeec ,_cfee :=_bbfa .GetIndirect (_aefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_df .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_aefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_cfee );
for _cfee {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bgeec );_edfad ,_eddbf :=_bbfa .GetDict (_bgeec .PdfObject );if !_eddbf {return _gf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_dagee :=range _ggbcf {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dagee );if _aefa .Get (_dagee )!=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gddcc :=_edfad .Get (_dagee );_gddcc !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dagee );_aefa .Set (_dagee ,_gddcc );};};_bgeec ,_cfee =_bbfa .GetIndirect (_edfad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edfad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_aefa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fabda ._fcbdd );_ebffd .PdfObject =_aefa ;_dbcdb ,_decd :=_bbfa .GetDict (_fabda ._fcbdd .PdfObject );if !_decd {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cebfe ,_decd :=_bbfa .GetArray (_dbcdb .Get ("\u004b\u0069\u0064\u0073"));if !_decd {return _gf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_cebfe .Append (_ebffd );_fabda ._bdceaa [_aefa ]=struct{}{};_fabda ._gfddc =append (_fabda ._gfddc ,_ebffd );_gaeea ,_decd :=_bbfa .GetInt (_dbcdb .Get ("\u0043\u006f\u0075n\u0074"));if !_decd {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gaeea =*_gaeea +1;if page ._gcfgf ==nil {_gaadf :=_dfc .Track (_fabda ._gagae ,_egbbg ,_fabda ._dbca );if _gaadf !=nil {return _gaadf ;};}else {_bebca :=_dfc .Track (page ._gcfgf ._fage ,_egbbg ,page ._gcfgf ._affg );if _bebca !=nil {return _bebca ;
};};_fabda .addObject (_ebffd );_gcefg :=_fabda .addObjects (_aefa );if _gcefg !=nil {return _gcefg ;};return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_dbg :=NewPdfAction ();_aeb :=&PdfActionSound {};_aeb .PdfAction =_dbg ;_dbg .SetContext (_aeb );return _aeb ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_fbgb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_fffb :=func (_cdc float64 )float64 {if _cdc >=6.0/29{return _cdc *_cdc *_cdc ;};return 108.0/841*(_cdc -4.0/29.0);};_dcfde ,_bebg :=color .(*PdfColorLab );if !_bebg {_df .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dcfde .L ();AStar :=_dcfde .A ();BStar :=_dcfde .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fbgb .WhitePoint [0]*_fffb (L );Y :=_fbgb .WhitePoint [1]*_fffb (M );Z :=_fbgb .WhitePoint [2]*_fffb (N );_dbaf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bceg :=-0.969256*X +1.875992*Y +0.041556*Z ;_badga :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbaf =_dg .Min (_dg .Max (_dbaf ,0),1.0);
_bceg =_dg .Min (_dg .Max (_bceg ,0),1.0);_badga =_dg .Min (_dg .Max (_badga ,0),1.0);return NewPdfColorDeviceRGB (_dbaf ,_bceg ,_badga ),nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_abdd []_bbfa .PdfObject )([]_bbfa .PdfObject ,error );};

// Encoder returns the font's text encoder.
func (_fcgdcd pdfFontType3 )Encoder ()_efd .TextEncoder {return _fcgdcd ._eagbd };func (_ded *PdfAnnotationMarkup )appendToPdfDictionary (_cdgb *_bbfa .PdfObjectDictionary ){_cdgb .SetIfNotNil ("\u0054",_ded .T );if _ded .Popup !=nil {_cdgb .Set ("\u0050\u006f\u0070u\u0070",_ded .Popup .ToPdfObject ());
};_cdgb .SetIfNotNil ("\u0043\u0041",_ded .CA );_cdgb .SetIfNotNil ("\u0052\u0043",_ded .RC );_cdgb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ded .CreationDate );_cdgb .SetIfNotNil ("\u0049\u0052\u0054",_ded .IRT );
_cdgb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ded .Subj );_cdgb .SetIfNotNil ("\u0052\u0054",_ded .RT );_cdgb .SetIfNotNil ("\u0049\u0054",_ded .IT );_cdgb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ded .ExData );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_edegd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebba :=[]float64 {0.0};if _edegd .C0 !=nil {_ebba =_edegd .C0 ;};_gfagg :=[]float64 {1.0};if _edegd .C1 !=nil {_gfagg =_edegd .C1 ;};var _eggfa []float64 ;for _fcaed :=0;_fcaed < len (_ebba );_fcaed ++{_effb :=_ebba [_fcaed ]+_dg .Pow (x [0],_edegd .N )*(_gfagg [_fcaed ]-_ebba [_fcaed ]);
_eggfa =append (_eggfa ,_effb );};return _eggfa ,nil ;};func _geaeb (_caecb *_bbfa .PdfObjectStream )(*PdfFunctionType4 ,error ){_ddggg :=&PdfFunctionType4 {};_ddggg ._fcgde =_caecb ;_edfga :=_caecb .PdfObjectDictionary ;_ecaba ,_edbbb :=_bbfa .TraceToDirectObject (_edfga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbfa .PdfObjectArray );
if !_edbbb {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ecaba .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ccgfaa ,_dedf :=_ecaba .ToFloat64Array ();
if _dedf !=nil {return nil ,_dedf ;};_ddggg .Domain =_ccgfaa ;_ecaba ,_edbbb =_bbfa .TraceToDirectObject (_edfga .Get ("\u0052\u0061\u006eg\u0065")).(*_bbfa .PdfObjectArray );if _edbbb {if _ecaba .Len ()< 0||_ecaba .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bbddcf ,_ceacg :=_ecaba .ToFloat64Array ();if _ceacg !=nil {return nil ,_ceacg ;};_ddggg .Range =_bbddcf ;};_acfc ,_dedf :=_bbfa .DecodeStream (_caecb );if _dedf !=nil {return nil ,_dedf ;};_ddggg ._aafaf =_acfc ;_dfbdd :=_aa .NewPSParser (_acfc );_ddfgg ,_dedf :=_dfbdd .Parse ();
if _dedf !=nil {return nil ,_dedf ;};_ddggg .Program =_ddfgg ;return _ddggg ,nil ;};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";
StructureTypeSection ="\u0053\u0065\u0063\u0074";StructureTypeDivision ="\u0044\u0069\u0076";StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";
StructureTypeTOCI ="\u0054\u004f\u0043\u0049";StructureTypeIndex ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);func (_adc *PdfAppender )replaceObject (_egab ,_gceb _bbfa .PdfObject ){switch _ggcg :=_egab .(type ){case *_bbfa .PdfIndirectObject :_adc ._ccge [_gceb ]=_ggcg .ObjectNumber ;
case *_bbfa .PdfObjectStream :_adc ._ccge [_gceb ]=_ggcg .ObjectNumber ;};};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_ddafe *PdfPageResources )HasShadingByName (keyName _bbfa .PdfObjectName )bool {_ ,_ggaf :=_ddafe .GetShadingByName (keyName );return _ggaf ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bbfa .PdfObject ;Name _bbfa .PdfObject ;State _bbfa .PdfObject ;StateModel _bbfa .PdfObject ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_dbcbe *PdfReader )IsEncrypted ()(bool ,error ){return _dbcbe ._fdefeb .IsEncrypted ()};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_accfg *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _bbfa .GetNumberAsFloat (_accfg .XHeight );};

// AddKDict adds a K dictionary object to the structure tree root.
func (_cgbff *StructTreeRoot )AddKDict (k *KDict ){_cgbff .K =append (_cgbff .K ,k )};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _ecaad ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fcebf (rs ,opts ,true ,_ecaad );
};func (_ggae *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dbdceb :=_ggae .Parent ;for _dbdceb !=nil {_eceb ,_ggdcc :=_bbfa .GetDict (_dbdceb );if !_ggdcc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _cfebf :=_eceb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cfebf !=nil {_cdgbcg ,_gggbb :=_bbfa .GetDict (_cfebf );
if !_gggbb {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_adfae ,_caecgb :=NewPdfPageResourcesFromDict (_cdgbcg );if _caecgb !=nil {return nil ,_caecgb ;};return _adfae ,nil ;
};_dbdceb =_eceb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bbfa .PdfObject )(*PdfFont ,error ){return _efcge (fontObj ,true )};func (_agbdd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _agbdd ._cbbb };

// C returns the value of the cyan component of the color.
func (_baebc *PdfColorDeviceCMYK )C ()float64 {return _baebc [0]};func (_gca *PdfReader )newPdfActionGotoRFromDict (_bae *_bbfa .PdfObjectDictionary )(*PdfActionGoToR ,error ){_ebdb ,_eabc :=_cge (_bae .Get ("\u0046"));if _eabc !=nil {return nil ,_eabc ;
};return &PdfActionGoToR {D :_bae .Get ("\u0044"),NewWindow :_bae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ebdb },nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ffeg *PdfAppender )UpdateObject (obj _bbfa .PdfObject ){_ffeg .replaceObject (obj ,obj );if _ ,_eece :=_ffeg ._bbddc [obj ];!_eece {_ffeg ._fgee =append (_ffeg ._fgee ,obj );_ffeg ._bbddc [obj ]=struct{}{};};};func (_dbbcb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dbbcb ._cbbb };
func (_cedaa *PdfWriter )writeOutlines ()error {if _cedaa ._bggced ==nil {return nil ;};_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cedaa ._bggced );_fdege :=_cedaa ._bggced .ToPdfObject ();
_df .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fdege ,_fdege ,_fdege );_cedaa ._cgfbd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fdege );
_cbcc :=_cedaa .addObjects (_fdege );if _cbcc !=nil {return _cbcc ;};return nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gdfa pdfFont };

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_fdggg :_bbfa .MakeDict (),ColorComponents :colorComponents };
};func _bebdg (_cfeab *_bbfa .PdfIndirectObject )(*PdfOutline ,error ){_cadb ,_baeed :=_cfeab .PdfObject .(*_bbfa .PdfObjectDictionary );if !_baeed {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cdfab :=NewPdfOutline ();if _aeaad :=_cadb .Get ("\u0054\u0079\u0070\u0065");_aeaad !=nil {_ddced ,_eabea :=_aeaad .(*_bbfa .PdfObjectName );if _eabea {if *_ddced !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ddced );
};};};if _bdebd :=_cadb .Get ("\u0043\u006f\u0075n\u0074");_bdebd !=nil {_cgdba ,_afaee :=_bbfa .GetNumberAsInt64 (_bdebd );if _afaee !=nil {return nil ,_afaee ;};_cdfab .Count =&_cgdba ;};return _cdfab ,nil ;};var (CourierName =_fg .CourierName ;CourierBoldName =_fg .CourierBoldName ;
CourierObliqueName =_fg .CourierObliqueName ;CourierBoldObliqueName =_fg .CourierBoldObliqueName ;HelveticaName =_fg .HelveticaName ;HelveticaBoldName =_fg .HelveticaBoldName ;HelveticaObliqueName =_fg .HelveticaObliqueName ;HelveticaBoldObliqueName =_fg .HelveticaBoldObliqueName ;
SymbolName =_fg .SymbolName ;ZapfDingbatsName =_fg .ZapfDingbatsName ;TimesRomanName =_fg .TimesRomanName ;TimesBoldName =_fg .TimesBoldName ;TimesItalicName =_fg .TimesItalicName ;TimesBoldItalicName =_fg .TimesBoldItalicName ;);

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_gacab *PdfWriter )SetCatalogViewerPreferences (pref _bbfa .PdfObject )error {if pref ==nil {_gacab ._cgfbd .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _fbdbc ,_fcagf :=pref .(*_bbfa .PdfObjectReference );
_fcagf {pref =_fbdbc .Resolve ();if pref ==nil {_gacab ._cgfbd .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};if _ ,_ddebc :=pref .(*_bbfa .PdfIndirectObject );_ddebc {_gacab .addObject (pref );
};_gacab ._cgfbd .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );return nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_efgce *PdfWriter )SetFileName (name string ){_efgce ._dbca =name };

// B returns the value of the B component of the color.
func (_geaa *PdfColorCalRGB )B ()float64 {return _geaa [1]};

// ToPdfObject implements interface PdfModel.
func (_ddd *PdfActionThread )ToPdfObject ()_bbfa .PdfObject {_ddd .PdfAction .ToPdfObject ();_eaaf :=_ddd ._ff ;_dcde :=_eaaf .PdfObject .(*_bbfa .PdfObjectDictionary );_dcde .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeThread )));if _ddd .F !=nil {_dcde .Set ("\u0046",_ddd .F .ToPdfObject ());
};_dcde .SetIfNotNil ("\u0044",_ddd .D );_dcde .SetIfNotNil ("\u0042",_ddd .B );return _eaaf ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dbee *Image )GetParamsDict ()*_bbfa .PdfObjectDictionary {_fdecg :=_bbfa .MakeDict ();_fdecg .Set ("\u0057\u0069\u0064t\u0068",_bbfa .MakeInteger (_dbee .Width ));_fdecg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbfa .MakeInteger (_dbee .Height ));
_fdecg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbfa .MakeInteger (int64 (_dbee .ColorComponents )));_fdecg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbfa .MakeInteger (_dbee .BitsPerComponent ));
return _fdecg ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject converts the K dictionary to a PDF object.
func (_abab *KValue )ToPdfObject ()_bbfa .PdfObject {if _abab ._fcgfe !=nil {return _bbfa .MakeIndirectObject (_abab ._fcgfe .ToPdfObject ());};if _abab ._ffbe !=nil {return _abab ._ffbe ;};if _abab ._aagdb !=nil {return _bbfa .MakeInteger (int64 (*_abab ._aagdb ));
};return nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_bgbd *PdfWriter )SetRotation (rotate int64 )error {_egagc ,_cggag :=_bbfa .GetDict (_bgbd ._fcbdd );if !_cggag {return ErrTypeCheck ;};_egagc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbfa .MakeInteger (rotate ));return nil ;};func (_aeccga *PdfWriter )hasObject (_cddad _bbfa .PdfObject )bool {_ ,_dbgeg :=_aeccga ._fdaa [_cddad ];
return _dbgeg ;};func (_ebddd *PdfReader )buildNameNodes (_ffdgg *_bbfa .PdfIndirectObject ,_bgcda map[_bbfa .PdfObject ]struct{})error {if _ffdgg ==nil {return nil ;};if _ ,_gcebf :=_bgcda [_ffdgg ];_gcebf {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ffdgg .ObjectNumber );
return nil ;};_bgcda [_ffdgg ]=struct{}{};_dbaga ,_gcbfd :=_ffdgg .PdfObject .(*_bbfa .PdfObjectDictionary );if !_gcbfd {return _gf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _acbdb ,_cccc :=_bbfa .GetDict (_dbaga .Get ("\u0044\u0065\u0073t\u0073"));
_cccc {_ebead ,_ddgbd :=_bbfa .GetArray (_acbdb .Get ("\u004b\u0069\u0064\u0073"));if !_ddgbd {return _gf .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ebead );
for _gggebg ,_gcfgfc :=range _ebead .Elements (){_efdef ,_bbbgg :=_bbfa .GetIndirect (_gcfgfc );if !_bbbgg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_efdef );
return _gf .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ebead .Set (_gggebg ,_efdef );_fgfbe :=_ebddd .buildNameNodes (_efdef ,_bgcda );if _fgfbe !=nil {return _fgfbe ;
};};};if _edcb ,_ffegc :=_bbfa .GetDict (_dbaga );_ffegc {if !_bbfa .IsNullObject (_edcb .Get ("\u004b\u0069\u0064\u0073")){if _bfdea ,_egcae :=_bbfa .GetArray (_edcb .Get ("\u004b\u0069\u0064\u0073"));_egcae {for _eecbb ,_dgeea :=range _bfdea .Elements (){if _gfadb ,_dgaef :=_bbfa .GetIndirect (_dgeea );
_dgaef {_bfdea .Set (_eecbb ,_gfadb );_fbfab :=_ebddd .buildNameNodes (_gfadb ,_bgcda );if _fbfab !=nil {return _fbfab ;};};};};};};return nil ;};

// Encoder returns the font's text encoder.
func (_gcacg *pdfFontSimple )Encoder ()_efd .TextEncoder {if _gcacg ._cdea !=nil {return _gcacg ._cdea ;};if _gcacg ._gfce !=nil {return _gcacg ._gfce ;};_dggba ,_ :=_efd .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _dggba ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cd :=NewPdfAction ();_bcf :=&PdfActionLaunch {};_bcf .PdfAction =_cd ;_cd .SetContext (_bcf );return _bcf ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_agcf *PdfAppender )Write (w _cb .Writer )error {if _agcf ._dbdcc {return _gf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_adgd :=NewPdfWriter ();_ecgf ,_bgfa :=_bbfa .GetDict (_adgd ._fcbdd );if !_bgfa {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gdcd ,_bgfa :=_ecgf .Get ("\u004b\u0069\u0064\u0073").(*_bbfa .PdfObjectArray );if !_bgfa {return _gf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_afgc ,_bgfa :=_ecgf .Get ("\u0043\u006f\u0075n\u0074").(*_bbfa .PdfObjectInteger );if !_bgfa {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_efcba :=_agcf ._deeg ._fdefeb ;_bfca :=_efcba .GetTrailer ();if _bfca ==nil {return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aebg ,_bgfa :=_bbfa .GetIndirect (_bfca .Get ("\u0052\u006f\u006f\u0074"));
if !_bgfa {return _gf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gfdd ,_bgfa :=_bbfa .GetDict (_aebg );if !_bgfa {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aebg ,*_bfca );
return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dfabd :=false ;for _ ,_bdce :=range _agcf ._deeg .AcroForm .signatureFields (){if _bdce .Lock !=nil {_dfabd =true ;break ;};};if _dfabd {_adgd ._abaae =_aebg ;
};for _ ,_eadd :=range _gfdd .Keys (){if _adgd ._cgfbd .Get (_eadd )==nil {_cdgd :=_gfdd .Get (_eadd );_adgd ._cgfbd .Set (_eadd ,_cdgd );};};if _agcf ._dgca !=nil {if _agcf ._dgca ._gaeca {if _ddgb :=_bbfa .TraceToDirectObject (_agcf ._dgca .ToPdfObject ());
!_bbfa .IsNullObject (_ddgb ){_adgd ._cgfbd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ddgb );_agcf .updateObjectsDeep (_ddgb ,nil );}else {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_adgd ._cgfbd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agcf ._dgca .ToPdfObject ());_agcf .updateObjectsDeep (_agcf ._dgca .ToPdfObject (),nil );};};if _agcf ._bdbd !=nil {_agcf .updateObjectsDeep (_agcf ._bdbd .ToPdfObject (),nil );
_adgd ._cgfbd .Set ("\u0044\u0053\u0053",_agcf ._bdbd .GetContainingPdfObject ());};if _agcf ._dddg !=nil {_adgd ._cgfbd .Set ("\u0050\u0065\u0072m\u0073",_agcf ._dddg .ToPdfObject ());_agcf .updateObjectsDeep (_agcf ._dddg .ToPdfObject (),nil );};if _adgd ._cbaaeg .Major < 2{_adgd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_adgd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _bedd ,_fbgd :=_bbfa .GetDict (_bfca .Get ("\u0049\u006e\u0066\u006f"));_fbgd {if _cdda ,_eefc :=_bbfa .GetDict (_adgd ._agfdbb );_eefc {for _ ,_ddfe :=range _bedd .Keys (){if _cdda .Get (_ddfe )==nil {_cdda .Set (_ddfe ,_bedd .Get (_ddfe ));
};};};};if _agcf ._gfg !=nil {_adgd ._agfdbb =_bbfa .MakeIndirectObject (_agcf ._gfg .ToPdfObject ());};_agcf .updateObjectsDeep (_adgd ._agfdbb ,nil );_agcf .updateObjectsDeep (_adgd ._abaae ,nil );_ebfd :=false ;if len (_agcf ._deeg .PageList )!=len (_agcf ._cefa ){_ebfd =true ;
}else {for _febgb :=range _agcf ._deeg .PageList {switch {case _agcf ._cefa [_febgb ]==_agcf ._deeg .PageList [_febgb ]:case _agcf ._cefa [_febgb ]==_agcf .Reader .PageList [_febgb ]:default:_ebfd =true ;};if _ebfd {break ;};};};if _ebfd {_agcf .updateObjectsDeep (_adgd ._fcbdd ,nil );
}else {_agcf ._cca [_adgd ._fcbdd ]=struct{}{};};_adgd ._fcbdd .ObjectNumber =_agcf .Reader ._gada .ObjectNumber ;_agcf ._ccge [_adgd ._fcbdd ]=_agcf .Reader ._gada .ObjectNumber ;_fggf :=[]_bbfa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_adcg :=range _agcf ._cefa {_eedd :=_adcg .ToPdfObject ();*_afgc =*_afgc +1;if _dcbcg ,_cfaa :=_eedd .(*_bbfa .PdfIndirectObject );_cfaa &&_dcbcg .GetParser ()==_agcf ._deeg ._fdefeb {_gdcd .Append (&_dcbcg .PdfObjectReference );continue ;};if _cgec ,_decc :=_bbfa .GetDict (_eedd );
_decc {_fddb ,_dfac :=_cgec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbfa .PdfIndirectObject );for _dfac {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fddb );_ffbd ,_ceabe :=_fddb .PdfObject .(*_bbfa .PdfObjectDictionary );
if !_ceabe {return _gf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gdaae :=range _fggf {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gdaae );if _cdafc :=_cgec .Get (_gdaae );
_cdafc !=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_adcg ._cgbfde .Keys ())> 0&&!_ebfd {_ffad :=_adcg ._cgbfde ;if _bab :=_ffad .Get (_gdaae );_bab !=nil {if _cdafc !=_bab {_df .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_gdaae ,_bab );
_cgec .Set (_gdaae ,_bab );};};};continue ;};if _bdde :=_ffbd .Get (_gdaae );_bdde !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gdaae );_cgec .Set (_gdaae ,_bdde );};
};_fddb ,_dfac =_ffbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbfa .PdfIndirectObject );_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ffbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
if _ebfd {_cgec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adgd ._fcbdd );};};_agcf .updateObjectsDeep (_eedd ,nil );_gdcd .Append (_eedd );};if _ ,_dfbe :=_agcf ._dggb .Seek (0,_cb .SeekStart );_dfbe !=nil {return _dfbe ;};_bbfeb :=make (map[SignatureHandler ]_cb .Writer );
_eeace :=_bbfa .MakeArray ();for _ ,_edbe :=range _agcf ._fgee {if _dabe ,_fdce :=_bbfa .GetIndirect (_edbe );_fdce {if _baee ,_aaecc :=_dabe .PdfObject .(*pdfSignDictionary );_aaecc {_cgac :=*_baee ._dbaad ;var _bcccf error ;_bbfeb [_cgac ],_bcccf =_cgac .NewDigest (_baee ._cegcg );
if _bcccf !=nil {return _bcccf ;};_eeace .Append (_bbfa .MakeInteger (0xfffff),_bbfa .MakeInteger (0xfffff));};};};if _eeace .Len ()> 0{_eeace .Append (_bbfa .MakeInteger (0xfffff),_bbfa .MakeInteger (0xfffff));};for _ ,_gcafb :=range _agcf ._fgee {if _abc ,_gddd :=_bbfa .GetIndirect (_gcafb );
_gddd {if _aegc ,_fdgad :=_abc .PdfObject .(*pdfSignDictionary );_fdgad {_aegc .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eeace );};};};_ebcd :=len (_bbfeb )> 0;var _cacc _cb .Reader =_agcf ._dggb ;if _ebcd {_bfe :=make ([]_cb .Writer ,0,len (_bbfeb ));
for _ ,_eadb :=range _bbfeb {_bfe =append (_bfe ,_eadb );};_cacc =_cb .TeeReader (_agcf ._dggb ,_cb .MultiWriter (_bfe ...));};_caba ,_cabfc :=_cb .Copy (w ,_cacc );if _cabfc !=nil {return _cabfc ;};if len (_agcf ._fgee )==0{return nil ;};_adgd ._gaafea =_caba ;
_adgd .ObjNumOffset =_agcf ._adgg ;_adgd ._fccec =true ;_adgd ._bdagd =_agcf ._fac ;_adgd ._fbdad =_agcf ._eagc ;_adgd ._ddddgb =_agcf ._gfdf ;_adgd ._cbaaeg =_agcf ._deeg .PdfVersion ();_adgd ._cffac =_agcf ._ccge ;_adgd ._begfb =_agcf ._dgdb .GetCrypter ();
_adgd ._agfff =_agcf ._dgdb .GetEncryptObj ();_fbeg :=_agcf ._dgdb .GetXrefType ();if _fbeg !=nil {_gbgd :=*_fbeg ==_bbfa .XrefTypeObjectStream ;_adgd ._egbgb =&_gbgd ;};_adgd ._fdaa =map[_bbfa .PdfObject ]struct{}{};_adgd ._ecdbe =[]_bbfa .PdfObject {};
for _ ,_gcgd :=range _agcf ._fgee {if _ ,_feae :=_agcf ._cca [_gcgd ];_feae {continue ;};_adgd .addObject (_gcgd );};_bcef :=w ;if _ebcd {_bcef =_de .NewBuffer (nil );};if _agcf ._dbgeb !=""&&_adgd ._begfb ==nil {_adgd .Encrypt ([]byte (_agcf ._dbgeb ),[]byte (_agcf ._dbgeb ),_agcf ._efee );
};if _aggc :=_bfca .Get ("\u0049\u0044");_aggc !=nil {if _eagfe ,_dfg :=_bbfa .GetArray (_aggc );_dfg {_adgd ._fedbc =_eagfe ;};};if _deecdd :=_adgd .Write (_bcef );_deecdd !=nil {return _deecdd ;};if _ebcd {_gecg :=_bcef .(*_de .Buffer ).Bytes ();_eacf :=_bbfa .MakeArray ();
var _baeb []*pdfSignDictionary ;var _edccc int64 ;for _ ,_aecac :=range _adgd ._ecdbe {if _aage ,_ggg :=_bbfa .GetIndirect (_aecac );_ggg {if _abdg ,_bebe :=_aage .PdfObject .(*pdfSignDictionary );_bebe {_baeb =append (_baeb ,_abdg );_fdeee :=_abdg ._gcdgb +int64 (_abdg ._deaab );
_eacf .Append (_bbfa .MakeInteger (_edccc ),_bbfa .MakeInteger (_fdeee -_edccc ));_edccc =_abdg ._gcdgb +int64 (_abdg ._cadba );};};};_eacf .Append (_bbfa .MakeInteger (_edccc ),_bbfa .MakeInteger (_caba +int64 (len (_gecg ))-_edccc ));_dff :=[]byte (_eacf .WriteString ());
for _ ,_gfb :=range _baeb {_agdg :=int (_gfb ._gcdgb -_caba );for _aece :=_gfb ._bbae ;_aece < _gfb ._bdeee ;_aece ++{_gecg [_agdg +_aece ]=' ';};_babe :=_gecg [_agdg +_gfb ._bbae :_agdg +_gfb ._bdeee ];copy (_babe ,_dff );};var _ffdgb int ;for _ ,_gfae :=range _baeb {_adcgg :=int (_gfae ._gcdgb -_caba );
_bddf :=_gecg [_ffdgb :_adcgg +_gfae ._deaab ];_bfdf :=*_gfae ._dbaad ;_bbfeb [_bfdf ].Write (_bddf );_ffdgb =_adcgg +_gfae ._cadba ;};for _ ,_fgeeb :=range _baeb {_bdced :=_gecg [_ffdgb :];_ccb :=*_fgeeb ._dbaad ;_bbfeb [_ccb ].Write (_bdced );};for _ ,_bdgd :=range _baeb {_agae :=int (_bdgd ._gcdgb -_caba );
_fede :=*_bdgd ._dbaad ;_edfd :=_bbfeb [_fede ];if _beee :=_fede .Sign (_bdgd ._cegcg ,_edfd );_beee !=nil {return _beee ;};_bdgd ._cegcg .ByteRange =_eacf ;_bedc :=[]byte (_bdgd ._cegcg .Contents .WriteString ());for _ceeg :=_bdgd ._bbae ;_ceeg < _bdgd ._bdeee ;
_ceeg ++{_gecg [_agae +_ceeg ]=' ';};for _cabg :=_bdgd ._deaab ;_cabg < _bdgd ._cadba ;_cabg ++{_gecg [_agae +_cabg ]=' ';};_befd :=_gecg [_agae +_bdgd ._bbae :_agae +_bdgd ._bdeee ];copy (_befd ,_dff );_befd =_gecg [_agae +_bdgd ._deaab :_agae +_bdgd ._cadba ];
copy (_befd ,_bedc );};_aega :=_de .NewBuffer (_gecg );_ ,_cabfc =_cb .Copy (w ,_aega );if _cabfc !=nil {return _cabfc ;};};_agcf ._dbdcc =true ;return nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_efgcc .Lock ();defer _efgcc .Unlock ();_cdgce =author };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bffd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bbfa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgcc ,_daae :=_bbfa .GetNumbersAsFloat (objects );
if _daae !=nil {return nil ,_daae ;};return _bffd .ColorFromFloats (_fgcc );};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_agdfd *pdfFontSimple )ToPdfObject ()_bbfa .PdfObject {if _agdfd ._baaga ==nil {_agdfd ._baaga =&_bbfa .PdfIndirectObject {};};_abba :=_agdfd .baseFields ().asPdfObjectDictionary ("");_agdfd ._baaga .PdfObject =_abba ;if _agdfd .FirstChar !=nil {_abba .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_agdfd .FirstChar );
};if _agdfd .LastChar !=nil {_abba .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_agdfd .LastChar );};if _agdfd .Widths !=nil {_abba .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_agdfd .Widths );};if _agdfd .Encoding !=nil {_abba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_agdfd .Encoding );
}else if _agdfd ._cdea !=nil {_aabg :=_agdfd ._cdea .ToPdfObject ();if _aabg !=nil {_abba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aabg );};};return _agdfd ._baaga ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_afeg *_bbfa .PdfIndirectObject ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cfccd *PdfPage )ToPdfObject ()_bbfa .PdfObject {_ggacd :=_cfccd ._bfaag ;_cfccd .GetPageDict ();return _ggacd ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bbfa .PdfObjectStream ;OCSP []*_bbfa .PdfObjectStream ;CRL []*_bbfa .PdfObjectStream ;TU *_bbfa .PdfObjectString ;TS *_bbfa .PdfObjectString ;};func _gabc (_bddae *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bddae }};


// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cfaba *_bbfa .PdfIndirectObject ;};

// ToPdfObject implements model.PdfModel interface.
func (_dacga *PdfOutputIntent )ToPdfObject ()_bbfa .PdfObject {if _dacga ._fdggg ==nil {_dacga ._fdggg =_bbfa .MakeDict ();};_dfefe :=_dacga ._fdggg ;if _dacga .Type !=""{_dfefe .Set ("\u0054\u0079\u0070\u0065",_bbfa .MakeName (_dacga .Type ));};_dfefe .Set ("\u0053",_bbfa .MakeName (_dacga .S .String ()));
if _dacga .OutputCondition !=""{_dfefe .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bbfa .MakeString (_dacga .OutputCondition ));};_dfefe .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bbfa .MakeString (_dacga .OutputConditionIdentifier ));
_dfefe .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bbfa .MakeString (_dacga .RegistryName ));if _dacga .Info !=""{_dfefe .Set ("\u0049\u006e\u0066\u006f",_bbfa .MakeString (_dacga .Info ));};if len (_dacga .DestOutputProfile )!=0{_dfdcg ,_dbfda :=_bbfa .MakeStream (_dacga .DestOutputProfile ,_bbfa .NewFlateEncoder ());
if _dbfda !=nil {_df .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dbfda );
};_dfdcg .PdfObjectDictionary .Set ("\u004e",_bbfa .MakeInteger (int64 (_dacga .ColorComponents )));_cbaae :=make ([]float64 ,_dacga .ColorComponents *2);for _dfdec :=0;_dfdec < _dacga .ColorComponents *2;_dfdec ++{_ecdcf :=0.0;if _dfdec %2!=0{_ecdcf =1.0;
};_cbaae [_dfdec ]=_ecdcf ;};_dfdcg .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bbfa .MakeArrayFromFloats (_cbaae ));_dfefe .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_dfdcg );};
return _dfefe ;};func _dgdga ()string {_efgcc .Lock ();defer _efgcc .Unlock ();if len (_bbac )> 0{return _bbac ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_acag *pdfFontType0 )baseFields ()*fontCommon {return &_acag .fontCommon };


// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_edfg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_gf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_ccbf ,_fbdf :=_bbf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eccdd ,img ._acgd );if _fbdf !=nil {return img ,_fbdf ;};_geea ,_fbdf :=_bbf .GrayConverter .Convert (_ccbf );if _fbdf !=nil {return img ,_fbdf ;
};return _ebdgf (_geea .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_fadaf *PdfTransformParamsDocMDP )ToPdfObject ()_bbfa .PdfObject {_dbgcbe :=_bbfa .MakeDict ();_dbgcbe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fadaf .Type );_dbgcbe .SetIfNotNil ("\u0056",_fadaf .V );_dbgcbe .SetIfNotNil ("\u0050",_fadaf .P );return _dbgcbe ;
};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_aadaab :=&XObjectForm {};_cggdf :=&_bbfa .PdfObjectStream {};_cggdf .PdfObjectDictionary =_bbfa .MakeDict ();_aadaab ._cdbdc =_cggdf ;return _aadaab ;};

// ToPdfObject implements interface PdfModel.
func (_ccg *PdfActionNamed )ToPdfObject ()_bbfa .PdfObject {_ccg .PdfAction .ToPdfObject ();_degg :=_ccg ._ff ;_ffab :=_degg .PdfObject .(*_bbfa .PdfObjectDictionary );_ffab .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeNamed )));_ffab .SetIfNotNil ("\u004e",_ccg .N );
return _degg ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_egacf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _egacf ._gdfa .getFontDescriptor (),nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cggfa *PdfPageResources )GetColorspaceByName (keyName _bbfa .PdfObjectName )(PdfColorspace ,bool ){_fgeab ,_adcff :=_cggfa .GetColorspaces ();if _adcff !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adcff );
return nil ,false ;};if _fgeab ==nil {return nil ,false ;};_cacdce ,_gdef :=_fgeab .Colorspaces [string (keyName )];if !_gdef {return nil ,false ;};return _cacdce ,true ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_efgcc .Lock ();defer _efgcc .Unlock ();_abaebc =title };

// Initialize initializes the PdfSignature.
func (_ffaef *PdfSignature )Initialize ()error {if _ffaef .Handler ==nil {return _gf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _ffaef .Handler .InitSignature (_ffaef );};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_dfag *LTV )EnableAll (extraCerts []*_fe .Certificate )error {_fbceb :=_dfag ._fcgbg ._deeg .AcroForm ;for _ ,_gcda :=range _fbceb .AllFields (){_ebdfg ,_ :=_gcda .GetContext ().(*PdfFieldSignature );if _ebdfg ==nil {continue ;};_eacbf :=_ebdfg .V ;
if _gbece :=_dfag .validateSig (_eacbf );_gbece !=nil {_df .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbece );
};if _bfbge :=_dfag .Enable (_eacbf ,extraCerts );_bfbge !=nil {return _bfbge ;};};return nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bbfa .PdfObject )(_bbfa .PdfObjectName ,error ){var _cafc *_bbfa .PdfObjectName ;var _fdcb *_bbfa .PdfObjectArray ;if _febgc ,_ggeg :=obj .(*_bbfa .PdfIndirectObject );_ggeg {if _bdbf ,_fggaf :=_febgc .PdfObject .(*_bbfa .PdfObjectArray );
_fggaf {_fdcb =_bdbf ;}else if _ggff ,_ccba :=_febgc .PdfObject .(*_bbfa .PdfObjectName );_ccba {_cafc =_ggff ;};}else if _egfg ,_febed :=obj .(*_bbfa .PdfObjectArray );_febed {_fdcb =_egfg ;}else if _deag ,_bfacb :=obj .(*_bbfa .PdfObjectName );_bfacb {_cafc =_deag ;
};if _cafc !=nil {switch *_cafc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_cafc ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_cafc ,nil ;
};};if _fdcb !=nil &&_fdcb .Len ()> 0{if _eefg ,_fbae :=_fdcb .Get (0).(*_bbfa .PdfObjectName );_fbae {switch *_eefg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fdcb .Len ()==1{return *_eefg ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_eefg ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_eefg ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_eefg ,nil ;};};};return "",nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_acbeg *PdfPageResources )SetColorspaceByName (keyName _bbfa .PdfObjectName ,cs PdfColorspace )error {_caebaf ,_gabgdg :=_acbeg .GetColorspaces ();if _gabgdg !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gabgdg );
return _gabgdg ;};if _caebaf ==nil {_caebaf =NewPdfPageResourcesColorspaces ();_acbeg .SetColorSpace (_caebaf );};_caebaf .Set (keyName ,cs );return nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bfg :=NewPdfAction ();_bfa :=&PdfActionImportData {};_bfa .PdfAction =_bfg ;_bfg .SetContext (_bfa );return _bfa ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_dgfc *PdfFont )GetCIDToGIDMapObject ()_bbfa .PdfObject {_ccad ,_bagb :=_dgfc ._gdfa .(*pdfCIDFontType2 );if _bagb {return _ccad .CIDToGIDMap ;};return nil ;};var _feebe =_cf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _dabab ()string {_efgcc .Lock ();
defer _efgcc .Unlock ();return _abaebc };

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fdbe *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fdbe .flattenFieldsWithOpts (false ,appgen ,opts );};

// Subtype returns the font's "Subtype" field.
func (_acgf *PdfFont )Subtype ()string {_fedg :=_acgf .baseFields ()._eebdg ;if _gdgcc ,_accfe :=_acgf ._gdfa .(*pdfFontType0 );_accfe {_fedg =_fedg +"\u003a"+_gdgcc .DescendantFont .Subtype ();};return _fedg ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ebe :=NewPdfAnnotation ();_feed :=&PdfAnnotationStrikeOut {};_feed .PdfAnnotation =_ebe ;_feed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebe .SetContext (_feed );return _feed ;};func (_ccgg *PdfReader )newPdfAnnotationStrikeOut (_dadd *_bbfa .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_cec :=PdfAnnotationStrikeOut {};
_abdc ,_age :=_ccgg .newPdfAnnotationMarkupFromDict (_dadd );if _age !=nil {return nil ,_age ;};_cec .PdfAnnotationMarkup =_abdc ;_cec .QuadPoints =_dadd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cec ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gaeg *PdfFieldButton )IsPush ()bool {return _gaeg .GetType ()==ButtonTypePush };

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func _eacd (_adagbg _bbfa .PdfObject )*IDTree {_adagbg =_bbfa .ResolveReference (_adagbg );_eacbb :=_bbfa .MakeArray ();_gbcba :=_bbfa .MakeArray ();_faaba :=[]*IDTree {};
if _baefa ,_cdfabg :=_bbfa .GetDict (_adagbg );_cdfabg {if _dabcd :=_baefa .Get ("\u004e\u0061\u006de\u0073");_dabcd !=nil {_dabcd =_bbfa .ResolveReference (_dabcd );if _gcaec ,_bffdeg :=_bbfa .GetArray (_dabcd );_bffdeg {for _ ,_fcfg :=range _gcaec .Elements (){_eacbb .Append (_fcfg );
};};};if _dadb :=_baefa .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_dadb !=nil {_dadb =_bbfa .ResolveReference (_dadb );if _adceg ,_caccc :=_bbfa .GetArray (_dadb );_caccc {for _gcbdg :=0;_gcbdg < 2;_gcbdg ++{_gbcba .Append (_adceg .Get (_gcbdg ));};
};};if _edeaf :=_baefa .Get ("\u004b\u0069\u0064\u0073");_edeaf !=nil {_edeaf =_bbfa .ResolveReference (_edeaf );if _aggfe ,_fegge :=_bbfa .GetArray (_edeaf );_fegge {for _ ,_cafaf :=range _aggfe .Elements (){_cgbg :=_eacd (_cafaf );_faaba =append (_faaba ,_cgbg );
};};};};_eaafa :=&IDTree {Names :_eacbb ,Limits :_gbcba };if len (_faaba )> 0{_eaafa .Kids =_faaba ;};return _eaafa ;};

// L returns the value of the L component of the color.
func (_bgeba *PdfColorLab )L ()float64 {return _bgeba [0]};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_bfdeeb :=&PdfShadingType3 {};_bfdeeb .PdfShading =&PdfShading {};_bfdeeb .PdfShading ._facd =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());_bfdeeb .PdfShading ._bagea =_bfdeeb ;return _bfdeeb ;};func (_gffg *PdfAcroForm )fill (_ecgdc FieldValueProvider ,_ggbef FieldAppearanceGenerator )error {if _gffg ==nil {return nil ;
};_dfbee ,_dbbaa :=_ecgdc .FieldValues ();if _dbbaa !=nil {return _dbbaa ;};for _ ,_abeb :=range _gffg .AllFields (){_bbadb :=_abeb .PartialName ();_gaddd ,_edddf :=_dfbee [_bbadb ];if !_edddf {if _eafgc ,_gaefcb :=_abeb .FullName ();_gaefcb ==nil {_gaddd ,_edddf =_dfbee [_eafgc ];
};};if !_edddf {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bbadb );
continue ;};if _fege :=_fddee (_abeb ,_gaddd );_fege !=nil {return _fege ;};if _ggbef ==nil {continue ;};for _ ,_ecdgd :=range _abeb .Annotations {_gffdg ,_afecb :=_ggbef .GenerateAppearanceDict (_gffg ,_abeb ,_ecdgd );if _afecb !=nil {return _afecb ;};
_ecdgd .AP =_gffdg ;_ecdgd .ToPdfObject ();};};return nil ;};func _cgdee (_geccbf _bbfa .PdfObject )(*PdfShading ,error ){_fbafa :=&PdfShading {};var _cgfdfe *_bbfa .PdfObjectDictionary ;if _eacba ,_ecebe :=_bbfa .GetIndirect (_geccbf );_ecebe {_fbafa ._facd =_eacba ;
_ccdff ,_agefc :=_eacba .PdfObject .(*_bbfa .PdfObjectDictionary );if !_agefc {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bbfa .ErrTypeError ;
};_cgfdfe =_ccdff ;}else if _gffdd ,_beaeg :=_bbfa .GetStream (_geccbf );_beaeg {_fbafa ._facd =_gffdd ;_cgfdfe =_gffdd .PdfObjectDictionary ;}else if _afadc ,_abad :=_bbfa .GetDict (_geccbf );_abad {_fbafa ._facd =_afadc ;_cgfdfe =_afadc ;}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_geccbf );
return nil ,_bbfa .ErrTypeError ;};if _cgfdfe ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_gf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_geccbf =_cgfdfe .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _geccbf ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_geccbf =_bbfa .TraceToDirectObject (_geccbf );_geecf ,_caaea :=_geccbf .(*_bbfa .PdfObjectInteger );if !_caaea {_df .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_geccbf );
return nil ,_bbfa .ErrTypeError ;};if *_geecf < 1||*_geecf > 7{_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_geecf );
return nil ,_bbfa .ErrTypeError ;};_fbafa .ShadingType =_geecf ;_geccbf =_cgfdfe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _geccbf ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gccbe ,_cggd :=NewPdfColorspaceFromPdfObject (_geccbf );if _cggd !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cggd );
return nil ,_cggd ;};_fbafa .ColorSpace =_gccbe ;_geccbf =_cgfdfe .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _geccbf !=nil {_geccbf =_bbfa .TraceToDirectObject (_geccbf );_dabdbbd ,_ededa :=_geccbf .(*_bbfa .PdfObjectArray );
if !_ededa {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_geccbf );
return nil ,_bbfa .ErrTypeError ;};_fbafa .Background =_dabdbbd ;};_geccbf =_cgfdfe .Get ("\u0042\u0042\u006f\u0078");if _geccbf !=nil {_geccbf =_bbfa .TraceToDirectObject (_geccbf );_gcfgge ,_cbbde :=_geccbf .(*_bbfa .PdfObjectArray );if !_cbbde {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_geccbf );
return nil ,_bbfa .ErrTypeError ;};_bgcff ,_cfagc :=NewPdfRectangle (*_gcfgge );if _cfagc !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cfagc );return nil ,_cfagc ;};_fbafa .BBox =_bgcff ;};_geccbf =_cgfdfe .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _geccbf !=nil {_geccbf =_bbfa .TraceToDirectObject (_geccbf );_dgebc ,_fcbec :=_geccbf .(*_bbfa .PdfObjectBool );if !_fcbec {_df .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geccbf );
return nil ,_bbfa .ErrTypeError ;};_fbafa .AntiAlias =_dgebc ;};switch *_geecf {case 1:_gabfe ,_fffgb :=_bbbef (_cgfdfe );if _fffgb !=nil {return nil ,_fffgb ;};_gabfe .PdfShading =_fbafa ;_fbafa ._bagea =_gabfe ;return _fbafa ,nil ;case 2:_fbbcf ,_caegd :=_fabdd (_cgfdfe );
if _caegd !=nil {return nil ,_caegd ;};_fbbcf .PdfShading =_fbafa ;_fbafa ._bagea =_fbbcf ;return _fbafa ,nil ;case 3:_bbecc ,_ebdcb :=_dcfb (_cgfdfe );if _ebdcb !=nil {return nil ,_ebdcb ;};_bbecc .PdfShading =_fbafa ;_fbafa ._bagea =_bbecc ;return _fbafa ,nil ;
case 4:_cbgfd ,_fbcff :=_fcdf (_cgfdfe );if _fbcff !=nil {return nil ,_fbcff ;};_cbgfd .PdfShading =_fbafa ;_fbafa ._bagea =_cbgfd ;return _fbafa ,nil ;case 5:_cbcfe ,_gbgcg :=_cffff (_cgfdfe );if _gbgcg !=nil {return nil ,_gbgcg ;};_cbcfe .PdfShading =_fbafa ;
_fbafa ._bagea =_cbcfe ;return _fbafa ,nil ;case 6:_dedfd ,_dceca :=_ebbce (_cgfdfe );if _dceca !=nil {return nil ,_dceca ;};_dedfd .PdfShading =_fbafa ;_fbafa ._bagea =_dedfd ;return _fbafa ,nil ;case 7:_acdfe ,_gfdab :=_gabgf (_cgfdfe );if _gfdab !=nil {return nil ,_gfdab ;
};_acdfe .PdfShading =_fbafa ;_fbafa ._bagea =_acdfe ;return _fbafa ,nil ;};return nil ,_gf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;
PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_eebbf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bbfa .PdfObject ;};func _dgfcg (_aafag *PdfField ,_fegc _bbfa .PdfObject ){for _ ,_gcgbe :=range _aafag .Annotations {_gcgbe .AS =_fegc ;_gcgbe .ToPdfObject ();};};func (_bfffe *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dgcf :=_bfffe ._cbbb ;
_dgcf !=nil {return _dgcf ;};return _bfffe ._badb ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_fbee *VRI )ToPdfObject ()*_bbfa .PdfObjectDictionary {_affb :=_bbfa .MakeDict ();_affb .SetIfNotNil (_bbfa .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ebde (_fbee .Cert ));_affb .SetIfNotNil (_bbfa .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ebde (_fbee .OCSP ));
_affb .SetIfNotNil (_bbfa .PdfObjectName ("\u0043\u0052\u004c"),_ebde (_fbee .CRL ));_affb .SetIfNotNil ("\u0054\u0055",_fbee .TU );_affb .SetIfNotNil ("\u0054\u0053",_fbee .TS );return _affb ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_baae :=&PdfShadingPatternType2 {};_baae .Matrix =_bbfa .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_baae .PdfPattern =&PdfPattern {};_baae .PdfPattern .PatternType =int64 (*_bbfa .MakeInteger (2));
_baae .PdfPattern ._eabcc =_baae ;_baae .PdfPattern ._cgad =_bbfa .MakeIndirectObject (_bbfa .MakeDict ());return _baae ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bbfa .PdfObject ;Name _bbfa .PdfObject ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cabca *Image )ToGoImage ()(_gd .Image ,error ){_df .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_beaf ,_ggfaf :=_bbf .NewImage (int (_cabca .Width ),int (_cabca .Height ),int (_cabca .BitsPerComponent ),_cabca .ColorComponents ,_cabca .Data ,_cabca ._eccdd ,_cabca ._acgd );
if _ggfaf !=nil {return nil ,_ggfaf ;};return _beaf ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fbfff *PdfPageResources )SetXObjectFormByName (keyName _bbfa .PdfObjectName ,xform *XObjectForm )error {_bbggd :=xform .ToPdfObject ().(*_bbfa .PdfObjectStream );_dgbfca :=_fbfff .SetXObjectByName (keyName ,_bbggd );return _dgbfca ;};func _fdaf (_geega ,_fdacb string )string {if _ge .Contains (_geega ,"\u002b"){_gefb :=_ge .Split (_geega ,"\u002b");
if len (_gefb )==2{_geega =_gefb [1];};};return _fdacb +"\u002b"+_geega ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_cgdac *PdfPage )GetContainingPdfObject ()_bbfa .PdfObject {return _cgdac ._bfaag };func (_begb fontCommon )coreString ()string {_feadf :="";if _begb ._cbbb !=nil {_feadf =_begb ._cbbb .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_begb ._eebdg ,_begb ._fdace ,_begb ._gbbg ,_begb ._bebac ,_begb ._abfce !=nil ,_begb .fontFlags (),_feadf );
};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bbfa .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fgfgf *PdfColorspaceDeviceGray )ToPdfObject ()_bbfa .PdfObject {return _bbfa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_efab *PdfReader )newPdfActionHideFromDict (_efc *_bbfa .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_efc .Get ("\u0054"),H :_efc .Get ("\u0048")},nil ;
};func (_ddabg *LTV )buildCertChain (_gcgga ,_eeddg []*_fe .Certificate )([]*_fe .Certificate ,map[string ]*_fe .Certificate ,error ){_fbgae :=map[string ]*_fe .Certificate {};for _ ,_dcgfb :=range _gcgga {_fbgae [_dcgfb .Subject .CommonName ]=_dcgfb ;
};_dfgg :=_gcgga ;for _ ,_efcgb :=range _eeddg {_ebcac :=_efcgb .Subject .CommonName ;if _ ,_fgfd :=_fbgae [_ebcac ];_fgfd {continue ;};_fbgae [_ebcac ]=_efcgb ;_dfgg =append (_dfgg ,_efcgb );};if len (_dfgg )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _gcebbb error ;for _dfgc :=_dfgg [0];_dfgc !=nil &&!_ddabg .CertClient .IsCA (_dfgc );{_cbcagd ,_dgdc :=_fbgae [_dfgc .Issuer .CommonName ];if !_dgdc {if _cbcagd ,_gcebbb =_ddabg .CertClient .GetIssuer (_dfgc );_gcebbb !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gcebbb );
break ;};_fbgae [_dfgc .Issuer .CommonName ]=_cbcagd ;_dfgg =append (_dfgg ,_cbcagd );};_dfgc =_cbcagd ;};return _dfgg ,_fbgae ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ccbbd *PdfPage )GetPageAsIndirectObject ()*_bbfa .PdfIndirectObject {return _ccbbd ._bfaag };func (_gfgeb *PdfWriter )setHashIDs (_ebcb _bf .Hash )error {_febgbb :=_ebcb .Sum (nil );if _gfgeb ._gdbcf ==""{_gfgeb ._gdbcf =_eaa .EncodeToString (_febgbb [:8]);
};_gfgeb .setDocumentIDs (_gfgeb ._gdbcf ,_eaa .EncodeToString (_febgbb [8:]));return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_gcadc *PdfPattern )GetContainingPdfObject ()_bbfa .PdfObject {return _gcadc ._cgad };

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_bgcac *PdfWriter )SetCatalogMetadata (meta _bbfa .PdfObject )error {if meta ==nil {_bgcac ._cgfbd .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_acefg ,_dcafg :=_bbfa .GetStream (meta );if !_dcafg {return _gf .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_bgcac .addObject (_acefg );_bgcac ._cgfbd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_acefg );return nil ;};func (_dgded *PdfWriter )mapObjectStreams (_fafbd bool )(map[_bbfa .PdfObject ]bool ,bool ){_dfcfae :=make (map[_bbfa .PdfObject ]bool );
for _ ,_dgbac :=range _dgded ._ecdbe {if _debgad ,_gfbd :=_dgbac .(*_bbfa .PdfObjectStreams );_gfbd {_fafbd =true ;for _ ,_eeaca :=range _debgad .Elements (){_dfcfae [_eeaca ]=true ;if _ddggb ,_fedfc :=_eeaca .(*_bbfa .PdfIndirectObject );_fedfc {_dfcfae [_ddggb .PdfObject ]=true ;
};};};};return _dfcfae ,_fafbd ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gdeef *PdfReader )GetOCProperties ()(_bbfa .PdfObject ,error ){_gaabd :=_gdeef ._abdcg ;_bbfgg :=_gaabd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bbfgg =_bbfa .ResolveReference (_bbfgg );if !_gdeef ._bbbee {_edafb :=_gdeef .traverseObjectData (_bbfgg );
if _edafb !=nil {return nil ,_edafb ;};};return _bbfgg ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_ccaca *PdfFont )ToUnicode ()string {if _ccaca .baseFields ()._degfb ==nil {return "";};return _ccaca .baseFields ()._degfb .Name ();};

// Add appends a top level outline item to the outline.
func (_bgdg *Outline )Add (item *OutlineItem ){_bgdg .Entries =append (_bgdg .Entries ,item )};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bgeb PdfModel ;Rect _bbfa .PdfObject ;Contents _bbfa .PdfObject ;P _bbfa .PdfObject ;NM _bbfa .PdfObject ;M _bbfa .PdfObject ;F _bbfa .PdfObject ;AP _bbfa .PdfObject ;AS _bbfa .PdfObject ;Border _bbfa .PdfObject ;C _bbfa .PdfObject ;
StructParent _bbfa .PdfObject ;OC _bbfa .PdfObject ;_dbge *_bbfa .PdfIndirectObject ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_cefed int ,_fgbg *PdfPage )error ;

// SetPrintArea sets the value of the printArea.
func (_bcdff *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_bcdff ._abfgd =printArea };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dcgf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dcgf .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dcgf .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_egbf :=NewPdfColorspaceDeviceGray ();return _egbf .ImageToRGB (img );}else if _dcgf .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dcgf .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dgeb :=NewPdfColorspaceDeviceCMYK ();return _dgeb .ImageToRGB (img );}else {return img ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dcgf );
_afgcb ,_cecbd :=_dcgf .Alternate .ImageToRGB (img );_df .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_df .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_afgcb );
return _afgcb ,_cecbd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_badbfa *Permissions )GetContainingPdfObject ()_bbfa .PdfObject {return _badbfa ._ccbbdc };

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_eggb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _eggb .UnderlyingCS .GetNumComponents ();};

// B returns the value of the blue component of the color.
func (_beeec *PdfColorDeviceRGB )B ()float64 {return _beeec [2]};func (_cde *PdfReader )newPdfAnnotationPopupFromDict (_fbfd *_bbfa .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_agfb :=PdfAnnotationPopup {};_agfb .Parent =_fbfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_agfb .Open =_fbfd .Get ("\u004f\u0070\u0065\u006e");return &_agfb ,nil ;};

// String returns a string describing the font descriptor.
func (_fbaba *PdfFontDescriptor )String ()string {var _gbfd []string ;if _fbaba .FontName !=nil {_gbfd =append (_gbfd ,_fbaba .FontName .String ());};if _fbaba .FontFamily !=nil {_gbfd =append (_gbfd ,_fbaba .FontFamily .String ());};if _fbaba .fontFile !=nil {_gbfd =append (_gbfd ,_fbaba .fontFile .String ());
};if _fbaba ._fcced !=nil {_gbfd =append (_gbfd ,_fbaba ._fcced .String ());};_gbfd =append (_gbfd ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fbaba .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ge .Join (_gbfd ,"\u002c\u0020"));
};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_fegf :=_ef .Detect (content );_adaf :=_ad .Sum (content );_ebcg :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_fegf .String (),Hash :_eaa .EncodeToString (_adaf [:])};
return _ebcg ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_faab *PdfShadingPattern )ToPdfObject ()_bbfa .PdfObject {_faab .PdfPattern .ToPdfObject ();_fdcgc :=_faab .getDict ();if _faab .Shading !=nil {_fdcgc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_faab .Shading .ToPdfObject ());};if _faab .Matrix !=nil {_fdcgc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_faab .Matrix );
};if _faab .ExtGState !=nil {_fdcgc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_faab .ExtGState );};return _faab ._cgad ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_baag *PdfFieldButton )ToPdfObject ()_bbfa .PdfObject {_baag .PdfField .ToPdfObject ();_egbfg :=_baag ._dfeg ;_bfaad :=_egbfg .PdfObject .(*_bbfa .PdfObjectDictionary );_bfaad .Set ("\u0046\u0054",_bbfa .MakeName ("\u0042\u0074\u006e"));if _baag .Opt !=nil {_bfaad .Set ("\u004f\u0070\u0074",_baag .Opt );
};return _egbfg ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ggfgf *PdfPageResources )HasExtGState (keyName _bbfa .PdfObjectName )bool {_ ,_agafc :=_ggfgf .GetFontByName (keyName );return _agafc ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ea .Time )(PdfDate ,error ){_abbfg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_cgagd ,_ :=_ec .ParseInt (_abbfg [1:3],10,32);_agbc ,_ :=_ec .ParseInt (_abbfg [4:6],10,32);return PdfDate {_fbfea :int64 (timeObj .Year ()),_dbgfe :int64 (timeObj .Month ()),_gadge :int64 (timeObj .Day ()),_egfad :int64 (timeObj .Hour ()),_bggf :int64 (timeObj .Minute ()),_acecab :int64 (timeObj .Second ()),_ccce :_abbfg [0],_fedea :_cgagd ,_cabba :_agbc },nil ;
};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_abdgce *PdfPageResources )AddExtGState (gsName _bbfa .PdfObjectName ,gsDict _bbfa .PdfObject )error {if _abdgce .ExtGState ==nil {_abdgce .ExtGState =_bbfa .MakeDict ();};_bacc :=_abdgce .ExtGState ;_daab ,_gafgg :=_bbfa .TraceToDirectObject (_bacc ).(*_bbfa .PdfObjectDictionary );
if !_gafgg {_df .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bacc ,_bbfa .TraceToDirectObject (_bacc ));
return _bbfa .ErrTypeError ;};_daab .Set (gsName ,gsDict );return nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bbfa .PdfObject ,error );};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_accdc *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_accdc ._bffef =&hideToolbar };func (_ffb *PdfReader )newPdfActionLaunchFromDict (_bee *_bbfa .PdfObjectDictionary )(*PdfActionLaunch ,error ){_acb ,_eba :=_cge (_bee .Get ("\u0046"));
if _eba !=nil {return nil ,_eba ;};return &PdfActionLaunch {Win :_bee .Get ("\u0057\u0069\u006e"),Mac :_bee .Get ("\u004d\u0061\u0063"),Unix :_bee .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bee .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_acb },nil ;
};

// AddExtGState adds a graphics state to the XObject resources.
func (_ggbad *PdfPage )AddExtGState (name _bbfa .PdfObjectName ,egs *_bbfa .PdfObjectDictionary )error {if _ggbad .Resources ==nil {_ggbad .Resources =NewPdfPageResources ();};if _ggbad .Resources .ExtGState ==nil {_ggbad .Resources .ExtGState =_bbfa .MakeDict ();
};_fedb ,_gacgf :=_bbfa .TraceToDirectObject (_ggbad .Resources .ExtGState ).(*_bbfa .PdfObjectDictionary );if !_gacgf {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbfa .TraceToDirectObject (_ggbad .Resources .ExtGState ));
return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fedb .Set (name ,egs );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cae *PdfActionResetForm )ToPdfObject ()_bbfa .PdfObject {_cae .PdfAction .ToPdfObject ();_bebd :=_cae ._ff ;_gaa :=_bebd .PdfObject .(*_bbfa .PdfObjectDictionary );_gaa .SetIfNotNil ("\u0053",_bbfa .MakeName (string (ActionTypeResetForm )));_gaa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cae .Fields );
_gaa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cae .Flags );return _bebd ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gcbea *PdfPageResources )SetXObjectImageByNameLazy (keyName _bbfa .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_dcffg :=ximg .ToPdfObject ().(*_bbfa .PdfObjectStream );if lazy {_dcffg .MakeLazy ();};_cdgeg :=_gcbea .SetXObjectByName (keyName ,_dcffg );
return _cdgeg ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_fefg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_aafcc *PdfSignature ,_cfcb Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_dagff *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_edaee *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_dcbdg *PdfSignature ,_bfada Hasher )error ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fggfg :=&XObjectImage {};_cedcf :=&_bbfa .PdfObjectStream {};_cedcf .PdfObjectDictionary =_bbfa .MakeDict ();_fggfg ._bgffa =_cedcf ;return _fggfg ;};func _dbfdc (_cgdgg *_bbfa .PdfObjectDictionary )*VRI {_fgea ,_ :=_bbfa .GetString (_cgdgg .Get ("\u0054\u0055"));
_adcb ,_ :=_bbfa .GetString (_cgdgg .Get ("\u0054\u0053"));return &VRI {Cert :_aabcgb (_cgdgg .Get ("\u0043\u0065\u0072\u0074")),OCSP :_aabcgb (_cgdgg .Get ("\u004f\u0043\u0053\u0050")),CRL :_aabcgb (_cgdgg .Get ("\u0043\u0052\u004c")),TU :_fgea ,TS :_adcb };
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_aeecc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _aeecc .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _dgga (_bfafd map[_fg .GID ]int ,_gedeb uint16 )*_bbfa .PdfObjectArray {_eddd :=&_bbfa .PdfObjectArray {};
_dddgb :=_fg .GID (_gedeb );for _daga :=_fg .GID (0);_daga < _dddgb ;{_ddgbf ,_gfbbg :=_bfafd [_daga ];if !_gfbbg {_daga ++;continue ;};_bfcc :=_daga ;for _edbde :=_bfcc +1;_edbde < _dddgb ;_edbde ++{if _bfgg ,_fffdd :=_bfafd [_edbde ];!_fffdd ||_ddgbf !=_bfgg {break ;
};_bfcc =_edbde ;};_eddd .Append (_bbfa .MakeInteger (int64 (_daga )));_eddd .Append (_bbfa .MakeInteger (int64 (_bfcc )));_eddd .Append (_bbfa .MakeInteger (int64 (_ddgbf )));_daga =_bfcc +1;};return _eddd ;};

// ToPdfObject returns the PDF representation of the function.
func (_fafda *PdfFunctionType2 )ToPdfObject ()_bbfa .PdfObject {_dbgca :=_bbfa .MakeDict ();_dbgca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbfa .MakeInteger (2));_bbfae :=&_bbfa .PdfObjectArray {};for _ ,_agabc :=range _fafda .Domain {_bbfae .Append (_bbfa .MakeFloat (_agabc ));
};_dbgca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbfae );if _fafda .Range !=nil {_ddbg :=&_bbfa .PdfObjectArray {};for _ ,_beec :=range _fafda .Range {_ddbg .Append (_bbfa .MakeFloat (_beec ));};_dbgca .Set ("\u0052\u0061\u006eg\u0065",_ddbg );};
if _fafda .C0 !=nil {_aeef :=&_bbfa .PdfObjectArray {};for _ ,_edge :=range _fafda .C0 {_aeef .Append (_bbfa .MakeFloat (_edge ));};_dbgca .Set ("\u0043\u0030",_aeef );};if _fafda .C1 !=nil {_fbgbg :=&_bbfa .PdfObjectArray {};for _ ,_eabaca :=range _fafda .C1 {_fbgbg .Append (_bbfa .MakeFloat (_eabaca ));
};_dbgca .Set ("\u0043\u0031",_fbgbg );};_dbgca .Set ("\u004e",_bbfa .MakeFloat (_fafda .N ));if _fafda ._bafga !=nil {_fafda ._bafga .PdfObject =_dbgca ;return _fafda ._bafga ;};return _dbgca ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bbfa .PdfObject ;Q _bbfa .PdfObject ;RC _bbfa .PdfObject ;DS _bbfa .PdfObject ;CL _bbfa .PdfObject ;IT _bbfa .PdfObject ;BE _bbfa .PdfObject ;RD _bbfa .PdfObject ;BS _bbfa .PdfObject ;
LE _bbfa .PdfObject ;};func _bbbef (_cgbbce *_bbfa .PdfObjectDictionary )(*PdfShadingType1 ,error ){_affc :=PdfShadingType1 {};if _bdegd :=_cgbbce .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdegd !=nil {_bdegd =_bbfa .TraceToDirectObject (_bdegd );
_egdfd ,_fdeg :=_bdegd .(*_bbfa .PdfObjectArray );if !_fdeg {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdegd );return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_affc .Domain =_egdfd ;};if _ebff :=_cgbbce .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebff !=nil {_ebff =_bbfa .TraceToDirectObject (_ebff );_gdddd ,_fedge :=_ebff .(*_bbfa .PdfObjectArray );if !_fedge {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebff );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_affc .Matrix =_gdddd ;};_bggabe :=_cgbbce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bggabe ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_affc .Function =[]PdfFunction {};if _cged ,_afebg :=_bggabe .(*_bbfa .PdfObjectArray );_afebg {for _ ,_ggdfd :=range _cged .Elements (){_afcecc ,_abed :=_fcgca (_ggdfd );if _abed !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abed );
return nil ,_abed ;};_affc .Function =append (_affc .Function ,_afcecc );};}else {_ebdfc ,_gdfbc :=_fcgca (_bggabe );if _gdfbc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdfbc );
return nil ,_gdfbc ;};_affc .Function =append (_affc .Function ,_ebdfc );};return &_affc ,nil ;};func _ccaa (_gfgc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gfgc }};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbfa .PdfObject ;LE _bbfa .PdfObject ;BS _bbfa .PdfObject ;IC _bbfa .PdfObject ;BE _bbfa .PdfObject ;IT _bbfa .PdfObject ;Measure _bbfa .PdfObject ;};