//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_ag "bytes";_dc "crypto/md5";_fc "crypto/rand";_cg "crypto/sha1";_gd "crypto/x509";_bab "encoding/binary";_fg "encoding/hex";_aec "errors";_e "fmt";_ecf "github.com/gabriel-vasile/mimetype";_efa "github.com/unidoc/freetype";
_ef "github.com/unidoc/freetype/truetype";_ff "github.com/unidoc/pkcs7";_da "github.com/unidoc/unipdf/v4/common";_ac "github.com/unidoc/unipdf/v4/core";_ca "github.com/unidoc/unipdf/v4/core/security";_bc "github.com/unidoc/unipdf/v4/core/security/crypt";
_adg "github.com/unidoc/unipdf/v4/internal/cmap";_cf "github.com/unidoc/unipdf/v4/internal/imageutil";_dgf "github.com/unidoc/unipdf/v4/internal/license";_bdab "github.com/unidoc/unipdf/v4/internal/sampling";_cd "github.com/unidoc/unipdf/v4/internal/textencoding";
_bb "github.com/unidoc/unipdf/v4/internal/timeutils";_bda "github.com/unidoc/unipdf/v4/internal/transform";_gbb "github.com/unidoc/unipdf/v4/internal/uuid";_db "github.com/unidoc/unipdf/v4/model/internal/docutil";_bd "github.com/unidoc/unipdf/v4/model/internal/fonts";
_ec "github.com/unidoc/unipdf/v4/model/mdp";_cgb "github.com/unidoc/unipdf/v4/model/sigutil";_fa "github.com/unidoc/unipdf/v4/ps";_gde "github.com/unidoc/unitype";_cca "golang.org/x/image/font";_aa "golang.org/x/xerrors";_g "hash";_gb "image";_ee "image/color";
_ad "image/draw";_ "image/gif";_b "image/png";_cc "io";_fe "math";_d "math/rand";_fgge "os";_gf "path/filepath";_f "regexp";_ga "sort";_dcb "strconv";_fgg "strings";_gc "sync";_dg "time";_ae "unicode";_gg "unicode/utf8";);

// GetXHeight returns the XHeight of the font `descriptor`.
func (_gcab *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _ac .GetNumberAsFloat (_gcab .XHeight );};

// AddMCIDChild adds a child MCID object.
func (_bdaef *KDict )AddMCIDChild (mcid int ){_bdaef ._ecge =append (_bdaef ._ecge ,&KValue {_acbde :&mcid });};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_bcdfe *DSS )GenerateHashMaps ()error {_aacf ,_ggeb :=_bcdfe .generateHashMap (_bcdfe .Certs );if _ggeb !=nil {return _ggeb ;};_adaec ,_ggeb :=_bcdfe .generateHashMap (_bcdfe .OCSPs );if _ggeb !=nil {return _ggeb ;};_feaa ,_ggeb :=_bcdfe .generateHashMap (_bcdfe .CRLs );
if _ggeb !=nil {return _ggeb ;};_bcdfe ._gfa =_aacf ;_bcdfe ._ffgba =_adaec ;_bcdfe ._cffb =_feaa ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cgfb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afeg :=vals [0];if _afeg < 0.0||_afeg > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afeg );
return nil ,ErrColorOutOfRange ;};_gcee :=NewPdfColorCalGray (_afeg );return _gcee ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_feca *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgg :=vals [0];if _afgg < 0.0||_afgg > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afgg );
return nil ,ErrColorOutOfRange ;};_bfec :=vals [1];if _bfec < 0.0||_bfec > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfec );return nil ,ErrColorOutOfRange ;
};_fbdec :=vals [2];if _fbdec < 0.0||_fbdec > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbdec );return nil ,ErrColorOutOfRange ;};_cbdg :=NewPdfColorCalRGB (_afgg ,_bfec ,_fbdec );
return _cbdg ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_ac .PdfObjectArray ;ExtGState _ac .PdfObject ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_dgegea PdfOutputIntentType )String ()string {switch _dgegea {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func (_cceb *PdfAcroForm )filteredFields (_egaeb FieldFilterFunc ,_dfea bool )[]*PdfField {if _cceb ==nil {return nil ;
};return _cacbe (_cceb .Fields ,_egaeb ,_dfea );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_bbfba *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dgba :=_bbfba .actualFont ();if _dgba ==nil {_da .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bbfba ._bcae );
return _bd .CharMetrics {},false ;};if _bfba ,_ecggb :=_dgba .GetRuneMetrics (r );_ecggb {return _bfba ,true ;};if _acdcg ,_abga :=_bbfba .GetFontDescriptor ();_abga ==nil &&_acdcg !=nil {return _bd .CharMetrics {Wx :_acdcg ._gbbab },true ;};_da .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbfba );
return _bd .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_ddagb *PdfAnnotationProjection )ToPdfObject ()_ac .PdfObject {_ddagb .PdfAnnotation .ToPdfObject ();_ebf :=_ddagb ._add ;_cedd :=_ebf .PdfObject .(*_ac .PdfObjectDictionary );_ddagb .PdfAnnotationMarkup .appendToPdfDictionary (_cedd );return _ebf ;
};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ac .PdfObject )(*PdfFilespec ,error ){_ggddb :=&PdfFilespec {};var _cbgee *_ac .PdfObjectDictionary ;if _bffg ,_gccc :=_ac .GetIndirect (obj );_gccc {_ggddb ._fedc =_bffg ;_edgeb ,_acgab :=_ac .GetDict (_bffg .PdfObject );
if !_acgab {_da .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ac .ErrTypeError ;};_cbgee =_edgeb ;}else if _gdbdc ,_fcde :=_ac .GetDict (obj );
_fcde {_ggddb ._fedc =_gdbdc ;_cbgee =_gdbdc ;}else {_da .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_ac .ErrTypeError ;};if _cbgee ==nil {_da .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_aec .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _agaab :=_cbgee .Get ("\u0054\u0079\u0070\u0065");_agaab !=nil {_abfb ,_fffde :=_agaab .(*_ac .PdfObjectName );if !_fffde {_da .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_agaab );
}else {if *_abfb !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_da .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_abfb );
};};};if _cfcc :=_cbgee .Get ("\u0046\u0053");_cfcc !=nil {_ggddb .FS =_cfcc ;};if _gebf :=_cbgee .Get ("\u0046");_gebf !=nil {_ggddb .F =_gebf ;};if _cedb :=_cbgee .Get ("\u0055\u0046");_cedb !=nil {_ggddb .UF =_cedb ;};if _ccde :=_cbgee .Get ("\u0044\u004f\u0053");
_ccde !=nil {_ggddb .DOS =_ccde ;};if _ccgcf :=_cbgee .Get ("\u004d\u0061\u0063");_ccgcf !=nil {_ggddb .Mac =_ccgcf ;};if _efdc :=_cbgee .Get ("\u0055\u006e\u0069\u0078");_efdc !=nil {_ggddb .Unix =_efdc ;};if _badb :=_cbgee .Get ("\u0049\u0044");_badb !=nil {_ggddb .ID =_badb ;
};if _gaace :=_cbgee .Get ("\u0056");_gaace !=nil {_ggddb .V =_gaace ;};if _dgdg :=_cbgee .Get ("\u0045\u0046");_dgdg !=nil {_ggddb .EF =_dgdg ;};if _dfbd :=_cbgee .Get ("\u0052\u0046");_dfbd !=nil {_ggddb .RF =_dfbd ;};if _fbbaaf :=_cbgee .Get ("\u0044\u0065\u0073\u0063");
_fbbaaf !=nil {_ggddb .Desc =_fbbaaf ;};if _fafc :=_cbgee .Get ("\u0043\u0049");_fafc !=nil {_ggddb .CI =_fafc ;};if _daag :=_cbgee .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_daag !=nil {_ggddb .AFRelationship =_daag ;
};return _ggddb ,nil ;};

// ToInteger convert to an integer format.
func (_agba *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_agbg :=_fe .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_agbg *_agba .C ()),uint32 (_agbg *_agba .M ()),uint32 (_agbg *_agba .Y ()),uint32 (_agbg *_agba .K ())};};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_dgdfe *PdfPage )AddContentStreamByString (contentStr string )error {_dgabf ,_acccg :=_ac .MakeStream ([]byte (contentStr ),_ac .NewFlateEncoder ());if _acccg !=nil {return _acccg ;};if _dgdfe .Contents ==nil {_dgdfe .Contents =_dgabf ;}else {_cgcbe :=_ac .TraceToDirectObject (_dgdfe .Contents );
_degf ,_ebbd :=_cgcbe .(*_ac .PdfObjectArray );if !_ebbd {_degf =_ac .MakeArray (_cgcbe );};_degf .Append (_dgabf );_dgdfe .Contents =_degf ;};return nil ;};

// SetContext sets the sub action (context).
func (_bf *PdfAction )SetContext (ctx PdfModel ){_bf ._df =ctx };

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// AddKDict adds a K dictionary object to the structure tree root.
func (_efff *StructTreeRoot )AddKDict (k *KDict ){_efff .K =append (_efff .K ,k )};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ebag *PdfField )FullName ()(string ,error ){var _bdaaf _ag .Buffer ;_fgdd :=[]string {};if _ebag .T !=nil {_fgdd =append (_fgdd ,_ebag .T .Decoded ());};_egfa :=map[*PdfField ]bool {};_egfa [_ebag ]=true ;_bbff :=_ebag .Parent ;for _bbff !=nil {if _ ,_dfcff :=_egfa [_bbff ];
_dfcff {return _bdaaf .String (),_aec .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bbff .T ==nil {return _bdaaf .String (),_aec .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fgdd =append (_fgdd ,_bbff .T .Decoded ());_egfa [_bbff ]=true ;_bbff =_bbff .Parent ;};for _ccagg :=len (_fgdd )-1;_ccagg >=0;_ccagg --{_bdaaf .WriteString (_fgdd [_ccagg ]);if _ccagg > 0{_bdaaf .WriteString ("\u002e");};};return _bdaaf .String (),nil ;
};

// Tab order types.
type TabOrderType string ;

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cgfdb *_ac .PdfObjectDictionary ;};type pdfFontSimple struct{fontCommon ;_bbbd *_ac .PdfIndirectObject ;_dcbf map[_cd .CharCode ]float64 ;_cadfa _cd .TextEncoder ;_bgfb _cd .TextEncoder ;_gccga *PdfFontDescriptor ;


// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ac .PdfObject ;LastChar _ac .PdfObject ;Widths _ac .PdfObject ;Encoding _ac .PdfObject ;_fcdc *_bd .RuneCharSafeMap ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _dg .Time ){_adga .Lock ();defer _adga .Unlock ();_dgddd =modifiedDate ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ac .PdfObjectName ;Colorants _ac .PdfObject ;Process _ac .PdfObject ;MixingHints _ac .PdfObject ;_eggfca *_ac .PdfIndirectObject ;};func _agec (_bfcg *_ac .PdfObjectDictionary )(*PdfFieldText ,error ){_deaa :=&PdfFieldText {};
_deaa .DA ,_ =_ac .GetString (_bfcg .Get ("\u0044\u0041"));_deaa .Q ,_ =_ac .GetInt (_bfcg .Get ("\u0051"));_deaa .DS ,_ =_ac .GetString (_bfcg .Get ("\u0044\u0053"));_deaa .RV =_bfcg .Get ("\u0052\u0056");_deaa .MaxLen ,_ =_ac .GetInt (_bfcg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _deaa ,nil ;};func (_gbgg *PdfAppender )replaceObject (_affd ,_cddd _ac .PdfObject ){switch _bbeb :=_affd .(type ){case *_ac .PdfIndirectObject :_gbgg ._dgd [_cddd ]=_bbeb .ObjectNumber ;case *_ac .PdfObjectStream :_gbgg ._dgd [_cddd ]=_bbeb .ObjectNumber ;
};};func (_fbddf *LTV )getCRLs (_afgea []*_gd .Certificate )([][]byte ,error ){_fcggd :=make ([][]byte ,0,len (_afgea ));for _ ,_adac :=range _afgea {for _ ,_aadee :=range _adac .CRLDistributionPoints {if _fbddf .CertClient .IsCA (_adac ){continue ;};_bbfcf ,_fdacc :=_fbddf .CRLClient .MakeRequest (_aadee ,_adac );
if _fdacc !=nil {_da .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fdacc );continue ;};_fcggd =append (_fcggd ,_bbfcf );};};return _fcggd ,nil ;
};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cc .ReadSeeker )(*PdfFont ,error ){const _geddc =_cd .CharCode (32);const _cdaec =_cd .CharCode (255);_ecde ,_dega :=_cc .ReadAll (r );if _dega !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dega );
return nil ,_dega ;};_cbeg ,_dega :=_bd .TtfParse (_ag .NewReader (_ecde ));if _dega !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dega );
return nil ,_dega ;};_gcda :=&pdfFontSimple {_dcbf :make (map[_cd .CharCode ]float64 ),fontCommon :fontCommon {_bacd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gcda ._cadfa =_cd .NewWinAnsiEncoder ();_gcda ._cfca =_cbeg .PostScriptName ;_gcda .FirstChar =_ac .MakeInteger (int64 (_geddc ));
_gcda .LastChar =_ac .MakeInteger (int64 (_cdaec ));_cedaf :=1000.0/float64 (_cbeg .UnitsPerEm );if len (_cbeg .Widths )<=0{return nil ,_aec .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfdea :=_cedaf *float64 (_cbeg .Widths [0]);_cbad :=make ([]float64 ,0,_cdaec -_geddc +1);for _fged :=_geddc ;_fged <=_cdaec ;_fged ++{_bgbad ,_cbacc :=_gcda .Encoder ().CharcodeToRune (_fged );if !_cbacc {_da .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fged );
_cbad =append (_cbad ,_bfdea );continue ;};_fafb ,_fagb :=_cbeg .Chars [_bgbad ];if !_fagb {_da .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cbad =append (_cbad ,_bfdea );continue ;
};_gebbg :=_cedaf *float64 (_cbeg .Widths [_fafb ]);_cbad =append (_cbad ,_gebbg );};_gcda .Widths =_ac .MakeIndirectObject (_ac .MakeArrayFromFloats (_cbad ));if len (_cbad )< int (_cdaec -_geddc +1){_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cbad ),255-32+1);
return nil ,_ac .ErrRangeError ;};for _eebg :=_geddc ;_eebg <=_cdaec ;_eebg ++{_gcda ._dcbf [_eebg ]=_cbad [_eebg -_geddc ];};_gcda .Encoding =_ac .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_aaebf :=&PdfFontDescriptor {};
_aaebf .FontName =_ac .MakeName (_cbeg .PostScriptName );_aaebf .Ascent =_ac .MakeFloat (_cedaf *float64 (_cbeg .TypoAscender ));_aaebf .Descent =_ac .MakeFloat (_cedaf *float64 (_cbeg .TypoDescender ));_aaebf .CapHeight =_ac .MakeFloat (_cedaf *float64 (_cbeg .CapHeight ));
_aaebf .FontBBox =_ac .MakeArrayFromFloats ([]float64 {_cedaf *float64 (_cbeg .Xmin ),_cedaf *float64 (_cbeg .Ymin ),_cedaf *float64 (_cbeg .Xmax ),_cedaf *float64 (_cbeg .Ymax )});_aaebf .ItalicAngle =_ac .MakeFloat (_cbeg .ItalicAngle );_aaebf .MissingWidth =_ac .MakeFloat (_cedaf *float64 (_cbeg .Widths [0]));
_gaaa ,_dega :=_ac .MakeStream (_ecde ,_ac .NewFlateEncoder ());if _dega !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dega );
return nil ,_dega ;};_gaaa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ac .MakeInteger (int64 (len (_ecde ))));_aaebf .FontFile2 =_gaaa ;if _cbeg .Bold {_aaebf .StemV =_ac .MakeInteger (120);}else {_aaebf .StemV =_ac .MakeInteger (70);
};_ebcga :=_gffbb ;if _cbeg .IsFixedPitch {_ebcga |=_fgagf ;};if _cbeg .ItalicAngle !=0{_ebcga |=_cbggg ;};_aaebf .Flags =_ac .MakeInteger (int64 (_ebcga ));_gcda ._gdgc =_aaebf ;_ffad :=&PdfFont {_bcae :_gcda };return _ffad ,nil ;};

// B returns the value of the B component of the color.
func (_cedgc *PdfColorLab )B ()float64 {return _cedgc [2]};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ac .PdfObjectArray ;TI *_ac .PdfObjectInteger ;I *_ac .PdfObjectArray ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_feac *PdfFieldButton )ToPdfObject ()_ac .PdfObject {_feac .PdfField .ToPdfObject ();_fbaed :=_feac ._fggde ;_fadfc :=_fbaed .PdfObject .(*_ac .PdfObjectDictionary );_fadfc .Set ("\u0046\u0054",_ac .MakeName ("\u0042\u0074\u006e"));if _feac .Opt !=nil {_fadfc .Set ("\u004f\u0070\u0074",_feac .Opt );
};return _fbaed ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_fgge .File ,error ){const _agadb ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_egggc ,_dbeag :=_fgge .Open (pdfFile );if _dbeag !=nil {return nil ,nil ,_dbeag ;};_cegac ,_dbeag :=_cgac (_egggc ,opts ,true ,_agadb );if _dbeag !=nil {_egggc .Close ();return nil ,nil ,_dbeag ;};_cegac ._aafbde =pdfFile ;return _cegac ,_egggc ,nil ;
};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_fede *PdfPattern )GetContext ()PdfModel {return _fede ._geeeb };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_aegaf *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _aegaf .baseFields ()._gdgc !=nil {return _aegaf .baseFields ()._gdgc ;};if _ddba :=_aegaf ._bcae .getFontDescriptor ();_ddba !=nil {return _ddba ;};_da .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_aegaf );
return nil ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_gggac *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_gggac ._agfb =printPageRange ;};

// AddOCSPs adds OCSPs to DSS.
func (_begbg *DSS )AddOCSPs (ocsps [][]byte )([]*_ac .PdfObjectStream ,error ){return _begbg .add (&_begbg .OCSPs ,_begbg ._ffgba ,ocsps );};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ac .PdfObject ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ac .PdfObject ;Mac _ac .PdfObject ;Unix _ac .PdfObject ;NewWindow _ac .PdfObject ;};func _ddcge (_aggd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eecg ,_cbgg :=_ac .GetDict (_aggd .AP );
if !_cbgg {return nil ,nil ,_aec .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _eecg ==nil {return nil ,nil ,nil ;};_fafge ,_cbgg :=_ac .GetArray (_aggd .Rect );
if !_cbgg ||_fafge .Len ()!=4{return nil ,nil ,_aec .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dggd ,_cbda :=NewPdfRectangle (*_fafge );if _cbda !=nil {return nil ,nil ,_cbda ;};_fbcc :=_ac .TraceToDirectObject (_eecg .Get ("\u004e"));
switch _bdecb :=_fbcc .(type ){case *_ac .PdfObjectStream :_cegada :=_bdecb ;_dbdeb ,_eedc :=NewXObjectFormFromStream (_cegada );return _dbdeb ,_dggd ,_eedc ;case *_ac .PdfObjectDictionary :_fgeg :=_bdecb ;if _fgeg ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _beab _ac .PdfObject ;_fbbc ,_cfga :=_ac .GetName (_aggd .AS );if _cfga {_beab =_fgeg .Get (*_fbbc );}else {_abcfc :=_aggd ._add .PdfObject .(*_ac .PdfObjectDictionary );if _abcfc ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _ffbgga :=_abcfc .Get ("\u0056");_ffbgga !=nil {_beab =_fgeg .Get (_ac .PdfObjectName (_ffbgga .String ()));};};if _beab ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bdbac ,_cfga :=_ac .GetStream (_beab );if !_cfga {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_fbbc );
return nil ,nil ,_aec .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gded ,_cbbc :=NewXObjectFormFromStream (_bdbac );return _gded ,_dggd ,_cbbc ;};_da .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fbcc );
return nil ,nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gfcaf *PdfReader )CheckAccessRights (password []byte )(bool ,_ca .Permissions ,error ){return _gfcaf ._ecebe .CheckAccessRights (password );};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_decbe :=&PdfColorPattern {};return _decbe };

// B returns the value of the blue component of the color.
func (_ffdc *PdfColorDeviceRGB )B ()float64 {return _ffdc [2]};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ac .PdfObject ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_fgb :=NewPdfAnnotation ();_gcfa :=&PdfAnnotationScreen {};_gcfa .PdfAnnotation =_fgb ;_fgb .SetContext (_gcfa );return _gcfa ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_eddbg *PdfFont )GetCharMetrics (code _cd .CharCode )(CharMetrics ,bool ){var _ffege _bd .CharMetrics ;switch _gfeab :=_eddbg ._bcae .(type ){case *pdfFontSimple :if _daeaa ,_dffg :=_gfeab .GetCharMetrics (code );_dffg {return _daeaa ,_dffg ;};case *pdfFontType0 :if _gccgb ,_abea :=_gfeab .GetCharMetrics (code );
_abea {return _gccgb ,_abea ;};case *pdfCIDFontType0 :if _afega ,_gadab :=_gfeab .GetCharMetrics (code );_gadab {return _afega ,_gadab ;};case *pdfCIDFontType2 :if _ffee ,_dgcgg :=_gfeab .GetCharMetrics (code );_dgcgg {return _ffee ,_dgcgg ;};case *pdfFontType3 :if _cefg ,_fcac :=_gfeab .GetCharMetrics (code );
_fcac {return _cefg ,_fcac ;};default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_eddbg ._bcae );
return _ffege ,false ;};if _ffdca ,_dcda :=_eddbg .GetFontDescriptor ();_dcda ==nil &&_ffdca !=nil {return _bd .CharMetrics {Wx :_ffdca ._gbbab },true ;};_da .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_eddbg );
return _ffege ,false ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ac .PdfObject ;};

// Transform rectangle with the supplied matrix.
func (_ggaeg *PdfRectangle )Transform (transformMatrix _bda .Matrix ){_ggaeg .Llx ,_ggaeg .Lly =transformMatrix .Transform (_ggaeg .Llx ,_ggaeg .Lly );_ggaeg .Urx ,_ggaeg .Ury =transformMatrix .Transform (_ggaeg .Urx ,_ggaeg .Ury );_ggaeg .Normalize ();
};type pdfFont interface{_bd .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ac .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_bbac :=NewPdfAnnotation ();_cag :=&PdfAnnotationLink {};_cag .PdfAnnotation =_bbac ;_bbac .SetContext (_cag );return _cag ;};func (_dbcc *PdfReader )newPdfActionThreadFromDict (_fca *_ac .PdfObjectDictionary )(*PdfActionThread ,error ){_bg ,_abf :=_dcf (_fca .Get ("\u0046"));
if _abf !=nil {return nil ,_abf ;};return &PdfActionThread {D :_fca .Get ("\u0044"),B :_fca .Get ("\u0042"),F :_bg },nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dgcd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dgcd .GetNumComponents (){return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddfad ,_ccbd :=_dgcd .TintTransform .Evaluate (vals );
if _ccbd !=nil {return nil ,_ccbd ;};_ggff ,_ccbd :=_dgcd .AlternateSpace .ColorFromFloats (_ddfad );if _ccbd !=nil {return nil ,_ccbd ;};return _ggff ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_dabce *PdfAcroForm )ToPdfObject ()_ac .PdfObject {_abbec :=_dabce ._fccb ;_fcbb :=_abbec .PdfObject .(*_ac .PdfObjectDictionary );if _dabce .Fields !=nil {_afcdeb :=_ac .PdfObjectArray {};for _ ,_ggfdb :=range *_dabce .Fields {_aecad :=_ggfdb .GetContext ();
if _aecad !=nil {_afcdeb .Append (_aecad .ToPdfObject ());}else {_afcdeb .Append (_ggfdb .ToPdfObject ());};};_fcbb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_afcdeb );};if _dabce .NeedAppearances !=nil {_fcbb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_dabce .NeedAppearances );
}else {if _adcc :=_fcbb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_adcc !=nil {_fcbb .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _dabce .SigFlags !=nil {_fcbb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_dabce .SigFlags );
};if _dabce .CO !=nil {_fcbb .Set ("\u0043\u004f",_dabce .CO );};if _dabce .DR !=nil {_fcbb .Set ("\u0044\u0052",_dabce .DR .ToPdfObject ());};if _dabce .DA !=nil {_fcbb .Set ("\u0044\u0041",_dabce .DA );};if _dabce .Q !=nil {_fcbb .Set ("\u0051",_dabce .Q );
};if _dabce .XFA !=nil {_fcbb .Set ("\u0058\u0046\u0041",_dabce .XFA );};if _dabce .ADBEEchoSign !=nil {_fcbb .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_dabce .ADBEEchoSign );};return _abbec ;};

// Val returns the value of the color.
func (_fage *PdfColorCalGray )Val ()float64 {return float64 (*_fage )};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fgfb *OutlineItem )Insert (index uint ,item *OutlineItem ){_dgfc :=uint (len (_fgfb .Entries ));if index > _dgfc {index =_dgfc ;};_fgfb .Entries =append (_fgfb .Entries [:index ],append ([]*OutlineItem {item },_fgfb .Entries [index :]...)...);};


// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_aagd :=&PdfFieldSignature {};_aagd .PdfField =NewPdfField ();_aagd .PdfField .SetContext (_aagd );_aagd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_aagd .PdfAnnotationWidget .SetContext (_aagd );
_aagd .PdfAnnotationWidget ._add =_aagd .PdfField ._fggde ;_aagd .T =_ac .MakeString ("");_aagd .F =_ac .MakeInteger (132);_aagd .V =signature ;return _aagd ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ac .PdfObjectStream ;OCSP []*_ac .PdfObjectStream ;CRL []*_ac .PdfObjectStream ;TU *_ac .PdfObjectString ;TS *_ac .PdfObjectString ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cbfdg int64 ;_dbfbe int64 ;_fafd int64 ;_aagfa int64 ;_gaeea int64 ;_fbaff int64 ;_ddfdc byte ;_gfbbc int64 ;_eggcc int64 ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ddab *PdfField )GetContainingPdfObject ()_ac .PdfObject {return _ddab ._fggde };func (_gafc *PdfAnnotationMarkup )appendToPdfDictionary (_ggdd *_ac .PdfObjectDictionary ){_ggdd .SetIfNotNil ("\u0054",_gafc .T );if _gafc .Popup !=nil {_ggdd .Set ("\u0050\u006f\u0070u\u0070",_gafc .Popup .ToPdfObject ());
};_ggdd .SetIfNotNil ("\u0043\u0041",_gafc .CA );_ggdd .SetIfNotNil ("\u0052\u0043",_gafc .RC );_ggdd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gafc .CreationDate );_ggdd .SetIfNotNil ("\u0049\u0052\u0054",_gafc .IRT );
_ggdd .SetIfNotNil ("\u0053\u0075\u0062\u006a",_gafc .Subj );_ggdd .SetIfNotNil ("\u0052\u0054",_gafc .RT );_ggdd .SetIfNotNil ("\u0049\u0054",_gafc .IT );_ggdd .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_gafc .ExData );};func _gbcc (_fgdg _ac .PdfObject )(*PdfColorspaceCalRGB ,error ){_acga :=NewPdfColorspaceCalRGB ();
if _eacc ,_dfbf :=_fgdg .(*_ac .PdfIndirectObject );_dfbf {_acga ._abca =_eacc ;};_fgdg =_ac .TraceToDirectObject (_fgdg );_ffgec ,_fcbce :=_fgdg .(*_ac .PdfObjectArray );if !_fcbce {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ffgec .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fgdg =_ac .TraceToDirectObject (_ffgec .Get (0));_baef ,_fcbce :=_fgdg .(*_ac .PdfObjectName );
if !_fcbce {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_baef !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fgdg =_ac .TraceToDirectObject (_ffgec .Get (1));_dfgbd ,_fcbce :=_fgdg .(*_ac .PdfObjectDictionary );if !_fcbce {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fgdg =_dfgbd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fgdg =_ac .TraceToDirectObject (_fgdg );_ebde ,_fcbce :=_fgdg .(*_ac .PdfObjectArray );if !_fcbce {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _ebde .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_dbgge ,_bdag :=_ebde .GetAsFloat64Slice ();
if _bdag !=nil {return nil ,_bdag ;};_acga .WhitePoint =_dbgge ;_fgdg =_dfgbd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fgdg !=nil {_fgdg =_ac .TraceToDirectObject (_fgdg );_dgdc ,_eeaa :=_fgdg .(*_ac .PdfObjectArray );if !_eeaa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _dgdc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bcaa ,_bcdb :=_dgdc .GetAsFloat64Slice ();
if _bcdb !=nil {return nil ,_bcdb ;};_acga .BlackPoint =_bcaa ;};_fgdg =_dfgbd .Get ("\u0047\u0061\u006dm\u0061");if _fgdg !=nil {_fgdg =_ac .TraceToDirectObject (_fgdg );_abce ,_bagb :=_fgdg .(*_ac .PdfObjectArray );if !_bagb {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _abce .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_dbgb ,_cafc :=_abce .GetAsFloat64Slice ();if _cafc !=nil {return nil ,_cafc ;
};_acga .Gamma =_dbgb ;};_fgdg =_dfgbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fgdg !=nil {_fgdg =_ac .TraceToDirectObject (_fgdg );_beaf ,_fffa :=_fgdg .(*_ac .PdfObjectArray );if !_fffa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _beaf .Len ()!=9{_da .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_beaf .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_febdcc ,_gdcc :=_beaf .GetAsFloat64Slice ();if _gdcc !=nil {return nil ,_gdcc ;};_acga .Matrix =_febdcc ;};return _acga ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_dfd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fagd ,_fgea :=color .(*PdfColorDeviceRGB );if !_fgea {_da .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fagd ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ac .PdfObject ;Movie _ac .PdfObject ;A _ac .PdfObject ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_faea *PdfPageResources )GetColorspaceByName (keyName _ac .PdfObjectName )(PdfColorspace ,bool ){_cbceb ,_egcbb :=_faea .GetColorspaces ();if _egcbb !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egcbb );
return nil ,false ;};if _cbceb ==nil {return nil ,false ;};_abgff ,_egcfc :=_cbceb .Colorspaces [string (keyName )];if !_egcfc {return nil ,false ;};return _abgff ,true ;};

// ToPdfObject implements interface PdfModel.
func (_aeeff *PdfAnnotationScreen )ToPdfObject ()_ac .PdfObject {_aeeff .PdfAnnotation .ToPdfObject ();_acge :=_aeeff ._add ;_ddbce :=_acge .PdfObject .(*_ac .PdfObjectDictionary );_ddbce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_ddbce .SetIfNotNil ("\u0054",_aeeff .T );_ddbce .SetIfNotNil ("\u004d\u004b",_aeeff .MK );_ddbce .SetIfNotNil ("\u0041",_aeeff .A );_ddbce .SetIfNotNil ("\u0041\u0041",_aeeff .AA );return _acge ;};

// AddWatermarkImage adds an image watermark to the page.
func (_cbdge *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fdcbbf ,_afcab :=_cbdge .GetMediaBox ();if _afcab !=nil {return _afcab ;};_cgcab :=_fdcbbf .Urx -_fdcbbf .Llx ;_ffdfa :=_fdcbbf .Ury -_fdcbbf .Lly ;_dddde :=opt .Angle *_fe .Pi /180;
_agbea :=float64 (*ximg .Width );_bbgdg :=(_cgcab -_agbea *_fe .Cos (_dddde ))/2;if opt .FitToWidth {_agbea =_cgcab ;_bbgdg =0;};_defbd :=_ffdfa ;_bgeg :=float64 (0);if opt .PreserveAspectRatio {_defbd =_agbea *float64 (*ximg .Height )/float64 (*ximg .Width );
_bgeg =(_ffdfa -_defbd )/2;_bgeg -=float64 (*ximg .Width )/2*_fe .Sin (_dddde );};if _cbdge .Resources ==nil {_cbdge .Resources =NewPdfPageResources ();};_fegcc :=NewXObjectForm ();_fegcc .BBox =_ac .MakeArrayFromFloats ([]float64 {0,0,_agbea ,_defbd });
_fegcc .Resources =NewPdfPageResources ();_cggbb :=0;_dfbbc :=_ac .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_cggbb ));for _fegcc .Resources .HasXObjectByName (_dfbbc ){_cggbb ++;_dfbbc =_ac .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_cggbb ));
};_afcab =_fegcc .Resources .SetXObjectImageByName (_dfbbc ,ximg );if _afcab !=nil {return _afcab ;};_cggbb =0;_dcfc :=_ac .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_cggbb ));for _fegcc .Resources .HasExtGState (_dcfc ){_cggbb ++;_dcfc =_ac .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_cggbb ));
};_egcdc :=_ac .MakeDict ();_egcdc .Set ("\u0042\u004d",_ac .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_egcdc .Set ("\u0043\u0041",_ac .MakeFloat (opt .Alpha ));_egcdc .Set ("\u0063\u0061",_ac .MakeFloat (opt .Alpha ));_afcab =_fegcc .Resources .AddExtGState (_dcfc ,_egcdc );
if _afcab !=nil {return _afcab ;};_faegg :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dcfc ,_agbea ,_defbd ,0.0,0.0,_dfbbc );
_fegcc .SetContentStream ([]byte (_faegg ),nil );_cedagc :=_bda .IdentityMatrix ().Rotate (_dddde );_cgfc :=[]float64 {_cedagc [0],_cedagc [1],_cedagc [3],_cedagc [4],_cedagc [6],_cedagc [7]};_fegcc .Matrix =_ac .MakeArrayFromFloats (_cgfc );_gccacc :=_cbdge .Resources .GenerateXObjectName ();
_afcab =_cbdge .Resources .SetXObjectFormByName (_gccacc ,_fegcc );if _afcab !=nil {return _afcab ;};_cccf :=_e .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_bbgdg ,_bgeg ,_gccacc );
return _cbdge .AppendContentBytes ([]byte (_cccf ),true );};func _cefce (_gbggd *_ac .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fcbaf :=PdfShadingType1 {};if _dadfec :=_gbggd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dadfec !=nil {_dadfec =_ac .TraceToDirectObject (_dadfec );
_cafb ,_edggg :=_dadfec .(*_ac .PdfObjectArray );if !_edggg {_da .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dadfec );return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fcbaf .Domain =_cafb ;};if _agcdc :=_gbggd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_agcdc !=nil {_agcdc =_ac .TraceToDirectObject (_agcdc );_bbgce ,_ccfdf :=_agcdc .(*_ac .PdfObjectArray );if !_ccfdf {_da .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agcdc );
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcbaf .Matrix =_bbgce ;};_ggcge :=_gbggd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggcge ==nil {_da .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fcbaf .Function =[]PdfFunction {};if _fgefe ,_bgfdc :=_ggcge .(*_ac .PdfObjectArray );_bgfdc {for _ ,_fcdeab :=range _fgefe .Elements (){_dbccf ,_acdce :=_fdfgf (_fcdeab );if _acdce !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acdce );
return nil ,_acdce ;};_fcbaf .Function =append (_fcbaf .Function ,_dbccf );};}else {_fegag ,_aefag :=_fdfgf (_ggcge );if _aefag !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aefag );
return nil ,_aefag ;};_fcbaf .Function =append (_fcbaf .Function ,_fegag );};return &_fcbaf ,nil ;};

// GetKDict returns the KDict of the KValue.
func (_dbbaa *KValue )GetKDict ()*KDict {return _dbbaa ._eeafa };func (_ced *PdfReader )newPdfActionGotoRFromDict (_cdef *_ac .PdfObjectDictionary )(*PdfActionGoToR ,error ){_eda ,_ebe :=_dcf (_cdef .Get ("\u0046"));if _ebe !=nil {return nil ,_ebe ;};return &PdfActionGoToR {D :_cdef .Get ("\u0044"),NewWindow :_cdef .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eda },nil ;
};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dgcg *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ac .PdfObject ;PreserveRB _ac .PdfObject ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cfed :=&PdfOutlineItem {_gbdgg :_ac .MakeIndirectObject (_ac .MakeDict ())};_cfed ._fbfca =_cfed ;return _cfed ;};func (_feceb *PdfSignature )extractChainFromCert ()([]*_gd .Certificate ,error ){var _deefb *_ac .PdfObjectArray ;
switch _dccgb :=_feceb .Cert .(type ){case *_ac .PdfObjectString :_deefb =_ac .MakeArray (_dccgb );case *_ac .PdfObjectArray :_deefb =_dccgb ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dccgb );
};var _gbdga _ag .Buffer ;for _ ,_edgaa :=range _deefb .Elements (){_eagd ,_bbdfc :=_ac .GetString (_edgaa );if !_bbdfc {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_edgaa );
};if _ ,_ccdgg :=_gbdga .Write (_eagd .Bytes ());_ccdgg !=nil {return nil ,_ccdgg ;};};return _gd .ParseCertificates (_gbdga .Bytes ());};func (_bcad *PdfReader )newPdfAnnotationStrikeOut (_dfef *_ac .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ccgbd :=PdfAnnotationStrikeOut {};
_ecda ,_febd :=_bcad .newPdfAnnotationMarkupFromDict (_dfef );if _febd !=nil {return nil ,_febd ;};_ccgbd .PdfAnnotationMarkup =_ecda ;_ccgbd .QuadPoints =_dfef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ccgbd ,nil ;
};

// GetAction returns the PDF action for the annotation link.
func (_dad *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dad ._cbge !=nil {return _dad ._cbge ,nil ;};if _dad .A ==nil {return nil ,nil ;};if _dad ._daeb ==nil {return nil ,nil ;};_cbfa ,_gfg :=_dad ._daeb .loadAction (_dad .A );if _gfg !=nil {return nil ,_gfg ;
};_dad ._cbge =_cbfa ;return _dad ._cbge ,nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_fdeb FieldFlag )Mask ()uint32 {return uint32 (_fdeb )};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_age :=NewPdfAnnotation ();_cdad :=&PdfAnnotationRedact {};_cdad .PdfAnnotation =_age ;_cdad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_age .SetContext (_cdad );return _cdad ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bcgdg *PdfField )SetContext (ctx PdfModel ){_bcgdg ._ffbgg =ctx };func _ebefdbd ()string {_adga .Lock ();defer _adga .Unlock ();return _aeaad };func (_egg *PdfReader )newPdfActionImportDataFromDict (_efdd *_ac .PdfObjectDictionary )(*PdfActionImportData ,error ){_bec ,_cdg :=_dcf (_efdd .Get ("\u0046"));
if _cdg !=nil {return nil ,_cdg ;};return &PdfActionImportData {F :_bec },nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_acfbf *_ac .PdfIndirectObject ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_ddfda *PdfPage )RemoveWatermarkImage (name string )error {if _ddfda .Resources !=nil &&_ddfda .Resources .XObject !=nil {if _fcab ,_cgfea :=_ac .GetDict (_ddfda .Resources .XObject );_cgfea {for _ ,_bfgda :=range _fcab .Keys (){if name ==_bfgda .String (){_ddfda .removeXObj (_fcab ,_bfgda );
continue ;};_fcee ,_dedaa :=_ac .GetStream (_fcab .Get (_bfgda ));if !_dedaa {continue ;};_aegbe ,_dedaa :=_ac .GetDict (_fcee .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_dedaa {continue ;};_ededg ,_dedaa :=_ac .GetDict (_aegbe .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_dedaa {continue ;};if _ededg .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_ededg .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_ddfda .removeXObj (_fcab ,_bfgda );};};};};_dgcee ,_cadc :=_ddfda .GetAnnotations ();
if _cadc ==nil {_bedg :=make ([]*PdfAnnotation ,0);for _ ,_aedec :=range _dgcee {switch _aedec .GetContext ().(type ){case *PdfAnnotationWatermark :default:_bedg =append (_bedg ,_aedec );};};_ddfda .SetAnnotations (_bedg );};return nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_aegag :=appender .Reader .DSS ;if _aegag ==nil {_aegag =NewDSS ();};if _aeeg :=_aegag .GenerateHashMaps ();_aeeg !=nil {return nil ,_aeeg ;};return &LTV {CertClient :_cgb .NewCertClient (),OCSPClient :_cgb .NewOCSPClient (),CRLClient :_cgb .NewCRLClient (),SkipExisting :true ,_gggba :appender ,_cbgf :_aegag },nil ;
};

// HasXObjectByName checks if has XObject resource by name.
func (_deddf *PdfPage )HasXObjectByName (name _ac .PdfObjectName )bool {_bdafa ,_gceda :=_deddf .Resources .XObject .(*_ac .PdfObjectDictionary );if !_gceda {return false ;};if _beegg :=_bdafa .Get (name );_beegg !=nil {return true ;};return false ;};func _cfffc ()string {_eace :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _edded _ag .Buffer ;for _feeg :=0;_feeg < 6;_feeg ++{_edded .WriteRune (rune (_eace [_d .Intn (len (_eace ))]));};return _edded .String ();};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ac .PdfObject ;NewWindow _ac .PdfObject ;T _ac .PdfObject ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ac .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ac .PdfObject ;A _ac .PdfObject ;SE _ac .PdfObject ;C _ac .PdfObject ;F _ac .PdfObject ;
_gbdgg *_ac .PdfIndirectObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ac .PdfObject ;LE _ac .PdfObject ;BS _ac .PdfObject ;IC _ac .PdfObject ;BE _ac .PdfObject ;IT _ac .PdfObject ;Measure _ac .PdfObject ;};func (_ddef *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};
func (_aaaf *PdfReader )newPdfAnnotationPopupFromDict (_gbebb *_ac .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bgg :=PdfAnnotationPopup {};_bgg .Parent =_gbebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bgg .Open =_gbebb .Get ("\u004f\u0070\u0065\u006e");
return &_bgg ,nil ;};func (_cgffe *PdfFont )baseFields ()*fontCommon {if _cgffe ._bcae ==nil {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cgffe ._bcae .baseFields ();};

// ToPdfObject returns the PDF representation of the pattern.
func (_dgaee *PdfPattern )ToPdfObject ()_ac .PdfObject {_eebf :=_dgaee .getDict ();_eebf .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eebf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ac .MakeInteger (_dgaee .PatternType ));
return _dgaee ._cgfee ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cde :=NewPdfAction ();_efb :=&PdfActionSetOCGState {};_efb .PdfAction =_cde ;_cde .SetContext (_efb );return _efb ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bcf :=NewPdfAction ();_bad :=&PdfActionRendition {};_bad .PdfAction =_bcf ;_bcf .SetContext (_bad );return _bad ;};func (_fgcab *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dfbec :=_fgcab .Parent ;
for _dfbec !=nil {_cebg ,_gcgae :=_ac .GetDict (_dfbec );if !_gcgae {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_aec .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _eedce :=_cebg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eedce !=nil {_gdaga ,_fbbdg :=_ac .GetDict (_eedce );if !_fbbdg {return nil ,_aec .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_dfdc ,_gbfgb :=NewPdfPageResourcesFromDict (_gdaga );if _gbfgb !=nil {return nil ,_gbfgb ;};return _dfdc ,nil ;};_dfbec =_cebg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbbbe *PdfSignature )ToPdfObject ()_ac .PdfObject {_aaafa :=_cbbbe ._fcdbe ;var _dbcdbe *_ac .PdfObjectDictionary ;if _gbgcb ,_fbggb :=_aaafa .PdfObject .(*pdfSignDictionary );_fbggb {_dbcdbe =_gbgcb .PdfObjectDictionary ;}else {_dbcdbe =_aaafa .PdfObject .(*_ac .PdfObjectDictionary );
};_dbcdbe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cbbbe .Type );_dbcdbe .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cbbbe .Filter );_dbcdbe .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cbbbe .SubFilter );_dbcdbe .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbbbe .ByteRange );
_dbcdbe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cbbbe .Contents );_dbcdbe .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cbbbe .Cert );_dbcdbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbbbe .Name );_dbcdbe .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cbbbe .Reason );
_dbcdbe .SetIfNotNil ("\u004d",_cbbbe .M );_dbcdbe .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cbbbe .Reference );_dbcdbe .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cbbbe .Changes );_dbcdbe .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cbbbe .ContactInfo );
_dbcdbe .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_cbbbe .Location );return _aaafa ;};func (_bgccc *PdfWriter )writeNamesDictionary ()error {if _bgccc ._gecfa ==nil {return nil ;};_aacbb :=_bgccc ._gecfa .ToPdfObject ();_bgccc ._cgebe .Set ("\u004e\u0061\u006de\u0073",_aacbb );
_cgbbe :=_bgccc .addObjects (_aacbb );if _cgbbe !=nil {return _cgbbe ;};return nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aefd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aefd .Alternate ==nil {if _aefd .N ==1{_gabb :=NewPdfColorspaceDeviceGray ();return _gabb .ColorFromFloats (vals );}else if _aefd .N ==3{_dcca :=NewPdfColorspaceDeviceRGB ();
return _dcca .ColorFromFloats (vals );}else if _aefd .N ==4{_gfdea :=NewPdfColorspaceDeviceCMYK ();return _gfdea .ColorFromFloats (vals );}else {return nil ,_aec .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aefd .Alternate .ColorFromFloats (vals );};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dga :=NewPdfAnnotation ();_dccf :=&PdfAnnotationProjection {};_dccf .PdfAnnotation =_dga ;_dccf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dga .SetContext (_dccf );return _dccf ;};func (_fefd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fefd ._gdgc };


// SetContext sets the sub annotation (context).
func (_bcdf *PdfAnnotation )SetContext (ctx PdfModel ){_bcdf ._dbaec =ctx };

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func (_aed *PdfReader )newPdfActionMovieFromDict (_gbeg *_ac .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gbeg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gbeg .Get ("\u0054"),Operation :_gbeg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cebc *PdfField )IsTerminal ()bool {return len (_cebc .Kids )==0};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_ac .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _ac .PdfObject ;ClassMap *_ac .PdfObjectDictionary ;_cbcac *_ac .PdfIndirectObject ;_aeada []_gbb .UUID ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_afdfg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _afdfg .RunesToCharcodeBytes ([]rune (str ));};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_gegab *PdfPageResources )HasShadingByName (keyName _ac .PdfObjectName )bool {_ ,_acfgc :=_gegab .GetShadingByName (keyName );return _acfgc ;};

// RemovePage removes a page by number.
func (_ebcg *PdfAppender )RemovePage (pageNum int ){_ceea :=pageNum -1;_ebcg ._ega =append (_ebcg ._ega [0:_ceea ],_ebcg ._ega [pageNum :]...);};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_bfcaa *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _bfcaa ._gdgc };const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ViewArea returns the value of the viewArea.
func (_defcbc *ViewerPreferences )ViewArea ()PageBoundary {return _defcbc ._dgbe };func _dagfg (_bddab []byte )[]byte {const _fdeef =52845;const _bfgg =22719;_bbgf :=55665;for _ ,_dfcce :=range _bddab [:4]{_bbgf =(int (_dfcce )+_bbgf )*_fdeef +_bfgg ;};
_dgdef :=make ([]byte ,len (_bddab )-4);for _beebb ,_cdgf :=range _bddab [4:]{_dgdef [_beebb ]=byte (int (_cdgf )^_bbgf >>8);_bbgf =(int (_cdgf )+_bbgf )*_fdeef +_bfgg ;};return _dgdef ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_babff *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ggaca *PdfPage )GetContentStreamObjs ()[]_ac .PdfObject {if _ggaca .Contents ==nil {return nil ;};_cafgf :=_ac .TraceToDirectObject (_ggaca .Contents );if _cdaac ,_ebbbb :=_cafgf .(*_ac .PdfObjectArray );_ebbbb {return _cdaac .Elements ();};return []_ac .PdfObject {_cafgf };
};

// AddImageResource adds an image to the XObject resources.
func (_ggfce *PdfPage )AddImageResource (name _ac .PdfObjectName ,ximg *XObjectImage )error {var _dbbdf *_ac .PdfObjectDictionary ;if _ggfce .Resources .XObject ==nil {_dbbdf =_ac .MakeDict ();_ggfce .Resources .XObject =_dbbdf ;}else {var _ebfgb bool ;
_dbbdf ,_ebfgb =(_ggfce .Resources .XObject ).(*_ac .PdfObjectDictionary );if !_ebfgb {return _aec .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dbbdf .Set (name ,ximg .ToPdfObject ());
return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_cbcdc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dbge *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ac .PdfObject {_baafg :=_ac .MakeDict ();if _dbge .Subtype !=nil {_baafg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbge .Subtype );};_baafg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dbge .Colorants );
_baafg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dbge .Process );_baafg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dbge .MixingHints );if _dbge ._eggfca !=nil {_dbge ._eggfca .PdfObject =_baafg ;return _dbge ._eggfca ;
};return _baafg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gaca *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faf :=vals [0];_dafg :=[]float64 {_faf };_baf ,_bdaae :=_gaca .TintTransform .Evaluate (_dafg );
if _bdaae !=nil {_da .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bdaae );_da .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gaca .TintTransform );
return nil ,_bdaae ;};_da .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_baf ,_gaca .AlternateSpace );
_aede ,_bdaae :=_gaca .AlternateSpace .ColorFromFloats (_baf );if _bdaae !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bdaae );
return nil ,_bdaae ;};return _aede ,nil ;};func (_fgbfa *PdfWriter )optimizeDocument ()error {if _fgbfa ._cdccd ==nil {return nil ;};_aggdgd ,_ggfe :=_ac .GetDict (_fgbfa ._bcbcab );if !_ggfe {return _aec .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffbag :=_db .Document {ID :[2]string {_fgbfa ._edfggf ,_fgbfa ._dgagd },Version :_fgbfa ._ccabd ,Objects :_fgbfa ._beggg ,Info :_aggdgd ,Crypt :_fgbfa ._gefae ,UseHashBasedID :_fgbfa ._deaag };if _dbcbg :=_fgbfa ._cdccd .ApplyStandard (&_ffbag );_dbcbg !=nil {return _dbcbg ;
};_fgbfa ._edfggf ,_fgbfa ._dgagd =_ffbag .ID [0],_ffbag .ID [1];_fgbfa ._ccabd =_ffbag .Version ;_fgbfa ._beggg =_ffbag .Objects ;_fgbfa ._bcbcab .PdfObject =_ffbag .Info ;_fgbfa ._deaag =_ffbag .UseHashBasedID ;_fgbfa ._gefae =_ffbag .Crypt ;_cbgcd :=make (map[_ac .PdfObject ]struct{},len (_fgbfa ._beggg ));
for _ ,_bedb :=range _fgbfa ._beggg {_cbgcd [_bedb ]=struct{}{};};_fgbfa ._beeeeg =_cbgcd ;return nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_daaf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gdbbd :=NewPdfOutline ();_gdbbd ._fbfca =&_gdbbd ;return _gdbbd ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_gbfd _cc .ReadSeeker ;_ggbd *_ac .PdfParser ;_badg *PdfReader ;Reader *PdfReader ;_ega []*PdfPage ;_bbcc *PdfAcroForm ;_fcg *DSS ;_eca *Permissions ;_faegc _ac .XrefTable ;_abbc int64 ;_defc int ;_ecae []_ac .PdfObject ;_aadba map[_ac .PdfObject ]struct{};
_dgd map[_ac .PdfObject ]int64 ;_deb map[_ac .PdfObject ]struct{};_ffd map[_ac .PdfObject ]struct{};_baeb int64 ;_cdcd bool ;_dfgba string ;_dfbcd *EncryptOptions ;_eaae *PdfInfo ;};

// PrintPageRange returns the value of the printPageRange.
func (_cdgea *ViewerPreferences )PrintPageRange ()[]int {return _cdgea ._agfb };var ImageHandling ImageHandler =DefaultImageHandler {};func (_cebe *PdfWriter )seekByName (_dfbce _ac .PdfObject ,_daeef []string ,_dbecf string )([]_ac .PdfObject ,error ){_da .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_dfbce );
var _feaea []_ac .PdfObject ;if _ccgad ,_gggef :=_dfbce .(*_ac .PdfIndirectObject );_gggef {return _cebe .seekByName (_ccgad .PdfObject ,_daeef ,_dbecf );};if _cfbbf ,_gdbab :=_dfbce .(*_ac .PdfObjectStream );_gdbab {return _cebe .seekByName (_cfbbf .PdfObjectDictionary ,_daeef ,_dbecf );
};if _caaafa ,_agbca :=_dfbce .(*_ac .PdfObjectDictionary );_agbca {_da .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_ffbfc :=range _caaafa .Keys (){_dged :=_caaafa .Get (_ffbfc );if string (_ffbfc )==_dbecf {_feaea =append (_feaea ,_dged );};for _ ,_ecaag :=range _daeef {if string (_ffbfc )==_ecaag {_da .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_ecaag );
_dcbaa ,_fdfcg :=_cebe .seekByName (_dged ,_daeef ,_dbecf );if _fdfcg !=nil {return _feaea ,_fdfcg ;};_feaea =append (_feaea ,_dcbaa ...);break ;};};};return _feaea ,nil ;};return _feaea ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_efaeg *Image )Resample (targetBitsPerComponent int64 ){if _efaeg .BitsPerComponent ==targetBitsPerComponent {return ;};_addgf :=_efaeg .GetSamples ();if targetBitsPerComponent < _efaeg .BitsPerComponent {_gdedg :=_efaeg .BitsPerComponent -targetBitsPerComponent ;
for _dgbf :=range _addgf {_addgf [_dgbf ]>>=uint (_gdedg );};}else if targetBitsPerComponent > _efaeg .BitsPerComponent {_eeag :=targetBitsPerComponent -_efaeg .BitsPerComponent ;for _aefee :=range _addgf {_addgf [_aefee ]<<=uint (_eeag );};};_efaeg .BitsPerComponent =targetBitsPerComponent ;
if _efaeg .BitsPerComponent < 8{_efaeg .resampleLowBits (_addgf );return ;};_acea :=_cf .BytesPerLine (int (_efaeg .Width ),int (_efaeg .BitsPerComponent ),_efaeg .ColorComponents );_ccebb :=make ([]byte ,_acea *int (_efaeg .Height ));var (_gaccb ,_dbgbe ,_acgcb ,_dggb int ;
_fdab uint32 ;);for _acgcb =0;_acgcb < int (_efaeg .Height );_acgcb ++{_gaccb =_acgcb *_acea ;_dbgbe =(_acgcb +1)*_acea -1;_afee :=_bdab .ResampleUint32 (_addgf [_gaccb :_dbgbe ],int (targetBitsPerComponent ),8);for _dggb ,_fdab =range _afee {_ccebb [_dggb +_gaccb ]=byte (_fdab );
};};_efaeg .Data =_ccebb ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dffeg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dffeg ._geeeb .(*PdfTilingPattern );};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cdbbb *XObjectForm )SetContentStream (content []byte ,encoder _ac .StreamEncoder )error {_afece :=content ;if encoder ==nil {if _cdbbb .Filter !=nil {encoder =_cdbbb .Filter ;}else {encoder =_ac .NewRawEncoder ();};};_cegab ,_bbfdc :=encoder .EncodeBytes (_afece );
if _bbfdc !=nil {return _bbfdc ;};_afece =_cegab ;_cdbbb .Stream =_afece ;_cdbbb .Filter =encoder ;return nil ;};func _gcabe (_fgff string )(map[_cd .CharCode ]_cd .GlyphName ,error ){_ggddd :=_fgg .Split (_fgff ,"\u000a");_abdaf :=make (map[_cd .CharCode ]_cd .GlyphName );
for _ ,_ccba :=range _ggddd {_fdecd :=_edbfc .FindStringSubmatch (_ccba );if _fdecd ==nil {continue ;};_dgbaa ,_gfgbg :=_fdecd [1],_fdecd [2];_dgegf ,_adeb :=_dcb .Atoi (_dgbaa );if _adeb !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ccba );
return nil ,_ac .ErrTypeError ;};_abdaf [_cd .CharCode (_dgegf )]=_cd .GlyphName (_gfgbg );};_da .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_abdaf );
return _abdaf ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_df PdfModel ;Type _ac .PdfObject ;S _ac .PdfObject ;Next _ac .PdfObject ;_acf *_ac .PdfIndirectObject ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bdaad *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _aecbb []*PdfField ;if _bdaad .AcroForm !=nil {_aecbb =_bdaad .AcroForm .AllFields ();};_eccfc :=make (map[*PdfField ]struct{},len (_aecbb ));for _ ,_fdce :=range _aecbb {_eccfc [_fdce ]=struct{}{};
};for _ ,_geced :=range _bdaad .PageList {_eaebd ,_edfee :=_geced .GetAnnotations ();if _edfee !=nil {return false ,_edfee ;};for _ ,_cfcfe :=range _eaebd {_caeda ,_cecg :=_cfcfe .GetContext ().(*PdfAnnotationWidget );if !_cecg {continue ;};_dadgg :=_caeda .Field ();
if _dadgg ==nil {return true ,nil ;};if _ ,_bceae :=_eccfc [_dadgg ];!_bceae {return true ,nil ;};};};return false ,nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dgcga *PdfPage )GetContentStreams ()([]string ,error ){_cagec :=_dgcga .GetContentStreamObjs ();var _gfbcg []string ;for _ ,_cbgfe :=range _cagec {_ccfbfg ,_efbbb :=_baba (_cbgfe );if _efbbb !=nil {return nil ,_efbbb ;};_gfbcg =append (_gfbcg ,_ccfbfg );
};return _gfbcg ,nil ;};

// Width returns the width of `rect`.
func (_gdgac *PdfRectangle )Width ()float64 {return _fe .Abs (_gdgac .Urx -_gdgac .Llx )};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};

// GetNumPages returns the number of pages in the document.
func (_fcfba *PdfReader )GetNumPages ()(int ,error ){if _fcfba ._ecebe .GetCrypter ()!=nil &&!_fcfba ._ecebe .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fcfba ._efgg ),nil ;};func _daede (_fcfbb *PdfField )[]*PdfField {_bbae :=[]*PdfField {_fcfbb };for _ ,_dbacf :=range _fcfbb .Kids {_bbae =append (_bbae ,_daede (_dbacf )...);};return _bbae ;};

// PdfVersion returns version of the PDF file.
func (_dffcd *PdfReader )PdfVersion ()_ac .Version {return _dffcd ._ecebe .PdfVersion ()};func (_cefc *PdfAppender )addNewObject (_ggbf _ac .PdfObject ){if _ ,_caed :=_cefc ._aadba [_ggbf ];!_caed {_cefc ._ecae =append (_cefc ._ecae ,_ggbf );_cefc ._aadba [_ggbf ]=struct{}{};
};};func (_edca *PdfPattern )getDict ()*_ac .PdfObjectDictionary {if _bbde ,_egbfa :=_edca ._cgfee .(*_ac .PdfIndirectObject );_egbfa {_gbfe ,_abaa :=_bbde .PdfObject .(*_ac .PdfObjectDictionary );if !_abaa {return nil ;};return _gbfe ;}else if _fgdf ,_befba :=_edca ._cgfee .(*_ac .PdfObjectStream );
_befba {return _fgdf .PdfObjectDictionary ;}else {_da .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_edca ._cgfee );
return nil ;};};

// CustomKeys returns all custom info keys as list.
func (_adad *PdfInfo )CustomKeys ()[]string {if _adad ._cefe ==nil {return nil ;};_dage :=make ([]string ,len (_adad ._cefe .Keys ()));for _ ,_edad :=range _adad ._cefe .Keys (){_dage =append (_dage ,_edad .String ());};return _dage ;};func (_dcffe *PdfAcroForm )fill (_cfdb FieldValueProvider ,_abadc FieldAppearanceGenerator )error {if _dcffe ==nil {return nil ;
};_dgebg ,_fgcd :=_cfdb .FieldValues ();if _fgcd !=nil {return _fgcd ;};for _ ,_ecabb :=range _dcffe .AllFields (){_deeb :=_ecabb .PartialName ();_gbgbb ,_edbce :=_dgebg [_deeb ];if !_edbce {if _fbgcc ,_afgdc :=_ecabb .FullName ();_afgdc ==nil {_gbgbb ,_edbce =_dgebg [_fbgcc ];
};};if !_edbce {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_deeb );
continue ;};if _ebccd :=_egaebf (_ecabb ,_gbgbb );_ebccd !=nil {return _ebccd ;};if _abadc ==nil {continue ;};for _ ,_bdafc :=range _ecabb .Annotations {_ffcfb ,_dafgb :=_abadc .GenerateAppearanceDict (_dcffe ,_ecabb ,_bdafc );if _dafgb !=nil {return _dafgb ;
};_bdafc .AP =_ffcfb ;_bdafc .ToPdfObject ();};};return nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ac .PdfObjectArray ;Domain *_ac .PdfObjectArray ;Function []PdfFunction ;Extend *_ac .PdfObjectArray ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_fcgdb *PdfPage )ToPdfObject ()_ac .PdfObject {_bcdee :=_fcgdb ._gbdca ;_fcgdb .GetPageDict ();return _bcdee ;};func _cgac (_abggc _cc .ReadSeeker ,_edcfc *ReaderOpts ,_dabd bool ,_fbdbc string )(*PdfReader ,error ){if _edcfc ==nil {_edcfc =NewReaderOpts ();
};_dbeeba :="";if _bbfbf ,_baabf :=_abggc .(*_fgge .File );_baabf {_dbeeba =_bbfbf .Name ();};_egcb :=*_edcfc ;_ededd :=&PdfReader {_ddcc :_abggc ,_cbdeg :map[_ac .PdfObject ]struct{}{},_edabf :_ggacc (),_bacfb :_edcfc .LazyLoad ,_bgbdd :_edcfc .ComplianceMode ,_cccd :_dabd ,_bfaga :&_egcb ,_aafbde :_dbeeba };
_bdbfb ,_ceef :=_fgeae ("\u0072");if _ceef !=nil {return nil ,_ceef ;};_ceef =_dgf .Track (_bdbfb ,_fbdbc ,_ededd ._aafbde );if _ceef !=nil {return nil ,_ceef ;};_ededd ._gegbf =_bdbfb ;var _abbcea *_ac .PdfParser ;if !_ededd ._bgbdd {if _edcfc !=nil {_eefc :=_ac .ParserOpts {RelaxedMode :_edcfc .RelaxedMode };
_abbcea ,_ceef =_ac .NewParserWithOpts (_abggc ,_eefc );}else {_abbcea ,_ceef =_ac .NewParser (_abggc );};}else {_abbcea ,_ceef =_ac .NewCompliancePdfParser (_abggc );};if _ceef !=nil {return nil ,_ceef ;};_ededd ._ecebe =_abbcea ;_bddad ,_ceef :=_ededd .IsEncrypted ();
if _ceef !=nil {return nil ,_ceef ;};if !_bddad {_ceef =_ededd .loadStructure ();if _ceef !=nil {return nil ,_ceef ;};}else if _dabd {_fgeee ,_cbbce :=_ededd .Decrypt ([]byte (_edcfc .Password ));if _cbbce !=nil {return nil ,_cbbce ;};if !_fgeee {return nil ,_aec .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_ededd ._gdda =make (map[*PdfReader ]*PdfReader );_ededd ._ddfec =make ([]*PdfReader ,_abbcea .GetRevisionNumber ());return _ededd ,nil ;};func (_gdbdb *PdfWriter )setWriter (_cdgacd _cc .Writer ){_gdbdb ._eaafg =_gdbdb ._gagbg ;_gdbdb ._dacf =_a .NewWriter (_cdgacd );
};func _bbacd (_dbefb StdFontName )(pdfFontSimple ,error ){_acag ,_ceeeg :=_bd .NewStdFontByName (_dbefb );if !_ceeeg {return pdfFontSimple {},ErrFontNotSupported ;};_gedgd :=_eaga (_acag );return _gedgd ,nil ;};

// GetMCID returns the MCID of the KValue.
func (_dcdag *KValue )GetMCID ()*int {return _dcdag ._acbde };

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cc .ReadSeeker )(*PdfReader ,error ){const _bceb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _cgac (rs ,&ReaderOpts {},false ,_bceb );};type pdfCIDFontType0 struct{fontCommon ;
_edbb *_ac .PdfIndirectObject ;_cade _cd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ac .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ac .PdfObject ;W _ac .PdfObject ;DW2 _ac .PdfObject ;W2 _ac .PdfObject ;_cfccc map[_cd .CharCode ]float64 ;_eafda float64 ;};

// IsShading specifies if the pattern is a shading pattern.
func (_faaf *PdfPattern )IsShading ()bool {return _faaf .PatternType ==2};

// StdFontName represents name of a standard font.
type StdFontName =_bd .StdFontName ;

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cegf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cegf .HiVal )};};func (_dfgb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_abeg *_ac .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_gcdba :=PdfAnnotationPrinterMark {};
_gcdba .MN =_abeg .Get ("\u004d\u004e");return &_gcdba ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cacgc *PdfShadingType4 )ToPdfObject ()_ac .PdfObject {_cacgc .PdfShading .ToPdfObject ();_bgae ,_dabe :=_cacgc .getShadingDict ();if _dabe !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cacgc .BitsPerCoordinate !=nil {_bgae .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cacgc .BitsPerCoordinate );};if _cacgc .BitsPerComponent !=nil {_bgae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cacgc .BitsPerComponent );
};if _cacgc .BitsPerFlag !=nil {_bgae .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cacgc .BitsPerFlag );};if _cacgc .Decode !=nil {_bgae .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cacgc .Decode );};if _cacgc .Function !=nil {if len (_cacgc .Function )==1{_bgae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cacgc .Function [0].ToPdfObject ());
}else {_afgga :=_ac .MakeArray ();for _ ,_ffaed :=range _cacgc .Function {_afgga .Append (_ffaed .ToPdfObject ());};_bgae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afgga );};};return _cacgc ._affg ;};

// ToPdfObject implements interface PdfModel.
func (_cgab *PdfAnnotationPopup )ToPdfObject ()_ac .PdfObject {_cgab .PdfAnnotation .ToPdfObject ();_cadf :=_cgab ._add ;_dgcag :=_cadf .PdfObject .(*_ac .PdfObjectDictionary );_dgcag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0050\u006f\u0070u\u0070"));
_dgcag .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgab .Parent );_dgcag .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cgab .Open );return _cadf ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_bgadb *LTV )EnableAll (extraCerts []*_gd .Certificate )error {_edea :=_bgadb ._gggba ._badg .AcroForm ;for _ ,_gfca :=range _edea .AllFields (){_bdebb ,_ :=_gfca .GetContext ().(*PdfFieldSignature );if _bdebb ==nil {continue ;};_bbfa :=_bdebb .V ;
if _ebdca :=_bgadb .validateSig (_bbfa );_ebdca !=nil {_da .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ebdca );
};if _gedc :=_bgadb .Enable (_bbfa ,extraCerts );_gedc !=nil {return _gedc ;};};return nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gaege :=map[rune ]int {};for _ ,_baegb :=range text {_gaege [_baegb ]++;};return _gaege ;};func (_bdbg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bdbg ._gdgc ==nil &&_bdbg .DescendantFont !=nil {return _bdbg .DescendantFont .FontDescriptor ();
};return _bdbg ._gdgc ;};

// ToPdfObject implements interface PdfModel.
func (_eba *PdfAnnotationFreeText )ToPdfObject ()_ac .PdfObject {_eba .PdfAnnotation .ToPdfObject ();_bbab :=_eba ._add ;_fed :=_bbab .PdfObject .(*_ac .PdfObjectDictionary );_eba .PdfAnnotationMarkup .appendToPdfDictionary (_fed );_fed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fed .SetIfNotNil ("\u0044\u0041",_eba .DA );_fed .SetIfNotNil ("\u0051",_eba .Q );_fed .SetIfNotNil ("\u0052\u0043",_eba .RC );_fed .SetIfNotNil ("\u0044\u0053",_eba .DS );_fed .SetIfNotNil ("\u0043\u004c",_eba .CL );_fed .SetIfNotNil ("\u0049\u0054",_eba .IT );
_fed .SetIfNotNil ("\u0042\u0045",_eba .BE );_fed .SetIfNotNil ("\u0052\u0044",_eba .RD );_fed .SetIfNotNil ("\u0042\u0053",_eba .BS );_fed .SetIfNotNil ("\u004c\u0045",_eba .LE );return _bbab ;};

// ToPdfObject returns the PDF representation of the function.
func (_bfda *PdfFunctionType2 )ToPdfObject ()_ac .PdfObject {_gbdf :=_ac .MakeDict ();_gbdf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ac .MakeInteger (2));_cgadf :=&_ac .PdfObjectArray {};for _ ,_ffeff :=range _bfda .Domain {_cgadf .Append (_ac .MakeFloat (_ffeff ));
};_gbdf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgadf );if _bfda .Range !=nil {_dgae :=&_ac .PdfObjectArray {};for _ ,_abdad :=range _bfda .Range {_dgae .Append (_ac .MakeFloat (_abdad ));};_gbdf .Set ("\u0052\u0061\u006eg\u0065",_dgae );};if _bfda .C0 !=nil {_gbedb :=&_ac .PdfObjectArray {};
for _ ,_aecf :=range _bfda .C0 {_gbedb .Append (_ac .MakeFloat (_aecf ));};_gbdf .Set ("\u0043\u0030",_gbedb );};if _bfda .C1 !=nil {_cggeb :=&_ac .PdfObjectArray {};for _ ,_feaaa :=range _bfda .C1 {_cggeb .Append (_ac .MakeFloat (_feaaa ));};_gbdf .Set ("\u0043\u0031",_cggeb );
};_gbdf .Set ("\u004e",_ac .MakeFloat (_bfda .N ));if _bfda ._ecdbd !=nil {_bfda ._ecdbd .PdfObject =_gbdf ;return _bfda ._ecdbd ;};return _gbdf ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_geag []byte ;_bacca []float64 ;};func (_fbd *PdfReader )newPdfAnnotationSoundFromDict (_fee *_ac .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eedg :=PdfAnnotationSound {};
_dfcc ,_bdg :=_fbd .newPdfAnnotationMarkupFromDict (_fee );if _bdg !=nil {return nil ,_bdg ;};_eedg .PdfAnnotationMarkup =_dfcc ;_eedg .Name =_fee .Get ("\u004e\u0061\u006d\u0065");_eedg .Sound =_fee .Get ("\u0053\u006f\u0075n\u0064");return &_eedg ,nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_def *PdfAnnotation )GetContainingPdfObject ()_ac .PdfObject {return _def ._add };

// GetPdfInfo returns the PDF info dictionary.
func (_eggcg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_agcdd ,_defgec :=_eggcg .GetTrailer ();if _defgec !=nil {return nil ,_defgec ;};var _cbbbc *_ac .PdfObjectDictionary ;_edbde :=_agcdd .Get ("\u0049\u006e\u0066\u006f");switch _cfffd :=_edbde .(type ){case *_ac .PdfObjectReference :_fddfg :=_cfffd ;
_edbde ,_defgec =_eggcg .GetIndirectObjectByNumber (int (_fddfg .ObjectNumber ));_edbde =_ac .TraceToDirectObject (_edbde );if _defgec !=nil {return nil ,_defgec ;};_cbbbc ,_ =_edbde .(*_ac .PdfObjectDictionary );case *_ac .PdfObjectDictionary :_cbbbc =_cfffd ;
};if _cbbbc ==nil {return nil ,_aec .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cddfe ,_defgec :=NewPdfInfoFromObject (_cbbbc );if _defgec !=nil {return nil ,_defgec ;
};return _cddfe ,nil ;};func (_caggd *pdfCIDFontType2 )baseFields ()*fontCommon {return &_caggd .fontCommon };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// K returns the value of the key component of the color.
func (_agga *PdfColorDeviceCMYK )K ()float64 {return _agga [3]};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_gdcb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _aec .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_gdcb .S =subtype ;return nil ;};func (_gecc *pdfFontSimple )getFontEncoding ()(_cbfad string ,_eafb map[_cd .CharCode ]_cd .GlyphName ,_cefa error ){_cbfad ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _cadgdd ,_ddade :=_decf [_gecc ._cfca ];
_ddade {_cbfad =_cadgdd ;}else if _gecc .fontFlags ()&_baeaa !=0{for _bfaaa ,_fcgff :=range _decf {if _fgg .Contains (_gecc ._cfca ,_bfaaa ){_cbfad =_fcgff ;break ;};};};if _gecc .Encoding ==nil {return _cbfad ,nil ,nil ;};switch _dggf :=_gecc .Encoding .(type ){case *_ac .PdfObjectName :return string (*_dggf ),nil ,nil ;
case *_ac .PdfObjectDictionary :_dgdge ,_cfdcc :=_ac .GetName (_dggf .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cfdcc {_cbfad =_dgdge .String ();};if _aabefa :=_dggf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_aabefa !=nil {_dbcbec ,_cbeff :=_ac .GetArray (_aabefa );if !_cbeff {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dggf ,_dggf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_ac .ErrTypeError ;};_eafb ,_cefa =_cd .FromFontDifferences (_dbcbec );};return _cbfad ,_eafb ,_cefa ;default:_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gecc .Encoding ,_gecc .Encoding );
return "",nil ,_ac .ErrTypeError ;};};func (_bdabe *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _bdabe ._gdgc };

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_bfbb *PdfColorspaceSpecialIndexed )ToPdfObject ()_ac .PdfObject {_fbgb :=_ac .MakeArray (_ac .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fbgb .Append (_bfbb .Base .ToPdfObject ());_fbgb .Append (_ac .MakeInteger (int64 (_bfbb .HiVal )));
_fbgb .Append (_bfbb .Lookup );if _bfbb ._gaecc !=nil {_bfbb ._gaecc .PdfObject =_fbgb ;return _bfbb ._gaecc ;};return _fbgb ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_adga .Lock ();defer _adga .Unlock ();_aeaad =subject };func _gcgeg (_bdeeb rune )string {for _aafbb ,_dccff :=range _ae .Categories {if len (_aafbb )==2&&_ae .Is (_dccff ,_bdeeb ){return _aafbb ;};};return "\u0043\u006e";
};func _ddg (_gdgd *_ac .PdfObjectDictionary )bool {for _ ,_cfgg :=range _gdgd .Keys (){if _ ,_cfff :=_eeeb [_cfgg .String ()];_cfff {return true ;};};return false ;};func (_aaffg *PdfWriter )writeObject (_bbecf int ,_aeebe _ac .PdfObject ){_da .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bbecf );
if _acdef ,_dgggc :=_aeebe .(*_ac .PdfIndirectObject );_dgggc {_aaffg ._dfbbef [_bbecf ]=crossReference {Type :1,Offset :_aaffg ._eaafg ,Generation :_acdef .GenerationNumber };_cgbce :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbecf );
if _gcfad ,_gedbd :=_acdef .PdfObject .(*pdfSignDictionary );_gedbd {_gcfad ._gfed =_aaffg ._eaafg +int64 (len (_cgbce ));};if _acdef .PdfObject ==nil {_da .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_acdef .PdfObject =_ac .MakeNull ();};_cgbce +=string (_acdef .PdfObject .Write ());_cgbce +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_aaffg .writeString (_cgbce );return ;};if _cfffe ,_dfeaf :=_aeebe .(*_ac .PdfObjectStream );_dfeaf {_aaffg ._dfbbef [_bbecf ]=crossReference {Type :1,Offset :_aaffg ._eaafg ,Generation :_cfffe .GenerationNumber };
_daada :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbecf );_daada +=string (_cfffe .PdfObjectDictionary .Write ());_daada +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aaffg .writeString (_daada );if _cfffe .Lazy {_cfdf ,_fddeg :=_fgge .ReadFile (_cfffe .TempFile );
if _fddeg !=nil {_da .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cfffe .TempFile );return ;};_aaffg .writeBytes (_cfdf );
_fgge .Remove (_cfffe .TempFile );}else {_aaffg .writeBytes (_cfffe .Stream );};_aaffg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbacg ,_eccdb :=_aeebe .(*_ac .PdfObjectStreams );
_eccdb {_aaffg ._dfbbef [_bbecf ]=crossReference {Type :1,Offset :_aaffg ._eaafg ,Generation :_gbacg .GenerationNumber };_dgeag :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbecf );var _cgbcb []string ;var _cdeaad string ;var _gdedc int64 ;
for _ffcff ,_afbe :=range _gbacg .Elements (){_dbdecb ,_fdeg :=_afbe .(*_ac .PdfIndirectObject );if !_fdeg {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bbecf ,_afbe );
continue ;};_ggdff :=string (_dbdecb .PdfObject .Write ())+"\u0020";_cdeaad =_cdeaad +_ggdff ;_cgbcb =append (_cgbcb ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_dbdecb .ObjectNumber ,_gdedc ));_aaffg ._dfbbef [int (_dbdecb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bbecf ,Index :_ffcff };
_gdedc =_gdedc +int64 (len ([]byte (_ggdff )));};_dabcc :=_fgg .Join (_cgbcb ,"\u0020")+"\u0020";_fdbdg :=_ac .NewFlateEncoder ();_dcbfd :=_fdbdg .MakeStreamDict ();_dcbfd .Set (_ac .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ac .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_aaedb :=int64 (_gbacg .Len ());_dcbfd .Set (_ac .PdfObjectName ("\u004e"),_ac .MakeInteger (_aaedb ));_fcccf :=int64 (len (_dabcc ));_dcbfd .Set (_ac .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ac .MakeInteger (_fcccf ));_acdge ,_ :=_fdbdg .EncodeBytes ([]byte (_dabcc +_cdeaad ));
_gfded :=int64 (len (_acdge ));_dcbfd .Set (_ac .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ac .MakeInteger (_gfded ));_dgeag +=string (_dcbfd .Write ());_dgeag +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aaffg .writeString (_dgeag );
_aaffg .writeBytes (_acdge );_aaffg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_aaffg .writeBytes (_aeebe .Write ());};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_cbe :=NewPdfAnnotation ();_eada :=&PdfAnnotationPopup {};_eada .PdfAnnotation =_cbe ;_cbe .SetContext (_eada );return _eada ;};func _gebc (_cadb *_ac .PdfObjectDictionary ,_aaefd *fontCommon )(*pdfCIDFontType0 ,error ){if _aaefd ._bacd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_da .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_aaefd );
return nil ,_ac .ErrRangeError ;};_afcc :=_edfgg (_aaefd );_ddfca ,_feacd :=_ac .GetDict (_cadb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_feacd {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_aaefd );
return nil ,ErrRequiredAttributeMissing ;};_afcc .CIDSystemInfo =_ddfca ;_afcc .DW =_cadb .Get ("\u0044\u0057");_afcc .W =_cadb .Get ("\u0057");_afcc .DW2 =_cadb .Get ("\u0044\u0057\u0032");_afcc .W2 =_cadb .Get ("\u0057\u0032");_afcc ._eafda =1000.0;if _agaaa ,_dcgg :=_ac .GetNumberAsFloat (_afcc .DW );
_dcgg ==nil {_afcc ._eafda =_agaaa ;};_badbg ,_gggg :=_cabe (_afcc .W );if _gggg !=nil {return nil ,_gggg ;};if _badbg ==nil {_badbg =map[_cd .CharCode ]float64 {};};_afcc ._cfccc =_badbg ;return _afcc ,nil ;};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// SetReason sets the `Reason` field of the signature.
func (_egbcc *PdfSignature )SetReason (reason string ){_egbcc .Reason =_ac .MakeEncodedString (reason ,true );};func (_gdeeb *PdfWriter )checkLicense ()error {_fddcg :=_dgf .GetLicenseKey ();if (_fddcg ==nil ||!_fddcg .IsLicensed ())&&!_agcce {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _aec .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_dgddf :=&PdfShadingType2 {};_dgddf .PdfShading =&PdfShading {};_dgddf .PdfShading ._affg =_ac .MakeIndirectObject (_ac .MakeDict ());_dgddf .PdfShading ._gfcfg =_dgddf ;return _dgddf ;};func (_ggaag *PdfReader )newPdfAnnotationWatermarkFromDict (_fdda *_ac .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fef :=PdfAnnotationWatermark {};
_fef .FixedPrint =_fdda .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fef ,nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ge :=NewPdfAction ();_ed :=&PdfActionMovie {};_ed .PdfAction =_ge ;_ge .SetContext (_ed );return _ed ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_ffbcc *PdfSignature ,_dddb Hasher ,_bdegg SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// ToInteger convert to an integer format.
func (_fdgg *PdfColorLab )ToInteger (bits int )[3]uint32 {_effd :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_effd *_fdgg .L ()),uint32 (_effd *_fdgg .A ()),uint32 (_effd *_fdgg .B ())};};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ffce FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ffce .Mask ()|fl .Mask ())};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fadd pdfCIDFontType2 )GetCharMetrics (code _cd .CharCode )(_bd .CharMetrics ,bool ){if _dbcff ,_bgbfc :=_fadd ._fbgc [code ];_bgbfc {return _bd .CharMetrics {Wx :_dbcff },true ;};_fgbe :=rune (code );_gdadf ,_adeec :=_fadd ._cadgd [_fgbe ];if !_adeec {_gdadf =int (_fadd ._fefef );
};return _bd .CharMetrics {Wx :float64 (_gdadf )},true ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_aeeffc *LTV )EnableByName (name string ,extraCerts []*_gd .Certificate )error {_bgfbe :=_aeeffc ._gggba ._badg .AcroForm ;for _ ,_dfgbag :=range _bgfbe .AllFields (){_efdeb ,_ :=_dfgbag .GetContext ().(*PdfFieldSignature );if _efdeb ==nil {continue ;
};if _agdab :=_efdeb .PartialName ();_agdab !=name {continue ;};return _aeeffc .Enable (_efdeb .V ,extraCerts );};return nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ac .PdfObject ;Flags _ac .PdfObject ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gaggf *PdfFont )CharcodesToStrings (charcodes []_cd .CharCode ,replacementText string )([]string ,int ,int ){_cfea :=_gaggf .baseFields ();_aegfd :=make ([]string ,0,len (charcodes ));_ecbf :=0;_ddbg :=_gaggf .Encoder ();_ebfg :=_cfea ._eceed !=nil &&_gaggf .IsSimple ()&&_gaggf .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_fgg .Contains (_cfea ._eceed .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_ebfg &&_ddbg !=nil {switch _cace :=_ddbg .(type ){case _cd .SimpleEncoder :_eccb :=_cace .BaseName ();if _ ,_cegcg :=_acad [_eccb ];_cegcg {for _ ,_cbdc :=range charcodes {if _fbfac ,_aagc :=_ddbg .CharcodeToRune (_cbdc );_aagc {_aegfd =append (_aegfd ,string (_fbfac ));
}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cbdc ,charcodes ,_cfea .isCIDFont (),_gaggf ,_ddbg );
_ecbf ++;_aegfd =append (_aegfd ,_adg .MissingCodeString );};};return _aegfd ,len (_aegfd ),_ecbf ;};};};for _ ,_gdee :=range charcodes {if _cfea ._eceed !=nil {if _abba ,_ddga :=_cfea ._eceed .CharcodeToUnicode (_adg .CharCode (_gdee ));_ddga {_addge ,_ :=_gg .DecodeLastRuneInString (_abba );
_cacaf :=_gcgeg (_addge );if !(_cacaf =="\u0043\u006f"){_aegfd =append (_aegfd ,_abba );continue ;};_da .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_gdee ,_abba );
};};if _ddbg !=nil {if _ffbf ,_babgd :=_ddbg .CharcodeToRune (_gdee );_babgd {_egca :=_gcgeg (_ffbf );if !(_egca =="\u0043\u006f"){_aegfd =append (_aegfd ,string (_ffbf ));continue ;};_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_gdee ,string (_ffbf ));
};};if replacementText !=""{_aegfd =append (_aegfd ,replacementText );}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gdee ,charcodes ,_cfea .isCIDFont (),_gaggf ,_ddbg );
_ecbf ++;_aegfd =append (_aegfd ,_adg .MissingCodeString );};};if _ecbf !=0{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ecbf ,_gaggf );
};return _aegfd ,len (_aegfd ),_ecbf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dfbg *PdfColorspaceSpecialSeparation )ToPdfObject ()_ac .PdfObject {_dagf :=_ac .MakeArray (_ac .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dagf .Append (_dfbg .ColorantName );_dagf .Append (_dfbg .AlternateSpace .ToPdfObject ());
_dagf .Append (_dfbg .TintTransform .ToPdfObject ());if _dfbg ._eefd !=nil {_dfbg ._eefd .PdfObject =_dagf ;return _dfbg ._eefd ;};return _dagf ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ac .PdfObject ;NewWindow _ac .PdfObject ;};func (_dfb *PdfReader )newPdfActionURIFromDict (_aece *_ac .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_aece .Get ("\u0055\u0052\u0049"),IsMap :_aece .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ac .PdfObjectString ;Q *_ac .PdfObjectInteger ;DS *_ac .PdfObjectString ;RV _ac .PdfObject ;MaxLen *_ac .PdfObjectInteger ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dcaaa *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ac .StreamEncoder ,error ){_bddb ,_efdbb :=_dcaaa ._cgfee .(*_ac .PdfObjectStream );if !_efdbb {_da .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcaaa ._cgfee );
return nil ,nil ,_ac .ErrTypeError ;};_dgfcea ,_cdgfb :=_ac .DecodeStream (_bddb );if _cdgfb !=nil {_da .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cdgfb );
return nil ,nil ,_cdgfb ;};_caeb ,_cdgfb :=_ac .NewEncoderFromStream (_bddb );if _cdgfb !=nil {_da .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cdgfb );
return nil ,nil ,_cdgfb ;};return _dgfcea ,_caeb ,nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _ac .PdfObject )(*PdfOutputIntent ,error ){_becca :=&PdfOutputIntent {};if _egfd :=_becca .ParsePdfObject (object );_egfd !=nil {return nil ,_egfd ;};return _becca ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fgaca *PdfPageResources )GetContainingPdfObject ()_ac .PdfObject {return _fgaca ._edbdg };func _bacga (_ggabc string )map[string ]string {_gafdg :=_abfce .Split (_ggabc ,-1);_aaacb :=map[string ]string {};for _ ,_bgfba :=range _gafdg {_cdddea :=_dddcb .FindStringSubmatch (_bgfba );
if _cdddea ==nil {continue ;};_fbdd ,_eebc :=_cdddea [1],_cdddea [2];_aaacb [_fbdd ]=_eebc ;};return _aaacb ;};

// ToPdfObject implements interface PdfModel.
func (_eeef *PdfAnnotationCaret )ToPdfObject ()_ac .PdfObject {_eeef .PdfAnnotation .ToPdfObject ();_ddfa :=_eeef ._add ;_gaag :=_ddfa .PdfObject .(*_ac .PdfObjectDictionary );_eeef .PdfAnnotationMarkup .appendToPdfDictionary (_gaag );_gaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0043\u0061\u0072e\u0074"));
_gaag .SetIfNotNil ("\u0052\u0044",_eeef .RD );_gaag .SetIfNotNil ("\u0053\u0079",_eeef .Sy );return _ddfa ;};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_ac .MakeDict (),ParentTreeNextKey :0};};func (_aafce *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gffag :=&PdfColorspaceCalRGB {};_gffag .BlackPoint =[]float64 {0.0,0.0,0.0};_gffag .Gamma =[]float64 {1.0,1.0,1.0};_gffag .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gffag ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dddgd *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbbb ,_fcbc :=_ac .GetNumbersAsFloat (objects );
if _fcbc !=nil {return nil ,_fcbc ;};return _dddgd .ColorFromFloats (_gbbb );};func (_cfa *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_bedd *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bedd .fontCommon };
func (_eade *PdfFilespec )getDict ()*_ac .PdfObjectDictionary {if _bbdcg ,_agafc :=_eade ._fedc .(*_ac .PdfIndirectObject );_agafc {_bafc ,_ebga :=_bbdcg .PdfObject .(*_ac .PdfObjectDictionary );if !_ebga {return nil ;};return _bafc ;}else if _babbb ,_eddec :=_eade ._fedc .(*_ac .PdfObjectDictionary );
_eddec {return _babbb ;}else {_da .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_eade ._fedc );
return nil ;};};

// Items returns all children outline items.
func (_eggfe *Outline )Items ()[]*OutlineItem {return _eggfe .Entries };

// ToPdfObject implements interface PdfModel.
func (_efd *PdfActionTrans )ToPdfObject ()_ac .PdfObject {_efd .PdfAction .ToPdfObject ();_eb :=_efd ._acf ;_cdea :=_eb .PdfObject .(*_ac .PdfObjectDictionary );_cdea .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeTrans )));_cdea .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_efd .Trans );
return _eb ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbgbe *PdfShadingType7 )ToPdfObject ()_ac .PdfObject {_fbgbe .PdfShading .ToPdfObject ();_cagfa ,_gbecd :=_fbgbe .getShadingDict ();if _gbecd !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbgbe .BitsPerCoordinate !=nil {_cagfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbgbe .BitsPerCoordinate );};if _fbgbe .BitsPerComponent !=nil {_cagfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbgbe .BitsPerComponent );
};if _fbgbe .BitsPerFlag !=nil {_cagfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbgbe .BitsPerFlag );};if _fbgbe .Decode !=nil {_cagfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbgbe .Decode );};if _fbgbe .Function !=nil {if len (_fbgbe .Function )==1{_cagfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbgbe .Function [0].ToPdfObject ());
}else {_efcad :=_ac .MakeArray ();for _ ,_dfefab :=range _fbgbe .Function {_efcad .Append (_dfefab .ToPdfObject ());};_cagfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efcad );};};return _fbgbe ._affg ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gbbea :=&PdfFilespec {};_gbbea ._fedc =_ac .MakeIndirectObject (_ac .MakeDict ());return _gbbea ;};

// ToPdfObject converts the font to a PDF representation.
func (_bdcgg *pdfFontType0 )ToPdfObject ()_ac .PdfObject {if _bdcgg ._bcbbf ==nil {_bdcgg ._bcbbf =&_ac .PdfIndirectObject {};};_gadbe :=_bdcgg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bdcgg ._bcbbf .PdfObject =_gadbe ;if _bdcgg .Encoding !=nil {_gadbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdcgg .Encoding );
}else if _bdcgg ._fbaeda !=nil {_gadbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdcgg ._fbaeda .ToPdfObject ());};if _bdcgg .DescendantFont !=nil {_gadbe .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ac .MakeArray (_bdcgg .DescendantFont .ToPdfObject ()));
};return _bdcgg ._bcbbf ;};type pdfCIDFontType2 struct{fontCommon ;_affb *_ac .PdfIndirectObject ;_debg _cd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ac .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ac .PdfObject ;W _ac .PdfObject ;DW2 _ac .PdfObject ;W2 _ac .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ac .PdfObject ;_fbgc map[_cd .CharCode ]float64 ;_fefef float64 ;_cadgd map[rune ]int ;};func _afgfc (_affa _ac .PdfObject )(*PdfFontDescriptor ,error ){_bgcc :=&PdfFontDescriptor {};_affa =_ac .ResolveReference (_affa );if _afgdb ,_fddd :=_affa .(*_ac .PdfIndirectObject );
_fddd {_bgcc ._gcfd =_afgdb ;_affa =_afgdb .PdfObject ;};_fced ,_gbag :=_ac .GetDict (_affa );if !_gbag {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_affa );
return nil ,_ac .ErrTypeError ;};if _gfgdd :=_fced .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gfgdd !=nil {_bgcc .FontName =_gfgdd ;}else {_da .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gdbf ,_ :=_ac .GetName (_bgcc .FontName );if _cgbf :=_fced .Get ("\u0054\u0079\u0070\u0065");_cgbf !=nil {_dafge ,_bgcee :=_cgbf .(*_ac .PdfObjectName );if !_bgcee ||string (*_dafge )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_da .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cgbf ,_gdbf ,_bgcc .FontName );
};}else {_da .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gdbf ,_bgcc .FontName );
};_bgcc .FontFamily =_fced .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_bgcc .FontStretch =_fced .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_bgcc .FontWeight =_fced .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_bgcc .Flags =_fced .Get ("\u0046\u006c\u0061g\u0073");_bgcc .FontBBox =_fced .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_bgcc .ItalicAngle =_fced .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_bgcc .Ascent =_fced .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_bgcc .Descent =_fced .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_bgcc .Leading =_fced .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_bgcc .CapHeight =_fced .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_bgcc .XHeight =_fced .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_bgcc .StemV =_fced .Get ("\u0053\u0074\u0065m\u0056");_bgcc .StemH =_fced .Get ("\u0053\u0074\u0065m\u0048");_bgcc .AvgWidth =_fced .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_bgcc .MaxWidth =_fced .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_bgcc .MissingWidth =_fced .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_bgcc .FontFile =_fced .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_bgcc .FontFile2 =_fced .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_bgcc .FontFile3 =_fced .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_bgcc .CharSet =_fced .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_bgcc .Style =_fced .Get ("\u0053\u0074\u0079l\u0065");_bgcc .Lang =_fced .Get ("\u004c\u0061\u006e\u0067");
_bgcc .FD =_fced .Get ("\u0046\u0044");_bgcc .CIDSet =_fced .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _bgcc .Flags !=nil {if _fffg ,_aebec :=_ac .GetIntVal (_bgcc .Flags );_aebec {_bgcc ._abceg =_fffg ;};};if _bgcc .MissingWidth !=nil {if _cdccc ,_eeegf :=_ac .GetNumberAsFloat (_bgcc .MissingWidth );
_eeegf ==nil {_bgcc ._gbbab =_cdccc ;};};if _bgcc .FontFile !=nil {_bgfc ,_acdd :=_aecdb (_bgcc .FontFile );if _acdd !=nil {return _bgcc ,_acdd ;};_da .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bgfc );_bgcc .fontFile =_bgfc ;
};if _bgcc .FontFile2 !=nil {_ecdb ,_ccfg :=_bd .NewFontFile2FromPdfObject (_bgcc .FontFile2 );if _ccfg !=nil {return _bgcc ,_ccfg ;};_da .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ecdb .String ());_bgcc ._caega =&_ecdb ;
};return _bgcc ,nil ;};func (_ddc *PdfReader )newPdfActionJavaScriptFromDict (_bdd *_ac .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bdd .Get ("\u004a\u0053")},nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_aecc *_ac .PdfIndirectObject ;};func _baba (_fcccd _ac .PdfObject )(string ,error ){_fcccd =_ac .TraceToDirectObject (_fcccd );switch _fbbdgf :=_fcccd .(type ){case *_ac .PdfObjectString :return _fbbdgf .Str (),nil ;
case *_ac .PdfObjectStream :_caec ,_ebgaa :=_ac .DecodeStream (_fbbdgf );if _ebgaa !=nil {return "",_ebgaa ;};return string (_caec ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fcccd );
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcead *PdfColorspaceSpecialPattern )ToPdfObject ()_ac .PdfObject {if _dcead .UnderlyingCS ==nil {return _ac .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ebdd :=_ac .MakeArray (_ac .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ebdd .Append (_dcead .UnderlyingCS .ToPdfObject ());
if _dcead ._abbbd !=nil {_dcead ._abbbd .PdfObject =_ebdd ;return _dcead ._abbbd ;};return _ebdd ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _dg .Time ){_adga .Lock ();defer _adga .Unlock ();_bggd =creationDate ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fagegf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fagegf ._cfgc =colorspace ;};func (_bfe *PdfReader )newPdfActionGotoFromDict (_dbg *_ac .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dbg .Get ("\u0044")},nil ;
};func (_fbge *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_afdb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_gdadb *LTV )enable (_gadfc ,_egec []*_gd .Certificate ,_edcf string )error {_bgdg ,_cegfgg ,_caacf :=_gdadb .buildCertChain (_gadfc ,_egec );if _caacf !=nil {return _caacf ;
};_gfab ,_caacf :=_gdadb .getCerts (_bgdg );if _caacf !=nil {return _caacf ;};var _eefb ,_bcdc [][]byte ;if _gdadb .OCSPClient !=nil {_eefb ,_caacf =_gdadb .getOCSPs (_bgdg ,_cegfgg );if _caacf !=nil {return _caacf ;};};if _gdadb .CRLClient !=nil {_bcdc ,_caacf =_gdadb .getCRLs (_bgdg );
if _caacf !=nil {return _caacf ;};};_gcafd :=_gdadb ._cbgf ;_ffeab ,_caacf :=_gcafd .AddCerts (_gfab );if _caacf !=nil {return _caacf ;};_ddfcad ,_caacf :=_gcafd .AddOCSPs (_eefb );if _caacf !=nil {return _caacf ;};_ccgcb ,_caacf :=_gcafd .AddCRLs (_bcdc );
if _caacf !=nil {return _caacf ;};if _edcf !=""{_gcafd .VRI [_edcf ]=&VRI {Cert :_ffeab ,OCSP :_ddfcad ,CRL :_ccgcb };};_gdadb ._gggba .SetDSS (_gcafd );return nil ;};func _bgage (_fgebb *_cf .ImageBase )(_gadef Image ){_gadef .Width =int64 (_fgebb .Width );
_gadef .Height =int64 (_fgebb .Height );_gadef .BitsPerComponent =int64 (_fgebb .BitsPerComponent );_gadef .ColorComponents =_fgebb .ColorComponents ;_gadef .Data =_fgebb .Data ;_gadef ._bacca =_fgebb .Decode ;_gadef ._geag =_fgebb .Alpha ;return _gadef ;
};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_effaa :_ac .MakeDict (),ColorComponents :colorComponents };
};

// ToInteger convert to an integer format.
func (_dadf *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_dgeb :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dgeb *_dadf .R ()),uint32 (_dgeb *_dadf .G ()),uint32 (_dgeb *_dadf .B ())};};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bafcg *LTV )EnableChain (chain []*_gd .Certificate )error {return _bafcg .enable (nil ,chain ,"")};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gbcdb *Image )GetParamsDict ()*_ac .PdfObjectDictionary {_ggbg :=_ac .MakeDict ();_ggbg .Set ("\u0057\u0069\u0064t\u0068",_ac .MakeInteger (_gbcdb .Width ));_ggbg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ac .MakeInteger (_gbcdb .Height ));_ggbg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ac .MakeInteger (int64 (_gbcdb .ColorComponents )));
_ggbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ac .MakeInteger (_gbcdb .BitsPerComponent ));return _ggbg ;};

// GetCerts returns the signature certificate chain.
func (_fedba *PdfSignature )GetCerts ()([]*_gd .Certificate ,error ){var _fdecc []func ()([]*_gd .Certificate ,error );switch _egaa ,_ :=_ac .GetNameVal (_fedba .SubFilter );_egaa {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fdecc =append (_fdecc ,_fedba .extractChainFromPKCS7 ,_fedba .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fdecc =append (_fdecc ,_fedba .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fdecc =append (_fdecc ,_fedba .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_egaa );};for _ ,_gbgag :=range _fdecc {_egfaf ,_dcffd :=_gbgag ();if _dcffd !=nil {return nil ,_dcffd ;
};if len (_egfaf )> 0{return _egfaf ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_aacd *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aacd .AlternateSpace ==nil {return nil ,_aec .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _aacd .AlternateSpace .ColorToRGB (color );};

// ToPdfObject returns the PDF representation of the function.
func (_ggggea *PdfFunctionType0 )ToPdfObject ()_ac .PdfObject {if _ggggea ._bagbf ==nil {_ggggea ._bagbf =&_ac .PdfObjectStream {};};_gccac :=_ac .MakeDict ();_gccac .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ac .MakeInteger (0));
_gfcbe :=&_ac .PdfObjectArray {};for _ ,_gdfff :=range _ggggea .Domain {_gfcbe .Append (_ac .MakeFloat (_gdfff ));};_gccac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfcbe );_gbgfg :=&_ac .PdfObjectArray {};for _ ,_cfgd :=range _ggggea .Range {_gbgfg .Append (_ac .MakeFloat (_cfgd ));
};_gccac .Set ("\u0052\u0061\u006eg\u0065",_gbgfg );_fccdg :=&_ac .PdfObjectArray {};for _ ,_cdgc :=range _ggggea .Size {_fccdg .Append (_ac .MakeInteger (int64 (_cdgc )));};_gccac .Set ("\u0053\u0069\u007a\u0065",_fccdg );_gccac .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ac .MakeInteger (int64 (_ggggea .BitsPerSample )));
if _ggggea .Order !=1{_gccac .Set ("\u004f\u0072\u0064e\u0072",_ac .MakeInteger (int64 (_ggggea .Order )));};_gccac .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_ggggea ._cdagg ))));_ggggea ._bagbf .Stream =_ggggea ._cdagg ;
_ggggea ._bagbf .PdfObjectDictionary =_gccac ;return _ggggea ._bagbf ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_abfc *PdfFieldButton )SetType (btype ButtonType ){_gfcb :=uint32 (0);if _abfc .Ff !=nil {_gfcb =uint32 (*_abfc .Ff );};switch btype {case ButtonTypePush :_gfcb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_gfcb |=FieldFlagRadio .Mask ();
};_abfc .Ff =_ac .MakeInteger (int64 (_gfcb ));};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_agcac *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_agcac ._badgbb =&pickTrayByPDFSize ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ac .PdfObject ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ccaf :=NewPdfAnnotation ();_fffb :=&PdfAnnotationSquiggly {};_fffb .PdfAnnotation =_ccaf ;_fffb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccaf .SetContext (_fffb );return _fffb ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _ac .PdfObject )(*PdfInfo ,error ){var _gacaf PdfInfo ;_bdcf ,_ebgec :=obj .(*_ac .PdfObjectDictionary );if !_ebgec {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_acfbe :=range _bdcf .Keys (){switch _acfbe {case "\u0054\u0069\u0074l\u0065":_gacaf .Title ,_ =_ac .GetString (_bdcf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_gacaf .Author ,_ =_ac .GetString (_bdcf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gacaf .Subject ,_ =_ac .GetString (_bdcf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gacaf .Keywords ,_ =_ac .GetString (_bdcf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gacaf .Creator ,_ =_ac .GetString (_bdcf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gacaf .Producer ,_ =_ac .GetString (_bdcf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gacaf .Trapped ,_ =_ac .GetName (_bdcf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _fegc ,_dffda :=_ac .GetString (_bdcf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_dffda &&_fegc .String ()!=""{_bedad ,_bagg :=NewPdfDate (_fegc .String ());if _bagg !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bagg );
};_gacaf .CreationDate =&_bedad ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _debd ,_beeef :=_ac .GetString (_bdcf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_beeef &&_debd .String ()!=""{_ggaaf ,_eaadd :=NewPdfDate (_debd .String ());if _eaadd !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_eaadd );
};_gacaf .ModifiedDate =&_ggaaf ;};default:_cgff ,_ :=_ac .GetString (_bdcf .Get (_acfbe ));if _gacaf ._cefe ==nil {_gacaf ._cefe =_ac .MakeDict ();};_gacaf ._cefe .Set (_acfbe ,_cgff );};};return &_gacaf ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fgbd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agfc ,_dcga :=_ac .GetNumbersAsFloat (objects );
if _dcga !=nil {return nil ,_dcga ;};return _fgbd .ColorFromFloats (_agfc );};func (_dfcg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ac .PdfObjectInteger ;BitsPerComponent *_ac .PdfObjectInteger ;BitsPerFlag *_ac .PdfObjectInteger ;Decode *_ac .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eddgd *PdfShadingType5 )ToPdfObject ()_ac .PdfObject {_eddgd .PdfShading .ToPdfObject ();_fdgb ,_ddff :=_eddgd .getShadingDict ();if _ddff !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eddgd .BitsPerCoordinate !=nil {_fdgb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eddgd .BitsPerCoordinate );};if _eddgd .BitsPerComponent !=nil {_fdgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eddgd .BitsPerComponent );
};if _eddgd .VerticesPerRow !=nil {_fdgb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_eddgd .VerticesPerRow );};if _eddgd .Decode !=nil {_fdgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eddgd .Decode );};if _eddgd .Function !=nil {if len (_eddgd .Function )==1{_fdgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eddgd .Function [0].ToPdfObject ());
}else {_edacf :=_ac .MakeArray ();for _ ,_bfecf :=range _eddgd .Function {_edacf .Append (_bfecf .ToPdfObject ());};_fdgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edacf );};};return _eddgd ._affg ;};func _ecdd (_fcdd *_ac .PdfObjectStream )(*PdfFunctionType4 ,error ){_fdbca :=&PdfFunctionType4 {};
_fdbca ._cdcff =_fcdd ;_fbgfe :=_fcdd .PdfObjectDictionary ;_acgbd ,_eddeg :=_ac .TraceToDirectObject (_fbgfe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ac .PdfObjectArray );if !_eddeg {_da .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _acgbd .Len ()%2!=0{_da .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_abeea ,_ddgge :=_acgbd .ToFloat64Array ();if _ddgge !=nil {return nil ,_ddgge ;};_fdbca .Domain =_abeea ;_acgbd ,_eddeg =_ac .TraceToDirectObject (_fbgfe .Get ("\u0052\u0061\u006eg\u0065")).(*_ac .PdfObjectArray );
if _eddeg {if _acgbd .Len ()< 0||_acgbd .Len ()%2!=0{return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fbaab ,_bfbfa :=_acgbd .ToFloat64Array ();if _bfbfa !=nil {return nil ,_bfbfa ;};_fdbca .Range =_fbaab ;
};_bagbb ,_ddgge :=_ac .DecodeStream (_fcdd );if _ddgge !=nil {return nil ,_ddgge ;};_fdbca ._eced =_bagbb ;_ecgc :=_fa .NewPSParser (_bagbb );_dace ,_ddgge :=_ecgc .Parse ();if _ddgge !=nil {return nil ,_ddgge ;};_fdbca .Program =_dace ;return _fdbca ,nil ;
};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_agbe :fonts ,CurrentFont :fonts [0]};};func (_fbaa *PdfReader )newPdfFieldSignatureFromDict (_edge *_ac .PdfObjectDictionary )(*PdfFieldSignature ,error ){_eggb :=&PdfFieldSignature {};
_fgaf ,_bdfa :=_ac .GetIndirect (_edge .Get ("\u0056"));if _bdfa {var _aaffad error ;_eggb .V ,_aaffad =_fbaa .newPdfSignatureFromIndirect (_fgaf );if _aaffad !=nil {return nil ,_aaffad ;};};_eggb .Lock ,_ =_ac .GetIndirect (_edge .Get ("\u004c\u006f\u0063\u006b"));
_eggb .SV ,_ =_ac .GetIndirect (_edge .Get ("\u0053\u0056"));return _eggb ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_acg :=NewPdfAction ();_bcd :=&PdfActionJavaScript {};_bcd .PdfAction =_acg ;_acg .SetContext (_bcd );return _bcd ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ac .PdfObject ;MK _ac .PdfObject ;A _ac .PdfObject ;AA _ac .PdfObject ;BS _ac .PdfObject ;Parent _ac .PdfObject ;_fbe *PdfField ;_fgee bool ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ac .PdfObject ;BS _ac .PdfObject ;LE _ac .PdfObject ;IC _ac .PdfObject ;LL _ac .PdfObject ;LLE _ac .PdfObject ;Cap _ac .PdfObject ;IT _ac .PdfObject ;LLO _ac .PdfObject ;CP _ac .PdfObject ;
Measure _ac .PdfObject ;CO _ac .PdfObject ;};

// SetTabOrder sets the tab order for the page.
func (_efee *PdfPage )SetTabOrder (order TabOrderType ){_efee .Tabs =_ac .MakeName (string (order ))};

// GetContainingPdfObject implements interface PdfModel.
func (_dbfe *PdfFilespec )GetContainingPdfObject ()_ac .PdfObject {return _dbfe ._fedc };

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ebfec *PdfShadingPatternType3 )ToPdfObject ()_ac .PdfObject {_ebfec .PdfPattern .ToPdfObject ();_aecbf :=_ebfec .getDict ();if _ebfec .Shading !=nil {_aecbf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ebfec .Shading .ToPdfObject ());};if _ebfec .Matrix !=nil {_aecbf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebfec .Matrix );
};if _ebfec .ExtGState !=nil {_aecbf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ebfec .ExtGState );};return _ebfec ._cgfee ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ac .PdfObject ;IC _ac .PdfObject ;BE _ac .PdfObject ;RD _ac .PdfObject ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ca .Permissions ;Algorithm EncryptionAlgorithm ;};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bgge *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// SetStructParentsKey sets the StructParents key.
func (_fdebg *PdfPage )SetStructParentsKey (key int ){if key ==-1{_fdebg .StructParents =nil ;}else {_fdebg .StructParents =_ac .MakeInteger (int64 (key ));};};func (_gddb *Image )samplesTrimPadding (_cfdba []uint32 )[]uint32 {_ccfga :=_gddb .ColorComponents *int (_gddb .Width )*int (_gddb .Height );
if len (_cfdba )==_ccfga {return _cfdba ;};_fefbc :=make ([]uint32 ,_ccfga );_eceee :=int (_gddb .Width )*_gddb .ColorComponents ;var _aegd ,_ggaee ,_ccbf ,_egcag int ;_cgca :=_cf .BytesPerLine (int (_gddb .Width ),int (_gddb .BitsPerComponent ),_gddb .ColorComponents );
for _aegd =0;_aegd < int (_gddb .Height );_aegd ++{_ggaee =_aegd *int (_gddb .Width );_ccbf =_aegd *_cgca ;for _egcag =0;_egcag < _eceee ;_egcag ++{_fefbc [_ggaee +_egcag ]=_cfdba [_ccbf +_egcag ];};};return _fefbc ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_adge *PdfAcroForm ,_afbac *PdfField ,_abegc *PdfAnnotationWidget )(*_ac .PdfObjectDictionary ,error );};func (_bage *LTV )generateVRIKey (_acegf *PdfSignature )(string ,error ){_bagcd ,_ddbdb :=_daabb (_acegf .Contents .Bytes ());
if _ddbdb !=nil {return "",_ddbdb ;};return _fgg .ToUpper (_fg .EncodeToString (_bagcd )),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgdba *PdfShading )ToPdfObject ()_ac .PdfObject {_egcc :=_cgdba ._affg ;_egab ,_cfbdb :=_cgdba .getShadingDict ();if _cfbdb !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgdba .ShadingType !=nil {_egab .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cgdba .ShadingType );};if _cgdba .ColorSpace !=nil {_egab .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgdba .ColorSpace .ToPdfObject ());
};if _cgdba .Background !=nil {_egab .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cgdba .Background );};if _cgdba .BBox !=nil {_egab .Set ("\u0042\u0042\u006f\u0078",_cgdba .BBox .ToPdfObject ());};if _cgdba .AntiAlias !=nil {_egab .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cgdba .AntiAlias );
};return _egcc ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gfb :=NewPdfAnnotation ();_agg :=&PdfAnnotationText {};_agg .PdfAnnotation =_gfb ;_agg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfb .SetContext (_agg );return _agg ;};

// M returns the value of the magenta component of the color.
func (_baad *PdfColorDeviceCMYK )M ()float64 {return _baad [1]};func (_gcbef *PdfWriter )writeString (_gabgf string ){if _gcbef ._dbcea !=nil {return ;};_fdcgde ,_faaec :=_gcbef ._dacf .WriteString (_gabgf );_gcbef ._eaafg +=int64 (_fdcgde );_gcbef ._dbcea =_faaec ;
};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _ac .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_ggffe :=NewXObjectImage ();if lazy {_afgfd ,_cecce :=UpdateXObjectImageFromImage (_ggffe ,img ,cs ,encoder );if _cecce !=nil {return nil ,_cecce ;
};_afgfd .ToPdfObject ();_cecce =_afgfd ._bagcg .MakeLazy ();if _cecce !=nil {return nil ,_cecce ;};_afgfd .Stream =nil ;return _afgfd ,nil ;};return UpdateXObjectImageFromImage (_ggffe ,img ,cs ,encoder );};func (_fcggb *PdfWriter )setHashIDs (_bebgca _g .Hash )error {_ddgfg :=_bebgca .Sum (nil );
if _fcggb ._edfggf ==""{_fcggb ._edfggf =_fg .EncodeToString (_ddgfg [:8]);};_fcggb .setDocumentIDs (_fcggb ._edfggf ,_fg .EncodeToString (_ddgfg [8:]));return nil ;};

// C returns the value of the C component of the color.
func (_cbec *PdfColorCalRGB )C ()float64 {return _cbec [2]};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ac .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ac .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ac .PdfObjectBool ;_gfcfg PdfModel ;_affg _ac .PdfObject ;};

// Write outputs the object as it is to be written to file.
func (_bdaec *pdfSignDictionary )Write ()[]byte {_bdaec ._fefdg =0;_bdaec ._bbegd =0;_bdaec ._dedbg =0;_bdaec ._fccdb =0;_acege :=_ag .NewBuffer (nil );_acege .WriteString ("\u003c\u003c");for _ ,_dbff :=range _bdaec .Keys (){_bbgga :=_bdaec .Get (_dbff );
switch _dbff {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_acege .Write (_dbff .Write ());_acege .WriteString ("\u0020");_bdaec ._dedbg =_acege .Len ();_acege .Write (_bbgga .Write ());_acege .WriteString ("\u0020");_bdaec ._fccdb =_acege .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_acege .Write (_dbff .Write ());_acege .WriteString ("\u0020");_bdaec ._fefdg =_acege .Len ();_acege .Write (_bbgga .Write ());_acege .WriteString ("\u0020");_bdaec ._bbegd =_acege .Len ()-1;default:_acege .Write (_dbff .Write ());
_acege .WriteString ("\u0020");_acege .Write (_bbgga .Write ());};};_acege .WriteString ("\u003e\u003e");return _acege .Bytes ();};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gcg :=PdfColorDeviceGray (grayVal );return &_gcg ;};func _faeeg (_fbfbf _ac .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dgde :=&PdfColorspaceDeviceNAttributes {};var _cffe *_ac .PdfObjectDictionary ;
switch _afba :=_fbfbf .(type ){case *_ac .PdfIndirectObject :_dgde ._eggfca =_afba ;var _deaf bool ;_cffe ,_deaf =_afba .PdfObject .(*_ac .PdfObjectDictionary );if !_deaf {_da .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_ac .PdfObjectDictionary :_cffe =_afba ;case *_ac .PdfObjectReference :_ebce :=_afba .Resolve ();return _faeeg (_ebce );default:_da .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffbg :=_cffe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ffbg !=nil {_acgac ,_ffdf :=_ac .TraceToDirectObject (_ffbg ).(*_ac .PdfObjectName );if !_ffdf {_da .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dgde .Subtype =_acgac ;};if _cacc :=_cffe .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cacc !=nil {_dgde .Colorants =_cacc ;};if _cbef :=_cffe .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cbef !=nil {_dgde .Process =_cbef ;};if _bgbb :=_cffe .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bgbb !=nil {_dgde .MixingHints =_bgbb ;};return _dgde ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dgege *Image )AlphaMap (mapFunc AlphaMapFunc ){for _eggfbb ,_adaeb :=range _dgege ._geag {_dgege ._geag [_eggfbb ]=mapFunc (_adaeb );};};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ecbc :=NewPdfAnnotation ();_fbc :=&PdfAnnotationCircle {};_fbc .PdfAnnotation =_ecbc ;_fbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecbc .SetContext (_fbc );return _fbc ;};const (_fgagf =0x00001;
_afdgb =0x00002;_baeaa =0x00004;_fgeeg =0x00008;_gffbb =0x00020;_cbggg =0x00040;_fece =0x10000;_cfaa =0x20000;_eegeg =0x40000;);func (_bceec *PdfWriter )copyObjects (){_bfcaf :=make (map[_ac .PdfObject ]_ac .PdfObject );_gcbfc :=make ([]_ac .PdfObject ,0,len (_bceec ._beggg ));
_bebbb :=make (map[_ac .PdfObject ]struct{},len (_bceec ._beggg ));_gcbfab :=make (map[_ac .PdfObject ]struct{});for _ ,_eeebd :=range _bceec ._beggg {_cafdg :=_bceec .copyObject (_eeebd ,_bfcaf ,_gcbfab ,false );if _ ,_bfbgg :=_gcbfab [_eeebd ];_bfbgg {continue ;
};_gcbfc =append (_gcbfc ,_cafdg );_bebbb [_cafdg ]=struct{}{};};_bceec ._beggg =_gcbfc ;_bceec ._beeeeg =_bebbb ;_bceec ._bcbcab =_bceec .copyObject (_bceec ._bcbcab ,_bfcaf ,nil ,false ).(*_ac .PdfIndirectObject );_bceec ._aefaf =_bceec .copyObject (_bceec ._aefaf ,_bfcaf ,nil ,false ).(*_ac .PdfIndirectObject );
if _bceec ._dfecf !=nil {_bceec ._dfecf =_bceec .copyObject (_bceec ._dfecf ,_bfcaf ,nil ,false ).(*_ac .PdfIndirectObject );};if _bceec ._abbg {_fbcbd :=make (map[_ac .PdfObject ]int64 );for _fccab ,_dafcac :=range _bceec ._fdgef {if _ffccdg ,_ddbbbd :=_bfcaf [_fccab ];
_ddbbbd {_fbcbd [_ffccdg ]=_dafcac ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bceec ._fdgef =_fbcbd ;};};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dbcgdc *PdfFont )ToUnicode ()string {if _dbcgdc .baseFields ()._eceed ==nil {return "";};return _dbcgdc .baseFields ()._eceed .Name ();};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_efadf *PdfReader )loadStructure ()error {if _efadf ._ecebe .GetCrypter ()!=nil &&!_efadf ._ecebe .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ccfd :=_efadf ._ecebe .GetTrailer ();if _ccfd ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gbee ,_ccbad :=_ccfd .Get ("\u0052\u006f\u006f\u0074").(*_ac .PdfObjectReference );if !_ccbad {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ccfd );
};_dceac ,_aacafd :=_efadf ._ecebe .LookupByReference (*_gbee );if _aacafd !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_aacafd );
return _aacafd ;};_cede ,_ccbad :=_dceac .(*_ac .PdfIndirectObject );if !_ccbad {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dceac ,*_ccfd );
return _aec .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ccecd ,_ccbad :=(*_cede ).PdfObject .(*_ac .PdfObjectDictionary );if !_ccbad {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cede .PdfObject );
return _aec .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_da .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ccecd );_fgfbf ,_ccbad :=_ccecd .Get ("\u0050\u0061\u0067e\u0073").(*_ac .PdfObjectReference );
if !_ccbad {return _aec .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gadea ,_aacafd :=_efadf ._ecebe .LookupByReference (*_fgfbf );
if _aacafd !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _aacafd ;};_ccedb ,_ccbad :=_gadea .(*_ac .PdfIndirectObject );if !_ccbad {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_da .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ccedb );return _aec .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bafe ,_ccbad :=_ccedb .PdfObject .(*_ac .PdfObjectDictionary );if !_ccbad {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ccedb );
return _aec .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ggba ,_ccbad :=_ac .GetInt (_bafe .Get ("\u0043\u006f\u0075n\u0074"));if !_ccbad {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _aec .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ccbad =_ac .GetName (_bafe .Get ("\u0054\u0079\u0070\u0065"));!_ccbad {_da .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bafe .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gabcfb ,_ceefg :=_ac .GetInt (_bafe .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_ceefg {_cfeb :=int64 (*_gabcfb );_efadf .Rotate =&_cfeb ;};_efadf ._gbggb =_gbee ;
_efadf ._dfae =_ccecd ;_efadf ._bcdag =_bafe ;_efadf ._ebfea =_ccedb ;_efadf ._acebg =int (*_ggba );_efadf ._efgg =[]*_ac .PdfIndirectObject {};_ecbgc :=map[_ac .PdfObject ]struct{}{};_aacafd =_efadf .buildPageList (_ccedb ,nil ,_ecbgc );if _aacafd !=nil {return _aacafd ;
};_da .Log .Trace ("\u002d\u002d\u002d");_da .Log .Trace ("\u0054\u004f\u0043");_da .Log .Trace ("\u0050\u0061\u0067e\u0073");_da .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_efadf ._efgg ),_efadf ._efgg );_efadf ._fbgg ,_aacafd =_efadf .loadOutlines ();
if _aacafd !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_aacafd );
return _aacafd ;};_efadf .AcroForm ,_aacafd =_efadf .loadForms ();if _aacafd !=nil {return _aacafd ;};_efadf .DSS ,_aacafd =_efadf .loadDSS ();if _aacafd !=nil {return _aacafd ;};_efadf ._cgaac ,_aacafd =_efadf .loadPerms ();if _aacafd !=nil {return _aacafd ;
};return nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bbba *PdfAppender )UpdatePage (page *PdfPage ){_bbba .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_baedd *_ac .PdfIndirectObject ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_efcbf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cd .CharCode )(_cebd []rune ,_fbaedc ,_dgfd int ){_eecd ,_fbaedc ,_dgfd :=_efcbf .CharcodesToStrings (charcodes ,"");return []rune (_fgg .Join (_eecd ,"")),_fbaedc ,_dgfd ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_agggb *ViewerPreferences )IsDisplayDocTitle ()bool {if _agggb ._febfe ==nil {return false ;};return *_agggb ._febfe ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ac .PdfObject ;};func (_cgffc *PdfWriter )writeOutputIntents ()error {if len (_cgffc ._adde )==0{return nil ;};_cbbg :=make ([]_ac .PdfObject ,len (_cgffc ._adde ));for _egcbe ,_acfbde :=range _cgffc ._adde {_aeaccg :=_acfbde .ToPdfObject ();
_cbbg [_egcbe ]=_ac .MakeIndirectObject (_aeaccg );};_cbceg :=_ac .MakeIndirectObject (_ac .MakeArray (_cbbg ...));_cgffc ._cgebe .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_cbceg );if _ecbeg :=_cgffc .addObjects (_cbceg );
_ecbeg !=nil {return _ecbeg ;};return nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_aedf *PdfOutputIntent )ToPdfObject ()_ac .PdfObject {if _aedf ._effaa ==nil {_aedf ._effaa =_ac .MakeDict ();};_bacea :=_aedf ._effaa ;if _aedf .Type !=""{_bacea .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName (_aedf .Type ));};_bacea .Set ("\u0053",_ac .MakeName (_aedf .S .String ()));
if _aedf .OutputCondition !=""{_bacea .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_ac .MakeString (_aedf .OutputCondition ));};_bacea .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_ac .MakeString (_aedf .OutputConditionIdentifier ));
_bacea .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_ac .MakeString (_aedf .RegistryName ));if _aedf .Info !=""{_bacea .Set ("\u0049\u006e\u0066\u006f",_ac .MakeString (_aedf .Info ));};if len (_aedf .DestOutputProfile )!=0{_eafg ,_bbabe :=_ac .MakeStream (_aedf .DestOutputProfile ,_ac .NewFlateEncoder ());
if _bbabe !=nil {_da .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bbabe );
};_eafg .PdfObjectDictionary .Set ("\u004e",_ac .MakeInteger (int64 (_aedf .ColorComponents )));_fabd :=make ([]float64 ,_aedf .ColorComponents *2);for _bcccf :=0;_bcccf < _aedf .ColorComponents *2;_bcccf ++{_bdadb :=0.0;if _bcccf %2!=0{_bdadb =1.0;};_fabd [_bcccf ]=_bdadb ;
};_eafg .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_ac .MakeArrayFromFloats (_fabd ));_bacea .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_eafg );};return _bacea ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bdde *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffge ,_gcga :=color .(*PdfColorCalGray );if !_gcga {_da .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ffge .Val ();X :=_bdde .WhitePoint [0]*_fe .Pow (ANorm ,_bdde .Gamma );Y :=_bdde .WhitePoint [1]*_fe .Pow (ANorm ,_bdde .Gamma );
Z :=_bdde .WhitePoint [2]*_fe .Pow (ANorm ,_bdde .Gamma );_dgfe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfga :=-0.969256*X +1.875992*Y +0.041556*Z ;_bccd :=0.055648*X +-0.204043*Y +1.057311*Z ;_dgfe =_fe .Min (_fe .Max (_dgfe ,0),1.0);_dfga =_fe .Min (_fe .Max (_dfga ,0),1.0);
_bccd =_fe .Min (_fe .Max (_bccd ,0),1.0);return NewPdfColorDeviceRGB (_dgfe ,_dfga ,_bccd ),nil ;};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_gabgg *PdfPage )GetStructParentsKey ()int {if _edbbg ,_bdacb :=_ac .GetIntVal (_gabgg .StructParents );_bdacb {return _edbbg ;};return -1;};func _bgaeb (_fdefc _ac .PdfObject ,_daee _ac .PdfObject ,_fbaef map[_ac .PdfObject ][]_ac .PdfObject ,_baac map[string ]_ac .PdfObject ,_gcfee *[]_ac .PdfObject ){var _daedbd *_ac .PdfIndirectObject ;
if _acfc ,_eggedb :=_ac .GetIndirect (_fdefc );_eggedb {_daedbd =_acfc ;_fdefc =_acfc .PdfObject ;};switch _ceeee :=_fdefc .(type ){case *_ac .PdfObjectDictionary :if _ceeee .Get ("\u0053")==nil {return ;};_ceeee .Set ("\u0050",_daee );if _gccee :=_ceeee .Get ("\u0050\u0067");
_gccee !=nil {if _baffe ,_cddgg :=_ac .GetIndirect (_gccee );_cddgg &&_baffe !=nil &&_baffe .PdfObject !=nil {_fbaef [_gccee ]=append (_fbaef [_gccee ],_daedbd );};};if _fbgcd :=_ceeee .Get ("\u0053");_fbgcd !=nil {if _cagfc ,_faab :=_ac .GetNameVal (_fbgcd );
_faab {if _cagfc ==StructureTypeLink {if _aacbf :=_ceeee .Get ("\u004b");_aacbf !=nil {if _gbefg ,_abdd :=_ac .GetArray (_aacbf );_abdd &&_gbefg .Len ()==2{_bdbgb :=false ;_cgaee :=false ;for _ ,_dffgb :=range _gbefg .Elements (){if _ebecd ,_cggfg :=_ac .GetDict (_dffgb );
_cggfg {if _dbcffa ,_deae :=_ac .GetName (_ebecd .Get ("\u0054\u0079\u0070\u0065"));_deae &&_dbcffa .String ()=="\u004f\u0042\u004a\u0052"{_cgaee =true ;};}else if _ ,_fdgbd :=_ac .GetInt (_dffgb );_fdgbd {_bdbgb =true ;};};if _bdbgb &&_cgaee {*_gcfee =append (*_gcfee ,_daedbd );
};}else if _ceab ,_aeadb :=_ac .GetDict (_aacbf );_aeadb {if _agfee ,_ceaea :=_ac .GetName (_ceab .Get ("\u0054\u0079\u0070\u0065"));_ceaea &&_agfee .String ()=="\u004f\u0042\u004a\u0052"{*_gcfee =append (*_gcfee ,_daedbd );};};};};};};if _gfcg :=_ceeee .Get ("\u0049\u0044");
_gfcg !=nil {_baac [_gfcg .String ()]=_fdefc ;};if _gbac :=_ceeee .Get ("\u004b");_gbac !=nil {_bgaeb (_gbac ,_daedbd ,_fbaef ,_baac ,_gcfee );};case *_ac .PdfObjectArray :for _ ,_cgcf :=range _ceeee .Elements (){_bgaeb (_cgcf ,_daee ,_fbaef ,_baac ,_gcfee );
};default:};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_caea *PdfAppender )UpdateObject (obj _ac .PdfObject ){_caea .replaceObject (obj ,obj );if _ ,_cac :=_caea ._aadba [obj ];!_cac {_caea ._ecae =append (_caea ._ecae ,obj );_caea ._aadba [obj ]=struct{}{};};};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_daa :=PdfColorCalRGB {a ,b ,c };return &_daa ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dgcdb *Permissions )GetContainingPdfObject ()_ac .PdfObject {return _dgcdb ._cgfdb };

// IsTiling specifies if the pattern is a tiling pattern.
func (_acbad *PdfPattern )IsTiling ()bool {return _acbad .PatternType ==1};

// BaseFont returns the font's "BaseFont" field.
func (_gbef *PdfFont )BaseFont ()string {return _gbef .baseFields ()._cfca };func _bcce (_ccda _ac .PdfObject )(*PdfColorspaceICCBased ,error ){_fdecb :=&PdfColorspaceICCBased {};if _faagf ,_gada :=_ccda .(*_ac .PdfIndirectObject );_gada {_fdecb ._gcgbd =_faagf ;
};_ccda =_ac .TraceToDirectObject (_ccda );_aadbf ,_feec :=_ccda .(*_ac .PdfObjectArray );if !_feec {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aadbf .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_ccda =_ac .TraceToDirectObject (_aadbf .Get (0));_aaca ,_feec :=_ccda .(*_ac .PdfObjectName );if !_feec {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_aaca !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ccda =_aadbf .Get (1);
_dfff ,_feec :=_ac .GetStream (_ccda );if !_feec {_da .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ccda );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dcdf :=_dfff .PdfObjectDictionary ;_ebfe ,_feec :=_dcdf .Get ("\u004e").(*_ac .PdfObjectInteger );
if !_feec {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ebfe !=1&&*_ebfe !=3&&*_ebfe !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_fdecb .N =int (*_ebfe );if _gdab :=_dcdf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gdab !=nil {_baaed ,_ggaf :=NewPdfColorspaceFromPdfObject (_gdab );if _ggaf !=nil {return nil ,_ggaf ;};_fdecb .Alternate =_baaed ;};if _bddg :=_dcdf .Get ("\u0052\u0061\u006eg\u0065");
_bddg !=nil {_bddg =_ac .TraceToDirectObject (_bddg );_bdeba ,_ggcb :=_bddg .(*_ac .PdfObjectArray );if !_ggcb {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bdeba .Len ()!=2*_fdecb .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cdge ,_agdd :=_bdeba .GetAsFloat64Slice ();if _agdd !=nil {return nil ,_agdd ;};_fdecb .Range =_cdge ;}else {_fdecb .Range =make ([]float64 ,2*_fdecb .N );for _caefd :=0;_caefd < _fdecb .N ;_caefd ++{_fdecb .Range [2*_caefd ]=0.0;_fdecb .Range [2*_caefd +1]=1.0;
};};if _ceagf :=_dcdf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ceagf !=nil {_afed ,_bfbg :=_ceagf .(*_ac .PdfObjectStream );if !_bfbg {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_fdecb .Metadata =_afed ;};_abbce ,_bfgb :=_ac .DecodeStream (_dfff );if _bfgb !=nil {return nil ,_bfgb ;};_fdecb .Data =_abbce ;_fdecb ._dcab =_dfff ;return _fdecb ,nil ;};

// Write writes out the PDF.
func (_dcef *PdfWriter )Write (writer _cc .Writer )error {_da .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _faeecc ,_egaff :=writer .(*_fgge .File );_egaff {_dcef .SetFileName (_faeecc .Name ());};_eeebg :=_dcef .checkLicense ();if _eeebg !=nil {return _eeebg ;
};if _eeebg =_dcef .writeOutlines ();_eeebg !=nil {return _eeebg ;};if _eeebg =_dcef .writeAcroFormFields ();_eeebg !=nil {return _eeebg ;};if _eeebg =_dcef .writeNamesDictionary ();_eeebg !=nil {return _eeebg ;};_dcef .checkPendingObjects ();if _eeebg =_dcef .writeOutputIntents ();
_eeebg !=nil {return _eeebg ;};_dcef .setCatalogVersion ();_dcef .copyObjects ();if _eeebg =_dcef .optimize ();_eeebg !=nil {return _eeebg ;};if _eeebg =_dcef .optimizeDocument ();_eeebg !=nil {return _eeebg ;};var _fgdfg _g .Hash ;if _dcef ._deaag {_fgdfg =_dc .New ();
writer =_cc .MultiWriter (_fgdfg ,writer );};_dcef .setWriter (writer );_dgadd :=_dcef .checkCrossReferenceStream ();_geggd ,_dgadd :=_dcef .mapObjectStreams (_dgadd );_dcef .adjustXRefAffectedVersion (_dgadd );_dcef .writeDocumentVersion ();_dcef .updateObjectNumbers ();
_dcef .writeObjects ();if _eeebg =_dcef .writeObjectsInStreams (_geggd );_eeebg !=nil {return _eeebg ;};_dgdfa :=_dcef ._eaafg ;var _fdedf int ;for _afecd :=range _dcef ._dfbbef {if _afecd > _fdedf {_fdedf =_afecd ;};};if _dcef ._deaag {if _eeebg =_dcef .setHashIDs (_fgdfg );
_eeebg !=nil {return _eeebg ;};};if _dgadd {if _eeebg =_dcef .writeXRefStreams (_fdedf ,_dgdfa );_eeebg !=nil {return _eeebg ;};}else {_dcef .writeTrailer (_fdedf );};_dcef .makeOffSetReference (_dgdfa );if _eeebg =_dcef .flushWriter ();_eeebg !=nil {return _eeebg ;
};return nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ac .PdfObject ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_ccffd int ,_dfcffa *PdfPage )error ;

// GetPerms returns the Permissions dictionary
func (_bbdfd *PdfReader )GetPerms ()*Permissions {return _bbdfd ._cgaac };func _fcaf (_cfg _ac .PdfObject )(*PdfBorderStyle ,error ){_bddc :=&PdfBorderStyle {};_bddc ._gbce =_cfg ;var _efed *_ac .PdfObjectDictionary ;_cfg =_ac .TraceToDirectObject (_cfg );
_efed ,_cegc :=_cfg .(*_ac .PdfObjectDictionary );if !_cegc {return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dfag :=_efed .Get ("\u0054\u0079\u0070\u0065");_dfag !=nil {_bggf ,_dccg :=_dfag .(*_ac .PdfObjectName );
if !_dccg {_da .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dfag );
}else {if *_bggf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_da .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bggf );};};};if _aaae :=_efed .Get ("\u0057");
_aaae !=nil {_deg ,_febf :=_ac .GetNumberAsFloat (_aaae );if _febf !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_febf );return nil ,_febf ;};_bddc .W =&_deg ;
};if _effg :=_efed .Get ("\u0053");_effg !=nil {_gebb ,_fgag :=_effg .(*_ac .PdfObjectName );if !_fgag {return nil ,_aec .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _degd BorderStyle ;switch *_gebb {case "\u0053":_degd =BorderStyleSolid ;case "\u0044":_degd =BorderStyleDashed ;case "\u0042":_degd =BorderStyleBeveled ;case "\u0049":_degd =BorderStyleInset ;case "\u0055":_degd =BorderStyleUnderline ;default:_da .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gebb );
return nil ,_aec .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bddc .S =&_degd ;};if _cgda :=_efed .Get ("\u0044");_cgda !=nil {_acgf ,_becc :=_cgda .(*_ac .PdfObjectArray );
if !_becc {_da .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cgda );return nil ,_aec .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_gbdge ,_fag :=_acgf .ToIntegerArray ();if _fag !=nil {_da .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_fag );
return nil ,_fag ;};_bddc .D =&_gbdge ;};return _bddc ,nil ;};func (_fdcd *PdfPage )flattenFieldsWithOpts (_eeddb FieldAppearanceGenerator ,_bdfdb *FieldFlattenOpts ,_ffcfe map[*PdfAnnotation ]bool )error {var _bdcc []*PdfAnnotation ;if _eeddb !=nil {if _gadb :=_eeddb .WrapContentStream (_fdcd );
_gadb !=nil {return _gadb ;};};_gdfb ,_cgfdf :=_fdcd .GetAnnotations ();if _cgfdf !=nil {return _cgfdf ;};for _ ,_bdfaf :=range _gdfb {_edcbg ,_gbba :=_ffcfe [_bdfaf ];if !_gbba &&_bdfdb .AnnotFilterFunc !=nil {if _ ,_cegad :=_bdfaf .GetContext ().(*PdfAnnotationWidget );
!_cegad {_gbba =_bdfdb .AnnotFilterFunc (_bdfaf );};};if !_gbba {_bdcc =append (_bdcc ,_bdfaf );continue ;};switch _bdfaf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_daafe ,_becf ,_aebe :=_ddcge (_bdfaf );if _aebe !=nil {if !_edcbg {_da .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_aebe );
continue ;};if _daafe ==nil {continue ;};_aggaa :=_fdcd .Resources .GenerateXObjectName ();_fdcd .Resources .SetXObjectFormByName (_aggaa ,_daafe );_aeac ,_efdg ,_aebe :=_fbbada (_daafe );if _aebe !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_aebe );
}else {_cbfe :=_bda .IdentityMatrix ();_cbfe =_cbfe .Translate (-_aeac .Llx ,-_aeac .Lly );if _efdg {_bcga :=1.0;if _aeac .Width ()> 0{_bcga =_fe .Round (_becf .Width ()/_aeac .Width ());};_fcff :=1.0;if _aeac .Height ()> 0{_fcff =_fe .Round (_becf .Height ()/_aeac .Height ());
};_cbfe =_cbfe .Scale (_bcga ,_fcff );};_becf .Transform (_cbfe );};_bcbd :=_fe .Min (_becf .Llx ,_becf .Urx );_cbfg :=_fe .Min (_becf .Lly ,_becf .Ury );var _ceac []string ;_ceac =append (_ceac ,"\u0071");_ceac =append (_ceac ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bcbd ,_cbfg ));
_ceac =append (_ceac ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_aggaa .String ()));_ceac =append (_ceac ,"\u0051");_acaab :=_fgg .Join (_ceac ,"\u000a");_aebe =_fdcd .AppendContentStream (_acaab );if _aebe !=nil {return _aebe ;};if _daafe .Resources !=nil {_gced ,_ecdc :=_ac .GetDict (_daafe .Resources .Font );
if _ecdc {for _ ,_ecbec :=range _gced .Keys (){if !_fdcd .Resources .HasFontByName (_ecbec ){_fdcd .Resources .SetFontByName (_ecbec ,_gced .Get (_ecbec ));};};};};};if len (_bdcc )> 0{_fdcd ._adba =_bdcc ;}else {_fdcd ._adba =[]*PdfAnnotation {};};return nil ;
};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionThread )ToPdfObject ()_ac .PdfObject {_ceb .PdfAction .ToPdfObject ();_aced :=_ceb ._acf ;_bbg :=_aced .PdfObject .(*_ac .PdfObjectDictionary );_bbg .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeThread )));if _ceb .F !=nil {_bbg .Set ("\u0046",_ceb .F .ToPdfObject ());
};_bbg .SetIfNotNil ("\u0044",_ceb .D );_bbg .SetIfNotNil ("\u0042",_ceb .B );return _aced ;};

// ToPdfObject implements interface PdfModel.
func (_bed *PdfActionGoTo )ToPdfObject ()_ac .PdfObject {_bed .PdfAction .ToPdfObject ();_geb :=_bed ._acf ;_fgc :=_geb .PdfObject .(*_ac .PdfObjectDictionary );_fgc .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeGoTo )));_fgc .SetIfNotNil ("\u0044",_bed .D );
return _geb ;};func (_dafdd *fontFile )parseASCIIPart (_fcad []byte )error {if len (_fcad )< 2||string (_fcad [:2])!="\u0025\u0021"{return _aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_gbaf ,_egcg ,_cfeag :=_gead (_fcad );if _cfeag !=nil {return _cfeag ;};_gfcff :=_bacga (_gbaf );_dafdd ._ecgfb =_gfcff ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dafdd ._ecgfb ==""{_da .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _egcg !=""{_ddbbb ,_egfac :=_gcabe (_egcg );if _egfac !=nil {return _egfac ;};_fbbd ,_egfac :=_cd .NewCustomSimpleTextEncoder (_ddbbb ,nil );if _egfac !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_egfac );
return nil ;};_dafdd ._bbfd =_fbbd ;};return nil ;};

// AddCRLs adds CRLs to DSS.
func (_agddb *DSS )AddCRLs (crls [][]byte )([]*_ac .PdfObjectStream ,error ){return _agddb .add (&_agddb .CRLs ,_agddb ._cffb ,crls );};func _gfacc (_dbgag *_ac .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gdgbd :=PdfShadingType5 {};_cgdgd :=_dbgag .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cgdgd ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abacd ,_ebfb :=_cgdgd .(*_ac .PdfObjectInteger );if !_ebfb {_da .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgdgd );
return nil ,_ac .ErrTypeError ;};_gdgbd .BitsPerCoordinate =_abacd ;_cgdgd =_dbgag .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cgdgd ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_abacd ,_ebfb =_cgdgd .(*_ac .PdfObjectInteger );if !_ebfb {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cgdgd );
return nil ,_ac .ErrTypeError ;};_gdgbd .BitsPerComponent =_abacd ;_cgdgd =_dbgag .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cgdgd ==nil {_da .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_abacd ,_ebfb =_cgdgd .(*_ac .PdfObjectInteger );if !_ebfb {_da .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cgdgd );
return nil ,_ac .ErrTypeError ;};_gdgbd .VerticesPerRow =_abacd ;_cgdgd =_dbgag .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cgdgd ==nil {_da .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cefgf ,_ebfb :=_cgdgd .(*_ac .PdfObjectArray );if !_ebfb {_da .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgdgd );
return nil ,_ac .ErrTypeError ;};_gdgbd .Decode =_cefgf ;if _fefed :=_dbgag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fefed !=nil {_gdgbd .Function =[]PdfFunction {};if _dgacb ,_baff :=_fefed .(*_ac .PdfObjectArray );_baff {for _ ,_ecegc :=range _dgacb .Elements (){_gffgf ,_egcdd :=_fdfgf (_ecegc );
if _egcdd !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egcdd );return nil ,_egcdd ;};_gdgbd .Function =append (_gdgbd .Function ,_gffgf );
};}else {_ccfdc ,_bfcdg :=_fdfgf (_fefed );if _bfcdg !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcdg );return nil ,_bfcdg ;
};_gdgbd .Function =append (_gdgbd .Function ,_ccfdc );};};return &_gdgbd ,nil ;};

// PrintClip returns the value of the printClip.
func (_efdfg *ViewerPreferences )PrintClip ()PageBoundary {return _efdfg ._beafcg };func (_ebef *PdfField )inherit (_dedb func (*PdfField )bool )(bool ,error ){_ggaad :=map[*PdfField ]bool {};_fecd :=false ;_fdcbb :=_ebef ;for _fdcbb !=nil {if _ ,_ggfb :=_ggaad [_fdcbb ];
_ggfb {return false ,_aec .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_aecg :=_dedb (_fdcbb );if _aecg {_fecd =true ;break ;};_ggaad [_fdcbb ]=true ;_fdcbb =_fdcbb .Parent ;};return _fecd ,nil ;
};func _egfb (_fgca *_ac .PdfObjectDictionary ,_fcfb *fontCommon )(*pdfFontType0 ,error ){_cegdb ,_bfde :=_ac .GetArray (_fgca .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bfde {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fcfb );
return nil ,_ac .ErrRangeError ;};if _cegdb .Len ()!=1{_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cegdb .Len ());return nil ,_ac .ErrRangeError ;
};_fbadb ,_effga :=_acded (_cegdb .Get (0),false );if _effga !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_effga ,_fcfb );
return nil ,_effga ;};_dgabc :=_fgca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bfeaa :="";_acgfd :=_bfaa (_fcfb );_acgfd .DescendantFont =_fbadb ;switch _efcbfc :=_dgabc .(type ){case *_ac .PdfObjectName :_bfeaa ,_bfde =_ac .GetNameVal (_dgabc );
if _bfde {if _bfeaa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bfeaa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_acgfd ._fbaeda =_cd .NewIdentityTextEncoder (_bfeaa );}else if _adg .IsPredefinedCMap (_bfeaa ){_acgfd ._fbcg ,_effga =_adg .LoadPredefinedCMap (_bfeaa );
if _effga !=nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bfeaa ,_effga );
};}else {_da .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bfeaa );};};case *_ac .PdfObjectStream :if _acgfd ._baagf ==nil {_fbdg ,_bbca :=_adg .NewCIDSystemInfo (_efcbfc .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bbca !=nil {_da .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_bbca );};_ffega :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fbdg .Registry ,_fbdg .Ordering );
if _adg .IsPredefinedCMap (_ffega ){_acgfd ._fbcg ,_bbca =_adg .LoadPredefinedCMap (_ffega );if _bbca !=nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ffega ,_bbca );
};}else {_ffega =_efcbfc .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_dbgdb ,_gagee :=_ac .DecodeStream (_efcbfc );if _gagee !=nil {_da .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_gagee );
return _acgfd ,_gagee ;};if _edcba :=_ffega =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_ffega =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_edcba {_acgfd ._fbcg ,_gagee =_adg .LoadCmapFromData (_dbgdb ,_edcba );
if _gagee !=nil {_da .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_gagee ,string (_dbgdb ));
return _acgfd ,_gagee ;};_fdbbd :=make (map[_adg .CharCode ]rune ,256);for _ggee :=0x00;_ggee <=0xFF;_ggee ++{_fdbbd [_adg .CharCode (_ggee )]=rune (_ggee );};_acgfd ._eceed =_adg .NewToUnicodeCMap (_fdbbd );};};};};if _agdcg :=_fbadb .baseFields ()._eceed ;
_agdcg !=nil {if _dcaa :=_agdcg .Name ();_dcaa =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dcaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dcaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dcaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_acgfd ._fbaeda =_cd .NewCMapEncoder (_bfeaa ,_acgfd ._fbcg ,_agdcg );
};};return _acgfd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_cgga *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbag :=vals [0];if _bbag < 0.0||_bbag > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbag );
return nil ,ErrColorOutOfRange ;};_bgad :=vals [1];if _bgad < 0.0||_bgad > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbag );return nil ,ErrColorOutOfRange ;
};_dceg :=vals [2];if _dceg < 0.0||_dceg > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbag );return nil ,ErrColorOutOfRange ;};_bbddc :=NewPdfColorDeviceRGB (_bbag ,_bgad ,_dceg );
return _bbddc ,nil ;};func _eggd (_bede ,_edfe string )string {if _fgg .Contains (_bede ,"\u002b"){_cgba :=_fgg .Split (_bede ,"\u002b");if len (_cgba )==2{_bede =_cgba [1];};};return _edfe +"\u002b"+_bede ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_daedb *PdfPage )AddExtGState (name _ac .PdfObjectName ,egs *_ac .PdfObjectDictionary )error {if _daedb .Resources ==nil {_daedb .Resources =NewPdfPageResources ();};if _daedb .Resources .ExtGState ==nil {_daedb .Resources .ExtGState =_ac .MakeDict ();
};_fedf ,_ebeag :=_ac .TraceToDirectObject (_daedb .Resources .ExtGState ).(*_ac .PdfObjectDictionary );if !_ebeag {_da .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ac .TraceToDirectObject (_daedb .Resources .ExtGState ));
return _aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fedf .Set (name ,egs );return nil ;};

// ParserMetadata gets the parser  metadata.
func (_edfae *CompliancePdfReader )ParserMetadata ()_ac .ParserMetadata {if _edfae ._ccada ==(_ac .ParserMetadata {}){_edfae ._ccada ,_ =_edfae ._ecebe .ParserMetadata ();};return _edfae ._ccada ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_edaebe pdfFontType3 )GetCharMetrics (code _cd .CharCode )(_bd .CharMetrics ,bool ){if _gdfbg ,_efdcf :=_edaebe ._dfed [code ];_efdcf {return _bd .CharMetrics {Wx :_gdfbg },true ;};if _bd .IsStdFont (_bd .StdFontName (_edaebe ._cfca )){return _bd .CharMetrics {Wx :250},true ;
};return _bd .CharMetrics {},false ;};func (_ccfgc *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_ccfgc ._ccabd .Major ,_ccfgc ._ccabd .Minor );};

// ToPdfObject implements interface PdfModel.
func (_cgg *PdfActionSound )ToPdfObject ()_ac .PdfObject {_cgg .PdfAction .ToPdfObject ();_ade :=_cgg ._acf ;_fdd :=_ade .PdfObject .(*_ac .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeSound )));_fdd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cgg .Sound );
_fdd .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_cgg .Volume );_fdd .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_cgg .Synchronous );_fdd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cgg .Repeat );_fdd .SetIfNotNil ("\u004d\u0069\u0078",_cgg .Mix );
return _ade ;};

// ToPdfObject implements interface PdfModel.
func (_dccc *PdfAnnotationInk )ToPdfObject ()_ac .PdfObject {_dccc .PdfAnnotation .ToPdfObject ();_edg :=_dccc ._add ;_bcda :=_edg .PdfObject .(*_ac .PdfObjectDictionary );_dccc .PdfAnnotationMarkup .appendToPdfDictionary (_bcda );_bcda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0049\u006e\u006b"));
_bcda .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dccc .InkList );_bcda .SetIfNotNil ("\u0042\u0053",_dccc .BS );return _edg ;};func (_ggdbg *PdfWriter )flushWriter ()error {if _ggdbg ._dbcea ==nil {_ggdbg ._dbcea =_ggdbg ._dacf .Flush ();};
return _ggdbg ._dbcea ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dfce :=PdfColorDeviceRGB {r ,g ,b };return &_dfce ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ggbcf :=NewPdfAnnotation ();_ccgb :=&PdfAnnotationCaret {};_ccgb .PdfAnnotation =_ggbcf ;_ccgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggbcf .SetContext (_ccgb );return _ccgb ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ac .StreamEncoder )(*XObjectImage ,error ){_abfge :=NewXObjectImage ();return UpdateXObjectImageFromImage (_abfge ,img ,cs ,encoder );};func (_cdbee *pdfFontSimple )baseFields ()*fontCommon {return &_cdbee .fontCommon };
func (_fadcea *PdfWriter )setCatalogVersion (){_fadcea ._cgebe .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ac .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_fadcea ._ccabd .Major ,_fadcea ._ccabd .Minor )));};

// GetPage returns the PdfPage model for the specified page number.
func (_cdfcea *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cdfcea ._ecebe .GetCrypter ()!=nil &&!_cdfcea ._ecebe .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_cdfcea ._efgg )< pageNumber {return nil ,_aec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gfagb :=pageNumber -1;if _gfagb < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cdbg :=_cdfcea .PageList [_gfagb ];
return _cdbg ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ac .PdfObject ;RichMediaContent _ac .PdfObject ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _ac .PdfObject )(*EmbeddedFile ,error ){_gaacf :=_ac .TraceToDirectObject (obj );_defcb ,_agddf :=_gaacf .(*_ac .PdfObjectDictionary );if !_agddf {return nil ,_aec .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dfgda :=_ac .TraceToDirectObject (_defcb .Get ("\u0046"));if _dfgda ==nil {return nil ,_aec .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_bgag ,_agddf :=_dfgda .(*_ac .PdfObjectStream );
if !_agddf {return nil ,_aec .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_eegea :=_bgag .PdfObjectDictionary ;_aecaa :=_eegea .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _aecaa ==nil {return nil ,_aec .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_addc ,_agddf :=_aecaa .(*_ac .PdfObjectDictionary );if !_agddf {return nil ,_aec .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_acaad :="";_adgd :=_addc .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _adgd !=nil {_acaad =_adgd .(*_ac .PdfObjectString ).Str ();};_fgbb ,_ddgf :=_ac .DecodeStream (_bgag );if _ddgf !=nil {return nil ,_ddgf ;};_afcfg :=&EmbeddedFile {Content :_fgbb ,Hash :_acaad };return _afcfg ,nil ;};

// GetNumComponents returns the number of color components.
func (_beef *PdfColorspaceICCBased )GetNumComponents ()int {return _beef .N };

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_fcfg *ViewerPreferences )IsHideWindowUI ()bool {if _fcfg ._edeed ==nil {return false ;};return *_fcfg ._edeed ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ecebe *_ac .PdfParser ;_gbggb _ac .PdfObject ;_ebfea *_ac .PdfIndirectObject ;_bcdag *_ac .PdfObjectDictionary ;_efgg []*_ac .PdfIndirectObject ;PageList []*PdfPage ;_acebg int ;_dfae *_ac .PdfObjectDictionary ;_fbgg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_cgaac *Permissions ;_gdda map[*PdfReader ]*PdfReader ;_ddfec []*PdfReader ;_edabf *modelManager ;_bacfb bool ;_cbdeg map[_ac .PdfObject ]struct{};_ddcc _cc .ReadSeeker ;_gegbf string ;_bgbdd bool ;_aafbde string ;
_bfaga *ReaderOpts ;_cccd bool ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fccc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abafb ,_bege :=_ac .GetNumbersAsFloat (objects );
if _bege !=nil {return nil ,_bege ;};return _fccc .ColorFromFloats (_abafb );};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ac .PdfObject ;IC _ac .PdfObject ;RO _ac .PdfObject ;OverlayText _ac .PdfObject ;Repeat _ac .PdfObject ;DA _ac .PdfObject ;Q _ac .PdfObject ;};func (_caa *PdfReader )newPdfActionSetOCGStateFromDict (_ceag *_ac .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_ceag .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_ceag .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bfee *PdfField )ToPdfObject ()_ac .PdfObject {_aabd :=_bfee ._fggde ;_efgd :=_aabd .PdfObject .(*_ac .PdfObjectDictionary );_baadg :=_ac .MakeArray ();for _ ,_gccg :=range _bfee .Kids {_baadg .Append (_gccg .ToPdfObject ());};for _ ,_abcc :=range _bfee .Annotations {if _abcc ._add !=_bfee ._fggde {_baadg .Append (_abcc .GetContext ().ToPdfObject ());
};};if _bfee .Parent !=nil {_efgd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfee .Parent .GetContainingPdfObject ());};if _baadg .Len ()> 0{_efgd .Set ("\u004b\u0069\u0064\u0073",_baadg );};_efgd .SetIfNotNil ("\u0046\u0054",_bfee .FT );_efgd .SetIfNotNil ("\u0054",_bfee .T );
_efgd .SetIfNotNil ("\u0054\u0055",_bfee .TU );_efgd .SetIfNotNil ("\u0054\u004d",_bfee .TM );_efgd .SetIfNotNil ("\u0046\u0066",_bfee .Ff );_efgd .SetIfNotNil ("\u0056",_bfee .V );_efgd .SetIfNotNil ("\u0044\u0056",_bfee .DV );_efgd .SetIfNotNil ("\u0041\u0041",_bfee .AA );
if _bfee .VariableText !=nil {_efgd .SetIfNotNil ("\u0044\u0041",_bfee .VariableText .DA );_efgd .SetIfNotNil ("\u0051",_bfee .VariableText .Q );_efgd .SetIfNotNil ("\u0044\u0053",_bfee .VariableText .DS );_efgd .SetIfNotNil ("\u0052\u0056",_bfee .VariableText .RV );
};return _aabd ;};

// IsFitWindow returns the value of the fitWindow flag.
func (_bagbe *ViewerPreferences )IsFitWindow ()bool {if _bagbe ._eaafb ==nil {return false ;};return *_bagbe ._eaafb ;};type fontFile struct{_ecgfb string ;_ddbgb string ;_bbfd _cd .SimpleEncoder ;};func _ccbc (_cagf _ac .PdfObject )(*PdfColorspaceCalGray ,error ){_cfb :=NewPdfColorspaceCalGray ();
if _feffa ,_eccg :=_cagf .(*_ac .PdfIndirectObject );_eccg {_cfb ._eefe =_feffa ;};_cagf =_ac .TraceToDirectObject (_cagf );_abgb ,_acef :=_cagf .(*_ac .PdfObjectArray );if !_acef {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _abgb .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cagf =_ac .TraceToDirectObject (_abgb .Get (0));_caeaa ,_acef :=_cagf .(*_ac .PdfObjectName );
if !_acef {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_caeaa !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_cagf =_ac .TraceToDirectObject (_abgb .Get (1));_gbff ,_acef :=_cagf .(*_ac .PdfObjectDictionary );if !_acef {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cagf =_gbff .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cagf =_ac .TraceToDirectObject (_cagf );_dffe ,_acef :=_cagf .(*_ac .PdfObjectArray );if !_acef {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _dffe .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dffdf ,_bfaff :=_dffe .GetAsFloat64Slice ();
if _bfaff !=nil {return nil ,_bfaff ;};_cfb .WhitePoint =_dffdf ;_cagf =_gbff .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cagf !=nil {_cagf =_ac .TraceToDirectObject (_cagf );_abcd ,_fecb :=_cagf .(*_ac .PdfObjectArray );if !_fecb {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _abcd .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_eaef ,_gce :=_abcd .GetAsFloat64Slice ();
if _gce !=nil {return nil ,_gce ;};_cfb .BlackPoint =_eaef ;};_cagf =_gbff .Get ("\u0047\u0061\u006dm\u0061");if _cagf !=nil {_cagf =_ac .TraceToDirectObject (_cagf );_ceee ,_ddfd :=_ac .GetNumberAsFloat (_cagf );if _ddfd !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_cfb .Gamma =_ceee ;};return _cfb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcfeg *EmbeddedFile )ToPdfObject ()_ac .PdfObject {_affee :=_ac .NewFlateEncoder ();_ggae ,_dagb :=_ac .MakeStream (_bcfeg .Content ,_affee );if _dagb !=nil {_da .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dagb );
return nil ;};_cfcde :=_ggae .PdfObjectDictionary ;_cfcde .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_cfcde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_agaae :=_ac .MakeDict ();_agaae .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_ac .MakeString (_bcfeg .Hash [:]));_agaae .Set ("\u0053\u0069\u007a\u0065",_ac .MakeInteger (int64 (len (_bcfeg .Content ))));_egebb :=_bcfeg .CreationTime ;if _egebb .IsZero (){_egebb =_dg .Now ();
};_dffaf :=_bcfeg .ModTime ;if _dffaf .IsZero (){_dffaf =_egebb ;};_eabd ,_dagb :=NewPdfDateFromTime (_egebb );if _dagb !=nil {_da .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dagb );
return nil ;};_bfccd ,_dagb :=NewPdfDateFromTime (_dffaf );if _dagb !=nil {_da .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dagb );
return nil ;};_agaae .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eabd .ToPdfObject ());_agaae .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bfccd .ToPdfObject ());_cfcde .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_agaae );
_ccede :=_ac .MakeDict ();_ccede .Set (*_ac .MakeName ("\u0046"),_ggae );return _ccede ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_dgfg :=NewPdfAnnotation ();_egf :=&PdfAnnotationSquare {};_egf .PdfAnnotation =_dgfg ;_egf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgfg .SetContext (_egf );return _egf ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aaff *PdfAppender )GetDSS ()(_fadc *DSS ){return _aaff ._fcg };

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_dbab *PdfWriter )GetPageIndirectObject (pageNum int )(*_ac .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_dbab ._afafc ){return nil ,_aec .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _dbab ._afafc [pageNum ],nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bdcfcf *PdfPage )AppendContentStream (contentStr string )error {_dadc ,_ffbbc :=_bdcfcf .GetContentStreams ();if _ffbbc !=nil {return _ffbbc ;};if len (_dadc )==0{_dadc =[]string {contentStr };return _bdcfcf .SetContentStreams (_dadc ,_ac .NewFlateEncoder ());
};var _dbdcf _ag .Buffer ;_dbdcf .WriteString (_dadc [len (_dadc )-1]);_dbdcf .WriteString ("\u000a");_dbdcf .WriteString (contentStr );_dadc [len (_dadc )-1]=_dbdcf .String ();return _bdcfcf .SetContentStreams (_dadc ,_ac .NewFlateEncoder ());};

// HasExtGState checks if ExtGState name is available.
func (_cgdc *PdfPage )HasExtGState (name _ac .PdfObjectName )bool {if _cgdc .Resources ==nil {return false ;};if _cgdc .Resources .ExtGState ==nil {return false ;};_gfdbf ,_cceff :=_ac .TraceToDirectObject (_cgdc .Resources .ExtGState ).(*_ac .PdfObjectDictionary );
if !_cceff {_da .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ac .TraceToDirectObject (_cgdc .Resources .ExtGState ));
return false ;};_agbaf :=_gfdbf .Get (name );_bbccc :=_agbaf !=nil ;return _bbccc ;};

// Clear clears the KValue.
func (_acccc *KValue )Clear (){_acccc ._eeafa =nil ;_acccc ._ebfa =nil ;_acccc ._acbde =nil };

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ac .PdfObject ;AN _ac .PdfObject ;OP _ac .PdfObject ;JS _ac .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_agdg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _agdg .Base ==nil {return nil ,_aec .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _agdg .Base .ColorToRGB (color );};

// GetContentStream returns the pattern cell's content stream
func (_eadee *PdfTilingPattern )GetContentStream ()([]byte ,error ){_dfabgb ,_ ,_affde :=_eadee .GetContentStreamWithEncoder ();return _dfabgb ,_affde ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_feag *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gcbd []float64 ;for _affda :=0;_affda < _feag .GetNumComponents ();_affda ++{_gcbd =append (_gcbd ,0.0,1.0);};return _gcbd ;};func (_dbga *PdfReader )newPdfAnnotationCircleFromDict (_badd *_ac .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_agcf :=PdfAnnotationCircle {};
_fgbf ,_baege :=_dbga .newPdfAnnotationMarkupFromDict (_badd );if _baege !=nil {return nil ,_baege ;};_agcf .PdfAnnotationMarkup =_fgbf ;_agcf .BS =_badd .Get ("\u0042\u0053");_agcf .IC =_badd .Get ("\u0049\u0043");_agcf .BE =_badd .Get ("\u0042\u0045");
_agcf .RD =_badd .Get ("\u0052\u0044");return &_agcf ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_ffcbab *PdfFont )ToPdfObject ()_ac .PdfObject {if _ffcbab ._bcae ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ac .MakeNull ();
};return _ffcbab ._bcae .ToPdfObject ();};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_adee *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgdg ,_caagg :=color .(*PdfColorCalRGB );if !_caagg {_da .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgb :=_cgdg .A ();_gcgb :=_cgdg .B ();_cdace :=_cgdg .C ();X :=_adee .Matrix [0]*_fe .Pow (_bgb ,_adee .Gamma [0])+_adee .Matrix [3]*_fe .Pow (_gcgb ,_adee .Gamma [1])+_adee .Matrix [6]*_fe .Pow (_cdace ,_adee .Gamma [2]);
Y :=_adee .Matrix [1]*_fe .Pow (_bgb ,_adee .Gamma [0])+_adee .Matrix [4]*_fe .Pow (_gcgb ,_adee .Gamma [1])+_adee .Matrix [7]*_fe .Pow (_cdace ,_adee .Gamma [2]);Z :=_adee .Matrix [2]*_fe .Pow (_bgb ,_adee .Gamma [0])+_adee .Matrix [5]*_fe .Pow (_gcgb ,_adee .Gamma [1])+_adee .Matrix [8]*_fe .Pow (_cdace ,_adee .Gamma [2]);
_bffb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bcfe :=-0.969256*X +1.875992*Y +0.041556*Z ;_dacd :=0.055648*X +-0.204043*Y +1.057311*Z ;_bffb =_fe .Min (_fe .Max (_bffb ,0),1.0);_bcfe =_fe .Min (_fe .Max (_bcfe ,0),1.0);_dacd =_fe .Min (_fe .Max (_dacd ,0),1.0);
return NewPdfColorDeviceRGB (_bffb ,_bcfe ,_dacd ),nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bdgc *PdfFieldButton )GetType ()ButtonType {_fcbgd :=ButtonTypeCheckbox ;if _bdgc .Ff !=nil {if (uint32 (*_bdgc .Ff )&FieldFlagPushbutton .Mask ())> 0{_fcbgd =ButtonTypePush ;}else if (uint32 (*_bdgc .Ff )&FieldFlagRadio .Mask ())> 0{_fcbgd =ButtonTypeRadio ;
};};return _fcbgd ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject converts date to a PDF string object.
func (_bggac *PdfDate )ToPdfObject ()_ac .PdfObject {_effgg :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bggac ._cbfdg ,_bggac ._dbfbe ,_bggac ._fafd ,_bggac ._aagfa ,_bggac ._gaeea ,_bggac ._fbaff ,_bggac ._ddfdc ,_bggac ._gfbbc ,_bggac ._eggcc );
return _ac .MakeString (_effgg );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcaga pdfFontType0 )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){if _bcaga .DescendantFont ==nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bcaga );
return _bd .CharMetrics {},false ;};return _bcaga .DescendantFont .GetRuneMetrics (r );};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ac .PdfObject ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ac .PdfObject ,error );};func _gddee (_abgg *_ac .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gcdd :=&PdfShadingPattern {};_ebbbbb :=_abgg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _ebbbbb ==nil {_da .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_feagge ,_dbbg :=_gdffe (_ebbbbb );if _dbbg !=nil {_da .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dbbg );
return nil ,_dbbg ;};_gcdd .Shading =_feagge ;if _ceeega :=_abgg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ceeega !=nil {_abgf ,_cacafd :=_ceeega .(*_ac .PdfObjectArray );if !_cacafd {_da .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceeega );
return nil ,_ac .ErrTypeError ;};_gcdd .Matrix =_abgf ;};if _dgabe :=_abgg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dgabe !=nil {_gcdd .ExtGState =_dgabe ;};return _gcdd ,nil ;};func (_fbgde *PdfWriter )checkPendingObjects (){for _gcfgc ,_gebcg :=range _fbgde ._bafge {if !_fbgde .hasObject (_gcfgc ){_da .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_gcfgc ,_gcfgc ,_gcfgc );
for _ ,_agabbf :=range _gebcg {for _ ,_edec :=range _agabbf .Keys (){_cdcbf :=_agabbf .Get (_edec );if _cdcbf ==_gcfgc {_da .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_agabbf .Set (_edec ,_ac .MakeNull ());break ;};};};};};};

// GetChildren returns the children of the K dictionary object.
func (_ebefb *KDict )GetChildren ()[]*KValue {return _ebefb ._ecge };

// ImageToRGB convert an indexed image to RGB.
func (_cgcc *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_cgcc .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_bgeeb :=_cf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._geag ,img ._bacca );_cfefc :=_bdab .NewReader (img .getBase ());_agega :=_bdab .NewWriter (_bgeeb );var (_fgda uint32 ;_cbcd int ;_gfdg error ;);for {_fgda ,_gfdg =_cfefc .ReadSample ();
if _gfdg ==_cc .EOF {break ;}else if _gfdg !=nil {return img ,_gfdg ;};_cbcd =int (_fgda );_da .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cbcd ,N ,len (_cgcc ._ccff ));
if (_cbcd +1)*N > len (_cgcc ._ccff ){_cbcd =len (_cgcc ._ccff )/N -1;_da .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cbcd );if _cbcd < 0{_da .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ebccf :=_cbcd *N ;_ebccf < (_cbcd +1)*N ;_ebccf ++{if _gfdg =_agega .WriteSample (uint32 (_cgcc ._ccff [_ebccf ]));_gfdg !=nil {return img ,_gfdg ;};};};return _cgcc .Base .ImageToRGB (_bgage (&_bgeeb ));};

// SetName sets the `Name` field of the signature.
func (_afbba *PdfSignature )SetName (name string ){_afbba .Name =_ac .MakeEncodedString (name ,true )};

// Encoder returns the font's text encoder.
func (_dgcf pdfFontType0 )Encoder ()_cd .TextEncoder {return _dgcf ._fbaeda };

// SetPrintScaling sets the value of the printScaling.
func (_begedb *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_begedb ._fdgfg =printScaling ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_bffea *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgab ,_caba :=color .(*PdfColorDeviceGray );if !_caba {_da .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bgab ),float64 (*_bgab ),float64 (*_bgab )),nil ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _ac .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _ac .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_ac .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _ac .PdfObject ;

// The children of this structure element.
K _ac .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _ac .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _ac .PdfObject ;

// The current revision number of this structure element
R *_ac .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_ac .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_ac .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_ac .PdfObjectString ;

// The expanded form of an abbreviation.
E *_ac .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_ac .PdfObjectString ;_ecge []*KValue ;_dbfec int64 ;_dgef *PdfRectangle ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gcdgg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _aedcg []*PdfOutlineTreeNode ;var _bdafe []string ;var _dfeeb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_dfeeb =func (_fdeabb *PdfOutlineTreeNode ,_gfccd *[]*PdfOutlineTreeNode ,_bbffb *[]string ,_gfcfa int ){if _fdeabb ==nil {return ;
};if _fdeabb ._fbfca ==nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_fbcf ,_ffgecc :=_fdeabb ._fbfca .(*PdfOutlineItem );if _ffgecc {*_gfccd =append (*_gfccd ,&_fbcf .PdfOutlineTreeNode );
_gebbc :=_fgg .Repeat ("\u0020",_gfcfa *2)+_fbcf .Title .Decoded ();*_bbffb =append (*_bbffb ,_gebbc );};if _fdeabb .First !=nil {_bdabb :=_fgg .Repeat ("\u0020",_gfcfa *2)+"\u002b";*_bbffb =append (*_bbffb ,_bdabb );_dfeeb (_fdeabb .First ,_gfccd ,_bbffb ,_gfcfa +1);
};if _ffgecc &&_fbcf .Next !=nil {_dfeeb (_fbcf .Next ,_gfccd ,_bbffb ,_gfcfa );};};_dfeeb (_gcdgg ._fbgg ,&_aedcg ,&_bdafe ,0);return _aedcg ,_bdafe ,nil ;};func _cabe (_fgac _ac .PdfObject )(map[_cd .CharCode ]float64 ,error ){if _fgac ==nil {return nil ,nil ;
};_caead ,_fcebd :=_ac .GetArray (_fgac );if !_fcebd {return nil ,nil ;};_aggga :=map[_cd .CharCode ]float64 {};_cdda :=_caead .Len ();for _ecbg :=0;_ecbg < _cdda -1;_ecbg ++{_dcggg :=_ac .TraceToDirectObject (_caead .Get (_ecbg ));_ggfba ,_bbgd :=_ac .GetIntVal (_dcggg );
if !_bbgd {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ecbg ,_dcggg );};_ecbg ++;if _ecbg > _cdda -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_caead );
};_aaefg :=_ac .TraceToDirectObject (_caead .Get (_ecbg ));switch _aaefg .(type ){case *_ac .PdfObjectArray :_bfbcb ,_ :=_ac .GetArray (_aaefg );if _efadd ,_eegf :=_bfbcb .ToFloat64Array ();_eegf ==nil {for _cccg :=0;_cccg < len (_efadd );_cccg ++{_aggga [_cd .CharCode (_ggfba +_cccg )]=_efadd [_cccg ];
};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ecbg ,_aaefg );};case *_ac .PdfObjectInteger :_aafgc ,_fecc :=_ac .GetIntVal (_aaefg );
if !_fecc {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ecbg ,_aaefg );};_ecbg ++;if _ecbg > _cdda -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_caead );
};_efabc :=_caead .Get (_ecbg );_dagcg ,_fbfcc :=_ac .GetNumberAsFloat (_efabc );if _fbfcc !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ecbg ,_efabc );
};for _ffcdg :=_ggfba ;_ffcdg <=_aafgc ;_ffcdg ++{_aggga [_cd .CharCode (_ffcdg )]=_dagcg ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ecbg ,_aaefg );
};};return _aggga ,nil ;};var (_adga _gc .Mutex ;_gcgga ="";_bggd _dg .Time ;_edabd ="";_cddca ="";_dgddd _dg .Time ;_bedeg ="";_aeaad ="";_edgbg ="";);

// GetContainingPdfObject implements interface PdfModel.
func (_efgde *PdfSignatureReference )GetContainingPdfObject ()_ac .PdfObject {return _efgde ._egaae };

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bgbf *PdfField )GetContext ()PdfModel {return _bgbf ._ffbgg };

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gdfbgg *PdfRectangle )Normalize (){if _gdfbgg .Llx > _gdfbgg .Urx {_gdfbgg .Llx ,_gdfbgg .Urx =_gdfbgg .Urx ,_gdfbgg .Llx ;};if _gdfbgg .Lly > _gdfbgg .Ury {_gdfbgg .Lly ,_gdfbgg .Ury =_gdfbgg .Ury ,_gdfbgg .Lly ;};};func _bfab (_gaada *PdfField ,_ffdcca _ac .PdfObject ){for _ ,_eega :=range _gaada .Annotations {_eega .AS =_ffdcca ;
_eega .ToPdfObject ();};};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cc .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dcdgbg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _cgac (rs ,opts ,true ,_dcdgbg );
};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ac .PdfObjectInteger ;BitsPerComponent *_ac .PdfObjectInteger ;BitsPerFlag *_ac .PdfObjectInteger ;Decode *_ac .PdfObjectArray ;Function []PdfFunction ;};func (_bdcfc *PdfFunctionType0 )processSamples ()error {_dgafe :=_bdab .ResampleBytes (_bdcfc ._cdagg ,_bdcfc .BitsPerSample );
_bdcfc ._cgada =_dgafe ;return nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_adga .Lock ();defer _adga .Unlock ();_gcgga =author };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gccab ,_cgaf :=NewStandard14Font (basefont );if _cgaf !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gccab ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gbcb :=&PdfPageResourcesColorspaces {};_gbcb .Names =[]string {};_gbcb .Colorspaces =map[string ]PdfColorspace {};_gbcb ._acfbf =&_ac .PdfIndirectObject {};return _gbcb ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bfff *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ggaed *PdfReader )GetObjectNums ()[]int {return _ggaed ._ecebe .GetObjectNums ()};func (_ffcba *DSS )add (_gedga *[]*_ac .PdfObjectStream ,_beaa map[string ]*_ac .PdfObjectStream ,_fbdea [][]byte )([]*_ac .PdfObjectStream ,error ){_ggeg :=make ([]*_ac .PdfObjectStream ,0,len (_fbdea ));
for _ ,_fafg :=range _fbdea {_agaf ,_fggba :=_daabb (_fafg );if _fggba !=nil {return nil ,_fggba ;};_aegf ,_ccgbbf :=_beaa [string (_agaf )];if !_ccgbbf {_aegf ,_fggba =_ac .MakeStream (_fafg ,_ac .NewRawEncoder ());if _fggba !=nil {return nil ,_fggba ;
};_beaa [string (_agaf )]=_aegf ;*_gedga =append (*_gedga ,_aegf );};_ggeg =append (_ggeg ,_aegf );};return _ggeg ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_cfege *PdfReader )GetOutlines ()(*Outline ,error ){if _cfege ==nil {return nil ,_aec .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_edcgd :=_cfege .GetOutlineTree ();if _edcgd ==nil {return nil ,_aec .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _edage func (_bfae *PdfOutlineTreeNode ,_eccc *[]*OutlineItem );_edage =func (_dadfe *PdfOutlineTreeNode ,_cgae *[]*OutlineItem ){if _dadfe ==nil {return ;};if _dadfe ._fbfca ==nil {_da .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _gffagg *OutlineItem ;if _bccac ,_gdggd :=_dadfe ._fbfca .(*PdfOutlineItem );_gdggd {_dcagc :=_bccac .Dest ;if (_dcagc ==nil ||_ac .IsNullObject (_dcagc ))&&_bccac .A !=nil {if _gccb ,_gbafg :=_ac .GetDict (_bccac .A );_gbafg {if _eafa ,_faccg :=_ac .GetArray (_gccb .Get ("\u0044"));
_faccg {_dcagc =_eafa ;}else {_debc ,_gaeeg :=_ac .GetString (_gccb .Get ("\u0044"));if !_gaeeg {return ;};_cbdac ,_gaeeg :=_cfege ._dfae .Get ("\u004e\u0061\u006de\u0073").(*_ac .PdfObjectReference );if !_gaeeg {return ;};_eddegd ,_gdce :=_cfege ._ecebe .LookupByReference (*_cbdac );
if _gdce !=nil {_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_gdce .Error ());
return ;};_acfa ,_gaeeg :=_eddegd .(*_ac .PdfIndirectObject );if !_gaeeg {return ;};_eabea :=map[_ac .PdfObject ]struct{}{};_gdce =_cfege .buildNameNodes (_acfa ,_eabea );if _gdce !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_gdce .Error ());
return ;};for _bebc :=range _eabea {_cdcde ,_efdff :=_ac .GetDict (_bebc );if !_efdff {continue ;};_defcg ,_efdff :=_ac .GetArray (_cdcde .Get ("\u004e\u0061\u006de\u0073"));if !_efdff {continue ;};for _gadgbd ,_dedee :=range _defcg .Elements (){switch _dedee .(type ){case *_ac .PdfObjectString :if _dedee .String ()==_debc .String (){if _adcd :=_defcg .Get (_gadgbd +1);
_adcd !=nil {if _abeab ,_feab :=_ac .GetDict (_adcd );_feab {_dcagc =_abeab .Get ("\u0044");break ;};};};};};};};};};var _bfabc OutlineDest ;if _dcagc !=nil &&!_ac .IsNullObject (_dcagc ){if _aceab ,_dacda :=_cgcb (_dcagc ,_cfege );_dacda ==nil {_bfabc =*_aceab ;
}else {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dcagc ,_dacda );
};};_gffagg =NewOutlineItem (_bccac .Title .Decoded (),_bfabc );*_cgae =append (*_cgae ,_gffagg );if _bccac .Next !=nil {_edage (_bccac .Next ,_cgae );};};if _dadfe .First !=nil {if _gffagg !=nil {_cgae =&_gffagg .Entries ;};_edage (_dadfe .First ,_cgae );
};};_fcgb :=NewOutline ();_edage (_edcgd ,&_fcgb .Entries );return _fcgb ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bgbed *Outline )Insert (index uint ,item *OutlineItem ){_dacg :=uint (len (_bgbed .Entries ));if index > _dacg {index =_dacg ;};_bgbed .Entries =append (_bgbed .Entries [:index ],append ([]*OutlineItem {item },_bgbed .Entries [index :]...)...);};


// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgecd *PdfShadingType6 )ToPdfObject ()_ac .PdfObject {_dgecd .PdfShading .ToPdfObject ();_gcbdf ,_deacc :=_dgecd .getShadingDict ();if _deacc !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dgecd .BitsPerCoordinate !=nil {_gcbdf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dgecd .BitsPerCoordinate );};if _dgecd .BitsPerComponent !=nil {_gcbdf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgecd .BitsPerComponent );
};if _dgecd .BitsPerFlag !=nil {_gcbdf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dgecd .BitsPerFlag );};if _dgecd .Decode !=nil {_gcbdf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgecd .Decode );};if _dgecd .Function !=nil {if len (_dgecd .Function )==1{_gcbdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgecd .Function [0].ToPdfObject ());
}else {_ecbea :=_ac .MakeArray ();for _ ,_ddccg :=range _dgecd .Function {_ecbea .Append (_ddccg .ToPdfObject ());};_gcbdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecbea );};};return _dgecd ._affg ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_egafe *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eacgd :=_egafe .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eacgd )> 0;_defbf :=_ac .NewFlateEncoder ();_fdebe :=_ac .MakeArray ();if wrapContents {_gebe ,_gffac :=_ac .MakeStream ([]byte ("\u0071\u000a"),_defbf );
if _gffac !=nil {return _gffac ;};_fdebe .Append (_gebe );};_fdebe .Append (_eacgd ...);if wrapContents {_dbda ,_gdfc :=_ac .MakeStream ([]byte ("\u000a\u0051\u000a"),_defbf );if _gdfc !=nil {return _gdfc ;};_fdebe .Append (_dbda );};_dcgfa ,_efbd :=_ac .MakeStream (cs ,_defbf );
if _efbd !=nil {return _efbd ;};_fdebe .Append (_dcgfa );_egafe .Contents =_fdebe ;return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ebaea *PdfReader )GetNamedDestinations ()(_ac .PdfObject ,error ){_accd :=_ac .ResolveReference (_ebaea ._dfae .Get ("\u0044\u0065\u0073t\u0073"));if _accd ==nil {return nil ,nil ;};if !_ebaea ._bacfb {_cbfca :=_ebaea .traverseObjectData (_accd );
if _cbfca !=nil {return nil ,_cbfca ;};};return _accd ,nil ;};func (_gadg *PdfReader )newPdfAnnotationMarkupFromDict (_eee *_ac .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bcb :=&PdfAnnotationMarkup {};if _caaa :=_eee .Get ("\u0054");_caaa !=nil {_bcb .T =_caaa ;
};if _bcdd :=_eee .Get ("\u0050\u006f\u0070u\u0070");_bcdd !=nil {_cge ,_fead :=_bcdd .(*_ac .PdfIndirectObject );if !_fead {if _ ,_dce :=_bcdd .(*_ac .PdfObjectNull );!_dce {return nil ,_aec .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_ebcb ,_bgcd :=_gadg .newPdfAnnotationFromIndirectObject (_cge );if _bgcd !=nil {return nil ,_bgcd ;};if _ebcb !=nil {_bea ,_faae :=_ebcb ._dbaec .(*PdfAnnotationPopup );if !_faae {return nil ,_aec .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bcb .Popup =_bea ;};};};if _geeg :=_eee .Get ("\u0043\u0041");_geeg !=nil {_bcb .CA =_geeg ;};if _ccc :=_eee .Get ("\u0052\u0043");_ccc !=nil {_bcb .RC =_ccc ;};if _edbe :=_eee .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_edbe !=nil {_bcb .CreationDate =_edbe ;};if _acd :=_eee .Get ("\u0049\u0052\u0054");_acd !=nil {_bcb .IRT =_acd ;};if _gbde :=_eee .Get ("\u0053\u0075\u0062\u006a");_gbde !=nil {_bcb .Subj =_gbde ;};if _afdd :=_eee .Get ("\u0052\u0054");_afdd !=nil {_bcb .RT =_afdd ;
};if _edcb :=_eee .Get ("\u0049\u0054");_edcb !=nil {_bcb .IT =_edcb ;};if _dgca :=_eee .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_dgca !=nil {_bcb .ExData =_dgca ;};return _bcb ,nil ;};

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _ee .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// R returns the value of the red component of the color.
func (_egdf *PdfColorDeviceRGB )R ()float64 {return _egdf [0]};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ecbce *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ecbce .updateObjectsDeep (dss .ToPdfObject (),nil );};_ecbce ._fcg =dss ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_abacf []_ac .PdfObject )([]_ac .PdfObject ,error );};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_adga .Lock ();defer _adga .Unlock ();_edabd =creator };

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ac .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ac .PdfObject ;Contents _ac .PdfObject ;
Rotate *int64 ;Group _ac .PdfObject ;Thumb _ac .PdfObject ;B _ac .PdfObject ;Dur _ac .PdfObject ;Trans _ac .PdfObject ;AA _ac .PdfObject ;Metadata _ac .PdfObject ;PieceInfo _ac .PdfObject ;StructParents _ac .PdfObject ;ID _ac .PdfObject ;PZ _ac .PdfObject ;
SeparationInfo _ac .PdfObject ;Tabs _ac .PdfObject ;TemplateInstantiated _ac .PdfObject ;PresSteps _ac .PdfObject ;UserUnit _ac .PdfObject ;VP _ac .PdfObject ;Annots _ac .PdfObject ;_adba []*PdfAnnotation ;_gbbf *_ac .PdfObjectDictionary ;_gbdca *_ac .PdfIndirectObject ;
_fefgc _ac .PdfObjectDictionary ;_eegg *PdfReader ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_eaebf *PdfFieldButton )IsPush ()bool {return _eaebf .GetType ()==ButtonTypePush };var _befge =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func _aafag (_gddc *_ac .PdfObjectDictionary ){_cada ,_cdbb :=_ac .GetArray (_gddc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_gggfd ,_eabg :=_ac .GetIntVal (_gddc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_gage ,_edfg :=_ac .GetIntVal (_gddc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));
if _cdbb &&_eabg &&_edfg {_aaac :=_cada .Len ();if _aaac !=_gage -_gggfd +1{_da .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_aaac ,_gage );
_agad :=_ac .PdfObjectInteger (_gggfd +_aaac -1);_gddc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_agad );};};};func _fbbada (_dfbff *XObjectForm )(*PdfRectangle ,bool ,error ){if _bgbe ,_ddfade :=_dfbff .BBox .(*_ac .PdfObjectArray );_ddfade {_bgfd ,_gafa :=NewPdfRectangle (*_bgbe );
if _gafa !=nil {return nil ,false ,_gafa ;};if _bcdg ,_afcde :=_dfbff .Matrix .(*_ac .PdfObjectArray );_afcde {_gaadc ,_adfdd :=_bcdg .ToFloat64Array ();if _adfdd !=nil {return nil ,false ,_adfdd ;};_gegd :=_bda .IdentityMatrix ();if len (_gaadc )==6{_gegd =_bda .NewMatrix (_gaadc [0],_gaadc [1],_gaadc [2],_gaadc [3],_gaadc [4],_gaadc [5]);
};_bgfd .Transform (_gegd );return _bgfd ,true ,nil ;};return _bgfd ,false ,nil ;};return nil ,false ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ac .PdfObject ;Name _ac .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ac .PdfObject ;Flags _ac .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fcdbe *_ac .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ac .PdfObjectName ;Filter *_ac .PdfObjectName ;SubFilter *_ac .PdfObjectName ;Contents *_ac .PdfObjectString ;Cert _ac .PdfObject ;ByteRange *_ac .PdfObjectArray ;Reference *_ac .PdfObjectArray ;Changes *_ac .PdfObjectArray ;Name *_ac .PdfObjectString ;
M *_ac .PdfObjectString ;Location *_ac .PdfObjectString ;Reason *_ac .PdfObjectString ;ContactInfo *_ac .PdfObjectString ;R *_ac .PdfObjectInteger ;V *_ac .PdfObjectInteger ;PropBuild *_ac .PdfObjectDictionary ;PropAuthTime *_ac .PdfObjectInteger ;PropAuthType *_ac .PdfObjectName ;
};func (_cafdb *PdfWriter )updateObjectNumbers (){_ddbcf :=_cafdb .ObjNumOffset ;_faada :=0;for _ ,_dbeffb :=range _cafdb ._beggg {_aedae :=int64 (_faada +1+_ddbcf );_fdbf :=true ;if _cafdb ._abbg {if _cbaaa ,_dfedg :=_cafdb ._fdgef [_dbeffb ];_dfedg {_aedae =_cbaaa ;
_fdbf =false ;};};switch _ffcbf :=_dbeffb .(type ){case *_ac .PdfIndirectObject :_ffcbf .ObjectNumber =_aedae ;_ffcbf .GenerationNumber =0;case *_ac .PdfObjectStream :_ffcbf .ObjectNumber =_aedae ;_ffcbf .GenerationNumber =0;case *_ac .PdfObjectStreams :_ffcbf .ObjectNumber =_aedae ;
_ffcbf .GenerationNumber =0;case *_ac .PdfObjectReference :_ffcbf .ObjectNumber =_aedae ;_ffcbf .GenerationNumber =0;case *_ac .PdfObjectDictionary ,*_ac .PdfObjectString :default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ffcbf );
continue ;};if _fdbf {_faada ++;};};_bfefdb :=func (_cgcef _ac .PdfObject )int64 {switch _dcbaf :=_cgcef .(type ){case *_ac .PdfIndirectObject :return _dcbaf .ObjectNumber ;case *_ac .PdfObjectStream :return _dcbaf .ObjectNumber ;case *_ac .PdfObjectStreams :return _dcbaf .ObjectNumber ;
case *_ac .PdfObjectReference :return _dcbaf .ObjectNumber ;};return 0;};_ga .SliceStable (_cafdb ._beggg ,func (_cdcdf ,_fbfdb int )bool {return _bfefdb (_cafdb ._beggg [_cdcdf ])< _bfefdb (_cafdb ._beggg [_fbfdb ])});};func (_gfeg fontCommon )fontFlags ()int {if _gfeg ._gdgc ==nil {return 0;
};return _gfeg ._gdgc ._abceg ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_gdabg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gdabg ._bcae .getFontDescriptor (),nil ;};

// ToPdfObject returns a stream object.
func (_agcddd *XObjectImage )ToPdfObject ()_ac .PdfObject {_fecdd :=_agcddd ._bagcg ;if _agcddd ._gabaa {return _fecdd ;};_fffgg :=_fecdd .PdfObjectDictionary ;if _agcddd .Filter !=nil {_fffgg =_agcddd .Filter .MakeStreamDict ();_fecdd .PdfObjectDictionary =_fffgg ;
};_fffgg .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_fffgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0049\u006d\u0061g\u0065"));_fffgg .Set ("\u0057\u0069\u0064t\u0068",_ac .MakeInteger (*(_agcddd .Width )));
_fffgg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ac .MakeInteger (*(_agcddd .Height )));if _agcddd .BitsPerComponent !=nil {_fffgg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ac .MakeInteger (*(_agcddd .BitsPerComponent )));
};if _agcddd .ColorSpace !=nil {_fffgg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_agcddd .ColorSpace .ToPdfObject ());};_fffgg .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_agcddd .Intent );_fffgg .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_agcddd .ImageMask );
_fffgg .SetIfNotNil ("\u004d\u0061\u0073\u006b",_agcddd .Mask );_gbafd :=_fffgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _agcddd .Decode ==nil &&_gbafd {_fffgg .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _agcddd .Decode !=nil {_fffgg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_agcddd .Decode );
};_fffgg .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_agcddd .Interpolate );_fffgg .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_agcddd .Alternatives );_fffgg .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_agcddd .SMask );
_fffgg .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_agcddd .SMaskInData );_fffgg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_agcddd .Matte );_fffgg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agcddd .Name );_fffgg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_agcddd .StructParent );
_fffgg .SetIfNotNil ("\u0049\u0044",_agcddd .ID );_fffgg .SetIfNotNil ("\u004f\u0050\u0049",_agcddd .OPI );_fffgg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_agcddd .Metadata );_fffgg .SetIfNotNil ("\u004f\u0043",_agcddd .OC );_fffgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_agcddd .Stream ))));
_fecdd .Stream =_agcddd .Stream ;_agcddd ._gabaa =true ;return _fecdd ;};type pdfSignDictionary struct{*_ac .PdfObjectDictionary ;_ecfda *SignatureHandler ;_dagbgc *PdfSignature ;_gfed int64 ;_fefdg int ;_bbegd int ;_dedbg int ;_fccdb int ;};

// Encoder returns the font's text encoder.
func (_ebee pdfFontType3 )Encoder ()_cd .TextEncoder {return _ebee ._gabg };func _dcf (_dbae _ac .PdfObject )(*PdfFilespec ,error ){if _dbae ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dbae );};

// GetXObjectByName gets XObject by name.
func (_cgfbd *PdfPage )GetXObjectByName (name _ac .PdfObjectName )(_ac .PdfObject ,bool ){_egdc ,_bfgbc :=_cgfbd .Resources .XObject .(*_ac .PdfObjectDictionary );if !_bfgbc {return nil ,false ;};if _cfbf :=_egdc .Get (name );_cfbf !=nil {return _cfbf ,true ;
};return nil ,false ;};var (ErrRequiredAttributeMissing =_aec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_baega =_aec .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_aec .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_aec .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_aa .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ac .ErrNotSupported );
ErrType1CFontNotSupported =_aa .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ac .ErrNotSupported );
ErrType3FontNotSupported =_aa .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ac .ErrNotSupported );
ErrTTCmapNotSupported =_aa .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ac .ErrNotSupported );
ErrSignNotEnoughSpace =_aa .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_aa .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_bebee *PdfPage )setContainer (_agef *_ac .PdfIndirectObject ){_agef .PdfObject =_bebee ._gbbf ;
_bebee ._gbdca =_agef ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_edaeg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_da .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aafbd :=[]float64 {0.0};if _edaeg .C0 !=nil {_aafbd =_edaeg .C0 ;};_cbebf :=[]float64 {1.0};if _edaeg .C1 !=nil {_cbebf =_edaeg .C1 ;};var _fdggg []float64 ;for _fgeeb :=0;_fgeeb < len (_aafbd );_fgeeb ++{_cefgd :=_aafbd [_fgeeb ]+_fe .Pow (x [0],_edaeg .N )*(_cbebf [_fgeeb ]-_aafbd [_fgeeb ]);
_fdggg =append (_fdggg ,_cefgd );};return _fdggg ,nil ;};func _cagb (_bggad _ac .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fcafc :=&PdfPageResourcesColorspaces {};if _egbeb ,_afcfd :=_bggad .(*_ac .PdfIndirectObject );_afcfd {_fcafc ._acfbf =_egbeb ;
_bggad =_egbeb .PdfObject ;};_aegaff ,_cacbd :=_ac .GetDict (_bggad );if !_cacbd {return nil ,_aec .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fcafc .Names =[]string {};
_fcafc .Colorspaces =map[string ]PdfColorspace {};for _ ,_bbefg :=range _aegaff .Keys (){_bfge :=_aegaff .Get (_bbefg );_fcafc .Names =append (_fcafc .Names ,string (_bbefg ));_fdfb ,_cggfd :=NewPdfColorspaceFromPdfObject (_bfge );if _cggfd !=nil {return nil ,_cggfd ;
};_fcafc .Colorspaces [string (_bbefg )]=_fdfb ;};return _fcafc ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eedd *PdfPage )error ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_afbf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_afbf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_afbf ._bbcc =acroForm ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_egef *PdfPage )SetContentStreams (cStreams []string ,encoder _ac .StreamEncoder )error {if len (cStreams )==0{_egef .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ac .NewRawEncoder ();};var _bgegc []*_ac .PdfObjectStream ;for _ ,_edbaa :=range cStreams {_cggag :=&_ac .PdfObjectStream {};
_ccagb :=encoder .MakeStreamDict ();_ddabg ,_dagccf :=encoder .EncodeBytes ([]byte (_edbaa ));if _dagccf !=nil {return _dagccf ;};_ccagb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_ddabg ))));_cggag .PdfObjectDictionary =_ccagb ;
_cggag .Stream =_ddabg ;_bgegc =append (_bgegc ,_cggag );};if len (_bgegc )==1{_egef .Contents =_bgegc [0];}else {_ggbdba :=_ac .MakeArray ();for _ ,_geaef :=range _bgegc {_ggbdba .Append (_geaef );};_egef .Contents =_ggbdba ;};return nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_aab :=NewPdfAnnotation ();_gbgb :=&PdfAnnotationPolyLine {};_gbgb .PdfAnnotation =_aab ;_gbgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aab .SetContext (_gbgb );return _gbgb ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_bfbff :=&PdfOutline {_baedd :_ac .MakeIndirectObject (_ac .MakeDict ())};_bfbff ._fbfca =_bfbff ;return _bfbff ;};func (_ecafg *PdfReader )flattenFieldsWithOpts (_agab bool ,_fcgg FieldAppearanceGenerator ,_ffaf *FieldFlattenOpts )error {if _ffaf ==nil {_ffaf =&FieldFlattenOpts {};
};var _gbfb bool ;_eadeg :=map[*PdfAnnotation ]bool {};{var _bdbc []*PdfField ;_efdb :=_ecafg .AcroForm ;if _efdb !=nil {if _ffaf .FilterFunc !=nil {_bdbc =_efdb .filteredFields (_ffaf .FilterFunc ,true );_gbfb =_efdb .Fields !=nil &&len (*_efdb .Fields )> 0;
}else {_bdbc =_efdb .AllFields ();};};for _ ,_deea :=range _bdbc {if len (_deea .Annotations )< 1{_da .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_deea .PartialName ());
for _egde ,_gbad :=range _deea .Kids {for _ ,_dbdc :=range _gbad .Annotations {_eadeg [_dbdc .PdfAnnotation ]=_deea .V !=nil ;if _gbad .V ==nil {_gbad .V =_deea .V ;};if _gbad .T ==nil {_gbad .T =_ac .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_deea .PartialName (),_egde ));
};if _fcgg !=nil {_cdeaa ,_eddd :=_fcgg .GenerateAppearanceDict (_efdb ,_gbad ,_dbdc );if _eddd !=nil {return _eddd ;};_dbdc .AP =_cdeaa ;};};};};for _ ,_dffb :=range _deea .Annotations {_eadeg [_dffb .PdfAnnotation ]=_deea .V !=nil ;if _fcgg !=nil {_bfcd ,_eggfd :=_fcgg .GenerateAppearanceDict (_efdb ,_deea ,_dffb );
if _eggfd !=nil {return _eggfd ;};_dffb .AP =_bfcd ;};};};};if _agab {for _ ,_cged :=range _ecafg .PageList {_gbge ,_afegc :=_cged .GetAnnotations ();if _afegc !=nil {return _afegc ;};for _ ,_facc :=range _gbge {_eadeg [_facc ]=true ;};};};for _ ,_gacf :=range _ecafg .PageList {_ccgbda :=_gacf .flattenFieldsWithOpts (_fcgg ,_ffaf ,_eadeg );
if _ccgbda !=nil {return _ccgbda ;};};if !_gbfb {_ecafg .AcroForm =nil ;};return nil ;};func _gdffe (_ebfgc _ac .PdfObject )(*PdfShading ,error ){_bbgdgf :=&PdfShading {};var _fgebbe *_ac .PdfObjectDictionary ;if _gdgaa ,_dgfgd :=_ac .GetIndirect (_ebfgc );
_dgfgd {_bbgdgf ._affg =_gdgaa ;_ccaeg ,_dgfgb :=_gdgaa .PdfObject .(*_ac .PdfObjectDictionary );if !_dgfgb {_da .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_ac .ErrTypeError ;};_fgebbe =_ccaeg ;}else if _aebb ,_cbbed :=_ac .GetStream (_ebfgc );_cbbed {_bbgdgf ._affg =_aebb ;_fgebbe =_aebb .PdfObjectDictionary ;}else if _cdcccd ,_geeb :=_ac .GetDict (_ebfgc );_geeb {_bbgdgf ._affg =_cdcccd ;_fgebbe =_cdcccd ;
}else {_da .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ebfgc );return nil ,_ac .ErrTypeError ;};if _fgebbe ==nil {_da .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_aec .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ebfgc =_fgebbe .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ebfgc ==nil {_da .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebfgc =_ac .TraceToDirectObject (_ebfgc );_adfdb ,_eaeag :=_ebfgc .(*_ac .PdfObjectInteger );if !_eaeag {_da .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ebfgc );
return nil ,_ac .ErrTypeError ;};if *_adfdb < 1||*_adfdb > 7{_da .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_adfdb );
return nil ,_ac .ErrTypeError ;};_bbgdgf .ShadingType =_adfdb ;_ebfgc =_fgebbe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ebfgc ==nil {_da .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eaaac ,_cadfae :=NewPdfColorspaceFromPdfObject (_ebfgc );if _cadfae !=nil {_da .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cadfae );
return nil ,_cadfae ;};_bbgdgf .ColorSpace =_eaaac ;_ebfgc =_fgebbe .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ebfgc !=nil {_ebfgc =_ac .TraceToDirectObject (_ebfgc );_cefcc ,_dbdgg :=_ebfgc .(*_ac .PdfObjectArray );if !_dbdgg {_da .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebfgc );
return nil ,_ac .ErrTypeError ;};_bbgdgf .Background =_cefcc ;};_ebfgc =_fgebbe .Get ("\u0042\u0042\u006f\u0078");if _ebfgc !=nil {_ebfgc =_ac .TraceToDirectObject (_ebfgc );_edbga ,_agfe :=_ebfgc .(*_ac .PdfObjectArray );if !_agfe {_da .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebfgc );
return nil ,_ac .ErrTypeError ;};_dbaeaf ,_cdaf :=NewPdfRectangle (*_edbga );if _cdaf !=nil {_da .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cdaf );return nil ,_cdaf ;};_bbgdgf .BBox =_dbaeaf ;};_ebfgc =_fgebbe .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ebfgc !=nil {_ebfgc =_ac .TraceToDirectObject (_ebfgc );_aeff ,_gadfca :=_ebfgc .(*_ac .PdfObjectBool );if !_gadfca {_da .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebfgc );
return nil ,_ac .ErrTypeError ;};_bbgdgf .AntiAlias =_aeff ;};switch *_adfdb {case 1:_ccfa ,_decaf :=_cefce (_fgebbe );if _decaf !=nil {return nil ,_decaf ;};_ccfa .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_ccfa ;return _bbgdgf ,nil ;case 2:_fagc ,_aeedb :=_bbegb (_fgebbe );
if _aeedb !=nil {return nil ,_aeedb ;};_fagc .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_fagc ;return _bbgdgf ,nil ;case 3:_eead ,_ffae :=_afdgf (_fgebbe );if _ffae !=nil {return nil ,_ffae ;};_eead .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_eead ;return _bbgdgf ,nil ;
case 4:_afcaac ,_bbgcb :=_ecdcc (_fgebbe );if _bbgcb !=nil {return nil ,_bbgcb ;};_afcaac .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_afcaac ;return _bbgdgf ,nil ;case 5:_dbbfb ,_bcdba :=_gfacc (_fgebbe );if _bcdba !=nil {return nil ,_bcdba ;};_dbbfb .PdfShading =_bbgdgf ;
_bbgdgf ._gfcfg =_dbbfb ;return _bbgdgf ,nil ;case 6:_beceb ,_cgaeb :=_edbab (_fgebbe );if _cgaeb !=nil {return nil ,_cgaeb ;};_beceb .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_beceb ;return _bbgdgf ,nil ;case 7:_gdffg ,_bbfdg :=_gabbg (_fgebbe );if _bbfdg !=nil {return nil ,_bbfdg ;
};_gdffg .PdfShading =_bbgdgf ;_bbgdgf ._gfcfg =_gdffg ;return _bbgdgf ,nil ;};return nil ,_aec .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// GetDescent returns the Descent of the font `descriptor`.
func (_dcdg *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ac .GetNumberAsFloat (_dcdg .Descent );};func (_cgedd *PdfWriter )copyObject (_gdeeae _ac .PdfObject ,_febgec map[_ac .PdfObject ]_ac .PdfObject ,_edcd map[_ac .PdfObject ]struct{},_gfgea bool )_ac .PdfObject {_eedabb :=!_cgedd ._abbg &&_edcd !=nil ;
if _gccff ,_bcccbc :=_febgec [_gdeeae ];_bcccbc {if _eedabb &&!_gfgea {delete (_edcd ,_gdeeae );};return _gccff ;};if _gdeeae ==nil {_accca :=_ac .MakeNull ();return _accca ;};_bcfef :=_gdeeae ;switch _adgc :=_gdeeae .(type ){case *_ac .PdfObjectArray :_eeaag :=_ac .MakeArray ();
_bcfef =_eeaag ;_febgec [_gdeeae ]=_bcfef ;for _ ,_dcgff :=range _adgc .Elements (){_eeaag .Append (_cgedd .copyObject (_dcgff ,_febgec ,_edcd ,_gfgea ));};case *_ac .PdfObjectStreams :_fegf :=&_ac .PdfObjectStreams {PdfObjectReference :_adgc .PdfObjectReference };
_bcfef =_fegf ;_febgec [_gdeeae ]=_bcfef ;for _ ,_bedea :=range _adgc .Elements (){_fegf .Append (_cgedd .copyObject (_bedea ,_febgec ,_edcd ,_gfgea ));};case *_ac .PdfObjectStream :_cagbd :=&_ac .PdfObjectStream {Stream :_adgc .Stream ,PdfObjectReference :_adgc .PdfObjectReference ,Lazy :_adgc .Lazy ,TempFile :_adgc .TempFile };
_bcfef =_cagbd ;_febgec [_gdeeae ]=_bcfef ;_cagbd .PdfObjectDictionary =_cgedd .copyObject (_adgc .PdfObjectDictionary ,_febgec ,_edcd ,_gfgea ).(*_ac .PdfObjectDictionary );case *_ac .PdfObjectDictionary :var _abbga bool ;if _eedabb &&!_gfgea {if _bdfff ,_ :=_ac .GetNameVal (_adgc .Get ("\u0054\u0079\u0070\u0065"));
_bdfff =="\u0050\u0061\u0067\u0065"{_ ,_bgfec :=_cgedd ._fbccc [_adgc ];_gfgea =!_bgfec ;_abbga =_gfgea ;};};_eaeaa :=_ac .MakeDict ();_bcfef =_eaeaa ;_febgec [_gdeeae ]=_bcfef ;for _ ,_dfcgc :=range _adgc .Keys (){_eaeaa .Set (_dfcgc ,_cgedd .copyObject (_adgc .Get (_dfcgc ),_febgec ,_edcd ,_gfgea ));
};if _abbga {_bcfef =_ac .MakeNull ();_gfgea =false ;};case *_ac .PdfIndirectObject :_eddgdf :=&_ac .PdfIndirectObject {PdfObjectReference :_adgc .PdfObjectReference };_bcfef =_eddgdf ;_febgec [_gdeeae ]=_bcfef ;_eddgdf .PdfObject =_cgedd .copyObject (_adgc .PdfObject ,_febgec ,_edcd ,_gfgea );
case *_ac .PdfObjectString :_feggb :=*_adgc ;_bcfef =&_feggb ;_febgec [_gdeeae ]=_bcfef ;case *_ac .PdfObjectName :_cgfaf :=*_adgc ;_bcfef =&_cgfaf ;_febgec [_gdeeae ]=_bcfef ;case *_ac .PdfObjectNull :_bcfef =_ac .MakeNull ();_febgec [_gdeeae ]=_bcfef ;
case *_ac .PdfObjectInteger :_agebf :=*_adgc ;_bcfef =&_agebf ;_febgec [_gdeeae ]=_bcfef ;case *_ac .PdfObjectReference :_aebeg :=*_adgc ;_bcfef =&_aebeg ;_febgec [_gdeeae ]=_bcfef ;case *_ac .PdfObjectFloat :_bgfgc :=*_adgc ;_bcfef =&_bgfgc ;_febgec [_gdeeae ]=_bcfef ;
case *_ac .PdfObjectBool :_cbdaee :=*_adgc ;_bcfef =&_cbdaee ;_febgec [_gdeeae ]=_bcfef ;case *pdfSignDictionary :_bcced :=&pdfSignDictionary {PdfObjectDictionary :_ac .MakeDict (),_ecfda :_adgc ._ecfda ,_dagbgc :_adgc ._dagbgc };_bcfef =_bcced ;_febgec [_gdeeae ]=_bcfef ;
for _ ,_faeggb :=range _adgc .Keys (){_bcced .Set (_faeggb ,_cgedd .copyObject (_adgc .Get (_faeggb ),_febgec ,_edcd ,_gfgea ));};default:_da .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gdeeae );
};if _eedabb &&_gfgea {_edcd [_gdeeae ]=struct{}{};};return _bcfef ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_ddddd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cagaf :=NewPdfOutlineItem ();_cagaf .Title =_ac .MakeEncodedString (_ddddd .Title ,true );_cagaf .Dest =_ddddd .Dest .ToPdfObject ();var _dfccc []*PdfOutlineItem ;var _aebfe int64 ;
var _fgef *PdfOutlineItem ;for _ ,_adedg :=range _ddddd .Entries {_bebf ,_egcga :=_adedg .ToPdfOutlineItem ();_bebf .Parent =&_cagaf .PdfOutlineTreeNode ;if _fgef !=nil {_fgef .Next =&_bebf .PdfOutlineTreeNode ;_bebf .Prev =&_fgef .PdfOutlineTreeNode ;
};_dfccc =append (_dfccc ,_bebf );_aebfe +=_egcga ;_fgef =_bebf ;};_acdec :=len (_dfccc );_aebfe +=int64 (_acdec );if _acdec > 0{_cagaf .First =&_dfccc [0].PdfOutlineTreeNode ;_cagaf .Last =&_dfccc [_acdec -1].PdfOutlineTreeNode ;_cagaf .Count =&_aebfe ;
};return _cagaf ,_aebfe ;};func (_fcaa *PdfWriter )writeDocumentVersion (){if _fcaa ._abbg {_fcaa .writeString ("\u000a");}else {_fcaa .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fcaa ._ccabd .Major ,_fcaa ._ccabd .Minor ));
_fcaa .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cd .SimpleEncoder ,error ){_ccgab ,_cacd :=_bbacd (basefont );if _cacd !=nil {return nil ,nil ,_cacd ;};_gffc ,_cgeb :=_ccgab .Encoder ().(_cd .SimpleEncoder );
if !_cgeb {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ccgab .Encoder ());
};_ggab :=make (map[rune ]_cd .GlyphName );for _ffeg :=range alphabet {if _ ,_cdbaf :=_gffc .RuneToCharcode (_ffeg );!_cdbaf {_ ,_gdff :=_ccgab ._fcdc .Read (_ffeg );if !_gdff {_da .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ffeg ,_ffeg );
continue ;};_gega ,_gdff :=_cd .RuneToGlyph (_ffeg );if !_gdff {_da .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ffeg ,_ffeg );continue ;};if len (_ggab )>=255{return nil ,nil ,_aec .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_ggab [_ffeg ]=_gega ;};};var (_bcbg []_cd .CharCode ;_eefdf []_cd .CharCode ;);for _bccfg :=_cd .CharCode (1);_bccfg <=0xff;_bccfg ++{_egbf ,_accc :=_gffc .CharcodeToRune (_bccfg );if !_accc {_bcbg =append (_bcbg ,_bccfg );continue ;};if _ ,_accc =alphabet [_egbf ];
!_accc {_eefdf =append (_eefdf ,_bccfg );};};_cgafc :=append (_bcbg ,_eefdf ...);if len (_cgafc )< len (_ggab ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ggab ),len (_cgafc ));
};_cfbg :=make ([]rune ,0,len (_ggab ));for _cbca :=range _ggab {_cfbg =append (_cfbg ,_cbca );};_ga .Slice (_cfbg ,func (_fdage ,_gdggg int )bool {return _cfbg [_fdage ]< _cfbg [_gdggg ]});_dfgg :=make (map[_cd .CharCode ]_cd .GlyphName ,len (_cfbg ));
for _ ,_gbadf :=range _cfbg {_bbcdg :=_cgafc [0];_cgafc =_cgafc [1:];_dfgg [_bbcdg ]=_ggab [_gbadf ];};_gffc =_cd .ApplyDifferences (_gffc ,_dfgg );_ccgab .SetEncoder (_gffc );return &PdfFont {_bcae :&_ccgab },_gffc ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bagc ,_gefaa :=_fgge .Open (filePath );if _gefaa !=nil {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gefaa );
return nil ,_gefaa ;};defer _bagc .Close ();return NewCompositePdfFontFromTTF (_bagc );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_baab *PdfOutlineTreeNode )GetContext ()PdfModel {if _afcbg ,_gfae :=_baab ._fbfca .(*PdfOutline );_gfae {return _afcbg ;};if _gcedb ,_dagaa :=_baab ._fbfca .(*PdfOutlineItem );_dagaa {return _gcedb ;};_da .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_ebg *PdfReader )newPdfActionSoundFromDict (_cbb *_ac .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cbb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cbb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cbb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cbb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cbb .Get ("\u004d\u0069\u0078")},nil ;
};func (_gdcag *LTV )getOCSPs (_acfbd []*_gd .Certificate ,_eegad map[string ]*_gd .Certificate )([][]byte ,error ){_adcf :=make ([][]byte ,0,len (_acfbd ));for _ ,_cdfca :=range _acfbd {for _ ,_cbbac :=range _cdfca .OCSPServer {if _gdcag .CertClient .IsCA (_cdfca ){continue ;
};_fdgeg ,_fcafg :=_eegad [_cdfca .Issuer .CommonName ];if !_fcafg {_da .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_fggdfg ,_ddbeb :=_gdcag .OCSPClient .MakeRequest (_cbbac ,_cdfca ,_fdgeg );if _ddbeb !=nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_ddbeb );
continue ;};_adcf =append (_adcf ,_fggdfg );};};return _adcf ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_bcbb *PdfFont )Subtype ()string {_bdgcc :=_bcbb .baseFields ()._bacd ;if _cdcf ,_adgg :=_bcbb ._bcae .(*pdfFontType0 );_adgg {_bdgcc =_bdgcc +"\u003a"+_cdcf .DescendantFont .Subtype ();};return _bdgcc ;};

// String returns a string that describes `font`.
func (_bgba *PdfFont )String ()string {_cagea :="";if _bgba ._bcae .Encoder ()!=nil {_cagea =_bgba ._bcae .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_bgba ._bcae ,_bgba .baseFields ().coreString (),_cagea );
};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_agca :=&PdfFilespec {};_agca ._fedc =_ac .MakeIndirectObject (_ac .MakeDict ());_agca .Desc =_ac .MakeString (file .Description );_agca .EF =file .ToPdfObject ();_agca .F =_ac .MakeString (file .Name );
_agca .UF =_ac .MakeEncodedString (file .Name ,true );_geef :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_geef ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_geef ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_geef ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_geef ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_agca .AFRelationship =_ac .MakeName (_geef );return _agca ;
};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bdacg *PdfShading )GetContainingPdfObject ()_ac .PdfObject {return _bdacg ._affg };

// Encoder returns the font's text encoder.
func (_cdcda *pdfFontSimple )Encoder ()_cd .TextEncoder {if _cdcda ._cadfa !=nil {return _cdcda ._cadfa ;};if _cdcda ._bgfb !=nil {return _cdcda ._bgfb ;};_bfdeb ,_ :=_cd .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bfdeb ;};func _geee (_bfbe _ac .PdfObject ,_fadg *fontCommon )(*_adg .CMap ,error ){_edgea ,_cfefca :=_ac .GetStream (_bfbe );if !_cfefca {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bfbe );
return nil ,_ac .ErrTypeError ;};_fgfc ,_agddc :=_ac .DecodeStream (_edgea );if _agddc !=nil {return nil ,_agddc ;};_ggbfa ,_agddc :=_adg .LoadCmapFromData (_fgfc ,!_fadg .isCIDFont ());if _agddc !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_edgea .ObjectNumber ,_agddc );
};return _ggbfa ,_agddc ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_dcbb :=NewPdfAction ();_gab :=&PdfActionHide {};_gab .PdfAction =_dcbb ;_dcbb .SetContext (_gab );return _gab ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_fggfe *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fefgd :=_bdab .NewReader (img .getBase ());_cdba :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_efgc :=_bdab .NewWriter (_cdba );
_gcfe :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_eddc :=make ([]uint32 ,3);var (_afacf uint32 ;ANorm ,X ,Y ,Z ,_bddf ,_bbaad ,_agbc float64 ;_dddfa error ;);for {_afacf ,_dddfa =_fefgd .ReadSample ();if _dddfa ==_cc .EOF {break ;}else if _dddfa !=nil {return img ,_dddfa ;
};ANorm =float64 (_afacf )/_gcfe ;X =_fggfe .WhitePoint [0]*_fe .Pow (ANorm ,_fggfe .Gamma );Y =_fggfe .WhitePoint [1]*_fe .Pow (ANorm ,_fggfe .Gamma );Z =_fggfe .WhitePoint [2]*_fe .Pow (ANorm ,_fggfe .Gamma );_bddf =3.240479*X +-1.537150*Y +-0.498535*Z ;
_bbaad =-0.969256*X +1.875992*Y +0.041556*Z ;_agbc =0.055648*X +-0.204043*Y +1.057311*Z ;_bddf =_fe .Min (_fe .Max (_bddf ,0),1.0);_bbaad =_fe .Min (_fe .Max (_bbaad ,0),1.0);_agbc =_fe .Min (_fe .Max (_agbc ,0),1.0);_eddc [0]=uint32 (_bddf *_gcfe );_eddc [1]=uint32 (_bbaad *_gcfe );
_eddc [2]=uint32 (_agbc *_gcfe );if _dddfa =_efgc .WriteSamples (_eddc );_dddfa !=nil {return img ,_dddfa ;};};return _bgage (&_cdba ),nil ;};func (_gdbd *PdfReader )newPdfAnnotationProjectionFromDict (_cadg *_ac .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_dcfeg :=&PdfAnnotationProjection {};
_gfe ,_cdb :=_gdbd .newPdfAnnotationMarkupFromDict (_cadg );if _cdb !=nil {return nil ,_cdb ;};_dcfeg .PdfAnnotationMarkup =_gfe ;return _dcfeg ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ac .PdfObject )(*PdfFont ,error ){return _acded (fontObj ,true )};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bbdcf *PdfPage )GetPageDict ()*_ac .PdfObjectDictionary {_bafg :=_bbdcf ._gbbf ;_bafg .Clear ();_bafg .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0050\u0061\u0067\u0065"));_bafg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbdcf .Parent );
if _bbdcf .LastModified !=nil {_bafg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bbdcf .LastModified .ToPdfObject ());};if _bbdcf .Resources !=nil {_bafg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbdcf .Resources .ToPdfObject ());
};if _bbdcf .CropBox !=nil {_bafg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bbdcf .CropBox .ToPdfObject ());};if _bbdcf .MediaBox !=nil {_bafg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bbdcf .MediaBox .ToPdfObject ());};if _bbdcf .BleedBox !=nil {_bafg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bbdcf .BleedBox .ToPdfObject ());
};if _bbdcf .TrimBox !=nil {_bafg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bbdcf .TrimBox .ToPdfObject ());};if _bbdcf .ArtBox !=nil {_bafg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bbdcf .ArtBox .ToPdfObject ());};_bafg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bbdcf .BoxColorInfo );
_bafg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bbdcf .Contents );if _bbdcf .Rotate !=nil {_bafg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ac .MakeInteger (*_bbdcf .Rotate ));};_bafg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bbdcf .Group );
_bafg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bbdcf .Thumb );_bafg .SetIfNotNil ("\u0042",_bbdcf .B );_bafg .SetIfNotNil ("\u0044\u0075\u0072",_bbdcf .Dur );_bafg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bbdcf .Trans );_bafg .SetIfNotNil ("\u0041\u0041",_bbdcf .AA );
_bafg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbdcf .Metadata );_bafg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bbdcf .PieceInfo );_bafg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bbdcf .StructParents );
_bafg .SetIfNotNil ("\u0049\u0044",_bbdcf .ID );_bafg .SetIfNotNil ("\u0050\u005a",_bbdcf .PZ );_bafg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bbdcf .SeparationInfo );_bafg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bbdcf .Tabs );
_bafg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bbdcf .TemplateInstantiated );_bafg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bbdcf .PresSteps );_bafg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bbdcf .UserUnit );
_bafg .SetIfNotNil ("\u0056\u0050",_bbdcf .VP );if _bbdcf ._adba !=nil {_ceggd :=_ac .MakeArray ();for _ ,_bbceaa :=range _bbdcf ._adba {if _eccbd :=_bbceaa .GetContext ();_eccbd !=nil {_ceggd .Append (_eccbd .ToPdfObject ());}else {_ceggd .Append (_bbceaa .ToPdfObject ());
};};if _ceggd .Len ()> 0{_bafg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_ceggd );};}else if _bbdcf .Annots !=nil {_bafg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bbdcf .Annots );};return _bafg ;};

// String returns a human readable description of `fontfile`.
func (_facaf *fontFile )String ()string {_bdcdb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _facaf ._bbfd !=nil {_bdcdb =_facaf ._bbfd .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_facaf ._ecgfb ,_bdcdb );
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dfac *PdfOutline )GetContainingPdfObject ()_ac .PdfObject {return _dfac ._baedd };

// ToPdfObject implements interface PdfModel.
func (_caff *PdfAnnotationWatermark )ToPdfObject ()_ac .PdfObject {_caff .PdfAnnotation .ToPdfObject ();_fbfa :=_caff ._add ;_eege :=_fbfa .PdfObject .(*_ac .PdfObjectDictionary );_eege .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_eege .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_caff .FixedPrint );return _fbfa ;};func _efbbe (_bgcgd _ac .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fcag :=NewPdfColorspaceSpecialSeparation ();if _aabe ,_ebeba :=_bgcgd .(*_ac .PdfIndirectObject );
_ebeba {_fcag ._eefd =_aabe ;};_bgcgd =_ac .TraceToDirectObject (_bgcgd );_gbcd ,_eggfc :=_bgcgd .(*_ac .PdfObjectArray );if !_eggfc {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gbcd .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_bgcgd =_gbcd .Get (0);
_aegb ,_eggfc :=_bgcgd .(*_ac .PdfObjectName );if !_eggfc {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_aegb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_bgcgd =_gbcd .Get (1);_aegb ,_eggfc =_bgcgd .(*_ac .PdfObjectName );if !_eggfc {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fcag .ColorantName =_aegb ;_bgcgd =_gbcd .Get (2);_afabc ,_dbcf :=NewPdfColorspaceFromPdfObject (_bgcgd );if _dbcf !=nil {return nil ,_dbcf ;};_fcag .AlternateSpace =_afabc ;_edaeb ,_dbcf :=_fdfgf (_gbcd .Get (3));if _dbcf !=nil {return nil ,_dbcf ;
};_fcag .TintTransform =_edaeb ;return _fcag ,nil ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_cceg *ViewerPreferences )IsHideToolbar ()bool {if _cceg ._feafe ==nil {return false ;};return *_cceg ._feafe ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gedb :=&PdfAppender {_gbfd :reader ._ddcc ,Reader :reader ,_ggbd :reader ._ecebe ,_ffd :reader ._cbdeg };_dcccf ,_egba :=_gedb ._gbfd .Seek (0,_cc .SeekEnd );if _egba !=nil {return nil ,_egba ;
};_gedb ._baeb =_dcccf ;if _ ,_egba =_gedb ._gbfd .Seek (0,_cc .SeekStart );_egba !=nil {return nil ,_egba ;};_gedb ._badg ,_egba =NewPdfReader (_gedb ._gbfd );if _egba !=nil {return nil ,_egba ;};for _ ,_fffba :=range _gedb .Reader .GetObjectNums (){if _gedb ._defc < _fffba {_gedb ._defc =_fffba ;
};};_gedb ._faegc =_gedb ._ggbd .GetXrefTable ();_gedb ._abbc =_gedb ._ggbd .GetXrefOffset ();_gedb ._ega =append (_gedb ._ega ,_gedb ._badg .PageList ...);_gedb ._aadba =make (map[_ac .PdfObject ]struct{});_gedb ._dgd =make (map[_ac .PdfObject ]int64 );
_gedb ._deb =make (map[_ac .PdfObject ]struct{});_gedb ._bbcc =_gedb ._badg .AcroForm ;_gedb ._fcg =_gedb ._badg .DSS ;return _gedb ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// WriteToFile writes the output PDF to file.
func (_dcbbga *PdfWriter )WriteToFile (outputFilePath string )error {_begba ,_cdcbe :=_fgge .Create (outputFilePath );if _cdcbe !=nil {return _cdcbe ;};defer _begba .Close ();return _dcbbga .Write (_begba );};func (_eafc *LTV )buildCertChain (_ggdcd ,_gfbf []*_gd .Certificate )([]*_gd .Certificate ,map[string ]*_gd .Certificate ,error ){_dadd :=map[string ]*_gd .Certificate {};
for _ ,_dbdcd :=range _ggdcd {_dadd [_dbdcd .Subject .CommonName ]=_dbdcd ;};_eeec :=_ggdcd ;for _ ,_cgfe :=range _gfbf {_bcegb :=_cgfe .Subject .CommonName ;if _ ,_geegc :=_dadd [_bcegb ];_geegc {continue ;};_dadd [_bcegb ]=_cgfe ;_eeec =append (_eeec ,_cgfe );
};if len (_eeec )==0{return nil ,nil ,ErrSignNoCertificates ;};var _defde error ;for _cbabaa :=_eeec [0];_cbabaa !=nil &&!_eafc .CertClient .IsCA (_cbabaa );{_aafgcg ,_dcabe :=_dadd [_cbabaa .Issuer .CommonName ];if !_dcabe {if _aafgcg ,_defde =_eafc .CertClient .GetIssuer (_cbabaa );
_defde !=nil {_da .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_defde );
break ;};_dadd [_cbabaa .Issuer .CommonName ]=_aafgcg ;_eeec =append (_eeec ,_aafgcg );};_cbabaa =_aafgcg ;};return _eeec ,_dadd ,nil ;};func (_fbb *PdfReader )newPdfAnnotationMovieFromDict (_acba *_ac .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bbb :=PdfAnnotationMovie {};
_bbb .T =_acba .Get ("\u0054");_bbb .Movie =_acba .Get ("\u004d\u006f\u0076i\u0065");_bbb .A =_acba .Get ("\u0041");return &_bbb ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_feeeb *_ac .PdfIndirectObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_daddbe *ViewerPreferences )PickTrayByPDFSize ()bool {if _daddbe ._badgbb ==nil {return false ;};return *_daddbe ._badgbb ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ac .PdfObject ;BS _ac .PdfObject ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fbg :=NewPdfAnnotation ();_efaa :=&PdfAnnotation3D {};_efaa .PdfAnnotation =_fbg ;_fbg .SetContext (_efaa );return _efaa ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_begf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_begf .N =N ;return _begf ,nil ;};func (_degdfg *PdfWriter )writeTrailer (_fgacd int ){_degdfg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dbdea :=0;_dbdea <=_fgacd ;{for ;_dbdea <=_fgacd ;_dbdea ++{_cadbc ,_bbfca :=_degdfg ._dfbbef [_dbdea ];
if _bbfca &&(!_degdfg ._abbg ||_degdfg ._abbg &&(_cadbc .Type ==1&&_cadbc .Offset >=_degdfg ._gfce ||_cadbc .Type ==0)){break ;};};var _cebbc int ;for _cebbc =_dbdea +1;_cebbc <=_fgacd ;_cebbc ++{_dbbgg ,_bcdcd :=_degdfg ._dfbbef [_cebbc ];if _bcdcd &&(!_degdfg ._abbg ||_degdfg ._abbg &&(_dbbgg .Type ==1&&_dbbgg .Offset > _degdfg ._gfce )){continue ;
};break ;};_fcfec :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dbdea ,_cebbc -_dbdea );_degdfg .writeString (_fcfec );for _acagd :=_dbdea ;_acagd < _cebbc ;_acagd ++{_gdege :=_degdfg ._dfbbef [_acagd ];switch _gdege .Type {case 0:_fcfec =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_degdfg .writeString (_fcfec );case 1:_fcfec =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gdege .Offset ,0);_degdfg .writeString (_fcfec );};};_dbdea =_cebbc +1;};_ceeb :=_ac .MakeDict ();_ceeb .Set ("\u0049\u006e\u0066\u006f",_degdfg ._bcbcab );
_ceeb .Set ("\u0052\u006f\u006f\u0074",_degdfg ._aefaf );_ceeb .Set ("\u0053\u0069\u007a\u0065",_ac .MakeInteger (int64 (_fgacd +1)));if _degdfg ._abbg &&_degdfg ._fcfde > 0{_ceeb .Set ("\u0050\u0072\u0065\u0076",_ac .MakeInteger (_degdfg ._fcfde ));};
if _degdfg ._gefae !=nil {_ceeb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_degdfg ._dfecf );};if _degdfg ._ddfac ==nil &&_degdfg ._edfggf !=""&&_degdfg ._dgagd !=""{_degdfg ._ddfac =_ac .MakeArray (_ac .MakeHexString (_degdfg ._edfggf ),_ac .MakeHexString (_degdfg ._dgagd ));
};if _degdfg ._ddfac !=nil {_ceeb .Set ("\u0049\u0044",_degdfg ._ddfac );_da .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_degdfg ._ddfac );};_degdfg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_degdfg .writeBytes (_ceeb .Write ());
_degdfg .writeString ("\u000a");};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_adab *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=_adab .GetNumComponents (){return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cecd ,_aeade :=_ac .GetNumbersAsFloat (objects );
if _aeade !=nil {return nil ,_aeade ;};return _adab .ColorFromFloats (_cecd );};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fggde :_ac .MakeIndirectObject (_ac .MakeDict ())}};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_fgbeg *PdfWriter )SetCatalogStructTreeRoot (tree _ac .PdfObject )error {if tree ==nil {_fgbeg ._cgebe .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_fgbeg ._cgebe .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _fgbeg .addObjects (tree );};func (_cedg *PdfReader )newPdfActionSubmitFormFromDict (_bfa *_ac .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_efbc ,_bgc :=_dcf (_bfa .Get ("\u0046"));if _bgc !=nil {return nil ,_bgc ;};return &PdfActionSubmitForm {F :_efbc ,Fields :_bfa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bfa .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);func (_ccgafd *PdfWriter )writeXRefStreams (_ggcad int ,_faefb int64 )error {_ffaee :=_ggcad +1;_ccgafd ._dfbbef [_ffaee ]=crossReference {Type :1,ObjectNumber :_ffaee ,Offset :_faefb };
_ddabe :=_ag .NewBuffer (nil );_fcef :=_ac .MakeArray ();for _cbabe :=0;_cbabe <=_ggcad ;{for ;_cbabe <=_ggcad ;_cbabe ++{_cfbcg ,_bdbfbd :=_ccgafd ._dfbbef [_cbabe ];if _bdbfbd &&(!_ccgafd ._abbg ||_ccgafd ._abbg &&(_cfbcg .Type ==1&&_cfbcg .Offset >=_ccgafd ._gfce ||_cfbcg .Type ==0)){break ;
};};var _fgadc int ;for _fgadc =_cbabe +1;_fgadc <=_ggcad ;_fgadc ++{_defec ,_ggcbgb :=_ccgafd ._dfbbef [_fgadc ];if _ggcbgb &&(!_ccgafd ._abbg ||_ccgafd ._abbg &&(_defec .Type ==1&&_defec .Offset > _ccgafd ._gfce )){continue ;};break ;};_fcef .Append (_ac .MakeInteger (int64 (_cbabe )),_ac .MakeInteger (int64 (_fgadc -_cbabe )));
for _bfdae :=_cbabe ;_bfdae < _fgadc ;_bfdae ++{_aacddf :=_ccgafd ._dfbbef [_bfdae ];switch _aacddf .Type {case 0:_bab .Write (_ddabe ,_bab .BigEndian ,byte (0));_bab .Write (_ddabe ,_bab .BigEndian ,uint32 (0));_bab .Write (_ddabe ,_bab .BigEndian ,uint16 (0xFFFF));
case 1:_bab .Write (_ddabe ,_bab .BigEndian ,byte (1));_bab .Write (_ddabe ,_bab .BigEndian ,uint32 (_aacddf .Offset ));_bab .Write (_ddabe ,_bab .BigEndian ,uint16 (_aacddf .Generation ));case 2:_bab .Write (_ddabe ,_bab .BigEndian ,byte (2));_bab .Write (_ddabe ,_bab .BigEndian ,uint32 (_aacddf .ObjectNumber ));
_bab .Write (_ddabe ,_bab .BigEndian ,uint16 (_aacddf .Index ));};};_cbabe =_fgadc +1;};_bddac ,_fbfe :=_ac .MakeStream (_ddabe .Bytes (),_ac .NewFlateEncoder ());if _fbfe !=nil {return _fbfe ;};_bddac .ObjectNumber =int64 (_ffaee );_bddac .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0058\u0052\u0065\u0066"));
_bddac .PdfObjectDictionary .Set ("\u0057",_ac .MakeArray (_ac .MakeInteger (1),_ac .MakeInteger (4),_ac .MakeInteger (2)));_bddac .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fcef );_bddac .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ac .MakeInteger (int64 (_ffaee )));
_bddac .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ccgafd ._bcbcab );_bddac .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ccgafd ._aefaf );if _ccgafd ._abbg &&_ccgafd ._fcfde > 0{_bddac .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ac .MakeInteger (_ccgafd ._fcfde ));
};if _ccgafd ._gefae !=nil {_bddac .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ccgafd ._dfecf );};if _ccgafd ._ddfac ==nil &&_ccgafd ._edfggf !=""&&_ccgafd ._dgagd !=""{_ccgafd ._ddfac =_ac .MakeArray (_ac .MakeHexString (_ccgafd ._edfggf ),_ac .MakeHexString (_ccgafd ._dgagd ));
};if _ccgafd ._ddfac !=nil {_da .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ccgafd ._ddfac );_bddac .Set ("\u0049\u0044",_ccgafd ._ddfac );};_ccgafd .writeObject (int (_bddac .ObjectNumber ),_bddac );return nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_cdfbd *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _bfbbg (_deee *_ac .PdfObjectDictionary )(*PdfFieldChoice ,error ){_fbbaf :=&PdfFieldChoice {};_fbbaf .Opt ,_ =_ac .GetArray (_deee .Get ("\u004f\u0070\u0074"));_fbbaf .TI ,_ =_ac .GetInt (_deee .Get ("\u0054\u0049"));
_fbbaf .I ,_ =_ac .GetArray (_deee .Get ("\u0049"));return _fbbaf ,nil ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_dbfea *PdfWriter )SetCatalogMarkInfo (info _ac .PdfObject )error {if info ==nil {_dbfea ._cgebe .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _cffc ,_ffdad :=info .(*_ac .PdfObjectReference );_ffdad {info =_cffc .Resolve ();
if info ==nil {_dbfea ._cgebe .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};if _ ,_bgdfa :=info .(*_ac .PdfIndirectObject );_bgdfa {_dbfea .addObject (info );};_dbfea ._cgebe .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );
return nil ;};func _fdfgf (_dgdec _ac .PdfObject )(PdfFunction ,error ){_dgdec =_ac .ResolveReference (_dgdec );if _fbgf ,_egdge :=_dgdec .(*_ac .PdfObjectStream );_egdge {_fceg :=_fbgf .PdfObjectDictionary ;_dddga ,_fbea :=_fceg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ac .PdfObjectInteger );
if !_fbea {_da .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dddga ==0{return _daaae (_fbgf );}else if *_dddga ==4{return _ecdd (_fbgf );}else {return nil ,_aec .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fcffa ,_ffggd :=_dgdec .(*_ac .PdfIndirectObject );
_ffggd {_gbed ,_ecdag :=_fcffa .PdfObject .(*_ac .PdfObjectDictionary );if !_ecdag {_da .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fdcgd ,_ecdag :=_gbed .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ac .PdfObjectInteger );
if !_ecdag {_da .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_fdcgd ==2{return _gdcad (_fcffa );}else if *_fdcgd ==3{return _edce (_fcffa );}else {return nil ,_aec .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bbcea ,_fbcca :=_dgdec .(*_ac .PdfObjectDictionary );
_fbcca {_fecf ,_dagbg :=_bbcea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ac .PdfObjectInteger );if !_dagbg {_da .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fecf ==2{return _gdcad (_bbcea );}else if *_fecf ==3{return _edce (_bbcea );
}else {return nil ,_aec .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_da .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dgdec );
return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// IsColored specifies if the pattern is colored.
func (_cgadg *PdfTilingPattern )IsColored ()bool {if _cgadg .PaintType !=nil &&*_cgadg .PaintType ==1{return true ;};return false ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ac .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// AddFont adds a font dictionary to the Font resources.
func (_fefcb *PdfPage )AddFont (name _ac .PdfObjectName ,font _ac .PdfObject )error {if _fefcb .Resources ==nil {_fefcb .Resources =NewPdfPageResources ();};if _fefcb .Resources .Font ==nil {_fefcb .Resources .Font =_ac .MakeDict ();};_aefge ,_fcggde :=_ac .TraceToDirectObject (_fefcb .Resources .Font ).(*_ac .PdfObjectDictionary );
if !_fcggde {_da .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ac .TraceToDirectObject (_fefcb .Resources .Font ));
return _aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aefge .Set (name ,font );return nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cga :=NewPdfAnnotation ();_dbfgg :=&PdfAnnotationInk {};_dbfgg .PdfAnnotation =_cga ;_dbfgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cga .SetContext (_dbfgg );return _dbfgg ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ac .PdfIndirectObject )*PdfOutlineItem {_bafba :=PdfOutlineItem {};_bafba ._fbfca =&_bafba ;_bafba .Title =_ac .MakeString (title );_acedce :=_ac .MakeArray ();_acedce .Append (page );_acedce .Append (_ac .MakeName ("\u0046\u0069\u0074"));
_bafba .Dest =_acedce ;return &_bafba ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdeb pdfCIDFontType0 )GetCharMetrics (code _cd .CharCode )(_bd .CharMetrics ,bool ){_caae :=_cdeb ._eafda ;if _ebfeg ,_fgba :=_cdeb ._cfccc [code ];_fgba {_caae =_ebfeg ;};return _bd .CharMetrics {Wx :_caae },true ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_bccda *IDTree )ToPdfObject ()_ac .PdfObject {_caeada :=_ac .MakeDict ();if _bccda .Names !=nil &&_bccda .Names .Len ()> 0{_caeada .Set ("\u004e\u0061\u006de\u0073",_bccda .Names );_caeada .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_bccda .Limits );
};if len (_bccda .Kids )> 0{_cdbd :=_ac .MakeArray ();for _ ,_daegg :=range _bccda .Kids {_cdbd .Append (_daegg .ToPdfObject ());};_gfedg :=_ac .MakeDict ();_gfedg .Set ("\u004b\u0069\u0064\u0073",_cdbd );_caeada .Set ("\u004b\u0069\u0064\u0073",_gfedg );
};return _caeada ;};func (_fbgeb *XObjectImage )getParamsDict ()*_ac .PdfObjectDictionary {_deacg :=_ac .MakeDict ();_deacg .Set ("\u0057\u0069\u0064t\u0068",_ac .MakeInteger (*_fbgeb .Width ));_deacg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ac .MakeInteger (*_fbgeb .Height ));
_deacg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ac .MakeInteger (int64 (_fbgeb .ColorSpace .GetNumComponents ())));_deacg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ac .MakeInteger (*_fbgeb .BitsPerComponent ));
return _deacg ;};

// AddOutlineTree adds outlines to a PDF file.
func (_daeca *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_daeca ._dabba =outlineTree };

// GetRevisionNumber returns the version of the current Pdf document
func (_ffbgb *PdfReader )GetRevisionNumber ()int {return _ffbgb ._ecebe .GetRevisionNumber ()};func (_bccg *PdfReader )newPdfActionHideFromDict (_faeg *_ac .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_faeg .Get ("\u0054"),H :_faeg .Get ("\u0048")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfAnnotationLink )ToPdfObject ()_ac .PdfObject {_afg .PdfAnnotation .ToPdfObject ();_dea :=_afg ._add ;_aefe :=_dea .PdfObject .(*_ac .PdfObjectDictionary );_aefe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u004c\u0069\u006e\u006b"));
if _afg ._cbge !=nil &&_afg ._cbge ._df !=nil {_aefe .Set ("\u0041",_afg ._cbge ._df .ToPdfObject ());}else if _afg .A !=nil {_aefe .Set ("\u0041",_afg .A );};_aefe .SetIfNotNil ("\u0044\u0065\u0073\u0074",_afg .Dest );_aefe .SetIfNotNil ("\u0048",_afg .H );
_aefe .SetIfNotNil ("\u0050\u0041",_afg .PA );_aefe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afg .QuadPoints );_aefe .SetIfNotNil ("\u0042\u0053",_afg .BS );return _dea ;};

// ReplacePage replaces the original page to a new page.
func (_gbbe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cabb :=pageNum -1;for _aged :=range _gbbe ._ega {if _aged ==_cabb {_egcec :=page .Duplicate ();_bafdb (_egcec );_gbbe ._ega [_aged ]=_egcec ;};};};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_edeaf *_db .Document )error ;};

// Direction represents the predominant reading order for text.
type Direction string ;func (_abbaf Image )getBase ()_cf .ImageBase {return _cf .NewImageBase (int (_abbaf .Width ),int (_abbaf .Height ),int (_abbaf .BitsPerComponent ),_abbaf .ColorComponents ,_abbaf .Data ,_abbaf ._geag ,_abbaf ._bacca );};func _bafdb (_cfbge *PdfPage ){_dacdf :=_dgf .GetLicenseKey ();
if _dacdf !=nil &&_dacdf .IsLicensed (){return ;};_bcddga :=_ac .PdfObjectName ("\u0055\u0046\u0031");if !_cfbge .Resources .HasFontByName (_bcddga ){_cfbge .Resources .SetFontByName (_bcddga ,DefaultFont ().ToPdfObject ());};var _gaaeb []string ;_gaaeb =append (_gaaeb ,"\u0071");
_gaaeb =append (_gaaeb ,"\u0042\u0054");_gaaeb =append (_gaaeb ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bcddga .String ()));_gaaeb =append (_gaaeb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_gaaeb =append (_gaaeb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_cafab :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_gaaeb =append (_gaaeb ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cafab ));_gaaeb =append (_gaaeb ,"\u0045\u0054");_gaaeb =append (_gaaeb ,"\u0051");_cccfa :=_fgg .Join (_gaaeb ,"\u000a");_cfbge .AddContentStreamByString (_cccfa );_cfbge .ToPdfObject ();
};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_dbcg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dbcg .AlternateSpace ==nil {return nil ,_aec .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dbcg .AlternateSpace .ColorToRGB (color );};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gedda *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_cbabb *PdfColorspaceCalGray )ToPdfObject ()_ac .PdfObject {_acde :=&_ac .PdfObjectArray {};_acde .Append (_ac .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_beea :=_ac .MakeDict ();if _cbabb .WhitePoint !=nil {_beea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ac .MakeArray (_ac .MakeFloat (_cbabb .WhitePoint [0]),_ac .MakeFloat (_cbabb .WhitePoint [1]),_ac .MakeFloat (_cbabb .WhitePoint [2])));
}else {_da .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _cbabb .BlackPoint !=nil {_beea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ac .MakeArray (_ac .MakeFloat (_cbabb .BlackPoint [0]),_ac .MakeFloat (_cbabb .BlackPoint [1]),_ac .MakeFloat (_cbabb .BlackPoint [2])));
};_beea .Set ("\u0047\u0061\u006dm\u0061",_ac .MakeFloat (_cbabb .Gamma ));_acde .Append (_beea );if _cbabb ._eefe !=nil {_cbabb ._eefe .PdfObject =_acde ;return _cbabb ._eefe ;};return _acde ;};func (_bdfeb *PdfSignature )extractChainFromPKCS7 ()([]*_gd .Certificate ,error ){_cfccca ,_ccffce :=_ff .Parse (_bdfeb .Contents .Bytes ());
if _ccffce !=nil {return nil ,_ccffce ;};return _cfccca .Certificates ,nil ;};func (_dabfe *pdfFontSimple )updateStandard14Font (){_acggc ,_gbefc :=_dabfe .Encoder ().(_cd .SimpleEncoder );if !_gbefc {_da .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dabfe .Encoder (),_dabfe );
return ;};_cgbfd :=_acggc .Charcodes ();_dabfe ._dcbf =make (map[_cd .CharCode ]float64 ,len (_cgbfd ));for _ ,_dcgab :=range _cgbfd {_becd ,_ :=_acggc .CharcodeToRune (_dcgab );_ebada ,_ :=_dabfe ._fcdc .Read (_becd );_dabfe ._dcbf [_dcgab ]=_ebada .Wx ;
};};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ac .PdfObject ;FontFamily _ac .PdfObject ;FontStretch _ac .PdfObject ;FontWeight _ac .PdfObject ;Flags _ac .PdfObject ;FontBBox _ac .PdfObject ;ItalicAngle _ac .PdfObject ;Ascent _ac .PdfObject ;Descent _ac .PdfObject ;
Leading _ac .PdfObject ;CapHeight _ac .PdfObject ;XHeight _ac .PdfObject ;StemV _ac .PdfObject ;StemH _ac .PdfObject ;AvgWidth _ac .PdfObject ;MaxWidth _ac .PdfObject ;MissingWidth _ac .PdfObject ;FontFile _ac .PdfObject ;FontFile2 _ac .PdfObject ;FontFile3 _ac .PdfObject ;
CharSet _ac .PdfObject ;_abceg int ;_gbbab float64 ;*fontFile ;_caega *_bd .TtfType ;

// Additional entries for CIDFonts
Style _ac .PdfObject ;Lang _ac .PdfObject ;FD _ac .PdfObject ;CIDSet _ac .PdfObject ;_gcfd *_ac .PdfIndirectObject ;};func (_abeb *PdfReader )newPdfAnnotationFreeTextFromDict (_ddag *_ac .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fbed :=PdfAnnotationFreeText {};
_agc ,_aaa :=_abeb .newPdfAnnotationMarkupFromDict (_ddag );if _aaa !=nil {return nil ,_aaa ;};_fbed .PdfAnnotationMarkup =_agc ;_fbed .DA =_ddag .Get ("\u0044\u0041");_fbed .Q =_ddag .Get ("\u0051");_fbed .RC =_ddag .Get ("\u0052\u0043");_fbed .DS =_ddag .Get ("\u0044\u0053");
_fbed .CL =_ddag .Get ("\u0043\u004c");_fbed .IT =_ddag .Get ("\u0049\u0054");_fbed .BE =_ddag .Get ("\u0042\u0045");_fbed .RD =_ddag .Get ("\u0052\u0044");_fbed .BS =_ddag .Get ("\u0042\u0053");_fbed .LE =_ddag .Get ("\u004c\u0045");return &_fbed ,nil ;
};func (_edfdf fontCommon )coreString ()string {_dcba :="";if _edfdf ._gdgc !=nil {_dcba =_edfdf ._gdgc .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_edfdf ._bacd ,_edfdf ._cfca ,_edfdf ._ageda ,_edfdf ._eacb ,_edfdf ._baagf !=nil ,_edfdf .fontFlags (),_dcba );
};

// ToPdfObject implements interface PdfModel.
func (_gbdg *PdfActionNamed )ToPdfObject ()_ac .PdfObject {_gbdg .PdfAction .ToPdfObject ();_fb :=_gbdg ._acf ;_dbf :=_fb .PdfObject .(*_ac .PdfObjectDictionary );_dbf .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeNamed )));_dbf .SetIfNotNil ("\u004e",_gbdg .N );
return _fb ;};func (_dgeeg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ac .PdfObject ;IsMap _ac .PdfObject ;};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_gccgg *ViewerPreferences )ToPdfObject ()_ac .PdfObject {_gbbbc :=_ac .MakeDict ();if _gccgg ._feafe !=nil {_gbbbc .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_ac .MakeBool (*_gccgg ._feafe ));};if _gccgg ._ddeag !=nil {_gbbbc .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_ac .MakeBool (*_gccgg ._ddeag ));
};if _gccgg ._edeed !=nil {_gbbbc .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_ac .MakeBool (*_gccgg ._edeed ));};if _gccgg ._eaafb !=nil {_gbbbc .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_ac .MakeBool (*_gccgg ._eaafb ));
};if _gccgg ._aggfg !=nil {_gbbbc .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_ac .MakeBool (*_gccgg ._aggfg ));};if _gccgg ._febfe !=nil {_gbbbc .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_ac .MakeBool (*_gccgg ._febfe ));
};if _gccgg ._ebfbdg !=""{_gbbbc .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_ac .MakeName (string (_gccgg ._ebfbdg )));};if _gccgg ._gfad !=""{_gbbbc .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_ac .MakeName (string (_gccgg ._gfad )));
};if _gccgg ._dgbe !=""{_gbbbc .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_ac .MakeName (string (_gccgg ._dgbe )));};if _gccgg ._cbfge !=""{_gbbbc .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_ac .MakeName (string (_gccgg ._cbfge )));
};if _gccgg ._dafcc !=""{_gbbbc .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_ac .MakeName (string (_gccgg ._dafcc )));};if _gccgg ._beafcg !=""{_gbbbc .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_ac .MakeName (string (_gccgg ._beafcg )));
};if _gccgg ._fdgfg !=""{_gbbbc .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_ac .MakeName (string (_gccgg ._fdgfg )));};if _gccgg ._dfaa !=""{_gbbbc .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_ac .MakeName (string (_gccgg ._dfaa )));
};if _gccgg ._badgbb !=nil {_gbbbc .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_ac .MakeBool (*_gccgg ._badgbb ));};if _gccgg ._agfb !=nil {_gbbbc .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_ac .MakeArrayFromIntegers (_gccgg ._agfb ));
};if _gccgg ._daaaed !=0{_gbbbc .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_ac .MakeInteger (int64 (_gccgg ._daaaed )));};return _gbbbc ;};

// Add appends a top level outline item to the outline.
func (_bgcgdc *Outline )Add (item *OutlineItem ){_bgcgdc .Entries =append (_bgcgdc .Entries ,item )};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_gebg :=NewPdfAnnotation ();_dge :=&PdfAnnotationTrapNet {};_dge .PdfAnnotation =_gebg ;_gebg .SetContext (_dge );return _dge ;};

// L returns the value of the L component of the color.
func (_afdad *PdfColorLab )L ()float64 {return _afdad [0]};

// GetNumComponents returns the number of color components (3 for RGB).
func (_dddf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _daaae (_daad *_ac .PdfObjectStream )(*PdfFunctionType0 ,error ){_eddg :=&PdfFunctionType0 {};_eddg ._bagbf =_daad ;_bgeb :=_daad .PdfObjectDictionary ;_bafb ,_fgdb :=_ac .TraceToDirectObject (_bgeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ac .PdfObjectArray );
if !_fgdb {_da .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bafb .Len ()< 0||_bafb .Len ()%2!=0{_da .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_eddg .NumInputs =_bafb .Len ()/2;_cbbe ,_cdgg :=_bafb .ToFloat64Array ();if _cdgg !=nil {return nil ,_cdgg ;};_eddg .Domain =_cbbe ;_bafb ,_fgdb =_ac .TraceToDirectObject (_bgeb .Get ("\u0052\u0061\u006eg\u0065")).(*_ac .PdfObjectArray );if !_fgdb {_da .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bafb .Len ()< 0||_bafb .Len ()%2!=0{return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_eddg .NumOutputs =_bafb .Len ()/2;_fdga ,_cdgg :=_bafb .ToFloat64Array ();if _cdgg !=nil {return nil ,_cdgg ;};_eddg .Range =_fdga ;_bafb ,_fgdb =_ac .TraceToDirectObject (_bgeb .Get ("\u0053\u0069\u007a\u0065")).(*_ac .PdfObjectArray );if !_fgdb {_da .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bada ,_cdgg :=_bafb .ToIntegerArray ();
if _cdgg !=nil {return nil ,_cdgg ;};if len (_bada )!=_eddg .NumInputs {_da .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddg .Size =_bada ;_cfdgd ,_fgdb :=_ac .TraceToDirectObject (_bgeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ac .PdfObjectInteger );
if !_fgdb {_da .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cfdgd !=1&&*_cfdgd !=2&&*_cfdgd !=4&&*_cfdgd !=8&&*_cfdgd !=12&&*_cfdgd !=16&&*_cfdgd !=24&&*_cfdgd !=32{_da .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cfdgd );
return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddg .BitsPerSample =int (*_cfdgd );_eddg .Order =1;_cggea ,_fgdb :=_ac .TraceToDirectObject (_bgeb .Get ("\u004f\u0072\u0064e\u0072")).(*_ac .PdfObjectInteger );
if _fgdb {if *_cggea !=1&&*_cggea !=3{_da .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_cggea );return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eddg .Order =int (*_cggea );
};_bafb ,_fgdb =_ac .TraceToDirectObject (_bgeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ac .PdfObjectArray );if _fgdb {_dbdga ,_cgafd :=_bafb .ToFloat64Array ();if _cgafd !=nil {return nil ,_cgafd ;};_eddg .Encode =_dbdga ;};_bafb ,_fgdb =_ac .TraceToDirectObject (_bgeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ac .PdfObjectArray );
if _fgdb {_efce ,_effab :=_bafb .ToFloat64Array ();if _effab !=nil {return nil ,_effab ;};_eddg .Decode =_efce ;};_caeff ,_cdgg :=_ac .DecodeStream (_daad );if _cdgg !=nil {return nil ,_cdgg ;};_eddg ._cdagg =_caeff ;return _eddg ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_geeeb PdfModel ;_cgfee _ac .PdfObject ;};func (_fgdeg *PdfReader )newPdfAcroFormFromDict (_cecbe *_ac .PdfIndirectObject ,_ecbed *_ac .PdfObjectDictionary )(*PdfAcroForm ,error ){_edgf :=NewPdfAcroForm ();if _cecbe !=nil {_edgf ._fccb =_cecbe ;
_cecbe .PdfObject =_ac .MakeDict ();};if _ccbce :=_ecbed .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ccbce !=nil &&!_ac .IsNullObject (_ccbce ){_dddca ,_bfgca :=_ac .GetArray (_ccbce );if !_bfgca {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ccbce );
};var _gdea []*PdfField ;for _ ,_feecf :=range _dddca .Elements (){_geddg ,_adce :=_ac .GetIndirect (_feecf );if !_adce {if _ ,_egcd :=_feecf .(*_ac .PdfObjectNull );_egcd {_da .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_da .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_feecf );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_afcgff ,_abegaa :=_fgdeg .newPdfFieldFromIndirectObject (_geddg ,nil );
if _abegaa !=nil {return nil ,_abegaa ;};_da .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_afcgff );_gdea =append (_gdea ,_afcgff );};_edgf .Fields =&_gdea ;};if _bbec :=_ecbed .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bbec !=nil {_ffada ,_gacg :=_ac .GetBool (_bbec );if _gacg {_edgf .NeedAppearances =_ffada ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bbec );
};};if _dabb :=_ecbed .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dabb !=nil {_adbge ,_gcfda :=_ac .GetInt (_dabb );if _gcfda {_edgf .SigFlags =_adbge ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dabb );
};};if _bcba :=_ecbed .Get ("\u0043\u004f");_bcba !=nil {_dcabd ,_dadac :=_ac .GetArray (_bcba );if _dadac {_edgf .CO =_dcabd ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bcba );
};};if _fdgc :=_ecbed .Get ("\u0044\u0052");_fdgc !=nil {if _faefe ,_dedae :=_ac .GetDict (_fdgc );_dedae {_abbae ,_bgdd :=NewPdfPageResourcesFromDict (_faefe );if _bgdd !=nil {_da .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bgdd );
return nil ,_bgdd ;};_edgf .DR =_abbae ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdgc );};};if _ccded :=_ecbed .Get ("\u0044\u0041");
_ccded !=nil {_aagbc ,_ddge :=_ac .GetString (_ccded );if _ddge {_edgf .DA =_aagbc ;}else {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccded );
};};if _deafb :=_ecbed .Get ("\u0051");_deafb !=nil {_gabc ,_bgfbd :=_ac .GetInt (_deafb );if _bgfbd {_edgf .Q =_gabc ;}else {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_deafb );
};};if _dfdbg :=_ecbed .Get ("\u0058\u0046\u0041");_dfdbg !=nil {_edgf .XFA =_dfdbg ;};if _efgb :=_ecbed .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_efgb !=nil {_edgf .ADBEEchoSign =_efgb ;};_edgf .ToPdfObject ();
return _edgf ,nil ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _dg .Time ;ModTime _dg .Time ;};

// AllFields returns a flattened list of all fields in the form.
func (_ebea *PdfAcroForm )AllFields ()[]*PdfField {if _ebea ==nil {return nil ;};var _aefg []*PdfField ;if _ebea .Fields !=nil {for _ ,_fadce :=range *_ebea .Fields {_aefg =append (_aefg ,_daede (_fadce )...);};};return _aefg ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ac .PdfObject ;Volume _ac .PdfObject ;Synchronous _ac .PdfObject ;Repeat _ac .PdfObject ;Mix _ac .PdfObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bebec *PdfOutlineItem )ToPdfObject ()_ac .PdfObject {_bacfc :=_bebec ._gbdgg ;_dafac :=_bacfc .PdfObject .(*_ac .PdfObjectDictionary );_dafac .Set ("\u0054\u0069\u0074l\u0065",_bebec .Title );if _bebec .A !=nil {_dafac .Set ("\u0041",_bebec .A );
};if _egage :=_dafac .Get ("\u0053\u0045");_egage !=nil {_dafac .Remove ("\u0053\u0045");};if _bebec .C !=nil {_dafac .Set ("\u0043",_bebec .C );};if _bebec .Dest !=nil {_dafac .Set ("\u0044\u0065\u0073\u0074",_bebec .Dest );};if _bebec .F !=nil {_dafac .Set ("\u0046",_bebec .F );
};if _bebec .Count !=nil {_dafac .Set ("\u0043\u006f\u0075n\u0074",_ac .MakeInteger (*_bebec .Count ));};if _bebec .Next !=nil {_dafac .Set ("\u004e\u0065\u0078\u0074",_bebec .Next .ToPdfObject ());};if _bebec .First !=nil {_dafac .Set ("\u0046\u0069\u0072s\u0074",_bebec .First .ToPdfObject ());
};if _bebec .Prev !=nil {_dafac .Set ("\u0050\u0072\u0065\u0076",_bebec .Prev .GetContext ().GetContainingPdfObject ());};if _bebec .Last !=nil {_dafac .Set ("\u004c\u0061\u0073\u0074",_bebec .Last .GetContext ().GetContainingPdfObject ());};if _bebec .Parent !=nil {_dafac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bebec .Parent .GetContext ().GetContainingPdfObject ());
};return _bacfc ;};

// Add appends an outline item as a child of the current outline item.
func (_dacdg *OutlineItem )Add (item *OutlineItem ){_dacdg .Entries =append (_dacdg .Entries ,item )};

// ToPdfObject converts the K dictionary to a PDF object.
func (_gcgce *KDict )ToPdfObject ()_ac .PdfObject {_gabba :=_ac .MakeDict ();if _gcgce .ID !=nil {_gabba .Set ("\u0049\u0044",_gcgce .ID );};if _gcgce .K !=nil {_gabba .Set ("\u004b",_gcgce .K );}else if len (_gcgce ._ecge )> 0{if len (_gcgce ._ecge )==1{_gcgce .K =_gcgce ._ecge [0].ToPdfObject ();
}else {_gfdbd :=_ac .MakeArray ();for _ ,_fdaa :=range _gcgce ._ecge {_gfdbd .Append (_fdaa .ToPdfObject ());};_gcgce .K =_gfdbd ;};_gabba .Set ("\u004b",_gcgce .K );};if _gcgce .S !=nil {_gabba .Set ("\u0053",_gcgce .S );};if _gcgce .P !=nil {_gabba .Set ("\u0050",_gcgce .P );
};if _gcgce .Pg !=nil {_gabba .Set ("\u0050\u0067",_gcgce .Pg );};if _gcgce .C !=nil {_gabba .Set ("\u0043",_gcgce .C );};if _gcgce .R !=nil {_gabba .Set ("\u0052",_gcgce .R );};if _gcgce .T !=nil {_gabba .Set ("\u0054",_gcgce .T );};if _gcgce .Lang !=nil {_gabba .Set ("\u004c\u0061\u006e\u0067",_gcgce .Lang );
};if _gcgce .Alt !=nil {_gabba .Set ("\u0041\u006c\u0074",_gcgce .Alt );};if _gcgce .E !=nil {_gabba .Set ("\u0045",_gcgce .E );};if _gcgce .A !=nil {_gabba .Set ("\u0041",_gcgce .A );}else if _gcgce ._dgef !=nil {_cgbee :=_ac .MakeArrayFromFloats ([]float64 {_gcgce ._dgef .Llx ,_gcgce ._dgef .Lly ,_gcgce ._dgef .Urx ,_gcgce ._dgef .Ury });
_dadff :=_ac .MakeDict ();_dadff .Set ("\u0042\u0042\u006f\u0078",_cgbee );_dadff .Set ("\u004f",_ac .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_gabba .Set ("\u0041",_ac .MakeIndirectObject (_dadff ));};if _gcgce .ActualText !=nil {_gabba .Set ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074",_gcgce .ActualText );
};if _gcgce .E !=nil {_gabba .Set ("\u0045",_gcgce .E );};if _gcgce .Alt !=nil {_gabba .Set ("\u0041\u006c\u0074",_gcgce .Alt );};return _gabba ;};

// PartialName returns the partial name of the field.
func (_cecb *PdfField )PartialName ()string {_gedbb :="";if _cecb .T !=nil {_gedbb =_cecb .T .Decoded ();}else {_da .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gedbb ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ddbb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ac .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ccagd []_ac .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bfbf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_fccdc *PdfPage )Duplicate ()*PdfPage {_ccaec :=*_fccdc ;_ccaec ._gbbf =_ac .MakeDict ();_ccaec ._gbdca =_ac .MakeIndirectObject (_ccaec ._gbbf );_ccaec ._fefgc =*_ccaec ._gbbf ;return &_ccaec ;};

// G returns the value of the green component of the color.
func (_eeeg *PdfColorDeviceRGB )G ()float64 {return _eeeg [1]};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cabfg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cabfg .NumInputs {_da .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_aec .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cabfg ._cgada ==nil {_dcade :=_cabfg .processSamples ();if _dcade !=nil {return nil ,_dcade ;};};_cece :=_cabfg .Encode ;if _cece ==nil {_cece =[]float64 {};
for _fbace :=0;_fbace < len (_cabfg .Size );_fbace ++{_cece =append (_cece ,0);_cece =append (_cece ,float64 (_cabfg .Size [_fbace ]-1));};};_eaabf :=_cabfg .Decode ;if _eaabf ==nil {_eaabf =_cabfg .Range ;};_egbac :=make ([]int ,len (x ));for _cbgcg :=0;
_cbgcg < len (x );_cbgcg ++{_bgfg :=x [_cbgcg ];_gebge :=_fe .Min (_fe .Max (_bgfg ,_cabfg .Domain [2*_cbgcg ]),_cabfg .Domain [2*_cbgcg +1]);_feae :=_cf .LinearInterpolate (_gebge ,_cabfg .Domain [2*_cbgcg ],_cabfg .Domain [2*_cbgcg +1],_cece [2*_cbgcg ],_cece [2*_cbgcg +1]);
_gacc :=_fe .Min (_fe .Max (_feae ,0),float64 (_cabfg .Size [_cbgcg ]-1));_fgbff :=int (_fe .Floor (_gacc +0.5));if _fgbff < 0{_fgbff =0;}else if _fgbff > _cabfg .Size [_cbgcg ]{_fgbff =_cabfg .Size [_cbgcg ]-1;};_egbac [_cbgcg ]=_fgbff ;};_bbbb :=_egbac [0];
for _ffedf :=1;_ffedf < _cabfg .NumInputs ;_ffedf ++{_adca :=_egbac [_ffedf ];for _dbee :=0;_dbee < _ffedf ;_dbee ++{_adca *=_cabfg .Size [_dbee ];};_bbbb +=_adca ;};_bbbb *=_cabfg .NumOutputs ;var _agdb []float64 ;for _fedb :=0;_fedb < _cabfg .NumOutputs ;
_fedb ++{_gbcde :=_bbbb +_fedb ;if _gbcde >=len (_cabfg ._cgada ){_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_aeae :=_cabfg ._cgada [_gbcde ];_ddedc :=_cf .LinearInterpolate (float64 (_aeae ),0,_fe .Pow (2,float64 (_cabfg .BitsPerSample )),_eaabf [2*_fedb ],_eaabf [2*_fedb +1]);_feagg :=_fe .Min (_fe .Max (_ddedc ,_cabfg .Range [2*_fedb ]),_cabfg .Range [2*_fedb +1]);
_agdb =append (_agdb ,_feagg );};return _agdb ,nil ;};

// GetRefObject returns the reference object of the KValue.
func (_aabfb *KValue )GetRefObject ()_ac .PdfObject {return _aabfb ._ebfa };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bdc :=&PdfAnnotation {};_bdc ._add =_ac .MakeIndirectObject (_ac .MakeDict ());return _bdc ;};func (_ecfde *PdfReader )newPdfSignatureReferenceFromDict (_dbbe *_ac .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _ececf ,_acffg :=_ecfde ._edabf .GetModelFromPrimitive (_dbbe ).(*PdfSignatureReference );
_acffg {return _ececf ,nil ;};_faeec :=&PdfSignatureReference {_egaae :_dbbe ,Data :_dbbe .Get ("\u0044\u0061\u0074\u0061")};var _ecgb bool ;_faeec .Type ,_ =_ac .GetName (_dbbe .Get ("\u0054\u0079\u0070\u0065"));_faeec .TransformMethod ,_ecgb =_ac .GetName (_dbbe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ecgb {_da .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_faeec .TransformParams ,_ =_ac .GetDict (_dbbe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_faeec .DigestMethod ,_ =_ac .GetName (_dbbe .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _faeec ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _dbcd (_dcad *_ac .PdfIndirectObject ,_fdcg *_ac .PdfObjectDictionary )(*DSS ,error ){if _dcad ==nil {_dcad =_ac .MakeIndirectObject (nil );};_dcad .PdfObject =_ac .MakeDict ();_agcc :=map[string ]*VRI {};if _dbdfb ,_fcgc :=_ac .GetDict (_fdcg .Get ("\u0056\u0052\u0049"));
_fcgc {for _ ,_aafg :=range _dbdfb .Keys (){if _bbacf ,_egdd :=_ac .GetDict (_dbdfb .Get (_aafg ));_egdd {_agcc [_fgg .ToUpper (_aafg .String ())]=_abab (_bbacf );};};};return &DSS {Certs :_acdgf (_fdcg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_acdgf (_fdcg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_acdgf (_fdcg .Get ("\u0043\u0052\u004c\u0073")),VRI :_agcc ,_feea :_dcad },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gafd *PdfAnnotationCircle )ToPdfObject ()_ac .PdfObject {_gafd .PdfAnnotation .ToPdfObject ();_faace :=_gafd ._add ;_daca :=_faace .PdfObject .(*_ac .PdfObjectDictionary );_gafd .PdfAnnotationMarkup .appendToPdfDictionary (_daca );_daca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_daca .SetIfNotNil ("\u0042\u0053",_gafd .BS );_daca .SetIfNotNil ("\u0049\u0043",_gafd .IC );_daca .SetIfNotNil ("\u0042\u0045",_gafd .BE );_daca .SetIfNotNil ("\u0052\u0044",_gafd .RD );return _faace ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cfbb *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cfbb .Type ,_cfbb .P ,_cfbb .V );};

// A returns the value of the A component of the color.
func (_beed *PdfColorLab )A ()float64 {return _beed [1]};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_fadf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_beff :=NewPdfAction ();_bbd :=&PdfActionNamed {};_bbd .PdfAction =_beff ;_beff .SetContext (_bbd );return _bbd ;};func (_bbdgc *PdfReader )newPdfFieldFromIndirectObject (_gcgab *_ac .PdfIndirectObject ,_ggbdb *PdfField )(*PdfField ,error ){if _dgaa ,_agcd :=_bbdgc ._edabf .GetModelFromPrimitive (_gcgab ).(*PdfField );
_agcd {return _dgaa ,nil ;};_gcdfd ,_aefa :=_ac .GetDict (_gcgab );if !_aefa {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gcgbf :=NewPdfField ();_gcgbf ._fggde =_gcgab ;_gcgbf ._fggde .PdfObject =_gcdfd ;if _bcaad ,_bfef :=_ac .GetName (_gcdfd .Get ("\u0046\u0054"));_bfef {_gcgbf .FT =_bcaad ;};if _ggbdb !=nil {_gcgbf .Parent =_ggbdb ;};_gcgbf .T ,_ =_gcdfd .Get ("\u0054").(*_ac .PdfObjectString );
_gcgbf .TU ,_ =_gcdfd .Get ("\u0054\u0055").(*_ac .PdfObjectString );_gcgbf .TM ,_ =_gcdfd .Get ("\u0054\u004d").(*_ac .PdfObjectString );_gcgbf .Ff ,_ =_gcdfd .Get ("\u0046\u0066").(*_ac .PdfObjectInteger );_gcgbf .V =_gcdfd .Get ("\u0056");_gcgbf .DV =_gcdfd .Get ("\u0044\u0056");
_gcgbf .AA =_gcdfd .Get ("\u0041\u0041");if DA :=_gcdfd .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_ac .GetString (DA );_gcgbf .VariableText =&VariableText {DA :DA };Q ,_ :=_gcdfd .Get ("\u0051").(*_ac .PdfObjectInteger );DS ,_ :=_gcdfd .Get ("\u0044\u0053").(*_ac .PdfObjectString );
RV :=_gcdfd .Get ("\u0052\u0056");_gcgbf .VariableText .Q =Q ;_gcgbf .VariableText .DS =DS ;_gcgbf .VariableText .RV =RV ;};_dada :=_gcgbf .FT ;if _dada ==nil &&_ggbdb !=nil {_dada =_ggbdb .FT ;};if _dada !=nil {switch *_dada {case "\u0054\u0078":_deda ,_cddf :=_agec (_gcdfd );
if _cddf !=nil {return nil ,_cddf ;};_deda .PdfField =_gcgbf ;_gcgbf ._ffbgg =_deda ;case "\u0043\u0068":_bdgf ,_gfgb :=_bfbbg (_gcdfd );if _gfgb !=nil {return nil ,_gfgb ;};_bdgf .PdfField =_gcgbf ;_gcgbf ._ffbgg =_bdgf ;case "\u0042\u0074\u006e":_egad ,_afaf :=_gfge (_gcdfd );
if _afaf !=nil {return nil ,_afaf ;};_egad .PdfField =_gcgbf ;_gcgbf ._ffbgg =_egad ;case "\u0053\u0069\u0067":_edbcf ,_edde :=_bbdgc .newPdfFieldSignatureFromDict (_gcdfd );if _edde !=nil {return nil ,_edde ;};_edbcf .PdfField =_gcgbf ;_gcgbf ._ffbgg =_edbcf ;
default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gcgbf .FT );return nil ,_aec .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bdef ,_beac :=_ac .GetName (_gcdfd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_beac {if *_bdef =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gaeg ,_bgda :=_bbdgc .newPdfAnnotationFromIndirectObject (_gcgab );if _bgda !=nil {return nil ,_bgda ;
};_bdacd ,_gcba :=_gaeg .GetContext ().(*PdfAnnotationWidget );if !_gcba {return nil ,_aec .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bdacd ._fbe =_gcgbf ;_bdacd .Parent =_gcgbf ._fggde ;
_gcgbf .Annotations =append (_gcgbf .Annotations ,_bdacd );return _gcgbf ,nil ;};};_fege :=true ;if _aadecb ,_eaaec :=_ac .GetArray (_gcdfd .Get ("\u004b\u0069\u0064\u0073"));_eaaec {_aacb :=make ([]*_ac .PdfIndirectObject ,0,_aadecb .Len ());for _ ,_cgeg :=range _aadecb .Elements (){_fdbb ,_cbae :=_ac .GetIndirect (_cgeg );
if !_cbae {_bdagd ,_egedg :=_ac .GetStream (_cgeg );if _egedg &&_bdagd .PdfObjectDictionary !=nil {_aaffa ,_edgbc :=_ac .GetNameVal (_bdagd .Get ("\u0054\u0079\u0070\u0065"));if _edgbc &&_aaffa =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_da .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_aec .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fdfa ,_fgfd :=_ac .GetDict (_fdbb );
if !_fgfd {return nil ,ErrTypeCheck ;};if _fege {_fege =!_ddg (_fdfa );};_aacb =append (_aacb ,_fdbb );};for _ ,_aggfe :=range _aacb {if _fege {_fefc ,_abdg :=_bbdgc .newPdfAnnotationFromIndirectObject (_aggfe );if _abdg !=nil {_da .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_abdg );
return nil ,_abdg ;};_gdfd ,_edba :=_fefc ._dbaec .(*PdfAnnotationWidget );if !_edba {return nil ,ErrTypeCheck ;};_gdfd ._fbe =_gcgbf ;_gcgbf .Annotations =append (_gcgbf .Annotations ,_gdfd );}else {_cdfc ,_fdebf :=_bbdgc .newPdfFieldFromIndirectObject (_aggfe ,_gcgbf );
if _fdebf !=nil {_da .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fdebf );return nil ,_fdebf ;};_gcgbf .Kids =append (_gcgbf .Kids ,_cdfc );
};};};return _gcgbf ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bdec *PdfAnnotationWidget )Field ()*PdfField {return _bdec ._fbe };func _bdfac (_bgebb _ac .PdfObject )(*PdfPattern ,error ){_ageea :=&PdfPattern {};var _cgfec *_ac .PdfObjectDictionary ;if _fdcaa ,_gbagd :=_ac .GetIndirect (_bgebb );_gbagd {_ageea ._cgfee =_fdcaa ;
_fceef ,_ebeed :=_fdcaa .PdfObject .(*_ac .PdfObjectDictionary );if !_ebeed {_da .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fdcaa .PdfObject );
return nil ,_ac .ErrTypeError ;};_cgfec =_fceef ;}else if _fcbded ,_aegfdc :=_ac .GetStream (_bgebb );_aegfdc {_ageea ._cgfee =_fcbded ;_cgfec =_fcbded .PdfObjectDictionary ;}else {_da .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_bgebb );
return nil ,_ac .ErrTypeError ;};_bcagf :=_cgfec .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bcagf ==nil {_da .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gddf ,_aebdf :=_bcagf .(*_ac .PdfObjectInteger );if !_aebdf {_da .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bcagf );
return nil ,_ac .ErrTypeError ;};if *_gddf !=1&&*_gddf !=2{_da .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gddf );return nil ,_ac .ErrRangeError ;
};_ageea .PatternType =int64 (*_gddf );switch *_gddf {case 1:_geed ,_dbcgf :=_ffbfg (_cgfec );if _dbcgf !=nil {return nil ,_dbcgf ;};_geed .PdfPattern =_ageea ;_ageea ._geeeb =_geed ;return _ageea ,nil ;case 2:_fedee ,_agged :=_gddee (_cgfec );if _agged !=nil {return nil ,_agged ;
};_fedee .PdfPattern =_ageea ;_ageea ._geeeb =_fedee ;return _ageea ,nil ;};return nil ,_aec .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_faaed *modelManager )GetPrimitiveFromModel (model PdfModel )_ac .PdfObject {_faaed ._eeda .RLock ();defer _faaed ._eeda .RUnlock ();_gefec ,_cbgd :=_faaed ._cegdc [model ];if !_cbgd {return nil ;};return _gefec ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_acagf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_acagf .ToPdfOutline ().PdfOutlineTreeNode ;};var _abfce =_f .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_fbca *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_gggc ,_ ,_fbad :=_fbca .CharcodesToUnicodeWithStats (_fbca .BytesToCharcodes (data ));_defa :=_cd .ExpandLigatures (_gggc );return _defa ,_gg .RuneCountInString (_defa ),_fbad ;
};func (_gfcad *PdfWriter )writeObjects (){_da .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gfcad ._beggg ));_gfcad ._dfbbef =make (map[int ]crossReference );_gfcad ._dfbbef [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _gfcad ._dccaf .ObjectMap !=nil {for _edbabf ,_ccade :=range _gfcad ._dccaf .ObjectMap {if _edbabf ==0{continue ;};if _ccade .XType ==_ac .XrefTypeObjectStream {_aedfg :=crossReference {Type :2,ObjectNumber :_ccade .OsObjNumber ,Index :_ccade .OsObjIndex };
_gfcad ._dfbbef [_edbabf ]=_aedfg ;};if _ccade .XType ==_ac .XrefTypeTableEntry {_cfegde :=crossReference {Type :1,ObjectNumber :_ccade .ObjectNumber ,Offset :_ccade .Offset };_gfcad ._dfbbef [_edbabf ]=_cfegde ;};};};};

// SetLocation sets the `Location` field of the signature.
func (_cacee *PdfSignature )SetLocation (location string ){_cacee .Location =_ac .MakeEncodedString (location ,true );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_ccaaa *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_ebbb *PdfReader )newPdfAnnotationSquareFromDict (_gegc *_ac .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dbgf :=PdfAnnotationSquare {};
_gffb ,_eaag :=_ebbb .newPdfAnnotationMarkupFromDict (_gegc );if _eaag !=nil {return nil ,_eaag ;};_dbgf .PdfAnnotationMarkup =_gffb ;_dbgf .BS =_gegc .Get ("\u0042\u0053");_dbgf .IC =_gegc .Get ("\u0049\u0043");_dbgf .BE =_gegc .Get ("\u0042\u0045");_dbgf .RD =_gegc .Get ("\u0052\u0044");
return &_dbgf ,nil ;};

// AddChild adds a child object.
func (_ecbge *KDict )AddChild (kv *KValue ){_ecbge ._ecge =append (_ecbge ._ecge ,kv )};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_eeeaa *PdfReader )GetCatalogMetadata ()(_ac .PdfObject ,bool ){if _eeeaa ._dfae ==nil {return nil ,false ;};_efcf :=_eeeaa ._dfae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _efcf ,_efcf !=nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_dbecg *CompliancePdfReader )error ;};func (_ebac *LTV )validateSig (_adbf *PdfSignature )error {if _adbf ==nil ||_adbf .Contents ==nil ||len (_adbf .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_adbf );
};return nil ;};func _afdgf (_adgec *_ac .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bebgc :=PdfShadingType3 {};_egbfg :=_adgec .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _egbfg ==nil {_da .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fcdff ,_gcbab :=_egbfg .(*_ac .PdfObjectArray );if !_gcbab {_da .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egbfg );
return nil ,_ac .ErrTypeError ;};if _fcdff .Len ()!=6{_da .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fcdff .Len ());return nil ,ErrInvalidAttribute ;
};_bebgc .Coords =_fcdff ;if _dacca :=_adgec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dacca !=nil {_dacca =_ac .TraceToDirectObject (_dacca );_fagcb ,_dcdab :=_dacca .(*_ac .PdfObjectArray );if !_dcdab {_da .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dacca );
return nil ,_ac .ErrTypeError ;};_bebgc .Domain =_fagcb ;};_egbfg =_adgec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _egbfg ==nil {_da .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bebgc .Function =[]PdfFunction {};if _fddc ,_edfgb :=_egbfg .(*_ac .PdfObjectArray );_edfgb {for _ ,_faaae :=range _fddc .Elements (){_aeccc ,_dgdac :=_fdfgf (_faaae );if _dgdac !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgdac );
return nil ,_dgdac ;};_bebgc .Function =append (_bebgc .Function ,_aeccc );};}else {_dafca ,_bcccb :=_fdfgf (_egbfg );if _bcccb !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcccb );
return nil ,_bcccb ;};_bebgc .Function =append (_bebgc .Function ,_dafca );};if _dcfb :=_adgec .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dcfb !=nil {_dcfb =_ac .TraceToDirectObject (_dcfb );_gbgfa ,_gddba :=_dcfb .(*_ac .PdfObjectArray );if !_gddba {_da .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcfb );
return nil ,_ac .ErrTypeError ;};if _gbgfa .Len ()!=2{_da .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbgfa .Len ());return nil ,ErrInvalidAttribute ;
};_bebgc .Extend =_gbgfa ;};return &_bebgc ,nil ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_ac .PdfObjectString ;Q *_ac .PdfObjectInteger ;DS *_ac .PdfObjectString ;RV _ac .PdfObject ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ebafe *PdfWriter )SetNameDictionary (names _ac .PdfObject )error {if names ==nil {return nil ;};_ebafe ._gecfa =_cgfg (names );_da .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_ebafe ._cgebe .Set ("\u004e\u0061\u006de\u0073",names );return _ebafe .addObjects (names );};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dcabgd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _agebe []*PdfField ;_fbbbd :=map[*_ac .PdfIndirectObject ]struct{}{};for _ ,_acbd :=range _dcabgd .PageList {_gfccf ,_gaadb :=_acbd .GetAnnotations ();if _gaadb !=nil {return _gaadb ;
};for _ ,_daaga :=range _gfccf {var _bageg *PdfField ;switch _dgcaba :=_daaga .GetContext ().(type ){case *PdfAnnotationWidget :if _dgcaba ._fbe !=nil {_bageg =_dgcaba ._fbe ;break ;};if _ddeeg ,_bfccdg :=_ac .GetIndirect (_dgcaba .Parent );_bfccdg {_bageg ,_gaadb =_dcabgd .newPdfFieldFromIndirectObject (_ddeeg ,nil );
if _gaadb ==nil {break ;};_da .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ddeeg ,_gaadb );
};if _dgcaba ._add !=nil {_bageg ,_gaadb =_dcabgd .newPdfFieldFromIndirectObject (_dgcaba ._add ,nil );if _gaadb ==nil {break ;};_da .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dgcaba ._add ,_gaadb );
};};if _bageg ==nil {continue ;};if _ ,_gegbb :=_fbbbd [_bageg ._fggde ];_gegbb {continue ;};_fbbbd [_bageg ._fggde ]=struct{}{};_agebe =append (_agebe ,_bageg );};};if len (_agebe )==0{return nil ;};if _dcabgd .AcroForm ==nil {_dcabgd .AcroForm =NewPdfAcroForm ();
};_dcabgd .AcroForm .Fields =&_agebe ;return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cfba *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccec ,_gdgf :=color .(*PdfColorPattern );if !_gdgf {_da .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ccec .Color ==nil {return color ,nil ;};if _cfba .UnderlyingCS ==nil {return nil ,_aec .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _cfba .UnderlyingCS .ColorToRGB (_ccec .Color );
};

// ToPdfObject returns the PDF representation of the function.
func (_dfbca *PdfFunctionType4 )ToPdfObject ()_ac .PdfObject {_beffb :=_dfbca ._cdcff ;if _beffb ==nil {_dfbca ._cdcff =&_ac .PdfObjectStream {};_beffb =_dfbca ._cdcff ;};_gfda :=_ac .MakeDict ();_gfda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ac .MakeInteger (4));
_cgcg :=&_ac .PdfObjectArray {};for _ ,_fcba :=range _dfbca .Domain {_cgcg .Append (_ac .MakeFloat (_fcba ));};_gfda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgcg );_bbaaeb :=&_ac .PdfObjectArray {};for _ ,_defea :=range _dfbca .Range {_bbaaeb .Append (_ac .MakeFloat (_defea ));
};_gfda .Set ("\u0052\u0061\u006eg\u0065",_bbaaeb );if _dfbca ._eced ==nil &&_dfbca .Program !=nil {_dfbca ._eced =[]byte (_dfbca .Program .String ());};_gfda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_dfbca ._eced ))));
_beffb .Stream =_dfbca ._eced ;_beffb .PdfObjectDictionary =_gfda ;return _beffb ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bgada *PdfWriter )SetPageLabels (pageLabels _ac .PdfObject )error {if pageLabels ==nil {return nil ;};_da .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bgada ._cgebe .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bgada .addObjects (pageLabels );};func _eedee (_agfa *_ac .PdfObjectArray )(float64 ,error ){_aecgbg ,_fgabf :=_agfa .ToFloat64Array ();if _fgabf !=nil {_da .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfa ,_fgabf );
};switch len (_aecgbg ){case 1:return _aecgbg [0],nil ;case 3:_cdccfb :=PdfColorspaceDeviceRGB {};_addaf ,_dbeac :=_cdccfb .ColorFromFloats (_aecgbg );if _dbeac !=nil {return 0.0,_dbeac ;};return _addaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ebced :=PdfColorspaceDeviceCMYK {};
_acgfdf ,_bbbae :=_ebced .ColorFromFloats (_aecgbg );if _bbbae !=nil {return 0.0,_bbbae ;};_edffd ,_bbbae :=_ebced .ColorToRGB (_acgfdf .(*PdfColorDeviceCMYK ));if _bbbae !=nil {return 0.0,_bbbae ;};return _edffd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_fgabf =_aec .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_da .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfa ,_fgabf );
return 0.0,_fgabf ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ggd :=NewPdfAction ();_dd :=&PdfActionSound {};_dd .PdfAction =_ggd ;_ggd .SetContext (_dd );return _dd ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_afcaa *PdfOutputIntent )GetContainingPdfObject ()_ac .PdfObject {return _afcaa ._effaa };func (_dgad *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dgad ._ecebe .GetCrypter ()!=nil &&!_dgad ._ecebe .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aebcg :=_dgad ._dfae ;_gbdbd :=_aebcg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gbdbd ==nil {return nil ,nil ;};_gbegc ,_cdbec :=_ac .GetIndirect (_gbdbd );_gbdbd =_ac .TraceToDirectObject (_gbdbd );if _ac .IsNullObject (_gbdbd ){_da .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gegcge ,_adbea :=_ac .GetDict (_gbdbd );if !_adbea {_da .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gbdbd );_da .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _dgad ._bfaga .RelaxedMode {_da .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gbdbd );};_da .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_da .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dgad ._bacfb {_cdgac :=_dgad .traverseObjectData (_gegcge );
if _cdgac !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cdgac );
return nil ,_cdgac ;};};_dbaee ,_dcce :=_dgad .newPdfAcroFormFromDict (_gbegc ,_gegcge );if _dcce !=nil {return nil ,_dcce ;};_dbaee ._egbgc =!_cdbec ;return _dbaee ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ac .PdfObject ;T3DV _ac .PdfObject ;T3DA _ac .PdfObject ;T3DI _ac .PdfObject ;T3DB _ac .PdfObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_be *PdfAction )GetContext ()PdfModel {if _be ==nil {return nil ;};return _be ._df ;};

// SetCatalogLanguage sets the catalog language.
func (_cefdc *PdfWriter )SetCatalogLanguage (lang _ac .PdfObject )error {if lang ==nil {_cefdc ._cgebe .Remove ("\u004c\u0061\u006e\u0067");return nil ;};if _ ,_cbfb :=lang .(*_ac .PdfIndirectObject );_cbfb {_cefdc .addObject (lang );};_cefdc ._cgebe .Set ("\u004c\u0061\u006e\u0067",lang );
return nil ;};

// GetFillImage get attached model.Image in push button.
func (_ebgf *PdfFieldButton )GetFillImage ()*Image {if _ebgf .IsPush (){return _ebgf ._aefc ;};return nil ;};func (_acecc *pdfFontType0 )baseFields ()*fontCommon {return &_acecc .fontCommon };

// GetBorderWidth returns the border style's width.
func (_ebff *PdfBorderStyle )GetBorderWidth ()float64 {if _ebff .W ==nil {return 1;};return *_ebff .W ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_edc :=NewPdfAction ();_bae :=&PdfActionSubmitForm {};_bae .PdfAction =_edc ;_edc .SetContext (_bae );return _bae ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cc .ReadSeeker )(*PdfFont ,error ){_bfbbb ,_cfaca :=_cc .ReadAll (r );if _cfaca !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cfaca );
return nil ,_cfaca ;};_gfcd ,_cfaca :=_bd .TtfParse (_ag .NewReader (_bfbbb ));if _cfaca !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_cfaca );
return nil ,_cfaca ;};_cgad :=&pdfCIDFontType2 {fontCommon :fontCommon {_bacd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ac .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gfcd .Widths )<=0{return nil ,_aec .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_caefc :=1000.0/float64 (_gfcd .UnitsPerEm );_egga :=_caefc *float64 (_gfcd .Widths [0]);_ceba :=make (map[rune ]int );_fffc :=make (map[_bd .GID ]int );_fcgf :=_bd .GID (len (_gfcd .Widths ));for _eefff ,_geca :=range _gfcd .Chars {if _geca > _fcgf -1{continue ;
};_bdeaa :=int (_caefc *float64 (_gfcd .Widths [_geca ]));_ceba [_eefff ]=_bdeaa ;_fffc [_geca ]=_bdeaa ;};_cgad ._cadgd =_ceba ;_cgad .DW =_ac .MakeInteger (int64 (_egga ));_cadfb :=_bagd (_fffc ,uint16 (_fcgf ));_cgad .W =_ac .MakeIndirectObject (_cadfb );
_gdggf :=_ac .MakeDict ();_gdggf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ac .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gdggf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ac .MakeString ("\u0041\u0064\u006fb\u0065"));
_gdggf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ac .MakeInteger (0));_cgad .CIDSystemInfo =_gdggf ;_gfcc :=&PdfFontDescriptor {FontName :_ac .MakeName (_gfcd .PostScriptName ),Ascent :_ac .MakeFloat (_caefc *float64 (_gfcd .TypoAscender )),Descent :_ac .MakeFloat (_caefc *float64 (_gfcd .TypoDescender )),CapHeight :_ac .MakeFloat (_caefc *float64 (_gfcd .CapHeight )),FontBBox :_ac .MakeArrayFromFloats ([]float64 {_caefc *float64 (_gfcd .Xmin ),_caefc *float64 (_gfcd .Ymin ),_caefc *float64 (_gfcd .Xmax ),_caefc *float64 (_gfcd .Ymax )}),ItalicAngle :_ac .MakeFloat (_gfcd .ItalicAngle ),MissingWidth :_ac .MakeFloat (_egga )};
_dfdb ,_cfaca :=_ac .MakeStream (_bfbbb ,_ac .NewFlateEncoder ());if _cfaca !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cfaca );
return nil ,_cfaca ;};_dfdb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ac .MakeInteger (int64 (len (_bfbbb ))));_gfcc .FontFile2 =_dfdb ;if _gfcd .Bold {_gfcc .StemV =_ac .MakeInteger (120);}else {_gfcc .StemV =_ac .MakeInteger (70);
};_dageb :=_baeaa ;if _gfcd .IsFixedPitch {_dageb |=_fgagf ;};if _gfcd .ItalicAngle !=0{_dageb |=_cbggg ;};_gfcc .Flags =_ac .MakeInteger (int64 (_dageb ));_cgad ._cfca =_gfcd .PostScriptName ;_cgad ._gdgc =_gfcc ;_dfbda :=pdfFontType0 {fontCommon :fontCommon {_bacd :"\u0054\u0079\u0070e\u0030",_cfca :_gfcd .PostScriptName },DescendantFont :&PdfFont {_bcae :_cgad },Encoding :_ac .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fbaeda :_gfcd .NewEncoder ()};
if len (_gfcd .Chars )> 0{_agabb :=make (map[_adg .CharCode ]rune ,len (_gfcd .Chars ));for _bcbdb ,_egebbf :=range _gfcd .Chars {_cgebb :=_adg .CharCode (_egebbf );if _gggb ,_fefb :=_agabb [_cgebb ];!_fefb ||(_fefb &&_gggb > _bcbdb ){_agabb [_cgebb ]=_bcbdb ;
};};_dfbda ._eceed =_adg .NewToUnicodeCMap (_agabb );};_ddfce :=PdfFont {_bcae :&_dfbda };return &_ddfce ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ggf :=NewPdfAnnotation ();_bdac :=&PdfAnnotationMovie {};_bdac .PdfAnnotation =_ggf ;_ggf .SetContext (_bdac );return _bdac ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fgcbc *PdfWriter )SetDocInfo (info *PdfInfo ){_fgcbc .setDocInfo (info .ToPdfObject ())};func _bfaa (_geea *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_geea }};func _aecdb (_ddfag _ac .PdfObject )(*fontFile ,error ){_da .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ddfag );
_cfde :=&fontFile {};_ddfag =_ac .TraceToDirectObject (_ddfag );_ebbeg ,_caffe :=_ddfag .(*_ac .PdfObjectStream );if !_caffe {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ddfag );
return nil ,_ac .ErrTypeError ;};_acceg :=_ebbeg .PdfObjectDictionary ;_agbfd ,_edga :=_ac .DecodeStream (_ebbeg );if _edga !=nil {return nil ,_edga ;};_cgabc ,_caffe :=_ac .GetNameVal (_acceg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_caffe {_cfde ._ddbgb =_cgabc ;
if _cgabc =="\u0054\u0079\u0070\u0065\u0031\u0043"{_da .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_egebe ,_ :=_ac .GetIntVal (_acceg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_eecc ,_ :=_ac .GetIntVal (_acceg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _egebe > len (_agbfd ){_egebe =len (_agbfd );
};if _egebe +_eecc > len (_agbfd ){_eecc =len (_agbfd )-_egebe ;};_ffdcc :=_agbfd [:_egebe ];var _fgbaa []byte ;if _eecc > 0{_fgbaa =_agbfd [_egebe :_egebe +_eecc ];};if _egebe > 0&&_eecc > 0{_cbcf :=_cfde .loadFromSegments (_ffdcc ,_fgbaa );if _cbcf !=nil {return nil ,_cbcf ;
};};return _cfde ,nil ;};func (_ggbb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cbgeg []*PdfFieldSignature ;for _ ,_befgb :=range _ggbb .AllFields (){switch _abdcf :=_befgb .GetContext ().(type ){case *PdfFieldSignature :_fcced :=_abdcf ;
_cbgeg =append (_cbgeg ,_fcced );};};return _cbgeg ;};func (_edbge *PdfReader )buildOutlineTree (_addba _ac .PdfObject ,_gadbg *PdfOutlineTreeNode ,_dacad *PdfOutlineTreeNode ,_dfbee map[_ac .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dfbee ==nil {_dfbee =map[_ac .PdfObject ]struct{}{};
};_dfbee [_addba ]=struct{}{};_adegf ,_fagegd :=_addba .(*_ac .PdfIndirectObject );if !_fagegd {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_addba );
};_cdgdd ,_fdcgf :=_adegf .PdfObject .(*_ac .PdfObjectDictionary );if !_fdcgf {return nil ,nil ,_aec .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_da .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_cdgdd ,_adegf ,_adegf );
if _cdcfg :=_cdgdd .Get ("\u0054\u0069\u0074l\u0065");_cdcfg !=nil {_ccaag ,_gccef :=_edbge .newPdfOutlineItemFromIndirectObject (_adegf );if _gccef !=nil {return nil ,nil ,_gccef ;};_ccaag .Parent =_gadbg ;_ccaag .Prev =_dacad ;_ecdce :=_ac .ResolveReference (_cdgdd .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_adfb :=_dfbee [_ecdce ];_ecdce !=nil &&_ecdce !=_adegf &&!_adfb {if !_ac .IsNullObject (_ecdce ){_dgec ,_fedg ,_ddefg :=_edbge .buildOutlineTree (_ecdce ,&_ccaag .PdfOutlineTreeNode ,nil ,_dfbee );if _ddefg !=nil {_da .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ddefg );
}else {_ccaag .First =_dgec ;_ccaag .Last =_fedg ;};};};_dfdge :=_ac .ResolveReference (_cdgdd .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cebce :=_dfbee [_dfdge ];_dfdge !=nil &&_dfdge !=_adegf &&!_cebce {if !_ac .IsNullObject (_dfdge ){_dfbcc ,_afbfe ,_ffeaef :=_edbge .buildOutlineTree (_dfdge ,_gadbg ,&_ccaag .PdfOutlineTreeNode ,_dfbee );
if _ffeaef !=nil {_da .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ffeaef );
}else {_ccaag .Next =_dfbcc ;return &_ccaag .PdfOutlineTreeNode ,_afbfe ,nil ;};};};return &_ccaag .PdfOutlineTreeNode ,&_ccaag .PdfOutlineTreeNode ,nil ;};_abge ,_eagc :=_bfdag (_adegf );if _eagc !=nil {return nil ,nil ,_eagc ;};_abge .Parent =_gadbg ;
if _fbebb :=_cdgdd .Get ("\u0046\u0069\u0072s\u0074");_fbebb !=nil {_fbebb =_ac .ResolveReference (_fbebb );if _ ,_fcccde :=_dfbee [_fbebb ];_fbebb !=nil &&_fbebb !=_adegf &&!_fcccde {_addgfa :=_ac .TraceToDirectObject (_fbebb );if _ ,_egea :=_addgfa .(*_ac .PdfObjectNull );
!_egea &&_addgfa !=nil {_egegg ,_ccaff ,_gdec :=_edbge .buildOutlineTree (_fbebb ,&_abge .PdfOutlineTreeNode ,nil ,_dfbee );if _gdec !=nil {_da .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gdec );
}else {_abge .First =_egegg ;_abge .Last =_ccaff ;};};};};return &_abge .PdfOutlineTreeNode ,&_abge .PdfOutlineTreeNode ,nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ec .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_ac .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_ac .MakeInteger (int64 (permission )),V :_ac .MakeName ("\u0031\u002e\u0032")};
};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ac .PdfObject ;B _ac .PdfObject ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dagbf *PdfPageResources )AddExtGState (gsName _ac .PdfObjectName ,gsDict _ac .PdfObject )error {if _dagbf .ExtGState ==nil {_dagbf .ExtGState =_ac .MakeDict ();};_ggbda :=_dagbf .ExtGState ;_gdfcd ,_fabcg :=_ac .TraceToDirectObject (_ggbda ).(*_ac .PdfObjectDictionary );
if !_fabcg {_da .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ggbda ,_ac .TraceToDirectObject (_ggbda ));
return _ac .ErrTypeError ;};_gdfcd .Set (gsName ,gsDict );return nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bd .CharMetrics ;

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_facdg *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_facdg ._edeed =&hideWindowUI };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cfbab *VRI )ToPdfObject ()*_ac .PdfObjectDictionary {_caeaae :=_ac .MakeDict ();_caeaae .SetIfNotNil (_ac .PdfObjectName ("\u0043\u0065\u0072\u0074"),_cfda (_cfbab .Cert ));_caeaae .SetIfNotNil (_ac .PdfObjectName ("\u004f\u0043\u0053\u0050"),_cfda (_cfbab .OCSP ));
_caeaae .SetIfNotNil (_ac .PdfObjectName ("\u0043\u0052\u004c"),_cfda (_cfbab .CRL ));_caeaae .SetIfNotNil ("\u0054\u0055",_cfbab .TU );_caeaae .SetIfNotNil ("\u0054\u0053",_cfbab .TS );return _caeaae ;};func _fbcagc ()*Names {return &Names {_aedd :_ac .MakeIndirectObject (_ac .MakeDict ())}};


// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_bbbdf :=&PdfShadingType3 {};_bbbdf .PdfShading =&PdfShading {};_bbbdf .PdfShading ._affg =_ac .MakeIndirectObject (_ac .MakeDict ());_bbbdf .PdfShading ._gfcfg =_bbbdf ;return _bbbdf ;};

// SetRefObject sets the reference object for the KValue.
func (_bfdg *KValue )SetRefObject (refObject _ac .PdfObject ){_bfdg .Clear ();_bfdg ._ebfa =refObject };func (_faa *PdfReader )newPdfActionRenditionFromDict (_cfe *_ac .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cfe .Get ("\u0052"),AN :_cfe .Get ("\u0041\u004e"),OP :_cfe .Get ("\u004f\u0050"),JS :_cfe .Get ("\u004a\u0053")},nil ;
};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gegca *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gegca .flattenFieldsWithOpts (false ,appgen ,opts );};func (_bacee *PdfPage )loadFont (_eccd string )(*_ef .Font ,error ){_ddaa ,_afaag :=_fgge .ReadFile (_eccd );
if _afaag !=nil {return nil ,_afaag ;};_baagfa ,_afaag :=_efa .ParseFont (_ddaa );if _afaag !=nil {return nil ,_afaag ;};return _baagfa ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_bcea *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgb :=vals [0];if _edgb < 0.0||_edgb > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edgb );
return nil ,ErrColorOutOfRange ;};_afcdg :=vals [1];if _afcdg < 0.0||_afcdg > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afcdg );return nil ,ErrColorOutOfRange ;
};_gddg :=vals [2];if _gddg < 0.0||_gddg > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gddg );return nil ,ErrColorOutOfRange ;};_afdc :=vals [3];
if _afdc < 0.0||_afdc > 1.0{_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afdc );return nil ,ErrColorOutOfRange ;};_gfdc :=NewPdfColorDeviceCMYK (_edgb ,_afcdg ,_gddg ,_afdc );
return _gfdc ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bbaa :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bbaa ;};func _daabb (_gggaa []byte )([]byte ,error ){_daedg :=_cg .New ();if _ ,_gbaeg :=_cc .Copy (_daedg ,_ag .NewReader (_gggaa ));
_gbaeg !=nil {return nil ,_gbaeg ;};return _daedg .Sum (nil ),nil ;};func (_eegfb *PdfReader )buildNameNodes (_adcab *_ac .PdfIndirectObject ,_eaaga map[_ac .PdfObject ]struct{})error {if _adcab ==nil {return nil ;};if _ ,_efaea :=_eaaga [_adcab ];_efaea {_da .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_adcab .ObjectNumber );
return nil ;};_eaaga [_adcab ]=struct{}{};_agfcac ,_bgdgd :=_adcab .PdfObject .(*_ac .PdfObjectDictionary );if !_bgdgd {return _aec .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _eddda ,_fdacgf :=_ac .GetDict (_agfcac .Get ("\u0044\u0065\u0073t\u0073"));
_fdacgf {_eecda ,_ecddg :=_ac .GetArray (_eddda .Get ("\u004b\u0069\u0064\u0073"));if !_ecddg {return _aec .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_da .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_eecda );
for _cbfagf ,_dedcd :=range _eecda .Elements (){_bfga ,_bbbcg :=_ac .GetIndirect (_dedcd );if !_bbbcg {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_bfga );
return _aec .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_eecda .Set (_cbfagf ,_bfga );_bbfcg :=_eegfb .buildNameNodes (_bfga ,_eaaga );if _bbfcg !=nil {return _bbfcg ;
};};};if _fedgf ,_edcea :=_ac .GetDict (_agfcac );_edcea {if !_ac .IsNullObject (_fedgf .Get ("\u004b\u0069\u0064\u0073")){if _dadbd ,_ffdda :=_ac .GetArray (_fedgf .Get ("\u004b\u0069\u0064\u0073"));_ffdda {for _bbedc ,_bcbcf :=range _dadbd .Elements (){if _eaeaf ,_gbeca :=_ac .GetIndirect (_bcbcf );
_gbeca {_dadbd .Set (_bbedc ,_eaeaf );_gggfg :=_eegfb .buildNameNodes (_eaeaf ,_eaaga );if _gggfg !=nil {return _gggfg ;};};};};};};return nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gbebac :=PdfWriter {};_gbebac ._beeeeg =map[_ac .PdfObject ]struct{}{};_gbebac ._beggg =[]_ac .PdfObject {};_gbebac ._bafge =map[_ac .PdfObject ][]*_ac .PdfObjectDictionary {};_gbebac ._fbgccg =map[_ac .PdfObject ]struct{}{};
_gbebac ._ccabd .Major =1;_gbebac ._ccabd .Minor =3;_edcaa :=_ac .MakeDict ();_afbcb :=[]struct{_cbcbe _ac .PdfObjectName ;_adcfc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_afad ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_afgba ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_acgfda ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ebefdbd ()},{"\u0054\u0069\u0074l\u0065",_fgebd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_feccf ()}};
for _ ,_ebcfg :=range _afbcb {if _ebcfg ._adcfc !=""{_edcaa .Set (_ebcfg ._cbcbe ,_ac .MakeString (_ebcfg ._adcfc ));};};if _debb :=_deeg ();!_debb .IsZero (){if _cfbbe ,_agceeg :=NewPdfDateFromTime (_debb );_agceeg ==nil {_edcaa .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cfbbe .ToPdfObject ());
};};if _fbfbff :=_acbfg ();!_fbfbff .IsZero (){if _gbccb ,_cfgaa :=NewPdfDateFromTime (_fbfbff );_cfgaa ==nil {_edcaa .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gbccb .ToPdfObject ());};};_acgcbg :=_ac .PdfIndirectObject {};_acgcbg .PdfObject =_edcaa ;
_gbebac ._bcbcab =&_acgcbg ;_gbebac .addObject (&_acgcbg );_ggaegf :=_ac .PdfIndirectObject {};_aacdd :=_ac .MakeDict ();_aacdd .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ggaegf .PdfObject =_aacdd ;_gbebac ._aefaf =&_ggaegf ;
_gbebac .addObject (_gbebac ._aefaf );_dbad ,_cgbdbe :=_fgeae ("\u0077");if _cgbdbe !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbdbe );};_gbebac ._bfeed =_dbad ;_cceedc :=_ac .PdfIndirectObject {};_cgaacc :=_ac .MakeDict ();
_cgaacc .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0050\u0061\u0067e\u0073"));_ggcbg :=_ac .PdfObjectArray {};_cgaacc .Set ("\u004b\u0069\u0064\u0073",&_ggcbg );_cgaacc .Set ("\u0043\u006f\u0075n\u0074",_ac .MakeInteger (0));_cceedc .PdfObject =_cgaacc ;
_gbebac ._cafdf =&_cceedc ;_gbebac ._fbccc =map[_ac .PdfObject ]struct{}{};_gbebac ._afafc =[]*_ac .PdfIndirectObject {};_gbebac .addObject (_gbebac ._cafdf );_aacdd .Set ("\u0050\u0061\u0067e\u0073",&_cceedc );_gbebac ._cgebe =_aacdd ;_da .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ggaegf );
return _gbebac ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gfec *PdfColorspaceLab )ToPdfObject ()_ac .PdfObject {_efbb :=_ac .MakeArray ();_efbb .Append (_ac .MakeName ("\u004c\u0061\u0062"));_egdg :=_ac .MakeDict ();if _gfec .WhitePoint !=nil {_ebfd :=_ac .MakeArray (_ac .MakeFloat (_gfec .WhitePoint [0]),_ac .MakeFloat (_gfec .WhitePoint [1]),_ac .MakeFloat (_gfec .WhitePoint [2]));
_egdg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ebfd );}else {_da .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _gfec .BlackPoint !=nil {_dbea :=_ac .MakeArray (_ac .MakeFloat (_gfec .BlackPoint [0]),_ac .MakeFloat (_gfec .BlackPoint [1]),_ac .MakeFloat (_gfec .BlackPoint [2]));_egdg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dbea );
};if _gfec .Range !=nil {_gbfg :=_ac .MakeArray (_ac .MakeFloat (_gfec .Range [0]),_ac .MakeFloat (_gfec .Range [1]),_ac .MakeFloat (_gfec .Range [2]),_ac .MakeFloat (_gfec .Range [3]));_egdg .Set ("\u0052\u0061\u006eg\u0065",_gbfg );};_efbb .Append (_egdg );
if _gfec ._aecc !=nil {_gfec ._aecc .PdfObject =_efbb ;return _gfec ._aecc ;};return _efbb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ggddg *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_ggddg .Base .GetNumComponents ();_daed :=int (vals [0])*N ;
if _daed < 0||(_daed +N -1)>=len (_ggddg ._ccff ){_da .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_daed );return nil ,ErrColorOutOfRange ;};_gggf :=_ggddg ._ccff [_daed :_daed +N ];
var _fadff []float64 ;for _ ,_ebed :=range _gggf {_fadff =append (_fadff ,float64 (_ebed )/255.0);};_becg ,_daea :=_ggddg .Base .ColorFromFloats (_fadff );if _daea !=nil {return nil ,_daea ;};return _becg ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gacfc DefaultImageHandler )NewImageFromGoImage (goimg _gb .Image )(*Image ,error ){_gdag ,_dddcbf :=_cf .FromGoImage (goimg );if _dddcbf !=nil {return nil ,_dddcbf ;};_abegcc :=_bgage (_gdag .Base ());return &_abegcc ,nil ;};type pdfFontType3 struct{fontCommon ;
_gddcf *_ac .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _ac .PdfObject ;Encoding _ac .PdfObject ;FontBBox _ac .PdfObject ;FontMatrix _ac .PdfObject ;FirstChar _ac .PdfObject ;LastChar _ac .PdfObject ;Widths _ac .PdfObject ;Resources _ac .PdfObject ;_dfed map[_cd .CharCode ]float64 ;_gabg _cd .TextEncoder ;
};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_cafe *MultipleFontEncoder )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){_fecfb :=_cafe .CurrentFont ;_beddg ,_fbdab :=_fecfb .GetRuneMetrics (r );for _fgacb :=1;_fgacb < len (_cafe ._agbe )&&_beddg .Wx ==0;_fgacb ++{_fecfb =_cafe ._agbe [_fgacb ];
_beddg ,_fbdab =_fecfb .GetRuneMetrics (r );};return _beddg ,_fbdab ;};func (_ffg *PdfReader )newPdfAnnotationPolygonFromDict (_ggaa *_ac .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_eadg :=PdfAnnotationPolygon {};_abee ,_dade :=_ffg .newPdfAnnotationMarkupFromDict (_ggaa );
if _dade !=nil {return nil ,_dade ;};_eadg .PdfAnnotationMarkup =_abee ;_eadg .Vertices =_ggaa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eadg .LE =_ggaa .Get ("\u004c\u0045");_eadg .BS =_ggaa .Get ("\u0042\u0053");_eadg .IC =_ggaa .Get ("\u0049\u0043");
_eadg .BE =_ggaa .Get ("\u0042\u0045");_eadg .IT =_ggaa .Get ("\u0049\u0054");_eadg .Measure =_ggaa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eadg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eacf *PdfAnnotationPolyLine )ToPdfObject ()_ac .PdfObject {_eacf .PdfAnnotation .ToPdfObject ();_fcfa :=_eacf ._add ;_gcaf :=_fcfa .PdfObject .(*_ac .PdfObjectDictionary );_eacf .PdfAnnotationMarkup .appendToPdfDictionary (_gcaf );_gcaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_gcaf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_eacf .Vertices );_gcaf .SetIfNotNil ("\u004c\u0045",_eacf .LE );_gcaf .SetIfNotNil ("\u0042\u0053",_eacf .BS );_gcaf .SetIfNotNil ("\u0049\u0043",_eacf .IC );_gcaf .SetIfNotNil ("\u0042\u0045",_eacf .BE );
_gcaf .SetIfNotNil ("\u0049\u0054",_eacf .IT );_gcaf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_eacf .Measure );return _fcfa ;};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_gbgbg *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_gbgbg ._ebfbdg =nonFullScreenPageMode ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ebade *PdfPage )GetAllContentStreams ()(string ,error ){_efbgg ,_gfbcf :=_ebade .GetContentStreams ();if _gfbcf !=nil {return "",_gfbcf ;};return _fgg .Join (_efbgg ,"\u0020"),nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dcffeb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dcffeb .MediaBox !=nil {return _dcffeb .MediaBox ,nil ;};_ggabd :=_dcffeb .Parent ;for _ggabd !=nil {_cabgc ,_dcecg :=_ac .GetDict (_ggabd );if !_dcecg {return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ggegc :=_cabgc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ggegc !=nil {_fcgd ,_ffbgc :=_ac .GetArray (_ggegc );if !_ffbgc {return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_gcbgf ,_egee :=NewPdfRectangle (*_fcgd );if _egee !=nil {return nil ,_egee ;};return _gcbgf ,nil ;};_ggabd =_cabgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_aec .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_cgcgc *PdfWriter )addObject (_eeac _ac .PdfObject )bool {_dafeb :=_cgcgc .hasObject (_eeac );if !_dafeb {_ccccc :=_ac .ResolveReferencesDeep (_eeac ,_cgcgc ._fbgccg );if _ccccc !=nil {_da .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_ccccc );
};_cgcgc ._beggg =append (_cgcgc ._beggg ,_eeac );_cgcgc ._beeeeg [_eeac ]=struct{}{};return true ;};return false ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ddfe *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ddfe .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_effgd FieldFlag )Has (fl FieldFlag )bool {return (_effgd .Mask ()&fl .Mask ())> 0};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_fdbcb *KDict )GenerateRandomID ()string {_ecaa ,_cagcb :=_gbb .NewUUID ();if _cagcb !=nil {_da .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_cagcb );};if _ecaa !=_gbb .Nil {_bbbdfe :=_ecaa .String ();
_fdbcb .ID =_ac .MakeString (_bbbdfe );return _bbbdfe ;};return "";};func (_eaea *PdfAcroForm )fillImageWithAppearance (_caeacg FieldImageProvider ,_fdbe FieldAppearanceGenerator )error {if _eaea ==nil {return nil ;};_ecff ,_dgag :=_caeacg .FieldImageValues ();
if _dgag !=nil {return _dgag ;};for _ ,_bcafa :=range _eaea .AllFields (){_dgagg :=_bcafa .PartialName ();_acaf ,_aggaf :=_ecff [_dgagg ];if !_aggaf {if _eede ,_aebdc :=_bcafa .FullName ();_aebdc ==nil {_acaf ,_aggaf =_ecff [_eede ];};};if !_aggaf {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dgagg );
continue ;};switch _eabgd :=_bcafa .GetContext ().(type ){case *PdfFieldButton :if _eabgd .IsPush (){_eabgd .SetFillImage (_acaf );};};if _fdbe ==nil {continue ;};for _ ,_bggaa :=range _bcafa .Annotations {_bceeg ,_bgfee :=_fdbe .GenerateAppearanceDict (_eaea ,_bcafa ,_bggaa );
if _bgfee !=nil {return _bgfee ;};_bggaa .AP =_bceeg ;_bggaa .ToPdfObject ();};};return nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_abfef *PdfPage )GetStructTreeRoot ()(*_ac .PdfObject ,bool ){_bbcb ,_cggd :=_abfef ._eegg .GetCatalogStructTreeRoot ();return &_bbcb ,_cggd ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_ecee :=NewPdfAnnotation ();_cggf :=&PdfAnnotationStamp {};_cggf .PdfAnnotation =_ecee ;_cggf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecee .SetContext (_cggf );return _cggf ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ac .PdfObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func _ada (_afda *PdfPage )map[_ac .PdfObjectName ]_ac .PdfObject {_baegg :=make (map[_ac .PdfObjectName ]_ac .PdfObject );if _afda .Resources ==nil {return _baegg ;};if _afda .Resources .Font !=nil {if _ffgd ,_gbgf :=_ac .GetDict (_afda .Resources .Font );
_gbgf {for _ ,_ggea :=range _ffgd .Keys (){_baegg [_ggea ]=_ffgd .Get (_ggea );};};};if _afda .Resources .ExtGState !=nil {if _ede ,_dccd :=_ac .GetDict (_afda .Resources .ExtGState );_dccd {for _ ,_dcff :=range _ede .Keys (){_baegg [_dcff ]=_ede .Get (_dcff );
};};};if _afda .Resources .XObject !=nil {if _dbb ,_fdea :=_ac .GetDict (_afda .Resources .XObject );_fdea {for _ ,_ecec :=range _dbb .Keys (){_baegg [_ecec ]=_dbb .Get (_ecec );};};};if _afda .Resources .Pattern !=nil {if _fabg ,_agae :=_ac .GetDict (_afda .Resources .Pattern );
_agae {for _ ,_gdc :=range _fabg .Keys (){_baegg [_gdc ]=_fabg .Get (_gdc );};};};if _afda .Resources .Shading !=nil {if _faacc ,_efedf :=_ac .GetDict (_afda .Resources .Shading );_efedf {for _ ,_dafd :=range _faacc .Keys (){_baegg [_dafd ]=_faacc .Get (_dafd );
};};};if _afda .Resources .ProcSet !=nil {if _aeda ,_ggg :=_ac .GetDict (_afda .Resources .ProcSet );_ggg {for _ ,_dgdf :=range _aeda .Keys (){_baegg [_dgdf ]=_aeda .Get (_dgdf );};};};if _afda .Resources .Properties !=nil {if _feff ,_egaf :=_ac .GetDict (_afda .Resources .Properties );
_egaf {for _ ,_fgbg :=range _feff .Keys (){_baegg [_fgbg ]=_feff .Get (_fgbg );};};};return _baegg ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ac .PdfObjectStream )(*XObjectImage ,error ){_efec :=&XObjectImage {};_efec ._bagcg =stream ;_dbbfc :=*(stream .PdfObjectDictionary );_gbgad ,_accbg :=_ac .NewEncoderFromStream (stream );if _accbg !=nil {return nil ,_accbg ;
};_efec .Filter =_gbgad ;if _bcdab :=_ac .TraceToDirectObject (_dbbfc .Get ("\u0057\u0069\u0064t\u0068"));_bcdab !=nil {_gfcde ,_ggfgg :=_bcdab .(*_ac .PdfObjectInteger );if !_ggfgg {return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_adaca :=int64 (*_gfcde );_efec .Width =&_adaca ;}else {return nil ,_aec .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _afdadg :=_ac .TraceToDirectObject (_dbbfc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_afdadg !=nil {_gddgc ,_adbfb :=_afdadg .(*_ac .PdfObjectInteger );if !_adbfb {return nil ,_aec .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gbfgf :=int64 (*_gddgc );
_efec .Height =&_gbfgf ;}else {return nil ,_aec .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gggcg :=_ac .TraceToDirectObject (_dbbfc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gggcg !=nil {_agfga ,_eafff :=NewPdfColorspaceFromPdfObject (_gggcg );if _eafff !=nil {return nil ,_eafff ;};_efec .ColorSpace =_agfga ;}else {_da .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_efec .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fceae :=_ac .TraceToDirectObject (_dbbfc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fceae !=nil {_ceffb ,_gafab :=_fceae .(*_ac .PdfObjectInteger );
if !_gafab {return nil ,_aec .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bggaef :=int64 (*_ceffb );_efec .BitsPerComponent =&_bggaef ;};_efec .Intent =_dbbfc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_efec .ImageMask =_dbbfc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_efec .Mask =_dbbfc .Get ("\u004d\u0061\u0073\u006b");_efec .Decode =_dbbfc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_efec .Interpolate =_dbbfc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_efec .Alternatives =_dbbfc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_efec .SMask =_dbbfc .Get ("\u0053\u004d\u0061s\u006b");_efec .SMaskInData =_dbbfc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_efec .Matte =_dbbfc .Get ("\u004d\u0061\u0074t\u0065");_efec .Name =_dbbfc .Get ("\u004e\u0061\u006d\u0065");_efec .StructParent =_dbbfc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_efec .ID =_dbbfc .Get ("\u0049\u0044");
_efec .OPI =_dbbfc .Get ("\u004f\u0050\u0049");_efec .Metadata =_dbbfc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_efec .OC =_dbbfc .Get ("\u004f\u0043");_efec .Stream =stream .Stream ;return _efec ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acgg *PdfColorspaceDeviceGray )ToPdfObject ()_ac .PdfObject {return _ac .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_addbc SignatureValidationResult )String ()string {var _bfaee _ag .Buffer ;_bfaee .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_addbc .Name ));
if _addbc .Date ._cbfdg > 0{_bfaee .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_addbc .Date .ToGoTime ().String ()));}else {_bfaee .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_addbc .Reason )> 0{_bfaee .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_addbc .Reason ));}else {_bfaee .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_addbc .Location )> 0{_bfaee .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_addbc .Location ));}else {_bfaee .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_addbc .ContactInfo )> 0{_bfaee .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_addbc .ContactInfo ));}else {_bfaee .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_bfaee .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_addbc .Fields )));if _addbc .IsSigned {_bfaee .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_bfaee .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _addbc .IsVerified {_bfaee .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_bfaee .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _addbc .IsTrusted {_bfaee .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_bfaee .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_addbc .GeneralizedTime .IsZero (){_bfaee .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_addbc .GeneralizedTime .String ()));
};if _addbc .DiffResults !=nil {_bfaee .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_addbc .DiffResults .IsPermitted ()));if len (_addbc .DiffResults .Warnings )> 0{_bfaee .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_fcaef :=range _addbc .DiffResults .Warnings {_bfaee .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_fcaef ));};};if len (_addbc .DiffResults .Errors )> 0{_bfaee .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_abdag :=range _addbc .DiffResults .Errors {_bfaee .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_abdag ));};};};if _addbc .IsCrlFound {_bfaee .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_bfaee .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _addbc .IsOcspFound {_bfaee .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_bfaee .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _bfaee .String ();};

// ToPdfObject implements interface PdfModel.
func (_ebfce *Permissions )ToPdfObject ()_ac .PdfObject {return _ebfce ._cgfdb };func (_acbf *PdfReader )newPdfAnnotationPolyLineFromDict (_faca *_ac .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gdac :=PdfAnnotationPolyLine {};_dgee ,_cdfb :=_acbf .newPdfAnnotationMarkupFromDict (_faca );
if _cdfb !=nil {return nil ,_cdfb ;};_gdac .PdfAnnotationMarkup =_dgee ;_gdac .Vertices =_faca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gdac .LE =_faca .Get ("\u004c\u0045");_gdac .BS =_faca .Get ("\u0042\u0053");_gdac .IC =_faca .Get ("\u0049\u0043");
_gdac .BE =_faca .Get ("\u0042\u0045");_gdac .IT =_faca .Get ("\u0049\u0054");_gdac .Measure =_faca .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gdac ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ac .PdfObjectArray ;_aefc *Image ;};func (_dfg *PdfReader )newPdfActionFromIndirectObject (_bcca *_ac .PdfIndirectObject )(*PdfAction ,error ){_cfd ,_cee :=_bcca .PdfObject .(*_ac .PdfObjectDictionary );if !_cee {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dfg ._edabf .GetModelFromPrimitive (_cfd );model !=nil {_ddfc ,_bccc :=model .(*PdfAction );if !_bccc {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _ddfc ,nil ;};_fge :=&PdfAction {};_fge ._acf =_bcca ;_dfg ._edabf .Register (_cfd ,_fge );if _cfc :=_cfd .Get ("\u0054\u0079\u0070\u0065");_cfc !=nil {_ged ,_dba :=_cfc .(*_ac .PdfObjectName );if !_dba {_da .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cfc );
}else {if *_ged !="\u0041\u0063\u0074\u0069\u006f\u006e"{_da .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_ged );
};_fge .Type =_ged ;};};if _cgd :=_cfd .Get ("\u004e\u0065\u0078\u0074");_cgd !=nil {_fge .Next =_cgd ;};if _gdf :=_cfd .Get ("\u0053");_gdf !=nil {_fge .S =_gdf ;};_ceg ,_ecb :=_fge .S .(*_ac .PdfObjectName );if !_ecb {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fge .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fge .S );};_gda :=PdfActionType (_ceg .String ());
switch _gda {case ActionTypeGoTo :_ege ,_dbc :=_dfg .newPdfActionGotoFromDict (_cfd );if _dbc !=nil {return nil ,_dbc ;};_ege .PdfAction =_fge ;_fge ._df =_ege ;return _fge ,nil ;case ActionTypeGoToR :_fad ,_afb :=_dfg .newPdfActionGotoRFromDict (_cfd );
if _afb !=nil {return nil ,_afb ;};_fad .PdfAction =_fge ;_fge ._df =_fad ;return _fge ,nil ;case ActionTypeGoToE :_afc ,_gcf :=_dfg .newPdfActionGotoEFromDict (_cfd );if _gcf !=nil {return nil ,_gcf ;};_afc .PdfAction =_fge ;_fge ._df =_afc ;return _fge ,nil ;
case ActionTypeLaunch :_aad ,_daf :=_dfg .newPdfActionLaunchFromDict (_cfd );if _daf !=nil {return nil ,_daf ;};_aad .PdfAction =_fge ;_fge ._df =_aad ;return _fge ,nil ;case ActionTypeThread :_efe ,_babf :=_dfg .newPdfActionThreadFromDict (_cfd );if _babf !=nil {return nil ,_babf ;
};_efe .PdfAction =_fge ;_fge ._df =_efe ;return _fge ,nil ;case ActionTypeURI :_ggb ,_gcca :=_dfg .newPdfActionURIFromDict (_cfd );if _gcca !=nil {return nil ,_gcca ;};_ggb .PdfAction =_fge ;_fge ._df =_ggb ;return _fge ,nil ;case ActionTypeSound :_baaf ,_cdab :=_dfg .newPdfActionSoundFromDict (_cfd );
if _cdab !=nil {return nil ,_cdab ;};_baaf .PdfAction =_fge ;_fge ._df =_baaf ;return _fge ,nil ;case ActionTypeMovie :_bdeb ,_fcc :=_dfg .newPdfActionMovieFromDict (_cfd );if _fcc !=nil {return nil ,_fcc ;};_bdeb .PdfAction =_fge ;_fge ._df =_bdeb ;return _fge ,nil ;
case ActionTypeHide :_ded ,_ebb :=_dfg .newPdfActionHideFromDict (_cfd );if _ebb !=nil {return nil ,_ebb ;};_ded .PdfAction =_fge ;_fge ._df =_ded ;return _fge ,nil ;case ActionTypeNamed :_cb ,_dgc :=_dfg .newPdfActionNamedFromDict (_cfd );if _dgc !=nil {return nil ,_dgc ;
};_cb .PdfAction =_fge ;_fge ._df =_cb ;return _fge ,nil ;case ActionTypeSubmitForm :_gdfe ,_ffc :=_dfg .newPdfActionSubmitFormFromDict (_cfd );if _ffc !=nil {return nil ,_ffc ;};_gdfe .PdfAction =_fge ;_fge ._df =_gdfe ;return _fge ,nil ;case ActionTypeResetForm :_gcd ,_acec :=_dfg .newPdfActionResetFormFromDict (_cfd );
if _acec !=nil {return nil ,_acec ;};_gcd .PdfAction =_fge ;_fge ._df =_gcd ;return _fge ,nil ;case ActionTypeImportData :_cbg ,_cba :=_dfg .newPdfActionImportDataFromDict (_cfd );if _cba !=nil {return nil ,_cba ;};_cbg .PdfAction =_fge ;_fge ._df =_cbg ;
return _fge ,nil ;case ActionTypeSetOCGState :_cbf ,_ebc :=_dfg .newPdfActionSetOCGStateFromDict (_cfd );if _ebc !=nil {return nil ,_ebc ;};_cbf .PdfAction =_fge ;_fge ._df =_cbf ;return _fge ,nil ;case ActionTypeRendition :_dede ,_cae :=_dfg .newPdfActionRenditionFromDict (_cfd );
if _cae !=nil {return nil ,_cae ;};_dede .PdfAction =_fge ;_fge ._df =_dede ;return _fge ,nil ;case ActionTypeTrans :_fdc ,_gbbg :=_dfg .newPdfActionTransFromDict (_cfd );if _gbbg !=nil {return nil ,_gbbg ;};_fdc .PdfAction =_fge ;_fge ._df =_fdc ;return _fge ,nil ;
case ActionTypeGoTo3DView :_fcd ,_acb :=_dfg .newPdfActionGoTo3DViewFromDict (_cfd );if _acb !=nil {return nil ,_acb ;};_fcd .PdfAction =_fge ;_fge ._df =_fcd ;return _fge ,nil ;case ActionTypeJavaScript :_gbc ,_cbac :=_dfg .newPdfActionJavaScriptFromDict (_cfd );
if _cbac !=nil {return nil ,_cbac ;};_gbc .PdfAction =_fge ;_fge ._df =_gbc ;return _fge ,nil ;};_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gda );
return nil ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_ebbg *PdfReader )newPdfAnnotationLineFromDict (_dfab *_ac .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_aae :=PdfAnnotationLine {};
_fce ,_eaaa :=_ebbg .newPdfAnnotationMarkupFromDict (_dfab );if _eaaa !=nil {return nil ,_eaaa ;};_aae .PdfAnnotationMarkup =_fce ;_aae .L =_dfab .Get ("\u004c");_aae .BS =_dfab .Get ("\u0042\u0053");_aae .LE =_dfab .Get ("\u004c\u0045");_aae .IC =_dfab .Get ("\u0049\u0043");
_aae .LL =_dfab .Get ("\u004c\u004c");_aae .LLE =_dfab .Get ("\u004c\u004c\u0045");_aae .Cap =_dfab .Get ("\u0043\u0061\u0070");_aae .IT =_dfab .Get ("\u0049\u0054");_aae .LLO =_dfab .Get ("\u004c\u004c\u004f");_aae .CP =_dfab .Get ("\u0043\u0050");_aae .Measure =_dfab .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_aae .CO =_dfab .Get ("\u0043\u004f");return &_aae ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fgdcd :=&PdfPageResources {};_fgdcd ._edbdg =_ac .MakeDict ();return _fgdcd ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};

// B returns the value of the B component of the color.
func (_cec *PdfColorCalRGB )B ()float64 {return _cec [1]};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_eceeda *PdfReader )GetEncryptionMethod ()string {_cdgd :=_eceeda ._ecebe .GetCrypter ();return _cdgd .String ();};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_cgccb *PdfReader )GetCatalogStructTreeRoot ()(_ac .PdfObject ,bool ){_cbecg :=_ac .ResolveReference (_cgccb ._dfae .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _cbecg ==nil {return nil ,false ;};if !_cgccb ._bacfb {_cdgcb :=_cgccb .traverseObjectData (_cbecg );
if _cdgcb !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_cdgcb );
return nil ,false ;};};return _cbecg ,true ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_aaed *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_dbbdb :=_aaed .fill (provider ,appGen );if _dbbdb !=nil {return _dbbdb ;};if _ ,_dedec :=provider .(FieldImageProvider );_dedec {_dbbdb =_aaed .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _dbbdb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bced *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgac ,_bdca :=_ac .GetNumbersAsFloat (objects );
if _bdca !=nil {return nil ,_bdca ;};return _bced .ColorFromFloats (_dgac );};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// SetContext set the sub annotation (context).
func (_cdfae *PdfShading )SetContext (ctx PdfModel ){_cdfae ._gfcfg =ctx };

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ac .PdfObjectInteger ;TilingType *_ac .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ac .PdfObjectFloat ;YStep *_ac .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ac .PdfObjectArray ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_eeafe *PdfPageResources )GenerateXObjectName ()_ac .PdfObjectName {_bfcge :=1;for {_fceab :=_ac .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bfcge ));if !_eeafe .HasXObjectByName (*_fceab ){return *_fceab ;};_bfcge ++;};};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_fgeebc :=Permissions {};_fgeebc .DocMDP =docMdp ;_dgbg :=_ac .MakeDict ();_dgbg .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_fgeebc ._cgfdb =_dgbg ;return &_fgeebc ;};func (_gba *PdfReader )newPdfActionTransFromDict (_ecc *_ac .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ecc .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ac .PdfObjectBool ;SigFlags *_ac .PdfObjectInteger ;CO *_ac .PdfObjectArray ;DR *PdfPageResources ;DA *_ac .PdfObjectString ;Q *_ac .PdfObjectInteger ;XFA _ac .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _ac .PdfObject ;_fccb *_ac .PdfIndirectObject ;_egbgc bool ;};func (_bdgaa *PdfWriter )writeAcroFormFields ()error {if _bdgaa ._ffafd ==nil {return nil ;};_da .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_ecdgf :=_bdgaa ._ffafd .ToPdfObject ();_da .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ecdgf );_bdgaa ._cgebe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ecdgf );_bgaa :=_bdgaa .addObjects (_ecdgf );
if _bgaa !=nil {return _bgaa ;};return nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_dddgae *PdfWriter )SetFileName (name string ){_dddgae ._aaadc =name };

// ToPdfObject implements interface PdfModel.
func (_afde *PdfAnnotationMovie )ToPdfObject ()_ac .PdfObject {_afde .PdfAnnotation .ToPdfObject ();_faacb :=_afde ._add ;_gecfd :=_faacb .PdfObject .(*_ac .PdfObjectDictionary );_gecfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u004d\u006f\u0076i\u0065"));
_gecfd .SetIfNotNil ("\u0054",_afde .T );_gecfd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_afde .Movie );_gecfd .SetIfNotNil ("\u0041",_afde .A );return _faacb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cagfe *PdfSignature )GetContainingPdfObject ()_ac .PdfObject {return _cagfe ._fcdbe };

// GetCharMetrics returns the char metrics for character code `code`.
func (_cbfgb pdfFontType0 )GetCharMetrics (code _cd .CharCode )(_bd .CharMetrics ,bool ){if _cbfgb .DescendantFont ==nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cbfgb );
return _bd .CharMetrics {},false ;};return _cbfgb .DescendantFont .GetCharMetrics (code );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bdccf *PdfPageResources )GetPatternByName (keyName _ac .PdfObjectName )(*PdfPattern ,bool ){if _bdccf .Pattern ==nil {return nil ,false ;};_edcgg ,_gdae :=_ac .TraceToDirectObject (_bdccf .Pattern ).(*_ac .PdfObjectDictionary );if !_gdae {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdccf .Pattern );
return nil ,false ;};if _fcae :=_edcgg .Get (keyName );_fcae !=nil {_cfbdf ,_efdbc :=_bdfac (_fcae );if _efdbc !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_efdbc );
return nil ,false ;};return _cfbdf ,true ;};return nil ,false ;};func _gcgba (_gddgg _ac .PdfObject )(*_ac .PdfObjectDictionary ,*fontCommon ,error ){_baaa :=&fontCommon {};if _ecdg ,_cbdgb :=_gddgg .(*_ac .PdfIndirectObject );_cbdgb {_baaa ._eacb =_ecdg .ObjectNumber ;
};_egagb ,_efbg :=_ac .GetDict (_gddgg );if !_efbg {_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gddgg );
return nil ,nil ,ErrFontNotSupported ;};_gcef ,_efbg :=_ac .GetNameVal (_egagb .Get ("\u0054\u0079\u0070\u0065"));if !_efbg {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gcef !="\u0046\u006f\u006e\u0074"{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gcef ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_ac .ErrTypeError ;};_dfeef ,_efbg :=_ac .GetNameVal (_egagb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_efbg {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_baaa ._bacd =_dfeef ;_abadg ,_efbg :=_ac .GetNameVal (_egagb .Get ("\u004e\u0061\u006d\u0065"));if _efbg {_baaa ._ageda =_abadg ;};_aacge :=_egagb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _aacge !=nil {_baaa ._baagf =_ac .TraceToDirectObject (_aacge );
_bcbcb ,_fgbcc :=_geee (_baaa ._baagf ,_baaa );if _fgbcc !=nil {return _egagb ,_baaa ,_fgbcc ;};_baaa ._eceed =_bcbcb ;}else if _dfeef =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_dfeef =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gbga ,_ecfe :=_adg .NewCIDSystemInfo (_egagb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ecfe !=nil {return _egagb ,_baaa ,_ecfe ;};_ggfbd :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gbga .Registry ,_gbga .Ordering );if _adg .IsPredefinedCMap (_ggfbd ){_baaa ._eceed ,_ecfe =_adg .LoadPredefinedCMap (_ggfbd );
if _ecfe !=nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ggfbd ,_ecfe );
};};};_ccagc :=_egagb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ccagc !=nil {_addb ,_cadd :=_afgfc (_ccagc );if _cadd !=nil {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cadd );
return _egagb ,_baaa ,_cadd ;};_baaa ._gdgc =_addb ;};if _dfeef !="\u0054\u0079\u0070e\u0033"{_ggbe ,_bfefd :=_ac .GetNameVal (_egagb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bfefd {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _egagb ,_baaa ,ErrRequiredAttributeMissing ;};_baaa ._cfca =_ggbe ;};return _egagb ,_baaa ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cdfg *PdfPageResources )GetExtGState (keyName _ac .PdfObjectName )(_ac .PdfObject ,bool ){if _cdfg .ExtGState ==nil {return nil ,false ;};_gbdfd ,_cbeef :=_ac .TraceToDirectObject (_cdfg .ExtGState ).(*_ac .PdfObjectDictionary );if !_cbeef {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdfg .ExtGState );
return nil ,false ;};if _fbff :=_gbdfd .Get (keyName );_fbff !=nil {return _fbff ,true ;};return nil ,false ;};

// SetOCProperties sets the optional content properties.
func (_daaaf *PdfWriter )SetOCProperties (ocProperties _ac .PdfObject )error {_fdccd :=_daaaf ._cgebe ;if ocProperties !=nil {_da .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_fdccd .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _daaaf .addObjects (ocProperties );};return nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;
XObjectTypeUnknown ;);

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_edb :=NewPdfAction ();_gaa :=&PdfActionResetForm {};_gaa .PdfAction =_edb ;_edb .SetContext (_gaa );return _gaa ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bgfcf *Image )ToGoImage ()(_gb .Image ,error ){_da .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_efaf ,_geac :=_cf .NewImage (int (_bgfcf .Width ),int (_bgfcf .Height ),int (_bgfcf .BitsPerComponent ),_bgfcf .ColorComponents ,_bgfcf .Data ,_bgfcf ._geag ,_bgfcf ._bacca );
if _geac !=nil {return nil ,_geac ;};return _efaf ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_aabf *PdfColorspaceLab )DecodeArray ()[]float64 {_aggf :=[]float64 {0,100};if _aabf !=nil &&_aabf .Range !=nil &&len (_aabf .Range )==4{_aggf =append (_aggf ,_aabf .Range ...);}else {_aggf =append (_aggf ,-100,100,-100,100);};return _aggf ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_dffge *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _dffge ._ecebe .GetRevisionNumber ()==0{return nil ,_aec .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fffcb ,_fgafc :=_dffge ._gdda [_dffge ];_fgafc {return _fffcb ,nil ;};_dfbde ,_adfea :=_dffge ._ecebe .GetPreviousRevisionReadSeeker ();if _adfea !=nil {return nil ,_adfea ;};_aecca ,_adfea :=_cgac (_dfbde ,_dffge ._bfaga ,_dffge ._cccd ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _adfea !=nil {return nil ,_adfea ;};_dffge ._ddfec [_dffge ._ecebe .GetRevisionNumber ()-1]=_aecca ;_dffge ._gdda [_dffge ]=_aecca ;_aecca ._gdda =_dffge ._gdda ;return _aecca ,nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_fgcf *PdfColorspaceICCBased )GetContainingPdfObject ()_ac .PdfObject {return _fgcf ._dcab };

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cbbeg *PdfPage )GetPageAsIndirectObject ()*_ac .PdfIndirectObject {return _cbbeg ._gbdca };

// GetNumComponents returns the number of color components (3 for Lab).
func (_ecgg *PdfColorLab )GetNumComponents ()int {return 3};

// RemveTabOrder removes the tab order for the page.
func (_ebcd *PdfPage )RemoveTabOrder (){_ebcd .Tabs =nil };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gag :=NewPdfAction ();_cce :=&PdfActionImportData {};_cce .PdfAction =_gag ;_gag .SetContext (_cce );return _cce ;};func (_fcgba *PdfWriter )writeBytes (_aecce []byte ){if _fcgba ._dbcea !=nil {return ;
};_ccafc ,_dgbge :=_fcgba ._dacf .Write (_aecce );_fcgba ._eaafg +=int64 (_ccafc );_fcgba ._dbcea =_dgbge ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dffcc *PdfPageResources )HasFontByName (keyName _ac .PdfObjectName )bool {_ ,_cgadd :=_dffcc .GetFontByName (keyName );return _cgadd ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ac .PdfObject ;LE _ac .PdfObject ;BS _ac .PdfObject ;IC _ac .PdfObject ;BE _ac .PdfObject ;IT _ac .PdfObject ;Measure _ac .PdfObject ;};func (_facde *Names )addEmbeddedFile (_beag *EmbeddedFile )error {if _facde .EmbeddedFiles ==nil {_facde .EmbeddedFiles =_ac .MakeDict ();
_facde .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ac .MakeArray ());};_bgbef :=NewPdfFileSpecFromEmbeddedFile (_beag );_fbec :=_facde .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_cdceb ,_bageb :=_fbec .(*_ac .PdfObjectArray );if !_bageb {return _aec .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_gcgd string ;_ecea *PdfFilespec ;};_cabfgb :=[]FileSpecMap {};for _fabc :=0;_fabc < len (_cdceb .Elements ());_fabc +=2{if _fabc %2==0{_aaad :=_cdceb .Get (_fabc );if _aaad !=nil {_cddaa :=_aaad .(*_ac .PdfObjectString );_adbb :=_cdceb .Get (_fabc +1);
_eaccea ,_dgfad :=NewPdfFilespecFromObj (_adbb );if _dgfad !=nil {return _dgfad ;};_cabfgb =append (_cabfgb ,FileSpecMap {_gcgd :_cddaa .String (),_ecea :_eaccea });};};};_cabfgb =append (_cabfgb ,FileSpecMap {_gcgd :_beag .Name ,_ecea :_bgbef });_ga .Slice (_cabfgb ,func (_aedc ,_caedb int )bool {return _cabfgb [_aedc ]._gcgd < _cabfgb [_caedb ]._gcgd });
_cdceb =_ac .MakeArray ();for _ ,_aefdf :=range _cabfgb {_cdceb .Append (_ac .MakeString (_aefdf ._gcgd ));_cdceb .Append (_aefdf ._ecea .ToPdfObject ());};_facde .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_cdceb );return nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ac .PdfObjectString ;Author *_ac .PdfObjectString ;Subject *_ac .PdfObjectString ;Keywords *_ac .PdfObjectString ;Creator *_ac .PdfObjectString ;Producer *_ac .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_ac .PdfObjectName ;
_cefe *_ac .PdfObjectDictionary ;};func _bdbfg ()string {return _da .Version };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fdbd :=&PdfColorspaceSpecialSeparation {};return _fdbd ;};func _fcda (_dcabc []byte )bool {if len (_dcabc )< 4{return true ;};for _ddgg :=range _dcabc [:4]{_gabbb :=rune (_ddgg );
if !_ae .Is (_ae .ASCII_Hex_Digit ,_gabbb )&&!_ae .IsSpace (_gabbb ){return true ;};};return false ;};

// GetVersion gets the document version.
func (_cgcec *PdfWriter )GetVersion ()_ac .Version {return _cgcec ._ccabd };

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ac .PdfObject ;MK _ac .PdfObject ;A _ac .PdfObject ;AA _ac .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_abbb *PdfColorspaceDeviceCMYK )ToPdfObject ()_ac .PdfObject {return _ac .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_dbaaa *PdfReader )newPdfSignatureFromIndirect (_bccde *_ac .PdfIndirectObject )(*PdfSignature ,error ){_ccbac ,_cegfgc :=_bccde .PdfObject .(*_ac .PdfObjectDictionary );
if !_cegfgc {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _dfdd ,_fcgaa :=_dbaaa ._edabf .GetModelFromPrimitive (_bccde ).(*PdfSignature );_fcgaa {return _dfdd ,nil ;};_gacdb :=&PdfSignature {};_gacdb ._fcdbe =_bccde ;_gacdb .Type ,_ =_ac .GetName (_ccbac .Get ("\u0054\u0079\u0070\u0065"));
_gacdb .Filter ,_cegfgc =_ac .GetName (_ccbac .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cegfgc {_da .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gacdb .SubFilter ,_ =_ac .GetName (_ccbac .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gacdb .Contents ,_cegfgc =_ac .GetString (_ccbac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cegfgc {_da .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _agfcag ,_gbgfgb :=_ac .GetArray (_ccbac .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_gbgfgb {_gacdb .Reference =_ac .MakeArray ();for _ ,_eaaf :=range _agfcag .Elements (){_fcfd ,_afgc :=_ac .GetDict (_eaaf );
if !_afgc {_da .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_fbag ,_bgfbg :=_dbaaa .newPdfSignatureReferenceFromDict (_fcfd );if _bgfbg !=nil {return nil ,_bgfbg ;};_gacdb .Reference .Append (_fbag .ToPdfObject ());};};_gacdb .Cert =_ccbac .Get ("\u0043\u0065\u0072\u0074");_gacdb .ByteRange ,_ =_ac .GetArray (_ccbac .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_gacdb .Changes ,_ =_ac .GetArray (_ccbac .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gacdb .Name ,_ =_ac .GetString (_ccbac .Get ("\u004e\u0061\u006d\u0065"));_gacdb .M ,_ =_ac .GetString (_ccbac .Get ("\u004d"));_gacdb .Location ,_ =_ac .GetString (_ccbac .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gacdb .Reason ,_ =_ac .GetString (_ccbac .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gacdb .ContactInfo ,_ =_ac .GetString (_ccbac .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gacdb .R ,_ =_ac .GetInt (_ccbac .Get ("\u0052"));
_gacdb .V ,_ =_ac .GetInt (_ccbac .Get ("\u0056"));_gacdb .PropBuild ,_ =_ac .GetDict (_ccbac .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gacdb .PropAuthTime ,_ =_ac .GetInt (_ccbac .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gacdb .PropAuthType ,_ =_ac .GetName (_ccbac .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dbaaa ._edabf .Register (_bccde ,_gacdb );return _gacdb ,nil ;};func _gead (_dbbba []byte )(_fdecf ,_bdadg string ,_gcge error ){_da .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_dbbba ));
_cgaa :=_abfca .FindIndex (_dbbba );if _cgaa ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_ac .ErrTypeError ;};_gcec :=_cgaa [1];_cgafa :=_fgg .Index (string (_dbbba [_gcec :]),_cafgg );if _cgafa < 0{_fdecf =string (_dbbba [_gcec :]);return _fdecf ,"",nil ;};_ebdfd :=_gcec +_cgafa ;_fdecf =string (_dbbba [_gcec :_ebdfd ]);_fcafe :=_ebdfd ;
_cgafa =_fgg .Index (string (_dbbba [_fcafe :]),_afeba );if _cgafa < 0{_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gcge );
return "","",_ac .ErrTypeError ;};_cbcb :=_fcafe +_cgafa ;_bdadg =string (_dbbba [_fcafe :_cbcb ]);return _fdecf ,_bdadg ,nil ;};func _feccf ()string {_adga .Lock ();defer _adga .Unlock ();return _cddca };func _afad ()string {_adga .Lock ();defer _adga .Unlock ();
_faadb :=_dgf .GetLicenseKey ();if len (_bedeg )> 0&&(_faadb .IsLicensed ()||_agcce ){return _bedeg ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_bdbfg (),_faadb .TypeToString ());
};func (_eaad *PdfAppender )mergeResources (_fdgf ,_gadc _ac .PdfObject ,_cebf map[_ac .PdfObjectName ]_ac .PdfObjectName )_ac .PdfObject {if _gadc ==nil &&_fdgf ==nil {return nil ;};if _gadc ==nil {return _fdgf ;};_gedg ,_afcg :=_ac .GetDict (_gadc );
if !_afcg {return _fdgf ;};if _fdgf ==nil {_fddf :=_ac .MakeDict ();_fddf .Merge (_gedg );return _gadc ;};_efg ,_afcg :=_ac .GetDict (_fdgf );if !_afcg {_da .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_efg =_ac .MakeDict ();};for _ ,_gea :=range _gedg .Keys (){if _gaef ,_bgd :=_cebf [_gea ];_bgd {_efg .Set (_gaef ,_gedg .Get (_gea ));}else {_efg .Set (_gea ,_gedg .Get (_gea ));};};return _efg ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_ac .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_ac .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ebbdb *PdfPageResources )HasExtGState (keyName _ac .PdfObjectName )bool {_ ,_cccde :=_ebbdb .GetFontByName (keyName );return _cccde ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ffcfa *OutlineItem )ToPdfObject ()_ac .PdfObject {_aecgb ,_ :=_ffcfa .ToPdfOutlineItem ();return _aecgb .ToPdfObject ();};func (_eeede *PdfWriter )setDocumentIDs (_adcad ,_caafe string ){_eeede ._ddfac =_ac .MakeArray (_ac .MakeHexString (_adcad ),_ac .MakeHexString (_caafe ));
};func (_edef *PdfWriter )checkCrossReferenceStream ()bool {_fdgegd :=_edef ._ccabd .Major > 1||(_edef ._ccabd .Major ==1&&_edef ._ccabd .Minor > 4);if _edef ._egdgb !=nil {_fdgegd =*_edef ._egdgb ;};return _fdgegd ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_eeg :=NewPdfAnnotation ();_bcaf :=&PdfAnnotationWidget {};_bcaf .PdfAnnotation =_eeg ;_eeg .SetContext (_bcaf );return _bcaf ;};

// ToPdfObject implements interface PdfModel.
func (_dab *PdfActionGoToE )ToPdfObject ()_ac .PdfObject {_dab .PdfAction .ToPdfObject ();_ece :=_dab ._acf ;_fae :=_ece .PdfObject .(*_ac .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeGoToE )));if _dab .F !=nil {_fae .Set ("\u0046",_dab .F .ToPdfObject ());
};_fae .SetIfNotNil ("\u0044",_dab .D );_fae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dab .NewWindow );_fae .SetIfNotNil ("\u0054",_dab .T );return _ece ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_effaa *_ac .PdfObjectDictionary ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_adcg *Outline )ToPdfObject ()_ac .PdfObject {return _adcg .ToPdfOutline ().ToPdfObject ()};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eaebba pdfCIDFontType2 )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){_dabc ,_affef :=_eaebba ._cadgd [r ];if !_affef {_fcca ,_ccadb :=_ac .GetInt (_eaebba .DW );if !_ccadb {return _bd .CharMetrics {},false ;};_dabc =int (*_fcca );};return _bd .CharMetrics {Wx :float64 (_dabc )},true ;
};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_eaebb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_aec .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gccae ,_gfea :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._geag ,img ._bacca );if _gfea !=nil {return img ,_gfea ;};_dbe ,_gfea :=_cf .GrayConverter .Convert (_gccae );if _gfea !=nil {return img ,_gfea ;
};return _bgage (_dbe .Base ()),nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ac .PdfObjectDictionary )(*PdfPageResources ,error ){_eggcgd :=NewPdfPageResources ();if _beede :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_beede !=nil {_eggcgd .ExtGState =_beede ;};if _agdgf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_agdgf !=nil &&!_ac .IsNullObject (_agdgf ){_eggcgd .ColorSpace =_agdgf ;};if _ggdaa :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ggdaa !=nil {_eggcgd .Pattern =_ggdaa ;};if _dbgae :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dbgae !=nil {_eggcgd .Shading =_dbgae ;
};if _aedcgb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_aedcgb !=nil {_eggcgd .XObject =_aedcgb ;};if _gcfc :=_ac .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_gcfc !=nil {_eggcgd .Font =_gcfc ;};if _ffefb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_ffefb !=nil {_eggcgd .ProcSet =_ffefb ;};if _bafd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bafd !=nil {_eggcgd .Properties =_bafd ;};return _eggcgd ,nil ;};

// GetOutlineTree returns the outline tree.
func (_ceec *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ceec ._fbgg };

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_fbee :=_ecf .Detect (content );_ddac :=_dc .Sum (content );_fabgd :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_fbee .String (),Hash :_fg .EncodeToString (_ddac [:])};
return _fabgd ,nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_gefgf *PdfReader )GetCatalogMarkInfo ()(_ac .PdfObject ,bool ){if _gefgf ._dfae ==nil {return nil ,false ;};_gadge :=_gefgf ._dfae .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _gadge ,_gadge !=nil ;};func (_agceb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _agceb ._ecebe .GetCrypter ()!=nil &&!_agceb ._ecebe .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bcdge :=_agceb ._dfae ;_cdga :=_bcdge .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cdga ==nil {return nil ,nil ;};_da .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cgcbc :=_ac .ResolveReference (_cdga );
_da .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cgcbc );if _dafec :=_ac .IsNullObject (_cgcbc );_dafec {_da .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_caecee ,_degdf :=_cgcbc .(*_ac .PdfIndirectObject );if !_degdf {if _ ,_cbff :=_ac .GetDict (_cgcbc );!_cbff {_da .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_da .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_caecee =_ac .MakeIndirectObject (_cgcbc );};_bddfa ,_degdf :=_caecee .PdfObject .(*_ac .PdfObjectDictionary );if !_degdf {return nil ,_aec .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_da .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bddfa );_cfcf ,_ ,_acfd :=_agceb .buildOutlineTree (_caecee ,nil ,nil ,nil );if _acfd !=nil {return nil ,_acfd ;};_da .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cfcf );
return _cfcf ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gdg :=NewPdfAction ();_af :=&PdfActionGoToE {};_af .PdfAction =_gdg ;_gdg .SetContext (_af );return _af ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ec .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _dg .Time ;};

// GetCatalogLanguage gets catalog Language object.
func (_gbcca *PdfReader )GetCatalogLanguage ()(_ac .PdfObject ,bool ){if _gbcca ._dfae ==nil {return nil ,false ;};_bdcfd :=_gbcca ._dfae .Get ("\u004c\u0061\u006e\u0067");return _bdcfd ,_bdcfd !=nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ac .PdfObject ;Name _ac .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_eddbc *PdfPageResources )SetXObjectFormByName (keyName _ac .PdfObjectName ,xform *XObjectForm )error {_dafc :=xform .ToPdfObject ().(*_ac .PdfObjectStream );_cbadd :=_eddbc .SetXObjectByName (keyName ,_dafc );return _cbadd ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gaed *PdfFontDescriptor )ToPdfObject ()_ac .PdfObject {_aeee :=_ac .MakeDict ();if _gaed ._gcfd ==nil {_gaed ._gcfd =&_ac .PdfIndirectObject {};};_gaed ._gcfd .PdfObject =_aeee ;_aeee .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gaed .FontName !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gaed .FontName );};if _gaed .FontFamily !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gaed .FontFamily );};if _gaed .FontStretch !=nil {_aeee .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gaed .FontStretch );
};if _gaed .FontWeight !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gaed .FontWeight );};if _gaed .Flags !=nil {_aeee .Set ("\u0046\u006c\u0061g\u0073",_gaed .Flags );};if _gaed .FontBBox !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gaed .FontBBox );
};if _gaed .ItalicAngle !=nil {_aeee .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gaed .ItalicAngle );};if _gaed .Ascent !=nil {_aeee .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gaed .Ascent );};if _gaed .Descent !=nil {_aeee .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gaed .Descent );
};if _gaed .Leading !=nil {_aeee .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gaed .Leading );};if _gaed .CapHeight !=nil {_aeee .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gaed .CapHeight );};if _gaed .XHeight !=nil {_aeee .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gaed .XHeight );
};if _gaed .StemV !=nil {_aeee .Set ("\u0053\u0074\u0065m\u0056",_gaed .StemV );};if _gaed .StemH !=nil {_aeee .Set ("\u0053\u0074\u0065m\u0048",_gaed .StemH );};if _gaed .AvgWidth !=nil {_aeee .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gaed .AvgWidth );
};if _gaed .MaxWidth !=nil {_aeee .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gaed .MaxWidth );};if _gaed .MissingWidth !=nil {_aeee .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gaed .MissingWidth );};if _gaed .FontFile !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gaed .FontFile );
};if _gaed .FontFile2 !=nil {_aeee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gaed .FontFile2 );};if _gaed .FontFile3 !=nil {_aeee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gaed .FontFile3 );};if _gaed .CharSet !=nil {_aeee .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gaed .CharSet );
};if _gaed .Style !=nil {_aeee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gaed .FontName );};if _gaed .Lang !=nil {_aeee .Set ("\u004c\u0061\u006e\u0067",_gaed .Lang );};if _gaed .FD !=nil {_aeee .Set ("\u0046\u0044",_gaed .FD );};if _gaed .CIDSet !=nil {_aeee .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gaed .CIDSet );
};return _gaed ._gcfd ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_gegf *PdfFieldButton )IsRadio ()bool {return _gegf .GetType ()==ButtonTypeRadio };

// String returns a string representation of what flags are set.
func (_gcdc FieldFlag )String ()string {_fdge :="";if _gcdc ==FieldFlagClear {_fdge ="\u0043\u006c\u0065a\u0072";return _fdge ;};if _gcdc &FieldFlagReadOnly > 0{_fdge +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gcdc &FieldFlagRequired > 0{_fdge +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _gcdc &FieldFlagNoExport > 0{_fdge +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gcdc &FieldFlagNoToggleToOff > 0{_fdge +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gcdc &FieldFlagRadio > 0{_fdge +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _gcdc &FieldFlagPushbutton > 0{_fdge +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gcdc &FieldFlagRadiosInUnision > 0{_fdge +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gcdc &FieldFlagMultiline > 0{_fdge +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _gcdc &FieldFlagPassword > 0{_fdge +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gcdc &FieldFlagFileSelect > 0{_fdge +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gcdc &FieldFlagDoNotScroll > 0{_fdge +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _gcdc &FieldFlagComb > 0{_fdge +="\u007c\u0043\u006fm\u0062";};if _gcdc &FieldFlagRichText > 0{_fdge +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gcdc &FieldFlagDoNotSpellCheck > 0{_fdge +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _gcdc &FieldFlagCombo > 0{_fdge +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gcdc &FieldFlagEdit > 0{_fdge +="\u007c\u0045\u0064i\u0074";};if _gcdc &FieldFlagSort > 0{_fdge +="\u007c\u0053\u006fr\u0074";};if _gcdc &FieldFlagMultiSelect > 0{_fdge +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _gcdc &FieldFlagCommitOnSelChange > 0{_fdge +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fgg .Trim (_fdge ,"\u007c");};

// GetAscent returns the Ascent of the font `descriptor`.
func (_acgc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ac .GetNumberAsFloat (_acgc .Ascent );};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ccb :=NewPdfAction ();_ace :=&PdfActionURI {};_ace .PdfAction =_ccb ;_ccb .SetContext (_ace );return _ace ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_gefag :=&PdfShadingPatternType3 {};_gefag .Matrix =_ac .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gefag .PdfPattern =&PdfPattern {};_gefag .PdfPattern .PatternType =int64 (*_ac .MakeInteger (2));
_gefag .PdfPattern ._geeeb =_gefag ;_gefag .PdfPattern ._cgfee =_ac .MakeIndirectObject (_ac .MakeDict ());return _gefag ;};func (_fcfbab *PdfWriter )AttachFile (file *EmbeddedFile )error {_ggbed :=_fcfbab ._gecfa ;if _ggbed ==nil {_ggbed =_fbcagc ();};
_fdgfd :=_ggbed .addEmbeddedFile (file );if _fdgfd !=nil {return _fdgfd ;};_fcfbab ._gecfa =_ggbed ;return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_agdba *XObjectForm )GetContentStream ()([]byte ,error ){_bcdce ,_aeab :=_ac .DecodeStream (_agdba ._abfbc );if _aeab !=nil {return nil ,_aeab ;};return _bcdce ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fbgd ,_afec :=_bbacd (basefont );if _afec !=nil {return nil ,_afec ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fbgd ._cadfa =_cd .NewWinAnsiEncoder ();};return &PdfFont {_bcae :&_fbgd },nil ;
};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cgc :=&PdfAction {};_cgc ._acf =_ac .MakeIndirectObject (_ac .MakeDict ());return _cgc ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cgb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cgb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cgb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gggba *PdfAppender ;_cbgf *DSS ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_abcfe *PdfPageResources )SetPatternByName (keyName _ac .PdfObjectName ,pattern _ac .PdfObject )error {if _abcfe .Pattern ==nil {_abcfe .Pattern =_ac .MakeDict ();};_agegag ,_dffdfb :=_ac .GetDict (_abcfe .Pattern );if !_dffdfb {return _ac .ErrTypeError ;
};_agegag .Set (keyName ,pattern );return nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fecad *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fecad .UnderlyingCS .GetNumComponents ();};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_fbbag *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_fbbag ._febfe =&displayDocTitle ;};

// ViewClip returns the value of the viewClip.
func (_dbbafe *ViewerPreferences )ViewClip ()PageBoundary {return _dbbafe ._cbfge };func _bagd (_eddbga map[_bd .GID ]int ,_afca uint16 )*_ac .PdfObjectArray {_bggc :=&_ac .PdfObjectArray {};_afdac :=_bd .GID (_afca );for _dbbd :=_bd .GID (0);_dbbd < _afdac ;
{_dfbeb ,_cdfaf :=_eddbga [_dbbd ];if !_cdfaf {_dbbd ++;continue ;};_cdfce :=_dbbd ;for _ccbe :=_cdfce +1;_ccbe < _afdac ;_ccbe ++{if _dcabg ,_fbeg :=_eddbga [_ccbe ];!_fbeg ||_dfbeb !=_dcabg {break ;};_cdfce =_ccbe ;};_bggc .Append (_ac .MakeInteger (int64 (_dbbd )));
_bggc .Append (_ac .MakeInteger (int64 (_cdfce )));_bggc .Append (_ac .MakeInteger (int64 (_dfbeb )));_dbbd =_cdfce +1;};return _bggc ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fggc :=NewPdfAction ();_fd :=&PdfActionGoToR {};_fd .PdfAction =_fggc ;_fggc .SetContext (_fd );return _fd ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_geab *PdfAppender )SetDocInfo (info *PdfInfo ){_geab ._eaae =info };

// SetPage directly sets the page object.
func (_ecgad *KDict )SetPage (page *_ac .PdfIndirectObject ){_ecgad .Pg =page };

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bafgf :=&XObjectImage {};_adgeb :=&_ac .PdfObjectStream {};_adgeb .PdfObjectDictionary =_ac .MakeDict ();_bafgf ._bagcg =_adgeb ;return _bafgf ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_cfbd :=&PdfShadingPatternType2 {};_cfbd .Matrix =_ac .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cfbd .PdfPattern =&PdfPattern {};_cfbd .PdfPattern .PatternType =int64 (*_ac .MakeInteger (2));
_cfbd .PdfPattern ._geeeb =_cfbd ;_cfbd .PdfPattern ._cgfee =_ac .MakeIndirectObject (_ac .MakeDict ());return _cfbd ;};func (_cef *PdfReader )newPdfActionResetFormFromDict (_cad *_ac .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_cad .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cad .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// ToPdfObject implements interface PdfModel.
func (_dfbc *PdfAnnotation3D )ToPdfObject ()_ac .PdfObject {_dfbc .PdfAnnotation .ToPdfObject ();_cafg :=_dfbc ._add ;_bbdg :=_cafg .PdfObject .(*_ac .PdfObjectDictionary );_bbdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0033\u0044"));
_bbdg .SetIfNotNil ("\u0033\u0044\u0044",_dfbc .T3DD );_bbdg .SetIfNotNil ("\u0033\u0044\u0056",_dfbc .T3DV );_bbdg .SetIfNotNil ("\u0033\u0044\u0041",_dfbc .T3DA );_bbdg .SetIfNotNil ("\u0033\u0044\u0049",_dfbc .T3DI );_bbdg .SetIfNotNil ("\u0033\u0044\u0042",_dfbc .T3DB );
return _cafg ;};func (_fgdac *fontFile )loadFromSegments (_ccgaf ,_cacae []byte )error {_da .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ccgaf ),len (_cacae ));
_fbdba :=_fgdac .parseASCIIPart (_ccgaf );if _fbdba !=nil {return _fbdba ;};_da .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fgdac );if len (_cacae )==0{return nil ;};_da .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fgdac );
return nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gcgbe ,_adcdfg :=_bb .ParsePdfTime (dateStr );if _adcdfg !=nil {return PdfDate {},_adcdfg ;};return NewPdfDateFromTime (_gcgbe );};

// SetDirection sets the value of the direction.
func (_bdfcd *ViewerPreferences )SetDirection (direction Direction ){_bdfcd ._gfad =direction };

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_fegca *PdfFieldChoice )ToPdfObject ()_ac .PdfObject {_fegca .PdfField .ToPdfObject ();_cega :=_fegca ._fggde ;_fcdfa :=_cega .PdfObject .(*_ac .PdfObjectDictionary );_fcdfa .Set ("\u0046\u0054",_ac .MakeName ("\u0043\u0068"));if _fegca .Opt !=nil {_fcdfa .Set ("\u004f\u0070\u0074",_fegca .Opt );
};if _fegca .TI !=nil {_fcdfa .Set ("\u0054\u0049",_fegca .TI );};if _fegca .I !=nil {_fcdfa .Set ("\u0049",_fegca .I );};return _cega ;};

// ToPdfObject implements interface PdfModel.
func (_bca *PdfActionURI )ToPdfObject ()_ac .PdfObject {_bca .PdfAction .ToPdfObject ();_dcbg :=_bca ._acf ;_ea :=_dcbg .PdfObject .(*_ac .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeURI )));_ea .SetIfNotNil ("\u0055\u0052\u0049",_bca .URI );
_ea .SetIfNotNil ("\u0049\u0073\u004da\u0070",_bca .IsMap );return _dcbg ;};

// SetPageNumber sets the page number.
func (_aeccf *KDict )SetPageNumber (pageNumber int64 ){_aeccf ._dbfec =pageNumber };

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ac .PdfObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dfecg :=&PdfSignature {Type :_ac .MakeName ("\u0053\u0069\u0067"),Handler :handler };_cbddf :=&pdfSignDictionary {PdfObjectDictionary :_ac .MakeDict (),_ecfda :&handler ,_dagbgc :_dfecg };
_dfecg ._fcdbe =_ac .MakeIndirectObject (_cbddf );return _dfecg ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_ccada _ac .ParserMetadata ;};func (_geaba *pdfFontType0 )bytesToCharcodes (_agbf []byte )([]_cd .CharCode ,bool ){if _geaba ._fbcg ==nil {return nil ,false ;};_ffec ,_adegc :=_geaba ._fbcg .BytesToCharcodes (_agbf );
if !_adegc {return nil ,false ;};_agcee :=make ([]_cd .CharCode ,len (_ffec ));for _decg ,_bdcgf :=range _ffec {_agcee [_decg ]=_cd .CharCode (_bdcgf );};return _agcee ,true ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_aggfb *PdfColorspaceLab )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdcc ,_eged :=_ac .GetNumbersAsFloat (objects );
if _eged !=nil {return nil ,_eged ;};return _aggfb .ColorFromFloats (_cdcc );};func _ffbfg (_dbfga *_ac .PdfObjectDictionary )(*PdfTilingPattern ,error ){_abacb :=&PdfTilingPattern {};_daadf :=_dbfga .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _daadf ==nil {_da .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbbcdc ,_egegc :=_daadf .(*_ac .PdfObjectInteger );if !_egegc {_da .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_daadf );
return nil ,_ac .ErrTypeError ;};_abacb .PaintType =_cbbcdc ;_daadf =_dbfga .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _daadf ==nil {_da .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_baaba ,_egegc :=_daadf .(*_ac .PdfObjectInteger );if !_egegc {_da .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daadf );
return nil ,_ac .ErrTypeError ;};_abacb .TilingType =_baaba ;_daadf =_dbfga .Get ("\u0042\u0042\u006f\u0078");if _daadf ==nil {_da .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_daadf =_ac .TraceToDirectObject (_daadf );_accf ,_egegc :=_daadf .(*_ac .PdfObjectArray );if !_egegc {_da .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daadf );
return nil ,_ac .ErrTypeError ;};_aabda ,_gbbabe :=NewPdfRectangle (*_accf );if _gbbabe !=nil {_da .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gbbabe );return nil ,_gbbabe ;};_abacb .BBox =_aabda ;_daadf =_dbfga .Get ("\u0058\u0053\u0074e\u0070");
if _daadf ==nil {_da .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dfge ,_gbbabe :=_ac .GetNumberAsFloat (_daadf );if _gbbabe !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dfge );
return nil ,_gbbabe ;};_abacb .XStep =_ac .MakeFloat (_dfge );_daadf =_dbfga .Get ("\u0059\u0053\u0074e\u0070");if _daadf ==nil {_da .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bbbaa ,_gbbabe :=_ac .GetNumberAsFloat (_daadf );if _gbbabe !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bbbaa );
return nil ,_gbbabe ;};_abacb .YStep =_ac .MakeFloat (_bbbaa );_daadf =_dbfga .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _daadf ==nil {_da .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbfga ,_egegc =_ac .TraceToDirectObject (_daadf ).(*_ac .PdfObjectDictionary );if !_egegc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_daadf );
};_dfbgg ,_gbbabe :=NewPdfPageResourcesFromDict (_dbfga );if _gbbabe !=nil {return nil ,_gbbabe ;};_abacb .Resources =_dfbgg ;if _faeb :=_dbfga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_faeb !=nil {_geffb ,_eafe :=_faeb .(*_ac .PdfObjectArray );if !_eafe {_da .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faeb );
return nil ,_ac .ErrTypeError ;};_abacb .Matrix =_geffb ;};return _abacb ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fcfac *LTV )Enable (sig *PdfSignature ,extraCerts []*_gd .Certificate )error {if _dgceg :=_fcfac .validateSig (sig );_dgceg !=nil {return _dgceg ;};_fdeab ,_cdfdc :=_fcfac .generateVRIKey (sig );if _cdfdc !=nil {return _cdfdc ;};if _ ,_fcdce :=_fcfac ._cbgf .VRI [_fdeab ];
_fcdce &&_fcfac .SkipExisting {return nil ;};_aeacc ,_cdfdc :=sig .GetCerts ();if _cdfdc !=nil {return _cdfdc ;};return _fcfac .enable (_aeacc ,extraCerts ,_fdeab );};func (_dfgfc PdfFont )actualFont ()pdfFont {if _dfgfc ._bcae ==nil {_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dfgfc );
};return _dfgfc ._bcae ;};var _decf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject converts rectangle to a PDF object.
func (_caefb *PdfRectangle )ToPdfObject ()_ac .PdfObject {return _ac .MakeArray (_ac .MakeFloat (_caefb .Llx ),_ac .MakeFloat (_caefb .Lly ),_ac .MakeFloat (_caefb .Urx ),_ac .MakeFloat (_caefb .Ury ));};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ac .PdfObject ;_ccff []byte ;_gaecc *_ac .PdfIndirectObject ;};

// SetFlag sets the flag for the field.
func (_dagg *PdfField )SetFlag (flag FieldFlag ){_dagg .Ff =_ac .MakeInteger (int64 (flag ))};func _deeg ()_dg .Time {_adga .Lock ();defer _adga .Unlock ();return _bggd };

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_bgeeg *PdfSignature )GetDocMDPPermission ()(_ec .DocMDPPermission ,bool ){for _ ,_cdec :=range _bgeeg .Reference .Elements (){if _fgce ,_fbfce :=_ac .GetDict (_cdec );_fbfce {if _daddb ,_eafgd :=_ac .GetNameVal (_fgce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_eafgd &&_daddb =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _fbef ,_ggdgd :=_ac .GetDict (_fgce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_ggdgd {if P ,_bgggf :=_ac .GetIntVal (_fbef .Get ("\u0050"));_bgggf {return _ec .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ecbfe byte )byte ;

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ac .PdfObject ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_egaea ,_acdg :=_fgge .Open (filePath );if _acdg !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_acdg );
return nil ,_acdg ;};defer _egaea .Close ();return NewPdfFontFromTTF (_egaea );};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dfcgb *XObjectImage )GetContainingPdfObject ()_ac .PdfObject {return _dfcgb ._bagcg };func _cefff (_aggec *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_aggec }};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_adga .Lock ();defer _adga .Unlock ();_edgbg =title };

// SetHideToolbar sets the value of the hideToolbar flag.
func (_bfeef *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_bfeef ._feafe =&hideToolbar };

// PrintScaling returns the value of the printScaling.
func (_bagbg *ViewerPreferences )PrintScaling ()PrintScaling {return _bagbg ._fdgfg };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_baag *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cc .ReadSeeker )(*CompliancePdfReader ,error ){const _gfbb ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bdda ,_aega :=_cgac (rs ,&ReaderOpts {ComplianceMode :true },false ,_gfbb );
if _aega !=nil {return nil ,_aega ;};return &CompliancePdfReader {PdfReader :_bdda },nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_fgdgb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_aafced :=_bdab .NewReader (img .getBase ());_bfbc :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_fgdgb .AlternateSpace .GetNumComponents (),nil ,img ._geag ,nil );
_dfgf :=_bdab .NewWriter (_bfbc );_ddad :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_da .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_da .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_fgdgb .TintTransform );_dafa :=_fgdgb .AlternateSpace .DecodeArray ();var (_bdbf uint32 ;_dedc error ;);for {_bdbf ,_dedc =_aafced .ReadSample ();
if _dedc ==_cc .EOF {break ;};if _dedc !=nil {return img ,_dedc ;};_abeba :=float64 (_bdbf )/_ddad ;_gcgf ,_gdeg :=_fgdgb .TintTransform .Evaluate ([]float64 {_abeba });if _gdeg !=nil {return img ,_gdeg ;};for _efeg ,_abcaf :=range _gcgf {_effeb :=_cf .LinearInterpolate (_abcaf ,_dafa [_efeg *2],_dafa [_efeg *2+1],0,1);
if _gdeg =_dfgf .WriteSample (uint32 (_effeb *_ddad ));_gdeg !=nil {return img ,_gdeg ;};};};return _fgdgb .AlternateSpace .ImageToRGB (_bgage (&_bfbc ));};

// RemoveStructParentsKey removes the StructParents key.
func (_agabe *PdfPage )RemoveStructParentsKey (){_agabe .StructParents =nil };

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bdgdc *PdfPageResources )GetXObjectByName (keyName _ac .PdfObjectName )(*_ac .PdfObjectStream ,XObjectType ){if _bdgdc .XObject ==nil {return nil ,XObjectTypeUndefined ;};_aecac ,_fcgffb :=_ac .TraceToDirectObject (_bdgdc .XObject ).(*_ac .PdfObjectDictionary );
if !_fcgffb {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ac .TraceToDirectObject (_bdgdc .XObject ));
return nil ,XObjectTypeUndefined ;};if _gbdbdb :=_aecac .Get (keyName );_gbdbdb !=nil {_fdgcg ,_bgdf :=_ac .GetStream (_gbdbdb );if !_bgdf {_da .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gbdbdb );
return nil ,XObjectTypeUndefined ;};_ecgfa :=_fdgcg .PdfObjectDictionary ;_bbccb ,_bgdf :=_ac .TraceToDirectObject (_ecgfa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ac .PdfObjectName );if !_bgdf {_da .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ecgfa .String ());
return nil ,XObjectTypeUndefined ;};if *_bbccb =="\u0049\u006d\u0061g\u0065"{return _fdgcg ,XObjectTypeImage ;}else if *_bbccb =="\u0046\u006f\u0072\u006d"{return _fdgcg ,XObjectTypeForm ;}else if *_bbccb =="\u0050\u0053"{return _fdgcg ,XObjectTypePS ;
}else {_da .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bbccb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// SetShadingByName sets a shading resource specified by keyName.
func (_dbbgf *PdfPageResources )SetShadingByName (keyName _ac .PdfObjectName ,shadingObj _ac .PdfObject )error {if _dbbgf .Shading ==nil {_dbbgf .Shading =_ac .MakeDict ();};_dgfbg ,_ffdg :=_ac .GetDict (_dbbgf .Shading );if !_ffdg {return _ac .ErrTypeError ;
};_dgfbg .Set (keyName ,shadingObj );return nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_ac .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cceac *_ac .PdfIndirectObject ;};var _ pdfFont =(*pdfFontType3 )(nil );type modelManager struct{_cegdc map[PdfModel ]_ac .PdfObject ;
_cabgd map[_ac .PdfObject ]PdfModel ;_eeda _gc .RWMutex ;_eeebb _gc .RWMutex ;};func _ecdcc (_fggdg *_ac .PdfObjectDictionary )(*PdfShadingType4 ,error ){_aabfc :=PdfShadingType4 {};_ggdfd :=_fggdg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ggdfd ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_effabd ,_bcgb :=_ggdfd .(*_ac .PdfObjectInteger );if !_bcgb {_da .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggdfd );
return nil ,_ac .ErrTypeError ;};_aabfc .BitsPerCoordinate =_effabd ;_ggdfd =_fggdg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggdfd ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_effabd ,_bcgb =_ggdfd .(*_ac .PdfObjectInteger );if !_bcgb {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggdfd );
return nil ,_ac .ErrTypeError ;};_aabfc .BitsPerComponent =_effabd ;_ggdfd =_fggdg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggdfd ==nil {_da .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_effabd ,_bcgb =_ggdfd .(*_ac .PdfObjectInteger );if !_bcgb {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggdfd );
return nil ,_ac .ErrTypeError ;};_aabfc .BitsPerComponent =_effabd ;_ggdfd =_fggdg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggdfd ==nil {_da .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbaeb ,_bcgb :=_ggdfd .(*_ac .PdfObjectArray );if !_bcgb {_da .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggdfd );
return nil ,_ac .ErrTypeError ;};_aabfc .Decode =_bbaeb ;_ggdfd =_fggdg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggdfd ==nil {_da .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_aabfc .Function =[]PdfFunction {};if _dgagc ,_feddg :=_ggdfd .(*_ac .PdfObjectArray );_feddg {for _ ,_bcbca :=range _dgagc .Elements (){_faaee ,_faadf :=_fdfgf (_bcbca );if _faadf !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faadf );
return nil ,_faadf ;};_aabfc .Function =append (_aabfc .Function ,_faaee );};}else {_dgccd ,_cagdf :=_fdfgf (_ggdfd );if _cagdf !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cagdf );
return nil ,_cagdf ;};_aabfc .Function =append (_aabfc .Function ,_dgccd );};return &_aabfc ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_edac :=&PdfColorspaceCalGray {};_edac .BlackPoint =[]float64 {0.0,0.0,0.0};_edac .Gamma =1;return _edac ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _ac .PdfObjectName ;};func (_dda *PdfReader )newPdfActionGoTo3DViewFromDict (_eeaf *_ac .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_eeaf .Get ("\u0054\u0041"),V :_eeaf .Get ("\u0056")},nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_feb *PdfAction )GetContainingPdfObject ()_ac .PdfObject {return _feb ._acf };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ac .PdfObjectArray ;ExtGState _ac .PdfObject ;};

// Write outputs the object as it is to be written to file.
func (_agaeb *PdfTransformParamsDocMDP )Write ()[]byte {return _agaeb .ToPdfObject ().Write ()};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_dcbd *KDict )GetPageNumber ()int64 {return _dcbd ._dbfec };

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cdaef :=&PdfColorspaceDeviceN {};return _cdaef ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SetFitWindow sets the value of the fitWindow flag.
func (_adfdde *ViewerPreferences )SetFitWindow (fitWindow bool ){_adfdde ._eaafb =&fitWindow };func (_ggac *LTV )getCerts (_fbdae []*_gd .Certificate )([][]byte ,error ){_cafgb :=make ([][]byte ,0,len (_fbdae ));for _ ,_caeacc :=range _fbdae {_cafgb =append (_cafgb ,_caeacc .Raw );
};return _cafgb ,nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_ccaad ,_aagb :=_fgge .ReadFile (path );if _aagb !=nil {return nil ,_aagb ;};_bgf :=_ecf .Detect (_ccaad );_ggeba :=_dc .Sum (_ccaad );_ddcdg :=&EmbeddedFile {Name :_gf .Base (path ),Content :_ccaad ,FileType :_bgf .String (),Hash :_fg .EncodeToString (_ggeba [:])};
return _ddcdg ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_degb *PdfReader )newPdfPageFromDict (_fgcaf *_ac .PdfObjectDictionary )(*PdfPage ,error ){_fbgbf :=NewPdfPage ();_fbgbf ._gbbf =_fgcaf ;_fbgbf ._fefgc =*_fgcaf ;_cecc :=*_fgcaf ;_eedab ,_affac :=_cecc .Get ("\u0054\u0079\u0070\u0065").(*_ac .PdfObjectName );
if !_affac {return nil ,_aec .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_eedab !="\u0050\u0061\u0067\u0065"{return nil ,_aec .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _geaf :=_cecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_geaf !=nil {_fbgbf .Parent =_geaf ;};if _fbgdb :=_cecc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fbgdb !=nil {_gadfcg ,_bbbcb :=_ac .GetString (_fbgdb );
if !_bbbcb {return nil ,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gaga ,_abefe :=NewPdfDate (_gadfcg .Str ());if _abefe !=nil {return nil ,_abefe ;};_fbgbf .LastModified =&_gaga ;};if _acddg :=_cecc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_acddg !=nil &&!_ac .IsNullObject (_acddg ){_aaag ,_ecacd :=_ac .GetDict (_acddg );
if !_ecacd {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_acddg );};var _dfad error ;_fbgbf .Resources ,_dfad =NewPdfPageResourcesFromDict (_aaag );
if _dfad !=nil {return nil ,_dfad ;};}else {_edee ,_facdad :=_fbgbf .getParentResources ();if _facdad !=nil {return nil ,_facdad ;};if _edee ==nil {_edee =NewPdfPageResources ();};_fbgbf .Resources =_edee ;};if _afabg :=_cecc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_afabg !=nil {_faaceb ,_bgdee :=_ac .GetArray (_afabg );if !_bgdee {return nil ,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dbcge error ;
_fbgbf .MediaBox ,_dbcge =NewPdfRectangle (*_faaceb );if _dbcge !=nil {return nil ,_dbcge ;};};if _bbcf :=_cecc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bbcf !=nil {_fgdae ,_gbcg :=_ac .GetArray (_bbcf );if !_gbcg {return nil ,_aec .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fdfcd error ;_fbgbf .CropBox ,_fdfcd =NewPdfRectangle (*_fgdae );if _fdfcd !=nil {return nil ,_fdfcd ;};};if _cfgf :=_cecc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cfgf !=nil {_edfc ,_acfbb :=_ac .GetArray (_cfgf );if !_acfbb {return nil ,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _caffed error ;_fbgbf .BleedBox ,_caffed =NewPdfRectangle (*_edfc );if _caffed !=nil {return nil ,_caffed ;};};if _cfbad :=_cecc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cfbad !=nil {_bgbff ,_fcbdg :=_ac .GetArray (_cfbad );if !_fcbdg {return nil ,_aec .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ebcee error ;_fbgbf .TrimBox ,_ebcee =NewPdfRectangle (*_bgbff );if _ebcee !=nil {return nil ,_ebcee ;};};if _bgadbg :=_cecc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bgadbg !=nil {_ageee ,_adbe :=_ac .GetArray (_bgadbg );if !_adbe {return nil ,_aec .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bcabd error ;_fbgbf .ArtBox ,_bcabd =NewPdfRectangle (*_ageee );if _bcabd !=nil {return nil ,_bcabd ;};};if _dbcgea :=_cecc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dbcgea !=nil {_fbgbf .BoxColorInfo =_dbcgea ;
};if _aafde :=_cecc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_aafde !=nil {_fbgbf .Contents =_aafde ;};if _edgef :=_cecc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_edgef !=nil {_ggfdf ,_gfdb :=_ac .GetNumberAsInt64 (_edgef );if _gfdb !=nil {return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fbgbf .Rotate =&_ggfdf ;};if _bcdgd :=_cecc .Get ("\u0047\u0072\u006fu\u0070");_bcdgd !=nil {_fbgbf .Group =_bcdgd ;};if _dacgf :=_cecc .Get ("\u0054\u0068\u0075m\u0062");_dacgf !=nil {_fbgbf .Thumb =_dacgf ;};if _fbdaa :=_cecc .Get ("\u0042");_fbdaa !=nil {_fbgbf .B =_fbdaa ;
};if _fabe :=_cecc .Get ("\u0044\u0075\u0072");_fabe !=nil {_fbgbf .Dur =_fabe ;};if _cedag :=_cecc .Get ("\u0054\u0072\u0061n\u0073");_cedag !=nil {_fbgbf .Trans =_cedag ;};if _gbea :=_cecc .Get ("\u0041\u0041");_gbea !=nil {_fbgbf .AA =_gbea ;};if _cfffg :=_cecc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_cfffg !=nil {_fbgbf .Metadata =_cfffg ;};if _fecfbf :=_cecc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fecfbf !=nil {_fbgbf .PieceInfo =_fecfbf ;};if _bfdf :=_cecc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bfdf !=nil {_fbgbf .StructParents =_bfdf ;};if _bfbag :=_cecc .Get ("\u0049\u0044");_bfbag !=nil {_fbgbf .ID =_bfbag ;};if _decfc :=_cecc .Get ("\u0050\u005a");_decfc !=nil {_fbgbf .PZ =_decfc ;};if _gfeec :=_cecc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_gfeec !=nil {_fbgbf .SeparationInfo =_gfeec ;};if _dccfd :=_cecc .Get ("\u0054\u0061\u0062\u0073");_dccfd !=nil {_fbgbf .Tabs =_dccfd ;};if _gefcfe :=_cecc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gefcfe !=nil {_fbgbf .TemplateInstantiated =_gefcfe ;};if _abcdf :=_cecc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_abcdf !=nil {_fbgbf .PresSteps =_abcdf ;};if _fecef :=_cecc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fecef !=nil {_fbgbf .UserUnit =_fecef ;
};if _bdebf :=_cecc .Get ("\u0056\u0050");_bdebf !=nil {_fbgbf .VP =_bdebf ;};if _abgc :=_cecc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_abgc !=nil {_fbgbf .Annots =_abgc ;};_fbgbf ._eegg =_degb ;return _fbgbf ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_bgabe *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_agaee :=_bdab .NewReader (img .getBase ());_fdbcd :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._geag ,img ._bacca );
_gefe :=_bdab .NewWriter (_fdbcd );_dgge :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_ddce :=_bgabe .GetNumComponents ();_gcdf :=make ([]uint32 ,_ddce );_ebdg :=make ([]float64 ,_ddce );for {_cegcc :=_agaee .ReadSamples (_gcdf );if _cegcc ==_cc .EOF {break ;
}else if _cegcc !=nil {return img ,_cegcc ;};for _gceb :=0;_gceb < _ddce ;_gceb ++{_aedb :=float64 (_gcdf [_gceb ])/_dgge ;_ebdg [_gceb ]=_aedb ;};_bcde ,_cegcc :=_bgabe .TintTransform .Evaluate (_ebdg );if _cegcc !=nil {return img ,_cegcc ;};for _ ,_cegg :=range _bcde {_cegg =_fe .Min (_fe .Max (0,_cegg ),1.0);
if _cegcc =_gefe .WriteSample (uint32 (_cegg *_dgge ));_cegcc !=nil {return img ,_cegcc ;};};};return _bgabe .AlternateSpace .ImageToRGB (_bgage (&_fdbcd ));};

// GetPdfVersion gets the version of the PDF used within this document.
func (_gacgf *PdfWriter )GetPdfVersion ()string {return _gacgf .getPdfVersion ()};

// PrintArea returns the value of the printArea.
func (_caagc *ViewerPreferences )PrintArea ()PageBoundary {return _caagc ._dafcc };

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bbbbc int ,_afagc *PdfPage );

// A returns the value of the A component of the color.
func (_bbce *PdfColorCalRGB )A ()float64 {return _bbce [0]};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_fdef *PdfReader )GetCatalogViewerPreferences ()(_ac .PdfObject ,bool ){if _fdef ._dfae ==nil {return nil ,false ;};_dbfef :=_fdef ._dfae .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return _dbfef ,_dbfef !=nil ;
};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func (_gfbg *PdfReader )newPdfAnnotationRedactFromDict (_baaff *_ac .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_cbc :=PdfAnnotationRedact {};_gfd ,_febdc :=_gfbg .newPdfAnnotationMarkupFromDict (_baaff );
if _febdc !=nil {return nil ,_febdc ;};_cbc .PdfAnnotationMarkup =_gfd ;_cbc .QuadPoints =_baaff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_cbc .IC =_baaff .Get ("\u0049\u0043");_cbc .RO =_baaff .Get ("\u0052\u004f");_cbc .OverlayText =_baaff .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_cbc .Repeat =_baaff .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_cbc .DA =_baaff .Get ("\u0044\u0041");_cbc .Q =_baaff .Get ("\u0051");return &_cbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dccb *PdfFilespec )ToPdfObject ()_ac .PdfObject {_fdcad :=_dccb .getDict ();_fdcad .Clear ();_fdcad .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fdcad .SetIfNotNil ("\u0046\u0053",_dccb .FS );
_fdcad .SetIfNotNil ("\u0046",_dccb .F );_fdcad .SetIfNotNil ("\u0055\u0046",_dccb .UF );_fdcad .SetIfNotNil ("\u0044\u004f\u0053",_dccb .DOS );_fdcad .SetIfNotNil ("\u004d\u0061\u0063",_dccb .Mac );_fdcad .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dccb .Unix );
_fdcad .SetIfNotNil ("\u0049\u0044",_dccb .ID );_fdcad .SetIfNotNil ("\u0056",_dccb .V );_fdcad .SetIfNotNil ("\u0045\u0046",_dccb .EF );_fdcad .SetIfNotNil ("\u0052\u0046",_dccb .RF );_fdcad .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dccb .Desc );_fdcad .SetIfNotNil ("\u0043\u0049",_dccb .CI );
_fdcad .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_dccb .AFRelationship );return _dccb ._fedc ;};func _fgebd ()string {_adga .Lock ();defer _adga .Unlock ();return _edgbg };

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ceff :=NewPdfAnnotation ();_abe :=&PdfAnnotationLine {};_abe .PdfAnnotation =_ceff ;_abe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceff .SetContext (_abe );return _abe ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gcdbad :=&PdfBorderStyle {};return _gcdbad };func _eaga (_ggdg _bd .StdFont )pdfFontSimple {_ceagg :=_ggdg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bacd :"\u0054\u0079\u0070e\u0031",_cfca :_ggdg .Name ()},_fcdc :_ggdg .GetMetricsTable (),_gccga :&PdfFontDescriptor {FontName :_ac .MakeName (string (_ceagg .Name )),FontFamily :_ac .MakeName (_ceagg .Family ),FontWeight :_ac .MakeFloat (float64 (_ceagg .Weight )),Flags :_ac .MakeInteger (int64 (_ceagg .Flags )),FontBBox :_ac .MakeArrayFromFloats (_ceagg .BBox [:]),ItalicAngle :_ac .MakeFloat (_ceagg .ItalicAngle ),Ascent :_ac .MakeFloat (_ceagg .Ascent ),Descent :_ac .MakeFloat (_ceagg .Descent ),CapHeight :_ac .MakeFloat (_ceagg .CapHeight ),XHeight :_ac .MakeFloat (_ceagg .XHeight ),StemV :_ac .MakeFloat (_ceagg .StemV ),StemH :_ac .MakeFloat (_ceagg .StemH )},_bgfb :_ggdg .Encoder ()};
};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_ac .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_ac .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;func (_affe *PdfReader )newPdfAnnotationLinkFromDict (_cdd *_ac .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_agge :=PdfAnnotationLink {};_agge .A =_cdd .Get ("\u0041");_agge .Dest =_cdd .Get ("\u0044\u0065\u0073\u0074");
_agge .H =_cdd .Get ("\u0048");_agge .PA =_cdd .Get ("\u0050\u0041");_agge .QuadPoints =_cdd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_agge .BS =_cdd .Get ("\u0042\u0053");return &_agge ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_dgdcb *PdfPageResources )ToPdfObject ()_ac .PdfObject {_fbfg :=_dgdcb ._edbdg ;_fbfg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dgdcb .ExtGState );if _dgdcb ._cfgc !=nil {_dgdcb .ColorSpace =_dgdcb ._cfgc .ToPdfObject ();};_fbfg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dgdcb .ColorSpace );
_fbfg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dgdcb .Pattern );_fbfg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dgdcb .Shading );_fbfg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dgdcb .XObject );_fbfg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dgdcb .Font );
_fbfg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dgdcb .ProcSet );_fbfg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dgdcb .Properties );return _fbfg ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_dgfea *PdfReader )Inspect ()(map[string ]int ,error ){return _dgfea ._ecebe .Inspect ()};

// ToPdfObject implements interface PdfModel.
func (_cead *PdfAnnotationStamp )ToPdfObject ()_ac .PdfObject {_cead .PdfAnnotation .ToPdfObject ();_aeb :=_cead ._add ;_bdcd :=_aeb .PdfObject .(*_ac .PdfObjectDictionary );_cead .PdfAnnotationMarkup .appendToPdfDictionary (_bdcd );_bdcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053\u0074\u0061m\u0070"));
_bdcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cead .Name );return _aeb ;};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfActionLaunch )ToPdfObject ()_ac .PdfObject {_gee .PdfAction .ToPdfObject ();_edf :=_gee ._acf ;_eea :=_edf .PdfObject .(*_ac .PdfObjectDictionary );_eea .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeLaunch )));if _gee .F !=nil {_eea .Set ("\u0046",_gee .F .ToPdfObject ());
};_eea .SetIfNotNil ("\u0057\u0069\u006e",_gee .Win );_eea .SetIfNotNil ("\u004d\u0061\u0063",_gee .Mac );_eea .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gee .Unix );_eea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gee .NewWindow );return _edf ;
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_baddf *Image )ColorAt (x ,y int )(_ee .Color ,error ){_bfbd :=_cf .BytesPerLine (int (_baddf .Width ),int (_baddf .BitsPerComponent ),_baddf .ColorComponents );switch _baddf .ColorComponents {case 1:return _cf .ColorAtGrayscale (x ,y ,int (_baddf .BitsPerComponent ),_bfbd ,_baddf .Data ,_baddf ._bacca );
case 3:return _cf .ColorAtNRGBA (x ,y ,int (_baddf .Width ),_bfbd ,int (_baddf .BitsPerComponent ),_baddf .Data ,_baddf ._geag ,_baddf ._bacca );case 4:return _cf .ColorAtCMYK (x ,y ,int (_baddf .Width ),_baddf .Data ,_baddf ._bacca );};_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_baddf .ColorComponents ,_baddf .BitsPerComponent );
return nil ,_aec .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};var (_abfca =_f .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_dddcb =_f .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_edbfc =_f .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cafgg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_afeba ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cedc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ColorToRGB converts a ICCBased color to an RGB color.
func (_fdfg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fdfg .Alternate ==nil {_da .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fdfg .N ==1{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fgeed :=NewPdfColorspaceDeviceGray ();return _fgeed .ColorToRGB (color );}else if _fdfg .N ==3{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _fdfg .N ==4{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fagea :=NewPdfColorspaceDeviceCMYK ();return _fagea .ColorToRGB (color );}else {return nil ,_aec .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_da .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fdfg );
return _fdfg .Alternate .ColorToRGB (color );};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ac .PdfObject ;Popup *PdfAnnotationPopup ;CA _ac .PdfObject ;RC _ac .PdfObject ;CreationDate _ac .PdfObject ;IRT _ac .PdfObject ;Subj _ac .PdfObject ;RT _ac .PdfObject ;IT _ac .PdfObject ;ExData _ac .PdfObject ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ac .PdfObject ;IC _ac .PdfObject ;BE _ac .PdfObject ;RD _ac .PdfObject ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ac .PdfObjectStream )(*XObjectForm ,error ){_abfeg :=&XObjectForm {};_abfeg ._abfbc =stream ;_cccdea :=*(stream .PdfObjectDictionary );_dfdf ,_fadag :=_ac .NewEncoderFromStream (stream );if _fadag !=nil {return nil ,_fadag ;
};_abfeg .Filter =_dfdf ;if _defdff :=_cccdea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_defdff !=nil {_gebcge ,_gbcabg :=_defdff .(*_ac .PdfObjectName );if !_gbcabg {return nil ,_aec .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gebcge !="\u0046\u006f\u0072\u006d"{_da .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _dacbb :=_cccdea .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_dacbb !=nil {_abfeg .FormType =_dacbb ;};if _cegcgf :=_cccdea .Get ("\u0042\u0042\u006f\u0078");_cegcgf !=nil {_abfeg .BBox =_cegcgf ;};if _dbacc :=_cccdea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dbacc !=nil {_abfeg .Matrix =_dbacc ;};if _fcfaca :=_cccdea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fcfaca !=nil {_fcfaca =_ac .TraceToDirectObject (_fcfaca );_cegce ,_bgfca :=_fcfaca .(*_ac .PdfObjectDictionary );if !_bgfca {_da .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ac .ErrTypeError ;};_fegcae ,_abafa :=NewPdfPageResourcesFromDict (_cegce );if _abafa !=nil {_da .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_abafa ;};_abfeg .Resources =_fegcae ;_da .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_abfeg .Resources );};_abfeg .Group =_cccdea .Get ("\u0047\u0072\u006fu\u0070");
_abfeg .Ref =_cccdea .Get ("\u0052\u0065\u0066");_abfeg .MetaData =_cccdea .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_abfeg .PieceInfo =_cccdea .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_abfeg .LastModified =_cccdea .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_abfeg .StructParent =_cccdea .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_abfeg .StructParents =_cccdea .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_abfeg .OPI =_cccdea .Get ("\u004f\u0050\u0049");
_abfeg .OC =_cccdea .Get ("\u004f\u0043");_abfeg .Name =_cccdea .Get ("\u004e\u0061\u006d\u0065");_abfeg .Stream =stream .Stream ;return _abfeg ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_cbdeg :map[_ac .PdfObject ]struct{}{},_edabf :_ggacc (),_ecebe :_ac .NewParserFromString (txt )};};

// String returns a string that describes `base`.
func (_ecac fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ecac .coreString ());};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ac .PdfObject ;V _ac .PdfObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_dfdg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_abcec :=func (_efgfb float64 )float64 {if _efgfb >=6.0/29{return _efgfb *_efgfb *_efgfb ;};return 108.0/841*(_efgfb -4.0/29.0);};_fcbg :=img ._bacca ;if len (_fcbg )!=6{_da .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fcbg =_dfdg .DecodeArray ();};_efag :=_bdab .NewReader (img .getBase ());_addf :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._geag ,img ._bacca );_cdccf :=_bdab .NewWriter (_addf );_gagc :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;
_fcdf :=make ([]uint32 ,3);var (_bffcf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_abcf ,_egae ,_eece float64 ;);for {_bffcf =_efag .ReadSamples (_fcdf );if _bffcf ==_cc .EOF {break ;}else if _bffcf !=nil {return img ,_bffcf ;};Ls =float64 (_fcdf [0])/_gagc ;
As =float64 (_fcdf [1])/_gagc ;Bs =float64 (_fcdf [2])/_gagc ;Ls =_cf .LinearInterpolate (Ls ,0.0,1.0,_fcbg [0],_fcbg [1]);As =_cf .LinearInterpolate (As ,0.0,1.0,_fcbg [2],_fcbg [3]);Bs =_cf .LinearInterpolate (Bs ,0.0,1.0,_fcbg [4],_fcbg [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_dfdg .WhitePoint [0]*_abcec (L );Y =_dfdg .WhitePoint [1]*_abcec (M );Z =_dfdg .WhitePoint [2]*_abcec (N );_abcf =3.240479*X +-1.537150*Y +-0.498535*Z ;_egae =-0.969256*X +1.875992*Y +0.041556*Z ;_eece =0.055648*X +-0.204043*Y +1.057311*Z ;
_abcf =_fe .Min (_fe .Max (_abcf ,0),1.0);_egae =_fe .Min (_fe .Max (_egae ,0),1.0);_eece =_fe .Min (_fe .Max (_eece ,0),1.0);_fcdf [0]=uint32 (_abcf *_gagc );_fcdf [1]=uint32 (_egae *_gagc );_fcdf [2]=uint32 (_eece *_gagc );if _bffcf =_cdccf .WriteSamples (_fcdf );
_bffcf !=nil {return img ,_bffcf ;};};return _bgage (&_addf ),nil ;};

// SetAnnotations sets the annotations list.
func (_ebaca *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_ebaca ._adba =annotations };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gcdgb *PdfWriter )AddPage (page *PdfPage )error {const _gbabc ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bafdb (page );_adafg :=page .ToPdfObject ();_da .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_da .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_adafg );_gfdaa ,_eceec :=_ac .GetIndirect (_adafg );if !_eceec {return _aec .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_da .Log .Trace ("\u0025\u0073",_gfdaa );_da .Log .Trace ("\u0025\u0073",_gfdaa .PdfObject );_agccg ,_eceec :=_ac .GetDict (_gfdaa .PdfObject );if !_eceec {return _aec .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bdeaad ,_eceec :=_ac .GetName (_agccg .Get ("\u0054\u0079\u0070\u0065"));if !_eceec {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_agccg .Get ("\u0054\u0079\u0070\u0065"));
};if _bdeaad .String ()!="\u0050\u0061\u0067\u0065"{return _aec .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dgdag :=[]_ac .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gaedf ,_bdaab :=_ac .GetIndirect (_agccg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_da .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_agccg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bdaab );
for _bdaab {_da .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gaedf );_faeab ,_ebebc :=_ac .GetDict (_gaedf .PdfObject );if !_ebebc {return _aec .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_gbcfc :=range _dgdag {_da .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gbcfc );if _agccg .Get (_gbcfc )!=nil {_da .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _dbgdbc :=_faeab .Get (_gbcfc );_dbgdbc !=nil {_da .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gbcfc );_agccg .Set (_gbcfc ,_dbgdbc );};};_gaedf ,_bdaab =_ac .GetIndirect (_faeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_da .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_faeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_da .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_agccg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcdgb ._cafdf );_gfdaa .PdfObject =_agccg ;_adbbc ,_eceec :=_ac .GetDict (_gcdgb ._cafdf .PdfObject );if !_eceec {return _aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bccfcg ,_eceec :=_ac .GetArray (_adbbc .Get ("\u004b\u0069\u0064\u0073"));if !_eceec {return _aec .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bccfcg .Append (_gfdaa );_gcdgb ._fbccc [_agccg ]=struct{}{};_gcdgb ._afafc =append (_gcdgb ._afafc ,_gfdaa );_gcfg ,_eceec :=_ac .GetInt (_adbbc .Get ("\u0043\u006f\u0075n\u0074"));if !_eceec {return _aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gcfg =*_gcfg +1;if page ._eegg ==nil {_abdac :=_dgf .Track (_gcdgb ._bfeed ,_gbabc ,_gcdgb ._aaadc );if _abdac !=nil {return _abdac ;};}else {_fafda :=_dgf .Track (page ._eegg ._gegbf ,_gbabc ,page ._eegg ._aafbde );if _fafda !=nil {return _fafda ;
};};_gcdgb .addObject (_gfdaa );_dcdb :=_gcdgb .addObjects (_agccg );if _dcdb !=nil {return _dcdb ;};return nil ;};func (_egbae *pdfFontType0 )subsetRegistered ()error {_ggdb ,_faccb :=_egbae .DescendantFont ._bcae .(*pdfCIDFontType2 );if !_faccb {_da .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_egbae .DescendantFont );
return nil ;};if _ggdb ==nil {return nil ;};if _ggdb ._gdgc ==nil {_da .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _egbae ._fbaeda ==nil {_da .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_beeb ,_faccb :=_ac .GetStream (_ggdb ._gdgc .FontFile2 );if !_faccb {_da .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _aec .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_baed ,_dbeff :=_ac .DecodeStream (_beeb );if _dbeff !=nil {_da .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dbeff );
return _dbeff ;};_gfaa ,_dbeff :=_gde .Parse (_ag .NewReader (_baed ));if _dbeff !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_beeb .Stream ));
return _dbeff ;};var _fgabd []rune ;var _edfdc *_gde .Font ;switch _bgfe :=_egbae ._fbaeda .(type ){case *_cd .TrueTypeFontEncoder :_fgabd =_bgfe .RegisteredRunes ();_edfdc ,_dbeff =_gfaa .SubsetKeepRunes (_fgabd );if _dbeff !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeff );
return _dbeff ;};_bgfe .SubsetRegistered ();case *_cd .IdentityEncoder :_fgabd =_bgfe .RegisteredRunes ();_bdee :=make ([]_gde .GlyphIndex ,len (_fgabd ));for _bdfde ,_fgdaf :=range _fgabd {_bdee [_bdfde ]=_gde .GlyphIndex (_fgdaf );};_edfdc ,_dbeff =_gfaa .SubsetKeepIndices (_bdee );
if _dbeff !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeff );return _dbeff ;};case _cd .SimpleEncoder :_eedf :=_bgfe .Charcodes ();for _ ,_gebff :=range _eedf {_fbbf ,_bcceg :=_bgfe .CharcodeToRune (_gebff );if !_bcceg {_da .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gebff );
continue ;};_fgabd =append (_fgabd ,_fbbf );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_egbae ._fbaeda );
};var _gdgggd _ag .Buffer ;_dbeff =_edfdc .Write (&_gdgggd );if _dbeff !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeff );return _dbeff ;};if _egbae ._eceed !=nil {_egbe :=make (map[_adg .CharCode ]rune ,len (_fgabd ));for _ ,_dagc :=range _fgabd {_dbed ,_gaff :=_egbae ._fbaeda .RuneToCharcode (_dagc );
if !_gaff {continue ;};_egbe [_adg .CharCode (_dbed )]=_dagc ;};_egbae ._eceed =_adg .NewToUnicodeCMap (_egbe );};_beeb ,_dbeff =_ac .MakeStream (_gdgggd .Bytes (),_ac .NewFlateEncoder ());if _dbeff !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeff );
return _dbeff ;};_beeb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ac .MakeInteger (int64 (_gdgggd .Len ())));if _cbce ,_bbee :=_ac .GetStream (_ggdb ._gdgc .FontFile2 );_bbee {*_cbce =*_beeb ;}else {_ggdb ._gdgc .FontFile2 =_beeb ;};_dacc :=_cfffc ();
if len (_egbae ._cfca )> 0{_egbae ._cfca =_eggd (_egbae ._cfca ,_dacc );};if len (_ggdb ._cfca )> 0{_ggdb ._cfca =_eggd (_ggdb ._cfca ,_dacc );};if len (_egbae ._ageda )> 0{_egbae ._ageda =_eggd (_egbae ._ageda ,_dacc );};if _ggdb ._gdgc !=nil {_caaaf ,_gcefe :=_ac .GetName (_ggdb ._gdgc .FontName );
if _gcefe &&len (_caaaf .String ())> 0{_egceb :=_eggd (_caaaf .String (),_dacc );_ggdb ._gdgc .FontName =_ac .MakeName (_egceb );};};return nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ggfc *PdfOutlineTreeNode )GetContainingPdfObject ()_ac .PdfObject {return _ggfc .GetContext ().GetContainingPdfObject ();};

// NewKDictFromPdfObject creates a new K dictionary object from a PDF object.
func NewKDictFromPdfObject (obj _ac .PdfObject )(*KDict ,error ){_afaga :=_ac .ResolveReference (obj );if _afaga ==nil {return nil ,_e .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bcece ,_ecfgd :=_ac .GetDict (_afaga );
if !_ecfgd {return nil ,_e .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_gagdf :=&KDict {};if _ffdab :=_bcece .Get ("\u0053");_ffdab !=nil {_gagdf .S =_ffdab ;
};if _fbbab :=_bcece .Get ("\u0050");_fbbab !=nil {_gagdf .P =_fbbab ;};if _feccbb :=_bcece .Get ("\u0049\u0044");_feccbb !=nil {if _gfcbc ,_fcbe :=_ac .GetString (_feccbb );_fcbe {_gagdf .ID =_gfcbc ;};};if _efcbfb :=_bcece .Get ("\u0050\u0067");_efcbfb !=nil {_gagdf .Pg =_efcbfb ;
};if _fgddg :=_bcece .Get ("\u004b");_fgddg !=nil {_gagdf .K =_fgddg ;switch _bbcec :=_fgddg .(type ){case *_ac .PdfObjectArray :if _ecccb ,_aedac :=_ac .GetArray (_fgddg );_aedac {for _ ,_eefbe :=range _ecccb .Elements (){switch _bgfac :=_eefbe .(type ){case *_ac .PdfIndirectObject :_abaca ,_cdbbf :=NewKDictFromPdfObject (_bgfac );
if _cdbbf !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_cdbbf );continue ;};_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_eeafa :_abaca });
case *_ac .PdfObjectInteger :if _agbfce ,_gcddd :=_ac .GetIntVal (_eefbe );_gcddd {_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_acbde :&_agbfce });};case *_ac .PdfObjectDictionary :_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_ebfa :_eefbe });};};
};case *_ac .PdfIndirectObject :_cdfdbe ,_aagg :=NewKDictFromPdfObject (_bbcec );if _aagg !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_aagg );
};if _cdfdbe !=nil {_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_eeafa :_cdfdbe });};case *_ac .PdfObjectDictionary :_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_ebfa :_bbcec });case *_ac .PdfObjectInteger :if _dbfd ,_ceagfa :=_ac .GetIntVal (_fgddg );
_ceagfa {_gagdf ._ecge =append (_gagdf ._ecge ,&KValue {_acbde :&_dbfd });};};};if _eggaf :=_bcece .Get ("\u0041");_eggaf !=nil {_gagdf .A =_eggaf ;};if _dcaba :=_bcece .Get ("\u0043");_dcaba !=nil {_gagdf .C =_dcaba ;};if _aaaa :=_bcece .Get ("\u0052");
_aaaa !=nil {if _eeae ,_bfcf :=_ac .GetInt (_aaaa );_bfcf {_gagdf .R =_eeae ;};};if _gggcf :=_bcece .Get ("\u0054");_gggcf !=nil {if _cagcf ,_ecebc :=_ac .GetString (_gggcf );_ecebc {_gagdf .T =_cagcf ;};};if _eeccg :=_bcece .Get ("\u004c\u0061\u006e\u0067");
_eeccg !=nil {if _gccaea ,_ddgac :=_ac .GetString (_eeccg );_ddgac {_gagdf .Lang =_gccaea ;};};if _eagbb :=_bcece .Get ("\u0041\u006c\u0074");_eagbb !=nil {if _bbccg ,_aadff :=_ac .GetString (_eagbb );_aadff {_gagdf .Alt =_bbccg ;};};if _fcegd :=_bcece .Get ("\u0045");
_fcegd !=nil {if _fbbac ,_gecaf :=_ac .GetString (_fcegd );_gecaf {_gagdf .E =_fbbac ;};};if _cbfagc :=_bcece .Get ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074");_cbfagc !=nil {if _ebdcg ,_bcade :=_ac .GetString (_cbfagc );_bcade {_gagdf .ActualText =_ebdcg ;
};};return _gagdf ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_bcag *PdfAnnotationLink )SetAction (action *PdfAction ){_bcag ._cbge =action ;if action ==nil {_bcag .A =nil ;};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gaaaf *PdfShadingPattern )ToPdfObject ()_ac .PdfObject {_gaaaf .PdfPattern .ToPdfObject ();_dbegdf :=_gaaaf .getDict ();if _gaaaf .Shading !=nil {_dbegdf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gaaaf .Shading .ToPdfObject ());};if _gaaaf .Matrix !=nil {_dbegdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gaaaf .Matrix );
};if _gaaaf .ExtGState !=nil {_dbegdf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gaaaf .ExtGState );};return _gaaaf ._cgfee ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cgbdg pdfFontType3 )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){_dadfd :=_cgbdg .Encoder ();if _dadfd ==nil {_da .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cgbdg );
return _bd .CharMetrics {},false ;};_dedac ,_abdc :=_dadfd .RuneToCharcode (r );if !_abdc {if r !=' '{_da .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cgbdg );
};return _bd .CharMetrics {},false ;};_fffdd ,_ccee :=_cgbdg .GetCharMetrics (_dedac );return _fffdd ,_ccee ;};func (_fcbcc *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};type pdfFontType0 struct{fontCommon ;
_bcbbf *_ac .PdfIndirectObject ;_fbaeda _cd .TextEncoder ;Encoding _ac .PdfObject ;DescendantFont *PdfFont ;_fbcg *_adg .CMap ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dgeg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ac .PdfObjectArray )(*PdfRectangle ,error ){_abdgf :=PdfRectangle {};if arr .Len ()!=4{return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cgegb error ;_abdgf .Llx ,_cgegb =_ac .GetNumberAsFloat (arr .Get (0));if _cgegb !=nil {return nil ,_cgegb ;};_abdgf .Lly ,_cgegb =_ac .GetNumberAsFloat (arr .Get (1));if _cgegb !=nil {return nil ,_cgegb ;};_abdgf .Urx ,_cgegb =_ac .GetNumberAsFloat (arr .Get (2));
if _cgegb !=nil {return nil ,_cgegb ;};_abdgf .Ury ,_cgegb =_ac .GetNumberAsFloat (arr .Get (3));if _cgegb !=nil {return nil ,_cgegb ;};return &_abdgf ,nil ;};func _bbaae (_debe *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_debe }};


// ToPdfObject converts the structure tree root to a PDF object.
func (_ccbdgb *StructTreeRoot )ToPdfObject ()_ac .PdfObject {_fffcf :=_ccbdgb ._cbcac ;if _fffcf ==nil {_fffcf =&_ac .PdfIndirectObject {};_fffcf .PdfObject =_ac .MakeDict ();};_feeabc :=_fffcf .PdfObject .(*_ac .PdfObjectDictionary );var _dbfc _ac .PdfObject ;
if len (_ccbdgb .K )==1{_dbfc =_ac .MakeIndirectObject (_ccbdgb .K [0].ToPdfObject ());}else {_fcccc :=_ac .MakeArray ();for _ ,K :=range _ccbdgb .K {_fcccc .Append (_ac .MakeIndirectObject (K .ToPdfObject ()));};_dbfc =_fcccc ;};var (_fbeaa =[]_ac .PdfObject {};
_gdgbe =map[_ac .PdfObject ][]_ac .PdfObject {};_cccfd =map[string ]_ac .PdfObject {};);_bgaeb (_dbfc ,_fffcf ,_gdgbe ,_cccfd ,&_fbeaa );_feeabc .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_feeabc .Set ("\u004b",_dbfc );if _ccbdgb .IDTree !=nil {_feeabc .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_ac .MakeIndirectObject (_ccbdgb .IDTree .ToPdfObject ()));}else if len (_cccfd )> 0{_afbd :=_ac .MakeArray ();_gcbde :=make ([]string ,0,len (_cccfd ));
for _fdgec :=range _cccfd {_gcbde =append (_gcbde ,_fdgec );};_ga .Strings (_gcbde );for _ ,_dfggb :=range _gcbde {_afbd .Append (_ac .MakeString (_dfggb ));_afbd .Append (_cccfd [_dfggb ]);};_ccbdgb .IDTree =&IDTree {Names :_afbd ,Limits :_ac .MakeArray (_ac .MakeString (_gcbde [0]),_ac .MakeString (_gcbde [len (_gcbde )-1]))};
_feeabc .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_ac .MakeIndirectObject (_ccbdgb .IDTree .ToPdfObject ()));};if _ccbdgb .ParentTree !=nil {_feeabc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_ac .MakeIndirectObject (_ccbdgb .ParentTree ));
}else if len (_gdgbe )> 0||len (_fbeaa )> 0{_bdfg :=_ac .MakeArray ();_efbe :=0;for _geebg ,_cafac :=range _gdgbe {_aceae :=_ac .MakeArray ();for _ ,_fcbac :=range _cafac {_aceae .Append (_fcbac );};_eafbg :=_ac .MakeInteger (int64 (_efbe ));_bdfg .Append (_eafbg );
_bdfg .Append (_ac .MakeIndirectObject (_aceae ));if _aacfa ,_cfbfd :=_ac .GetIndirect (_geebg );_cfbfd {if _efdbca ,_ccecbc :=_ac .GetDict (_aacfa .PdfObject );_ccecbc {_eagdb :=_efdbca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _eagdb !=nil {if _bbfcc ,_fbdgb :=_ac .GetIntVal (_eagdb );_fbdgb {if _efbe < _bbfcc {_efdbca .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eafbg );};};}else {_efdbca .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eafbg );
};};};_efbe ++;};_gdeca :=func (_cacbge _ac .PdfObject ,_gfddf *_ac .PdfObjectDictionary )bool {if _aadd :=_gfddf .Get ("\u004f\u0062\u006a");_aadd !=nil {if _caaea ,_affec :=_ac .GetDict (_aadd );_affec {_gacdbf :=_caaea .Get ("\u0054\u0079\u0070\u0065");
_edddg :=_caaea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gacdbf !=nil &&_gacdbf .String ()=="\u0041\u006e\u006eo\u0074"&&_edddg !=nil &&_edddg .String ()=="\u004c\u0069\u006e\u006b"{_dbcab :=_ac .MakeInteger (int64 (_efbe ));_caaea .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dbcab );
_bdfg .Append (_dbcab );_bdfg .Append (_cacbge );_efbe ++;return true ;};};};return false ;};for _ ,_ffadg :=range _fbeaa {if _fbbe ,_baeab :=_ac .GetDict (_ffadg );_baeab {if _cgfcb :=_fbbe .Get ("\u0053");_cgfcb !=nil {if _dbdgf ,_gcgag :=_ac .GetNameVal (_cgfcb );
_gcgag &&_dbdgf ==StructureTypeLink {if _ebaeb :=_fbbe .Get ("\u004b");_ebaeb !=nil {if _fcaec ,_gcdbb :=_ac .GetArray (_ebaeb );_gcdbb {for _ ,_dgfcb :=range _fcaec .Elements (){if _gcfce ,_dfcdg :=_ac .GetDict (_dgfcb );_dfcdg {_gdeca (_ffadg ,_gcfce );
};};}else if _bbefc ,_acadc :=_ac .GetDict (_ebaeb );_acadc {_gdeca (_ffadg ,_bbefc );};};};};};};_ccbdgb .ParentTree =_ac .MakeDict ();_ccbdgb .ParentTree .Set ("\u004e\u0075\u006d\u0073",_bdfg );_ccbdgb .ParentTreeNextKey =int64 (_efbe );_feeabc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_ac .MakeIndirectObject (_ccbdgb .ParentTree ));
};_feeabc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_ac .MakeInteger (_ccbdgb .ParentTreeNextKey ));if _ccbdgb .RoleMap !=nil {_feeabc .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_ccbdgb .RoleMap );
};if _ccbdgb .ClassMap !=nil {_feeabc .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_ccbdgb .ClassMap );};return _fffcf ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_gbce _ac .PdfObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cbcbc *PdfPageResources )GetXObjectImageByName (keyName _ac .PdfObjectName )(*XObjectImage ,error ){_ebacd ,_cbdd :=_cbcbc .GetXObjectByName (keyName );if _ebacd ==nil {return nil ,nil ;};if _cbdd !=XObjectTypeImage {return nil ,_aec .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_fgdba ,_gdfcc :=NewXObjectImageFromStream (_ebacd );if _gdfcc !=nil {return nil ,_gdfcc ;};return _fgdba ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_acfg *PdfAnnotation )ToPdfObject ()_ac .PdfObject {_faed :=_acfg ._add ;_fdf :=_faed .PdfObject .(*_ac .PdfObjectDictionary );_fdf .Clear ();_fdf .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0041\u006e\u006eo\u0074"));_fdf .SetIfNotNil ("\u0052\u0065\u0063\u0074",_acfg .Rect );
_fdf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_acfg .Contents );_fdf .SetIfNotNil ("\u0050",_acfg .P );_fdf .SetIfNotNil ("\u004e\u004d",_acfg .NM );_fdf .SetIfNotNil ("\u004d",_acfg .M );_fdf .SetIfNotNil ("\u0046",_acfg .F );_fdf .SetIfNotNil ("\u0041\u0050",_acfg .AP );
_fdf .SetIfNotNil ("\u0041\u0053",_acfg .AS );_fdf .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_acfg .Border );_fdf .SetIfNotNil ("\u0043",_acfg .C );_fdf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_acfg .StructParent );
_fdf .SetIfNotNil ("\u004f\u0043",_acfg .OC );return _faed ;};func (_eggda *PdfReader )loadAnnotations (_ecef _ac .PdfObject )([]*PdfAnnotation ,error ){_eded ,_dgfbb :=_ac .GetArray (_ecef );if !_dgfbb {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eddeb []*PdfAnnotation ;for _ ,_cgcge :=range _eded .Elements (){_cgcge =_ac .ResolveReference (_cgcge );if _ ,_ffgc :=_cgcge .(*_ac .PdfObjectNull );_ffgc {continue ;};_dddgg ,_fgggf :=_cgcge .(*_ac .PdfObjectDictionary );_dfabg ,_gafea :=_cgcge .(*_ac .PdfIndirectObject );
if _fgggf {_dfabg =&_ac .PdfIndirectObject {};_dfabg .PdfObject =_dddgg ;}else {if !_gafea {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_addfa ,_bcddg :=_eggda .newPdfAnnotationFromIndirectObject (_dfabg );if _bcddg !=nil {return nil ,_bcddg ;};switch _cbada :=_addfa .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_agedba :=range _eggda .AcroForm .AllFields (){if _agedba ._fggde ==_cbada .Parent {_cbada ._fbe =_agedba ;
break ;};};};if _addfa !=nil {_eddeb =append (_eddeb ,_addfa );};};return _eddeb ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_abffb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gccfa ,_deca :=_ac .GetNumbersAsFloat (objects );
if _deca !=nil {return nil ,_deca ;};return _abffb .ColorFromFloats (_gccfa );};

// Y returns the value of the yellow component of the color.
func (_fbaf *PdfColorDeviceCMYK )Y ()float64 {return _fbaf [2]};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ac .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _afcdge error ;encoder ,_afcdge =img .getSuitableEncoder ();if _afcdge !=nil {_da .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_afcdge );
encoder =_ac .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_ceedeb ,_babga :=encoder .EncodeBytes (img .Data );if _babga !=nil {_da .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_babga );
return nil ,_babga ;};_cdgfd :=NewXObjectImage ();_dfebe :=img .Width ;_gfefc :=img .Height ;_cdgfd .Width =&_dfebe ;_cdgfd .Height =&_gfefc ;_gaaafc :=img .BitsPerComponent ;_cdgfd .BitsPerComponent =&_gaaafc ;_cdgfd .Filter =encoder ;_cdgfd .Stream =_ceedeb ;
if cs ==nil {if img .ColorComponents ==1{_cdgfd .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_ac .DCTEncoder :_cdgfd .ColorSpace =NewPdfColorspaceDeviceRGB ();_gaaafc =8;_cdgfd .BitsPerComponent =&_gaaafc ;
};};}else if img .ColorComponents ==3{_cdgfd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_ac .DCTEncoder :_cdgfd .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_cdgfd .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_aec .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cdgfd .ColorSpace =cs ;};if len (img ._geag )!=0{_aaafd :=NewXObjectImage ();_aaafd .Filter =encoder ;_bcfeb ,_cdedf :=encoder .EncodeBytes (img ._geag );
if _cdedf !=nil {_da .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cdedf );return nil ,_cdedf ;};_aaafd .Stream =_bcfeb ;_aaafd .BitsPerComponent =_cdgfd .BitsPerComponent ;
_aaafd .Width =&img .Width ;_aaafd .Height =&img .Height ;_aaafd .ColorSpace =NewPdfColorspaceDeviceGray ();_cdgfd .SMask =_aaafd .ToPdfObject ();}else {_cdgfd .SMask =xobjIn .SMask ;_cdgfd .ImageMask =xobjIn .ImageMask ;if _cdgfd .ColorSpace .GetNumComponents ()==1{_cdbgd (_cdgfd );
};};return _cdgfd ,nil ;};func _edfgg (_dbbb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_dbbb }};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ggaff *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbg ,_dcbbc :=_ac .GetNumbersAsFloat (objects );
if _dcbbc !=nil {return nil ,_dcbbc ;};return _ggaff .ColorFromFloats (_gcbg );};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bef :=NewPdfAction ();_bcc :=&PdfActionThread {};_bcc .PdfAction =_bef ;_bef .SetContext (_bcc );return _bcc ;};

// Encoder returns the font's text encoder.
func (_bfea *PdfFont )Encoder ()_cd .TextEncoder {_eecgf :=_bfea .actualFont ();if _eecgf ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bfea ._bcae );
return nil ;};return _eecgf .Encoder ();};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ac .PdfObject ;H _ac .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_cdffd OutlineDest )ToPdfObject ()_ac .PdfObject {if (_cdffd .PageObj ==nil &&_cdffd .Page < 0)||_cdffd .Mode ==""{return _ac .MakeNull ();};_affbg :=_ac .MakeArray ();if _cdffd .PageObj !=nil {_affbg .Append (_cdffd .PageObj );}else {_affbg .Append (_ac .MakeInteger (_cdffd .Page ));
};_affbg .Append (_ac .MakeName (_cdffd .Mode ));switch _cdffd .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_affbg .Append (_ac .MakeFloat (_cdffd .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_affbg .Append (_ac .MakeFloat (_cdffd .X ));
case "\u0058\u0059\u005a":_affbg .Append (_ac .MakeFloat (_cdffd .X ));_affbg .Append (_ac .MakeFloat (_cdffd .Y ));_affbg .Append (_ac .MakeFloat (_cdffd .Zoom ));default:_affbg .Set (1,_ac .MakeName ("\u0046\u0069\u0074"));};return _affbg ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gcaff *PdfColorspaceCalRGB )ToPdfObject ()_ac .PdfObject {_bccf :=&_ac .PdfObjectArray {};_bccf .Append (_ac .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_afdfe :=_ac .MakeDict ();if _gcaff .WhitePoint !=nil {_cafdc :=_ac .MakeArray (_ac .MakeFloat (_gcaff .WhitePoint [0]),_ac .MakeFloat (_gcaff .WhitePoint [1]),_ac .MakeFloat (_gcaff .WhitePoint [2]));
_afdfe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cafdc );}else {_da .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gcaff .BlackPoint !=nil {_cfgb :=_ac .MakeArray (_ac .MakeFloat (_gcaff .BlackPoint [0]),_ac .MakeFloat (_gcaff .BlackPoint [1]),_ac .MakeFloat (_gcaff .BlackPoint [2]));_afdfe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cfgb );
};if _gcaff .Gamma !=nil {_fcbcd :=_ac .MakeArray (_ac .MakeFloat (_gcaff .Gamma [0]),_ac .MakeFloat (_gcaff .Gamma [1]),_ac .MakeFloat (_gcaff .Gamma [2]));_afdfe .Set ("\u0047\u0061\u006dm\u0061",_fcbcd );};if _gcaff .Matrix !=nil {_bedc :=_ac .MakeArray (_ac .MakeFloat (_gcaff .Matrix [0]),_ac .MakeFloat (_gcaff .Matrix [1]),_ac .MakeFloat (_gcaff .Matrix [2]),_ac .MakeFloat (_gcaff .Matrix [3]),_ac .MakeFloat (_gcaff .Matrix [4]),_ac .MakeFloat (_gcaff .Matrix [5]),_ac .MakeFloat (_gcaff .Matrix [6]),_ac .MakeFloat (_gcaff .Matrix [7]),_ac .MakeFloat (_gcaff .Matrix [8]));
_afdfe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bedc );};_bccf .Append (_afdfe );if _gcaff ._abca !=nil {_gcaff ._abca .PdfObject =_bccf ;return _gcaff ._abca ;};return _bccf ;};func _gefg (_cgdgc *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cgdgc }};
func _ggacc ()*modelManager {_acbaa :=modelManager {};_acbaa ._cegdc =map[PdfModel ]_ac .PdfObject {};_acbaa ._cabgd =map[_ac .PdfObject ]PdfModel {};_acbaa ._eeda =_gc .RWMutex {};_acbaa ._eeebb =_gc .RWMutex {};return &_acbaa ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_feea :_ac .MakeIndirectObject (_ac .MakeDict ()),VRI :map[string ]*VRI {}};};func (_gagad *PdfWriter )mapObjectStreams (_beeeg bool )(map[_ac .PdfObject ]bool ,bool ){_cadgf :=make (map[_ac .PdfObject ]bool );for _ ,_dcbae :=range _gagad ._beggg {if _bgaea ,_adefc :=_dcbae .(*_ac .PdfObjectStreams );
_adefc {_beeeg =true ;for _ ,_dbcca :=range _bgaea .Elements (){_cadgf [_dbcca ]=true ;if _bcbag ,_cbebd :=_dbcca .(*_ac .PdfIndirectObject );_cbebd {_cadgf [_bcbag .PdfObject ]=true ;};};};};return _cadgf ,_beeeg ;};

// ToPdfObject returns a stream object.
func (_feda *XObjectForm )ToPdfObject ()_ac .PdfObject {_abgfe :=_feda ._abfbc ;_dcdfc :=_abgfe .PdfObjectDictionary ;if _feda .Filter !=nil {_dcdfc =_feda .Filter .MakeStreamDict ();_abgfe .PdfObjectDictionary =_dcdfc ;};_dcdfc .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dcdfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0046\u006f\u0072\u006d"));_dcdfc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_feda .FormType );_dcdfc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_feda .BBox );_dcdfc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_feda .Matrix );
if _feda .Resources !=nil {_dcdfc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_feda .Resources .ToPdfObject ());};_dcdfc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_feda .Group );_dcdfc .SetIfNotNil ("\u0052\u0065\u0066",_feda .Ref );_dcdfc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_feda .MetaData );
_dcdfc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_feda .PieceInfo );_dcdfc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_feda .LastModified );_dcdfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_feda .StructParent );
_dcdfc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_feda .StructParents );_dcdfc .SetIfNotNil ("\u004f\u0050\u0049",_feda .OPI );_dcdfc .SetIfNotNil ("\u004f\u0043",_feda .OC );_dcdfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_feda .Name );
_dcdfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_feda .Stream ))));_abgfe .Stream =_feda .Stream ;return _abgfe ;};

// SetImage updates XObject Image with new image data.
func (_gagag *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gagag .Filter .UpdateParams (img .GetParamsDict ());_ecgac ,_daega :=_gagag .Filter .EncodeBytes (img .Data );if _daega !=nil {return _daega ;};_gagag .Stream =_ecgac ;_bfaaae :=img .Width ;
_gagag .Width =&_bfaaae ;_ebgeca :=img .Height ;_gagag .Height =&_ebgeca ;_bgaead :=img .BitsPerComponent ;_gagag .BitsPerComponent =&_bgaead ;if cs ==nil {if img .ColorComponents ==1{_gagag .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gagag .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gagag .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _aec .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gagag .ColorSpace =cs ;};return nil ;
};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_feea *_ac .PdfIndirectObject ;Certs []*_ac .PdfObjectStream ;OCSPs []*_ac .PdfObjectStream ;CRLs []*_ac .PdfObjectStream ;VRI map[string ]*VRI ;_gfa map[string ]*_ac .PdfObjectStream ;_ffgba map[string ]*_ac .PdfObjectStream ;_cffb map[string ]*_ac .PdfObjectStream ;
};

// ToGoTime returns the date in time.Time format.
func (_gefcb PdfDate )ToGoTime ()_dg .Time {_baefg :=int (_gefcb ._gfbbc *60*60+_gefcb ._eggcc *60);switch _gefcb ._ddfdc {case '-':_baefg =-_baefg ;case 'Z':_baefg =0;};_aaccga :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_gefcb ._ddfdc ,_gefcb ._gfbbc ,_gefcb ._eggcc );
_aeccfb :=_dg .FixedZone (_aaccga ,_baefg );return _dg .Date (int (_gefcb ._cbfdg ),_dg .Month (_gefcb ._dbfbe ),int (_gefcb ._fafd ),int (_gefcb ._aagfa ),int (_gefcb ._gaeea ),int (_gefcb ._fbaff ),0,_aeccfb );};

// SetCenterWindow sets the value of the centerWindow flag.
func (_cegae *ViewerPreferences )SetCenterWindow (centerWindow bool ){_cegae ._aggfg =&centerWindow };func _gdcad (_face _ac .PdfObject )(*PdfFunctionType2 ,error ){_bbefbf :=&PdfFunctionType2 {};var _agdfe *_ac .PdfObjectDictionary ;if _eecee ,_fcade :=_face .(*_ac .PdfIndirectObject );
_fcade {_cddg ,_ecbcef :=_eecee .PdfObject .(*_ac .PdfObjectDictionary );if !_ecbcef {return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbefbf ._ecdbd =_eecee ;_agdfe =_cddg ;}else if _bgbfe ,_bebb :=_face .(*_ac .PdfObjectDictionary );
_bebb {_agdfe =_bgbfe ;}else {return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_da .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_agdfe .String ());_cdegd ,_cgbb :=_ac .TraceToDirectObject (_agdfe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ac .PdfObjectArray );
if !_cgbb {_da .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cdegd .Len ()< 0||_cdegd .Len ()%2!=0{_da .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ffdd ,_ddfcc :=_cdegd .ToFloat64Array ();if _ddfcc !=nil {return nil ,_ddfcc ;};_bbefbf .Domain =_ffdd ;_cdegd ,_cgbb =_ac .TraceToDirectObject (_agdfe .Get ("\u0052\u0061\u006eg\u0065")).(*_ac .PdfObjectArray );if _cgbb {if _cdegd .Len ()< 0||_cdegd .Len ()%2!=0{return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dgebe ,_cdfafg :=_cdegd .ToFloat64Array ();if _cdfafg !=nil {return nil ,_cdfafg ;};_bbefbf .Range =_dgebe ;};_cdegd ,_cgbb =_ac .TraceToDirectObject (_agdfe .Get ("\u0043\u0030")).(*_ac .PdfObjectArray );if _cgbb {_gfag ,_abfff :=_cdegd .ToFloat64Array ();
if _abfff !=nil {return nil ,_abfff ;};_bbefbf .C0 =_gfag ;};_cdegd ,_cgbb =_ac .TraceToDirectObject (_agdfe .Get ("\u0043\u0031")).(*_ac .PdfObjectArray );if _cgbb {_dcgf ,_ceadb :=_cdegd .ToFloat64Array ();if _ceadb !=nil {return nil ,_ceadb ;};_bbefbf .C1 =_dcgf ;
};if len (_bbefbf .C0 )!=len (_bbefbf .C1 ){_da .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_ac .ErrRangeError ;};N ,_ddfcc :=_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_agdfe .Get ("\u004e")));
if _ddfcc !=nil {_da .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_agdfe .String ());return nil ,_ddfcc ;};_bbefbf .N =N ;
return _bbefbf ,nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_dccdd *PdfPageResources )HasColorspaceByName (keyName _ac .PdfObjectName )bool {_acfde ,_abefc :=_dccdd .GetColorspaces ();if _abefc !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abefc );
return false ;};if _acfde ==nil {return false ;};_ ,_gdfdf :=_acfde .Colorspaces [string (keyName )];return _gdfdf ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_befb DefaultImageHandler )NewGrayImageFromGoImage (goimg _gb .Image )(*Image ,error ){_aceg :=goimg .Bounds ();_ceca :=&Image {Width :int64 (_aceg .Dx ()),Height :int64 (_aceg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _acbg :=goimg .(type ){case *_gb .Gray :if len (_acbg .Pix )!=_aceg .Dx ()*_aceg .Dy (){_dgda ,_fggg :=_cf .GrayConverter .Convert (goimg );
if _fggg !=nil {return nil ,_fggg ;};_ceca .Data =_dgda .Pix ();}else {_ceca .Data =_acbg .Pix ;};case *_gb .Gray16 :_ceca .BitsPerComponent =16;if len (_acbg .Pix )!=_aceg .Dx ()*_aceg .Dy ()*2{_cedbb ,_egcgfc :=_cf .Gray16Converter .Convert (goimg );
if _egcgfc !=nil {return nil ,_egcgfc ;};_ceca .Data =_cedbb .Pix ();}else {_ceca .Data =_acbg .Pix ;};case _cf .Image :_cfega :=_acbg .Base ();if _cfega .ColorComponents ==1{_ceca .BitsPerComponent =int64 (_cfega .BitsPerComponent );_ceca .Data =_cfega .Data ;
return _ceca ,nil ;};_fdccg ,_cbgea :=_cf .GrayConverter .Convert (goimg );if _cbgea !=nil {return nil ,_cbgea ;};_ceca .Data =_fdccg .Pix ();default:_ecfd ,_gacfd :=_cf .GrayConverter .Convert (goimg );if _gacfd !=nil {return nil ,_gacfd ;};_ceca .Data =_ecfd .Pix ();
};return _ceca ,nil ;};

// SetFillImage attach a model.Image to push button.
func (_febdf *PdfFieldButton )SetFillImage (image *Image ){if _febdf .IsPush (){_febdf ._aefc =image ;};};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_agdaf *PdfPage )GetRotate ()(int64 ,error ){if _agdaf .Rotate !=nil {return *_agdaf .Rotate ,nil ;};_eeggg :=_agdaf .Parent ;for _eeggg !=nil {_befd ,_caggc :=_ac .GetDict (_eeggg );if !_caggc {return 0,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bceag :=_befd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bceag !=nil {_dbec ,_ggbea :=_ac .GetInt (_bceag );if !_ggbea {return 0,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _dbec !=nil {return int64 (*_dbec ),nil ;
};return 0,_aec .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_eeggg =_befd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_aec .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// Register registers (caches) a model to primitive object relationship.
func (_gfbce *modelManager )Register (primitive _ac .PdfObject ,model PdfModel ){_gfbce ._eeda .Lock ();defer _gfbce ._eeda .Unlock ();_gfbce ._eeebb .Lock ();defer _gfbce ._eeebb .Unlock ();_gfbce ._cegdc [model ]=primitive ;_gfbce ._cabgd [primitive ]=model ;
};

// Direction returns the value of the direction.
func (_baefb *ViewerPreferences )Direction ()Direction {return _baefb ._gfad };

// ToPdfObject implements interface PdfModel.
func (_bdff *PdfAnnotationFileAttachment )ToPdfObject ()_ac .PdfObject {_bdff .PdfAnnotation .ToPdfObject ();_gae :=_bdff ._add ;_aebd :=_gae .PdfObject .(*_ac .PdfObjectDictionary );_bdff .PdfAnnotationMarkup .appendToPdfDictionary (_aebd );_aebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_aebd .SetIfNotNil ("\u0046\u0053",_bdff .FS );_aebd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bdff .Name );return _gae ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ffbc *PdfFieldSignature )ToPdfObject ()_ac .PdfObject {if _ffbc .PdfAnnotationWidget !=nil {_ffbc .PdfAnnotationWidget .ToPdfObject ();};_ffbc .PdfField .ToPdfObject ();_eggc :=_ffbc ._fggde ;_cacb :=_eggc .PdfObject .(*_ac .PdfObjectDictionary );
_cacb .SetIfNotNil ("\u0046\u0054",_ac .MakeName ("\u0053\u0069\u0067"));_cacb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ffbc .Lock );_cacb .SetIfNotNil ("\u0053\u0056",_ffbc .SV );if _ffbc .V !=nil {_cacb .SetIfNotNil ("\u0056",_ffbc .V .ToPdfObject ());
};return _eggc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bbdc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bbdc .UnderlyingCS ==nil {return nil ,_aec .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _bbdc .UnderlyingCS .ColorFromFloats (vals );};func (_dgb *PdfReader )newPdfAnnotationRichMediaFromDict (_afaa *_ac .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ccd :=&PdfAnnotationRichMedia {};_ccd .RichMediaSettings =_afaa .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ccd .RichMediaContent =_afaa .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ccd ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_degca *PdfPattern )SetContext (ctx PdfModel ){_degca ._geeeb =ctx };func (_efaga *PdfShading )getShadingDict ()(*_ac .PdfObjectDictionary ,error ){_accdc :=_efaga ._affg ;if _gcbgg ,_bgfgd :=_accdc .(*_ac .PdfIndirectObject );_bgfgd {_eegag ,_gbbc :=_gcbgg .PdfObject .(*_ac .PdfObjectDictionary );
if !_gbbc {return nil ,_ac .ErrTypeError ;};return _eegag ,nil ;}else if _bccdf ,_bdge :=_accdc .(*_ac .PdfObjectStream );_bdge {return _bccdf .PdfObjectDictionary ,nil ;}else if _eaebg ,_ffdfd :=_accdc .(*_ac .PdfObjectDictionary );_ffdfd {return _eaebg ,nil ;
}else {_da .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_ac .ErrTypeError ;};};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bbdf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_dfe *PdfActionGoToR )ToPdfObject ()_ac .PdfObject {_dfe .PdfAction .ToPdfObject ();_dcg :=_dfe ._acf ;_aca :=_dcg .PdfObject .(*_ac .PdfObjectDictionary );_aca .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeGoToR )));if _dfe .F !=nil {_aca .Set ("\u0046",_dfe .F .ToPdfObject ());
};_aca .SetIfNotNil ("\u0044",_dfe .D );_aca .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dfe .NewWindow );return _dcg ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_eefe *_ac .PdfIndirectObject ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ffbgg PdfModel ;_fggde *_ac .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ac .PdfObjectName ;T *_ac .PdfObjectString ;TU *_ac .PdfObjectString ;TM *_ac .PdfObjectString ;Ff *_ac .PdfObjectInteger ;
V _ac .PdfObject ;DV _ac .PdfObject ;AA _ac .PdfObject ;VariableText *VariableText ;};func _dbccg (_dbef _ac .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dgcc :=NewPdfColorspaceSpecialIndexed ();if _bbfc ,_bdfe :=_dbef .(*_ac .PdfIndirectObject );
_bdfe {_dgcc ._gaecc =_bbfc ;};_dbef =_ac .TraceToDirectObject (_dbef );_adfe ,_ggcac :=_dbef .(*_ac .PdfObjectArray );if !_ggcac {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adfe .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dbef =_adfe .Get (0);_eacce ,_ggcac :=_dbef .(*_ac .PdfObjectName );if !_ggcac {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_eacce !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_dbef =_adfe .Get (1);_caca ,_cgggg :=DetermineColorspaceNameFromPdfObject (_dbef );if _cgggg !=nil {return nil ,_cgggg ;};if _caca =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_caca =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_da .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_caca );
return nil ,_baega ;};_daaa ,_cgggg :=NewPdfColorspaceFromPdfObject (_dbef );if _cgggg !=nil {return nil ,_cgggg ;};_dgcc .Base =_daaa ;_dbef =_adfe .Get (2);_gdba ,_cgggg :=_ac .GetNumberAsInt64 (_dbef );if _cgggg !=nil {return nil ,_cgggg ;};if _gdba > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_dgcc .HiVal =int (_gdba );_dbef =_adfe .Get (3);_dgcc .Lookup =_dbef ;_dbef =_ac .TraceToDirectObject (_dbef );var _fdca []byte ;if _bfgbf ,_ffgf :=_dbef .(*_ac .PdfObjectString );_ffgf {_fdca =_bfgbf .Bytes ();_da .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fdca );
}else if _bgbd ,_cfac :=_dbef .(*_ac .PdfObjectStream );_cfac {_da .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dbef .String ());_da .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_bgbd .Stream ),_bgbd .Stream );
_bfcad ,_eabf :=_ac .DecodeStream (_bgbd );if _eabf !=nil {return nil ,_eabf ;};_da .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bfcad ),_bfcad );_fdca =_bfcad ;}else {_da .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dbef );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fdca )< _dgcc .Base .GetNumComponents ()*(_dgcc .HiVal +1){_da .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_da .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fdca ),_dgcc .Base .GetNumComponents (),_dgcc .HiVal );
}else {_fdca =_fdca [:_dgcc .Base .GetNumComponents ()*(_dgcc .HiVal +1)];};_dgcc ._ccff =_fdca ;return _dgcc ,nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_agbgf *PdfPageResources )SetColorspaceByName (keyName _ac .PdfObjectName ,cs PdfColorspace )error {_cfefe ,_bgffe :=_agbgf .GetColorspaces ();if _bgffe !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgffe );
return _bgffe ;};if _cfefe ==nil {_cfefe =NewPdfPageResourcesColorspaces ();_agbgf .SetColorSpace (_cfefe );};_cfefe .Set (keyName ,cs );return nil ;};func (_ddcde *PdfReader )loadPerms ()(*Permissions ,error ){if _afcbb :=_ddcde ._dfae .Get ("\u0050\u0065\u0072m\u0073");
_afcbb !=nil {if _daeg ,_geege :=_ac .GetDict (_afcbb );_geege {_cbee :=_daeg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _cbee ==nil {return nil ,nil ;};if _aeeb ,_cgbc :=_ac .GetIndirect (_cbee );_cgbc {_cacfc ,_gadd :=_ddcde .newPdfSignatureFromIndirect (_aeeb );
if _gadd !=nil {return nil ,_gadd ;};return NewPermissions (_cacfc ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ggbc :=NewPdfAnnotation ();_beffg :=&PdfAnnotationUnderline {};_beffg .PdfAnnotation =_ggbc ;_beffg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggbc .SetContext (_beffg );return _beffg ;};

// SetNumCopies sets the value of the numCopies.
func (_efdce *ViewerPreferences )SetNumCopies (numCopies int ){_efdce ._daaaed =numCopies };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_baeba *pdfCIDFontType0 )ToPdfObject ()_ac .PdfObject {return _ac .MakeNull ()};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_eeafa *KDict ;_ebfa _ac .PdfObject ;_acbde *int ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fffd :=NewPdfAnnotation ();_afd :=&PdfAnnotationSound {};_afd .PdfAnnotation =_fffd ;_afd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fffd .SetContext (_afd );return _afd ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ggggc *pdfCIDFontType2 )ToPdfObject ()_ac .PdfObject {if _ggggc ._affb ==nil {_ggggc ._affb =&_ac .PdfIndirectObject {};};_febg :=_ggggc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_ggggc ._affb .PdfObject =_febg ;if _ggggc .CIDSystemInfo !=nil {_febg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ggggc .CIDSystemInfo );};if _ggggc .DW !=nil {_febg .Set ("\u0044\u0057",_ggggc .DW );};if _ggggc .DW2 !=nil {_febg .Set ("\u0044\u0057\u0032",_ggggc .DW2 );
};if _ggggc .W !=nil {_febg .Set ("\u0057",_ggggc .W );};if _ggggc .W2 !=nil {_febg .Set ("\u0057\u0032",_ggggc .W2 );};if _ggggc .CIDToGIDMap !=nil {_febg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ggggc .CIDToGIDMap );};return _ggggc ._affb ;
};

// ToPdfObject implements interface PdfModel.
func (_gac *PdfActionMovie )ToPdfObject ()_ac .PdfObject {_gac .PdfAction .ToPdfObject ();_bbdb :=_gac ._acf ;_bcfa :=_bbdb .PdfObject .(*_ac .PdfObjectDictionary );_bcfa .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeMovie )));_bcfa .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gac .Annotation );
_bcfa .SetIfNotNil ("\u0054",_gac .T );_bcfa .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gac .Operation );return _bbdb ;};

// GetStandardApplier gets currently used StandardApplier..
func (_cedfa *PdfWriter )GetStandardApplier ()StandardApplier {return _cedfa ._cdccd };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ac .PdfObject )(_ac .PdfObjectName ,error ){var _dcec *_ac .PdfObjectName ;var _ddbd *_ac .PdfObjectArray ;if _afgd ,_gecb :=obj .(*_ac .PdfIndirectObject );_gecb {if _fggce ,_bggg :=_afgd .PdfObject .(*_ac .PdfObjectArray );
_bggg {_ddbd =_fggce ;}else if _afab ,_dcbba :=_afgd .PdfObject .(*_ac .PdfObjectName );_dcbba {_dcec =_afab ;};}else if _dgbc ,_gdgg :=obj .(*_ac .PdfObjectArray );_gdgg {_ddbd =_dgbc ;}else if _bbfb ,_gffa :=obj .(*_ac .PdfObjectName );_gffa {_dcec =_bbfb ;
};if _dcec !=nil {switch *_dcec {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_dcec ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_dcec ,nil ;
};};if _ddbd !=nil &&_ddbd .Len ()> 0{if _ffcf ,_eaeb :=_ddbd .Get (0).(*_ac .PdfObjectName );_eaeb {switch *_ffcf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ddbd .Len ()==1{return *_ffcf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ffcf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ffcf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ffcf ,nil ;};};};return "",nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gacb *DSS )GetContainingPdfObject ()_ac .PdfObject {return _gacb ._feea };

// SetContentStream sets the pattern cell's content stream.
func (_eaff *PdfTilingPattern )SetContentStream (content []byte ,encoder _ac .StreamEncoder )error {_fadca ,_bcfc :=_eaff ._cgfee .(*_ac .PdfObjectStream );if !_bcfc {_da .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eaff ._cgfee );
return _ac .ErrTypeError ;};if encoder ==nil {encoder =_ac .NewRawEncoder ();};_degce :=_fadca .PdfObjectDictionary ;_fbfd :=encoder .MakeStreamDict ();_degce .Merge (_fbfd );_gbddfc ,_ebadb :=encoder .EncodeBytes (content );if _ebadb !=nil {return _ebadb ;
};_degce .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_gbddfc ))));_fadca .Stream =_gbddfc ;return nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_adga .Lock ();defer _adga .Unlock ();_cddca =keywords };

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_aacc :=PdfPage {};_aacc ._gbbf =_ac .MakeDict ();_aacc .Resources =NewPdfPageResources ();_edgg :=_ac .PdfIndirectObject {};_edgg .PdfObject =_aacc ._gbbf ;_aacc ._gbdca =&_edgg ;_aacc ._fefgc =*_aacc ._gbbf ;return &_aacc ;
};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_abff *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gbae :=0.3*_abff .R ()+0.59*_abff .G ()+0.11*_abff .B ();_gbae =_fe .Min (_fe .Max (_gbae ,0.0),1.0);return NewPdfColorDeviceGray (_gbae );};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gcdg :=NewPdfAnnotation ();_aff :=&PdfAnnotationStrikeOut {};_aff .PdfAnnotation =_gcdg ;_aff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcdg .SetContext (_aff );return _aff ;};func _gefb (_ffef _ac .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_da .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_ffef .String (),_ffef );
_afcf :=NewPdfColorspaceSpecialPattern ();if _cdeg ,_cfad :=_ffef .(*_ac .PdfIndirectObject );_cfad {_afcf ._abbbd =_cdeg ;};_ffef =_ac .TraceToDirectObject (_ffef );if _cbfd ,_ffab :=_ffef .(*_ac .PdfObjectName );_ffab {if *_cbfd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _afcf ,nil ;};_gdca ,_eag :=_ffef .(*_ac .PdfObjectArray );if !_eag {_da .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_ffef );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gdca .Len ()!=1&&_gdca .Len ()!=2{_da .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gdca );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_ffef =_gdca .Get (0);if _ceddc ,_aadc :=_ffef .(*_ac .PdfObjectName );_aadc {if *_ceddc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_da .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ceddc );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gdca .Len ()> 1{_ffef =_gdca .Get (1);_ffef =_ac .TraceToDirectObject (_ffef );_eaab ,_acdc :=NewPdfColorspaceFromPdfObject (_ffef );if _acdc !=nil {return nil ,_acdc ;
};_afcf .UnderlyingCS =_eaab ;};_da .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_afcf .UnderlyingCS );
return _afcf ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bdbb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _aec .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_afbc :=field .V ;if _afbc ==nil {return _aec .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bbef :=pageNum -1;
if _bbef < 0||_bbef > len (_bdbb ._ega )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ffcb :=_bdbb .Reader .PageList [_bbef ];field .P =_ffcb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ac .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_ffcb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bdbb ._bbcc ==_bdbb ._badg .AcroForm {_bdbb ._bbcc =_bdbb .Reader .AcroForm ;};_ecg :=_bdbb ._bbcc ;if _ecg ==nil {_ecg =NewPdfAcroForm ();};_ecg .SigFlags =_ac .MakeInteger (3);if _ecg .NeedAppearances !=nil {_ecg .NeedAppearances =nil ;
};_bccbe :=append (_ecg .AllFields (),field .PdfField );_ecg .Fields =&_bccbe ;_bdbb .ReplaceAcroForm (_ecg );_bdbb .UpdatePage (_ffcb );_bdbb ._ega [_bbef ]=_ffcb ;if _ ,_bbdd :=field .V .GetDocMDPPermission ();_bbdd {_bdbb ._eca =NewPermissions (field .V );
};return nil ;};func (_gefeg *pdfFontSimple )addEncoding ()error {var (_cbfef string ;_bbcg map[_cd .CharCode ]_cd .GlyphName ;_gceg _cd .SimpleEncoder ;);if _gefeg .Encoder ()!=nil {_afcge ,_fcbde :=_gefeg .Encoder ().(_cd .SimpleEncoder );if _fcbde &&_afcge !=nil {_cbfef =_afcge .BaseName ();
};};if _gefeg .Encoding !=nil {_gcdbd ,_bbbc ,_gabda :=_gefeg .getFontEncoding ();if _gabda !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gefeg ._cfca ,_gefeg ._bacd ,_gefeg .Encoding ,_gefeg .Encoding ,_gabda );
return _gabda ;};if _gcdbd !=""{_cbfef =_gcdbd ;};_bbcg =_bbbc ;_gceg ,_gabda =_cd .NewSimpleTextEncoder (_cbfef ,_bbcg );if _gabda !=nil {return _gabda ;};};if _gceg ==nil {_caeac :=_gefeg ._gdgc ;if _caeac !=nil {switch _gefeg ._bacd {case "\u0054\u0079\u0070e\u0031":if _caeac .fontFile !=nil &&_caeac .fontFile ._bbfd !=nil {_da .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_gceg =_caeac .fontFile ._bbfd ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _caeac ._caega !=nil {_da .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_bddgc ,_gefcf :=_caeac ._caega .MakeEncoder ();
if _gefcf ==nil {_gceg =_bddgc ;};if _gefeg ._eceed ==nil {_gefeg ._eceed =_caeac ._caega .MakeToUnicode ();};};};};};if _gceg !=nil {if _bbcg !=nil {_da .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbcg ,_gefeg .baseFields ());
_gceg =_cd .ApplyDifferences (_gceg ,_bbcg );};_gefeg .SetEncoder (_gceg );};return nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_ecbcg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _ecbcg ._cfgc !=nil {return _ecbcg ._cfgc ,nil ;};if _ecbcg .ColorSpace ==nil {return nil ,nil ;};_afagf ,_eafeb :=_cagb (_ecbcg .ColorSpace );if _eafeb !=nil {return nil ,_eafeb ;
};_ecbcg ._cfgc =_afagf ;return _ecbcg ._cfgc ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_fcge *PdfWriter )GetOptimizer ()Optimizer {return _fcge ._dcgcb };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_edcbb *PdfColorspaceDeviceN )ToPdfObject ()_ac .PdfObject {_ecgf :=_ac .MakeArray (_ac .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ecgf .Append (_edcbb .ColorantNames );_ecgf .Append (_edcbb .AlternateSpace .ToPdfObject ());_ecgf .Append (_edcbb .TintTransform .ToPdfObject ());
if _edcbb .Attributes !=nil {_ecgf .Append (_edcbb .Attributes .ToPdfObject ());};if _edcbb ._cceac !=nil {_edcbb ._cceac .PdfObject =_ecgf ;return _edcbb ._cceac ;};return _ecgf ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ceedb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ceedb ._geeeb .(*PdfShadingPattern );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ToPdfObject implements interface PdfModel.
func (_gbg *PdfActionImportData )ToPdfObject ()_ac .PdfObject {_gbg .PdfAction .ToPdfObject ();_aba :=_gbg ._acf ;_ead :=_aba .PdfObject .(*_ac .PdfObjectDictionary );_ead .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeImportData )));if _gbg .F !=nil {_ead .Set ("\u0046",_gbg .F .ToPdfObject ());
};return _aba ;};func (_ebged *PdfReader )buildPageList (_fgcg *_ac .PdfIndirectObject ,_feeag *_ac .PdfIndirectObject ,_deba map[_ac .PdfObject ]struct{})error {if _fgcg ==nil {return nil ;};if _ ,_bafcf :=_deba [_fgcg ];_bafcf {_da .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fgcg .ObjectNumber );
return nil ;};_deba [_fgcg ]=struct{}{};_ecddb ,_dacaf :=_fgcg .PdfObject .(*_ac .PdfObjectDictionary );if !_dacaf {return _aec .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bgdgc ,_dacaf :=(*_ecddb ).Get ("\u0054\u0079\u0070\u0065").(*_ac .PdfObjectName );
if !_dacaf {if _ecddb .Get ("\u004b\u0069\u0064\u0073")==nil {return _aec .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_da .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_bgdgc =_ac .MakeName ("\u0050\u0061\u0067e\u0073");_ecddb .Set ("\u0054\u0079\u0070\u0065",_bgdgc );};_da .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bgdgc ,_fgcg );
if *_bgdgc =="\u0050\u0061\u0067\u0065"{_dbecc ,_adbef :=_ebged .newPdfPageFromDict (_ecddb );if _adbef !=nil {return _adbef ;};_dbecc .setContainer (_fgcg );if _feeag !=nil {_ecddb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feeag );};_ebged ._efgg =append (_ebged ._efgg ,_fgcg );
_ebged .PageList =append (_ebged .PageList ,_dbecc );return nil ;};if *_bgdgc !="\u0050\u0061\u0067e\u0073"{if _ebged ._ecebe .Opts !=nil &&_ebged ._ecebe .Opts .RelaxedMode {_da .Log .Warning ("\u0057\u0061\u0072\u006e\u0069\u006e\u0067\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066 \u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050a\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063t\u0021\u0020(\u0025s\u0029",_bgdgc );
return nil ;};_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bgdgc );
return _aec .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _feeag !=nil {_ecddb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feeag );};if !_ebged ._bacfb {_adcda :=_ebged .traverseObjectData (_fgcg );if _adcda !=nil {return _adcda ;};};_faaea ,_edadd :=_ebged ._ecebe .Resolve (_ecddb .Get ("\u004b\u0069\u0064\u0073"));
if _edadd !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _edadd ;};var _cceed *_ac .PdfObjectArray ;
_cceed ,_dacaf =_faaea .(*_ac .PdfObjectArray );if !_dacaf {_beged ,_bgcff :=_faaea .(*_ac .PdfIndirectObject );if !_bgcff {return _aec .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_cceed ,_dacaf =_beged .PdfObject .(*_ac .PdfObjectArray );if !_dacaf {return _aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_da .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cceed );
for _eafdg ,_cdgae :=range _cceed .Elements (){_gcbb ,_bgbbe :=_ac .GetIndirect (_cdgae );if !_bgbbe {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gcbb );
return _aec .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cceed .Set (_eafdg ,_gcbb );_edadd =_ebged .buildPageList (_gcbb ,_fgcg ,_deba );if _edadd !=nil {return _edadd ;
};};return nil ;};func _bbegb (_fgaff *_ac .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gagdd :=PdfShadingType2 {};_cgcbba :=_fgaff .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cgcbba ==nil {_da .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_adcdad ,_acabf :=_cgcbba .(*_ac .PdfObjectArray );if !_acabf {_da .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgcbba );
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _adcdad .Len ()!=4{_da .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_adcdad .Len ());
return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_gagdd .Coords =_adcdad ;if _bagbfa :=_fgaff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bagbfa !=nil {_bagbfa =_ac .TraceToDirectObject (_bagbfa );
_ebdga ,_eddf :=_bagbfa .(*_ac .PdfObjectArray );if !_eddf {_da .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bagbfa );return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gagdd .Domain =_ebdga ;};_cgcbba =_fgaff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgcbba ==nil {_da .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gagdd .Function =[]PdfFunction {};if _gdaf ,_ebab :=_cgcbba .(*_ac .PdfObjectArray );_ebab {for _ ,_ccebc :=range _gdaf .Elements (){_dfefg ,_dfada :=_fdfgf (_ccebc );if _dfada !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfada );
return nil ,_dfada ;};_gagdd .Function =append (_gagdd .Function ,_dfefg );};}else {_cfebc ,_fggcd :=_fdfgf (_cgcbba );if _fggcd !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fggcd );
return nil ,_fggcd ;};_gagdd .Function =append (_gagdd .Function ,_cfebc );};if _fgdbe :=_fgaff .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fgdbe !=nil {_fgdbe =_ac .TraceToDirectObject (_fgdbe );_cgacd ,_fgdca :=_fgdbe .(*_ac .PdfObjectArray );if !_fgdca {_da .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgdbe );
return nil ,_ac .ErrTypeError ;};if _cgacd .Len ()!=2{_da .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cgacd .Len ());return nil ,ErrInvalidAttribute ;
};_gagdd .Extend =_cgacd ;};return &_gagdd ,nil ;};func (_dgff *PdfPage )removeXObj (_eagag *_ac .PdfObjectDictionary ,_gdgab _ac .PdfObjectName ){_eagag .Remove (_gdgab );_daec :=_ac .NewFlateEncoder ();_gaaac :=_dgff .GetContentStreamObjs ();_cffba :=_ac .MakeArray ();
for _ ,_gbgc :=range _gaaac {_cbadab ,_ :=_baba (_gbgc );if _fgg .Contains (_cbadab ,_gdgab .String ()){_gaefa :=_fgg .Index (_cbadab ,_gdgab .String ());_ageeeb :=_fgg .LastIndex (_cbadab [:_gaefa ],"\u0071");_ddagg :=_fgg .Index (_cbadab [_gaefa :],"\u0051")+_gaefa +1;
if _ageeeb >=0&&_ddagg >=0{var _ccbdg _fgg .Builder ;_ccbdg .WriteString (_cbadab [:_ageeeb ]);_ccbdg .WriteString (_cbadab [_ddagg :]);_abbag ,_edfeb :=_ac .MakeStream ([]byte (_ccbdg .String ()),_daec );if _edfeb ==nil {_cffba .Append (_abbag );continue ;
};};};_cffba .Append (_gbgc );};_dgff .Contents =_cffba ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_adga .Lock ();defer _adga .Unlock ();_bedeg =producer };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ddcd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// Reset sets the multi font encoder to its initial state.
func (_dgdd *MultipleFontEncoder )Reset (){_dgdd .CurrentFont =_dgdd ._agbe [0]};

// GetSubFilter returns SubFilter value or empty string.
func (_caddb *pdfSignDictionary )GetSubFilter ()string {_ggeag :=_caddb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ggeag ==nil {return "";};if _adfc ,_ebbec :=_ac .GetNameVal (_ggeag );_ebbec {return _adfc ;};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebefdb *PdfShadingType3 )ToPdfObject ()_ac .PdfObject {_ebefdb .PdfShading .ToPdfObject ();_ffbfb ,_acgdb :=_ebefdb .getShadingDict ();if _acgdb !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ebefdb .Coords !=nil {_ffbfb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ebefdb .Coords );};if _ebefdb .Domain !=nil {_ffbfb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebefdb .Domain );};if _ebefdb .Function !=nil {if len (_ebefdb .Function )==1{_ffbfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebefdb .Function [0].ToPdfObject ());
}else {_gedgg :=_ac .MakeArray ();for _ ,_aagf :=range _ebefdb .Function {_gedgg .Append (_aagf .ToPdfObject ());};_ffbfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gedgg );};};if _ebefdb .Extend !=nil {_ffbfb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ebefdb .Extend );
};return _ebefdb ._affg ;};func (_gegbd *PdfWriter )optimize ()error {if _gegbd ._dcgcb ==nil {return nil ;};var _dacfc error ;_gegbd ._beggg ,_dacfc =_gegbd ._dcgcb .Optimize (_gegbd ._beggg );if _dacfc !=nil {return _dacfc ;};_bggba :=make (map[_ac .PdfObject ]struct{},len (_gegbd ._beggg ));
for _ ,_dgbd :=range _gegbd ._beggg {_bggba [_dgbd ]=struct{}{};};_gegbd ._beeeeg =_bggba ;return nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_baebcg *PdfShadingPatternType2 )ToPdfObject ()_ac .PdfObject {_baebcg .PdfPattern .ToPdfObject ();_effabg :=_baebcg .getDict ();if _baebcg .Shading !=nil {_effabg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_baebcg .Shading .ToPdfObject ());};
if _baebcg .Matrix !=nil {_effabg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_baebcg .Matrix );};if _baebcg .ExtGState !=nil {_effabg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_baebcg .ExtGState );};return _baebcg ._cgfee ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aabb *PdfReader )GetNameDictionary ()(_ac .PdfObject ,error ){_eegdf :=_ac .ResolveReference (_aabb ._dfae .Get ("\u004e\u0061\u006de\u0073"));if _eegdf ==nil {return nil ,nil ;};if !_aabb ._bacfb {_bfeag :=_aabb .traverseObjectData (_eegdf );if _bfeag !=nil {return nil ,_bfeag ;
};};return _eegdf ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ac .PdfObject ;Dest _ac .PdfObject ;H _ac .PdfObject ;PA _ac .PdfObject ;QuadPoints _ac .PdfObject ;BS _ac .PdfObject ;_cbge *PdfAction ;_daeb *PdfReader ;};func (_gdcage *PdfPage )generateImage (_edgc string ,_fdggc float64 ,_bbgg string ,_ebdeaad _ee .Color )([]byte ,error ){_fcceb ,_ecaec ,_dedecf ,_ :=_ebdeaad .RGBA ();
_aaebfa :=_ee .RGBA {uint8 (_fcceb >>8),uint8 (_ecaec >>8),uint8 (_dedecf >>8),255};_eaed :=_ee .RGBA {0xff,0xff,0xff,0x00};_cbcdce ,_dagfe :=_gdcage .loadFont (_bbgg );if _dagfe !=nil {return nil ,_dagfe ;};_gcfef :=_fgg .Replace (_edgc ,"\u0009","\u0020\u0020\u0020\u0020",-1);
_gcdca :=_fgg .Split (_gcfef ,"\u000a");_acede :=1.0;for _ ,_efeab :=range _gcdca {if float64 (len (_efeab ))*_fdggc > _acede {_acede =float64 (len (_efeab ))*_fdggc ;};};if _acede > _gdcage .MediaBox .Width (){_acede =_gdcage .MediaBox .Width ();};_abec :=_gb .NewUniform (_aaebfa );
_gadgb :=_gb .NewUniform (_eaed );_ddde :=_gb .NewRGBA (_gb .Rect (0,0,int (_acede ),int (_fdggc *1.5*float64 (len (_gcdca )))));_ad .Draw (_ddde ,_ddde .Bounds (),_gadgb ,_gb .Pt (0,0),_ad .Src );_fefgb :=_efa .NewContext ();_fefgb .SetDPI (72);_fefgb .SetFont (_cbcdce );
_fefgb .SetFontSize (_fdggc );_fefgb .SetHinting (_cca .HintingNone );_fefgb .SetClip (_ddde .Bounds ());_fefgb .SetDst (_ddde );_fefgb .SetSrc (_abec );_bgfef :=50;_bafbag :=10+int (_fefgb .PointToFixed (_fdggc )>>6);_fbaca :=_efa .Pt (_bgfef ,_bafbag );
for _ ,_cfecc :=range _gcdca {_ ,_dagfe =_fefgb .DrawString (_fgg .Replace (_cfecc ,"\u000d","",-1),_fbaca );if _dagfe !=nil {return nil ,_dagfe ;};_fbaca .Y +=_fefgb .PointToFixed (_fdggc *1.5);};_fedd :=new (_ag .Buffer );if _babef :=_b .Encode (_fedd ,_ddde );
_babef !=nil {return nil ,_babef ;};return _fedd .Bytes (),nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ebge :=NewPdfAnnotation ();_bbe :=&PdfAnnotationPrinterMark {};_bbe .PdfAnnotation =_ebge ;_ebge .SetContext (_bbe );return _bbe ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_aegc *PdfWriter )SetOptimizer (optimizer Optimizer ){_aegc ._dcgcb =optimizer };var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject convert PdfInfo to pdf object.
func (_fdfe *PdfInfo )ToPdfObject ()_ac .PdfObject {_ggef :=_ac .MakeDict ();_ggef .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fdfe .Title );_ggef .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fdfe .Author );_ggef .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fdfe .Subject );
_ggef .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fdfe .Keywords );_ggef .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fdfe .Creator );_ggef .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fdfe .Producer );
_ggef .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fdfe .Trapped );if _fdfe .CreationDate !=nil {_ggef .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fdfe .CreationDate .ToPdfObject ());};if _fdfe .ModifiedDate !=nil {_ggef .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdfe .ModifiedDate .ToPdfObject ());
};for _ ,_gaad :=range _fdfe ._cefe .Keys (){_ggef .SetIfNotNil (_gaad ,_fdfe ._cefe .Get (_gaad ));};return _ggef ;};

// SetPrintArea sets the value of the printArea.
func (_caeef *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_caeef ._dafcc =printArea };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_acbe *PdfFont )CharcodesToUnicode (charcodes []_cd .CharCode )[]rune {_fbcag ,_ ,_ :=_acbe .CharcodesToUnicodeWithStats (charcodes );return _fbcag ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bcae pdfFont };

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_baa :=NewPdfAction ();_ab :=&PdfActionGoTo {};_ab .PdfAction =_baa ;_baa .SetContext (_ab );return _ab ;};

// IsValid checks if the given pdf output intent type is valid.
func (_fgdbd PdfOutputIntentType )IsValid ()bool {return _fgdbd >=PdfOutputIntentTypeA1 &&_fgdbd <=PdfOutputIntentTypeX ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ceaee *PdfPageResources )GetFontByName (keyName _ac .PdfObjectName )(_ac .PdfObject ,bool ){if _ceaee .Font ==nil {return nil ,false ;};_ebfdc ,_beddgb :=_ac .TraceToDirectObject (_ceaee .Font ).(*_ac .PdfObjectDictionary );if !_beddgb {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ac .TraceToDirectObject (_ceaee .Font ));
return nil ,false ;};if _dgeba :=_ebfdc .Get (keyName );_dgeba !=nil {return _dgeba ,true ;};return nil ,false ;};

// SetDate sets the `M` field of the signature.
func (_ffgga *PdfSignature )SetDate (date _dg .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ffgga .M =_ac .MakeString (date .Format (format ));
};func (_fcbd *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func _acbfg ()_dg .Time {_adga .Lock ();defer _adga .Unlock ();return _dgddd };

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_gcb *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_fbcb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_da .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_da .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_da .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_da .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bfca ,_cffd :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._geag ,img ._bacca );if _cffd !=nil {return Image {},_cffd ;};_cgf ,_cffd :=_cf .NRGBAConverter .Convert (_bfca );if _cffd !=nil {return Image {},_cffd ;
};return _bgage (_cgf .Base ()),nil ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_defdcc *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_begfe :=[]*EmbeddedFile {};_geffbc ,_cegdcd :=_defdcc .GetNameDictionary ();if _cegdcd !=nil {return nil ,_cegdcd ;};if _geffbc ==nil {return _begfe ,nil ;};_dafea :=_cgfg (_geffbc );
if _dafea .EmbeddedFiles ==nil {return nil ,nil ;};_gbgd :=_dafea .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_adcdf ,_aaabe :=_gbgd .(*_ac .PdfObjectArray );if !_aaabe {return nil ,_aec .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _fbgae :=1;_fbgae < len (_adcdf .Elements ());_fbgae +=2{if _fbgae %2!=0{_dcgc :=_adcdf .Get (_fbgae );_feece ,_cgedb :=NewPdfFilespecFromObj (_dcgc );if _cgedb !=nil {return nil ,_cgedb ;};_aefged ,_cgedb :=NewEmbeddedFileFromObject (_feece .EF );
if _cgedb !=nil {return nil ,_cgedb ;};_gdeea ,_facf :=_feece .F .(*_ac .PdfObjectString );if _facf {_aefged .Name =_gdeea .Str ();};_aefged .Description =string (_feece .Desc .Write ());_aefged .Relationship =RelationshipUnspecified ;if _feece .AFRelationship !=nil {switch string (_feece .AFRelationship .Write ()){case "\u0053\u006f\u0075\u0072\u0063\u0065":_aefged .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_aefged .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_aefged .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_aefged .Relationship =RelationshipSupplement ;
default:_aefged .Relationship =RelationshipUnspecified ;};};_begfe =append (_begfe ,_aefged );};};return _begfe ,nil ;};

// HasFontByName checks if has font resource by name.
func (_bdcgec *PdfPage )HasFontByName (name _ac .PdfObjectName )bool {_febc ,_adccd :=_bdcgec .Resources .Font .(*_ac .PdfObjectDictionary );if !_adccd {return false ;};if _gacd :=_febc .Get (name );_gacd !=nil {return true ;};return false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_adc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if _adc .Alternate ==nil {if _adc .N ==1{_fbae :=NewPdfColorspaceDeviceGray ();return _fbae .ColorFromPdfObjects (objects );}else if _adc .N ==3{_ebfc :=NewPdfColorspaceDeviceRGB ();
return _ebfc .ColorFromPdfObjects (objects );}else if _adc .N ==4{_ggdf :=NewPdfColorspaceDeviceCMYK ();return _ggdf .ColorFromPdfObjects (objects );}else {return nil ,_aec .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _adc .Alternate .ColorFromPdfObjects (objects );};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_dgbcg *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_fbede :=_dgbcg ._ecebe .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _fbede {return nil ,_aec .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_fbede {return _dgbcg ,nil ;};if _dgbcg ._ddfec [revisionNumber ]!=nil {return _dgbcg ._ddfec [revisionNumber ],nil ;};_gbafa :=_dgbcg ;for _ccfbg :=_fbede -1;_ccfbg >=revisionNumber ;_ccfbg --{_cadgg ,_geafb :=_gbafa .GetPreviousRevision ();
if _geafb !=nil {return nil ,_geafb ;};_dgbcg ._ddfec [_ccfbg ]=_cadgg ;_gbafa =_cadgg ;};return _gbafa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bde *PdfActionSubmitForm )ToPdfObject ()_ac .PdfObject {_bde .PdfAction .ToPdfObject ();_fff :=_bde ._acf ;_cea :=_fff .PdfObject .(*_ac .PdfObjectDictionary );_cea .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeSubmitForm )));if _bde .F !=nil {_cea .Set ("\u0046",_bde .F .ToPdfObject ());
};_cea .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bde .Fields );_cea .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bde .Flags );return _fff ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_fgcag *Image )GetSamples ()[]uint32 {_aecab :=_bdab .ResampleBytes (_fgcag .Data ,int (_fgcag .BitsPerComponent ));if _fgcag .BitsPerComponent < 8{_aecab =_fgcag .samplesTrimPadding (_aecab );};_fbbfd :=int (_fgcag .Width )*int (_fgcag .Height )*_fgcag .ColorComponents ;
if len (_aecab )< _fbbfd {_da .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_aecab ),_fbbfd );
return _aecab ;}else if len (_aecab )> _fbbfd {_da .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_aecab ),_fbbfd );
_aecab =_aecab [:_fbbfd ];};return _aecab ;};var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";
StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";
StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";
StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";StructureTypeForm ="\u0046\u006f\u0072\u006d";);func _fabb (_gbcf *_ac .PdfObjectDictionary ,_dadga *fontCommon ,_gaae _cd .TextEncoder )(*pdfFontSimple ,error ){_geaa :=_bbaae (_dadga );
_geaa ._bgfb =_gaae ;if _gaae ==nil {_effbe :=_gbcf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _effbe ==nil {_effbe =_ac .MakeInteger (0);};_geaa .FirstChar =_effbe ;_bdaf ,_gbbag :=_ac .GetIntVal (_effbe );if !_gbbag {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_effbe );
return nil ,_ac .ErrTypeError ;};_gbdce :=_cd .CharCode (_bdaf );_effbe =_gbcf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _effbe ==nil {_effbe =_ac .MakeInteger (255);};_geaa .LastChar =_effbe ;_bdaf ,_gbbag =_ac .GetIntVal (_effbe );
if !_gbbag {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_effbe );return nil ,_ac .ErrTypeError ;
};_beeeb :=_cd .CharCode (_bdaf );_geaa ._dcbf =make (map[_cd .CharCode ]float64 );_effbe =_gbcf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _effbe !=nil {_geaa .Widths =_effbe ;_gcaa ,_bcac :=_ac .GetArray (_effbe );if !_bcac {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_effbe );
return nil ,_ac .ErrTypeError ;};_acgb ,_cafa :=_gcaa .ToFloat64Array ();if _cafa !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cafa ;};if len (_acgb )!=int (_beeeb -_gbdce +1){_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_beeeb -_gbdce +1,len (_acgb ));
return nil ,_ac .ErrRangeError ;};for _fcgfe ,_ggda :=range _acgb {_geaa ._dcbf [_gbdce +_cd .CharCode (_fcgfe )]=_ggda ;};};};_geaa .Encoding =_ac .TraceToDirectObject (_gbcf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _geaa ,nil ;
};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ac .PdfObjectArray ;Matrix *_ac .PdfObjectArray ;Function []PdfFunction ;};

// String returns a string representation of the field.
func (_efae *PdfField )String ()string {if _aafe ,_feeee :=_efae .ToPdfObject ().(*_ac .PdfIndirectObject );_feeee {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_efae ._ffbgg ,_aafe .PdfObject .String ());};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eeceg *PdfShadingType1 )ToPdfObject ()_ac .PdfObject {_eeceg .PdfShading .ToPdfObject ();_eeagc ,_ccefd :=_eeceg .getShadingDict ();if _ccefd !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eeceg .Domain !=nil {_eeagc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eeceg .Domain );};if _eeceg .Matrix !=nil {_eeagc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eeceg .Matrix );};if _eeceg .Function !=nil {if len (_eeceg .Function )==1{_eeagc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eeceg .Function [0].ToPdfObject ());
}else {_aegff :=_ac .MakeArray ();for _ ,_agbfc :=range _eeceg .Function {_aegff .Append (_agbfc .ToPdfObject ());};_eeagc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegff );};};return _eeceg ._affg ;};

// Encoder returns the font's text encoder.
func (_ebaa pdfCIDFontType2 )Encoder ()_cd .TextEncoder {return _ebaa ._debg };

// String implements interface PdfObject.
func (_bff *PdfAction )String ()string {_ecd ,_dcc :=_bff .ToPdfObject ().(*_ac .PdfIndirectObject );if _dcc {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bff ._df ,_ecd .PdfObject .String ());};return "";};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_efcbb *PdfPageResources )HasXObjectByName (keyName _ac .PdfObjectName )bool {_dcbcb ,_ :=_efcbb .GetXObjectByName (keyName );return _dcbcb !=nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bccgf *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abebb :=vals [0];if _abebb < 0.0||_abebb > 100.0{_da .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_abebb );
return nil ,ErrColorOutOfRange ;};_edae :=vals [1];_bgee :=float64 (-100);_edbf :=float64 (100);if len (_bccgf .Range )> 1{_bgee =_bccgf .Range [0];_edbf =_bccgf .Range [1];};if _edae < _bgee ||_edae > _edbf {_da .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_edae ,_bgee ,_edbf );
return nil ,ErrColorOutOfRange ;};_gdcf :=vals [2];_aedg :=float64 (-100);_dfaf :=float64 (100);if len (_bccgf .Range )> 3{_aedg =_bccgf .Range [2];_dfaf =_bccgf .Range [3];};if _gdcf < _aedg ||_gdcf > _dfaf {_da .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gdcf ,_aedg ,_dfaf );
return nil ,ErrColorOutOfRange ;};_aag :=NewPdfColorLab (_abebb ,_edae ,_gdcf );return _aag ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_acged ,_acgd :=_bd .NewStdFontByName (HelveticaName );if !_acgd {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_gfgd :=_eaga (_acged );return &PdfFont {_bcae :&_gfgd };};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_aeaa :=PdfColorLab {l ,a ,b };return &_aeaa };

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_ac .PdfParser ;DiffPolicy _ec .DiffPolicy ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dfgd *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_efeb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_efeb .Mask ()&^fl .Mask ())};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bfacf *PdfShading )GetContext ()PdfModel {return _bfacf ._gfcfg };

// SetFontByName sets the font specified by keyName to the given object.
func (_fdfca *PdfPageResources )SetFontByName (keyName _ac .PdfObjectName ,obj _ac .PdfObject )error {if _fdfca .Font ==nil {_fdfca .Font =_ac .MakeDict ();};_fbgfb ,_bdeeg :=_ac .TraceToDirectObject (_fdfca .Font ).(*_ac .PdfObjectDictionary );if !_bdeeg {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ac .TraceToDirectObject (_fdfca .Font ));
return _ac .ErrTypeError ;};_fbgfb .Set (keyName ,obj );return nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ac .PdfObjectInteger ;BitsPerComponent *_ac .PdfObjectInteger ;BitsPerFlag *_ac .PdfObjectInteger ;Decode *_ac .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_eff :=NewPdfAnnotation ();_ecbe :=&PdfAnnotationWatermark {};_ecbe .PdfAnnotation =_eff ;_eff .SetContext (_ecbe );return _ecbe ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_aabbg *PdfWriter )adjustXRefAffectedVersion (_fcbge bool ){if _fcbge &&_aabbg ._ccabd .Major ==1&&_aabbg ._ccabd .Minor < 5{_aabbg ._ccabd .Minor =5;};};

// ToPdfObject implements interface PdfModel.
func (_ccg *PdfActionGoTo3DView )ToPdfObject ()_ac .PdfObject {_ccg .PdfAction .ToPdfObject ();_dcbgb :=_ccg ._acf ;_ddb :=_dcbgb .PdfObject .(*_ac .PdfObjectDictionary );_ddb .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeGoTo3DView )));_ddb .SetIfNotNil ("\u0054\u0041",_ccg .TA );
_ddb .SetIfNotNil ("\u0056",_ccg .V );return _dcbgb ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_ac .PdfObjectArray ;ExtGState _ac .PdfObject ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_edbd *PdfField )Flags ()FieldFlag {var _adeg FieldFlag ;_ddfg ,_dfec :=_edbd .inherit (func (_cegcb *PdfField )bool {if _cegcb .Ff !=nil {_adeg =FieldFlag (*_cegcb .Ff );return true ;};return false ;});if _dfec !=nil {_da .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dfec );
};if !_ddfg {_da .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _adeg ;};func (_cdaa *pdfFontType3 )baseFields ()*fontCommon {return &_cdaa .fontCommon };


// GetTrailer returns the PDF's trailer dictionary.
func (_cgdfd *PdfReader )GetTrailer ()(*_ac .PdfObjectDictionary ,error ){_gbead :=_cgdfd ._ecebe .GetTrailer ();if _gbead ==nil {return nil ,_aec .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gbead ,nil ;
};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dfage *PdfPattern )GetContainingPdfObject ()_ac .PdfObject {return _dfage ._cgfee };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_edffe *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// Encoder iterates through the list of fonts and returns a working encoder
func (_bdbd *MultipleFontEncoder )Encoder (rn rune )(_cd .TextEncoder ,bool ){_dcbbg :=_bdbd .CurrentFont ;_baecc :=_dcbbg .Encoder ();_ ,_cdff :=_baecc .RuneToCharcode (rn );for _ccdad :=1;_ccdad < len (_bdbd ._agbe )&&!_cdff ;_ccdad ++{_dcbbg =_bdbd ._agbe [_ccdad ];
_baecc =_dcbbg .Encoder ();_ ,_cdff =_baecc .RuneToCharcode (rn );_bdbd .CurrentFont =_dcbbg ;};return _baecc ,_cdff ;};

// ToPdfObject implements interface PdfModel.
func (_bdfc *PdfAnnotationRichMedia )ToPdfObject ()_ac .PdfObject {_bdfc .PdfAnnotation .ToPdfObject ();_adb :=_bdfc ._add ;_bdaa :=_adb .PdfObject .(*_ac .PdfObjectDictionary );_bdaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bdaa .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bdfc .RichMediaSettings );_bdaa .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bdfc .RichMediaContent );
return _adb ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _acgfda ()string {_adga .Lock ();defer _adga .Unlock ();return _gcgga };func (_bbdba *PdfReader )newPdfAnnotationSquigglyFromDict (_gdfec *_ac .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_afa :=PdfAnnotationSquiggly {};
_gbbga ,_bfaf :=_bbdba .newPdfAnnotationMarkupFromDict (_gdfec );if _bfaf !=nil {return nil ,_bfaf ;};_afa .PdfAnnotationMarkup =_gbbga ;_afa .QuadPoints =_gdfec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afa ,nil ;};


// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_ggcacf pdfFontSimple )GetCharMetrics (code _cd .CharCode )(_bd .CharMetrics ,bool ){if _bggb ,_dbaa :=_ggcacf ._dcbf [code ];_dbaa {return _bd .CharMetrics {Wx :_bggb },true ;};if _bd .IsStdFont (_bd .StdFontName (_ggcacf ._cfca )){return _bd .CharMetrics {Wx :250},true ;
};return _bd .CharMetrics {},false ;};

// SetPrintClip sets the value of the printClip.
func (_eeffb *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_eeffb ._beafcg =printClip };

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_beb :=NewPdfAction ();_gad :=&PdfActionTrans {};_gad .PdfAction =_beb ;_beb .SetContext (_gad );return _gad ;};

// ToPdfObject implements interface PdfModel.
func (_eaa *PdfActionHide )ToPdfObject ()_ac .PdfObject {_eaa .PdfAction .ToPdfObject ();_cab :=_eaa ._acf ;_eg :=_cab .PdfObject .(*_ac .PdfObjectDictionary );_eg .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeHide )));_eg .SetIfNotNil ("\u0054",_eaa .T );
_eg .SetIfNotNil ("\u0048",_eaa .H );return _cab ;};

// ToPdfObject returns the PDF representation of the function.
func (_agcb *PdfFunctionType3 )ToPdfObject ()_ac .PdfObject {_cacbg :=_ac .MakeDict ();_cacbg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ac .MakeInteger (3));_bdegd :=&_ac .PdfObjectArray {};for _ ,_babe :=range _agcb .Domain {_bdegd .Append (_ac .MakeFloat (_babe ));
};_cacbg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdegd );if _agcb .Range !=nil {_degc :=&_ac .PdfObjectArray {};for _ ,_begag :=range _agcb .Range {_degc .Append (_ac .MakeFloat (_begag ));};_cacbg .Set ("\u0052\u0061\u006eg\u0065",_degc );};if _agcb .Functions !=nil {_gcbf :=&_ac .PdfObjectArray {};
for _ ,_dagcc :=range _agcb .Functions {_gcbf .Append (_dagcc .ToPdfObject ());};_cacbg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gcbf );};if _agcb .Bounds !=nil {_afgb :=&_ac .PdfObjectArray {};for _ ,_fggfb :=range _agcb .Bounds {_afgb .Append (_ac .MakeFloat (_fggfb ));
};_cacbg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_afgb );};if _agcb .Encode !=nil {_dgabb :=&_ac .PdfObjectArray {};for _ ,_dgafa :=range _agcb .Encode {_dgabb .Append (_ac .MakeFloat (_dgafa ));};_cacbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_dgabb );
};if _agcb ._feeeb !=nil {_agcb ._feeeb .PdfObject =_cacbg ;return _agcb ._feeeb ;};return _cacbg ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _dg .Time )(PdfDate ,error ){_cgadgf :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ebfbd ,_ :=_dcb .ParseInt (_cgadgf [1:3],10,32);_gfdf ,_ :=_dcb .ParseInt (_cgadgf [4:6],10,32);return PdfDate {_cbfdg :int64 (timeObj .Year ()),_dbfbe :int64 (timeObj .Month ()),_fafd :int64 (timeObj .Day ()),_aagfa :int64 (timeObj .Hour ()),_gaeea :int64 (timeObj .Minute ()),_fbaff :int64 (timeObj .Second ()),_ddfdc :_cgadgf [0],_gfbbc :_ebfbd ,_eggcc :_gfdf },nil ;
};func _eeca (_gageb _ac .PdfObject ){_da .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_gageb ,_gageb .String ());if _dece ,_ecdcb :=_gageb .(*_ac .PdfObjectStream );_ecdcb {_fgccd ,_cdbbe :=_ac .DecodeStream (_dece );if _cdbbe !=nil {_da .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cdbbe );
return ;};_da .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_fgccd );}else if _gadddb ,_fafe :=_gageb .(*_ac .PdfIndirectObject );_fafe {_da .Log .Debug ("\u0025\u0054\u0020%\u0076",_gadddb .PdfObject ,_gadddb .PdfObject );
_da .Log .Debug ("\u0025\u0073",_gadddb .PdfObject .String ());};};func (_ffbb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gfcdf :=_ffbb ._gdgc ;_gfcdf !=nil {return _gfcdf ;};return _ffbb ._gccga ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gcgad *PdfColorCalRGB )GetNumComponents ()int {return 3};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_aedd *_ac .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_ac .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_ac .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_ac .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_ac .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_ac .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_ac .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_ac .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_ac .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_ac .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_ac .PdfObjectDictionary ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ac .PdfObjectArray ;Domain *_ac .PdfObjectArray ;Function []PdfFunction ;Extend *_ac .PdfObjectArray ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_eggfb *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_bace :=map[*PdfAnnotation ]bool {};_gddeb ,_acaaa :=_eggfb .GetAnnotations ();if _acaaa !=nil {return _acaaa ;};_eggea :=false ;for _ ,_gfbbd :=range _gddeb {if opts .AnnotFilterFunc !=nil {_bace [_gfbbd ]=opts .AnnotFilterFunc (_gfbbd );
}else {_bace [_gfbbd ]=true ;};if _bace [_gfbbd ]{_eggea =true ;};};if !_eggea {return nil ;};return _eggfb .flattenFieldsWithOpts (appgen ,opts ,_bace );};func (_abfg fontCommon )asPdfObjectDictionary (_agbd string )*_ac .PdfObjectDictionary {if _agbd !=""&&_abfg ._bacd !=""&&_agbd !=_abfg ._bacd {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_agbd ,_abfg );
}else if _agbd ==""&&_abfg ._bacd ==""{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abfg );
}else if _abfg ._bacd ==""{_abfg ._bacd =_agbd ;};_ebec :=_ac .MakeDict ();_ebec .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0046\u006f\u006e\u0074"));_ebec .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ac .MakeName (_abfg ._cfca ));
_ebec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName (_abfg ._bacd ));if _abfg ._gdgc !=nil {_ebec .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_abfg ._gdgc .ToPdfObject ());};if _abfg ._baagf !=nil {_ebec .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_abfg ._baagf );
}else if _abfg ._eceed !=nil {_fadcg ,_beae :=_abfg ._eceed .Stream ();if _beae !=nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_beae );
}else {_ebec .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fadcg );};};return _ebec ;};

// IsSimple returns true if `font` is a simple font.
func (_aggdg *PdfFont )IsSimple ()bool {_ ,_bcec :=_aggdg ._bcae .(*pdfFontSimple );return _bcec };

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ac .PdfIndirectObject ;SV *_ac .PdfIndirectObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gbeba *PdfFont )SubsetRegistered ()error {switch _bgbeg :=_gbeba ._bcae .(type ){case *pdfFontType0 :_bfag :=_bgbeg .subsetRegistered ();if _bfag !=nil {_da .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bfag );
return _bfag ;};if _bgbeg ._bcbbf !=nil {if _bgbeg ._fbaeda !=nil {_bgbeg ._fbaeda .ToPdfObject ();};_bgbeg .ToPdfObject ();};default:_da .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bgbeg );
};return nil ;};func _acded (_bffgd _ac .PdfObject ,_bggae bool )(*PdfFont ,error ){_bccfc ,_becff ,_bcafb :=_gcgba (_bffgd );if _bccfc !=nil {_aafag (_bccfc );};if _bcafb !=nil {if _bcafb ==ErrType1CFontNotSupported {_eaefd ,_cgfbb :=_fabb (_bccfc ,_becff ,nil );
if _cgfbb !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_becff ,_cgfbb );
return nil ,_bcafb ;};return &PdfFont {_bcae :_eaefd },_bcafb ;};return nil ,_bcafb ;};_cdfdb :=&PdfFont {};switch _becff ._bacd {case "\u0054\u0079\u0070e\u0030":if !_bggae {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_becff );
return nil ,_aec .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_caga ,_gagg :=_egfb (_bccfc ,_becff );if _gagg !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_becff ,_gagg );
return nil ,_gagg ;};_cdfdb ._bcae =_caga ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gdbbf *pdfFontSimple ;_dafe ,_gfgc :=_bd .NewStdFontByName (_bd .StdFontName (_becff ._cfca ));
if _gfgc {_feeab :=_eaga (_dafe );_cdfdb ._bcae =&_feeab ;_egafg :=_ac .TraceToDirectObject (_feeab .ToPdfObject ());_gagb ,_gefc ,_cffda :=_gcgba (_egafg );if _cffda !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_becff ,_feeab );
return nil ,_cffda ;};for _ ,_fggfc :=range _bccfc .Keys (){_gagb .Set (_fggfc ,_bccfc .Get (_fggfc ));};_gdbbf ,_cffda =_fabb (_gagb ,_gefc ,_feeab ._bgfb );if _cffda !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_becff ,_feeab );
return nil ,_cffda ;};_gdbbf ._dcbf =_feeab ._dcbf ;_gdbbf ._fcdc =_feeab ._fcdc ;if _gdbbf ._gccga ==nil {_gdbbf ._gccga =_feeab ._gccga ;};}else {_gdbbf ,_bcafb =_fabb (_bccfc ,_becff ,nil );if _bcafb !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_becff ,_bcafb );
return nil ,_bcafb ;};};_bcafb =_gdbbf .addEncoding ();if _bcafb !=nil {return nil ,_bcafb ;};if _gfgc {_gdbbf .updateStandard14Font ();};if _gfgc &&_gdbbf ._cadfa ==nil &&_gdbbf ._bgfb ==nil {_da .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdbbf );
_da .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dafe );};if len (_gdbbf ._dcbf )==0{_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gdbbf );};_cdfdb ._bcae =_gdbbf ;
case "\u0054\u0079\u0070e\u0033":_dddae ,_adged :=_ffeea (_bccfc ,_becff );if _adged !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_adged );
return nil ,_adged ;};_cdfdb ._bcae =_dddae ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_acccf ,_fgged :=_gebc (_bccfc ,_becff );if _fgged !=nil {_da .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fgged );
return nil ,_fgged ;};_cdfdb ._bcae =_acccf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bbeg ,_efbca :=_dgfed (_bccfc ,_becff );if _efbca !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_becff ,_efbca );
return nil ,_efbca ;};_cdfdb ._bcae =_bbeg ;default:_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_becff );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_becff );};return _cdfdb ,nil ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _ac .PdfObjectName ;};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_eebgb *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _eebgb ._ebfbdg };

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_aefaf *_ac .PdfIndirectObject ;_cafdf *_ac .PdfIndirectObject ;_fbccc map[_ac .PdfObject ]struct{};_afafc []*_ac .PdfIndirectObject ;_beggg []_ac .PdfObject ;_beeeeg map[_ac .PdfObject ]struct{};_ggec []*_ac .PdfIndirectObject ;_dabba *PdfOutlineTreeNode ;
_cgebe *_ac .PdfObjectDictionary ;_abebf []_ac .PdfObject ;_bcbcab *_ac .PdfIndirectObject ;_dacf *_a .Writer ;_eaafg int64 ;_dbcea error ;_gefae *_ac .PdfCrypt ;_gdgdbe *_ac .PdfObjectDictionary ;_dfecf *_ac .PdfIndirectObject ;_ddfac *_ac .PdfObjectArray ;
_ccabd _ac .Version ;_egdgb *bool ;_bafge map[_ac .PdfObject ][]*_ac .PdfObjectDictionary ;_ffafd *PdfAcroForm ;_gecfa *Names ;_dcgcb Optimizer ;_cdccd StandardApplier ;_dfbbef map[int ]crossReference ;_gagbg int64 ;ObjNumOffset int ;_abbg bool ;_dccaf _ac .XrefTable ;
_fcfde int64 ;_gfce int64 ;_fdgef map[_ac .PdfObject ]int64 ;_fbgccg map[_ac .PdfObject ]struct{};_bfeed string ;_aaadc string ;_adde []*PdfOutputIntent ;_deaag bool ;_edfggf ,_dgagd string ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbgcd pdfFontSimple )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){if _bbgcd ._fcdc !=nil {_gaede ,_aebc :=_bbgcd ._fcdc .Read (r );if _aebc {return _gaede ,true ;};};_efgcb :=_bbgcd .Encoder ();if _efgcb ==nil {_da .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bbgcd );
return _bd .CharMetrics {},false ;};_fbda ,_acagb :=_efgcb .RuneToCharcode (r );if !_acagb {if r !=' '{_da .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bbgcd );
};return _bd .CharMetrics {},false ;};_bacf ,_fdafd :=_bbgcd .GetCharMetrics (_fbda );return _bacf ,_fdafd ;};func _egaebf (_dcffc *PdfField ,_gecfg _ac .PdfObject )error {switch _dcffc .GetContext ().(type ){case *PdfFieldText :switch _cefed :=_gecfg .(type ){case *_ac .PdfObjectName :_cfaad :=_cefed ;
_da .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cfaad .String ());
_dcffc .V =_ac .MakeEncodedString (_cefed .String (),true );case *_ac .PdfObjectString :_dcffc .V =_ac .MakeEncodedString (_cefed .String (),true );default:_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cefed ,_cefed );
};case *PdfFieldButton :switch _gecfg .(type ){case *_ac .PdfObjectName :if len (_gecfg .String ())> 0{_dcffc .V =_gecfg ;_bfab (_dcffc ,_gecfg );};case *_ac .PdfObjectString :if len (_gecfg .String ())> 0{_dcffc .V =_ac .MakeName (_gecfg .String ());_bfab (_dcffc ,_dcffc .V );
};default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_dcffc .PartialName (),_gecfg );_dcffc .V =_gecfg ;};case *PdfFieldChoice :switch _gecfg .(type ){case *_ac .PdfObjectName :if len (_gecfg .String ())> 0{_dcffc .V =_ac .MakeString (_gecfg .String ());
_bfab (_dcffc ,_gecfg );};case *_ac .PdfObjectString :if len (_gecfg .String ())> 0{_dcffc .V =_gecfg ;_bfab (_dcffc ,_ac .MakeName (_gecfg .String ()));};default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_dcffc .PartialName (),_gecfg );
_dcffc .V =_gecfg ;};case *PdfFieldSignature :_da .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_dcffc .PartialName (),_gecfg );
};return nil ;};func (_abac *PdfReader )newPdfAnnotationScreenFromDict (_fdg *_ac .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fdb :=PdfAnnotationScreen {};_fdb .T =_fdg .Get ("\u0054");_fdb .MK =_fdg .Get ("\u004d\u004b");_fdb .A =_fdg .Get ("\u0041");
_fdb .AA =_fdg .Get ("\u0041\u0041");return &_fdb ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bfcda _cc .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fgfe _gb .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_bddcf _gb .Image )(*Image ,error );

// Compress an image.
Compress (_eagf *Image ,_bbfg int64 )(*Image ,error );};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ac .PdfObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cgce *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_dcee :=NewPdfWriter ();_dcee .SetFileName (_cgce ._aafbde );if opts ==nil {opts =&ReaderToWriterOpts {};};_bcgf ,_dabbf :=_cgce .GetNumPages ();if _dabbf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabbf );
return nil ,_dabbf ;};for _badgdd :=1;_badgdd <=_bcgf ;_badgdd ++{_fafaf ,_cacf :=_cgce .GetPage (_badgdd );if _cacf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacf );return nil ,_cacf ;};if opts .PageProcessCallback !=nil {_cacf =opts .PageProcessCallback (_badgdd ,_fafaf );
if _cacf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacf );return nil ,_cacf ;};}else if opts .PageCallback !=nil {opts .PageCallback (_badgdd ,_fafaf );};_cacf =_dcee .AddPage (_fafaf );if _cacf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacf );
return nil ,_cacf ;};};_dcee ._ccabd =_cgce .PdfVersion ();if !opts .SkipInfo {_geafg ,_aada :=_cgce .GetPdfInfo ();if _aada !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aada );}else {_dcee ._bcbcab .PdfObject =_geafg .ToPdfObject ();
};};if !opts .SkipMetadata {if _geegf :=_cgce ._dfae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_geegf !=nil {if _ccdd :=_dcee .SetCatalogMetadata (_geegf );_ccdd !=nil {return nil ,_ccdd ;};};};if !opts .SkipMarkInfo {if _ggead ,_ababd :=_cgce .GetCatalogMarkInfo ();
_ababd {if _dbdec :=_dcee .SetCatalogMarkInfo (_ggead );_dbdec !=nil {return nil ,_dbdec ;};};};if !opts .SkipAcroForm {_adacd :=_dcee .SetForms (_cgce .AcroForm );if _adacd !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adacd );
return nil ,_adacd ;};};if !opts .SkipViewerPreferences {if _gffg ,_acecd :=_cgce .GetCatalogViewerPreferences ();_acecd {if _gbgff :=_dcee .SetCatalogViewerPreferences (_gffg );_gbgff !=nil {return nil ,_gbgff ;};};};if !opts .SkipLanguage {if _fageg ,_cgcbb :=_cgce .GetCatalogLanguage ();
_cgcbb {if _ecefc :=_dcee .SetCatalogLanguage (_fageg );_ecefc !=nil {return nil ,_ecefc ;};};};if !opts .SkipOutlines {_dcee .AddOutlineTree (_cgce .GetOutlineTree ());};if !opts .SkipOCProperties {_dcege ,_eadc :=_cgce .GetOCProperties ();if _eadc !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eadc );
}else {_eadc =_dcee .SetOCProperties (_dcege );if _eadc !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eadc );};};};if !opts .SkipPageLabels {_dagad ,_gcddg :=_cgce .GetPageLabels ();if _gcddg !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcddg );
}else {_gcddg =_dcee .SetPageLabels (_dagad );if _gcddg !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcddg );};};};if !opts .SkipNamedDests {_egcgc ,_egcf :=_cgce .GetNamedDestinations ();if _egcf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egcf );
}else {_egcf =_dcee .SetNamedDestinations (_egcgc );if _egcf !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egcf );};};};if !opts .SkipNameDictionary {_edbcec ,_ccgg :=_cgce .GetNameDictionary ();if _ccgg !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccgg );
}else {_ccgg =_dcee .SetNameDictionary (_edbcec );if _ccgg !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccgg );};};};_bgfa ,_eafcb :=_cgce .GetCatalogStructTreeRoot ();if _eafcb {_acdeb :=_dcee .SetCatalogStructTreeRoot (_bgfa );
if _acdeb !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acdeb );};};if !opts .SkipRotation &&_cgce .Rotate !=nil {if _edcag :=_dcee .SetRotation (*_cgce .Rotate );_edcag !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edcag );
};};return &_dcee ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ac .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_eefd *_ac .PdfIndirectObject ;};

// NumCopies returns the value of the numCopies.
func (_ggbdab *ViewerPreferences )NumCopies ()int {return _ggbdab ._daaaed };

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;

// ToPdfObject implements interface PdfModel.
func (_edcbd *PdfAnnotationSound )ToPdfObject ()_ac .PdfObject {_edcbd .PdfAnnotation .ToPdfObject ();_gccf :=_edcbd ._add ;_abb :=_gccf .PdfObject .(*_ac .PdfObjectDictionary );_edcbd .PdfAnnotationMarkup .appendToPdfDictionary (_abb );_abb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053\u006f\u0075n\u0064"));
_abb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_edcbd .Sound );_abb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edcbd .Name );return _gccf ;};

// WriteToFile writes the Appender output to file specified by path.
func (_cggb *PdfAppender )WriteToFile (outputPath string )error {_ffcd ,_ccga :=_fgge .Create (outputPath );if _ccga !=nil {return _ccga ;};defer _ffcd .Close ();return _cggb .Write (_ffcd );};

// Duplex returns the value of the duplex.
func (_defad *ViewerPreferences )Duplex ()Duplex {return _defad ._dfaa };

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_becdd *PdfWriter )SetCatalogMetadata (meta _ac .PdfObject )error {if meta ==nil {_becdd ._cgebe .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_deec ,_acgcg :=_ac .GetStream (meta );if !_acgcg {return _aec .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_becdd .addObject (_deec );_becdd ._cgebe .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deec );return nil ;};func (_addg *PdfReader )newPdfAnnotationHighlightFromDict (_bfeb *_ac .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_efde :=PdfAnnotationHighlight {};
_babb ,_dfbe :=_addg .newPdfAnnotationMarkupFromDict (_bfeb );if _dfbe !=nil {return nil ,_dfbe ;};_efde .PdfAnnotationMarkup =_babb ;_efde .QuadPoints =_bfeb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_efde ,nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bgdef *Image )SetSamples (samples []uint32 ){if _bgdef .BitsPerComponent < 8{samples =_bgdef .samplesAddPadding (samples );};_gbcdf :=_bdab .ResampleUint32 (samples ,int (_bgdef .BitsPerComponent ),8);_dadad :=make ([]byte ,len (_gbcdf ));for _feef ,_cabd :=range _gbcdf {_dadad [_feef ]=byte (_cabd );
};_bgdef .Data =_dadad ;};func _cfda (_ddbaf []*_ac .PdfObjectStream )*_ac .PdfObjectArray {if len (_ddbaf )==0{return nil ;};_gabab :=make ([]_ac .PdfObject ,0,len (_ddbaf ));for _ ,_cfadg :=range _ddbaf {_gabab =append (_gabab ,_cfadg );};return _ac .MakeArray (_gabab ...);
};

// SetViewClip sets the value of the viewClip.
func (_dabad *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_dabad ._cbfge =viewClip };

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dabag *PdfWriter )SetNamedDestinations (dests _ac .PdfObject )error {if dests ==nil {return nil ;};_da .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_dabag ._cgebe .Set ("\u0044\u0065\u0073t\u0073",dests );return _dabag .addObjects (dests );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dcfa *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dcfa ._adba !=nil {return _dcfa ._adba ,nil ;};if _dcfa .Annots ==nil {_dcfa ._adba =[]*PdfAnnotation {};return nil ,nil ;};if _dcfa ._eegg ==nil {_dcfa ._adba =[]*PdfAnnotation {};return nil ,nil ;
};_gebd ,_gegcad :=_dcfa ._eegg .loadAnnotations (_dcfa .Annots );if _gegcad !=nil {return nil ,_gegcad ;};if _gebd ==nil {_dcfa ._adba =[]*PdfAnnotation {};};_dcfa ._adba =_gebd ;return _dcfa ._adba ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_baecd *XObjectImage )ToImage ()(*Image ,error ){_febag :=&Image {};if _baecd .Height ==nil {return nil ,_aec .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_febag .Height =*_baecd .Height ;if _baecd .Width ==nil {return nil ,_aec .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_febag .Width =*_baecd .Width ;if _baecd .BitsPerComponent ==nil {switch _baecd .Filter .(type ){case *_ac .CCITTFaxEncoder ,*_ac .JBIG2Encoder :_febag .BitsPerComponent =1;
case *_ac .LZWEncoder ,*_ac .RunLengthEncoder :_febag .BitsPerComponent =8;default:return nil ,_aec .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_febag .BitsPerComponent =*_baecd .BitsPerComponent ;};_febag .ColorComponents =_baecd .ColorSpace .GetNumComponents ();_baecd ._bagcg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ac .MakeInteger (int64 (_febag .ColorComponents )));
_eddfb ,_egfag :=_ac .DecodeStream (_baecd ._bagcg );if _egfag !=nil {return nil ,_egfag ;};_febag .Data =_eddfb ;if _baecd .Decode !=nil {_aegdg ,_aafgcc :=_baecd .Decode .(*_ac .PdfObjectArray );if !_aafgcc {_da .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_aec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ccdcc ,_decbcf :=_aegdg .ToFloat64Array ();if _decbcf !=nil {return nil ,_decbcf ;};switch _baecd .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_abbff :=_baecd .ColorSpace .DecodeArray ();
if _abbff [0]==_ccdcc [0]&&_abbff [1]==_ccdcc [1]&&_abbff [2]==_ccdcc [2]&&_abbff [3]==_ccdcc [3]{_febag ._bacca =_ccdcc ;};default:_febag ._bacca =_ccdcc ;};};return _febag ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_abbbd *_ac .PdfIndirectObject ;};

// Height returns the height of `rect`.
func (_caggee *PdfRectangle )Height ()float64 {return _fe .Abs (_caggee .Ury -_caggee .Lly )};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ac .PdfObject ;Sy _ac .PdfObject ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_geaae *PdfReader )IsEncrypted ()(bool ,error ){return _geaae ._ecebe .IsEncrypted ()};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_fbfca interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ac .PdfObjectStream ;Data []byte ;_gcgbd *_ac .PdfIndirectObject ;_dcab *_ac .PdfObjectStream ;};func (_debcc *PdfWriter )makeOffSetReference (_dddeb int64 ){_dfbcg :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dddeb );
_debcc .writeString (_dfbcg );_debcc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_caafd *PdfWriter )SetCatalogViewerPreferences (pref _ac .PdfObject )error {if pref ==nil {_caafd ._cgebe .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _gccaeg ,_egeca :=pref .(*_ac .PdfObjectReference );
_egeca {pref =_gccaeg .Resolve ();if pref ==nil {_caafd ._cgebe .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};if _ ,_abecg :=pref .(*_ac .PdfIndirectObject );_abecg {_caafd .addObject (pref );
};_caafd ._cgebe .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdeag *PdfAnnotationSquare )ToPdfObject ()_ac .PdfObject {_cdeag .PdfAnnotation .ToPdfObject ();_eebe :=_cdeag ._add ;_bacad :=_eebe .PdfObject .(*_ac .PdfObjectDictionary );if _cdeag .PdfAnnotationMarkup !=nil {_cdeag .PdfAnnotationMarkup .appendToPdfDictionary (_bacad );
};_bacad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bacad .SetIfNotNil ("\u0042\u0053",_cdeag .BS );_bacad .SetIfNotNil ("\u0049\u0043",_cdeag .IC );_bacad .SetIfNotNil ("\u0042\u0045",_cdeag .BE );
_bacad .SetIfNotNil ("\u0052\u0044",_cdeag .RD );return _eebe ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ac .PdfObject ;Name _ac .PdfObject ;State _ac .PdfObject ;StateModel _ac .PdfObject ;};

// ValidateSignatures validates digital signatures in the document.
func (_ddbdd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ddbdd .AcroForm ==nil {return nil ,nil ;};if _ddbdd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cegb *PdfSignature ;
_daedf *PdfField ;_cbdcb SignatureHandler ;};var _egfg []*sigFieldPair ;for _ ,_dcddb :=range _ddbdd .AcroForm .AllFields (){if _dcddb .V ==nil {continue ;};if _cdcef ,_agfec :=_ac .GetDict (_dcddb .V );_agfec {if _eggdd ,_ebcec :=_ac .GetNameVal (_cdcef .Get ("\u0054\u0079\u0070\u0065"));
_ebcec &&(_eggdd =="\u0053\u0069\u0067"||_eggdd =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_faceb ,_aefec :=_ac .GetIndirect (_dcddb .V );if !_aefec {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ebecg ,_gdeaf :=_ddbdd .newPdfSignatureFromIndirect (_faceb );if _gdeaf !=nil {return nil ,_gdeaf ;};var _dcffb SignatureHandler ;for _ ,_caaef :=range handlers {if _caaef .IsApplicable (_ebecg ){_dcffb =_caaef ;break ;};};
_egfg =append (_egfg ,&sigFieldPair {_cegb :_ebecg ,_daedf :_dcddb ,_cbdcb :_dcffb });};};};var _agcfd []SignatureValidationResult ;for _ ,_adcde :=range _egfg {_egfc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_adcde ._daedf }};if _adcde ._cbdcb ==nil {_egfc .Errors =append (_egfc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_agcfd =append (_agcfd ,_egfc );continue ;};_cdgce ,_dagcb :=_adcde ._cbdcb .NewDigest (_adcde ._cegb );if _dagcb !=nil {_egfc .Errors =append (_egfc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_dagcb .Error ());_agcfd =append (_agcfd ,_egfc );
continue ;};_bbcgg :=_adcde ._cegb .ByteRange ;if _bbcgg ==nil {_egfc .Errors =append (_egfc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_agcfd =append (_agcfd ,_egfc );continue ;};for _feeeg :=0;
_feeeg < _bbcgg .Len ();_feeeg =_feeeg +2{_defef ,_ :=_ac .GetNumberAsInt64 (_bbcgg .Get (_feeeg ));_fabgb ,_ :=_ac .GetIntVal (_bbcgg .Get (_feeeg +1));if _ ,_dffegd :=_ddbdd ._ddcc .Seek (_defef ,_cc .SeekStart );_dffegd !=nil {return nil ,_dffegd ;};
_adda :=make ([]byte ,_fabgb );if _ ,_bggbg :=_ddbdd ._ddcc .Read (_adda );_bggbg !=nil {return nil ,_bggbg ;};_cdgce .Write (_adda );};var _gcddf SignatureValidationResult ;if _cagad ,_fgege :=_adcde ._cbdcb .(SignatureHandlerDocMDP );_fgege {_gcddf ,_dagcb =_cagad .ValidateWithOpts (_adcde ._cegb ,_cdgce ,SignatureHandlerDocMDPParams {Parser :_ddbdd ._ecebe });
}else {_gcddf ,_dagcb =_adcde ._cbdcb .Validate (_adcde ._cegb ,_cdgce );};if _dagcb !=nil {_da .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_dagcb ,_adcde ._cbdcb );_gcddf .Errors =append (_gcddf .Errors ,_dagcb .Error ());
};_gcddf .Name =_adcde ._cegb .Name .Decoded ();_gcddf .Reason =_adcde ._cegb .Reason .Decoded ();if _adcde ._cegb .M !=nil {_dfeaa ,_dgfdd :=NewPdfDate (_adcde ._cegb .M .String ());if _dgfdd !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgfdd );
_gcddf .Errors =append (_gcddf .Errors ,_dgfdd .Error ());continue ;};_gcddf .Date =_dfeaa ;};_gcddf .ContactInfo =_adcde ._cegb .ContactInfo .Decoded ();_gcddf .Location =_adcde ._cegb .Location .Decoded ();_gcddf .Fields =_egfc .Fields ;_agcfd =append (_agcfd ,_gcddf );
};return _agcfd ,nil ;};

// ToInteger convert to an integer format.
func (_ggbfd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_deded :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_deded *_ggbfd .A ()),uint32 (_deded *_ggbfd .B ()),uint32 (_deded *_ggbfd .C ())};};

// SetMCID sets the MCID for the KValue.
func (_dbacg *KValue )SetMCID (mcid int ){_dbacg .Clear ();_dbacg ._acbde =&mcid };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ac .PdfObject ;};

// SetForms sets the Acroform for a PDF file.
func (_aefb *PdfWriter )SetForms (form *PdfAcroForm )error {_aefb ._ffafd =form ;return nil };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_facfg *PdfPageResources )GetShadingByName (keyName _ac .PdfObjectName )(*PdfShading ,bool ){if _facfg .Shading ==nil {return nil ,false ;};_ddgd ,_fegd :=_ac .TraceToDirectObject (_facfg .Shading ).(*_ac .PdfObjectDictionary );if !_fegd {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_facfg .Shading );
return nil ,false ;};if _bceee :=_ddgd .Get (keyName );_bceee !=nil {_febge ,_dbcgc :=_gdffe (_bceee );if _dbcgc !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dbcgc );
return nil ,false ;};return _febge ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_fggf *PdfAnnotationPolygon )ToPdfObject ()_ac .PdfObject {_fggf .PdfAnnotation .ToPdfObject ();_dfee :=_fggf ._add ;_bbcd :=_dfee .PdfObject .(*_ac .PdfObjectDictionary );_fggf .PdfAnnotationMarkup .appendToPdfDictionary (_bbcd );_bbcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bbcd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_fggf .Vertices );_bbcd .SetIfNotNil ("\u004c\u0045",_fggf .LE );_bbcd .SetIfNotNil ("\u0042\u0053",_fggf .BS );_bbcd .SetIfNotNil ("\u0049\u0043",_fggf .IC );_bbcd .SetIfNotNil ("\u0042\u0045",_fggf .BE );
_bbcd .SetIfNotNil ("\u0049\u0054",_fggf .IT );_bbcd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fggf .Measure );return _dfee ;};func (_bdaac *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};var _eeeb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// Evaluate runs the function on the passed in slice and returns the results.
func (_gaeca *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_da .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_aec .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_ddbcb *PdfReader )newPdfAnnotation3DFromDict (_fefe *_ac .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_acece :=PdfAnnotation3D {};
_acece .T3DD =_fefe .Get ("\u0033\u0044\u0044");_acece .T3DV =_fefe .Get ("\u0033\u0044\u0056");_acece .T3DA =_fefe .Get ("\u0033\u0044\u0041");_acece .T3DI =_fefe .Get ("\u0033\u0044\u0049");_acece .T3DB =_fefe .Get ("\u0033\u0044\u0042");return &_acece ,nil ;
};

// AddKChild adds a child K dictionary object.
func (_gagf *KDict )AddKChild (kChild *KDict ){_gagf ._ecge =append (_gagf ._ecge ,&KValue {_eeafa :kChild });};var _acad =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ParsePdfObject parses input pdf object into given output intent.
func (_gfga *PdfOutputIntent )ParsePdfObject (object _ac .PdfObject )error {_bbea ,_cdffda :=_ac .GetDict (object );if !_cdffda {_da .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _aec .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_gfga ._effaa =_bbea ;_gfga .Type ,_ =_bbea .GetString ("\u0054\u0079\u0070\u0065");_cgccd ,_cdffda :=_bbea .GetString ("\u0053");if _cdffda {switch _cgccd {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_gfga .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_gfga .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_gfga .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_gfga .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_gfga .S =PdfOutputIntentTypeX ;
};};_gfga .OutputCondition ,_ =_bbea .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_gfga .OutputConditionIdentifier ,_ =_bbea .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_gfga .RegistryName ,_ =_bbea .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_gfga .Info ,_ =_bbea .GetString ("\u0049\u006e\u0066\u006f");if _bgdab ,_cddb :=_ac .GetStream (_bbea .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_cddb {_gfga .ColorComponents ,_ =_ac .GetIntVal (_bgdab .Get ("\u004e"));_adegca ,_gcbfa :=_ac .DecodeStream (_bgdab );if _gcbfa !=nil {return _gcbfa ;};_gfga .DestOutputProfile =_adegca ;};return nil ;};func (_baeg *PdfReader )newPdfActionGotoEFromDict (_ddbc *_ac .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dbfg ,_dae :=_dcf (_ddbc .Get ("\u0046"));
if _dae !=nil {return nil ,_dae ;};return &PdfActionGoToE {D :_ddbc .Get ("\u0044"),NewWindow :_ddbc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ddbc .Get ("\u0054"),F :_dbfg },nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cdfe *PdfColorspaceDeviceN )GetNumComponents ()int {return _cdfe .ColorantNames .Len ()};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_ffgac *PdfPageResources )SetXObjectByName (keyName _ac .PdfObjectName ,stream *_ac .PdfObjectStream )error {if _ffgac .XObject ==nil {_ffgac .XObject =_ac .MakeDict ();};_aeece :=_ac .TraceToDirectObject (_ffgac .XObject );_ccdag ,_gfgg :=_aeece .(*_ac .PdfObjectDictionary );
if !_gfgg {_da .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_ffgac .XObject ,_aeece );return _aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccdag .Set (keyName ,stream );return nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_aaacbc *PdfWriter )SetOpenAction (dest _ac .PdfObject )error {if dest ==nil ||_ac .IsNullObject (dest ){return nil ;};_aaacbc ._cgebe .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _aaacbc .addObjects (dest );
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bgff *modelManager )GetModelFromPrimitive (primitive _ac .PdfObject )PdfModel {_bgff ._eeebb .RLock ();defer _bgff ._eeebb .RUnlock ();model ,_agaec :=_bgff ._cabgd [primitive ];if !_agaec {return nil ;};return model ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ageb *PdfAppender )Write (w _cc .Writer )error {if _ageb ._cdcd {return _aec .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_afbb :=NewPdfWriter ();_bbf ,_bfafc :=_ac .GetDict (_afbb ._cafdf );if !_bfafc {return _aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_egbg ,_bfafc :=_bbf .Get ("\u004b\u0069\u0064\u0073").(*_ac .PdfObjectArray );if !_bfafc {return _aec .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fada ,_bfafc :=_bbf .Get ("\u0043\u006f\u0075n\u0074").(*_ac .PdfObjectInteger );if !_bfafc {return _aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fdbc :=_ageb ._badg ._ecebe ;_gedba :=_fdbc .GetTrailer ();if _gedba ==nil {return _aec .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ecaee ,_bfafc :=_ac .GetIndirect (_gedba .Get ("\u0052\u006f\u006f\u0074"));
if !_bfafc {return _aec .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_decd ,_bfafc :=_ac .GetDict (_ecaee );if !_bfafc {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ecaee ,*_gedba );
return _aec .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eae :=false ;for _ ,_ceegg :=range _ageb ._badg .AcroForm .signatureFields (){if _ceegg .Lock !=nil {_eae =true ;break ;};};if _eae {_afbb ._aefaf =_ecaee ;
};for _ ,_aeg :=range _decd .Keys (){if _afbb ._cgebe .Get (_aeg )==nil {_agaa :=_decd .Get (_aeg );_afbb ._cgebe .Set (_aeg ,_agaa );};};if _ageb ._bbcc !=nil {if _ageb ._bbcc ._egbgc {if _egeb :=_ac .TraceToDirectObject (_ageb ._bbcc .ToPdfObject ());
!_ac .IsNullObject (_egeb ){_afbb ._cgebe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egeb );_ageb .updateObjectsDeep (_egeb ,nil );}else {_da .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_afbb ._cgebe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ageb ._bbcc .ToPdfObject ());_ageb .updateObjectsDeep (_ageb ._bbcc .ToPdfObject (),nil );};};if _ageb ._fcg !=nil {_ageb .updateObjectsDeep (_ageb ._fcg .ToPdfObject (),nil );
_afbb ._cgebe .Set ("\u0044\u0053\u0053",_ageb ._fcg .GetContainingPdfObject ());};if _ageb ._eca !=nil {_afbb ._cgebe .Set ("\u0050\u0065\u0072m\u0073",_ageb ._eca .ToPdfObject ());_ageb .updateObjectsDeep (_ageb ._eca .ToPdfObject (),nil );};if _afbb ._ccabd .Major < 2{_afbb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_afbb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _effb ,_ebadd :=_ac .GetDict (_gedba .Get ("\u0049\u006e\u0066\u006f"));_ebadd {if _feba ,_dccfb :=_ac .GetDict (_afbb ._bcbcab );_dccfb {for _ ,_bggfb :=range _effb .Keys (){if _feba .Get (_bggfb )==nil {_feba .Set (_bggfb ,_effb .Get (_bggfb ));
};};};};if _ageb ._eaae !=nil {_afbb ._bcbcab =_ac .MakeIndirectObject (_ageb ._eaae .ToPdfObject ());};_ageb .updateObjectsDeep (_afbb ._bcbcab ,nil );_ageb .updateObjectsDeep (_afbb ._aefaf ,nil );_egge :=false ;if len (_ageb ._badg .PageList )!=len (_ageb ._ega ){_egge =true ;
}else {for _badgd :=range _ageb ._badg .PageList {switch {case _ageb ._ega [_badgd ]==_ageb ._badg .PageList [_badgd ]:case _ageb ._ega [_badgd ]==_ageb .Reader .PageList [_badgd ]:default:_egge =true ;};if _egge {break ;};};};if _egge {_ageb .updateObjectsDeep (_afbb ._cafdf ,nil );
}else {_ageb ._deb [_afbb ._cafdf ]=struct{}{};};_afbb ._cafdf .ObjectNumber =_ageb .Reader ._ebfea .ObjectNumber ;_ageb ._dgd [_afbb ._cafdf ]=_ageb .Reader ._ebfea .ObjectNumber ;_ccaa :=[]_ac .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_gadgg :=range _ageb ._ega {_cfdg :=_gadgg .ToPdfObject ();*_fada =*_fada +1;if _caac ,_bge :=_cfdg .(*_ac .PdfIndirectObject );_bge &&_caac .GetParser ()==_ageb ._badg ._ecebe {_egbg .Append (&_caac .PdfObjectReference );continue ;};if _cbd ,_cbbag :=_ac .GetDict (_cfdg );
_cbbag {_gdga ,_gaec :=_cbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ac .PdfIndirectObject );for _gaec {_da .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdga );_agdf ,_fffe :=_gdga .PdfObject .(*_ac .PdfObjectDictionary );
if !_fffe {return _aec .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_beca :=range _ccaa {_da .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_beca );if _efcb :=_cbd .Get (_beca );
_efcb !=nil {_da .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_gadgg ._fefgc .Keys ())> 0&&!_egge {_cbaa :=_gadgg ._fefgc ;if _feee :=_cbaa .Get (_beca );_feee !=nil {if _efcb !=_feee {_da .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_beca ,_feee );
_cbd .Set (_beca ,_feee );};};};continue ;};if _dadec :=_agdf .Get (_beca );_dadec !=nil {_da .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_beca );_cbd .Set (_beca ,_dadec );};};
_gdga ,_gaec =_agdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ac .PdfIndirectObject );_da .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _egge {_cbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afbb ._cafdf );
};};_ageb .updateObjectsDeep (_cfdg ,nil );_egbg .Append (_cfdg );};if _ ,_bdcg :=_ageb ._gbfd .Seek (0,_cc .SeekStart );_bdcg !=nil {return _bdcg ;};_bdcge :=make (map[SignatureHandler ]_cc .Writer );_cbcg :=_ac .MakeArray ();for _ ,_agce :=range _ageb ._ecae {if _aade ,_bfb :=_ac .GetIndirect (_agce );
_bfb {if _fbdb ,_aecb :=_aade .PdfObject .(*pdfSignDictionary );_aecb {_ecfc :=*_fbdb ._ecfda ;var _bbefb error ;_bdcge [_ecfc ],_bbefb =_ecfc .NewDigest (_fbdb ._dagbgc );if _bbefb !=nil {return _bbefb ;};_cbcg .Append (_ac .MakeInteger (0xfffff),_ac .MakeInteger (0xfffff));
};};};if _cbcg .Len ()> 0{_cbcg .Append (_ac .MakeInteger (0xfffff),_ac .MakeInteger (0xfffff));};for _ ,_agee :=range _ageb ._ecae {if _eabb ,_ccag :=_ac .GetIndirect (_agee );_ccag {if _eecf ,_bdad :=_eabb .PdfObject .(*pdfSignDictionary );_bdad {_eecf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbcg );
};};};_dabf :=len (_bdcge )> 0;var _dddc _cc .Reader =_ageb ._gbfd ;if _dabf {_cdce :=make ([]_cc .Writer ,0,len (_bdcge ));for _ ,_gdad :=range _bdcge {_cdce =append (_cdce ,_gdad );};_dddc =_cc .TeeReader (_ageb ._gbfd ,_cc .MultiWriter (_cdce ...));
};_decc ,_gcff :=_cc .Copy (w ,_dddc );if _gcff !=nil {return _gcff ;};if len (_ageb ._ecae )==0{return nil ;};_afbb ._gagbg =_decc ;_afbb .ObjNumOffset =_ageb ._defc ;_afbb ._abbg =true ;_afbb ._dccaf =_ageb ._faegc ;_afbb ._fcfde =_ageb ._abbc ;_afbb ._gfce =_ageb ._baeb ;
_afbb ._ccabd =_ageb ._badg .PdfVersion ();_afbb ._fdgef =_ageb ._dgd ;_afbb ._gefae =_ageb ._ggbd .GetCrypter ();_afbb ._dfecf =_ageb ._ggbd .GetEncryptObj ();_ecca :=_ageb ._ggbd .GetXrefType ();if _ecca !=nil {_afac :=*_ecca ==_ac .XrefTypeObjectStream ;
_afbb ._egdgb =&_afac ;};_afbb ._beeeeg =map[_ac .PdfObject ]struct{}{};_afbb ._beggg =[]_ac .PdfObject {};for _ ,_effe :=range _ageb ._ecae {if _ ,_gfde :=_ageb ._deb [_effe ];_gfde {continue ;};_afbb .addObject (_effe );};_daga :=w ;if _dabf {_daga =_ag .NewBuffer (nil );
};if _ageb ._dfgba !=""&&_afbb ._gefae ==nil {_afbb .Encrypt ([]byte (_ageb ._dfgba ),[]byte (_ageb ._dfgba ),_ageb ._dfbcd );};if _cgdb :=_gedba .Get ("\u0049\u0044");_cgdb !=nil {if _fda ,_bag :=_ac .GetArray (_cgdb );_bag {_afbb ._ddfac =_fda ;};};if _abega :=_afbb .Write (_daga );
_abega !=nil {return _abega ;};if _dabf {_babc :=_daga .(*_ag .Buffer ).Bytes ();_ccfbf :=_ac .MakeArray ();var _bfdd []*pdfSignDictionary ;var _afeb int64 ;for _ ,_afacd :=range _afbb ._beggg {if _ebcc ,_eggf :=_ac .GetIndirect (_afacd );_eggf {if _gadf ,_cagc :=_ebcc .PdfObject .(*pdfSignDictionary );
_cagc {_bfdd =append (_bfdd ,_gadf );_gbec :=_gadf ._gfed +int64 (_gadf ._fefdg );_ccfbf .Append (_ac .MakeInteger (_afeb ),_ac .MakeInteger (_gbec -_afeb ));_afeb =_gadf ._gfed +int64 (_gadf ._bbegd );};};};_ccfbf .Append (_ac .MakeInteger (_afeb ),_ac .MakeInteger (_decc +int64 (len (_babc ))-_afeb ));
_ccea :=_ccfbf .Write ();for _ ,_cbaba :=range _bfdd {_bffc :=int (_cbaba ._gfed -_decc );for _aaeb :=_cbaba ._dedbg ;_aaeb < _cbaba ._fccdb ;_aaeb ++{_babc [_bffc +_aaeb ]=' ';};_fbga :=_babc [_bffc +_cbaba ._dedbg :_bffc +_cbaba ._fccdb ];copy (_fbga ,_ccea );
};var _dffd int ;for _ ,_ffea :=range _bfdd {_bdeg :=int (_ffea ._gfed -_decc );_gfef :=_babc [_dffd :_bdeg +_ffea ._fefdg ];_ecaf :=*_ffea ._ecfda ;_bdcge [_ecaf ].Write (_gfef );_dffd =_bdeg +_ffea ._bbegd ;};for _ ,_bdga :=range _bfdd {_fgaa :=_babc [_dffd :];
_gdef :=*_bdga ._ecfda ;_bdcge [_gdef ].Write (_fgaa );};for _ ,_bbeff :=range _bfdd {_afded :=int (_bbeff ._gfed -_decc );_gcag :=*_bbeff ._ecfda ;_fbfb :=_bdcge [_gcag ];if _aaef :=_gcag .Sign (_bbeff ._dagbgc ,_fbfb );_aaef !=nil {return _aaef ;};_bbeff ._dagbgc .ByteRange =_ccfbf ;
_abbcg :=_bbeff ._dagbgc .Contents .Write ();for _dffcg :=_bbeff ._dedbg ;_dffcg < _bbeff ._fccdb ;_dffcg ++{_babc [_afded +_dffcg ]=' ';};for _bcbc :=_bbeff ._fefdg ;_bcbc < _bbeff ._bbegd ;_bcbc ++{_babc [_afded +_bcbc ]=' ';};_cdfa :=_babc [_afded +_bbeff ._dedbg :_afded +_bbeff ._fccdb ];
copy (_cdfa ,_ccea );_cdfa =_babc [_afded +_bbeff ._fefdg :_afded +_bbeff ._bbegd ];copy (_cdfa ,_abbcg );};_defg :=_ag .NewBuffer (_babc );_ ,_gcff =_cc .Copy (w ,_defg );if _gcff !=nil {return _gcff ;};};_ageb ._cdcd =true ;return nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_eccge *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfedc :=func (_eaba float64 )float64 {if _eaba >=6.0/29{return _eaba *_eaba *_eaba ;};return 108.0/841*(_eaba -4.0/29.0);};_gdde ,_dcfee :=color .(*PdfColorLab );if !_dcfee {_da .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gdde .L ();AStar :=_gdde .A ();BStar :=_gdde .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_eccge .WhitePoint [0]*_bfedc (L );Y :=_eccge .WhitePoint [1]*_bfedc (M );Z :=_eccge .WhitePoint [2]*_bfedc (N );_cgfd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggga :=-0.969256*X +1.875992*Y +0.041556*Z ;_cgbd :=0.055648*X +-0.204043*Y +1.057311*Z ;
_cgfd =_fe .Min (_fe .Max (_cgfd ,0),1.0);_ggga =_fe .Min (_fe .Max (_ggga ,0),1.0);_cgbd =_fe .Min (_fe .Max (_cgbd ,0),1.0);return NewPdfColorDeviceRGB (_cgfd ,_ggga ,_cgbd ),nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fgcc *PdfPageResources )SetXObjectImageByName (keyName _ac .PdfObjectName ,ximg *XObjectImage )error {_cebb :=ximg .ToPdfObject ().(*_ac .PdfObjectStream );_cdfbe :=_fgcc .SetXObjectByName (keyName ,_cebb );return _cdfbe ;};

// ToPdfObject implements interface PdfModel.
func (_bffe *PdfAnnotationWidget )ToPdfObject ()_ac .PdfObject {_bffe .PdfAnnotation .ToPdfObject ();_bcfd :=_bffe ._add ;_ffgb :=_bcfd .PdfObject .(*_ac .PdfObjectDictionary );if _bffe ._fgee {return _bcfd ;};_bffe ._fgee =true ;_ffgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ffgb .SetIfNotNil ("\u0048",_bffe .H );_ffgb .SetIfNotNil ("\u004d\u004b",_bffe .MK );_ffgb .SetIfNotNil ("\u0041",_bffe .A );_ffgb .SetIfNotNil ("\u0041\u0041",_bffe .AA );_ffgb .SetIfNotNil ("\u0042\u0053",_bffe .BS );_fefg :=_bffe .Parent ;if _bffe ._fbe !=nil {if _bffe ._fbe ._fggde ==_bffe ._add {_bffe ._fbe .ToPdfObject ();
};_fefg =_bffe ._fbe .GetContainingPdfObject ();};if _fefg !=_bcfd {_ffgb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fefg );};_bffe ._fgee =false ;return _bcfd ;};var _agcce =false ;

// C returns the value of the cyan component of the color.
func (_egfe *PdfColorDeviceCMYK )C ()float64 {return _egfe [0]};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bbaaf *PdfPage )GetContainingPdfObject ()_ac .PdfObject {return _bbaaf ._gbdca };

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ecbcgb :=&XObjectForm {};_bbgcdb :=&_ac .PdfObjectStream {};_bbgcdb .PdfObjectDictionary =_ac .MakeDict ();_ecbcgb ._abfbc =_bbgcdb ;return _ecbcgb ;};

// SetHideMenubar sets the value of the hideMenubar flag.
func (_feeeed *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_feeeed ._ddeag =&hideMenubar };

// Initialize initializes the PdfSignature.
func (_edabe *PdfSignature )Initialize ()error {if _edabe .Handler ==nil {return _aec .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _edabe .Handler .InitSignature (_edabe );};

// IsCID returns true if the underlying font is CID.
func (_dbded *PdfFont )IsCID ()bool {return _dbded .baseFields ().isCIDFont ()};func (_fdde *PdfReader )newPdfAnnotationFromIndirectObject (_cagg *_ac .PdfIndirectObject )(*PdfAnnotation ,error ){_afcb ,_edff :=_cagg .PdfObject .(*_ac .PdfObjectDictionary );
if !_edff {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fdde ._edabf .GetModelFromPrimitive (_afcb );model !=nil {_gbeb ,_bdb :=model .(*PdfAnnotation );if !_bdb {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gbeb ,nil ;};_abad :=&PdfAnnotation {};_abad ._add =_cagg ;_fdde ._edabf .Register (_afcb ,_abad );if _ddca :=_afcb .Get ("\u0054\u0079\u0070\u0065");_ddca !=nil {_caeg ,_fac :=_ddca .(*_ac .PdfObjectName );if !_fac {_da .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ddca );
}else {if *_caeg !="\u0041\u006e\u006eo\u0074"{_da .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_caeg );};};};
if _bccb :=_afcb .Get ("\u0052\u0065\u0063\u0074");_bccb !=nil {_abad .Rect =_bccb ;};if _egb :=_afcb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_egb !=nil {_abad .Contents =_egb ;};if _ffcg :=_afcb .Get ("\u0050");_ffcg !=nil {_abad .P =_ffcg ;
};if _baca :=_afcb .Get ("\u004e\u004d");_baca !=nil {_abad .NM =_baca ;};if _dfc :=_afcb .Get ("\u004d");_dfc !=nil {_abad .M =_dfc ;};if _aafa :=_afcb .Get ("\u0046");_aafa !=nil {_abad .F =_aafa ;};if _aee :=_afcb .Get ("\u0041\u0050");_aee !=nil {_abad .AP =_aee ;
};if _gbca :=_afcb .Get ("\u0041\u0053");_gbca !=nil {_abad .AS =_gbca ;};if _afe :=_afcb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_afe !=nil {_abad .Border =_afe ;};if _faef :=_afcb .Get ("\u0043");_faef !=nil {_abad .C =_faef ;};if _cff :=_afcb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_cff !=nil {_abad .StructParent =_cff ;};if _egc :=_afcb .Get ("\u004f\u0043");_egc !=nil {_abad .OC =_egc ;};_efc :=_afcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _efc ==nil {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_abad ._dbaec =nil ;return _abad ,nil ;};_gdbb ,_cffg :=_efc .(*_ac .PdfObjectName );if !_cffg {_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efc );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_efc );};switch *_gdbb {case "\u0054\u0065\u0078\u0074":_dcbe ,_aacg :=_fdde .newPdfAnnotationTextFromDict (_afcb );
if _aacg !=nil {return nil ,_aacg ;};_dcbe .PdfAnnotation =_abad ;_abad ._dbaec =_dcbe ;return _abad ,nil ;case "\u004c\u0069\u006e\u006b":_abg ,_dff :=_fdde .newPdfAnnotationLinkFromDict (_afcb );if _dff !=nil {return nil ,_dff ;};_abg .PdfAnnotation =_abad ;
_abad ._dbaec =_abg ;return _abad ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_effa ,_agd :=_fdde .newPdfAnnotationFreeTextFromDict (_afcb );if _agd !=nil {return nil ,_agd ;};_effa .PdfAnnotation =_abad ;_abad ._dbaec =_effa ;return _abad ,nil ;
case "\u004c\u0069\u006e\u0065":_efef ,_bgce :=_fdde .newPdfAnnotationLineFromDict (_afcb );if _bgce !=nil {return nil ,_bgce ;};_efef .PdfAnnotation =_abad ;_abad ._dbaec =_efef ;_da .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_abad ,_abad );
_da .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_efef ,_efef );_da .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_efef .PdfAnnotationMarkup ,_efef .PdfAnnotationMarkup );
return _abad ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bgcf ,_cdfd :=_fdde .newPdfAnnotationSquareFromDict (_afcb );if _cdfd !=nil {return nil ,_cdfd ;};_bgcf .PdfAnnotation =_abad ;_abad ._dbaec =_bgcf ;return _abad ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cbbd ,_cdag :=_fdde .newPdfAnnotationCircleFromDict (_afcb );
if _cdag !=nil {return nil ,_cdag ;};_cbbd .PdfAnnotation =_abad ;_abad ._dbaec =_cbbd ;return _abad ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_acedc ,_facd :=_fdde .newPdfAnnotationPolygonFromDict (_afcb );if _facd !=nil {return nil ,_facd ;};
_acedc .PdfAnnotation =_abad ;_abad ._dbaec =_acedc ;return _abad ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_caf ,_aeec :=_fdde .newPdfAnnotationPolyLineFromDict (_afcb );if _aeec !=nil {return nil ,_aeec ;};_caf .PdfAnnotation =_abad ;
_abad ._dbaec =_caf ;return _abad ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ggdc ,_efea :=_fdde .newPdfAnnotationHighlightFromDict (_afcb );if _efea !=nil {return nil ,_efea ;};_ggdc .PdfAnnotation =_abad ;_abad ._dbaec =_ggdc ;return _abad ,nil ;
case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gge ,_bfc :=_fdde .newPdfAnnotationUnderlineFromDict (_afcb );if _bfc !=nil {return nil ,_bfc ;};_gge .PdfAnnotation =_abad ;_abad ._dbaec =_gge ;return _abad ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bfg ,_dbcb :=_fdde .newPdfAnnotationSquigglyFromDict (_afcb );
if _dbcb !=nil {return nil ,_dbcb ;};_bfg .PdfAnnotation =_abad ;_abad ._dbaec =_bfg ;return _abad ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dffc ,_caaf :=_fdde .newPdfAnnotationStrikeOut (_afcb );if _caaf !=nil {return nil ,_caaf ;};_dffc .PdfAnnotation =_abad ;
_abad ._dbaec =_dffc ;return _abad ,nil ;case "\u0043\u0061\u0072e\u0074":_gbcae ,_efad :=_fdde .newPdfAnnotationCaretFromDict (_afcb );if _efad !=nil {return nil ,_efad ;};_gbcae .PdfAnnotation =_abad ;_abad ._dbaec =_gbcae ;return _abad ,nil ;case "\u0053\u0074\u0061m\u0070":_cafd ,_cdae :=_fdde .newPdfAnnotationStampFromDict (_afcb );
if _cdae !=nil {return nil ,_cdae ;};_cafd .PdfAnnotation =_abad ;_abad ._dbaec =_cafd ;return _abad ,nil ;case "\u0049\u006e\u006b":_fea ,_acfb :=_fdde .newPdfAnnotationInkFromDict (_afcb );if _acfb !=nil {return nil ,_acfb ;};_fea .PdfAnnotation =_abad ;
_abad ._dbaec =_fea ;return _abad ,nil ;case "\u0050\u006f\u0070u\u0070":_fde ,_ccbb :=_fdde .newPdfAnnotationPopupFromDict (_afcb );if _ccbb !=nil {return nil ,_ccbb ;};_fde .PdfAnnotation =_abad ;_abad ._dbaec =_fde ;return _abad ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dded ,_abaf :=_fdde .newPdfAnnotationFileAttachmentFromDict (_afcb );
if _abaf !=nil {return nil ,_abaf ;};_dded .PdfAnnotation =_abad ;_abad ._dbaec =_dded ;return _abad ,nil ;case "\u0053\u006f\u0075n\u0064":_bfd ,_cgde :=_fdde .newPdfAnnotationSoundFromDict (_afcb );if _cgde !=nil {return nil ,_cgde ;};_bfd .PdfAnnotation =_abad ;
_abad ._dbaec =_bfd ;return _abad ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gga ,_cbgc :=_fdde .newPdfAnnotationRichMediaFromDict (_afcb );if _cbgc !=nil {return nil ,_cbgc ;};_gga .PdfAnnotation =_abad ;_abad ._dbaec =_gga ;return _abad ,nil ;
case "\u004d\u006f\u0076i\u0065":_adf ,_ccf :=_fdde .newPdfAnnotationMovieFromDict (_afcb );if _ccf !=nil {return nil ,_ccf ;};_adf .PdfAnnotation =_abad ;_abad ._dbaec =_adf ;return _abad ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cggc ,_fec :=_fdde .newPdfAnnotationScreenFromDict (_afcb );
if _fec !=nil {return nil ,_fec ;};_cggc .PdfAnnotation =_abad ;_abad ._dbaec =_cggc ;return _abad ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cegd ,_fcb :=_fdde .newPdfAnnotationWidgetFromDict (_afcb );if _fcb !=nil {return nil ,_fcb ;};_cegd .PdfAnnotation =_abad ;
_abad ._dbaec =_cegd ;return _abad ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_dgaf ,_fbf :=_fdde .newPdfAnnotationPrinterMarkFromDict (_afcb );if _fbf !=nil {return nil ,_fbf ;};_dgaf .PdfAnnotation =_abad ;_abad ._dbaec =_dgaf ;
return _abad ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_caegb ,_bbc :=_fdde .newPdfAnnotationTrapNetFromDict (_afcb );if _bbc !=nil {return nil ,_bbc ;};_caegb .PdfAnnotation =_abad ;_abad ._dbaec =_caegb ;return _abad ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gcdb ,_ffb :=_fdde .newPdfAnnotationWatermarkFromDict (_afcb );
if _ffb !=nil {return nil ,_ffb ;};_gcdb .PdfAnnotation =_abad ;_abad ._dbaec =_gcdb ;return _abad ,nil ;case "\u0033\u0044":_dfa ,_bce :=_fdde .newPdfAnnotation3DFromDict (_afcb );if _bce !=nil {return nil ,_bce ;};_dfa .PdfAnnotation =_abad ;_abad ._dbaec =_dfa ;
return _abad ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_edbc ,_bceg :=_fdde .newPdfAnnotationProjectionFromDict (_afcb );if _bceg !=nil {return nil ,_bceg ;};_edbc .PdfAnnotation =_abad ;_abad ._dbaec =_edbc ;return _abad ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_dbgg ,_aace :=_fdde .newPdfAnnotationRedactFromDict (_afcb );if _aace !=nil {return nil ,_aace ;};_dbgg .PdfAnnotation =_abad ;_abad ._dbaec =_dbgg ;return _abad ,nil ;};_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gdbb );
return nil ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cc .ReadSeeker )(*PdfReader ,error ){const _fecee ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _cgac (rs ,&ReaderOpts {LazyLoad :true },false ,_fecee );
};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_fgbc *PdfFieldButton )IsCheckbox ()bool {return _fgbc .GetType ()==ButtonTypeCheckbox };

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ecdbd *_ac .PdfIndirectObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject implements interface PdfModel.
func (_gffbd *PdfAnnotationLine )ToPdfObject ()_ac .PdfObject {_gffbd .PdfAnnotation .ToPdfObject ();_dcbc :=_gffbd ._add ;_gfgf :=_dcbc .PdfObject .(*_ac .PdfObjectDictionary );_gffbd .PdfAnnotationMarkup .appendToPdfDictionary (_gfgf );_gfgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u004c\u0069\u006e\u0065"));
_gfgf .SetIfNotNil ("\u004c",_gffbd .L );_gfgf .SetIfNotNil ("\u0042\u0053",_gffbd .BS );_gfgf .SetIfNotNil ("\u004c\u0045",_gffbd .LE );_gfgf .SetIfNotNil ("\u0049\u0043",_gffbd .IC );_gfgf .SetIfNotNil ("\u004c\u004c",_gffbd .LL );_gfgf .SetIfNotNil ("\u004c\u004c\u0045",_gffbd .LLE );
_gfgf .SetIfNotNil ("\u0043\u0061\u0070",_gffbd .Cap );_gfgf .SetIfNotNil ("\u0049\u0054",_gffbd .IT );_gfgf .SetIfNotNil ("\u004c\u004c\u004f",_gffbd .LLO );_gfgf .SetIfNotNil ("\u0043\u0050",_gffbd .CP );_gfgf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gffbd .Measure );
_gfgf .SetIfNotNil ("\u0043\u004f",_gffbd .CO );return _dcbc ;};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_aeddc *ViewerPreferences )IsHideMenubar ()bool {if _aeddc ._ddeag ==nil {return false ;};return *_aeddc ._ddeag ;};func _cgcb (_acgbe _ac .PdfObject ,_egegb *PdfReader )(*OutlineDest ,error ){_fddfaf ,_bdaafb :=_ac .GetArray (_acgbe );if !_bdaafb {return nil ,_aec .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_bcagg :=_fddfaf .Len ();if _bcagg < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bcagg );
};_gcdgf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_fgcagd :=_fddfaf .Get (0);if _cfaf ,_eccbf :=_ac .GetIndirect (_fgcagd );_eccbf {if _ ,_dafad ,_cgbdb :=_egegb .PageFromIndirectObject (_cfaf );_cgbdb ==nil {_gcdgf .Page =int64 (_dafad -1);}else {_da .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cfaf );
};_gcdgf .PageObj =_cfaf ;}else if _bdgb ,_fcdb :=_ac .GetIntVal (_fgcagd );_fcdb {if _bdgb >=0&&_bdgb < len (_egegb .PageList ){_gcdgf .PageObj =_egegb .PageList [_bdgb ].GetPageAsIndirectObject ();}else {_da .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bdgb );
};_gcdgf .Page =int64 (_bdgb );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_fgcagd );};_eedga ,_bdaafb :=_ac .GetNameVal (_fddfaf .Get (1));
if !_bdaafb {_da .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fddfaf .Get (1));
return _gcdgf ,nil ;};switch _eedga {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bcagg > 2{_gcdgf .Y ,_ =_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_fddfaf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bcagg > 2{_gcdgf .X ,_ =_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_fddfaf .Get (2)));
};case "\u0058\u0059\u005a":if _bcagg > 4{_gcdgf .X ,_ =_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_fddfaf .Get (2)));_gcdgf .Y ,_ =_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_fddfaf .Get (3)));_gcdgf .Zoom ,_ =_ac .GetNumberAsFloat (_ac .TraceToDirectObject (_fddfaf .Get (4)));
};default:_eedga ="\u0046\u0069\u0074";};_gcdgf .Mode =_eedga ;return _gcdgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdb *PdfAction )ToPdfObject ()_ac .PdfObject {_gcc :=_gdb ._acf ;_dag :=_gcc .PdfObject .(*_ac .PdfObjectDictionary );_dag .Clear ();_dag .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_dag .SetIfNotNil ("\u0053",_gdb .S );
_dag .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gdb .Next );return _gcc ;};func _cgfg (_fbbb _ac .PdfObject )*Names {_cgbfe :=_fbcagc ();_cgfed :=_ac .TraceToDirectObject (_fbbb ).(*_ac .PdfObjectDictionary );if _adff :=_cgfed .Get ("\u0044\u0065\u0073t\u0073");
_adff !=nil {_cgbfe .Dests =_ac .TraceToDirectObject (_adff ).(*_ac .PdfObjectDictionary );};if _abae :=_cgfed .Get ("\u0041\u0050");_abae !=nil {_cgbfe .AP =_ac .TraceToDirectObject (_abae ).(*_ac .PdfObjectDictionary );};if _badbc :=_cgfed .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");
_badbc !=nil {_cgbfe .JavaScript =_ac .TraceToDirectObject (_badbc ).(*_ac .PdfObjectDictionary );};if _fafa :=_cgfed .Get ("\u0050\u0061\u0067e\u0073");_fafa !=nil {_cgbfe .Pages =_ac .TraceToDirectObject (_fafa ).(*_ac .PdfObjectDictionary );};if _cdffc :=_cgfed .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");
_cdffc !=nil {_cgbfe .Templates =_ac .TraceToDirectObject (_cdffc ).(*_ac .PdfObjectDictionary );};if _fdacg :=_cgfed .Get ("\u0049\u0044\u0053");_fdacg !=nil {_cgbfe .IDS =_ac .TraceToDirectObject (_fdacg ).(*_ac .PdfObjectDictionary );};if _dbcdb :=_cgfed .Get ("\u0055\u0052\u004c\u0053");
_dbcdb !=nil {_cgbfe .URLS =_ac .TraceToDirectObject (_dbcdb ).(*_ac .PdfObjectDictionary );};if _dcdda :=_cgfed .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_dcdda !=nil {_cgbfe .EmbeddedFiles =_ac .TraceToDirectObject (_dcdda ).(*_ac .PdfObjectDictionary );
};if _ceddf :=_cgfed .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_ceddf !=nil {_cgbfe .AlternatePresentations =_ac .TraceToDirectObject (_ceddf ).(*_ac .PdfObjectDictionary );
};if _dcdgb :=_cgfed .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_dcdgb !=nil {_cgbfe .Renditions =_ac .TraceToDirectObject (_dcdgb ).(*_ac .PdfObjectDictionary );};return _cgbfe ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_fdac *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _fdac ._caggb ==nil {_fdac ._caggb =_fa .NewPSExecutor (_fdac .Program );};var _aafgf []_fa .PSObject ;for _ ,_aggb :=range xVec {_aafgf =append (_aafgf ,_fa .MakeReal (_aggb ));
};_egcaa ,_ebdc :=_fdac ._caggb .Execute (_aafgf );if _ebdc !=nil {return nil ,_ebdc ;};_cbde ,_ebdc :=_fa .PSObjectArrayToFloat64Array (_egcaa );if _ebdc !=nil {return nil ,_ebdc ;};return _cbde ,nil ;};

// Val returns the color value.
func (_dcea *PdfColorDeviceGray )Val ()float64 {return float64 (*_dcea )};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_dfgeg *PdfReader )GetIndirectObjectByNumber (number int )(_ac .PdfObject ,error ){_aeaf ,_gfbff :=_dfgeg ._ecebe .LookupByNumber (number );return _aeaf ,_gfbff ;};func (_dde *PdfReader )newPdfActionLaunchFromDict (_gca *_ac .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fba ,_dbaf :=_dcf (_gca .Get ("\u0046"));
if _dbaf !=nil {return nil ,_dbaf ;};return &PdfActionLaunch {Win :_gca .Get ("\u0057\u0069\u006e"),Mac :_gca .Get ("\u004d\u0061\u0063"),Unix :_gca .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gca .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fba },nil ;
};func (_dedg *PdfReader )newPdfAnnotationInkFromDict (_dbd *_ac .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ggc :=PdfAnnotationInk {};_fcea ,_eac :=_dedg .newPdfAnnotationMarkupFromDict (_dbd );if _eac !=nil {return nil ,_eac ;};_ggc .PdfAnnotationMarkup =_fcea ;
_ggc .InkList =_dbd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ggc .BS =_dbd .Get ("\u0042\u0053");return &_ggc ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_bdefa *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bdefa ._ccabd .Major =majorVersion ;_bdefa ._ccabd .Minor =minorVersion ;};

// ToInteger convert to an integer format.
func (_egdfc *PdfColorCalGray )ToInteger (bits int )uint32 {_aadec :=_fe .Pow (2,float64 (bits ))-1;return uint32 (_aadec *_egdfc .Val ());};func (_ggbbd *PdfReader )loadDSS ()(*DSS ,error ){if _ggbbd ._ecebe .GetCrypter ()!=nil &&!_ggbbd ._ecebe .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_agdcf :=_ggbbd ._dfae .Get ("\u0044\u0053\u0053");if _agdcf ==nil {return nil ,nil ;};_addcg ,_ :=_ac .GetIndirect (_agdcf );_agdcf =_ac .TraceToDirectObject (_agdcf );switch _aadcg :=_agdcf .(type ){case *_ac .PdfObjectNull :return nil ,nil ;case *_ac .PdfObjectDictionary :return _dbcd (_addcg ,_aadcg );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_agdcf );};func _ffeea (_dbdb *_ac .PdfObjectDictionary ,_efedc *fontCommon )(*pdfFontType3 ,error ){_cfccg :=_gefg (_efedc );_ceede :=_dbdb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _ceede ==nil {_ceede =_ac .MakeInteger (0);};_cfccg .FirstChar =_ceede ;_dfgcf ,_cddc :=_ac .GetIntVal (_ceede );if !_cddc {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ceede );
return nil ,_ac .ErrTypeError ;};_ffag :=_cd .CharCode (_dfgcf );_ceede =_dbdb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ceede ==nil {_ceede =_ac .MakeInteger (255);};_cfccg .LastChar =_ceede ;_dfgcf ,_cddc =_ac .GetIntVal (_ceede );
if !_cddc {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ceede );return nil ,_ac .ErrTypeError ;
};_fdcc :=_cd .CharCode (_dfgcf );_ceede =_dbdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ceede !=nil {_cfccg .Resources =_ceede ;};_ceede =_dbdb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _ceede ==nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_ceede );
return nil ,_ac .ErrNotSupported ;};_cfccg .CharProcs =_ceede ;_ceede =_dbdb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _ceede ==nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_ceede );
return nil ,_ac .ErrNotSupported ;};_cfccg .FontMatrix =_ceede ;_cfccg ._dfed =make (map[_cd .CharCode ]float64 );_ceede =_dbdb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ceede !=nil {_cfccg .Widths =_ceede ;_gdbbb ,_efbf :=_ac .GetArray (_ceede );
if !_efbf {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ceede );return nil ,_ac .ErrTypeError ;
};_gggge ,_bddcb :=_gdbbb .ToFloat64Array ();if _bddcb !=nil {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bddcb ;};if len (_gggge )!=int (_fdcc -_ffag +1){_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fdcc -_ffag +1,len (_gggge ));
return nil ,_ac .ErrRangeError ;};_eagg ,_efbf :=_ac .GetArray (_cfccg .FontMatrix );if !_efbf {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eagg );
return nil ,_bddcb ;};_aaeg ,_bddcb :=_eagg .ToFloat64Array ();if _bddcb !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bddcb ;};_fdff :=_bda .NewMatrix (_aaeg [0],_aaeg [1],_aaeg [2],_aaeg [3],_aaeg [4],_aaeg [5]);for _adeeb ,_cffa :=range _gggge {_cdaeeg ,_ :=_fdff .Transform (_cffa ,_cffa );_cfccg ._dfed [_ffag +_cd .CharCode (_adeeb )]=_cdaeeg ;};};_cfccg .Encoding =_ac .TraceToDirectObject (_dbdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_afcad :=_dbdb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _afcad !=nil {_cfccg ._baagf =_ac .TraceToDirectObject (_afcad );_gfcf ,_ebecc :=_geee (_cfccg ._baagf ,&_cfccg .fontCommon );if _ebecc !=nil {return nil ,_ebecc ;};_cfccg ._eceed =_gfcf ;
};if _eeea :=_cfccg ._eceed ;_eeea !=nil {_cfccg ._gabg =_cd .NewCMapEncoder ("",nil ,_eeea );}else {_cfccg ._gabg =_cd .NewPdfDocEncoder ();};return _cfccg ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_effaa :_ac .MakeDict ()};
};func (_fega *PdfReader )newPdfOutlineItemFromIndirectObject (_agfca *_ac .PdfIndirectObject )(*PdfOutlineItem ,error ){_adadb ,_gabcf :=_agfca .PdfObject .(*_ac .PdfObjectDictionary );if !_gabcf {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aafd :=NewPdfOutlineItem ();_cfabg :=_adadb .Get ("\u0054\u0069\u0074l\u0065");if _cfabg ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_geeeg ,_eccff :=_ac .GetString (_cfabg );if !_eccff {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cfabg );};_aafd .Title =_geeeg ;if _dcag :=_adadb .Get ("\u0043\u006f\u0075n\u0074");
_dcag !=nil {_ebdeaa ,_cggab :=_dcag .(*_ac .PdfObjectInteger );if !_cggab {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dcag );};_dgcda :=int64 (*_ebdeaa );
_aafd .Count =&_dgcda ;};if _affaa :=_adadb .Get ("\u0044\u0065\u0073\u0074");_affaa !=nil {_aafd .Dest =_ac .ResolveReference (_affaa );if !_fega ._bacfb {_cagdb :=_fega .traverseObjectData (_aafd .Dest );if _cagdb !=nil {return nil ,_cagdb ;};};};if _eggg :=_adadb .Get ("\u0041");
_eggg !=nil {_aafd .A =_ac .ResolveReference (_eggg );if !_fega ._bacfb {_fffeb :=_fega .traverseObjectData (_aafd .A );if _fffeb !=nil {return nil ,_fffeb ;};};};if _gaee :=_adadb .Get ("\u0053\u0045");_gaee !=nil {_aafd .SE =nil ;};if _acega :=_adadb .Get ("\u0043");
_acega !=nil {_aafd .C =_ac .ResolveReference (_acega );};if _defdf :=_adadb .Get ("\u0046");_defdf !=nil {_aafd .F =_ac .ResolveReference (_defdf );};return _aafd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fdcfa *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject converts the font to a PDF representation.
func (_acddd *pdfFontType3 )ToPdfObject ()_ac .PdfObject {if _acddd ._gddcf ==nil {_acddd ._gddcf =&_ac .PdfIndirectObject {};};_gccge :=_acddd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_acddd ._gddcf .PdfObject =_gccge ;if _acddd .FirstChar !=nil {_gccge .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_acddd .FirstChar );
};if _acddd .LastChar !=nil {_gccge .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_acddd .LastChar );};if _acddd .Widths !=nil {_gccge .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_acddd .Widths );};if _acddd .Encoding !=nil {_gccge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acddd .Encoding );
}else if _acddd ._gabg !=nil {_bacc :=_acddd ._gabg .ToPdfObject ();if _bacc !=nil {_gccge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bacc );};};if _acddd .FontBBox !=nil {_gccge .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_acddd .FontBBox );
};if _acddd .FontMatrix !=nil {_gccge .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_acddd .FontMatrix );};if _acddd .CharProcs !=nil {_gccge .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_acddd .CharProcs );};if _acddd .Resources !=nil {_gccge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_acddd .Resources );
};return _acddd ._gddcf ;};func (_dgfb *Image )getSuitableEncoder ()(_ac .StreamEncoder ,error ){var (_gece ,_faccc =int (_dgfb .Width ),int (_dgfb .Height );_cggee =make (map[string ]bool );_fcbf =true ;_ggaeb =false ;_ddae =func ()*_ac .DCTEncoder {return _ac .NewDCTEncoder ()};
_cfegd =func ()*_ac .DCTEncoder {_cdcb :=_ac .NewDCTEncoder ();_cdcb .BitsPerComponent =16;return _cdcb };);for _abfbf :=0;_abfbf < _faccc ;_abfbf ++{for _daab :=0;_daab < _gece ;_daab ++{_efdfa ,_faaa :=_dgfb .ColorAt (_daab ,_abfbf );if _faaa !=nil {return nil ,_faaa ;
};_cegaa ,_fbeb ,_cffff ,_feacg :=_efdfa .RGBA ();if _fcbf &&(_cegaa !=_fbeb ||_cegaa !=_cffff ||_fbeb !=_cffff ){_fcbf =false ;};if !_ggaeb {switch _efdfa .(type ){case _ee .NRGBA :_ggaeb =_feacg > 0;};};_cggee [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_cegaa ,_fbeb ,_cffff )]=true ;
if len (_cggee )> 2&&_ggaeb {return _cfegd (),nil ;};};};if _ggaeb ||len (_dgfb ._geag )> 0{return _ac .NewFlateEncoder (),nil ;};if len (_cggee )<=2{_eabe :=_dgfb .ConvertToBinary ();if _eabe !=nil {return nil ,_eabe ;};return _ac .NewJBIG2Encoder (),nil ;
};if _fcbf {return _ddae (),nil ;};if _dgfb .ColorComponents ==1{if _dgfb .BitsPerComponent ==1{return _ac .NewJBIG2Encoder (),nil ;}else if _dgfb .BitsPerComponent ==8{_fcdef :=_ac .NewDCTEncoder ();_fcdef .ColorComponents =1;return _fcdef ,nil ;};}else if _dgfb .ColorComponents ==3{if _dgfb .BitsPerComponent ==8{return _ddae (),nil ;
}else if _dgfb .BitsPerComponent ==16{return _cfegd (),nil ;};}else if _dgfb .ColorComponents ==4{_ebddd :=_cfegd ();_ebddd .ColorComponents =4;return _ebddd ,nil ;};return _cfegd (),nil ;};

// Fill populates `form` with values provided by `provider`.
func (_cefgc *PdfAcroForm )Fill (provider FieldValueProvider )error {return _cefgc .fill (provider ,nil )};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_baae *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecbef ,_edd :=color .(*PdfColorDeviceCMYK );if !_edd {_da .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acfe :=_ecbef .C ();_bfddc :=_ecbef .M ();_efgf :=_ecbef .Y ();_dgfa :=_ecbef .K ();_acfe =_acfe *(1-_dgfa )+_dgfa ;_bfddc =_bfddc *(1-_dgfa )+_dgfa ;
_efgf =_efgf *(1-_dgfa )+_dgfa ;_eaca :=1-_acfe ;_abgd :=1-_bfddc ;_bgcb :=1-_efgf ;return NewPdfColorDeviceRGB (_eaca ,_abgd ,_bgcb ),nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_bga *PdfReader )newPdfAnnotationStampFromDict (_abebd *_ac .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cgdf :=PdfAnnotationStamp {};_caag ,_daef :=_bga .newPdfAnnotationMarkupFromDict (_abebd );if _daef !=nil {return nil ,_daef ;
};_cgdf .PdfAnnotationMarkup =_caag ;_cgdf .Name =_abebd .Get ("\u004e\u0061\u006d\u0065");return &_cgdf ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ac .PdfObject ;FS _ac .PdfObject ;F _ac .PdfObject ;UF _ac .PdfObject ;DOS _ac .PdfObject ;Mac _ac .PdfObject ;Unix _ac .PdfObject ;ID _ac .PdfObject ;V _ac .PdfObject ;EF _ac .PdfObject ;RF _ac .PdfObject ;Desc _ac .PdfObject ;
CI _ac .PdfObject ;AFRelationship _ac .PdfObject ;_fedc _ac .PdfObject ;};func _dgfed (_gade *_ac .PdfObjectDictionary ,_afge *fontCommon )(*pdfCIDFontType2 ,error ){if _afge ._bacd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_da .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_afge );
return nil ,_ac .ErrRangeError ;};_gfecca :=_cefff (_afge );_gafe ,_abda :=_ac .GetDict (_gade .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_abda {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_afge );
return nil ,ErrRequiredAttributeMissing ;};_gfecca .CIDSystemInfo =_gafe ;_gfecca .DW =_gade .Get ("\u0044\u0057");_gfecca .W =_gade .Get ("\u0057");_gfecca .DW2 =_gade .Get ("\u0044\u0057\u0032");_gfecca .W2 =_gade .Get ("\u0057\u0032");_gfecca .CIDToGIDMap =_gade .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gfecca ._fefef =1000.0;if _fcfae ,_cacda :=_ac .GetNumberAsFloat (_gfecca .DW );_cacda ==nil {_gfecca ._fefef =_fcfae ;};_gbdd ,_ecece :=_cabe (_gfecca .W );if _ecece !=nil {return nil ,_ecece ;};if _gbdd ==nil {_gbdd =map[_cd .CharCode ]float64 {};};
_gfecca ._fbgc =_gbdd ;return _gfecca ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_cfecg *PdfTilingPattern )ToPdfObject ()_ac .PdfObject {_cfecg .PdfPattern .ToPdfObject ();_dgeec :=_cfecg .getDict ();if _cfecg .PaintType !=nil {_dgeec .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_cfecg .PaintType );};if _cfecg .TilingType !=nil {_dgeec .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cfecg .TilingType );
};if _cfecg .BBox !=nil {_dgeec .Set ("\u0042\u0042\u006f\u0078",_cfecg .BBox .ToPdfObject ());};if _cfecg .XStep !=nil {_dgeec .Set ("\u0058\u0053\u0074e\u0070",_cfecg .XStep );};if _cfecg .YStep !=nil {_dgeec .Set ("\u0059\u0053\u0074e\u0070",_cfecg .YStep );
};if _cfecg .Resources !=nil {_dgeec .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cfecg .Resources .ToPdfObject ());};if _cfecg .Matrix !=nil {_dgeec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfecg .Matrix );};return _cfecg ._cgfee ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fccb :_ac .MakeIndirectObject (_ac .MakeDict ())};};func (_edcge *PdfReader )traverseObjectData (_bdbcf _ac .PdfObject )error {return _ac .ResolveReferencesDeep (_bdbcf ,_edcge ._cbdeg );
};

// GetCustomInfo returns a custom info value for the specified name.
func (_ffcc *PdfInfo )GetCustomInfo (name string )*_ac .PdfObjectString {var _adea *_ac .PdfObjectString ;if _ffcc ._cefe ==nil {return _adea ;};if _cgge ,_facg :=_ffcc ._cefe .Get (*_ac .MakeName (name )).(*_ac .PdfObjectString );_facg {_adea =_cgge ;
};return _adea ;};

// ToPdfObject implements interface PdfModel.
func (_dee *PdfAnnotationUnderline )ToPdfObject ()_ac .PdfObject {_dee .PdfAnnotation .ToPdfObject ();_fbfc :=_dee ._add ;_bdgd :=_fbfc .PdfObject .(*_ac .PdfObjectDictionary );_dee .PdfAnnotationMarkup .appendToPdfDictionary (_bdgd );_bdgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_bdgd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dee .QuadPoints );return _fbfc ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_fbbfa *PdfPage )Size ()(float64 ,float64 ,error ){_gbcaef ,_gecff :=_fbbfa .GetMediaBox ();if _gecff !=nil {return 0,0,_gecff ;};_ffggb ,_dfba :=_gbcaef .Width (),_gbcaef .Height ();_dffcb ,_gecff :=_fbbfa .GetRotate ();if _gecff !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_gecff .Error ());
};if _abag :=_dffcb ;_abag %360!=0&&_abag %90==0{if _cgee :=(360+_abag %360)%360;_cgee ==90||_cgee ==270{_ffggb ,_dfba =_dfba ,_ffggb ;};};return _ffggb ,_dfba ,nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ggge *PdfPageResourcesColorspaces )Set (key _ac .PdfObjectName ,val PdfColorspace ){if _ ,_cgdbe :=_ggge .Colorspaces [string (key )];!_cgdbe {_ggge .Names =append (_ggge .Names ,string (key ));};_ggge .Colorspaces [string (key )]=val ;};func (_afdedf *DSS )generateHashMap (_afgf []*_ac .PdfObjectStream )(map[string ]*_ac .PdfObjectStream ,error ){_cddeb :=map[string ]*_ac .PdfObjectStream {};
for _ ,_bfgcd :=range _afgf {_gaaf ,_cabbd :=_ac .DecodeStream (_bfgcd );if _cabbd !=nil {return nil ,_cabbd ;};_agfce ,_cabbd :=_daabb (_gaaf );if _cabbd !=nil {return nil ,_cabbd ;};_cddeb [string (_agfce )]=_bfgcd ;};return _cddeb ,nil ;};

// ToInteger convert to an integer format.
func (_adgb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ebdf :=_fe .Pow (2,float64 (bits ))-1;return uint32 (_ebdf *_adgb .Val ());};

// ToPdfObject implements interface PdfModel.
func (_afag *PdfAnnotationHighlight )ToPdfObject ()_ac .PdfObject {_afag .PdfAnnotation .ToPdfObject ();_ffe :=_afag ._add ;_fdec :=_ffe .PdfObject .(*_ac .PdfObjectDictionary );_afag .PdfAnnotationMarkup .appendToPdfDictionary (_fdec );_fdec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fdec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afag .QuadPoints );return _ffe ;};

// ToPdfObject implements interface PdfModel.
func (_ffa *PdfAnnotationText )ToPdfObject ()_ac .PdfObject {_ffa .PdfAnnotation .ToPdfObject ();_aadb :=_ffa ._add ;_dcac :=_aadb .PdfObject .(*_ac .PdfObjectDictionary );if _ffa .PdfAnnotationMarkup !=nil {_ffa .PdfAnnotationMarkup .appendToPdfDictionary (_dcac );
};_dcac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0054\u0065\u0078\u0074"));_dcac .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ffa .Open );_dcac .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffa .Name );_dcac .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ffa .State );
_dcac .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ffa .StateModel );return _aadb ;};

// SetDuplex sets the value of the duplex.
func (_fgaae *ViewerPreferences )SetDuplex (duplex Duplex ){_fgaae ._dfaa =duplex };func (_faac *PdfReader )newPdfAnnotationWidgetFromDict (_ccgc *_ac .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fccg :=PdfAnnotationWidget {};_fccg .H =_ccgc .Get ("\u0048");
_fccg .MK =_ccgc .Get ("\u004d\u004b");_fccg .A =_ccgc .Get ("\u0041");_fccg .AA =_ccgc .Get ("\u0041\u0041");_fccg .BS =_ccgc .Get ("\u0042\u0053");_fccg .Parent =_ccgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fccg ,nil ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_cdbe :=&PdfAppender {_gbfd :reader ._ddcc ,Reader :reader ,_ggbd :reader ._ecebe ,_ffd :reader ._cbdeg };_begb ,_gbab :=_cdbe ._gbfd .Seek (0,_cc .SeekEnd );
if _gbab !=nil {return nil ,_gbab ;};_cdbe ._baeb =_begb ;if _ ,_gbab =_cdbe ._gbfd .Seek (0,_cc .SeekStart );_gbab !=nil {return nil ,_gbab ;};_cdbe ._badg ,_gbab =NewPdfReaderWithOpts (_cdbe ._gbfd ,opts );if _gbab !=nil {return nil ,_gbab ;};for _ ,_afcd :=range _cdbe .Reader .GetObjectNums (){if _cdbe ._defc < _afcd {_cdbe ._defc =_afcd ;
};};_cdbe ._faegc =_cdbe ._ggbd .GetXrefTable ();_cdbe ._abbc =_cdbe ._ggbd .GetXrefOffset ();_cdbe ._ega =append (_cdbe ._ega ,_cdbe ._badg .PageList ...);_cdbe ._aadba =make (map[_ac .PdfObject ]struct{});_cdbe ._dgd =make (map[_ac .PdfObject ]int64 );
_cdbe ._deb =make (map[_ac .PdfObject ]struct{});_cdbe ._bbcc =_cdbe ._badg .AcroForm ;_cdbe ._fcg =_cdbe ._badg .DSS ;if opts !=nil {_cdbe ._dfgba =opts .Password ;};if encryptOptions !=nil {_cdbe ._dfbcd =encryptOptions ;};return _cdbe ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ac .PdfObjectName ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cedf :=NewPdfAnnotation ();_bdea :=&PdfAnnotationPolygon {};_bdea .PdfAnnotation =_cedf ;_bdea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cedf .SetContext (_bdea );return _bdea ;};func _fgeae (_abdaea string )(string ,error ){var _abefb _ag .Buffer ;
_abefb .WriteString (_abdaea );_fgagc :=make ([]byte ,8+16);_eecdf :=_dg .Now ().UTC ().UnixNano ();_bab .BigEndian .PutUint64 (_fgagc ,uint64 (_eecdf ));_ ,_febcf :=_fc .Read (_fgagc [8:]);if _febcf !=nil {return "",_febcf ;};_abefb .WriteString (_fg .EncodeToString (_fgagc ));
return _abefb .String (),nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_acff *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_aec .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cgcd :=&PdfColorPattern {};_eaee ,_gcfb :=objects [len (objects )-1].(*_ac .PdfObjectName );if !_gcfb {_da .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cgcd .PatternName =*_eaee ;if len (objects )> 1{_aaafe :=objects [0:len (objects )-1];if _acff .UnderlyingCS ==nil {_da .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_aec .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_dgcae ,_ebgg :=_acff .UnderlyingCS .ColorFromPdfObjects (_aaafe );if _ebgg !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_ebgg );
return nil ,_ebgg ;};_cgcd .Color =_dgcae ;};return _cgcd ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_egag *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bdfd :=_bdab .NewReader (img .getBase ());_aceb :=_cf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ddcae :=_bdab .NewWriter (_aceb );
_fbbad :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_bgde :=make ([]uint32 ,3);var (_dbaea error ;_dabg ,_eeaad ,_defb ,_dffa ,_efeac ,_bcgd float64 ;);for {_dbaea =_bdfd .ReadSamples (_bgde );if _dbaea ==_cc .EOF {break ;}else if _dbaea !=nil {return img ,_dbaea ;
};_dabg =float64 (_bgde [0])/_fbbad ;_eeaad =float64 (_bgde [1])/_fbbad ;_defb =float64 (_bgde [2])/_fbbad ;_dffa =_egag .Matrix [0]*_fe .Pow (_dabg ,_egag .Gamma [0])+_egag .Matrix [3]*_fe .Pow (_eeaad ,_egag .Gamma [1])+_egag .Matrix [6]*_fe .Pow (_defb ,_egag .Gamma [2]);
_efeac =_egag .Matrix [1]*_fe .Pow (_dabg ,_egag .Gamma [0])+_egag .Matrix [4]*_fe .Pow (_eeaad ,_egag .Gamma [1])+_egag .Matrix [7]*_fe .Pow (_defb ,_egag .Gamma [2]);_bcgd =_egag .Matrix [2]*_fe .Pow (_dabg ,_egag .Gamma [0])+_egag .Matrix [5]*_fe .Pow (_eeaad ,_egag .Gamma [1])+_egag .Matrix [8]*_fe .Pow (_defb ,_egag .Gamma [2]);
_dabg =3.240479*_dffa +-1.537150*_efeac +-0.498535*_bcgd ;_eeaad =-0.969256*_dffa +1.875992*_efeac +0.041556*_bcgd ;_defb =0.055648*_dffa +-0.204043*_efeac +1.057311*_bcgd ;_dabg =_fe .Min (_fe .Max (_dabg ,0),1.0);_eeaad =_fe .Min (_fe .Max (_eeaad ,0),1.0);
_defb =_fe .Min (_fe .Max (_defb ,0),1.0);_bgde [0]=uint32 (_dabg *_fbbad );_bgde [1]=uint32 (_eeaad *_fbbad );_bgde [2]=uint32 (_defb *_fbbad );if _dbaea =_ddcae .WriteSamples (_bgde );_dbaea !=nil {return img ,_dbaea ;};};return _bgage (&_aceb ),nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dgcb *PdfBorderStyle )ToPdfObject ()_ac .PdfObject {_befg :=_ac .MakeDict ();if _dgcb ._gbce !=nil {if _gfdd ,_cbba :=_dgcb ._gbce .(*_ac .PdfIndirectObject );_cbba {_gfdd .PdfObject =_befg ;};};_befg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dgcb .W !=nil {_befg .Set ("\u0057",_ac .MakeFloat (*_dgcb .W ));};if _dgcb .S !=nil {_befg .Set ("\u0053",_ac .MakeName (_dgcb .S .GetPdfName ()));};if _dgcb .D !=nil {_befg .Set ("\u0044",_ac .MakeArrayFromIntegers (*_dgcb .D ));};if _dgcb ._gbce !=nil {return _dgcb ._gbce ;
};return _befg ;};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _ac .PdfObject )(*StructTreeRoot ,error ){_bbced :=_ac .ResolveReference (obj );_begg ,_cbfcg :=_ac .GetDict (_bbced );if !_cbfcg {return nil ,_e .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_dfeb :=&StructTreeRoot {};_dfeb ._cbcac =_ac .MakeIndirectObject (_ac .MakeDict ());if _acgbb :=_begg .Get ("\u004b");_acgbb !=nil {_cadgge :=_ac .ResolveReference (_acgbb );_gbeadg :=_ac .ResolveReferencesDeep (_cadgge ,nil );if _gbeadg !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_gbeadg );
};_dfeb .K =[]*KDict {};if _ebeea ,_bdfad :=_ac .GetArray (_cadgge );_bdfad {for _acgbef :=0;_acgbef < _ebeea .Len ();_acgbef ++{_dcgcf :=_ebeea .Get (_acgbef );_ebaec ,_eccgfd :=NewKDictFromPdfObject (_dcgcf );if _eccgfd !=nil {return nil ,_eccgfd ;};
_dfeb .K =append (_dfeb .K ,_ebaec );};}else {_gdgdb ,_acac :=NewKDictFromPdfObject (_cadgge );if _acac !=nil {return nil ,_acac ;};_dfeb .K =append (_dfeb .K ,_gdgdb );};};if _bebeed :=_begg .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_bebeed !=nil {_dfeb .IDTree =_dgdcbg (_bebeed );
};if _dabbfc :=_begg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");_dabbfc !=nil {_adacb :=_ac .ResolveReference (_dabbfc );if _ffgge ,_ebfcd :=_ac .GetDict (_adacb );_ebfcd {_dfeb .ParentTree =_ffgge ;};};if _bfead :=_begg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_bfead !=nil {_ ,_gdaaa :=_ac .GetInt (_bfead );if _gdaaa {_dbce ,_febgb :=_ac .GetNumberAsInt64 (_bfead );if _febgb !=nil {return nil ,_febgb ;};_dfeb .ParentTreeNextKey =_dbce ;};};if _cacec :=_begg .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");_cacec !=nil {switch _befbb :=_cacec .(type ){case *_ac .PdfIndirectObject :if _bdgfg ,_fadba :=_ac .GetDict (_befbb .PdfObject );
_fadba {_dfeb .RoleMap =_bdgfg ;};case *_ac .PdfObjectDictionary :_dfeb .RoleMap =_befbb ;case *_ac .PdfObjectString :_dfeb .RoleMap =_befbb ;};};if _gecffd :=_begg .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_gecffd !=nil {if _fbgbb ,_bbedg :=_ac .GetDict (_gecffd );
_bbedg {_dfeb .ClassMap =_fbgbb ;};};return _dfeb ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_bbebf *Image )ConvertToBinary ()error {if _bbebf .ColorComponents ==1&&_bbebf .BitsPerComponent ==1{return nil ;};_eddbd ,_aecfe :=_bbebf .ToGoImage ();if _aecfe !=nil {return _aecfe ;};_gfbe ,_aecfe :=_cf .MonochromeConverter .Convert (_eddbd );
if _aecfe !=nil {return _aecfe ;};_bbebf .Data =_gfbe .Base ().Data ;_bbebf ._geag ,_aecfe =_cf .ScaleAlphaToMonochrome (_bbebf ._geag ,int (_bbebf .Width ),int (_bbebf .Height ));if _aecfe !=nil {return _aecfe ;};_bbebf .BitsPerComponent =1;_bbebf .ColorComponents =1;
_bbebf ._bacca =nil ;return nil ;};func (_dbca *PdfReader )loadAction (_agf _ac .PdfObject )(*PdfAction ,error ){if _ceeg ,_bfcc :=_ac .GetIndirect (_agf );_bfcc {_fcf ,_cbab :=_dbca .newPdfActionFromIndirectObject (_ceeg );if _cbab !=nil {return nil ,_cbab ;
};return _fcf ,nil ;}else if !_ac .IsNullObject (_agf ){return nil ,_aec .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_ac .PdfObjectName ;P *_ac .PdfObjectInteger ;V *_ac .PdfObjectName ;};func _bfdag (_afcfe *_ac .PdfIndirectObject )(*PdfOutline ,error ){_cgdfc ,_gfgda :=_afcfe .PdfObject .(*_ac .PdfObjectDictionary );if !_gfgda {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffdfb :=NewPdfOutline ();if _dedgg :=_cgdfc .Get ("\u0054\u0079\u0070\u0065");_dedgg !=nil {_gbagb ,_gfee :=_dedgg .(*_ac .PdfObjectName );if _gfee {if *_gbagb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_da .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gbagb );
};};};if _bbbce :=_cgdfc .Get ("\u0043\u006f\u0075n\u0074");_bbbce !=nil {_cgffg ,_dcgabf :=_ac .GetNumberAsInt64 (_bbbce );if _dcgabf !=nil {return nil ,_dcgabf ;};_ffdfb .Count =&_cgffg ;};return _ffdfb ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_caece *PdfReader )Decrypt (password []byte )(bool ,error ){_daadd ,_adace :=_caece ._ecebe .Decrypt (password );if _adace !=nil {return false ,_adace ;};if !_daadd {return false ,nil ;};_adace =_caece .loadStructure ();if _adace !=nil {_da .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_adace );
return false ,_adace ;};return true ,nil ;};func (_ccafg fontCommon )isCIDFont ()bool {if _ccafg ._bacd ==""{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccafg );
};_fadb :=false ;switch _ccafg ._bacd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fadb =true ;};_da .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fadb ,_ccafg );
return _fadb ;};func (_afdf *PdfReader )newPdfAnnotationTrapNetFromDict (_dcd *_ac .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fgad :=PdfAnnotationTrapNet {};return &_fgad ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fa .PSProgram ;_caggb *_fa .PSExecutor ;_eced []byte ;_cdcff *_ac .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fgdbc *PdfOutlineTreeNode )ToPdfObject ()_ac .PdfObject {return _fgdbc .GetContext ().ToPdfObject ();};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gadabd *PdfOutlineItem )GetContainingPdfObject ()_ac .PdfObject {return _gadabd ._gbdgg };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_edfdb DefaultImageHandler )Read (reader _cc .Reader )(*Image ,error ){_fcdaf ,_ ,_bfad :=_gb .Decode (reader );if _bfad !=nil {_da .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bfad );
return nil ,_bfad ;};return _edfdb .NewImageFromGoImage (_fcdaf );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_edfd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_aec .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_abada ,_edcgb :=_cf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._geag ,img ._bacca );if _edcgb !=nil {return img ,_edcgb ;};_ceaf ,_edcgb :=_cf .NRGBAConverter .Convert (_abada );
if _edcgb !=nil {return img ,_edcgb ;};_ccad :=_bgage (_ceaf .Base ());_da .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_da .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_da .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ccad .Data );_da .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ccad );return _ccad ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_abccd *PdfFont )BytesToCharcodes (data []byte )[]_cd .CharCode {_da .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dbfa ,_dcbce :=_abccd ._bcae .(*pdfFontType0 );_dcbce &&_dbfa ._fbcg !=nil {if _dcacd ,_fdbge :=_dbfa .bytesToCharcodes (data );_fdbge {return _dcacd ;};};var (_bcbf =make ([]_cd .CharCode ,0,len (data )+len (data )%2);_afdg =_abccd .baseFields ();
);if _afdg ._eceed !=nil {if _aadf ,_bade :=_afdg ._eceed .BytesToCharcodes (data );_bade {for _ ,_cabg :=range _aadf {_bcbf =append (_bcbf ,_cd .CharCode (_cabg ));};return _bcbf ;};};if _afdg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _egdfg :=0;_egdfg < len (data );_egdfg +=2{_efebf :=uint16 (data [_egdfg ])<<8|uint16 (data [_egdfg +1]);_bcbf =append (_bcbf ,_cd .CharCode (_efebf ));};}else {for _ ,_aggg :=range data {_bcbf =append (_bcbf ,_cd .CharCode (_aggg ));
};};return _bcbf ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_facdb :=&PdfColorspaceLab {};_facdb .BlackPoint =[]float64 {0.0,0.0,0.0};_facdb .Range =[]float64 {-100,100,-100,100};return _facdb ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ecce :=NewPdfAnnotation ();_feg :=&PdfAnnotationFileAttachment {};_feg .PdfAnnotation =_ecce ;_feg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecce .SetContext (_feg );return _feg ;
};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

// ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ac .StreamEncoder ;Intent _ac .PdfObject ;ImageMask _ac .PdfObject ;Mask _ac .PdfObject ;Matte _ac .PdfObject ;Decode _ac .PdfObject ;Interpolate _ac .PdfObject ;Alternatives _ac .PdfObject ;
SMask _ac .PdfObject ;SMaskInData _ac .PdfObject ;Name _ac .PdfObject ;StructParent _ac .PdfObject ;ID _ac .PdfObject ;OPI _ac .PdfObject ;Metadata _ac .PdfObject ;OC _ac .PdfObject ;Stream []byte ;_bagcg *_ac .PdfObjectStream ;_gabaa bool ;};

// SetBorderWidth sets the style's border width.
func (_fcce *PdfBorderStyle )SetBorderWidth (width float64 ){_fcce .W =&width };

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fedbe *PdfPageResources )SetXObjectImageByNameLazy (keyName _ac .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_ebda :=ximg .ToPdfObject ().(*_ac .PdfObjectStream );if lazy {_ebda .MakeLazy ();};_accg :=_fedbe .SetXObjectByName (keyName ,_ebda );
return _accg ;};

// AddWatermarkText adds a text watermark to the page.
func (_caee *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _aec .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _aec .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_ee .Black ;};_dgcab ,_gcegd :=_caee .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _gcegd !=nil {return _gcegd ;
};_gdfdd ,_ ,_gcegd :=_gb .Decode (_ag .NewReader (_dgcab ));if _gcegd !=nil {return _gcegd ;};_gegga ,_gcegd :=ImageHandling .NewImageFromGoImage (_gdfdd );if _gcegd !=nil {return _gcegd ;};_abbf ,_gcegd :=NewXObjectImageFromImage (_gegga ,nil ,_ac .NewFlateEncoder ());
if _gcegd !=nil {return _gcegd ;};_daff :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _caee .AddWatermarkImage (_abbf ,_daff );};func (_fga *PdfReader )newPdfAnnotationTextFromDict (_aeef *_ac .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fgd :=PdfAnnotationText {};
_ddbe ,_gfc :=_fga .newPdfAnnotationMarkupFromDict (_aeef );if _gfc !=nil {return nil ,_gfc ;};_fgd .PdfAnnotationMarkup =_ddbe ;_fgd .Open =_aeef .Get ("\u004f\u0070\u0065\u006e");_fgd .Name =_aeef .Get ("\u004e\u0061\u006d\u0065");_fgd .State =_aeef .Get ("\u0053\u0074\u0061t\u0065");
_fgd .StateModel =_aeef .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fgd ,nil ;};func _cacbe (_abfe *[]*PdfField ,_dbdg FieldFilterFunc ,_bdafg bool )[]*PdfField {if _abfe ==nil {return nil ;};_gdacf :=*_abfe ;if len (*_abfe )==0{return nil ;
};_eaabg :=_gdacf [:0];if _dbdg ==nil {_dbdg =func (*PdfField )bool {return true };};var _ddcdc []*PdfField ;for _ ,_dbbbb :=range _gdacf {_eaced :=_dbdg (_dbbbb );if _eaced {_ddcdc =append (_ddcdc ,_dbbbb );if len (_dbbbb .Kids )> 0{_ddcdc =append (_ddcdc ,_cacbe (&_dbbbb .Kids ,_dbdg ,_bdafg )...);
};};if !_bdafg ||!_eaced ||len (_dbbbb .Kids )> 0{_eaabg =append (_eaabg ,_dbbbb );};};*_abfe =_eaabg ;return _ddcdc ;};func _afgba ()string {_adga .Lock ();defer _adga .Unlock ();if len (_edabd )> 0{return _edabd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};var ErrColorOutOfRange =_aec .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dcaf *PdfReader )GetPageLabels ()(_ac .PdfObject ,error ){_efdfb :=_ac .ResolveReference (_dcaf ._dfae .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _efdfb ==nil {return nil ,nil ;};if !_dcaf ._bacfb {_ddea :=_dcaf .traverseObjectData (_efdfb );
if _ddea !=nil {return nil ,_ddea ;};};return _efdfb ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_beee :=NewPdfAnnotation ();_cfeg :=&PdfAnnotationRichMedia {};_cfeg .PdfAnnotation =_beee ;_beee .SetContext (_cfeg );return _cfeg ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_eceg *_ac .PdfObjectDictionary ;_abca *_ac .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gddcfc *PdfPageResourcesColorspaces )ToPdfObject ()_ac .PdfObject {_cbfc :=_ac .MakeDict ();for _ ,_aaccg :=range _gddcfc .Names {_cbfc .Set (_ac .PdfObjectName (_aaccg ),_gddcfc .Colorspaces [_aaccg ].ToPdfObject ());};if _gddcfc ._acfbf !=nil {_gddcfc ._acfbf .PdfObject =_cbfc ;
return _gddcfc ._acfbf ;};return _cbfc ;};func (_gcad *PdfReader )resolveReference (_gfaaf *_ac .PdfObjectReference )(_ac .PdfObject ,bool ,error ){_afcfdd ,_ffabc :=_gcad ._ecebe .ObjCache [int (_gfaaf .ObjectNumber )];if !_ffabc {_da .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gfaaf );
_caafa ,_feggf :=_gcad ._ecebe .LookupByReference (*_gfaaf );if _feggf !=nil {return nil ,false ,_feggf ;};_gcad ._ecebe .ObjCache [int (_gfaaf .ObjectNumber )]=_caafa ;return _caafa ,false ,nil ;};return _afcfdd ,true ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_fgffc *Outline )ToPdfOutline ()*PdfOutline {_cagge :=NewPdfOutline ();var _agfg []*PdfOutlineItem ;var _cbga int64 ;var _bbeea *PdfOutlineItem ;for _ ,_eefffg :=range _fgffc .Entries {_eaagb ,_ccaaab :=_eefffg .ToPdfOutlineItem ();_eaagb .Parent =&_cagge .PdfOutlineTreeNode ;
if _bbeea !=nil {_bbeea .Next =&_eaagb .PdfOutlineTreeNode ;_eaagb .Prev =&_bbeea .PdfOutlineTreeNode ;};_agfg =append (_agfg ,_eaagb );_cbga +=_ccaaab ;_bbeea =_eaagb ;};_bged :=int64 (len (_agfg ));_cbga +=_bged ;if _bged > 0{_cagge .First =&_agfg [0].PdfOutlineTreeNode ;
_cagge .Last =&_agfg [_bged -1].PdfOutlineTreeNode ;_cagge .Count =&_cbga ;};return _cagge ;};func _edbab (_ecggc *_ac .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gcgg :=PdfShadingType6 {};_bacfbc :=_ecggc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bacfbc ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgbcb ,_cgfbg :=_bacfbc .(*_ac .PdfObjectInteger );if !_cgfbg {_da .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bacfbc );
return nil ,_ac .ErrTypeError ;};_gcgg .BitsPerCoordinate =_fgbcb ;_bacfbc =_ecggc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bacfbc ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fgbcb ,_cgfbg =_bacfbc .(*_ac .PdfObjectInteger );if !_cgfbg {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bacfbc );
return nil ,_ac .ErrTypeError ;};_gcgg .BitsPerComponent =_fgbcb ;_bacfbc =_ecggc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bacfbc ==nil {_da .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgbcb ,_cgfbg =_bacfbc .(*_ac .PdfObjectInteger );if !_cgfbg {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bacfbc );
return nil ,_ac .ErrTypeError ;};_gcgg .BitsPerComponent =_fgbcb ;_bacfbc =_ecggc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bacfbc ==nil {_da .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dagade ,_cgfbg :=_bacfbc .(*_ac .PdfObjectArray );if !_cgfbg {_da .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bacfbc );
return nil ,_ac .ErrTypeError ;};_gcgg .Decode =_dagade ;if _dfdce :=_ecggc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dfdce !=nil {_gcgg .Function =[]PdfFunction {};if _bfbfac ,_ageca :=_dfdce .(*_ac .PdfObjectArray );_ageca {for _ ,_ebaab :=range _bfbfac .Elements (){_cfdgf ,_cege :=_fdfgf (_ebaab );
if _cege !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cege );return nil ,_cege ;};_gcgg .Function =append (_gcgg .Function ,_cfdgf );
};}else {_badbe ,_ggeab :=_fdfgf (_dfdce );if _ggeab !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggeab );return nil ,_ggeab ;
};_gcgg .Function =append (_gcgg .Function ,_badbe );};};return &_gcgg ,nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dfabd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dfabd ._cdccd =optimizer };

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gfdce *pdfFontSimple )ToPdfObject ()_ac .PdfObject {if _gfdce ._bbbd ==nil {_gfdce ._bbbd =&_ac .PdfIndirectObject {};};_bbga :=_gfdce .baseFields ().asPdfObjectDictionary ("");_gfdce ._bbbd .PdfObject =_bbga ;if _gfdce .FirstChar !=nil {_bbga .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gfdce .FirstChar );
};if _gfdce .LastChar !=nil {_bbga .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gfdce .LastChar );};if _gfdce .Widths !=nil {_bbga .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gfdce .Widths );};if _gfdce .Encoding !=nil {_bbga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfdce .Encoding );
}else if _gfdce ._cadfa !=nil {_ffeae :=_gfdce ._cadfa .ToPdfObject ();if _ffeae !=nil {_bbga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ffeae );};};return _gfdce ._bbbd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efddc *PdfColorspaceDeviceRGB )ToPdfObject ()_ac .PdfObject {return _ac .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToPdfObject implements interface PdfModel.
func (_gabd *PdfAnnotationRedact )ToPdfObject ()_ac .PdfObject {_gabd .PdfAnnotation .ToPdfObject ();_eec :=_gabd ._add ;_gegcg :=_eec .PdfObject .(*_ac .PdfObjectDictionary );_gabd .PdfAnnotationMarkup .appendToPdfDictionary (_gegcg );_gegcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_gegcg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gabd .QuadPoints );_gegcg .SetIfNotNil ("\u0049\u0043",_gabd .IC );_gegcg .SetIfNotNil ("\u0052\u004f",_gabd .RO );_gegcg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gabd .OverlayText );
_gegcg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gabd .Repeat );_gegcg .SetIfNotNil ("\u0044\u0041",_gabd .DA );_gegcg .SetIfNotNil ("\u0051",_gabd .Q );return _eec ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gcgfg *Image )ToJBIG2Image ()(*_ac .JBIG2Image ,error ){_ecddf ,_ebdee :=_gcgfg .ToGoImage ();if _ebdee !=nil {return nil ,_ebdee ;};return _ac .GoImageToJBIG2 (_ecddf ,_ac .JB2ImageAutoThreshold );};func (_bgfdce *PdfWriter )addObjects (_ffccd _ac .PdfObject )error {_da .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _gbaed ,_eafgc :=_ffccd .(*_ac .PdfIndirectObject );_eafgc {_da .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_da .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_ffccd ,_gbaed );_da .Log .Trace ("\u002d\u0020\u0025\u0073",_gbaed .PdfObject );
if _bgfdce .addObject (_gbaed ){_fgdff :=_bgfdce .addObjects (_gbaed .PdfObject );if _fgdff !=nil {return _fgdff ;};};return nil ;};if _afabce ,_gcfceg :=_ffccd .(*_ac .PdfObjectStream );_gcfceg {_da .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_da .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_ffccd ,_ffccd );if _bgfdce .addObject (_afabce ){_deecf :=_bgfdce .addObjects (_afabce .PdfObjectDictionary );if _deecf !=nil {return _deecf ;};};return nil ;};if _dabbfe ,_gebbd :=_ffccd .(*_ac .PdfObjectDictionary );
_gebbd {_da .Log .Trace ("\u0044\u0069\u0063\u0074");_da .Log .Trace ("\u002d\u0020\u0025\u0073",_ffccd );for _ ,_bbddb :=range _dabbfe .Keys (){_accgc :=_dabbfe .Get (_bbddb );if _dccgbb ,_afccd :=_accgc .(*_ac .PdfObjectReference );_afccd {_accgc =_dccgbb .Resolve ();
_dabbfe .Set (_bbddb ,_accgc );};if _bbddb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _beaed :=_bgfdce .addObjects (_accgc );_beaed !=nil {return _beaed ;};}else {if _ ,_feffc :=_accgc .(*_ac .PdfObjectNull );_feffc {continue ;};if _fcdca :=_bgfdce .hasObject (_accgc );
!_fcdca {_da .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_accgc ,_accgc ,_accgc );_bgfdce ._bafge [_accgc ]=append (_bgfdce ._bafge [_accgc ],_dabbfe );
};};};return nil ;};if _beacg ,_cfdcb :=_ffccd .(*_ac .PdfObjectArray );_cfdcb {_da .Log .Trace ("\u0041\u0072\u0072a\u0079");_da .Log .Trace ("\u002d\u0020\u0025\u0073",_ffccd );if _beacg ==nil {return _aec .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _dgcabb ,_cgag :=range _beacg .Elements (){if _eegb ,_deceg :=_cgag .(*_ac .PdfObjectReference );_deceg {_cgag =_eegb .Resolve ();_beacg .Set (_dgcabb ,_cgag );};if _cfdge :=_bgfdce .addObjects (_cgag );_cfdge !=nil {return _cfdge ;};};return nil ;
};if _ ,_fedfa :=_ffccd .(*_ac .PdfObjectReference );_fedfa {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_ffccd );
return _aec .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_efagg :=&PdfColorPatternType3 {};return _efagg ;};func (_gdgfc *Image )samplesAddPadding (_cfab []uint32 )[]uint32 {_bdfb :=_cf .BytesPerLine (int (_gdgfc .Width ),int (_gdgfc .BitsPerComponent ),_gdgfc .ColorComponents )*(8/int (_gdgfc .BitsPerComponent ));
_dfbbe :=_bdfb *int (_gdgfc .Height );if len (_cfab )==_dfbbe {return _cfab ;};_dbeeb :=make ([]uint32 ,_dfbbe );_ffddg :=int (_gdgfc .Width )*_gdgfc .ColorComponents ;for _dggff :=0;_dggff < int (_gdgfc .Height );_dggff ++{_dgcad :=_dggff *int (_gdgfc .Width );
_ecgaa :=_dggff *_bdfb ;for _gaaga :=0;_gaaga < _ffddg ;_gaaga ++{_dbeeb [_ecgaa +_gaaga ]=_cfab [_dgcad +_gaaga ];};};return _dbeeb ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_dec :=NewPdfAnnotation ();_cdf :=&PdfAnnotationHighlight {};_cdf .PdfAnnotation =_dec ;_cdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dec .SetContext (_cdf );return _cdf ;};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfActionResetForm )ToPdfObject ()_ac .PdfObject {_ddf .PdfAction .ToPdfObject ();_aaf :=_ddf ._acf ;_bac :=_aaf .PdfObject .(*_ac .PdfObjectDictionary );_bac .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeResetForm )));_bac .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ddf .Fields );
_bac .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ddf .Flags );return _aaf ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bfebe *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_agda :=range pages {_agda =_agda .Duplicate ();_bafdb (_agda );_bfebe ._ega =append (_bfebe ._ega ,_agda );};};func (_dcfe *PdfAnnotation )String ()string {_dca :="";_beg ,_efab :=_dcfe .ToPdfObject ().(*_ac .PdfIndirectObject );
if _efab {_dca =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dcfe ._dbaec ,_beg .PdfObject .String ());};return _dca ;};

// SetViewArea sets the value of the viewArea.
func (_bffbbd *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_bffbbd ._dgbe =viewArea };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eeaga *PdfShadingType2 )ToPdfObject ()_ac .PdfObject {_eeaga .PdfShading .ToPdfObject ();_ccce ,_eacad :=_eeaga .getShadingDict ();if _eacad !=nil {_da .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccce ==nil {_da .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eeaga .Coords !=nil {_ccce .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eeaga .Coords );
};if _eeaga .Domain !=nil {_ccce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eeaga .Domain );};if _eeaga .Function !=nil {if len (_eeaga .Function )==1{_ccce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eeaga .Function [0].ToPdfObject ());
}else {_dgffd :=_ac .MakeArray ();for _ ,_ababdc :=range _eeaga .Function {_dgffd .Append (_ababdc .ToPdfObject ());};_ccce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgffd );};};if _eeaga .Extend !=nil {_ccce .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eeaga .Extend );
};return _eeaga ._affg ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ggca *PdfColorspaceICCBased )ToPdfObject ()_ac .PdfObject {_eddb :=&_ac .PdfObjectArray {};_eddb .Append (_ac .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _adae *_ac .PdfObjectStream ;if _ggca ._dcab !=nil {_adae =_ggca ._dcab ;
}else {_adae =&_ac .PdfObjectStream {};};_acgag :=_ac .MakeDict ();_acgag .Set ("\u004e",_ac .MakeInteger (int64 (_ggca .N )));if _ggca .Alternate !=nil {_acgag .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ggca .Alternate .ToPdfObject ());};if _ggca .Metadata !=nil {_acgag .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ggca .Metadata );
};if _ggca .Range !=nil {var _gbdb []_ac .PdfObject ;for _ ,_aaec :=range _ggca .Range {_gbdb =append (_gbdb ,_ac .MakeFloat (_aaec ));};_acgag .Set ("\u0052\u0061\u006eg\u0065",_ac .MakeArray (_gbdb ...));};_acgag .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ac .MakeInteger (int64 (len (_ggca .Data ))));
_adae .Stream =_ggca .Data ;_adae .PdfObjectDictionary =_acgag ;_eddb .Append (_adae );if _ggca ._gcgbd !=nil {_ggca ._gcgbd .PdfObject =_eddb ;return _ggca ._gcgbd ;};return _eddb ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_agbe []*PdfFont ;CurrentFont *PdfFont ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gfbgg *DSS )ToPdfObject ()_ac .PdfObject {_acefd :=_gfbgg ._feea .PdfObject .(*_ac .PdfObjectDictionary );_acefd .Clear ();_dfbcb :=_ac .MakeDict ();for _ggddc ,_dgcdd :=range _gfbgg .VRI {_dfbcb .Set (*_ac .MakeName (_ggddc ),_dgcdd .ToPdfObject ());
};_acefd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_cfda (_gfbgg .Certs ));_acefd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_cfda (_gfbgg .OCSPs ));_acefd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_cfda (_gfbgg .CRLs ));_acefd .Set ("\u0056\u0052\u0049",_dfbcb );
return _gfbgg ._feea ;};func _egbc (_ccdg _ac .PdfObject )(*PdfColorspaceLab ,error ){_eccgf :=NewPdfColorspaceLab ();if _gbdee ,_cadgb :=_ccdg .(*_ac .PdfIndirectObject );_cadgb {_eccgf ._aecc =_gbdee ;};_ccdg =_ac .TraceToDirectObject (_ccdg );_fgcb ,_cbeb :=_ccdg .(*_ac .PdfObjectArray );
if !_cbeb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fgcb .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_ccdg =_ac .TraceToDirectObject (_fgcb .Get (0));_ddbdc ,_cbeb :=_ccdg .(*_ac .PdfObjectName );if !_cbeb {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_ddbdc !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ccdg =_ac .TraceToDirectObject (_fgcb .Get (1));_ccab ,_cbeb :=_ccdg .(*_ac .PdfObjectDictionary );
if !_cbeb {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_ccdg =_ccab .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_ccdg =_ac .TraceToDirectObject (_ccdg );_fdaf ,_cbeb :=_ccdg .(*_ac .PdfObjectArray );if !_cbeb {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _fdaf .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bgcg ,_gecg :=_fdaf .GetAsFloat64Slice ();if _gecg !=nil {return nil ,_gecg ;};_eccgf .WhitePoint =_bgcg ;_ccdg =_ccab .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ccdg !=nil {_ccdg =_ac .TraceToDirectObject (_ccdg );_fdcb ,_gcce :=_ccdg .(*_ac .PdfObjectArray );
if !_gcce {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _fdcb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_dffee ,_gffe :=_fdcb .GetAsFloat64Slice ();if _gffe !=nil {return nil ,_gffe ;};_eccgf .BlackPoint =_dffee ;};_ccdg =_ccab .Get ("\u0052\u0061\u006eg\u0065");if _ccdg !=nil {_ccdg =_ac .TraceToDirectObject (_ccdg );_ffcdd ,_agdc :=_ccdg .(*_ac .PdfObjectArray );
if !_agdc {_da .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffcdd .Len ()!=4{_da .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_acc ,_gdaa :=_ffcdd .GetAsFloat64Slice ();if _gdaa !=nil {return nil ,_gdaa ;};_eccgf .Range =_acc ;};return _eccgf ,nil ;};

// SetKDict sets the KDict for the KValue.
func (_fffbc *KValue )SetKDict (kDict *KDict ){_fffbc .Clear ();_fffbc ._eeafa =kDict };func (_babg *PdfReader )newPdfAnnotationUnderlineFromDict (_gaf *_ac .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_gegg :=PdfAnnotationUnderline {};_cbed ,_gef :=_babg .newPdfAnnotationMarkupFromDict (_gaf );
if _gef !=nil {return nil ,_gef ;};_gegg .PdfAnnotationMarkup =_cbed ;_gegg .QuadPoints =_gaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gegg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gff *PdfActionRendition )ToPdfObject ()_ac .PdfObject {_gff .PdfAction .ToPdfObject ();_gbe :=_gff ._acf ;_eed :=_gbe .PdfObject .(*_ac .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeRendition )));_eed .SetIfNotNil ("\u0052",_gff .R );
_eed .SetIfNotNil ("\u0041\u004e",_gff .AN );_eed .SetIfNotNil ("\u004f\u0050",_gff .OP );_eed .SetIfNotNil ("\u004a\u0053",_gff .JS );return _gbe ;};func (_cecef *PdfWriter )writeOutlines ()error {if _cecef ._dabba ==nil {return nil ;};_da .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cecef ._dabba );
_afgbab :=_cecef ._dabba .ToPdfObject ();_da .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_afgbab ,_afgbab ,_afgbab );_cecef ._cgebe .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_afgbab );
_aeddg :=_cecef .addObjects (_afgbab );if _aeddg !=nil {return _aeddg ;};return nil ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_bgef *PdfFont )GetCIDToGIDMapObject ()_ac .PdfObject {_egddb ,_fcdeb :=_bgef ._bcae .(*pdfCIDFontType2 );if _fcdeb {return _egddb .CIDToGIDMap ;};return nil ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_ecge :make ([]*KValue ,0),_dbfec :-1}};func (_gddd *PdfWriter )setDocInfo (_gabgfg _ac .PdfObject ){if _gddd .hasObject (_gddd ._bcbcab ){delete (_gddd ._beeeeg ,_gddd ._bcbcab );delete (_gddd ._fbgccg ,_gddd ._bcbcab );
for _ffgae ,_ebeac :=range _gddd ._beggg {if _ebeac ==_gddd ._bcbcab {copy (_gddd ._beggg [_ffgae :],_gddd ._beggg [_ffgae +1:]);_gddd ._beggg [len (_gddd ._beggg )-1]=nil ;_gddd ._beggg =_gddd ._beggg [:len (_gddd ._beggg )-1];break ;};};};_afddc :=_ac .PdfIndirectObject {};
_afddc .PdfObject =_gabgfg ;_gddd ._bcbcab =&_afddc ;_gddd .addObject (&_afddc );};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gedd :=PdfColorCalGray (grayVal );return &_gedd ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_aecd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ggfbc []_cd .TextEncoder ;var _dfgc _cd .CMapEncoder ;if _ebbe :=_aecd .baseFields ()._eceed ;_ebbe !=nil {_dfgc =_cd .NewCMapEncoder ("",nil ,_ebbe );};_bdae :=_aecd .Encoder ();
if _bdae !=nil {switch _aegg :=_bdae .(type ){case _cd .SimpleEncoder :_aebef :=_aegg .BaseName ();if _ ,_aabee :=_acad [_aebef ];_aabee {_ggfbc =append (_ggfbc ,_bdae );};};};if len (_ggfbc )==0{if _aecd .baseFields ()._eceed !=nil {_ggfbc =append (_ggfbc ,_dfgc );
};if _bdae !=nil {_ggfbc =append (_ggfbc ,_bdae );};};var _efgfa _ag .Buffer ;var _dadb int ;for _ ,_eeba :=range data {var _effcd bool ;for _ ,_agedb :=range _ggfbc {if _bafcb :=_agedb .Encode (string (_eeba ));len (_bafcb )> 0{_efgfa .Write (_bafcb );
_effcd =true ;break ;};};if !_effcd {_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_eeba );
_dadb ++;};};if _dadb !=0{_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dadb ,_aecd ,_ggfbc );
};return _efgfa .Bytes (),_dadb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfafd *PdfFieldText )ToPdfObject ()_ac .PdfObject {_bfafd .PdfField .ToPdfObject ();_gfbca :=_bfafd ._fggde ;_gdefb :=_gfbca .PdfObject .(*_ac .PdfObjectDictionary );_gdefb .Set ("\u0046\u0054",_ac .MakeName ("\u0054\u0078"));if _bfafd .DA !=nil {_gdefb .Set ("\u0044\u0041",_bfafd .DA );
};if _bfafd .Q !=nil {_gdefb .Set ("\u0051",_bfafd .Q );};if _bfafd .DS !=nil {_gdefb .Set ("\u0044\u0053",_bfafd .DS );};if _bfafd .RV !=nil {_gdefb .Set ("\u0052\u0056",_bfafd .RV );};if _bfafd .MaxLen !=nil {_gdefb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfafd .MaxLen );
};return _gfbca ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ac .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _ceegb *_ac .PdfIndirectObject ;var _egda *_ac .PdfObjectName ;var _gbdc *_ac .PdfObjectArray ;if _cacg ,_fceb :=obj .(*_ac .PdfIndirectObject );
_fceb {_ceegb =_cacg ;};obj =_ac .TraceToDirectObject (obj );switch _dadg :=obj .(type ){case *_ac .PdfObjectArray :_gbdc =_dadg ;case *_ac .PdfObjectName :_egda =_dadg ;};if _egda !=nil {switch *_egda {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_da .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_egda );return nil ,_baega ;};};if _gbdc !=nil &&_gbdc .Len ()> 0{var _gdgb _ac .PdfObject =_ceegb ;
if _ceegb ==nil {_gdgb =_gbdc ;};if _befa ,_gaac :=_ac .GetName (_gbdc .Get (0));_gaac {switch _befa .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gbdc .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gbdc .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gbdc .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ccbc (_gdgb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gbcc (_gdgb );
case "\u004c\u0061\u0062":return _egbc (_gdgb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bcce (_gdgb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gefb (_gdgb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dbccg (_gdgb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _efbbe (_gdgb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _fggd (_gdgb );default:_da .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_befa );
};};};_da .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_bgdeb *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_geec *PdfSignature ,_bfdee Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_adeee *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_bdagde *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_cdcbg *PdfSignature ,_fecfc Hasher )error ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bffbd *pdfFontSimple )SetEncoder (encoder _cd .TextEncoder ){_bffbd ._cadfa =encoder };

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gedf :=&PdfColorPatternType2 {};return _gedf };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ac .PdfObjectInteger ;BitsPerComponent *_ac .PdfObjectInteger ;VerticesPerRow *_ac .PdfObjectInteger ;Decode *_ac .PdfObjectArray ;Function []PdfFunction ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// SetBoundingBox sets the bounding box in the attribute object.
func (_babbbg *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_babbbg ._dgef =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ccae :=NewPdfAction ();_ce :=&PdfActionGoTo3DView {};_ce .PdfAction =_ccae ;_ccae .SetContext (_ce );return _ce ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gbd :=NewPdfAction ();_bdf :=&PdfActionLaunch {};_bdf .PdfAction =_gbd ;_gbd .SetContext (_bdf );return _bdf ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bcab *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bcab .Alternate ==nil {_da .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bcab .N ==1{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cfec :=NewPdfColorspaceDeviceGray ();return _cfec .ImageToRGB (img );}else if _bcab .N ==3{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _bcab .N ==4{_da .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gadca :=NewPdfColorspaceDeviceCMYK ();return _gadca .ImageToRGB (img );}else {return img ,_aec .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_da .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bcab );
_eecb ,_fgab :=_bcab .Alternate .ImageToRGB (img );_da .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_da .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_eecb );
return _eecb ,_fgab ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aefae DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";
StructureTypeSection ="\u0053\u0065\u0063\u0074";StructureTypeDivision ="\u0044\u0069\u0076";StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";
StructureTypeTOCI ="\u0054\u004f\u0043\u0049";StructureTypeIndex ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ffbcb []byte )(_gefce int ,_bdffe error );};

// SetDecode sets the decode image float slice.
func (_fdebb *Image )SetDecode (decode []float64 ){_fdebb ._bacca =decode };func (_edgbce *PdfWriter )writeObjectsInStreams (_accdcd map[_ac .PdfObject ]bool )error {for _ ,_abgaf :=range _edgbce ._beggg {if _bdbdg :=_accdcd [_abgaf ];_bdbdg {continue ;
};_gcea :=int64 (0);switch _abbad :=_abgaf .(type ){case *_ac .PdfIndirectObject :_gcea =_abbad .ObjectNumber ;case *_ac .PdfObjectStream :_gcea =_abbad .ObjectNumber ;case *_ac .PdfObjectStreams :_gcea =_abbad .ObjectNumber ;case *_ac .PdfObjectDictionary ,*_ac .PdfObjectString :default:_da .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_abgaf ,_abbad );
return ErrTypeCheck ;};if _edgbce ._gefae !=nil &&_abgaf !=_edgbce ._dfecf {_dacb :=_edgbce ._gefae .Encrypt (_abgaf ,_gcea ,0);if _dacb !=nil {_da .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dacb );
return _dacb ;};};_edgbce .writeObject (int (_gcea ),_abgaf );};return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_beafca *PdfReader )PageFromIndirectObject (ind *_ac .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_beafca .PageList )!=len (_beafca ._efgg ){return nil ,0,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bbdfg ,_cbaac :=range _beafca ._efgg {if _cbaac ==ind {return _beafca .PageList [_bbdfg ],_bbdfg +1,nil ;};};return nil ,0,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _abab (_becge *_ac .PdfObjectDictionary )*VRI {_acca ,_ :=_ac .GetString (_becge .Get ("\u0054\u0055"));
_accef ,_ :=_ac .GetString (_becge .Get ("\u0054\u0053"));return &VRI {Cert :_acdgf (_becge .Get ("\u0043\u0065\u0072\u0074")),OCSP :_acdgf (_becge .Get ("\u004f\u0043\u0053\u0050")),CRL :_acdgf (_becge .Get ("\u0043\u0052\u004c")),TU :_acca ,TS :_accef };
};func (_ebaf *PdfAppender )updateObjectsDeep (_cggg _ac .PdfObject ,_dddg map[_ac .PdfObject ]struct{}){if _dddg ==nil {_dddg =map[_ac .PdfObject ]struct{}{};};if _ ,_ageg :=_dddg [_cggg ];_ageg ||_cggg ==nil {return ;};_dddg [_cggg ]=struct{}{};_egeg :=_ac .ResolveReferencesDeep (_cggg ,_ebaf ._ffd );
if _egeg !=nil {_da .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egeg );};switch _egd :=_cggg .(type ){case *_ac .PdfIndirectObject :switch {case _egd .GetParser ()==_ebaf ._badg ._ecebe :return ;case _egd .GetParser ()==_ebaf .Reader ._ecebe :_dgea ,_ :=_ebaf ._badg .GetIndirectObjectByNumber (int (_egd .ObjectNumber ));
_fccd ,_dfaba :=_dgea .(*_ac .PdfIndirectObject );if _dfaba &&_fccd !=nil {_aebf :=string (_egd .PdfObject .Write ());if _fccd .PdfObject !=_egd .PdfObject &&string (_fccd .PdfObject .Write ())!=_aebf {if _fgg .Contains (_aebf ,"\u002f\u0053\u0069\u0067")&&_fgg .Contains (_aebf ,"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_ebaf .addNewObject (_cggg );_ebaf ._dgd [_cggg ]=_egd .ObjectNumber ;};};default:_ebaf .addNewObject (_cggg );};_ebaf .updateObjectsDeep (_egd .PdfObject ,_dddg );case *_ac .PdfObjectArray :for _ ,_bcee :=range _egd .Elements (){_ebaf .updateObjectsDeep (_bcee ,_dddg );
};case *_ac .PdfObjectDictionary :for _ ,_eef :=range _egd .Keys (){_ebaf .updateObjectsDeep (_egd .Get (_eef ),_dddg );};case *_ac .PdfObjectStreams :if _egd .GetParser ()!=_ebaf ._badg ._ecebe {for _ ,_abc :=range _egd .Elements (){_ebaf .updateObjectsDeep (_abc ,_dddg );
};};case *_ac .PdfObjectStream :switch {case _egd .GetParser ()==_ebaf ._badg ._ecebe :return ;case _egd .GetParser ()==_ebaf .Reader ._ecebe :if _adfd ,_dbba :=_ebaf ._badg ._ecebe .LookupByReference (_egd .PdfObjectReference );_dbba ==nil {var _aggeg bool ;
if _gagd ,_gdd :=_ac .GetStream (_adfd );_gdd &&_ag .Equal (_gagd .Stream ,_egd .Stream ){_aggeg =true ;};if _ccgbb ,_dfcf :=_ac .GetDict (_adfd );_aggeg &&_dfcf {_aggeg =string (_ccgbb .Write ())==string (_egd .PdfObjectDictionary .Write ());};if _aggeg {return ;
};};if _egd .ObjectNumber !=0{_ebaf ._dgd [_cggg ]=_egd .ObjectNumber ;};default:if _ ,_dfcd :=_ebaf ._aadba [_cggg ];!_dfcd {_ebaf .addNewObject (_cggg );};};_ebaf .updateObjectsDeep (_egd .PdfObjectDictionary ,_dddg );};};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ac .StreamEncoder ;FormType _ac .PdfObject ;BBox _ac .PdfObject ;Matrix _ac .PdfObject ;Resources *PdfPageResources ;Group _ac .PdfObject ;Ref _ac .PdfObject ;MetaData _ac .PdfObject ;PieceInfo _ac .PdfObject ;LastModified _ac .PdfObject ;
StructParent _ac .PdfObject ;StructParents _ac .PdfObject ;OPI _ac .PdfObject ;OC _ac .PdfObject ;Name _ac .PdfObject ;

// Stream data.
Stream []byte ;_abfbc *_ac .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_aea *PdfAnnotationStrikeOut )ToPdfObject ()_ac .PdfObject {_aea .PdfAnnotation .ToPdfObject ();_bfed :=_aea ._add ;_acaa :=_bfed .PdfObject .(*_ac .PdfObjectDictionary );_aea .PdfAnnotationMarkup .appendToPdfDictionary (_acaa );_acaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_acaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aea .QuadPoints );return _bfed ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// Encrypt encrypts the output file with a specified user/owner password.
func (_afade *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fceee :=RC4_128bit ;if options !=nil {_fceee =options .Algorithm ;};_accab :=_ca .PermOwner ;if options !=nil {_accab =options .Permissions ;};var _dcagf _bc .Filter ;
switch _fceee {case RC4_128bit :_dcagf =_bc .NewFilterV2 (16);case AES_128bit :_dcagf =_bc .NewFilterAESV2 ();case AES_256bit :_dcagf =_bc .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_bgcdb ,_adccc ,_ffccg :=_ac .PdfCryptNewEncrypt (_dcagf ,userPass ,ownerPass ,_accab );if _ffccg !=nil {return _ffccg ;};_afade ._gefae =_bgcdb ;if _adccc .Major !=0{_afade .SetVersion (_adccc .Major ,_adccc .Minor );};_afade ._gdgdbe =_adccc .Encrypt ;
_afade ._edfggf ,_afade ._dgagd =_adccc .ID0 ,_adccc .ID1 ;_cggcc :=_ac .MakeIndirectObject (_adccc .Encrypt );_afade ._dfecf =_cggcc ;_afade .addObject (_cggcc );return nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bfcb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bfcb .Range };var (CourierName =_bd .CourierName ;CourierBoldName =_bd .CourierBoldName ;CourierObliqueName =_bd .CourierObliqueName ;CourierBoldObliqueName =_bd .CourierBoldObliqueName ;
HelveticaName =_bd .HelveticaName ;HelveticaBoldName =_bd .HelveticaBoldName ;HelveticaObliqueName =_bd .HelveticaObliqueName ;HelveticaBoldObliqueName =_bd .HelveticaBoldObliqueName ;SymbolName =_bd .SymbolName ;ZapfDingbatsName =_bd .ZapfDingbatsName ;
TimesRomanName =_bd .TimesRomanName ;TimesBoldName =_bd .TimesBoldName ;TimesItalicName =_bd .TimesItalicName ;TimesBoldItalicName =_bd .TimesBoldItalicName ;);

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_ebefd *Names )ToPdfObject ()_ac .PdfObject {_gbade :=_ebefd ._aedd ;_defdc ,_gdbc :=_gbade .PdfObject .(*_ac .PdfObjectDictionary );if !_gdbc {_da .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");return _gbade ;
};if _ebefd .EmbeddedFiles !=nil {_defdc .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_ac .MakeIndirectObject (_ebefd .EmbeddedFiles ));};return _gbade ;};func NewViewerPreferencesFromPdfObject (obj _ac .PdfObject )(*ViewerPreferences ,error ){_gfegc :=_ac .ResolveReference (obj );
_faddg ,_ecbcc :=_ac .GetDict (_gfegc );if !_ecbcc {return nil ,_e .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dfdcb :=NewViewerPreferences ();if _ebaaa :=_faddg .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_ebaaa !=nil {if _beeee ,_bdged :=_ac .GetBool (_ebaaa );_bdged {_dfdcb ._feafe =(*bool )(_beeee );};};if _eabdc :=_faddg .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_eabdc !=nil {if _dabcg ,_acagc :=_ac .GetBool (_eabdc );_acagc {_dfdcb ._ddeag =(*bool )(_dabcg );};};if _badda :=_faddg .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_badda !=nil {if _ffcga ,_dbbea :=_ac .GetBool (_badda );
_dbbea {_dfdcb ._edeed =(*bool )(_ffcga );};};if _gdcd :=_faddg .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_gdcd !=nil {if _fcccg ,_cecgf :=_ac .GetBool (_gdcd );_cecgf {_dfdcb ._eaafb =(*bool )(_fcccg );};};if _fgbab :=_faddg .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_fgbab !=nil {if _ffba ,_dced :=_ac .GetBool (_fgbab );_dced {_dfdcb ._aggfg =(*bool )(_ffba );};};if _gaaag :=_faddg .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_gaaag !=nil {if _cbfcc ,_ddfcca :=_ac .GetBool (_gaaag );
_ddfcca {_dfdcb ._febfe =(*bool )(_cbfcc );};};if _gcaab :=_faddg .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_gcaab !=nil {if _dbfab ,_fceaa :=_ac .GetName (_gcaab );_fceaa {_dfdcb ._ebfbdg =NonFullScreenPageMode (*_dbfab );
};};if _aafgfg :=_faddg .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_aafgfg !=nil {if _eeebe ,_dfdbgb :=_ac .GetName (_aafgfg );_dfdbgb {_dfdcb ._gfad =Direction (*_eeebe );};};if _faaeaa :=_faddg .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_faaeaa !=nil {if _ebace ,_edgbd :=_ac .GetName (_faaeaa );_edgbd {_dfdcb ._dgbe =PageBoundary (*_ebace );};};if _bbceb :=_faddg .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_bbceb !=nil {if _begaa ,_cadggf :=_ac .GetName (_bbceb );_cadggf {_dfdcb ._cbfge =PageBoundary (*_begaa );
};};if _gecfda :=_faddg .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_gecfda !=nil {if _dffcde ,_efegb :=_ac .GetName (_gecfda );_efegb {_dfdcb ._dafcc =PageBoundary (*_dffcde );};};if _aecacc :=_faddg .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_aecacc !=nil {if _begaga ,_dcgac :=_ac .GetName (_aecacc );_dcgac {_dfdcb ._beafcg =PageBoundary (*_begaga );};};if _cbede :=_faddg .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_cbede !=nil {if _fggbf ,_fdcfc :=_ac .GetName (_cbede );
_fdcfc {_dfdcb ._fdgfg =PrintScaling (*_fggbf );};};if _fddb :=_faddg .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_fddb !=nil {if _deacf ,_gebdd :=_ac .GetName (_fddb );_gebdd {_dfdcb ._dfaa =Duplex (*_deacf );};};if _gcbgb :=_faddg .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_gcbgb !=nil {if _fddge ,_efafb :=_ac .GetBool (_gcbgb );_efafb {_dfdcb ._badgbb =(*bool )(_fddge );};};if _eccdf :=_faddg .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_eccdf !=nil {if _bgfbc ,_afgca :=_ac .GetArray (_eccdf );
_afgca {_dfdcb ._agfb =make ([]int ,_bgfbc .Len ());for _ggag :=range _dfdcb ._agfb {if _gdada :=_bgfbc .Get (_ggag );_gdada !=nil {if _efaab ,_ecafc :=_ac .GetInt (_gdada );_ecafc {_dfdcb ._agfb [_ggag ]=int (*_efaab );};};};};};if _efeda :=_faddg .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_efeda !=nil {if _dbcfe ,_gbaca :=_ac .GetInt (_efeda );_gbaca {_dfdcb ._daaaed =int (*_dbcfe );};};return _dfdcb ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ebcf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fbbaa :=pageNum -1;var _aeca *PdfPage ;for _efac ,_edcg :=range _ebcf ._ega {if _efac ==_fbbaa {_aeca =_edcg ;};};if _aeca ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _aeca ._gbdca !=nil &&_aeca ._gbdca .GetParser ()==_ebcf ._badg ._ecebe {_aeca =_aeca .Duplicate ();_ebcf ._ega [_fbbaa ]=_aeca ;};page =page .Duplicate ();_bafdb (page );_cdde :=_ada (_aeca );_dedd :=_ada (page );_faga :=make (map[_ac .PdfObjectName ]_ac .PdfObjectName );
for _ddcg :=range _dedd {if _ ,_ddda :=_cdde [_ddcg ];_ddda {for _ebad :=1;true ;_ebad ++{_eccf :=_ac .PdfObjectName (string (_ddcg )+_dcb .Itoa (_ebad ));if _ ,_fdfc :=_cdde [_eccf ];!_fdfc {_faga [_ddcg ]=_eccf ;break ;};};};};_becb ,_cdac :=page .GetContentStreams ();
if _cdac !=nil {return _cdac ;};_eab ,_cdac :=_aeca .GetContentStreams ();if _cdac !=nil {return _cdac ;};for _befe ,_effc :=range _becb {for _gagdc ,_faagd :=range _faga {_effc =_fgg .Replace (_effc ,"\u002f"+string (_gagdc ),"\u002f"+string (_faagd ),-1);
};_becb [_befe ]=_effc ;};_eab =append (_eab ,_becb ...);if _bcef :=_aeca .SetContentStreams (_eab ,_ac .NewFlateEncoder ());_bcef !=nil {return _bcef ;};_aeca ._adba =append (_aeca ._adba ,page ._adba ...);if _aeca .Resources ==nil {_aeca .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_aeca .Resources .Font =_ebcf .mergeResources (_aeca .Resources .Font ,page .Resources .Font ,_faga );_aeca .Resources .XObject =_ebcf .mergeResources (_aeca .Resources .XObject ,page .Resources .XObject ,_faga );_aeca .Resources .Properties =_ebcf .mergeResources (_aeca .Resources .Properties ,page .Resources .Properties ,_faga );
if _aeca .Resources .ProcSet ==nil {_aeca .Resources .ProcSet =page .Resources .ProcSet ;};_aeca .Resources .Shading =_ebcf .mergeResources (_aeca .Resources .Shading ,page .Resources .Shading ,_faga );_aeca .Resources .ExtGState =_ebcf .mergeResources (_aeca .Resources .ExtGState ,page .Resources .ExtGState ,_faga );
};_cdbf ,_cdac :=_aeca .GetMediaBox ();if _cdac !=nil {return _cdac ;};_ebeb ,_cdac :=page .GetMediaBox ();if _cdac !=nil {return _cdac ;};var _ccfb bool ;if _cdbf .Llx > _ebeb .Llx {_cdbf .Llx =_ebeb .Llx ;_ccfb =true ;};if _cdbf .Lly > _ebeb .Lly {_cdbf .Lly =_ebeb .Lly ;
_ccfb =true ;};if _cdbf .Urx < _ebeb .Urx {_cdbf .Urx =_ebeb .Urx ;_ccfb =true ;};if _cdbf .Ury < _ebeb .Ury {_cdbf .Ury =_ebeb .Ury ;_ccfb =true ;};if _ccfb {_aeca .MediaBox =_cdbf ;};return nil ;};func (_bdace *PdfReader )newPdfAnnotationFileAttachmentFromDict (_aef *_ac .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_faee :=PdfAnnotationFileAttachment {};
_gec ,_ddd :=_bdace .newPdfAnnotationMarkupFromDict (_aef );if _ddd !=nil {return nil ,_ddd ;};_faee .PdfAnnotationMarkup =_gec ;_faee .FS =_aef .Get ("\u0046\u0053");_faee .Name =_aef .Get ("\u004e\u0061\u006d\u0065");return &_faee ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// AddCustomInfo adds a custom info into document info dictionary.
func (_ccecb *PdfInfo )AddCustomInfo (name string ,value string )error {if _ccecb ._cefe ==nil {_ccecb ._cefe =_ac .MakeDict ();};if _ ,_cdaee :=_befge [name ];_cdaee {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ccecb ._cefe .SetIfNotNil (*_ac .MakeName (name ),_ac .MakeString (value ));return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_efabd pdfCIDFontType0 )GetRuneMetrics (r rune )(_bd .CharMetrics ,bool ){return _bd .CharMetrics {Wx :_efabd ._eafda },true ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fab :=NewPdfAnnotation ();_bee :=&PdfAnnotationFreeText {};_bee .PdfAnnotation =_fab ;_bee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fab .SetContext (_bee );return _bee ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_facda *PdfAcroForm )GetContainingPdfObject ()_ac .PdfObject {return _facda ._fccb };

// ToPdfObject implements interface PdfModel.
func (_efdf *PdfAnnotationPrinterMark )ToPdfObject ()_ac .PdfObject {_efdf .PdfAnnotation .ToPdfObject ();_decb :=_efdf ._add ;_caaag :=_decb .PdfObject .(*_ac .PdfObjectDictionary );_caaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_caaag .SetIfNotNil ("\u004d\u004e",_efdf .MN );return _decb ;};

// ToPdfObject implements interface PdfModel.
func (_fbba *PdfAnnotationTrapNet )ToPdfObject ()_ac .PdfObject {_fbba .PdfAnnotation .ToPdfObject ();_cabf :=_fbba ._add ;_bfgd :=_cabf .PdfObject .(*_ac .PdfObjectDictionary );_bfgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cabf ;};

// Items returns all children outline items.
func (_ecbgg *OutlineItem )Items ()[]*OutlineItem {return _ecbgg .Entries };

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gdcbg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gbda ,_ggfge :=_ac .GetDict (_gdcbg ._cgebe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ggfge {_gbda =_ac .MakeDict ();_gdcbg ._cgebe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gbda );
};_cfcb ,_ggfge :=_ac .GetDict (_gbda .Get (_ac .PdfObjectName (extName )));if !_ggfge {_cfcb =_ac .MakeDict ();_gbda .Set (_ac .PdfObjectName (extName ),_cfcb );};if _geedg ,_ :=_ac .GetNameVal (_cfcb .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_geedg !=baseVersion {_cfcb .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ac .MakeName (baseVersion ));};if _gacgb ,_ :=_ac .GetIntVal (_cfcb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gacgb !=extLevel {_cfcb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ac .MakeInteger (int64 (extLevel )));};};func _acdgf (_bafcc _ac .PdfObject )[]*_ac .PdfObjectStream {if _bafcc ==nil {return nil ;};_gcaba ,_ecbaa :=_ac .GetArray (_bafcc );
if !_ecbaa ||_gcaba .Len ()==0{return nil ;};_geddf :=make ([]*_ac .PdfObjectStream ,0,_gcaba .Len ());for _ ,_cfegb :=range _gcaba .Elements (){if _eaefe ,_eaac :=_ac .GetStream (_cfegb );_eaac {_geddf =append (_geddf ,_eaefe );};};return _geddf ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ac .PdfObject ;GetContainingPdfObject ()_ac .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bdega *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfedf :=vals [0];if _bfedf < 0.0||_bfedf > 1.0{_da .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _bfedf < 0.0{_bfedf =0.0;}else if _bfedf > 1.0{_bfedf =1.0;};return NewPdfColorDeviceGray (_bfedf ),nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cdagg []byte ;_cgada []uint32 ;_bagbf *_ac .PdfObjectStream ;};func (_eage *Image )resampleLowBits (_dffbe []uint32 ){_feafc :=_cf .BytesPerLine (int (_eage .Width ),int (_eage .BitsPerComponent ),_eage .ColorComponents );
_gbcdfb :=make ([]byte ,_eage .ColorComponents *_feafc *int (_eage .Height ));_deebg :=int (_eage .BitsPerComponent )*_eage .ColorComponents *int (_eage .Width );_gdggb :=uint8 (8);var (_fggdf ,_bdgdf int ;_cbfec uint32 ;);for _gdgcd :=0;_gdgcd < int (_eage .Height );
_gdgcd ++{_bdgdf =_gdgcd *_feafc ;for _ecfg :=0;_ecfg < _deebg ;_ecfg ++{_cbfec =_dffbe [_fggdf ];_gdggb -=uint8 (_eage .BitsPerComponent );_gbcdfb [_bdgdf ]|=byte (_cbfec )<<_gdggb ;if _gdggb ==0{_gdggb =8;_bdgdf ++;};_fggdf ++;};};_eage .Data =_gbcdfb ;
};

// Encoder returns the font's text encoder.
func (_dgacc pdfCIDFontType0 )Encoder ()_cd .TextEncoder {return _dgacc ._cade };

// AddRefChild adds a child reference object.
func (_eefg *KDict )AddRefChild (kChild *_ac .PdfObjectDictionary ){_eefg ._ecge =append (_eefg ._ecge ,&KValue {_ebfa :kChild });};func _gabbg (_baadc *_ac .PdfObjectDictionary )(*PdfShadingType7 ,error ){_afafd :=PdfShadingType7 {};_bbfag :=_baadc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bbfag ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddgef ,_dggg :=_bbfag .(*_ac .PdfObjectInteger );if !_dggg {_da .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbfag );
return nil ,_ac .ErrTypeError ;};_afafd .BitsPerCoordinate =_ddgef ;_bbfag =_baadc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bbfag ==nil {_da .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddgef ,_dggg =_bbfag .(*_ac .PdfObjectInteger );if !_dggg {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bbfag );
return nil ,_ac .ErrTypeError ;};_afafd .BitsPerComponent =_ddgef ;_bbfag =_baadc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bbfag ==nil {_da .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddgef ,_dggg =_bbfag .(*_ac .PdfObjectInteger );if !_dggg {_da .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bbfag );
return nil ,_ac .ErrTypeError ;};_afafd .BitsPerComponent =_ddgef ;_bbfag =_baadc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bbfag ==nil {_da .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgggd ,_dggg :=_bbfag .(*_ac .PdfObjectArray );if !_dggg {_da .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbfag );
return nil ,_ac .ErrTypeError ;};_afafd .Decode =_fgggd ;if _ddfga :=_baadc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ddfga !=nil {_afafd .Function =[]PdfFunction {};if _acagbf ,_ccbfe :=_ddfga .(*_ac .PdfObjectArray );_ccbfe {for _ ,_ddgeb :=range _acagbf .Elements (){_degbb ,_bfdec :=_fdfgf (_ddgeb );
if _bfdec !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfdec );return nil ,_bfdec ;};_afafd .Function =append (_afafd .Function ,_degbb );
};}else {_dbafc ,_caddd :=_fdfgf (_ddfga );if _caddd !=nil {_da .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caddd );return nil ,_caddd ;
};_afafd .Function =append (_afafd .Function ,_dbafc );};};return &_afafd ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_geg *PdfAnnotation )GetContext ()PdfModel {if _geg ==nil {return nil ;};return _geg ._dbaec ;};

// ToPdfObject implements interface PdfModel.
func (_acdedg *PdfSignatureReference )ToPdfObject ()_ac .PdfObject {_ccbg :=_ac .MakeDict ();_ccbg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_acdedg .Type );_ccbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_acdedg .TransformMethod );
_ccbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_acdedg .TransformParams );_ccbg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_acdedg .Data );_ccbg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_acdedg .DigestMethod );
return _ccbg ;};type fontCommon struct{_cfca string ;_bacd string ;_ageda string ;_baagf _ac .PdfObject ;_eceed *_adg .CMap ;_gdgc *PdfFontDescriptor ;_eacb int64 ;};func _edce (_gaba _ac .PdfObject )(*PdfFunctionType3 ,error ){_ggcg :=&PdfFunctionType3 {};
var _bgebd *_ac .PdfObjectDictionary ;if _cegfg ,_gbecf :=_gaba .(*_ac .PdfIndirectObject );_gbecf {_cbfag ,_deef :=_cegfg .PdfObject .(*_ac .PdfObjectDictionary );if !_deef {return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggcg ._feeeb =_cegfg ;_bgebd =_cbfag ;}else if _adaf ,_ffadb :=_gaba .(*_ac .PdfObjectDictionary );_ffadb {_bgebd =_adaf ;}else {return nil ,_aec .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgbe ,_edbg :=_ac .TraceToDirectObject (_bgebd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ac .PdfObjectArray );
if !_edbg {_da .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cgbe .Len ()!=2{_da .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_aec .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ccged ,_dccfe :=_cgbe .ToFloat64Array ();
if _dccfe !=nil {return nil ,_dccfe ;};_ggcg .Domain =_ccged ;_cgbe ,_edbg =_ac .TraceToDirectObject (_bgebd .Get ("\u0052\u0061\u006eg\u0065")).(*_ac .PdfObjectArray );if _edbg {if _cgbe .Len ()< 0||_cgbe .Len ()%2!=0{return nil ,_aec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gcgc ,_defe :=_cgbe .ToFloat64Array ();if _defe !=nil {return nil ,_defe ;};_ggcg .Range =_gcgc ;};_cgbe ,_edbg =_ac .TraceToDirectObject (_bgebd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ac .PdfObjectArray );if !_edbg {_da .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggcg .Functions =[]PdfFunction {};
for _ ,_fadbe :=range _cgbe .Elements (){_fdddd ,_gbddf :=_fdfgf (_fadbe );if _gbddf !=nil {return nil ,_gbddf ;};_ggcg .Functions =append (_ggcg .Functions ,_fdddd );};_cgbe ,_edbg =_ac .TraceToDirectObject (_bgebd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ac .PdfObjectArray );
if !_edbg {_da .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_ccbcg ,_dccfe :=_cgbe .ToFloat64Array ();if _dccfe !=nil {return nil ,_dccfe ;};_ggcg .Bounds =_ccbcg ;if len (_ggcg .Bounds )!=len (_ggcg .Functions )-1{_da .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ggcg .Bounds ),len (_ggcg .Functions ));
return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbe ,_edbg =_ac .TraceToDirectObject (_bgebd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ac .PdfObjectArray );if !_edbg {_da .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_aec .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bebe ,_dccfe :=_cgbe .ToFloat64Array ();
if _dccfe !=nil {return nil ,_dccfe ;};_ggcg .Encode =_bebe ;if len (_ggcg .Encode )!=2*len (_ggcg .Functions ){_da .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ggcg .Encode ),len (_ggcg .Functions ));
return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ggcg ,nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_egaae *_ac .PdfObjectDictionary ;Type *_ac .PdfObjectName ;TransformMethod *_ac .PdfObjectName ;TransformParams _ac .PdfObject ;Data _ac .PdfObject ;DigestMethod *_ac .PdfObjectName ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ac .PdfObject ;Open _ac .PdfObject ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_dfabc *KValue )ToPdfObject ()_ac .PdfObject {if _dfabc ._eeafa !=nil {return _ac .MakeIndirectObject (_dfabc ._eeafa .ToPdfObject ());};if _dfabc ._ebfa !=nil {return _dfabc ._ebfa ;};if _dfabc ._acbde !=nil {return _ac .MakeInteger (int64 (*_dfabc ._acbde ));
};return nil ;};func (_cfced *PdfWriter )hasObject (_faba _ac .PdfObject )bool {_ ,_ecgag :=_cfced ._beeeeg [_faba ];return _ecgag ;};

// String returns a string describing the font descriptor.
func (_cbedg *PdfFontDescriptor )String ()string {var _dbbf []string ;if _cbedg .FontName !=nil {_dbbf =append (_dbbf ,_cbedg .FontName .String ());};if _cbedg .FontFamily !=nil {_dbbf =append (_dbbf ,_cbedg .FontFamily .String ());};if _cbedg .fontFile !=nil {_dbbf =append (_dbbf ,_cbedg .fontFile .String ());
};if _cbedg ._caega !=nil {_dbbf =append (_dbbf ,_cbedg ._caega .String ());};_dbbf =append (_dbbf ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cbedg .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fgg .Join (_dbbf ,"\u002c\u0020"));
};func _fggd (_babcf _ac .PdfObject )(*PdfColorspaceDeviceN ,error ){_dfefaf :=NewPdfColorspaceDeviceN ();if _gebgd ,_baea :=_babcf .(*_ac .PdfIndirectObject );_baea {_dfefaf ._cceac =_gebgd ;};_babcf =_ac .TraceToDirectObject (_babcf );_afef ,_dgab :=_babcf .(*_ac .PdfObjectArray );
if !_dgab {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _afef .Len ()!=4&&_afef .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_babcf =_afef .Get (0);_bccfa ,_dgab :=_babcf .(*_ac .PdfObjectName );if !_dgab {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bccfa !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_babcf =_afef .Get (1);
_babcf =_ac .TraceToDirectObject (_babcf );_abd ,_dgab :=_babcf .(*_ac .PdfObjectArray );if !_dgab {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_dfefaf .ColorantNames =_abd ;_babcf =_afef .Get (2);_egged ,_fgf :=NewPdfColorspaceFromPdfObject (_babcf );if _fgf !=nil {return nil ,_fgf ;};_dfefaf .AlternateSpace =_egged ;_gfbc ,_fgf :=_fdfgf (_afef .Get (3));if _fgf !=nil {return nil ,_fgf ;};_dfefaf .TintTransform =_gfbc ;
if _afef .Len ()==5{_cbdb ,_aceca :=_faeeg (_afef .Get (4));if _aceca !=nil {return nil ,_aceca ;};_dfefaf .Attributes =_cbdb ;};return _dfefaf ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ac .PdfObject ;T _ac .PdfObject ;Operation _ac .PdfObject ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_dcgce *XObjectForm )GetContainingPdfObject ()_ac .PdfObject {return _dcgce ._abfbc };func (_dac *PdfReader )newPdfAnnotationCaretFromDict (_cdc *_ac .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_agb :=PdfAnnotationCaret {};_caef ,_acdf :=_dac .newPdfAnnotationMarkupFromDict (_cdc );
if _acdf !=nil {return nil ,_acdf ;};_agb .PdfAnnotationMarkup =_caef ;_agb .RD =_cdc .Get ("\u0052\u0044");_agb .Sy =_cdc .Get ("\u0053\u0079");return &_agb ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dbaec PdfModel ;Rect _ac .PdfObject ;Contents _ac .PdfObject ;P _ac .PdfObject ;NM _ac .PdfObject ;M _ac .PdfObject ;F _ac .PdfObject ;AP _ac .PdfObject ;AS _ac .PdfObject ;Border _ac .PdfObject ;C _ac .PdfObject ;StructParent _ac .PdfObject ;
OC _ac .PdfObject ;_add *_ac .PdfIndirectObject ;};func _gfge (_edcc *_ac .PdfObjectDictionary )(*PdfFieldButton ,error ){_gefa :=&PdfFieldButton {};_gefa .PdfField =NewPdfField ();_gefa .PdfField .SetContext (_gefa );_gefa .Opt ,_ =_ac .GetArray (_edcc .Get ("\u004f\u0070\u0074"));
_cdega :=NewPdfAnnotationWidget ();_cdega .A ,_ =_ac .GetDict (_edcc .Get ("\u0041"));_cdega .AP ,_ =_ac .GetDict (_edcc .Get ("\u0041\u0050"));_cdega .SetContext (_gefa );_gefa .PdfField .Annotations =append (_gefa .PdfField .Annotations ,_cdega );return _gefa ,nil ;
};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_faedc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_aga *PdfReader )newPdfActionNamedFromDict (_beda *_ac .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_beda .Get ("\u004e")},nil ;
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dgce *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_baded *PdfOutline )ToPdfObject ()_ac .PdfObject {_fddg :=_baded ._baedd ;_aabeg :=_fddg .PdfObject .(*_ac .PdfObjectDictionary );_aabeg .Set ("\u0054\u0079\u0070\u0065",_ac .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _baded .First !=nil {_aabeg .Set ("\u0046\u0069\u0072s\u0074",_baded .First .ToPdfObject ());
};if _baded .Last !=nil {_aabeg .Set ("\u004c\u0061\u0073\u0074",_baded .Last .GetContext ().GetContainingPdfObject ());};if _baded .Parent !=nil {_aabeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_baded .Parent .GetContext ().GetContainingPdfObject ());
};if _baded .Count !=nil {_aabeg .Set ("\u0043\u006f\u0075n\u0074",_ac .MakeInteger (*_baded .Count ));};return _fddg ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_abbee *PdfPageResources )HasPatternByName (keyName _ac .PdfObjectName )bool {_ ,_dcfca :=_abbee .GetPatternByName (keyName );return _dcfca ;};

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_feafe *bool ;_ddeag *bool ;_edeed *bool ;_eaafb *bool ;_aggfg *bool ;_febfe *bool ;_ebfbdg NonFullScreenPageMode ;_gfad Direction ;_dgbe PageBoundary ;_cbfge PageBoundary ;_dafcc PageBoundary ;_beafcg PageBoundary ;_fdgfg PrintScaling ;
_dfaa Duplex ;_badgbb *bool ;_agfb []int ;_daaaed int ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_bdefb *PdfWriter )SetRotation (rotate int64 )error {_afege ,_accb :=_ac .GetDict (_bdefb ._cafdf );if !_accb {return ErrTypeCheck ;};_afege .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ac .MakeInteger (rotate ));return nil ;};

// AddCerts adds certificates to DSS.
func (_fgeb *DSS )AddCerts (certs [][]byte )([]*_ac .PdfObjectStream ,error ){return _fgeb .add (&_fgeb .Certs ,_fgeb ._gfa ,certs );};

// ToPdfObject implements interface PdfModel.
func (_eaccb *PdfTransformParamsDocMDP )ToPdfObject ()_ac .PdfObject {_dagd :=_ac .MakeDict ();_dagd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eaccb .Type );_dagd .SetIfNotNil ("\u0056",_eaccb .V );_dagd .SetIfNotNil ("\u0050",_eaccb .P );return _dagd ;
};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_bcg *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_fbgcdf *XObjectImage )SetFilter (encoder _ac .StreamEncoder )error {_eegfg :=_fbgcdf .Stream ;_dbffa ,_cegbd :=_fbgcdf .Filter .DecodeBytes (_eegfg );if _cegbd !=nil {return _cegbd ;};_fbgcdf .Filter =encoder ;encoder .UpdateParams (_fbgcdf .getParamsDict ());
_eegfg ,_cegbd =encoder .EncodeBytes (_dbffa );if _cegbd !=nil {return _cegbd ;};_fbgcdf .Stream =_eegfg ;return nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gaddd *PdfReader )GetOCProperties ()(_ac .PdfObject ,error ){_efba :=_gaddd ._dfae ;_ddcgeg :=_efba .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ddcgeg =_ac .ResolveReference (_ddcgeg );if !_gaddd ._bacfb {_faec :=_gaddd .traverseObjectData (_ddcgeg );
if _faec !=nil {return nil ,_faec ;};};return _ddcgeg ,nil ;};func _cdbgd (_dccfbd *XObjectImage )error {if _dccfbd .SMask ==nil {return nil ;};_ecded ,_cgdaf :=_dccfbd .SMask .(*_ac .PdfObjectStream );if !_cgdaf {_da .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _ac .ErrTypeError ;};_badf :=_ecded .PdfObjectDictionary ;_bfecb :=_badf .Get ("\u004d\u0061\u0074t\u0065");if _bfecb ==nil {return nil ;};_agccb ,_ebbc :=_eedee (_bfecb .(*_ac .PdfObjectArray ));if _ebbc !=nil {return _ebbc ;};_bbagf :=_ac .MakeArrayFromFloats ([]float64 {_agccb });
_badf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bbagf );return nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_dbfb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dbfb ._adba ==nil {_dbfb .GetAnnotations ();};_dbfb ._adba =append (_dbfb ._adba ,annot );};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_eadb *BorderStyle )GetPdfName ()string {switch *_eadb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fggb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ac .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_aec .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfgc ,_cage :=_ac .GetNumbersAsFloat (objects );
if _cage !=nil {return nil ,_cage ;};return _fggb .ColorFromFloats (_bfgc );};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_eceb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ac .GetNumberAsFloat (_eceb .CapHeight );};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";
StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";
StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";StructureTypeTableHeaderCell ="\u0054\u0048";StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";
StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);func (_deff *PdfReader )lookupPageByObject (_dafde _ac .PdfObject )(*PdfPage ,error ){return nil ,_aec .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_eeb *PdfActionJavaScript )ToPdfObject ()_ac .PdfObject {_eeb .PdfAction .ToPdfObject ();_bba :=_eeb ._acf ;_ceae :=_bba .PdfObject .(*_ac .PdfObjectDictionary );_ceae .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeJavaScript )));_ceae .SetIfNotNil ("\u004a\u0053",_eeb .JS );
return _bba ;};

// SetAlpha sets the alpha layer for the image.
func (_bfeab *Image )SetAlpha (alpha []byte ){_bfeab ._geag =alpha };

// ToPdfObject implements interface PdfModel.
func (_ceda *PdfAnnotationSquiggly )ToPdfObject ()_ac .PdfObject {_ceda .PdfAnnotation .ToPdfObject ();_dbac :=_ceda ._add ;_gecf :=_dbac .PdfObject .(*_ac .PdfObjectDictionary );_ceda .PdfAnnotationMarkup .appendToPdfDictionary (_gecf );_gecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ac .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_gecf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ceda .QuadPoints );return _dbac ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_cefcb *PdfPageResources )GetXObjectFormByName (keyName _ac .PdfObjectName )(*XObjectForm ,error ){_egecf ,_gfeb :=_cefcb .GetXObjectByName (keyName );if _egecf ==nil {return nil ,nil ;};if _gfeb !=XObjectTypeForm {return nil ,_aec .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bffbb ,_bfac :=NewXObjectFormFromStream (_egecf );if _bfac !=nil {return nil ,_bfac ;};return _bffbb ,nil ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_dcfae *ViewerPreferences )IsCenterWindow ()bool {if _dcfae ._aggfg ==nil {return false ;};return *_dcfae ._aggfg ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ac .PdfObject ;Q _ac .PdfObject ;RC _ac .PdfObject ;DS _ac .PdfObject ;CL _ac .PdfObject ;IT _ac .PdfObject ;BE _ac .PdfObject ;RD _ac .PdfObject ;BS _ac .PdfObject ;LE _ac .PdfObject ;
};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ac .PdfObject ;ColorSpace _ac .PdfObject ;Pattern _ac .PdfObject ;Shading _ac .PdfObject ;XObject _ac .PdfObject ;Font _ac .PdfObject ;ProcSet _ac .PdfObject ;Properties _ac .PdfObject ;_edbdg *_ac .PdfObjectDictionary ;
_cfgc *PdfPageResourcesColorspaces ;};func _dgdcbg (_fdecfc _ac .PdfObject )*IDTree {_fdecfc =_ac .ResolveReference (_fdecfc );_dfcec :=_ac .MakeArray ();_aecba :=_ac .MakeArray ();_cccc :=[]*IDTree {};if _dcbgg ,_abdae :=_ac .GetDict (_fdecfc );_abdae {if _effdc :=_dcbgg .Get ("\u004e\u0061\u006de\u0073");
_effdc !=nil {_effdc =_ac .ResolveReference (_effdc );if _egaec ,_cdbaa :=_ac .GetArray (_effdc );_cdbaa {for _ ,_ccdc :=range _egaec .Elements (){_dfcec .Append (_ccdc );};};};if _gdeeg :=_dcbgg .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_gdeeg !=nil {_gdeeg =_ac .ResolveReference (_gdeeg );
if _cbbee ,_facdea :=_ac .GetArray (_gdeeg );_facdea {for _bbaf :=0;_bbaf < 2;_bbaf ++{_aecba .Append (_cbbee .Get (_bbaf ));};};};if _fegeb :=_dcbgg .Get ("\u004b\u0069\u0064\u0073");_fegeb !=nil {_fegeb =_ac .ResolveReference (_fegeb );if _fgafg ,_gdfce :=_ac .GetArray (_fegeb );
_gdfce {for _ ,_ebbba :=range _fgafg .Elements (){_decfcf :=_dgdcbg (_ebbba );_cccc =append (_cccc ,_decfcf );};};};};_caaaa :=&IDTree {Names :_dfcec ,Limits :_aecba };if len (_cccc )> 0{_caaaa .Kids =_cccc ;};return _caaaa ;};

// ToPdfObject implements interface PdfModel.
func (_cda *PdfActionSetOCGState )ToPdfObject ()_ac .PdfObject {_cda .PdfAction .ToPdfObject ();_de :=_cda ._acf ;_aac :=_de .PdfObject .(*_ac .PdfObjectDictionary );_aac .SetIfNotNil ("\u0053",_ac .MakeName (string (ActionTypeSetOCGState )));_aac .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cda .State );
_aac .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cda .PreserveRB );return _de ;};