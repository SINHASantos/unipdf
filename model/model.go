//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_f "bufio";_cb "bytes";_gg "crypto/md5";_fa "crypto/rand";_be "crypto/sha1";_fgg "crypto/x509";_ff "encoding/binary";_ad "encoding/hex";_dc "errors";_c "fmt";_eb "github.com/gabriel-vasile/mimetype";_gbb "github.com/unidoc/freetype";
_ed "github.com/unidoc/freetype/truetype";_gga "github.com/unidoc/pkcs7";_ca "github.com/unidoc/unipdf/v4/common";_ea "github.com/unidoc/unipdf/v4/core";_cag "github.com/unidoc/unipdf/v4/core/security";_cbg "github.com/unidoc/unipdf/v4/core/security/crypt";
_cge "github.com/unidoc/unipdf/v4/internal/cmap";_dcc "github.com/unidoc/unipdf/v4/internal/imageutil";_cda "github.com/unidoc/unipdf/v4/internal/license";_af "github.com/unidoc/unipdf/v4/internal/sampling";_ge "github.com/unidoc/unipdf/v4/internal/textencoding";
_gce "github.com/unidoc/unipdf/v4/internal/timeutils";_ged "github.com/unidoc/unipdf/v4/internal/transform";_ebb "github.com/unidoc/unipdf/v4/internal/uuid";_cg "github.com/unidoc/unipdf/v4/model/internal/docutil";_gf "github.com/unidoc/unipdf/v4/model/internal/fonts";
_ege "github.com/unidoc/unipdf/v4/model/mdp";_ec "github.com/unidoc/unipdf/v4/model/sigutil";_gc "github.com/unidoc/unipdf/v4/ps";_eg "github.com/unidoc/unitype";_cdb "golang.org/x/image/font";_cf "golang.org/x/xerrors";_e "hash";_ba "image";_bb "image/color";
_g "image/draw";_ "image/gif";_ee "image/png";_cde "io";_dgf "math";_ae "math/rand";_abg "os";_gb "path/filepath";_dg "regexp";_cd "sort";_ab "strconv";_dgb "strings";_d "sync";_fg "time";_a "unicode";_cc "unicode/utf8";);

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_edfef *_ea .PdfIndirectObject ;};func (_bdgge *PdfReader )newPdfAnnotationUnderlineFromDict (_eeg *_ea .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_gfdf :=PdfAnnotationUnderline {};
_ageg ,_eef :=_bdgge .newPdfAnnotationMarkupFromDict (_eeg );if _eef !=nil {return nil ,_eef ;};_gfdf .PdfAnnotationMarkup =_ageg ;_gfdf .QuadPoints =_eeg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfdf ,nil ;};func (_bcab *Image )getSuitableEncoder ()(_ea .StreamEncoder ,error ){var (_gfeed ,_ecge =int (_bcab .Width ),int (_bcab .Height );
_bfbdf =make (map[string ]bool );_dbaee =true ;_gbagfd =false ;_fdfcd =func ()*_ea .DCTEncoder {return _ea .NewDCTEncoder ()};_fgea =func ()*_ea .DCTEncoder {_gggc :=_ea .NewDCTEncoder ();_gggc .BitsPerComponent =16;return _gggc };);for _ddfa :=0;_ddfa < _ecge ;
_ddfa ++{for _cabge :=0;_cabge < _gfeed ;_cabge ++{_afbdg ,_acecb :=_bcab .ColorAt (_cabge ,_ddfa );if _acecb !=nil {return nil ,_acecb ;};_cfag ,_dgaec ,_bggga ,_ccgaf :=_afbdg .RGBA ();if _dbaee &&(_cfag !=_dgaec ||_cfag !=_bggga ||_dgaec !=_bggga ){_dbaee =false ;
};if !_gbagfd {switch _afbdg .(type ){case _bb .NRGBA :_gbagfd =_ccgaf > 0;};};_bfbdf [_c .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_cfag ,_dgaec ,_bggga )]=true ;if len (_bfbdf )> 2&&_gbagfd {return _fgea (),nil ;};};};if _gbagfd ||len (_bcab ._abgae )> 0{return _ea .NewFlateEncoder (),nil ;
};if len (_bfbdf )<=2{_ddfd :=_bcab .ConvertToBinary ();if _ddfd !=nil {return nil ,_ddfd ;};return _ea .NewJBIG2Encoder (),nil ;};if _dbaee {return _fdfcd (),nil ;};if _bcab .ColorComponents ==1{if _bcab .BitsPerComponent ==1{return _ea .NewJBIG2Encoder (),nil ;
}else if _bcab .BitsPerComponent ==8{_feddc :=_ea .NewDCTEncoder ();_feddc .ColorComponents =1;return _feddc ,nil ;};}else if _bcab .ColorComponents ==3{if _bcab .BitsPerComponent ==8{return _fdfcd (),nil ;}else if _bcab .BitsPerComponent ==16{return _fgea (),nil ;
};}else if _bcab .ColorComponents ==4{_gbcfb :=_fgea ();_gbcfb .ColorComponents =4;return _gbcfb ,nil ;};return _fgea (),nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bdffb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ea .GetNumberAsFloat (_bdffb .Descent );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ea .PdfObject ;NewWindow _ea .PdfObject ;T _ea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ecf *PdfActionJavaScript )ToPdfObject ()_ea .PdfObject {_ecf .PdfAction .ToPdfObject ();_geg :=_ecf ._fgc ;_ggad :=_geg .PdfObject .(*_ea .PdfObjectDictionary );_ggad .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeJavaScript )));_ggad .SetIfNotNil ("\u004a\u0053",_ecf .JS );
return _geg ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_adag *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbdg ,_abgdd :=color .(*PdfColorDeviceGray );if !_abgdd {_ca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cbdg ),float64 (*_cbdg ),float64 (*_cbdg )),nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bbbcd *modelManager )GetModelFromPrimitive (primitive _ea .PdfObject )PdfModel {_bbbcd ._afaa .RLock ();defer _bbbcd ._afaa .RUnlock ();model ,_bacc :=_bbbcd ._eeadb [primitive ];if !_bacc {return nil ;};return model ;};func (_febba *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ggba *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ggba .Alternate ==nil {_ca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ggba .N ==1{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_gecg :=NewPdfColorspaceDeviceGray ();return _gecg .ColorToRGB (color );}else if _ggba .N ==3{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ggba .N ==4{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gcaf :=NewPdfColorspaceDeviceCMYK ();return _gcaf .ColorToRGB (color );}else {return nil ,_dc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ggba );
return _ggba .Alternate .ColorToRGB (color );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cgcef *PdfFieldChoice )ToPdfObject ()_ea .PdfObject {_cgcef .PdfField .ToPdfObject ();_gdcc :=_cgcef ._gegceb ;_gggbf :=_gdcc .PdfObject .(*_ea .PdfObjectDictionary );_gggbf .Set ("\u0046\u0054",_ea .MakeName ("\u0043\u0068"));if _cgcef .Opt !=nil {_gggbf .Set ("\u004f\u0070\u0074",_cgcef .Opt );
};if _cgcef .TI !=nil {_gggbf .Set ("\u0054\u0049",_cgcef .TI );};if _cgcef .I !=nil {_gggbf .Set ("\u0049",_cgcef .I );};return _gdcc ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_bgcgda *PdfPage )AddExtGState (name _ea .PdfObjectName ,egs *_ea .PdfObjectDictionary )error {if _bgcgda .Resources ==nil {_bgcgda .Resources =NewPdfPageResources ();};if _bgcgda .Resources .ExtGState ==nil {_bgcgda .Resources .ExtGState =_ea .MakeDict ();
};_egdgb ,_eeab :=_ea .TraceToDirectObject (_bgcgda .Resources .ExtGState ).(*_ea .PdfObjectDictionary );if !_eeab {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ea .TraceToDirectObject (_bgcgda .Resources .ExtGState ));
return _dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egdgb .Set (name ,egs );return nil ;};func (_fgfcb *LTV )enable (_acea ,_fadee []*_fgg .Certificate ,_bddef string )error {_gdcbg ,_deceg ,_gfdecb :=_fgfcb .buildCertChain (_acea ,_fadee );
if _gfdecb !=nil {return _gfdecb ;};_afac ,_gfdecb :=_fgfcb .getCerts (_gdcbg );if _gfdecb !=nil {return _gfdecb ;};var _afgdg ,_cafef [][]byte ;if _fgfcb .OCSPClient !=nil {_afgdg ,_gfdecb =_fgfcb .getOCSPs (_gdcbg ,_deceg );if _gfdecb !=nil {return _gfdecb ;
};};if _fgfcb .CRLClient !=nil {_cafef ,_gfdecb =_fgfcb .getCRLs (_gdcbg );if _gfdecb !=nil {return _gfdecb ;};};_adacd :=_fgfcb ._befaa ;_adegd ,_gfdecb :=_adacd .AddCerts (_afac );if _gfdecb !=nil {return _gfdecb ;};_debe ,_gfdecb :=_adacd .AddOCSPs (_afgdg );
if _gfdecb !=nil {return _gfdecb ;};_aagfbg ,_gfdecb :=_adacd .AddCRLs (_cafef );if _gfdecb !=nil {return _gfdecb ;};if _bddef !=""{_adacd .VRI [_bddef ]=&VRI {Cert :_adegd ,OCSP :_debe ,CRL :_aagfbg };};_fgfcb ._fgcff .SetDSS (_adacd );return nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_dacag :=&PdfShadingPatternType2 {};_dacag .Matrix =_ea .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_dacag .PdfPattern =&PdfPattern {};_dacag .PdfPattern .PatternType =int64 (*_ea .MakeInteger (2));
_dacag .PdfPattern ._egfdg =_dacag ;_dacag .PdfPattern ._bedae =_ea .MakeIndirectObject (_ea .MakeDict ());return _dacag ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_agcaf FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_agcaf .Mask ()|fl .Mask ())};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dcgec .Lock ();defer _dcgec .Unlock ();_dgcabg =producer };

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gfdcb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fagcf ,_fae :=color .(*PdfColorCalRGB );if !_fae {_ca .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fffa :=_fagcf .A ();_eecg :=_fagcf .B ();_dbgff :=_fagcf .C ();X :=_gfdcb .Matrix [0]*_dgf .Pow (_fffa ,_gfdcb .Gamma [0])+_gfdcb .Matrix [3]*_dgf .Pow (_eecg ,_gfdcb .Gamma [1])+_gfdcb .Matrix [6]*_dgf .Pow (_dbgff ,_gfdcb .Gamma [2]);
Y :=_gfdcb .Matrix [1]*_dgf .Pow (_fffa ,_gfdcb .Gamma [0])+_gfdcb .Matrix [4]*_dgf .Pow (_eecg ,_gfdcb .Gamma [1])+_gfdcb .Matrix [7]*_dgf .Pow (_dbgff ,_gfdcb .Gamma [2]);Z :=_gfdcb .Matrix [2]*_dgf .Pow (_fffa ,_gfdcb .Gamma [0])+_gfdcb .Matrix [5]*_dgf .Pow (_eecg ,_gfdcb .Gamma [1])+_gfdcb .Matrix [8]*_dgf .Pow (_dbgff ,_gfdcb .Gamma [2]);
_dffg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_caab :=-0.969256*X +1.875992*Y +0.041556*Z ;_fabc :=0.055648*X +-0.204043*Y +1.057311*Z ;_dffg =_dgf .Min (_dgf .Max (_dffg ,0),1.0);_caab =_dgf .Min (_dgf .Max (_caab ,0),1.0);_fabc =_dgf .Min (_dgf .Max (_fabc ,0),1.0);
return NewPdfColorDeviceRGB (_dffg ,_caab ,_fabc ),nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_beg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cbgab :=&PdfFieldSignature {};_cbgab .PdfField =NewPdfField ();_cbgab .PdfField .SetContext (_cbgab );_cbgab .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cbgab .PdfAnnotationWidget .SetContext (_cbgab );
_cbgab .PdfAnnotationWidget ._eab =_cbgab .PdfField ._gegceb ;_cbgab .T =_ea .MakeString ("");_cbgab .F =_ea .MakeInteger (132);_cbgab .V =signature ;return _cbgab ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ea .PdfObject ;LE _ea .PdfObject ;BS _ea .PdfObject ;IC _ea .PdfObject ;BE _ea .PdfObject ;IT _ea .PdfObject ;Measure _ea .PdfObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_bcfa :=&PdfBorderStyle {};return _bcfa };

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ea .PdfObject ;BS _ea .PdfObject ;};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_ggbdf *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _ggbdf ._edegb };func _defe (_ebed ,_cage string )string {if _dgb .Contains (_ebed ,"\u002b"){_cega :=_dgb .Split (_ebed ,"\u002b");if len (_cega )==2{_ebed =_cega [1];
};};return _cage +"\u002b"+_ebed ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bdeab *PdfColorspaceCalRGB )ToPdfObject ()_ea .PdfObject {_eecf :=&_ea .PdfObjectArray {};_eecf .Append (_ea .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dfadb :=_ea .MakeDict ();if _bdeab .WhitePoint !=nil {_gegde :=_ea .MakeArray (_ea .MakeFloat (_bdeab .WhitePoint [0]),_ea .MakeFloat (_bdeab .WhitePoint [1]),_ea .MakeFloat (_bdeab .WhitePoint [2]));
_dfadb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gegde );}else {_ca .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bdeab .BlackPoint !=nil {_fbgc :=_ea .MakeArray (_ea .MakeFloat (_bdeab .BlackPoint [0]),_ea .MakeFloat (_bdeab .BlackPoint [1]),_ea .MakeFloat (_bdeab .BlackPoint [2]));_dfadb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fbgc );
};if _bdeab .Gamma !=nil {_deegd :=_ea .MakeArray (_ea .MakeFloat (_bdeab .Gamma [0]),_ea .MakeFloat (_bdeab .Gamma [1]),_ea .MakeFloat (_bdeab .Gamma [2]));_dfadb .Set ("\u0047\u0061\u006dm\u0061",_deegd );};if _bdeab .Matrix !=nil {_eebb :=_ea .MakeArray (_ea .MakeFloat (_bdeab .Matrix [0]),_ea .MakeFloat (_bdeab .Matrix [1]),_ea .MakeFloat (_bdeab .Matrix [2]),_ea .MakeFloat (_bdeab .Matrix [3]),_ea .MakeFloat (_bdeab .Matrix [4]),_ea .MakeFloat (_bdeab .Matrix [5]),_ea .MakeFloat (_bdeab .Matrix [6]),_ea .MakeFloat (_bdeab .Matrix [7]),_ea .MakeFloat (_bdeab .Matrix [8]));
_dfadb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eebb );};_eecf .Append (_dfadb );if _bdeab ._gcdg !=nil {_bdeab ._gcdg .PdfObject =_eecf ;return _bdeab ._gcdg ;};return _eecf ;};func _fagd (_dbabe _ea .PdfObject ,_dbaac bool )(*PdfFont ,error ){_gdca ,_bcbe ,_bdae :=_bbgb (_dbabe );
if _gdca !=nil {_fefge (_gdca );};if _bdae !=nil {if _bdae ==ErrType1CFontNotSupported {_gbaca ,_dccgc :=_dadec (_gdca ,_bcbe ,nil );if _dccgc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bcbe ,_dccgc );
return nil ,_bdae ;};return &PdfFont {_gbee :_gbaca },_bdae ;};return nil ,_bdae ;};_adcfd :=&PdfFont {};switch _bcbe ._dfeb {case "\u0054\u0079\u0070e\u0030":if !_dbaac {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcbe );
return nil ,_dc .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_abfea ,_afgcc :=_eefcg (_gdca ,_bcbe );if _afgcc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbe ,_afgcc );
return nil ,_afgcc ;};_adcfd ._gbee =_abfea ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fega *pdfFontSimple ;_fdgcae ,_egeef :=_gf .NewStdFontByName (_gf .StdFontName (_bcbe ._ceac ));
if _egeef {_dbfea :=_aacc (_fdgcae );_adcfd ._gbee =&_dbfea ;_befdg :=_ea .TraceToDirectObject (_dbfea .ToPdfObject ());_aeab ,_bbcb ,_fcdbd :=_bbgb (_befdg );if _fcdbd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bcbe ,_dbfea );
return nil ,_fcdbd ;};for _ ,_fffda :=range _gdca .Keys (){_aeab .Set (_fffda ,_gdca .Get (_fffda ));};_fega ,_fcdbd =_dadec (_aeab ,_bbcb ,_dbfea ._gcgef );if _fcdbd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bcbe ,_dbfea );
return nil ,_fcdbd ;};_fega ._ffeb =_dbfea ._ffeb ;_fega ._agaf =_dbfea ._agaf ;if _fega ._caaff ==nil {_fega ._caaff =_dbfea ._caaff ;};}else {_fega ,_bdae =_dadec (_gdca ,_bcbe ,nil );if _bdae !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bcbe ,_bdae );
return nil ,_bdae ;};};_bdae =_fega .addEncoding ();if _bdae !=nil {return nil ,_bdae ;};if _egeef {_fega .updateStandard14Font ();};if _egeef &&_fega ._ggbg ==nil &&_fega ._gcgef ==nil {_ca .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fega );
_ca .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_fdgcae );};if len (_fega ._ffeb )==0{_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fega );};_adcfd ._gbee =_fega ;
case "\u0054\u0079\u0070e\u0033":_gcad ,_ddccg :=_gabbb (_gdca ,_bcbe );if _ddccg !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ddccg );
return nil ,_ddccg ;};_adcfd ._gbee =_gcad ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gebde ,_bbagd :=_gbbgf (_gdca ,_bcbe );if _bbagd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bbagd );
return nil ,_bbagd ;};_adcfd ._gbee =_gebde ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dbde ,_dcfad :=_gedbda (_gdca ,_bcbe );if _dcfad !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbe ,_dcfad );
return nil ,_dcfad ;};_adcfd ._gbee =_dbde ;default:_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bcbe );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcbe );};return _adcfd ,nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_ebfg *_cg .Document )error ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ea .PdfObjectInteger ;TilingType *_ea .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ea .PdfObjectFloat ;YStep *_ea .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ea .PdfObjectArray ;};func (_bac *PdfReader )newPdfAnnotationPolygonFromDict (_debc *_ea .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_feaf :=PdfAnnotationPolygon {};
_fbe ,_dafb :=_bac .newPdfAnnotationMarkupFromDict (_debc );if _dafb !=nil {return nil ,_dafb ;};_feaf .PdfAnnotationMarkup =_fbe ;_feaf .Vertices =_debc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_feaf .LE =_debc .Get ("\u004c\u0045");_feaf .BS =_debc .Get ("\u0042\u0053");
_feaf .IC =_debc .Get ("\u0049\u0043");_feaf .BE =_debc .Get ("\u0042\u0045");_feaf .IT =_debc .Get ("\u0049\u0054");_feaf .Measure =_debc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_feaf ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cgde *PdfPage )error ;};

// ViewClip returns the value of the viewClip.
func (_afgbf *ViewerPreferences )ViewClip ()PageBoundary {return _afgbf ._bbgad };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ea .PdfIndirectObject )*PdfOutlineItem {_gfcabg :=PdfOutlineItem {};_gfcabg ._bdddb =&_gfcabg ;_gfcabg .Title =_ea .MakeString (title );_dcede :=_ea .MakeArray ();_dcede .Append (page );_dcede .Append (_ea .MakeName ("\u0046\u0069\u0074"));
_gfcabg .Dest =_dcede ;return &_gfcabg ;};func (_afd *PdfReader )newPdfActionFromIndirectObject (_efgg *_ea .PdfIndirectObject )(*PdfAction ,error ){_ccf ,_cadf :=_efgg .PdfObject .(*_ea .PdfObjectDictionary );if !_cadf {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_afd ._aebcf .GetModelFromPrimitive (_ccf );model !=nil {_dee ,_bda :=model .(*PdfAction );if !_bda {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dee ,nil ;};_adea :=&PdfAction {};_adea ._fgc =_efgg ;_afd ._aebcf .Register (_ccf ,_adea );if _gfgd :=_ccf .Get ("\u0054\u0079\u0070\u0065");_gfgd !=nil {_eeee ,_dgc :=_gfgd .(*_ea .PdfObjectName );if !_dgc {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfgd );
}else {if *_eeee !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ca .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eeee );
};_adea .Type =_eeee ;};};if _cce :=_ccf .Get ("\u004e\u0065\u0078\u0074");_cce !=nil {_adea .Next =_cce ;};if _feg :=_ccf .Get ("\u0053");_feg !=nil {_adea .S =_feg ;};_abd ,_adg :=_adea .S .(*_ea .PdfObjectName );if !_adg {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_adea .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_adea .S );};_ddge :=PdfActionType (_abd .String ());
switch _ddge {case ActionTypeGoTo :_cbeb ,_deg :=_afd .newPdfActionGotoFromDict (_ccf );if _deg !=nil {return nil ,_deg ;};_cbeb .PdfAction =_adea ;_adea ._fe =_cbeb ;return _adea ,nil ;case ActionTypeGoToR :_ffgd ,_ggg :=_afd .newPdfActionGotoRFromDict (_ccf );
if _ggg !=nil {return nil ,_ggg ;};_ffgd .PdfAction =_adea ;_adea ._fe =_ffgd ;return _adea ,nil ;case ActionTypeGoToE :_beea ,_beb :=_afd .newPdfActionGotoEFromDict (_ccf );if _beb !=nil {return nil ,_beb ;};_beea .PdfAction =_adea ;_adea ._fe =_beea ;
return _adea ,nil ;case ActionTypeLaunch :_bf ,_afg :=_afd .newPdfActionLaunchFromDict (_ccf );if _afg !=nil {return nil ,_afg ;};_bf .PdfAction =_adea ;_adea ._fe =_bf ;return _adea ,nil ;case ActionTypeThread :_dbba ,_egec :=_afd .newPdfActionThreadFromDict (_ccf );
if _egec !=nil {return nil ,_egec ;};_dbba .PdfAction =_adea ;_adea ._fe =_dbba ;return _adea ,nil ;case ActionTypeURI :_cdd ,_faf :=_afd .newPdfActionURIFromDict (_ccf );if _faf !=nil {return nil ,_faf ;};_cdd .PdfAction =_adea ;_adea ._fe =_cdd ;return _adea ,nil ;
case ActionTypeSound :_agb ,_cgc :=_afd .newPdfActionSoundFromDict (_ccf );if _cgc !=nil {return nil ,_cgc ;};_agb .PdfAction =_adea ;_adea ._fe =_agb ;return _adea ,nil ;case ActionTypeMovie :_gdd ,_ggcc :=_afd .newPdfActionMovieFromDict (_ccf );if _ggcc !=nil {return nil ,_ggcc ;
};_gdd .PdfAction =_adea ;_adea ._fe =_gdd ;return _adea ,nil ;case ActionTypeHide :_fec ,_ace :=_afd .newPdfActionHideFromDict (_ccf );if _ace !=nil {return nil ,_ace ;};_fec .PdfAction =_adea ;_adea ._fe =_fec ;return _adea ,nil ;case ActionTypeNamed :_bge ,_edg :=_afd .newPdfActionNamedFromDict (_ccf );
if _edg !=nil {return nil ,_edg ;};_bge .PdfAction =_adea ;_adea ._fe =_bge ;return _adea ,nil ;case ActionTypeSubmitForm :_cfe ,_eca :=_afd .newPdfActionSubmitFormFromDict (_ccf );if _eca !=nil {return nil ,_eca ;};_cfe .PdfAction =_adea ;_adea ._fe =_cfe ;
return _adea ,nil ;case ActionTypeResetForm :_aca ,_efgc :=_afd .newPdfActionResetFormFromDict (_ccf );if _efgc !=nil {return nil ,_efgc ;};_aca .PdfAction =_adea ;_adea ._fe =_aca ;return _adea ,nil ;case ActionTypeImportData :_gegb ,_cgf :=_afd .newPdfActionImportDataFromDict (_ccf );
if _cgf !=nil {return nil ,_cgf ;};_gegb .PdfAction =_adea ;_adea ._fe =_gegb ;return _adea ,nil ;case ActionTypeSetOCGState :_gea ,_bcf :=_afd .newPdfActionSetOCGStateFromDict (_ccf );if _bcf !=nil {return nil ,_bcf ;};_gea .PdfAction =_adea ;_adea ._fe =_gea ;
return _adea ,nil ;case ActionTypeRendition :_cgfd ,_cbd :=_afd .newPdfActionRenditionFromDict (_ccf );if _cbd !=nil {return nil ,_cbd ;};_cgfd .PdfAction =_adea ;_adea ._fe =_cgfd ;return _adea ,nil ;case ActionTypeTrans :_fcd ,_bfb :=_afd .newPdfActionTransFromDict (_ccf );
if _bfb !=nil {return nil ,_bfb ;};_fcd .PdfAction =_adea ;_adea ._fe =_fcd ;return _adea ,nil ;case ActionTypeGoTo3DView :_cgge ,_gegf :=_afd .newPdfActionGoTo3DViewFromDict (_ccf );if _gegf !=nil {return nil ,_gegf ;};_cgge .PdfAction =_adea ;_adea ._fe =_cgge ;
return _adea ,nil ;case ActionTypeJavaScript :_aeg ,_fcde :=_afd .newPdfActionJavaScriptFromDict (_ccf );if _fcde !=nil {return nil ,_fcde ;};_aeg .PdfAction =_adea ;_adea ._fe =_aeg ;return _adea ,nil ;};_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ddge );
return nil ,nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_abbec *PdfPageResourcesColorspaces )Set (key _ea .PdfObjectName ,val PdfColorspace ){if _ ,_bdag :=_abbec .Colorspaces [string (key )];!_bdag {_abbec .Names =append (_abbec .Names ,string (key ));};_abbec .Colorspaces [string (key )]=val ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_aefc *BorderStyle )GetPdfName ()string {switch *_aefc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gc .PSProgram ;_gdddb *_gc .PSExecutor ;_gdcf []byte ;_bgbdb *_ea .PdfObjectStream ;};

// AddImageResource adds an image to the XObject resources.
func (_fafbb *PdfPage )AddImageResource (name _ea .PdfObjectName ,ximg *XObjectImage )error {var _adcbc *_ea .PdfObjectDictionary ;if _fafbb .Resources .XObject ==nil {_adcbc =_ea .MakeDict ();_fafbb .Resources .XObject =_adcbc ;}else {var _bfcbbb bool ;
_adcbc ,_bfcbbb =(_fafbb .Resources .XObject ).(*_ea .PdfObjectDictionary );if !_bfcbbb {return _dc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_adcbc .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_cdaf :=NewPdfAction ();_fba :=&PdfActionGoToR {};_fba .PdfAction =_cdaf ;_cdaf .SetContext (_fba );return _fba ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_adbcf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebfe :=vals [0];_fgdg :=[]float64 {_ebfe };_bada ,_bdga :=_adbcf .TintTransform .Evaluate (_fgdg );
if _bdga !=nil {_ca .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bdga );_ca .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_adbcf .TintTransform );
return nil ,_bdga ;};_ca .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bada ,_adbcf .AlternateSpace );
_eacfb ,_bdga :=_adbcf .AlternateSpace .ColorFromFloats (_bada );if _bdga !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bdga );
return nil ,_bdga ;};return _eacfb ,nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fcc :=NewPdfAnnotation ();_bfc :=&PdfAnnotationFreeText {};_bfc .PdfAnnotation =_fcc ;_bfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcc .SetContext (_bfc );return _bfc ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _fg .Time )(PdfDate ,error ){_afebf :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_aggfdd ,_ :=_ab .ParseInt (_afebf [1:3],10,32);_ccgea ,_ :=_ab .ParseInt (_afebf [4:6],10,32);return PdfDate {_daae :int64 (timeObj .Year ()),_edbcda :int64 (timeObj .Month ()),_ecafe :int64 (timeObj .Day ()),_cdcef :int64 (timeObj .Hour ()),_bcddc :int64 (timeObj .Minute ()),_eacgg :int64 (timeObj .Second ()),_dcfge :_afebf [0],_agfbcf :_aggfdd ,_dcfcc :_ccgea },nil ;
};

// SetImage updates XObject Image with new image data.
func (_gcffg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gcffg .Filter .UpdateParams (img .GetParamsDict ());_gadg ,_eabfb :=_gcffg .Filter .EncodeBytes (img .Data );if _eabfb !=nil {return _eabfb ;};_gcffg .Stream =_gadg ;_ebgfe :=img .Width ;
_gcffg .Width =&_ebgfe ;_ddcaf :=img .Height ;_gcffg .Height =&_ddcaf ;_gggfc :=img .BitsPerComponent ;_gcffg .BitsPerComponent =&_gggfc ;if cs ==nil {if img .ColorComponents ==1{_gcffg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gcffg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gcffg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _dc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gcffg .ColorSpace =cs ;};return nil ;
};

// Y returns the value of the yellow component of the color.
func (_bdgfa *PdfColorDeviceCMYK )Y ()float64 {return _bdgfa [2]};

// ToPdfObject implements interface PdfModel.
func (_adb *PdfActionThread )ToPdfObject ()_ea .PdfObject {_adb .PdfAction .ToPdfObject ();_gaa :=_adb ._fgc ;_cfga :=_gaa .PdfObject .(*_ea .PdfObjectDictionary );_cfga .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeThread )));if _adb .F !=nil {_cfga .Set ("\u0046",_adb .F .ToPdfObject ());
};_cfga .SetIfNotNil ("\u0044",_adb .D );_cfga .SetIfNotNil ("\u0042",_adb .B );return _gaa ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_cdaff :=&PdfAppender {_cdcg :reader ._gcddb ,Reader :reader ,_gbge :reader ._afedg ,_deeb :reader ._dgacb };_fcaca ,_ccc :=_cdaff ._cdcg .Seek (0,_cde .SeekEnd );
if _ccc !=nil {return nil ,_ccc ;};_cdaff ._gbca =_fcaca ;if _ ,_ccc =_cdaff ._cdcg .Seek (0,_cde .SeekStart );_ccc !=nil {return nil ,_ccc ;};_cdaff ._gcaa ,_ccc =NewPdfReaderWithOpts (_cdaff ._cdcg ,opts );if _ccc !=nil {return nil ,_ccc ;};for _ ,_caf :=range _cdaff .Reader .GetObjectNums (){if _cdaff ._faac < _caf {_cdaff ._faac =_caf ;
};};_cdaff ._bcfe =_cdaff ._gbge .GetXrefTable ();_cdaff ._gegd =_cdaff ._gbge .GetXrefOffset ();_cdaff ._efbd =append (_cdaff ._efbd ,_cdaff ._gcaa .PageList ...);_cdaff ._bagc =make (map[_ea .PdfObject ]struct{});_cdaff ._dea =make (map[_ea .PdfObject ]int64 );
_cdaff ._dadc =make (map[_ea .PdfObject ]struct{});_cdaff ._agd =_cdaff ._gcaa .AcroForm ;_cdaff ._ccfg =_cdaff ._gcaa .DSS ;if opts !=nil {_cdaff ._gfde =opts .Password ;};if encryptOptions !=nil {_cdaff ._fcded =encryptOptions ;};return _cdaff ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gcgg *PdfActionHide )ToPdfObject ()_ea .PdfObject {_gcgg .PdfAction .ToPdfObject ();_baa :=_gcgg ._fgc ;_ggd :=_baa .PdfObject .(*_ea .PdfObjectDictionary );_ggd .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeHide )));_ggd .SetIfNotNil ("\u0054",_gcgg .T );
_ggd .SetIfNotNil ("\u0048",_gcgg .H );return _baa ;};

// Encoder returns the font's text encoder.
func (_fcgdd pdfCIDFontType0 )Encoder ()_ge .TextEncoder {return _fcgdd ._eaga };

// Width returns the width of `rect`.
func (_aeega *PdfRectangle )Width ()float64 {return _dgf .Abs (_aeega .Urx -_aeega .Llx )};func (_gfgaa *fontFile )loadFromSegments (_ffaab ,_cbce []byte )error {_ca .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ffaab ),len (_cbce ));
_dfbdbd :=_gfgaa .parseASCIIPart (_ffaab );if _dfbdbd !=nil {return _dfbdbd ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gfgaa );if len (_cbce )==0{return nil ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gfgaa );
return nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ea .PdfObject ;V _ea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ceg *PdfAnnotationRedact )ToPdfObject ()_ea .PdfObject {_ceg .PdfAnnotation .ToPdfObject ();_gecd :=_ceg ._eab ;_baff :=_gecd .PdfObject .(*_ea .PdfObjectDictionary );_ceg .PdfAnnotationMarkup .appendToPdfDictionary (_baff );_baff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_baff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ceg .QuadPoints );_baff .SetIfNotNil ("\u0049\u0043",_ceg .IC );_baff .SetIfNotNil ("\u0052\u004f",_ceg .RO );_baff .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ceg .OverlayText );
_baff .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ceg .Repeat );_baff .SetIfNotNil ("\u0044\u0041",_ceg .DA );_baff .SetIfNotNil ("\u0051",_ceg .Q );return _gecd ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gdbec *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gdbec .baseFields ()._eafg !=nil {return _gdbec .baseFields ()._eafg ;};if _efgec :=_gdbec ._gbee .getFontDescriptor ();_efgec !=nil {return _efgec ;};_ca .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gdbec );
return nil ;};func _ffcbf (_cegfc string )(string ,error ){var _dedg _cb .Buffer ;_dedg .WriteString (_cegfc );_dcgg :=make ([]byte ,8+16);_adebc :=_fg .Now ().UTC ().UnixNano ();_ff .BigEndian .PutUint64 (_dcgg ,uint64 (_adebc ));_ ,_ddff :=_fa .Read (_dcgg [8:]);
if _ddff !=nil {return "",_ddff ;};_dedg .WriteString (_ad .EncodeToString (_dcgg ));return _dedg .String (),nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bbfa *PdfFieldText )ToPdfObject ()_ea .PdfObject {_bbfa .PdfField .ToPdfObject ();_aaacf :=_bbfa ._gegceb ;_bfgg :=_aaacf .PdfObject .(*_ea .PdfObjectDictionary );_bfgg .Set ("\u0046\u0054",_ea .MakeName ("\u0054\u0078"));if _bbfa .DA !=nil {_bfgg .Set ("\u0044\u0041",_bbfa .DA );
};if _bbfa .Q !=nil {_bfgg .Set ("\u0051",_bbfa .Q );};if _bbfa .DS !=nil {_bfgg .Set ("\u0044\u0053",_bbfa .DS );};if _bbfa .RV !=nil {_bfgg .Set ("\u0052\u0056",_bbfa .RV );};if _bbfa .MaxLen !=nil {_bfgg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bbfa .MaxLen );
};return _aaacf ;};func (_cfeag *fontFile )parseASCIIPart (_cadbe []byte )error {if len (_cadbe )< 2||string (_cadbe [:2])!="\u0025\u0021"{return _dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cfeg ,_ggbge ,_dbaad :=_agcda (_cadbe );if _dbaad !=nil {return _dbaad ;};_dbec :=_ccbcb (_cfeg );_cfeag ._adebe =_dbec ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cfeag ._adebe ==""{_ca .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ggbge !=""{_gdgbec ,_gbcd :=_dfdfa (_ggbge );if _gbcd !=nil {return _gbcd ;};_egcgf ,_gbcd :=_ge .NewCustomSimpleTextEncoder (_gdgbec ,nil );if _gbcd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gbcd );
return nil ;};_cfeag ._ccabg =_egcgf ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbgdd *PdfAnnotationInk )ToPdfObject ()_ea .PdfObject {_cbgdd .PdfAnnotation .ToPdfObject ();_ddbb :=_cbgdd ._eab ;_cfae :=_ddbb .PdfObject .(*_ea .PdfObjectDictionary );_cbgdd .PdfAnnotationMarkup .appendToPdfDictionary (_cfae );_cfae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0049\u006e\u006b"));
_cfae .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cbgdd .InkList );_cfae .SetIfNotNil ("\u0042\u0053",_cbgdd .BS );return _ddbb ;};

// ToPdfObject implements interface PdfModel.
func (_feae *PdfAnnotationUnderline )ToPdfObject ()_ea .PdfObject {_feae .PdfAnnotation .ToPdfObject ();_eacc :=_feae ._eab ;_bcef :=_eacc .PdfObject .(*_ea .PdfObjectDictionary );_feae .PdfAnnotationMarkup .appendToPdfDictionary (_bcef );_bcef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_bcef .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_feae .QuadPoints );return _eacc ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fbg *PdfAnnotation )GetContext ()PdfModel {if _fbg ==nil {return nil ;};return _fbg ._fcf ;};

// GetCatalogLanguage gets catalog Language object.
func (_efabdg *PdfReader )GetCatalogLanguage ()(_ea .PdfObject ,bool ){if _efabdg ._gbggd ==nil {return nil ,false ;};_acecd :=_efabdg ._gbggd .Get ("\u004c\u0061\u006e\u0067");return _acecd ,_acecd !=nil ;};func (_acfa *PdfReader )traverseObjectData (_effaga _ea .PdfObject )error {return _ea .ResolveReferencesDeep (_effaga ,_acfa ._dgacb );
};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bbebd *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbebd .AlternateSpace ==nil {return nil ,_dc .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bbebd .AlternateSpace .ColorToRGB (color );};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bgba :=&PdfFilespec {};_bgba ._cbgg =_ea .MakeIndirectObject (_ea .MakeDict ());return _bgba ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_daca *PdfInfo )AddCustomInfo (name string ,value string )error {if _daca ._bafgg ==nil {_daca ._bafgg =_ea .MakeDict ();};if _ ,_fcace :=_gafa [name ];_fcace {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_daca ._bafgg .SetIfNotNil (*_ea .MakeName (name ),_ea .MakeString (value ));return nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_feb *PdfActionResetForm )ToPdfObject ()_ea .PdfObject {_feb .PdfAction .ToPdfObject ();_fbc :=_feb ._fgc ;_gafc :=_fbc .PdfObject .(*_ea .PdfObjectDictionary );_gafc .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeResetForm )));_gafc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_feb .Fields );
_gafc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_feb .Flags );return _fbc ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_gfeg *MultipleFontEncoder )Encoder (rn rune )(_ge .TextEncoder ,bool ){_gcagd :=_gfeg .CurrentFont ;_cagb :=_gcagd .Encoder ();_ ,_dagab :=_cagb .RuneToCharcode (rn );for _befgd :=1;_befgd < len (_gfeg ._fgee )&&!_dagab ;_befgd ++{_gcagd =_gfeg ._fgee [_befgd ];
_cagb =_gcagd .Encoder ();_ ,_dagab =_cagb .RuneToCharcode (rn );_gfeg .CurrentFont =_gcagd ;};return _cagb ,_dagab ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ea .PdfObject )(_ea .PdfObjectName ,error ){var _fafe *_ea .PdfObjectName ;var _baec *_ea .PdfObjectArray ;if _fffe ,_egcc :=obj .(*_ea .PdfIndirectObject );_egcc {if _acde ,_dcgb :=_fffe .PdfObject .(*_ea .PdfObjectArray );
_dcgb {_baec =_acde ;}else if _cbbaa ,_bbee :=_fffe .PdfObject .(*_ea .PdfObjectName );_bbee {_fafe =_cbbaa ;};}else if _cadfcd ,_cdgba :=obj .(*_ea .PdfObjectArray );_cdgba {_baec =_cadfcd ;}else if _ecee ,_bagce :=obj .(*_ea .PdfObjectName );_bagce {_fafe =_ecee ;
};if _fafe !=nil {switch *_fafe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fafe ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fafe ,nil ;
};};if _baec !=nil &&_baec .Len ()> 0{if _abad ,_bcg :=_baec .Get (0).(*_ea .PdfObjectName );_bcg {switch *_abad {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _baec .Len ()==1{return *_abad ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_abad ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_abad ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_abad ,nil ;};};};return "",nil ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_ea .PdfObjectString ;Q *_ea .PdfObjectInteger ;DS *_ea .PdfObjectString ;RV _ea .PdfObject ;};func (_dgdba *Names )addEmbeddedFile (_cfbb *EmbeddedFile )error {if _dgdba .EmbeddedFiles ==nil {_dgdba .EmbeddedFiles =_ea .MakeDict ();
_dgdba .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ea .MakeArray ());};_fddba :=NewPdfFileSpecFromEmbeddedFile (_cfbb );_ceccb :=_dgdba .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_bdbaf ,_ecba :=_ceccb .(*_ea .PdfObjectArray );if !_ecba {return _dc .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_caabb string ;_fabae *PdfFilespec ;};_bgcf :=[]FileSpecMap {};for _dcabcf :=0;_dcabcf < len (_bdbaf .Elements ());_dcabcf +=2{if _dcabcf %2==0{_cgcag :=_bdbaf .Get (_dcabcf );if _cgcag !=nil {_egbba :=_cgcag .(*_ea .PdfObjectString );
_fgaec :=_bdbaf .Get (_dcabcf +1);_bcbgd ,_egae :=NewPdfFilespecFromObj (_fgaec );if _egae !=nil {return _egae ;};_bgcf =append (_bgcf ,FileSpecMap {_caabb :_egbba .String (),_fabae :_bcbgd });};};};_bgcf =append (_bgcf ,FileSpecMap {_caabb :_cfbb .Name ,_fabae :_fddba });
_cd .Slice (_bgcf ,func (_egad ,_dcce int )bool {return _bgcf [_egad ]._caabb < _bgcf [_dcce ]._caabb });_bdbaf =_ea .MakeArray ();for _ ,_bfdfe :=range _bgcf {_bdbaf .Append (_ea .MakeString (_bfdfe ._caabb ));_bdbaf .Append (_bfdfe ._fabae .ToPdfObject ());
};_dgdba .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_bdbaf );return nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_dacdc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cefb :=func (_dgga float64 )float64 {if _dgga >=6.0/29{return _dgga *_dgga *_dgga ;};return 108.0/841*(_dgga -4.0/29.0);};_gcb ,_aage :=color .(*PdfColorLab );if !_aage {_ca .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gcb .L ();AStar :=_gcb .A ();BStar :=_gcb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_dacdc .WhitePoint [0]*_cefb (L );Y :=_dacdc .WhitePoint [1]*_cefb (M );Z :=_dacdc .WhitePoint [2]*_cefb (N );_fbcda :=3.240479*X +-1.537150*Y +-0.498535*Z ;_abdbf :=-0.969256*X +1.875992*Y +0.041556*Z ;_dfec :=0.055648*X +-0.204043*Y +1.057311*Z ;
_fbcda =_dgf .Min (_dgf .Max (_fbcda ,0),1.0);_abdbf =_dgf .Min (_dgf .Max (_abdbf ,0),1.0);_dfec =_dgf .Min (_dgf .Max (_dfec ,0),1.0);return NewPdfColorDeviceRGB (_fbcda ,_abdbf ,_dfec ),nil ;};var _adebd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_fddb *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacf ,_facdf :=_ea .GetNumbersAsFloat (objects );
if _facdf !=nil {return nil ,_facdf ;};return _fddb .ColorFromFloats (_cacf );};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ea .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ea .PdfObject ;A _ea .PdfObject ;SE _ea .PdfObject ;C _ea .PdfObject ;F _ea .PdfObject ;
_geeed *_ea .PdfIndirectObject ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dagcc *PdfPage )Size ()(float64 ,float64 ,error ){_cbff ,_afab :=_dagcc .GetMediaBox ();if _afab !=nil {return 0,0,_afab ;};_dcfae ,_egcbc :=_cbff .Width (),_cbff .Height ();_fgeg ,_afab :=_dagcc .GetRotate ();if _afab !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_afab .Error ());
};if _bbfdg :=_fgeg ;_bbfdg %360!=0&&_bbfdg %90==0{if _adfa :=(360+_bbfdg %360)%360;_adfa ==90||_adfa ==270{_dcfae ,_egcbc =_egcbc ,_dcfae ;};};return _dcfae ,_egcbc ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _adda (_fgbbd *_ea .PdfIndirectObject ,_acfc *_ea .PdfObjectDictionary )(*DSS ,error ){if _fgbbd ==nil {_fgbbd =_ea .MakeIndirectObject (nil );
};_fgbbd .PdfObject =_ea .MakeDict ();_eefe :=map[string ]*VRI {};if _bdef ,_fbbc :=_ea .GetDict (_acfc .Get ("\u0056\u0052\u0049"));_fbbc {for _ ,_gbfbb :=range _bdef .Keys (){if _aabf ,_fccee :=_ea .GetDict (_bdef .Get (_gbfbb ));_fccee {_eefe [_dgb .ToUpper (_gbfbb .String ())]=_egfae (_aabf );
};};};return &DSS {Certs :_eeeed (_acfc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_eeeed (_acfc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_eeeed (_acfc .Get ("\u0043\u0052\u004c\u0073")),VRI :_eefe ,_egee :_fgbbd },nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_ea .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_ea .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_adbcg *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_febgd :=_adbcg ._afedg .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _febgd {return nil ,_dc .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_febgd {return _adbcg ,nil ;};if _adbcg ._bgae [revisionNumber ]!=nil {return _adbcg ._bgae [revisionNumber ],nil ;};_gcbb :=_adbcg ;for _cfbdf :=_febgd -1;_cfbdf >=revisionNumber ;_cfbdf --{_egccg ,_gbggg :=_gcbb .GetPreviousRevision ();
if _gbggg !=nil {return nil ,_gbggg ;};_adbcg ._bgae [_cfbdf ]=_egccg ;_gcbb =_egccg ;};return _gcbb ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fecfd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_efdd :=_af .NewReader (img .getBase ());_bec :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dcad :=_af .NewWriter (_bec );
_dagad :=_dgf .Pow (2,float64 (img .BitsPerComponent ))-1;_bfgbf :=make ([]uint32 ,3);var (_ebbc error ;_cgca ,_fdfc ,_dbga ,_efef ,_dfbg ,_abcg float64 ;);for {_ebbc =_efdd .ReadSamples (_bfgbf );if _ebbc ==_cde .EOF {break ;}else if _ebbc !=nil {return img ,_ebbc ;
};_cgca =float64 (_bfgbf [0])/_dagad ;_fdfc =float64 (_bfgbf [1])/_dagad ;_dbga =float64 (_bfgbf [2])/_dagad ;_efef =_fecfd .Matrix [0]*_dgf .Pow (_cgca ,_fecfd .Gamma [0])+_fecfd .Matrix [3]*_dgf .Pow (_fdfc ,_fecfd .Gamma [1])+_fecfd .Matrix [6]*_dgf .Pow (_dbga ,_fecfd .Gamma [2]);
_dfbg =_fecfd .Matrix [1]*_dgf .Pow (_cgca ,_fecfd .Gamma [0])+_fecfd .Matrix [4]*_dgf .Pow (_fdfc ,_fecfd .Gamma [1])+_fecfd .Matrix [7]*_dgf .Pow (_dbga ,_fecfd .Gamma [2]);_abcg =_fecfd .Matrix [2]*_dgf .Pow (_cgca ,_fecfd .Gamma [0])+_fecfd .Matrix [5]*_dgf .Pow (_fdfc ,_fecfd .Gamma [1])+_fecfd .Matrix [8]*_dgf .Pow (_dbga ,_fecfd .Gamma [2]);
_cgca =3.240479*_efef +-1.537150*_dfbg +-0.498535*_abcg ;_fdfc =-0.969256*_efef +1.875992*_dfbg +0.041556*_abcg ;_dbga =0.055648*_efef +-0.204043*_dfbg +1.057311*_abcg ;_cgca =_dgf .Min (_dgf .Max (_cgca ,0),1.0);_fdfc =_dgf .Min (_dgf .Max (_fdfc ,0),1.0);
_dbga =_dgf .Min (_dgf .Max (_dbga ,0),1.0);_bfgbf [0]=uint32 (_cgca *_dagad );_bfgbf [1]=uint32 (_fdfc *_dagad );_bfgbf [2]=uint32 (_dbga *_dagad );if _ebbc =_dcad .WriteSamples (_bfgbf );_ebbc !=nil {return img ,_ebbc ;};};return _aefbb (&_bec ),nil ;
};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_dbgc :=map[rune ]int {};for _ ,_gaaee :=range text {_dbgc [_gaaee ]++;};return _dbgc ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func _eecab ()string {_dcgec .Lock ();defer _dcgec .Unlock ();return _afcdb };

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aegbgb ,_agae :=_abg .Open (filePath );if _agae !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_agae );
return nil ,_agae ;};defer _aegbgb .Close ();return NewPdfFontFromTTF (_aegbgb );};func (_dcdfc *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_ebbaf *PdfSignature )GetDocMDPPermission ()(_ege .DocMDPPermission ,bool ){for _ ,_eddad :=range _ebbaf .Reference .Elements (){if _cfefb ,_bbgc :=_ea .GetDict (_eddad );_bbgc {if _bafeb ,_cdcgg :=_ea .GetNameVal (_cfefb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_cdcgg &&_bafeb =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _bdeg ,_gecf :=_ea .GetDict (_cfefb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gecf {if P ,_fdfdc :=_ea .GetIntVal (_bdeg .Get ("\u0050"));_fdfdc {return _ege .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dbfd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dbfd ._dgad !=nil {return _dbfd ._dgad ,nil ;};if _dbfd .ColorSpace ==nil {return nil ,nil ;};_cdfe ,_efbce :=_acedbc (_dbfd .ColorSpace );if _efbce !=nil {return nil ,_efbce ;
};_dbfd ._dgad =_cdfe ;return _dbfd ._dgad ,nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_effgg *_ea .PdfObjectDictionary ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fegb :=NewPdfAnnotation ();_bbe :=&PdfAnnotationStrikeOut {};_bbe .PdfAnnotation =_fegb ;_bbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fegb .SetContext (_bbe );return _bbe ;};

// ToPdfObject implements interface PdfModel.
func (_gge *PdfActionGoToR )ToPdfObject ()_ea .PdfObject {_gge .PdfAction .ToPdfObject ();_cee :=_gge ._fgc ;_fc :=_cee .PdfObject .(*_ea .PdfObjectDictionary );_fc .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeGoToR )));if _gge .F !=nil {_fc .Set ("\u0046",_gge .F .ToPdfObject ());
};_fc .SetIfNotNil ("\u0044",_gge .D );_fc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gge .NewWindow );return _cee ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_beeabd PdfOutputIntentType )String ()string {switch _beeabd {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func (_gagfg *pdfFontSimple )updateStandard14Font (){_afcge ,_fdda :=_gagfg .Encoder ().(_ge .SimpleEncoder );
if !_fdda {_ca .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_gagfg .Encoder (),_gagfg );return ;};_aefg :=_afcge .Charcodes ();
_gagfg ._ffeb =make (map[_ge .CharCode ]float64 ,len (_aefg ));for _ ,_edada :=range _aefg {_ccdcf ,_ :=_afcge .CharcodeToRune (_edada );_badag ,_ :=_gagfg ._agaf .Read (_ccdcf );_gagfg ._ffeb [_edada ]=_badag .Wx ;};};

// Val returns the color value.
func (_cfbag *PdfColorDeviceGray )Val ()float64 {return float64 (*_cfbag )};

// SetPatternByName sets a pattern resource specified by keyName.
func (_faadf *PdfPageResources )SetPatternByName (keyName _ea .PdfObjectName ,pattern _ea .PdfObject )error {if _faadf .Pattern ==nil {_faadf .Pattern =_ea .MakeDict ();};_gbeaf ,_begcd :=_ea .GetDict (_faadf .Pattern );if !_begcd {return _ea .ErrTypeError ;
};_gbeaf .Set (keyName ,pattern );return nil ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_eacec *PdfInfo )ToPdfObject ()_ea .PdfObject {_adgef :=_ea .MakeDict ();_adgef .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_eacec .Title );_adgef .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_eacec .Author );_adgef .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_eacec .Subject );
_adgef .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eacec .Keywords );_adgef .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_eacec .Creator );_adgef .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eacec .Producer );
_adgef .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_eacec .Trapped );if _eacec .CreationDate !=nil {_adgef .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eacec .CreationDate .ToPdfObject ());};if _eacec .ModifiedDate !=nil {_adgef .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_eacec .ModifiedDate .ToPdfObject ());
};for _ ,_eccb :=range _eacec ._bafgg .Keys (){_adgef .SetIfNotNil (_eccb ,_eacec ._bafgg .Get (_eccb ));};return _adgef ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bbed *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggfb ,_fgfc :=_ea .GetNumbersAsFloat (objects );
if _fgfc !=nil {return nil ,_fgfc ;};return _bbed .ColorFromFloats (_ggfb );};func (_agbaa *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _agbaa ._afedg .GetCrypter ()!=nil &&!_agbaa ._afedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgfgc :=_agbaa ._gbggd ;_gcaaad :=_cgfgc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gcaaad ==nil {return nil ,nil ;};_egfce ,_daab :=_ea .GetIndirect (_gcaaad );_gcaaad =_ea .TraceToDirectObject (_gcaaad );if _ea .IsNullObject (_gcaaad ){_ca .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gabe ,_fggb :=_ea .GetDict (_gcaaad );if !_fggb {_ca .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gcaaad );_ca .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _agbaa ._agbfa .RelaxedMode {_ca .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gcaaad );};_ca .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_agbaa ._bdddd {_gddac :=_agbaa .traverseObjectData (_gabe );
if _gddac !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gddac );
return nil ,_gddac ;};};_fgbaf ,_afeaa :=_agbaa .newPdfAcroFormFromDict (_egfce ,_gabe );if _afeaa !=nil {return nil ,_afeaa ;};_fgbaf ._dbdf =!_daab ;return _fgbaf ,nil ;};func _ccde (_eegg *XObjectForm )(*PdfRectangle ,bool ,error ){if _dbab ,_gfdbf :=_eegg .BBox .(*_ea .PdfObjectArray );
_gfdbf {_dagce ,_aegbg :=NewPdfRectangle (*_dbab );if _aegbg !=nil {return nil ,false ,_aegbg ;};if _gbba ,_bdbd :=_eegg .Matrix .(*_ea .PdfObjectArray );_bdbd {_efff ,_cdgab :=_gbba .ToFloat64Array ();if _cdgab !=nil {return nil ,false ,_cdgab ;};_ebabe :=_ged .IdentityMatrix ();
if len (_efff )==6{_ebabe =_ged .NewMatrix (_efff [0],_efff [1],_efff [2],_efff [3],_efff [4],_efff [5]);};_dagce .Transform (_ebabe );return _dagce ,true ,nil ;};return _dagce ,false ,nil ;};return nil ,false ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// A returns the value of the A component of the color.
func (_dcef *PdfColorLab )A ()float64 {return _dcef [1]};var (_gcfae =_dg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_fbdgc =_dg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_ddccc =_dg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_abca ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gdbef ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_efcga ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// SetAlpha sets the alpha layer for the image.
func (_fdgf *Image )SetAlpha (alpha []byte ){_fdgf ._abgae =alpha };

// Write writes out the PDF.
func (_cceeab *PdfWriter )Write (writer _cde .Writer )error {_ca .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _ggccc ,_fcbegg :=writer .(*_abg .File );_fcbegg {_cceeab .SetFileName (_ggccc .Name ());};_bcbbc :=_cceeab .checkLicense ();if _bcbbc !=nil {return _bcbbc ;
};if _bcbbc =_cceeab .writeOutlines ();_bcbbc !=nil {return _bcbbc ;};if _bcbbc =_cceeab .writeAcroFormFields ();_bcbbc !=nil {return _bcbbc ;};if _bcbbc =_cceeab .writeNamesDictionary ();_bcbbc !=nil {return _bcbbc ;};_cceeab .checkPendingObjects ();if _bcbbc =_cceeab .writeOutputIntents ();
_bcbbc !=nil {return _bcbbc ;};_cceeab .setCatalogVersion ();_cceeab .copyObjects ();if _bcbbc =_cceeab .optimize ();_bcbbc !=nil {return _bcbbc ;};if _bcbbc =_cceeab .optimizeDocument ();_bcbbc !=nil {return _bcbbc ;};var _dgcec _e .Hash ;if _cceeab ._abdf {_dgcec =_gg .New ();
writer =_cde .MultiWriter (_dgcec ,writer );};_cceeab .setWriter (writer );_gbacg :=_cceeab .checkCrossReferenceStream ();_defga ,_gbacg :=_cceeab .mapObjectStreams (_gbacg );_cceeab .adjustXRefAffectedVersion (_gbacg );_cceeab .writeDocumentVersion ();
_cceeab .updateObjectNumbers ();_cceeab .writeObjects ();if _bcbbc =_cceeab .writeObjectsInStreams (_defga );_bcbbc !=nil {return _bcbbc ;};_ffbe :=_cceeab ._gfecb ;var _dgbedd int ;for _dbbgf :=range _cceeab ._gggee {if _dbbgf > _dgbedd {_dgbedd =_dbbgf ;
};};if _cceeab ._abdf {if _bcbbc =_cceeab .setHashIDs (_dgcec );_bcbbc !=nil {return _bcbbc ;};};if _gbacg {if _bcbbc =_cceeab .writeXRefStreams (_dgbedd ,_ffbe );_bcbbc !=nil {return _bcbbc ;};}else {_cceeab .writeTrailer (_dgbedd );};_cceeab .makeOffSetReference (_ffbe );
if _bcbbc =_cceeab .flushWriter ();_bcbbc !=nil {return _bcbbc ;};return nil ;};

// ToPdfObject returns a stream object.
func (_eabbb *XObjectForm )ToPdfObject ()_ea .PdfObject {_bbbea :=_eabbb ._dgbbc ;_agbfc :=_bbbea .PdfObjectDictionary ;if _eabbb .Filter !=nil {_agbfc =_eabbb .Filter .MakeStreamDict ();_bbbea .PdfObjectDictionary =_agbfc ;};_agbfc .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_agbfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0046\u006f\u0072\u006d"));_agbfc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_eabbb .FormType );_agbfc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_eabbb .BBox );_agbfc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_eabbb .Matrix );
if _eabbb .Resources !=nil {_agbfc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eabbb .Resources .ToPdfObject ());};_agbfc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eabbb .Group );_agbfc .SetIfNotNil ("\u0052\u0065\u0066",_eabbb .Ref );
_agbfc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_eabbb .MetaData );_agbfc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eabbb .PieceInfo );_agbfc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eabbb .LastModified );
_agbfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eabbb .StructParent );_agbfc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eabbb .StructParents );_agbfc .SetIfNotNil ("\u004f\u0050\u0049",_eabbb .OPI );
_agbfc .SetIfNotNil ("\u004f\u0043",_eabbb .OC );_agbfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eabbb .Name );_agbfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_eabbb .Stream ))));_bbbea .Stream =_eabbb .Stream ;return _bbbea ;
};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bdff *PdfAppender )Write (w _cde .Writer )error {if _bdff ._fdf {return _dc .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_agggb :=NewPdfWriter ();_bfga ,_edbe :=_ea .GetDict (_agggb ._ddeac );if !_edbe {return _dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gceb ,_edbe :=_bfga .Get ("\u004b\u0069\u0064\u0073").(*_ea .PdfObjectArray );if !_edbe {return _dc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_eff ,_edbe :=_bfga .Get ("\u0043\u006f\u0075n\u0074").(*_ea .PdfObjectInteger );if !_edbe {return _dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_abgg :=_bdff ._gcaa ._afedg ;_ccaa :=_abgg .GetTrailer ();if _ccaa ==nil {return _dc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fffg ,_edbe :=_ea .GetIndirect (_ccaa .Get ("\u0052\u006f\u006f\u0074"));
if !_edbe {return _dc .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fabaa ,_edbe :=_ea .GetDict (_fffg );if !_edbe {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fffg ,*_ccaa );
return _dc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fdga :=false ;for _ ,_dgd :=range _bdff ._gcaa .AcroForm .signatureFields (){if _dgd .Lock !=nil {_fdga =true ;break ;};};if _fdga {_agggb ._cfbed =_fffg ;
};for _ ,_cadfc :=range _fabaa .Keys (){if _agggb ._dacfd .Get (_cadfc )==nil {_cgbb :=_fabaa .Get (_cadfc );_agggb ._dacfd .Set (_cadfc ,_cgbb );};};if _bdff ._agd !=nil {if _bdff ._agd ._dbdf {if _dgce :=_ea .TraceToDirectObject (_bdff ._agd .ToPdfObject ());
!_ea .IsNullObject (_dgce ){_agggb ._dacfd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dgce );_bdff .updateObjectsDeep (_dgce ,nil );}else {_ca .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_agggb ._dacfd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bdff ._agd .ToPdfObject ());_bdff .updateObjectsDeep (_bdff ._agd .ToPdfObject (),nil );};};if _bdff ._ccfg !=nil {_bdff .updateObjectsDeep (_bdff ._ccfg .ToPdfObject (),nil );
_agggb ._dacfd .Set ("\u0044\u0053\u0053",_bdff ._ccfg .GetContainingPdfObject ());};if _bdff ._fgb !=nil {_agggb ._dacfd .Set ("\u0050\u0065\u0072m\u0073",_bdff ._fgb .ToPdfObject ());_bdff .updateObjectsDeep (_bdff ._fgb .ToPdfObject (),nil );};if _agggb ._cedb .Major < 2{_agggb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_agggb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _fffd ,_defg :=_ea .GetDict (_ccaa .Get ("\u0049\u006e\u0066\u006f"));_defg {if _abgb ,_gfcc :=_ea .GetDict (_agggb ._dcca );_gfcc {for _ ,_gabd :=range _fffd .Keys (){if _abgb .Get (_gabd )==nil {_abgb .Set (_gabd ,_fffd .Get (_gabd ));
};};};};if _bdff ._gcf !=nil {_agggb ._dcca =_ea .MakeIndirectObject (_bdff ._gcf .ToPdfObject ());};_bdff .updateObjectsDeep (_agggb ._dcca ,nil );_bdff .updateObjectsDeep (_agggb ._cfbed ,nil );_ebf :=false ;if len (_bdff ._gcaa .PageList )!=len (_bdff ._efbd ){_ebf =true ;
}else {for _dabf :=range _bdff ._gcaa .PageList {switch {case _bdff ._efbd [_dabf ]==_bdff ._gcaa .PageList [_dabf ]:case _bdff ._efbd [_dabf ]==_bdff .Reader .PageList [_dabf ]:default:_ebf =true ;};if _ebf {break ;};};};if _ebf {_bdff .updateObjectsDeep (_agggb ._ddeac ,nil );
}else {_bdff ._dadc [_agggb ._ddeac ]=struct{}{};};_agggb ._ddeac .ObjectNumber =_bdff .Reader ._egggg .ObjectNumber ;_bdff ._dea [_agggb ._ddeac ]=_bdff .Reader ._egggg .ObjectNumber ;_aabe :=[]_ea .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_ebef :=range _bdff ._efbd {_cdfc :=_ebef .ToPdfObject ();*_eff =*_eff +1;if _bggg ,_egeg :=_cdfc .(*_ea .PdfIndirectObject );_egeg &&_bggg .GetParser ()==_bdff ._gcaa ._afedg {_gceb .Append (&_bggg .PdfObjectReference );continue ;};if _cgec ,_bgdf :=_ea .GetDict (_cdfc );
_bgdf {_befa ,_gfeb :=_cgec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ea .PdfIndirectObject );for _gfeb {_ca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_befa );_efge ,_ddaa :=_befa .PdfObject .(*_ea .PdfObjectDictionary );
if !_ddaa {return _dc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_cfd :=range _aabe {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cfd );if _eadg :=_cgec .Get (_cfd );
_eadg !=nil {_ca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_ebef ._gfbe .Keys ())> 0&&!_ebf {_gegec :=_ebef ._gfbe ;if _gebd :=_gegec .Get (_cfd );_gebd !=nil {if _eadg !=_gebd {_ca .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_cfd ,_gebd );
_cgec .Set (_cfd ,_gebd );};};};continue ;};if _ffgg :=_efge .Get (_cfd );_ffgg !=nil {_ca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cfd );_cgec .Set (_cfd ,_ffgg );};};_befa ,_gfeb =_efge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ea .PdfIndirectObject );
_ca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _ebf {_cgec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agggb ._ddeac );};};_bdff .updateObjectsDeep (_cdfc ,nil );
_gceb .Append (_cdfc );};if _ ,_bgcee :=_bdff ._cdcg .Seek (0,_cde .SeekStart );_bgcee !=nil {return _bgcee ;};_ccgc :=make (map[SignatureHandler ]_cde .Writer );_fcgd :=_ea .MakeArray ();for _ ,_dcfa :=range _bdff ._aggf {if _bcfef ,_facd :=_ea .GetIndirect (_dcfa );
_facd {if _dgac ,_abdd :=_bcfef .PdfObject .(*pdfSignDictionary );_abdd {_caaa :=*_dgac ._cgcga ;var _effb error ;_ccgc [_caaa ],_effb =_caaa .NewDigest (_dgac ._ddgae );if _effb !=nil {return _effb ;};_fcgd .Append (_ea .MakeInteger (0xfffff),_ea .MakeInteger (0xfffff));
};};};if _fcgd .Len ()> 0{_fcgd .Append (_ea .MakeInteger (0xfffff),_ea .MakeInteger (0xfffff));};for _ ,_dcbb :=range _bdff ._aggf {if _agcc ,_cadc :=_ea .GetIndirect (_dcbb );_cadc {if _dafbf ,_fbbb :=_agcc .PdfObject .(*pdfSignDictionary );_fbbb {_dafbf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcgd );
};};};_aagf :=len (_ccgc )> 0;var _ebgg _cde .Reader =_bdff ._cdcg ;if _aagf {_beef :=make ([]_cde .Writer ,0,len (_ccgc ));for _ ,_affg :=range _ccgc {_beef =append (_beef ,_affg );};_ebgg =_cde .TeeReader (_bdff ._cdcg ,_cde .MultiWriter (_beef ...));
};_gcabd ,_eadba :=_cde .Copy (w ,_ebgg );if _eadba !=nil {return _eadba ;};if len (_bdff ._aggf )==0{return nil ;};_agggb ._bgbf =_gcabd ;_agggb .ObjNumOffset =_bdff ._faac ;_agggb ._eefcgg =true ;_agggb ._dbge =_bdff ._bcfe ;_agggb ._abcdg =_bdff ._gegd ;
_agggb ._fbccg =_bdff ._gbca ;_agggb ._cedb =_bdff ._gcaa .PdfVersion ();_agggb ._ebfca =_bdff ._dea ;_agggb ._afcgd =_bdff ._gbge .GetCrypter ();_agggb ._eadec =_bdff ._gbge .GetEncryptObj ();_afc :=_bdff ._gbge .GetXrefType ();if _afc !=nil {_dba :=*_afc ==_ea .XrefTypeObjectStream ;
_agggb ._dfcee =&_dba ;};_agggb ._efaca =map[_ea .PdfObject ]struct{}{};_agggb ._cgdbdb =[]_ea .PdfObject {};for _ ,_cfccb :=range _bdff ._aggf {if _ ,_fbcc :=_bdff ._dadc [_cfccb ];_fbcc {continue ;};_agggb .addObject (_cfccb );};_bbac :=w ;if _aagf {_bbac =_cb .NewBuffer (nil );
};if _bdff ._gfde !=""&&_agggb ._afcgd ==nil {_agggb .Encrypt ([]byte (_bdff ._gfde ),[]byte (_bdff ._gfde ),_bdff ._fcded );};if _abdg :=_ccaa .Get ("\u0049\u0044");_abdg !=nil {if _aafb ,_bdfc :=_ea .GetArray (_abdg );_bdfc {_agggb ._bfcab =_aafb ;};
};if _gcge :=_agggb .Write (_bbac );_gcge !=nil {return _gcge ;};if _aagf {_efac :=_bbac .(*_cb .Buffer ).Bytes ();_dcfg :=_ea .MakeArray ();var _cdgb []*pdfSignDictionary ;var _acaf int64 ;for _ ,_dfcf :=range _agggb ._cgdbdb {if _gdgc ,_aedbb :=_ea .GetIndirect (_dfcf );
_aedbb {if _fafbc ,_egbb :=_gdgc .PdfObject .(*pdfSignDictionary );_egbb {_cdgb =append (_cdgb ,_fafbc );_facde :=_fafbc ._eaadg +int64 (_fafbc ._gcfcb );_dcfg .Append (_ea .MakeInteger (_acaf ),_ea .MakeInteger (_facde -_acaf ));_acaf =_fafbc ._eaadg +int64 (_fafbc ._cdbc );
};};};_dcfg .Append (_ea .MakeInteger (_acaf ),_ea .MakeInteger (_gcabd +int64 (len (_efac ))-_acaf ));_gegba :=_dcfg .Write ();for _ ,_decb :=range _cdgb {_cbcca :=int (_decb ._eaadg -_gcabd );for _gcaab :=_decb ._gaabb ;_gcaab < _decb ._fcbf ;_gcaab ++{_efac [_cbcca +_gcaab ]=' ';
};_aaaa :=_efac [_cbcca +_decb ._gaabb :_cbcca +_decb ._fcbf ];copy (_aaaa ,_gegba );};var _fcdb int ;for _ ,_defag :=range _cdgb {_eebf :=int (_defag ._eaadg -_gcabd );_aaad :=_efac [_fcdb :_eebf +_defag ._gcfcb ];_febfa :=*_defag ._cgcga ;_ccgc [_febfa ].Write (_aaad );
_fcdb =_eebf +_defag ._cdbc ;};for _ ,_ega :=range _cdgb {_bbg :=_efac [_fcdb :];_bgdc :=*_ega ._cgcga ;_ccgc [_bgdc ].Write (_bbg );};for _ ,_gdef :=range _cdgb {_ecab :=int (_gdef ._eaadg -_gcabd );_abgd :=*_gdef ._cgcga ;_bffbd :=_ccgc [_abgd ];if _bfca :=_abgd .Sign (_gdef ._ddgae ,_bffbd );
_bfca !=nil {return _bfca ;};_gdef ._ddgae .ByteRange =_dcfg ;_gfddd :=_gdef ._ddgae .Contents .Write ();for _aafag :=_gdef ._gaabb ;_aafag < _gdef ._fcbf ;_aafag ++{_efac [_ecab +_aafag ]=' ';};for _ddbgf :=_gdef ._gcfcb ;_ddbgf < _gdef ._cdbc ;_ddbgf ++{_efac [_ecab +_ddbgf ]=' ';
};_beac :=_efac [_ecab +_gdef ._gaabb :_ecab +_gdef ._fcbf ];copy (_beac ,_gegba );_beac =_efac [_ecab +_gdef ._gcfcb :_ecab +_gdef ._cdbc ];copy (_beac ,_gfddd );};_ddab :=_cb .NewBuffer (_efac );_ ,_eadba =_cde .Copy (w ,_ddab );if _eadba !=nil {return _eadba ;
};};_bdff ._fdf =true ;return nil ;};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_bgge *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_bgge ._eccg =&pickTrayByPDFSize ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_efggb *PdfColorspaceSpecialPattern )ToPdfObject ()_ea .PdfObject {if _efggb .UnderlyingCS ==nil {return _ea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ccgb :=_ea .MakeArray (_ea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ccgb .Append (_efggb .UnderlyingCS .ToPdfObject ());
if _efggb ._fddbf !=nil {_efggb ._fddbf .PdfObject =_ccgb ;return _efggb ._fddbf ;};return _ccgb ;};func (_dbeed *PdfReader )newPdfSignatureReferenceFromDict (_fcgfa *_ea .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _gaada ,_fgcfg :=_dbeed ._aebcf .GetModelFromPrimitive (_fcgfa ).(*PdfSignatureReference );
_fgcfg {return _gaada ,nil ;};_dggf :=&PdfSignatureReference {_gdcaa :_fcgfa ,Data :_fcgfa .Get ("\u0044\u0061\u0074\u0061")};var _dbaeg bool ;_dggf .Type ,_ =_ea .GetName (_fcgfa .Get ("\u0054\u0079\u0070\u0065"));_dggf .TransformMethod ,_dbaeg =_ea .GetName (_fcgfa .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_dbaeg {_ca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dggf .TransformParams ,_ =_ea .GetDict (_fcgfa .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_dggf .DigestMethod ,_ =_ea .GetName (_fcgfa .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _dggf ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_baefb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _agcda (_cfda []byte )(_fbebd ,_ddfb string ,_efcb error ){_ca .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cfda ));
_cfaf :=_gcfae .FindIndex (_cfda );if _cfaf ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_ea .ErrTypeError ;};_gfccf :=_cfaf [1];_bgbdf :=_dgb .Index (string (_cfda [_gfccf :]),_abca );if _bgbdf < 0{_fbebd =string (_cfda [_gfccf :]);return _fbebd ,"",nil ;};_beeag :=_gfccf +_bgbdf ;_fbebd =string (_cfda [_gfccf :_beeag ]);_fcgdc :=_beeag ;
_bgbdf =_dgb .Index (string (_cfda [_fcgdc :]),_gdbef );if _bgbdf < 0{_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_efcb );
return "","",_ea .ErrTypeError ;};_bddfc :=_fcgdc +_bgbdf ;_ddfb =string (_cfda [_fcgdc :_bddfc ]);return _fbebd ,_ddfb ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_bgce *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fggdc :=pageNum -1;var _fde *PdfPage ;for _bfd ,_eacf :=range _bgce ._efbd {if _bfd ==_fggdc {_fde =_eacf ;};};if _fde ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _fde ._dfgcd !=nil &&_fde ._dfgcd .GetParser ()==_bgce ._gcaa ._afedg {_fde =_fde .Duplicate ();_bgce ._efbd [_fggdc ]=_fde ;};page =page .Duplicate ();_afgdga (page );_edeg :=_bbd (_fde );_affb :=_bbd (page );_dgefe :=make (map[_ea .PdfObjectName ]_ea .PdfObjectName );
for _geea :=range _affb {if _ ,_ecfg :=_edeg [_geea ];_ecfg {for _acgc :=1;true ;_acgc ++{_fafcb :=_ea .PdfObjectName (string (_geea )+_ab .Itoa (_acgc ));if _ ,_ecde :=_edeg [_fafcb ];!_ecde {_dgefe [_geea ]=_fafcb ;break ;};};};};_baae ,_efab :=page .GetContentStreams ();
if _efab !=nil {return _efab ;};_cddc ,_efab :=_fde .GetContentStreams ();if _efab !=nil {return _efab ;};for _dggg ,_abac :=range _baae {for _gcc ,_adgc :=range _dgefe {_abac =_dgb .Replace (_abac ,"\u002f"+string (_gcc ),"\u002f"+string (_adgc ),-1);
};_baae [_dggg ]=_abac ;};_cddc =append (_cddc ,_baae ...);if _cabcd :=_fde .SetContentStreams (_cddc ,_ea .NewFlateEncoder ());_cabcd !=nil {return _cabcd ;};_fde ._fcdad =append (_fde ._fcdad ,page ._fcdad ...);if _fde .Resources ==nil {_fde .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_fde .Resources .Font =_bgce .mergeResources (_fde .Resources .Font ,page .Resources .Font ,_dgefe );_fde .Resources .XObject =_bgce .mergeResources (_fde .Resources .XObject ,page .Resources .XObject ,_dgefe );_fde .Resources .Properties =_bgce .mergeResources (_fde .Resources .Properties ,page .Resources .Properties ,_dgefe );
if _fde .Resources .ProcSet ==nil {_fde .Resources .ProcSet =page .Resources .ProcSet ;};_fde .Resources .Shading =_bgce .mergeResources (_fde .Resources .Shading ,page .Resources .Shading ,_dgefe );_fde .Resources .ExtGState =_bgce .mergeResources (_fde .Resources .ExtGState ,page .Resources .ExtGState ,_dgefe );
};_baed ,_efab :=_fde .GetMediaBox ();if _efab !=nil {return _efab ;};_abag ,_efab :=page .GetMediaBox ();if _efab !=nil {return _efab ;};var _cgfe bool ;if _baed .Llx > _abag .Llx {_baed .Llx =_abag .Llx ;_cgfe =true ;};if _baed .Lly > _abag .Lly {_baed .Lly =_abag .Lly ;
_cgfe =true ;};if _baed .Urx < _abag .Urx {_baed .Urx =_abag .Urx ;_cgfe =true ;};if _baed .Ury < _abag .Ury {_baed .Ury =_abag .Ury ;_cgfe =true ;};if _cgfe {_fde .MediaBox =_baed ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fafbab *PdfShadingType1 )ToPdfObject ()_ea .PdfObject {_fafbab .PdfShading .ToPdfObject ();_fbef ,_aggce :=_fafbab .getShadingDict ();if _aggce !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fafbab .Domain !=nil {_fbef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fafbab .Domain );};if _fafbab .Matrix !=nil {_fbef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fafbab .Matrix );};if _fafbab .Function !=nil {if len (_fafbab .Function )==1{_fbef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fafbab .Function [0].ToPdfObject ());
}else {_egde :=_ea .MakeArray ();for _ ,_cfcb :=range _fafbab .Function {_egde .Append (_cfcb .ToPdfObject ());};_fbef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egde );};};return _fafbab ._feebc ;};

// IsCID returns true if the underlying font is CID.
func (_bfadg *PdfFont )IsCID ()bool {return _bfadg .baseFields ().isCIDFont ()};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cfgg :=NewPdfAnnotation ();_afbb :=&PdfAnnotationSquiggly {};_afbb .PdfAnnotation =_cfgg ;_afbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfgg .SetContext (_afbb );return _afbb ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_eddgf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ea .GetNumberAsFloat (_eddgf .CapHeight );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ageea *PdfAcroForm )ToPdfObject ()_ea .PdfObject {_bcaff :=_ageea ._fgef ;_dgfd :=_bcaff .PdfObject .(*_ea .PdfObjectDictionary );if _ageea .Fields !=nil {_fdaa :=_ea .PdfObjectArray {};for _ ,_cdcfc :=range *_ageea .Fields {_fcgca :=_cdcfc .GetContext ();
if _fcgca !=nil {_fdaa .Append (_fcgca .ToPdfObject ());}else {_fdaa .Append (_cdcfc .ToPdfObject ());};};_dgfd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_fdaa );};if _ageea .NeedAppearances !=nil {_dgfd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ageea .NeedAppearances );
}else {if _cbbbb :=_dgfd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cbbbb !=nil {_dgfd .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _ageea .SigFlags !=nil {_dgfd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ageea .SigFlags );
};if _ageea .CO !=nil {_dgfd .Set ("\u0043\u004f",_ageea .CO );};if _ageea .DR !=nil {_dgfd .Set ("\u0044\u0052",_ageea .DR .ToPdfObject ());};if _ageea .DA !=nil {_dgfd .Set ("\u0044\u0041",_ageea .DA );};if _ageea .Q !=nil {_dgfd .Set ("\u0051",_ageea .Q );
};if _ageea .XFA !=nil {_dgfd .Set ("\u0058\u0046\u0041",_ageea .XFA );};if _ageea .ADBEEchoSign !=nil {_dgfd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_ageea .ADBEEchoSign );};return _bcaff ;};

// ToPdfObject implements interface PdfModel.
func (_ffdbe *PdfSignature )ToPdfObject ()_ea .PdfObject {_eagae :=_ffdbe ._eedgc ;var _abef *_ea .PdfObjectDictionary ;if _dgeba ,_bffca :=_eagae .PdfObject .(*pdfSignDictionary );_bffca {_abef =_dgeba .PdfObjectDictionary ;}else {_abef =_eagae .PdfObject .(*_ea .PdfObjectDictionary );
};_abef .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ffdbe .Type );_abef .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ffdbe .Filter );_abef .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ffdbe .SubFilter );_abef .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ffdbe .ByteRange );
_abef .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ffdbe .Contents );_abef .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ffdbe .Cert );_abef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffdbe .Name );_abef .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ffdbe .Reason );
_abef .SetIfNotNil ("\u004d",_ffdbe .M );_abef .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ffdbe .Reference );_abef .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ffdbe .Changes );_abef .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ffdbe .ContactInfo );
_abef .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_ffdbe .Location );return _eagae ;};func (_daee *PdfReader )newPdfAnnotationStrikeOut (_beec *_ea .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ddbg :=PdfAnnotationStrikeOut {};
_aaecg ,_dfaa :=_daee .newPdfAnnotationMarkupFromDict (_beec );if _dfaa !=nil {return nil ,_dfaa ;};_ddbg .PdfAnnotationMarkup =_aaecg ;_ddbg .QuadPoints =_beec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ddbg ,nil ;};


// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ea .PdfObject ;Flags _ea .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gcafe *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=_gcafe .GetNumComponents (){return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dege ,_eefc :=_ea .GetNumbersAsFloat (objects );
if _eefc !=nil {return nil ,_eefc ;};return _gcafe .ColorFromFloats (_dege );};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_beba *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bcbf []_ge .TextEncoder ;var _afea _ge .CMapEncoder ;if _dcaa :=_beba .baseFields ()._adbfa ;_dcaa !=nil {_afea =_ge .NewCMapEncoder ("",nil ,_dcaa );};_cegee :=_beba .Encoder ();
if _cegee !=nil {switch _affcg :=_cegee .(type ){case _ge .SimpleEncoder :_daefc :=_affcg .BaseName ();if _ ,_gfgbf :=_adebd [_daefc ];_gfgbf {_bcbf =append (_bcbf ,_cegee );};};};if len (_bcbf )==0{if _beba .baseFields ()._adbfa !=nil {_bcbf =append (_bcbf ,_afea );
};if _cegee !=nil {_bcbf =append (_bcbf ,_cegee );};};var _abaf _cb .Buffer ;var _fdeg int ;for _ ,_ffcb :=range data {var _gbbcd bool ;for _ ,_cgagd :=range _bcbf {if _fcgfe :=_cgagd .Encode (string (_ffcb ));len (_fcgfe )> 0{_abaf .Write (_fcgfe );_gbbcd =true ;
break ;};};if !_gbbcd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_ffcb );
_fdeg ++;};};if _fdeg !=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_fdeg ,_beba ,_bcbf );
};return _abaf .Bytes (),_fdeg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func _ddaf (_abab _ea .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bdeaa :=NewPdfColorspaceSpecialIndexed ();if _dedcd ,_gegcd :=_abab .(*_ea .PdfIndirectObject );_gegcd {_bdeaa ._cgced =_dedcd ;
};_abab =_ea .TraceToDirectObject (_abab );_bcfeg ,_fdgca :=_abab .(*_ea .PdfObjectArray );if !_fdgca {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcfeg .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_abab =_bcfeg .Get (0);_bbfc ,_fdgca :=_abab .(*_ea .PdfObjectName );if !_fdgca {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bbfc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_abab =_bcfeg .Get (1);_fdbb ,_bbbe :=DetermineColorspaceNameFromPdfObject (_abab );if _bbbe !=nil {return nil ,_bbbe ;};if _fdbb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fdbb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ca .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fdbb );
return nil ,_gebg ;};_gcda ,_bbbe :=NewPdfColorspaceFromPdfObject (_abab );if _bbbe !=nil {return nil ,_bbbe ;};_bdeaa .Base =_gcda ;_abab =_bcfeg .Get (2);_ffdad ,_bbbe :=_ea .GetNumberAsInt64 (_abab );if _bbbe !=nil {return nil ,_bbbe ;};if _ffdad > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_bdeaa .HiVal =int (_ffdad );_abab =_bcfeg .Get (3);_bdeaa .Lookup =_abab ;_abab =_ea .TraceToDirectObject (_abab );var _bdbc []byte ;if _bgeb ,_aede :=_abab .(*_ea .PdfObjectString );_aede {_bdbc =_bgeb .Bytes ();_ca .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bdbc );
}else if _gbeg ,_dcdff :=_abab .(*_ea .PdfObjectStream );_dcdff {_ca .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_abab .String ());_ca .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gbeg .Stream ),_gbeg .Stream );
_fdgd ,_gcafa :=_ea .DecodeStream (_gbeg );if _gcafa !=nil {return nil ,_gcafa ;};_ca .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_fdgd ),_fdgd );_bdbc =_fdgd ;}else {_ca .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_abab );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bdbc )< _bdeaa .Base .GetNumComponents ()*(_bdeaa .HiVal +1){_ca .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ca .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bdbc ),_bdeaa .Base .GetNumComponents (),_bdeaa .HiVal );
}else {_bdbc =_bdbc [:_bdeaa .Base .GetNumComponents ()*(_bdeaa .HiVal +1)];};_bdeaa ._afgda =_bdbc ;return _bdeaa ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gabbd ,_beecf :=_gce .ParsePdfTime (dateStr );if _beecf !=nil {return PdfDate {},_beecf ;};return NewPdfDateFromTime (_gabbd );};func _bdaf (_eggc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_eggc }};


// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_feeeg *DSS )GetContainingPdfObject ()_ea .PdfObject {return _feeeg ._egee };

// B returns the value of the B component of the color.
func (_egg *PdfColorLab )B ()float64 {return _egg [2]};type pdfFontType3 struct{fontCommon ;_cbfed *_ea .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _ea .PdfObject ;Encoding _ea .PdfObject ;FontBBox _ea .PdfObject ;FontMatrix _ea .PdfObject ;FirstChar _ea .PdfObject ;LastChar _ea .PdfObject ;Widths _ea .PdfObject ;Resources _ea .PdfObject ;_aegce map[_ge .CharCode ]float64 ;_gccf _ge .TextEncoder ;
};

// IsFitWindow returns the value of the fitWindow flag.
func (_bdfdd *ViewerPreferences )IsFitWindow ()bool {if _bdfdd ._fedgc ==nil {return false ;};return *_bdfdd ._fedgc ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fccb *OutlineItem )ToPdfObject ()_ea .PdfObject {_ecgag ,_ :=_fccb .ToPdfOutlineItem ();return _ecgag .ToPdfObject ();};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_fced *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fced .fontCommon };

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_eaf *PdfReader )newPdfActionHideFromDict (_dfa *_ea .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dfa .Get ("\u0054"),H :_dfa .Get ("\u0048")},nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_ea .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_bgbd *_ea .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fdgb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if _fdgb .Alternate ==nil {if _fdgb .N ==1{_dde :=NewPdfColorspaceDeviceGray ();return _dde .ColorFromPdfObjects (objects );}else if _fdgb .N ==3{_ecadg :=NewPdfColorspaceDeviceRGB ();
return _ecadg .ColorFromPdfObjects (objects );}else if _fdgb .N ==4{_caeb :=NewPdfColorspaceDeviceCMYK ();return _caeb .ColorFromPdfObjects (objects );}else {return nil ,_dc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fdgb .Alternate .ColorFromPdfObjects (objects );};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cfbed *_ea .PdfIndirectObject ;_ddeac *_ea .PdfIndirectObject ;_bcgdg map[_ea .PdfObject ]struct{};_fgbeb []*_ea .PdfIndirectObject ;_cgdbdb []_ea .PdfObject ;_efaca map[_ea .PdfObject ]struct{};_ggffc []*_ea .PdfIndirectObject ;
_cccfg *PdfOutlineTreeNode ;_dacfd *_ea .PdfObjectDictionary ;_ccddd []_ea .PdfObject ;_dcca *_ea .PdfIndirectObject ;_daad *_f .Writer ;_gfecb int64 ;_dgbdf error ;_afcgd *_ea .PdfCrypt ;_cefgg *_ea .PdfObjectDictionary ;_eadec *_ea .PdfIndirectObject ;
_bfcab *_ea .PdfObjectArray ;_cedb _ea .Version ;_dfcee *bool ;_bbfagd map[_ea .PdfObject ][]*_ea .PdfObjectDictionary ;_ccedg *PdfAcroForm ;_eggf *Names ;_fgeaf Optimizer ;_edabfg StandardApplier ;_gggee map[int ]crossReference ;_bgbf int64 ;ObjNumOffset int ;
_eefcgg bool ;_dbge _ea .XrefTable ;_abcdg int64 ;_fbccg int64 ;_ebfca map[_ea .PdfObject ]int64 ;_eedfe map[_ea .PdfObject ]struct{};_edcec string ;_ggegf string ;_aaege []*PdfOutputIntent ;_abdf bool ;_fgac ,_abbcf string ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bacg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _dc .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dedc :=field .V ;if _dedc ==nil {return _dc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bgedc :=pageNum -1;
if _bgedc < 0||_bgedc > len (_bacg ._efbd )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gcab :=_bacg .Reader .PageList [_bgedc ];field .P =_gcab .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ea .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gcab .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bacg ._agd ==_bacg ._gcaa .AcroForm {_bacg ._agd =_bacg .Reader .AcroForm ;};_gfa :=_bacg ._agd ;if _gfa ==nil {_gfa =NewPdfAcroForm ();};_gfa .SigFlags =_ea .MakeInteger (3);if _gfa .NeedAppearances !=nil {_gfa .NeedAppearances =nil ;
};_aabc :=append (_gfa .AllFields (),field .PdfField );_gfa .Fields =&_aabc ;_bacg .ReplaceAcroForm (_gfa );_bacg .UpdatePage (_gcab );_bacg ._efbd [_bgedc ]=_gcab ;if _ ,_adcc :=field .V .GetDocMDPPermission ();_adcc {_bacg ._fgb =NewPermissions (field .V );
};return nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gbdbf :=PdfWriter {};_gbdbf ._efaca =map[_ea .PdfObject ]struct{}{};_gbdbf ._cgdbdb =[]_ea .PdfObject {};_gbdbf ._bbfagd =map[_ea .PdfObject ][]*_ea .PdfObjectDictionary {};_gbdbf ._eedfe =map[_ea .PdfObject ]struct{}{};
_gbdbf ._cedb .Major =1;_gbdbf ._cedb .Minor =3;_agfbbg :=_ea .MakeDict ();_fdbeae :=[]struct{_eagbbda _ea .PdfObjectName ;_aebdg string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_afgad ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bcgcd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_eecab ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_eefdg ()},{"\u0054\u0069\u0074l\u0065",_ffedd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_beaed ()}};
for _ ,_acccf :=range _fdbeae {if _acccf ._aebdg !=""{_agfbbg .Set (_acccf ._eagbbda ,_ea .MakeString (_acccf ._aebdg ));};};if _dgcdca :=_fdbda ();!_dgcdca .IsZero (){if _bcbbg ,_ebcaf :=NewPdfDateFromTime (_dgcdca );_ebcaf ==nil {_agfbbg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bcbbg .ToPdfObject ());
};};if _cbaeg :=_fgecb ();!_cbaeg .IsZero (){if _ageccc ,_faega :=NewPdfDateFromTime (_cbaeg );_faega ==nil {_agfbbg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ageccc .ToPdfObject ());};};_begef :=_ea .PdfIndirectObject {};_begef .PdfObject =_agfbbg ;
_gbdbf ._dcca =&_begef ;_gbdbf .addObject (&_begef );_dfcc :=_ea .PdfIndirectObject {};_daegcd :=_ea .MakeDict ();_daegcd .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dfcc .PdfObject =_daegcd ;_gbdbf ._cfbed =&_dfcc ;
_gbdbf .addObject (_gbdbf ._cfbed );_fgfec ,_ddgeb :=_ffcbf ("\u0077");if _ddgeb !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgeb );};_gbdbf ._edcec =_fgfec ;_afdbc :=_ea .PdfIndirectObject {};_bdbad :=_ea .MakeDict ();_bdbad .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0050\u0061\u0067e\u0073"));
_dfagag :=_ea .PdfObjectArray {};_bdbad .Set ("\u004b\u0069\u0064\u0073",&_dfagag );_bdbad .Set ("\u0043\u006f\u0075n\u0074",_ea .MakeInteger (0));_afdbc .PdfObject =_bdbad ;_gbdbf ._ddeac =&_afdbc ;_gbdbf ._bcgdg =map[_ea .PdfObject ]struct{}{};_gbdbf ._fgbeb =[]*_ea .PdfIndirectObject {};
_gbdbf .addObject (_gbdbf ._ddeac );_daegcd .Set ("\u0050\u0061\u0067e\u0073",&_afdbc );_gbdbf ._dacfd =_daegcd ;_ca .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dfcc );return _gbdbf ;};func (_df *PdfReader )newPdfActionLaunchFromDict (_aae *_ea .PdfObjectDictionary )(*PdfActionLaunch ,error ){_eag ,_cgaf :=_cfgb (_aae .Get ("\u0046"));
if _cgaf !=nil {return nil ,_cgaf ;};return &PdfActionLaunch {Win :_aae .Get ("\u0057\u0069\u006e"),Mac :_aae .Get ("\u004d\u0061\u0063"),Unix :_aae .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_aae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eag },nil ;
};func (_fadc *LTV )getCRLs (_dfeca []*_fgg .Certificate )([][]byte ,error ){_afgb :=make ([][]byte ,0,len (_dfeca ));for _ ,_acaba :=range _dfeca {for _ ,_aedec :=range _acaba .CRLDistributionPoints {if _fadc .CertClient .IsCA (_acaba ){continue ;};_dgdbb ,_acaff :=_fadc .CRLClient .MakeRequest (_aedec ,_acaba );
if _acaff !=nil {_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_acaff );continue ;};_afgb =append (_afgb ,_dgdbb );};};return _afgb ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_gabgbb *pdfSignDictionary )GetSubFilter ()string {_becfb :=_gabgbb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _becfb ==nil {return "";};if _aegbb ,_gfgggb :=_ea .GetNameVal (_becfb );_gfgggb {return _aegbb ;};return "";};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// Encoder returns the font's text encoder.
func (_bfaac pdfFontType3 )Encoder ()_ge .TextEncoder {return _bfaac ._gccf };

// GetAction returns the PDF action for the annotation link.
func (_gba *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gba ._cbf !=nil {return _gba ._cbf ,nil ;};if _gba .A ==nil {return nil ,nil ;};if _gba ._cdf ==nil {return nil ,nil ;};_gafd ,_aac :=_gba ._cdf .loadAction (_gba .A );if _aac !=nil {return nil ,_aac ;
};_gba ._cbf =_gafd ;return _gba ._cbf ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bagff *PdfOutlineTreeNode )GetContext ()PdfModel {if _abbee ,_abee :=_bagff ._bdddb .(*PdfOutline );_abee {return _abbee ;};if _cbgafd ,_ffdab :=_bagff ._bdddb .(*PdfOutlineItem );_ffdab {return _cbgafd ;};_ca .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ea .PdfObject ;RichMediaContent _ea .PdfObject ;};

// SetViewArea sets the value of the viewArea.
func (_aaacb *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_aaacb ._fffaeg =viewArea };

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_deecc *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ea .StreamEncoder ,error ){_dded ,_abegd :=_deecc ._bedae .(*_ea .PdfObjectStream );if !_abegd {_ca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_deecc ._bedae );
return nil ,nil ,_ea .ErrTypeError ;};_baga ,_bcec :=_ea .DecodeStream (_dded );if _bcec !=nil {_ca .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bcec );
return nil ,nil ,_bcec ;};_eefaa ,_bcec :=_ea .NewEncoderFromStream (_dded );if _bcec !=nil {_ca .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bcec );
return nil ,nil ,_bcec ;};return _baga ,_eefaa ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cbge pdfCIDFontType0 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){return _gf .CharMetrics {Wx :_cbge ._debg },true ;};

// G returns the value of the green component of the color.
func (_ebfc *PdfColorDeviceRGB )G ()float64 {return _ebfc [1]};func (_fgde *PdfAcroForm )fillImageWithAppearance (_afccf FieldImageProvider ,_gdfef FieldAppearanceGenerator )error {if _fgde ==nil {return nil ;};_gbcac ,_dbecd :=_afccf .FieldImageValues ();
if _dbecd !=nil {return _dbecd ;};for _ ,_bfccf :=range _fgde .AllFields (){_ggdb :=_bfccf .PartialName ();_ggddg ,_fcdcc :=_gbcac [_ggdb ];if !_fcdcc {if _ccfa ,_gaef :=_bfccf .FullName ();_gaef ==nil {_ggddg ,_fcdcc =_gbcac [_ccfa ];};};if !_fcdcc {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ggdb );
continue ;};switch _cgceb :=_bfccf .GetContext ().(type ){case *PdfFieldButton :if _cgceb .IsPush (){_cgceb .SetFillImage (_ggddg );};};if _gdfef ==nil {continue ;};for _ ,_gaag :=range _bfccf .Annotations {_bcadcc ,_dfdba :=_gdfef .GenerateAppearanceDict (_fgde ,_bfccf ,_gaag );
if _dfdba !=nil {return _dfdba ;};_gaag .AP =_bcadcc ;_gaag .ToPdfObject ();};};return nil ;};

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_ceadc *bool ;_bfgeb *bool ;_acgcg *bool ;_fedgc *bool ;_becd *bool ;_efadb *bool ;_edegb NonFullScreenPageMode ;_dadac Direction ;_fffaeg PageBoundary ;_bbgad PageBoundary ;_ebdf PageBoundary ;_bbgef PageBoundary ;_gbce PrintScaling ;
_accbb Duplex ;_eccg *bool ;_gcffa []int ;_cbgea int ;};func (_fdgg *PdfReader )loadAction (_ccff _ea .PdfObject )(*PdfAction ,error ){if _dcdf ,_ead :=_ea .GetIndirect (_ccff );_ead {_bcega ,_dgbdc :=_fdgg .newPdfActionFromIndirectObject (_dcdf );if _dgbdc !=nil {return nil ,_dgbdc ;
};return _bcega ,nil ;}else if !_ea .IsNullObject (_ccff ){return nil ,_dc .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_dfed *pdfFontSimple )getFontEncoding ()(_adgg string ,_ggdgb map[_ge .CharCode ]_ge .GlyphName ,_cgef error ){_adgg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _gfcb ,_fcdee :=_bcca [_dfed ._ceac ];
_fcdee {_adgg =_gfcb ;}else if _dfed .fontFlags ()&_dcbbed !=0{for _accc ,_fgda :=range _bcca {if _dgb .Contains (_dfed ._ceac ,_accc ){_adgg =_fgda ;break ;};};};if _dfed .Encoding ==nil {return _adgg ,nil ,nil ;};switch _gcdf :=_dfed .Encoding .(type ){case *_ea .PdfObjectName :return string (*_gcdf ),nil ,nil ;
case *_ea .PdfObjectDictionary :_dfdfg ,_edeae :=_ea .GetName (_gcdf .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _edeae {_adgg =_dfdfg .String ();};if _befff :=_gcdf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_befff !=nil {_aegf ,_egcbd :=_ea .GetArray (_befff );if !_egcbd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gcdf ,_gcdf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_ea .ErrTypeError ;};_ggdgb ,_cgef =_ge .FromFontDifferences (_aegf );};return _adgg ,_ggdgb ,_cgef ;default:_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_dfed .Encoding ,_dfed .Encoding );
return "",nil ,_ea .ErrTypeError ;};};

// GetOCProperties returns the optional content properties PdfObject.
func (_gfccg *PdfReader )GetOCProperties ()(_ea .PdfObject ,error ){_fefgg :=_gfccg ._gbggd ;_gfgca :=_fefgg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gfgca =_ea .ResolveReference (_gfgca );if !_gfccg ._bdddd {_cdac :=_gfccg .traverseObjectData (_gfgca );
if _cdac !=nil {return nil ,_cdac ;};};return _gfgca ,nil ;};func (_dabg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dabg ._eafg };

// Encoder returns the font's text encoder.
func (_deaf *pdfFontSimple )Encoder ()_ge .TextEncoder {if _deaf ._ggbg !=nil {return _deaf ._ggbg ;};if _deaf ._gcgef !=nil {return _deaf ._gcgef ;};_gbbcc ,_ :=_ge .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gbbcc ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ea .PdfObject ;Dest _ea .PdfObject ;H _ea .PdfObject ;PA _ea .PdfObject ;QuadPoints _ea .PdfObject ;BS _ea .PdfObject ;_cbf *PdfAction ;_cdf *PdfReader ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ea .PdfObject ,error );};func _gbgfa (_ggfdb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_adeb ,_abcdb :=_ea .GetDict (_ggfdb .AP );if !_abcdb {return nil ,nil ,_dc .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _adeb ==nil {return nil ,nil ,nil ;};_daa ,_abcdb :=_ea .GetArray (_ggfdb .Rect );if !_abcdb ||_daa .Len ()!=4{return nil ,nil ,_dc .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eega ,_ddcfd :=NewPdfRectangle (*_daa );
if _ddcfd !=nil {return nil ,nil ,_ddcfd ;};_bgcd :=_ea .TraceToDirectObject (_adeb .Get ("\u004e"));switch _bagg :=_bgcd .(type ){case *_ea .PdfObjectStream :_gfggg :=_bagg ;_cggb ,_bfbc :=NewXObjectFormFromStream (_gfggg );return _cggb ,_eega ,_bfbc ;
case *_ea .PdfObjectDictionary :_gbfbbe :=_bagg ;if _gbfbbe ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _fgdge _ea .PdfObject ;_bebff ,_cabf :=_ea .GetName (_ggfdb .AS );if _cabf {_fgdge =_gbfbbe .Get (*_bebff );}else {_dgcf :=_ggfdb ._eab .PdfObject .(*_ea .PdfObjectDictionary );if _dgcf ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _dcfd :=_dgcf .Get ("\u0056");_dcfd !=nil {_fgdge =_gbfbbe .Get (_ea .PdfObjectName (_dcfd .String ()));};};if _fgdge ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_edab ,_cabf :=_ea .GetStream (_fgdge );if !_cabf {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_bebff );
return nil ,nil ,_dc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_edea ,_cgdee :=NewXObjectFormFromStream (_edab );return _edea ,_eega ,_cgdee ;};_ca .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bgcd );
return nil ,nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_ebdc _ea .PdfObject ;};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_ecea *KDict )GetPageNumber ()int64 {return _ecea ._bfgae };

// GetMCID returns the MCID of the KValue.
func (_eeecc *KValue )GetMCID ()*int {return _eeecc ._fffff };

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cggf *VRI )ToPdfObject ()*_ea .PdfObjectDictionary {_ffcg :=_ea .MakeDict ();_ffcg .SetIfNotNil (_ea .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gfbdd (_cggf .Cert ));_ffcg .SetIfNotNil (_ea .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gfbdd (_cggf .OCSP ));
_ffcg .SetIfNotNil (_ea .PdfObjectName ("\u0043\u0052\u004c"),_gfbdd (_cggf .CRL ));_ffcg .SetIfNotNil ("\u0054\u0055",_cggf .TU );_ffcg .SetIfNotNil ("\u0054\u0053",_cggf .TS );return _ffcg ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_eegfb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dfbgcd :=_eegfb .actualFont ();if _dfbgcd ==nil {_ca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_eegfb ._gbee );
return _gf .CharMetrics {},false ;};if _aggd ,_abff :=_dfbgcd .GetRuneMetrics (r );_abff {return _aggd ,true ;};if _cagcb ,_aefcf :=_eegfb .GetFontDescriptor ();_aefcf ==nil &&_cagcb !=nil {return _gf .CharMetrics {Wx :_cagcb ._geaf },true ;};_ca .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eegfb );
return _gf .CharMetrics {},false ;};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_ea .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _ea .PdfObject ;ClassMap *_ea .PdfObjectDictionary ;_begdf *_ea .PdfIndirectObject ;_cdegf []_ebb .UUID ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gfb *PdfAppender )UpdatePage (page *PdfPage ){_gfb .updateObjectsDeep (page .ToPdfObject (),nil )};

// ToPdfObject implements interface PdfModel.
func (_bedd *PdfAnnotationPopup )ToPdfObject ()_ea .PdfObject {_bedd .PdfAnnotation .ToPdfObject ();_feaeg :=_bedd ._eab ;_affc :=_feaeg .PdfObject .(*_ea .PdfObjectDictionary );_affc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0050\u006f\u0070u\u0070"));
_affc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bedd .Parent );_affc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bedd .Open );return _feaeg ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_effe *PdfOutputIntent )GetContainingPdfObject ()_ea .PdfObject {return _effe ._eagfc };func (_gbdfa *PdfShading )getShadingDict ()(*_ea .PdfObjectDictionary ,error ){_adgba :=_gbdfa ._feebc ;if _bcedb ,_caefc :=_adgba .(*_ea .PdfIndirectObject );
_caefc {_bedf ,_gagd :=_bcedb .PdfObject .(*_ea .PdfObjectDictionary );if !_gagd {return nil ,_ea .ErrTypeError ;};return _bedf ,nil ;}else if _cadag ,_fbcge :=_adgba .(*_ea .PdfObjectStream );_fbcge {return _cadag .PdfObjectDictionary ,nil ;}else if _aaegg ,_fecab :=_adgba .(*_ea .PdfObjectDictionary );
_fecab {return _aaegg ,nil ;}else {_ca .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_ea .ErrTypeError ;
};};func (_ebc *PdfReader )newPdfAnnotationCaretFromDict (_adede *_ea .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dacf :=PdfAnnotationCaret {};_gbac ,_bfbe :=_ebc .newPdfAnnotationMarkupFromDict (_adede );if _bfbe !=nil {return nil ,_bfbe ;};_dacf .PdfAnnotationMarkup =_gbac ;
_dacf .RD =_adede .Get ("\u0052\u0044");_dacf .Sy =_adede .Get ("\u0053\u0079");return &_dacf ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cagg *PdfFont )ToPdfObject ()_ea .PdfObject {if _cagg ._gbee ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ea .MakeNull ();
};return _cagg ._gbee .ToPdfObject ();};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_ea .PdfObjectName ;P *_ea .PdfObjectInteger ;V *_ea .PdfObjectName ;};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_abggb *KDict )GenerateRandomID ()string {_adbdd ,_ffffd :=_ebb .NewUUID ();if _ffffd !=nil {_ca .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_ffffd );};if _adbdd !=_ebb .Nil {_dfgf :=_adbdd .String ();
_abggb .ID =_ea .MakeString (_dfgf );return _dfgf ;};return "";};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_abggd *PdfPage )AddContentStreamByString (contentStr string )error {_geba ,_ddgec :=_ea .MakeStream ([]byte (contentStr ),_ea .NewFlateEncoder ());if _ddgec !=nil {return _ddgec ;};if _abggd .Contents ==nil {_abggd .Contents =_geba ;}else {_dcdc :=_ea .TraceToDirectObject (_abggd .Contents );
_fgfgf ,_efgdd :=_dcdc .(*_ea .PdfObjectArray );if !_efgdd {_fgfgf =_ea .MakeArray (_dcdc );};_fgfgf .Append (_geba );_abggd .Contents =_fgfgf ;};return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_abdgc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject converts the font to a PDF representation.
func (_edeb *pdfFontType0 )ToPdfObject ()_ea .PdfObject {if _edeb ._gaeb ==nil {_edeb ._gaeb =&_ea .PdfIndirectObject {};};_gbbaf :=_edeb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_edeb ._gaeb .PdfObject =_gbbaf ;if _edeb .Encoding !=nil {_gbbaf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_edeb .Encoding );
}else if _edeb ._dcdd !=nil {_gbbaf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_edeb ._dcdd .ToPdfObject ());};if _edeb .DescendantFont !=nil {_gbbaf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ea .MakeArray (_edeb .DescendantFont .ToPdfObject ()));
};return _edeb ._gaeb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aebbg *Permissions )GetContainingPdfObject ()_ea .PdfObject {return _aebbg ._effgg };

// PrintArea returns the value of the printArea.
func (_fcfg *ViewerPreferences )PrintArea ()PageBoundary {return _fcfg ._ebdf };func (_aaca fontCommon )fontFlags ()int {if _aaca ._eafg ==nil {return 0;};return _aaca ._eafg ._bgcde ;};func _ebbab ()*modelManager {_dbdb :=modelManager {};_dbdb ._fggf =map[PdfModel ]_ea .PdfObject {};
_dbdb ._eeadb =map[_ea .PdfObject ]PdfModel {};_dbdb ._cfdeg =_d .RWMutex {};_dbdb ._afaa =_d .RWMutex {};return &_dbdb ;};func (_ebgfg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_gaca *PdfPage )setContainer (_cfec *_ea .PdfIndirectObject ){_cfec .PdfObject =_gaca ._bbffd ;
_gaca ._dfgcd =_cfec ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_deeda *pdfCIDFontType0 )ToPdfObject ()_ea .PdfObject {return _ea .MakeNull ()};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ea .PdfObject ;FontFamily _ea .PdfObject ;FontStretch _ea .PdfObject ;FontWeight _ea .PdfObject ;Flags _ea .PdfObject ;FontBBox _ea .PdfObject ;ItalicAngle _ea .PdfObject ;Ascent _ea .PdfObject ;Descent _ea .PdfObject ;
Leading _ea .PdfObject ;CapHeight _ea .PdfObject ;XHeight _ea .PdfObject ;StemV _ea .PdfObject ;StemH _ea .PdfObject ;AvgWidth _ea .PdfObject ;MaxWidth _ea .PdfObject ;MissingWidth _ea .PdfObject ;FontFile _ea .PdfObject ;FontFile2 _ea .PdfObject ;FontFile3 _ea .PdfObject ;
CharSet _ea .PdfObject ;_bgcde int ;_geaf float64 ;*fontFile ;_dfafc *_gf .TtfType ;

// Additional entries for CIDFonts
Style _ea .PdfObject ;Lang _ea .PdfObject ;FD _ea .PdfObject ;CIDSet _ea .PdfObject ;_acegb *_ea .PdfIndirectObject ;};

// ToPdfObject converts the structure tree root to a PDF object.
func (_egafa *StructTreeRoot )ToPdfObject ()_ea .PdfObject {_ecdg :=_egafa ._begdf ;if _ecdg ==nil {_ecdg =&_ea .PdfIndirectObject {};_ecdg .PdfObject =_ea .MakeDict ();};_aebd :=_ecdg .PdfObject .(*_ea .PdfObjectDictionary );var _gffb _ea .PdfObject ;
if len (_egafa .K )==1{_gffb =_ea .MakeIndirectObject (_egafa .K [0].ToPdfObject ());}else {_edfg :=_ea .MakeArray ();for _ ,K :=range _egafa .K {_edfg .Append (_ea .MakeIndirectObject (K .ToPdfObject ()));};_gffb =_edfg ;};var (_ddgd =[]_ea .PdfObject {};
_gagfa =map[_ea .PdfObject ][]_ea .PdfObject {};_gefad =map[string ]_ea .PdfObject {};);_addbac (_gffb ,_ecdg ,_gagfa ,_gefad ,&_ddgd );_aebd .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_aebd .Set ("\u004b",_gffb );if _egafa .IDTree !=nil {_aebd .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_ea .MakeIndirectObject (_egafa .IDTree .ToPdfObject ()));}else if len (_gefad )> 0{_eeff :=_ea .MakeArray ();_ffgaga :=make ([]string ,0,len (_gefad ));
for _fdagg :=range _gefad {_ffgaga =append (_ffgaga ,_fdagg );};_cd .Strings (_ffgaga );for _ ,_baaab :=range _ffgaga {_eeff .Append (_ea .MakeString (_baaab ));_eeff .Append (_gefad [_baaab ]);};_egafa .IDTree =&IDTree {Names :_eeff ,Limits :_ea .MakeArray (_ea .MakeString (_ffgaga [0]),_ea .MakeString (_ffgaga [len (_ffgaga )-1]))};
_aebd .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_ea .MakeIndirectObject (_egafa .IDTree .ToPdfObject ()));};if _egafa .ParentTree !=nil {_aebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_ea .MakeIndirectObject (_egafa .ParentTree ));
}else if len (_gagfa )> 0||len (_ddgd )> 0{_fcdgc :=_ea .MakeArray ();_edfc :=0;for _bbbd ,_fgbgc :=range _gagfa {_gfbda :=_ea .MakeArray ();for _ ,_dgacg :=range _fgbgc {_gfbda .Append (_dgacg );};_bfega :=_ea .MakeInteger (int64 (_edfc ));_fcdgc .Append (_bfega );
_fcdgc .Append (_ea .MakeIndirectObject (_gfbda ));if _geda ,_dgege :=_ea .GetIndirect (_bbbd );_dgege {if _abfef ,_efbbc :=_ea .GetDict (_geda .PdfObject );_efbbc {_gega :=_abfef .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _gega !=nil {if _dgeab ,_ebcce :=_ea .GetIntVal (_gega );_ebcce {if _edfc < _dgeab {_abfef .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bfega );};};}else {_abfef .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bfega );
};};};_edfc ++;};_gdbdd :=func (_aedgbe _ea .PdfObject ,_bacbd *_ea .PdfObjectDictionary )bool {if _gagba :=_bacbd .Get ("\u004f\u0062\u006a");_gagba !=nil {if _ccfad ,_cgfeg :=_ea .GetDict (_gagba );_cgfeg {_fageg :=_ccfad .Get ("\u0054\u0079\u0070\u0065");
_eebc :=_ccfad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fageg !=nil &&_fageg .String ()=="\u0041\u006e\u006eo\u0074"&&_eebc !=nil &&_eebc .String ()=="\u004c\u0069\u006e\u006b"{_ccbff :=_ea .MakeInteger (int64 (_edfc ));_ccfad .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ccbff );
_fcdgc .Append (_ccbff );_fcdgc .Append (_aedgbe );_edfc ++;return true ;};};};return false ;};for _ ,_bgebgf :=range _ddgd {if _bedbd ,_efccd :=_ea .GetDict (_bgebgf );_efccd {if _bgebf :=_bedbd .Get ("\u0053");_bgebf !=nil {if _adfba ,_aggea :=_ea .GetNameVal (_bgebf );
_aggea &&_adfba ==string (StructureTypeLink ){if _bbefd :=_bedbd .Get ("\u004b");_bbefd !=nil {if _cfcgb ,_cggae :=_ea .GetArray (_bbefd );_cggae {for _ ,_fdfafa :=range _cfcgb .Elements (){if _ddebg ,_aecba :=_ea .GetDict (_fdfafa );_aecba {_gdbdd (_bgebgf ,_ddebg );
};};}else if _abeef ,_bcafb :=_ea .GetDict (_bbefd );_bcafb {_gdbdd (_bgebgf ,_abeef );};};};};};};_egafa .ParentTree =_ea .MakeDict ();_egafa .ParentTree .Set ("\u004e\u0075\u006d\u0073",_fcdgc );_egafa .ParentTreeNextKey =int64 (_edfc );_aebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_ea .MakeIndirectObject (_egafa .ParentTree ));
};_aebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_ea .MakeInteger (_egafa .ParentTreeNextKey ));if _egafa .RoleMap !=nil {_aebd .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_egafa .RoleMap );
};if _egafa .ClassMap !=nil {_aebd .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_egafa .ClassMap );};return _ecdg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dgbc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dgbc .Base .GetNumComponents ();_bcad :=int (vals [0])*N ;
if _bcad < 0||(_bcad +N -1)>=len (_dgbc ._afgda ){_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcad );return nil ,ErrColorOutOfRange ;};_ffcea :=_dgbc ._afgda [_bcad :_bcad +N ];
var _ecae []float64 ;for _ ,_fdgbg :=range _ffcea {_ecae =append (_ecae ,float64 (_fdgbg )/255.0);};_eedc ,_ebad :=_dgbc .Base .ColorFromFloats (_ecae );if _ebad !=nil {return nil ,_ebad ;};return _eedc ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_bcaeg *PdfFieldSignature )ToPdfObject ()_ea .PdfObject {if _bcaeg .PdfAnnotationWidget !=nil {_bcaeg .PdfAnnotationWidget .ToPdfObject ();};_bcaeg .PdfField .ToPdfObject ();_gcfad :=_bcaeg ._gegceb ;_aadf :=_gcfad .PdfObject .(*_ea .PdfObjectDictionary );
_aadf .SetIfNotNil ("\u0046\u0054",_ea .MakeName ("\u0053\u0069\u0067"));_aadf .SetIfNotNil ("\u004c\u006f\u0063\u006b",_bcaeg .Lock );_aadf .SetIfNotNil ("\u0053\u0056",_bcaeg .SV );if _bcaeg .V !=nil {_aadf .SetIfNotNil ("\u0056",_bcaeg .V .ToPdfObject ());
};return _gcfad ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_eege *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_dc .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_aeafb ,_dfgb :=_dcc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abgae ,img ._affe );if _dfgb !=nil {return img ,_dfgb ;};_fbgd ,_dfgb :=_dcc .GrayConverter .Convert (_aeafb );if _dfgb !=nil {return img ,_dfgb ;
};return _aefbb (_fbgd .Base ()),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_bgfb *PdfColorspaceLab )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfaga ,_dfbgg :=_ea .GetNumbersAsFloat (objects );
if _dfbgg !=nil {return nil ,_dfbgg ;};return _bgfb .ColorFromFloats (_dfaga );};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_facg *PdfColorspaceCalGray )ToPdfObject ()_ea .PdfObject {_aedg :=&_ea .PdfObjectArray {};_aedg .Append (_ea .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cdda :=_ea .MakeDict ();if _facg .WhitePoint !=nil {_cdda .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ea .MakeArray (_ea .MakeFloat (_facg .WhitePoint [0]),_ea .MakeFloat (_facg .WhitePoint [1]),_ea .MakeFloat (_facg .WhitePoint [2])));
}else {_ca .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _facg .BlackPoint !=nil {_cdda .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ea .MakeArray (_ea .MakeFloat (_facg .BlackPoint [0]),_ea .MakeFloat (_facg .BlackPoint [1]),_ea .MakeFloat (_facg .BlackPoint [2])));
};_cdda .Set ("\u0047\u0061\u006dm\u0061",_ea .MakeFloat (_facg .Gamma ));_aedg .Append (_cdda );if _facg ._adbf !=nil {_facg ._adbf .PdfObject =_aedg ;return _facg ._adbf ;};return _aedg ;};func (_dafe *pdfFontSimple )baseFields ()*fontCommon {return &_dafe .fontCommon };


// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dae :=NewPdfAnnotation ();_dbg :=&PdfAnnotationPolygon {};_dbg .PdfAnnotation =_dae ;_dbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dae .SetContext (_dbg );return _dbg ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_abb :=NewPdfAnnotation ();_bgdg :=&PdfAnnotationLink {};_bgdg .PdfAnnotation =_abb ;_abb .SetContext (_bgdg );return _bgdg ;};

// ToPdfObject implements interface PdfModel.
func (_dbf *PdfAnnotationPrinterMark )ToPdfObject ()_ea .PdfObject {_dbf .PdfAnnotation .ToPdfObject ();_fbfe :=_dbf ._eab ;_cgba :=_fbfe .PdfObject .(*_ea .PdfObjectDictionary );_cgba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_cgba .SetIfNotNil ("\u004d\u004e",_dbf .MN );return _fbfe ;};

// Direction returns the value of the direction.
func (_gegeb *ViewerPreferences )Direction ()Direction {return _gegeb ._dadac };const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// AddOutlineTree adds outlines to a PDF file.
func (_abbdf *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_abbdf ._cccfg =outlineTree };

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_beaa *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bebb :=0.3*_beaa .R ()+0.59*_beaa .G ()+0.11*_beaa .B ();_bebb =_dgf .Min (_dgf .Max (_bebb ,0.0),1.0);return NewPdfColorDeviceGray (_bebb );};func (_dbgb *PdfReader )newPdfAnnotationInkFromDict (_bdcd *_ea .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gfdd :=PdfAnnotationInk {};
_eagba ,_cbae :=_dbgb .newPdfAnnotationMarkupFromDict (_bdcd );if _cbae !=nil {return nil ,_cbae ;};_gfdd .PdfAnnotationMarkup =_eagba ;_gfdd .InkList =_bdcd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gfdd .BS =_bdcd .Get ("\u0042\u0053");return &_gfdd ,nil ;
};func (_ffdge *PdfWriter )writeBytes (_aacfd []byte ){if _ffdge ._dgbdf !=nil {return ;};_ebeaa ,_bcgff :=_ffdge ._daad .Write (_aacfd );_ffdge ._gfecb +=int64 (_ebeaa );_ffdge ._dgbdf =_bcgff ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cea *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ea .PdfObjectArray ;Matrix *_ea .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gegceb :_ea .MakeIndirectObject (_ea .MakeDict ())}};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ea .PdfObject ;Open _ea .PdfObject ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_fgee :fonts ,CurrentFont :fonts [0]};};

// GetBorderWidth returns the border style's width.
func (_ddbf *PdfBorderStyle )GetBorderWidth ()float64 {if _ddbf .W ==nil {return 1;};return *_ddbf .W ;};func (_baee *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _baee ._eafg };

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_acca *PdfReader )GetIndirectObjectByNumber (number int )(_ea .PdfObject ,error ){_aafee ,_ddaaf :=_acca ._afedg .LookupByNumber (number );return _aafee ,_ddaaf ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cace pdfCIDFontType0 )GetCharMetrics (code _ge .CharCode )(_gf .CharMetrics ,bool ){_decef :=_cace ._debg ;if _ddecc ,_edaaf :=_cace ._bcgd [code ];_edaaf {_decef =_ddecc ;};return _gf .CharMetrics {Wx :_decef },true ;};func _faggf (_ecbc map[_gf .GID ]int ,_beeba uint16 )*_ea .PdfObjectArray {_bfdg :=&_ea .PdfObjectArray {};
_faaef :=_gf .GID (_beeba );for _cced :=_gf .GID (0);_cced < _faaef ;{_fccga ,_bdeaf :=_ecbc [_cced ];if !_bdeaf {_cced ++;continue ;};_fgca :=_cced ;for _abgf :=_fgca +1;_abgf < _faaef ;_abgf ++{if _eeadg ,_dcgc :=_ecbc [_abgf ];!_dcgc ||_fccga !=_eeadg {break ;
};_fgca =_abgf ;};_bfdg .Append (_ea .MakeInteger (int64 (_cced )));_bfdg .Append (_ea .MakeInteger (int64 (_fgca )));_bfdg .Append (_ea .MakeInteger (int64 (_fccga )));_cced =_fgca +1;};return _bfdg ;};func (_cfca *PdfReader )newPdfAnnotationCircleFromDict (_egfd *_ea .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_adgf :=PdfAnnotationCircle {};
_fbf ,_dda :=_cfca .newPdfAnnotationMarkupFromDict (_egfd );if _dda !=nil {return nil ,_dda ;};_adgf .PdfAnnotationMarkup =_fbf ;_adgf .BS =_egfd .Get ("\u0042\u0053");_adgf .IC =_egfd .Get ("\u0049\u0043");_adgf .BE =_egfd .Get ("\u0042\u0045");_adgf .RD =_egfd .Get ("\u0052\u0044");
return &_adgf ,nil ;};

// GetOutlineTree returns the outline tree.
func (_aeadf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _aeadf ._bbdf };

// GetPdfInfo returns the PDF info dictionary.
func (_bggfb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bdcg ,_faebe :=_bggfb .GetTrailer ();if _faebe !=nil {return nil ,_faebe ;};var _acgge *_ea .PdfObjectDictionary ;_cddcg :=_bdcg .Get ("\u0049\u006e\u0066\u006f");switch _ffaef :=_cddcg .(type ){case *_ea .PdfObjectReference :_eafcb :=_ffaef ;
_cddcg ,_faebe =_bggfb .GetIndirectObjectByNumber (int (_eafcb .ObjectNumber ));_cddcg =_ea .TraceToDirectObject (_cddcg );if _faebe !=nil {return nil ,_faebe ;};_acgge ,_ =_cddcg .(*_ea .PdfObjectDictionary );case *_ea .PdfObjectDictionary :_acgge =_ffaef ;
};if _acgge ==nil {return nil ,_dc .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ffbad ,_faebe :=NewPdfInfoFromObject (_acgge );if _faebe !=nil {return nil ,_faebe ;
};return _ffbad ,nil ;};var (StructureTypeUnknown StructureType ="";StructureTypeDocument StructureType ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart StructureType ="\u0050\u0061\u0072\u0074";StructureTypeArticle StructureType ="\u0041\u0072\u0074";
StructureTypeSection StructureType ="\u0053\u0065\u0063\u0074";StructureTypeDivision StructureType ="\u0044\u0069\u0076";StructureTypeBlockQuote StructureType ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption StructureType ="\u0043a\u0070\u0074\u0069\u006f\u006e";
StructureTypeTOC StructureType ="\u0054\u004f\u0043";StructureTypeTOCI StructureType ="\u0054\u004f\u0043\u0049";StructureTypeIndex StructureType ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural StructureType ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";
StructureTypePrivate StructureType ="\u0050r\u0069\u0076\u0061\u0074\u0065";);

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_aadbe *PdfPageResources )HasXObjectByName (keyName _ea .PdfObjectName )bool {_bcffa ,_ :=_aadbe .GetXObjectByName (keyName );return _bcffa !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_fafa *PdfAnnotationProjection )ToPdfObject ()_ea .PdfObject {_fafa .PdfAnnotation .ToPdfObject ();_dgcc :=_fafa ._eab ;_abaa :=_dgcc .PdfObject .(*_ea .PdfObjectDictionary );_fafa .PdfAnnotationMarkup .appendToPdfDictionary (_abaa );return _dgcc ;
};type pdfCIDFontType2 struct{fontCommon ;_ffgab *_ea .PdfIndirectObject ;_eaea _ge .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ea .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ea .PdfObject ;W _ea .PdfObject ;DW2 _ea .PdfObject ;W2 _ea .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ea .PdfObject ;_agcef map[_ge .CharCode ]float64 ;_dfdf float64 ;_ggaed map[rune ]int ;};func _dede (_bfaf _ea .PdfObject )(*PdfColorspaceICCBased ,error ){_cabd :=&PdfColorspaceICCBased {};if _afgfg ,_aabcb :=_bfaf .(*_ea .PdfIndirectObject );
_aabcb {_cabd ._cdcf =_afgfg ;};_bfaf =_ea .TraceToDirectObject (_bfaf );_agccg ,_eefg :=_bfaf .(*_ea .PdfObjectArray );if !_eefg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agccg .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_bfaf =_ea .TraceToDirectObject (_agccg .Get (0));_dcbe ,_eefg :=_bfaf .(*_ea .PdfObjectName );if !_eefg {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_dcbe !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bfaf =_agccg .Get (1);
_gegfa ,_eefg :=_ea .GetStream (_bfaf );if !_eefg {_ca .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bfaf );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ggcb :=_gegfa .PdfObjectDictionary ;_ddbbg ,_eefg :=_ggcb .Get ("\u004e").(*_ea .PdfObjectInteger );
if !_eefg {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ddbbg !=1&&*_ddbbg !=3&&*_ddbbg !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cabd .N =int (*_ddbbg );if _dafa :=_ggcb .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dafa !=nil {_cgbbg ,_afbe :=NewPdfColorspaceFromPdfObject (_dafa );if _afbe !=nil {return nil ,_afbe ;};_cabd .Alternate =_cgbbg ;};if _fecfc :=_ggcb .Get ("\u0052\u0061\u006eg\u0065");
_fecfc !=nil {_fecfc =_ea .TraceToDirectObject (_fecfc );_deac ,_bbbb :=_fecfc .(*_ea .PdfObjectArray );if !_bbbb {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _deac .Len ()!=2*_cabd .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_gdbf ,_bafb :=_deac .GetAsFloat64Slice ();if _bafb !=nil {return nil ,_bafb ;};_cabd .Range =_gdbf ;}else {_cabd .Range =make ([]float64 ,2*_cabd .N );for _dbcdg :=0;_dbcdg < _cabd .N ;_dbcdg ++{_cabd .Range [2*_dbcdg ]=0.0;_cabd .Range [2*_dbcdg +1]=1.0;
};};if _dfgba :=_ggcb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dfgba !=nil {_dfac ,_fdce :=_dfgba .(*_ea .PdfObjectStream );if !_fdce {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cabd .Metadata =_dfac ;};_fbaa ,_agce :=_ea .DecodeStream (_gegfa );if _agce !=nil {return nil ,_agce ;};_cabd .Data =_fbaa ;_cabd ._bdcda =_gegfa ;return _cabd ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_dcabg []byte ;_gfbc []uint32 ;_bffbf *_ea .PdfObjectStream ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cde .ReadSeeker )(*PdfReader ,error ){const _ggdgbf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fceba (rs ,&ReaderOpts {LazyLoad :true },false ,_ggdgbf );
};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_de *PdfAction )GetContext ()PdfModel {if _de ==nil {return nil ;};return _de ._fe ;};func _dafgd (_bdfb _ea .PdfObject )(map[_ge .CharCode ]float64 ,error ){if _bdfb ==nil {return nil ,nil ;};_cfffa ,_ddafd :=_ea .GetArray (_bdfb );if !_ddafd {return nil ,nil ;
};_bgdac :=map[_ge .CharCode ]float64 {};_badab :=_cfffa .Len ();for _gegg :=0;_gegg < _badab -1;_gegg ++{_dcbec :=_ea .TraceToDirectObject (_cfffa .Get (_gegg ));_gabgb ,_acdbd :=_ea .GetIntVal (_dcbec );if !_acdbd {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gegg ,_dcbec );
};_gegg ++;if _gegg > _badab -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cfffa );};_cgbbgg :=_ea .TraceToDirectObject (_cfffa .Get (_gegg ));
switch _cgbbgg .(type ){case *_ea .PdfObjectArray :_cbece ,_ :=_ea .GetArray (_cgbbgg );if _fafbg ,_ddadb :=_cbece .ToFloat64Array ();_ddadb ==nil {for _abcb :=0;_abcb < len (_fafbg );_abcb ++{_bgdac [_ge .CharCode (_gabgb +_abcb )]=_fafbg [_abcb ];};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegg ,_cgbbgg );
};case *_ea .PdfObjectInteger :_efggg ,_bacgaf :=_ea .GetIntVal (_cgbbgg );if !_bacgaf {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegg ,_cgbbgg );
};_gegg ++;if _gegg > _badab -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cfffa );};_dgec :=_cfffa .Get (_gegg );_ddgba ,_eefag :=_ea .GetNumberAsFloat (_dgec );
if _eefag !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegg ,_dgec );};for _afdge :=_gabgb ;_afdge <=_efggg ;
_afdge ++{_bgdac [_ge .CharCode (_afdge )]=_ddgba ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegg ,_cgbbgg );
};};return _bgdac ,nil ;};

// String implements interface PdfObject.
func (_fb *PdfAction )String ()string {_gbf ,_bef :=_fb .ToPdfObject ().(*_ea .PdfIndirectObject );if _bef {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fb ._fe ,_gbf .PdfObject .String ());};return "";};

// GetContainingPdfObject implements interface PdfModel.
func (_acedb *PdfAnnotation )GetContainingPdfObject ()_ea .PdfObject {return _acedb ._eab };

// GetContainingPdfObject implements interface PdfModel.
func (_dagfg *PdfSignature )GetContainingPdfObject ()_ea .PdfObject {return _dagfg ._eedgc };

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_cadad *Image )Resample (targetBitsPerComponent int64 ){if _cadad .BitsPerComponent ==targetBitsPerComponent {return ;};_gcadd :=_cadad .GetSamples ();if targetBitsPerComponent < _cadad .BitsPerComponent {_cbgdc :=_cadad .BitsPerComponent -targetBitsPerComponent ;
for _bddb :=range _gcadd {_gcadd [_bddb ]>>=uint (_cbgdc );};}else if targetBitsPerComponent > _cadad .BitsPerComponent {_efgacf :=targetBitsPerComponent -_cadad .BitsPerComponent ;for _efadc :=range _gcadd {_gcadd [_efadc ]<<=uint (_efgacf );};};_cadad .BitsPerComponent =targetBitsPerComponent ;
if _cadad .BitsPerComponent < 8{_cadad .resampleLowBits (_gcadd );return ;};_ffcc :=_dcc .BytesPerLine (int (_cadad .Width ),int (_cadad .BitsPerComponent ),_cadad .ColorComponents );_ceebc :=make ([]byte ,_ffcc *int (_cadad .Height ));var (_ebca ,_daegc ,_bfbf ,_ffcf int ;
_eadbf uint32 ;);for _bfbf =0;_bfbf < int (_cadad .Height );_bfbf ++{_ebca =_bfbf *_ffcc ;_daegc =(_bfbf +1)*_ffcc -1;_abaca :=_af .ResampleUint32 (_gcadd [_ebca :_daegc ],int (targetBitsPerComponent ),8);for _ffcf ,_eadbf =range _abaca {_ceebc [_ffcf +_ebca ]=byte (_eadbf );
};};_cadad .Data =_ceebc ;};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_aegaf *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_aegaf ._acgcg =&hideWindowUI };func (_gbd *PdfReader )newPdfAnnotationPolyLineFromDict (_ddb *_ea .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dgaae :=PdfAnnotationPolyLine {};
_cbfb ,_bcbd :=_gbd .newPdfAnnotationMarkupFromDict (_ddb );if _bcbd !=nil {return nil ,_bcbd ;};_dgaae .PdfAnnotationMarkup =_cbfb ;_dgaae .Vertices =_ddb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dgaae .LE =_ddb .Get ("\u004c\u0045");
_dgaae .BS =_ddb .Get ("\u0042\u0053");_dgaae .IC =_ddb .Get ("\u0049\u0043");_dgaae .BE =_ddb .Get ("\u0042\u0045");_dgaae .IT =_ddb .Get ("\u0049\u0054");_dgaae .Measure =_ddb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dgaae ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_eacd *PdfFieldButton )IsRadio ()bool {return _eacd .GetType ()==ButtonTypeRadio };

// SetOCProperties sets the optional content properties.
func (_deacc *PdfWriter )SetOCProperties (ocProperties _ea .PdfObject )error {_fgbee :=_deacc ._dacfd ;if ocProperties !=nil {_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_fgbee .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _deacc .addObjects (ocProperties );};return nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bgagc *Image )ToJBIG2Image ()(*_ea .JBIG2Image ,error ){_agaa ,_cacg :=_bgagc .ToGoImage ();if _cacg !=nil {return nil ,_cacg ;};return _ea .GoImageToJBIG2 (_agaa ,_ea .JB2ImageAutoThreshold );};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_gcada *PdfReader )GetCatalogViewerPreferences ()(_ea .PdfObject ,bool ){if _gcada ._gbggd ==nil {return nil ,false ;};_dgcee :=_gcada ._gbggd .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _dgcee ,_dgcee !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_dd *PdfActionRendition )ToPdfObject ()_ea .PdfObject {_dd .PdfAction .ToPdfObject ();_beff :=_dd ._fgc ;_fgge :=_beff .PdfObject .(*_ea .PdfObjectDictionary );_fgge .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeRendition )));_fgge .SetIfNotNil ("\u0052",_dd .R );
_fgge .SetIfNotNil ("\u0041\u004e",_dd .AN );_fgge .SetIfNotNil ("\u004f\u0050",_dd .OP );_fgge .SetIfNotNil ("\u004a\u0053",_dd .JS );return _beff ;};func (_fcebd *PdfWriter )checkLicense ()error {_cdccbf :=_cda .GetLicenseKey ();if (_cdccbf ==nil ||!_cdccbf .IsLicensed ())&&!_daba {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _dc .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_baega *KDict )ToPdfObject ()_ea .PdfObject {_cafad :=_ea .MakeDict ();if _baega .ID !=nil {_cafad .Set ("\u0049\u0044",_baega .ID );};if _baega .K !=nil {_cafad .Set ("\u004b",_baega .K );}else if len (_baega ._deecfd )> 0{if len (_baega ._deecfd )==1{_baega .K =_baega ._deecfd [0].ToPdfObject ();
}else {_badg :=_ea .MakeArray ();for _ ,_fgdd :=range _baega ._deecfd {_badg .Append (_fgdd .ToPdfObject ());};_baega .K =_badg ;};_cafad .Set ("\u004b",_baega .K );};if _baega .S !=nil {_cafad .Set ("\u0053",_baega .S );};if _baega .P !=nil {_cafad .Set ("\u0050",_baega .P );
};if _baega .Pg !=nil {_cafad .Set ("\u0050\u0067",_baega .Pg );};if _baega .C !=nil {_cafad .Set ("\u0043",_baega .C );};if _baega .R !=nil {_cafad .Set ("\u0052",_baega .R );};if _baega .T !=nil {_cafad .Set ("\u0054",_baega .T );};if _baega .Lang !=nil {_cafad .Set ("\u004c\u0061\u006e\u0067",_baega .Lang );
};if _baega .Alt !=nil {_cafad .Set ("\u0041\u006c\u0074",_baega .Alt );};if _baega .E !=nil {_cafad .Set ("\u0045",_baega .E );};if _baega .A !=nil {_cafad .Set ("\u0041",_baega .A );}else if _baega ._cbfbgee !=nil {_cgddd :=_ea .MakeArrayFromFloats ([]float64 {_baega ._cbfbgee .Llx ,_baega ._cbfbgee .Lly ,_baega ._cbfbgee .Urx ,_baega ._cbfbgee .Ury });
_gcbc :=_ea .MakeDict ();_gcbc .Set ("\u0042\u0042\u006f\u0078",_cgddd );_gcbc .Set ("\u004f",_ea .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_cafad .Set ("\u0041",_ea .MakeIndirectObject (_gcbc ));};if _baega .ActualText !=nil {_cafad .Set ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074",_baega .ActualText );
};if _baega .E !=nil {_cafad .Set ("\u0045",_baega .E );};if _baega .Alt !=nil {_cafad .Set ("\u0041\u006c\u0074",_baega .Alt );};return _cafad ;};

// SetFillImage attach a model.Image to push button.
func (_cgcdf *PdfFieldButton )SetFillImage (image *Image ){if _cgcdf .IsPush (){_cgcdf ._fbdfa =image ;};};

// ParserMetadata gets the parser  metadata.
func (_cegd *CompliancePdfReader )ParserMetadata ()_ea .ParserMetadata {if _cegd ._fgdc ==(_ea .ParserMetadata {}){_cegd ._fgdc ,_ =_cegd ._afedg .ParserMetadata ();};return _cegd ._fgdc ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dac :=NewPdfAnnotation ();_deb :=&PdfAnnotationPolyLine {};_deb .PdfAnnotation =_dac ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dac .SetContext (_deb );return _deb ;};func _gabbb (_adfd *_ea .PdfObjectDictionary ,_gbgce *fontCommon )(*pdfFontType3 ,error ){_faaf :=_gcacd (_gbgce );
_fbgeb :=_adfd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fbgeb ==nil {_fbgeb =_ea .MakeInteger (0);};_faaf .FirstChar =_fbgeb ;_cfeeg ,_adbd :=_ea .GetIntVal (_fbgeb );if !_adbd {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fbgeb );
return nil ,_ea .ErrTypeError ;};_cgabg :=_ge .CharCode (_cfeeg );_fbgeb =_adfd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fbgeb ==nil {_fbgeb =_ea .MakeInteger (255);};_faaf .LastChar =_fbgeb ;_cfeeg ,_adbd =_ea .GetIntVal (_fbgeb );
if !_adbd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fbgeb );return nil ,_ea .ErrTypeError ;
};_eaaa :=_ge .CharCode (_cfeeg );_fbgeb =_adfd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fbgeb !=nil {_faaf .Resources =_fbgeb ;};_fbgeb =_adfd .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fbgeb ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fbgeb );
return nil ,_ea .ErrNotSupported ;};_faaf .CharProcs =_fbgeb ;_fbgeb =_adfd .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fbgeb ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fbgeb );
return nil ,_ea .ErrNotSupported ;};_faaf .FontMatrix =_fbgeb ;_faaf ._aegce =make (map[_ge .CharCode ]float64 );_fbgeb =_adfd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fbgeb !=nil {_faaf .Widths =_fbgeb ;_gbege ,_dabgc :=_ea .GetArray (_fbgeb );
if !_dabgc {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fbgeb );return nil ,_ea .ErrTypeError ;
};_fabd ,_fdff :=_gbege .ToFloat64Array ();if _fdff !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fdff ;};if len (_fabd )!=int (_eaaa -_cgabg +1){_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_eaaa -_cgabg +1,len (_fabd ));
return nil ,_ea .ErrRangeError ;};_dfbcf ,_dabgc :=_ea .GetArray (_faaf .FontMatrix );if !_dabgc {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dfbcf );
return nil ,_fdff ;};_bbdbe ,_fdff :=_dfbcf .ToFloat64Array ();if _fdff !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fdff ;};_bgdecb :=_ged .NewMatrix (_bbdbe [0],_bbdbe [1],_bbdbe [2],_bbdbe [3],_bbdbe [4],_bbdbe [5]);for _gfcde ,_fdad :=range _fabd {_cdbd ,_ :=_bgdecb .Transform (_fdad ,_fdad );_faaf ._aegce [_cgabg +_ge .CharCode (_gfcde )]=_cdbd ;};};
_faaf .Encoding =_ea .TraceToDirectObject (_adfd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_dcabc :=_adfd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dcabc !=nil {_faaf ._cbfe =_ea .TraceToDirectObject (_dcabc );_bgcb ,_efabd :=_geee (_faaf ._cbfe ,&_faaf .fontCommon );
if _efabd !=nil {return nil ,_efabd ;};_faaf ._adbfa =_bgcb ;};if _ggecg :=_faaf ._adbfa ;_ggecg !=nil {_faaf ._gccf =_ge .NewCMapEncoder ("",nil ,_ggecg );}else {_faaf ._gccf =_ge .NewPdfDocEncoder ();};return _faaf ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ffga :=NewPdfAction ();_eee :=&PdfActionImportData {};_eee .PdfAction =_ffga ;_ffga .SetContext (_eee );return _eee ;};func _bcda (_fddfc *_ea .PdfObjectDictionary )(*PdfShadingType4 ,error ){_efegd :=PdfShadingType4 {};
_aagfe :=_fddfc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aagfe ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbecbd ,_fgfd :=_aagfe .(*_ea .PdfObjectInteger );if !_fgfd {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aagfe );
return nil ,_ea .ErrTypeError ;};_efegd .BitsPerCoordinate =_cbecbd ;_aagfe =_fddfc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aagfe ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbecbd ,_fgfd =_aagfe .(*_ea .PdfObjectInteger );if !_fgfd {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aagfe );
return nil ,_ea .ErrTypeError ;};_efegd .BitsPerComponent =_cbecbd ;_aagfe =_fddfc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aagfe ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbecbd ,_fgfd =_aagfe .(*_ea .PdfObjectInteger );if !_fgfd {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aagfe );
return nil ,_ea .ErrTypeError ;};_efegd .BitsPerComponent =_cbecbd ;_aagfe =_fddfc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aagfe ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acbdeb ,_fgfd :=_aagfe .(*_ea .PdfObjectArray );if !_fgfd {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aagfe );
return nil ,_ea .ErrTypeError ;};_efegd .Decode =_acbdeb ;_aagfe =_fddfc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aagfe ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_efegd .Function =[]PdfFunction {};if _agebb ,_efaaef :=_aagfe .(*_ea .PdfObjectArray );_efaaef {for _ ,_gcbdf :=range _agebb .Elements (){_gfce ,_aaddcb :=_ebcdc (_gcbdf );if _aaddcb !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaddcb );
return nil ,_aaddcb ;};_efegd .Function =append (_efegd .Function ,_gfce );};}else {_bcdef ,_facc :=_ebcdc (_aagfe );if _facc !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facc );
return nil ,_facc ;};_efegd .Function =append (_efegd .Function ,_bcdef );};return &_efegd ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fgad ,_dacgg :=NewStandard14Font (basefont );if _dacgg !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fgad ;};func _fgcgbf ()*Names {return &Names {_dgbda :_ea .MakeIndirectObject (_ea .MakeDict ())}};func (_gac *PdfReader )newPdfAnnotationRichMediaFromDict (_bcae *_ea .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_efbb :=&PdfAnnotationRichMedia {};
_efbb .RichMediaSettings =_bcae .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_efbb .RichMediaContent =_bcae .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _efbb ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ea .PdfObjectArray ;Domain *_ea .PdfObjectArray ;Function []PdfFunction ;Extend *_ea .PdfObjectArray ;};

// AddCRLs adds CRLs to DSS.
func (_dged *DSS )AddCRLs (crls [][]byte )([]*_ea .PdfObjectStream ,error ){return _dged .add (&_dged .CRLs ,_dged ._dffga ,crls );};func (_fbgg *PdfAcroForm )filteredFields (_afda FieldFilterFunc ,_daggf bool )[]*PdfField {if _fbgg ==nil {return nil ;
};return _ddbgff (_fbgg .Fields ,_afda ,_daggf );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ea .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ea .PdfObject ;Contents _ea .PdfObject ;
Rotate *int64 ;Group _ea .PdfObject ;Thumb _ea .PdfObject ;B _ea .PdfObject ;Dur _ea .PdfObject ;Trans _ea .PdfObject ;AA _ea .PdfObject ;Metadata _ea .PdfObject ;PieceInfo _ea .PdfObject ;StructParents _ea .PdfObject ;ID _ea .PdfObject ;PZ _ea .PdfObject ;
SeparationInfo _ea .PdfObject ;Tabs _ea .PdfObject ;TemplateInstantiated _ea .PdfObject ;PresSteps _ea .PdfObject ;UserUnit _ea .PdfObject ;VP _ea .PdfObject ;Annots _ea .PdfObject ;_fcdad []*PdfAnnotation ;_bbffd *_ea .PdfObjectDictionary ;_dfgcd *_ea .PdfIndirectObject ;
_gfbe _ea .PdfObjectDictionary ;_fdfg *PdfReader ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ea .PdfObjectArray )(*PdfRectangle ,error ){_ddggd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fbgf error ;_ddggd .Llx ,_fbgf =_ea .GetNumberAsFloat (arr .Get (0));if _fbgf !=nil {return nil ,_fbgf ;};_ddggd .Lly ,_fbgf =_ea .GetNumberAsFloat (arr .Get (1));if _fbgf !=nil {return nil ,_fbgf ;};_ddggd .Urx ,_fbgf =_ea .GetNumberAsFloat (arr .Get (2));
if _fbgf !=nil {return nil ,_fbgf ;};_ddggd .Ury ,_fbgf =_ea .GetNumberAsFloat (arr .Get (3));if _fbgf !=nil {return nil ,_fbgf ;};return &_ddggd ,nil ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _ea .PdfObjectName ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_daffc DefaultImageHandler )NewImageFromGoImage (goimg _ba .Image )(*Image ,error ){_gefbb ,_dfef :=_dcc .FromGoImage (goimg );if _dfef !=nil {return nil ,_dfef ;};_fgaa :=_aefbb (_gefbb .Base ());return &_fgaa ,nil ;};

// Tab order types.
type TabOrderType string ;func (_cfddaca *PdfWriter )writeString (_bdbagf string ){if _cfddaca ._dgbdf !=nil {return ;};_cbaaf ,_dbfgb :=_cfddaca ._daad .WriteString (_bdbagf );_cfddaca ._gfecb +=int64 (_cbaaf );_cfddaca ._dgbdf =_dbfgb ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_eebaa *PdfPage )GetPageDict ()*_ea .PdfObjectDictionary {_faged :=_eebaa ._bbffd ;_faged .Clear ();_faged .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0050\u0061\u0067\u0065"));_faged .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eebaa .Parent );
if _eebaa .LastModified !=nil {_faged .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eebaa .LastModified .ToPdfObject ());};if _eebaa .Resources !=nil {_faged .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eebaa .Resources .ToPdfObject ());
};if _eebaa .CropBox !=nil {_faged .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_eebaa .CropBox .ToPdfObject ());};if _eebaa .MediaBox !=nil {_faged .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_eebaa .MediaBox .ToPdfObject ());};if _eebaa .BleedBox !=nil {_faged .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_eebaa .BleedBox .ToPdfObject ());
};if _eebaa .TrimBox !=nil {_faged .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_eebaa .TrimBox .ToPdfObject ());};if _eebaa .ArtBox !=nil {_faged .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_eebaa .ArtBox .ToPdfObject ());};_faged .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_eebaa .BoxColorInfo );
_faged .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eebaa .Contents );if _eebaa .Rotate !=nil {_faged .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ea .MakeInteger (*_eebaa .Rotate ));};_faged .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eebaa .Group );
_faged .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_eebaa .Thumb );_faged .SetIfNotNil ("\u0042",_eebaa .B );_faged .SetIfNotNil ("\u0044\u0075\u0072",_eebaa .Dur );_faged .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_eebaa .Trans );_faged .SetIfNotNil ("\u0041\u0041",_eebaa .AA );
_faged .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eebaa .Metadata );_faged .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eebaa .PieceInfo );_faged .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eebaa .StructParents );
_faged .SetIfNotNil ("\u0049\u0044",_eebaa .ID );_faged .SetIfNotNil ("\u0050\u005a",_eebaa .PZ );_faged .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_eebaa .SeparationInfo );_faged .SetIfNotNil ("\u0054\u0061\u0062\u0073",_eebaa .Tabs );
_faged .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_eebaa .TemplateInstantiated );_faged .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_eebaa .PresSteps );_faged .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_eebaa .UserUnit );
_faged .SetIfNotNil ("\u0056\u0050",_eebaa .VP );if _eebaa ._fcdad !=nil {_cefbg :=_ea .MakeArray ();for _ ,_gcdec :=range _eebaa ._fcdad {if _dgcge :=_gcdec .GetContext ();_dgcge !=nil {_cefbg .Append (_dgcge .ToPdfObject ());}else {_cefbg .Append (_gcdec .ToPdfObject ());
};};if _cefbg .Len ()> 0{_faged .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_cefbg );};}else if _eebaa .Annots !=nil {_faged .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_eebaa .Annots );};return _faged ;};

// ToPdfObject implements interface PdfModel.
func (_dccg *PdfAnnotationLink )ToPdfObject ()_ea .PdfObject {_dccg .PdfAnnotation .ToPdfObject ();_ecaa :=_dccg ._eab ;_fadg :=_ecaa .PdfObject .(*_ea .PdfObjectDictionary );_fadg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u004c\u0069\u006e\u006b"));
if _dccg ._cbf !=nil &&_dccg ._cbf ._fe !=nil {_fadg .Set ("\u0041",_dccg ._cbf ._fe .ToPdfObject ());}else if _dccg .A !=nil {_fadg .Set ("\u0041",_dccg .A );};_fadg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dccg .Dest );_fadg .SetIfNotNil ("\u0048",_dccg .H );
_fadg .SetIfNotNil ("\u0050\u0041",_dccg .PA );_fadg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dccg .QuadPoints );_fadg .SetIfNotNil ("\u0042\u0053",_dccg .BS );return _ecaa ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fgfce pdfFontType0 )GetCharMetrics (code _ge .CharCode )(_gf .CharMetrics ,bool ){if _fgfce .DescendantFont ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fgfce );
return _gf .CharMetrics {},false ;};return _fgfce .DescendantFont .GetCharMetrics (code );};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fefg *PdfColorspaceICCBased )ToPdfObject ()_ea .PdfObject {_ggfa :=&_ea .PdfObjectArray {};_ggfa .Append (_ea .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gfcfb *_ea .PdfObjectStream ;if _fefg ._bdcda !=nil {_gfcfb =_fefg ._bdcda ;
}else {_gfcfb =&_ea .PdfObjectStream {};};_eebdf :=_ea .MakeDict ();_eebdf .Set ("\u004e",_ea .MakeInteger (int64 (_fefg .N )));if _fefg .Alternate !=nil {_eebdf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fefg .Alternate .ToPdfObject ());};if _fefg .Metadata !=nil {_eebdf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fefg .Metadata );
};if _fefg .Range !=nil {var _ggcac []_ea .PdfObject ;for _ ,_egegd :=range _fefg .Range {_ggcac =append (_ggcac ,_ea .MakeFloat (_egegd ));};_eebdf .Set ("\u0052\u0061\u006eg\u0065",_ea .MakeArray (_ggcac ...));};_eebdf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_fefg .Data ))));
_gfcfb .Stream =_fefg .Data ;_gfcfb .PdfObjectDictionary =_eebdf ;_ggfa .Append (_gfcfb );if _fefg ._cdcf !=nil {_fefg ._cdcf .PdfObject =_ggfa ;return _fefg ._cdcf ;};return _ggfa ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbbb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fcabb ,_bagedg :=range _dbbb ._abgae {_dbbb ._abgae [_fcabb ]=mapFunc (_bagedg );};};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject implements interface PdfModel.
func (_dagb *PdfAnnotationLine )ToPdfObject ()_ea .PdfObject {_dagb .PdfAnnotation .ToPdfObject ();_aada :=_dagb ._eab ;_dfb :=_aada .PdfObject .(*_ea .PdfObjectDictionary );_dagb .PdfAnnotationMarkup .appendToPdfDictionary (_dfb );_dfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u004c\u0069\u006e\u0065"));
_dfb .SetIfNotNil ("\u004c",_dagb .L );_dfb .SetIfNotNil ("\u0042\u0053",_dagb .BS );_dfb .SetIfNotNil ("\u004c\u0045",_dagb .LE );_dfb .SetIfNotNil ("\u0049\u0043",_dagb .IC );_dfb .SetIfNotNil ("\u004c\u004c",_dagb .LL );_dfb .SetIfNotNil ("\u004c\u004c\u0045",_dagb .LLE );
_dfb .SetIfNotNil ("\u0043\u0061\u0070",_dagb .Cap );_dfb .SetIfNotNil ("\u0049\u0054",_dagb .IT );_dfb .SetIfNotNil ("\u004c\u004c\u004f",_dagb .LLO );_dfb .SetIfNotNil ("\u0043\u0050",_dagb .CP );_dfb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dagb .Measure );
_dfb .SetIfNotNil ("\u0043\u004f",_dagb .CO );return _aada ;};func _aceca (_ccdc _ea .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ccac :=&PdfColorspaceDeviceNAttributes {};var _gacc *_ea .PdfObjectDictionary ;switch _edcgf :=_ccdc .(type ){case *_ea .PdfIndirectObject :_ccac ._bded =_edcgf ;
var _decf bool ;_gacc ,_decf =_edcgf .PdfObject .(*_ea .PdfObjectDictionary );if !_decf {_ca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_ea .PdfObjectDictionary :_gacc =_edcgf ;case *_ea .PdfObjectReference :_ffaf :=_edcgf .Resolve ();return _aceca (_ffaf );default:_ca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agfg :=_gacc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_agfg !=nil {_bfea ,_eaeed :=_ea .TraceToDirectObject (_agfg ).(*_ea .PdfObjectName );if !_eaeed {_ca .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ccac .Subtype =_bfea ;};if _dfaf :=_gacc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_dfaf !=nil {_ccac .Colorants =_dfaf ;};if _abceg :=_gacc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_abceg !=nil {_ccac .Process =_abceg ;};if _geca :=_gacc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_geca !=nil {_ccac .MixingHints =_geca ;};return _ccac ,nil ;};func _facdcd (_dafab *_ea .PdfObjectDictionary )(*PdfFieldChoice ,error ){_fcad :=&PdfFieldChoice {};
_fcad .Opt ,_ =_ea .GetArray (_dafab .Get ("\u004f\u0070\u0074"));_fcad .TI ,_ =_ea .GetInt (_dafab .Get ("\u0054\u0049"));_fcad .I ,_ =_ea .GetArray (_dafab .Get ("\u0049"));return _fcad ,nil ;};var _gafa =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gfe :=NewPdfAnnotation ();_ecg :=&PdfAnnotationStamp {};_ecg .PdfAnnotation =_gfe ;_ecg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfe .SetContext (_ecg );return _ecg ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_fff *PdfAppender )SetDocInfo (info *PdfInfo ){_fff ._gcf =info };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ea .PdfObject ;_afgda []byte ;_cgced *_ea .PdfIndirectObject ;};func (_gbbdg *PdfWriter )writeAcroFormFields ()error {if _gbbdg ._ccedg ==nil {return nil ;};_ca .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_eaadca :=_gbbdg ._ccedg .ToPdfObject ();_ca .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eaadca );_gbbdg ._dacfd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eaadca );_cgggc :=_gbbdg .addObjects (_eaadca );
if _cgggc !=nil {return _cgggc ;};return nil ;};func _aafd (_agcab _ea .PdfObject )(*PdfColorspaceDeviceN ,error ){_fgeba :=NewPdfColorspaceDeviceN ();if _fgcfa ,_gfcgaa :=_agcab .(*_ea .PdfIndirectObject );_gfcgaa {_fgeba ._bgbd =_fgcfa ;};_agcab =_ea .TraceToDirectObject (_agcab );
_dcae ,_ecef :=_agcab .(*_ea .PdfObjectArray );if !_ecef {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _dcae .Len ()!=4&&_dcae .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_agcab =_dcae .Get (0);_adac ,_ecef :=_agcab .(*_ea .PdfObjectName );if !_ecef {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_adac !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_agcab =_dcae .Get (1);
_agcab =_ea .TraceToDirectObject (_agcab );_bfccb ,_ecef :=_agcab .(*_ea .PdfObjectArray );if !_ecef {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_fgeba .ColorantNames =_bfccb ;_agcab =_dcae .Get (2);_gbecd ,_dfgd :=NewPdfColorspaceFromPdfObject (_agcab );if _dfgd !=nil {return nil ,_dfgd ;};_fgeba .AlternateSpace =_gbecd ;_aceg ,_dfgd :=_ebcdc (_dcae .Get (3));if _dfgd !=nil {return nil ,_dfgd ;
};_fgeba .TintTransform =_aceg ;if _dcae .Len ()==5{_gacd ,_efgca :=_aceca (_dcae .Get (4));if _efgca !=nil {return nil ,_efgca ;};_fgeba .Attributes =_gacd ;};return _fgeba ,nil ;};func (_afcg *DSS )add (_aec *[]*_ea .PdfObjectStream ,_bgfgc map[string ]*_ea .PdfObjectStream ,_ggcg [][]byte )([]*_ea .PdfObjectStream ,error ){_ddcfb :=make ([]*_ea .PdfObjectStream ,0,len (_ggcg ));
for _ ,_ccba :=range _ggcg {_egacb ,_feed :=_cgdfd (_ccba );if _feed !=nil {return nil ,_feed ;};_bgdad ,_ccee :=_bgfgc [string (_egacb )];if !_ccee {_bgdad ,_feed =_ea .MakeStream (_ccba ,_ea .NewRawEncoder ());if _feed !=nil {return nil ,_feed ;};_bgfgc [string (_egacb )]=_bgdad ;
*_aec =append (*_aec ,_bgdad );};_ddcfb =append (_ddcfb ,_bgdad );};return _ddcfb ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ea .StreamEncoder )(*XObjectImage ,error ){_dbegf :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dbegf ,img ,cs ,encoder );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_feegc *PdfFont )CharcodesToUnicode (charcodes []_ge .CharCode )[]rune {_gccdd ,_ ,_ :=_feegc .CharcodesToUnicodeWithStats (charcodes );return _gccdd ;};

// ToInteger convert to an integer format.
func (_fegd *PdfColorLab )ToInteger (bits int )[3]uint32 {_affca :=_dgf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_affca *_fegd .L ()),uint32 (_affca *_fegd .A ()),uint32 (_affca *_fegd .B ())};};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_febfg *KDict ;_aadab _ea .PdfObject ;_fffff *int ;};func (_bgdd *PdfWriter )optimize ()error {if _bgdd ._fgeaf ==nil {return nil ;};var _decfc error ;_bgdd ._cgdbdb ,_decfc =_bgdd ._fgeaf .Optimize (_bgdd ._cgdbdb );if _decfc !=nil {return _decfc ;
};_gcggca :=make (map[_ea .PdfObject ]struct{},len (_bgdd ._cgdbdb ));for _ ,_cdcbg :=range _bgdd ._cgdbdb {_gcggca [_cdcbg ]=struct{}{};};_bgdd ._efaca =_gcggca ;return nil ;};func (_fbga *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_cbgec *modelManager )GetPrimitiveFromModel (model PdfModel )_ea .PdfObject {_cbgec ._cfdeg .RLock ();defer _cbgec ._cfdeg .RUnlock ();_agfbb ,_aebb :=_cbgec ._fggf [model ];if !_aebb {return nil ;};return _agfbb ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_befac *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ea .PdfObject {_ceefe :=_ea .MakeDict ();if _befac .Subtype !=nil {_ceefe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_befac .Subtype );};_ceefe .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_befac .Colorants );
_ceefe .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_befac .Process );_ceefe .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_befac .MixingHints );if _befac ._bded !=nil {_befac ._bded .PdfObject =_ceefe ;return _befac ._bded ;
};return _ceefe ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_fbace *Outline )ToPdfObject ()_ea .PdfObject {return _fbace .ToPdfOutline ().ToPdfObject ()};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dgacb :map[_ea .PdfObject ]struct{}{},_aebcf :_ebbab (),_afedg :_ea .NewParserFromString (txt )};};

// String returns a string representation of the field.
func (_affbe *PdfField )String ()string {if _fgfbd ,_ffceac :=_affbe .ToPdfObject ().(*_ea .PdfIndirectObject );_ffceac {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_affbe ._cdag ,_fgfbd .PdfObject .String ());};return "";};

// GetRefObject returns the reference object of the KValue.
func (_bffgee *KValue )GetRefObject ()_ea .PdfObject {return _bffgee ._aadab };

// Evaluate runs the function on the passed in slice and returns the results.
func (_gedfe *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_efeef :=[]float64 {0.0};if _gedfe .C0 !=nil {_efeef =_gedfe .C0 ;};_eafee :=[]float64 {1.0};if _gedfe .C1 !=nil {_eafee =_gedfe .C1 ;};var _aead []float64 ;for _fcff :=0;_fcff < len (_efeef );_fcff ++{_aefa :=_efeef [_fcff ]+_dgf .Pow (x [0],_gedfe .N )*(_eafee [_fcff ]-_efeef [_fcff ]);
_aead =append (_aead ,_aefa );};return _aead ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_egbdc *PdfPageResources )HasPatternByName (keyName _ea .PdfObjectName )bool {_ ,_ggbd :=_egbdc .GetPatternByName (keyName );return _ggbd ;};func (_bcac *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_dcfe pdfFontSimple )GetCharMetrics (code _ge .CharCode )(_gf .CharMetrics ,bool ){if _cgacd ,_ffgaf :=_dcfe ._ffeb [code ];_ffgaf {return _gf .CharMetrics {Wx :_cgacd },true ;};if _gf .IsStdFont (_gf .StdFontName (_dcfe ._ceac )){return _gf .CharMetrics {Wx :250},true ;
};return _gf .CharMetrics {},false ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ecgg :=NewPdfAnnotation ();_fcfb :=&PdfAnnotationMovie {};_fcfb .PdfAnnotation =_ecgg ;_ecgg .SetContext (_fcfb );return _fcfb ;};

// ValidateSignatures validates digital signatures in the document.
func (_fcaeg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fcaeg .AcroForm ==nil {return nil ,nil ;};if _fcaeg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fgeaa *PdfSignature ;
_ebcde *PdfField ;_afdfc SignatureHandler ;};var _cbaed []*sigFieldPair ;for _ ,_ffec :=range _fcaeg .AcroForm .AllFields (){if _ffec .V ==nil {continue ;};if _gggac ,_fbcdac :=_ea .GetDict (_ffec .V );_fbcdac {if _aefdc ,_bfedf :=_ea .GetNameVal (_gggac .Get ("\u0054\u0079\u0070\u0065"));
_bfedf &&(_aefdc =="\u0053\u0069\u0067"||_aefdc =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_cfedb ,_dcgbf :=_ea .GetIndirect (_ffec .V );if !_dcgbf {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fagae ,_cbecf :=_fcaeg .newPdfSignatureFromIndirect (_cfedb );if _cbecf !=nil {return nil ,_cbecf ;};var _feddb SignatureHandler ;for _ ,_dfecg :=range handlers {if _dfecg .IsApplicable (_fagae ){_feddb =_dfecg ;break ;};};
_cbaed =append (_cbaed ,&sigFieldPair {_fgeaa :_fagae ,_ebcde :_ffec ,_afdfc :_feddb });};};};var _bdfbe []SignatureValidationResult ;for _ ,_bdgee :=range _cbaed {_dgeag :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bdgee ._ebcde }};
if _bdgee ._afdfc ==nil {_dgeag .Errors =append (_dgeag .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_bdfbe =append (_bdfbe ,_dgeag );continue ;};_aebab ,_cdfea :=_bdgee ._afdfc .NewDigest (_bdgee ._fgeaa );
if _cdfea !=nil {_dgeag .Errors =append (_dgeag .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cdfea .Error ());_bdfbe =append (_bdfbe ,_dgeag );continue ;};_gfdee :=_bdgee ._fgeaa .ByteRange ;if _gfdee ==nil {_dgeag .Errors =append (_dgeag .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_bdfbe =append (_bdfbe ,_dgeag );continue ;};for _dbaeec :=0;_dbaeec < _gfdee .Len ();_dbaeec =_dbaeec +2{_efffg ,_ :=_ea .GetNumberAsInt64 (_gfdee .Get (_dbaeec ));_gbcc ,_ :=_ea .GetIntVal (_gfdee .Get (_dbaeec +1));if _ ,_eacddd :=_fcaeg ._gcddb .Seek (_efffg ,_cde .SeekStart );
_eacddd !=nil {return nil ,_eacddd ;};_aaebb :=make ([]byte ,_gbcc );if _ ,_bfefd :=_fcaeg ._gcddb .Read (_aaebb );_bfefd !=nil {return nil ,_bfefd ;};_aebab .Write (_aaebb );};var _ecgcg SignatureValidationResult ;if _dffaaa ,_bdcab :=_bdgee ._afdfc .(SignatureHandlerDocMDP );
_bdcab {_ecgcg ,_cdfea =_dffaaa .ValidateWithOpts (_bdgee ._fgeaa ,_aebab ,SignatureHandlerDocMDPParams {Parser :_fcaeg ._afedg });}else {_ecgcg ,_cdfea =_bdgee ._afdfc .Validate (_bdgee ._fgeaa ,_aebab );};if _cdfea !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cdfea ,_bdgee ._afdfc );
_ecgcg .Errors =append (_ecgcg .Errors ,_cdfea .Error ());};_ecgcg .Name =_bdgee ._fgeaa .Name .Decoded ();_ecgcg .Reason =_bdgee ._fgeaa .Reason .Decoded ();if _bdgee ._fgeaa .M !=nil {_fbbf ,_efgdb :=NewPdfDate (_bdgee ._fgeaa .M .String ());if _efgdb !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgdb );
_ecgcg .Errors =append (_ecgcg .Errors ,_efgdb .Error ());continue ;};_ecgcg .Date =_fbbf ;};_ecgcg .ContactInfo =_bdgee ._fgeaa .ContactInfo .Decoded ();_ecgcg .Location =_bdgee ._fgeaa .Location .Decoded ();_ecgcg .Fields =_dgeag .Fields ;_bdfbe =append (_bdfbe ,_ecgcg );
};return _bdfbe ,nil ;};func _aacc (_cecdd _gf .StdFont )pdfFontSimple {_fdeb :=_cecdd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dfeb :"\u0054\u0079\u0070e\u0031",_ceac :_cecdd .Name ()},_agaf :_cecdd .GetMetricsTable (),_caaff :&PdfFontDescriptor {FontName :_ea .MakeName (string (_fdeb .Name )),FontFamily :_ea .MakeName (_fdeb .Family ),FontWeight :_ea .MakeFloat (float64 (_fdeb .Weight )),Flags :_ea .MakeInteger (int64 (_fdeb .Flags )),FontBBox :_ea .MakeArrayFromFloats (_fdeb .BBox [:]),ItalicAngle :_ea .MakeFloat (_fdeb .ItalicAngle ),Ascent :_ea .MakeFloat (_fdeb .Ascent ),Descent :_ea .MakeFloat (_fdeb .Descent ),CapHeight :_ea .MakeFloat (_fdeb .CapHeight ),XHeight :_ea .MakeFloat (_fdeb .XHeight ),StemV :_ea .MakeFloat (_fdeb .StemV ),StemH :_ea .MakeFloat (_fdeb .StemH )},_gcgef :_cecdd .Encoder ()};
};func _eagbaf (_ceagb *PdfField ,_abbbg _ea .PdfObject ){for _ ,_cebcd :=range _ceagb .Annotations {_cebcd .AS =_abbbg ;_cebcd .ToPdfObject ();};};func _fceba (_deecb _cde .ReadSeeker ,_gbbag *ReaderOpts ,_ddgge bool ,_eggcb string )(*PdfReader ,error ){if _gbbag ==nil {_gbbag =NewReaderOpts ();
};_cfgad :="";if _gdgga ,_cecge :=_deecb .(*_abg .File );_cecge {_cfgad =_gdgga .Name ();};_aafeg :=*_gbbag ;_gdfc :=&PdfReader {_gcddb :_deecb ,_dgacb :map[_ea .PdfObject ]struct{}{},_aebcf :_ebbab (),_bdddd :_gbbag .LazyLoad ,_eadgec :_gbbag .ComplianceMode ,_fdcg :_ddgge ,_agbfa :&_aafeg ,_bdggc :_cfgad };
_bbgag ,_addba :=_ffcbf ("\u0072");if _addba !=nil {return nil ,_addba ;};_addba =_cda .Track (_bbgag ,_eggcb ,_gdfc ._bdggc );if _addba !=nil {return nil ,_addba ;};_gdfc ._bcbeg =_bbgag ;var _edfbb *_ea .PdfParser ;if !_gdfc ._eadgec {if _gbbag !=nil {_dbcfa :=_ea .ParserOpts {RelaxedMode :_gbbag .RelaxedMode };
_edfbb ,_addba =_ea .NewParserWithOpts (_deecb ,_dbcfa );}else {_edfbb ,_addba =_ea .NewParser (_deecb );};}else {_edfbb ,_addba =_ea .NewCompliancePdfParser (_deecb );};if _addba !=nil {return nil ,_addba ;};_gdfc ._afedg =_edfbb ;_edaga ,_addba :=_gdfc .IsEncrypted ();
if _addba !=nil {return nil ,_addba ;};if !_edaga {_addba =_gdfc .loadStructure ();if _addba !=nil {return nil ,_addba ;};}else if _ddgge {_ccacg ,_fcfde :=_gdfc .Decrypt ([]byte (_gbbag .Password ));if _fcfde !=nil {return nil ,_fcfde ;};if !_ccacg {return nil ,_dc .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gdfc ._dgeg =make (map[*PdfReader ]*PdfReader );_gdfc ._bgae =make ([]*PdfReader ,_edfbb .GetRevisionNumber ());return _gdfc ,nil ;};func _abafe (_cadfb *_ea .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bebac :=&PdfShadingPattern {};_cebdc :=_cadfb .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _cebdc ==nil {_ca .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbbdc ,_geaga :=_efefca (_cebdc );if _geaga !=nil {_ca .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_geaga );
return nil ,_geaga ;};_bebac .Shading =_fbbdc ;if _efefc :=_cadfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_efefc !=nil {_gdbdc ,_gecad :=_efefc .(*_ea .PdfObjectArray );if !_gecad {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efefc );
return nil ,_ea .ErrTypeError ;};_bebac .Matrix =_gdbdc ;};if _gbbccf :=_cadfb .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbbccf !=nil {_bebac .ExtGState =_gbbccf ;};return _bebac ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bfcbb *Image )SetSamples (samples []uint32 ){if _bfcbb .BitsPerComponent < 8{samples =_bfcbb .samplesAddPadding (samples );};_eagaf :=_af .ResampleUint32 (samples ,int (_bfcbb .BitsPerComponent ),8);_accd :=make ([]byte ,len (_eagaf ));for _agbfd ,_dccfd :=range _eagaf {_accd [_agbfd ]=byte (_dccfd );
};_bfcbb .Data =_accd ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ea .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _bgab *_ea .PdfIndirectObject ;var _ecb *_ea .PdfObjectName ;var _bfgb *_ea .PdfObjectArray ;if _effc ,_bgcc :=obj .(*_ea .PdfIndirectObject );
_bgcc {_bgab =_effc ;};obj =_ea .TraceToDirectObject (obj );switch _fbeb :=obj .(type ){case *_ea .PdfObjectArray :_bfgb =_fbeb ;case *_ea .PdfObjectName :_ecb =_fbeb ;};if _ecb !=nil {switch *_ecb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ecb );return nil ,_gebg ;};};if _bfgb !=nil &&_bfgb .Len ()> 0{var _ffdg _ea .PdfObject =_bgab ;
if _bgab ==nil {_ffdg =_bfgb ;};if _cdab ,_deea :=_ea .GetName (_bfgb .Get (0));_deea {switch _cdab .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bfgb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bfgb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bfgb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fbdc (_ffdg );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dbe (_ffdg );
case "\u004c\u0061\u0062":return _gbec (_ffdg );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dede (_ffdg );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gcec (_ffdg );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ddaf (_ffdg );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _egea (_ffdg );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _aafd (_ffdg );default:_ca .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cdab );
};};};_ca .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// String returns a string that describes `base`.
func (_bbdb fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bbdb .coreString ());};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fgae *PdfField )ToPdfObject ()_ea .PdfObject {_ggdc :=_fgae ._gegceb ;_bbbef :=_ggdc .PdfObject .(*_ea .PdfObjectDictionary );_dcfab :=_ea .MakeArray ();for _ ,_bbga :=range _fgae .Kids {_dcfab .Append (_bbga .ToPdfObject ());};for _ ,_adaf :=range _fgae .Annotations {if _adaf ._eab !=_fgae ._gegceb {_dcfab .Append (_adaf .GetContext ().ToPdfObject ());
};};if _fgae .Parent !=nil {_bbbef .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgae .Parent .GetContainingPdfObject ());};if _dcfab .Len ()> 0{_bbbef .Set ("\u004b\u0069\u0064\u0073",_dcfab );};_bbbef .SetIfNotNil ("\u0046\u0054",_fgae .FT );
_bbbef .SetIfNotNil ("\u0054",_fgae .T );_bbbef .SetIfNotNil ("\u0054\u0055",_fgae .TU );_bbbef .SetIfNotNil ("\u0054\u004d",_fgae .TM );_bbbef .SetIfNotNil ("\u0046\u0066",_fgae .Ff );_bbbef .SetIfNotNil ("\u0056",_fgae .V );_bbbef .SetIfNotNil ("\u0044\u0056",_fgae .DV );
_bbbef .SetIfNotNil ("\u0041\u0041",_fgae .AA );if _fgae .VariableText !=nil {_bbbef .SetIfNotNil ("\u0044\u0041",_fgae .VariableText .DA );_bbbef .SetIfNotNil ("\u0051",_fgae .VariableText .Q );_bbbef .SetIfNotNil ("\u0044\u0053",_fgae .VariableText .DS );
_bbbef .SetIfNotNil ("\u0052\u0056",_fgae .VariableText .RV );};return _ggdc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acdd *PdfColorspaceSpecialSeparation )ToPdfObject ()_ea .PdfObject {_caee :=_ea .MakeArray (_ea .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_caee .Append (_acdd .ColorantName );_caee .Append (_acdd .AlternateSpace .ToPdfObject ());
_caee .Append (_acdd .TintTransform .ToPdfObject ());if _acdd ._ccce !=nil {_acdd ._ccce .PdfObject =_caee ;return _acdd ._ccce ;};return _caee ;};

// GetXObjectByName gets XObject by name.
func (_aaddf *PdfPage )GetXObjectByName (name _ea .PdfObjectName )(_ea .PdfObject ,bool ){_cdcfa ,_dfbdc :=_aaddf .Resources .XObject .(*_ea .PdfObjectDictionary );if !_dfbdc {return nil ,false ;};if _adaac :=_cdcfa .Get (name );_adaac !=nil {return _adaac ,true ;
};return nil ,false ;};

// AddRefChild adds a child reference object.
func (_bcffg *KDict )AddRefChild (kChild *_ea .PdfObjectDictionary ){_bcffg ._deecfd =append (_bcffg ._deecfd ,&KValue {_aadab :kChild });};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};var _ pdfFont =(*pdfFontType0 )(nil );

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _cag .Permissions ;Algorithm EncryptionAlgorithm ;};

// Encoder returns the font's text encoder.
func (_eaff pdfCIDFontType2 )Encoder ()_ge .TextEncoder {return _eaff ._eaea };

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fdcb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_dgdgc *PdfOutlineTreeNode )GetContainingPdfObject ()_ea .PdfObject {return _dgdgc .GetContext ().GetContainingPdfObject ();};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_aefb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbfec ,_ebdcd :=color .(*PdfColorDeviceCMYK );if !_ebdcd {_ca .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfbfa :=_fbfec .C ();_aaac :=_fbfec .M ();_facdc :=_fbfec .Y ();_fef :=_fbfec .K ();_gfbfa =_gfbfa *(1-_fef )+_fef ;_aaac =_aaac *(1-_fef )+_fef ;
_facdc =_facdc *(1-_fef )+_fef ;_debf :=1-_gfbfa ;_cgbd :=1-_aaac ;_aaea :=1-_facdc ;return NewPdfColorDeviceRGB (_debf ,_cgbd ,_aaea ),nil ;};

// SetCatalogLanguage sets the catalog language.
func (_bacdc *PdfWriter )SetCatalogLanguage (lang _ea .PdfObject )error {if lang ==nil {_bacdc ._dacfd .Remove ("\u004c\u0061\u006e\u0067");return nil ;};if _ ,_ddggg :=lang .(*_ea .PdfIndirectObject );_ddggg {_bacdc .addObject (lang );};_bacdc ._dacfd .Set ("\u004c\u0061\u006e\u0067",lang );
return nil ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_ceae *PdfFont )GetCIDToGIDMapObject ()_ea .PdfObject {_cfeb ,_gadb :=_ceae ._gbee .(*pdfCIDFontType2 );if _gadb {return _cfeb .CIDToGIDMap ;};return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_aege *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PrintScaling returns the value of the printScaling.
func (_dacaf *ViewerPreferences )PrintScaling ()PrintScaling {return _dacaf ._gbce };

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bed *PdfAnnotation )ToPdfObject ()_ea .PdfObject {_fcac :=_bed ._eab ;_acfe :=_fcac .PdfObject .(*_ea .PdfObjectDictionary );_acfe .Clear ();_acfe .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0041\u006e\u006eo\u0074"));_acfe .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bed .Rect );
_acfe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bed .Contents );_acfe .SetIfNotNil ("\u0050",_bed .P );_acfe .SetIfNotNil ("\u004e\u004d",_bed .NM );_acfe .SetIfNotNil ("\u004d",_bed .M );_acfe .SetIfNotNil ("\u0046",_bed .F );_acfe .SetIfNotNil ("\u0041\u0050",_bed .AP );
_acfe .SetIfNotNil ("\u0041\u0053",_bed .AS );_acfe .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bed .Border );_acfe .SetIfNotNil ("\u0043",_bed .C );_acfe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bed .StructParent );
_acfe .SetIfNotNil ("\u004f\u0043",_bed .OC );return _fcac ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_dfbf *Image )ConvertToBinary ()error {if _dfbf .ColorComponents ==1&&_dfbf .BitsPerComponent ==1{return nil ;};_dceag ,_dgcdc :=_dfbf .ToGoImage ();if _dgcdc !=nil {return _dgcdc ;};_deegf ,_dgcdc :=_dcc .MonochromeConverter .Convert (_dceag );if _dgcdc !=nil {return _dgcdc ;
};_dfbf .Data =_deegf .Base ().Data ;_dfbf ._abgae ,_dgcdc =_dcc .ScaleAlphaToMonochrome (_dfbf ._abgae ,int (_dfbf .Width ),int (_dfbf .Height ));if _dgcdc !=nil {return _dgcdc ;};_dfbf .BitsPerComponent =1;_dfbf .ColorComponents =1;_dfbf ._affe =nil ;
return nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bfccd *LTV )Enable (sig *PdfSignature ,extraCerts []*_fgg .Certificate )error {if _caga :=_bfccd .validateSig (sig );_caga !=nil {return _caga ;};_fecd ,_aadac :=_bfccd .generateVRIKey (sig );if _aadac !=nil {return _aadac ;};if _ ,_acgb :=_bfccd ._befaa .VRI [_fecd ];
_acgb &&_bfccd .SkipExisting {return nil ;};_bggcb ,_aadac :=sig .GetCerts ();if _aadac !=nil {return _aadac ;};return _bfccd .enable (_bggcb ,extraCerts ,_fecd );};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ea .PdfObject ;Name _ea .PdfObject ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cgcea *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_bdbbd *PdfSignature ,_ggccg Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_gcdgf *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_cfedf *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_agggg *PdfSignature ,_bcdf Hasher )error ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_baaeeb *PdfPattern )GetContainingPdfObject ()_ea .PdfObject {return _baaeeb ._bedae };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cbe :=NewPdfAction ();_agc :=&PdfActionTrans {};_agc .PdfAction =_cbe ;_cbe .SetContext (_agc );return _agc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gebc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eadf :=vals [0];if _eadf < 0.0||_eadf > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eadf );
return nil ,ErrColorOutOfRange ;};_cbde :=vals [1];if _cbde < 0.0||_cbde > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cbde );return nil ,ErrColorOutOfRange ;
};_gcag :=vals [2];if _gcag < 0.0||_gcag > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gcag );return nil ,ErrColorOutOfRange ;};_ffa :=NewPdfColorCalRGB (_eadf ,_cbde ,_gcag );
return _ffa ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gcfe :=&PdfColorPatternType2 {};return _gcfe };func (_gbdf *PdfReader )loadStructure ()error {if _gbdf ._afedg .GetCrypter ()!=nil &&!_gbdf ._afedg .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dabga :=_gbdf ._afedg .GetTrailer ();if _dabga ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fdcce ,_gbfae :=_dabga .Get ("\u0052\u006f\u006f\u0074").(*_ea .PdfObjectReference );if !_gbfae {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dabga );
};_eaggg ,_fbcgc :=_gbdf ._afedg .LookupByReference (*_fdcce );if _fbcgc !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fbcgc );
return _fbcgc ;};_dbcg ,_gbfae :=_eaggg .(*_ea .PdfIndirectObject );if !_gbfae {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_eaggg ,*_dabga );
return _dc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ccdcb ,_gbfae :=(*_dbcg ).PdfObject .(*_ea .PdfObjectDictionary );if !_gbfae {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dbcg .PdfObject );
return _dc .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ca .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ccdcb );_bfed ,_gbfae :=_ccdcb .Get ("\u0050\u0061\u0067e\u0073").(*_ea .PdfObjectReference );
if !_gbfae {return _dc .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gbdac ,_fbcgc :=_gbdf ._afedg .LookupByReference (*_bfed );
if _fbcgc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _fbcgc ;};_bcdd ,_gbfae :=_gbdac .(*_ea .PdfIndirectObject );if !_gbfae {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ca .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_bcdd );return _dc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_afebe ,_gbfae :=_bcdd .PdfObject .(*_ea .PdfObjectDictionary );if !_gbfae {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_bcdd );
return _dc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ggedc ,_gbfae :=_ea .GetInt (_afebe .Get ("\u0043\u006f\u0075n\u0074"));if !_gbfae {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _dc .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gbfae =_ea .GetName (_afebe .Get ("\u0054\u0079\u0070\u0065"));!_gbfae {_ca .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_afebe .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0050\u0061\u0067e\u0073"));};if _aeddf ,_gdafd :=_ea .GetInt (_afebe .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gdafd {_efafgg :=int64 (*_aeddf );_gbdf .Rotate =&_efafgg ;};_gbdf ._edga =_fdcce ;
_gbdf ._gbggd =_ccdcb ;_gbdf ._dceg =_afebe ;_gbdf ._egggg =_bcdd ;_gbdf ._ccgdc =int (*_ggedc );_gbdf ._dfdbf =[]*_ea .PdfIndirectObject {};_aefgb :=map[_ea .PdfObject ]struct{}{};_fbcgc =_gbdf .buildPageList (_bcdd ,nil ,_aefgb );if _fbcgc !=nil {return _fbcgc ;
};_ca .Log .Trace ("\u002d\u002d\u002d");_ca .Log .Trace ("\u0054\u004f\u0043");_ca .Log .Trace ("\u0050\u0061\u0067e\u0073");_ca .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gbdf ._dfdbf ),_gbdf ._dfdbf );_gbdf ._bbdf ,_fbcgc =_gbdf .loadOutlines ();
if _fbcgc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_fbcgc );
return _fbcgc ;};_gbdf .AcroForm ,_fbcgc =_gbdf .loadForms ();if _fbcgc !=nil {return _fbcgc ;};_gbdf .DSS ,_fbcgc =_gbdf .loadDSS ();if _fbcgc !=nil {return _fbcgc ;};_gbdf ._egfb ,_fbcgc =_gbdf .loadPerms ();if _fbcgc !=nil {return _fbcgc ;};return nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggdd *PdfColorspaceDeviceGray )ToPdfObject ()_ea .PdfObject {return _ea .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject converts the K dictionary to a PDF object.
func (_cedcg *KValue )ToPdfObject ()_ea .PdfObject {if _cedcg ._febfg !=nil {return _ea .MakeIndirectObject (_cedcg ._febfg .ToPdfObject ());};if _cedcg ._aadab !=nil {return _cedcg ._aadab ;};if _cedcg ._fffff !=nil {return _ea .MakeInteger (int64 (*_cedcg ._fffff ));
};return nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_ggfbd *PdfOutputIntent )ToPdfObject ()_ea .PdfObject {if _ggfbd ._eagfc ==nil {_ggfbd ._eagfc =_ea .MakeDict ();};_adegc :=_ggfbd ._eagfc ;if _ggfbd .Type !=""{_adegc .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName (_ggfbd .Type ));};_adegc .Set ("\u0053",_ea .MakeName (_ggfbd .S .String ()));
if _ggfbd .OutputCondition !=""{_adegc .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_ea .MakeString (_ggfbd .OutputCondition ));};_adegc .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_ea .MakeString (_ggfbd .OutputConditionIdentifier ));
_adegc .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_ea .MakeString (_ggfbd .RegistryName ));if _ggfbd .Info !=""{_adegc .Set ("\u0049\u006e\u0066\u006f",_ea .MakeString (_ggfbd .Info ));};if len (_ggfbd .DestOutputProfile )!=0{_aeba ,_beafg :=_ea .MakeStream (_ggfbd .DestOutputProfile ,_ea .NewFlateEncoder ());
if _beafg !=nil {_ca .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_beafg );
};_aeba .PdfObjectDictionary .Set ("\u004e",_ea .MakeInteger (int64 (_ggfbd .ColorComponents )));_fdbbd :=make ([]float64 ,_ggfbd .ColorComponents *2);for _gecda :=0;_gecda < _ggfbd .ColorComponents *2;_gecda ++{_efafg :=0.0;if _gecda %2!=0{_efafg =1.0;
};_fdbbd [_gecda ]=_efafg ;};_aeba .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_ea .MakeArrayFromFloats (_fdbbd ));_adegc .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_aeba );};return _adegc ;
};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gbbdf OutlineDest )ToPdfObject ()_ea .PdfObject {if (_gbbdf .PageObj ==nil &&_gbbdf .Page < 0)||_gbbdf .Mode ==""{return _ea .MakeNull ();};_gdda :=_ea .MakeArray ();if _gbbdf .PageObj !=nil {_gdda .Append (_gbbdf .PageObj );}else {_gdda .Append (_ea .MakeInteger (_gbbdf .Page ));
};_gdda .Append (_ea .MakeName (_gbbdf .Mode ));switch _gbbdf .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gdda .Append (_ea .MakeFloat (_gbbdf .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gdda .Append (_ea .MakeFloat (_gbbdf .X ));
case "\u0058\u0059\u005a":_gdda .Append (_ea .MakeFloat (_gbbdf .X ));_gdda .Append (_ea .MakeFloat (_gbbdf .Y ));_gdda .Append (_ea .MakeFloat (_gbbdf .Zoom ));default:_gdda .Set (1,_ea .MakeName ("\u0046\u0069\u0074"));};return _gdda ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_babf :=NewPdfAnnotation ();_bfe :=&PdfAnnotation3D {};_bfe .PdfAnnotation =_babf ;_babf .SetContext (_bfe );return _bfe ;};

// A returns the value of the A component of the color.
func (_dagc *PdfColorCalRGB )A ()float64 {return _dagc [0]};func _egce (_cdbdf _ea .PdfObject )*Names {_ggddga :=_fgcgbf ();_egabc :=_ea .TraceToDirectObject (_cdbdf ).(*_ea .PdfObjectDictionary );if _cfcab :=_egabc .Get ("\u0044\u0065\u0073t\u0073");_cfcab !=nil {_ggddga .Dests =_ea .TraceToDirectObject (_cfcab ).(*_ea .PdfObjectDictionary );
};if _afcgg :=_egabc .Get ("\u0041\u0050");_afcgg !=nil {_ggddga .AP =_ea .TraceToDirectObject (_afcgg ).(*_ea .PdfObjectDictionary );};if _ecfbg :=_egabc .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_ecfbg !=nil {_ggddga .JavaScript =_ea .TraceToDirectObject (_ecfbg ).(*_ea .PdfObjectDictionary );
};if _ddcfg :=_egabc .Get ("\u0050\u0061\u0067e\u0073");_ddcfg !=nil {_ggddga .Pages =_ea .TraceToDirectObject (_ddcfg ).(*_ea .PdfObjectDictionary );};if _bfeaa :=_egabc .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_bfeaa !=nil {_ggddga .Templates =_ea .TraceToDirectObject (_bfeaa ).(*_ea .PdfObjectDictionary );
};if _cebg :=_egabc .Get ("\u0049\u0044\u0053");_cebg !=nil {_ggddga .IDS =_ea .TraceToDirectObject (_cebg ).(*_ea .PdfObjectDictionary );};if _afdb :=_egabc .Get ("\u0055\u0052\u004c\u0053");_afdb !=nil {_ggddga .URLS =_ea .TraceToDirectObject (_afdb ).(*_ea .PdfObjectDictionary );
};if _egfed :=_egabc .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_egfed !=nil {_ggddga .EmbeddedFiles =_ea .TraceToDirectObject (_egfed ).(*_ea .PdfObjectDictionary );};if _ebgb :=_egabc .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_ebgb !=nil {_ggddga .AlternatePresentations =_ea .TraceToDirectObject (_ebgb ).(*_ea .PdfObjectDictionary );};if _affcf :=_egabc .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_affcf !=nil {_ggddga .Renditions =_ea .TraceToDirectObject (_affcf ).(*_ea .PdfObjectDictionary );
};return _ggddga ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cdbf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cdbf .N =N ;return _cdbf ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ea .PdfIndirectObject ;SV *_ea .PdfIndirectObject ;};func _beaed ()string {_dcgec .Lock ();defer _dcgec .Unlock ();return _eecb };

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ffc :=NewPdfAnnotation ();_bca :=&PdfAnnotationPrinterMark {};_bca .PdfAnnotation =_ffc ;_ffc .SetContext (_bca );return _bca ;};

// PartialName returns the partial name of the field.
func (_ddec *PdfField )PartialName ()string {_gfdfb :="";if _ddec .T !=nil {_gfdfb =_ddec .T .Decoded ();}else {_ca .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gfdfb ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fbdfe *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _efacf []*PdfOutlineTreeNode ;var _dadeg []string ;var _aagff func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aagff =func (_efce *PdfOutlineTreeNode ,_cbdce *[]*PdfOutlineTreeNode ,_ddef *[]string ,_faceb int ){if _efce ==nil {return ;
};if _efce ._bdddb ==nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_aafbd ,_degece :=_efce ._bdddb .(*PdfOutlineItem );if _degece {*_cbdce =append (*_cbdce ,&_aafbd .PdfOutlineTreeNode );
_abfbd :=_dgb .Repeat ("\u0020",_faceb *2)+_aafbd .Title .Decoded ();*_ddef =append (*_ddef ,_abfbd );};if _efce .First !=nil {_fadda :=_dgb .Repeat ("\u0020",_faceb *2)+"\u002b";*_ddef =append (*_ddef ,_fadda );_aagff (_efce .First ,_cbdce ,_ddef ,_faceb +1);
};if _degece &&_aafbd .Next !=nil {_aagff (_aafbd .Next ,_cbdce ,_ddef ,_faceb );};};_aagff (_fbdfe ._bbdf ,&_efacf ,&_dadeg ,0);return _efacf ,_dadeg ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gaba *PdfOutlineTreeNode )ToPdfObject ()_ea .PdfObject {return _gaba .GetContext ().ToPdfObject ()};

// GetStructRoot gets the StructTreeRoot object
func (_cdgcc *PdfPage )GetStructTreeRoot ()(*_ea .PdfObject ,bool ){_ccbd ,_cccgd :=_cdgcc ._fdfg .GetCatalogStructTreeRoot ();return &_ccbd ,_cccgd ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ea .PdfObject ;NewWindow _ea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_egdbf *PdfAnnotation3D )ToPdfObject ()_ea .PdfObject {_egdbf .PdfAnnotation .ToPdfObject ();_fcda :=_egdbf ._eab ;_cfcf :=_fcda .PdfObject .(*_ea .PdfObjectDictionary );_cfcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0033\u0044"));
_cfcf .SetIfNotNil ("\u0033\u0044\u0044",_egdbf .T3DD );_cfcf .SetIfNotNil ("\u0033\u0044\u0056",_egdbf .T3DV );_cfcf .SetIfNotNil ("\u0033\u0044\u0041",_egdbf .T3DA );_cfcf .SetIfNotNil ("\u0033\u0044\u0049",_egdbf .T3DI );_cfcf .SetIfNotNil ("\u0033\u0044\u0042",_egdbf .T3DB );
return _fcda ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fgbf pdfCIDFontType2 )GetCharMetrics (code _ge .CharCode )(_gf .CharMetrics ,bool ){if _gbaa ,_bfec :=_fgbf ._agcef [code ];_bfec {return _gf .CharMetrics {Wx :_gbaa },true ;};_ecbd :=rune (code );_cecfc ,_fggc :=_fgbf ._ggaed [_ecbd ];if !_fggc {_cecfc =int (_fgbf ._dfdf );
};return _gf .CharMetrics {Wx :float64 (_cecfc )},true ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_defagf *Outline )Insert (index uint ,item *OutlineItem ){_cfddac :=uint (len (_defagf .Entries ));if index > _cfddac {index =_cfddac ;};_defagf .Entries =append (_defagf .Entries [:index ],append ([]*OutlineItem {item },_defagf .Entries [index :]...)...);
};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_dbc :=NewPdfAnnotation ();_abf :=&PdfAnnotationWatermark {};_abf .PdfAnnotation =_dbc ;_dbc .SetContext (_abf );return _abf ;};

// ToPdfObject implements interface PdfModel.
func (_eegf *PdfAnnotationFreeText )ToPdfObject ()_ea .PdfObject {_eegf .PdfAnnotation .ToPdfObject ();_aeaf :=_eegf ._eab ;_fcaf :=_aeaf .PdfObject .(*_ea .PdfObjectDictionary );_eegf .PdfAnnotationMarkup .appendToPdfDictionary (_fcaf );_fcaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fcaf .SetIfNotNil ("\u0044\u0041",_eegf .DA );_fcaf .SetIfNotNil ("\u0051",_eegf .Q );_fcaf .SetIfNotNil ("\u0052\u0043",_eegf .RC );_fcaf .SetIfNotNil ("\u0044\u0053",_eegf .DS );_fcaf .SetIfNotNil ("\u0043\u004c",_eegf .CL );_fcaf .SetIfNotNil ("\u0049\u0054",_eegf .IT );
_fcaf .SetIfNotNil ("\u0042\u0045",_eegf .BE );_fcaf .SetIfNotNil ("\u0052\u0044",_eegf .RD );_fcaf .SetIfNotNil ("\u0042\u0053",_eegf .BS );_fcaf .SetIfNotNil ("\u004c\u0045",_eegf .LE );return _aeaf ;};func (_cadbf *LTV )generateVRIKey (_eccbe *PdfSignature )(string ,error ){_ccffd ,_cbef :=_cgdfd (_eccbe .Contents .Bytes ());
if _cbef !=nil {return "",_cbef ;};return _dgb .ToUpper (_ad .EncodeToString (_ccffd )),nil ;};

// SetStructParentsKey sets the StructParents key.
func (_fecdb *PdfPage )SetStructParentsKey (key int ){if key ==-1{_fecdb .StructParents =nil ;}else {_fecdb .StructParents =_ea .MakeInteger (int64 (key ));};};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_fedda *ViewerPreferences )PickTrayByPDFSize ()bool {if _fedda ._eccg ==nil {return false ;};return *_fedda ._eccg ;};

// SetAction sets the PDF action for the annotation link.
func (_dfg *PdfAnnotationLink )SetAction (action *PdfAction ){_dfg ._cbf =action ;if action ==nil {_dfg .A =nil ;};};func _bbdd (_edgf _ea .PdfObject )(*PdfFontDescriptor ,error ){_caac :=&PdfFontDescriptor {};_edgf =_ea .ResolveReference (_edgf );if _bccbg ,_gabg :=_edgf .(*_ea .PdfIndirectObject );
_gabg {_caac ._acegb =_bccbg ;_edgf =_bccbg .PdfObject ;};_gcdb ,_bdca :=_ea .GetDict (_edgf );if !_bdca {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edgf );
return nil ,_ea .ErrTypeError ;};if _degec :=_gcdb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_degec !=nil {_caac .FontName =_degec ;}else {_ca .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_dbgge ,_ :=_ea .GetName (_caac .FontName );if _dcga :=_gcdb .Get ("\u0054\u0079\u0070\u0065");_dcga !=nil {_fbcaec ,_ffbbda :=_dcga .(*_ea .PdfObjectName );if !_ffbbda ||string (*_fbcaec )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dcga ,_dbgge ,_caac .FontName );
};}else {_ca .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dbgge ,_caac .FontName );
};_caac .FontFamily =_gcdb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_caac .FontStretch =_gcdb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_caac .FontWeight =_gcdb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_caac .Flags =_gcdb .Get ("\u0046\u006c\u0061g\u0073");_caac .FontBBox =_gcdb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_caac .ItalicAngle =_gcdb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_caac .Ascent =_gcdb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_caac .Descent =_gcdb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_caac .Leading =_gcdb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_caac .CapHeight =_gcdb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_caac .XHeight =_gcdb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_caac .StemV =_gcdb .Get ("\u0053\u0074\u0065m\u0056");_caac .StemH =_gcdb .Get ("\u0053\u0074\u0065m\u0048");_caac .AvgWidth =_gcdb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_caac .MaxWidth =_gcdb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_caac .MissingWidth =_gcdb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_caac .FontFile =_gcdb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_caac .FontFile2 =_gcdb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_caac .FontFile3 =_gcdb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_caac .CharSet =_gcdb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_caac .Style =_gcdb .Get ("\u0053\u0074\u0079l\u0065");_caac .Lang =_gcdb .Get ("\u004c\u0061\u006e\u0067");
_caac .FD =_gcdb .Get ("\u0046\u0044");_caac .CIDSet =_gcdb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _caac .Flags !=nil {if _dffaa ,_gfcab :=_ea .GetIntVal (_caac .Flags );_gfcab {_caac ._bgcde =_dffaa ;};};if _caac .MissingWidth !=nil {if _addf ,_bacga :=_ea .GetNumberAsFloat (_caac .MissingWidth );
_bacga ==nil {_caac ._geaf =_addf ;};};if _caac .FontFile !=nil {_aggdg ,_fffc :=_fcgbe (_caac .FontFile );if _fffc !=nil {return _caac ,_fffc ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_aggdg );_caac .fontFile =_aggdg ;
};if _caac .FontFile2 !=nil {_adcfa ,_fgcgb :=_gf .NewFontFile2FromPdfObject (_caac .FontFile2 );if _fgcgb !=nil {return _caac ,_fgcgb ;};_ca .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_adcfa .String ());_caac ._dfafc =&_adcfa ;
};return _caac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fafb *PdfAnnotationRichMedia )ToPdfObject ()_ea .PdfObject {_fafb .PdfAnnotation .ToPdfObject ();_fafc :=_fafb ._eab ;_cbc :=_fafc .PdfObject .(*_ea .PdfObjectDictionary );_cbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_cbc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fafb .RichMediaSettings );_cbc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fafb .RichMediaContent );
return _fafc ;};

// IsColored specifies if the pattern is colored.
func (_fdgdb *PdfTilingPattern )IsColored ()bool {if _fdgdb .PaintType !=nil &&*_fdgdb .PaintType ==1{return true ;};return false ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fddbf *_ea .PdfIndirectObject ;};func (_ebgef *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

// ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ea .StreamEncoder ;Intent _ea .PdfObject ;ImageMask _ea .PdfObject ;Mask _ea .PdfObject ;Matte _ea .PdfObject ;Decode _ea .PdfObject ;Interpolate _ea .PdfObject ;Alternatives _ea .PdfObject ;
SMask _ea .PdfObject ;SMaskInData _ea .PdfObject ;Name _ea .PdfObject ;StructParent _ea .PdfObject ;ID _ea .PdfObject ;OPI _ea .PdfObject ;Metadata _ea .PdfObject ;OC _ea .PdfObject ;Stream []byte ;_bccba *_ea .PdfObjectStream ;_dadfd bool ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_acd :=NewPdfAction ();_aea :=&PdfActionHide {};_aea .PdfAction =_acd ;_acd .SetContext (_aea );return _aea ;};

// String returns a human readable description of `fontfile`.
func (_bbbaf *fontFile )String ()string {_gbcbc :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bbbaf ._ccabg !=nil {_gbcbc =_bbbaf ._ccabg .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bbbaf ._adebe ,_gbcbc );
};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_acgbe int ,_cdabb *PdfPage )error ;

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// AddKDict adds a K dictionary object to the structure tree root.
func (_caead *StructTreeRoot )AddKDict (k *KDict ){_caead .K =append (_caead .K ,k )};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_eaege FieldFlag )Has (fl FieldFlag )bool {return (_eaege .Mask ()&fl .Mask ())> 0};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_eaef *ViewerPreferences )IsDisplayDocTitle ()bool {if _eaef ._efadb ==nil {return false ;};return *_eaef ._efadb ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ea .PdfObject ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_ggacg *PdfWriter )mapObjectStreams (_fdcec bool )(map[_ea .PdfObject ]bool ,bool ){_cddba :=make (map[_ea .PdfObject ]bool );for _ ,_dbcb :=range _ggacg ._cgdbdb {if _bccbd ,_egaee :=_dbcb .(*_ea .PdfObjectStreams );
_egaee {_fdcec =true ;for _ ,_fgebc :=range _bccbd .Elements (){_cddba [_fgebc ]=true ;if _cceba ,_faecb :=_fgebc .(*_ea .PdfIndirectObject );_faecb {_cddba [_cceba .PdfObject ]=true ;};};};};return _cddba ,_fdcec ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bbaed *_ea .PdfIndirectObject ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _ea .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _ea .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_ea .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _ea .PdfObject ;

// The children of this structure element.
K _ea .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _ea .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _ea .PdfObject ;

// The current revision number of this structure element
R *_ea .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_ea .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_ea .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_ea .PdfObjectString ;

// The expanded form of an abbreviation.
E *_ea .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_ea .PdfObjectString ;_deecfd []*KValue ;_bfgae int64 ;_cbfbgee *PdfRectangle ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ea .PdfObjectString ;Q *_ea .PdfObjectInteger ;DS *_ea .PdfObjectString ;RV _ea .PdfObject ;MaxLen *_ea .PdfObjectInteger ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_ggdec :=appender .Reader .DSS ;if _ggdec ==nil {_ggdec =NewDSS ();};if _aeeg :=_ggdec .GenerateHashMaps ();_aeeg !=nil {return nil ,_aeeg ;};return &LTV {CertClient :_ec .NewCertClient (),OCSPClient :_ec .NewOCSPClient (),CRLClient :_ec .NewCRLClient (),SkipExisting :true ,_fgcff :appender ,_befaa :_ggdec },nil ;
};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gcfadd *PdfPageResources )SetXObjectFormByName (keyName _ea .PdfObjectName ,xform *XObjectForm )error {_cagbd :=xform .ToPdfObject ().(*_ea .PdfObjectStream );_dddba :=_gcfadd .SetXObjectByName (keyName ,_cagbd );return _dddba ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bgdfa *PdfFont )GetCharMetrics (code _ge .CharCode )(CharMetrics ,bool ){var _aedgb _gf .CharMetrics ;switch _efbbg :=_bgdfa ._gbee .(type ){case *pdfFontSimple :if _eeced ,_cggbe :=_efbbg .GetCharMetrics (code );_cggbe {return _eeced ,_cggbe ;};
case *pdfFontType0 :if _bgdec ,_cfgf :=_efbbg .GetCharMetrics (code );_cfgf {return _bgdec ,_cfgf ;};case *pdfCIDFontType0 :if _gfea ,_aafbb :=_efbbg .GetCharMetrics (code );_aafbb {return _gfea ,_aafbb ;};case *pdfCIDFontType2 :if _cfddg ,_aade :=_efbbg .GetCharMetrics (code );
_aade {return _cfddg ,_aade ;};case *pdfFontType3 :if _eeda ,_gaeaa :=_efbbg .GetCharMetrics (code );_gaeaa {return _eeda ,_gaeaa ;};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bgdfa ._gbee );
return _aedgb ,false ;};if _cada ,_egdg :=_bgdfa .GetFontDescriptor ();_egdg ==nil &&_cada !=nil {return _gf .CharMetrics {Wx :_cada ._geaf },true ;};_ca .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bgdfa );
return _aedgb ,false ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_gegce *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_eeaa :=_af .NewReader (img .getBase ());_agbf :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_gegce .AlternateSpace .GetNumComponents (),nil ,img ._abgae ,nil );
_efde :=_af .NewWriter (_agbf );_acdc :=_dgf .Pow (2,float64 (img .BitsPerComponent ))-1;_ca .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ca .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_gegce .TintTransform );_febeb :=_gegce .AlternateSpace .DecodeArray ();var (_fcgc uint32 ;_egaf error ;);for {_fcgc ,_egaf =_eeaa .ReadSample ();
if _egaf ==_cde .EOF {break ;};if _egaf !=nil {return img ,_egaf ;};_bagec :=float64 (_fcgc )/_acdc ;_dddae ,_dgcce :=_gegce .TintTransform .Evaluate ([]float64 {_bagec });if _dgcce !=nil {return img ,_dgcce ;};for _bcfaa ,_gbae :=range _dddae {_deae :=_dcc .LinearInterpolate (_gbae ,_febeb [_bcfaa *2],_febeb [_bcfaa *2+1],0,1);
if _dgcce =_efde .WriteSample (uint32 (_deae *_acdc ));_dgcce !=nil {return img ,_dgcce ;};};};return _gegce .AlternateSpace .ImageToRGB (_aefbb (&_agbf ));};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_eedb :=NewPdfAnnotation ();_agcf :=&PdfAnnotationInk {};_agcf .PdfAnnotation =_eedb ;_agcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eedb .SetContext (_agcf );return _agcf ;};const (FieldFlagClear FieldFlag =0;
FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);
FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);
FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););func _cgdfd (_ggbce []byte )([]byte ,error ){_febgb :=_be .New ();
if _ ,_cgace :=_cde .Copy (_febgb ,_cb .NewReader (_ggbce ));_cgace !=nil {return nil ,_cgace ;};return _febgb .Sum (nil ),nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ea .PdfObject ;BS _ea .PdfObject ;LE _ea .PdfObject ;IC _ea .PdfObject ;LL _ea .PdfObject ;LLE _ea .PdfObject ;Cap _ea .PdfObject ;IT _ea .PdfObject ;LLO _ea .PdfObject ;CP _ea .PdfObject ;
Measure _ea .PdfObject ;CO _ea .PdfObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ea .PdfObject ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _fg .Time ;ModTime _fg .Time ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adgge *PdfPageResourcesColorspaces )ToPdfObject ()_ea .PdfObject {_bgabbf :=_ea .MakeDict ();for _ ,_fede :=range _adgge .Names {_bgabbf .Set (_ea .PdfObjectName (_fede ),_adgge .Colorspaces [_fede ].ToPdfObject ());};if _adgge ._cbagf !=nil {_adgge ._cbagf .PdfObject =_bgabbf ;
return _adgge ._cbagf ;};return _bgabbf ;};

// M returns the value of the magenta component of the color.
func (_egaa *PdfColorDeviceCMYK )M ()float64 {return _egaa [1]};func (_aafdc fontCommon )coreString ()string {_dbaaf :="";if _aafdc ._eafg !=nil {_dbaaf =_aafdc ._eafg .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_aafdc ._dfeb ,_aafdc ._ceac ,_aafdc ._feffc ,_aafdc ._gdga ,_aafdc ._cbfe !=nil ,_aafdc .fontFlags (),_dbaaf );
};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dgfa :=PdfColorDeviceRGB {r ,g ,b };return &_dgfa ;};

// String returns a string describing the font descriptor.
func (_adedee *PdfFontDescriptor )String ()string {var _agfa []string ;if _adedee .FontName !=nil {_agfa =append (_agfa ,_adedee .FontName .String ());};if _adedee .FontFamily !=nil {_agfa =append (_agfa ,_adedee .FontFamily .String ());};if _adedee .fontFile !=nil {_agfa =append (_agfa ,_adedee .fontFile .String ());
};if _adedee ._dfafc !=nil {_agfa =append (_agfa ,_adedee ._dfafc .String ());};_agfa =append (_agfa ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_adedee .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_dgb .Join (_agfa ,"\u002c\u0020"));
};func (_ffbc *PdfReader )newPdfAnnotationWidgetFromDict (_fdb *_ea .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fcee :=PdfAnnotationWidget {};_fcee .H =_fdb .Get ("\u0048");_fcee .MK =_fdb .Get ("\u004d\u004b");_fcee .A =_fdb .Get ("\u0041");
_fcee .AA =_fdb .Get ("\u0041\u0041");_fcee .BS =_fdb .Get ("\u0042\u0053");_fcee .Parent =_fdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fcee ,nil ;};func (_abgea *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gefcf :=_abgea ._eafg ;
_gefcf !=nil {return _gefcf ;};return _abgea ._caaff ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cad :=NewPdfAction ();_ffg :=&PdfActionURI {};_ffg .PdfAction =_cad ;_cad .SetContext (_ffg );return _ffg ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_da :=NewPdfAction ();_bc :=&PdfActionGoTo {};_bc .PdfAction =_da ;_da .SetContext (_bc );return _bc ;};func _fcgbe (_ffbge _ea .PdfObject )(*fontFile ,error ){_ca .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ffbge );
_cebbc :=&fontFile {};_ffbge =_ea .TraceToDirectObject (_ffbge );_effd ,_ccfce :=_ffbge .(*_ea .PdfObjectStream );if !_ccfce {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ffbge );
return nil ,_ea .ErrTypeError ;};_ggce :=_effd .PdfObjectDictionary ;_dffae ,_fcea :=_ea .DecodeStream (_effd );if _fcea !=nil {return nil ,_fcea ;};_afeg ,_ccfce :=_ea .GetNameVal (_ggce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ccfce {_cebbc ._egfc =_afeg ;
if _afeg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ca .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_geff ,_ :=_ea .GetIntVal (_ggce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bfbbd ,_ :=_ea .GetIntVal (_ggce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _geff > len (_dffae ){_geff =len (_dffae );
};if _geff +_bfbbd > len (_dffae ){_bfbbd =len (_dffae )-_geff ;};_gcfab :=_dffae [:_geff ];var _ggcce []byte ;if _bfbbd > 0{_ggcce =_dffae [_geff :_geff +_bfbbd ];};if _geff > 0&&_bfbbd > 0{_dcfadc :=_cebbc .loadFromSegments (_gcfab ,_ggcce );if _dcfadc !=nil {return nil ,_dcfadc ;
};};return _cebbc ,nil ;};func _gcacd (_baefbb *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_baefbb }};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ea .PdfObjectStream ;Data []byte ;_cdcf *_ea .PdfIndirectObject ;_bdcda *_ea .PdfObjectStream ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_deecfd :make ([]*KValue ,0),_bfgae :-1}};

// ToPdfObject implements interface PdfModel.
func (_cege *PdfFilespec )ToPdfObject ()_ea .PdfObject {_dcbgc :=_cege .getDict ();_dcbgc .Clear ();_dcbgc .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_dcbgc .SetIfNotNil ("\u0046\u0053",_cege .FS );
_dcbgc .SetIfNotNil ("\u0046",_cege .F );_dcbgc .SetIfNotNil ("\u0055\u0046",_cege .UF );_dcbgc .SetIfNotNil ("\u0044\u004f\u0053",_cege .DOS );_dcbgc .SetIfNotNil ("\u004d\u0061\u0063",_cege .Mac );_dcbgc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cege .Unix );
_dcbgc .SetIfNotNil ("\u0049\u0044",_cege .ID );_dcbgc .SetIfNotNil ("\u0056",_cege .V );_dcbgc .SetIfNotNil ("\u0045\u0046",_cege .EF );_dcbgc .SetIfNotNil ("\u0052\u0046",_cege .RF );_dcbgc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_cege .Desc );_dcbgc .SetIfNotNil ("\u0043\u0049",_cege .CI );
_dcbgc .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_cege .AFRelationship );return _cege ._cbgg ;};func _cgfcff (_dgddd _ea .PdfObject )(*PdfFunctionType2 ,error ){_befae :=&PdfFunctionType2 {};var _cdgg *_ea .PdfObjectDictionary ;
if _gdbcc ,_agcg :=_dgddd .(*_ea .PdfIndirectObject );_agcg {_ebec ,_bacfa :=_gdbcc .PdfObject .(*_ea .PdfObjectDictionary );if !_bacfa {return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_befae ._edfef =_gdbcc ;
_cdgg =_ebec ;}else if _acdce ,_ebggf :=_dgddd .(*_ea .PdfObjectDictionary );_ebggf {_cdgg =_acdce ;}else {return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ca .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cdgg .String ());
_cdec ,_gdcb :=_ea .TraceToDirectObject (_cdgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ea .PdfObjectArray );if !_gdcb {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cdec .Len ()< 0||_cdec .Len ()%2!=0{_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cgga ,_eacgc :=_cdec .ToFloat64Array ();if _eacgc !=nil {return nil ,_eacgc ;};_befae .Domain =_cgga ;_cdec ,_gdcb =_ea .TraceToDirectObject (_cdgg .Get ("\u0052\u0061\u006eg\u0065")).(*_ea .PdfObjectArray );if _gdcb {if _cdec .Len ()< 0||_cdec .Len ()%2!=0{return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_acdgg ,_afbda :=_cdec .ToFloat64Array ();if _afbda !=nil {return nil ,_afbda ;};_befae .Range =_acdgg ;};_cdec ,_gdcb =_ea .TraceToDirectObject (_cdgg .Get ("\u0043\u0030")).(*_ea .PdfObjectArray );if _gdcb {_gbbcf ,_cegc :=_cdec .ToFloat64Array ();
if _cegc !=nil {return nil ,_cegc ;};_befae .C0 =_gbbcf ;};_cdec ,_gdcb =_ea .TraceToDirectObject (_cdgg .Get ("\u0043\u0031")).(*_ea .PdfObjectArray );if _gdcb {_ebcda ,_aaagf :=_cdec .ToFloat64Array ();if _aaagf !=nil {return nil ,_aaagf ;};_befae .C1 =_ebcda ;
};if len (_befae .C0 )!=len (_befae .C1 ){_ca .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_ea .ErrRangeError ;};N ,_eacgc :=_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_cdgg .Get ("\u004e")));
if _eacgc !=nil {_ca .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cdgg .String ());return nil ,_eacgc ;};_befae .N =N ;
return _befae ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fcce :=&PdfColorspaceSpecialSeparation {};return _fcce ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eea *PdfAction )GetContainingPdfObject ()_ea .PdfObject {return _eea ._fgc };

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ddag *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_daae int64 ;_edbcda int64 ;_ecafe int64 ;_cdcef int64 ;_bcddc int64 ;_eacgg int64 ;_dcfge byte ;_agfbcf int64 ;_dcfcc int64 ;};func _bebag (_bfbbb _ea .PdfObject ,_fbggf *PdfReader )(*OutlineDest ,error ){_gdeef ,_bcbgf :=_ea .GetArray (_bfbbb );
if !_bcbgf {return nil ,_dc .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_aagde :=_gdeef .Len ();if _aagde < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_aagde );
};_fgeae :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_aedda :=_gdeef .Get (0);if _ccecb ,_edbcc :=_ea .GetIndirect (_aedda );_edbcc {if _ ,_ccfff ,_abeg :=_fbggf .PageFromIndirectObject (_ccecb );_abeg ==nil {_fgeae .Page =int64 (_ccfff -1);}else {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ccecb );
};_fgeae .PageObj =_ccecb ;}else if _ebgaf ,_cadaf :=_ea .GetIntVal (_aedda );_cadaf {if _ebgaf >=0&&_ebgaf < len (_fbggf .PageList ){_fgeae .PageObj =_fbggf .PageList [_ebgaf ].GetPageAsIndirectObject ();}else {_ca .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ebgaf );
};_fgeae .Page =int64 (_ebgaf );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_aedda );};_abbd ,_bcbgf :=_ea .GetNameVal (_gdeef .Get (1));
if !_bcbgf {_ca .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gdeef .Get (1));
return _fgeae ,nil ;};switch _abbd {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _aagde > 2{_fgeae .Y ,_ =_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_gdeef .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _aagde > 2{_fgeae .X ,_ =_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_gdeef .Get (2)));
};case "\u0058\u0059\u005a":if _aagde > 4{_fgeae .X ,_ =_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_gdeef .Get (2)));_fgeae .Y ,_ =_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_gdeef .Get (3)));_fgeae .Zoom ,_ =_ea .GetNumberAsFloat (_ea .TraceToDirectObject (_gdeef .Get (4)));
};default:_abbd ="\u0046\u0069\u0074";};_fgeae .Mode =_abbd ;return _fgeae ,nil ;};func (_ggf *PdfReader )newPdfActionTransFromDict (_gag *_ea .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gag .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_deda :=&PdfShadingType2 {};_deda .PdfShading =&PdfShading {};_deda .PdfShading ._feebc =_ea .MakeIndirectObject (_ea .MakeDict ());_deda .PdfShading ._bgaf =_deda ;return _deda ;};func (_eddbd *pdfFontType0 )baseFields ()*fontCommon {return &_eddbd .fontCommon };


// GetNumComponents returns the number of color components.
func (_cgab *PdfColorspaceICCBased )GetNumComponents ()int {return _cgab .N };

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_ecgaf *PdfWriter )SetCatalogMarkInfo (info _ea .PdfObject )error {if info ==nil {_ecgaf ._dacfd .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _afafgg ,_bfag :=info .(*_ea .PdfObjectReference );_bfag {info =_afafgg .Resolve ();
if info ==nil {_ecgaf ._dacfd .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};if _ ,_edebee :=info .(*_ea .PdfIndirectObject );_edebee {_ecgaf .addObject (info );};_ecgaf ._dacfd .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );
return nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fgef :_ea .MakeIndirectObject (_ea .MakeDict ())};};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ebace DefaultImageHandler )NewGrayImageFromGoImage (goimg _ba .Image )(*Image ,error ){_geebb :=goimg .Bounds ();_bcaaf :=&Image {Width :int64 (_geebb .Dx ()),Height :int64 (_geebb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fbce :=goimg .(type ){case *_ba .Gray :if len (_fbce .Pix )!=_geebb .Dx ()*_geebb .Dy (){_bafbc ,_feeaf :=_dcc .GrayConverter .Convert (goimg );
if _feeaf !=nil {return nil ,_feeaf ;};_bcaaf .Data =_bafbc .Pix ();}else {_bcaaf .Data =_fbce .Pix ;};case *_ba .Gray16 :_bcaaf .BitsPerComponent =16;if len (_fbce .Pix )!=_geebb .Dx ()*_geebb .Dy ()*2{_gbfa ,_cacc :=_dcc .Gray16Converter .Convert (goimg );
if _cacc !=nil {return nil ,_cacc ;};_bcaaf .Data =_gbfa .Pix ();}else {_bcaaf .Data =_fbce .Pix ;};case _dcc .Image :_ffcac :=_fbce .Base ();if _ffcac .ColorComponents ==1{_bcaaf .BitsPerComponent =int64 (_ffcac .BitsPerComponent );_bcaaf .Data =_ffcac .Data ;
return _bcaaf ,nil ;};_egeaa ,_abcbb :=_dcc .GrayConverter .Convert (goimg );if _abcbb !=nil {return nil ,_abcbb ;};_bcaaf .Data =_egeaa .Pix ();default:_eedbe ,_efaa :=_dcc .GrayConverter .Convert (goimg );if _efaa !=nil {return nil ,_efaa ;};_bcaaf .Data =_eedbe .Pix ();
};return _bcaaf ,nil ;};func (_geeabc *PdfWriter )setHashIDs (_dfdgd _e .Hash )error {_bbgff :=_dfdgd .Sum (nil );if _geeabc ._fgac ==""{_geeabc ._fgac =_ad .EncodeToString (_bbgff [:8]);};_geeabc .setDocumentIDs (_geeabc ._fgac ,_ad .EncodeToString (_bbgff [8:]));
return nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _ea .PdfObject )(*PdfOutputIntent ,error ){_faed :=&PdfOutputIntent {};if _daccc :=_faed .ParsePdfObject (object );_daccc !=nil {return nil ,_daccc ;};return _faed ,nil ;};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_aegfag *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_aegfag ._edegb =nonFullScreenPageMode ;};func (_abade *PdfReader )loadDSS ()(*DSS ,error ){if _abade ._afedg .GetCrypter ()!=nil &&!_abade ._afedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aabac :=_abade ._gbggd .Get ("\u0044\u0053\u0053");if _aabac ==nil {return nil ,nil ;};_cgdebe ,_ :=_ea .GetIndirect (_aabac );_aabac =_ea .TraceToDirectObject (_aabac );switch _edee :=_aabac .(type ){case *_ea .PdfObjectNull :return nil ,nil ;case *_ea .PdfObjectDictionary :return _adda (_cgdebe ,_edee );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_aabac );};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bgabb *_ea .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cagff *PdfShading )ToPdfObject ()_ea .PdfObject {_beddd :=_cagff ._feebc ;_ebacef ,_bgaegc :=_cagff .getShadingDict ();if _bgaegc !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cagff .ShadingType !=nil {_ebacef .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cagff .ShadingType );};if _cagff .ColorSpace !=nil {_ebacef .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cagff .ColorSpace .ToPdfObject ());
};if _cagff .Background !=nil {_ebacef .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cagff .Background );};if _cagff .BBox !=nil {_ebacef .Set ("\u0042\u0042\u006f\u0078",_cagff .BBox .ToPdfObject ());};if _cagff .AntiAlias !=nil {_ebacef .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cagff .AntiAlias );
};return _beddd ;};func (_fbaaf *PdfWriter )setDocInfo (_ceba _ea .PdfObject ){if _fbaaf .hasObject (_fbaaf ._dcca ){delete (_fbaaf ._efaca ,_fbaaf ._dcca );delete (_fbaaf ._eedfe ,_fbaaf ._dcca );for _fdbed ,_ebdbc :=range _fbaaf ._cgdbdb {if _ebdbc ==_fbaaf ._dcca {copy (_fbaaf ._cgdbdb [_fdbed :],_fbaaf ._cgdbdb [_fdbed +1:]);
_fbaaf ._cgdbdb [len (_fbaaf ._cgdbdb )-1]=nil ;_fbaaf ._cgdbdb =_fbaaf ._cgdbdb [:len (_fbaaf ._cgdbdb )-1];break ;};};};_edac :=_ea .PdfIndirectObject {};_edac .PdfObject =_ceba ;_fbaaf ._dcca =&_edac ;_fbaaf .addObject (&_edac );};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bgcg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgcg .Base ==nil {return nil ,_dc .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bgcg .Base .ColorToRGB (color );};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_cabdb :=Permissions {};_cabdb .DocMDP =docMdp ;_gfaf :=_ea .MakeDict ();_gfaf .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_cabdb ._effgg =_gfaf ;return &_cabdb ;};func (_cggd *PdfReader )newPdfActionGoTo3DViewFromDict (_dfag *_ea .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dfag .Get ("\u0054\u0041"),V :_dfag .Get ("\u0056")},nil ;
};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_eagfc :_ea .MakeDict ()};
};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_gfdde :=&PdfColorspaceCalGray {};_gfdde .BlackPoint =[]float64 {0.0,0.0,0.0};_gfdde .Gamma =1;return _gfdde ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cbfbg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgcb ,_dcba :=_ea .GetNumbersAsFloat (objects );
if _dcba !=nil {return nil ,_dcba ;};return _cbfbg .ColorFromFloats (_cgcb );};func _acedbc (_ddea _ea .PdfObject )(*PdfPageResourcesColorspaces ,error ){_acdba :=&PdfPageResourcesColorspaces {};if _abbdd ,_bbdgf :=_ddea .(*_ea .PdfIndirectObject );_bbdgf {_acdba ._cbagf =_abbdd ;
_ddea =_abbdd .PdfObject ;};_eacecc ,_bbcc :=_ea .GetDict (_ddea );if !_bbcc {return nil ,_dc .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_acdba .Names =[]string {};
_acdba .Colorspaces =map[string ]PdfColorspace {};for _ ,_gbgg :=range _eacecc .Keys (){_fbcaed :=_eacecc .Get (_gbgg );_acdba .Names =append (_acdba .Names ,string (_gbgg ));_gabde ,_eegfed :=NewPdfColorspaceFromPdfObject (_fbcaed );if _eegfed !=nil {return nil ,_eegfed ;
};_acdba .Colorspaces [string (_gbgg )]=_gabde ;};return _acdba ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ea .PdfObject ;LE _ea .PdfObject ;BS _ea .PdfObject ;IC _ea .PdfObject ;BE _ea .PdfObject ;IT _ea .PdfObject ;Measure _ea .PdfObject ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gedee :=NewPdfAnnotation ();_fbcd :=&PdfAnnotationCaret {};_fbcd .PdfAnnotation =_gedee ;_fbcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gedee .SetContext (_fbcd );return _fbcd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_dedcg *LTV )EnableChain (chain []*_fgg .Certificate )error {return _dedcg .enable (nil ,chain ,"")};func _gbbgf (_efgaf *_ea .PdfObjectDictionary ,_feec *fontCommon )(*pdfCIDFontType0 ,error ){if _feec ._dfeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_feec );
return nil ,_ea .ErrRangeError ;};_bgea :=_gfgggg (_feec );_faad ,_gffa :=_ea .GetDict (_efgaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gffa {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_feec );
return nil ,ErrRequiredAttributeMissing ;};_bgea .CIDSystemInfo =_faad ;_bgea .DW =_efgaf .Get ("\u0044\u0057");_bgea .W =_efgaf .Get ("\u0057");_bgea .DW2 =_efgaf .Get ("\u0044\u0057\u0032");_bgea .W2 =_efgaf .Get ("\u0057\u0032");_bgea ._debg =1000.0;
if _fcgfd ,_gefb :=_ea .GetNumberAsFloat (_bgea .DW );_gefb ==nil {_bgea ._debg =_fcgfd ;};_dcgfg ,_cbfaa :=_dafgd (_bgea .W );if _cbfaa !=nil {return nil ,_cbfaa ;};if _dcgfg ==nil {_dcgfg =map[_ge .CharCode ]float64 {};};_bgea ._bcgd =_dcgfg ;return _bgea ,nil ;
};

// Encrypt encrypts the output file with a specified user/owner password.
func (_abbdfg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_edgfc :=RC4_128bit ;if options !=nil {_edgfc =options .Algorithm ;};_gdgcd :=_cag .PermOwner ;if options !=nil {_gdgcd =options .Permissions ;};var _afddgf _cbg .Filter ;
switch _edgfc {case RC4_128bit :_afddgf =_cbg .NewFilterV2 (16);case AES_128bit :_afddgf =_cbg .NewFilterAESV2 ();case AES_256bit :_afddgf =_cbg .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gecadc ,_cagfe ,_fgcgc :=_ea .PdfCryptNewEncrypt (_afddgf ,userPass ,ownerPass ,_gdgcd );if _fgcgc !=nil {return _fgcgc ;};_abbdfg ._afcgd =_gecadc ;if _cagfe .Major !=0{_abbdfg .SetVersion (_cagfe .Major ,_cagfe .Minor );};_abbdfg ._cefgg =_cagfe .Encrypt ;
_abbdfg ._fgac ,_abbdfg ._abbcf =_cagfe .ID0 ,_cagfe .ID1 ;_agdfaa :=_ea .MakeIndirectObject (_cagfe .Encrypt );_abbdfg ._eadec =_agdfaa ;_abbdfg .addObject (_agdfaa );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_egfa *PdfAnnotationCaret )ToPdfObject ()_ea .PdfObject {_egfa .PdfAnnotation .ToPdfObject ();_dbcd :=_egfa ._eab ;_aefe :=_dbcd .PdfObject .(*_ea .PdfObjectDictionary );_egfa .PdfAnnotationMarkup .appendToPdfDictionary (_aefe );_aefe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0043\u0061\u0072e\u0074"));
_aefe .SetIfNotNil ("\u0052\u0044",_egfa .RD );_aefe .SetIfNotNil ("\u0053\u0079",_egfa .Sy );return _dbcd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cefa *PdfColorspaceDeviceRGB )ToPdfObject ()_ea .PdfObject {return _ea .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_efgce *PdfReader )newPdfAnnotationTextFromDict (_aaec *_ea .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fdg :=PdfAnnotationText {};
_agba ,_bfcc :=_efgce .newPdfAnnotationMarkupFromDict (_aaec );if _bfcc !=nil {return nil ,_bfcc ;};_fdg .PdfAnnotationMarkup =_agba ;_fdg .Open =_aaec .Get ("\u004f\u0070\u0065\u006e");_fdg .Name =_aaec .Get ("\u004e\u0061\u006d\u0065");_fdg .State =_aaec .Get ("\u0053\u0074\u0061t\u0065");
_fdg .StateModel =_aaec .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fdg ,nil ;};func _gfdg (_bage _ea .PdfObject )(*PdfBorderStyle ,error ){_ebg :=&PdfBorderStyle {};_ebg ._ebdc =_bage ;var _dfde *_ea .PdfObjectDictionary ;
_bage =_ea .TraceToDirectObject (_bage );_dfde ,_fgcb :=_bage .(*_ea .PdfObjectDictionary );if !_fgcb {return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cdbb :=_dfde .Get ("\u0054\u0079\u0070\u0065");_cdbb !=nil {_bdb ,_ebbg :=_cdbb .(*_ea .PdfObjectName );
if !_ebbg {_ca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cdbb );
}else {if *_bdb !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ca .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bdb );};};};if _abcf :=_dfde .Get ("\u0057");
_abcf !=nil {_dfe ,_gege :=_ea .GetNumberAsFloat (_abcf );if _gege !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gege );return nil ,_gege ;};_ebg .W =&_dfe ;
};if _fagc :=_dfde .Get ("\u0053");_fagc !=nil {_fab ,_baffe :=_fagc .(*_ea .PdfObjectName );if !_baffe {return nil ,_dc .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ebge BorderStyle ;switch *_fab {case "\u0053":_ebge =BorderStyleSolid ;case "\u0044":_ebge =BorderStyleDashed ;case "\u0042":_ebge =BorderStyleBeveled ;case "\u0049":_ebge =BorderStyleInset ;case "\u0055":_ebge =BorderStyleUnderline ;default:_ca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_fab );
return nil ,_dc .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_ebg .S =&_ebge ;};if _acdg :=_dfde .Get ("\u0044");_acdg !=nil {_eaba ,_gfdc :=_acdg .(*_ea .PdfObjectArray );
if !_gfdc {_ca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_acdg );return nil ,_dc .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_eeb ,_aegb :=_eaba .ToIntegerArray ();if _aegb !=nil {_ca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_aegb );
return nil ,_aegb ;};_ebg .D =&_eeb ;};return _ebg ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_baaca *PdfFont )CharcodesToStrings (charcodes []_ge .CharCode ,replacementText string )([]string ,int ,int ){_gcabb :=_baaca .baseFields ();_gfdec :=make ([]string ,0,len (charcodes ));_gcdef :=0;_ccbc :=_baaca .Encoder ();_agfc :=_gcabb ._adbfa !=nil &&_baaca .IsSimple ()&&_baaca .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_dgb .Contains (_gcabb ._adbfa .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_agfc &&_ccbc !=nil {switch _dgff :=_ccbc .(type ){case _ge .SimpleEncoder :_bbec :=_dgff .BaseName ();if _ ,_abded :=_adebd [_bbec ];_abded {for _ ,_baced :=range charcodes {if _edaag ,_bdbf :=_ccbc .CharcodeToRune (_baced );_bdbf {_gfdec =append (_gfdec ,string (_edaag ));
}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_baced ,charcodes ,_gcabb .isCIDFont (),_baaca ,_ccbc );
_gcdef ++;_gfdec =append (_gfdec ,_cge .MissingCodeString );};};return _gfdec ,len (_gfdec ),_gcdef ;};};};for _ ,_cgcab :=range charcodes {if _gcabb ._adbfa !=nil {if _efba ,_aacb :=_gcabb ._adbfa .CharcodeToUnicode (_cge .CharCode (_cgcab ));_aacb {_fbfd ,_ :=_cc .DecodeLastRuneInString (_efba );
_fgfg :=_cbbagf (_fbfd );if !(_fgfg =="\u0043\u006f"){_gfdec =append (_gfdec ,_efba );continue ;};_ca .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_cgcab ,_efba );
};};if _ccbc !=nil {if _eaeca ,_eaed :=_ccbc .CharcodeToRune (_cgcab );_eaed {_bfbbf :=_cbbagf (_eaeca );if !(_bfbbf =="\u0043\u006f"){_gfdec =append (_gfdec ,string (_eaeca ));continue ;};_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_cgcab ,string (_eaeca ));
};};if replacementText !=""{_gfdec =append (_gfdec ,replacementText );}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cgcab ,charcodes ,_gcabb .isCIDFont (),_baaca ,_ccbc );
_gcdef ++;_gfdec =append (_gfdec ,_cge .MissingCodeString );};};if _gcdef !=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_gcdef ,_baaca );
};return _gfdec ,len (_gfdec ),_gcdef ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_gaaec DefaultImageHandler )Read (reader _cde .Reader )(*Image ,error ){_babg ,_ ,_caef :=_ba .Decode (reader );if _caef !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_caef );
return nil ,_caef ;};return _gaaec .NewImageFromGoImage (_babg );};

// ToPdfObject implements interface PdfModel.
func (_fee *PdfActionSound )ToPdfObject ()_ea .PdfObject {_fee .PdfAction .ToPdfObject ();_addc :=_fee ._fgc ;_cga :=_addc .PdfObject .(*_ea .PdfObjectDictionary );_cga .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeSound )));_cga .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fee .Sound );
_cga .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fee .Volume );_cga .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fee .Synchronous );_cga .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fee .Repeat );_cga .SetIfNotNil ("\u004d\u0069\u0078",_fee .Mix );
return _addc ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gcef *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gcef .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// SetViewClip sets the value of the viewClip.
func (_gbeeb *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_gbeeb ._bbgad =viewClip };

// ToPdfObject implements interface PdfModel.
func (_eba *PdfActionSubmitForm )ToPdfObject ()_ea .PdfObject {_eba .PdfAction .ToPdfObject ();_bce :=_eba ._fgc ;_eed :=_bce .PdfObject .(*_ea .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeSubmitForm )));if _eba .F !=nil {_eed .Set ("\u0046",_eba .F .ToPdfObject ());
};_eed .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eba .Fields );_eed .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eba .Flags );return _bce ;};func (_beda *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// WriteToFile writes the output PDF to file.
func (_cbced *PdfWriter )WriteToFile (outputFilePath string )error {_cadada ,_cbdcgf :=_abg .Create (outputFilePath );if _cbdcgf !=nil {return _cbdcgf ;};defer _cadada .Close ();return _cbced .Write (_cadada );};func (_bcd *pdfFontType0 )subsetRegistered ()error {_daea ,_aeffa :=_bcd .DescendantFont ._gbee .(*pdfCIDFontType2 );
if !_aeffa {_ca .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bcd .DescendantFont );return nil ;};if _daea ==nil {return nil ;
};if _daea ._eafg ==nil {_ca .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bcd ._dcdd ==nil {_ca .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dfacd ,_aeffa :=_ea .GetStream (_daea ._eafg .FontFile2 );if !_aeffa {_ca .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _dc .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cedcb ,_caad :=_ea .DecodeStream (_dfacd );if _caad !=nil {_ca .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_caad );
return _caad ;};_fecbc ,_caad :=_eg .Parse (_cb .NewReader (_cedcb ));if _caad !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dfacd .Stream ));
return _caad ;};var _eedba []rune ;var _aeffae *_eg .Font ;switch _ebafc :=_bcd ._dcdd .(type ){case *_ge .TrueTypeFontEncoder :_eedba =_ebafc .RegisteredRunes ();_aeffae ,_caad =_fecbc .SubsetKeepRunes (_eedba );if _caad !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caad );
return _caad ;};_ebafc .SubsetRegistered ();case *_ge .IdentityEncoder :_eedba =_ebafc .RegisteredRunes ();_dabdg :=make ([]_eg .GlyphIndex ,len (_eedba ));for _cecf ,_eeeg :=range _eedba {_dabdg [_cecf ]=_eg .GlyphIndex (_eeeg );};_aeffae ,_caad =_fecbc .SubsetKeepIndices (_dabdg );
if _caad !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caad );return _caad ;};case _ge .SimpleEncoder :_egcd :=_ebafc .Charcodes ();for _ ,_ddgc :=range _egcd {_cadd ,_dcfgf :=_ebafc .CharcodeToRune (_ddgc );if !_dcfgf {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ddgc );
continue ;};_eedba =append (_eedba ,_cadd );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bcd ._dcdd );
};var _cbgaf _cb .Buffer ;_caad =_aeffae .Write (&_cbgaf );if _caad !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caad );return _caad ;};if _bcd ._adbfa !=nil {_badd :=make (map[_cge .CharCode ]rune ,len (_eedba ));for _ ,_abcfa :=range _eedba {_cbbb ,_fgfga :=_bcd ._dcdd .RuneToCharcode (_abcfa );
if !_fgfga {continue ;};_badd [_cge .CharCode (_cbbb )]=_abcfa ;};_bcd ._adbfa =_cge .NewToUnicodeCMap (_badd );};_dfacd ,_caad =_ea .MakeStream (_cbgaf .Bytes (),_ea .NewFlateEncoder ());if _caad !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caad );
return _caad ;};_dfacd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ea .MakeInteger (int64 (_cbgaf .Len ())));if _cbdd ,_bdde :=_ea .GetStream (_daea ._eafg .FontFile2 );_bdde {*_cbdd =*_dfacd ;}else {_daea ._eafg .FontFile2 =_dfacd ;};_cfbf :=_dcgab ();
if len (_bcd ._ceac )> 0{_bcd ._ceac =_defe (_bcd ._ceac ,_cfbf );};if len (_daea ._ceac )> 0{_daea ._ceac =_defe (_daea ._ceac ,_cfbf );};if len (_bcd ._feffc )> 0{_bcd ._feffc =_defe (_bcd ._feffc ,_cfbf );};if _daea ._eafg !=nil {_beeb ,_abdbc :=_ea .GetName (_daea ._eafg .FontName );
if _abdbc &&len (_beeb .String ())> 0{_cedcf :=_defe (_beeb .String (),_cfbf );_daea ._eafg .FontName =_ea .MakeName (_cedcf );};};return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bebfe *PdfShading )GetContainingPdfObject ()_ea .PdfObject {return _bebfe ._feebc };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_abgae []byte ;_affe []float64 ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bfaedc *PdfPageResources )GetXObjectByName (keyName _ea .PdfObjectName )(*_ea .PdfObjectStream ,XObjectType ){if _bfaedc .XObject ==nil {return nil ,XObjectTypeUndefined ;};_degbb ,_eacege :=_ea .TraceToDirectObject (_bfaedc .XObject ).(*_ea .PdfObjectDictionary );
if !_eacege {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ea .TraceToDirectObject (_bfaedc .XObject ));
return nil ,XObjectTypeUndefined ;};if _bedge :=_degbb .Get (keyName );_bedge !=nil {_ceeab ,_edbg :=_ea .GetStream (_bedge );if !_edbg {_ca .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bedge );
return nil ,XObjectTypeUndefined ;};_aaefb :=_ceeab .PdfObjectDictionary ;_bcdgb ,_edbg :=_ea .TraceToDirectObject (_aaefb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ea .PdfObjectName );if !_edbg {_ca .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_aaefb .String ());
return nil ,XObjectTypeUndefined ;};if *_bcdgb =="\u0049\u006d\u0061g\u0065"{return _ceeab ,XObjectTypeImage ;}else if *_bcdgb =="\u0046\u006f\u0072\u006d"{return _ceeab ,XObjectTypeForm ;}else if *_bcdgb =="\u0050\u0053"{return _ceeab ,XObjectTypePS ;
}else {_ca .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bcdgb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// PrintPageRange returns the value of the printPageRange.
func (_bfgcf *ViewerPreferences )PrintPageRange ()[]int {return _bfgcf ._gcffa };

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gdgg *PdfFontDescriptor )ToPdfObject ()_ea .PdfObject {_beaba :=_ea .MakeDict ();if _gdgg ._acegb ==nil {_gdgg ._acegb =&_ea .PdfIndirectObject {};};_gdgg ._acegb .PdfObject =_beaba ;_beaba .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gdgg .FontName !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gdgg .FontName );};if _gdgg .FontFamily !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gdgg .FontFamily );};if _gdgg .FontStretch !=nil {_beaba .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gdgg .FontStretch );
};if _gdgg .FontWeight !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gdgg .FontWeight );};if _gdgg .Flags !=nil {_beaba .Set ("\u0046\u006c\u0061g\u0073",_gdgg .Flags );};if _gdgg .FontBBox !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gdgg .FontBBox );
};if _gdgg .ItalicAngle !=nil {_beaba .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gdgg .ItalicAngle );};if _gdgg .Ascent !=nil {_beaba .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gdgg .Ascent );};if _gdgg .Descent !=nil {_beaba .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gdgg .Descent );
};if _gdgg .Leading !=nil {_beaba .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gdgg .Leading );};if _gdgg .CapHeight !=nil {_beaba .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gdgg .CapHeight );};if _gdgg .XHeight !=nil {_beaba .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gdgg .XHeight );
};if _gdgg .StemV !=nil {_beaba .Set ("\u0053\u0074\u0065m\u0056",_gdgg .StemV );};if _gdgg .StemH !=nil {_beaba .Set ("\u0053\u0074\u0065m\u0048",_gdgg .StemH );};if _gdgg .AvgWidth !=nil {_beaba .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gdgg .AvgWidth );
};if _gdgg .MaxWidth !=nil {_beaba .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gdgg .MaxWidth );};if _gdgg .MissingWidth !=nil {_beaba .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gdgg .MissingWidth );};if _gdgg .FontFile !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gdgg .FontFile );
};if _gdgg .FontFile2 !=nil {_beaba .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gdgg .FontFile2 );};if _gdgg .FontFile3 !=nil {_beaba .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gdgg .FontFile3 );};if _gdgg .CharSet !=nil {_beaba .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gdgg .CharSet );
};if _gdgg .Style !=nil {_beaba .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gdgg .FontName );};if _gdgg .Lang !=nil {_beaba .Set ("\u004c\u0061\u006e\u0067",_gdgg .Lang );};if _gdgg .FD !=nil {_beaba .Set ("\u0046\u0044",_gdgg .FD );};if _gdgg .CIDSet !=nil {_beaba .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gdgg .CIDSet );
};return _gdgg ._acegb ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ea .PdfObjectName ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_eagfc :_ea .MakeDict (),ColorComponents :colorComponents };
};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ea .PdfObject ;};func _dcgab ()string {_gacef :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _eagfg _cb .Buffer ;
for _fddc :=0;_fddc < 6;_fddc ++{_eagfg .WriteRune (rune (_gacef [_ae .Intn (len (_gacef ))]));};return _eagfg .String ();};func _bafba (_caaf *_ea .PdfObjectDictionary )bool {for _ ,_geeb :=range _caaf .Keys (){if _ ,_eafe :=_dadf [_geeb .String ()];_eafe {return true ;
};};return false ;};func (_gbfe *PdfReader )newPdfAnnotation3DFromDict (_aggab *_ea .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gedb :=PdfAnnotation3D {};_gedb .T3DD =_aggab .Get ("\u0033\u0044\u0044");_gedb .T3DV =_aggab .Get ("\u0033\u0044\u0056");
_gedb .T3DA =_aggab .Get ("\u0033\u0044\u0041");_gedb .T3DI =_aggab .Get ("\u0033\u0044\u0049");_gedb .T3DB =_aggab .Get ("\u0033\u0044\u0042");return &_gedb ,nil ;};type fontCommon struct{_ceac string ;_dfeb string ;_feffc string ;_cbfe _ea .PdfObject ;
_adbfa *_cge .CMap ;_eafg *PdfFontDescriptor ;_gdga int64 ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_egdbd :=&PdfShadingPatternType3 {};_egdbd .Matrix =_ea .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_egdbd .PdfPattern =&PdfPattern {};_egdbd .PdfPattern .PatternType =int64 (*_ea .MakeInteger (2));
_egdbd .PdfPattern ._egfdg =_egdbd ;_egdbd .PdfPattern ._bedae =_ea .MakeIndirectObject (_ea .MakeDict ());return _egdbd ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_gbdeb *DSS )GenerateHashMaps ()error {_bdac ,_ffcec :=_gbdeb .generateHashMap (_gbdeb .Certs );if _ffcec !=nil {return _ffcec ;};_fbdf ,_ffcec :=_gbdeb .generateHashMap (_gbdeb .OCSPs );if _ffcec !=nil {return _ffcec ;};_bgccb ,_ffcec :=_gbdeb .generateHashMap (_gbdeb .CRLs );
if _ffcec !=nil {return _ffcec ;};_gbdeb ._cebd =_bdac ;_gbdeb ._eadbg =_fbdf ;_gbdeb ._dffga =_bgccb ;return nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_dfdee *PdfColorspaceDeviceN )ToPdfObject ()_ea .PdfObject {_adgde :=_ea .MakeArray (_ea .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_adgde .Append (_dfdee .ColorantNames );_adgde .Append (_dfdee .AlternateSpace .ToPdfObject ());_adgde .Append (_dfdee .TintTransform .ToPdfObject ());
if _dfdee .Attributes !=nil {_adgde .Append (_dfdee .Attributes .ToPdfObject ());};if _dfdee ._bgbd !=nil {_dfdee ._bgbd .PdfObject =_adgde ;return _dfdee ._bgbd ;};return _adgde ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_agde *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fagcg :=vals [0];if _fagcg < 0.0||_fagcg > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagcg );
return nil ,ErrColorOutOfRange ;};_gae :=vals [1];if _gae < 0.0||_gae > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagcg );return nil ,ErrColorOutOfRange ;
};_dbfe :=vals [2];if _dbfe < 0.0||_dbfe > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagcg );return nil ,ErrColorOutOfRange ;};_abaag :=NewPdfColorDeviceRGB (_fagcg ,_gae ,_dbfe );
return _abaag ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_aedc :=NewPdfAnnotation ();_egf :=&PdfAnnotationSquare {};_egf .PdfAnnotation =_aedc ;_egf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aedc .SetContext (_egf );return _egf ;};func _egea (_egbg _ea .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dbgg :=NewPdfColorspaceSpecialSeparation ();
if _fbcg ,_bfdf :=_egbg .(*_ea .PdfIndirectObject );_bfdf {_dbgg ._ccce =_fbcg ;};_egbg =_ea .TraceToDirectObject (_egbg );_ggbca ,_bffg :=_egbg .(*_ea .PdfObjectArray );if !_bffg {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ggbca .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_egbg =_ggbca .Get (0);
_dcee ,_bffg :=_egbg .(*_ea .PdfObjectName );if !_bffg {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dcee !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_egbg =_ggbca .Get (1);_dcee ,_bffg =_egbg .(*_ea .PdfObjectName );if !_bffg {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dbgg .ColorantName =_dcee ;_egbg =_ggbca .Get (2);_ebdg ,_ebaf :=NewPdfColorspaceFromPdfObject (_egbg );if _ebaf !=nil {return nil ,_ebaf ;};_dbgg .AlternateSpace =_ebdg ;_adff ,_ebaf :=_ebcdc (_ggbca .Get (3));if _ebaf !=nil {return nil ,_ebaf ;};_dbgg .TintTransform =_adff ;
return _dbgg ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_gfefd *PdfPage )loadFont (_fegdc string )(*_ed .Font ,error ){_agff ,_fbagba :=_abg .ReadFile (_fegdc );if _fbagba !=nil {return nil ,_fbagba ;};_dggeg ,_fbagba :=_gbb .ParseFont (_agff );if _fbagba !=nil {return nil ,_fbagba ;
};return _dggeg ,nil ;};

// GetStandardApplier gets currently used StandardApplier..
func (_caeee *PdfWriter )GetStandardApplier ()StandardApplier {return _caeee ._edabfg };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cdfg *Outline )ToPdfOutline ()*PdfOutline {_bcgae :=NewPdfOutline ();var _cbgfe []*PdfOutlineItem ;var _baece int64 ;var _dgfb *PdfOutlineItem ;for _ ,_cfgd :=range _cdfg .Entries {_cfgdd ,_aaaf :=_cfgd .ToPdfOutlineItem ();_cfgdd .Parent =&_bcgae .PdfOutlineTreeNode ;
if _dgfb !=nil {_dgfb .Next =&_cfgdd .PdfOutlineTreeNode ;_cfgdd .Prev =&_dgfb .PdfOutlineTreeNode ;};_cbgfe =append (_cbgfe ,_cfgdd );_baece +=_aaaf ;_dgfb =_cfgdd ;};_eagge :=int64 (len (_cbgfe ));_baece +=_eagge ;if _eagge > 0{_bcgae .First =&_cbgfe [0].PdfOutlineTreeNode ;
_bcgae .Last =&_cbgfe [_eagge -1].PdfOutlineTreeNode ;_bcgae .Count =&_baece ;};return _bcgae ;};

// B returns the value of the B component of the color.
func (_acag *PdfColorCalRGB )B ()float64 {return _acag [1]};func (_gdfe *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gdfe .fontCommon };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_dbgfa *PdfPageResources )GetXObjectFormByName (keyName _ea .PdfObjectName )(*XObjectForm ,error ){_cbfbge ,_abgbc :=_dbgfa .GetXObjectByName (keyName );if _cbfbge ==nil {return nil ,nil ;};if _abgbc !=XObjectTypeForm {return nil ,_dc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_gccbbg ,_dfdg :=NewXObjectFormFromStream (_cbfbge );if _dfdg !=nil {return nil ,_dfdg ;};return _gccbbg ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_babgb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bbcgd []*PdfField ;if _babgb .AcroForm !=nil {_bbcgd =_babgb .AcroForm .AllFields ();};_gdbde :=make (map[*PdfField ]struct{},len (_bbcgd ));for _ ,_cdffb :=range _bbcgd {_gdbde [_cdffb ]=struct{}{};
};for _ ,_aacfgd :=range _babgb .PageList {_dgfda ,_fdcfg :=_aacfgd .GetAnnotations ();if _fdcfg !=nil {return false ,_fdcfg ;};for _ ,_ffgff :=range _dgfda {_edabf ,_eacb :=_ffgff .GetContext ().(*PdfAnnotationWidget );if !_eacb {continue ;};_cddg :=_edabf .Field ();
if _cddg ==nil {return true ,nil ;};if _ ,_decba :=_gdbde [_cddg ];!_decba {return true ,nil ;};};};return false ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ddcfa :=&PdfColorspaceCalRGB {};_ddcfa .BlackPoint =[]float64 {0.0,0.0,0.0};_ddcfa .Gamma =[]float64 {1.0,1.0,1.0};_ddcfa .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ddcfa ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ea .PdfObjectInteger ;BitsPerComponent *_ea .PdfObjectInteger ;BitsPerFlag *_ea .PdfObjectInteger ;Decode *_ea .PdfObjectArray ;Function []PdfFunction ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_efbcc ,_geeg :=_abg .ReadFile (path );if _geeg !=nil {return nil ,_geeg ;};_fdgbb :=_eb .Detect (_efbcc );_ebgc :=_gg .Sum (_efbcc );_ggbe :=&EmbeddedFile {Name :_gb .Base (path ),Content :_efbcc ,FileType :_fdgbb .String (),Hash :_ad .EncodeToString (_ebgc [:])};
return _ggbe ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ea .PdfObject ;Volume _ea .PdfObject ;Synchronous _ea .PdfObject ;Repeat _ea .PdfObject ;Mix _ea .PdfObject ;};

// SetAnnotations sets the annotations list.
func (_eabb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_eabb ._fcdad =annotations };func _ddbgff (_dcac *[]*PdfField ,_cgdeb FieldFilterFunc ,_dcgbd bool )[]*PdfField {if _dcac ==nil {return nil ;};_gdaag :=*_dcac ;if len (*_dcac )==0{return nil ;
};_ggcgg :=_gdaag [:0];if _cgdeb ==nil {_cgdeb =func (*PdfField )bool {return true };};var _gbgb []*PdfField ;for _ ,_bfecf :=range _gdaag {_abgab :=_cgdeb (_bfecf );if _abgab {_gbgb =append (_gbgb ,_bfecf );if len (_bfecf .Kids )> 0{_gbgb =append (_gbgb ,_ddbgff (&_bfecf .Kids ,_cgdeb ,_dcgbd )...);
};};if !_dcgbd ||!_abgab ||len (_bfecf .Kids )> 0{_ggcgg =append (_ggcgg ,_bfecf );};};*_dcac =_ggcgg ;return _gbgb ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_gbfbg *PdfPage )RemoveWatermarkImage (name string )error {if _gbfbg .Resources !=nil &&_gbfbg .Resources .XObject !=nil {if _egdf ,_edcee :=_ea .GetDict (_gbfbg .Resources .XObject );_edcee {for _ ,_aeec :=range _egdf .Keys (){if name ==_aeec .String (){_gbfbg .removeXObj (_egdf ,_aeec );
continue ;};_becgde ,_adcgc :=_ea .GetStream (_egdf .Get (_aeec ));if !_adcgc {continue ;};_bgccd ,_adcgc :=_ea .GetDict (_becgde .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_adcgc {continue ;};_cgdce ,_adcgc :=_ea .GetDict (_bgccd .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_adcgc {continue ;};if _cgdce .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_cgdce .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_gbfbg .removeXObj (_egdf ,_aeec );};};};};_bfgaa ,_aecca :=_gbfbg .GetAnnotations ();
if _aecca ==nil {_egdc :=make ([]*PdfAnnotation ,0);for _ ,_bgdga :=range _bfgaa {switch _bgdga .GetContext ().(type ){case *PdfAnnotationWatermark :default:_egdc =append (_egdc ,_bgdga );};};_gbfbg .SetAnnotations (_egdc );};return nil ;};

// SetDuplex sets the value of the duplex.
func (_caega *ViewerPreferences )SetDuplex (duplex Duplex ){_caega ._accbb =duplex };

// SetContext sets the sub annotation (context).
func (_bff *PdfAnnotation )SetContext (ctx PdfModel ){_bff ._fcf =ctx };func (_cef *PdfReader )newPdfActionURIFromDict (_eagb *_ea .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_eagb .Get ("\u0055\u0052\u0049"),IsMap :_eagb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_aed :=NewPdfAnnotation ();_gbc :=&PdfAnnotationText {};_gbc .PdfAnnotation =_aed ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aed .SetContext (_gbc );return _gbc ;};type modelManager struct{_fggf map[PdfModel ]_ea .PdfObject ;
_eeadb map[_ea .PdfObject ]PdfModel ;_cfdeg _d .RWMutex ;_afaa _d .RWMutex ;};

// AllFields returns a flattened list of all fields in the form.
func (_eacfe *PdfAcroForm )AllFields ()[]*PdfField {if _eacfe ==nil {return nil ;};var _bddgbc []*PdfField ;if _eacfe .Fields !=nil {for _ ,_bdffc :=range *_eacfe .Fields {_bddgbc =append (_bddgbc ,_ddgg (_bdffc )...);};};return _bddgbc ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ea .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ea .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ea .PdfObjectBool ;_bgaf PdfModel ;_feebc _ea .PdfObject ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bgdbc *PdfPageResources )GetExtGState (keyName _ea .PdfObjectName )(_ea .PdfObject ,bool ){if _bgdbc .ExtGState ==nil {return nil ,false ;};_ddcae ,_gccgf :=_ea .TraceToDirectObject (_bgdbc .ExtGState ).(*_ea .PdfObjectDictionary );if !_gccgf {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgdbc .ExtGState );
return nil ,false ;};if _egbge :=_ddcae .Get (keyName );_egbge !=nil {return _egbge ,true ;};return nil ,false ;};

// String returns a string representation of what flags are set.
func (_gdcdd FieldFlag )String ()string {_bfgd :="";if _gdcdd ==FieldFlagClear {_bfgd ="\u0043\u006c\u0065a\u0072";return _bfgd ;};if _gdcdd &FieldFlagReadOnly > 0{_bfgd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gdcdd &FieldFlagRequired > 0{_bfgd +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _gdcdd &FieldFlagNoExport > 0{_bfgd +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gdcdd &FieldFlagNoToggleToOff > 0{_bfgd +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gdcdd &FieldFlagRadio > 0{_bfgd +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _gdcdd &FieldFlagPushbutton > 0{_bfgd +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gdcdd &FieldFlagRadiosInUnision > 0{_bfgd +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gdcdd &FieldFlagMultiline > 0{_bfgd +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _gdcdd &FieldFlagPassword > 0{_bfgd +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gdcdd &FieldFlagFileSelect > 0{_bfgd +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gdcdd &FieldFlagDoNotScroll > 0{_bfgd +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _gdcdd &FieldFlagComb > 0{_bfgd +="\u007c\u0043\u006fm\u0062";};if _gdcdd &FieldFlagRichText > 0{_bfgd +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gdcdd &FieldFlagDoNotSpellCheck > 0{_bfgd +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _gdcdd &FieldFlagCombo > 0{_bfgd +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gdcdd &FieldFlagEdit > 0{_bfgd +="\u007c\u0045\u0064i\u0074";};if _gdcdd &FieldFlagSort > 0{_bfgd +="\u007c\u0053\u006fr\u0074";};if _gdcdd &FieldFlagMultiSelect > 0{_bfgd +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _gdcdd &FieldFlagCommitOnSelChange > 0{_bfgd +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _dgb .Trim (_bfgd ,"\u007c");};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ecgb *PdfFieldButton )GetType ()ButtonType {_gace :=ButtonTypeCheckbox ;if _ecgb .Ff !=nil {if (uint32 (*_ecgb .Ff )&FieldFlagPushbutton .Mask ())> 0{_gace =ButtonTypePush ;}else if (uint32 (*_ecgb .Ff )&FieldFlagRadio .Mask ())> 0{_gace =ButtonTypeRadio ;
};};return _gace ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gfed *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_aefba :=_gfed .fill (provider ,appGen );if _aefba !=nil {return _aefba ;};if _ ,_egab :=provider .(FieldImageProvider );_egab {_aefba =_gfed .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _aefba ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bbde *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_dc .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// Duplex returns the value of the duplex.
func (_gegdf *ViewerPreferences )Duplex ()Duplex {return _gegdf ._accbb };

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_decd *PdfPageResources )SetXObjectImageByNameLazy (keyName _ea .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_beaee :=ximg .ToPdfObject ().(*_ea .PdfObjectStream );if lazy {_beaee .MakeLazy ();};_gfefc :=_decd .SetXObjectByName (keyName ,_beaee );
return _gfefc ;};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ea .PdfObject ;AN _ea .PdfObject ;OP _ea .PdfObject ;JS _ea .PdfObject ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_aadec *PdfPageResources )GetFontByName (keyName _ea .PdfObjectName )(_ea .PdfObject ,bool ){if _aadec .Font ==nil {return nil ,false ;};_efcgaf ,_ffdee :=_ea .TraceToDirectObject (_aadec .Font ).(*_ea .PdfObjectDictionary );if !_ffdee {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ea .TraceToDirectObject (_aadec .Font ));
return nil ,false ;};if _egbc :=_efcgaf .Get (keyName );_egbc !=nil {return _egbc ,true ;};return nil ,false ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_eedaa *PdfReader )GetNameDictionary ()(_ea .PdfObject ,error ){_ggcgb :=_ea .ResolveReference (_eedaa ._gbggd .Get ("\u004e\u0061\u006de\u0073"));if _ggcgb ==nil {return nil ,nil ;};if !_eedaa ._bdddd {_daccd :=_eedaa .traverseObjectData (_ggcgb );
if _daccd !=nil {return nil ,_daccd ;};};return _ggcgb ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dcgec .Lock ();defer _dcgec .Unlock ();_afec =title };

// ToPdfObject implements interface PdfModel.
func (_aaf *PdfAnnotationPolyLine )ToPdfObject ()_ea .PdfObject {_aaf .PdfAnnotation .ToPdfObject ();_bfg :=_aaf ._eab ;_ggga :=_bfg .PdfObject .(*_ea .PdfObjectDictionary );_aaf .PdfAnnotationMarkup .appendToPdfDictionary (_ggga );_ggga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_ggga .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aaf .Vertices );_ggga .SetIfNotNil ("\u004c\u0045",_aaf .LE );_ggga .SetIfNotNil ("\u0042\u0053",_aaf .BS );_ggga .SetIfNotNil ("\u0049\u0043",_aaf .IC );_ggga .SetIfNotNil ("\u0042\u0045",_aaf .BE );
_ggga .SetIfNotNil ("\u0049\u0054",_aaf .IT );_ggga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aaf .Measure );return _bfg ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_dgfdc *Names )ToPdfObject ()_ea .PdfObject {_ceca :=_dgfdc ._dgbda ;_edba ,_ggbag :=_ceca .PdfObject .(*_ea .PdfObjectDictionary );if !_ggbag {_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");return _ceca ;
};if _dgfdc .EmbeddedFiles !=nil {_edba .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_ea .MakeIndirectObject (_dgfdc .EmbeddedFiles ));};return _ceca ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bbacg ,_ecag :=_abg .Open (filePath );if _ecag !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ecag );
return nil ,_ecag ;};defer _bbacg .Close ();return NewCompositePdfFontFromTTF (_bbacg );};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ebfd ,_bgfce :=_decbe (basefont );if _bgfce !=nil {return nil ,_bgfce ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ebfd ._ggbg =_ge .NewWinAnsiEncoder ();};return &PdfFont {_gbee :&_ebfd },nil ;
};func (_cbeab *Image )samplesAddPadding (_bfeae []uint32 )[]uint32 {_gdefc :=_dcc .BytesPerLine (int (_cbeab .Width ),int (_cbeab .BitsPerComponent ),_cbeab .ColorComponents )*(8/int (_cbeab .BitsPerComponent ));_eeebe :=_gdefc *int (_cbeab .Height );
if len (_bfeae )==_eeebe {return _bfeae ;};_cddcb :=make ([]uint32 ,_eeebe );_bgabgd :=int (_cbeab .Width )*_cbeab .ColorComponents ;for _gfead :=0;_gfead < int (_cbeab .Height );_gfead ++{_eeeec :=_gfead *int (_cbeab .Width );_cbgga :=_gfead *_gdefc ;
for _cadab :=0;_cadab < _bgabgd ;_cadab ++{_cddcb [_cbgga +_cadab ]=_bfeae [_eeeec +_cadab ];};};return _cddcb ;};func _ebcdc (_faaca _ea .PdfObject )(PdfFunction ,error ){_faaca =_ea .ResolveReference (_faaca );if _efbdf ,_gcbd :=_faaca .(*_ea .PdfObjectStream );
_gcbd {_bbefg :=_efbdf .PdfObjectDictionary ;_cbfef ,_edde :=_bbefg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ea .PdfObjectInteger );if !_edde {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cbfef ==0{return _edebe (_efbdf );}else if *_cbfef ==4{return _cgcda (_efbdf );
}else {return nil ,_dc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _caecc ,_fdaab :=_faaca .(*_ea .PdfIndirectObject );_fdaab {_dfbaf ,_ceeaa :=_caecc .PdfObject .(*_ea .PdfObjectDictionary );
if !_ceeaa {_ca .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cdbde ,_ceeaa :=_dfbaf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ea .PdfObjectInteger );
if !_ceeaa {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cdbde ==2{return _cgfcff (_caecc );}else if *_cdbde ==3{return _aefab (_caecc );}else {return nil ,_dc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fcfd ,_dgaagg :=_faaca .(*_ea .PdfObjectDictionary );
_dgaagg {_dggag ,_bfece :=_fcfd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ea .PdfObjectInteger );if !_bfece {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dggag ==2{return _cgfcff (_fcfd );}else if *_dggag ==3{return _aefab (_fcfd );
}else {return nil ,_dc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ca .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_faaca );
return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_afaf *PdfAcroForm )GetContainingPdfObject ()_ea .PdfObject {return _afaf ._fgef };

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ea .PdfObject ;Name _ea .PdfObject ;State _ea .PdfObject ;StateModel _ea .PdfObject ;};func (_fag *PdfReader )newPdfActionThreadFromDict (_fea *_ea .PdfObjectDictionary )(*PdfActionThread ,error ){_gegc ,_degg :=_cfgb (_fea .Get ("\u0046"));
if _degg !=nil {return nil ,_degg ;};return &PdfActionThread {D :_fea .Get ("\u0044"),B :_fea .Get ("\u0042"),F :_gegc },nil ;};func (_dcbf PdfFont )actualFont ()pdfFont {if _dcbf ._gbee ==nil {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcbf );
};return _dcbf ._gbee ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_afb :=NewPdfAction ();_fge :=&PdfActionNamed {};_fge .PdfAction =_afb ;_afb .SetContext (_fge );return _fge ;};

// RemveTabOrder removes the tab order for the page.
func (_cbfbb *PdfPage )RemoveTabOrder (){_cbfbb .Tabs =nil };

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ea .PdfObject ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_ceea *PdfField )Flags ()FieldFlag {var _fafcbd FieldFlag ;_aafae ,_deag :=_ceea .inherit (func (_abga *PdfField )bool {if _abga .Ff !=nil {_fafcbd =FieldFlag (*_abga .Ff );return true ;};return false ;});if _deag !=nil {_ca .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_deag );
};if !_aafae {_ca .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fafcbd ;};const (_ PdfOutputIntentType =iota ;
PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cadeb []_ea .PdfObject )([]_ea .PdfObject ,error );};

// SetShadingByName sets a shading resource specified by keyName.
func (_cffb *PdfPageResources )SetShadingByName (keyName _ea .PdfObjectName ,shadingObj _ea .PdfObject )error {if _cffb .Shading ==nil {_cffb .Shading =_ea .MakeDict ();};_fcedb ,_gfcba :=_ea .GetDict (_cffb .Shading );if !_gfcba {return _ea .ErrTypeError ;
};_fcedb .Set (keyName ,shadingObj );return nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_edebg *PdfPageResources )SetFontByName (keyName _ea .PdfObjectName ,obj _ea .PdfObject )error {if _edebg .Font ==nil {_edebg .Font =_ea .MakeDict ();};_efggd ,_dagea :=_ea .TraceToDirectObject (_edebg .Font ).(*_ea .PdfObjectDictionary );if !_dagea {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ea .TraceToDirectObject (_edebg .Font ));
return _ea .ErrTypeError ;};_efggd .Set (keyName ,obj );return nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bdee *DSS )ToPdfObject ()_ea .PdfObject {_fbdg :=_bdee ._egee .PdfObject .(*_ea .PdfObjectDictionary );_fbdg .Clear ();_dggc :=_ea .MakeDict ();for _fcdd ,_gedbb :=range _bdee .VRI {_dggc .Set (*_ea .MakeName (_fcdd ),_gedbb .ToPdfObject ());};_fbdg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gfbdd (_bdee .Certs ));
_fbdg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gfbdd (_bdee .OCSPs ));_fbdg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gfbdd (_bdee .CRLs ));_fbdg .Set ("\u0056\u0052\u0049",_dggc );return _bdee ._egee ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_eadfg *PdfPageResources )SetXObjectImageByName (keyName _ea .PdfObjectName ,ximg *XObjectImage )error {_dbgffa :=ximg .ToPdfObject ().(*_ea .PdfObjectStream );_bdccc :=_eadfg .SetXObjectByName (keyName ,_dbgffa );return _bdccc ;};func (_fce *PdfReader )newPdfAnnotationPopupFromDict (_agga *_ea .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dgg :=PdfAnnotationPopup {};
_dgg .Parent =_agga .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dgg .Open =_agga .Get ("\u004f\u0070\u0065\u006e");return &_dgg ,nil ;};func _bcgcd ()string {_dcgec .Lock ();defer _dcgec .Unlock ();if len (_ebdd )> 0{return _ebdd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_eggcea *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _eggcea .MediaBox !=nil {return _eggcea .MediaBox ,nil ;};_gbbgc :=_eggcea .Parent ;for _gbbgc !=nil {_aabd ,_afebd :=_ea .GetDict (_gbbgc );if !_afebd {return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dddbed :=_aabd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dddbed !=nil {_deegc ,_fgfbe :=_ea .GetArray (_dddbed );if !_fgfbe {return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cgafe ,_aaae :=NewPdfRectangle (*_deegc );if _aaae !=nil {return nil ,_aaae ;};return _cgafe ,nil ;};_gbbgc =_aabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_dc .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NumCopies returns the value of the numCopies.
func (_ccdba *ViewerPreferences )NumCopies ()int {return _ccdba ._cbgea };

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_bdgf *PdfReader )newPdfAnnotationFromIndirectObject (_eaa *_ea .PdfIndirectObject )(*PdfAnnotation ,error ){_edda ,_dfad :=_eaa .PdfObject .(*_ea .PdfObjectDictionary );if !_dfad {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bdgf ._aebcf .GetModelFromPrimitive (_edda );model !=nil {_efae ,_dfae :=model .(*PdfAnnotation );if !_dfae {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _efae ,nil ;};_eeeaa :=&PdfAnnotation {};_eeeaa ._eab =_eaa ;_bdgf ._aebcf .Register (_edda ,_eeeaa );if _cfb :=_edda .Get ("\u0054\u0079\u0070\u0065");_cfb !=nil {_fbcae ,_ggcd :=_cfb .(*_ea .PdfObjectName );if !_ggcd {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cfb );
}else {if *_fbcae !="\u0041\u006e\u006eo\u0074"{_ca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fbcae );};};
};if _cgd :=_edda .Get ("\u0052\u0065\u0063\u0074");_cgd !=nil {_eeeaa .Rect =_cgd ;};if _cgad :=_edda .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cgad !=nil {_eeeaa .Contents =_cgad ;};if _cec :=_edda .Get ("\u0050");_cec !=nil {_eeeaa .P =_cec ;
};if _cfcc :=_edda .Get ("\u004e\u004d");_cfcc !=nil {_eeeaa .NM =_cfcc ;};if _acg :=_edda .Get ("\u004d");_acg !=nil {_eeeaa .M =_acg ;};if _ece :=_edda .Get ("\u0046");_ece !=nil {_eeeaa .F =_ece ;};if _gcggd :=_edda .Get ("\u0041\u0050");_gcggd !=nil {_eeeaa .AP =_gcggd ;
};if _aad :=_edda .Get ("\u0041\u0053");_aad !=nil {_eeeaa .AS =_aad ;};if _eeeag :=_edda .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_eeeag !=nil {_eeeaa .Border =_eeeag ;};if _dag :=_edda .Get ("\u0043");_dag !=nil {_eeeaa .C =_dag ;};if _fgcf :=_edda .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fgcf !=nil {_eeeaa .StructParent =_fgcf ;};if _ecga :=_edda .Get ("\u004f\u0043");_ecga !=nil {_eeeaa .OC =_ecga ;};_afgd :=_edda .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _afgd ==nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_eeeaa ._fcf =nil ;return _eeeaa ,nil ;};_adgb ,_aba :=_afgd .(*_ea .PdfObjectName );if !_aba {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_afgd );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_afgd );};switch *_adgb {case "\u0054\u0065\u0078\u0074":_gfec ,_bfae :=_bdgf .newPdfAnnotationTextFromDict (_edda );
if _bfae !=nil {return nil ,_bfae ;};_gfec .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_gfec ;return _eeeaa ,nil ;case "\u004c\u0069\u006e\u006b":_cgfg ,_ffd :=_bdgf .newPdfAnnotationLinkFromDict (_edda );if _ffd !=nil {return nil ,_ffd ;};_cgfg .PdfAnnotation =_eeeaa ;
_eeeaa ._fcf =_cgfg ;return _eeeaa ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gdg ,_eeeb :=_bdgf .newPdfAnnotationFreeTextFromDict (_edda );if _eeeb !=nil {return nil ,_eeeb ;};_gdg .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_gdg ;return _eeeaa ,nil ;
case "\u004c\u0069\u006e\u0065":_faa ,_ddcb :=_bdgf .newPdfAnnotationLineFromDict (_edda );if _ddcb !=nil {return nil ,_ddcb ;};_faa .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_faa ;_ca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_eeeaa ,_eeeaa );
_ca .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_faa ,_faa );_ca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_faa .PdfAnnotationMarkup ,_faa .PdfAnnotationMarkup );
return _eeeaa ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_fgd ,_fdd :=_bdgf .newPdfAnnotationSquareFromDict (_edda );if _fdd !=nil {return nil ,_fdd ;};_fgd .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_fgd ;return _eeeaa ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ccbg ,_cddd :=_bdgf .newPdfAnnotationCircleFromDict (_edda );
if _cddd !=nil {return nil ,_cddd ;};_ccbg .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_ccbg ;return _eeeaa ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_efda ,_efc :=_bdgf .newPdfAnnotationPolygonFromDict (_edda );if _efc !=nil {return nil ,_efc ;};_efda .PdfAnnotation =_eeeaa ;
_eeeaa ._fcf =_efda ;return _eeeaa ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cecc ,_dgbd :=_bdgf .newPdfAnnotationPolyLineFromDict (_edda );if _dgbd !=nil {return nil ,_dgbd ;};_cecc .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_cecc ;return _eeeaa ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aded ,_aag :=_bdgf .newPdfAnnotationHighlightFromDict (_edda );if _aag !=nil {return nil ,_aag ;};_aded .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_aded ;return _eeeaa ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dgab ,_cfa :=_bdgf .newPdfAnnotationUnderlineFromDict (_edda );
if _cfa !=nil {return nil ,_cfa ;};_dgab .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_dgab ;return _eeeaa ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cceb ,_faff :=_bdgf .newPdfAnnotationSquigglyFromDict (_edda );if _faff !=nil {return nil ,_faff ;
};_cceb .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_cceb ;return _eeeaa ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ffbb ,_bceg :=_bdgf .newPdfAnnotationStrikeOut (_edda );if _bceg !=nil {return nil ,_bceg ;};_ffbb .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_ffbb ;
return _eeeaa ,nil ;case "\u0043\u0061\u0072e\u0074":_egc ,_cdc :=_bdgf .newPdfAnnotationCaretFromDict (_edda );if _cdc !=nil {return nil ,_cdc ;};_egc .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_egc ;return _eeeaa ,nil ;case "\u0053\u0074\u0061m\u0070":_dff ,_dcf :=_bdgf .newPdfAnnotationStampFromDict (_edda );
if _dcf !=nil {return nil ,_dcf ;};_dff .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_dff ;return _eeeaa ,nil ;case "\u0049\u006e\u006b":_gagc ,_ggee :=_bdgf .newPdfAnnotationInkFromDict (_edda );if _ggee !=nil {return nil ,_ggee ;};_gagc .PdfAnnotation =_eeeaa ;
_eeeaa ._fcf =_gagc ;return _eeeaa ,nil ;case "\u0050\u006f\u0070u\u0070":_dfc ,_dbd :=_bdgf .newPdfAnnotationPopupFromDict (_edda );if _dbd !=nil {return nil ,_dbd ;};_dfc .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_dfc ;return _eeeaa ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ggfd ,_dfce :=_bdgf .newPdfAnnotationFileAttachmentFromDict (_edda );
if _dfce !=nil {return nil ,_dfce ;};_ggfd .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_ggfd ;return _eeeaa ,nil ;case "\u0053\u006f\u0075n\u0064":_gff ,_ggff :=_bdgf .newPdfAnnotationSoundFromDict (_edda );if _ggff !=nil {return nil ,_ggff ;};_gff .PdfAnnotation =_eeeaa ;
_eeeaa ._fcf =_gff ;return _eeeaa ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gdf ,_cfgbc :=_bdgf .newPdfAnnotationRichMediaFromDict (_edda );if _cfgbc !=nil {return nil ,_cfgbc ;};_gdf .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_gdf ;return _eeeaa ,nil ;
case "\u004d\u006f\u0076i\u0065":_gfef ,_gafb :=_bdgf .newPdfAnnotationMovieFromDict (_edda );if _gafb !=nil {return nil ,_gafb ;};_gfef .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_gfef ;return _eeeaa ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_efga ,_fbacf :=_bdgf .newPdfAnnotationScreenFromDict (_edda );
if _fbacf !=nil {return nil ,_fbacf ;};_efga .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_efga ;return _eeeaa ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_aedb ,_cdfb :=_bdgf .newPdfAnnotationWidgetFromDict (_edda );if _cdfb !=nil {return nil ,_cdfb ;};
_aedb .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_aedb ;return _eeeaa ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gdgb ,_fda :=_bdgf .newPdfAnnotationPrinterMarkFromDict (_edda );if _fda !=nil {return nil ,_fda ;};_gdgb .PdfAnnotation =_eeeaa ;
_eeeaa ._fcf =_gdgb ;return _eeeaa ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_beeab ,_agg :=_bdgf .newPdfAnnotationTrapNetFromDict (_edda );if _agg !=nil {return nil ,_agg ;};_beeab .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_beeab ;return _eeeaa ,nil ;
case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bbf ,_gef :=_bdgf .newPdfAnnotationWatermarkFromDict (_edda );if _gef !=nil {return nil ,_gef ;};_bbf .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_bbf ;return _eeeaa ,nil ;case "\u0033\u0044":_cbbg ,_adc :=_bdgf .newPdfAnnotation3DFromDict (_edda );
if _adc !=nil {return nil ,_adc ;};_cbbg .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_cbbg ;return _eeeaa ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bdge ,_ffbg :=_bdgf .newPdfAnnotationProjectionFromDict (_edda );if _ffbg !=nil {return nil ,_ffbg ;
};_bdge .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_bdge ;return _eeeaa ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_beabc ,_eabe :=_bdgf .newPdfAnnotationRedactFromDict (_edda );if _eabe !=nil {return nil ,_eabe ;};_beabc .PdfAnnotation =_eeeaa ;_eeeaa ._fcf =_beabc ;
return _eeeaa ,nil ;};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_adgb );
return nil ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gdaad FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gdaad .Mask ()&^fl .Mask ())};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dcgec .Lock ();defer _dcgec .Unlock ();_ebdd =creator };func _dfdfa (_fffga string )(map[_ge .CharCode ]_ge .GlyphName ,error ){_afcc :=_dgb .Split (_fffga ,"\u000a");_ebeba :=make (map[_ge .CharCode ]_ge .GlyphName );
for _ ,_ddgbb :=range _afcc {_cbaef :=_ddccc .FindStringSubmatch (_ddgbb );if _cbaef ==nil {continue ;};_gdfga ,_cgfcc :=_cbaef [1],_cbaef [2];_ccagd ,_gbcfa :=_ab .Atoi (_gdfga );if _gbcfa !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ddgbb );
return nil ,_ea .ErrTypeError ;};_ebeba [_ge .CharCode (_ccagd )]=_ge .GlyphName (_cgfcc );};_ca .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_ebeba );
return _ebeba ,nil ;};func _fgecb ()_fg .Time {_dcgec .Lock ();defer _dcgec .Unlock ();return _cgedb };

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bfgfg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bfgfg ._gdddb ==nil {_bfgfg ._gdddb =_gc .NewPSExecutor (_bfgfg .Program );};var _ccadcg []_gc .PSObject ;for _ ,_gacb :=range xVec {_ccadcg =append (_ccadcg ,_gc .MakeReal (_gacb ));
};_fafbcf ,_afcbb :=_bfgfg ._gdddb .Execute (_ccadcg );if _afcbb !=nil {return nil ,_afcbb ;};_ceeg ,_afcbb :=_gc .PSObjectArrayToFloat64Array (_fafbcf );if _afcbb !=nil {return nil ,_afcbb ;};return _ceeg ,nil ;};type pdfFontType0 struct{fontCommon ;_gaeb *_ea .PdfIndirectObject ;
_dcdd _ge .TextEncoder ;Encoding _ea .PdfObject ;DescendantFont *PdfFont ;_gaeba *_cge .CMap ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gfaef *PdfFont )BytesToCharcodes (data []byte )[]_ge .CharCode {_ca .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _egda ,_cgdec :=_gfaef ._gbee .(*pdfFontType0 );_cgdec &&_egda ._gaeba !=nil {if _gedbd ,_edgb :=_egda .bytesToCharcodes (data );_edgb {return _gedbd ;};};var (_edad =make ([]_ge .CharCode ,0,len (data )+len (data )%2);_ceda =_gfaef .baseFields (););
if _ceda ._adbfa !=nil {if _gegecc ,_ddeca :=_ceda ._adbfa .BytesToCharcodes (data );_ddeca {for _ ,_ggadeg :=range _gegecc {_edad =append (_edad ,_ge .CharCode (_ggadeg ));};return _edad ;};};if _ceda .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cefba :=0;_cefba < len (data );_cefba +=2{_gcefc :=uint16 (data [_cefba ])<<8|uint16 (data [_cefba +1]);_edad =append (_edad ,_ge .CharCode (_gcefc ));};}else {for _ ,_egcb :=range data {_edad =append (_edad ,_ge .CharCode (_egcb ));
};};return _edad ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ffdb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggbc :=vals [0];if _ggbc < 0.0||_ggbc > 100.0{_ca .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ggbc );
return nil ,ErrColorOutOfRange ;};_gdefg :=vals [1];_fdag :=float64 (-100);_dfcd :=float64 (100);if len (_ffdb .Range )> 1{_fdag =_ffdb .Range [0];_dfcd =_ffdb .Range [1];};if _gdefg < _fdag ||_gdefg > _dfcd {_ca .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gdefg ,_fdag ,_dfcd );
return nil ,ErrColorOutOfRange ;};_gggab :=vals [2];_ddf :=float64 (-100);_cecg :=float64 (100);if len (_ffdb .Range )> 3{_ddf =_ffdb .Range [2];_cecg =_ffdb .Range [3];};if _gggab < _ddf ||_gggab > _cecg {_ca .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gggab ,_ddf ,_cecg );
return nil ,ErrColorOutOfRange ;};_dedf :=NewPdfColorLab (_ggbc ,_gdefg ,_gggab );return _dedf ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_efffc *PdfWriter )GetOptimizer ()Optimizer {return _efffc ._fgeaf };

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_bbedg *PdfWriter )GetPageIndirectObject (pageNum int )(*_ea .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_bbedg ._fgbeb ){return nil ,_dc .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _bbedg ._fgbeb [pageNum ],nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdeed *PdfShadingType6 )ToPdfObject ()_ea .PdfObject {_cdeed .PdfShading .ToPdfObject ();_abeeb ,_eacfbg :=_cdeed .getShadingDict ();if _eacfbg !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdeed .BitsPerCoordinate !=nil {_abeeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cdeed .BitsPerCoordinate );};if _cdeed .BitsPerComponent !=nil {_abeeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdeed .BitsPerComponent );
};if _cdeed .BitsPerFlag !=nil {_abeeb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cdeed .BitsPerFlag );};if _cdeed .Decode !=nil {_abeeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdeed .Decode );};if _cdeed .Function !=nil {if len (_cdeed .Function )==1{_abeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdeed .Function [0].ToPdfObject ());
}else {_ededd :=_ea .MakeArray ();for _ ,_acbb :=range _cdeed .Function {_ededd .Append (_acbb .ToPdfObject ());};_abeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ededd );};};return _cdeed ._feebc ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ea .PdfObjectBool ;SigFlags *_ea .PdfObjectInteger ;CO *_ea .PdfObjectArray ;DR *PdfPageResources ;DA *_ea .PdfObjectString ;Q *_ea .PdfObjectInteger ;XFA _ea .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _ea .PdfObject ;_fgef *_ea .PdfIndirectObject ;_dbdf bool ;};

// ReplacePage replaces the original page to a new page.
func (_fafad *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_aaag :=pageNum -1;for _beffc :=range _fafad ._efbd {if _beffc ==_aaag {_agggf :=page .Duplicate ();_afgdga (_agggf );_fafad ._efbd [_beffc ]=_agggf ;};};};

// AddMCIDChild adds a child MCID object.
func (_fegg *KDict )AddMCIDChild (mcid int ){_fegg ._deecfd =append (_fegg ._deecfd ,&KValue {_fffff :&mcid });};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dced *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abce ,_dgag :=_ea .GetNumbersAsFloat (objects );
if _dgag !=nil {return nil ,_dgag ;};return _dced .ColorFromFloats (_abce );};func (_gcd *PdfReader )newPdfAnnotationHighlightFromDict (_badb *_ea .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_egcg :=PdfAnnotationHighlight {};_aagc ,_gee :=_gcd .newPdfAnnotationMarkupFromDict (_badb );
if _gee !=nil {return nil ,_gee ;};_egcg .PdfAnnotationMarkup =_aagc ;_egcg .QuadPoints =_badb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_egcg ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ea .PdfObject ;Movie _ea .PdfObject ;A _ea .PdfObject ;};

// SetLocation sets the `Location` field of the signature.
func (_edagag *PdfSignature )SetLocation (location string ){_edagag .Location =_ea .MakeEncodedString (location ,true );};func (_ffce *PdfReader )newPdfAnnotationMovieFromDict (_fgce *_ea .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_adcf :=PdfAnnotationMovie {};
_adcf .T =_fgce .Get ("\u0054");_adcf .Movie =_fgce .Get ("\u004d\u006f\u0076i\u0065");_adcf .A =_fgce .Get ("\u0041");return &_adcf ,nil ;};

// ToInteger convert to an integer format.
func (_gcfa *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_eedga :=_dgf .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_eedga *_gcfa .C ()),uint32 (_eedga *_gcfa .M ()),uint32 (_eedga *_gcfa .Y ()),uint32 (_eedga *_gcfa .K ())};};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cbdegf *PdfPage )AppendContentStream (contentStr string )error {_fccea ,_ddade :=_cbdegf .GetContentStreams ();if _ddade !=nil {return _ddade ;};if len (_fccea )==0{_fccea =[]string {contentStr };return _cbdegf .SetContentStreams (_fccea ,_ea .NewFlateEncoder ());
};var _dbbce _cb .Buffer ;_dbbce .WriteString (_fccea [len (_fccea )-1]);_dbbce .WriteString ("\u000a");_dbbce .WriteString (contentStr );_fccea [len (_fccea )-1]=_dbbce .String ();return _cbdegf .SetContentStreams (_fccea ,_ea .NewFlateEncoder ());};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gffac *pdfFontSimple )ToPdfObject ()_ea .PdfObject {if _gffac ._aeef ==nil {_gffac ._aeef =&_ea .PdfIndirectObject {};};_bcbgc :=_gffac .baseFields ().asPdfObjectDictionary ("");_gffac ._aeef .PdfObject =_bcbgc ;if _gffac .FirstChar !=nil {_bcbgc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gffac .FirstChar );
};if _gffac .LastChar !=nil {_bcbgc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gffac .LastChar );};if _gffac .Widths !=nil {_bcbgc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gffac .Widths );};if _gffac .Encoding !=nil {_bcbgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gffac .Encoding );
}else if _gffac ._ggbg !=nil {_dceda :=_gffac ._ggbg .ToPdfObject ();if _dceda !=nil {_bcbgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dceda );};};return _gffac ._aeef ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_eceec :=PdfColorCalRGB {a ,b ,c };return &_eceec ;};func (_eae *PdfReader )newPdfAnnotationSquareFromDict (_dadd *_ea .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_acdb :=PdfAnnotationSquare {};
_ggda ,_cfba :=_eae .newPdfAnnotationMarkupFromDict (_dadd );if _cfba !=nil {return nil ,_cfba ;};_acdb .PdfAnnotationMarkup =_ggda ;_acdb .BS =_dadd .Get ("\u0042\u0053");_acdb .IC =_dadd .Get ("\u0049\u0043");_acdb .BE =_dadd .Get ("\u0042\u0045");_acdb .RD =_dadd .Get ("\u0052\u0044");
return &_acdb ,nil ;};

// SetFlag sets the flag for the field.
func (_aacf *PdfField )SetFlag (flag FieldFlag ){_aacf .Ff =_ea .MakeInteger (int64 (flag ))};func _cbfaeg ()string {return _ca .Version };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ea .PdfObjectString ;Author *_ea .PdfObjectString ;Subject *_ea .PdfObjectString ;Keywords *_ea .PdfObjectString ;Creator *_ea .PdfObjectString ;Producer *_ea .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_ea .PdfObjectName ;
_bafgg *_ea .PdfObjectDictionary ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ea .PdfObjectInteger ;BitsPerComponent *_ea .PdfObjectInteger ;VerticesPerRow *_ea .PdfObjectInteger ;Decode *_ea .PdfObjectArray ;Function []PdfFunction ;};func (_abagf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_defada *LTV )EnableAll (extraCerts []*_fgg .Certificate )error {_bdgb :=_defada ._fgcff ._gcaa .AcroForm ;for _ ,_gedg :=range _bdgb .AllFields (){_ebacd ,_ :=_gedg .GetContext ().(*PdfFieldSignature );if _ebacd ==nil {continue ;};_gfcbg :=_ebacd .V ;
if _edeff :=_defada .validateSig (_gfcbg );_edeff !=nil {_ca .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_edeff );
};if _ecfc :=_defada .Enable (_gfcbg ,extraCerts );_ecfc !=nil {return _ecfc ;};};return nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_baaeb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fdbd :=NewPdfOutlineItem ();_fdbd .Title =_ea .MakeEncodedString (_baaeb .Title ,true );_fdbd .Dest =_baaeb .Dest .ToPdfObject ();var _ebee []*PdfOutlineItem ;var _dcgd int64 ;var _adcb *PdfOutlineItem ;
for _ ,_ffaga :=range _baaeb .Entries {_bdfff ,_eafb :=_ffaga .ToPdfOutlineItem ();_bdfff .Parent =&_fdbd .PdfOutlineTreeNode ;if _adcb !=nil {_adcb .Next =&_bdfff .PdfOutlineTreeNode ;_bdfff .Prev =&_adcb .PdfOutlineTreeNode ;};_ebee =append (_ebee ,_bdfff );
_dcgd +=_eafb ;_adcb =_bdfff ;};_ggaec :=len (_ebee );_dcgd +=int64 (_ggaec );if _ggaec > 0{_fdbd .First =&_ebee [0].PdfOutlineTreeNode ;_fdbd .Last =&_ebee [_ggaec -1].PdfOutlineTreeNode ;_fdbd .Count =&_dcgd ;};return _fdbd ,_dcgd ;};func (_cedd *PdfReader )newPdfAcroFormFromDict (_agad *_ea .PdfIndirectObject ,_degc *_ea .PdfObjectDictionary )(*PdfAcroForm ,error ){_agaga :=NewPdfAcroForm ();
if _agad !=nil {_agaga ._fgef =_agad ;_agad .PdfObject =_ea .MakeDict ();};if _fbabe :=_degc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fbabe !=nil &&!_ea .IsNullObject (_fbabe ){_ebbd ,_dcfc :=_ea .GetArray (_fbabe );if !_dcfc {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fbabe );
};var _gaadd []*PdfField ;for _ ,_bbgbd :=range _ebbd .Elements (){_fdcf ,_dfgbd :=_ea .GetIndirect (_bbgbd );if !_dfgbd {if _ ,_feffcd :=_bbgbd .(*_ea .PdfObjectNull );_feffcd {_ca .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ca .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bbgbd );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cffe ,_bgedf :=_cedd .newPdfFieldFromIndirectObject (_fdcf ,nil );
if _bgedf !=nil {return nil ,_bgedf ;};_ca .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_cffe );_gaadd =append (_gaadd ,_cffe );};_agaga .Fields =&_gaadd ;};if _dbea :=_degc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dbea !=nil {_bbfb ,_ddadf :=_ea .GetBool (_dbea );if _ddadf {_agaga .NeedAppearances =_bbfb ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dbea );
};};if _cdabg :=_degc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cdabg !=nil {_cdbbfa ,_acace :=_ea .GetInt (_cdabg );if _acace {_agaga .SigFlags =_cdbbfa ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdabg );
};};if _ddgcc :=_degc .Get ("\u0043\u004f");_ddgcc !=nil {_bcedc ,_ecbcc :=_ea .GetArray (_ddgcc );if _ecbcc {_agaga .CO =_bcedc ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ddgcc );
};};if _bffde :=_degc .Get ("\u0044\u0052");_bffde !=nil {if _bbae ,_eaaf :=_ea .GetDict (_bffde );_eaaf {_abea ,_aadfc :=NewPdfPageResourcesFromDict (_bbae );if _aadfc !=nil {_ca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_aadfc );
return nil ,_aadfc ;};_agaga .DR =_abea ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bffde );};};if _ccdgf :=_degc .Get ("\u0044\u0041");
_ccdgf !=nil {_bcbec ,_ebga :=_ea .GetString (_ccdgf );if _ebga {_agaga .DA =_bcbec ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccdgf );
};};if _fafba :=_degc .Get ("\u0051");_fafba !=nil {_cfdc ,_fddf :=_ea .GetInt (_fafba );if _fddf {_agaga .Q =_cfdc ;}else {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fafba );
};};if _cgfdc :=_degc .Get ("\u0058\u0046\u0041");_cgfdc !=nil {_agaga .XFA =_cgfdc ;};if _adab :=_degc .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_adab !=nil {_agaga .ADBEEchoSign =_adab ;};_agaga .ToPdfObject ();
return _agaga ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bagef *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bagef .RunesToCharcodeBytes ([]rune (str ));};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_egfdg PdfModel ;_bedae _ea .PdfObject ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_acddaa *PdfWriter )writeObjectsInStreams (_egdcc map[_ea .PdfObject ]bool )error {for _ ,_caddf :=range _acddaa ._cgdbdb {if _faead :=_egdcc [_caddf ];_faead {continue ;};_dgba :=int64 (0);switch _accbf :=_caddf .(type ){case *_ea .PdfIndirectObject :_dgba =_accbf .ObjectNumber ;
case *_ea .PdfObjectStream :_dgba =_accbf .ObjectNumber ;case *_ea .PdfObjectStreams :_dgba =_accbf .ObjectNumber ;case *_ea .PdfObjectDictionary ,*_ea .PdfObjectString :default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_caddf ,_accbf );
return ErrTypeCheck ;};if _acddaa ._afcgd !=nil &&_caddf !=_acddaa ._eadec {_bcaea :=_acddaa ._afcgd .Encrypt (_caddf ,_dgba ,0);if _bcaea !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bcaea );
return _bcaea ;};};_acddaa .writeObject (int (_dgba ),_caddf );};return nil ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// SetDirection sets the value of the direction.
func (_abedb *ViewerPreferences )SetDirection (direction Direction ){_abedb ._dadac =direction };const (_edcfe =0x00001;_dfbdb =0x00002;_dcbbed =0x00004;_dgfgg =0x00008;_gcebd =0x00020;_edcdg =0x00040;_feab =0x10000;_fedd =0x20000;_adfge =0x40000;);

// WriteToFile writes the Appender output to file specified by path.
func (_ddbfa *PdfAppender )WriteToFile (outputPath string )error {_gfgb ,_fga :=_abg .Create (outputPath );if _fga !=nil {return _fga ;};defer _gfgb .Close ();return _ddbfa .Write (_gfgb );};

// ToPdfObject implements interface PdfModel.
func (_ccd *PdfActionLaunch )ToPdfObject ()_ea .PdfObject {_ccd .PdfAction .ToPdfObject ();_gdb :=_ccd ._fgc ;_gcg :=_gdb .PdfObject .(*_ea .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeLaunch )));if _ccd .F !=nil {_gcg .Set ("\u0046",_ccd .F .ToPdfObject ());
};_gcg .SetIfNotNil ("\u0057\u0069\u006e",_ccd .Win );_gcg .SetIfNotNil ("\u004d\u0061\u0063",_ccd .Mac );_gcg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ccd .Unix );_gcg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ccd .NewWindow );return _gdb ;
};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cdag PdfModel ;_gegceb *_ea .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ea .PdfObjectName ;T *_ea .PdfObjectString ;TU *_ea .PdfObjectString ;TM *_ea .PdfObjectString ;Ff *_ea .PdfObjectInteger ;
V _ea .PdfObject ;DV _ea .PdfObject ;AA _ea .PdfObject ;VariableText *VariableText ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dfggb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _ea .PdfObject )(*PdfInfo ,error ){var _baab PdfInfo ;_bfad ,_dfga :=obj .(*_ea .PdfObjectDictionary );if !_dfga {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_aabg :=range _bfad .Keys (){switch _aabg {case "\u0054\u0069\u0074l\u0065":_baab .Title ,_ =_ea .GetString (_bfad .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_baab .Author ,_ =_ea .GetString (_bfad .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_baab .Subject ,_ =_ea .GetString (_bfad .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_baab .Keywords ,_ =_ea .GetString (_bfad .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_baab .Creator ,_ =_ea .GetString (_bfad .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_baab .Producer ,_ =_ea .GetString (_bfad .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_baab .Trapped ,_ =_ea .GetName (_bfad .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bcgg ,_fcb :=_ea .GetString (_bfad .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_fcb &&_bcgg .String ()!=""{_fcab ,_aaba :=NewPdfDate (_bcgg .String ());if _aaba !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_aaba );
};_baab .CreationDate =&_fcab ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _gfdfe ,_agfe :=_ea .GetString (_bfad .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_agfe &&_gfdfe .String ()!=""{_dadge ,_dbbcg :=NewPdfDate (_gfdfe .String ());if _dbbcg !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_dbbcg );
};_baab .ModifiedDate =&_dadge ;};default:_gfgc ,_ :=_ea .GetString (_bfad .Get (_aabg ));if _baab ._bafgg ==nil {_baab ._bafgg =_ea .MakeDict ();};_baab ._bafgg .Set (_aabg ,_gfgc );};};return &_baab ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bfbg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bfbg ._fcdad !=nil {return _bfbg ._fcdad ,nil ;};if _bfbg .Annots ==nil {_bfbg ._fcdad =[]*PdfAnnotation {};return nil ,nil ;};if _bfbg ._fdfg ==nil {_bfbg ._fcdad =[]*PdfAnnotation {};
return nil ,nil ;};_gbcg ,_afdfd :=_bfbg ._fdfg .loadAnnotations (_bfbg .Annots );if _afdfd !=nil {return nil ,_afdfd ;};if _gbcg ==nil {_bfbg ._fcdad =[]*PdfAnnotation {};};_bfbg ._fcdad =_gbcg ;return _bfbg ._fcdad ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_ebcc *pdfFontType3 )ToPdfObject ()_ea .PdfObject {if _ebcc ._cbfed ==nil {_ebcc ._cbfed =&_ea .PdfIndirectObject {};};_ccfc :=_ebcc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ebcc ._cbfed .PdfObject =_ccfc ;if _ebcc .FirstChar !=nil {_ccfc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ebcc .FirstChar );
};if _ebcc .LastChar !=nil {_ccfc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ebcc .LastChar );};if _ebcc .Widths !=nil {_ccfc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ebcc .Widths );};if _ebcc .Encoding !=nil {_ccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebcc .Encoding );
}else if _ebcc ._gccf !=nil {_addfg :=_ebcc ._gccf .ToPdfObject ();if _addfg !=nil {_ccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_addfg );};};if _ebcc .FontBBox !=nil {_ccfc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ebcc .FontBBox );
};if _ebcc .FontMatrix !=nil {_ccfc .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ebcc .FontMatrix );};if _ebcc .CharProcs !=nil {_ccfc .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ebcc .CharProcs );};if _ebcc .Resources !=nil {_ccfc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebcc .Resources );
};return _ebcc ._cbfed ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gdbd :=PdfColorDeviceGray (grayVal );return &_gdbd ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_babcf *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_babcf ._cbfbgee =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// R returns the value of the red component of the color.
func (_adef *PdfColorDeviceRGB )R ()float64 {return _adef [0]};

// SetObjAttrib adds an object attribute to the structure tag info.
// This is commonly used to associate annotations with structure elements.
func (_afadg *StructureTagInfo )SetObjAttrib (obj _ea .PdfObject ){if _afadg .AnnotObjs ==nil {_afadg .AnnotObjs =make ([]_ea .PdfObject ,0);};_afadg .AnnotObjs =append (_afadg .AnnotObjs ,obj );};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_fbdfg *Image )GetParamsDict ()*_ea .PdfObjectDictionary {_bfaee :=_ea .MakeDict ();_bfaee .Set ("\u0057\u0069\u0064t\u0068",_ea .MakeInteger (_fbdfg .Width ));_bfaee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ea .MakeInteger (_fbdfg .Height ));
_bfaee .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ea .MakeInteger (int64 (_fbdfg .ColorComponents )));_bfaee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ea .MakeInteger (_fbdfg .BitsPerComponent ));
return _bfaee ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gegcb :=&PdfSignature {Type :_ea .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fgdbg :=&pdfSignDictionary {PdfObjectDictionary :_ea .MakeDict (),_cgcga :&handler ,_ddgae :_gegcb };_gegcb ._eedgc =_ea .MakeIndirectObject (_fgdbg );
return _gegcb ;};type pdfFontSimple struct{fontCommon ;_aeef *_ea .PdfIndirectObject ;_ffeb map[_ge .CharCode ]float64 ;_ggbg _ge .TextEncoder ;_gcgef _ge .TextEncoder ;_caaff *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ea .PdfObject ;LastChar _ea .PdfObject ;Widths _ea .PdfObject ;Encoding _ea .PdfObject ;_agaf *_gf .RuneCharSafeMap ;};

// GenerateKDict generates a K dictionary object from the StructureTagInfo.
func (_abcec *StructureTagInfo )GenerateKDict ()*KDict {_gacce :=&KDict {S :_ea .MakeName (string (_abcec .StructureType ))};if len (_abcec .AnnotObjs )==0{_gacce .K =_ea .MakeInteger (_abcec .Mcid );return _gacce ;};_ccdd :=_ea .MakeArray ();_ccdd .Append (_ea .MakeInteger (_abcec .Mcid ));
for _ ,_aecdd :=range _abcec .AnnotObjs {_egffd :=_ea .MakeDict ();_egffd .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u004f\u0042\u004a\u0052"));_egffd .Set ("\u004f\u0062\u006a",_aecdd );_ccdd .Append (_egffd );};_gacce .K =_ccdd ;return _gacce ;
};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_fe PdfModel ;Type _ea .PdfObject ;S _ea .PdfObject ;Next _ea .PdfObject ;_fgc *_ea .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_adbad *PdfPageResources )ToPdfObject ()_ea .PdfObject {_afaga :=_adbad ._gafded ;_afaga .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_adbad .ExtGState );if _adbad ._dgad !=nil {_adbad .ColorSpace =_adbad ._dgad .ToPdfObject ();};
_afaga .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_adbad .ColorSpace );_afaga .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_adbad .Pattern );_afaga .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_adbad .Shading );
_afaga .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_adbad .XObject );_afaga .SetIfNotNil ("\u0046\u006f\u006e\u0074",_adbad .Font );_afaga .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_adbad .ProcSet );_afaga .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_adbad .Properties );
return _afaga ;};func (_effcb *PdfWriter )writeOutputIntents ()error {if len (_effcb ._aaege )==0{return nil ;};_cbggg :=make ([]_ea .PdfObject ,len (_effcb ._aaege ));for _bacdgc ,_fbaad :=range _effcb ._aaege {_cgcefa :=_fbaad .ToPdfObject ();_cbggg [_bacdgc ]=_ea .MakeIndirectObject (_cgcefa );
};_feceb :=_ea .MakeIndirectObject (_ea .MakeArray (_cbggg ...));_effcb ._dacfd .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_feceb );if _eggee :=_effcb .addObjects (_feceb );_eggee !=nil {return _eggee ;};return nil ;
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _fg .Time ){_dcgec .Lock ();defer _dcgec .Unlock ();_cgcgb =creationDate ;};func (_deffc *PdfWriter )writeNamesDictionary ()error {if _deffc ._eggf ==nil {return nil ;};_ggced :=_deffc ._eggf .ToPdfObject ();_deffc ._dacfd .Set ("\u004e\u0061\u006de\u0073",_ggced );
_edeffb :=_deffc .addObjects (_ggced );if _edeffb !=nil {return _edeffb ;};return nil ;};

// AddKChild adds a child K dictionary object.
func (_egbbd *KDict )AddKChild (kChild *KDict ){_egbbd ._deecfd =append (_egbbd ._deecfd ,&KValue {_febfg :kChild });};

// String returns a string that describes `font`.
func (_dage *PdfFont )String ()string {_gbbe :="";if _dage ._gbee .Encoder ()!=nil {_gbbe =_dage ._gbee .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_dage ._gbee ,_dage .baseFields ().coreString (),_gbbe );
};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ea .PdfObjectStream )(*XObjectImage ,error ){_geaaa :=&XObjectImage {};_geaaa ._bccba =stream ;_dcbcg :=*(stream .PdfObjectDictionary );_cffbc ,_cffd :=_ea .NewEncoderFromStream (stream );if _cffd !=nil {return nil ,_cffd ;
};_geaaa .Filter =_cffbc ;if _bbgea :=_ea .TraceToDirectObject (_dcbcg .Get ("\u0057\u0069\u0064t\u0068"));_bbgea !=nil {_gccde ,_ccggbc :=_bbgea .(*_ea .PdfObjectInteger );if !_ccggbc {return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cdefb :=int64 (*_gccde );_geaaa .Width =&_cdefb ;}else {return nil ,_dc .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _deceba :=_ea .TraceToDirectObject (_dcbcg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_deceba !=nil {_aeee ,_dffac :=_deceba .(*_ea .PdfObjectInteger );if !_dffac {return nil ,_dc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_eaca :=int64 (*_aeee );
_geaaa .Height =&_eaca ;}else {return nil ,_dc .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _addcc :=_ea .TraceToDirectObject (_dcbcg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_addcc !=nil {_gffd ,_gbegfd :=NewPdfColorspaceFromPdfObject (_addcc );if _gbegfd !=nil {return nil ,_gbegfd ;};_geaaa .ColorSpace =_gffd ;}else {_ca .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_geaaa .ColorSpace =NewPdfColorspaceDeviceGray ();};if _afabbf :=_ea .TraceToDirectObject (_dcbcg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_afabbf !=nil {_fgebgd ,_ccggd :=_afabbf .(*_ea .PdfObjectInteger );
if !_ccggd {return nil ,_dc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_edca :=int64 (*_fgebgd );_geaaa .BitsPerComponent =&_edca ;};_geaaa .Intent =_dcbcg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_geaaa .ImageMask =_dcbcg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_geaaa .Mask =_dcbcg .Get ("\u004d\u0061\u0073\u006b");_geaaa .Decode =_dcbcg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_geaaa .Interpolate =_dcbcg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_geaaa .Alternatives =_dcbcg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_geaaa .SMask =_dcbcg .Get ("\u0053\u004d\u0061s\u006b");_geaaa .SMaskInData =_dcbcg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_geaaa .Matte =_dcbcg .Get ("\u004d\u0061\u0074t\u0065");_geaaa .Name =_dcbcg .Get ("\u004e\u0061\u006d\u0065");_geaaa .StructParent =_dcbcg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_geaaa .ID =_dcbcg .Get ("\u0049\u0044");
_geaaa .OPI =_dcbcg .Get ("\u004f\u0050\u0049");_geaaa .Metadata =_dcbcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_geaaa .OC =_dcbcg .Get ("\u004f\u0043");_geaaa .Stream =stream .Stream ;return _geaaa ,nil ;};func _bffc (_acgg *_ea .PdfIndirectObject )(*PdfOutline ,error ){_dgbfe ,_bdbabe :=_acgg .PdfObject .(*_ea .PdfObjectDictionary );
if !_bdbabe {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ddeb :=NewPdfOutline ();if _cdgeb :=_dgbfe .Get ("\u0054\u0079\u0070\u0065");
_cdgeb !=nil {_bffff ,_ffcgg :=_cdgeb .(*_ea .PdfObjectName );if _ffcgg {if *_bffff !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bffff );
};};};if _bebagb :=_dgbfe .Get ("\u0043\u006f\u0075n\u0074");_bebagb !=nil {_deecf ,_bcgcf :=_ea .GetNumberAsInt64 (_bebagb );if _bcgcf !=nil {return nil ,_bcgcf ;};_ddeb .Count =&_deecf ;};return _ddeb ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ea .PdfObject ;Name _ea .PdfObject ;};

// Add appends a top level outline item to the outline.
func (_cgcf *Outline )Add (item *OutlineItem ){_cgcf .Entries =append (_cgcf .Entries ,item )};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_eegdf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_eegdf .HiVal )};};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bgcgd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func _eefdg ()string {_dcgec .Lock ();defer _dcgec .Unlock ();return _cebfb };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bcbg *PdfFont )SubsetRegistered ()error {switch _abed :=_bcbg ._gbee .(type ){case *pdfFontType0 :_fbaef :=_abed .subsetRegistered ();if _fbaef !=nil {_ca .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fbaef );
return _fbaef ;};if _abed ._gaeb !=nil {if _abed ._dcdd !=nil {_abed ._dcdd .ToPdfObject ();};_abed .ToPdfObject ();};default:_ca .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_abed );
};return nil ;};func (_adfad *PdfWriter )updateObjectNumbers (){_ebdbf :=_adfad .ObjNumOffset ;_aeeb :=0;for _ ,_dcgba :=range _adfad ._cgdbdb {_dgedba :=int64 (_aeeb +1+_ebdbf );_afdba :=true ;if _adfad ._eefcgg {if _bdfbf ,_dabca :=_adfad ._ebfca [_dcgba ];
_dabca {_dgedba =_bdfbf ;_afdba =false ;};};switch _ffccf :=_dcgba .(type ){case *_ea .PdfIndirectObject :_ffccf .ObjectNumber =_dgedba ;_ffccf .GenerationNumber =0;case *_ea .PdfObjectStream :_ffccf .ObjectNumber =_dgedba ;_ffccf .GenerationNumber =0;
case *_ea .PdfObjectStreams :_ffccf .ObjectNumber =_dgedba ;_ffccf .GenerationNumber =0;case *_ea .PdfObjectReference :_ffccf .ObjectNumber =_dgedba ;_ffccf .GenerationNumber =0;case *_ea .PdfObjectDictionary ,*_ea .PdfObjectString :default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ffccf );
continue ;};if _afdba {_aeeb ++;};};_gdedf :=func (_fcbb _ea .PdfObject )int64 {switch _feedd :=_fcbb .(type ){case *_ea .PdfIndirectObject :return _feedd .ObjectNumber ;case *_ea .PdfObjectStream :return _feedd .ObjectNumber ;case *_ea .PdfObjectStreams :return _feedd .ObjectNumber ;
case *_ea .PdfObjectReference :return _feedd .ObjectNumber ;};return 0;};_cd .SliceStable (_adfad ._cgdbdb ,func (_dcebd ,_eegdg int )bool {return _gdedf (_adfad ._cgdbdb [_dcebd ])< _gdedf (_adfad ._cgdbdb [_eegdg ])});};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dega *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dega .updateObjectsDeep (dss .ToPdfObject (),nil );};_dega ._ccfg =dss ;};

// BaseFont returns the font's "BaseFont" field.
func (_fgcee *PdfFont )BaseFont ()string {return _fgcee .baseFields ()._ceac };func (_cgbcc *PdfWriter )makeOffSetReference (_bebbd int64 ){_eabge :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bebbd );
_cgbcc .writeString (_eabge );_cgbcc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cdfeb *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cdfeb .Type ,_cdfeb .P ,_cdfeb .V );};

// GetContainingPdfObject implements interface PdfModel.
func (_ceed *PdfSignatureReference )GetContainingPdfObject ()_ea .PdfObject {return _ceed ._gdcaa };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_aeag *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_acbd :=_aeag .GetContentStreamObjs ();wrapContents =wrapContents &&len (_acbd )> 0;_gfgcb :=_ea .NewFlateEncoder ();_aeafa :=_ea .MakeArray ();if wrapContents {_cafg ,_faede :=_ea .MakeStream ([]byte ("\u0071\u000a"),_gfgcb );
if _faede !=nil {return _faede ;};_aeafa .Append (_cafg );};_aeafa .Append (_acbd ...);if wrapContents {_ceaf ,_dbbaa :=_ea .MakeStream ([]byte ("\u000a\u0051\u000a"),_gfgcb );if _dbbaa !=nil {return _dbbaa ;};_aeafa .Append (_ceaf );};_aaee ,_gfeeb :=_ea .MakeStream (cs ,_gfgcb );
if _gfeeb !=nil {return _gfeeb ;};_aeafa .Append (_aaee );_aeag .Contents =_aeafa ;return nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ea .PdfObject )(*PdfFilespec ,error ){_afef :=&PdfFilespec {};var _gbaeg *_ea .PdfObjectDictionary ;if _faca ,_acad :=_ea .GetIndirect (obj );_acad {_afef ._cbgg =_faca ;_dfgc ,_efec :=_ea .GetDict (_faca .PdfObject );if !_efec {_ca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_ea .ErrTypeError ;};_gbaeg =_dfgc ;}else if _eaeeb ,_ddecb :=_ea .GetDict (obj );_ddecb {_afef ._cbgg =_eaeeb ;_gbaeg =_eaeeb ;}else {_ca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );
return nil ,_ea .ErrTypeError ;};if _gbaeg ==nil {_ca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_dc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};if _gfdb :=_gbaeg .Get ("\u0054\u0079\u0070\u0065");_gfdb !=nil {_fdbf ,_fbff :=_gfdb .(*_ea .PdfObjectName );if !_fbff {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfdb );
}else {if *_fdbf !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fdbf );
};};};if _dacad :=_gbaeg .Get ("\u0046\u0053");_dacad !=nil {_afef .FS =_dacad ;};if _daec :=_gbaeg .Get ("\u0046");_daec !=nil {_afef .F =_daec ;};if _fadd :=_gbaeg .Get ("\u0055\u0046");_fadd !=nil {_afef .UF =_fadd ;};if _bbcfb :=_gbaeg .Get ("\u0044\u004f\u0053");
_bbcfb !=nil {_afef .DOS =_bbcfb ;};if _dgbe :=_gbaeg .Get ("\u004d\u0061\u0063");_dgbe !=nil {_afef .Mac =_dgbe ;};if _dgcg :=_gbaeg .Get ("\u0055\u006e\u0069\u0078");_dgcg !=nil {_afef .Unix =_dgcg ;};if _aeca :=_gbaeg .Get ("\u0049\u0044");_aeca !=nil {_afef .ID =_aeca ;
};if _fbag :=_gbaeg .Get ("\u0056");_fbag !=nil {_afef .V =_fbag ;};if _dgagc :=_gbaeg .Get ("\u0045\u0046");_dgagc !=nil {_afef .EF =_dgagc ;};if _eebdc :=_gbaeg .Get ("\u0052\u0046");_eebdc !=nil {_afef .RF =_eebdc ;};if _cbeg :=_gbaeg .Get ("\u0044\u0065\u0073\u0063");
_cbeg !=nil {_afef .Desc =_cbeg ;};if _ffed :=_gbaeg .Get ("\u0043\u0049");_ffed !=nil {_afef .CI =_ffed ;};if _gage :=_gbaeg .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_gage !=nil {_afef .AFRelationship =_gage ;
};return _afef ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cfcg *PdfColorspaceDeviceN )GetNumComponents ()int {return _cfcg .ColorantNames .Len ()};

// ToPdfObject implements interface PdfModel.
func (_aafa *PdfAnnotationSquiggly )ToPdfObject ()_ea .PdfObject {_aafa .PdfAnnotation .ToPdfObject ();_ebe :=_aafa ._eab ;_bfaa :=_ebe .PdfObject .(*_ea .PdfObjectDictionary );_aafa .PdfAnnotationMarkup .appendToPdfDictionary (_bfaa );_bfaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bfaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aafa .QuadPoints );return _ebe ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_faeca *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_faeca ._gcffa =printPageRange ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ea .PdfObjectArray ;Domain *_ea .PdfObjectArray ;Function []PdfFunction ;Extend *_ea .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_dacd *PdfAnnotationScreen )ToPdfObject ()_ea .PdfObject {_dacd .PdfAnnotation .ToPdfObject ();_ccaff :=_dacd ._eab ;_bggf :=_ccaff .PdfObject .(*_ea .PdfObjectDictionary );_bggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bggf .SetIfNotNil ("\u0054",_dacd .T );_bggf .SetIfNotNil ("\u004d\u004b",_dacd .MK );_bggf .SetIfNotNil ("\u0041",_dacd .A );_bggf .SetIfNotNil ("\u0041\u0041",_dacd .AA );return _ccaff ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bgda :=NewPdfAnnotation ();_dga :=&PdfAnnotationCircle {};_dga .PdfAnnotation =_bgda ;_dga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgda .SetContext (_dga );return _dga ;};func _fefge (_gaea *_ea .PdfObjectDictionary ){_aabcd ,_abfg :=_ea .GetArray (_gaea .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_faddc ,_fffeg :=_ea .GetIntVal (_gaea .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_bcaa ,_gfff :=_ea .GetIntVal (_gaea .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _abfg &&_fffeg &&_gfff {_dgdc :=_aabcd .Len ();if _dgdc !=_bcaa -_faddc +1{_ca .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_dgdc ,_bcaa );
_gedbe :=_ea .PdfObjectInteger (_faddc +_dgdc -1);_gaea .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_gedbe );};};};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ea .PdfObject ;MK _ea .PdfObject ;A _ea .PdfObject ;AA _ea .PdfObject ;BS _ea .PdfObject ;Parent _ea .PdfObject ;_efb *PdfField ;_cab bool ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cbagf *_ea .PdfIndirectObject ;};func (_bfcbf *LTV )validateSig (_abadbf *PdfSignature )error {if _abadbf ==nil ||_abadbf .Contents ==nil ||len (_abadbf .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_abadbf );
};return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gfcd :=PdfColorCalGray (grayVal );return &_gfcd ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fcfda *PdfWriter )SetRotation (rotate int64 )error {_bceb ,_bfcca :=_ea .GetDict (_fcfda ._ddeac );if !_bfcca {return ErrTypeCheck ;};_bceb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ea .MakeInteger (rotate ));return nil ;};

// Val returns the value of the color.
func (_bfba *PdfColorCalGray )Val ()float64 {return float64 (*_bfba )};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_gf .CharMetrics ;

// ToPdfObject implements interface PdfModel.
func (_aadc *PdfAnnotationTrapNet )ToPdfObject ()_ea .PdfObject {_aadc .PdfAnnotation .ToPdfObject ();_caa :=_aadc ._eab ;_adad :=_caa .PdfObject .(*_ea .PdfObjectDictionary );_adad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _caa ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_ggccea *PdfShading )GetContext ()PdfModel {return _ggccea ._bgaf };func _dbed (_bbfag *_ea .PdfObjectDictionary )(*PdfShadingType2 ,error ){_acbc :=PdfShadingType2 {};_ddfe :=_bbfag .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ddfe ==nil {_ca .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_dbce ,_ecgd :=_ddfe .(*_ea .PdfObjectArray );if !_ecgd {_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddfe );
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbce .Len ()!=4{_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbce .Len ());
return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_acbc .Coords =_dbce ;if _efcgg :=_bbfag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_efcgg !=nil {_efcgg =_ea .TraceToDirectObject (_efcgg );
_efag ,_aggcc :=_efcgg .(*_ea .PdfObjectArray );if !_aggcc {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efcgg );return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_acbc .Domain =_efag ;};_ddfe =_bbfag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddfe ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_acbc .Function =[]PdfFunction {};if _eeagf ,_gdcac :=_ddfe .(*_ea .PdfObjectArray );_gdcac {for _ ,_fccc :=range _eeagf .Elements (){_fgga ,_fgdea :=_ebcdc (_fccc );if _fgdea !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgdea );
return nil ,_fgdea ;};_acbc .Function =append (_acbc .Function ,_fgga );};}else {_cgcg ,_fcdcd :=_ebcdc (_ddfe );if _fcdcd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcdcd );
return nil ,_fcdcd ;};_acbc .Function =append (_acbc .Function ,_cgcg );};if _egdgg :=_bbfag .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_egdgg !=nil {_egdgg =_ea .TraceToDirectObject (_egdgg );_cdfa ,_gedfg :=_egdgg .(*_ea .PdfObjectArray );if !_gedfg {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egdgg );
return nil ,_ea .ErrTypeError ;};if _cdfa .Len ()!=2{_ca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cdfa .Len ());return nil ,ErrInvalidAttribute ;
};_acbc .Extend =_cdfa ;};return &_acbc ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_dbeag *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dbeag ._afedg .GetCrypter ()!=nil &&!_dbeag ._afedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dbeag ._dfdbf )< pageNumber {return nil ,_dc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ddeg :=pageNumber -1;if _ddeg < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_decea :=_dbeag .PageList [_ddeg ];
return _decea ,nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gfcfd *PdfWriter )SetCatalogMetadata (meta _ea .PdfObject )error {if meta ==nil {_gfcfd ._dacfd .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gefac ,_cdfd :=_ea .GetStream (meta );if !_cdfd {return _dc .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gfcfd .addObject (_gefac );_gfcfd ._dacfd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gefac );return nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_caacg *PdfPage )ToPdfObject ()_ea .PdfObject {_gcdad :=_caacg ._dfgcd ;_caacg .GetPageDict ();return _gcdad ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_agdea *pdfFontSimple )SetEncoder (encoder _ge .TextEncoder ){_agdea ._ggbg =encoder };func (_cbgf *PdfPage )flattenFieldsWithOpts (_bagea FieldAppearanceGenerator ,_fgdca *FieldFlattenOpts ,_aceb map[*PdfAnnotation ]bool )error {var _eacdc []*PdfAnnotation ;
if _bagea !=nil {if _eegeb :=_bagea .WrapContentStream (_cbgf );_eegeb !=nil {return _eegeb ;};};_egfe ,_cebe :=_cbgf .GetAnnotations ();if _cebe !=nil {return _cebe ;};for _ ,_ffgb :=range _egfe {_eafc ,_afadc :=_aceb [_ffgb ];if !_afadc &&_fgdca .AnnotFilterFunc !=nil {if _ ,_agee :=_ffgb .GetContext ().(*PdfAnnotationWidget );
!_agee {_afadc =_fgdca .AnnotFilterFunc (_ffgb );};};if !_afadc {_eacdc =append (_eacdc ,_ffgb );continue ;};switch _ffgb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gged ,_gfdea ,_ebab :=_gbgfa (_ffgb );if _ebab !=nil {if !_eafc {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_ebab );
continue ;};if _gged ==nil {continue ;};_gdbeb :=_cbgf .Resources .GenerateXObjectName ();_cbgf .Resources .SetXObjectFormByName (_gdbeb ,_gged );_cfff ,_cdgbag ,_ebab :=_ccde (_gged );if _ebab !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_ebab );
}else {_cbcf :=_ged .IdentityMatrix ();_cbcf =_cbcf .Translate (-_cfff .Llx ,-_cfff .Lly );if _cdgbag {_adbcd :=1.0;if _cfff .Width ()> 0{_adbcd =_dgf .Round (_gfdea .Width ()/_cfff .Width ());};_caea :=1.0;if _cfff .Height ()> 0{_caea =_dgf .Round (_gfdea .Height ()/_cfff .Height ());
};_cbcf =_cbcf .Scale (_adbcd ,_caea );};_gfdea .Transform (_cbcf );};_geef :=_dgf .Min (_gfdea .Llx ,_gfdea .Urx );_gcde :=_dgf .Min (_gfdea .Lly ,_gfdea .Ury );var _fbcce []string ;_fbcce =append (_fbcce ,"\u0071");_fbcce =append (_fbcce ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_geef ,_gcde ));
_fbcce =append (_fbcce ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gdbeb .String ()));_fbcce =append (_fbcce ,"\u0051");_eadbd :=_dgb .Join (_fbcce ,"\u000a");_ebab =_cbgf .AppendContentStream (_eadbd );if _ebab !=nil {return _ebab ;};if _gged .Resources !=nil {_bega ,_cdceb :=_ea .GetDict (_gged .Resources .Font );
if _cdceb {for _ ,_afgc :=range _bega .Keys (){if !_cbgf .Resources .HasFontByName (_afgc ){_cbgf .Resources .SetFontByName (_afgc ,_bega .Get (_afgc ));};};};};};if len (_eacdc )> 0{_cbgf ._fcdad =_eacdc ;}else {_cbgf ._fcdad =[]*PdfAnnotation {};};return nil ;
};

// GetContentStream returns the XObject Form's content stream.
func (_cacbc *XObjectForm )GetContentStream ()([]byte ,error ){_addg ,_edefg :=_ea .DecodeStream (_cacbc ._dgbbc );if _edefg !=nil {return nil ,_edefg ;};return _addg ,nil ;};func (_gefg *PdfReader )newPdfAnnotationProjectionFromDict (_cgac *_ea .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_aced :=&PdfAnnotationProjection {};
_ebd ,_fed :=_gefg .newPdfAnnotationMarkupFromDict (_cgac );if _fed !=nil {return nil ,_fed ;};_aced .PdfAnnotationMarkup =_ebd ;return _aced ,nil ;};

// SetName sets the `Name` field of the signature.
func (_eeccc *PdfSignature )SetName (name string ){_eeccc .Name =_ea .MakeEncodedString (name ,true )};func (_fegad *PdfWriter )checkPendingObjects (){for _abddb ,_fbabg :=range _fegad ._bbfagd {if !_fegad .hasObject (_abddb ){_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_abddb ,_abddb ,_abddb );
for _ ,_bccff :=range _fbabg {for _ ,_bbdac :=range _bccff .Keys (){_efffb :=_bccff .Get (_bbdac );if _efffb ==_abddb {_ca .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bccff .Set (_bbdac ,_ea .MakeNull ());break ;};};};};};};

// StdFontName represents name of a standard font.
type StdFontName =_gf .StdFontName ;func (_deee *PdfReader )newPdfAnnotationLineFromDict (_abe *_ea .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_agbg :=PdfAnnotationLine {};_daff ,_bbeb :=_deee .newPdfAnnotationMarkupFromDict (_abe );if _bbeb !=nil {return nil ,_bbeb ;
};_agbg .PdfAnnotationMarkup =_daff ;_agbg .L =_abe .Get ("\u004c");_agbg .BS =_abe .Get ("\u0042\u0053");_agbg .LE =_abe .Get ("\u004c\u0045");_agbg .IC =_abe .Get ("\u0049\u0043");_agbg .LL =_abe .Get ("\u004c\u004c");_agbg .LLE =_abe .Get ("\u004c\u004c\u0045");
_agbg .Cap =_abe .Get ("\u0043\u0061\u0070");_agbg .IT =_abe .Get ("\u0049\u0054");_agbg .LLO =_abe .Get ("\u004c\u004c\u004f");_agbg .CP =_abe .Get ("\u0043\u0050");_agbg .Measure =_abe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_agbg .CO =_abe .Get ("\u0043\u004f");
return &_agbg ,nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_ea .PdfObjectArray ;ExtGState _ea .PdfObject ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gbcf *PdfColorspaceSpecialIndexed )ToPdfObject ()_ea .PdfObject {_ggea :=_ea .MakeArray (_ea .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_ggea .Append (_gbcf .Base .ToPdfObject ());_ggea .Append (_ea .MakeInteger (int64 (_gbcf .HiVal )));
_ggea .Append (_gbcf .Lookup );if _gbcf ._cgced !=nil {_gbcf ._cgced .PdfObject =_ggea ;return _gbcf ._cgced ;};return _ggea ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_gfag *PdfPage )GetRotate ()(int64 ,error ){if _gfag .Rotate !=nil {return *_gfag .Rotate ,nil ;};_dcafd :=_gfag .Parent ;for _dcafd !=nil {_cbcda ,_fgdf :=_ea .GetDict (_dcafd );if !_fgdf {return 0,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gaabc :=_cbcda .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gaabc !=nil {_aacfg ,_geeab :=_ea .GetInt (_gaabc );if !_geeab {return 0,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _aacfg !=nil {return int64 (*_aacfg ),nil ;};return 0,_dc .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dcafd =_cbcda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_dc .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_ccg *PdfActionImportData )ToPdfObject ()_ea .PdfObject {_ccg .PdfAction .ToPdfObject ();_efa :=_ccg ._fgc ;_dec :=_efa .PdfObject .(*_ea .PdfObjectDictionary );_dec .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeImportData )));if _ccg .F !=nil {_dec .Set ("\u0046",_ccg .F .ToPdfObject ());
};return _efa ;};

// AddWatermarkText adds a text watermark to the page.
func (_acabb *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _dc .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _dc .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_bb .Black ;};_gabcb ,_ffedf :=_acabb .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _ffedf !=nil {return _ffedf ;
};_bcag ,_ ,_ffedf :=_ba .Decode (_cb .NewReader (_gabcb ));if _ffedf !=nil {return _ffedf ;};_fddg ,_ffedf :=ImageHandling .NewImageFromGoImage (_bcag );if _ffedf !=nil {return _ffedf ;};_egfea ,_ffedf :=NewXObjectImageFromImage (_fddg ,nil ,_ea .NewFlateEncoder ());
if _ffedf !=nil {return _ffedf ;};_eded :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _acabb .AddWatermarkImage (_egfea ,_eded );};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;
XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aegbge pdfFontSimple )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){if _aegbge ._agaf !=nil {_afbfd ,_fbdb :=_aegbge ._agaf .Read (r );if _fbdb {return _afbfd ,true ;};};_cdge :=_aegbge .Encoder ();if _cdge ==nil {_ca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_aegbge );
return _gf .CharMetrics {},false ;};_afge ,_gddbc :=_cdge .RuneToCharcode (r );if !_gddbc {if r !=' '{_ca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_aegbge );
};return _gf .CharMetrics {},false ;};_cgfcf ,_bdab :=_aegbge .GetCharMetrics (_afge );return _cgfcf ,_bdab ;};func (_cgfce *LTV )getCerts (_gbda []*_fgg .Certificate )([][]byte ,error ){_gfbcg :=make ([][]byte ,0,len (_gbda ));for _ ,_fdgad :=range _gbda {_gfbcg =append (_gfbcg ,_fdgad .Raw );
};return _gfbcg ,nil ;};func (_debb *PdfFont )baseFields ()*fontCommon {if _debb ._gbee ==nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _debb ._gbee .baseFields ();};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fddcb *PdfPageResources )HasColorspaceByName (keyName _ea .PdfObjectName )bool {_cffba ,_gggbg :=_fddcb .GetColorspaces ();if _gggbg !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gggbg );
return false ;};if _cffba ==nil {return false ;};_ ,_cbfede :=_cffba .Colorspaces [string (keyName )];return _cbfede ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_fdbea *IDTree )ToPdfObject ()_ea .PdfObject {_fgefb :=_ea .MakeDict ();if _fdbea .Names !=nil &&_fdbea .Names .Len ()> 0{_fgefb .Set ("\u004e\u0061\u006de\u0073",_fdbea .Names );_fgefb .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_fdbea .Limits );
};if len (_fdbea .Kids )> 0{_cbeagc :=_ea .MakeArray ();for _ ,_ggbcg :=range _fdbea .Kids {_cbeagc .Append (_ggbcg .ToPdfObject ());};_abbfe :=_ea .MakeDict ();_abbfe .Set ("\u004b\u0069\u0064\u0073",_cbeagc );_fgefb .Set ("\u004b\u0069\u0064\u0073",_abbfe );
};return _fgefb ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_deeef *PdfWriter )SetDocInfo (info *PdfInfo ){_deeef .setDocInfo (info .ToPdfObject ())};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);func _fdbda ()_fg .Time {_dcgec .Lock ();
defer _dcgec .Unlock ();return _cgcgb };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ege .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _fg .Time ;};func (_ffdgf *Image )resampleLowBits (_bfef []uint32 ){_agddb :=_dcc .BytesPerLine (int (_ffdgf .Width ),int (_ffdgf .BitsPerComponent ),_ffdgf .ColorComponents );_cbafa :=make ([]byte ,_ffdgf .ColorComponents *_agddb *int (_ffdgf .Height ));
_geefe :=int (_ffdgf .BitsPerComponent )*_ffdgf .ColorComponents *int (_ffdgf .Width );_adaec :=uint8 (8);var (_fefd ,_acdbc int ;_ddaaaa uint32 ;);for _aagcb :=0;_aagcb < int (_ffdgf .Height );_aagcb ++{_acdbc =_aagcb *_agddb ;for _bccf :=0;_bccf < _geefe ;
_bccf ++{_ddaaaa =_bfef [_fefd ];_adaec -=uint8 (_ffdgf .BitsPerComponent );_cbafa [_acdbc ]|=byte (_ddaaaa )<<_adaec ;if _adaec ==0{_adaec =8;_acdbc ++;};_fefd ++;};};_ffdgf .Data =_cbafa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dagd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffe :=vals [0];if _ffe < 0.0||_ffe > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ffe );
return nil ,ErrColorOutOfRange ;};_ggca :=NewPdfColorCalGray (_ffe );return _ggca ,nil ;};

// C returns the value of the cyan component of the color.
func (_dgbf *PdfColorDeviceCMYK )C ()float64 {return _dgbf [0]};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ea .PdfObject ;IsMap _ea .PdfObject ;};func (_ecdf *PdfReader )newPdfActionRenditionFromDict (_fbd *_ea .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fbd .Get ("\u0052"),AN :_fbd .Get ("\u0041\u004e"),OP :_fbd .Get ("\u004f\u0050"),JS :_fbd .Get ("\u004a\u0053")},nil ;
};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ea .PdfObjectArray ;TI *_ea .PdfObjectInteger ;I *_ea .PdfObjectArray ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject returns the PDF representation of the function.
func (_cdfca *PdfFunctionType3 )ToPdfObject ()_ea .PdfObject {_agbcg :=_ea .MakeDict ();_agbcg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ea .MakeInteger (3));_bgfab :=&_ea .PdfObjectArray {};for _ ,_acfd :=range _cdfca .Domain {_bgfab .Append (_ea .MakeFloat (_acfd ));
};_agbcg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgfab );if _cdfca .Range !=nil {_fgfadc :=&_ea .PdfObjectArray {};for _ ,_edefe :=range _cdfca .Range {_fgfadc .Append (_ea .MakeFloat (_edefe ));};_agbcg .Set ("\u0052\u0061\u006eg\u0065",_fgfadc );
};if _cdfca .Functions !=nil {_ddagg :=&_ea .PdfObjectArray {};for _ ,_gdaagc :=range _cdfca .Functions {_ddagg .Append (_gdaagc .ToPdfObject ());};_agbcg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ddagg );};if _cdfca .Bounds !=nil {_fbeg :=&_ea .PdfObjectArray {};
for _ ,_dgdf :=range _cdfca .Bounds {_fbeg .Append (_ea .MakeFloat (_dgdf ));};_agbcg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fbeg );};if _cdfca .Encode !=nil {_bfdbd :=&_ea .PdfObjectArray {};for _ ,_feaed :=range _cdfca .Encode {_bfdbd .Append (_ea .MakeFloat (_feaed ));
};_agbcg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bfdbd );};if _cdfca ._bbaed !=nil {_cdfca ._bbaed .PdfObject =_agbcg ;return _cdfca ._bbaed ;};return _agbcg ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cde .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _cbeag ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fceba (rs ,opts ,true ,_cbeag );
};

// HasExtGState checks if ExtGState name is available.
func (_bfged *PdfPage )HasExtGState (name _ea .PdfObjectName )bool {if _bfged .Resources ==nil {return false ;};if _bfged .Resources .ExtGState ==nil {return false ;};_ecbe ,_bfccc :=_ea .TraceToDirectObject (_bfged .Resources .ExtGState ).(*_ea .PdfObjectDictionary );
if !_bfccc {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ea .TraceToDirectObject (_bfged .Resources .ExtGState ));
return false ;};_bgccf :=_ecbe .Get (name );_gdcecd :=_bgccf !=nil ;return _gdcecd ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgbab *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gbag :=_af .NewReader (img .getBase ());_bccb :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_adeaee :=_af .NewWriter (_bccb );
_bbcfc :=_dgf .Pow (2,float64 (img .BitsPerComponent ))-1;_gdce :=make ([]uint32 ,3);var (_bgdag uint32 ;ANorm ,X ,Y ,Z ,_gfcf ,_ddad ,_fccg float64 ;_bbef error ;);for {_bgdag ,_bbef =_gbag .ReadSample ();if _bbef ==_cde .EOF {break ;}else if _bbef !=nil {return img ,_bbef ;
};ANorm =float64 (_bgdag )/_bbcfc ;X =_cgbab .WhitePoint [0]*_dgf .Pow (ANorm ,_cgbab .Gamma );Y =_cgbab .WhitePoint [1]*_dgf .Pow (ANorm ,_cgbab .Gamma );Z =_cgbab .WhitePoint [2]*_dgf .Pow (ANorm ,_cgbab .Gamma );_gfcf =3.240479*X +-1.537150*Y +-0.498535*Z ;
_ddad =-0.969256*X +1.875992*Y +0.041556*Z ;_fccg =0.055648*X +-0.204043*Y +1.057311*Z ;_gfcf =_dgf .Min (_dgf .Max (_gfcf ,0),1.0);_ddad =_dgf .Min (_dgf .Max (_ddad ,0),1.0);_fccg =_dgf .Min (_dgf .Max (_fccg ,0),1.0);_gdce [0]=uint32 (_gfcf *_bbcfc );
_gdce [1]=uint32 (_ddad *_bbcfc );_gdce [2]=uint32 (_fccg *_bbcfc );if _bbef =_adeaee .WriteSamples (_gdce );_bbef !=nil {return img ,_bbef ;};};return _aefbb (&_bccb ),nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cgag *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cgag .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cgag ._agd =acroForm ;};

// SetPrintScaling sets the value of the printScaling.
func (_eebdcc *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_eebdcc ._gbce =printScaling ;};func _fbged (_gccbc *_ea .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eeede :=&PdfTilingPattern {};_ffbfcd :=_gccbc .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _ffbfcd ==nil {_ca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cafa ,_cdcc :=_ffbfcd .(*_ea .PdfObjectInteger );if !_cdcc {_ca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ffbfcd );
return nil ,_ea .ErrTypeError ;};_eeede .PaintType =_cafa ;_ffbfcd =_gccbc .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ffbfcd ==nil {_ca .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggcae ,_cdcc :=_ffbfcd .(*_ea .PdfObjectInteger );if !_cdcc {_ca .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffbfcd );
return nil ,_ea .ErrTypeError ;};_eeede .TilingType =_ggcae ;_ffbfcd =_gccbc .Get ("\u0042\u0042\u006f\u0078");if _ffbfcd ==nil {_ca .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ffbfcd =_ea .TraceToDirectObject (_ffbfcd );_eabgdg ,_cdcc :=_ffbfcd .(*_ea .PdfObjectArray );if !_cdcc {_ca .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffbfcd );
return nil ,_ea .ErrTypeError ;};_ffgag ,_baagc :=NewPdfRectangle (*_eabgdg );if _baagc !=nil {_ca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_baagc );return nil ,_baagc ;};_eeede .BBox =_ffgag ;_ffbfcd =_gccbc .Get ("\u0058\u0053\u0074e\u0070");
if _ffbfcd ==nil {_ca .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bafd ,_baagc :=_ea .GetNumberAsFloat (_ffbfcd );if _baagc !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bafd );
return nil ,_baagc ;};_eeede .XStep =_ea .MakeFloat (_bafd );_ffbfcd =_gccbc .Get ("\u0059\u0053\u0074e\u0070");if _ffbfcd ==nil {_ca .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gbbb ,_baagc :=_ea .GetNumberAsFloat (_ffbfcd );if _baagc !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gbbb );
return nil ,_baagc ;};_eeede .YStep =_ea .MakeFloat (_gbbb );_ffbfcd =_gccbc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ffbfcd ==nil {_ca .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gccbc ,_cdcc =_ea .TraceToDirectObject (_ffbfcd ).(*_ea .PdfObjectDictionary );if !_cdcc {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ffbfcd );
};_gfcff ,_baagc :=NewPdfPageResourcesFromDict (_gccbc );if _baagc !=nil {return nil ,_baagc ;};_eeede .Resources =_gfcff ;if _dgcab :=_gccbc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dgcab !=nil {_fcgcae ,_bcfd :=_dgcab .(*_ea .PdfObjectArray );if !_bcfd {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgcab );
return nil ,_ea .ErrTypeError ;};_eeede .Matrix =_fcgcae ;};return _eeede ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_cdcg _cde .ReadSeeker ;_gbge *_ea .PdfParser ;_gcaa *PdfReader ;Reader *PdfReader ;_efbd []*PdfPage ;_agd *PdfAcroForm ;_ccfg *DSS ;_fgb *Permissions ;_bcfe _ea .XrefTable ;_gegd int64 ;_faac int ;_aggf []_ea .PdfObject ;_bagc map[_ea .PdfObject ]struct{};
_dea map[_ea .PdfObject ]int64 ;_dadc map[_ea .PdfObject ]struct{};_deeb map[_ea .PdfObject ]struct{};_gbca int64 ;_fdf bool ;_gfde string ;_fcded *EncryptOptions ;_gcf *PdfInfo ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ea .PdfObject ;};

// IsShading specifies if the pattern is a shading pattern.
func (_feafc *PdfPattern )IsShading ()bool {return _feafc .PatternType ==2};

// Add appends an outline item as a child of the current outline item.
func (_cgdbe *OutlineItem )Add (item *OutlineItem ){_cgdbe .Entries =append (_cgdbe .Entries ,item )};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ea .PdfObject ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_gfcg *PdfAppender )GetDSS ()(_faba *DSS ){return _gfcg ._ccfg };

// NewKDictFromPdfObject creates a new K dictionary object from a PDF object.
func NewKDictFromPdfObject (obj _ea .PdfObject )(*KDict ,error ){_fggbb :=_ea .ResolveReference (obj );if _fggbb ==nil {return nil ,_c .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bafcd ,_gdeg :=_ea .GetDict (_fggbb );
if !_gdeg {return nil ,_c .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_bfdgb :=&KDict {};if _ddadbe :=_bafcd .Get ("\u0053");_ddadbe !=nil {_bfdgb .S =_ddadbe ;
};if _bcbcb :=_bafcd .Get ("\u0050");_bcbcb !=nil {_bfdgb .P =_bcbcb ;};if _dbcdd :=_bafcd .Get ("\u0049\u0044");_dbcdd !=nil {if _cccga ,_ecgae :=_ea .GetString (_dbcdd );_ecgae {_bfdgb .ID =_cccga ;};};if _fegfb :=_bafcd .Get ("\u0050\u0067");_fegfb !=nil {_bfdgb .Pg =_fegfb ;
};if _ccccg :=_bafcd .Get ("\u004b");_ccccg !=nil {_bfdgb .K =_ccccg ;switch _egcec :=_ccccg .(type ){case *_ea .PdfObjectArray :if _edgfe ,_geaef :=_ea .GetArray (_ccccg );_geaef {for _ ,_agddd :=range _edgfe .Elements (){switch _fabeb :=_agddd .(type ){case *_ea .PdfIndirectObject :_agdfa ,_eeccb :=NewKDictFromPdfObject (_fabeb );
if _eeccb !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_eeccb );continue ;};_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_febfg :_agdfa });
case *_ea .PdfObjectInteger :if _gcee ,_bgbgf :=_ea .GetIntVal (_agddd );_bgbgf {_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_fffff :&_gcee });};case *_ea .PdfObjectDictionary :_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_aadab :_agddd });
};};};case *_ea .PdfIndirectObject :_dbfefb ,_ggebce :=NewKDictFromPdfObject (_egcec );if _ggebce !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_ggebce );
};if _dbfefb !=nil {_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_febfg :_dbfefb });};case *_ea .PdfObjectDictionary :_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_aadab :_egcec });case *_ea .PdfObjectInteger :if _egffc ,_cgefg :=_ea .GetIntVal (_ccccg );
_cgefg {_bfdgb ._deecfd =append (_bfdgb ._deecfd ,&KValue {_fffff :&_egffc });};};};if _cfadc :=_bafcd .Get ("\u0041");_cfadc !=nil {_bfdgb .A =_cfadc ;};if _deeff :=_bafcd .Get ("\u0043");_deeff !=nil {_bfdgb .C =_deeff ;};if _gbabe :=_bafcd .Get ("\u0052");
_gbabe !=nil {if _gafgg ,_abdba :=_ea .GetInt (_gbabe );_abdba {_bfdgb .R =_gafgg ;};};if _eaafd :=_bafcd .Get ("\u0054");_eaafd !=nil {if _cbgac ,_fcade :=_ea .GetString (_eaafd );_fcade {_bfdgb .T =_cbgac ;};};if _ebgge :=_bafcd .Get ("\u004c\u0061\u006e\u0067");
_ebgge !=nil {if _bbfde ,_cccff :=_ea .GetString (_ebgge );_cccff {_bfdgb .Lang =_bbfde ;};};if _ddgbg :=_bafcd .Get ("\u0041\u006c\u0074");_ddgbg !=nil {if _afabb ,_ffbcg :=_ea .GetString (_ddgbg );_ffbcg {_bfdgb .Alt =_afabb ;};};if _ccdeg :=_bafcd .Get ("\u0045");
_ccdeg !=nil {if _dcbgf ,_agfaca :=_ea .GetString (_ccdeg );_agfaca {_bfdgb .E =_dcbgf ;};};if _ebaac :=_bafcd .Get ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074");_ebaac !=nil {if _fdebf ,_afbga :=_ea .GetString (_ebaac );_afbga {_bfdgb .ActualText =_fdebf ;
};};return _bfdgb ,nil ;};func _edebe (_fbfdg *_ea .PdfObjectStream )(*PdfFunctionType0 ,error ){_acdec :=&PdfFunctionType0 {};_acdec ._bffbf =_fbfdg ;_cfdb :=_fbfdg .PdfObjectDictionary ;_bdfd ,_bdgae :=_ea .TraceToDirectObject (_cfdb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ea .PdfObjectArray );
if !_bdgae {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bdfd .Len ()< 0||_bdfd .Len ()%2!=0{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_acdec .NumInputs =_bdfd .Len ()/2;_ffgdc ,_bdcf :=_bdfd .ToFloat64Array ();if _bdcf !=nil {return nil ,_bdcf ;};_acdec .Domain =_ffgdc ;_bdfd ,_bdgae =_ea .TraceToDirectObject (_cfdb .Get ("\u0052\u0061\u006eg\u0065")).(*_ea .PdfObjectArray );if !_bdgae {_ca .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bdfd .Len ()< 0||_bdfd .Len ()%2!=0{return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_acdec .NumOutputs =_bdfd .Len ()/2;_fgbfd ,_bdcf :=_bdfd .ToFloat64Array ();if _bdcf !=nil {return nil ,_bdcf ;};_acdec .Range =_fgbfd ;_bdfd ,_bdgae =_ea .TraceToDirectObject (_cfdb .Get ("\u0053\u0069\u007a\u0065")).(*_ea .PdfObjectArray );if !_bdgae {_ca .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggggb ,_bdcf :=_bdfd .ToIntegerArray ();
if _bdcf !=nil {return nil ,_bdcf ;};if len (_ggggb )!=_acdec .NumInputs {_ca .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acdec .Size =_ggggb ;_cfdab ,_bdgae :=_ea .TraceToDirectObject (_cfdb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ea .PdfObjectInteger );
if !_bdgae {_ca .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cfdab !=1&&*_cfdab !=2&&*_cfdab !=4&&*_cfdab !=8&&*_cfdab !=12&&*_cfdab !=16&&*_cfdab !=24&&*_cfdab !=32{_ca .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cfdab );
return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acdec .BitsPerSample =int (*_cfdab );_acdec .Order =1;_eeefc ,_bdgae :=_ea .TraceToDirectObject (_cfdb .Get ("\u004f\u0072\u0064e\u0072")).(*_ea .PdfObjectInteger );
if _bdgae {if *_eeefc !=1&&*_eeefc !=3{_ca .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_eeefc );return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acdec .Order =int (*_eeefc );
};_bdfd ,_bdgae =_ea .TraceToDirectObject (_cfdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ea .PdfObjectArray );if _bdgae {_cefe ,_eegga :=_bdfd .ToFloat64Array ();if _eegga !=nil {return nil ,_eegga ;};_acdec .Encode =_cefe ;};_bdfd ,_bdgae =_ea .TraceToDirectObject (_cfdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ea .PdfObjectArray );
if _bdgae {_bfaff ,_acee :=_bdfd .ToFloat64Array ();if _acee !=nil {return nil ,_acee ;};_acdec .Decode =_bfaff ;};_dcge ,_bdcf :=_ea .DecodeStream (_fbfdg );if _bdcf !=nil {return nil ,_bdcf ;};_acdec ._dcabg =_dcge ;return _acdec ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gecc *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bfcg :=range pages {_bfcg =_bfcg .Duplicate ();_afgdga (_bfcg );_gecc ._efbd =append (_gecc ._efbd ,_bfcg );};};

// SetKDict sets the KDict for the KValue.
func (_bbgab *KValue )SetKDict (kDict *KDict ){_bbgab .Clear ();_bbgab ._febfg =kDict };

// ToPdfObject returns the PDF representation of the function.
func (_adgcd *PdfFunctionType0 )ToPdfObject ()_ea .PdfObject {if _adgcd ._bffbf ==nil {_adgcd ._bffbf =&_ea .PdfObjectStream {};};_dcdb :=_ea .MakeDict ();_dcdb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ea .MakeInteger (0));
_dbae :=&_ea .PdfObjectArray {};for _ ,_ecdb :=range _adgcd .Domain {_dbae .Append (_ea .MakeFloat (_ecdb ));};_dcdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbae );_agcdb :=&_ea .PdfObjectArray {};for _ ,_efed :=range _adgcd .Range {_agcdb .Append (_ea .MakeFloat (_efed ));
};_dcdb .Set ("\u0052\u0061\u006eg\u0065",_agcdb );_gacf :=&_ea .PdfObjectArray {};for _ ,_bfcd :=range _adgcd .Size {_gacf .Append (_ea .MakeInteger (int64 (_bfcd )));};_dcdb .Set ("\u0053\u0069\u007a\u0065",_gacf );_dcdb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ea .MakeInteger (int64 (_adgcd .BitsPerSample )));
if _adgcd .Order !=1{_dcdb .Set ("\u004f\u0072\u0064e\u0072",_ea .MakeInteger (int64 (_adgcd .Order )));};_dcdb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_adgcd ._dcabg ))));_adgcd ._bffbf .Stream =_adgcd ._dcabg ;_adgcd ._bffbf .PdfObjectDictionary =_dcdb ;
return _adgcd ._bffbf ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ea .PdfObjectName ;Colorants _ea .PdfObject ;Process _ea .PdfObject ;MixingHints _ea .PdfObject ;_bded *_ea .PdfIndirectObject ;};

// AddCerts adds certificates to DSS.
func (_gbgc *DSS )AddCerts (certs [][]byte )([]*_ea .PdfObjectStream ,error ){return _gbgc .add (&_gbgc .Certs ,_gbgc ._cebd ,certs );};func (_abfc *PdfWriter )writeObject (_bbaedb int ,_ggcccf _ea .PdfObject ){_ca .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bbaedb );
if _ecbcb ,_ddeaa :=_ggcccf .(*_ea .PdfIndirectObject );_ddeaa {_abfc ._gggee [_bbaedb ]=crossReference {Type :1,Offset :_abfc ._gfecb ,Generation :_ecbcb .GenerationNumber };_bdggee :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbaedb );
if _decdb ,_faef :=_ecbcb .PdfObject .(*pdfSignDictionary );_faef {_decdb ._eaadg =_abfc ._gfecb +int64 (len (_bdggee ));};if _ecbcb .PdfObject ==nil {_ca .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ecbcb .PdfObject =_ea .MakeNull ();};_bdggee +=string (_ecbcb .PdfObject .Write ());_bdggee +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_abfc .writeString (_bdggee );return ;};if _dbbe ,_cccdcf :=_ggcccf .(*_ea .PdfObjectStream );_cccdcf {_abfc ._gggee [_bbaedb ]=crossReference {Type :1,Offset :_abfc ._gfecb ,Generation :_dbbe .GenerationNumber };
_abfc .writeString (_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbaedb ));_abfc .writeBytes (_dbbe .PdfObjectDictionary .Write ());_abfc .writeString ("\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a");if _dbbe .Lazy {_dgdfa ,_eddcg :=_abg .Open (_dbbe .TempFile );
if _eddcg !=nil {_ca .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dbbe .TempFile );return ;};defer _dgdfa .Close ();
_fafbcc :=make ([]byte ,64*1024);for {_baead ,_eaeb :=_dgdfa .Read (_fafbcc );if _baead > 0{_abfc .writeBytes (_fafbcc [:_baead ]);};if _eaeb ==_cde .EOF {break ;};if _eaeb !=nil {_ca .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dbbe .TempFile );
return ;};};_abg .Remove (_dbbe .TempFile );}else {_abfc .writeBytes (_dbbe .Stream );};_abfc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbecbd ,_fdef :=_ggcccf .(*_ea .PdfObjectStreams );
_fdef {_abfc ._gggee [_bbaedb ]=crossReference {Type :1,Offset :_abfc ._gfecb ,Generation :_gbecbd .GenerationNumber };_cafaf :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbaedb );var _bfbbfg []string ;var _bgga string ;var _fbcgab int64 ;
for _cgcead ,_fcge :=range _gbecbd .Elements (){_fcagg ,_bebfdd :=_fcge .(*_ea .PdfIndirectObject );if !_bebfdd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bbaedb ,_fcge );
continue ;};_bggcde :=string (_fcagg .PdfObject .Write ())+"\u0020";_bgga =_bgga +_bggcde ;_bfbbfg =append (_bfbbfg ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_fcagg .ObjectNumber ,_fbcgab ));_abfc ._gggee [int (_fcagg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bbaedb ,Index :_cgcead };
_fbcgab =_fbcgab +int64 (len ([]byte (_bggcde )));};_acdfd :=_dgb .Join (_bfbbfg ,"\u0020")+"\u0020";_dbggc :=_ea .NewFlateEncoder ();_ggbgd :=_dbggc .MakeStreamDict ();_ggbgd .Set (_ea .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ea .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_faefg :=int64 (_gbecbd .Len ());_ggbgd .Set (_ea .PdfObjectName ("\u004e"),_ea .MakeInteger (_faefg ));_ccfbg :=int64 (len (_acdfd ));_ggbgd .Set (_ea .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ea .MakeInteger (_ccfbg ));_aggec ,_ :=_dbggc .EncodeBytes ([]byte (_acdfd +_bgga ));
_dffe :=int64 (len (_aggec ));_ggbgd .Set (_ea .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ea .MakeInteger (_dffe ));_cafaf +=string (_ggbgd .Write ());_cafaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_abfc .writeString (_cafaf );
_abfc .writeBytes (_aggec );_abfc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_abfc .writeBytes (_ggcccf .Write ());};

// ToPdfObject implements interface PdfModel.
func (_ecca *PdfAnnotationText )ToPdfObject ()_ea .PdfObject {_ecca .PdfAnnotation .ToPdfObject ();_febe :=_ecca ._eab ;_fbda :=_febe .PdfObject .(*_ea .PdfObjectDictionary );if _ecca .PdfAnnotationMarkup !=nil {_ecca .PdfAnnotationMarkup .appendToPdfDictionary (_fbda );
};_fbda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0054\u0065\u0078\u0074"));_fbda .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ecca .Open );_fbda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecca .Name );_fbda .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ecca .State );
_fbda .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ecca .StateModel );return _febe ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ea .PdfObject ;FS _ea .PdfObject ;F _ea .PdfObject ;UF _ea .PdfObject ;DOS _ea .PdfObject ;Mac _ea .PdfObject ;Unix _ea .PdfObject ;ID _ea .PdfObject ;V _ea .PdfObject ;EF _ea .PdfObject ;RF _ea .PdfObject ;Desc _ea .PdfObject ;
CI _ea .PdfObject ;AFRelationship _ea .PdfObject ;_cbgg _ea .PdfObject ;};func (_egcfc *PdfWriter )addObjects (_gffe _ea .PdfObject )error {_ca .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _fgfecb ,_feabf :=_gffe .(*_ea .PdfIndirectObject );
_feabf {_ca .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ca .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_gffe ,_fgfecb );_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_fgfecb .PdfObject );if _egcfc .addObject (_fgfecb ){_fgdga :=_egcfc .addObjects (_fgfecb .PdfObject );
if _fgdga !=nil {return _fgdga ;};};return nil ;};if _dedgd ,_bbggg :=_gffe .(*_ea .PdfObjectStream );_bbggg {_ca .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ca .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_gffe ,_gffe );if _egcfc .addObject (_dedgd ){_cdae :=_egcfc .addObjects (_dedgd .PdfObjectDictionary );
if _cdae !=nil {return _cdae ;};};return nil ;};if _fceac ,_adaca :=_gffe .(*_ea .PdfObjectDictionary );_adaca {_ca .Log .Trace ("\u0044\u0069\u0063\u0074");_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_gffe );for _ ,_cbcg :=range _fceac .Keys (){_aadbd :=_fceac .Get (_cbcg );
if _ecdbb ,_befb :=_aadbd .(*_ea .PdfObjectReference );_befb {_aadbd =_ecdbb .Resolve ();_fceac .Set (_cbcg ,_aadbd );};if _cbcg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _aagfeg :=_egcfc .addObjects (_aadbd );_aagfeg !=nil {return _aagfeg ;};}else {if _ ,_gggbgc :=_aadbd .(*_ea .PdfObjectNull );
_gggbgc {continue ;};if _bbbbc :=_egcfc .hasObject (_aadbd );!_bbbbc {_ca .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_aadbd ,_aadbd ,_aadbd );
_egcfc ._bbfagd [_aadbd ]=append (_egcfc ._bbfagd [_aadbd ],_fceac );};};};return nil ;};if _dbdcb ,_gaee :=_gffe .(*_ea .PdfObjectArray );_gaee {_ca .Log .Trace ("\u0041\u0072\u0072a\u0079");_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_gffe );if _dbdcb ==nil {return _dc .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fdaad ,_cfded :=range _dbdcb .Elements (){if _gcdcb ,_bcaffe :=_cfded .(*_ea .PdfObjectReference );_bcaffe {_cfded =_gcdcb .Resolve ();_dbdcb .Set (_fdaad ,_cfded );};if _gfdfeb :=_egcfc .addObjects (_cfded );_gfdfeb !=nil {return _gfdfeb ;};};return nil ;
};if _ ,_ebbcg :=_gffe .(*_ea .PdfObjectReference );_ebbcg {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_gffe );
return _dc .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gcccg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cecdfa ,_adfab :=_ea .GetDict (_gcccg ._dacfd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_adfab {_cecdfa =_ea .MakeDict ();_gcccg ._dacfd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cecdfa );
};_fdfaff ,_adfab :=_ea .GetDict (_cecdfa .Get (_ea .PdfObjectName (extName )));if !_adfab {_fdfaff =_ea .MakeDict ();_cecdfa .Set (_ea .PdfObjectName (extName ),_fdfaff );};if _bagee ,_ :=_ea .GetNameVal (_fdfaff .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_bagee !=baseVersion {_fdfaff .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ea .MakeName (baseVersion ));};if _dfgca ,_ :=_ea .GetIntVal (_fdfaff .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_dfgca !=extLevel {_fdfaff .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ea .MakeInteger (int64 (extLevel )));};};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_faga *PdfReader )GetPageLabels ()(_ea .PdfObject ,error ){_deaec :=_ea .ResolveReference (_faga ._gbggd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _deaec ==nil {return nil ,nil ;};if !_faga ._bdddd {_cdbg :=_faga .traverseObjectData (_deaec );
if _cdbg !=nil {return nil ,_cdbg ;};};return _deaec ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_agf :=NewPdfAction ();_egd :=&PdfActionSubmitForm {};_egd .PdfAction =_agf ;_agf .SetContext (_egd );return _egd ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_efd :=NewPdfAction ();_dbb :=&PdfActionMovie {};_dbb .PdfAction =_efd ;_efd .SetContext (_dbb );return _dbb ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ddd :=NewPdfAnnotation ();_gdc :=&PdfAnnotationScreen {};_gdc .PdfAnnotation =_ddd ;_ddd .SetContext (_gdc );return _gdc ;};

// Register registers (caches) a model to primitive object relationship.
func (_egag *modelManager )Register (primitive _ea .PdfObject ,model PdfModel ){_egag ._cfdeg .Lock ();defer _egag ._cfdeg .Unlock ();_egag ._afaa .Lock ();defer _egag ._afaa .Unlock ();_egag ._fggf [model ]=primitive ;_egag ._eeadb [primitive ]=model ;
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bfda *PdfField )GetContainingPdfObject ()_ea .PdfObject {return _bfda ._gegceb };

// ToInteger convert to an integer format.
func (_bced *PdfColorCalGray )ToInteger (bits int )uint32 {_dfab :=_dgf .Pow (2,float64 (bits ))-1;return uint32 (_dfab *_bced .Val ());};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fcae DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_egee *_ea .PdfIndirectObject ;Certs []*_ea .PdfObjectStream ;OCSPs []*_ea .PdfObjectStream ;CRLs []*_ea .PdfObjectStream ;VRI map[string ]*VRI ;_cebd map[string ]*_ea .PdfObjectStream ;_eadbg map[string ]*_ea .PdfObjectStream ;_dffga map[string ]*_ea .PdfObjectStream ;
};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fgfad *PdfAcroForm ,_agdeb *PdfField ,_cdba *PdfAnnotationWidget )(*_ea .PdfObjectDictionary ,error );};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfAction )ToPdfObject ()_ea .PdfObject {_db :=_ag ._fgc ;_gfg :=_db .PdfObject .(*_ea .PdfObjectDictionary );_gfg .Clear ();_gfg .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gfg .SetIfNotNil ("\u0053",_ag .S );
_gfg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ag .Next );return _db ;};

// Reset sets the multi font encoder to its initial state.
func (_geadc *MultipleFontEncoder )Reset (){_geadc .CurrentFont =_geadc ._fgee [0]};

// IsValid checks if the given pdf output intent type is valid.
func (_fadbf PdfOutputIntentType )IsValid ()bool {return _fadbf >=PdfOutputIntentTypeA1 &&_fadbf <=PdfOutputIntentTypeX ;};func (_bdc *PdfReader )newPdfAnnotationFreeTextFromDict (_ffbbd *_ea .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dad :=PdfAnnotationFreeText {};
_adba ,_cca :=_bdc .newPdfAnnotationMarkupFromDict (_ffbbd );if _cca !=nil {return nil ,_cca ;};_dad .PdfAnnotationMarkup =_adba ;_dad .DA =_ffbbd .Get ("\u0044\u0041");_dad .Q =_ffbbd .Get ("\u0051");_dad .RC =_ffbbd .Get ("\u0052\u0043");_dad .DS =_ffbbd .Get ("\u0044\u0053");
_dad .CL =_ffbbd .Get ("\u0043\u004c");_dad .IT =_ffbbd .Get ("\u0049\u0054");_dad .BE =_ffbbd .Get ("\u0042\u0045");_dad .RD =_ffbbd .Get ("\u0052\u0044");_dad .BS =_ffbbd .Get ("\u0042\u0053");_dad .LE =_ffbbd .Get ("\u004c\u0045");return &_dad ,nil ;
};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_ea .PdfParser ;DiffPolicy _ege .DiffPolicy ;};

// HasXObjectByName checks if has XObject resource by name.
func (_cdddge *PdfPage )HasXObjectByName (name _ea .PdfObjectName )bool {_dddg ,_ebcag :=_cdddge .Resources .XObject .(*_ea .PdfObjectDictionary );if !_ebcag {return false ;};if _beca :=_dddg .Get (name );_beca !=nil {return true ;};return false ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_eadadd *PdfPageResources )HasFontByName (keyName _ea .PdfObjectName )bool {_ ,_dccec :=_eadadd .GetFontByName (keyName );return _dccec ;};

// SetContentStream sets the pattern cell's content stream.
func (_cgea *PdfTilingPattern )SetContentStream (content []byte ,encoder _ea .StreamEncoder )error {_cegaa ,_aeagc :=_cgea ._bedae .(*_ea .PdfObjectStream );if !_aeagc {_ca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgea ._bedae );
return _ea .ErrTypeError ;};if encoder ==nil {encoder =_ea .NewRawEncoder ();};_fbagf :=_cegaa .PdfObjectDictionary ;_cfef :=encoder .MakeStreamDict ();_fbagf .Merge (_cfef );_bdadg ,_aeecg :=encoder .EncodeBytes (content );if _aeecg !=nil {return _aeecg ;
};_fbagf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_bdadg ))));_cegaa .Stream =_bdadg ;return nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ffb :=NewPdfAnnotation ();_fbca :=&PdfAnnotationUnderline {};_fbca .PdfAnnotation =_ffb ;_fbca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffb .SetContext (_fbca );return _fbca ;};

// GetPerms returns the Permissions dictionary
func (_dafd *PdfReader )GetPerms ()*Permissions {return _dafd ._egfb };func (_cba *PdfReader )newPdfActionGotoEFromDict (_cae *_ea .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ded ,_gggg :=_cfgb (_cae .Get ("\u0046"));if _gggg !=nil {return nil ,_gggg ;
};return &PdfActionGoToE {D :_cae .Get ("\u0044"),NewWindow :_cae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_cae .Get ("\u0054"),F :_ded },nil ;};func (_gbbdd *pdfFontType0 )bytesToCharcodes (_gbea []byte )([]_ge .CharCode ,bool ){if _gbbdd ._gaeba ==nil {return nil ,false ;
};_bafgc ,_gdfb :=_gbbdd ._gaeba .BytesToCharcodes (_gbea );if !_gdfb {return nil ,false ;};_gdeeg :=make ([]_ge .CharCode ,len (_bafgc ));for _cfcgd ,_bfgfe :=range _bafgc {_gdeeg [_cfcgd ]=_ge .CharCode (_bfgfe );};return _gdeeg ,true ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cde .ReadSeeker )(*PdfFont ,error ){_bfcgg ,_dabc :=_cde .ReadAll (r );if _dabc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dabc );
return nil ,_dabc ;};_dacfb ,_dabc :=_gf .TtfParse (_cb .NewReader (_bfcgg ));if _dabc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dabc );
return nil ,_dabc ;};_aefcfb :=&pdfCIDFontType2 {fontCommon :fontCommon {_dfeb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ea .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dacfb .Widths )<=0{return nil ,_dc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_aegeb :=1000.0/float64 (_dacfb .UnitsPerEm );_edcgd :=_aegeb *float64 (_dacfb .Widths [0]);_ffea :=make (map[rune ]int );_fbfda :=make (map[_gf .GID ]int );_eeacf :=_gf .GID (len (_dacfb .Widths ));for _ceecb ,_egegdf :=range _dacfb .Chars {if _egegdf > _eeacf -1{continue ;
};_efbda :=int (_aegeb *float64 (_dacfb .Widths [_egegdf ]));_ffea [_ceecb ]=_efbda ;_fbfda [_egegdf ]=_efbda ;};_aefcfb ._ggaed =_ffea ;_aefcfb .DW =_ea .MakeInteger (int64 (_edcgd ));_aebf :=_faggf (_fbfda ,uint16 (_eeacf ));_aefcfb .W =_ea .MakeIndirectObject (_aebf );
_afga :=_ea .MakeDict ();_afga .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ea .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_afga .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ea .MakeString ("\u0041\u0064\u006fb\u0065"));
_afga .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ea .MakeInteger (0));_aefcfb .CIDSystemInfo =_afga ;_eeef :=&PdfFontDescriptor {FontName :_ea .MakeName (_dacfb .PostScriptName ),Ascent :_ea .MakeFloat (_aegeb *float64 (_dacfb .TypoAscender )),Descent :_ea .MakeFloat (_aegeb *float64 (_dacfb .TypoDescender )),CapHeight :_ea .MakeFloat (_aegeb *float64 (_dacfb .CapHeight )),FontBBox :_ea .MakeArrayFromFloats ([]float64 {_aegeb *float64 (_dacfb .Xmin ),_aegeb *float64 (_dacfb .Ymin ),_aegeb *float64 (_dacfb .Xmax ),_aegeb *float64 (_dacfb .Ymax )}),ItalicAngle :_ea .MakeFloat (_dacfb .ItalicAngle ),MissingWidth :_ea .MakeFloat (_edcgd )};
_ddabb ,_dabc :=_ea .MakeStream (_bfcgg ,_ea .NewFlateEncoder ());if _dabc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dabc );
return nil ,_dabc ;};_ddabb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ea .MakeInteger (int64 (len (_bfcgg ))));_eeef .FontFile2 =_ddabb ;if _dacfb .Bold {_eeef .StemV =_ea .MakeInteger (120);}else {_eeef .StemV =_ea .MakeInteger (70);
};_gccad :=_dcbbed ;if _dacfb .IsFixedPitch {_gccad |=_edcfe ;};if _dacfb .ItalicAngle !=0{_gccad |=_edcdg ;};_eeef .Flags =_ea .MakeInteger (int64 (_gccad ));_aefcfb ._ceac =_dacfb .PostScriptName ;_aefcfb ._eafg =_eeef ;_cead :=pdfFontType0 {fontCommon :fontCommon {_dfeb :"\u0054\u0079\u0070e\u0030",_ceac :_dacfb .PostScriptName },DescendantFont :&PdfFont {_gbee :_aefcfb },Encoding :_ea .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dcdd :_dacfb .NewEncoder ()};
if len (_dacfb .Chars )> 0{_aedf :=make (map[_cge .CharCode ]rune ,len (_dacfb .Chars ));for _gdge ,_agfd :=range _dacfb .Chars {_gead :=_cge .CharCode (_agfd );if _gccag ,_egeed :=_aedf [_gead ];!_egeed ||(_egeed &&_gccag > _gdge ){_aedf [_gead ]=_gdge ;
};};_cead ._adbfa =_cge .NewToUnicodeCMap (_aedf );};_dcff :=PdfFont {_gbee :&_cead };return &_dcff ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eebe *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_eebe .NumInputs {_ca .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_dc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _eebe ._gfbc ==nil {_gfee :=_eebe .processSamples ();if _gfee !=nil {return nil ,_gfee ;};};_cfdea :=_eebe .Encode ;if _cfdea ==nil {_cfdea =[]float64 {};
for _ebda :=0;_ebda < len (_eebe .Size );_ebda ++{_cfdea =append (_cfdea ,0);_cfdea =append (_cfdea ,float64 (_eebe .Size [_ebda ]-1));};};_dbdg :=_eebe .Decode ;if _dbdg ==nil {_dbdg =_eebe .Range ;};_cbbf :=make ([]int ,len (x ));for _dfdeg :=0;_dfdeg < len (x );
_dfdeg ++{_bbgfd :=x [_dfdeg ];_fabb :=_dgf .Min (_dgf .Max (_bbgfd ,_eebe .Domain [2*_dfdeg ]),_eebe .Domain [2*_dfdeg +1]);_gdfa :=_dcc .LinearInterpolate (_fabb ,_eebe .Domain [2*_dfdeg ],_eebe .Domain [2*_dfdeg +1],_cfdea [2*_dfdeg ],_cfdea [2*_dfdeg +1]);
_fcdcg :=_dgf .Min (_dgf .Max (_gdfa ,0),float64 (_eebe .Size [_dfdeg ]-1));_ggdeb :=int (_dgf .Floor (_fcdcg +0.5));if _ggdeb < 0{_ggdeb =0;}else if _ggdeb > _eebe .Size [_dfdeg ]{_ggdeb =_eebe .Size [_dfdeg ]-1;};_cbbf [_dfdeg ]=_ggdeb ;};_cdff :=_cbbf [0];
for _becgd :=1;_becgd < _eebe .NumInputs ;_becgd ++{_fbbg :=_cbbf [_becgd ];for _adcff :=0;_adcff < _becgd ;_adcff ++{_fbbg *=_eebe .Size [_adcff ];};_cdff +=_fbbg ;};_cdff *=_eebe .NumOutputs ;var _gdfd []float64 ;for _cgbc :=0;_cgbc < _eebe .NumOutputs ;
_cgbc ++{_gbbfd :=_cdff +_cgbc ;if _gbbfd >=len (_eebe ._gfbc ){_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_fafag :=_eebe ._gfbc [_gbbfd ];_eagbb :=_dcc .LinearInterpolate (float64 (_fafag ),0,_dgf .Pow (2,float64 (_eebe .BitsPerSample )),_dbdg [2*_cgbc ],_dbdg [2*_cgbc +1]);_cedaa :=_dgf .Min (_dgf .Max (_eagbb ,_eebe .Range [2*_cgbc ]),_eebe .Range [2*_cgbc +1]);
_gdfd =append (_gdfd ,_cedaa );};return _gdfd ,nil ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_bacb :=&PdfColorPatternType3 {};return _bacb };func (_bacge *PdfReader )newPdfFieldSignatureFromDict (_degb *_ea .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gfcaa :=&PdfFieldSignature {};_fabe ,_baad :=_ea .GetIndirect (_degb .Get ("\u0056"));
if _baad {var _aecf error ;_gfcaa .V ,_aecf =_bacge .newPdfSignatureFromIndirect (_fabe );if _aecf !=nil {return nil ,_aecf ;};};_gfcaa .Lock ,_ =_ea .GetIndirect (_degb .Get ("\u004c\u006f\u0063\u006b"));_gfcaa .SV ,_ =_ea .GetIndirect (_degb .Get ("\u0053\u0056"));
return _gfcaa ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_add :=NewPdfAction ();_ce :=&PdfActionGoTo3DView {};_ce .PdfAction =_add ;_add .SetContext (_ce );return _ce ;};func (_feggg *PdfWriter )flushWriter ()error {if _feggg ._dgbdf ==nil {_feggg ._dgbdf =_feggg ._daad .Flush ();
};return _feggg ._dgbdf ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cfdbe _cde .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_dagcg _ba .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_febg _ba .Image )(*Image ,error );

// Compress an image.
Compress (_ggcde *Image ,_feedg int64 )(*Image ,error );};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_bdbdf *ViewerPreferences )IsHideToolbar ()bool {if _bdbdf ._ceadc ==nil {return false ;};return *_bdbdf ._ceadc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_abbc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_fgf :=NewPdfAnnotation ();_dccf :=&PdfAnnotationWidget {};_dccf .PdfAnnotation =_fgf ;_fgf .SetContext (_dccf );return _dccf ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dgaa :=NewPdfAnnotation ();_bgf :=&PdfAnnotationSound {};_bgf .PdfAnnotation =_dgaa ;_bgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgaa .SetContext (_bgf );return _bgf ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dcgec .Lock ();defer _dcgec .Unlock ();_cebfb =subject };

// Clear clears the KValue.
func (_bdege *KValue )Clear (){_bdege ._febfg =nil ;_bdege ._aadab =nil ;_bdege ._fffff =nil };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ea .PdfObject ;Q _ea .PdfObject ;RC _ea .PdfObject ;DS _ea .PdfObject ;CL _ea .PdfObject ;IT _ea .PdfObject ;BE _ea .PdfObject ;RD _ea .PdfObject ;BS _ea .PdfObject ;LE _ea .PdfObject ;
};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_cbecb *PdfPageResources )HasShadingByName (keyName _ea .PdfObjectName )bool {_ ,_abfbb :=_cbecb .GetShadingByName (keyName );return _abfbb ;};func (_befg *PdfReader )newPdfAnnotationTrapNetFromDict (_fdgc *_ea .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gbfb :=PdfAnnotationTrapNet {};
return &_gbfb ,nil ;};

// ViewArea returns the value of the viewArea.
func (_cdbcf *ViewerPreferences )ViewArea ()PageBoundary {return _cdbcf ._fffaeg };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_affcd *PdfPageResources )GetColorspaceByName (keyName _ea .PdfObjectName )(PdfColorspace ,bool ){_cdccb ,_dggd :=_affcd .GetColorspaces ();if _dggd !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dggd );
return nil ,false ;};if _cdccb ==nil {return nil ,false ;};_aebage ,_aeda :=_cdccb .Colorspaces [string (keyName )];if !_aeda {return nil ,false ;};return _aebage ,true ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ea .PdfObject ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_ea .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_ea .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_ea .PdfObjectArray ;ExtGState _ea .PdfObject ;};

// GetKDict returns the KDict of the KValue.
func (_fcceedg *KValue )GetKDict ()*KDict {return _fcceedg ._febfg };

// NewStructureTagInfo creates a new StructureTagInfo with default values.
func NewStructureTagInfo ()*StructureTagInfo {return &StructureTagInfo {Mcid :0,StructureType :StructureTypeUnknown };};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_ccfba *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_ccfba .ToPdfOutline ().PdfOutlineTreeNode ;};func _agbc (_egdag *PdfField ,_ffbfc _ea .PdfObject )error {switch _egdag .GetContext ().(type ){case *PdfFieldText :switch _eeegg :=_ffbfc .(type ){case *_ea .PdfObjectName :_afbd :=_eeegg ;
_ca .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_afbd .String ());
_egdag .V =_ea .MakeEncodedString (_eeegg .String (),true );case *_ea .PdfObjectString :_egdag .V =_ea .MakeEncodedString (_eeegg .String (),true );default:_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_eeegg ,_eeegg );
};case *PdfFieldButton :switch _ffbfc .(type ){case *_ea .PdfObjectName :if len (_ffbfc .String ())> 0{_egdag .V =_ffbfc ;_eagbaf (_egdag ,_ffbfc );};case *_ea .PdfObjectString :if len (_ffbfc .String ())> 0{_egdag .V =_ea .MakeName (_ffbfc .String ());
_eagbaf (_egdag ,_egdag .V );};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egdag .PartialName (),_ffbfc );_egdag .V =_ffbfc ;
};case *PdfFieldChoice :switch _ffbfc .(type ){case *_ea .PdfObjectName :if len (_ffbfc .String ())> 0{_egdag .V =_ea .MakeString (_ffbfc .String ());_eagbaf (_egdag ,_ffbfc );};case *_ea .PdfObjectString :if len (_ffbfc .String ())> 0{_egdag .V =_ffbfc ;
_eagbaf (_egdag ,_ea .MakeName (_ffbfc .String ()));};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egdag .PartialName (),_ffbfc );
_egdag .V =_ffbfc ;};case *PdfFieldSignature :_ca .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_egdag .PartialName (),_ffbfc );
};return nil ;};func (_bbab *PdfPage )removeXObj (_gebfg *_ea .PdfObjectDictionary ,_fadfd _ea .PdfObjectName ){_gebfg .Remove (_fadfd );_fgfbef :=_ea .NewFlateEncoder ();_bcada :=_bbab .GetContentStreamObjs ();_aeddab :=_ea .MakeArray ();for _ ,_gaagf :=range _bcada {_beeaa ,_ :=_fcaef (_gaagf );
if _dgb .Contains (_beeaa ,_fadfd .String ()){_eegfe :=_dgb .Index (_beeaa ,_fadfd .String ());_aaafc :=_dgb .LastIndex (_beeaa [:_eegfe ],"\u0071");_feeff :=_dgb .Index (_beeaa [_eegfe :],"\u0051")+_eegfe +1;if _aaafc >=0&&_feeff >=0{var _cdee _dgb .Builder ;
_cdee .WriteString (_beeaa [:_aaafc ]);_cdee .WriteString (_beeaa [_feeff :]);_efgge ,_abfed :=_ea .MakeStream ([]byte (_cdee .String ()),_fgfbef );if _abfed ==nil {_aeddab .Append (_efgge );continue ;};};};_aeddab .Append (_gaagf );};_bbab .Contents =_aeddab ;
};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_eedgc *_ea .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ea .PdfObjectName ;Filter *_ea .PdfObjectName ;SubFilter *_ea .PdfObjectName ;Contents *_ea .PdfObjectString ;Cert _ea .PdfObject ;ByteRange *_ea .PdfObjectArray ;Reference *_ea .PdfObjectArray ;Changes *_ea .PdfObjectArray ;Name *_ea .PdfObjectString ;
M *_ea .PdfObjectString ;Location *_ea .PdfObjectString ;Reason *_ea .PdfObjectString ;ContactInfo *_ea .PdfObjectString ;R *_ea .PdfObjectInteger ;V *_ea .PdfObjectInteger ;PropBuild *_ea .PdfObjectDictionary ;PropAuthTime *_ea .PdfObjectInteger ;PropAuthType *_ea .PdfObjectName ;
};

// ToPdfObject implements interface PdfModel.
func (_adbe *PdfAnnotationFileAttachment )ToPdfObject ()_ea .PdfObject {_adbe .PdfAnnotation .ToPdfObject ();_bga :=_adbe ._eab ;_gdbe :=_bga .PdfObject .(*_ea .PdfObjectDictionary );_adbe .PdfAnnotationMarkup .appendToPdfDictionary (_gdbe );_gdbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gdbe .SetIfNotNil ("\u0046\u0053",_adbe .FS );_gdbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adbe .Name );return _bga ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gecdg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ea .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_eacfg []_ea .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_accf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fedfde *PdfWriter )SetNameDictionary (names _ea .PdfObject )error {if names ==nil {return nil ;};_fedfde ._eggf =_egce (names );_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fedfde ._dacfd .Set ("\u004e\u0061\u006de\u0073",names );return _fedfde .addObjects (names );};type pdfCIDFontType0 struct{fontCommon ;_beeg *_ea .PdfIndirectObject ;_eaga _ge .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ea .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ea .PdfObject ;W _ea .PdfObject ;DW2 _ea .PdfObject ;W2 _ea .PdfObject ;_bcgd map[_ge .CharCode ]float64 ;_debg float64 ;};

// ToPdfObject implements interface PdfModel.
func (_bg *PdfActionTrans )ToPdfObject ()_ea .PdfObject {_bg .PdfAction .ToPdfObject ();_gad :=_bg ._fgc ;_ddg :=_gad .PdfObject .(*_ea .PdfObjectDictionary );_ddg .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeTrans )));_ddg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bg .Trans );
return _gad ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetContentStreams returns the content stream as an array of strings.
func (_fdca *PdfPage )GetContentStreams ()([]string ,error ){_bceff :=_fdca .GetContentStreamObjs ();var _dgedg []string ;for _ ,_adec :=range _bceff {_dfaaf ,_gbgfb :=_fcaef (_adec );if _gbgfb !=nil {return nil ,_gbgfb ;};_dgedg =append (_dgedg ,_dfaaf );
};return _dgedg ,nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_cdbdd int ,_caddg *PdfPage );

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebbe *PdfColorspaceDeviceCMYK )ToPdfObject ()_ea .PdfObject {return _ea .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_daef *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_bgebd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bgebd ._afedg .GetCrypter ()!=nil &&!_bgebd ._afedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dfgag :=_bgebd ._gbggd ;_cbab :=_dfgag .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cbab ==nil {return nil ,nil ;};_ca .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_eaffb :=_ea .ResolveReference (_cbab );
_ca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_eaffb );if _eaegf :=_ea .IsNullObject (_eaffb );_eaegf {_ca .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_ggafg ,_cgebdb :=_eaffb .(*_ea .PdfIndirectObject );if !_cgebdb {if _ ,_ccagb :=_ea .GetDict (_eaffb );!_ccagb {_ca .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ca .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_ggafg =_ea .MakeIndirectObject (_eaffb );};_fefgec ,_cgebdb :=_ggafg .PdfObject .(*_ea .PdfObjectDictionary );if !_cgebdb {return nil ,_dc .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ca .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fefgec );_afae ,_ ,_edbf :=_bgebd .buildOutlineTree (_ggafg ,nil ,nil ,nil );if _edbf !=nil {return nil ,_edbf ;};_ca .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_afae );
return _afae ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bcbc *PdfPage )GetPageAsIndirectObject ()*_ea .PdfIndirectObject {return _bcbc ._dfgcd };

// SetContext sets the sub action (context).
func (_gd *PdfAction )SetContext (ctx PdfModel ){_gd ._fe =ctx };

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_caec *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgeb ,_fcacg :=_ea .GetNumbersAsFloat (objects );
if _fcacg !=nil {return nil ,_fcacg ;};return _caec .ColorFromFloats (_ebgeb );};

// ToPdfObject implements interface PdfModel.
func (_ageca *PdfBorderStyle )ToPdfObject ()_ea .PdfObject {_fbde :=_ea .MakeDict ();if _ageca ._ebdc !=nil {if _aedd ,_geag :=_ageca ._ebdc .(*_ea .PdfIndirectObject );_geag {_aedd .PdfObject =_fbde ;};};_fbde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _ageca .W !=nil {_fbde .Set ("\u0057",_ea .MakeFloat (*_ageca .W ));};if _ageca .S !=nil {_fbde .Set ("\u0053",_ea .MakeName (_ageca .S .GetPdfName ()));};if _ageca .D !=nil {_fbde .Set ("\u0044",_ea .MakeArrayFromIntegers (*_ageca .D ));};if _ageca ._ebdc !=nil {return _ageca ._ebdc ;
};return _fbde ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gfbgba *PdfWriter )SetOpenAction (dest _ea .PdfObject )error {if dest ==nil ||_ea .IsNullObject (dest ){return nil ;};_gfbgba ._dacfd .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gfbgba .addObjects (dest );
};func _aefbb (_cgeg *_dcc .ImageBase )(_begce Image ){_begce .Width =int64 (_cgeg .Width );_begce .Height =int64 (_cgeg .Height );_begce .BitsPerComponent =int64 (_cgeg .BitsPerComponent );_begce .ColorComponents =_cgeg .ColorComponents ;_begce .Data =_cgeg .Data ;
_begce ._affe =_cgeg .Decode ;_begce ._abgae =_cgeg .Alpha ;return _begce ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_cdgc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ge .CharCode )(_fegab []rune ,_ecdfd ,_fecb int ){_cbcb ,_ecdfd ,_fecb :=_cdgc .CharcodesToStrings (charcodes ,"");return []rune (_dgb .Join (_cbcb ,"")),_ecdfd ,_fecb ;};

// ToPdfObject implements interface PdfModel.
func (_bfcgf *Permissions )ToPdfObject ()_ea .PdfObject {return _bfcgf ._effgg };

// SetHideMenubar sets the value of the hideMenubar flag.
func (_adaad *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_adaad ._bfgeb =&hideMenubar };func _gfgggg (_eefed *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_eefed }};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ea .PdfObjectInteger ;BitsPerComponent *_ea .PdfObjectInteger ;BitsPerFlag *_ea .PdfObjectInteger ;Decode *_ea .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ea .PdfObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dgfe *PdfColorspaceLab )DecodeArray ()[]float64 {_ebea :=[]float64 {0,100};if _dgfe !=nil &&_dgfe .Range !=nil &&len (_dgfe .Range )==4{_ebea =append (_ebea ,_dgfe .Range ...);}else {_ebea =append (_ebea ,-100,100,-100,100);};return _ebea ;};

// AddFont adds a font dictionary to the Font resources.
func (_acdbe *PdfPage )AddFont (name _ea .PdfObjectName ,font _ea .PdfObject )error {if _acdbe .Resources ==nil {_acdbe .Resources =NewPdfPageResources ();};if _acdbe .Resources .Font ==nil {_acdbe .Resources .Font =_ea .MakeDict ();};_efedg ,_baaed :=_ea .TraceToDirectObject (_acdbe .Resources .Font ).(*_ea .PdfObjectDictionary );
if !_baaed {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ea .TraceToDirectObject (_acdbe .Resources .Font ));
return _dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efedg .Set (name ,font );return nil ;};func (_gdcfd *PdfReader )buildNameNodes (_eged *_ea .PdfIndirectObject ,_babd map[_ea .PdfObject ]struct{})error {if _eged ==nil {return nil ;
};if _ ,_fdfd :=_babd [_eged ];_fdfd {_ca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eged .ObjectNumber );return nil ;
};_babd [_eged ]=struct{}{};_fceg ,_bgcdc :=_eged .PdfObject .(*_ea .PdfObjectDictionary );if !_bgcdc {return _dc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _gaac ,_effae :=_ea .GetDict (_fceg .Get ("\u0044\u0065\u0073t\u0073"));
_effae {_ffagg ,_baddc :=_ea .GetArray (_gaac .Get ("\u004b\u0069\u0064\u0073"));if !_baddc {return _dc .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ffagg );
for _gccbb ,_efaae :=range _ffagg .Elements (){_daag ,_efeeg :=_ea .GetIndirect (_efaae );if !_efeeg {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_daag );
return _dc .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ffagg .Set (_gccbb ,_daag );_acece :=_gdcfd .buildNameNodes (_daag ,_babd );if _acece !=nil {return _acece ;
};};};if _dccff ,_gdbfc :=_ea .GetDict (_fceg );_gdbfc {if !_ea .IsNullObject (_dccff .Get ("\u004b\u0069\u0064\u0073")){if _ebabg ,_bdebg :=_ea .GetArray (_dccff .Get ("\u004b\u0069\u0064\u0073"));_bdebg {for _fbbcb ,_eaeag :=range _ebabg .Elements (){if _aadda ,_bfgbe :=_ea .GetIndirect (_eaeag );
_bfgbe {_ebabg .Set (_fbbcb ,_aadda );_caecd :=_gdcfd .buildNameNodes (_aadda ,_babd );if _caecd !=nil {return _caecd ;};};};};};};return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gadd :=NewPdfOutline ();_gadd ._bdddb =&_gadd ;return _gadd };func (_gdgce *PdfWriter )seekByName (_bcceb _ea .PdfObject ,_ddgf []string ,_ffdc string )([]_ea .PdfObject ,error ){_ca .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bcceb );
var _cdbff []_ea .PdfObject ;if _adfbe ,_eacbd :=_bcceb .(*_ea .PdfIndirectObject );_eacbd {return _gdgce .seekByName (_adfbe .PdfObject ,_ddgf ,_ffdc );};if _ecead ,_faacd :=_bcceb .(*_ea .PdfObjectStream );_faacd {return _gdgce .seekByName (_ecead .PdfObjectDictionary ,_ddgf ,_ffdc );
};if _bafcc ,_ecfbc :=_bcceb .(*_ea .PdfObjectDictionary );_ecfbc {_ca .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_accg :=range _bafcc .Keys (){_fgdec :=_bafcc .Get (_accg );if string (_accg )==_ffdc {_cdbff =append (_cdbff ,_fgdec );};for _ ,_feecd :=range _ddgf {if string (_accg )==_feecd {_ca .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_feecd );
_ceage ,_agaab :=_gdgce .seekByName (_fgdec ,_ddgf ,_ffdc );if _agaab !=nil {return _cdbff ,_agaab ;};_cdbff =append (_cdbff ,_ceage ...);break ;};};};return _cdbff ,nil ;};return _cdbff ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_faaa *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fegf ,_cbccaf :=_ea .GetNumbersAsFloat (objects );
if _cbccaf !=nil {return nil ,_cbccaf ;};return _faaa .ColorFromFloats (_fegf );};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ea .PdfObject ;T _ea .PdfObject ;Operation _ea .PdfObject ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eagbd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbg :=vals [0];if _acbg < 0.0||_acbg > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_acbg );
return nil ,ErrColorOutOfRange ;};_gbbd :=vals [1];if _gbbd < 0.0||_gbbd > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbbd );return nil ,ErrColorOutOfRange ;
};_fecf :=vals [2];if _fecf < 0.0||_fecf > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fecf );return nil ,ErrColorOutOfRange ;};_eabd :=vals [3];
if _eabd < 0.0||_eabd > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eabd );return nil ,ErrColorOutOfRange ;};_gefd :=NewPdfColorDeviceCMYK (_acbg ,_gbbd ,_fecf ,_eabd );
return _gefd ,nil ;};

// L returns the value of the L component of the color.
func (_dagg *PdfColorLab )L ()float64 {return _dagg [0]};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eafbg :=&PdfPageResources {};_eafbg ._gafded =_ea .MakeDict ();return _eafbg ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cece *PdfAppender )UpdateObject (obj _ea .PdfObject ){_cece .replaceObject (obj ,obj );if _ ,_cgdd :=_cece ._bagc [obj ];!_cgdd {_cece ._aggf =append (_cece ._aggf ,obj );_cece ._bagc [obj ]=struct{}{};};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gdgbe *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gdgbe .Alternate ==nil {if _gdgbe .N ==1{_baaad :=NewPdfColorspaceDeviceGray ();return _baaad .ColorFromFloats (vals );}else if _gdgbe .N ==3{_gabc :=NewPdfColorspaceDeviceRGB ();
return _gabc .ColorFromFloats (vals );}else if _gdgbe .N ==4{_adae :=NewPdfColorspaceDeviceCMYK ();return _adae .ColorFromFloats (vals );}else {return nil ,_dc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gdgbe .Alternate .ColorFromFloats (vals );};

// ToInteger convert to an integer format.
func (_aafe *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_dgggb :=_dgf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dgggb *_aafe .R ()),uint32 (_dgggb *_aafe .G ()),uint32 (_dgggb *_aafe .B ())};};

// Fill populates `form` with values provided by `provider`.
func (_cgaff *PdfAcroForm )Fill (provider FieldValueProvider )error {return _cgaff .fill (provider ,nil )};

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_agdce *ViewerPreferences )IsHideWindowUI ()bool {if _agdce ._acgcg ==nil {return false ;};return *_agdce ._acgcg ;};

// SetPageNumber sets the page number.
func (_eddd *KDict )SetPageNumber (pageNumber int64 ){_eddd ._bfgae =pageNumber };func (_bbb *PdfReader )newPdfActionSoundFromDict (_eda *_ea .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_eda .Get ("\u0053\u006f\u0075n\u0064"),Volume :_eda .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_eda .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_eda .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_eda .Get ("\u004d\u0069\u0078")},nil ;
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_edbc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ca .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ca .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ca .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ca .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fgfbb ,_febb :=_dcc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abgae ,img ._affe );if _febb !=nil {return Image {},_febb ;};_aadd ,_febb :=_dcc .NRGBAConverter .Convert (_fgfbb );
if _febb !=nil {return Image {},_febb ;};return _aefbb (_aadd .Base ()),nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_gdaa *PdfColorLab )GetNumComponents ()int {return 3};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dgcfg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _acef []*PdfField ;_bfce :=map[*_ea .PdfIndirectObject ]struct{}{};for _ ,_gcbg :=range _dgcfg .PageList {_bege ,_agcba :=_gcbg .GetAnnotations ();if _agcba !=nil {return _agcba ;
};for _ ,_ggaac :=range _bege {var _bgceb *PdfField ;switch _aeefg :=_ggaac .GetContext ().(type ){case *PdfAnnotationWidget :if _aeefg ._efb !=nil {_bgceb =_aeefg ._efb ;break ;};if _ecaca ,_gccc :=_ea .GetIndirect (_aeefg .Parent );_gccc {_bgceb ,_agcba =_dgcfg .newPdfFieldFromIndirectObject (_ecaca ,nil );
if _agcba ==nil {break ;};_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecaca ,_agcba );
};if _aeefg ._eab !=nil {_bgceb ,_agcba =_dgcfg .newPdfFieldFromIndirectObject (_aeefg ._eab ,nil );if _agcba ==nil {break ;};_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aeefg ._eab ,_agcba );
};};if _bgceb ==nil {continue ;};if _ ,_addd :=_bfce [_bgceb ._gegceb ];_addd {continue ;};_bfce [_bgceb ._gegceb ]=struct{}{};_acef =append (_acef ,_bgceb );};};if len (_acef )==0{return nil ;};if _dgcfg .AcroForm ==nil {_dgcfg .AcroForm =NewPdfAcroForm ();
};_dgcfg .AcroForm .Fields =&_acef ;return nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bccg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_adfc :=func (_gfcga float64 )float64 {if _gfcga >=6.0/29{return _gfcga *_gfcga *_gfcga ;};return 108.0/841*(_gfcga -4.0/29.0);};_cecd :=img ._affe ;if len (_cecd )!=6{_ca .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_cecd =_bccg .DecodeArray ();};_eagf :=_af .NewReader (img .getBase ());_agbd :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._abgae ,img ._affe );_dgca :=_af .NewWriter (_agbd );_fefa :=_dgf .Pow (2,float64 (img .BitsPerComponent ))-1;
_bbag :=make ([]uint32 ,3);var (_bcege error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_afdgb ,_ecfgb ,_bfaed float64 ;);for {_bcege =_eagf .ReadSamples (_bbag );if _bcege ==_cde .EOF {break ;}else if _bcege !=nil {return img ,_bcege ;};Ls =float64 (_bbag [0])/_fefa ;
As =float64 (_bbag [1])/_fefa ;Bs =float64 (_bbag [2])/_fefa ;Ls =_dcc .LinearInterpolate (Ls ,0.0,1.0,_cecd [0],_cecd [1]);As =_dcc .LinearInterpolate (As ,0.0,1.0,_cecd [2],_cecd [3]);Bs =_dcc .LinearInterpolate (Bs ,0.0,1.0,_cecd [4],_cecd [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_bccg .WhitePoint [0]*_adfc (L );Y =_bccg .WhitePoint [1]*_adfc (M );Z =_bccg .WhitePoint [2]*_adfc (N );_afdgb =3.240479*X +-1.537150*Y +-0.498535*Z ;_ecfgb =-0.969256*X +1.875992*Y +0.041556*Z ;_bfaed =0.055648*X +-0.204043*Y +1.057311*Z ;
_afdgb =_dgf .Min (_dgf .Max (_afdgb ,0),1.0);_ecfgb =_dgf .Min (_dgf .Max (_ecfgb ,0),1.0);_bfaed =_dgf .Min (_dgf .Max (_bfaed ,0),1.0);_bbag [0]=uint32 (_afdgb *_fefa );_bbag [1]=uint32 (_ecfgb *_fefa );_bbag [2]=uint32 (_bfaed *_fefa );if _bcege =_dgca .WriteSamples (_bbag );
_bcege !=nil {return img ,_bcege ;};};return _aefbb (&_agbd ),nil ;};

// SetRefObject sets the reference object for the KValue.
func (_becab *KValue )SetRefObject (refObject _ea .PdfObject ){_becab .Clear ();_becab ._aadab =refObject ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gbdb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gbdb .AlternateSpace ==nil {return nil ,_dc .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gbdb .AlternateSpace .ColorToRGB (color );};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ga :=&PdfAction {};_ga ._fgc =_ea .MakeIndirectObject (_ea .MakeDict ());return _ga ;};

// ToPdfObject implements interface PdfModel.
func (_fbb *PdfAnnotationCircle )ToPdfObject ()_ea .PdfObject {_fbb .PdfAnnotation .ToPdfObject ();_agfb :=_fbb ._eab ;_cefg :=_agfb .PdfObject .(*_ea .PdfObjectDictionary );_fbb .PdfAnnotationMarkup .appendToPdfDictionary (_cefg );_cefg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_cefg .SetIfNotNil ("\u0042\u0053",_fbb .BS );_cefg .SetIfNotNil ("\u0049\u0043",_fbb .IC );_cefg .SetIfNotNil ("\u0042\u0045",_fbb .BE );_cefg .SetIfNotNil ("\u0052\u0044",_fbb .RD );return _agfb ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cfefa *XObjectImage )ToImage ()(*Image ,error ){_cabdd :=&Image {};if _cfefa .Height ==nil {return nil ,_dc .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cabdd .Height =*_cfefa .Height ;if _cfefa .Width ==nil {return nil ,_dc .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cabdd .Width =*_cfefa .Width ;if _cfefa .BitsPerComponent ==nil {switch _cfefa .Filter .(type ){case *_ea .CCITTFaxEncoder ,*_ea .JBIG2Encoder :_cabdd .BitsPerComponent =1;
case *_ea .LZWEncoder ,*_ea .RunLengthEncoder :_cabdd .BitsPerComponent =8;default:return nil ,_dc .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cabdd .BitsPerComponent =*_cfefa .BitsPerComponent ;};_cabdd .ColorComponents =_cfefa .ColorSpace .GetNumComponents ();_cfefa ._bccba .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ea .MakeInteger (int64 (_cabdd .ColorComponents )));
_affbb ,_ffbd :=_ea .DecodeStream (_cfefa ._bccba );if _ffbd !=nil {return nil ,_ffbd ;};_cabdd .Data =_affbb ;if _cfefa .Decode !=nil {_eedcd ,_affcfc :=_cfefa .Decode .(*_ea .PdfObjectArray );if !_affcfc {_ca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_dc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_baacaf ,_bgcdcd :=_eedcd .ToFloat64Array ();if _bgcdcd !=nil {return nil ,_bgcdcd ;};switch _cfefa .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_fgfge :=_cfefa .ColorSpace .DecodeArray ();
if _fgfge [0]==_baacaf [0]&&_fgfge [1]==_baacaf [1]&&_fgfge [2]==_baacaf [2]&&_fgfge [3]==_baacaf [3]{_cabdd ._affe =_baacaf ;};default:_cabdd ._affe =_baacaf ;};};return _cabdd ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gbbdfc *PdfReader )Inspect ()(map[string ]int ,error ){return _gbbdfc ._afedg .Inspect ()};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gebcg :=&PdfPageResourcesColorspaces {};_gebcg .Names =[]string {};_gebcg .Colorspaces =map[string ]PdfColorspace {};_gebcg ._cbagf =&_ea .PdfIndirectObject {};return _gebcg ;};func (_aaga *XObjectImage )getParamsDict ()*_ea .PdfObjectDictionary {_ddeab :=_ea .MakeDict ();
_ddeab .Set ("\u0057\u0069\u0064t\u0068",_ea .MakeInteger (*_aaga .Width ));_ddeab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ea .MakeInteger (*_aaga .Height ));_ddeab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ea .MakeInteger (int64 (_aaga .ColorSpace .GetNumComponents ())));
_ddeab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ea .MakeInteger (*_aaga .BitsPerComponent ));return _ddeab ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_dcgfa *PdfReader )GetCatalogStructTreeRoot ()(_ea .PdfObject ,bool ){_fdcd :=_ea .ResolveReference (_dcgfa ._gbggd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _fdcd ==nil {return nil ,false ;};if !_dcgfa ._bdddd {_dbaag :=_dcgfa .traverseObjectData (_fdcd );
if _dbaag !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_dbaag );
return nil ,false ;};};return _fdcd ,true ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_cdddd *PdfPattern )IsTiling ()bool {return _cdddd .PatternType ==1};func _cagce (_cfde *_ea .PdfObjectDictionary )(*PdfFieldButton ,error ){_ggcfb :=&PdfFieldButton {};_ggcfb .PdfField =NewPdfField ();_ggcfb .PdfField .SetContext (_ggcfb );_ggcfb .Opt ,_ =_ea .GetArray (_cfde .Get ("\u004f\u0070\u0074"));
_aecda :=NewPdfAnnotationWidget ();_aecda .A ,_ =_ea .GetDict (_cfde .Get ("\u0041"));_aecda .AP ,_ =_ea .GetDict (_cfde .Get ("\u0041\u0050"));_aecda .SetContext (_ggcfb );_ggcfb .PdfField .Annotations =append (_ggcfb .PdfField .Annotations ,_aecda );
return _ggcfb ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_ebeaf *PdfFieldButton )GetFillImage ()*Image {if _ebeaf .IsPush (){return _ebeaf ._fbdfa ;};return nil ;};func _ccbcb (_addb string )map[string ]string {_fcbeg :=_aagea .Split (_addb ,-1);_ggceb :=map[string ]string {};for _ ,_bcdg :=range _fcbeg {_cedfe :=_fbdgc .FindStringSubmatch (_bcdg );
if _cedfe ==nil {continue ;};_aggfd ,_fgdb :=_cedfe [1],_cedfe [2];_ggceb [_aggfd ]=_fgdb ;};return _ggceb ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_gdefa *PdfWriter )SetFileName (name string ){_gdefa ._ggegf =name };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_abda *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _abda .Alternate ==nil {_ca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _abda .N ==1{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fage :=NewPdfColorspaceDeviceGray ();return _fage .ImageToRGB (img );}else if _abda .N ==3{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _abda .N ==4{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fagg :=NewPdfColorspaceDeviceCMYK ();return _fagg .ImageToRGB (img );}else {return img ,_dc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_abda );
_aga ,_cdddg :=_abda .Alternate .ImageToRGB (img );_ca .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ca .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_aga );
return _aga ,_cdddg ;};func (_fcceed *PdfReader )resolveReference (_deegdg *_ea .PdfObjectReference )(_ea .PdfObject ,bool ,error ){_eaad ,_ddfgc :=_fcceed ._afedg .ObjCache [int (_deegdg .ObjectNumber )];if !_ddfgc {_ca .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_deegdg );
_aeefe ,_eacdd :=_fcceed ._afedg .LookupByReference (*_deegdg );if _eacdd !=nil {return nil ,false ,_eacdd ;};_fcceed ._afedg .ObjCache [int (_deegdg .ObjectNumber )]=_aeefe ;return _aeefe ,false ,nil ;};return _eaad ,true ,nil ;};

// StructureTagInfo represents a tagged structure in a PDF document.
type StructureTagInfo struct{

// Marked Content ID, if applicable.
Mcid int64 ;

// Structure type, a name object identifying the nature of the object and its role within the document.
StructureType StructureType ;

// AnnotObjs is used to reference annotation objects in structure elements
AnnotObjs []_ea .PdfObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ea .PdfObject ;B _ea .PdfObject ;};

// ToPdfObject converts date to a PDF string object.
func (_ebgag *PdfDate )ToPdfObject ()_ea .PdfObject {_ccddg :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ebgag ._daae ,_ebgag ._edbcda ,_ebgag ._ecafe ,_ebgag ._cdcef ,_ebgag ._bcddc ,_ebgag ._eacgg ,_ebgag ._dcfge ,_ebgag ._agfbcf ,_ebgag ._dcfcc );
return _ea .MakeString (_ccddg );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ea .PdfObject ;GetContainingPdfObject ()_ea .PdfObject ;};

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ea .PdfObject ;H _ea .PdfObject ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_fcdag *PdfPageResources )AddExtGState (gsName _ea .PdfObjectName ,gsDict _ea .PdfObject )error {if _fcdag .ExtGState ==nil {_fcdag .ExtGState =_ea .MakeDict ();};_egagb :=_fcdag .ExtGState ;_cadaff ,_ebccb :=_ea .TraceToDirectObject (_egagb ).(*_ea .PdfObjectDictionary );
if !_ebccb {_ca .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_egagb ,_ea .TraceToDirectObject (_egagb ));
return _ea .ErrTypeError ;};_cadaff .Set (gsName ,gsDict );return nil ;};func (_afefb *PdfWriter )copyObjects (){_gecb :=make (map[_ea .PdfObject ]_ea .PdfObject );_cdgfd :=make ([]_ea .PdfObject ,0,len (_afefb ._cgdbdb ));_fceeb :=make (map[_ea .PdfObject ]struct{},len (_afefb ._cgdbdb ));
_dfbbf :=make (map[_ea .PdfObject ]struct{});for _ ,_deab :=range _afefb ._cgdbdb {_agbdgg :=_afefb .copyObject (_deab ,_gecb ,_dfbbf ,false );if _ ,_bcggb :=_dfbbf [_deab ];_bcggb {continue ;};_cdgfd =append (_cdgfd ,_agbdgg );_fceeb [_agbdgg ]=struct{}{};
};_afefb ._cgdbdb =_cdgfd ;_afefb ._efaca =_fceeb ;_afefb ._dcca =_afefb .copyObject (_afefb ._dcca ,_gecb ,nil ,false ).(*_ea .PdfIndirectObject );_afefb ._cfbed =_afefb .copyObject (_afefb ._cfbed ,_gecb ,nil ,false ).(*_ea .PdfIndirectObject );if _afefb ._eadec !=nil {_afefb ._eadec =_afefb .copyObject (_afefb ._eadec ,_gecb ,nil ,false ).(*_ea .PdfIndirectObject );
};if _afefb ._eefcgg {_egdbg :=make (map[_ea .PdfObject ]int64 );for _acdfc ,_acgfdc :=range _afefb ._ebfca {if _decbg ,_dacafd :=_gecb [_acdfc ];_dacafd {_egdbg [_decbg ]=_acgfdc ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_afefb ._ebfca =_egdbg ;};};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_adafa *CompliancePdfReader )error ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_afedg *_ea .PdfParser ;_edga _ea .PdfObject ;_egggg *_ea .PdfIndirectObject ;_dceg *_ea .PdfObjectDictionary ;_dfdbf []*_ea .PdfIndirectObject ;PageList []*PdfPage ;_ccgdc int ;_gbggd *_ea .PdfObjectDictionary ;_bbdf *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_egfb *Permissions ;_dgeg map[*PdfReader ]*PdfReader ;_bgae []*PdfReader ;_aebcf *modelManager ;_bdddd bool ;_dgacb map[_ea .PdfObject ]struct{};_gcddb _cde .ReadSeeker ;_bcbeg string ;_eadgec bool ;_bdggc string ;
_agbfa *ReaderOpts ;_fdcg bool ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_eagfc *_ea .PdfObjectDictionary ;};

// HasFontByName checks if has font resource by name.
func (_dgbbg *PdfPage )HasFontByName (name _ea .PdfObjectName )bool {_agecc ,_bgfba :=_dgbbg .Resources .Font .(*_ea .PdfObjectDictionary );if !_bgfba {return false ;};if _gdaf :=_agecc .Get (name );_gdaf !=nil {return true ;};return false ;};func (_ecadeg SignatureValidationResult )String ()string {var _agcadb _cb .Buffer ;
_agcadb .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ecadeg .Name ));if _ecadeg .Date ._daae > 0{_agcadb .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ecadeg .Date .ToGoTime ().String ()));}else {_agcadb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ecadeg .Reason )> 0{_agcadb .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ecadeg .Reason ));}else {_agcadb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_ecadeg .Location )> 0{_agcadb .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ecadeg .Location ));}else {_agcadb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ecadeg .ContactInfo )> 0{_agcadb .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ecadeg .ContactInfo ));}else {_agcadb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_agcadb .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ecadeg .Fields )));if _ecadeg .IsSigned {_agcadb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_agcadb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ecadeg .IsVerified {_agcadb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_agcadb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ecadeg .IsTrusted {_agcadb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_agcadb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ecadeg .GeneralizedTime .IsZero (){_agcadb .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ecadeg .GeneralizedTime .String ()));
};if _ecadeg .DiffResults !=nil {_agcadb .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ecadeg .DiffResults .IsPermitted ()));if len (_ecadeg .DiffResults .Warnings )> 0{_agcadb .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_gfbed :=range _ecadeg .DiffResults .Warnings {_agcadb .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_gfbed ));};};if len (_ecadeg .DiffResults .Errors )> 0{_agcadb .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_geebe :=range _ecadeg .DiffResults .Errors {_agcadb .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_geebe ));};};};if _ecadeg .IsCrlFound {_agcadb .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_agcadb .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _ecadeg .IsOcspFound {_agcadb .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_agcadb .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _agcadb .String ();};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_gedeee :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_gedeee ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cde .ReadSeeker )(*PdfReader ,error ){const _ebcdd ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fceba (rs ,&ReaderOpts {},false ,_ebcdd );};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ccb :=NewPdfAction ();_ef :=&PdfActionSound {};_ef .PdfAction =_ccb ;_ccb .SetContext (_ef );return _ef ;};

// SetPage directly sets the page object.
func (_afgdad *KDict )SetPage (page *_ea .PdfIndirectObject ){_afgdad .Pg =page };func (_acbde *PdfReader )loadPerms ()(*Permissions ,error ){if _abdaf :=_acbde ._gbggd .Get ("\u0050\u0065\u0072m\u0073");_abdaf !=nil {if _gcefe ,_cgecc :=_ea .GetDict (_abdaf );
_cgecc {_fbfee :=_gcefe .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _fbfee ==nil {return nil ,nil ;};if _geada ,_gcfea :=_ea .GetIndirect (_fbfee );_gcfea {_fbagd ,_deedd :=_acbde .newPdfSignatureFromIndirect (_geada );if _deedd !=nil {return nil ,_deedd ;
};return NewPermissions (_fbagd ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ddc :=NewPdfAnnotation ();_bfcb :=&PdfAnnotationFileAttachment {};_bfcb .PdfAnnotation =_ddc ;_bfcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddc .SetContext (_bfcb );return _bfcb ;
};func _addbac (_gbad _ea .PdfObject ,_bdda _ea .PdfObject ,_eadgb map[_ea .PdfObject ][]_ea .PdfObject ,_acdcc map[string ]_ea .PdfObject ,_eadbde *[]_ea .PdfObject ){var _dbgae *_ea .PdfIndirectObject ;if _eeacd ,_ecgdd :=_ea .GetIndirect (_gbad );_ecgdd {_dbgae =_eeacd ;
_gbad =_eeacd .PdfObject ;};switch _gcae :=_gbad .(type ){case *_ea .PdfObjectDictionary :if _gcae .Get ("\u0053")==nil {return ;};_gcae .Set ("\u0050",_bdda );if _eaded :=_gcae .Get ("\u0050\u0067");_eaded !=nil {if _gccbd ,_cdeca :=_ea .GetIndirect (_eaded );
_cdeca &&_gccbd !=nil &&_gccbd .PdfObject !=nil {_eadgb [_eaded ]=append (_eadgb [_eaded ],_dbgae );};};if _agfac :=_gcae .Get ("\u0053");_agfac !=nil {if _gbfed ,_defec :=_ea .GetNameVal (_agfac );_defec {if _gbfed ==string (StructureTypeLink ){if _fdddb :=_gcae .Get ("\u004b");
_fdddb !=nil {if _aafg ,_cacga :=_ea .GetArray (_fdddb );_cacga &&_aafg .Len ()==2{_cbfeg :=false ;_cfcedd :=false ;for _ ,_bbgae :=range _aafg .Elements (){if _bgdcc ,_dcbae :=_ea .GetDict (_bbgae );_dcbae {if _bedadg ,_bdccce :=_ea .GetName (_bgdcc .Get ("\u0054\u0079\u0070\u0065"));
_bdccce &&_bedadg .String ()=="\u004f\u0042\u004a\u0052"{_cfcedd =true ;};}else if _ ,_efaad :=_ea .GetInt (_bbgae );_efaad {_cbfeg =true ;};};if _cbfeg &&_cfcedd {*_eadbde =append (*_eadbde ,_dbgae );};}else if _abafc ,_dccca :=_ea .GetDict (_fdddb );
_dccca {if _eacfbc ,_dffd :=_ea .GetName (_abafc .Get ("\u0054\u0079\u0070\u0065"));_dffd &&_eacfbc .String ()=="\u004f\u0042\u004a\u0052"{*_eadbde =append (*_eadbde ,_dbgae );};};};};};};if _dfebdg :=_gcae .Get ("\u0049\u0044");_dfebdg !=nil {_acdcc [_dfebdg .String ()]=_gbad ;
};if _fgbd :=_gcae .Get ("\u004b");_fgbd !=nil {_addbac (_fgbd ,_dbgae ,_eadgb ,_acdcc ,_eadbde );};case *_ea .PdfObjectArray :for _ ,_caagc :=range _gcae .Elements (){_addbac (_caagc ,_bdda ,_eadgb ,_acdcc ,_eadbde );};default:};};

// PdfVersion returns version of the PDF file.
func (_acfecb *PdfReader )PdfVersion ()_ea .Version {return _acfecb ._afedg .PdfVersion ()};

// IsEncrypted returns true if the PDF file is encrypted.
func (_abedf *PdfReader )IsEncrypted ()(bool ,error ){return _abedf ._afedg .IsEncrypted ()};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ec .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ec .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ec .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fgcff *PdfAppender ;_befaa *DSS ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_beeaf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _dc .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_beeaf .S =subtype ;return nil ;};type pdfFont interface{_gf .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ea .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_eaegd *PdfPageResources )GetContainingPdfObject ()_ea .PdfObject {return _eaegd ._gafded };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_adbf *_ea .PdfIndirectObject ;};func (_efbec *PdfWriter )writeTrailer (_bacba int ){_efbec .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cfafb :=0;
_cfafb <=_bacba ;{for ;_cfafb <=_bacba ;_cfafb ++{_ggdfde ,_cgdeeg :=_efbec ._gggee [_cfafb ];if _cgdeeg &&(!_efbec ._eefcgg ||_efbec ._eefcgg &&(_ggdfde .Type ==1&&_ggdfde .Offset >=_efbec ._fbccg ||_ggdfde .Type ==0)){break ;};};var _bcbcbc int ;for _bcbcbc =_cfafb +1;
_bcbcbc <=_bacba ;_bcbcbc ++{_ffcee ,_aefgc :=_efbec ._gggee [_bcbcbc ];if _aefgc &&(!_efbec ._eefcgg ||_efbec ._eefcgg &&(_ffcee .Type ==1&&_ffcee .Offset > _efbec ._fbccg )){continue ;};break ;};_gabec :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cfafb ,_bcbcbc -_cfafb );
_efbec .writeString (_gabec );for _gcegcg :=_cfafb ;_gcegcg < _bcbcbc ;_gcegcg ++{_daadg :=_efbec ._gggee [_gcegcg ];switch _daadg .Type {case 0:_gabec =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_efbec .writeString (_gabec );case 1:_gabec =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_daadg .Offset ,0);_efbec .writeString (_gabec );};};_cfafb =_bcbcbc +1;};_aebdc :=_ea .MakeDict ();_aebdc .Set ("\u0049\u006e\u0066\u006f",_efbec ._dcca );
_aebdc .Set ("\u0052\u006f\u006f\u0074",_efbec ._cfbed );_aebdc .Set ("\u0053\u0069\u007a\u0065",_ea .MakeInteger (int64 (_bacba +1)));if _efbec ._eefcgg &&_efbec ._abcdg > 0{_aebdc .Set ("\u0050\u0072\u0065\u0076",_ea .MakeInteger (_efbec ._abcdg ));};
if _efbec ._afcgd !=nil {_aebdc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_efbec ._eadec );};if _efbec ._bfcab ==nil &&_efbec ._fgac !=""&&_efbec ._abbcf !=""{_efbec ._bfcab =_ea .MakeArray (_ea .MakeHexString (_efbec ._fgac ),_ea .MakeHexString (_efbec ._abbcf ));
};if _efbec ._bfcab !=nil {_aebdc .Set ("\u0049\u0044",_efbec ._bfcab );_ca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_efbec ._bfcab );};_efbec .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_efbec .writeBytes (_aebdc .Write ());
_efbec .writeString ("\u000a");};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cde .ReadSeeker )(*PdfFont ,error ){const _gbagf =_ge .CharCode (32);const _bfaedf =_ge .CharCode (255);_bdbcc ,_aecb :=_cde .ReadAll (r );if _aecb !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aecb );
return nil ,_aecb ;};_eabf ,_aecb :=_gf .TtfParse (_cb .NewReader (_bdbcc ));if _aecb !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_aecb );
return nil ,_aecb ;};_fgbe :=&pdfFontSimple {_ffeb :make (map[_ge .CharCode ]float64 ),fontCommon :fontCommon {_dfeb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fgbe ._ggbg =_ge .NewWinAnsiEncoder ();_fgbe ._ceac =_eabf .PostScriptName ;_fgbe .FirstChar =_ea .MakeInteger (int64 (_gbagf ));
_fgbe .LastChar =_ea .MakeInteger (int64 (_bfaedf ));_cccg :=1000.0/float64 (_eabf .UnitsPerEm );if len (_eabf .Widths )<=0{return nil ,_dc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ffae :=_cccg *float64 (_eabf .Widths [0]);_dfgdb :=make ([]float64 ,0,_bfaedf -_gbagf +1);for _gcadc :=_gbagf ;_gcadc <=_bfaedf ;_gcadc ++{_ggge ,_dbfc :=_fgbe .Encoder ().CharcodeToRune (_gcadc );if !_dbfc {_ca .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gcadc );
_dfgdb =append (_dfgdb ,_ffae );continue ;};_bcgf ,_fcgfeb :=_eabf .Chars [_ggge ];if !_fcgfeb {_ca .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dfgdb =append (_dfgdb ,_ffae );continue ;
};_ffage :=_cccg *float64 (_eabf .Widths [_bcgf ]);_dfgdb =append (_dfgdb ,_ffage );};_fgbe .Widths =_ea .MakeIndirectObject (_ea .MakeArrayFromFloats (_dfgdb ));if len (_dfgdb )< int (_bfaedf -_gbagf +1){_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dfgdb ),255-32+1);
return nil ,_ea .ErrRangeError ;};for _cgadb :=_gbagf ;_cgadb <=_bfaedf ;_cgadb ++{_fgbe ._ffeb [_cgadb ]=_dfgdb [_cgadb -_gbagf ];};_fgbe .Encoding =_ea .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_egggb :=&PdfFontDescriptor {};
_egggb .FontName =_ea .MakeName (_eabf .PostScriptName );_egggb .Ascent =_ea .MakeFloat (_cccg *float64 (_eabf .TypoAscender ));_egggb .Descent =_ea .MakeFloat (_cccg *float64 (_eabf .TypoDescender ));_egggb .CapHeight =_ea .MakeFloat (_cccg *float64 (_eabf .CapHeight ));
_egggb .FontBBox =_ea .MakeArrayFromFloats ([]float64 {_cccg *float64 (_eabf .Xmin ),_cccg *float64 (_eabf .Ymin ),_cccg *float64 (_eabf .Xmax ),_cccg *float64 (_eabf .Ymax )});_egggb .ItalicAngle =_ea .MakeFloat (_eabf .ItalicAngle );_egggb .MissingWidth =_ea .MakeFloat (_cccg *float64 (_eabf .Widths [0]));
_badc ,_aecb :=_ea .MakeStream (_bdbcc ,_ea .NewFlateEncoder ());if _aecb !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aecb );
return nil ,_aecb ;};_badc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ea .MakeInteger (int64 (len (_bdbcc ))));_egggb .FontFile2 =_badc ;if _eabf .Bold {_egggb .StemV =_ea .MakeInteger (120);}else {_egggb .StemV =_ea .MakeInteger (70);
};_babe :=_gcebd ;if _eabf .IsFixedPitch {_babe |=_edcfe ;};if _eabf .ItalicAngle !=0{_babe |=_edcdg ;};_egggb .Flags =_ea .MakeInteger (int64 (_babe ));_fgbe ._eafg =_egggb ;_ceee :=&PdfFont {_gbee :_fgbe };return _ceee ,nil ;};func (_eeac *PdfReader )newPdfActionResetFormFromDict (_gadc *_ea .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gadc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gadc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ea .PdfObject ;IC _ea .PdfObject ;BE _ea .PdfObject ;RD _ea .PdfObject ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ea .PdfObject ;T3DV _ea .PdfObject ;T3DA _ea .PdfObject ;T3DI _ea .PdfObject ;T3DB _ea .PdfObject ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_eeaag *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_eeaag ._dgad =colorspace ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_feeffa *PdfPattern )SetContext (ctx PdfModel ){_feeffa ._egfdg =ctx };func _ggbf (_fgab *XObjectImage )error {if _fgab .SMask ==nil {return nil ;};_gcedg ,_caage :=_fgab .SMask .(*_ea .PdfObjectStream );if !_caage {_ca .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _ea .ErrTypeError ;};_gefbg :=_gcedg .PdfObjectDictionary ;_fbaadd :=_gefbg .Get ("\u004d\u0061\u0074t\u0065");if _fbaadd ==nil {return nil ;};_bbaff ,_gface :=_dcgeaa (_fbaadd .(*_ea .PdfObjectArray ));if _gface !=nil {return _gface ;};_fcfa :=_ea .MakeArrayFromFloats ([]float64 {_bbaff });
_gefbg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fcfa );return nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bdbag *PdfReader )GetNamedDestinations ()(_ea .PdfObject ,error ){_cedab :=_ea .ResolveReference (_bdbag ._gbggd .Get ("\u0044\u0065\u0073t\u0073"));if _cedab ==nil {return nil ,nil ;};if !_bdbag ._bdddd {_ebaeb :=_bdbag .traverseObjectData (_cedab );
if _ebaeb !=nil {return nil ,_ebaeb ;};};return _cedab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecad *PdfAnnotationWidget )ToPdfObject ()_ea .PdfObject {_ecad .PdfAnnotation .ToPdfObject ();_ebeb :=_ecad ._eab ;_eedg :=_ebeb .PdfObject .(*_ea .PdfObjectDictionary );if _ecad ._cab {return _ebeb ;};_ecad ._cab =true ;_eedg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_eedg .SetIfNotNil ("\u0048",_ecad .H );_eedg .SetIfNotNil ("\u004d\u004b",_ecad .MK );_eedg .SetIfNotNil ("\u0041",_ecad .A );_eedg .SetIfNotNil ("\u0041\u0041",_ecad .AA );_eedg .SetIfNotNil ("\u0042\u0053",_ecad .BS );_acab :=_ecad .Parent ;if _ecad ._efb !=nil {if _ecad ._efb ._gegceb ==_ecad ._eab {_ecad ._efb .ToPdfObject ();
};_acab =_ecad ._efb .GetContainingPdfObject ();};if _acab !=_ebeb {_eedg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_acab );};_ecad ._cab =false ;return _ebeb ;};func (_abbe *PdfAppender )mergeResources (_baba ,_agdd _ea .PdfObject ,_agcb map[_ea .PdfObjectName ]_ea .PdfObjectName )_ea .PdfObject {if _agdd ==nil &&_baba ==nil {return nil ;
};if _agdd ==nil {return _baba ;};_eecc ,_dgef :=_ea .GetDict (_agdd );if !_dgef {return _baba ;};if _baba ==nil {_dcg :=_ea .MakeDict ();_dcg .Merge (_eecc );return _agdd ;};_bcc ,_dgef :=_ea .GetDict (_baba );if !_dgef {_ca .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bcc =_ea .MakeDict ();};for _ ,_bedb :=range _eecc .Keys (){if _bdbe ,_dca :=_agcb [_bedb ];_dca {_bcc .Set (_bdbe ,_eecc .Get (_bedb ));}else {_bcc .Set (_bedb ,_eecc .Get (_bedb ));};};return _bcc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cddf pdfFontType3 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){_dfeee :=_cddf .Encoder ();if _dfeee ==nil {_ca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cddf );
return _gf .CharMetrics {},false ;};_adeg ,_afbgd :=_dfeee .RuneToCharcode (r );if !_afbgd {if r !=' '{_ca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cddf );
};return _gf .CharMetrics {},false ;};_gaab ,_bffa :=_cddf .GetCharMetrics (_adeg );return _gaab ,_bffa ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ea .PdfObjectDictionary )(*PdfPageResources ,error ){_defgc :=NewPdfPageResources ();if _eeece :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eeece !=nil {_defgc .ExtGState =_eeece ;};if _cdecd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_cdecd !=nil &&!_ea .IsNullObject (_cdecd ){_defgc .ColorSpace =_cdecd ;};if _gfdfd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gfdfd !=nil {_defgc .Pattern =_gfdfd ;};if _bebg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bebg !=nil {_defgc .Shading =_bebg ;
};if _afcfd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_afcfd !=nil {_defgc .XObject =_afcfd ;};if _cegaf :=_ea .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_cegaf !=nil {_defgc .Font =_cegaf ;};if _fffac :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fffac !=nil {_defgc .ProcSet =_fffac ;};if _cegea :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cegea !=nil {_defgc .Properties =_cegea ;};return _defgc ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dabcag *XObjectImage )SetFilter (encoder _ea .StreamEncoder )error {_faeecc :=_dabcag .Stream ;_afbca ,_ccfgc :=_dabcag .Filter .DecodeBytes (_faeecc );if _ccfgc !=nil {return _ccfgc ;};_dabcag .Filter =encoder ;encoder .UpdateParams (_dabcag .getParamsDict ());
_faeecc ,_ccfgc =encoder .EncodeBytes (_afbca );if _ccfgc !=nil {return _ccfgc ;};_dabcag .Stream =_faeecc ;return nil ;};func (_dgagb *PdfWriter )hasObject (_gfbfc _ea .PdfObject )bool {_ ,_debaf :=_dgagb ._efaca [_gfbfc ];return _debaf ;};

// GetChildren returns the children of the K dictionary object.
func (_bfcfa *KDict )GetChildren ()[]*KValue {return _bfcfa ._deecfd };

// SetDecode sets the decode image float slice.
func (_bdedf *Image )SetDecode (decode []float64 ){_bdedf ._affe =decode };func (_dgbgd *PdfWriter )setDocumentIDs (_gbdad ,_cacaa string ){_dgbgd ._bfcab =_ea .MakeArray (_ea .MakeHexString (_gbdad ),_ea .MakeHexString (_cacaa ));};func (_ceb *PdfReader )newPdfActionJavaScriptFromDict (_cgeb *_ea .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cgeb .Get ("\u004a\u0053")},nil ;
};

// RemoveStructParentsKey removes the StructParents key.
func (_dfge *PdfPage )RemoveStructParentsKey (){_dfge .StructParents =nil };

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_cgdaf *PdfWriter )SetCatalogViewerPreferences (pref _ea .PdfObject )error {if pref ==nil {_cgdaf ._dacfd .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _bcbgb ,_acagf :=pref .(*_ea .PdfObjectReference );
_acagf {pref =_bcbgb .Resolve ();if pref ==nil {_cgdaf ._dacfd .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};if _ ,_bbca :=pref .(*_ea .PdfIndirectObject );_bbca {_cgdaf .addObject (pref );
};_cgdaf ._dacfd .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );return nil ;};func _fbdc (_dacc _ea .PdfObject )(*PdfColorspaceCalGray ,error ){_afdg :=NewPdfColorspaceCalGray ();if _cgae ,_bfbd :=_dacc .(*_ea .PdfIndirectObject );
_bfbd {_afdg ._adbf =_cgae ;};_dacc =_ea .TraceToDirectObject (_dacc );_ggade ,_decbb :=_dacc .(*_ea .PdfObjectArray );if !_decbb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggade .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dacc =_ea .TraceToDirectObject (_ggade .Get (0));_eeed ,_decbb :=_dacc .(*_ea .PdfObjectName );if !_decbb {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_eeed !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dacc =_ea .TraceToDirectObject (_ggade .Get (1));
_gced ,_decbb :=_dacc .(*_ea .PdfObjectDictionary );if !_decbb {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_dacc =_gced .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dacc =_ea .TraceToDirectObject (_dacc );_fecc ,_decbb :=_dacc .(*_ea .PdfObjectArray );if !_decbb {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _fecc .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bbc ,_affgg :=_fecc .GetAsFloat64Slice ();
if _affgg !=nil {return nil ,_affgg ;};_afdg .WhitePoint =_bbc ;_dacc =_gced .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dacc !=nil {_dacc =_ea .TraceToDirectObject (_dacc );_eegd ,_dfbd :=_dacc .(*_ea .PdfObjectArray );if !_dfbd {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _eegd .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_adcg ,_bdebf :=_eegd .GetAsFloat64Slice ();
if _bdebf !=nil {return nil ,_bdebf ;};_afdg .BlackPoint =_adcg ;};_dacc =_gced .Get ("\u0047\u0061\u006dm\u0061");if _dacc !=nil {_dacc =_ea .TraceToDirectObject (_dacc );_bgbg ,_baea :=_ea .GetNumberAsFloat (_dacc );if _baea !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_afdg .Gamma =_bgbg ;};return _afdg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acc *PdfActionNamed )ToPdfObject ()_ea .PdfObject {_acc .PdfAction .ToPdfObject ();_bae :=_acc ._fgc ;_gfd :=_bae .PdfObject .(*_ea .PdfObjectDictionary );_gfd .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeNamed )));_gfd .SetIfNotNil ("\u004e",_acc .N );
return _bae ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gcca *PdfColorDeviceRGB )GetNumComponents ()int {return 3};var _aagea =_dg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// RemovePage removes a page by number.
func (_gcdc *PdfAppender )RemovePage (pageNum int ){_dcaf :=pageNum -1;_gcdc ._efbd =append (_gcdc ._efbd [0:_dcaf ],_gcdc ._efbd [pageNum :]...);};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_bfefa *PdfPage )GetStructParentsKey ()int {if _efgd ,_bgcfd :=_ea .GetIntVal (_bfefa .StructParents );_bgcfd {return _efgd ;};return -1;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cbcbg pdfFontType0 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){if _cbcbg .DescendantFont ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cbcbg );
return _gf .CharMetrics {},false ;};return _cbcbg .DescendantFont .GetRuneMetrics (r );};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_acec *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ccdg :=_af .NewReader (img .getBase ());_edefb :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._abgae ,img ._affe );
_bccd :=_af .NewWriter (_edefb );_eeba :=_dgf .Pow (2,float64 (img .BitsPerComponent ))-1;_agccc :=_acec .GetNumComponents ();_gbecb :=make ([]uint32 ,_agccc );_dada :=make ([]float64 ,_agccc );for {_bfdb :=_ccdg .ReadSamples (_gbecb );if _bfdb ==_cde .EOF {break ;
}else if _bfdb !=nil {return img ,_bfdb ;};for _edfb :=0;_edfb < _agccc ;_edfb ++{_gbbc :=float64 (_gbecb [_edfb ])/_eeba ;_dada [_edfb ]=_gbbc ;};_ffaa ,_bfdb :=_acec .TintTransform .Evaluate (_dada );if _bfdb !=nil {return img ,_bfdb ;};for _ ,_gcebe :=range _ffaa {_gcebe =_dgf .Min (_dgf .Max (0,_gcebe ),1.0);
if _bfdb =_bccd .WriteSample (uint32 (_gcebe *_eeba ));_bfdb !=nil {return img ,_bfdb ;};};};return _acec .AlternateSpace .ImageToRGB (_aefbb (&_edefb ));};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbefe *PdfShadingType2 )ToPdfObject ()_ea .PdfObject {_bbefe .PdfShading .ToPdfObject ();_gcecg ,_acaa :=_bbefe .getShadingDict ();if _acaa !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gcecg ==nil {_ca .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _bbefe .Coords !=nil {_gcecg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bbefe .Coords );
};if _bbefe .Domain !=nil {_gcecg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbefe .Domain );};if _bbefe .Function !=nil {if len (_bbefe .Function )==1{_gcecg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbefe .Function [0].ToPdfObject ());
}else {_adega :=_ea .MakeArray ();for _ ,_efbdd :=range _bbefe .Function {_adega .Append (_efbdd .ToPdfObject ());};_gcecg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adega );};};if _bbefe .Extend !=nil {_gcecg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bbefe .Extend );
};return _bbefe ._feebc ;};

// ToGoTime returns the date in time.Time format.
func (_addeda PdfDate )ToGoTime ()_fg .Time {_bbgge :=int (_addeda ._agfbcf *60*60+_addeda ._dcfcc *60);switch _addeda ._dcfge {case '-':_bbgge =-_bbgge ;case 'Z':_bbgge =0;};_cgfab :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_addeda ._dcfge ,_addeda ._agfbcf ,_addeda ._dcfcc );
_cfdcg :=_fg .FixedZone (_cgfab ,_bbgge );return _fg .Date (int (_addeda ._daae ),_fg .Month (_addeda ._edbcda ),int (_addeda ._ecafe ),int (_addeda ._cdcef ),int (_addeda ._bcddc ),int (_addeda ._eacgg ),0,_cfdcg );};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_fbgga :=PdfPage {};_fbgga ._bbffd =_ea .MakeDict ();_fbgga .Resources =NewPdfPageResources ();_fded :=_ea .PdfIndirectObject {};_fded .PdfObject =_fbgga ._bbffd ;_fbgga ._dfgcd =&_fded ;_fbgga ._gfbe =*_fbgga ._bbffd ;return &_fbgga ;
};func _eefcg (_dceb *_ea .PdfObjectDictionary ,_egge *fontCommon )(*pdfFontType0 ,error ){_ecgbb ,_acbfe :=_ea .GetArray (_dceb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_acbfe {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_egge );
return nil ,_ea .ErrRangeError ;};if _ecgbb .Len ()!=1{_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ecgbb .Len ());return nil ,_ea .ErrRangeError ;
};_bcadc ,_bcfab :=_fagd (_ecgbb .Get (0),false );if _bcfab !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bcfab ,_egge );
return nil ,_bcfab ;};_gbeec :=_dceb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gbbf :="";_aaff :=_bdaf (_egge );_aaff .DescendantFont =_bcadc ;switch _ffbf :=_gbeec .(type ){case *_ea .PdfObjectName :_gbbf ,_acbfe =_ea .GetNameVal (_gbeec );
if _acbfe {if _gbbf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gbbf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_aaff ._dcdd =_ge .NewIdentityTextEncoder (_gbbf );}else if _cge .IsPredefinedCMap (_gbbf ){_aaff ._gaeba ,_bcfab =_cge .LoadPredefinedCMap (_gbbf );
if _bcfab !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gbbf ,_bcfab );
};}else {_ca .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gbbf );};};case *_ea .PdfObjectStream :if _aaff ._cbfe ==nil {_gddbb ,_degf :=_cge .NewCIDSystemInfo (_ffbf .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _degf !=nil {_ca .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_degf );};_dcec :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gddbb .Registry ,_gddbb .Ordering );
if _cge .IsPredefinedCMap (_dcec ){_aaff ._gaeba ,_degf =_cge .LoadPredefinedCMap (_dcec );if _degf !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dcec ,_degf );
};}else {_dcec =_ffbf .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_dbbf ,_ffagd :=_ea .DecodeStream (_ffbf );if _ffagd !=nil {_ca .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_ffagd );
return _aaff ,_ffagd ;};if _bdbab :=_dcec =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_dcec =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_bdbab {_aaff ._gaeba ,_ffagd =_cge .LoadCmapFromData (_dbbf ,_bdbab );
if _ffagd !=nil {_ca .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_ffagd ,string (_dbbf ));
return _aaff ,_ffagd ;};_acga :=make (map[_cge .CharCode ]rune ,256);for _bgfeg :=0x00;_bgfeg <=0xFF;_bgfeg ++{_acga [_cge .CharCode (_bgfeg )]=rune (_bgfeg );};_aaff ._adbfa =_cge .NewToUnicodeCMap (_acga );};};};};if _bdbde :=_bcadc .baseFields ()._adbfa ;
_bdbde !=nil {if _fbdfc :=_bdbde .Name ();_fbdfc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fbdfc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fbdfc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fbdfc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_aaff ._dcdd =_ge .NewCMapEncoder (_gbbf ,_aaff ._gaeba ,_bdbde );
};};return _aaff ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fbabee *PdfPageResources )SetXObjectByName (keyName _ea .PdfObjectName ,stream *_ea .PdfObjectStream )error {if _fbabee .XObject ==nil {_fbabee .XObject =_ea .MakeDict ();};_ecabd :=_ea .TraceToDirectObject (_fbabee .XObject );_febbg ,_aadacg :=_ecabd .(*_ea .PdfObjectDictionary );
if !_aadacg {_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fbabee .XObject ,_ecabd );return _dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_febbg .Set (keyName ,stream );return nil ;};func (_fbcga *PdfReader )flattenFieldsWithOpts (_bbce bool ,_dgdge FieldAppearanceGenerator ,_fead *FieldFlattenOpts )error {if _fead ==nil {_fead =&FieldFlattenOpts {};};var _aegc bool ;_eaacg :=map[*PdfAnnotation ]bool {};
{var _cfab []*PdfField ;_ecgad :=_fbcga .AcroForm ;if _ecgad !=nil {if _fead .FilterFunc !=nil {_cfab =_ecgad .filteredFields (_fead .FilterFunc ,true );_aegc =_ecgad .Fields !=nil &&len (*_ecgad .Fields )> 0;}else {_cfab =_ecgad .AllFields ();};};for _ ,_bagf :=range _cfab {if len (_bagf .Annotations )< 1{_ca .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_bagf .PartialName ());
for _ecdeb ,_cfffd :=range _bagf .Kids {for _ ,_cecdf :=range _cfffd .Annotations {_eaacg [_cecdf .PdfAnnotation ]=_bagf .V !=nil ;if _cfffd .V ==nil {_cfffd .V =_bagf .V ;};if _cfffd .T ==nil {_cfffd .T =_ea .MakeString (_c .Sprintf ("\u0025\u0073\u0023%\u0064",_bagf .PartialName (),_ecdeb ));
};if _dgdge !=nil {_bddgb ,_edaa :=_dgdge .GenerateAppearanceDict (_ecgad ,_cfffd ,_cecdf );if _edaa !=nil {return _edaa ;};_cecdf .AP =_bddgb ;};};};};for _ ,_eada :=range _bagf .Annotations {_eaacg [_eada .PdfAnnotation ]=_bagf .V !=nil ;if _dgdge !=nil {_dgdd ,_acbf :=_dgdge .GenerateAppearanceDict (_ecgad ,_bagf ,_eada );
if _acbf !=nil {return _acbf ;};_eada .AP =_dgdd ;};};};};if _bbce {for _ ,_daeg :=range _fbcga .PageList {_aeb ,_gbgcf :=_daeg .GetAnnotations ();if _gbgcf !=nil {return _gbgcf ;};for _ ,_adbcc :=range _aeb {_eaacg [_adbcc ]=true ;};};};for _ ,_cbbgc :=range _fbcga .PageList {_ccag :=_cbbgc .flattenFieldsWithOpts (_dgdge ,_fead ,_eaacg );
if _ccag !=nil {return _ccag ;};};if !_aegc {_fbcga .AcroForm =nil ;};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbbeg *PdfFunctionType4 )ToPdfObject ()_ea .PdfObject {_cgdf :=_bbbeg ._bgbdb ;if _cgdf ==nil {_bbbeg ._bgbdb =&_ea .PdfObjectStream {};_cgdf =_bbbeg ._bgbdb ;};_fbec :=_ea .MakeDict ();_fbec .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ea .MakeInteger (4));
_dagf :=&_ea .PdfObjectArray {};for _ ,_ecfb :=range _bbbeg .Domain {_dagf .Append (_ea .MakeFloat (_ecfb ));};_fbec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dagf );_bddec :=&_ea .PdfObjectArray {};for _ ,_ffde :=range _bbbeg .Range {_bddec .Append (_ea .MakeFloat (_ffde ));
};_fbec .Set ("\u0052\u0061\u006eg\u0065",_bddec );if _bbbeg ._gdcf ==nil &&_bbbeg .Program !=nil {_bbbeg ._gdcf =[]byte (_bbbeg .Program .String ());};_fbec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_bbbeg ._gdcf ))));
_cgdf .Stream =_bbbeg ._gdcf ;_cgdf .PdfObjectDictionary =_fbec ;return _cgdf ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eggbb *XObjectForm )GetContainingPdfObject ()_ea .PdfObject {return _eggbb ._dgbbc };func (_dddf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_caeg *_ea .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bfbb :=PdfAnnotationFileAttachment {};
_ebaa ,_babfe :=_dddf .newPdfAnnotationMarkupFromDict (_caeg );if _babfe !=nil {return nil ,_babfe ;};_bfbb .PdfAnnotationMarkup =_ebaa ;_bfbb .FS =_caeg .Get ("\u0046\u0053");_bfbb .Name =_caeg .Get ("\u004e\u0061\u006d\u0065");return &_bfbb ,nil ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _ea .PdfObjectName ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eedf *PdfShadingType5 )ToPdfObject ()_ea .PdfObject {_eedf .PdfShading .ToPdfObject ();_caca ,_dfbgb :=_eedf .getShadingDict ();if _dfbgb !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eedf .BitsPerCoordinate !=nil {_caca .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eedf .BitsPerCoordinate );};if _eedf .BitsPerComponent !=nil {_caca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eedf .BitsPerComponent );
};if _eedf .VerticesPerRow !=nil {_caca .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_eedf .VerticesPerRow );};if _eedf .Decode !=nil {_caca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eedf .Decode );};if _eedf .Function !=nil {if len (_eedf .Function )==1{_caca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eedf .Function [0].ToPdfObject ());
}else {_bdcfdc :=_ea .MakeArray ();for _ ,_dgbed :=range _eedf .Function {_bdcfdc .Append (_dgbed .ToPdfObject ());};_caca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdcfdc );};};return _eedf ._feebc ;};func (_cbac *PdfAppender )updateObjectsDeep (_gada _ea .PdfObject ,_cbea map[_ea .PdfObject ]struct{}){if _cbea ==nil {_cbea =map[_ea .PdfObject ]struct{}{};
};if _ ,_bba :=_cbea [_gada ];_bba ||_gada ==nil {return ;};_cbea [_gada ]=struct{}{};_abbb :=_ea .ResolveReferencesDeep (_gada ,_cbac ._deeb );if _abbb !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abbb );};switch _agdf :=_gada .(type ){case *_ea .PdfIndirectObject :switch {case _agdf .GetParser ()==_cbac ._gcaa ._afedg :return ;
case _agdf .GetParser ()==_cbac .Reader ._afedg :_cdfba ,_ :=_cbac ._gcaa .GetIndirectObjectByNumber (int (_agdf .ObjectNumber ));_fgcg ,_dcbg :=_cdfba .(*_ea .PdfIndirectObject );if _dcbg &&_fgcg !=nil {_cbec :=string (_agdf .PdfObject .Write ());if _fgcg .PdfObject !=_agdf .PdfObject &&string (_fgcg .PdfObject .Write ())!=_cbec {if _dgb .Contains (_cbec ,"\u002f\u0053\u0069\u0067")&&_dgb .Contains (_cbec ,"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_cbac .addNewObject (_gada );_cbac ._dea [_gada ]=_agdf .ObjectNumber ;};};default:_cbac .addNewObject (_gada );};_cbac .updateObjectsDeep (_agdf .PdfObject ,_cbea );case *_ea .PdfObjectArray :for _ ,_cbcc :=range _agdf .Elements (){_cbac .updateObjectsDeep (_cbcc ,_cbea );
};case *_ea .PdfObjectDictionary :for _ ,_deed :=range _agdf .Keys (){_cbac .updateObjectsDeep (_agdf .Get (_deed ),_cbea );};case *_ea .PdfObjectStreams :if _agdf .GetParser ()!=_cbac ._gcaa ._afedg {for _ ,_aaa :=range _agdf .Elements (){_cbac .updateObjectsDeep (_aaa ,_cbea );
};};case *_ea .PdfObjectStream :switch {case _agdf .GetParser ()==_cbac ._gcaa ._afedg :return ;case _agdf .GetParser ()==_cbac .Reader ._afedg :if _bedc ,_bebf :=_cbac ._gcaa ._afedg .LookupByReference (_agdf .PdfObjectReference );_bebf ==nil {var _agfbc bool ;
if _defa ,_acb :=_ea .GetStream (_bedc );_acb &&_cb .Equal (_defa .Stream ,_agdf .Stream ){_agfbc =true ;};if _gcdd ,_feef :=_ea .GetDict (_bedc );_agfbc &&_feef {_agfbc =string (_gcdd .Write ())==string (_agdf .PdfObjectDictionary .Write ());};if _agfbc {return ;
};};if _agdf .ObjectNumber !=0{_cbac ._dea [_gada ]=_agdf .ObjectNumber ;};default:if _ ,_adeae :=_cbac ._bagc [_gada ];!_adeae {_cbac .addNewObject (_gada );};};_cbac .updateObjectsDeep (_agdf .PdfObjectDictionary ,_cbea );};};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dgeb *PdfFieldButton )IsPush ()bool {return _dgeb .GetType ()==ButtonTypePush };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cacec *PdfPage )GetAllContentStreams ()(string ,error ){_fdaf ,_fdccb :=_cacec .GetContentStreams ();if _fdccb !=nil {return "",_fdccb ;};return _dgb .Join (_fdaf ,"\u0020"),nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_beacc *PdfReader )Decrypt (password []byte )(bool ,error ){_gcaae ,_bfegc :=_beacc ._afedg .Decrypt (password );if _bfegc !=nil {return false ,_bfegc ;};if !_gcaae {return false ,nil ;};_bfegc =_beacc .loadStructure ();if _bfegc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bfegc );
return false ,_bfegc ;};return true ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_daf :=NewPdfAction ();_fbac :=&PdfActionLaunch {};_fbac .PdfAction =_daf ;_daf .SetContext (_fbac );return _fbac ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_efe :=NewPdfAction ();_cfg :=&PdfActionResetForm {};_cfg .PdfAction =_efe ;_efe .SetContext (_cfg );return _cfg ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fdgge *PdfShadingPatternType2 )ToPdfObject ()_ea .PdfObject {_fdgge .PdfPattern .ToPdfObject ();_bagead :=_fdgge .getDict ();if _fdgge .Shading !=nil {_bagead .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fdgge .Shading .ToPdfObject ());};if _fdgge .Matrix !=nil {_bagead .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fdgge .Matrix );
};if _fdgge .ExtGState !=nil {_bagead .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fdgge .ExtGState );};return _fdgge ._bedae ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ea .PdfObjectStream )(*XObjectForm ,error ){_egfdc :=&XObjectForm {};_egfdc ._dgbbc =stream ;_bfegab :=*(stream .PdfObjectDictionary );_dadfeg ,_fgdag :=_ea .NewEncoderFromStream (stream );if _fgdag !=nil {return nil ,_fgdag ;
};_egfdc .Filter =_dadfeg ;if _ccadd :=_bfegab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ccadd !=nil {_ddggf ,_geebg :=_ccadd .(*_ea .PdfObjectName );if !_geebg {return nil ,_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_ddggf !="\u0046\u006f\u0072\u006d"{_ca .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _ccdfc :=_bfegab .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ccdfc !=nil {_egfdc .FormType =_ccdfc ;};if _abfafg :=_bfegab .Get ("\u0042\u0042\u006f\u0078");_abfafg !=nil {_egfdc .BBox =_abfafg ;};if _cbdb :=_bfegab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_cbdb !=nil {_egfdc .Matrix =_cbdb ;};if _eceb :=_bfegab .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eceb !=nil {_eceb =_ea .TraceToDirectObject (_eceb );_bagac ,_edded :=_eceb .(*_ea .PdfObjectDictionary );if !_edded {_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ea .ErrTypeError ;};_ggag ,_efaee :=NewPdfPageResourcesFromDict (_bagac );if _efaee !=nil {_ca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_efaee ;};_egfdc .Resources =_ggag ;_ca .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_egfdc .Resources );};_egfdc .Group =_bfegab .Get ("\u0047\u0072\u006fu\u0070");
_egfdc .Ref =_bfegab .Get ("\u0052\u0065\u0066");_egfdc .MetaData =_bfegab .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_egfdc .PieceInfo =_bfegab .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_egfdc .LastModified =_bfegab .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_egfdc .StructParent =_bfegab .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_egfdc .StructParents =_bfegab .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_egfdc .OPI =_bfegab .Get ("\u004f\u0050\u0049");
_egfdc .OC =_bfegab .Get ("\u004f\u0043");_egfdc .Name =_bfegab .Get ("\u004e\u0061\u006d\u0065");_egfdc .Stream =stream .Stream ;return _egfdc ,nil ;};

// Encoder returns the font's text encoder.
func (_ccab *PdfFont )Encoder ()_ge .TextEncoder {_gdba :=_ccab .actualFont ();if _gdba ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ccab ._gbee );
return nil ;};return _gdba .Encoder ();};func _afgdga (_eeade *PdfPage )_ea .PdfObject {_bbdgb :=_cda .GetLicenseKey ();if _bbdgb !=nil &&_bbdgb .IsLicensed (){return _eeade .ToPdfObject ();};_eeefd :=_ea .PdfObjectName ("\u0055\u0046\u0031");if !_eeade .Resources .HasFontByName (_eeefd ){_eeade .Resources .SetFontByName (_eeefd ,DefaultFont ().ToPdfObject ());
};var _gbdbfe []string ;_gbdbfe =append (_gbdbfe ,"\u0071");_gbdbfe =append (_gbdbfe ,"\u0042\u0054");_gbdbfe =append (_gbdbfe ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_eeefd .String ()));_gbdbfe =append (_gbdbfe ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_gbdbfe =append (_gbdbfe ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_eggbf :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_gbdbfe =append (_gbdbfe ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_eggbf ));_gbdbfe =append (_gbdbfe ,"\u0045\u0054");_gbdbfe =append (_gbdbfe ,"\u0051");_bfaffc :=_dgb .Join (_gbdbfe ,"\u000a");_eeade .AddContentStreamByString (_bfaffc );
return _eeade .ToPdfObject ();};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_abedc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _abedc ._egfdg .(*PdfTilingPattern );};

// ParsePdfObject parses input pdf object into given output intent.
func (_fgfgb *PdfOutputIntent )ParsePdfObject (object _ea .PdfObject )error {_bfge ,_aceee :=_ea .GetDict (object );if !_aceee {_ca .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _dc .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fgfgb ._eagfc =_bfge ;_fgfgb .Type ,_ =_bfge .GetString ("\u0054\u0079\u0070\u0065");_gccb ,_aceee :=_bfge .GetString ("\u0053");if _aceee {switch _gccb {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fgfgb .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fgfgb .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fgfgb .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fgfgb .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fgfgb .S =PdfOutputIntentTypeX ;
};};_fgfgb .OutputCondition ,_ =_bfge .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fgfgb .OutputConditionIdentifier ,_ =_bfge .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fgfgb .RegistryName ,_ =_bfge .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fgfgb .Info ,_ =_bfge .GetString ("\u0049\u006e\u0066\u006f");if _feeb ,_cgcbe :=_ea .GetStream (_bfge .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_cgcbe {_fgfgb .ColorComponents ,_ =_ea .GetIntVal (_feeb .Get ("\u004e"));_gfcce ,_dabbc :=_ea .DecodeStream (_feeb );if _dabbc !=nil {return _dabbc ;};_fgfgb .DestOutputProfile =_gfcce ;};return nil ;};var (_dcgec _d .Mutex ;_afcdb ="";_cgcgb _fg .Time ;
_ebdd ="";_eecb ="";_cgedb _fg .Time ;_dgcabg ="";_cebfb ="";_afec ="";);

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_edb :=&PdfAppender {_cdcg :reader ._gcddb ,Reader :reader ,_gbge :reader ._afedg ,_deeb :reader ._dgacb };_cgbfc ,_ccga :=_edb ._cdcg .Seek (0,_cde .SeekEnd );if _ccga !=nil {return nil ,_ccga ;
};_edb ._gbca =_cgbfc ;if _ ,_ccga =_edb ._cdcg .Seek (0,_cde .SeekStart );_ccga !=nil {return nil ,_ccga ;};_edb ._gcaa ,_ccga =NewPdfReader (_edb ._cdcg );if _ccga !=nil {return nil ,_ccga ;};for _ ,_ccda :=range _edb .Reader .GetObjectNums (){if _edb ._faac < _ccda {_edb ._faac =_ccda ;
};};_edb ._bcfe =_edb ._gbge .GetXrefTable ();_edb ._gegd =_edb ._gbge .GetXrefOffset ();_edb ._efbd =append (_edb ._efbd ,_edb ._gcaa .PageList ...);_edb ._bagc =make (map[_ea .PdfObject ]struct{});_edb ._dea =make (map[_ea .PdfObject ]int64 );_edb ._dadc =make (map[_ea .PdfObject ]struct{});
_edb ._agd =_edb ._gcaa .AcroForm ;_edb ._ccfg =_edb ._gcaa .DSS ;return _edb ,nil ;};func (_cbfde *pdfFontType3 )baseFields ()*fontCommon {return &_cbfde .fontCommon };

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_eaee *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_beabb *PdfAnnotationMarkup )appendToPdfDictionary (_cebb *_ea .PdfObjectDictionary ){_cebb .SetIfNotNil ("\u0054",_beabb .T );if _beabb .Popup !=nil {_cebb .Set ("\u0050\u006f\u0070u\u0070",_beabb .Popup .ToPdfObject ());
};_cebb .SetIfNotNil ("\u0043\u0041",_beabb .CA );_cebb .SetIfNotNil ("\u0052\u0043",_beabb .RC );_cebb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_beabb .CreationDate );_cebb .SetIfNotNil ("\u0049\u0052\u0054",_beabb .IRT );
_cebb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_beabb .Subj );_cebb .SetIfNotNil ("\u0052\u0054",_beabb .RT );_cebb .SetIfNotNil ("\u0049\u0054",_beabb .IT );_cebb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_beabb .ExData );};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_caafb *Image )GetSamples ()[]uint32 {_aggb :=_af .ResampleBytes (_caafb .Data ,int (_caafb .BitsPerComponent ));if _caafb .BitsPerComponent < 8{_aggb =_caafb .samplesTrimPadding (_aggb );};_faded :=int (_caafb .Width )*int (_caafb .Height )*_caafb .ColorComponents ;
if len (_aggb )< _faded {_ca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_aggb ),_faded );
return _aggb ;}else if len (_aggb )> _faded {_ca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_aggb ),_faded );
_aggb =_aggb [:_faded ];};return _aggb ;};func (_ggdg *PdfReader )newPdfAnnotationMarkupFromDict (_acf *_ea .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_acff :=&PdfAnnotationMarkup {};if _abfa :=_acf .Get ("\u0054");_abfa !=nil {_acff .T =_abfa ;
};if _ggb :=_acf .Get ("\u0050\u006f\u0070u\u0070");_ggb !=nil {_deeg ,_bdgg :=_ggb .(*_ea .PdfIndirectObject );if !_bdgg {if _ ,_cadb :=_ggb .(*_ea .PdfObjectNull );!_cadb {return nil ,_dc .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fca ,_aega :=_ggdg .newPdfAnnotationFromIndirectObject (_deeg );if _aega !=nil {return nil ,_aega ;};if _fca !=nil {_dccc ,_ecec :=_fca ._fcf .(*PdfAnnotationPopup );if !_ecec {return nil ,_dc .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_acff .Popup =_dccc ;};};};if _gafde :=_acf .Get ("\u0043\u0041");_gafde !=nil {_acff .CA =_gafde ;};if _gbe :=_acf .Get ("\u0052\u0043");_gbe !=nil {_acff .RC =_gbe ;};if _adee :=_acf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_adee !=nil {_acff .CreationDate =_adee ;};if _cabc :=_acf .Get ("\u0049\u0052\u0054");_cabc !=nil {_acff .IRT =_cabc ;};if _bcb :=_acf .Get ("\u0053\u0075\u0062\u006a");_bcb !=nil {_acff .Subj =_bcb ;};if _gdcg :=_acf .Get ("\u0052\u0054");_gdcg !=nil {_acff .RT =_gdcg ;
};if _cfee :=_acf .Get ("\u0049\u0054");_cfee !=nil {_acff .IT =_cfee ;};if _fbcb :=_acf .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fbcb !=nil {_acff .ExData =_fbcb ;};return _acff ,nil ;};func _cgcda (_ggfe *_ea .PdfObjectStream )(*PdfFunctionType4 ,error ){_cegde :=&PdfFunctionType4 {};
_cegde ._bgbdb =_ggfe ;_edaf :=_ggfe .PdfObjectDictionary ;_gbegf ,_bcfcd :=_ea .TraceToDirectObject (_edaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ea .PdfObjectArray );if !_bcfcd {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gbegf .Len ()%2!=0{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acgaf ,_ggfc :=_gbegf .ToFloat64Array ();if _ggfc !=nil {return nil ,_ggfc ;};_cegde .Domain =_acgaf ;_gbegf ,_bcfcd =_ea .TraceToDirectObject (_edaf .Get ("\u0052\u0061\u006eg\u0065")).(*_ea .PdfObjectArray );
if _bcfcd {if _gbegf .Len ()< 0||_gbegf .Len ()%2!=0{return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_beae ,_ccec :=_gbegf .ToFloat64Array ();if _ccec !=nil {return nil ,_ccec ;};_cegde .Range =_beae ;
};_dbad ,_ggfc :=_ea .DecodeStream (_ggfe );if _ggfc !=nil {return nil ,_ggfc ;};_cegde ._gdcf =_dbad ;_dbag :=_gc .NewPSParser (_dbad );_gaefc ,_ggfc :=_dbag .Parse ();if _ggfc !=nil {return nil ,_ggfc ;};_cegde .Program =_gaefc ;return _cegde ,nil ;};
func _gbec (_ffag _ea .PdfObject )(*PdfColorspaceLab ,error ){_bbcfce :=NewPdfColorspaceLab ();if _dbcdc ,_geged :=_ffag .(*_ea .PdfIndirectObject );_geged {_bbcfce ._bgabb =_dbcdc ;};_ffag =_ea .TraceToDirectObject (_ffag );_dfbgd ,_dbbd :=_ffag .(*_ea .PdfObjectArray );
if !_dbbd {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dfbgd .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_ffag =_ea .TraceToDirectObject (_dfbgd .Get (0));_eggb ,_dbbd :=_ffag .(*_ea .PdfObjectName );if !_dbbd {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_eggb !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ffag =_ea .TraceToDirectObject (_dfbgd .Get (1));_eecda ,_dbbd :=_ffag .(*_ea .PdfObjectDictionary );
if !_dbbd {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_ffag =_eecda .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_ffag =_ea .TraceToDirectObject (_ffag );_bgef ,_dbbd :=_ffag .(*_ea .PdfObjectArray );if !_dbbd {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _bgef .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_deef ,_edef :=_bgef .GetAsFloat64Slice ();if _edef !=nil {return nil ,_edef ;};_bbcfce .WhitePoint =_deef ;_ffag =_eecda .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ffag !=nil {_ffag =_ea .TraceToDirectObject (_ffag );_fabce ,_gbfbe :=_ffag .(*_ea .PdfObjectArray );
if !_gbfbe {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _fabce .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_cbca ,_ecbb :=_fabce .GetAsFloat64Slice ();if _ecbb !=nil {return nil ,_ecbb ;};_bbcfce .BlackPoint =_cbca ;};_ffag =_eecda .Get ("\u0052\u0061\u006eg\u0065");if _ffag !=nil {_ffag =_ea .TraceToDirectObject (_ffag );_ccbf ,_agdda :=_ffag .(*_ea .PdfObjectArray );
if !_agdda {_ca .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccbf .Len ()!=4{_ca .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_abcfc ,_baaa :=_ccbf .GetAsFloat64Slice ();if _baaa !=nil {return nil ,_baaa ;};_bbcfce .Range =_abcfc ;};return _bbcfce ,nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_aegeg *PdfColorspaceICCBased )GetContainingPdfObject ()_ea .PdfObject {return _aegeg ._bdcda };

// ToPdfObject implements interface PdfModel.
func (_bdf *PdfAnnotationHighlight )ToPdfObject ()_ea .PdfObject {_bdf .PdfAnnotation .ToPdfObject ();_dfbc :=_bdf ._eab ;_gffc :=_dfbc .PdfObject .(*_ea .PdfObjectDictionary );_bdf .PdfAnnotationMarkup .appendToPdfDictionary (_gffc );_gffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gffc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdf .QuadPoints );return _dfbc ;};

// SetNumCopies sets the value of the numCopies.
func (_gebae *ViewerPreferences )SetNumCopies (numCopies int ){_gebae ._cbgea =numCopies };

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gbgd []byte )(_gcffb int ,_bdbb error );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_gedc *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func NewViewerPreferencesFromPdfObject (obj _ea .PdfObject )(*ViewerPreferences ,error ){_acbge :=_ea .ResolveReference (obj );_cdceba ,_febd :=_ea .GetDict (_acbge );if !_febd {return nil ,_c .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgfba :=NewViewerPreferences ();if _cbgff :=_cdceba .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_cbgff !=nil {if _geac ,_afgdeg :=_ea .GetBool (_cbgff );_afgdeg {_dgfba ._ceadc =(*bool )(_geac );};};if _ceggf :=_cdceba .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_ceggf !=nil {if _dfca ,_dbdec :=_ea .GetBool (_ceggf );_dbdec {_dgfba ._bfgeb =(*bool )(_dfca );};};if _cbgb :=_cdceba .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_cbgb !=nil {if _ebdga ,_fecaf :=_ea .GetBool (_cbgb );
_fecaf {_dgfba ._acgcg =(*bool )(_ebdga );};};if _debcc :=_cdceba .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_debcc !=nil {if _bdefe ,_dagga :=_ea .GetBool (_debcc );_dagga {_dgfba ._fedgc =(*bool )(_bdefe );};};if _bdcde :=_cdceba .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_bdcde !=nil {if _becabe ,_cafgb :=_ea .GetBool (_bdcde );_cafgb {_dgfba ._becd =(*bool )(_becabe );};};if _cegdd :=_cdceba .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_cegdd !=nil {if _ggbda ,_cdgf :=_ea .GetBool (_cegdd );
_cdgf {_dgfba ._efadb =(*bool )(_ggbda );};};if _gadf :=_cdceba .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_gadf !=nil {if _abdad ,_aeabd :=_ea .GetName (_gadf );_aeabd {_dgfba ._edegb =NonFullScreenPageMode (*_abdad );
};};if _ebff :=_cdceba .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_ebff !=nil {if _ggbde ,_ddaeb :=_ea .GetName (_ebff );_ddaeb {_dgfba ._dadac =Direction (*_ggbde );};};if _aceef :=_cdceba .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_aceef !=nil {if _cfaa ,_fedfd :=_ea .GetName (_aceef );_fedfd {_dgfba ._fffaeg =PageBoundary (*_cfaa );};};if _bbgeg :=_cdceba .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_bbgeg !=nil {if _fgfff ,_fcag :=_ea .GetName (_bbgeg );_fcag {_dgfba ._bbgad =PageBoundary (*_fgfff );
};};if _gbfcc :=_cdceba .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_gbfcc !=nil {if _gdfed ,_afcd :=_ea .GetName (_gbfcc );_afcd {_dgfba ._ebdf =PageBoundary (*_gdfed );};};if _cbfea :=_cdceba .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_cbfea !=nil {if _adedeef ,_bebfb :=_ea .GetName (_cbfea );_bebfb {_dgfba ._bbgef =PageBoundary (*_adedeef );};};if _geec :=_cdceba .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_geec !=nil {if _dddbc ,_fgbcc :=_ea .GetName (_geec );
_fgbcc {_dgfba ._gbce =PrintScaling (*_dddbc );};};if _cbdcf :=_cdceba .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_cbdcf !=nil {if _bacde ,_fceae :=_ea .GetName (_cbdcf );_fceae {_dgfba ._accbb =Duplex (*_bacde );};};if _cefbcg :=_cdceba .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_cefbcg !=nil {if _gbacae ,_adafb :=_ea .GetBool (_cefbcg );_adafb {_dgfba ._eccg =(*bool )(_gbacae );};};if _cfeca :=_cdceba .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_cfeca !=nil {if _fddbd ,_aeece :=_ea .GetArray (_cfeca );
_aeece {_dgfba ._gcffa =make ([]int ,_fddbd .Len ());for _baadc :=range _dgfba ._gcffa {if _bccfc :=_fddbd .Get (_baadc );_bccfc !=nil {if _agabe ,_eagac :=_ea .GetInt (_bccfc );_eagac {_dgfba ._gcffa [_baadc ]=int (*_agabe );};};};};};if _cfead :=_cdceba .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_cfead !=nil {if _bcgce ,_cbccg :=_ea .GetInt (_cfead );_cbccg {_dgfba ._cbgea =int (*_bcgce );};};return _dgfba ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);func _decbe (_bafge StdFontName )(pdfFontSimple ,error ){_bgbge ,_cfadd :=_gf .NewStdFontByName (_bafge );if !_cfadd {return pdfFontSimple {},ErrFontNotSupported ;};_bfdd :=_aacc (_bgbge );return _bfdd ,nil ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_cgfc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _ea .PdfObject )(*EmbeddedFile ,error ){_dgdg :=_ea .TraceToDirectObject (obj );_gfac ,_cgbe :=_dgdg .(*_ea .PdfObjectDictionary );if !_cgbe {return nil ,_dc .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gdgd :=_ea .TraceToDirectObject (_gfac .Get ("\u0046"));if _gdgd ==nil {return nil ,_dc .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_bfeab ,_cgbe :=_gdgd .(*_ea .PdfObjectStream );
if !_cgbe {return nil ,_dc .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_dddb :=_bfeab .PdfObjectDictionary ;_bafe :=_dddb .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _bafe ==nil {return nil ,_dc .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_bgeed ,_cgbe :=_bafe .(*_ea .PdfObjectDictionary );if !_cgbe {return nil ,_dc .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_cgfcb :="";_fdbg :=_bgeed .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _fdbg !=nil {_cgfcb =_fdbg .(*_ea .PdfObjectString ).Str ();};_fbaea ,_ccbb :=_ea .DecodeStream (_bfeab );if _ccbb !=nil {return nil ,_ccbb ;};_dfba :=&EmbeddedFile {Content :_fbaea ,Hash :_cgfcb };return _dfba ,nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_fdbcg *PdfReader )GetRevisionNumber ()int {return _fdbcg ._afedg .GetRevisionNumber ()};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gcea ,_accb :=_gf .NewStdFontByName (HelveticaName );if !_accb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ecaeg :=_aacc (_gcea );return &PdfFont {_gbee :&_ecaeg };};func (_afcb *PdfField )inherit (_cdbbf func (*PdfField )bool )(bool ,error ){_dgbdd :=map[*PdfField ]bool {};_cbdc :=false ;_ebae :=_afcb ;for _ebae !=nil {if _ ,_fedf :=_dgbdd [_ebae ];_fedf {return false ,_dc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ggaf :=_cdbbf (_ebae );if _ggaf {_cbdc =true ;break ;};_dgbdd [_ebae ]=true ;_ebae =_ebae .Parent ;};return _cbdc ,nil ;};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_ea .MakeDict (),ParentTreeNextKey :0};};

// ToPdfObject converts rectangle to a PDF object.
func (_ggbgb *PdfRectangle )ToPdfObject ()_ea .PdfObject {return _ea .MakeArray (_ea .MakeFloat (_ggbgb .Llx ),_ea .MakeFloat (_ggbgb .Lly ),_ea .MakeFloat (_ggbgb .Urx ),_ea .MakeFloat (_ggbgb .Ury ));};func (_agegd *LTV )buildCertChain (_fbffe ,_cbeeb []*_fgg .Certificate )([]*_fgg .Certificate ,map[string ]*_fgg .Certificate ,error ){_abadb :=map[string ]*_fgg .Certificate {};
for _ ,_agbdda :=range _fbffe {_abadb [_agbdda .Subject .CommonName ]=_agbdda ;};_bcabg :=_fbffe ;for _ ,_gfcac :=range _cbeeb {_dgedb :=_gfcac .Subject .CommonName ;if _ ,_ddcce :=_abadb [_dgedb ];_ddcce {continue ;};_abadb [_dgedb ]=_gfcac ;_bcabg =append (_bcabg ,_gfcac );
};if len (_bcabg )==0{return nil ,nil ,ErrSignNoCertificates ;};var _facaf error ;for _fecfcb :=_bcabg [0];_fecfcb !=nil &&!_agegd .CertClient .IsCA (_fecfcb );{_ccfb ,_cfcgc :=_abadb [_fecfcb .Issuer .CommonName ];if !_cfcgc {if _ccfb ,_facaf =_agegd .CertClient .GetIssuer (_fecfcb );
_facaf !=nil {_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_facaf );
break ;};_abadb [_fecfcb .Issuer .CommonName ]=_ccfb ;_bcabg =append (_bcabg ,_ccfb );};_fecfcb =_ccfb ;};return _bcabg ,_abadb ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gdgec *Image )ToGoImage ()(_ba .Image ,error ){_ca .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_faafb ,_bdad :=_dcc .NewImage (int (_gdgec .Width ),int (_gdgec .Height ),int (_gdgec .BitsPerComponent ),_gdgec .ColorComponents ,_gdgec .Data ,_gdgec ._abgae ,_gdgec ._affe );
if _bdad !=nil {return nil ,_bdad ;};return _faafb ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fagf *PdfFont )ToUnicode ()string {if _fagf .baseFields ()._adbfa ==nil {return "";};return _fagf .baseFields ()._adbfa .Name ();};func _ffedd ()string {_dcgec .Lock ();defer _dcgec .Unlock ();return _afec };

// AddAnnotation appends `annot` to the list of page annotations.
func (_efacd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _efacd ._fcdad ==nil {_efacd .GetAnnotations ();};_efacd ._fcdad =append (_efacd ._fcdad ,annot );};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_gfdgc *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _ea .GetNumberAsFloat (_gfdgc .XHeight );};

// IsSimple returns true if `font` is a simple font.
func (_dccd *PdfFont )IsSimple ()bool {_ ,_adca :=_dccd ._gbee .(*pdfFontSimple );return _adca };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_gadcc *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_gadcc .GetNumComponents (){return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afbc ,_bbgg :=_gadcc .TintTransform .Evaluate (vals );
if _bbgg !=nil {return nil ,_bbgg ;};_cbfg ,_bbgg :=_gadcc .AlternateSpace .ColorFromFloats (_afbc );if _bbgg !=nil {return nil ,_bbgg ;};return _cbfg ,nil ;};func (_gedd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ecbdd :=_gedd .Parent ;
for _ecbdd !=nil {_befaea ,_cdca :=_ea .GetDict (_ecbdd );if !_cdca {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_dc .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _aebc :=_befaea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aebc !=nil {_bdcb ,_ebgdg :=_ea .GetDict (_aebc );if !_ebgdg {return nil ,_dc .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_dacgc ,_aedbd :=NewPdfPageResourcesFromDict (_bdcb );if _aedbd !=nil {return nil ,_aedbd ;};return _dacgc ,nil ;};_ecbdd =_befaea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ede *PdfAnnotationStrikeOut )ToPdfObject ()_ea .PdfObject {_ede .PdfAnnotation .ToPdfObject ();_aff :=_ede ._eab ;_cbbc :=_aff .PdfObject .(*_ea .PdfObjectDictionary );_ede .PdfAnnotationMarkup .appendToPdfDictionary (_cbbc );_cbbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cbbc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ede .QuadPoints );return _aff ;};

// Initialize initializes the PdfSignature.
func (_bggcd *PdfSignature )Initialize ()error {if _bggcd .Handler ==nil {return _dc .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bggcd .Handler .InitSignature (_bggcd );};func (_bdfg *PdfReader )newPdfPageFromDict (_eabdc *_ea .PdfObjectDictionary )(*PdfPage ,error ){_adgdd :=NewPdfPage ();_adgdd ._bbffd =_eabdc ;_adgdd ._gfbe =*_eabdc ;_bacee :=*_eabdc ;_gacbb ,_ffge :=_bacee .Get ("\u0054\u0079\u0070\u0065").(*_ea .PdfObjectName );
if !_ffge {return nil ,_dc .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gacbb !="\u0050\u0061\u0067\u0065"{return nil ,_dc .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _gaec :=_bacee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gaec !=nil {_adgdd .Parent =_gaec ;};if _cgecb :=_bacee .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cgecb !=nil {_dbca ,_cbfba :=_ea .GetString (_cgecb );
if !_cbfba {return nil ,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_efea ,_eecea :=NewPdfDate (_dbca .Str ());if _eecea !=nil {return nil ,_eecea ;};_adgdd .LastModified =&_efea ;};if _eaeec :=_bacee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eaeec !=nil &&!_ea .IsNullObject (_eaeec ){_fabbc ,_ggfcd :=_ea .GetDict (_eaeec );
if !_ggfcd {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eaeec );};var _becb error ;_adgdd .Resources ,_becb =NewPdfPageResourcesFromDict (_fabbc );
if _becb !=nil {return nil ,_becb ;};}else {_becf ,_fdae :=_adgdd .getParentResources ();if _fdae !=nil {return nil ,_fdae ;};if _becf ==nil {_becf =NewPdfPageResources ();};_adgdd .Resources =_becf ;};if _gddad :=_bacee .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gddad !=nil {_edefa ,_begag :=_ea .GetArray (_gddad );if !_begag {return nil ,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gbebb error ;
_adgdd .MediaBox ,_gbebb =NewPdfRectangle (*_edefa );if _gbebb !=nil {return nil ,_gbebb ;};};if _gcdcc :=_bacee .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_gcdcc !=nil {_cfaba ,_cdabf :=_ea .GetArray (_gcdcc );if !_cdabf {return nil ,_dc .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _faedd error ;_adgdd .CropBox ,_faedd =NewPdfRectangle (*_cfaba );if _faedd !=nil {return nil ,_faedd ;};};if _bbfba :=_bacee .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bbfba !=nil {_ebgdc ,_bgabe :=_ea .GetArray (_bbfba );if !_bgabe {return nil ,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ccabd error ;_adgdd .BleedBox ,_ccabd =NewPdfRectangle (*_ebgdc );if _ccabd !=nil {return nil ,_ccabd ;};};if _beaab :=_bacee .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_beaab !=nil {_agcgb ,_cgdbd :=_ea .GetArray (_beaab );if !_cgdbd {return nil ,_dc .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gaeaf error ;_adgdd .TrimBox ,_gaeaf =NewPdfRectangle (*_agcgb );if _gaeaf !=nil {return nil ,_gaeaf ;};};if _ggggf :=_bacee .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_ggggf !=nil {_gfgf ,_effg :=_ea .GetArray (_ggggf );if !_effg {return nil ,_dc .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _dadea error ;_adgdd .ArtBox ,_dadea =NewPdfRectangle (*_gfgf );if _dadea !=nil {return nil ,_dadea ;};};if _fffcb :=_bacee .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fffcb !=nil {_adgdd .BoxColorInfo =_fffcb ;};
if _daceb :=_bacee .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_daceb !=nil {_adgdd .Contents =_daceb ;};if _eabaa :=_bacee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_eabaa !=nil {_efcf ,_adcfe :=_ea .GetNumberAsInt64 (_eabaa );if _adcfe !=nil {return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_adgdd .Rotate =&_efcf ;};if _ecaege :=_bacee .Get ("\u0047\u0072\u006fu\u0070");_ecaege !=nil {_adgdd .Group =_ecaege ;};if _eaacd :=_bacee .Get ("\u0054\u0068\u0075m\u0062");_eaacd !=nil {_adgdd .Thumb =_eaacd ;};if _cbag :=_bacee .Get ("\u0042");_cbag !=nil {_adgdd .B =_cbag ;
};if _agcce :=_bacee .Get ("\u0044\u0075\u0072");_agcce !=nil {_adgdd .Dur =_agcce ;};if _cbefg :=_bacee .Get ("\u0054\u0072\u0061n\u0073");_cbefg !=nil {_adgdd .Trans =_cbefg ;};if _ebafe :=_bacee .Get ("\u0041\u0041");_ebafe !=nil {_adgdd .AA =_ebafe ;
};if _bcaeb :=_bacee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bcaeb !=nil {_adgdd .Metadata =_bcaeb ;};if _eefef :=_bacee .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eefef !=nil {_adgdd .PieceInfo =_eefef ;};if _dcddb :=_bacee .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dcddb !=nil {_adgdd .StructParents =_dcddb ;};if _fgaee :=_bacee .Get ("\u0049\u0044");_fgaee !=nil {_adgdd .ID =_fgaee ;};if _eaceg :=_bacee .Get ("\u0050\u005a");_eaceg !=nil {_adgdd .PZ =_eaceg ;};if _ccgeg :=_bacee .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_ccgeg !=nil {_adgdd .SeparationInfo =_ccgeg ;};if _cbbed :=_bacee .Get ("\u0054\u0061\u0062\u0073");_cbbed !=nil {_adgdd .Tabs =_cbbed ;};if _egdd :=_bacee .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_egdd !=nil {_adgdd .TemplateInstantiated =_egdd ;};if _dddad :=_bacee .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dddad !=nil {_adgdd .PresSteps =_dddad ;};if _dadfe :=_bacee .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dadfe !=nil {_adgdd .UserUnit =_dadfe ;
};if _ffbgeg :=_bacee .Get ("\u0056\u0050");_ffbgeg !=nil {_adgdd .VP =_ffbgeg ;};if _baaee :=_bacee .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_baaee !=nil {_adgdd .Annots =_baaee ;};_adgdd ._fdfg =_bdfg ;return _adgdd ,nil ;};

// SetFitWindow sets the value of the fitWindow flag.
func (_adgda *ViewerPreferences )SetFitWindow (fitWindow bool ){_adgda ._fedgc =&fitWindow };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ea .PdfObject ;IC _ea .PdfObject ;RO _ea .PdfObject ;OverlayText _ea .PdfObject ;Repeat _ea .PdfObject ;DA _ea .PdfObject ;Q _ea .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_cegfd *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aecce ,_ ,_aaeec :=_cegfd .GetContentStreamWithEncoder ();return _aecce ,_aaeec ;};func (_fbaeg *PdfWriter )optimizeDocument ()error {if _fbaeg ._edabfg ==nil {return nil ;};_cecdfe ,_fbdfbc :=_ea .GetDict (_fbaeg ._dcca );
if !_fbdfbc {return _dc .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfccfg :=_cg .Document {ID :[2]string {_fbaeg ._fgac ,_fbaeg ._abbcf },Version :_fbaeg ._cedb ,Objects :_fbaeg ._cgdbdb ,Info :_cecdfe ,Crypt :_fbaeg ._afcgd ,UseHashBasedID :_fbaeg ._abdf };
if _bgbgc :=_fbaeg ._edabfg .ApplyStandard (&_gfccfg );_bgbgc !=nil {return _bgbgc ;};_fbaeg ._fgac ,_fbaeg ._abbcf =_gfccfg .ID [0],_gfccfg .ID [1];_fbaeg ._cedb =_gfccfg .Version ;_fbaeg ._cgdbdb =_gfccfg .Objects ;_fbaeg ._dcca .PdfObject =_gfccfg .Info ;
_fbaeg ._abdf =_gfccfg .UseHashBasedID ;_fbaeg ._afcgd =_gfccfg .Crypt ;_efbecb :=make (map[_ea .PdfObject ]struct{},len (_fbaeg ._cgdbdb ));for _ ,_cgaeb :=range _fbaeg ._cgdbdb {_efbecb [_cgaeb ]=struct{}{};};_fbaeg ._efaca =_efbecb ;return nil ;};

// SetTabOrder sets the tab order for the page.
func (_dcedd *PdfPage )SetTabOrder (order TabOrderType ){_dcedd .Tabs =_ea .MakeName (string (order ))};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _gcggce (_cacb *_ea .PdfObjectDictionary )(*PdfFieldText ,error ){_eabc :=&PdfFieldText {};_eabc .DA ,_ =_ea .GetString (_cacb .Get ("\u0044\u0041"));_eabc .Q ,_ =_ea .GetInt (_cacb .Get ("\u0051"));
_eabc .DS ,_ =_ea .GetString (_cacb .Get ("\u0044\u0053"));_eabc .RV =_cacb .Get ("\u0052\u0056");_eabc .MaxLen ,_ =_ea .GetInt (_cacb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _eabc ,nil ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_dgbda *_ea .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_ea .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_ea .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_ea .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_ea .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_ea .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_ea .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_ea .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_ea .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_ea .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_ea .PdfObjectDictionary ;};func _gfbdd (_dggdc []*_ea .PdfObjectStream )*_ea .PdfObjectArray {if len (_dggdc )==0{return nil ;};_cbafc :=make ([]_ea .PdfObject ,0,len (_dggdc ));for _ ,_gbdc :=range _dggdc {_cbafc =append (_cbafc ,_gbdc );
};return _ea .MakeArray (_cbafc ...);};

// ToPdfObject implements interface PdfModel.
func (_ade *PdfActionGoTo3DView )ToPdfObject ()_ea .PdfObject {_ade .PdfAction .ToPdfObject ();_ggae :=_ade ._fgc ;_beab :=_ggae .PdfObject .(*_ea .PdfObjectDictionary );_beab .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeGoTo3DView )));_beab .SetIfNotNil ("\u0054\u0041",_ade .TA );
_beab .SetIfNotNil ("\u0056",_ade .V );return _ggae ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbee *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbee .UnderlyingCS ==nil {return nil ,_dc .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fbee .UnderlyingCS .ColorFromFloats (vals );};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _ea .PdfObject )(*StructTreeRoot ,error ){_adfbc :=_ea .ResolveReference (obj );_daffg ,_eggcd :=_ea .GetDict (_adfbc );if !_eggcd {return nil ,_c .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_febfc :=&StructTreeRoot {};_febfc ._begdf =_ea .MakeIndirectObject (_ea .MakeDict ());if _gfeff :=_daffg .Get ("\u004b");_gfeff !=nil {_cbgae :=_ea .ResolveReference (_gfeff );_adgcde :=_ea .ResolveReferencesDeep (_cbgae ,nil );if _adgcde !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_adgcde );
};_febfc .K =[]*KDict {};if _cgeed ,_afffd :=_ea .GetArray (_cbgae );_afffd {for _bfdfb :=0;_bfdfb < _cgeed .Len ();_bfdfb ++{_bdddf :=_cgeed .Get (_bfdfb );_gefga ,_agbe :=NewKDictFromPdfObject (_bdddf );if _agbe !=nil {return nil ,_agbe ;};_febfc .K =append (_febfc .K ,_gefga );
};}else {_bgeee ,_dfgbdf :=NewKDictFromPdfObject (_cbgae );if _dfgbdf !=nil {return nil ,_dfgbdf ;};_febfc .K =append (_febfc .K ,_bgeee );};};if _caegd :=_daffg .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_caegd !=nil {_febfc .IDTree =_bbfbe (_caegd );
};if _afdca :=_daffg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");_afdca !=nil {_edabe :=_ea .ResolveReference (_afdca );if _edefec ,_ecdc :=_ea .GetDict (_edabe );_ecdc {_febfc .ParentTree =_edefec ;};};if _adbec :=_daffg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_adbec !=nil {_ ,_bebd :=_ea .GetInt (_adbec );if _bebd {_gecfg ,_fagaa :=_ea .GetNumberAsInt64 (_adbec );if _fagaa !=nil {return nil ,_fagaa ;};_febfc .ParentTreeNextKey =_gecfg ;};};if _bacdg :=_daffg .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");_bacdg !=nil {switch _ccfabe :=_bacdg .(type ){case *_ea .PdfIndirectObject :if _gcagdc ,_acacf :=_ea .GetDict (_ccfabe .PdfObject );
_acacf {_febfc .RoleMap =_gcagdc ;};case *_ea .PdfObjectDictionary :_febfc .RoleMap =_ccfabe ;case *_ea .PdfObjectString :_febfc .RoleMap =_ccfabe ;};};if _babfc :=_daffg .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_babfc !=nil {if _ccgca ,_ecddd :=_ea .GetDict (_babfc );
_ecddd {_febfc .ClassMap =_ccgca ;};};return _febfc ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_agbdg *PdfWriter )SetOptimizer (optimizer Optimizer ){_agbdg ._fgeaf =optimizer };

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ege .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_ea .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_ea .MakeInteger (int64 (permission )),V :_ea .MakeName ("\u0031\u002e\u0032")};
};

// SetMCID sets the MCID for the KValue.
func (_fcgg *KValue )SetMCID (mcid int ){_fcgg .Clear ();_fcgg ._fffff =&mcid };

// ToPdfObject implements interface PdfModel.
func (_bbacfe *PdfTransformParamsDocMDP )ToPdfObject ()_ea .PdfObject {_aebbb :=_ea .MakeDict ();_aebbb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bbacfe .Type );_aebbb .SetIfNotNil ("\u0056",_bbacfe .V );_aebbb .SetIfNotNil ("\u0050",_bbacfe .P );return _aebbb ;
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dabe *PdfShadingPatternType3 )ToPdfObject ()_ea .PdfObject {_dabe .PdfPattern .ToPdfObject ();_gfge :=_dabe .getDict ();if _dabe .Shading !=nil {_gfge .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dabe .Shading .ToPdfObject ());};if _dabe .Matrix !=nil {_gfge .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dabe .Matrix );
};if _dabe .ExtGState !=nil {_gfge .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dabe .ExtGState );};return _dabe ._bedae ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dffa *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_dcabf :=&PdfColorPattern {};_gccd ,_beaf :=objects [len (objects )-1].(*_ea .PdfObjectName );if !_beaf {_ca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_dcabf .PatternName =*_gccd ;if len (objects )> 1{_eefa :=objects [0:len (objects )-1];if _dffa .UnderlyingCS ==nil {_ca .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_dc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bebe ,_eceef :=_dffa .UnderlyingCS .ColorFromPdfObjects (_eefa );if _eceef !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_eceef );
return nil ,_eceef ;};_dcabf .Color =_bebe ;};return _dcabf ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ea .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ccce *_ea .PdfIndirectObject ;};func (_bcebb *PdfWriter )copyObject (_ffcbe _ea .PdfObject ,_aegbe map[_ea .PdfObject ]_ea .PdfObject ,_adbef map[_ea .PdfObject ]struct{},_eacbc bool )_ea .PdfObject {_cgabd :=!_bcebb ._eefcgg &&_adbef !=nil ;
if _agbgg ,_gfaff :=_aegbe [_ffcbe ];_gfaff {if _cgabd &&!_eacbc {delete (_adbef ,_ffcbe );};return _agbgg ;};if _ffcbe ==nil {_gfgbde :=_ea .MakeNull ();return _gfgbde ;};_ccbeb :=_ffcbe ;switch _cdbbe :=_ffcbe .(type ){case *_ea .PdfObjectArray :_gbbfe :=_ea .MakeArray ();
_ccbeb =_gbbfe ;_aegbe [_ffcbe ]=_ccbeb ;for _ ,_caggd :=range _cdbbe .Elements (){_gbbfe .Append (_bcebb .copyObject (_caggd ,_aegbe ,_adbef ,_eacbc ));};case *_ea .PdfObjectStreams :_gacdf :=&_ea .PdfObjectStreams {PdfObjectReference :_cdbbe .PdfObjectReference };
_ccbeb =_gacdf ;_aegbe [_ffcbe ]=_ccbeb ;for _ ,_acddag :=range _cdbbe .Elements (){_gacdf .Append (_bcebb .copyObject (_acddag ,_aegbe ,_adbef ,_eacbc ));};case *_ea .PdfObjectStream :_eggd :=&_ea .PdfObjectStream {Stream :_cdbbe .Stream ,PdfObjectReference :_cdbbe .PdfObjectReference ,Lazy :_cdbbe .Lazy ,TempFile :_cdbbe .TempFile };
_ccbeb =_eggd ;_aegbe [_ffcbe ]=_ccbeb ;_eggd .PdfObjectDictionary =_bcebb .copyObject (_cdbbe .PdfObjectDictionary ,_aegbe ,_adbef ,_eacbc ).(*_ea .PdfObjectDictionary );case *_ea .PdfObjectDictionary :var _ggdbf bool ;if _cgabd &&!_eacbc {if _bdgea ,_ :=_ea .GetNameVal (_cdbbe .Get ("\u0054\u0079\u0070\u0065"));
_bdgea =="\u0050\u0061\u0067\u0065"{_ ,_afege :=_bcebb ._bcgdg [_cdbbe ];_eacbc =!_afege ;_ggdbf =_eacbc ;};};_eggcdb :=_ea .MakeDict ();_ccbeb =_eggcdb ;_aegbe [_ffcbe ]=_ccbeb ;for _ ,_dgggbg :=range _cdbbe .Keys (){_eggcdb .Set (_dgggbg ,_bcebb .copyObject (_cdbbe .Get (_dgggbg ),_aegbe ,_adbef ,_eacbc ));
};if _ggdbf {_ccbeb =_ea .MakeNull ();_eacbc =false ;};case *_ea .PdfIndirectObject :_dbeg :=&_ea .PdfIndirectObject {PdfObjectReference :_cdbbe .PdfObjectReference };_ccbeb =_dbeg ;_aegbe [_ffcbe ]=_ccbeb ;_dbeg .PdfObject =_bcebb .copyObject (_cdbbe .PdfObject ,_aegbe ,_adbef ,_eacbc );
case *_ea .PdfObjectString :_cegddb :=*_cdbbe ;_ccbeb =&_cegddb ;_aegbe [_ffcbe ]=_ccbeb ;case *_ea .PdfObjectName :_afbgag :=*_cdbbe ;_ccbeb =&_afbgag ;_aegbe [_ffcbe ]=_ccbeb ;case *_ea .PdfObjectNull :_ccbeb =_ea .MakeNull ();_aegbe [_ffcbe ]=_ccbeb ;
case *_ea .PdfObjectInteger :_gdbea :=*_cdbbe ;_ccbeb =&_gdbea ;_aegbe [_ffcbe ]=_ccbeb ;case *_ea .PdfObjectReference :_gfdbe :=*_cdbbe ;_ccbeb =&_gfdbe ;_aegbe [_ffcbe ]=_ccbeb ;case *_ea .PdfObjectFloat :_eccaa :=*_cdbbe ;_ccbeb =&_eccaa ;_aegbe [_ffcbe ]=_ccbeb ;
case *_ea .PdfObjectBool :_babb :=*_cdbbe ;_ccbeb =&_babb ;_aegbe [_ffcbe ]=_ccbeb ;case *pdfSignDictionary :_cggc :=&pdfSignDictionary {PdfObjectDictionary :_ea .MakeDict (),_cgcga :_cdbbe ._cgcga ,_ddgae :_cdbbe ._ddgae };_ccbeb =_cggc ;_aegbe [_ffcbe ]=_ccbeb ;
for _ ,_gaeeg :=range _cdbbe .Keys (){_cggc .Set (_gaeeg ,_bcebb .copyObject (_cdbbe .Get (_gaeeg ),_aegbe ,_adbef ,_eacbc ));};default:_ca .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ffcbe );
};if _cgabd &&_eacbc {_adbef [_ffcbe ]=struct{}{};};return _ccbeb ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bgee *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _bbgb (_afbg _ea .PdfObject )(*_ea .PdfObjectDictionary ,*fontCommon ,error ){_aegbc :=&fontCommon {};if _faec ,_bedg :=_afbg .(*_ea .PdfIndirectObject );
_bedg {_aegbc ._gdga =_faec .ObjectNumber ;};_gcac ,_dcedc :=_ea .GetDict (_afbg );if !_dcedc {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afbg );
return nil ,nil ,ErrFontNotSupported ;};_ebac ,_dcedc :=_ea .GetNameVal (_gcac .Get ("\u0054\u0079\u0070\u0065"));if !_dcedc {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _ebac !="\u0046\u006f\u006e\u0074"{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_ebac ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_ea .ErrTypeError ;};_ageb ,_dcedc :=_ea .GetNameVal (_gcac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dcedc {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_aegbc ._dfeb =_ageb ;_eagg ,_dcedc :=_ea .GetNameVal (_gcac .Get ("\u004e\u0061\u006d\u0065"));if _dcedc {_aegbc ._feffc =_eagg ;};_dgfg :=_gcac .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dgfg !=nil {_aegbc ._cbfe =_ea .TraceToDirectObject (_dgfg );
_dade ,_daecg :=_geee (_aegbc ._cbfe ,_aegbc );if _daecg !=nil {return _gcac ,_aegbc ,_daecg ;};_aegbc ._adbfa =_dade ;}else if _ageb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ageb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dgde ,_eebda :=_cge .NewCIDSystemInfo (_gcac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _eebda !=nil {return _gcac ,_aegbc ,_eebda ;};_cfed :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dgde .Registry ,_dgde .Ordering );if _cge .IsPredefinedCMap (_cfed ){_aegbc ._adbfa ,_eebda =_cge .LoadPredefinedCMap (_cfed );
if _eebda !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cfed ,_eebda );
};};};_efaeb :=_gcac .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _efaeb !=nil {_bggfe ,_gdcgf :=_bbdd (_efaeb );if _gdcgf !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdcgf );
return _gcac ,_aegbc ,_gdcgf ;};_aegbc ._eafg =_bggfe ;};if _ageb !="\u0054\u0079\u0070e\u0033"{_edgbe ,_fefb :=_ea .GetNameVal (_gcac .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fefb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gcac ,_aegbc ,ErrRequiredAttributeMissing ;};_aegbc ._ceac =_edgbe ;};return _gcac ,_aegbc ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_geace *PdfWriter )AddPage (page *PdfPage )error {const _caffc ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_edcdd :=_afgdga (page );_ca .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ca .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_edcdd );_bbda ,_aaeed :=_ea .GetIndirect (_edcdd );if !_aaeed {return _dc .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ca .Log .Trace ("\u0025\u0073",_bbda );_ca .Log .Trace ("\u0025\u0073",_bbda .PdfObject );_dfbfea ,_aaeed :=_ea .GetDict (_bbda .PdfObject );if !_aaeed {return _dc .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_agafc ,_aaeed :=_ea .GetName (_dfbfea .Get ("\u0054\u0079\u0070\u0065"));if !_aaeed {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dfbfea .Get ("\u0054\u0079\u0070\u0065"));
};if _agafc .String ()!="\u0050\u0061\u0067\u0065"{return _dc .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bedcd :=[]_ea .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_agea ,_bafdc :=_ea .GetIndirect (_dfbfea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ca .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dfbfea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bafdc );
for _bafdc {_ca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agea );_eceg ,_faab :=_ea .GetDict (_agea .PdfObject );if !_faab {return _dc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_aebfg :=range _bedcd {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aebfg );if _dfbfea .Get (_aebfg )!=nil {_ca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cbgag :=_eceg .Get (_aebfg );_cbgag !=nil {_ca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aebfg );_dfbfea .Set (_aebfg ,_cbgag );};};_agea ,_bafdc =_ea .GetIndirect (_eceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dfbfea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_geace ._ddeac );_bbda .PdfObject =_dfbfea ;_cdddb ,_aaeed :=_ea .GetDict (_geace ._ddeac .PdfObject );if !_aaeed {return _dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cbgge ,_aaeed :=_ea .GetArray (_cdddb .Get ("\u004b\u0069\u0064\u0073"));if !_aaeed {return _dc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_cbgge .Append (_bbda );_geace ._bcgdg [_dfbfea ]=struct{}{};_geace ._fgbeb =append (_geace ._fgbeb ,_bbda );_cffef ,_aaeed :=_ea .GetInt (_cdddb .Get ("\u0043\u006f\u0075n\u0074"));if !_aaeed {return _dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_cffef =*_cffef +1;if page ._fdfg ==nil {_geacg :=_cda .Track (_geace ._edcec ,_caffc ,_geace ._ggegf );if _geacg !=nil {return _geacg ;};}else {_gafgf :=_cda .Track (page ._fdfg ._bcbeg ,_caffc ,page ._fdfg ._bdggc );if _gafgf !=nil {return _gafgf ;
};};_geace .addObject (_bbda );_cdcfgd :=_geace .addObjects (_dfbfea );if _cdcfgd !=nil {return _cdcfgd ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeaa *PdfAnnotationSquare )ToPdfObject ()_ea .PdfObject {_aeaa .PdfAnnotation .ToPdfObject ();_fcg :=_aeaa ._eab ;_fgfb :=_fcg .PdfObject .(*_ea .PdfObjectDictionary );if _aeaa .PdfAnnotationMarkup !=nil {_aeaa .PdfAnnotationMarkup .appendToPdfDictionary (_fgfb );
};_fgfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_fgfb .SetIfNotNil ("\u0042\u0053",_aeaa .BS );_fgfb .SetIfNotNil ("\u0049\u0043",_aeaa .IC );_fgfb .SetIfNotNil ("\u0042\u0045",_aeaa .BE );
_fgfb .SetIfNotNil ("\u0052\u0044",_aeaa .RD );return _fcg ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cabga *PdfPageResources )GetPatternByName (keyName _ea .PdfObjectName )(*PdfPattern ,bool ){if _cabga .Pattern ==nil {return nil ,false ;};_gdccc ,_ddcad :=_ea .TraceToDirectObject (_cabga .Pattern ).(*_ea .PdfObjectDictionary );if !_ddcad {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cabga .Pattern );
return nil ,false ;};if _gagb :=_gdccc .Get (keyName );_gagb !=nil {_dgceec ,_bafbf :=_cfbe (_gagb );if _bafbf !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bafbf );
return nil ,false ;};return _dgceec ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_dfceb *PdfSignatureReference )ToPdfObject ()_ea .PdfObject {_gbbdbg :=_ea .MakeDict ();_gbbdbg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dfceb .Type );_gbbdbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_dfceb .TransformMethod );
_gbbdbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_dfceb .TransformParams );_gbbdbg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_dfceb .Data );_gbbdbg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_dfceb .DigestMethod );
return _gbbdbg ;};func _ffca (_dccfa *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dccfa }};

// Items returns all children outline items.
func (_agda *OutlineItem )Items ()[]*OutlineItem {return _agda .Entries };

// ToInteger convert to an integer format.
func (_befab *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_fgfa :=_dgf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fgfa *_befab .A ()),uint32 (_fgfa *_befab .B ()),uint32 (_fgfa *_befab .C ())};};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_geeea *PdfPageResources )GetXObjectImageByName (keyName _ea .PdfObjectName )(*XObjectImage ,error ){_fgebg ,_feedge :=_geeea .GetXObjectByName (keyName );if _fgebg ==nil {return nil ,nil ;};if _feedge !=XObjectTypeImage {return nil ,_dc .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cefgd ,_gbcgf :=NewXObjectImageFromStream (_fgebg );if _gbcgf !=nil {return nil ,_gbcgf ;};return _cefgd ,nil ;};var (StructureTypeSpan StructureType ="\u0053\u0070\u0061\u006e";StructureTypeQuote StructureType ="\u0051\u0075\u006ft\u0065";StructureTypeNote StructureType ="\u004e\u006f\u0074\u0065";
StructureTypeReference StructureType ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography StructureType ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";StructureTypeCode StructureType ="\u0043\u006f\u0064\u0065";StructureTypeLink StructureType ="\u004c\u0069\u006e\u006b";
StructureTypeAnnot StructureType ="\u0041\u006e\u006eo\u0074";StructureTypeRuby StructureType ="\u0052\u0075\u0062\u0079";StructureTypeWarichu StructureType ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase StructureType ="\u0052\u0042";StructureTypeRubyText StructureType ="\u0052\u0054";
StructureTypeRubyPunctuation StructureType ="\u0052\u0050";StructureTypeWarichuText StructureType ="\u0057\u0054";StructureTypeWarichuPunctuation StructureType ="\u0057\u0050";StructureTypeFigure StructureType ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula StructureType ="\u0046o\u0072\u006d\u0075\u006c\u0061";
StructureTypeForm StructureType ="\u0046\u006f\u0072\u006d";);type fontFile struct{_adebe string ;_egfc string ;_ccabg _ge .SimpleEncoder ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ea .StreamEncoder ;FormType _ea .PdfObject ;BBox _ea .PdfObject ;Matrix _ea .PdfObject ;Resources *PdfPageResources ;Group _ea .PdfObject ;Ref _ea .PdfObject ;MetaData _ea .PdfObject ;PieceInfo _ea .PdfObject ;LastModified _ea .PdfObject ;
StructParent _ea .PdfObject ;StructParents _ea .PdfObject ;OPI _ea .PdfObject ;OC _ea .PdfObject ;Name _ea .PdfObject ;

// Stream data.
Stream []byte ;_dgbbc *_ea .PdfObjectStream ;};func (_fbfb *PdfAppender )replaceObject (_gbbg ,_cgcee _ea .PdfObject ){switch _cbba :=_gbbg .(type ){case *_ea .PdfIndirectObject :_fbfb ._dea [_cgcee ]=_cbba .ObjectNumber ;case *_ea .PdfObjectStream :_fbfb ._dea [_cgcee ]=_cbba .ObjectNumber ;
};};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bgabg *PdfFieldButton )SetType (btype ButtonType ){_geaa :=uint32 (0);if _bgabg .Ff !=nil {_geaa =uint32 (*_bgabg .Ff );};switch btype {case ButtonTypePush :_geaa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_geaa |=FieldFlagRadio .Mask ();
};_bgabg .Ff =_ea .MakeInteger (int64 (_geaa ));};

// GetNumPages returns the number of pages in the document.
func (_acddf *PdfReader )GetNumPages ()(int ,error ){if _acddf ._afedg .GetCrypter ()!=nil &&!_acddf ._afedg .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_acddf ._dfdbf ),nil ;};func _bbfbe (_eaffg _ea .PdfObject )*IDTree {_eaffg =_ea .ResolveReference (_eaffg );_fbaf :=_ea .MakeArray ();_gaceb :=_ea .MakeArray ();_bfeffb :=[]*IDTree {};if _edbd ,_fbagfc :=_ea .GetDict (_eaffg );_fbagfc {if _abfd :=_edbd .Get ("\u004e\u0061\u006de\u0073");
_abfd !=nil {_abfd =_ea .ResolveReference (_abfd );if _eaffd ,_bgfaa :=_ea .GetArray (_abfd );_bgfaa {for _ ,_gbgbb :=range _eaffd .Elements (){_fbaf .Append (_gbgbb );};};};if _ececc :=_edbd .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_ececc !=nil {_ececc =_ea .ResolveReference (_ececc );
if _deffe ,_afddg :=_ea .GetArray (_ececc );_afddg {for _gcba :=0;_gcba < 2;_gcba ++{_gaceb .Append (_deffe .Get (_gcba ));};};};if _eggac :=_edbd .Get ("\u004b\u0069\u0064\u0073");_eggac !=nil {_eggac =_ea .ResolveReference (_eggac );if _fgfbf ,_ccgcg :=_ea .GetArray (_eggac );
_ccgcg {for _ ,_ebfdd :=range _fgfbf .Elements (){_bbaeda :=_bbfbe (_ebfdd );_bfeffb =append (_bfeffb ,_bbaeda );};};};};_dafde :=&IDTree {Names :_fbaf ,Limits :_gaceb };if len (_bfeffb )> 0{_dafde .Kids =_bfeffb ;};return _dafde ;};

// AddOCSPs adds OCSPs to DSS.
func (_cdce *DSS )AddOCSPs (ocsps [][]byte )([]*_ea .PdfObjectStream ,error ){return _cdce .add (&_cdce .OCSPs ,_cdce ._eadbg ,ocsps );};func (_cac *PdfReader )newPdfAnnotationWatermarkFromDict (_bggb *_ea .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gdcd :=PdfAnnotationWatermark {};
_gdcd .FixedPrint =_bggb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gdcd ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_aagfa *PdfField )IsTerminal ()bool {return len (_aagfa .Kids )==0};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// SetPrintArea sets the value of the printArea.
func (_fgaea *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_fgaea ._ebdf =printArea };func (_cfge *PdfAcroForm )fill (_cdeg FieldValueProvider ,_gbaac FieldAppearanceGenerator )error {if _cfge ==nil {return nil ;};_bgac ,_cbbge :=_cdeg .FieldValues ();
if _cbbge !=nil {return _cbbge ;};for _ ,_egef :=range _cfge .AllFields (){_afbcf :=_egef .PartialName ();_bgag ,_ffgc :=_bgac [_afbcf ];if !_ffgc {if _ccabga ,_ddce :=_egef .FullName ();_ddce ==nil {_bgag ,_ffgc =_bgac [_ccabga ];};};if !_ffgc {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_afbcf );
continue ;};if _caacd :=_agbc (_egef ,_bgag );_caacd !=nil {return _caacd ;};if _gbaac ==nil {continue ;};for _ ,_fbagg :=range _egef .Annotations {_eggce ,_ebfccb :=_gbaac .GenerateAppearanceDict (_cfge ,_egef ,_fbagg );if _ebfccb !=nil {return _ebfccb ;
};_fbagg .AP =_eggce ;_fbagg .ToPdfObject ();};};return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bfbbg *PdfReader )CheckAccessRights (password []byte )(bool ,_cag .Permissions ,error ){return _bfbbg ._afedg .CheckAccessRights (password );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcdbc *PdfShadingType4 )ToPdfObject ()_ea .PdfObject {_dcdbc .PdfShading .ToPdfObject ();_fdec ,_fgfgfg :=_dcdbc .getShadingDict ();if _fgfgfg !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dcdbc .BitsPerCoordinate !=nil {_fdec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dcdbc .BitsPerCoordinate );};if _dcdbc .BitsPerComponent !=nil {_fdec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dcdbc .BitsPerComponent );
};if _dcdbc .BitsPerFlag !=nil {_fdec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dcdbc .BitsPerFlag );};if _dcdbc .Decode !=nil {_fdec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dcdbc .Decode );};if _dcdbc .Function !=nil {if len (_dcdbc .Function )==1{_fdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcdbc .Function [0].ToPdfObject ());
}else {_dbcgg :=_ea .MakeArray ();for _ ,_agdec :=range _dcdbc .Function {_dbcgg .Append (_agdec .ToPdfObject ());};_fdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbcgg );};};return _dcdbc ._feebc ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_beabf :=NewPdfAnnotation ();_dge :=&PdfAnnotationHighlight {};_dge .PdfAnnotation =_beabf ;_dge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beabf .SetContext (_dge );return _dge ;};

// StructureType represents a standard structure type in a tagged PDF document.
type StructureType string ;var _daba =false ;func _fcaef (_bggge _ea .PdfObject )(string ,error ){_bggge =_ea .TraceToDirectObject (_bggge );switch _dccda :=_bggge .(type ){case *_ea .PdfObjectString :return _dccda .Str (),nil ;case *_ea .PdfObjectStream :_dfeg ,_cegge :=_ea .DecodeStream (_dccda );
if _cegge !=nil {return "",_cegge ;};return string (_dfeg ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bggge );
};func (_gebcc *PdfReader )newPdfSignatureFromIndirect (_ffeff *_ea .PdfIndirectObject )(*PdfSignature ,error ){_cdfcg ,_eabfa :=_ffeff .PdfObject .(*_ea .PdfObjectDictionary );if !_eabfa {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cdeae ,_gbbdb :=_gebcc ._aebcf .GetModelFromPrimitive (_ffeff ).(*PdfSignature );_gbbdb {return _cdeae ,nil ;};_dddaf :=&PdfSignature {};_dddaf ._eedgc =_ffeff ;_dddaf .Type ,_ =_ea .GetName (_cdfcg .Get ("\u0054\u0079\u0070\u0065"));
_dddaf .Filter ,_eabfa =_ea .GetName (_cdfcg .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_eabfa {_ca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dddaf .SubFilter ,_ =_ea .GetName (_cdfcg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_dddaf .Contents ,_eabfa =_ea .GetString (_cdfcg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_eabfa {_ca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _gbgfaa ,_dfedc :=_ea .GetArray (_cdfcg .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_dfedc {_dddaf .Reference =_ea .MakeArray ();for _ ,_afbaad :=range _gbgfaa .Elements (){_agcac ,_bebbg :=_ea .GetDict (_afbaad );
if !_bebbg {_ca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_bccc ,_dcgdd :=_gebcc .newPdfSignatureReferenceFromDict (_agcac );if _dcgdd !=nil {return nil ,_dcgdd ;};_dddaf .Reference .Append (_bccc .ToPdfObject ());};};_dddaf .Cert =_cdfcg .Get ("\u0043\u0065\u0072\u0074");_dddaf .ByteRange ,_ =_ea .GetArray (_cdfcg .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_dddaf .Changes ,_ =_ea .GetArray (_cdfcg .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_dddaf .Name ,_ =_ea .GetString (_cdfcg .Get ("\u004e\u0061\u006d\u0065"));_dddaf .M ,_ =_ea .GetString (_cdfcg .Get ("\u004d"));_dddaf .Location ,_ =_ea .GetString (_cdfcg .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_dddaf .Reason ,_ =_ea .GetString (_cdfcg .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_dddaf .ContactInfo ,_ =_ea .GetString (_cdfcg .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_dddaf .R ,_ =_ea .GetInt (_cdfcg .Get ("\u0052"));
_dddaf .V ,_ =_ea .GetInt (_cdfcg .Get ("\u0056"));_dddaf .PropBuild ,_ =_ea .GetDict (_cdfcg .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_dddaf .PropAuthTime ,_ =_ea .GetInt (_cdfcg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_dddaf .PropAuthType ,_ =_ea .GetName (_cdfcg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_gebcc ._aebcf .Register (_ffeff ,_dddaf );return _dddaf ,nil ;};func (_acfb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fcec *_ea .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bged :=PdfAnnotationPrinterMark {};
_bged .MN =_fcec .Get ("\u004d\u004e");return &_bged ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dgbg *PdfFieldButton )IsCheckbox ()bool {return _dgbg .GetType ()==ButtonTypeCheckbox };func (_cgdc *Image )samplesTrimPadding (_gdcec []uint32 )[]uint32 {_ebacf :=_cgdc .ColorComponents *int (_cgdc .Width )*int (_cgdc .Height );if len (_gdcec )==_ebacf {return _gdcec ;
};_dbbgg :=make ([]uint32 ,_ebacf );_ddcab :=int (_cgdc .Width )*_cgdc .ColorComponents ;var _dfbfe ,_aecc ,_bfggf ,_cbaa int ;_ddbgb :=_dcc .BytesPerLine (int (_cgdc .Width ),int (_cgdc .BitsPerComponent ),_cgdc .ColorComponents );for _dfbfe =0;_dfbfe < int (_cgdc .Height );
_dfbfe ++{_aecc =_dfbfe *int (_cgdc .Width );_bfggf =_dfbfe *_ddbgb ;for _cbaa =0;_cbaa < _ddcab ;_cbaa ++{_dbbgg [_aecc +_cbaa ]=_gdcec [_bfggf +_cbaa ];};};return _dbbgg ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_fgdc _ea .ParserMetadata ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_bacd :=&PdfOutlineItem {_geeed :_ea .MakeIndirectObject (_ea .MakeDict ())};_bacd ._bdddb =_bacd ;return _bacd ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_agcgf *PdfOutline )GetContainingPdfObject ()_ea .PdfObject {return _agcgf ._fffae };func _gggcg (_dgcb *_ea .PdfObjectDictionary )(*PdfShadingType3 ,error ){_accec :=PdfShadingType3 {};_cgbde :=_dgcb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _cgbde ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_eaegfb ,_geefb :=_cgbde .(*_ea .PdfObjectArray );if !_geefb {_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgbde );return nil ,_ea .ErrTypeError ;
};if _eaegfb .Len ()!=6{_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eaegfb .Len ());return nil ,ErrInvalidAttribute ;};_accec .Coords =_eaegfb ;
if _acdda :=_dgcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_acdda !=nil {_acdda =_ea .TraceToDirectObject (_acdda );_abffa ,_dcbc :=_acdda .(*_ea .PdfObjectArray );if !_dcbc {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acdda );
return nil ,_ea .ErrTypeError ;};_accec .Domain =_abffa ;};_cgbde =_dgcb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgbde ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_accec .Function =[]PdfFunction {};if _affgagb ,_ffefd :=_cgbde .(*_ea .PdfObjectArray );_ffefd {for _ ,_abadba :=range _affgagb .Elements (){_fbbdd ,_gaccd :=_ebcdc (_abadba );if _gaccd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaccd );
return nil ,_gaccd ;};_accec .Function =append (_accec .Function ,_fbbdd );};}else {_acddg ,_eddgd :=_ebcdc (_cgbde );if _eddgd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eddgd );
return nil ,_eddgd ;};_accec .Function =append (_accec .Function ,_acddg );};if _deaed :=_dgcb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_deaed !=nil {_deaed =_ea .TraceToDirectObject (_deaed );_babda ,_edbcd :=_deaed .(*_ea .PdfObjectArray );if !_edbcd {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_deaed );
return nil ,_ea .ErrTypeError ;};if _babda .Len ()!=2{_ca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_babda .Len ());return nil ,ErrInvalidAttribute ;
};_accec .Extend =_babda ;};return &_accec ,nil ;};func _ddgg (_edfe *PdfField )[]*PdfField {_agcad :=[]*PdfField {_edfe };for _ ,_faeec :=range _edfe .Kids {_agcad =append (_agcad ,_ddgg (_faeec )...);};return _agcad ;};func (_feee *PdfReader )newPdfActionImportDataFromDict (_ecc *_ea .PdfObjectDictionary )(*PdfActionImportData ,error ){_febf ,_bdg :=_cfgb (_ecc .Get ("\u0046"));
if _bdg !=nil {return nil ,_bdg ;};return &PdfActionImportData {F :_febf },nil ;};func _adeea (_gccfb *_ea .PdfObjectDictionary )(*PdfShadingType5 ,error ){_bfgcd :=PdfShadingType5 {};_ecaf :=_gccfb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ecaf ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aedfd ,_cbgfea :=_ecaf .(*_ea .PdfObjectInteger );if !_cbgfea {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecaf );
return nil ,_ea .ErrTypeError ;};_bfgcd .BitsPerCoordinate =_aedfd ;_ecaf =_gccfb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ecaf ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aedfd ,_cbgfea =_ecaf .(*_ea .PdfObjectInteger );if !_cbgfea {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ecaf );
return nil ,_ea .ErrTypeError ;};_bfgcd .BitsPerComponent =_aedfd ;_ecaf =_gccfb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ecaf ==nil {_ca .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_aedfd ,_cbgfea =_ecaf .(*_ea .PdfObjectInteger );if !_cbgfea {_ca .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ecaf );
return nil ,_ea .ErrTypeError ;};_bfgcd .VerticesPerRow =_aedfd ;_ecaf =_gccfb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ecaf ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eeefe ,_cbgfea :=_ecaf .(*_ea .PdfObjectArray );if !_cbgfea {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecaf );
return nil ,_ea .ErrTypeError ;};_bfgcd .Decode =_eeefe ;if _gfab :=_gccfb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gfab !=nil {_bfgcd .Function =[]PdfFunction {};if _dagff ,_cebf :=_gfab .(*_ea .PdfObjectArray );_cebf {for _ ,_ccaea :=range _dagff .Elements (){_gece ,_cccd :=_ebcdc (_ccaea );
if _cccd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cccd );return nil ,_cccd ;};_bfgcd .Function =append (_bfgcd .Function ,_gece );
};}else {_dgccb ,_begd :=_ebcdc (_gfab );if _begd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_begd );return nil ,_begd ;};
_bfgcd .Function =append (_bfgcd .Function ,_dgccb );};};return &_bfgcd ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bgfaf *PdfOutlineItem )ToPdfObject ()_ea .PdfObject {_ecadd :=_bgfaf ._geeed ;_aabfg :=_ecadd .PdfObject .(*_ea .PdfObjectDictionary );_aabfg .Set ("\u0054\u0069\u0074l\u0065",_bgfaf .Title );if _bgfaf .A !=nil {_aabfg .Set ("\u0041",_bgfaf .A );
};if _fbagb :=_aabfg .Get ("\u0053\u0045");_fbagb !=nil {_aabfg .Remove ("\u0053\u0045");};if _bgfaf .C !=nil {_aabfg .Set ("\u0043",_bgfaf .C );};if _bgfaf .Dest !=nil {_aabfg .Set ("\u0044\u0065\u0073\u0074",_bgfaf .Dest );};if _bgfaf .F !=nil {_aabfg .Set ("\u0046",_bgfaf .F );
};if _bgfaf .Count !=nil {_aabfg .Set ("\u0043\u006f\u0075n\u0074",_ea .MakeInteger (*_bgfaf .Count ));};if _bgfaf .Next !=nil {_aabfg .Set ("\u004e\u0065\u0078\u0074",_bgfaf .Next .ToPdfObject ());};if _bgfaf .First !=nil {_aabfg .Set ("\u0046\u0069\u0072s\u0074",_bgfaf .First .ToPdfObject ());
};if _bgfaf .Prev !=nil {_aabfg .Set ("\u0050\u0072\u0065\u0076",_bgfaf .Prev .GetContext ().GetContainingPdfObject ());};if _bgfaf .Last !=nil {_aabfg .Set ("\u004c\u0061\u0073\u0074",_bgfaf .Last .GetContext ().GetContainingPdfObject ());};if _bgfaf .Parent !=nil {_aabfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgfaf .Parent .GetContext ().GetContainingPdfObject ());
};return _ecadd ;};

// Direction represents the predominant reading order for text.
type Direction string ;func (_febaa *PdfSignature )extractChainFromPKCS7 ()([]*_fgg .Certificate ,error ){_deefg ,_bebcb :=_gga .Parse (_febaa .Contents .Bytes ());if _bebcb !=nil {return nil ,_bebcb ;};return _deefg .Certificates ,nil ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_eefd *MultipleFontEncoder )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){_fgaad :=_eefd .CurrentFont ;_eaab ,_egcf :=_fgaad .GetRuneMetrics (r );for _afgde :=1;_afgde < len (_eefd ._fgee )&&_eaab .Wx ==0;_afgde ++{_fgaad =_eefd ._fgee [_afgde ];
_eaab ,_egcf =_fgaad .GetRuneMetrics (r );};return _eaab ,_egcf ;};var (ErrRequiredAttributeMissing =_dc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_dc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gebg =_dc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_dc .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_dc .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_cf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ea .ErrNotSupported );ErrType1CFontNotSupported =_cf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ea .ErrNotSupported );
ErrType3FontNotSupported =_cf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ea .ErrNotSupported );
ErrTTCmapNotSupported =_cf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ea .ErrNotSupported );
ErrSignNotEnoughSpace =_cf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_cf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_dgebg *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_dgebg ._cedb .Major ,_dgebg ._cedb .Minor );
};func _dbe (_aggc _ea .PdfObject )(*PdfColorspaceCalRGB ,error ){_afdc :=NewPdfColorspaceCalRGB ();if _dacge ,_dfdc :=_aggc .(*_ea .PdfIndirectObject );_dfdc {_afdc ._gcdg =_dacge ;};_aggc =_ea .TraceToDirectObject (_aggc );_gdad ,_bddf :=_aggc .(*_ea .PdfObjectArray );
if !_bddf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdad .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_aggc =_ea .TraceToDirectObject (_gdad .Get (0));_aeff ,_bddf :=_aggc .(*_ea .PdfObjectName );if !_bddf {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_aeff !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aggc =_ea .TraceToDirectObject (_gdad .Get (1));
_babfa ,_bddf :=_aggc .(*_ea .PdfObjectDictionary );if !_bddf {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_aggc =_babfa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aggc =_ea .TraceToDirectObject (_aggc );_gaae ,_bddf :=_aggc .(*_ea .PdfObjectArray );if !_bddf {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _gaae .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_afad ,_fade :=_gaae .GetAsFloat64Slice ();
if _fade !=nil {return nil ,_fade ;};_afdc .WhitePoint =_afad ;_aggc =_babfa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aggc !=nil {_aggc =_ea .TraceToDirectObject (_aggc );_bace ,_eagc :=_aggc .(*_ea .PdfObjectArray );if !_eagc {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _bace .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bgfe ,_eede :=_bace .GetAsFloat64Slice ();
if _eede !=nil {return nil ,_eede ;};_afdc .BlackPoint =_bgfe ;};_aggc =_babfa .Get ("\u0047\u0061\u006dm\u0061");if _aggc !=nil {_aggc =_ea .TraceToDirectObject (_aggc );_cbfa ,_egff :=_aggc .(*_ea .PdfObjectArray );if !_egff {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _cbfa .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_ecgc ,_ggfdg :=_cbfa .GetAsFloat64Slice ();if _ggfdg !=nil {return nil ,_ggfdg ;
};_afdc .Gamma =_ecgc ;};_aggc =_babfa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _aggc !=nil {_aggc =_ea .TraceToDirectObject (_aggc );_cfbd ,_ddda :=_aggc .(*_ea .PdfObjectArray );if !_ddda {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _cfbd .Len ()!=9{_ca .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cfbd .String ());return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_edcfc ,_dgaag :=_cfbd .GetAsFloat64Slice ();if _dgaag !=nil {return nil ,_dgaag ;};_afdc .Matrix =_edcfc ;};return _afdc ,nil ;};

// GetCerts returns the signature certificate chain.
func (_acedg *PdfSignature )GetCerts ()([]*_fgg .Certificate ,error ){var _caag []func ()([]*_fgg .Certificate ,error );switch _adcbe ,_ :=_ea .GetNameVal (_acedg .SubFilter );_adcbe {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_caag =append (_caag ,_acedg .extractChainFromPKCS7 ,_acedg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_caag =append (_caag ,_acedg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_caag =append (_caag ,_acedg .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_adcbe );};for _ ,_cdceg :=range _caag {_bddcb ,_cddcba :=_cdceg ();if _cddcba !=nil {return nil ,_cddcba ;
};if len (_bddcb )> 0{return _bddcb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// Subtype returns the font's "Subtype" field.
func (_ebfcc *PdfFont )Subtype ()string {_faea :=_ebfcc .baseFields ()._dfeb ;if _dagee ,_bdbg :=_ebfcc ._gbee .(*pdfFontType0 );_bdbg {_faea =_faea +"\u003a"+_dagee .DescendantFont .Subtype ();};return _faea ;};func (_cccdc *PdfWriter )addObject (_gbecbg _ea .PdfObject )bool {_dccbg :=_cccdc .hasObject (_gbecbg );
if !_dccbg {_bbad :=_ea .ResolveReferencesDeep (_gbecbg ,_cccdc ._eedfe );if _bbad !=nil {_ca .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bbad );};_cccdc ._cgdbdb =append (_cccdc ._cgdbdb ,_gbecbg );
_cccdc ._efaca [_gbecbg ]=struct{}{};return true ;};return false ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cccef *PdfReader )PageFromIndirectObject (ind *_ea .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cccef .PageList )!=len (_cccef ._dfdbf ){return nil ,0,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _edae ,_gcfc :=range _cccef ._dfdbf {if _gcfc ==ind {return _cccef .PageList [_edae ],_edae +1,nil ;};};return nil ,0,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_bfde *PdfFilespec )getDict ()*_ea .PdfObjectDictionary {if _faeb ,_cacd :=_bfde ._cbgg .(*_ea .PdfIndirectObject );
_cacd {_cafe ,_aaab :=_faeb .PdfObject .(*_ea .PdfObjectDictionary );if !_aaab {return nil ;};return _cafe ;}else if _eddb ,_fdab :=_bfde ._cbgg .(*_ea .PdfObjectDictionary );_fdab {return _eddb ;}else {_ca .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_bfde ._cbgg );
return nil ;};};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ddege *XObjectForm )SetContentStream (content []byte ,encoder _ea .StreamEncoder )error {_ffbeb :=content ;if encoder ==nil {if _ddege .Filter !=nil {encoder =_ddege .Filter ;}else {encoder =_ea .NewRawEncoder ();};};_gbga ,_bfbec :=encoder .EncodeBytes (_ffbeb );
if _bfbec !=nil {return _bfbec ;};_ffbeb =_gbga ;_ddege .Stream =_ffbeb ;_ddege .Filter =encoder ;return nil ;};func _gcec (_ebbgg _ea .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ca .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_ebbgg .String (),_ebbgg );
_dece :=NewPdfColorspaceSpecialPattern ();if _dcgf ,_ebgd :=_ebbgg .(*_ea .PdfIndirectObject );_ebgd {_dece ._fddbf =_dcgf ;};_ebbgg =_ea .TraceToDirectObject (_ebbgg );if _adge ,_bbba :=_ebbgg .(*_ea .PdfObjectName );_bbba {if *_adge !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dece ,nil ;};_bdfcb ,_ggccd :=_ebbgg .(*_ea .PdfObjectArray );if !_ggccd {_ca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_ebbgg );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bdfcb .Len ()!=1&&_bdfcb .Len ()!=2{_ca .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bdfcb );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_ebbgg =_bdfcb .Get (0);if _bgfc ,_ddcc :=_ebbgg .(*_ea .PdfObjectName );_ddcc {if *_bgfc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ca .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bgfc );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bdfcb .Len ()> 1{_ebbgg =_bdfcb .Get (1);_ebbgg =_ea .TraceToDirectObject (_ebbgg );_afce ,_fgbb :=NewPdfColorspaceFromPdfObject (_ebbgg );if _fgbb !=nil {return nil ,_fgbb ;
};_dece .UnderlyingCS =_afce ;};_ca .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dece .UnderlyingCS );
return _dece ,nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cdcb *Image )ColorAt (x ,y int )(_bb .Color ,error ){_dabdc :=_dcc .BytesPerLine (int (_cdcb .Width ),int (_cdcb .BitsPerComponent ),_cdcb .ColorComponents );switch _cdcb .ColorComponents {case 1:return _dcc .ColorAtGrayscale (x ,y ,int (_cdcb .BitsPerComponent ),_dabdc ,_cdcb .Data ,_cdcb ._affe );
case 3:return _dcc .ColorAtNRGBA (x ,y ,int (_cdcb .Width ),_dabdc ,int (_cdcb .BitsPerComponent ),_cdcb .Data ,_cdcb ._abgae ,_cdcb ._affe );case 4:return _dcc .ColorAtCMYK (x ,y ,int (_cdcb .Width ),_cdcb .Data ,_cdcb ._affe );};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdcb .ColorComponents ,_cdcb .BitsPerComponent );
return nil ,_dc .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fgbg :=PdfColorLab {l ,a ,b };return &_fgbg };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ea .PdfObjectInteger ;BitsPerComponent *_ea .PdfObjectInteger ;BitsPerFlag *_ea .PdfObjectInteger ;Decode *_ea .PdfObjectArray ;Function []PdfFunction ;};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_eddag *ViewerPreferences )IsHideMenubar ()bool {if _eddag ._bfgeb ==nil {return false ;};return *_eddag ._bfgeb ;};func (_dgbb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_fbbbe *pdfFontSimple )addEncoding ()error {var (_dafgc string ;
_bbfd map[_ge .CharCode ]_ge .GlyphName ;_ecac _ge .SimpleEncoder ;);if _fbbbe .Encoder ()!=nil {_fbdea ,_gdcdg :=_fbbbe .Encoder ().(_ge .SimpleEncoder );if _gdcdg &&_fbdea !=nil {_dafgc =_fbdea .BaseName ();};};if _fbbbe .Encoding !=nil {_afca ,_deceb ,_ggaa :=_fbbbe .getFontEncoding ();
if _ggaa !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbbbe ._ceac ,_fbbbe ._dfeb ,_fbbbe .Encoding ,_fbbbe .Encoding ,_ggaa );
return _ggaa ;};if _afca !=""{_dafgc =_afca ;};_bbfd =_deceb ;_ecac ,_ggaa =_ge .NewSimpleTextEncoder (_dafgc ,_bbfd );if _ggaa !=nil {return _ggaa ;};};if _ecac ==nil {_begc :=_fbbbe ._eafg ;if _begc !=nil {switch _fbbbe ._dfeb {case "\u0054\u0079\u0070e\u0031":if _begc .fontFile !=nil &&_begc .fontFile ._ccabg !=nil {_ca .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ecac =_begc .fontFile ._ccabg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _begc ._dfafc !=nil {_ca .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dcbd ,_fcacea :=_begc ._dfafc .MakeEncoder ();
if _fcacea ==nil {_ecac =_dcbd ;};if _fbbbe ._adbfa ==nil {_fbbbe ._adbfa =_begc ._dfafc .MakeToUnicode ();};};};};};if _ecac !=nil {if _bbfd !=nil {_ca .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbfd ,_fbbbe .baseFields ());
_ecac =_ge .ApplyDifferences (_ecac ,_bbfd );};_fbbbe .SetEncoder (_ecac );};return nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// Mask returns the uin32 bitmask for the specific flag.
func (_bddd FieldFlag )Mask ()uint32 {return uint32 (_bddd )};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_gdcaa *_ea .PdfObjectDictionary ;Type *_ea .PdfObjectName ;TransformMethod *_ea .PdfObjectName ;TransformParams _ea .PdfObject ;Data _ea .PdfObject ;DigestMethod *_ea .PdfObjectName ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};func (_afadff *PdfPage )generateImage (_afgeb string ,_fdaed float64 ,_ddbgg string ,_cgedf _bb .Color )([]byte ,error ){_ggdgf ,_fadgf ,_eeag ,_ :=_cgedf .RGBA ();_cgabc :=_bb .RGBA {uint8 (_ggdgf >>8),uint8 (_fadgf >>8),uint8 (_eeag >>8),255};
_aegfa :=_bb .RGBA {0xff,0xff,0xff,0x00};_eefeca ,_cbbbd :=_afadff .loadFont (_ddbgg );if _cbbbd !=nil {return nil ,_cbbbd ;};_gceg :=_dgb .Replace (_afgeb ,"\u0009","\u0020\u0020\u0020\u0020",-1);_edceg :=_dgb .Split (_gceg ,"\u000a");_eabgd :=1.0;for _ ,_fgbc :=range _edceg {if float64 (len (_fgbc ))*_fdaed > _eabgd {_eabgd =float64 (len (_fgbc ))*_fdaed ;
};};if _eabgd > _afadff .MediaBox .Width (){_eabgd =_afadff .MediaBox .Width ();};_gaaf :=_ba .NewUniform (_cgabc );_dcgda :=_ba .NewUniform (_aegfa );_dceee :=_ba .NewRGBA (_ba .Rect (0,0,int (_eabgd ),int (_fdaed *1.5*float64 (len (_edceg )))));_g .Draw (_dceee ,_dceee .Bounds (),_dcgda ,_ba .Pt (0,0),_g .Src );
_befc :=_gbb .NewContext ();_befc .SetDPI (72);_befc .SetFont (_eefeca );_befc .SetFontSize (_fdaed );_befc .SetHinting (_cdb .HintingNone );_befc .SetClip (_dceee .Bounds ());_befc .SetDst (_dceee );_befc .SetSrc (_gaaf );_cdgaba :=50;_aabce :=10+int (_befc .PointToFixed (_fdaed )>>6);
_dfda :=_gbb .Pt (_cdgaba ,_aabce );for _ ,_ccgg :=range _edceg {_ ,_cbbbd =_befc .DrawString (_dgb .Replace (_ccgg ,"\u000d","",-1),_dfda );if _cbbbd !=nil {return nil ,_cbbbd ;};_dfda .Y +=_befc .PointToFixed (_fdaed *1.5);};_defb :=new (_cb .Buffer );
if _ecade :=_ee .Encode (_defb ,_dceee );_ecade !=nil {return nil ,_ecade ;};return _defb .Bytes (),nil ;};

// PrintClip returns the value of the printClip.
func (_facb *ViewerPreferences )PrintClip ()PageBoundary {return _facb ._bbgef };func (_afadf *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _daefa []*PdfFieldSignature ;for _ ,_cddb :=range _afadf .AllFields (){switch _bdacf :=_cddb .GetContext ().(type ){case *PdfFieldSignature :_ffaac :=_bdacf ;
_daefa =append (_daefa ,_ffaac );};};return _daefa ;};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_geb :=NewPdfAction ();_cade :=&PdfActionRendition {};_cade .PdfAction =_geb ;_geb .SetContext (_cade );return _cade ;};

// GetVersion gets the document version.
func (_dagfgf *PdfWriter )GetVersion ()_ea .Version {return _dagfgf ._cedb };

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _bb .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};

// SetReason sets the `Reason` field of the signature.
func (_dacgeb *PdfSignature )SetReason (reason string ){_dacgeb .Reason =_ea .MakeEncodedString (reason ,true );};func (_egbe *PdfSignature )extractChainFromCert ()([]*_fgg .Certificate ,error ){var _gebe *_ea .PdfObjectArray ;switch _faaec :=_egbe .Cert .(type ){case *_ea .PdfObjectString :_gebe =_ea .MakeArray (_faaec );
case *_ea .PdfObjectArray :_gebe =_faaec ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_faaec );
};var _abddc _cb .Buffer ;for _ ,_fdggd :=range _gebe .Elements (){_acefc ,_abfaf :=_ea .GetString (_fdggd );if !_abfaf {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fdggd );
};if _ ,_fffca :=_abddc .Write (_acefc .Bytes ());_fffca !=nil {return nil ,_fffca ;};};return _fgg .ParseCertificates (_abddc .Bytes ());};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ea .PdfObject ;Flags _ea .PdfObject ;};func _bbd (_cegb *PdfPage )map[_ea .PdfObjectName ]_ea .PdfObject {_eebd :=make (map[_ea .PdfObjectName ]_ea .PdfObject );if _cegb .Resources ==nil {return _eebd ;
};if _cegb .Resources .Font !=nil {if _bgec ,_ceef :=_ea .GetDict (_cegb .Resources .Font );_ceef {for _ ,_bdba :=range _bgec .Keys (){_eebd [_bdba ]=_bgec .Get (_bdba );};};};if _cegb .Resources .ExtGState !=nil {if _ebgf ,_gbab :=_ea .GetDict (_cegb .Resources .ExtGState );
_gbab {for _ ,_ddcf :=range _ebgf .Keys (){_eebd [_ddcf ]=_ebgf .Get (_ddcf );};};};if _cegb .Resources .XObject !=nil {if _eadb ,_bdeb :=_ea .GetDict (_cegb .Resources .XObject );_bdeb {for _ ,_afgf :=range _eadb .Keys (){_eebd [_afgf ]=_eadb .Get (_afgf );
};};};if _cegb .Resources .Pattern !=nil {if _bbff ,_bcfc :=_ea .GetDict (_cegb .Resources .Pattern );_bcfc {for _ ,_ccfd :=range _bbff .Keys (){_eebd [_ccfd ]=_bbff .Get (_ccfd );};};};if _cegb .Resources .Shading !=nil {if _afa ,_cbee :=_ea .GetDict (_cegb .Resources .Shading );
_cbee {for _ ,_abge :=range _afa .Keys (){_eebd [_abge ]=_afa .Get (_abge );};};};if _cegb .Resources .ProcSet !=nil {if _bdea ,_efaef :=_ea .GetDict (_cegb .Resources .ProcSet );_efaef {for _ ,_cfea :=range _bdea .Keys (){_eebd [_cfea ]=_bdea .Get (_cfea );
};};};if _cegb .Resources .Properties !=nil {if _eecd ,_ebeg :=_ea .GetDict (_cegb .Resources .Properties );_ebeg {for _ ,_edf :=range _eecd .Keys (){_eebd [_edf ]=_eecd .Get (_edf );};};};return _eebd ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bdddb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _fcbe (_fffb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fffb }};func _geee (_dbfede _ea .PdfObject ,_eccf *fontCommon )(*_cge .CMap ,error ){_afeb ,_aacece :=_ea .GetStream (_dbfede );if !_aacece {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dbfede );
return nil ,_ea .ErrTypeError ;};_gfbg ,_fgdce :=_ea .DecodeStream (_afeb );if _fgdce !=nil {return nil ,_fgdce ;};_dgeda ,_fgdce :=_cge .LoadCmapFromData (_gfbg ,!_eccf .isCIDFont ());if _fgdce !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afeb .ObjectNumber ,_fgdce );
};return _dgeda ,_fgdce ;};func _cbbagf (_gfdceb rune )string {for _bcbce ,_baafe :=range _a .Categories {if len (_bcbce )==2&&_a .Is (_baafe ,_gfdceb ){return _bcbce ;};};return "\u0043\u006e";};func (_gbacf *PdfReader )newPdfAnnotationSoundFromDict (_ddgb *_ea .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_efgae :=PdfAnnotationSound {};
_fad ,_debaa :=_gbacf .newPdfAnnotationMarkupFromDict (_ddgb );if _debaa !=nil {return nil ,_debaa ;};_efgae .PdfAnnotationMarkup =_fad ;_efgae .Name =_ddgb .Get ("\u004e\u0061\u006d\u0065");_efgae .Sound =_ddgb .Get ("\u0053\u006f\u0075n\u0064");return &_efgae ,nil ;
};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_aedbe *PdfReader )newPdfAnnotationLinkFromDict (_ggadc *_ea .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_egeb :=PdfAnnotationLink {};_egeb .A =_ggadc .Get ("\u0041");_egeb .Dest =_ggadc .Get ("\u0044\u0065\u0073\u0074");
_egeb .H =_ggadc .Get ("\u0048");_egeb .PA =_ggadc .Get ("\u0050\u0041");_egeb .QuadPoints =_ggadc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_egeb .BS =_ggadc .Get ("\u0042\u0053");return &_egeb ,nil ;};

// Write outputs the object as it is to be written to file.
func (_aegae *pdfSignDictionary )Write ()[]byte {_aegae ._gcfcb =0;_aegae ._cdbc =0;_aegae ._gaabb =0;_aegae ._fcbf =0;_ccbce :=_cb .NewBuffer (nil );_ccbce .WriteString ("\u003c\u003c");for _ ,_bdfcg :=range _aegae .Keys (){_gcece :=_aegae .Get (_bdfcg );
switch _bdfcg {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ccbce .Write (_bdfcg .Write ());_ccbce .WriteString ("\u0020");_aegae ._gaabb =_ccbce .Len ();_ccbce .Write (_gcece .Write ());_ccbce .WriteString ("\u0020");_aegae ._fcbf =_ccbce .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ccbce .Write (_bdfcg .Write ());_ccbce .WriteString ("\u0020");_aegae ._gcfcb =_ccbce .Len ();_ccbce .Write (_gcece .Write ());_ccbce .WriteString ("\u0020");_aegae ._cdbc =_ccbce .Len ()-1;default:_ccbce .Write (_bdfcg .Write ());
_ccbce .WriteString ("\u0020");_ccbce .Write (_gcece .Write ());};};_ccbce .WriteString ("\u003e\u003e");return _ccbce .Bytes ();};func (_dccb *PdfReader )newPdfActionMovieFromDict (_aef *_ea .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aef .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aef .Get ("\u0054"),Operation :_aef .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ge .SimpleEncoder ,error ){_efgb ,_fbdfb :=_decbe (basefont );if _fbdfb !=nil {return nil ,nil ,_fbdfb ;};_ceec ,_gefc :=_efgb .Encoder ().(_ge .SimpleEncoder );
if !_gefc {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_efgb .Encoder ());
};_bdgd :=make (map[rune ]_ge .GlyphName );for _gded :=range alphabet {if _ ,_fbbd :=_ceec .RuneToCharcode (_gded );!_fbbd {_ ,_cedc :=_efgb ._agaf .Read (_gded );if !_cedc {_ca .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gded ,_gded );
continue ;};_ebbb ,_cedc :=_ge .RuneToGlyph (_gded );if !_cedc {_ca .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gded ,_gded );continue ;};if len (_bdgd )>=255{return nil ,nil ,_dc .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bdgd [_gded ]=_ebbb ;};};var (_fffgd []_ge .CharCode ;_cbfd []_ge .CharCode ;);for _gfgbg :=_ge .CharCode (1);_gfgbg <=0xff;_gfgbg ++{_bdce ,_cbdeg :=_ceec .CharcodeToRune (_gfgbg );if !_cbdeg {_fffgd =append (_fffgd ,_gfgbg );continue ;};if _ ,_cbdeg =alphabet [_bdce ];
!_cbdeg {_cbfd =append (_cbfd ,_gfgbg );};};_bffd :=append (_fffgd ,_cbfd ...);if len (_bffd )< len (_bdgd ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bdgd ),len (_bffd ));
};_ebba :=make ([]rune ,0,len (_bdgd ));for _eggg :=range _bdgd {_ebba =append (_ebba ,_eggg );};_cd .Slice (_ebba ,func (_agbdd ,_bffge int )bool {return _ebba [_agbdd ]< _ebba [_bffge ]});_fcdf :=make (map[_ge .CharCode ]_ge .GlyphName ,len (_ebba ));
for _ ,_cadcb :=range _ebba {_face :=_bffd [0];_bffd =_bffd [1:];_fcdf [_face ]=_bdgd [_cadcb ];};_ceec =_ge .ApplyDifferences (_ceec ,_fcdf );_efgb .SetEncoder (_ceec );return &PdfFont {_gbee :&_efgb },_ceec ,nil ;};

// Write outputs the object as it is to be written to file.
func (_cgcdge *PdfTransformParamsDocMDP )Write ()[]byte {return _cgcdge .ToPdfObject ().Write ()};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_bggee *XObjectImage )GetContainingPdfObject ()_ea .PdfObject {return _bggee ._bccba };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bag :=NewPdfAnnotation ();_gdag :=&PdfAnnotationRichMedia {};_gdag .PdfAnnotation =_bag ;_bag .SetContext (_gdag );return _gdag ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_fece :=&PdfColorPattern {};return _fece };

// SetForms sets the Acroform for a PDF file.
func (_bdcbf *PdfWriter )SetForms (form *PdfAcroForm )error {_bdcbf ._ccedg =form ;return nil };

// SetCenterWindow sets the value of the centerWindow flag.
func (_abage *ViewerPreferences )SetCenterWindow (centerWindow bool ){_abage ._becd =&centerWindow };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bcbdfc *PdfReader )GetOutlines ()(*Outline ,error ){if _bcbdfc ==nil {return nil ,_dc .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dbbcd :=_bcbdfc .GetOutlineTree ();if _dbbcd ==nil {return nil ,_dc .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cabce func (_afcae *PdfOutlineTreeNode ,_ccbe *[]*OutlineItem );_cabce =func (_edfd *PdfOutlineTreeNode ,_cceea *[]*OutlineItem ){if _edfd ==nil {return ;};if _edfd ._bdddb ==nil {_ca .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cgcdg *OutlineItem ;if _dbggf ,_gcaca :=_edfd ._bdddb .(*PdfOutlineItem );_gcaca {_bdeabf :=_dbggf .Dest ;if (_bdeabf ==nil ||_ea .IsNullObject (_bdeabf ))&&_dbggf .A !=nil {if _cfac ,_ggebc :=_ea .GetDict (_dbggf .A );_ggebc {if _cgfbg ,_begf :=_ea .GetArray (_cfac .Get ("\u0044"));
_begf {_bdeabf =_cgfbg ;}else {_fdfff ,_eddec :=_ea .GetString (_cfac .Get ("\u0044"));if !_eddec {return ;};_eacef ,_eddec :=_bcbdfc ._gbggd .Get ("\u004e\u0061\u006de\u0073").(*_ea .PdfObjectReference );if !_eddec {return ;};_acdf ,_dgda :=_bcbdfc ._afedg .LookupByReference (*_eacef );
if _dgda !=nil {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_dgda .Error ());
return ;};_ddbc ,_eddec :=_acdf .(*_ea .PdfIndirectObject );if !_eddec {return ;};_ggfed :=map[_ea .PdfObject ]struct{}{};_dgda =_bcbdfc .buildNameNodes (_ddbc ,_ggfed );if _dgda !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_dgda .Error ());
return ;};for _dcfb :=range _ggfed {_debef ,_ebafa :=_ea .GetDict (_dcfb );if !_ebafa {continue ;};_eebea ,_ebafa :=_ea .GetArray (_debef .Get ("\u004e\u0061\u006de\u0073"));if !_ebafa {continue ;};for _baaf ,_bccgb :=range _eebea .Elements (){switch _bccgb .(type ){case *_ea .PdfObjectString :if _bccgb .String ()==_fdfff .String (){if _fddac :=_eebea .Get (_baaf +1);
_fddac !=nil {if _eafbf ,_fcefg :=_ea .GetDict (_fddac );_fcefg {_bdeabf =_eafbf .Get ("\u0044");break ;};};};};};};};};};var _afcaf OutlineDest ;if _bdeabf !=nil &&!_ea .IsNullObject (_bdeabf ){if _cfegg ,_bddce :=_bebag (_bdeabf ,_bcbdfc );_bddce ==nil {_afcaf =*_cfegg ;
}else {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bdeabf ,_bddce );
};};_cgcdg =NewOutlineItem (_dbggf .Title .Decoded (),_afcaf );*_cceea =append (*_cceea ,_cgcdg );if _dbggf .Next !=nil {_cabce (_dbggf .Next ,_cceea );};};if _edfd .First !=nil {if _cgcdg !=nil {_cceea =&_cgcdg .Entries ;};_cabce (_edfd .First ,_cceea );
};};_gccga :=NewOutline ();_cabce (_dbbcd ,&_gccga .Entries );return _gccga ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_acgf *PdfFilespec )GetContainingPdfObject ()_ea .PdfObject {return _acgf ._cbgg };

// SetBorderWidth sets the style's border width.
func (_bgc *PdfBorderStyle )SetBorderWidth (width float64 ){_bgc .W =&width };var (CourierName =_gf .CourierName ;CourierBoldName =_gf .CourierBoldName ;CourierObliqueName =_gf .CourierObliqueName ;CourierBoldObliqueName =_gf .CourierBoldObliqueName ;HelveticaName =_gf .HelveticaName ;
HelveticaBoldName =_gf .HelveticaBoldName ;HelveticaObliqueName =_gf .HelveticaObliqueName ;HelveticaBoldObliqueName =_gf .HelveticaBoldObliqueName ;SymbolName =_gf .SymbolName ;ZapfDingbatsName =_gf .ZapfDingbatsName ;TimesRomanName =_gf .TimesRomanName ;
TimesBoldName =_gf .TimesBoldName ;TimesItalicName =_gf .TimesItalicName ;TimesBoldItalicName =_gf .TimesBoldItalicName ;);var _dadf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_bggc *PdfReader )newPdfAnnotationStampFromDict (_deba *_ea .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fbdd :=PdfAnnotationStamp {};_dfd ,_fac :=_bggc .newPdfAnnotationMarkupFromDict (_deba );if _fac !=nil {return nil ,_fac ;
};_fbdd .PdfAnnotationMarkup =_dfd ;_fbdd .Name =_deba .Get ("\u004e\u0061\u006d\u0065");return &_fbdd ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_gfbd *PdfPage )Duplicate ()*PdfPage {_cded :=*_gfbd ;_cded ._bbffd =_ea .MakeDict ();_cded ._dfgcd =_ea .MakeIndirectObject (_cded ._bbffd );_cded ._gfbe =*_cded ._bbffd ;return &_cded ;};func (_faade *PdfWriter )AttachFile (file *EmbeddedFile )error {_fgbde :=_faade ._eggf ;
if _fgbde ==nil {_fgbde =_fgcgbf ();};_gffbd :=_fgbde .addEmbeddedFile (file );if _gffbd !=nil {return _gffbd ;};_faade ._eggf =_fgbde ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aab *PdfActionGoTo )ToPdfObject ()_ea .PdfObject {_aab .PdfAction .ToPdfObject ();_bde :=_aab ._fgc ;_bee :=_bde .PdfObject .(*_ea .PdfObjectDictionary );_bee .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeGoTo )));_bee .SetIfNotNil ("\u0044",_aab .D );
return _bde ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fcf PdfModel ;Rect _ea .PdfObject ;Contents _ea .PdfObject ;P _ea .PdfObject ;NM _ea .PdfObject ;M _ea .PdfObject ;F _ea .PdfObject ;AP _ea .PdfObject ;AS _ea .PdfObject ;Border _ea .PdfObject ;C _ea .PdfObject ;StructParent _ea .PdfObject ;
OC _ea .PdfObject ;_eab *_ea .PdfIndirectObject ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_dedeg :=_eb .Detect (content );_bgdfb :=_gg .Sum (content );_dbbg :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_dedeg .String (),Hash :_ad .EncodeToString (_bgdfb [:])};
return _dbbg ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eeebbe pdfCIDFontType2 )GetRuneMetrics (r rune )(_gf .CharMetrics ,bool ){_dfdd ,_dffb :=_eeebbe ._ggaed [r ];if !_dffb {_gegff ,_cfdfd :=_ea .GetInt (_eeebbe .DW );if !_cfdfd {return _gf .CharMetrics {},false ;};_dfdd =int (*_gegff );};return _gf .CharMetrics {Wx :float64 (_dfdd )},true ;
};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_dcfga *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_dcfga ._efadb =&displayDocTitle ;};func _afgad ()string {_dcgec .Lock ();defer _dcgec .Unlock ();_ccea :=_cda .GetLicenseKey ();if len (_dgcabg )> 0&&(_ccea .IsLicensed ()||_daba ){return _dgcabg ;
};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cbfaeg (),_ccea .TypeToString ());};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ea .PdfObject ;Sy _ea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_efg *PdfActionSetOCGState )ToPdfObject ()_ea .PdfObject {_efg .PdfAction .ToPdfObject ();_bea :=_efg ._fgc ;_ada :=_bea .PdfObject .(*_ea .PdfObjectDictionary );_ada .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeSetOCGState )));_ada .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_efg .State );
_ada .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_efg .PreserveRB );return _bea ;};func (_ffdgb *PdfReader )newPdfOutlineItemFromIndirectObject (_ggeaf *_ea .PdfIndirectObject )(*PdfOutlineItem ,error ){_bafae ,_afde :=_ggeaf .PdfObject .(*_ea .PdfObjectDictionary );
if !_afde {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_afdbe :=NewPdfOutlineItem ();_aegca :=_bafae .Get ("\u0054\u0069\u0074l\u0065");
if _aegca ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ebbcb ,_afag :=_ea .GetString (_aegca );if !_afag {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_aegca );};_afdbe .Title =_ebbcb ;if _fabef :=_bafae .Get ("\u0043\u006f\u0075n\u0074");
_fabef !=nil {_dbee ,_fggfd :=_fabef .(*_ea .PdfObjectInteger );if !_fggfd {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fabef );};_egcda :=int64 (*_dbee );
_afdbe .Count =&_egcda ;};if _feca :=_bafae .Get ("\u0044\u0065\u0073\u0074");_feca !=nil {_afdbe .Dest =_ea .ResolveReference (_feca );if !_ffdgb ._bdddd {_eefec :=_ffdgb .traverseObjectData (_afdbe .Dest );if _eefec !=nil {return nil ,_eefec ;};};};if _gfbgb :=_bafae .Get ("\u0041");
_gfbgb !=nil {_afdbe .A =_ea .ResolveReference (_gfbgb );if !_ffdgb ._bdddd {_fbdee :=_ffdgb .traverseObjectData (_afdbe .A );if _fbdee !=nil {return nil ,_fbdee ;};};};if _acfec :=_bafae .Get ("\u0053\u0045");_acfec !=nil {_afdbe .SE =nil ;};if _dbfef :=_bafae .Get ("\u0043");
_dbfef !=nil {_afdbe .C =_ea .ResolveReference (_dbfef );};if _bdbfb :=_bafae .Get ("\u0046");_bdbfb !=nil {_afdbe .F =_ea .ResolveReference (_bdbfb );};return _afdbe ,nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_cebc :=&PdfFilespec {};_cebc ._cbgg =_ea .MakeIndirectObject (_ea .MakeDict ());_cebc .Desc =_ea .MakeString (file .Description );_cebc .EF =file .ToPdfObject ();_cebc .F =_ea .MakeString (file .Name );
_cebc .UF =_ea .MakeEncodedString (file .Name ,true );_gbfg :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_gbfg ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_gbfg ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_gbfg ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_gbfg ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_cebc .AFRelationship =_ea .MakeName (_gbfg );return _cebc ;
};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gbee pdfFont };

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cfagg *PdfPage )GetContentStreamObjs ()[]_ea .PdfObject {if _cfagg .Contents ==nil {return nil ;};_gedbg :=_ea .TraceToDirectObject (_cfagg .Contents );if _cfddc ,_bcbdf :=_gedbg .(*_ea .PdfObjectArray );_bcbdf {return _cfddc .Elements ();};return []_ea .PdfObject {_gedbg };
};func (_bgg *PdfReader )newPdfActionSetOCGStateFromDict (_dcd *_ea .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_dcd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_dcd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_dbfb *PdfSignature ,_gbdebg Hasher ,_bdffa SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_aacec :=&PdfColorspaceDeviceN {};return _aacec ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_edbea *PdfField )GetContext ()PdfModel {return _edbea ._cdag };

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_degeg :=&PdfShadingType3 {};_degeg .PdfShading =&PdfShading {};_degeg .PdfShading ._feebc =_ea .MakeIndirectObject (_ea .MakeDict ());_degeg .PdfShading ._bgaf =_degeg ;return _degeg ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_gefa *PdfPattern )ToPdfObject ()_ea .PdfObject {_fefc :=_gefa .getDict ();_fefc .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fefc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ea .MakeInteger (_gefa .PatternType ));
return _gefa ._bedae ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_eec :=NewPdfAction ();_age :=&PdfActionJavaScript {};_age .PdfAction =_eec ;_eec .SetContext (_age );return _age ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_abcd *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_adeddc *PdfOutlineItem )GetContainingPdfObject ()_ea .PdfObject {return _adeddc ._geeed };

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_ceeaba *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_ceeaba ._ceadc =&hideToolbar };

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_edc :=NewPdfAnnotation ();_cdde :=&PdfAnnotationPopup {};_cdde .PdfAnnotation =_edc ;_edc .SetContext (_cdde );return _cdde ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ea .PdfObject ;ColorSpace _ea .PdfObject ;Pattern _ea .PdfObject ;Shading _ea .PdfObject ;XObject _ea .PdfObject ;Font _ea .PdfObject ;ProcSet _ea .PdfObject ;Properties _ea .PdfObject ;_gafded *_ea .PdfObjectDictionary ;
_dgad *PdfPageResourcesColorspaces ;};func _dcgeaa (_ccfdd *_ea .PdfObjectArray )(float64 ,error ){_edbfb ,_geceg :=_ccfdd .ToFloat64Array ();if _geceg !=nil {_ca .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccfdd ,_geceg );
};switch len (_edbfb ){case 1:return _edbfb [0],nil ;case 3:_bfcfg :=PdfColorspaceDeviceRGB {};_fcgfaf ,_dcedeb :=_bfcfg .ColorFromFloats (_edbfb );if _dcedeb !=nil {return 0.0,_dcedeb ;};return _fcgfaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_faccf :=PdfColorspaceDeviceCMYK {};
_bgfd ,_cfbbd :=_faccf .ColorFromFloats (_edbfb );if _cfbbd !=nil {return 0.0,_cfbbd ;};_decac ,_cfbbd :=_faccf .ColorToRGB (_bgfd .(*PdfColorDeviceCMYK ));if _cfbbd !=nil {return 0.0,_cfbbd ;};return _decac .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_geceg =_dc .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ca .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccfdd ,_geceg );
return 0.0,_geceg ;};

// CustomKeys returns all custom info keys as list.
func (_bbgf *PdfInfo )CustomKeys ()[]string {if _bbgf ._bafgg ==nil {return nil ;};_geae :=make ([]string ,len (_bbgf ._bafgg .Keys ()));for _ ,_bddg :=range _bbgf ._bafgg .Keys (){_geae =append (_geae ,_bddg .String ());};return _geae ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dcgea *PdfPage )GetContainingPdfObject ()_ea .PdfObject {return _dcgea ._dfgcd };

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_aggcca *PdfWriter )SetPageLabels (pageLabels _ea .PdfObject )error {if pageLabels ==nil {return nil ;};_ca .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_aggcca ._dacfd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _aggcca .addObjects (pageLabels );};

// ToPdfObject returns a stream object.
func (_debab *XObjectImage )ToPdfObject ()_ea .PdfObject {_affa :=_debab ._bccba ;if _debab ._dadfd {return _affa ;};_cbbab :=_affa .PdfObjectDictionary ;if _debab .Filter !=nil {_cbbab =_debab .Filter .MakeStreamDict ();_affa .PdfObjectDictionary =_cbbab ;
};_cbbab .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_cbbab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0049\u006d\u0061g\u0065"));_cbbab .Set ("\u0057\u0069\u0064t\u0068",_ea .MakeInteger (*(_debab .Width )));
_cbbab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ea .MakeInteger (*(_debab .Height )));if _debab .BitsPerComponent !=nil {_cbbab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ea .MakeInteger (*(_debab .BitsPerComponent )));
};if _debab .ColorSpace !=nil {_cbbab .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_debab .ColorSpace .ToPdfObject ());};_cbbab .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_debab .Intent );_cbbab .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_debab .ImageMask );
_cbbab .SetIfNotNil ("\u004d\u0061\u0073\u006b",_debab .Mask );_edcc :=_cbbab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _debab .Decode ==nil &&_edcc {_cbbab .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _debab .Decode !=nil {_cbbab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_debab .Decode );
};_cbbab .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_debab .Interpolate );_cbbab .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_debab .Alternatives );_cbbab .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_debab .SMask );
_cbbab .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_debab .SMaskInData );_cbbab .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_debab .Matte );_cbbab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_debab .Name );_cbbab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_debab .StructParent );
_cbbab .SetIfNotNil ("\u0049\u0044",_debab .ID );_cbbab .SetIfNotNil ("\u004f\u0050\u0049",_debab .OPI );_cbbab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_debab .Metadata );_cbbab .SetIfNotNil ("\u004f\u0043",_debab .OC );_cbbab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_debab .Stream ))));
_affa .Stream =_debab .Stream ;_debab ._dadfd =true ;return _affa ;};func (_cgb *PdfReader )newPdfActionGotoRFromDict (_ecd *_ea .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gab ,_cgce :=_cfgb (_ecd .Get ("\u0046"));if _cgce !=nil {return nil ,_cgce ;
};return &PdfActionGoToR {D :_ecd .Get ("\u0044"),NewWindow :_ecd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gab },nil ;};func (_fdaga *PdfWriter )writeOutlines ()error {if _fdaga ._cccfg ==nil {return nil ;};_ca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fdaga ._cccfg );
_dbcfc :=_fdaga ._cccfg .ToPdfObject ();_ca .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dbcfc ,_dbcfc ,_dbcfc );_fdaga ._dacfd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dbcfc );
_dbfdf :=_fdaga .addObjects (_dbcfc );if _dbfdf !=nil {return _dbfdf ;};return nil ;};func (_cdcfg *PdfReader )loadAnnotations (_afafc _ea .PdfObject )([]*PdfAnnotation ,error ){_gadac ,_dbade :=_ea .GetArray (_afafc );if !_dbade {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cfcca []*PdfAnnotation ;for _ ,_cfcd :=range _gadac .Elements (){_cfcd =_ea .ResolveReference (_cfcd );if _ ,_cegf :=_cfcd .(*_ea .PdfObjectNull );_cegf {continue ;};_ggfg ,_fecff :=_cfcd .(*_ea .PdfObjectDictionary );_acbgf ,_dgdbd :=_cfcd .(*_ea .PdfIndirectObject );
if _fecff {_acbgf =&_ea .PdfIndirectObject {};_acbgf .PdfObject =_ggfg ;}else {if !_dgdbd {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_bggcg ,_gfggc :=_cdcfg .newPdfAnnotationFromIndirectObject (_acbgf );if _gfggc !=nil {return nil ,_gfggc ;};switch _bgbea :=_bggcg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gebb :=range _cdcfg .AcroForm .AllFields (){if _gebb ._gegceb ==_bgbea .Parent {_bgbea ._efb =_gebb ;
break ;};};};if _bggcg !=nil {_cfcca =append (_cfcca ,_bggcg );};};return _cfcca ,nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_fgbaa *PdfReader )GetCatalogMarkInfo ()(_ea .PdfObject ,bool ){if _fgbaa ._gbggd ==nil {return nil ,false ;};_ddadc :=_fgbaa ._gbggd .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _ddadc ,_ddadc !=nil ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_dgfgc *ViewerPreferences )IsCenterWindow ()bool {if _dgfgc ._becd ==nil {return false ;};return *_dgfgc ._becd ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cgbf :=NewPdfAnnotation ();_bab :=&PdfAnnotationLine {};_bab .PdfAnnotation =_cgbf ;_bab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgbf .SetContext (_bab );return _bab ;};func (_ebfgb *PdfWriter )setWriter (_badbgf _cde .Writer ){_ebfgb ._gfecb =_ebfgb ._bgbf ;
_ebfgb ._daad =_f .NewWriter (_badbgf );};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cde .ReadSeeker )(*CompliancePdfReader ,error ){const _deff ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_gaadf ,_dfbgc :=_fceba (rs ,&ReaderOpts {ComplianceMode :true },false ,_deff );
if _dfbgc !=nil {return nil ,_dfbgc ;};return &CompliancePdfReader {PdfReader :_gaadf },nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_bebce byte )byte ;

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cfgc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ea .PdfObjectArray ;_fbdfa *Image ;};

// ImageToRGB convert an indexed image to RGB.
func (_faeg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_faeg .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fbfecg :=_dcc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._abgae ,img ._affe );_gggf :=_af .NewReader (img .getBase ());_egac :=_af .NewWriter (_fbfecg );var (_aefd uint32 ;_agca int ;_dafg error ;);for {_aefd ,_dafg =_gggf .ReadSample ();
if _dafg ==_cde .EOF {break ;}else if _dafg !=nil {return img ,_dafg ;};_agca =int (_aefd );_ca .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_agca ,N ,len (_faeg ._afgda ));
if (_agca +1)*N > len (_faeg ._afgda ){_agca =len (_faeg ._afgda )/N -1;_ca .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_agca );if _agca < 0{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _gcggc :=_agca *N ;_gcggc < (_agca +1)*N ;_gcggc ++{if _dafg =_egac .WriteSample (uint32 (_faeg ._afgda [_gcggc ]));_dafg !=nil {return img ,_dafg ;};};};return _faeg .Base .ImageToRGB (_aefbb (&_fbfecg ));};

// ToPdfObject returns the PDF representation of the function.
func (_dgaagf *PdfFunctionType2 )ToPdfObject ()_ea .PdfObject {_dadgd :=_ea .MakeDict ();_dadgd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ea .MakeInteger (2));_abae :=&_ea .PdfObjectArray {};for _ ,_ebggff :=range _dgaagf .Domain {_abae .Append (_ea .MakeFloat (_ebggff ));
};_dadgd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abae );if _dgaagf .Range !=nil {_ddfc :=&_ea .PdfObjectArray {};for _ ,_bfgc :=range _dgaagf .Range {_ddfc .Append (_ea .MakeFloat (_bfgc ));};_dadgd .Set ("\u0052\u0061\u006eg\u0065",_ddfc );};if _dgaagf .C0 !=nil {_fcgcb :=&_ea .PdfObjectArray {};
for _ ,_ggbed :=range _dgaagf .C0 {_fcgcb .Append (_ea .MakeFloat (_ggbed ));};_dadgd .Set ("\u0043\u0030",_fcgcb );};if _dgaagf .C1 !=nil {_efbg :=&_ea .PdfObjectArray {};for _ ,_ccbfd :=range _dgaagf .C1 {_efbg .Append (_ea .MakeFloat (_ccbfd ));};_dadgd .Set ("\u0043\u0031",_efbg );
};_dadgd .Set ("\u004e",_ea .MakeFloat (_dgaagf .N ));if _dgaagf ._edfef !=nil {_dgaagf ._edfef .PdfObject =_dadgd ;return _dgaagf ._edfef ;};return _dadgd ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_egb :=NewPdfAnnotation ();_bgfg :=&PdfAnnotationProjection {};_bgfg .PdfAnnotation =_egb ;_bgfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egb .SetContext (_bgfg );return _bgfg ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_affga *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// Transform rectangle with the supplied matrix.
func (_fdcba *PdfRectangle )Transform (transformMatrix _ged .Matrix ){_fdcba .Llx ,_fdcba .Lly =transformMatrix .Transform (_fdcba .Llx ,_fdcba .Lly );_fdcba .Urx ,_fdcba .Ury =transformMatrix .Transform (_fdcba .Urx ,_fdcba .Ury );_fdcba .Normalize ();
};

// ToPdfObject implements interface PdfModel.
func (_febfb *PdfAnnotationStamp )ToPdfObject ()_ea .PdfObject {_febfb .PdfAnnotation .ToPdfObject ();_cbga :=_febfb ._eab ;_adf :=_cbga .PdfObject .(*_ea .PdfObjectDictionary );_febfb .PdfAnnotationMarkup .appendToPdfDictionary (_adf );_adf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053\u0074\u0061m\u0070"));
_adf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_febfb .Name );return _cbga ;};func _agge (_egaaa []byte )bool {if len (_egaaa )< 4{return true ;};for _befe :=range _egaaa [:4]{_bgfa :=rune (_befe );if !_a .Is (_a .ASCII_Hex_Digit ,_bgfa )&&!_a .IsSpace (_bgfa ){return true ;
};};return false ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ecaad *OutlineItem )Insert (index uint ,item *OutlineItem ){_afafg :=uint (len (_ecaad .Entries ));if index > _afafg {index =_afafg ;};_ecaad .Entries =append (_ecaad .Entries [:index ],append ([]*OutlineItem {item },_ecaad .Entries [index :]...)...);
};

// ToPdfObject implements interface PdfModel.
func (_eeea *PdfActionGoToE )ToPdfObject ()_ea .PdfObject {_eeea .PdfAction .ToPdfObject ();_bad :=_eeea ._fgc ;_ggc :=_bad .PdfObject .(*_ea .PdfObjectDictionary );_ggc .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeGoToE )));if _eeea .F !=nil {_ggc .Set ("\u0046",_eeea .F .ToPdfObject ());
};_ggc .SetIfNotNil ("\u0044",_eeea .D );_ggc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eeea .NewWindow );_ggc .SetIfNotNil ("\u0054",_eeea .T );return _bad ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_edcd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_bfff *PdfReader )newPdfAnnotationSquigglyFromDict (_cbbgf *_ea .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_fcdg :=PdfAnnotationSquiggly {};_dedd ,_gbg :=_bfff .newPdfAnnotationMarkupFromDict (_cbbgf );
if _gbg !=nil {return nil ,_gbg ;};_fcdg .PdfAnnotationMarkup =_dedd ;_fcdg .QuadPoints =_cbbgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fcdg ,nil ;};type pdfSignDictionary struct{*_ea .PdfObjectDictionary ;_cgcga *SignatureHandler ;
_ddgae *PdfSignature ;_eaadg int64 ;_gcfcb int ;_cdbc int ;_gaabb int ;_fcbf int ;};

// ToPdfObject implements interface PdfModel.
func (_cdaa *PdfAnnotationPolygon )ToPdfObject ()_ea .PdfObject {_cdaa .PdfAnnotation .ToPdfObject ();_ffgf :=_cdaa ._eab ;_gde :=_ffgf .PdfObject .(*_ea .PdfObjectDictionary );_cdaa .PdfAnnotationMarkup .appendToPdfDictionary (_gde );_gde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_gde .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cdaa .Vertices );_gde .SetIfNotNil ("\u004c\u0045",_cdaa .LE );_gde .SetIfNotNil ("\u0042\u0053",_cdaa .BS );_gde .SetIfNotNil ("\u0049\u0043",_cdaa .IC );_gde .SetIfNotNil ("\u0042\u0045",_cdaa .BE );
_gde .SetIfNotNil ("\u0049\u0054",_cdaa .IT );_gde .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cdaa .Measure );return _ffgf ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dabgb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dabgb ._edabfg =optimizer };

// B returns the value of the blue component of the color.
func (_adedd *PdfColorDeviceRGB )B ()float64 {return _adedd [2]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fafbf *PdfShadingType3 )ToPdfObject ()_ea .PdfObject {_fafbf .PdfShading .ToPdfObject ();_dceba ,_ebead :=_fafbf .getShadingDict ();if _ebead !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fafbf .Coords !=nil {_dceba .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fafbf .Coords );};if _fafbf .Domain !=nil {_dceba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fafbf .Domain );};if _fafbf .Function !=nil {if len (_fafbf .Function )==1{_dceba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fafbf .Function [0].ToPdfObject ());
}else {_fdba :=_ea .MakeArray ();for _ ,_eecef :=range _fafbf .Function {_fdba .Append (_eecef .ToPdfObject ());};_dceba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdba );};};if _fafbf .Extend !=nil {_dceba .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fafbf .Extend );
};return _fafbf ._feebc ;};func (_gfggb *PdfPattern )getDict ()*_ea .PdfObjectDictionary {if _fcbd ,_bbfe :=_gfggb ._bedae .(*_ea .PdfIndirectObject );_bbfe {_fgaadc ,_defee :=_fcbd .PdfObject .(*_ea .PdfObjectDictionary );if !_defee {return nil ;};return _fgaadc ;
}else if _ebabc ,_agddag :=_gfggb ._bedae .(*_ea .PdfObjectStream );_agddag {return _ebabc .PdfObjectDictionary ;}else {_ca .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_gfggb ._bedae );
return nil ;};};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ea .PdfObjectArray ;ExtGState _ea .PdfObject ;};func (_fbfg *PdfWriter )writeDocumentVersion (){if _fbfg ._eefcgg {_fbfg .writeString ("\u000a");}else {_fbfg .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fbfg ._cedb .Major ,_fbfg ._cedb .Minor ));
_fbfg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dabb :=&PdfColorspaceLab {};_dabb .BlackPoint =[]float64 {0.0,0.0,0.0};_dabb .Range =[]float64 {-100,100,-100,100};return _dabb ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_efbga *PdfWriter )GetPdfVersion ()string {return _efbga .getPdfVersion ()};func (_agcd fontCommon )isCIDFont ()bool {if _agcd ._dfeb ==""{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agcd );
};_ceeb :=false ;switch _agcd ._dfeb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ceeb =true ;};_ca .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ceeb ,_agcd );
return _ceeb ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_baef *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_efacb ,_cfdf :=color .(*PdfColorPattern );if !_cfdf {_ca .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _efacb .Color ==nil {return color ,nil ;};if _baef .UnderlyingCS ==nil {return nil ,_dc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _baef .UnderlyingCS .ColorToRGB (_efacb .Color );
};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_edcf *PdfReader )newPdfAnnotationRedactFromDict (_def *_ea .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gbeb :=PdfAnnotationRedact {};_fegbd ,_cgfb :=_edcf .newPdfAnnotationMarkupFromDict (_def );
if _cgfb !=nil {return nil ,_cgfb ;};_gbeb .PdfAnnotationMarkup =_fegbd ;_gbeb .QuadPoints =_def .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gbeb .IC =_def .Get ("\u0049\u0043");_gbeb .RO =_def .Get ("\u0052\u004f");_gbeb .OverlayText =_def .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gbeb .Repeat =_def .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gbeb .DA =_def .Get ("\u0044\u0041");_gbeb .Q =_def .Get ("\u0051");return &_gbeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abeb *PdfAnnotationSound )ToPdfObject ()_ea .PdfObject {_abeb .PdfAnnotation .ToPdfObject ();_dbbc :=_abeb ._eab ;_ccaf :=_dbbc .PdfObject .(*_ea .PdfObjectDictionary );_abeb .PdfAnnotationMarkup .appendToPdfDictionary (_ccaf );_ccaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0053\u006f\u0075n\u0064"));
_ccaf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_abeb .Sound );_ccaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abeb .Name );return _dbbc ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_fffae *_ea .PdfIndirectObject ;};func _cfbe (_deegdb _ea .PdfObject )(*PdfPattern ,error ){_agdc :=&PdfPattern {};var _bcaee *_ea .PdfObjectDictionary ;if _cggg ,_bffga :=_ea .GetIndirect (_deegdb );
_bffga {_agdc ._bedae =_cggg ;_abbbb ,_aebag :=_cggg .PdfObject .(*_ea .PdfObjectDictionary );if !_aebag {_ca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cggg .PdfObject );
return nil ,_ea .ErrTypeError ;};_bcaee =_abbbb ;}else if _cgee ,_bddga :=_ea .GetStream (_deegdb );_bddga {_agdc ._bedae =_cgee ;_bcaee =_cgee .PdfObjectDictionary ;}else {_ca .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_deegdb );
return nil ,_ea .ErrTypeError ;};_cbaeb :=_bcaee .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cbaeb ==nil {_ca .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fbega ,_cfadg :=_cbaeb .(*_ea .PdfObjectInteger );if !_cfadg {_ca .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cbaeb );
return nil ,_ea .ErrTypeError ;};if *_fbega !=1&&*_fbega !=2{_ca .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fbega );return nil ,_ea .ErrRangeError ;
};_agdc .PatternType =int64 (*_fbega );switch *_fbega {case 1:_ebdab ,_edge :=_fbged (_bcaee );if _edge !=nil {return nil ,_edge ;};_ebdab .PdfPattern =_agdc ;_agdc ._egfdg =_ebdab ;return _agdc ,nil ;case 2:_bfac ,_dcfaea :=_abafe (_bcaee );if _dcfaea !=nil {return nil ,_dcfaea ;
};_bfac .PdfPattern =_agdc ;_agdc ._egfdg =_bfac ;return _agdc ,nil ;};return nil ,_dc .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_aaddff *PdfWriter )SetCatalogStructTreeRoot (tree _ea .PdfObject )error {if tree ==nil {_aaddff ._dacfd .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_aaddff ._dacfd .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _aaddff .addObjects (tree );};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_egee :_ea .MakeIndirectObject (_ea .MakeDict ()),VRI :map[string ]*VRI {}};};func (_bgd *PdfAnnotation )String ()string {_ced :="";_cfc ,_gda :=_bgd .ToPdfObject ().(*_ea .PdfIndirectObject );if _gda {_ced =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bgd ._fcf ,_cfc .PdfObject .String ());
};return _ced ;};func _aefab (_bcde _ea .PdfObject )(*PdfFunctionType3 ,error ){_bcce :=&PdfFunctionType3 {};var _dgcd *_ea .PdfObjectDictionary ;if _cgfba ,_cagf :=_bcde .(*_ea .PdfIndirectObject );_cagf {_edgc ,_ffef :=_cgfba .PdfObject .(*_ea .PdfObjectDictionary );
if !_ffef {return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcce ._bbaed =_cgfba ;_dgcd =_edgc ;}else if _dgae ,_cbead :=_bcde .(*_ea .PdfObjectDictionary );_cbead {_dgcd =_dgae ;}else {return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eabee ,_bbfcd :=_ea .TraceToDirectObject (_dgcd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ea .PdfObjectArray );if !_bbfcd {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eabee .Len ()!=2{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bgffd ,_bcga :=_eabee .ToFloat64Array ();
if _bcga !=nil {return nil ,_bcga ;};_bcce .Domain =_bgffd ;_eabee ,_bbfcd =_ea .TraceToDirectObject (_dgcd .Get ("\u0052\u0061\u006eg\u0065")).(*_ea .PdfObjectArray );if _bbfcd {if _eabee .Len ()< 0||_eabee .Len ()%2!=0{return nil ,_dc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edff ,_cdbe :=_eabee .ToFloat64Array ();if _cdbe !=nil {return nil ,_cdbe ;};_bcce .Range =_edff ;};_eabee ,_bbfcd =_ea .TraceToDirectObject (_dgcd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ea .PdfObjectArray );if !_bbfcd {_ca .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bcce .Functions =[]PdfFunction {};
for _ ,_eefeb :=range _eabee .Elements (){_acba ,_ggbee :=_ebcdc (_eefeb );if _ggbee !=nil {return nil ,_ggbee ;};_bcce .Functions =append (_bcce .Functions ,_acba );};_eabee ,_bbfcd =_ea .TraceToDirectObject (_dgcd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ea .PdfObjectArray );
if !_bbfcd {_ca .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gcfec ,_bcga :=_eabee .ToFloat64Array ();if _bcga !=nil {return nil ,_bcga ;};_bcce .Bounds =_gcfec ;if len (_bcce .Bounds )!=len (_bcce .Functions )-1{_ca .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bcce .Bounds ),len (_bcce .Functions ));
return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eabee ,_bbfcd =_ea .TraceToDirectObject (_dgcd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ea .PdfObjectArray );if !_bbfcd {_ca .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_dc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_adfbg ,_bcga :=_eabee .ToFloat64Array ();
if _bcga !=nil {return nil ,_bcga ;};_bcce .Encode =_adfbg ;if len (_bcce .Encode )!=2*len (_bcce .Functions ){_ca .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bcce .Encode ),len (_bcce .Functions ));
return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bcce ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dfgg :=NewPdfAnnotation ();_bffb :=&PdfAnnotationRedact {};_bffb .PdfAnnotation =_dfgg ;_bffb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfgg .SetContext (_bffb );return _bffb ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dcgec .Lock ();defer _dcgec .Unlock ();_afcdb =author };

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ea .PdfObject ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_bbdgff *PdfTilingPattern )ToPdfObject ()_ea .PdfObject {_bbdgff .PdfPattern .ToPdfObject ();_abgdda :=_bbdgff .getDict ();if _bbdgff .PaintType !=nil {_abgdda .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_bbdgff .PaintType );};if _bbdgff .TilingType !=nil {_abgdda .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bbdgff .TilingType );
};if _bbdgff .BBox !=nil {_abgdda .Set ("\u0042\u0042\u006f\u0078",_bbdgff .BBox .ToPdfObject ());};if _bbdgff .XStep !=nil {_abgdda .Set ("\u0058\u0053\u0074e\u0070",_bbdgff .XStep );};if _bbdgff .YStep !=nil {_abgdda .Set ("\u0059\u0053\u0074e\u0070",_bbdgff .YStep );
};if _bbdgff .Resources !=nil {_abgdda .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbdgff .Resources .ToPdfObject ());};if _bbdgff .Matrix !=nil {_abgdda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbdgff .Matrix );};return _bbdgff ._bedae ;
};func (_fdgaa *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fdgaa ._eafg ==nil &&_fdgaa .DescendantFont !=nil {return _fdgaa .DescendantFont .FontDescriptor ();};return _fdgaa ._eafg ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fadb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fadb .Range };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_afe *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cfccf []float64 ;for _bdfe :=0;_bdfe < _afe .GetNumComponents ();_bdfe ++{_cfccf =append (_cfccf ,0.0,1.0);};return _cfccf ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_dbgfc *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_fcgf :=map[*PdfAnnotation ]bool {};_cbdcg ,_ccge :=_dbgfc .GetAnnotations ();if _ccge !=nil {return _ccge ;};_ecff :=false ;for _ ,_cadba :=range _cbdcg {if opts .AnnotFilterFunc !=nil {_fcgf [_cadba ]=opts .AnnotFilterFunc (_cadba );
}else {_fcgf [_cadba ]=true ;};if _fcgf [_cadba ]{_ecff =true ;};};if !_ecff {return nil ;};return _dbgfc .flattenFieldsWithOpts (appgen ,opts ,_fcgf );};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;func _dadec (_gecge *_ea .PdfObjectDictionary ,_aaed *fontCommon ,_ffad _ge .TextEncoder )(*pdfFontSimple ,error ){_dbbcf :=_fcbe (_aaed );_dbbcf ._gcgef =_ffad ;if _ffad ==nil {_deddd :=_gecge .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _deddd ==nil {_deddd =_ea .MakeInteger (0);};_dbbcf .FirstChar =_deddd ;_dggcg ,_dddbe :=_ea .GetIntVal (_deddd );if !_dddbe {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_deddd );
return nil ,_ea .ErrTypeError ;};_befge :=_ge .CharCode (_dggcg );_deddd =_gecge .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _deddd ==nil {_deddd =_ea .MakeInteger (255);};_dbbcf .LastChar =_deddd ;_dggcg ,_dddbe =_ea .GetIntVal (_deddd );
if !_dddbe {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_deddd );return nil ,_ea .ErrTypeError ;
};_efca :=_ge .CharCode (_dggcg );_dbbcf ._ffeb =make (map[_ge .CharCode ]float64 );_deddd =_gecge .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _deddd !=nil {_dbbcf .Widths =_deddd ;_dfddg ,_bbaf :=_ea .GetArray (_deddd );if !_bbaf {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_deddd );
return nil ,_ea .ErrTypeError ;};_abgefd ,_afdf :=_dfddg .ToFloat64Array ();if _afdf !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_afdf ;};if len (_abgefd )!=int (_efca -_befge +1){_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_efca -_befge +1,len (_abgefd ));
return nil ,_ea .ErrRangeError ;};for _cbaf ,_begg :=range _abgefd {_dbbcf ._ffeb [_befge +_ge .CharCode (_cbaf )]=_begg ;};};};_dbbcf .Encoding =_ea .TraceToDirectObject (_gecge .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dbbcf ,nil ;
};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dafae :=&PdfOutline {_fffae :_ea .MakeIndirectObject (_ea .MakeDict ())};_dafae ._bdddb =_dafae ;return _dafae ;};

// Items returns all children outline items.
func (_fdee *Outline )Items ()[]*OutlineItem {return _fdee .Entries };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ea .PdfObject ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_abdb *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfcf ,_adeed :=color .(*PdfColorDeviceRGB );if !_adeed {_ca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bfcf ,nil ;};func (_becg fontCommon )asPdfObjectDictionary (_fagef string )*_ea .PdfObjectDictionary {if _fagef !=""&&_becg ._dfeb !=""&&_fagef !=_becg ._dfeb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fagef ,_becg );
}else if _fagef ==""&&_becg ._dfeb ==""{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_becg );
}else if _becg ._dfeb ==""{_becg ._dfeb =_fagef ;};_gaed :=_ea .MakeDict ();_gaed .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0046\u006f\u006e\u0074"));_gaed .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ea .MakeName (_becg ._ceac ));
_gaed .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName (_becg ._dfeb ));if _becg ._eafg !=nil {_gaed .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_becg ._eafg .ToPdfObject ());};if _becg ._cbfe !=nil {_gaed .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_becg ._cbfe );
}else if _becg ._adbfa !=nil {_defad ,_edadb :=_becg ._adbfa .Stream ();if _edadb !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_edadb );
}else {_gaed .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_defad );};};return _gaed ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gade *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgca ,_eeace :=_ea .GetNumbersAsFloat (objects );
if _eeace !=nil {return nil ,_eeace ;};return _gade .ColorFromFloats (_gdgca );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_caadc *PdfShadingPattern )ToPdfObject ()_ea .PdfObject {_caadc .PdfPattern .ToPdfObject ();_ebbef :=_caadc .getDict ();if _caadc .Shading !=nil {_ebbef .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_caadc .Shading .ToPdfObject ());};if _caadc .Matrix !=nil {_ebbef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_caadc .Matrix );
};if _caadc .ExtGState !=nil {_ebbef .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_caadc .ExtGState );};return _caadc ._bedae ;};func (_dbfa *PdfWriter )checkCrossReferenceStream ()bool {_bdbaff :=_dbfa ._cedb .Major > 1||(_dbfa ._cedb .Major ==1&&_dbfa ._cedb .Minor > 4);
if _dbfa ._dfcee !=nil {_bdbaff =*_dbfa ._dfcee ;};return _bdbaff ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_abg .File ,error ){const _cefbc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_dbaaa ,_fcebf :=_abg .Open (pdfFile );if _fcebf !=nil {return nil ,nil ,_fcebf ;};_dfgbg ,_fcebf :=_fceba (_dbaaa ,opts ,true ,_cefbc );if _fcebf !=nil {_dbaaa .Close ();return nil ,nil ,_fcebf ;};_dfgbg ._bdggc =pdfFile ;return _dfgbg ,_dbaaa ,nil ;};


// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ea .PdfObject ;IC _ea .PdfObject ;BE _ea .PdfObject ;RD _ea .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbcec *PdfShadingType7 )ToPdfObject ()_ea .PdfObject {_bbcec .PdfShading .ToPdfObject ();_ebdgb ,_beffe :=_bbcec .getShadingDict ();if _beffe !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbcec .BitsPerCoordinate !=nil {_ebdgb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bbcec .BitsPerCoordinate );};if _bbcec .BitsPerComponent !=nil {_ebdgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbcec .BitsPerComponent );
};if _bbcec .BitsPerFlag !=nil {_ebdgb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bbcec .BitsPerFlag );};if _bbcec .Decode !=nil {_ebdgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbcec .Decode );};if _bbcec .Function !=nil {if len (_bbcec .Function )==1{_ebdgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbcec .Function [0].ToPdfObject ());
}else {_dcdde :=_ea .MakeArray ();for _ ,_cfdfda :=range _bbcec .Function {_dcdde .Append (_cfdfda .ToPdfObject ());};_ebdgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcdde );};};return _bbcec ._feebc ;};func (_eaccda *PdfReader )buildOutlineTree (_gdffd _ea .PdfObject ,_bdgeb *PdfOutlineTreeNode ,_aeadg *PdfOutlineTreeNode ,_ecded map[_ea .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ecded ==nil {_ecded =map[_ea .PdfObject ]struct{}{};
};_ecded [_gdffd ]=struct{}{};_aadea ,_cggea :=_gdffd .(*_ea .PdfIndirectObject );if !_cggea {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gdffd );
};_gbage ,_bbaa :=_aadea .PdfObject .(*_ea .PdfObjectDictionary );if !_bbaa {return nil ,nil ,_dc .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gbage ,_aadea ,_aadea );
if _adeec :=_gbage .Get ("\u0054\u0069\u0074l\u0065");_adeec !=nil {_fbcgb ,_bdage :=_eaccda .newPdfOutlineItemFromIndirectObject (_aadea );if _bdage !=nil {return nil ,nil ,_bdage ;};_fbcgb .Parent =_bdgeb ;_fbcgb .Prev =_aeadg ;_eeacb :=_ea .ResolveReference (_gbage .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_agaad :=_ecded [_eeacb ];_eeacb !=nil &&_eeacb !=_aadea &&!_agaad {if !_ea .IsNullObject (_eeacb ){_gagg ,_gbgbd ,_aeadb :=_eaccda .buildOutlineTree (_eeacb ,&_fbcgb .PdfOutlineTreeNode ,nil ,_ecded );if _aeadb !=nil {_ca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_aeadb );
}else {_fbcgb .First =_gagg ;_fbcgb .Last =_gbgbd ;};};};_dfaef :=_ea .ResolveReference (_gbage .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bdcad :=_ecded [_dfaef ];_dfaef !=nil &&_dfaef !=_aadea &&!_bdcad {if !_ea .IsNullObject (_dfaef ){_afede ,_cbbcg ,_fefac :=_eaccda .buildOutlineTree (_dfaef ,_bdgeb ,&_fbcgb .PdfOutlineTreeNode ,_ecded );
if _fefac !=nil {_ca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_fefac );
}else {_fbcgb .Next =_afede ;return &_fbcgb .PdfOutlineTreeNode ,_cbbcg ,nil ;};};};return &_fbcgb .PdfOutlineTreeNode ,&_fbcgb .PdfOutlineTreeNode ,nil ;};_ccced ,_ffcfg :=_bffc (_aadea );if _ffcfg !=nil {return nil ,nil ,_ffcfg ;};_ccced .Parent =_bdgeb ;
if _gcfef :=_gbage .Get ("\u0046\u0069\u0072s\u0074");_gcfef !=nil {_gcfef =_ea .ResolveReference (_gcfef );if _ ,_bgece :=_ecded [_gcfef ];_gcfef !=nil &&_gcfef !=_aadea &&!_bgece {_eegda :=_ea .TraceToDirectObject (_gcfef );if _ ,_fgced :=_eegda .(*_ea .PdfObjectNull );
!_fgced &&_eegda !=nil {_bcacf ,_fgagf ,_aaacd :=_eaccda .buildOutlineTree (_gcfef ,&_ccced .PdfOutlineTreeNode ,nil ,_ecded );if _aaacd !=nil {_ca .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_aaacd );
}else {_ccced .First =_bcacf ;_ccced .Last =_fgagf ;};};};};return &_ccced .PdfOutlineTreeNode ,&_ccced .PdfOutlineTreeNode ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ea .PdfObject ;};func (_dgffe *PdfReader )buildPageList (_gcdaf *_ea .PdfIndirectObject ,_efeg *_ea .PdfIndirectObject ,_acgdf map[_ea .PdfObject ]struct{})error {if _gcdaf ==nil {return nil ;
};if _ ,_adcad :=_acgdf [_gcdaf ];_adcad {_ca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gcdaf .ObjectNumber );
return nil ;};_acgdf [_gcdaf ]=struct{}{};_acda ,_eddbc :=_gcdaf .PdfObject .(*_ea .PdfObjectDictionary );if !_eddbc {return _dc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bfbea ,_eddbc :=(*_acda ).Get ("\u0054\u0079\u0070\u0065").(*_ea .PdfObjectName );
if !_eddbc {if _acda .Get ("\u004b\u0069\u0064\u0073")==nil {return _dc .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_bfbea =_ea .MakeName ("\u0050\u0061\u0067e\u0073");_acda .Set ("\u0054\u0079\u0070\u0065",_bfbea );};_ca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bfbea ,_gcdaf );
if *_bfbea =="\u0050\u0061\u0067\u0065"{_dbdgf ,_gcagf :=_dgffe .newPdfPageFromDict (_acda );if _gcagf !=nil {return _gcagf ;};_dbdgf .setContainer (_gcdaf );if _efeg !=nil {_acda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efeg );};_dgffe ._dfdbf =append (_dgffe ._dfdbf ,_gcdaf );
_dgffe .PageList =append (_dgffe .PageList ,_dbdgf );return nil ;};if *_bfbea !="\u0050\u0061\u0067e\u0073"{if _dgffe ._afedg .Opts !=nil &&_dgffe ._afedg .Opts .RelaxedMode {_ca .Log .Warning ("\u0057\u0061\u0072\u006e\u0069\u006e\u0067\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066 \u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050a\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063t\u0021\u0020(\u0025s\u0029",_bfbea );
return nil ;};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bfbea );
return _dc .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _efeg !=nil {_acda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efeg );};if !_dgffe ._bdddd {_fggbc :=_dgffe .traverseObjectData (_gcdaf );if _fggbc !=nil {return _fggbc ;};};_fgaed ,_fdbc :=_dgffe ._afedg .Resolve (_acda .Get ("\u004b\u0069\u0064\u0073"));
if _fdbc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fdbc ;};var _acce *_ea .PdfObjectArray ;
_acce ,_eddbc =_fgaed .(*_ea .PdfObjectArray );if !_eddbc {_ddfg ,_edegc :=_fgaed .(*_ea .PdfIndirectObject );if !_edegc {return _dc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_acce ,_eddbc =_ddfg .PdfObject .(*_ea .PdfObjectArray );
if !_eddbc {return _dc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_acce );
for _bbfeb ,_effff :=range _acce .Elements (){_dafag ,_bfadgb :=_ea .GetIndirect (_effff );if !_bfadgb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dafag );
return _dc .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_acce .Set (_bbfeb ,_dafag );_fdbc =_dgffe .buildPageList (_dafag ,_gcdaf ,_acgdf );if _fdbc !=nil {return _fdbc ;
};};return nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_gfgg *_ea .PdfObjectDictionary ;_gcdg *_ea .PdfIndirectObject ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bdead *PdfReader )GetObjectNums ()[]int {return _bdead ._afedg .GetObjectNums ()};var _bcca =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// SetPrintClip sets the value of the printClip.
func (_eaeea *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_eaeea ._bbgef =printClip };func (_agfba Image )getBase ()_dcc .ImageBase {return _dcc .NewImageBase (int (_agfba .Width ),int (_agfba .Height ),int (_agfba .BitsPerComponent ),_agfba .ColorComponents ,_agfba .Data ,_agfba ._abgae ,_agfba ._affe );
};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ea .PdfObject ;PreserveRB _ea .PdfObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_ffccd *PdfPage )SetContentStreams (cStreams []string ,encoder _ea .StreamEncoder )error {if len (cStreams )==0{_ffccd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ea .NewRawEncoder ();};var _ceeed []*_ea .PdfObjectStream ;for _ ,_ccbbe :=range cStreams {_dcecb :=&_ea .PdfObjectStream {};
_fddbb :=encoder .MakeStreamDict ();_eebde ,_fcfe :=encoder .EncodeBytes ([]byte (_ccbbe ));if _fcfe !=nil {return _fcfe ;};_fddbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ea .MakeInteger (int64 (len (_eebde ))));_dcecb .PdfObjectDictionary =_fddbb ;
_dcecb .Stream =_eebde ;_ceeed =append (_ceeed ,_dcecb );};if len (_ceeed )==1{_ffccd .Contents =_ceeed [0];}else {_edaae :=_ea .MakeArray ();for _ ,_aebbd :=range _ceeed {_edaae .Append (_aebbd );};_ffccd .Contents =_edaae ;};return nil ;};func (_bdd *PdfReader )newPdfActionGotoFromDict (_efad *_ea .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_efad .Get ("\u0044")},nil ;
};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_cebcf *PdfReader )GetCatalogMetadata ()(_ea .PdfObject ,bool ){if _cebcf ._gbggd ==nil {return nil ,false ;};_cecdg :=_cebcf ._gbggd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cecdg ,_cecdg !=nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_dfage *PdfReader )GetTrailer ()(*_ea .PdfObjectDictionary ,error ){_ccadg :=_dfage ._afedg .GetTrailer ();if _ccadg ==nil {return nil ,_dc .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ccadg ,nil ;
};func (_afed *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _afed ._eafg };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dcbbb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// Height returns the height of `rect`.
func (_eaeab *PdfRectangle )Height ()float64 {return _dgf .Abs (_eaeab .Ury -_eaeab .Lly )};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cggeb :=NewPdfAnnotation ();_dbgf :=&PdfAnnotationTrapNet {};_dbgf .PdfAnnotation =_cggeb ;_cggeb .SetContext (_dbgf );return _dbgf ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dafee *LTV )EnableByName (name string ,extraCerts []*_fgg .Certificate )error {_bcfega :=_dafee ._fgcff ._gcaa .AcroForm ;for _ ,_gdfec :=range _bcfega .AllFields (){_cebcg ,_ :=_gdfec .GetContext ().(*PdfFieldSignature );if _cebcg ==nil {continue ;
};if _facdeg :=_cebcg .PartialName ();_facdeg !=name {continue ;};return _dafee .Enable (_cebcg .V ,extraCerts );};return nil ;};

// Encoder returns the font's text encoder.
func (_ccdb pdfFontType0 )Encoder ()_ge .TextEncoder {return _ccdb ._dcdd };

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cgebd *PdfFieldButton )ToPdfObject ()_ea .PdfObject {_cgebd .PdfField .ToPdfObject ();_gfae :=_cgebd ._gegceb ;_fddd :=_gfae .PdfObject .(*_ea .PdfObjectDictionary );_fddd .Set ("\u0046\u0054",_ea .MakeName ("\u0042\u0074\u006e"));if _cgebd .Opt !=nil {_fddd .Set ("\u004f\u0070\u0074",_cgebd .Opt );
};return _gfae ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bgbged *PdfPageResources )GenerateXObjectName ()_ea .PdfObjectName {_dgedc :=1;for {_eadc :=_ea .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dgedc ));if !_bgbged .HasXObjectByName (*_eadc ){return *_eadc ;};_dgedc ++;};};func _fefcc (_gafdc *_ea .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ggaedd :=PdfShadingType6 {};
_bedfb :=_gafdc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bedfb ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccbbg ,_cfced :=_bedfb .(*_ea .PdfObjectInteger );if !_cfced {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bedfb );
return nil ,_ea .ErrTypeError ;};_ggaedd .BitsPerCoordinate =_ccbbg ;_bedfb =_gafdc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bedfb ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ccbbg ,_cfced =_bedfb .(*_ea .PdfObjectInteger );if !_cfced {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bedfb );
return nil ,_ea .ErrTypeError ;};_ggaedd .BitsPerComponent =_ccbbg ;_bedfb =_gafdc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bedfb ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ccbbg ,_cfced =_bedfb .(*_ea .PdfObjectInteger );if !_cfced {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bedfb );
return nil ,_ea .ErrTypeError ;};_ggaedd .BitsPerComponent =_ccbbg ;_bedfb =_gafdc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bedfb ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gaeafc ,_cfced :=_bedfb .(*_ea .PdfObjectArray );if !_cfced {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bedfb );
return nil ,_ea .ErrTypeError ;};_ggaedd .Decode =_gaeafc ;if _cdbdg :=_gafdc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cdbdg !=nil {_ggaedd .Function =[]PdfFunction {};if _aecbe ,_acagc :=_cdbdg .(*_ea .PdfObjectArray );_acagc {for _ ,_fdcgc :=range _aecbe .Elements (){_acdab ,_ddfbd :=_ebcdc (_fdcgc );
if _ddfbd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddfbd );return nil ,_ddfbd ;};_ggaedd .Function =append (_ggaedd .Function ,_acdab );
};}else {_bbafc ,_dbacd :=_ebcdc (_cdbdg );if _dbacd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbacd );return nil ,_dbacd ;
};_ggaedd .Function =append (_ggaedd .Function ,_bbafc );};};return &_ggaedd ,nil ;};func _fabca (_faeea _ea .PdfObject ){_ca .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_faeea ,_faeea .String ());if _fedfe ,_bgedcc :=_faeea .(*_ea .PdfObjectStream );
_bgedcc {_ddcag ,_fadeg :=_ea .DecodeStream (_fedfe );if _fadeg !=nil {_ca .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_fadeg );return ;};_ca .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_ddcag );}else if _bdagc ,_bece :=_faeea .(*_ea .PdfIndirectObject );
_bece {_ca .Log .Debug ("\u0025\u0054\u0020%\u0076",_bdagc .PdfObject ,_bdagc .PdfObject );_ca .Log .Debug ("\u0025\u0073",_bdagc .PdfObject .String ());};};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_addaf *PdfPageResources )GetShadingByName (keyName _ea .PdfObjectName )(*PdfShading ,bool ){if _addaf .Shading ==nil {return nil ,false ;};_ebecd ,_fbfa :=_ea .TraceToDirectObject (_addaf .Shading ).(*_ea .PdfObjectDictionary );if !_fbfa {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_addaf .Shading );
return nil ,false ;};if _egbde :=_ebecd .Get (keyName );_egbde !=nil {_daeec ,_agab :=_efefca (_egbde );if _agab !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_agab );
return nil ,false ;};return _daeec ,true ;};return nil ,false ;};func (_ececb *PdfWriter )setCatalogVersion (){_ececb ._dacfd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ea .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_ececb ._cedb .Major ,_ececb ._cedb .Minor )));
};func (_gbbgd *PdfReader )newPdfFieldFromIndirectObject (_gfca *_ea .PdfIndirectObject ,_gabb *PdfField )(*PdfField ,error ){if _aaacff ,_aecd :=_gbbgd ._aebcf .GetModelFromPrimitive (_gfca ).(*PdfField );_aecd {return _aaacff ,nil ;};_cddag ,_afbf :=_ea .GetDict (_gfca );
if !_afbf {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adbfd :=NewPdfField ();_adbfd ._gegceb =_gfca ;_adbfd ._gegceb .PdfObject =_cddag ;if _cegg ,_cff :=_ea .GetName (_cddag .Get ("\u0046\u0054"));_cff {_adbfd .FT =_cegg ;};if _gabb !=nil {_adbfd .Parent =_gabb ;};_adbfd .T ,_ =_cddag .Get ("\u0054").(*_ea .PdfObjectString );
_adbfd .TU ,_ =_cddag .Get ("\u0054\u0055").(*_ea .PdfObjectString );_adbfd .TM ,_ =_cddag .Get ("\u0054\u004d").(*_ea .PdfObjectString );_adbfd .Ff ,_ =_cddag .Get ("\u0046\u0066").(*_ea .PdfObjectInteger );_adbfd .V =_cddag .Get ("\u0056");_adbfd .DV =_cddag .Get ("\u0044\u0056");
_adbfd .AA =_cddag .Get ("\u0041\u0041");if DA :=_cddag .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_ea .GetString (DA );_adbfd .VariableText =&VariableText {DA :DA };Q ,_ :=_cddag .Get ("\u0051").(*_ea .PdfObjectInteger );DS ,_ :=_cddag .Get ("\u0044\u0053").(*_ea .PdfObjectString );
RV :=_cddag .Get ("\u0052\u0056");_adbfd .VariableText .Q =Q ;_adbfd .VariableText .DS =DS ;_adbfd .VariableText .RV =RV ;};_ccgd :=_adbfd .FT ;if _ccgd ==nil &&_gabb !=nil {_ccgd =_gabb .FT ;};if _ccgd !=nil {switch *_ccgd {case "\u0054\u0078":_afff ,_fcgcg :=_gcggce (_cddag );
if _fcgcg !=nil {return nil ,_fcgcg ;};_afff .PdfField =_adbfd ;_adbfd ._cdag =_afff ;case "\u0043\u0068":_eacg ,_ddbfag :=_facdcd (_cddag );if _ddbfag !=nil {return nil ,_ddbfag ;};_eacg .PdfField =_adbfd ;_adbfd ._cdag =_eacg ;case "\u0042\u0074\u006e":_bgbeg ,_bcbb :=_cagce (_cddag );
if _bcbb !=nil {return nil ,_bcbb ;};_bgbeg .PdfField =_adbfd ;_adbfd ._cdag =_bgbeg ;case "\u0053\u0069\u0067":_cdafg ,_deged :=_gbbgd .newPdfFieldSignatureFromDict (_cddag );if _deged !=nil {return nil ,_deged ;};_cdafg .PdfField =_adbfd ;_adbfd ._cdag =_cdafg ;
default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_adbfd .FT );return nil ,_dc .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _afdd ,_aggge :=_ea .GetName (_cddag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_aggge {if *_afdd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bgdb ,_gdfg :=_gbbgd .newPdfAnnotationFromIndirectObject (_gfca );if _gdfg !=nil {return nil ,_gdfg ;
};_dacae ,_aagfb :=_bgdb .GetContext ().(*PdfAnnotationWidget );if !_aagfb {return nil ,_dc .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dacae ._efb =_adbfd ;_dacae .Parent =_adbfd ._gegceb ;
_adbfd .Annotations =append (_adbfd .Annotations ,_dacae );return _adbfd ,nil ;};};_bdcc :=true ;if _fgfba ,_eddg :=_ea .GetArray (_cddag .Get ("\u004b\u0069\u0064\u0073"));_eddg {_ebcd :=make ([]*_ea .PdfIndirectObject ,0,_fgfba .Len ());for _ ,_dgge :=range _fgfba .Elements (){_ggde ,_ebgfa :=_ea .GetIndirect (_dgge );
if !_ebgfa {_cfad ,_dabd :=_ea .GetStream (_dgge );if _dabd &&_cfad .PdfObjectDictionary !=nil {_abbg ,_cfdda :=_ea .GetNameVal (_cfad .Get ("\u0054\u0079\u0070\u0065"));if _cfdda &&_abbg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ca .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_dc .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_abcdd ,_cbgabb :=_ea .GetDict (_ggde );
if !_cbgabb {return nil ,ErrTypeCheck ;};if _bdcc {_bdcc =!_bafba (_abcdd );};_ebcd =append (_ebcd ,_ggde );};for _ ,_fccf :=range _ebcd {if _bdcc {_effa ,_bcgc :=_gbbgd .newPdfAnnotationFromIndirectObject (_fccf );if _bcgc !=nil {_ca .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bcgc );
return nil ,_bcgc ;};_dagbd ,_dcea :=_effa ._fcf .(*PdfAnnotationWidget );if !_dcea {return nil ,ErrTypeCheck ;};_dagbd ._efb =_adbfd ;_adbfd .Annotations =append (_adbfd .Annotations ,_dagbd );}else {_cbfae ,_cecb :=_gbbgd .newPdfFieldFromIndirectObject (_fccf ,_adbfd );
if _cecb !=nil {_ca .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cecb );return nil ,_cecb ;};_adbfd .Kids =append (_adbfd .Kids ,_cbfae );
};};};return _adbfd ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gdeb *PdfWriter )SetNamedDestinations (dests _ea .PdfObject )error {if dests ==nil {return nil ;};_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gdeb ._dacfd .Set ("\u0044\u0065\u0073t\u0073",dests );return _gdeb .addObjects (dests );};

// GetAttachedFiles retrieves all the attached files info and content.
func (_fggeb *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_ceadf :=[]*EmbeddedFile {};_gfddec ,_cfebc :=_fggeb .GetNameDictionary ();if _cfebc !=nil {return nil ,_cfebc ;};if _gfddec ==nil {return _ceadf ,nil ;};_afbgc :=_egce (_gfddec );if _afbgc .EmbeddedFiles ==nil {return nil ,nil ;
};_eeecb :=_afbgc .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_dcedf ,_ggfgd :=_eeecb .(*_ea .PdfObjectArray );if !_ggfgd {return nil ,_dc .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _ecdd :=1;_ecdd < len (_dcedf .Elements ());_ecdd +=2{if _ecdd %2!=0{_fggfda :=_dcedf .Get (_ecdd );_gdfcd ,_ecfbdg :=NewPdfFilespecFromObj (_fggfda );if _ecfbdg !=nil {return nil ,_ecfbdg ;};_ccggb ,_ecfbdg :=NewEmbeddedFileFromObject (_gdfcd .EF );
if _ecfbdg !=nil {return nil ,_ecfbdg ;};_badde ,_bcbca :=_gdfcd .F .(*_ea .PdfObjectString );if _bcbca {_ccggb .Name =_badde .Str ();};_ccggb .Description =string (_gdfcd .Desc .Write ());_ccggb .Relationship =RelationshipUnspecified ;if _gdfcd .AFRelationship !=nil {switch string (_gdfcd .AFRelationship .Write ()){case "\u0053\u006f\u0075\u0072\u0063\u0065":_ccggb .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_ccggb .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_ccggb .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_ccggb .Relationship =RelationshipSupplement ;
default:_ccggb .Relationship =RelationshipUnspecified ;};};_ceadf =append (_ceadf ,_ccggb );};};return _ceadf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gaf *PdfActionMovie )ToPdfObject ()_ea .PdfObject {_gaf .PdfAction .ToPdfObject ();_cdga :=_gaf ._fgc ;_agec :=_cdga .PdfObject .(*_ea .PdfObjectDictionary );_agec .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeMovie )));_agec .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gaf .Annotation );
_agec .SetIfNotNil ("\u0054",_gaf .T );_agec .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gaf .Operation );return _cdga ;};

// ToPdfObject implements interface PdfModel.
func (_baf *PdfActionURI )ToPdfObject ()_ea .PdfObject {_baf .PdfAction .ToPdfObject ();_efee :=_baf ._fgc ;_cdg :=_efee .PdfObject .(*_ea .PdfObjectDictionary );_cdg .SetIfNotNil ("\u0053",_ea .MakeName (string (ActionTypeURI )));_cdg .SetIfNotNil ("\u0055\u0052\u0049",_baf .URI );
_cdg .SetIfNotNil ("\u0049\u0073\u004da\u0070",_baf .IsMap );return _efee ;};

// ToPdfObject implements interface PdfModel.
func (_fgeb *PdfAnnotationWatermark )ToPdfObject ()_ea .PdfObject {_fgeb .PdfAnnotation .ToPdfObject ();_cgda :=_fgeb ._eab ;_gaaa :=_cgda .PdfObject .(*_ea .PdfObjectDictionary );_gaaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gaaa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fgeb .FixedPrint );return _cgda ;};

// SetVersion sets the PDF version of the output file.
func (_dbcc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_dbcc ._cedb .Major =majorVersion ;_dbcc ._cedb .Minor =minorVersion ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ea .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_adaa *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_eadad ,_ ,_geefa :=_adaa .CharcodesToUnicodeWithStats (_adaa .BytesToCharcodes (data ));_aaefc :=_ge .ExpandLigatures (_eadad );return _aaefc ,_cc .RuneCountInString (_aaefc ),_geefa ;
};

// ToInteger convert to an integer format.
func (_egfab *PdfColorDeviceGray )ToInteger (bits int )uint32 {_deggc :=_dgf .Pow (2,float64 (bits ))-1;return uint32 (_deggc *_egfab .Val ());};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ggcf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daga :=vals [0];if _daga < 0.0||_daga > 1.0{_ca .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _daga < 0.0{_daga =0.0;}else if _daga > 1.0{_daga =1.0;};return NewPdfColorDeviceGray (_daga ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcb *PdfAnnotationMovie )ToPdfObject ()_ea .PdfObject {_dcb .PdfAnnotation .ToPdfObject ();_gagcf :=_dcb ._eab ;_aeafc :=_gagcf .PdfObject .(*_ea .PdfObjectDictionary );_aeafc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeName ("\u004d\u006f\u0076i\u0065"));
_aeafc .SetIfNotNil ("\u0054",_dcb .T );_aeafc .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_dcb .Movie );_aeafc .SetIfNotNil ("\u0041",_dcb .A );return _gagcf ;};func _eeeed (_ggeg _ea .PdfObject )[]*_ea .PdfObjectStream {if _ggeg ==nil {return nil ;};_egcbde ,_ceff :=_ea .GetArray (_ggeg );
if !_ceff ||_egcbde .Len ()==0{return nil ;};_baefa :=make ([]*_ea .PdfObjectStream ,0,_egcbde .Len ());for _ ,_fbfad :=range _egcbde .Elements (){if _gccge ,_gdbae :=_ea .GetStream (_fbfad );_gdbae {_baefa =append (_baefa ,_gccge );};};return _baefa ;
};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_feea *PdfField )SetContext (ctx PdfModel ){_feea ._cdag =ctx };

// AddWatermarkImage adds an image watermark to the page.
func (_bcgfe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_gddgg ,_ceebce :=_bcgfe .GetMediaBox ();if _ceebce !=nil {return _ceebce ;};_eeca :=_gddgg .Urx -_gddgg .Llx ;_afaaa :=_gddgg .Ury -_gddgg .Lly ;_bgbef :=opt .Angle *_dgf .Pi /180;
_eabca :=float64 (*ximg .Width );_baeca :=(_eeca -_eabca *_dgf .Cos (_bgbef ))/2;if opt .FitToWidth {_eabca =_eeca ;_baeca =0;};_egffbe :=_afaaa ;_gafg :=float64 (0);if opt .PreserveAspectRatio {_egffbe =_eabca *float64 (*ximg .Height )/float64 (*ximg .Width );
_gafg =(_afaaa -_egffbe )/2;_gafg -=float64 (*ximg .Width )/2*_dgf .Sin (_bgbef );};if _bcgfe .Resources ==nil {_bcgfe .Resources =NewPdfPageResources ();};_bafef :=NewXObjectForm ();_bafef .BBox =_ea .MakeArrayFromFloats ([]float64 {0,0,_eabca ,_egffbe });
_bafef .Resources =NewPdfPageResources ();_gceca :=0;_cgagb :=_ea .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_gceca ));for _bafef .Resources .HasXObjectByName (_cgagb ){_gceca ++;_cgagb =_ea .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_gceca ));
};_ceebce =_bafef .Resources .SetXObjectImageByName (_cgagb ,ximg );if _ceebce !=nil {return _ceebce ;};_gceca =0;_cdef :=_ea .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_gceca ));for _bafef .Resources .HasExtGState (_cdef ){_gceca ++;_cdef =_ea .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_gceca ));
};_aegbf :=_ea .MakeDict ();_aegbf .Set ("\u0042\u004d",_ea .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_aegbf .Set ("\u0043\u0041",_ea .MakeFloat (opt .Alpha ));_aegbf .Set ("\u0063\u0061",_ea .MakeFloat (opt .Alpha ));_ceebce =_bafef .Resources .AddExtGState (_cdef ,_aegbf );
if _ceebce !=nil {return _ceebce ;};_aeafcg :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_cdef ,_eabca ,_egffbe ,0.0,0.0,_cgagb );
_bafef .SetContentStream ([]byte (_aeafcg ),nil );_cbcde :=_ged .IdentityMatrix ().Rotate (_bgbef );_daeac :=[]float64 {_cbcde [0],_cbcde [1],_cbcde [3],_cbcde [4],_cbcde [6],_cbcde [7]};_bafef .Matrix =_ea .MakeArrayFromFloats (_daeac );_cccf :=_bcgfe .Resources .GenerateXObjectName ();
_ceebce =_bcgfe .Resources .SetXObjectFormByName (_cccf ,_bafef );if _ceebce !=nil {return _ceebce ;};_ebaba :=_c .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_baeca ,_gafg ,_cccf );
return _bcgfe .AppendContentBytes ([]byte (_ebaba ),true );};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gaadg *PdfPageResources )SetColorspaceByName (keyName _ea .PdfObjectName ,cs PdfColorspace )error {_abega ,_gbbce :=_gaadg .GetColorspaces ();if _gbbce !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gbbce );
return _gbbce ;};if _abega ==nil {_abega =NewPdfPageResourcesColorspaces ();_gaadg .SetColorSpace (_abega );};_abega .Set (keyName ,cs );return nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_feaede *PdfReader )GetEncryptionMethod ()string {_bggcgc :=_feaede ._afedg .GetCrypter ();return _bggcgc .String ();};func (_gegdd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _egfae (_cfbc *_ea .PdfObjectDictionary )*VRI {_baag ,_ :=_ea .GetString (_cfbc .Get ("\u0054\u0055"));_dace ,_ :=_ea .GetString (_cfbc .Get ("\u0054\u0053"));return &VRI {Cert :_eeeed (_cfbc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_eeeed (_cfbc .Get ("\u004f\u0043\u0053\u0050")),CRL :_eeeed (_cfbc .Get ("\u0043\u0052\u004c")),TU :_baag ,TS :_dace };
};func (_degba *PdfWriter )writeObjects (){_ca .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_degba ._cgdbdb ));_degba ._gggee =make (map[int ]crossReference );_degba ._gggee [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _degba ._dbge .ObjectMap !=nil {for _agaabc ,_acgga :=range _degba ._dbge .ObjectMap {if _agaabc ==0{continue ;};if _acgga .XType ==_ea .XrefTypeObjectStream {_feddd :=crossReference {Type :2,ObjectNumber :_acgga .OsObjNumber ,Index :_acgga .OsObjIndex };
_degba ._gggee [_agaabc ]=_feddd ;};if _acgga .XType ==_ea .XrefTypeTableEntry {_fbgef :=crossReference {Type :1,ObjectNumber :_acgga .ObjectNumber ,Offset :_acgga .Offset };_degba ._gggee [_agaabc ]=_fbgef ;};};};};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fd :=&PdfAnnotation {};_fd ._eab =_ea .MakeIndirectObject (_ea .MakeDict ());return _fd ;};func (_gca *PdfReader )newPdfActionSubmitFormFromDict (_gfc *_ea .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cbgd ,_edd :=_cfgb (_gfc .Get ("\u0046"));
if _edd !=nil {return nil ,_edd ;};return &PdfActionSubmitForm {F :_cbgd ,Fields :_gfc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gfc .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_adeag PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _adeag ._gbee .getFontDescriptor (),nil ;};var ErrColorOutOfRange =_dc .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// K returns the value of the key component of the color.
func (_gaad *PdfColorDeviceCMYK )K ()float64 {return _gaad [3]};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_feaa *PdfAnnotationWidget )Field ()*PdfField {return _feaa ._efb };

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_fgee []*PdfFont ;CurrentFont *PdfFont ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gede :=NewPdfAction ();_ac :=&PdfActionGoToE {};_ac .PdfAction =_gede ;_gede .SetContext (_ac );return _ac ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_aa :=NewPdfAction ();_eac :=&PdfActionThread {};_eac .PdfAction =_aa ;_aa .SetContext (_eac );return _eac ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bacf *PdfColorspaceLab )ToPdfObject ()_ea .PdfObject {_eeebb :=_ea .MakeArray ();_eeebb .Append (_ea .MakeName ("\u004c\u0061\u0062"));_gddd :=_ea .MakeDict ();if _bacf .WhitePoint !=nil {_gbcbb :=_ea .MakeArray (_ea .MakeFloat (_bacf .WhitePoint [0]),_ea .MakeFloat (_bacf .WhitePoint [1]),_ea .MakeFloat (_bacf .WhitePoint [2]));
_gddd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gbcbb );}else {_ca .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _bacf .BlackPoint !=nil {_cbbe :=_ea .MakeArray (_ea .MakeFloat (_bacf .BlackPoint [0]),_ea .MakeFloat (_bacf .BlackPoint [1]),_ea .MakeFloat (_bacf .BlackPoint [2]));_gddd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cbbe );
};if _bacf .Range !=nil {_gbde :=_ea .MakeArray (_ea .MakeFloat (_bacf .Range [0]),_ea .MakeFloat (_bacf .Range [1]),_ea .MakeFloat (_bacf .Range [2]),_ea .MakeFloat (_bacf .Range [3]));_gddd .Set ("\u0052\u0061\u006eg\u0065",_gbde );};_eeebb .Append (_gddd );
if _bacf ._bgabb !=nil {_bacf ._bgabb .PdfObject =_eeebb ;return _bacf ._bgabb ;};return _eeebb ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _fg .Time ){_dcgec .Lock ();defer _dcgec .Unlock ();_cgedb =modifiedDate ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_abbf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_gacbg :=NewPdfWriter ();_gacbg .SetFileName (_abbf ._bdggc );if opts ==nil {opts =&ReaderToWriterOpts {};};_dfebd ,_gbfc :=_abbf .GetNumPages ();if _gbfc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbfc );
return nil ,_gbfc ;};for _egdab :=1;_egdab <=_dfebd ;_egdab ++{_adbb ,_aaeef :=_abbf .GetPage (_egdab );if _aaeef !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aaeef );return nil ,_aaeef ;};if opts .PageProcessCallback !=nil {_aaeef =opts .PageProcessCallback (_egdab ,_adbb );
if _aaeef !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aaeef );return nil ,_aaeef ;};}else if opts .PageCallback !=nil {opts .PageCallback (_egdab ,_adbb );};_aaeef =_gacbg .AddPage (_adbb );if _aaeef !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aaeef );
return nil ,_aaeef ;};};_gacbg ._cedb =_abbf .PdfVersion ();if !opts .SkipInfo {_egeaae ,_gffcd :=_abbf .GetPdfInfo ();if _gffcd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gffcd );}else {_gacbg ._dcca .PdfObject =_egeaae .ToPdfObject ();
};};if !opts .SkipMetadata {if _feeca :=_abbf ._gbggd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_feeca !=nil {if _dgfge :=_gacbg .SetCatalogMetadata (_feeca );_dgfge !=nil {return nil ,_dgfge ;};};};if !opts .SkipMarkInfo {if _afafb ,_efcgf :=_abbf .GetCatalogMarkInfo ();
_efcgf {if _agbfg :=_gacbg .SetCatalogMarkInfo (_afafb );_agbfg !=nil {return nil ,_agbfg ;};};};if !opts .SkipAcroForm {_bbaea :=_gacbg .SetForms (_abbf .AcroForm );if _bbaea !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbaea );
return nil ,_bbaea ;};};if !opts .SkipViewerPreferences {if _ggeafg ,_ecagd :=_abbf .GetCatalogViewerPreferences ();_ecagd {if _gcfac :=_gacbg .SetCatalogViewerPreferences (_ggeafg );_gcfac !=nil {return nil ,_gcfac ;};};};if !opts .SkipLanguage {if _eadfd ,_gbgfg :=_abbf .GetCatalogLanguage ();
_gbgfg {if _fgba :=_gacbg .SetCatalogLanguage (_eadfd );_fgba !=nil {return nil ,_fgba ;};};};if !opts .SkipOutlines {_gacbg .AddOutlineTree (_abbf .GetOutlineTree ());};if !opts .SkipOCProperties {_dgdbbb ,_caefb :=_abbf .GetOCProperties ();if _caefb !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caefb );
}else {_caefb =_gacbg .SetOCProperties (_dgdbbb );if _caefb !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caefb );};};};if !opts .SkipPageLabels {_aegag ,_effag :=_abbf .GetPageLabels ();if _effag !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_effag );
}else {_effag =_gacbg .SetPageLabels (_aegag );if _effag !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_effag );};};};if !opts .SkipNamedDests {_efcfa ,_acgfd :=_abbf .GetNamedDestinations ();if _acgfd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acgfd );
}else {_acgfd =_gacbg .SetNamedDestinations (_efcfa );if _acgfd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acgfd );};};};if !opts .SkipNameDictionary {_gdbecb ,_eebaaa :=_abbf .GetNameDictionary ();if _eebaaa !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebaaa );
}else {_eebaaa =_gacbg .SetNameDictionary (_gdbecb );if _eebaaa !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebaaa );};};};_ecdfg ,_dfgbaf :=_abbf .GetCatalogStructTreeRoot ();if _dfgbaf {_cfffg :=_gacbg .SetCatalogStructTreeRoot (_ecdfg );
if _cfffg !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfffg );};};if !opts .SkipRotation &&_abbf .Rotate !=nil {if _aeggc :=_gacbg .SetRotation (*_abbf .Rotate );_aeggc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeggc );
};};return &_gacbg ,nil ;};

// SetDate sets the `M` field of the signature.
func (_adddg *PdfSignature )SetDate (date _fg .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_adddg .M =_ea .MakeString (date .Format (format ));
};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_abfgf *ViewerPreferences )ToPdfObject ()_ea .PdfObject {_baeeda :=_ea .MakeDict ();if _abfgf ._ceadc !=nil {_baeeda .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_ea .MakeBool (*_abfgf ._ceadc ));};if _abfgf ._bfgeb !=nil {_baeeda .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_ea .MakeBool (*_abfgf ._bfgeb ));
};if _abfgf ._acgcg !=nil {_baeeda .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_ea .MakeBool (*_abfgf ._acgcg ));};if _abfgf ._fedgc !=nil {_baeeda .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_ea .MakeBool (*_abfgf ._fedgc ));
};if _abfgf ._becd !=nil {_baeeda .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_ea .MakeBool (*_abfgf ._becd ));};if _abfgf ._efadb !=nil {_baeeda .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_ea .MakeBool (*_abfgf ._efadb ));
};if _abfgf ._edegb !=""{_baeeda .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_ea .MakeName (string (_abfgf ._edegb )));};if _abfgf ._dadac !=""{_baeeda .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_ea .MakeName (string (_abfgf ._dadac )));
};if _abfgf ._fffaeg !=""{_baeeda .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_ea .MakeName (string (_abfgf ._fffaeg )));};if _abfgf ._bbgad !=""{_baeeda .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_ea .MakeName (string (_abfgf ._bbgad )));
};if _abfgf ._ebdf !=""{_baeeda .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_ea .MakeName (string (_abfgf ._ebdf )));};if _abfgf ._bbgef !=""{_baeeda .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_ea .MakeName (string (_abfgf ._bbgef )));
};if _abfgf ._gbce !=""{_baeeda .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_ea .MakeName (string (_abfgf ._gbce )));};if _abfgf ._accbb !=""{_baeeda .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_ea .MakeName (string (_abfgf ._accbb )));
};if _abfgf ._eccg !=nil {_baeeda .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_ea .MakeBool (*_abfgf ._eccg ));};if _abfgf ._gcffa !=nil {_baeeda .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_ea .MakeArrayFromIntegers (_abfgf ._gcffa ));
};if _abfgf ._cbgea !=0{_baeeda .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_ea .MakeInteger (int64 (_abfgf ._cbgea )));};return _baeeda ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_gbcad :=&XObjectImage {};_cgega :=&_ea .PdfObjectStream {};_cgega .PdfObjectDictionary =_ea .MakeDict ();_gbcad ._bccba =_cgega ;return _gbcad ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _ea .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_cdede :=NewXObjectImage ();if lazy {_eegcd ,_adcbb :=UpdateXObjectImageFromImage (_cdede ,img ,cs ,encoder );if _adcbb !=nil {return nil ,_adcbb ;
};_eegcd .ToPdfObject ();_adcbb =_eegcd ._bccba .MakeLazy ();if _adcbb !=nil {return nil ,_adcbb ;};_eegcd .Stream =nil ;return _eegcd ,nil ;};return UpdateXObjectImageFromImage (_cdede ,img ,cs ,encoder );};

// GetAscent returns the Ascent of the font `descriptor`.
func (_eade *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ea .GetNumberAsFloat (_eade .Ascent );};

// SetContext set the sub annotation (context).
func (_gaceg *PdfShading )SetContext (ctx PdfModel ){_gaceg ._bgaf =ctx };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_bcaec *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func _cfgb (_efaf _ea .PdfObject )(*PdfFilespec ,error ){if _efaf ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_efaf );};func (_cbb *PdfReader )newPdfActionNamedFromDict (_bfa *_ea .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bfa .Get ("\u004e")},nil ;
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bdbge *PdfOutline )ToPdfObject ()_ea .PdfObject {_aaabd :=_bdbge ._fffae ;_dbfg :=_aaabd .PdfObject .(*_ea .PdfObjectDictionary );_dbfg .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bdbge .First !=nil {_dbfg .Set ("\u0046\u0069\u0072s\u0074",_bdbge .First .ToPdfObject ());
};if _bdbge .Last !=nil {_dbfg .Set ("\u004c\u0061\u0073\u0074",_bdbge .Last .GetContext ().GetContainingPdfObject ());};if _bdbge .Parent !=nil {_dbfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdbge .Parent .GetContext ().GetContainingPdfObject ());
};if _bdbge .Count !=nil {_dbfg .Set ("\u0043\u006f\u0075n\u0074",_ea .MakeInteger (*_bdbge .Count ));};return _aaabd ;};func _efefca (_aggbf _ea .PdfObject )(*PdfShading ,error ){_abba :=&PdfShading {};var _aecbg *_ea .PdfObjectDictionary ;if _gbed ,_cebcb :=_ea .GetIndirect (_aggbf );
_cebcb {_abba ._feebc =_gbed ;_agcde ,_acfed :=_gbed .PdfObject .(*_ea .PdfObjectDictionary );if !_acfed {_ca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_ea .ErrTypeError ;};_aecbg =_agcde ;}else if _dafgg ,_efdag :=_ea .GetStream (_aggbf );_efdag {_abba ._feebc =_dafgg ;_aecbg =_dafgg .PdfObjectDictionary ;}else if _fedg ,_bcgag :=_ea .GetDict (_aggbf );_bcgag {_abba ._feebc =_fedg ;_aecbg =_fedg ;
}else {_ca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_aggbf );return nil ,_ea .ErrTypeError ;};if _aecbg ==nil {_ca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_dc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aggbf =_aecbg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _aggbf ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aggbf =_ea .TraceToDirectObject (_aggbf );_bdedg ,_ggbb :=_aggbf .(*_ea .PdfObjectInteger );if !_ggbb {_ca .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aggbf );
return nil ,_ea .ErrTypeError ;};if *_bdedg < 1||*_bdedg > 7{_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bdedg );
return nil ,_ea .ErrTypeError ;};_abba .ShadingType =_bdedg ;_aggbf =_aecbg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _aggbf ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bfeff ,_dbff :=NewPdfColorspaceFromPdfObject (_aggbf );if _dbff !=nil {_ca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dbff );
return nil ,_dbff ;};_abba .ColorSpace =_bfeff ;_aggbf =_aecbg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _aggbf !=nil {_aggbf =_ea .TraceToDirectObject (_aggbf );_ebbcc ,_bcgb :=_aggbf .(*_ea .PdfObjectArray );if !_bcgb {_ca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aggbf );
return nil ,_ea .ErrTypeError ;};_abba .Background =_ebbcc ;};_aggbf =_aecbg .Get ("\u0042\u0042\u006f\u0078");if _aggbf !=nil {_aggbf =_ea .TraceToDirectObject (_aggbf );_cgfbad ,_dfaafb :=_aggbf .(*_ea .PdfObjectArray );if !_dfaafb {_ca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aggbf );
return nil ,_ea .ErrTypeError ;};_ffgae ,_afgac :=NewPdfRectangle (*_cgfbad );if _afgac !=nil {_ca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_afgac );return nil ,_afgac ;};_abba .BBox =_ffgae ;};_aggbf =_aecbg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _aggbf !=nil {_aggbf =_ea .TraceToDirectObject (_aggbf );_dbda ,_acgfa :=_aggbf .(*_ea .PdfObjectBool );if !_acgfa {_ca .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aggbf );
return nil ,_ea .ErrTypeError ;};_abba .AntiAlias =_dbda ;};switch *_bdedg {case 1:_cddec ,_aagb :=_cagcf (_aecbg );if _aagb !=nil {return nil ,_aagb ;};_cddec .PdfShading =_abba ;_abba ._bgaf =_cddec ;return _abba ,nil ;case 2:_ggdf ,_bagd :=_dbed (_aecbg );
if _bagd !=nil {return nil ,_bagd ;};_ggdf .PdfShading =_abba ;_abba ._bgaf =_ggdf ;return _abba ,nil ;case 3:_fdfca ,_bdcfd :=_gggcg (_aecbg );if _bdcfd !=nil {return nil ,_bdcfd ;};_fdfca .PdfShading =_abba ;_abba ._bgaf =_fdfca ;return _abba ,nil ;case 4:_daegd ,_gcegc :=_bcda (_aecbg );
if _gcegc !=nil {return nil ,_gcegc ;};_daegd .PdfShading =_abba ;_abba ._bgaf =_daegd ;return _abba ,nil ;case 5:_ceab ,_cbdcb :=_adeea (_aecbg );if _cbdcb !=nil {return nil ,_cbdcb ;};_ceab .PdfShading =_abba ;_abba ._bgaf =_ceab ;return _abba ,nil ;
case 6:_acebe ,_cgfdb :=_fefcc (_aecbg );if _cgfdb !=nil {return nil ,_cgfdb ;};_acebe .PdfShading =_abba ;_abba ._bgaf =_acebe ;return _abba ,nil ;case 7:_eggad ,_fada :=_bbffc (_aecbg );if _fada !=nil {return nil ,_fada ;};_eggad .PdfShading =_abba ;
_abba ._bgaf =_eggad ;return _abba ,nil ;};return nil ,_dc .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _bbffc (_gcgec *_ea .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bbgdf :=PdfShadingType7 {};
_ceccbd :=_gcgec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ceccbd ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggadb ,_ccfab :=_ceccbd .(*_ea .PdfObjectInteger );if !_ccfab {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ceccbd );
return nil ,_ea .ErrTypeError ;};_bbgdf .BitsPerCoordinate =_ggadb ;_ceccbd =_gcgec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ceccbd ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ggadb ,_ccfab =_ceccbd .(*_ea .PdfObjectInteger );if !_ccfab {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ceccbd );
return nil ,_ea .ErrTypeError ;};_bbgdf .BitsPerComponent =_ggadb ;_ceccbd =_gcgec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ceccbd ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggadb ,_ccfab =_ceccbd .(*_ea .PdfObjectInteger );if !_ccfab {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ceccbd );
return nil ,_ea .ErrTypeError ;};_bbgdf .BitsPerComponent =_ggadb ;_ceccbd =_gcgec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ceccbd ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccbea ,_ccfab :=_ceccbd .(*_ea .PdfObjectArray );if !_ccfab {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceccbd );
return nil ,_ea .ErrTypeError ;};_bbgdf .Decode =_ccbea ;if _ccdgd :=_gcgec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ccdgd !=nil {_bbgdf .Function =[]PdfFunction {};if _dbdc ,_bgbgd :=_ccdgd .(*_ea .PdfObjectArray );_bgbgd {for _ ,_ebedc :=range _dbdc .Elements (){_eagbbd ,_bccaf :=_ebcdc (_ebedc );
if _bccaf !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bccaf );return nil ,_bccaf ;};_bbgdf .Function =append (_bbgdf .Function ,_eagbbd );
};}else {_gdbdb ,_egeag :=_ebcdc (_ccdgd );if _egeag !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egeag );return nil ,_egeag ;
};_bbgdf .Function =append (_bbgdf .Function ,_gdbdb );};};return &_bbgdf ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_dfbb *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _dfbb ._afedg .GetRevisionNumber ()==0{return nil ,_dc .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _bddba ,_accad :=_dfbb ._dgeg [_dfbb ];_accad {return _bddba ,nil ;};_aegd ,_ffbab :=_dfbb ._afedg .GetPreviousRevisionReadSeeker ();if _ffbab !=nil {return nil ,_ffbab ;};_fddaa ,_ffbab :=_fceba (_aegd ,_dfbb ._agbfa ,_dfbb ._fdcg ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _ffbab !=nil {return nil ,_ffbab ;};_dfbb ._bgae [_dfbb ._afedg .GetRevisionNumber ()-1]=_fddaa ;_dfbb ._dgeg [_dfbb ]=_fddaa ;_fddaa ._dgeg =_dfbb ._dgeg ;return _fddaa ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ea .PdfObjectStream ;OCSP []*_ea .PdfObjectStream ;CRL []*_ea .PdfObjectStream ;TU *_ea .PdfObjectString ;TS *_ea .PdfObjectString ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fcacd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fcacd .UnderlyingCS .GetNumComponents ();};func (_ececf *PdfFunctionType0 )processSamples ()error {_fabcc :=_af .ResampleBytes (_ececf ._dcabg ,_ececf .BitsPerSample );_ececf ._gfbc =_fabcc ;
return nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ea .PdfObject ;Popup *PdfAnnotationPopup ;CA _ea .PdfObject ;RC _ea .PdfObject ;CreationDate _ea .PdfObject ;IRT _ea .PdfObject ;Subj _ea .PdfObject ;RT _ea .PdfObject ;IT _ea .PdfObject ;ExData _ea .PdfObject ;};func (_fcaa *PdfAppender )addNewObject (_edcg _ea .PdfObject ){if _ ,_fggd :=_fcaa ._bagc [_edcg ];
!_fggd {_fcaa ._aggf =append (_fcaa ._aggf ,_edcg );_fcaa ._bagc [_edcg ]=struct{}{};};};var (StructureTypeParagraph StructureType ="\u0050";StructureTypeHeader StructureType ="\u0048";StructureTypeHeading1 StructureType ="\u0048\u0031";StructureTypeHeading2 StructureType ="\u0048\u0032";
StructureTypeHeading3 StructureType ="\u0048\u0033";StructureTypeHeading4 StructureType ="\u0048\u0034";StructureTypeHeading5 StructureType ="\u0048\u0035";StructureTypeHeading6 StructureType ="\u0048\u0036";StructureTypeList StructureType ="\u004c";StructureTypeListItem StructureType ="\u004c\u0049";
StructureTypeLabel StructureType ="\u004c\u0062\u006c";StructureTypeListBody StructureType ="\u004c\u0042\u006fd\u0079";StructureTypeTable StructureType ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow StructureType ="\u0054\u0052";StructureTypeTableHeaderCell StructureType ="\u0054\u0048";
StructureTypeTableData StructureType ="\u0054\u0044";StructureTypeTableHead StructureType ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody StructureType ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter StructureType ="\u0054\u0046\u006fo\u0074";
);

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_egdga :=&XObjectForm {};_egefc :=&_ea .PdfObjectStream {};_egefc .PdfObjectDictionary =_ea .MakeDict ();_egdga ._dgbbc =_egefc ;return _egdga ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ea .PdfObject ;};func (_dggab *PdfWriter )writeXRefStreams (_dbef int ,_ceffe int64 )error {_dfdde :=_dbef +1;_dggab ._gggee [_dfdde ]=crossReference {Type :1,ObjectNumber :_dfdde ,Offset :_ceffe };
_dbeb :=_cb .NewBuffer (nil );_badbg :=_ea .MakeArray ();for _bccca :=0;_bccca <=_dbef ;{for ;_bccca <=_dbef ;_bccca ++{_ababb ,_aefcg :=_dggab ._gggee [_bccca ];if _aefcg &&(!_dggab ._eefcgg ||_dggab ._eefcgg &&(_ababb .Type ==1&&_ababb .Offset >=_dggab ._fbccg ||_ababb .Type ==0)){break ;
};};var _aabdd int ;for _aabdd =_bccca +1;_aabdd <=_dbef ;_aabdd ++{_afdcb ,_abfdf :=_dggab ._gggee [_aabdd ];if _abfdf &&(!_dggab ._eefcgg ||_dggab ._eefcgg &&(_afdcb .Type ==1&&_afdcb .Offset > _dggab ._fbccg )){continue ;};break ;};_badbg .Append (_ea .MakeInteger (int64 (_bccca )),_ea .MakeInteger (int64 (_aabdd -_bccca )));
for _gbecdd :=_bccca ;_gbecdd < _aabdd ;_gbecdd ++{_cdaca :=_dggab ._gggee [_gbecdd ];switch _cdaca .Type {case 0:_ff .Write (_dbeb ,_ff .BigEndian ,byte (0));_ff .Write (_dbeb ,_ff .BigEndian ,uint32 (0));_ff .Write (_dbeb ,_ff .BigEndian ,uint16 (0xFFFF));
case 1:_ff .Write (_dbeb ,_ff .BigEndian ,byte (1));_ff .Write (_dbeb ,_ff .BigEndian ,uint32 (_cdaca .Offset ));_ff .Write (_dbeb ,_ff .BigEndian ,uint16 (_cdaca .Generation ));case 2:_ff .Write (_dbeb ,_ff .BigEndian ,byte (2));_ff .Write (_dbeb ,_ff .BigEndian ,uint32 (_cdaca .ObjectNumber ));
_ff .Write (_dbeb ,_ff .BigEndian ,uint16 (_cdaca .Index ));};};_bccca =_aabdd +1;};_dcbfg ,_egdgbd :=_ea .MakeStream (_dbeb .Bytes (),_ea .NewFlateEncoder ());if _egdgbd !=nil {return _egdgbd ;};_dcbfg .ObjectNumber =int64 (_dfdde );_dcbfg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0058\u0052\u0065\u0066"));
_dcbfg .PdfObjectDictionary .Set ("\u0057",_ea .MakeArray (_ea .MakeInteger (1),_ea .MakeInteger (4),_ea .MakeInteger (2)));_dcbfg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_badbg );_dcbfg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ea .MakeInteger (int64 (_dfdde )));
_dcbfg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dggab ._dcca );_dcbfg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dggab ._cfbed );if _dggab ._eefcgg &&_dggab ._abcdg > 0{_dcbfg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ea .MakeInteger (_dggab ._abcdg ));
};if _dggab ._afcgd !=nil {_dcbfg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dggab ._eadec );};if _dggab ._bfcab ==nil &&_dggab ._fgac !=""&&_dggab ._abbcf !=""{_dggab ._bfcab =_ea .MakeArray (_ea .MakeHexString (_dggab ._fgac ),_ea .MakeHexString (_dggab ._abbcf ));
};if _dggab ._bfcab !=nil {_ca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dggab ._bfcab );_dcbfg .Set ("\u0049\u0044",_dggab ._bfcab );};_dggab .writeObject (int (_dcbfg .ObjectNumber ),_dcbfg );return nil ;};func (_abc *PdfReader )newPdfAnnotationScreenFromDict (_fadf *_ea .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_egdb :=PdfAnnotationScreen {};
_egdb .T =_fadf .Get ("\u0054");_egdb .MK =_fadf .Get ("\u004d\u004b");_egdb .A =_fadf .Get ("\u0041");_egdb .AA =_fadf .Get ("\u0041\u0041");return &_egdb ,nil ;};func (_bddcc *LTV )getOCSPs (_gddg []*_fgg .Certificate ,_eeebbc map[string ]*_fgg .Certificate )([][]byte ,error ){_aaeg :=make ([][]byte ,0,len (_gddg ));
for _ ,_gdab :=range _gddg {for _ ,_bgbgec :=range _gdab .OCSPServer {if _bddcc .CertClient .IsCA (_gdab ){continue ;};_fcgfb ,_eeeea :=_eeebbc [_gdab .Issuer .CommonName ];if !_eeeea {_ca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_acddd ,_efcc :=_bddcc .OCSPClient .MakeRequest (_bgbgec ,_gdab ,_fcgfb );if _efcc !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_efcc );
continue ;};_aaeg =append (_aaeg ,_acddd );};};return _aaeg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_fgff *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ea .PdfObject ;MK _ea .PdfObject ;A _ea .PdfObject ;AA _ea .PdfObject ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gcfb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gcfb ._egfdg .(*PdfShadingPattern );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_efbde pdfFontType3 )GetCharMetrics (code _ge .CharCode )(_gf .CharMetrics ,bool ){if _eebdcf ,_egegg :=_efbde ._aegce [code ];_egegg {return _gf .CharMetrics {Wx :_eebdcf },true ;};if _gf .IsStdFont (_gf .StdFontName (_efbde ._ceac )){return _gf .CharMetrics {Wx :250},true ;
};return _gf .CharMetrics {},false ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ebcb *PdfField )FullName ()(string ,error ){var _bbbc _cb .Buffer ;_ecabg :=[]string {};if _ebcb .T !=nil {_ecabg =append (_ecabg ,_ebcb .T .Decoded ());};_ccae :=map[*PdfField ]bool {};_ccae [_ebcb ]=true ;_egffb :=_ebcb .Parent ;for _egffb !=nil {if _ ,_efdb :=_ccae [_egffb ];
_efdb {return _bbbc .String (),_dc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _egffb .T ==nil {return _bbbc .String (),_dc .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ecabg =append (_ecabg ,_egffb .T .Decoded ());_ccae [_egffb ]=true ;_egffb =_egffb .Parent ;};for _gggb :=len (_ecabg )-1;_gggb >=0;_gggb --{_bbbc .WriteString (_ecabg [_gggb ]);if _gggb > 0{_bbbc .WriteString ("\u002e");};};return _bbbc .String (),nil ;
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_dadg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_adbc ,_ddae :=color .(*PdfColorCalGray );if !_ddae {_ca .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_adbc .Val ();X :=_dadg .WhitePoint [0]*_dgf .Pow (ANorm ,_dadg .Gamma );Y :=_dadg .WhitePoint [1]*_dgf .Pow (ANorm ,_dadg .Gamma );
Z :=_dadg .WhitePoint [2]*_dgf .Pow (ANorm ,_dadg .Gamma );_dacg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bbcf :=-0.969256*X +1.875992*Y +0.041556*Z ;_fgebe :=0.055648*X +-0.204043*Y +1.057311*Z ;_dacg =_dgf .Min (_dgf .Max (_dacg ,0),1.0);_bbcf =_dgf .Min (_dgf .Max (_bbcf ,0),1.0);
_fgebe =_dgf .Min (_dgf .Max (_fgebe ,0),1.0);return NewPdfColorDeviceRGB (_dacg ,_bbcf ,_fgebe ),nil ;};

// C returns the value of the C component of the color.
func (_eaec *PdfColorCalRGB )C ()float64 {return _eaec [2]};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ea .PdfObject )(*PdfFont ,error ){return _fagd (fontObj ,true )};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ccad *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_dc .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bafg ,_bfee :=_dcc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abgae ,img ._affe );if _bfee !=nil {return img ,_bfee ;};_debd ,_bfee :=_dcc .NRGBAConverter .Convert (_bafg );if _bfee !=nil {return img ,_bfee ;
};_gcff :=_aefbb (_debd .Base ());_ca .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ca .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ca .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_gcff .Data );
_ca .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_gcff );return _gcff ,nil ;};func (_gfdce *DSS )generateHashMap (_dbgd []*_ea .PdfObjectStream )(map[string ]*_ea .PdfObjectStream ,error ){_eabg :=map[string ]*_ea .PdfObjectStream {};
for _ ,_feff :=range _dbgd {_cagc ,_bfeg :=_ea .DecodeStream (_feff );if _bfeg !=nil {return nil ,_bfeg ;};_fdfa ,_bfeg :=_cgdfd (_cagc );if _bfeg !=nil {return nil ,_bfeg ;};_eabg [string (_fdfa )]=_feff ;};return _eabg ,nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_bddc *PdfInfo )GetCustomInfo (name string )*_ea .PdfObjectString {var _dafba *_ea .PdfObjectString ;if _bddc ._bafgg ==nil {return _dafba ;};if _aaef ,_gbdd :=_bddc ._bafgg .Get (*_ea .MakeName (name )).(*_ea .PdfObjectString );_gbdd {_dafba =_aaef ;
};return _dafba ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gccab *PdfPattern )GetContext ()PdfModel {return _gccab ._egfdg };func (_ddeeb *PdfWriter )adjustXRefAffectedVersion (_eegc bool ){if _eegc &&_ddeeb ._cedb .Major ==1&&_ddeeb ._cedb .Minor < 5{_ddeeb ._cedb .Minor =5;};};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ea .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _abgff error ;encoder ,_abgff =img .getSuitableEncoder ();if _abgff !=nil {_ca .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_abgff );
encoder =_ea .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_ebdae ,_cedg :=encoder .EncodeBytes (img .Data );if _cedg !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cedg );
return nil ,_cedg ;};_geefae :=NewXObjectImage ();_afee :=img .Width ;_gfebd :=img .Height ;_geefae .Width =&_afee ;_geefae .Height =&_gfebd ;_dfbfeb :=img .BitsPerComponent ;_geefae .BitsPerComponent =&_dfbfeb ;_geefae .Filter =encoder ;_geefae .Stream =_ebdae ;
if cs ==nil {if img .ColorComponents ==1{_geefae .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_ea .DCTEncoder :_geefae .ColorSpace =NewPdfColorspaceDeviceRGB ();_dfbfeb =8;_geefae .BitsPerComponent =&_dfbfeb ;
};};}else if img .ColorComponents ==3{_geefae .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_ea .DCTEncoder :_geefae .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_geefae .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_dc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_geefae .ColorSpace =cs ;};if len (img ._abgae )!=0{_cggdf :=NewXObjectImage ();_cggdf .Filter =encoder ;_gacbbg ,_dfggf :=encoder .EncodeBytes (img ._abgae );
if _dfggf !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dfggf );return nil ,_dfggf ;};_cggdf .Stream =_gacbbg ;_cggdf .BitsPerComponent =_geefae .BitsPerComponent ;
_cggdf .Width =&img .Width ;_cggdf .Height =&img .Height ;_cggdf .ColorSpace =NewPdfColorspaceDeviceGray ();_geefae .SMask =_cggdf .ToPdfObject ();}else {_geefae .SMask =xobjIn .SMask ;_geefae .ImageMask =xobjIn .ImageMask ;if _geefae .ColorSpace .GetNumComponents ()==1{_ggbf (_geefae );
};};return _geefae ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gec :=NewPdfAction ();_gedf :=&PdfActionSetOCGState {};_gedf .PdfAction =_gec ;_gec .SetContext (_gedf );return _gedf ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fbceg *PdfRectangle )Normalize (){if _fbceg .Llx > _fbceg .Urx {_fbceg .Llx ,_fbceg .Urx =_fbceg .Urx ,_fbceg .Llx ;};if _fbceg .Lly > _fbceg .Ury {_fbceg .Lly ,_fbceg .Ury =_fbceg .Ury ,_fbceg .Lly ;};};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cdfbf *PdfPageResources )HasExtGState (keyName _ea .PdfObjectName )bool {_ ,_bbdec :=_cdfbf .GetFontByName (keyName );return _bbdec ;};

// ToPdfObject implements interface PdfModel.
func (_cedf *EmbeddedFile )ToPdfObject ()_ea .PdfObject {_dffgd :=_ea .NewFlateEncoder ();_aaddc ,_abcc :=_ea .MakeStream (_cedf .Content ,_dffgd );if _abcc !=nil {_ca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_abcc );
return nil ;};_efggf :=_aaddc .PdfObjectDictionary ;_efggf .Set ("\u0054\u0079\u0070\u0065",_ea .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_efggf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ea .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_eadge :=_ea .MakeDict ();_eadge .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_ea .MakeString (_cedf .Hash [:]));_eadge .Set ("\u0053\u0069\u007a\u0065",_ea .MakeInteger (int64 (len (_cedf .Content ))));_adgfc :=_cedf .CreationTime ;if _adgfc .IsZero (){_adgfc =_fg .Now ();
};_dbaa :=_cedf .ModTime ;if _dbaa .IsZero (){_dbaa =_adgfc ;};_bgff ,_abcc :=NewPdfDateFromTime (_adgfc );if _abcc !=nil {_ca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_abcc );
return nil ;};_deggf ,_abcc :=NewPdfDateFromTime (_dbaa );if _abcc !=nil {_ca .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_abcc );
return nil ;};_eadge .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bgff .ToPdfObject ());_eadge .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_deggf .ToPdfObject ());_efggf .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_eadge );
_fgag :=_ea .MakeDict ();_fgag .Set (*_ea .MakeName ("\u0046"),_aaddc );return _fgag ;};func _cagcf (_ecefg *_ea .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fgdfb :=PdfShadingType1 {};if _cbddb :=_ecefg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_cbddb !=nil {_cbddb =_ea .TraceToDirectObject (_cbddb );_daece ,_gebcgd :=_cbddb .(*_ea .PdfObjectArray );if !_gebcgd {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbddb );
return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgdfb .Domain =_daece ;};if _bbgd :=_ecefg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bbgd !=nil {_bbgd =_ea .TraceToDirectObject (_bbgd );
_gdae ,_bbfg :=_bbgd .(*_ea .PdfObjectArray );if !_bbfg {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgd );return nil ,_dc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgdfb .Matrix =_gdae ;};_fgec :=_ecefg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fgec ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgdfb .Function =[]PdfFunction {};if _cgfa ,_bccgbf :=_fgec .(*_ea .PdfObjectArray );_bccgbf {for _ ,_gfcdd :=range _cgfa .Elements (){_bcbdb ,_edbga :=_ebcdc (_gfcdd );if _edbga !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edbga );
return nil ,_edbga ;};_fgdfb .Function =append (_fgdfb .Function ,_bcbdb );};}else {_dbagf ,_dfea :=_ebcdc (_fgec );if _dfea !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfea );
return nil ,_dfea ;};_fgdfb .Function =append (_fgdfb .Function ,_dbagf );};return &_fgdfb ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bfgf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bfgf .flattenFieldsWithOpts (false ,appgen ,opts );};func _aaagg (_eaag []byte )[]byte {const _baged =52845;const _efecg =22719;_eaccd :=55665;
for _ ,_cgdb :=range _eaag [:4]{_eaccd =(int (_cgdb )+_eaccd )*_baged +_efecg ;};_edag :=make ([]byte ,len (_eaag )-4);for _cfcae ,_aaded :=range _eaag [4:]{_edag [_cfcae ]=byte (int (_aaded )^_eaccd >>8);_eaccd =(int (_aaded )+_eaccd )*_baged +_efecg ;
};return _edag ;};

// AddChild adds a child object.
func (_eadbb *KDict )AddChild (kv *KValue ){_eadbb ._deecfd =append (_eadbb ._deecfd ,kv )};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dcgec .Lock ();defer _dcgec .Unlock ();_eecb =keywords };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ea .PdfObject ;Mac _ea .PdfObject ;Unix _ea .PdfObject ;NewWindow _ea .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_aee *pdfCIDFontType2 )ToPdfObject ()_ea .PdfObject {if _aee ._ffgab ==nil {_aee ._ffgab =&_ea .PdfIndirectObject {};};_bgead :=_aee .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_aee ._ffgab .PdfObject =_bgead ;
if _aee .CIDSystemInfo !=nil {_bgead .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_aee .CIDSystemInfo );};if _aee .DW !=nil {_bgead .Set ("\u0044\u0057",_aee .DW );};if _aee .DW2 !=nil {_bgead .Set ("\u0044\u0057\u0032",_aee .DW2 );
};if _aee .W !=nil {_bgead .Set ("\u0057",_aee .W );};if _aee .W2 !=nil {_bgead .Set ("\u0057\u0032",_aee .W2 );};if _aee .CIDToGIDMap !=nil {_bgead .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_aee .CIDToGIDMap );};return _aee ._ffgab ;
};func (_eeec *PdfReader )lookupPageByObject (_dfege _ea .PdfObject )(*PdfPage ,error ){return nil ,_dc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _gedbda (_afba *_ea .PdfObjectDictionary ,_faae *fontCommon )(*pdfCIDFontType2 ,error ){if _faae ._dfeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_faae );
return nil ,_ea .ErrRangeError ;};_efefg :=_ffca (_faae );_ggafd ,_bddgbf :=_ea .GetDict (_afba .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bddgbf {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_faae );
return nil ,ErrRequiredAttributeMissing ;};_efefg .CIDSystemInfo =_ggafd ;_efefg .DW =_afba .Get ("\u0044\u0057");_efefg .W =_afba .Get ("\u0057");_efefg .DW2 =_afba .Get ("\u0044\u0057\u0032");_efefg .W2 =_afba .Get ("\u0057\u0032");_efefg .CIDToGIDMap =_afba .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_efefg ._dfdf =1000.0;if _egebb ,_ceag :=_ea .GetNumberAsFloat (_efefg .DW );_ceag ==nil {_efefg ._dfdf =_egebb ;};_afbaa ,_deggg :=_dafgd (_efefg .W );if _deggg !=nil {return nil ,_deggg ;};if _afbaa ==nil {_afbaa =map[_ge .CharCode ]float64 {};};_efefg ._agcef =_afbaa ;
return _efefg ,nil ;};