//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_cf "bytes";_fb "crypto/md5";_eeg "crypto/rand";_gec "crypto/sha1";_ed "crypto/x509";_ee "encoding/binary";_df "encoding/hex";_bag "errors";_e "fmt";_db "github.com/gabriel-vasile/mimetype";_bfb "github.com/unidoc/pkcs7";
_ebdd "github.com/unidoc/unipdf/v3/common";_eag "github.com/unidoc/unipdf/v3/core";_ac "github.com/unidoc/unipdf/v3/core/security";_fdg "github.com/unidoc/unipdf/v3/core/security/crypt";_cd "github.com/unidoc/unipdf/v3/internal/cmap";_fde "github.com/unidoc/unipdf/v3/internal/imageutil";
_bda "github.com/unidoc/unipdf/v3/internal/license";_dba "github.com/unidoc/unipdf/v3/internal/sampling";_gbf "github.com/unidoc/unipdf/v3/internal/textencoding";_eda "github.com/unidoc/unipdf/v3/internal/timeutils";_de "github.com/unidoc/unipdf/v3/internal/transform";
_ce "github.com/unidoc/unipdf/v3/model/internal/docutil";_eeb "github.com/unidoc/unipdf/v3/model/internal/fonts";_fcg "github.com/unidoc/unipdf/v3/model/mdp";_be "github.com/unidoc/unipdf/v3/model/sigutil";_bd "github.com/unidoc/unipdf/v3/ps";_gecc "github.com/unidoc/unitype";
_aa "golang.org/x/xerrors";_c "hash";_d "image";_ge "image/color";_ "image/gif";_ "image/png";_ba "io";_eb "io/ioutil";_gcg "math";_fd "math/rand";_fc "os";_ebd "path/filepath";_gc "regexp";_ea "sort";_da "strconv";_cb "strings";_g "sync";_ag "time";_bf "unicode";
_gg "unicode/utf8";);

// ToPdfObject implements interface PdfModel.
func (_bgf *PdfActionURI )ToPdfObject ()_eag .PdfObject {_bgf .PdfAction .ToPdfObject ();_dgc :=_bgf ._ggd ;_gfe :=_dgc .PdfObject .(*_eag .PdfObjectDictionary );_gfe .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeURI )));_gfe .SetIfNotNil ("\u0055\u0052\u0049",_bgf .URI );
_gfe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_bgf .IsMap );return _dgc ;};func (_dbfgc *Image )samplesAddPadding (_agdf []uint32 )[]uint32 {_egece :=_fde .BytesPerLine (int (_dbfgc .Width ),int (_dbfgc .BitsPerComponent ),_dbfgc .ColorComponents )*(8/int (_dbfgc .BitsPerComponent ));
_cgeaa :=_egece *int (_dbfgc .Height );if len (_agdf )==_cgeaa {return _agdf ;};_gggb :=make ([]uint32 ,_cgeaa );_abcfd :=int (_dbfgc .Width )*_dbfgc .ColorComponents ;for _cgdb :=0;_cgdb < int (_dbfgc .Height );_cgdb ++{_gfafd :=_cgdb *int (_dbfgc .Width );
_bcabg :=_cgdb *_egece ;for _adgcd :=0;_adgcd < _abcfd ;_adgcd ++{_gggb [_bcabg +_adgcd ]=_agdf [_gfafd +_adgcd ];};};return _gggb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fdea *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgfc ,_dddf :=_eag .GetNumbersAsFloat (objects );
if _dddf !=nil {return nil ,_dddf ;};return _fdea .ColorFromFloats (_cgfc );};func (_fgc *PdfReader )loadAction (_aaccf _eag .PdfObject )(*PdfAction ,error ){if _egc ,_faf :=_eag .GetIndirect (_aaccf );_faf {_ada ,_bfae :=_fgc .newPdfActionFromIndirectObject (_egc );
if _bfae !=nil {return nil ,_bfae ;};return _ada ,nil ;}else if !_eag .IsNullObject (_aaccf ){return nil ,_bag .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// Y returns the value of the yellow component of the color.
func (_bbdgf *PdfColorDeviceCMYK )Y ()float64 {return _bbdgf [2]};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_acae *PdfOutline )ToPdfObject ()_eag .PdfObject {_badfa :=_acae ._cgcea ;_egded :=_badfa .PdfObject .(*_eag .PdfObjectDictionary );_egded .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _acae .First !=nil {_egded .Set ("\u0046\u0069\u0072s\u0074",_acae .First .ToPdfObject ());
};if _acae .Last !=nil {_egded .Set ("\u004c\u0061\u0073\u0074",_acae .Last .GetContext ().GetContainingPdfObject ());};if _acae .Parent !=nil {_egded .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_acae .Parent .GetContext ().GetContainingPdfObject ());
};if _acae .Count !=nil {_egded .Set ("\u0043\u006f\u0075n\u0074",_eag .MakeInteger (*_acae .Count ));};return _badfa ;};

// ToPdfObject implements interface PdfModel.
func (_cacc *PdfAnnotationCircle )ToPdfObject ()_eag .PdfObject {_cacc .PdfAnnotation .ToPdfObject ();_daea :=_cacc ._gfa ;_bfg :=_daea .PdfObject .(*_eag .PdfObjectDictionary );_cacc .PdfAnnotationMarkup .appendToPdfDictionary (_bfg );_bfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_bfg .SetIfNotNil ("\u0042\u0053",_cacc .BS );_bfg .SetIfNotNil ("\u0049\u0043",_cacc .IC );_bfg .SetIfNotNil ("\u0042\u0045",_cacc .BE );_bfg .SetIfNotNil ("\u0052\u0044",_cacc .RD );return _daea ;};func (_fdab *LTV )enable (_fcddc ,_bbgc []*_ed .Certificate ,_fgcef string )error {_deecd ,_cdgfe ,_bdcgc :=_fdab .buildCertChain (_fcddc ,_bbgc );
if _bdcgc !=nil {return _bdcgc ;};_fbee ,_bdcgc :=_fdab .getCerts (_deecd );if _bdcgc !=nil {return _bdcgc ;};var _cafdg ,_afdd [][]byte ;if _fdab .OCSPClient !=nil {_cafdg ,_bdcgc =_fdab .getOCSPs (_deecd ,_cdgfe );if _bdcgc !=nil {return _bdcgc ;};};
if _fdab .CRLClient !=nil {_afdd ,_bdcgc =_fdab .getCRLs (_deecd );if _bdcgc !=nil {return _bdcgc ;};};_bgagce :=_fdab ._cgcca ;_efgcd ,_bdcgc :=_bgagce .AddCerts (_fbee );if _bdcgc !=nil {return _bdcgc ;};_gbacb ,_bdcgc :=_bgagce .AddOCSPs (_cafdg );if _bdcgc !=nil {return _bdcgc ;
};_adcc ,_bdcgc :=_bgagce .AddCRLs (_afdd );if _bdcgc !=nil {return _bdcgc ;};if _fgcef !=""{_bgagce .VRI [_fgcef ]=&VRI {Cert :_efgcd ,OCSP :_gbacb ,CRL :_adcc };};_fdab ._cbdb .SetDSS (_bgagce );return nil ;};func _dgaab (_ggfba *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ggfba }};


// ToPdfObject converts the font to a PDF representation.
func (_cecbd *pdfFontType0 )ToPdfObject ()_eag .PdfObject {if _cecbd ._gefcg ==nil {_cecbd ._gefcg =&_eag .PdfIndirectObject {};};_cadeb :=_cecbd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cecbd ._gefcg .PdfObject =_cadeb ;if _cecbd .Encoding !=nil {_cadeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cecbd .Encoding );
}else if _cecbd ._cege !=nil {_cadeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cecbd ._cege .ToPdfObject ());};if _cecbd .DescendantFont !=nil {_cadeb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_eag .MakeArray (_cecbd .DescendantFont .ToPdfObject ()));
};return _cecbd ._gefcg ;};

// ValidateSignatures validates digital signatures in the document.
func (_dgcee *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dgcee .AcroForm ==nil {return nil ,nil ;};if _dgcee .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fdfac *PdfSignature ;
_cdbgc *PdfField ;_cdbgf SignatureHandler ;};var _dgdea []*sigFieldPair ;for _ ,_gggfd :=range _dgcee .AcroForm .AllFields (){if _gggfd .V ==nil {continue ;};if _fgfcc ,_gbgfg :=_eag .GetDict (_gggfd .V );_gbgfg {if _cacca ,_bcbec :=_eag .GetNameVal (_fgfcc .Get ("\u0054\u0079\u0070\u0065"));
_bcbec &&(_cacca =="\u0053\u0069\u0067"||_cacca =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_feaeb ,_cafc :=_eag .GetIndirect (_gggfd .V );if !_cafc {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ggbd ,_bdabc :=_dgcee .newPdfSignatureFromIndirect (_feaeb );if _bdabc !=nil {return nil ,_bdabc ;};var _egceb SignatureHandler ;for _ ,_abfdf :=range handlers {if _abfdf .IsApplicable (_ggbd ){_egceb =_abfdf ;break ;};};_dgdea =append (_dgdea ,&sigFieldPair {_fdfac :_ggbd ,_cdbgc :_gggfd ,_cdbgf :_egceb });
};};};var _gebb []SignatureValidationResult ;for _ ,_fgbcb :=range _dgdea {_beca :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fgbcb ._cdbgc }};if _fgbcb ._cdbgf ==nil {_beca .Errors =append (_beca .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_gebb =append (_gebb ,_beca );continue ;};_gaabg ,_bbaab :=_fgbcb ._cdbgf .NewDigest (_fgbcb ._fdfac );if _bbaab !=nil {_beca .Errors =append (_beca .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bbaab .Error ());_gebb =append (_gebb ,_beca );
continue ;};_aafgb :=_fgbcb ._fdfac .ByteRange ;if _aafgb ==nil {_beca .Errors =append (_beca .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_gebb =append (_gebb ,_beca );continue ;};for _dccb :=0;
_dccb < _aafgb .Len ();_dccb =_dccb +2{_aagcg ,_ :=_eag .GetNumberAsInt64 (_aafgb .Get (_dccb ));_gbecd ,_ :=_eag .GetIntVal (_aafgb .Get (_dccb +1));if _ ,_adbgf :=_dgcee ._cfacd .Seek (_aagcg ,_ba .SeekStart );_adbgf !=nil {return nil ,_adbgf ;};_egffa :=make ([]byte ,_gbecd );
if _ ,_cdbbg :=_dgcee ._cfacd .Read (_egffa );_cdbbg !=nil {return nil ,_cdbbg ;};_gaabg .Write (_egffa );};var _gdaac SignatureValidationResult ;if _dfedc ,_dcace :=_fgbcb ._cdbgf .(SignatureHandlerDocMDP );_dcace {_gdaac ,_bbaab =_dfedc .ValidateWithOpts (_fgbcb ._fdfac ,_gaabg ,SignatureHandlerDocMDPParams {Parser :_dgcee ._afegd });
}else {_gdaac ,_bbaab =_fgbcb ._cdbgf .Validate (_fgbcb ._fdfac ,_gaabg );};if _bbaab !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_bbaab ,_fgbcb ._cdbgf );_gdaac .Errors =append (_gdaac .Errors ,_bbaab .Error ());
};_gdaac .Name =_fgbcb ._fdfac .Name .Decoded ();_gdaac .Reason =_fgbcb ._fdfac .Reason .Decoded ();if _fgbcb ._fdfac .M !=nil {_ebgffe ,_ecbfg :=NewPdfDate (_fgbcb ._fdfac .M .String ());if _ecbfg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbfg );
_gdaac .Errors =append (_gdaac .Errors ,_ecbfg .Error ());continue ;};_gdaac .Date =_ebgffe ;};_gdaac .ContactInfo =_fgbcb ._fdfac .ContactInfo .Decoded ();_gdaac .Location =_fgbcb ._fdfac .Location .Decoded ();_gdaac .Fields =_beca .Fields ;_gebb =append (_gebb ,_gdaac );
};return _gebb ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);type modelManager struct{_gfbgg map[PdfModel ]_eag .PdfObject ;_agda map[_eag .PdfObject ]PdfModel ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gead :=NewPdfAnnotation ();_fbfg :=&PdfAnnotation3D {};_fbfg .PdfAnnotation =_gead ;_gead .SetContext (_fbfg );return _fbfg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_abge *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_efbde *PdfField )GetContext ()PdfModel {return _efbde ._afdfd };func _fcgda (_gced *_eag .PdfObjectStream )(*PdfFunctionType0 ,error ){_gfbg :=&PdfFunctionType0 {};_gfbg ._abcad =_gced ;_aeagb :=_gced .PdfObjectDictionary ;_bfgb ,_ccgbb :=_eag .TraceToDirectObject (_aeagb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eag .PdfObjectArray );
if !_ccgbb {_ebdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bfgb .Len ()< 0||_bfgb .Len ()%2!=0{_ebdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_gfbg .NumInputs =_bfgb .Len ()/2;_aegf ,_aaea :=_bfgb .ToFloat64Array ();if _aaea !=nil {return nil ,_aaea ;};_gfbg .Domain =_aegf ;_bfgb ,_ccgbb =_eag .TraceToDirectObject (_aeagb .Get ("\u0052\u0061\u006eg\u0065")).(*_eag .PdfObjectArray );if !_ccgbb {_ebdd .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bfgb .Len ()< 0||_bfgb .Len ()%2!=0{return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gfbg .NumOutputs =_bfgb .Len ()/2;_gebff ,_aaea :=_bfgb .ToFloat64Array ();if _aaea !=nil {return nil ,_aaea ;};_gfbg .Range =_gebff ;_bfgb ,_ccgbb =_eag .TraceToDirectObject (_aeagb .Get ("\u0053\u0069\u007a\u0065")).(*_eag .PdfObjectArray );if !_ccgbb {_ebdd .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efgcg ,_aaea :=_bfgb .ToIntegerArray ();
if _aaea !=nil {return nil ,_aaea ;};if len (_efgcg )!=_gfbg .NumInputs {_ebdd .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbg .Size =_efgcg ;_fbad ,_ccgbb :=_eag .TraceToDirectObject (_aeagb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_eag .PdfObjectInteger );
if !_ccgbb {_ebdd .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fbad !=1&&*_fbad !=2&&*_fbad !=4&&*_fbad !=8&&*_fbad !=12&&*_fbad !=16&&*_fbad !=24&&*_fbad !=32{_ebdd .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fbad );
return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbg .BitsPerSample =int (*_fbad );_gfbg .Order =1;_fcgff ,_ccgbb :=_eag .TraceToDirectObject (_aeagb .Get ("\u004f\u0072\u0064e\u0072")).(*_eag .PdfObjectInteger );
if _ccgbb {if *_fcgff !=1&&*_fcgff !=3{_ebdd .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fcgff );return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbg .Order =int (*_fcgff );
};_bfgb ,_ccgbb =_eag .TraceToDirectObject (_aeagb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_eag .PdfObjectArray );if _ccgbb {_cbbgee ,_acea :=_bfgb .ToFloat64Array ();if _acea !=nil {return nil ,_acea ;};_gfbg .Encode =_cbbgee ;};_bfgb ,_ccgbb =_eag .TraceToDirectObject (_aeagb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_eag .PdfObjectArray );
if _ccgbb {_bagff ,_efabc :=_bfgb .ToFloat64Array ();if _efabc !=nil {return nil ,_efabc ;};_gfbg .Decode =_bagff ;};_gcabg ,_aaea :=_eag .DecodeStream (_gced );if _aaea !=nil {return nil ,_aaea ;};_gfbg ._gcffb =_gcabg ;return _gfbg ,nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_aecaaa *CompliancePdfReader )error ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gfbc *OutlineItem )ToPdfObject ()_eag .PdfObject {_fccdcb ,_ :=_gfbc .ToPdfOutlineItem ();return _fccdcb .ToPdfObject ();};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _ag .Time ;ModTime _ag .Time ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egdde *PdfShading )ToPdfObject ()_eag .PdfObject {_ccddbe :=_egdde ._aadgg ;_cbbaf ,_febe :=_egdde .getShadingDict ();if _febe !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _egdde .ShadingType !=nil {_cbbaf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_egdde .ShadingType );};if _egdde .ColorSpace !=nil {_cbbaf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_egdde .ColorSpace .ToPdfObject ());
};if _egdde .Background !=nil {_cbbaf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_egdde .Background );};if _egdde .BBox !=nil {_cbbaf .Set ("\u0042\u0042\u006f\u0078",_egdde .BBox .ToPdfObject ());};if _egdde .AntiAlias !=nil {_cbbaf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_egdde .AntiAlias );
};return _ccddbe ;};func (_ffefd *PdfReader )newPdfFieldSignatureFromDict (_ccbc *_eag .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cbdee :=&PdfFieldSignature {};_eccdg ,_bdaf :=_eag .GetIndirect (_ccbc .Get ("\u0056"));if _bdaf {var _dabd error ;
_cbdee .V ,_dabd =_ffefd .newPdfSignatureFromIndirect (_eccdg );if _dabd !=nil {return nil ,_dabd ;};};_cbdee .Lock ,_ =_eag .GetIndirect (_ccbc .Get ("\u004c\u006f\u0063\u006b"));_cbdee .SV ,_ =_eag .GetIndirect (_ccbc .Get ("\u0053\u0056"));return _cbdee ,nil ;
};

// SetBorderWidth sets the style's border width.
func (_bcae *PdfBorderStyle )SetBorderWidth (width float64 ){_bcae .W =&width };

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_acc :=NewPdfAction ();_gda :=&PdfActionResetForm {};_gda .PdfAction =_acc ;_acc .SetContext (_gda );return _gda ;};func _eccfb (_ggefe string )map[string ]string {_fegfe :=_bfaf .Split (_ggefe ,-1);_eadf :=map[string ]string {};
for _ ,_cddcfc :=range _fegfe {_gdebd :=_geeef .FindStringSubmatch (_cddcfc );if _gdebd ==nil {continue ;};_bcegf ,_fgfaf :=_gdebd [1],_gdebd [2];_eadf [_bcegf ]=_fgfaf ;};return _eadf ;};func _cgacdf (_cbefg *_eag .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ebed :=PdfShadingType1 {};
if _bgff :=_cbefg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bgff !=nil {_bgff =_eag .TraceToDirectObject (_bgff );_gafaa ,_ccca :=_bgff .(*_eag .PdfObjectArray );if !_ccca {_ebdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgff );
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebed .Domain =_gafaa ;};if _dbaaaa :=_cbefg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dbaaaa !=nil {_dbaaaa =_eag .TraceToDirectObject (_dbaaaa );
_dcee ,_acecg :=_dbaaaa .(*_eag .PdfObjectArray );if !_acecg {_ebdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbaaaa );return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ebed .Matrix =_dcee ;};_aaaa :=_cbefg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aaaa ==nil {_ebdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ebed .Function =[]PdfFunction {};if _fadef ,_efdb :=_aaaa .(*_eag .PdfObjectArray );_efdb {for _ ,_acfac :=range _fadef .Elements (){_cgdef ,_bagge :=_baaab (_acfac );if _bagge !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bagge );
return nil ,_bagge ;};_ebed .Function =append (_ebed .Function ,_cgdef );};}else {_acgge ,_facfbe :=_baaab (_aaaa );if _facfbe !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facfbe );
return nil ,_facfbe ;};_ebed .Function =append (_ebed .Function ,_acgge );};return &_ebed ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edada *PdfColorspaceSpecialSeparation )ToPdfObject ()_eag .PdfObject {_gcce :=_eag .MakeArray (_eag .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_gcce .Append (_edada .ColorantName );_gcce .Append (_edada .AlternateSpace .ToPdfObject ());
_gcce .Append (_edada .TintTransform .ToPdfObject ());if _edada ._dffab !=nil {_edada ._dffab .PdfObject =_gcce ;return _edada ._dffab ;};return _gcce ;};func (_bbed *PdfReader )newPdfAnnotationPolygonFromDict (_efaf *_eag .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_add :=PdfAnnotationPolygon {};
_ccef ,_bcge :=_bbed .newPdfAnnotationMarkupFromDict (_efaf );if _bcge !=nil {return nil ,_bcge ;};_add .PdfAnnotationMarkup =_ccef ;_add .Vertices =_efaf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_add .LE =_efaf .Get ("\u004c\u0045");_add .BS =_efaf .Get ("\u0042\u0053");
_add .IC =_efaf .Get ("\u0049\u0043");_add .BE =_efaf .Get ("\u0042\u0045");_add .IT =_efaf .Get ("\u0049\u0054");_add .Measure =_efaf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_add ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffe *PdfAnnotationUnderline )ToPdfObject ()_eag .PdfObject {_ffe .PdfAnnotation .ToPdfObject ();_bdbf :=_ffe ._gfa ;_gcgd :=_bdbf .PdfObject .(*_eag .PdfObjectDictionary );_ffe .PdfAnnotationMarkup .appendToPdfDictionary (_gcgd );_gcgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_gcgd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffe .QuadPoints );return _bdbf ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_eggd *PdfAnnotationMovie )ToPdfObject ()_eag .PdfObject {_eggd .PdfAnnotation .ToPdfObject ();_agccf :=_eggd ._gfa ;_dacbd :=_agccf .PdfObject .(*_eag .PdfObjectDictionary );_dacbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u004d\u006f\u0076i\u0065"));
_dacbd .SetIfNotNil ("\u0054",_eggd .T );_dacbd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_eggd .Movie );_dacbd .SetIfNotNil ("\u0041",_eggd .A );return _agccf ;};func (_adg *PdfReader )newPdfAnnotationPolyLineFromDict (_fae *_eag .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bacc :=PdfAnnotationPolyLine {};
_cefd ,_feec :=_adg .newPdfAnnotationMarkupFromDict (_fae );if _feec !=nil {return nil ,_feec ;};_bacc .PdfAnnotationMarkup =_cefd ;_bacc .Vertices =_fae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bacc .LE =_fae .Get ("\u004c\u0045");_bacc .BS =_fae .Get ("\u0042\u0053");
_bacc .IC =_fae .Get ("\u0049\u0043");_bacc .BE =_fae .Get ("\u0042\u0045");_bacc .IT =_fae .Get ("\u0049\u0054");_bacc .Measure =_fae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bacc ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject implements interface PdfModel.
func (_gfca *PdfAnnotationPolygon )ToPdfObject ()_eag .PdfObject {_gfca .PdfAnnotation .ToPdfObject ();_ggbf :=_gfca ._gfa ;_eacf :=_ggbf .PdfObject .(*_eag .PdfObjectDictionary );_gfca .PdfAnnotationMarkup .appendToPdfDictionary (_eacf );_eacf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_eacf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gfca .Vertices );_eacf .SetIfNotNil ("\u004c\u0045",_gfca .LE );_eacf .SetIfNotNil ("\u0042\u0053",_gfca .BS );_eacf .SetIfNotNil ("\u0049\u0043",_gfca .IC );_eacf .SetIfNotNil ("\u0042\u0045",_gfca .BE );
_eacf .SetIfNotNil ("\u0049\u0054",_gfca .IT );_eacf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gfca .Measure );return _ggbf ;};func _egfcc (_ffaa []byte )([]byte ,error ){_gffagb :=_gec .New ();if _ ,_abbce :=_ba .Copy (_gffagb ,_cf .NewReader (_ffaa ));
_abbce !=nil {return nil ,_abbce ;};return _gffagb .Sum (nil ),nil ;};func (_caab *DSS )add (_eagcd *[]*_eag .PdfObjectStream ,_agdg map[string ]*_eag .PdfObjectStream ,_baeb [][]byte )([]*_eag .PdfObjectStream ,error ){_afaf :=make ([]*_eag .PdfObjectStream ,0,len (_baeb ));
for _ ,_abdab :=range _baeb {_ffb ,_gffa :=_egfcc (_abdab );if _gffa !=nil {return nil ,_gffa ;};_dadba ,_dbdedc :=_agdg [string (_ffb )];if !_dbdedc {_dadba ,_gffa =_eag .MakeStream (_abdab ,_eag .NewRawEncoder ());if _gffa !=nil {return nil ,_gffa ;};
_agdg [string (_ffb )]=_dadba ;*_eagcd =append (*_eagcd ,_dadba );};_afaf =append (_afaf ,_dadba );};return _afaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fce *PdfActionRendition )ToPdfObject ()_eag .PdfObject {_fce .PdfAction .ToPdfObject ();_eaed :=_fce ._ggd ;_dbad :=_eaed .PdfObject .(*_eag .PdfObjectDictionary );_dbad .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeRendition )));_dbad .SetIfNotNil ("\u0052",_fce .R );
_dbad .SetIfNotNil ("\u0041\u004e",_fce .AN );_dbad .SetIfNotNil ("\u004f\u0050",_fce .OP );_dbad .SetIfNotNil ("\u004a\u0053",_fce .JS );return _eaed ;};func _fgdgc (_ddfef *PdfField )[]*PdfField {_ecae :=[]*PdfField {_ddfef };for _ ,_bagag :=range _ddfef .Kids {_ecae =append (_ecae ,_fgdgc (_bagag )...);
};return _ecae ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ebfce *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// WriteToFile writes the Appender output to file specified by path.
func (_efgb *PdfAppender )WriteToFile (outputPath string )error {_gdec ,_agbd :=_fc .Create (outputPath );if _agbd !=nil {return _agbd ;};defer _gdec .Close ();return _efgb .Write (_gdec );};

// ColorToRGB converts a CalGray color to an RGB color.
func (_beg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgda ,_fbdg :=color .(*PdfColorCalGray );if !_fbdg {_ebdd .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dgda .Val ();X :=_beg .WhitePoint [0]*_gcg .Pow (ANorm ,_beg .Gamma );Y :=_beg .WhitePoint [1]*_gcg .Pow (ANorm ,_beg .Gamma );Z :=_beg .WhitePoint [2]*_gcg .Pow (ANorm ,_beg .Gamma );
_cdba :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfgc :=-0.969256*X +1.875992*Y +0.041556*Z ;_beag :=0.055648*X +-0.204043*Y +1.057311*Z ;_cdba =_gcg .Min (_gcg .Max (_cdba ,0),1.0);_dfgc =_gcg .Min (_gcg .Max (_dfgc ,0),1.0);_beag =_gcg .Min (_gcg .Max (_beag ,0),1.0);
return NewPdfColorDeviceRGB (_cdba ,_dfgc ,_beag ),nil ;};

// Add appends an outline item as a child of the current outline item.
func (_bgbaf *OutlineItem )Add (item *OutlineItem ){_bgbaf .Entries =append (_bgbaf .Entries ,item )};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_ebfgc :fonts ,CurrentFont :fonts [0]};};func (_gdffc *PdfWriter )checkCrossReferenceStream ()bool {_bfadc :=_gdffc ._ddcce .Major > 1||(_gdffc ._ddcce .Major ==1&&_gdffc ._ddcce .Minor > 4);
if _gdffc ._edbba !=nil {_bfadc =*_gdffc ._edbba ;};return _bfadc ;};

// ToPdfObject implements interface PdfModel.
func (_cfeg *PdfAnnotationStamp )ToPdfObject ()_eag .PdfObject {_cfeg .PdfAnnotation .ToPdfObject ();_bgef :=_cfeg ._gfa ;_ddag :=_bgef .PdfObject .(*_eag .PdfObjectDictionary );_cfeg .PdfAnnotationMarkup .appendToPdfDictionary (_ddag );_ddag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053\u0074\u0061m\u0070"));
_ddag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cfeg .Name );return _bgef ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dfed :=&PdfOutline {_cgcea :_eag .MakeIndirectObject (_eag .MakeDict ())};_dfed ._addfb =_dfed ;return _dfed ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_daafa *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _eag .GetNumberAsFloat (_daafa .Descent );};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_feeef *Outline )ToPdfOutline ()*PdfOutline {_ebfff :=NewPdfOutline ();var _ccfff []*PdfOutlineItem ;var _dddgb int64 ;var _cega *PdfOutlineItem ;for _ ,_aefe :=range _feeef .Entries {_ffdfg ,_gfgbg :=_aefe .ToPdfOutlineItem ();_ffdfg .Parent =&_ebfff .PdfOutlineTreeNode ;
if _cega !=nil {_cega .Next =&_ffdfg .PdfOutlineTreeNode ;_ffdfg .Prev =&_cega .PdfOutlineTreeNode ;};_ccfff =append (_ccfff ,_ffdfg );_dddgb +=_gfgbg ;_cega =_ffdfg ;};_bdcec :=int64 (len (_ccfff ));_dddgb +=_bdcec ;if _bdcec > 0{_ebfff .First =&_ccfff [0].PdfOutlineTreeNode ;
_ebfff .Last =&_ccfff [_bdcec -1].PdfOutlineTreeNode ;_ebfff .Count =&_dddgb ;};return _ebfff ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_dggfa *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ggbfb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_aadfa ,_eecec :=_dggfa .GetNumPages ();if _eecec !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eecec );
return nil ,_eecec ;};for _gcbbb :=1;_gcbbb <=_aadfa ;_gcbbb ++{_ddfeb ,_efgg :=_dggfa .GetPage (_gcbbb );if _efgg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgg );return nil ,_efgg ;};if opts .PageProcessCallback !=nil {_efgg =opts .PageProcessCallback (_gcbbb ,_ddfeb );
if _efgg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgg );return nil ,_efgg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gcbbb ,_ddfeb );};_efgg =_ggbfb .AddPage (_ddfeb );if _efgg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgg );
return nil ,_efgg ;};};_ggbfb ._ddcce =_dggfa .PdfVersion ();if !opts .SkipInfo {_cfacf ,_adde :=_dggfa .GetPdfInfo ();if _adde !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adde );}else {_ggbfb ._eagcbd .PdfObject =_cfacf .ToPdfObject ();
};};if !opts .SkipMetadata {if _eddfb :=_dggfa ._adbgg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eddfb !=nil {if _ebce :=_ggbfb .SetCatalogMetadata (_eddfb );_ebce !=nil {return nil ,_ebce ;};};};if !opts .SkipMarkInfo {if _cfeb ,_eeeea :=_dggfa .GetCatalogMarkInfo ();
_eeeea {if _fdbce :=_ggbfb .SetCatalogMarkInfo (_cfeb );_fdbce !=nil {return nil ,_fdbce ;};};};if !opts .SkipAcroForm {_afabe :=_ggbfb .SetForms (_dggfa .AcroForm );if _afabe !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afabe );
return nil ,_afabe ;};};if !opts .SkipViewerPreferences {if _aedcg ,_gdbf :=_dggfa .GetCatalogViewerPreferences ();_gdbf {if _aecca :=_ggbfb .SetCatalogViewerPreferences (_aedcg );_aecca !=nil {return nil ,_aecca ;};};};if !opts .SkipLanguage {if _adge ,_cdbbb :=_dggfa .GetCatalogLanguage ();
_cdbbb {if _gefdd :=_ggbfb .SetCatalogLanguage (_adge );_gefdd !=nil {return nil ,_gefdd ;};};};if !opts .SkipOutlines {_ggbfb .AddOutlineTree (_dggfa .GetOutlineTree ());};if !opts .SkipOCProperties {_dggfc ,_ggdac :=_dggfa .GetOCProperties ();if _ggdac !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdac );
}else {_ggdac =_ggbfb .SetOCProperties (_dggfc );if _ggdac !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdac );};};};if !opts .SkipPageLabels {_bffe ,_cacbd :=_dggfa .GetPageLabels ();if _cacbd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacbd );
}else {_cacbd =_ggbfb .SetPageLabels (_bffe );if _cacbd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacbd );};};};if !opts .SkipNamedDests {_bbedg ,_eaeebg :=_dggfa .GetNamedDestinations ();if _eaeebg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaeebg );
}else {_eaeebg =_ggbfb .SetNamedDestinations (_bbedg );if _eaeebg !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaeebg );};};};if !opts .SkipNameDictionary {_eccef ,_dedac :=_dggfa .GetNameDictionary ();if _dedac !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dedac );
}else {_dedac =_ggbfb .SetNameDictionary (_eccef );if _dedac !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dedac );};};};if !opts .SkipRotation &&_dggfa .Rotate !=nil {if _adgea :=_ggbfb .SetRotation (*_dggfa .Rotate );_adgea !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adgea );
};};return &_ggbfb ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// SetContext sets the sub annotation (context).
func (_ccd *PdfAnnotation )SetContext (ctx PdfModel ){_ccd ._bga =ctx };const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););func (_fbece *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gfdda :=_fbece ._ecdgfc ;_gfdda !=nil {return _gfdda ;};return _fbece ._cfbf ;};

// AddOCSPs adds OCSPs to DSS.
func (_feea *DSS )AddOCSPs (ocsps [][]byte )([]*_eag .PdfObjectStream ,error ){return _feea .add (&_feea .OCSPs ,_feea ._bebg ,ocsps );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcdbb *PdfShadingType4 )ToPdfObject ()_eag .PdfObject {_gcdbb .PdfShading .ToPdfObject ();_gegfc ,_decea :=_gcdbb .getShadingDict ();if _decea !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gcdbb .BitsPerCoordinate !=nil {_gegfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gcdbb .BitsPerCoordinate );};if _gcdbb .BitsPerComponent !=nil {_gegfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcdbb .BitsPerComponent );
};if _gcdbb .BitsPerFlag !=nil {_gegfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gcdbb .BitsPerFlag );};if _gcdbb .Decode !=nil {_gegfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcdbb .Decode );};if _gcdbb .Function !=nil {if len (_gcdbb .Function )==1{_gegfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcdbb .Function [0].ToPdfObject ());
}else {_afbac :=_eag .MakeArray ();for _ ,_bffcc :=range _gcdbb .Function {_afbac .Append (_bffcc .ToPdfObject ());};_gegfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afbac );};};return _gcdbb ._aadgg ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gegc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_gegc .N =N ;return _gegc ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _eag .PdfObject ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _eag .PdfObject ;Name _eag .PdfObject ;State _eag .PdfObject ;StateModel _eag .PdfObject ;};func _afb (_daf _eag .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_cgfe :=NewPdfColorspaceSpecialIndexed ();
if _acgc ,_gedbf :=_daf .(*_eag .PdfIndirectObject );_gedbf {_cgfe ._eggdg =_acgc ;};_daf =_eag .TraceToDirectObject (_daf );_ebge ,_dfcg :=_daf .(*_eag .PdfObjectArray );if !_dfcg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ebge .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_daf =_ebge .Get (0);
_agcb ,_dfcg :=_daf .(*_eag .PdfObjectName );if !_dfcg {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_agcb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_daf =_ebge .Get (1);_cfdb ,_gfed :=DetermineColorspaceNameFromPdfObject (_daf );if _gfed !=nil {return nil ,_gfed ;};if _cfdb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_cfdb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ebdd .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_cfdb );
return nil ,_adda ;};_eedc ,_gfed :=NewPdfColorspaceFromPdfObject (_daf );if _gfed !=nil {return nil ,_gfed ;};_cgfe .Base =_eedc ;_daf =_ebge .Get (2);_abdd ,_gfed :=_eag .GetNumberAsInt64 (_daf );if _gfed !=nil {return nil ,_gfed ;};if _abdd > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_cgfe .HiVal =int (_abdd );_daf =_ebge .Get (3);_cgfe .Lookup =_daf ;_daf =_eag .TraceToDirectObject (_daf );var _daee []byte ;if _feffb ,_fdbg :=_daf .(*_eag .PdfObjectString );_fdbg {_daee =_feffb .Bytes ();_ebdd .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_daee );
}else if _gacb ,_deab :=_daf .(*_eag .PdfObjectStream );_deab {_ebdd .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_daf .String ());_ebdd .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gacb .Stream ),_gacb .Stream );
_bbae ,_baef :=_eag .DecodeStream (_gacb );if _baef !=nil {return nil ,_baef ;};_ebdd .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bbae ),_bbae );_daee =_bbae ;}else {_ebdd .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_daf );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_daee )< _cgfe .Base .GetNumComponents ()*(_cgfe .HiVal +1){_ebdd .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ebdd .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_daee ),_cgfe .Base .GetNumComponents (),_cgfe .HiVal );
}else {_daee =_daee [:_cgfe .Base .GetNumComponents ()*(_cgfe .HiVal +1)];};_cgfe ._adeb =_daee ;return _cgfe ,nil ;};func (_faecf *PdfWriter )writeObjects (){_ebdd .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_faecf ._eggea ));
_faecf ._dfdb =make (map[int ]crossReference );_faecf ._dfdb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _faecf ._fdbde .ObjectMap !=nil {for _edffb ,_gggdd :=range _faecf ._fdbde .ObjectMap {if _edffb ==0{continue ;};if _gggdd .XType ==_eag .XrefTypeObjectStream {_dgegf :=crossReference {Type :2,ObjectNumber :_gggdd .OsObjNumber ,Index :_gggdd .OsObjIndex };
_faecf ._dfdb [_edffb ]=_dgegf ;};if _gggdd .XType ==_eag .XrefTypeTableEntry {_dfage :=crossReference {Type :1,ObjectNumber :_gggdd .ObjectNumber ,Offset :_gggdd .Offset };_faecf ._dfdb [_edffb ]=_dfage ;};};};};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ba .ReadSeeker )(*PdfReader ,error ){const _gfdbb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dgbcf (rs ,&ReaderOpts {},false ,_gfdbb );};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gcb *PdfAction )GetContext ()PdfModel {if _gcb ==nil {return nil ;};return _gcb ._eea ;};

// String returns a string that describes `font`.
func (_ecbf *PdfFont )String ()string {_fcgag :="";if _ecbf ._dagg .Encoder ()!=nil {_fcgag =_ecbf ._dagg .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ecbf ._dagg ,_ecbf .baseFields ().coreString (),_fcgag );
};func (_ddfb *PdfAppender )replaceObject (_eadd ,_beee _eag .PdfObject ){switch _adaa :=_eadd .(type ){case *_eag .PdfIndirectObject :_ddfb ._ddde [_beee ]=_adaa .ObjectNumber ;case *_eag .PdfObjectStream :_ddfb ._ddde [_beee ]=_adaa .ObjectNumber ;};
};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _eag .PdfObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_eag .PdfObjectInteger ;TilingType *_eag .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_eag .PdfObjectFloat ;YStep *_eag .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_eag .PdfObjectArray ;};


// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dfcf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetPdfInfo returns the PDF info dictionary.
func (_badd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_faebc ,_abdga :=_badd .GetTrailer ();if _abdga !=nil {return nil ,_abdga ;};var _gdafc *_eag .PdfObjectDictionary ;_efec :=_faebc .Get ("\u0049\u006e\u0066\u006f");switch _aacdg :=_efec .(type ){case *_eag .PdfObjectReference :_cbgf :=_aacdg ;
_efec ,_abdga =_badd .GetIndirectObjectByNumber (int (_cbgf .ObjectNumber ));_efec =_eag .TraceToDirectObject (_efec );if _abdga !=nil {return nil ,_abdga ;};_gdafc ,_ =_efec .(*_eag .PdfObjectDictionary );case *_eag .PdfObjectDictionary :_gdafc =_aacdg ;
};if _gdafc ==nil {return nil ,_bag .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cabgb ,_abdga :=NewPdfInfoFromObject (_gdafc );if _abdga !=nil {return nil ,_abdga ;
};return _cabgb ,nil ;};func _bae (_ggb _eag .PdfObject )(*PdfFilespec ,error ){if _ggb ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ggb );};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_fdcf :=PdfColorDeviceGray (grayVal );return &_fdcf ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_befg *VRI )ToPdfObject ()*_eag .PdfObjectDictionary {_gbfae :=_eag .MakeDict ();_gbfae .SetIfNotNil (_eag .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ffgca (_befg .Cert ));_gbfae .SetIfNotNil (_eag .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ffgca (_befg .OCSP ));
_gbfae .SetIfNotNil (_eag .PdfObjectName ("\u0043\u0052\u004c"),_ffgca (_befg .CRL ));_gbfae .SetIfNotNil ("\u0054\u0055",_befg .TU );_gbfae .SetIfNotNil ("\u0054\u0053",_befg .TS );return _gbfae ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_ddgcc *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _eag .GetNumberAsFloat (_ddgcc .XHeight );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_afegd *_eag .PdfParser ;_fcccg _eag .PdfObject ;_acgaf *_eag .PdfIndirectObject ;_bdgec *_eag .PdfObjectDictionary ;_cfffe []*_eag .PdfIndirectObject ;PageList []*PdfPage ;_gcabd int ;_adbgg *_eag .PdfObjectDictionary ;_degc *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_eecef *Permissions ;_edef map[*PdfReader ]*PdfReader ;_dbeag []*PdfReader ;_gbada *modelManager ;_dgabg bool ;_dbcaa map[_eag .PdfObject ]struct{};_cfacd _ba .ReadSeeker ;_egeca string ;_dcgc bool ;_ggcb *ReaderOpts ;
_agdfg bool ;};func (_aeb *PdfReader )newPdfAnnotationWatermarkFromDict (_agbc *_eag .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cgb :=PdfAnnotationWatermark {};_cgb .FixedPrint =_agbc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cgb ,nil ;};

// SetContext sets the sub action (context).
func (_gcf *PdfAction )SetContext (ctx PdfModel ){_gcf ._eea =ctx };

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _eag .PdfObject ;NewWindow _eag .PdfObject ;};func (_egce *PdfAnnotationMarkup )appendToPdfDictionary (_faef *_eag .PdfObjectDictionary ){_faef .SetIfNotNil ("\u0054",_egce .T );if _egce .Popup !=nil {_faef .Set ("\u0050\u006f\u0070u\u0070",_egce .Popup .ToPdfObject ());
};_faef .SetIfNotNil ("\u0043\u0041",_egce .CA );_faef .SetIfNotNil ("\u0052\u0043",_egce .RC );_faef .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_egce .CreationDate );_faef .SetIfNotNil ("\u0049\u0052\u0054",_egce .IRT );
_faef .SetIfNotNil ("\u0053\u0075\u0062\u006a",_egce .Subj );_faef .SetIfNotNil ("\u0052\u0054",_egce .RT );_faef .SetIfNotNil ("\u0049\u0054",_egce .IT );_faef .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_egce .ExData );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _eag .PdfObject ;BS _eag .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cefagf *PdfColorspaceCalRGB )ToPdfObject ()_eag .PdfObject {_dage :=&_eag .PdfObjectArray {};_dage .Append (_eag .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_befb :=_eag .MakeDict ();if _cefagf .WhitePoint !=nil {_egcg :=_eag .MakeArray (_eag .MakeFloat (_cefagf .WhitePoint [0]),_eag .MakeFloat (_cefagf .WhitePoint [1]),_eag .MakeFloat (_cefagf .WhitePoint [2]));
_befb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_egcg );}else {_ebdd .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cefagf .BlackPoint !=nil {_ggga :=_eag .MakeArray (_eag .MakeFloat (_cefagf .BlackPoint [0]),_eag .MakeFloat (_cefagf .BlackPoint [1]),_eag .MakeFloat (_cefagf .BlackPoint [2]));_befb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ggga );
};if _cefagf .Gamma !=nil {_daa :=_eag .MakeArray (_eag .MakeFloat (_cefagf .Gamma [0]),_eag .MakeFloat (_cefagf .Gamma [1]),_eag .MakeFloat (_cefagf .Gamma [2]));_befb .Set ("\u0047\u0061\u006dm\u0061",_daa );};if _cefagf .Matrix !=nil {_dbbd :=_eag .MakeArray (_eag .MakeFloat (_cefagf .Matrix [0]),_eag .MakeFloat (_cefagf .Matrix [1]),_eag .MakeFloat (_cefagf .Matrix [2]),_eag .MakeFloat (_cefagf .Matrix [3]),_eag .MakeFloat (_cefagf .Matrix [4]),_eag .MakeFloat (_cefagf .Matrix [5]),_eag .MakeFloat (_cefagf .Matrix [6]),_eag .MakeFloat (_cefagf .Matrix [7]),_eag .MakeFloat (_cefagf .Matrix [8]));
_befb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbbd );};_dage .Append (_befb );if _cefagf ._fdcgc !=nil {_cefagf ._fdcgc .PdfObject =_dage ;return _cefagf ._fdcgc ;};return _dage ;};func (_egb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dbee *_eag .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_baaf :=PdfAnnotationPrinterMark {};
_baaf .MN =_dbee .Get ("\u004d\u004e");return &_baaf ,nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_gbagb :=&PdfShadingPatternType2 {};_gbagb .Matrix =_eag .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gbagb .PdfPattern =&PdfPattern {};_gbagb .PdfPattern .PatternType =int64 (*_eag .MakeInteger (2));
_gbagb .PdfPattern ._aaaca =_gbagb ;_gbagb .PdfPattern ._bcdbe =_eag .MakeIndirectObject (_eag .MakeDict ());return _gbagb ;};

// R returns the value of the red component of the color.
func (_fegf *PdfColorDeviceRGB )R ()float64 {return _fegf [0]};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ag .Time ){_cabff .Lock ();defer _cabff .Unlock ();_afeea =modifiedDate ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_aafcb *PdfPageResources )SetColorspaceByName (keyName _eag .PdfObjectName ,cs PdfColorspace )error {_dcaec ,_egbgc :=_aafcb .GetColorspaces ();if _egbgc !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egbgc );
return _egbgc ;};if _dcaec ==nil {_dcaec =NewPdfPageResourcesColorspaces ();_aafcb .SetColorSpace (_dcaec );};_dcaec .Set (keyName ,cs );return nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fbbga *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_gfac PdfFont )actualFont ()pdfFont {if _gfac ._dagg ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfac );
};return _gfac ._dagg ;};

// String returns the name of the colorspace (DeviceN).
func (_gegce *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_eag .PdfObjectString ;Author *_eag .PdfObjectString ;Subject *_eag .PdfObjectString ;Keywords *_eag .PdfObjectString ;Creator *_eag .PdfObjectString ;Producer *_eag .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_eag .PdfObjectName ;_gege *_eag .PdfObjectDictionary ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _eag .PdfObjectName ;};var ErrColorOutOfRange =_bag .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_eag .PdfObject ;GetContainingPdfObject ()_eag .PdfObject ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_eddbg *PdfPage )GetContentStreamObjs ()[]_eag .PdfObject {if _eddbg .Contents ==nil {return nil ;};_dabfc :=_eag .TraceToDirectObject (_eddbg .Contents );if _acbdd ,_agbbc :=_dabfc .(*_eag .PdfObjectArray );_agbbc {return _acbdd .Elements ();};return []_eag .PdfObject {_dabfc };
};func (_bffd *PdfReader )newPdfActionSoundFromDict (_bdb *_eag .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bdb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bdb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bdb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bdb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bdb .Get ("\u004d\u0069\u0078")},nil ;
};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_abage *PdfPageResources )GetFontByName (keyName _eag .PdfObjectName )(_eag .PdfObject ,bool ){if _abage .Font ==nil {return nil ,false ;};_fbbfcd ,_ffegf :=_eag .TraceToDirectObject (_abage .Font ).(*_eag .PdfObjectDictionary );if !_ffegf {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eag .TraceToDirectObject (_abage .Font ));
return nil ,false ;};if _fdbed :=_fbbfcd .Get (keyName );_fdbed !=nil {return _fdbed ,true ;};return nil ,false ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_feceb *PdfReader )IsEncrypted ()(bool ,error ){return _feceb ._afegd .IsEncrypted ()};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_aafceg *PdfWriter )seekByName (_ageeb _eag .PdfObject ,_afefa []string ,_degecc string )([]_eag .PdfObject ,error ){_ebdd .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ageeb );
var _dabdc []_eag .PdfObject ;if _fbgcb ,_eecc :=_ageeb .(*_eag .PdfIndirectObject );_eecc {return _aafceg .seekByName (_fbgcb .PdfObject ,_afefa ,_degecc );};if _gdecd ,_ddddd :=_ageeb .(*_eag .PdfObjectStream );_ddddd {return _aafceg .seekByName (_gdecd .PdfObjectDictionary ,_afefa ,_degecc );
};if _edbga ,_efaa :=_ageeb .(*_eag .PdfObjectDictionary );_efaa {_ebdd .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bede :=range _edbga .Keys (){_gfcfg :=_edbga .Get (_bede );if string (_bede )==_degecc {_dabdc =append (_dabdc ,_gfcfg );};for _ ,_egdg :=range _afefa {if string (_bede )==_egdg {_ebdd .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_egdg );
_ccaae ,_acega :=_aafceg .seekByName (_gfcfg ,_afefa ,_degecc );if _acega !=nil {return _dabdc ,_acega ;};_dabdc =append (_dabdc ,_ccaae ...);break ;};};};return _dabdc ,nil ;};return _dabdc ,nil ;};func (_gcga *fontFile )parseASCIIPart (_aacd []byte )error {if len (_aacd )< 2||string (_aacd [:2])!="\u0025\u0021"{return _bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_ccga ,_cdbfe ,_febae :=_dgecg (_aacd );if _febae !=nil {return _febae ;};_eeedf :=_eccfb (_ccga );_gcga ._gbcd =_eeedf ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gcga ._gbcd ==""{_ebdd .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cdbfe !=""{_dcae ,_gagcc :=_fgfc (_cdbfe );if _gagcc !=nil {return _gagcc ;};_gccdb ,_gagcc :=_gbf .NewCustomSimpleTextEncoder (_dcae ,nil );if _gagcc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gagcc );
return nil ;};_gcga ._cefb =_gccdb ;};return nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dfce _eag .PdfObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_eag .PdfObjectStream ;Data []byte ;_gccb *_eag .PdfIndirectObject ;_dcbe *_eag .PdfObjectStream ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_afcea :=&PdfColorspaceCalGray {};_afcea .BlackPoint =[]float64 {0.0,0.0,0.0};_afcea .Gamma =1;return _afcea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_aaeec *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbcb ,_aaege :=_eag .GetNumbersAsFloat (objects );
if _aaege !=nil {return nil ,_aaege ;};return _aaeec .ColorFromFloats (_cbcb );};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _eag .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _bedb error ;encoder ,_bedb =img .getSuitableEncoder ();if _bedb !=nil {_ebdd .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bedb );
encoder =_eag .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_cbfca ,_ecgaa :=encoder .EncodeBytes (img .Data );if _ecgaa !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecgaa );
return nil ,_ecgaa ;};_bdbgbg :=NewXObjectImage ();_aadab :=img .Width ;_dcfa :=img .Height ;_bdbgbg .Width =&_aadab ;_bdbgbg .Height =&_dcfa ;_adabg :=img .BitsPerComponent ;_bdbgbg .BitsPerComponent =&_adabg ;_bdbgbg .Filter =encoder ;_bdbgbg .Stream =_cbfca ;
if cs ==nil {if img .ColorComponents ==1{_bdbgbg .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_eag .DCTEncoder :_bdbgbg .ColorSpace =NewPdfColorspaceDeviceRGB ();_adabg =8;_bdbgbg .BitsPerComponent =&_adabg ;
};};}else if img .ColorComponents ==3{_bdbgbg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_eag .DCTEncoder :_bdbgbg .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_bdbgbg .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_bag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bdbgbg .ColorSpace =cs ;};if len (img ._cbefd )!=0{_fcddbc :=NewXObjectImage ();_fcddbc .Filter =encoder ;_dccfc ,_agbfb :=encoder .EncodeBytes (img ._cbefd );
if _agbfb !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_agbfb );return nil ,_agbfb ;};_fcddbc .Stream =_dccfc ;_fcddbc .BitsPerComponent =_bdbgbg .BitsPerComponent ;
_fcddbc .Width =&img .Width ;_fcddbc .Height =&img .Height ;_fcddbc .ColorSpace =NewPdfColorspaceDeviceGray ();_bdbgbg .SMask =_fcddbc .ToPdfObject ();}else {_bdbgbg .SMask =xobjIn .SMask ;_bdbgbg .ImageMask =xobjIn .ImageMask ;if _bdbgbg .ColorSpace .GetNumComponents ()==1{_agabc (_bdbgbg );
};};return _bdbgbg ,nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_dafa *_eag .PdfObjectDictionary ;};func (_fgcdb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;
XObjectTypePS ;XObjectTypeUnknown ;);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fafe *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aecg :=vals [0];if _aecg < 0.0||_aecg > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aecg );
return nil ,ErrColorOutOfRange ;};_fdcd :=vals [1];if _fdcd < 0.0||_fdcd > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdcd );return nil ,ErrColorOutOfRange ;
};_cfac :=vals [2];if _cfac < 0.0||_cfac > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfac );return nil ,ErrColorOutOfRange ;};_gafee :=NewPdfColorCalRGB (_aecg ,_fdcd ,_cfac );
return _gafee ,nil ;};func _effd (_fffg _eag .PdfObject )(*PdfFunctionType2 ,error ){_fddeg :=&PdfFunctionType2 {};var _gdad *_eag .PdfObjectDictionary ;if _fcfd ,_cdacc :=_fffg .(*_eag .PdfIndirectObject );_cdacc {_cgbf ,_acee :=_fcfd .PdfObject .(*_eag .PdfObjectDictionary );
if !_acee {return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fddeg ._bggae =_fcfd ;_gdad =_cgbf ;}else if _efbba ,_fabd :=_fffg .(*_eag .PdfObjectDictionary );_fabd {_gdad =_efbba ;}else {return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ebdd .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gdad .String ());_gacfe ,_ccedf :=_eag .TraceToDirectObject (_gdad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eag .PdfObjectArray );if !_ccedf {_ebdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gacfe .Len ()< 0||_gacfe .Len ()%2!=0{_ebdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcge ,_edcab :=_gacfe .ToFloat64Array ();if _edcab !=nil {return nil ,_edcab ;};_fddeg .Domain =_fcge ;_gacfe ,_ccedf =_eag .TraceToDirectObject (_gdad .Get ("\u0052\u0061\u006eg\u0065")).(*_eag .PdfObjectArray );
if _ccedf {if _gacfe .Len ()< 0||_gacfe .Len ()%2!=0{return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aebbb ,_dgfg :=_gacfe .ToFloat64Array ();if _dgfg !=nil {return nil ,_dgfg ;};_fddeg .Range =_aebbb ;
};_gacfe ,_ccedf =_eag .TraceToDirectObject (_gdad .Get ("\u0043\u0030")).(*_eag .PdfObjectArray );if _ccedf {_ebcfbd ,_eeegc :=_gacfe .ToFloat64Array ();if _eeegc !=nil {return nil ,_eeegc ;};_fddeg .C0 =_ebcfbd ;};_gacfe ,_ccedf =_eag .TraceToDirectObject (_gdad .Get ("\u0043\u0031")).(*_eag .PdfObjectArray );
if _ccedf {_fecfb ,_ecdfb :=_gacfe .ToFloat64Array ();if _ecdfb !=nil {return nil ,_ecdfb ;};_fddeg .C1 =_fecfb ;};if len (_fddeg .C0 )!=len (_fddeg .C1 ){_ebdd .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_eag .ErrRangeError ;};N ,_edcab :=_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_gdad .Get ("\u004e")));if _edcab !=nil {_ebdd .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gdad .String ());
return nil ,_edcab ;};_fddeg .N =N ;return _fddeg ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_eeee *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fddcf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fddcf .NumInputs {_ebdd .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_bag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fddcf ._gcgae ==nil {_agccga :=_fddcf .processSamples ();if _agccga !=nil {return nil ,_agccga ;};};_fgafd :=_fddcf .Encode ;
if _fgafd ==nil {_fgafd =[]float64 {};for _aabe :=0;_aabe < len (_fddcf .Size );_aabe ++{_fgafd =append (_fgafd ,0);_fgafd =append (_fgafd ,float64 (_fddcf .Size [_aabe ]-1));};};_addb :=_fddcf .Decode ;if _addb ==nil {_addb =_fddcf .Range ;};_eacga :=make ([]int ,len (x ));
for _beefc :=0;_beefc < len (x );_beefc ++{_fdfd :=x [_beefc ];_abfga :=_gcg .Min (_gcg .Max (_fdfd ,_fddcf .Domain [2*_beefc ]),_fddcf .Domain [2*_beefc +1]);_eddca :=_fde .LinearInterpolate (_abfga ,_fddcf .Domain [2*_beefc ],_fddcf .Domain [2*_beefc +1],_fgafd [2*_beefc ],_fgafd [2*_beefc +1]);
_cabacc :=_gcg .Min (_gcg .Max (_eddca ,0),float64 (_fddcf .Size [_beefc ]-1));_cfbd :=int (_gcg .Floor (_cabacc +0.5));if _cfbd < 0{_cfbd =0;}else if _cfbd > _fddcf .Size [_beefc ]{_cfbd =_fddcf .Size [_beefc ]-1;};_eacga [_beefc ]=_cfbd ;};_gdge :=_eacga [0];
for _ceege :=1;_ceege < _fddcf .NumInputs ;_ceege ++{_ceegd :=_eacga [_ceege ];for _bbdff :=0;_bbdff < _ceege ;_bbdff ++{_ceegd *=_fddcf .Size [_bbdff ];};_gdge +=_ceegd ;};_gdge *=_fddcf .NumOutputs ;var _dedee []float64 ;for _aegbf :=0;_aegbf < _fddcf .NumOutputs ;
_aegbf ++{_cbfc :=_gdge +_aegbf ;if _cbfc >=len (_fddcf ._gcgae ){_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_feffd :=_fddcf ._gcgae [_cbfc ];_cbfad :=_fde .LinearInterpolate (float64 (_feffd ),0,_gcg .Pow (2,float64 (_fddcf .BitsPerSample )),_addb [2*_aegbf ],_addb [2*_aegbf +1]);_cgfd :=_gcg .Min (_gcg .Max (_cbfad ,_fddcf .Range [2*_aegbf ]),_fddcf .Range [2*_aegbf +1]);
_dedee =append (_dedee ,_cgfd );};return _dedee ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_eccaeb *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=_eccaeb .GetNumComponents (){return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaced ,_acdfg :=_eag .GetNumbersAsFloat (objects );
if _acdfg !=nil {return nil ,_acdfg ;};return _eccaeb .ColorFromFloats (_eaced );};

// Encoder returns the font's text encoder.
func (_feef pdfFontType3 )Encoder ()_gbf .TextEncoder {return _feef ._abccd };

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gfda *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbef ,_cdbd :=color .(*PdfColorDeviceRGB );if !_cdbd {_ebdd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fbef ,nil ;};func _cfee (_gfad *_eag .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bafbga :=PdfShadingType4 {};_ccedef :=_gfad .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ccedef ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acbdf ,_caeade :=_ccedef .(*_eag .PdfObjectInteger );if !_caeade {_ebdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccedef );
return nil ,_eag .ErrTypeError ;};_bafbga .BitsPerCoordinate =_acbdf ;_ccedef =_gfad .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ccedef ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_acbdf ,_caeade =_ccedef .(*_eag .PdfObjectInteger );if !_caeade {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ccedef );
return nil ,_eag .ErrTypeError ;};_bafbga .BitsPerComponent =_acbdf ;_ccedef =_gfad .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ccedef ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acbdf ,_caeade =_ccedef .(*_eag .PdfObjectInteger );if !_caeade {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ccedef );
return nil ,_eag .ErrTypeError ;};_bafbga .BitsPerComponent =_acbdf ;_ccedef =_gfad .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ccedef ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eafbcc ,_caeade :=_ccedef .(*_eag .PdfObjectArray );if !_caeade {_ebdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccedef );
return nil ,_eag .ErrTypeError ;};_bafbga .Decode =_eafbcc ;_ccedef =_gfad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ccedef ==nil {_ebdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bafbga .Function =[]PdfFunction {};if _aabddc ,_affbgc :=_ccedef .(*_eag .PdfObjectArray );_affbgc {for _ ,_bfgef :=range _aabddc .Elements (){_fgffg ,_ccgeba :=_baaab (_bfgef );if _ccgeba !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccgeba );
return nil ,_ccgeba ;};_bafbga .Function =append (_bafbga .Function ,_fgffg );};}else {_cbbca ,_abdb :=_baaab (_ccedef );if _abdb !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abdb );
return nil ,_abdb ;};_bafbga .Function =append (_bafbga .Function ,_cbbca );};return &_bafbga ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gbfc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gbfc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gbfc ._gaba =acroForm ;};func (_fgcg *PdfWriter )writeString (_fceec string ){if _fgcg ._cdbbd !=nil {return ;
};_beefe ,_caeaf :=_fgcg ._fdcde .WriteString (_fceec );_fgcg ._bfacf +=int64 (_beefe );_fgcg ._cdbbd =_caeaf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dbgg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efab :=vals [0];if _efab < 0.0||_efab > 100.0{_ebdd .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_efab );
return nil ,ErrColorOutOfRange ;};_gbece :=vals [1];_dedf :=float64 (-100);_cdddb :=float64 (100);if len (_dbgg .Range )> 1{_dedf =_dbgg .Range [0];_cdddb =_dbgg .Range [1];};if _gbece < _dedf ||_gbece > _cdddb {_ebdd .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gbece ,_dedf ,_cdddb );
return nil ,ErrColorOutOfRange ;};_ccgbg :=vals [2];_eaaa :=float64 (-100);_cdega :=float64 (100);if len (_dbgg .Range )> 3{_eaaa =_dbgg .Range [2];_cdega =_dbgg .Range [3];};if _ccgbg < _eaaa ||_ccgbg > _cdega {_ebdd .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ccgbg ,_eaaa ,_cdega );
return nil ,ErrColorOutOfRange ;};_ecfd :=NewPdfColorLab (_efab ,_gbece ,_ccgbg );return _ecfd ,nil ;};func (_decdc *PdfPage )flattenFieldsWithOpts (_fbddc FieldAppearanceGenerator ,_bbaf *FieldFlattenOpts ,_ddfec map[*PdfAnnotation ]bool )error {var _agbcg []*PdfAnnotation ;
if _fbddc !=nil {if _eeff :=_fbddc .WrapContentStream (_decdc );_eeff !=nil {return _eeff ;};};_aabg ,_gfcb :=_decdc .GetAnnotations ();if _gfcb !=nil {return _gfcb ;};for _ ,_egcgc :=range _aabg {_dbaff ,_bceg :=_ddfec [_egcgc ];if !_bceg &&_bbaf .AnnotFilterFunc !=nil {if _ ,_cffd :=_egcgc .GetContext ().(*PdfAnnotationWidget );
!_cffd {_bceg =_bbaf .AnnotFilterFunc (_egcgc );};};if !_bceg {_agbcg =append (_agbcg ,_egcgc );continue ;};switch _egcgc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gabe ,_bafgb ,_feeag :=_cdca (_egcgc );if _feeag !=nil {if !_dbaff {_ebdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_feeag );
continue ;};if _gabe ==nil {continue ;};_bafd :=_decdc .Resources .GenerateXObjectName ();_decdc .Resources .SetXObjectFormByName (_bafd ,_gabe );_gbbc ,_efffe ,_feeag :=_dced (_gabe );if _feeag !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_feeag );
}else {_caae :=_de .IdentityMatrix ();_caae =_caae .Translate (-_gbbc .Llx ,-_gbbc .Lly );if _efffe {_bdbca :=0.0;if _gbbc .Width ()> 0{_bdbca =_bafgb .Width ()/_gbbc .Width ();};_dfbe :=0.0;if _gbbc .Height ()> 0{_dfbe =_bafgb .Height ()/_gbbc .Height ();
};_caae =_caae .Scale (_bdbca ,_dfbe );};_bafgb .Transform (_caae );};_caded :=_gcg .Min (_bafgb .Llx ,_bafgb .Urx );_bdfe :=_gcg .Min (_bafgb .Lly ,_bafgb .Ury );var _cgfcc []string ;_cgfcc =append (_cgfcc ,"\u0071");_cgfcc =append (_cgfcc ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_caded ,_bdfe ));
_cgfcc =append (_cgfcc ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bafd .String ()));_cgfcc =append (_cgfcc ,"\u0051");_cdcb :=_cb .Join (_cgfcc ,"\u000a");_feeag =_decdc .AppendContentStream (_cdcb );if _feeag !=nil {return _feeag ;};if _gabe .Resources !=nil {_bfea ,_ggab :=_eag .GetDict (_gabe .Resources .Font );
if _ggab {for _ ,_fcdcg :=range _bfea .Keys (){if !_decdc .Resources .HasFontByName (_fcdcg ){_decdc .Resources .SetFontByName (_fcdcg ,_bfea .Get (_fcdcg ));};};};};};if len (_agbcg )> 0{_decdc ._bcebb =_agbcg ;}else {_decdc ._bcebb =[]*PdfAnnotation {};
};return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dgff *PdfColorspaceCalGray )ToPdfObject ()_eag .PdfObject {_defaa :=&_eag .PdfObjectArray {};_defaa .Append (_eag .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gfaf :=_eag .MakeDict ();if _dgff .WhitePoint !=nil {_gfaf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_eag .MakeArray (_eag .MakeFloat (_dgff .WhitePoint [0]),_eag .MakeFloat (_dgff .WhitePoint [1]),_eag .MakeFloat (_dgff .WhitePoint [2])));
}else {_ebdd .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dgff .BlackPoint !=nil {_gfaf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eag .MakeArray (_eag .MakeFloat (_dgff .BlackPoint [0]),_eag .MakeFloat (_dgff .BlackPoint [1]),_eag .MakeFloat (_dgff .BlackPoint [2])));
};_gfaf .Set ("\u0047\u0061\u006dm\u0061",_eag .MakeFloat (_dgff .Gamma ));_defaa .Append (_gfaf );if _dgff ._gaed !=nil {_dgff ._gaed .PdfObject =_defaa ;return _dgff ._gaed ;};return _defaa ;};

// ToPdfObject implements interface PdfModel.
func (_bbea *PdfAnnotationStrikeOut )ToPdfObject ()_eag .PdfObject {_bbea .PdfAnnotation .ToPdfObject ();_bggc :=_bbea ._gfa ;_cefc :=_bggc .PdfObject .(*_eag .PdfObjectDictionary );_bbea .PdfAnnotationMarkup .appendToPdfDictionary (_cefc );_cefc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cefc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbea .QuadPoints );return _bggc ;};

// AddImageResource adds an image to the XObject resources.
func (_gfefe *PdfPage )AddImageResource (name _eag .PdfObjectName ,ximg *XObjectImage )error {var _bacdd *_eag .PdfObjectDictionary ;if _gfefe .Resources .XObject ==nil {_bacdd =_eag .MakeDict ();_gfefe .Resources .XObject =_bacdd ;}else {var _cbgce bool ;
_bacdd ,_cbgce =(_gfefe .Resources .XObject ).(*_eag .PdfObjectDictionary );if !_cbgce {return _bag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bacdd .Set (name ,ximg .ToPdfObject ());
return nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_ecdfc *PdfReader )GetEncryptionMethod ()string {_ffac :=_ecdfc ._afegd .GetCrypter ();return _ffac .String ();};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_eag .PdfObjectName ;Colorants _eag .PdfObject ;Process _eag .PdfObject ;MixingHints _eag .PdfObject ;_afcf *_eag .PdfIndirectObject ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _eag .PdfObject ;FontFamily _eag .PdfObject ;FontStretch _eag .PdfObject ;FontWeight _eag .PdfObject ;Flags _eag .PdfObject ;FontBBox _eag .PdfObject ;ItalicAngle _eag .PdfObject ;Ascent _eag .PdfObject ;Descent _eag .PdfObject ;
Leading _eag .PdfObject ;CapHeight _eag .PdfObject ;XHeight _eag .PdfObject ;StemV _eag .PdfObject ;StemH _eag .PdfObject ;AvgWidth _eag .PdfObject ;MaxWidth _eag .PdfObject ;MissingWidth _eag .PdfObject ;FontFile _eag .PdfObject ;FontFile2 _eag .PdfObject ;
FontFile3 _eag .PdfObject ;CharSet _eag .PdfObject ;_gafa int ;_eeae float64 ;*fontFile ;_aaac *_eeb .TtfType ;

// Additional entries for CIDFonts
Style _eag .PdfObject ;Lang _eag .PdfObject ;FD _eag .PdfObject ;CIDSet _eag .PdfObject ;_ecdd *_eag .PdfIndirectObject ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_dgfa *LTV )Enable (sig *PdfSignature ,extraCerts []*_ed .Certificate )error {if _ffgc :=_dgfa .validateSig (sig );_ffgc !=nil {return _ffgc ;};_dcfbd ,_fdcga :=_dgfa .generateVRIKey (sig );if _fdcga !=nil {return _fdcga ;};if _ ,_cfcaab :=_dgfa ._cgcca .VRI [_dcfbd ];
_cfcaab &&_dgfa .SkipExisting {return nil ;};_abdac ,_fdcga :=sig .GetCerts ();if _fdcga !=nil {return _fdcga ;};return _dgfa .enable (_abdac ,extraCerts ,_dcfbd );};func _ffgca (_ffagd []*_eag .PdfObjectStream )*_eag .PdfObjectArray {if len (_ffagd )==0{return nil ;
};_bfega :=make ([]_eag .PdfObject ,0,len (_ffagd ));for _ ,_aefg :=range _ffagd {_bfega =append (_bfega ,_aefg );};return _eag .MakeArray (_bfega ...);};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fdggg *PdfColorspaceLab )ToPdfObject ()_eag .PdfObject {_ffeg :=_eag .MakeArray ();_ffeg .Append (_eag .MakeName ("\u004c\u0061\u0062"));_abdc :=_eag .MakeDict ();if _fdggg .WhitePoint !=nil {_cea :=_eag .MakeArray (_eag .MakeFloat (_fdggg .WhitePoint [0]),_eag .MakeFloat (_fdggg .WhitePoint [1]),_eag .MakeFloat (_fdggg .WhitePoint [2]));
_abdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cea );}else {_ebdd .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fdggg .BlackPoint !=nil {_aaegeg :=_eag .MakeArray (_eag .MakeFloat (_fdggg .BlackPoint [0]),_eag .MakeFloat (_fdggg .BlackPoint [1]),_eag .MakeFloat (_fdggg .BlackPoint [2]));_abdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aaegeg );
};if _fdggg .Range !=nil {_acdag :=_eag .MakeArray (_eag .MakeFloat (_fdggg .Range [0]),_eag .MakeFloat (_fdggg .Range [1]),_eag .MakeFloat (_fdggg .Range [2]),_eag .MakeFloat (_fdggg .Range [3]));_abdc .Set ("\u0052\u0061\u006eg\u0065",_acdag );};_ffeg .Append (_abdc );
if _fdggg ._eaba !=nil {_fdggg ._eaba .PdfObject =_ffeg ;return _fdggg ._eaba ;};return _ffeg ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_bfdgc :=&PdfColorPatternType3 {};return _bfdgc ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fgeg *PdfWriter )SetNameDictionary (names _eag .PdfObject )error {if names ==nil {return nil ;};_fgeg ._eecd =_gdbe (names );_ebdd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fgeg ._daegb .Set ("\u004e\u0061\u006de\u0073",names );return _fgeg .addObjects (names );};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _caaeg (_fdacfe *_eag .PdfObjectDictionary ){_bbbgb ,_fddbe :=_eag .GetArray (_fdacfe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_daga ,_bbede :=_eag .GetIntVal (_fdacfe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_cgaf ,_ddcc :=_eag .GetIntVal (_fdacfe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _fddbe &&_bbede &&_ddcc {_dffc :=_bbbgb .Len ();if _dffc !=_cgaf -_daga +1{_ebdd .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_dffc ,_cgaf );
_eefc :=_eag .PdfObjectInteger (_daga +_dffc -1);_fdacfe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_eefc );};};};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gdef *XObjectImage )ToImage ()(*Image ,error ){_gdaca :=&Image {};if _gdef .Height ==nil {return nil ,_bag .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gdaca .Height =*_gdef .Height ;if _gdef .Width ==nil {return nil ,_bag .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gdaca .Width =*_gdef .Width ;if _gdef .BitsPerComponent ==nil {switch _gdef .Filter .(type ){case *_eag .CCITTFaxEncoder ,*_eag .JBIG2Encoder :_gdaca .BitsPerComponent =1;
case *_eag .LZWEncoder ,*_eag .RunLengthEncoder :_gdaca .BitsPerComponent =8;default:return nil ,_bag .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gdaca .BitsPerComponent =*_gdef .BitsPerComponent ;};_gdaca .ColorComponents =_gdef .ColorSpace .GetNumComponents ();_gdef ._cgfecg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eag .MakeInteger (int64 (_gdaca .ColorComponents )));
_afegg ,_ddbag :=_eag .DecodeStream (_gdef ._cgfecg );if _ddbag !=nil {return nil ,_ddbag ;};_gdaca .Data =_afegg ;if _gdef .Decode !=nil {_bcafc ,_afgca :=_gdef .Decode .(*_eag .PdfObjectArray );if !_afgca {_ebdd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_bag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_cabbae ,_abfgg :=_bcafc .ToFloat64Array ();if _abfgg !=nil {return nil ,_abfgg ;};switch _gdef .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_dgecbg :=_gdef .ColorSpace .DecodeArray ();
if _dgecbg [0]==_cabbae [0]&&_dgecbg [1]==_cabbae [1]&&_dgecbg [2]==_cabbae [2]&&_dgecbg [3]==_cabbae [3]{_gdaca ._dadbe =_cabbae ;};default:_gdaca ._dadbe =_cabbae ;};};return _gdaca ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ggba *PdfColorspaceDeviceN )GetNumComponents ()int {return _ggba .ColorantNames .Len ()};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_begc :=&XObjectImage {};_cgadc :=&_eag .PdfObjectStream {};_cgadc .PdfObjectDictionary =_eag .MakeDict ();_begc ._cgfecg =_cgadc ;return _begc ;};func (_aebce *PdfReader )buildNameNodes (_efbag *_eag .PdfIndirectObject ,_dbacf map[_eag .PdfObject ]struct{})error {if _efbag ==nil {return nil ;
};if _ ,_adgfc :=_dbacf [_efbag ];_adgfc {_ebdd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_efbag .ObjectNumber );
return nil ;};_dbacf [_efbag ]=struct{}{};_bdbgb ,_addbg :=_efbag .PdfObject .(*_eag .PdfObjectDictionary );if !_addbg {return _bag .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _efcbb ,_cegd :=_eag .GetDict (_bdbgb .Get ("\u0044\u0065\u0073t\u0073"));
_cegd {_gadac ,_cabaa :=_eag .GetArray (_efcbb .Get ("\u004b\u0069\u0064\u0073"));if !_cabaa {return _bag .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ebdd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gadac );
for _ffggc ,_gadb :=range _gadac .Elements (){_abfde ,_ceggg :=_eag .GetIndirect (_gadb );if !_ceggg {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_abfde );
return _bag .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_gadac .Set (_ffggc ,_abfde );_adcgc :=_aebce .buildNameNodes (_abfde ,_dbacf );if _adcgc !=nil {return _adcgc ;
};};};if _abeeb ,_gceec :=_eag .GetDict (_bdbgb );_gceec {if !_eag .IsNullObject (_abeeb .Get ("\u004b\u0069\u0064\u0073")){if _aebfb ,_gaecc :=_eag .GetArray (_abeeb .Get ("\u004b\u0069\u0064\u0073"));_gaecc {for _dbag ,_aefcc :=range _aebfb .Elements (){if _dgdb ,_cccg :=_eag .GetIndirect (_aefcc );
_cccg {_aebfb .Set (_dbag ,_dgdb );_fcadd :=_aebce .buildNameNodes (_dgdb ,_dbacf );if _fcadd !=nil {return _fcadd ;};};};};};};return nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// SetOCProperties sets the optional content properties.
func (_eegae *PdfWriter )SetOCProperties (ocProperties _eag .PdfObject )error {_dgggd :=_eegae ._daegb ;if ocProperties !=nil {_ebdd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dgggd .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _eegae .addObjects (ocProperties );};return nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_cegef *PdfReader )GetTrailer ()(*_eag .PdfObjectDictionary ,error ){_fbbfc :=_cegef ._afegd .GetTrailer ();if _fbbfc ==nil {return nil ,_bag .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fbbfc ,nil ;
};func (_fdfgf *LTV )buildCertChain (_cdag ,_fggg []*_ed .Certificate )([]*_ed .Certificate ,map[string ]*_ed .Certificate ,error ){_bgdd :=map[string ]*_ed .Certificate {};for _ ,_cbbfe :=range _cdag {_bgdd [_cbbfe .Subject .CommonName ]=_cbbfe ;};_gbbcc :=_cdag ;
for _ ,_dcbce :=range _fggg {_gcedd :=_dcbce .Subject .CommonName ;if _ ,_efbae :=_bgdd [_gcedd ];_efbae {continue ;};_bgdd [_gcedd ]=_dcbce ;_gbbcc =append (_gbbcc ,_dcbce );};if len (_gbbcc )==0{return nil ,nil ,ErrSignNoCertificates ;};var _acbg error ;
for _dfggb :=_gbbcc [0];_dfggb !=nil &&!_fdfgf .CertClient .IsCA (_dfggb );{_fdbd ,_gccc :=_bgdd [_dfggb .Issuer .CommonName ];if !_gccc {if _fdbd ,_acbg =_fdfgf .CertClient .GetIssuer (_dfggb );_acbg !=nil {_ebdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_acbg );
break ;};_bgdd [_dfggb .Issuer .CommonName ]=_fdbd ;_gbbcc =append (_gbbcc ,_fdbd );};_dfggb =_fdbd ;};return _gbbcc ,_bgdd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecedc *PdfAnnotationProjection )ToPdfObject ()_eag .PdfObject {_ecedc .PdfAnnotation .ToPdfObject ();_bffg :=_ecedc ._gfa ;_babe :=_bffg .PdfObject .(*_eag .PdfObjectDictionary );_ecedc .PdfAnnotationMarkup .appendToPdfDictionary (_babe );return _bffg ;
};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_dcagc *PdfReader )GetCatalogStructTreeRoot ()(_eag .PdfObject ,bool ){if _dcagc ._adbgg ==nil {return nil ,false ;};_acfc :=_dcagc ._adbgg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _acfc ,_acfc !=nil ;
};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_fbc *PdfAppender )SetDocInfo (info *PdfInfo ){_fbc ._cceb =info };

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _eag .PdfObject ;AN _eag .PdfObject ;OP _eag .PdfObject ;JS _eag .PdfObject ;};

// ToPdfObject implements model.PdfModel interface.
func (_beccc *PdfOutputIntent )ToPdfObject ()_eag .PdfObject {if _beccc ._dafa ==nil {_beccc ._dafa =_eag .MakeDict ();};_aegbfd :=_beccc ._dafa ;if _beccc .Type !=""{_aegbfd .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName (_beccc .Type ));};_aegbfd .Set ("\u0053",_eag .MakeName (_beccc .S .String ()));
if _beccc .OutputCondition !=""{_aegbfd .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_eag .MakeString (_beccc .OutputCondition ));};_aegbfd .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_eag .MakeString (_beccc .OutputConditionIdentifier ));
_aegbfd .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_eag .MakeString (_beccc .RegistryName ));if _beccc .Info !=""{_aegbfd .Set ("\u0049\u006e\u0066\u006f",_eag .MakeString (_beccc .Info ));};if len (_beccc .DestOutputProfile )!=0{_edce ,_caed :=_eag .MakeStream (_beccc .DestOutputProfile ,_eag .NewFlateEncoder ());
if _caed !=nil {_ebdd .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_caed );
};_edce .PdfObjectDictionary .Set ("\u004e",_eag .MakeInteger (int64 (_beccc .ColorComponents )));_bcdeb :=make ([]float64 ,_beccc .ColorComponents *2);for _ddccg :=0;_ddccg < _beccc .ColorComponents *2;_ddccg ++{_bfgca :=0.0;if _ddccg %2!=0{_bfgca =1.0;
};_bcdeb [_ddccg ]=_bfgca ;};_edce .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_eag .MakeArrayFromFloats (_bcdeb ));_aegbfd .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_edce );};return _aegbfd ;
};

// ToPdfObject implements interface PdfModel.
func (_gcdg *PdfSignatureReference )ToPdfObject ()_eag .PdfObject {_gceaa :=_eag .MakeDict ();_gceaa .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gcdg .Type );_gceaa .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_gcdg .TransformMethod );
_gceaa .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_gcdg .TransformParams );_gceaa .SetIfNotNil ("\u0044\u0061\u0074\u0061",_gcdg .Data );_gceaa .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_gcdg .DigestMethod );
return _gceaa ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ba .ReadSeeker )(*PdfReader ,error ){const _dgadb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dgbcf (rs ,&ReaderOpts {LazyLoad :true },false ,_dgadb );
};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_eddf *MultipleFontEncoder )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){_debad :=_eddf .CurrentFont ;_dbceg ,_edfag :=_debad .GetRuneMetrics (r );for _eeabc :=1;_eeabc < len (_eddf ._ebfgc )&&_dbceg .Wx ==0;_eeabc ++{_debad =_eddf ._ebfgc [_eeabc ];
_dbceg ,_edfag =_debad .GetRuneMetrics (r );};return _dbceg ,_edfag ;};

// AddFont adds a font dictionary to the Font resources.
func (_cfgcf *PdfPage )AddFont (name _eag .PdfObjectName ,font _eag .PdfObject )error {if _cfgcf .Resources ==nil {_cfgcf .Resources =NewPdfPageResources ();};if _cfgcf .Resources .Font ==nil {_cfgcf .Resources .Font =_eag .MakeDict ();};_eefcf ,_cegb :=_eag .TraceToDirectObject (_cfgcf .Resources .Font ).(*_eag .PdfObjectDictionary );
if !_cegb {_ebdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_eag .TraceToDirectObject (_cfgcf .Resources .Font ));
return _bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eefcf .Set (name ,font );return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bfdga *Permissions )GetContainingPdfObject ()_eag .PdfObject {return _bfdga ._gfcae };func (_ecg *PdfReader )newPdfAnnotationTextFromDict (_aad *_eag .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cdcg :=PdfAnnotationText {};_agbf ,_degb :=_ecg .newPdfAnnotationMarkupFromDict (_aad );
if _degb !=nil {return nil ,_degb ;};_cdcg .PdfAnnotationMarkup =_agbf ;_cdcg .Open =_aad .Get ("\u004f\u0070\u0065\u006e");_cdcg .Name =_aad .Get ("\u004e\u0061\u006d\u0065");_cdcg .State =_aad .Get ("\u0053\u0074\u0061t\u0065");_cdcg .StateModel =_aad .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_cdcg ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_gaed *_eag .PdfIndirectObject ;};func (_eafcc *PdfWriter )writeTrailer (_gaffd int ){_eafcc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cgdcb :=0;
_cgdcb <=_gaffd ;{for ;_cgdcb <=_gaffd ;_cgdcb ++{_ffcfa ,_bcgec :=_eafcc ._dfdb [_cgdcb ];if _bcgec &&(!_eafcc ._fgfg ||_eafcc ._fgfg &&(_ffcfa .Type ==1&&_ffcfa .Offset >=_eafcc ._ccdba ||_ffcfa .Type ==0)){break ;};};var _ccea int ;for _ccea =_cgdcb +1;
_ccea <=_gaffd ;_ccea ++{_dceaf ,_dbfe :=_eafcc ._dfdb [_ccea ];if _dbfe &&(!_eafcc ._fgfg ||_eafcc ._fgfg &&(_dceaf .Type ==1&&_dceaf .Offset > _eafcc ._ccdba )){continue ;};break ;};_ecbgd :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cgdcb ,_ccea -_cgdcb );
_eafcc .writeString (_ecbgd );for _gagg :=_cgdcb ;_gagg < _ccea ;_gagg ++{_afdcec :=_eafcc ._dfdb [_gagg ];switch _afdcec .Type {case 0:_ecbgd =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_eafcc .writeString (_ecbgd );
case 1:_ecbgd =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_afdcec .Offset ,0);_eafcc .writeString (_ecbgd );};};_cgdcb =_ccea +1;};_ddecff :=_eag .MakeDict ();_ddecff .Set ("\u0049\u006e\u0066\u006f",_eafcc ._eagcbd );
_ddecff .Set ("\u0052\u006f\u006f\u0074",_eafcc ._gebfg );_ddecff .Set ("\u0053\u0069\u007a\u0065",_eag .MakeInteger (int64 (_gaffd +1)));if _eafcc ._fgfg &&_eafcc ._fbcge > 0{_ddecff .Set ("\u0050\u0072\u0065\u0076",_eag .MakeInteger (_eafcc ._fbcge ));
};if _eafcc ._ffbfg !=nil {_ddecff .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eafcc ._agdeb );};if _eafcc ._cabccg ==nil &&_eafcc ._aecb !=""&&_eafcc ._bcfgc !=""{_eafcc ._cabccg =_eag .MakeArray (_eag .MakeHexString (_eafcc ._aecb ),_eag .MakeHexString (_eafcc ._bcfgc ));
};if _eafcc ._cabccg !=nil {_ddecff .Set ("\u0049\u0044",_eafcc ._cabccg );_ebdd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eafcc ._cabccg );};_eafcc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_eafcc .writeString (_ddecff .WriteString ());
_eafcc .writeString ("\u000a");};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gggca *PdfReader )CheckAccessRights (password []byte )(bool ,_ac .Permissions ,error ){return _gggca ._afegd .CheckAccessRights (password );};

// Encoder returns the font's text encoder.
func (_ffec *PdfFont )Encoder ()_gbf .TextEncoder {_gacbce :=_ffec .actualFont ();if _gacbce ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ffec ._dagg );
return nil ;};return _gacbce .Encoder ();};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_cdedb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_afbg :=_cdedb .actualFont ();if _afbg ==nil {_ebdd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cdedb ._dagg );
return _eeb .CharMetrics {},false ;};if _cbfa ,_abae :=_afbg .GetRuneMetrics (r );_abae {return _cbfa ,true ;};if _cagg ,_cadec :=_cdedb .GetFontDescriptor ();_cadec ==nil &&_cagg !=nil {return _eeb .CharMetrics {Wx :_cagg ._eeae },true ;};_ebdd .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdedb );
return _eeb .CharMetrics {},false ;};

// SetFlag sets the flag for the field.
func (_dcad *PdfField )SetFlag (flag FieldFlag ){_dcad .Ff =_eag .MakeInteger (int64 (flag ))};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_dafc *PdfFieldButton )IsRadio ()bool {return _dafc .GetType ()==ButtonTypeRadio };

// GetCharMetrics returns the char metrics for character code `code`.
func (_eafba pdfFontType3 )GetCharMetrics (code _gbf .CharCode )(_eeb .CharMetrics ,bool ){if _ageee ,_dgdd :=_eafba ._ffbef [code ];_dgdd {return _eeb .CharMetrics {Wx :_ageee },true ;};if _eeb .IsStdFont (_eeb .StdFontName (_eafba ._fgcc )){return _eeb .CharMetrics {Wx :250},true ;
};return _eeb .CharMetrics {},false ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dfgba *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gafe ,_fece :=_eag .GetNumbersAsFloat (objects );
if _fece !=nil {return nil ,_fece ;};return _dfgba .ColorFromFloats (_gafe );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_eag .PdfIndirectObject ;SV *_eag .PdfIndirectObject ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fcee *PdfAppender )Write (w _ba .Writer )error {if _fcee ._aggc {return _bag .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_fbgf :=NewPdfWriter ();_baed ,_bddc :=_eag .GetDict (_fbgf ._gcedb );if !_bddc {return _bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fefa ,_bddc :=_baed .Get ("\u004b\u0069\u0064\u0073").(*_eag .PdfObjectArray );if !_bddc {return _bag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gffe ,_bddc :=_baed .Get ("\u0043\u006f\u0075n\u0074").(*_eag .PdfObjectInteger );if !_bddc {return _bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_cfaf :=_fcee ._egeg ._afegd ;_ccgb :=_cfaf .GetTrailer ();if _ccgb ==nil {return _bag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fbcb ,_bddc :=_eag .GetIndirect (_ccgb .Get ("\u0052\u006f\u006f\u0074"));
if !_bddc {return _bag .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dbcc ,_bddc :=_eag .GetDict (_fbcb );if !_bddc {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fbcb ,*_ccgb );
return _bag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_egbd :=false ;for _ ,_adc :=range _fcee ._egeg .AcroForm .signatureFields (){if _adc .Lock !=nil {_egbd =true ;break ;};};if _egbd {_fbgf ._gebfg =_fbcb ;
};for _ ,_bfe :=range _dbcc .Keys (){if _fbgf ._daegb .Get (_bfe )==nil {_efgd :=_dbcc .Get (_bfe );_fbgf ._daegb .Set (_bfe ,_efgd );};};if _fcee ._gaba !=nil {if _fcee ._gaba ._efefb {if _agac :=_eag .TraceToDirectObject (_fcee ._gaba .ToPdfObject ());
!_eag .IsNullObject (_agac ){_fbgf ._daegb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agac );_fcee .updateObjectsDeep (_agac ,nil );}else {_ebdd .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_fbgf ._daegb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fcee ._gaba .ToPdfObject ());_fcee .updateObjectsDeep (_fcee ._gaba .ToPdfObject (),nil );};};if _fcee ._bea !=nil {_fcee .updateObjectsDeep (_fcee ._bea .ToPdfObject (),nil );
_fbgf ._daegb .Set ("\u0044\u0053\u0053",_fcee ._bea .GetContainingPdfObject ());};if _fcee ._dcc !=nil {_fbgf ._daegb .Set ("\u0050\u0065\u0072m\u0073",_fcee ._dcc .ToPdfObject ());_fcee .updateObjectsDeep (_fcee ._dcc .ToPdfObject (),nil );};if _fbgf ._ddcce .Major < 2{_fbgf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_fbgf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _aedg ,_eafbc :=_eag .GetDict (_ccgb .Get ("\u0049\u006e\u0066\u006f"));_eafbc {if _bfaee ,_dddc :=_eag .GetDict (_fbgf ._eagcbd );_dddc {for _ ,_cgaeg :=range _aedg .Keys (){if _bfaee .Get (_cgaeg )==nil {_bfaee .Set (_cgaeg ,_aedg .Get (_cgaeg ));
};};};};if _fcee ._cceb !=nil {_fbgf ._eagcbd =_eag .MakeIndirectObject (_fcee ._cceb .ToPdfObject ());};_fcee .updateObjectsDeep (_fbgf ._eagcbd ,nil );_fcee .updateObjectsDeep (_fbgf ._gebfg ,nil );_fcdcd :=false ;if len (_fcee ._egeg .PageList )!=len (_fcee ._abag ){_fcdcd =true ;
}else {for _aegd :=range _fcee ._egeg .PageList {switch {case _fcee ._abag [_aegd ]==_fcee ._egeg .PageList [_aegd ]:case _fcee ._abag [_aegd ]==_fcee .Reader .PageList [_aegd ]:default:_fcdcd =true ;};if _fcdcd {break ;};};};if _fcdcd {_fcee .updateObjectsDeep (_fbgf ._gcedb ,nil );
}else {_fcee ._bafb [_fbgf ._gcedb ]=struct{}{};};_fbgf ._gcedb .ObjectNumber =_fcee .Reader ._acgaf .ObjectNumber ;_fcee ._ddde [_fbgf ._gcedb ]=_fcee .Reader ._acgaf .ObjectNumber ;_babb :=[]_eag .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_dgdc :=range _fcee ._abag {_edgf :=_dgdc .ToPdfObject ();*_gffe =*_gffe +1;if _cec ,_aebf :=_edgf .(*_eag .PdfIndirectObject );_aebf &&_cec .GetParser ()==_fcee ._egeg ._afegd {_fefa .Append (&_cec .PdfObjectReference );continue ;};if _aaad ,_dgecb :=_eag .GetDict (_edgf );
_dgecb {_edca ,_fff :=_aaad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_eag .PdfIndirectObject );for _fff {_ebdd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edca );_fgcd ,_bcdb :=_edca .PdfObject .(*_eag .PdfObjectDictionary );
if !_bcdb {return _bag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gcae :=range _babb {_ebdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcae );if _agea :=_aaad .Get (_gcae );
_agea !=nil {_ebdd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_dgdc ._cggfd .Keys ())> 0&&!_fcdcd {_fdgc :=_dgdc ._cggfd ;if _bgae :=_fdgc .Get (_gcae );_bgae !=nil {if _agea !=_bgae {_ebdd .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_gcae ,_bgae );
_aaad .Set (_gcae ,_bgae );};};};continue ;};if _agcff :=_fgcd .Get (_gcae );_agcff !=nil {_ebdd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcae );_aaad .Set (_gcae ,_agcff );
};};_edca ,_fff =_fgcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_eag .PdfIndirectObject );_ebdd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
};if _fcdcd {_aaad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgf ._gcedb );};};_fcee .updateObjectsDeep (_edgf ,nil );_fefa .Append (_edgf );};if _ ,_cddc :=_fcee ._efgc .Seek (0,_ba .SeekStart );_cddc !=nil {return _cddc ;};_bacg :=make (map[SignatureHandler ]_ba .Writer );
_bgge :=_eag .MakeArray ();for _ ,_bcba :=range _fcee ._aea {if _bcca ,_agga :=_eag .GetIndirect (_bcba );_agga {if _fbec ,_afgbf :=_bcca .PdfObject .(*pdfSignDictionary );_afgbf {_eface :=*_fbec ._fdbgd ;var _eegg error ;_bacg [_eface ],_eegg =_eface .NewDigest (_fbec ._gafdb );
if _eegg !=nil {return _eegg ;};_bgge .Append (_eag .MakeInteger (0xfffff),_eag .MakeInteger (0xfffff));};};};if _bgge .Len ()> 0{_bgge .Append (_eag .MakeInteger (0xfffff),_eag .MakeInteger (0xfffff));};for _ ,_gfcg :=range _fcee ._aea {if _fbca ,_gfge :=_eag .GetIndirect (_gfcg );
_gfge {if _cdcc ,_bed :=_fbca .PdfObject .(*pdfSignDictionary );_bed {_cdcc .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bgge );};};};_dgbc :=len (_bacg )> 0;var _ffdec _ba .Reader =_fcee ._efgc ;if _dgbc {_fgad :=make ([]_ba .Writer ,0,len (_bacg ));
for _ ,_bfgge :=range _bacg {_fgad =append (_fgad ,_bfgge );};_ffdec =_ba .TeeReader (_fcee ._efgc ,_ba .MultiWriter (_fgad ...));};_bbfgg ,_acgf :=_ba .Copy (w ,_ffdec );if _acgf !=nil {return _acgf ;};if len (_fcee ._aea )==0{return nil ;};_fbgf ._aaeea =_bbfgg ;
_fbgf .ObjNumOffset =_fcee ._ffce ;_fbgf ._fgfg =true ;_fbgf ._fdbde =_fcee ._gcgb ;_fbgf ._fbcge =_fcee ._gbcg ;_fbgf ._ccdba =_fcee ._cgbe ;_fbgf ._ddcce =_fcee ._egeg .PdfVersion ();_fbgf ._fbbde =_fcee ._ddde ;_fbgf ._ffbfg =_fcee ._dgde .GetCrypter ();
_fbgf ._agdeb =_fcee ._dgde .GetEncryptObj ();_gecee :=_fcee ._dgde .GetXrefType ();if _gecee !=nil {_aaeb :=*_gecee ==_eag .XrefTypeObjectStream ;_fbgf ._edbba =&_aaeb ;};_fbgf ._fcced =map[_eag .PdfObject ]struct{}{};_fbgf ._eggea =[]_eag .PdfObject {};
for _ ,_eeed :=range _fcee ._aea {if _ ,_gcea :=_fcee ._bafb [_eeed ];_gcea {continue ;};_fbgf .addObject (_eeed );};_gfgf :=w ;if _dgbc {_gfgf =_cf .NewBuffer (nil );};if _fcee ._dca !=""&&_fbgf ._ffbfg ==nil {_fbgf .Encrypt ([]byte (_fcee ._dca ),[]byte (_fcee ._dca ),_fcee ._dabb );
};if _ecee :=_ccgb .Get ("\u0049\u0044");_ecee !=nil {if _agbb ,_egdf :=_eag .GetArray (_ecee );_egdf {_fbgf ._cabccg =_agbb ;};};if _cdbc :=_fbgf .Write (_gfgf );_cdbc !=nil {return _cdbc ;};if _dgbc {_ggee :=_gfgf .(*_cf .Buffer ).Bytes ();_gbefe :=_eag .MakeArray ();
var _geae []*pdfSignDictionary ;var _cdae int64 ;for _ ,_bead :=range _fbgf ._eggea {if _defa ,_gcbb :=_eag .GetIndirect (_bead );_gcbb {if _bagd ,_ggfb :=_defa .PdfObject .(*pdfSignDictionary );_ggfb {_geae =append (_geae ,_bagd );_effb :=_bagd ._agagb +int64 (_bagd ._dgcdc );
_gbefe .Append (_eag .MakeInteger (_cdae ),_eag .MakeInteger (_effb -_cdae ));_cdae =_bagd ._agagb +int64 (_bagd ._abebb );};};};_gbefe .Append (_eag .MakeInteger (_cdae ),_eag .MakeInteger (_bbfgg +int64 (len (_ggee ))-_cdae ));_abba :=[]byte (_gbefe .WriteString ());
for _ ,_eggdf :=range _geae {_dggf :=int (_eggdf ._agagb -_bbfgg );for _caag :=_eggdf ._dbfdb ;_caag < _eggdf ._fcfec ;_caag ++{_ggee [_dggf +_caag ]=' ';};_fdge :=_ggee [_dggf +_eggdf ._dbfdb :_dggf +_eggdf ._fcfec ];copy (_fdge ,_abba );};var _ecgga int ;
for _ ,_ddgc :=range _geae {_cccb :=int (_ddgc ._agagb -_bbfgg );_ffdf :=_ggee [_ecgga :_cccb +_ddgc ._dgcdc ];_faaf :=*_ddgc ._fdbgd ;_bacg [_faaf ].Write (_ffdf );_ecgga =_cccb +_ddgc ._abebb ;};for _ ,_cbef :=range _geae {_bdaaf :=_ggee [_ecgga :];_eace :=*_cbef ._fdbgd ;
_bacg [_eace ].Write (_bdaaf );};for _ ,_dggae :=range _geae {_gaab :=int (_dggae ._agagb -_bbfgg );_gbge :=*_dggae ._fdbgd ;_dbdad :=_bacg [_gbge ];if _dgdcb :=_gbge .Sign (_dggae ._gafdb ,_dbdad );_dgdcb !=nil {return _dgdcb ;};_dggae ._gafdb .ByteRange =_gbefe ;
_baafab :=[]byte (_dggae ._gafdb .Contents .WriteString ());for _cbac :=_dggae ._dbfdb ;_cbac < _dggae ._fcfec ;_cbac ++{_ggee [_gaab +_cbac ]=' ';};for _gcabc :=_dggae ._dgcdc ;_gcabc < _dggae ._abebb ;_gcabc ++{_ggee [_gaab +_gcabc ]=' ';};_ffded :=_ggee [_gaab +_dggae ._dbfdb :_gaab +_dggae ._fcfec ];
copy (_ffded ,_abba );_ffded =_ggee [_gaab +_dggae ._dgcdc :_gaab +_dggae ._abebb ];copy (_ffded ,_baafab );};_gdfca :=_cf .NewBuffer (_ggee );_ ,_acgf =_ba .Copy (w ,_gdfca );if _acgf !=nil {return _acgf ;};};_fcee ._aggc =true ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfAction )ToPdfObject ()_eag .PdfObject {_gf :=_bdg ._ggd ;_bfc :=_gf .PdfObject .(*_eag .PdfObjectDictionary );_bfc .Clear ();_bfc .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_bfc .SetIfNotNil ("\u0053",_bdg .S );
_bfc .SetIfNotNil ("\u004e\u0065\u0078\u0074",_bdg .Next );return _gf ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// HasXObjectByName checks if has XObject resource by name.
func (_cdefb *PdfPage )HasXObjectByName (name _eag .PdfObjectName )bool {_gadae ,_dfbecc :=_cdefb .Resources .XObject .(*_eag .PdfObjectDictionary );if !_dfbecc {return false ;};if _egdec :=_gadae .Get (name );_egdec !=nil {return true ;};return false ;
};func (_bgcf *PdfReader )newPdfAnnotationSquigglyFromDict (_dfaf *_eag .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gcbgf :=PdfAnnotationSquiggly {};_adf ,_agbg :=_bgcf .newPdfAnnotationMarkupFromDict (_dfaf );if _agbg !=nil {return nil ,_agbg ;
};_gcbgf .PdfAnnotationMarkup =_adf ;_gcbgf .QuadPoints =_dfaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcbgf ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_eag .PdfObjectInteger ;BitsPerComponent *_eag .PdfObjectInteger ;BitsPerFlag *_eag .PdfObjectInteger ;Decode *_eag .PdfObjectArray ;Function []PdfFunction ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ag .Time ){_cabff .Lock ();defer _cabff .Unlock ();_fegec =creationDate ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fcea *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fabba *PdfColorspaceDeviceRGB )ToPdfObject ()_eag .PdfObject {return _eag .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetAttachedFiles retrieves all the attached files info and content.
func (_cdbdd *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_fbefd ,_afdeb :=_cdbdd .GetNameDictionary ();if _afdeb !=nil {return nil ,_afdeb ;};_fbafd :=_gdbe (_fbefd );if _fbafd .EmbeddedFiles ==nil {return nil ,nil ;};_acgd :=_fbafd .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");
_ggcee ,_dfdgc :=_acgd .(*_eag .PdfObjectArray );if !_dfdgc {return nil ,_bag .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_fadbc :=[]*EmbeddedFile {};for _cffbb :=1;_cffbb < len (_ggcee .Elements ());
_cffbb +=2{if _cffbb %2!=0{_acbda :=_ggcee .Get (_cffbb );_dggcg ,_caafe :=NewPdfFilespecFromObj (_acbda );if _caafe !=nil {return nil ,_caafe ;};_abbf ,_caafe :=NewEmbeddedFileFromObject (_dggcg .EF );if _caafe !=nil {return nil ,_caafe ;};_cdffe ,_gaebb :=_dggcg .F .(*_eag .PdfObjectString );
if _gaebb {_abbf .Name =_cdffe .Str ();};_abbf .Description =_dggcg .Desc .WriteString ();switch _dggcg .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_abbf .Relationship =RelationshipSource ;case "\u0044\u0061\u0074\u0061":_abbf .Relationship =RelationshipData ;
case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_abbf .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_abbf .Relationship =RelationshipSupplement ;default:_abbf .Relationship =RelationshipUnspecified ;
};_fadbc =append (_fadbc ,_abbf );};};return _fadbc ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fged *PdfColorspaceICCBased )ToPdfObject ()_eag .PdfObject {_dgge :=&_eag .PdfObjectArray {};_dgge .Append (_eag .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _acceb *_eag .PdfObjectStream ;if _fged ._dcbe !=nil {_acceb =_fged ._dcbe ;
}else {_acceb =&_eag .PdfObjectStream {};};_acdf :=_eag .MakeDict ();_acdf .Set ("\u004e",_eag .MakeInteger (int64 (_fged .N )));if _fged .Alternate !=nil {_acdf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fged .Alternate .ToPdfObject ());};if _fged .Metadata !=nil {_acdf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fged .Metadata );
};if _fged .Range !=nil {var _edfbb []_eag .PdfObject ;for _ ,_gebe :=range _fged .Range {_edfbb =append (_edfbb ,_eag .MakeFloat (_gebe ));};_acdf .Set ("\u0052\u0061\u006eg\u0065",_eag .MakeArray (_edfbb ...));};_acdf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_fged .Data ))));
_acceb .Stream =_fged .Data ;_acceb .PdfObjectDictionary =_acdf ;_dgge .Append (_acceb );if _fged ._gccb !=nil {_fged ._gccb .PdfObject =_dgge ;return _fged ._gccb ;};return _dgge ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_ddagd :=PdfColorDeviceRGB {r ,g ,b };return &_ddagd ;};func (_faeaa *pdfFontSimple )baseFields ()*fontCommon {return &_faeaa .fontCommon };

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_afdfd PdfModel ;_eebf *_eag .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_eag .PdfObjectName ;T *_eag .PdfObjectString ;TU *_eag .PdfObjectString ;TM *_eag .PdfObjectString ;Ff *_eag .PdfObjectInteger ;
V _eag .PdfObject ;DV _eag .PdfObject ;AA _eag .PdfObject ;VariableText *VariableText ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_badb int ,_egcac *PdfPage );

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dgceac pdfCIDFontType0 )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){return _eeb .CharMetrics {Wx :_dgceac ._cfcae },true ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_cbgg *DSS )GetContainingPdfObject ()_eag .PdfObject {return _cbgg ._fede };

// ColorToRGB converts an Indexed color to an RGB color.
func (_bagg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bagg .Base ==nil {return nil ,_bag .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bagg .Base .ColorToRGB (color );};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _eag .PdfObject ;MK _eag .PdfObject ;A _eag .PdfObject ;AA _eag .PdfObject ;BS _eag .PdfObject ;Parent _eag .PdfObject ;_bgda *PdfField ;_dbb bool ;};func (_caa *PdfReader )newPdfActionLaunchFromDict (_cae *_eag .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bfcf ,_ggfa :=_bae (_cae .Get ("\u0046"));
if _ggfa !=nil {return nil ,_ggfa ;};return &PdfActionLaunch {Win :_cae .Get ("\u0057\u0069\u006e"),Mac :_cae .Get ("\u004d\u0061\u0063"),Unix :_cae .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bfcf },nil ;
};var (_ecfa =_gc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_geeef =_gc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_aeaa =_gc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_bgbf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ceeca ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bdga ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_bfaca *modelManager )GetPrimitiveFromModel (model PdfModel )_eag .PdfObject {_dgcc ,_fdff :=_bfaca ._gfbgg [model ];if !_fdff {return nil ;};return _dgcc ;};func (_bafa *PdfWriter )checkLicense ()error {_dcdbec :=_bda .GetLicenseKey ();if (_dcdbec ==nil ||!_dcdbec .IsLicensed ())&&!_efdgf {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _bag .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_febde *PdfColorspaceDeviceNAttributes )ToPdfObject ()_eag .PdfObject {_ffag :=_eag .MakeDict ();if _febde .Subtype !=nil {_ffag .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_febde .Subtype );};_ffag .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_febde .Colorants );
_ffag .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_febde .Process );_ffag .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_febde .MixingHints );if _febde ._afcf !=nil {_febde ._afcf .PdfObject =_ffag ;return _febde ._afcf ;
};return _ffag ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_eecbc *PdfPage )GetPageAsIndirectObject ()*_eag .PdfIndirectObject {return _eecbc ._beadd };func (_cfgae fontCommon )fontFlags ()int {if _cfgae ._ecdgfc ==nil {return 0;};return _cfgae ._ecdgfc ._gafa ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gacad *PdfPageResources )HasExtGState (keyName _eag .PdfObjectName )bool {_ ,_deecf :=_gacad .GetFontByName (keyName );return _deecf ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bc :=NewPdfAction ();_ece :=&PdfActionTrans {};_ece .PdfAction =_bc ;_bc .SetContext (_ece );return _ece ;};

// GetCatalogLanguage gets catalog Language object.
func (_bddb *PdfReader )GetCatalogLanguage ()(_eag .PdfObject ,bool ){if _bddb ._adbgg ==nil {return nil ,false ;};_fbab :=_bddb ._adbgg .Get ("\u004c\u0061\u006e\u0067");return _fbab ,_fbab !=nil ;};func _bdgc (_beae _eag .PdfObject ,_bgde *fontCommon )(*_cd .CMap ,error ){_eaeee ,_gbbce :=_eag .GetStream (_beae );
if !_gbbce {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_beae );
return nil ,_eag .ErrTypeError ;};_daffg ,_bbbc :=_eag .DecodeStream (_eaeee );if _bbbc !=nil {return nil ,_bbbc ;};_fgadf ,_bbbc :=_cd .LoadCmapFromData (_daffg ,!_bgde .isCIDFont ());if _bbbc !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_eaeee .ObjectNumber ,_bbbc );
};return _fgadf ,_bbbc ;};func _ebdgc (_cbbf _eag .PdfObject )(*PdfColorspaceICCBased ,error ){_cbgcb :=&PdfColorspaceICCBased {};if _affb ,_edfff :=_cbbf .(*_eag .PdfIndirectObject );_edfff {_cbgcb ._gccb =_affb ;};_cbbf =_eag .TraceToDirectObject (_cbbf );
_ecce ,_faad :=_cbbf .(*_eag .PdfObjectArray );if !_faad {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecce .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_cbbf =_eag .TraceToDirectObject (_ecce .Get (0));_dfdc ,_faad :=_cbbf .(*_eag .PdfObjectName );if !_faad {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_dfdc !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cbbf =_ecce .Get (1);
_bbac ,_faad :=_eag .GetStream (_cbbf );if !_faad {_ebdd .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cbbf );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fabf :=_bbac .PdfObjectDictionary ;_adgc ,_faad :=_fabf .Get ("\u004e").(*_eag .PdfObjectInteger );
if !_faad {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_adgc !=1&&*_adgc !=3&&*_adgc !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cbgcb .N =int (*_adgc );if _eded :=_fabf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_eded !=nil {_dfggg ,_efge :=NewPdfColorspaceFromPdfObject (_eded );if _efge !=nil {return nil ,_efge ;};_cbgcb .Alternate =_dfggg ;};if _bffdf :=_fabf .Get ("\u0052\u0061\u006eg\u0065");
_bffdf !=nil {_bffdf =_eag .TraceToDirectObject (_bffdf );_dgdee ,_dbfdd :=_bffdf .(*_eag .PdfObjectArray );if !_dbfdd {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dgdee .Len ()!=2*_cbgcb .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_facfb ,_efbb :=_dgdee .GetAsFloat64Slice ();if _efbb !=nil {return nil ,_efbb ;};_cbgcb .Range =_facfb ;}else {_cbgcb .Range =make ([]float64 ,2*_cbgcb .N );for _decbe :=0;_decbe < _cbgcb .N ;_decbe ++{_cbgcb .Range [2*_decbe ]=0.0;_cbgcb .Range [2*_decbe +1]=1.0;
};};if _adgae :=_fabf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adgae !=nil {_efad ,_defc :=_adgae .(*_eag .PdfObjectStream );if !_defc {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cbgcb .Metadata =_efad ;};_ebcb ,_cdbf :=_eag .DecodeStream (_bbac );if _cdbf !=nil {return nil ,_cdbf ;};_cbgcb .Data =_ebcb ;_cbgcb ._dcbe =_bbac ;return _cbgcb ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_adfgb *PdfFont )CharcodesToUnicode (charcodes []_gbf .CharCode )[]rune {_eaged ,_ ,_ :=_adfgb .CharcodesToUnicodeWithStats (charcodes );return _eaged ;};

// Encoder returns the font's text encoder.
func (_gccgf *pdfFontSimple )Encoder ()_gbf .TextEncoder {if _gccgf ._defdg !=nil {return _gccgf ._defdg ;};if _gccgf ._ddggb !=nil {return _gccgf ._ddggb ;};_gfgecc ,_ :=_gbf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gfgecc ;};func (_edcfg *PdfWriter )checkPendingObjects (){for _bbfeg ,_babd :=range _edcfg ._abbad {if !_edcfg .hasObject (_bbfeg ){_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_bbfeg ,_bbfeg ,_bbfeg );
for _ ,_efged :=range _babd {for _ ,_fcbcdf :=range _efged .Keys (){_effde :=_efged .Get (_fcbcdf );if _effde ==_bbfeg {_ebdd .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_efged .Set (_fcbcdf ,_eag .MakeNull ());break ;};};};};};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cccc *PdfColorspaceDeviceGray )ToPdfObject ()_eag .PdfObject {return _eag .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _fgbb (_dfdee *_eag .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cabdf :=PdfShadingType3 {};
_cacea :=_dfdee .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cacea ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aegce ,_bfgcf :=_cacea .(*_eag .PdfObjectArray );if !_bfgcf {_ebdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cacea );
return nil ,_eag .ErrTypeError ;};if _aegce .Len ()!=6{_ebdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aegce .Len ());return nil ,ErrInvalidAttribute ;
};_cabdf .Coords =_aegce ;if _gfbb :=_dfdee .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gfbb !=nil {_gfbb =_eag .TraceToDirectObject (_gfbb );_gdbbc ,_cdadb :=_gfbb .(*_eag .PdfObjectArray );if !_cdadb {_ebdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfbb );
return nil ,_eag .ErrTypeError ;};_cabdf .Domain =_gdbbc ;};_cacea =_dfdee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cacea ==nil {_ebdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cabdf .Function =[]PdfFunction {};if _bfdcb ,_bbfdb :=_cacea .(*_eag .PdfObjectArray );_bbfdb {for _ ,_dddce :=range _bfdcb .Elements (){_abeg ,_gfbgc :=_baaab (_dddce );if _gfbgc !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfbgc );
return nil ,_gfbgc ;};_cabdf .Function =append (_cabdf .Function ,_abeg );};}else {_dacce ,_geebf :=_baaab (_cacea );if _geebf !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geebf );
return nil ,_geebf ;};_cabdf .Function =append (_cabdf .Function ,_dacce );};if _edag :=_dfdee .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_edag !=nil {_edag =_eag .TraceToDirectObject (_edag );_gfgef ,_gfcaf :=_edag .(*_eag .PdfObjectArray );if !_gfcaf {_ebdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edag );
return nil ,_eag .ErrTypeError ;};if _gfgef .Len ()!=2{_ebdd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gfgef .Len ());return nil ,ErrInvalidAttribute ;
};_cabdf .Extend =_gfgef ;};return &_cabdf ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_efafd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eadda :=_dba .NewReader (img .getBase ());_acba :=_fde .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cbefd ,img ._dadbe );
_ecdgg :=_dba .NewWriter (_acba );_dcaf :=_gcg .Pow (2,float64 (img .BitsPerComponent ))-1;_cag :=_efafd .GetNumComponents ();_bgga :=make ([]uint32 ,_cag );_fedc :=make ([]float64 ,_cag );for {_ddef :=_eadda .ReadSamples (_bgga );if _ddef ==_ba .EOF {break ;
}else if _ddef !=nil {return img ,_ddef ;};for _bcaeg :=0;_bcaeg < _cag ;_bcaeg ++{_agge :=float64 (_bgga [_bcaeg ])/_dcaf ;_fedc [_bcaeg ]=_agge ;};_cddda ,_ddef :=_efafd .TintTransform .Evaluate (_fedc );if _ddef !=nil {return img ,_ddef ;};for _ ,_fdgd :=range _cddda {_fdgd =_gcg .Min (_gcg .Max (0,_fdgd ),1.0);
if _ddef =_ecdgg .WriteSample (uint32 (_fdgd *_dcaf ));_ddef !=nil {return img ,_ddef ;};};};return _efafd .AlternateSpace .ImageToRGB (_ecfe (&_acba ));};func _accb (_gfcbe *_eag .PdfObjectStream )(*PdfFunctionType4 ,error ){_abcb :=&PdfFunctionType4 {};
_abcb ._baca =_gfcbe ;_edbec :=_gfcbe .PdfObjectDictionary ;_cgfec ,_babcc :=_eag .TraceToDirectObject (_edbec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eag .PdfObjectArray );if !_babcc {_ebdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cgfec .Len ()%2!=0{_ebdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dfdeg ,_fbfee :=_cgfec .ToFloat64Array ();if _fbfee !=nil {return nil ,_fbfee ;};_abcb .Domain =_dfdeg ;_cgfec ,_babcc =_eag .TraceToDirectObject (_edbec .Get ("\u0052\u0061\u006eg\u0065")).(*_eag .PdfObjectArray );
if _babcc {if _cgfec .Len ()< 0||_cgfec .Len ()%2!=0{return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fdca ,_befec :=_cgfec .ToFloat64Array ();if _befec !=nil {return nil ,_befec ;};_abcb .Range =_fdca ;
};_deda ,_fbfee :=_eag .DecodeStream (_gfcbe );if _fbfee !=nil {return nil ,_fbfee ;};_abcb ._fddg =_deda ;_agff :=_bd .NewPSParser (_deda );_affea ,_fbfee :=_agff .Parse ();if _fbfee !=nil {return nil ,_fbfee ;};_abcb .Program =_affea ;return _abcb ,nil ;
};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_cead DefaultImageHandler )NewImageFromGoImage (goimg _d .Image )(*Image ,error ){_bfac ,_cabcfb :=_fde .FromGoImage (goimg );if _cabcfb !=nil {return nil ,_cabcfb ;};_fgga :=_ecfe (_bfac .Base ());return &_fgga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cefae *PdfAnnotationLine )ToPdfObject ()_eag .PdfObject {_cefae .PdfAnnotation .ToPdfObject ();_dgga :=_cefae ._gfa ;_acde :=_dgga .PdfObject .(*_eag .PdfObjectDictionary );_cefae .PdfAnnotationMarkup .appendToPdfDictionary (_acde );_acde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u004c\u0069\u006e\u0065"));
_acde .SetIfNotNil ("\u004c",_cefae .L );_acde .SetIfNotNil ("\u0042\u0053",_cefae .BS );_acde .SetIfNotNil ("\u004c\u0045",_cefae .LE );_acde .SetIfNotNil ("\u0049\u0043",_cefae .IC );_acde .SetIfNotNil ("\u004c\u004c",_cefae .LL );_acde .SetIfNotNil ("\u004c\u004c\u0045",_cefae .LLE );
_acde .SetIfNotNil ("\u0043\u0061\u0070",_cefae .Cap );_acde .SetIfNotNil ("\u0049\u0054",_cefae .IT );_acde .SetIfNotNil ("\u004c\u004c\u004f",_cefae .LLO );_acde .SetIfNotNil ("\u0043\u0050",_cefae .CP );_acde .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cefae .Measure );
_acde .SetIfNotNil ("\u0043\u004f",_cefae .CO );return _dgga ;};

// ToPdfObject implements interface PdfModel.
func (_baecf *PdfAnnotationPrinterMark )ToPdfObject ()_eag .PdfObject {_baecf .PdfAnnotation .ToPdfObject ();_bgbc :=_baecf ._gfa ;_fcafe :=_bgbc .PdfObject .(*_eag .PdfObjectDictionary );_fcafe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fcafe .SetIfNotNil ("\u004d\u004e",_baecf .MN );return _bgbc ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_fede *_eag .PdfIndirectObject ;Certs []*_eag .PdfObjectStream ;OCSPs []*_eag .PdfObjectStream ;CRLs []*_eag .PdfObjectStream ;VRI map[string ]*VRI ;_bdgdg map[string ]*_eag .PdfObjectStream ;_bebg map[string ]*_eag .PdfObjectStream ;_gbaf map[string ]*_eag .PdfObjectStream ;
};func (_dgec *PdfReader )newPdfAnnotationScreenFromDict (_edde *_eag .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_aafe :=PdfAnnotationScreen {};_aafe .T =_edde .Get ("\u0054");_aafe .MK =_edde .Get ("\u004d\u004b");_aafe .A =_edde .Get ("\u0041");
_aafe .AA =_edde .Get ("\u0041\u0041");return &_aafe ,nil ;};func (_edb *PdfReader )newPdfActionSetOCGStateFromDict (_gad *_eag .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gad .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gad .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cbcbc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ebdd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baecg :=[]float64 {0.0};if _cbcbc .C0 !=nil {_baecg =_cbcbc .C0 ;};_eagcb :=[]float64 {1.0};if _cbcbc .C1 !=nil {_eagcb =_cbcbc .C1 ;};var _fcbcb []float64 ;for _dfbc :=0;_dfbc < len (_baecg );_dfbc ++{_facda :=_baecg [_dfbc ]+_gcg .Pow (x [0],_cbcbc .N )*(_eagcb [_dfbc ]-_baecg [_dfbc ]);
_fcbcb =append (_fcbcb ,_facda );};return _fcbcb ,nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_fa :=NewPdfAction ();_ggda :=&PdfActionHide {};_ggda .PdfAction =_fa ;_fa .SetContext (_ggda );return _ggda ;};

// ToPdfObject implements interface PdfModel.
func (_dcef *PdfActionHide )ToPdfObject ()_eag .PdfObject {_dcef .PdfAction .ToPdfObject ();_eaf :=_dcef ._ggd ;_ab :=_eaf .PdfObject .(*_eag .PdfObjectDictionary );_ab .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeHide )));_ab .SetIfNotNil ("\u0054",_dcef .T );
_ab .SetIfNotNil ("\u0048",_dcef .H );return _eaf ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_dfca *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_edgfe :=0.3*_dfca .R ()+0.59*_dfca .G ()+0.11*_dfca .B ();_edgfe =_gcg .Min (_gcg .Max (_edgfe ,0.0),1.0);return NewPdfColorDeviceGray (_edgfe );};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_eag .PdfObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_acef *PdfPattern )GetContainingPdfObject ()_eag .PdfObject {return _acef ._bcdbe };const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gacbc FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gacbc .Mask ()&^fl .Mask ())};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_afdba *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_adfb :=_dba .NewReader (img .getBase ());_dadc :=_fde .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_afdba .AlternateSpace .GetNumComponents (),nil ,img ._cbefd ,nil );
_gdbca :=_dba .NewWriter (_dadc );_gffg :=_gcg .Pow (2,float64 (img .BitsPerComponent ))-1;_ebdd .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ebdd .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_afdba .TintTransform );_abeaa :=_afdba .AlternateSpace .DecodeArray ();var (_cgdg uint32 ;_egdc error ;);for {_cgdg ,_egdc =_adfb .ReadSample ();
if _egdc ==_ba .EOF {break ;};if _egdc !=nil {return img ,_egdc ;};_fedb :=float64 (_cgdg )/_gffg ;_dfff ,_geaaaf :=_afdba .TintTransform .Evaluate ([]float64 {_fedb });if _geaaaf !=nil {return img ,_geaaaf ;};for _affg ,_cdcdc :=range _dfff {_cacaf :=_fde .LinearInterpolate (_cdcdc ,_abeaa [_affg *2],_abeaa [_affg *2+1],0,1);
if _geaaaf =_gdbca .WriteSample (uint32 (_cacaf *_gffg ));_geaaaf !=nil {return img ,_geaaaf ;};};};return _afdba .AlternateSpace .ImageToRGB (_ecfe (&_dadc ));};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cdedc *PdfWriter )SetOptimizer (optimizer Optimizer ){_cdedc ._ceag =optimizer };func (_gcef *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fgaga []*PdfFieldSignature ;for _ ,_dbbba :=range _gcef .AllFields (){switch _eafg :=_dbbba .GetContext ().(type ){case *PdfFieldSignature :_fcceb :=_eafg ;
_fgaga =append (_fgaga ,_fcceb );};};return _fgaga ;};func _dbdab (_feaa _eag .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ebdd .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_feaa .String (),_feaa );
_fbbf :=NewPdfColorspaceSpecialPattern ();if _abfe ,_efcc :=_feaa .(*_eag .PdfIndirectObject );_efcc {_fbbf ._ccdc =_abfe ;};_feaa =_eag .TraceToDirectObject (_feaa );if _fbcf ,_cbbaa :=_feaa .(*_eag .PdfObjectName );_cbbaa {if *_fbcf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _fbbf ,nil ;};_bffc ,_gabf :=_feaa .(*_eag .PdfObjectArray );if !_gabf {_ebdd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_feaa );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bffc .Len ()!=1&&_bffc .Len ()!=2{_ebdd .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bffc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_feaa =_bffc .Get (0);if _ddbf ,_dggc :=_feaa .(*_eag .PdfObjectName );_dggc {if *_ddbf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ebdd .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ddbf );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bffc .Len ()> 1{_feaa =_bffc .Get (1);_feaa =_eag .TraceToDirectObject (_feaa );_dabc ,_fcdd :=NewPdfColorspaceFromPdfObject (_feaa );if _fcdd !=nil {return nil ,_fcdd ;
};_fbbf .UnderlyingCS =_dabc ;};_ebdd .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fbbf .UnderlyingCS );
return _fbbf ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _eag .PdfObject ;RichMediaContent _eag .PdfObject ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ageaf *PdfField )IsTerminal ()bool {return len (_ageaf .Kids )==0};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_bgdc :=_db .Detect (content );_eeeb :=_fb .Sum (content );_acaca :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_bgdc .String (),Hash :_df .EncodeToString (_eeeb [:])};
return _acaca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdg *PdfAnnotationFreeText )ToPdfObject ()_eag .PdfObject {_gdg .PdfAnnotation .ToPdfObject ();_bfaeb :=_gdg ._gfa ;_fdac :=_bfaeb .PdfObject .(*_eag .PdfObjectDictionary );_gdg .PdfAnnotationMarkup .appendToPdfDictionary (_fdac );_fdac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fdac .SetIfNotNil ("\u0044\u0041",_gdg .DA );_fdac .SetIfNotNil ("\u0051",_gdg .Q );_fdac .SetIfNotNil ("\u0052\u0043",_gdg .RC );_fdac .SetIfNotNil ("\u0044\u0053",_gdg .DS );_fdac .SetIfNotNil ("\u0043\u004c",_gdg .CL );_fdac .SetIfNotNil ("\u0049\u0054",_gdg .IT );
_fdac .SetIfNotNil ("\u0042\u0045",_gdg .BE );_fdac .SetIfNotNil ("\u0052\u0044",_gdg .RD );_fdac .SetIfNotNil ("\u0042\u0053",_gdg .BS );_fdac .SetIfNotNil ("\u004c\u0045",_gdg .LE );return _bfaeb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_edff *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GetCustomInfo returns a custom info value for the specified name.
func (_gbede *PdfInfo )GetCustomInfo (name string )*_eag .PdfObjectString {var _bafbg *_eag .PdfObjectString ;if _gbede ._gege ==nil {return _bafbg ;};if _bdea ,_dcgbe :=_gbede ._gege .Get (*_eag .MakeName (name )).(*_eag .PdfObjectString );_dcgbe {_bafbg =_bdea ;
};return _bafbg ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_cacad *PdfPageResources )HasXObjectByName (keyName _eag .PdfObjectName )bool {_efgac ,_ :=_cacad .GetXObjectByName (keyName );return _efgac !=nil ;};type pdfFontType0 struct{fontCommon ;_gefcg *_eag .PdfIndirectObject ;_cege _gbf .TextEncoder ;Encoding _eag .PdfObject ;
DescendantFont *PdfFont ;_geceg *_cd .CMap ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_adgd *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_affbg :=map[*PdfAnnotation ]bool {};_fgdg ,_cbbd :=_adgd .GetAnnotations ();if _cbbd !=nil {return _cbbd ;};_efabg :=false ;for _ ,_gdeg :=range _fgdg {if opts .AnnotFilterFunc !=nil {_affbg [_gdeg ]=opts .AnnotFilterFunc (_gdeg );
}else {_affbg [_gdeg ]=true ;};if _affbg [_gdeg ]{_efabg =true ;};};if !_efabg {return nil ;};return _adgd .flattenFieldsWithOpts (appgen ,opts ,_affbg );};

// Encoder iterates through the list of fonts and returns a working encoder
func (_eadcf *MultipleFontEncoder )Encoder (rn rune )(_gbf .TextEncoder ,bool ){_gdeag :=_eadcf .CurrentFont ;_gffag :=_gdeag .Encoder ();_ ,_fbfge :=_gffag .RuneToCharcode (rn );for _gggda :=1;_gggda < len (_eadcf ._ebfgc )&&!_fbfge ;_gggda ++{_gdeag =_eadcf ._ebfgc [_gggda ];
_gffag =_gdeag .Encoder ();_ ,_fbfge =_gffag .RuneToCharcode (rn );_eadcf .CurrentFont =_gdeag ;};return _gffag ,_fbfge ;};

// Encoder returns the font's text encoder.
func (_gagf pdfCIDFontType0 )Encoder ()_gbf .TextEncoder {return _gagf ._gefef };func (_gaae *PdfWriter )makeOffSetReference (_acab int64 ){_ggcfc :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_acab );_gaae .writeString (_ggcfc );
_gaae .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_eag .PdfObjectArray ;ExtGState _eag .PdfObject ;};func (_cfafg *PdfWriter )setWriter (_fggdf _ba .Writer ){_cfafg ._bfacf =_cfafg ._aaeea ;_cfafg ._fdcde =_a .NewWriter (_fggdf );
};func _cfcec (_dcfg *_eag .PdfObjectDictionary ,_bbfbg *fontCommon )(*pdfFontType0 ,error ){_gfedc ,_cafb :=_eag .GetArray (_dcfg .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_cafb {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bbfbg );
return nil ,_eag .ErrRangeError ;};if _gfedc .Len ()!=1{_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gfedc .Len ());
return nil ,_eag .ErrRangeError ;};_fdgda ,_dbadc :=_dbea (_gfedc .Get (0),false );if _dbadc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dbadc ,_bbfbg );
return nil ,_dbadc ;};_egec :=_dcfg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_ebcbf :="";_bcdg :=_cbdab (_bbfbg );_bcdg .DescendantFont =_fdgda ;switch _eebea :=_egec .(type ){case *_eag .PdfObjectName :_ebcbf ,_cafb =_eag .GetNameVal (_egec );
if _cafb {if _ebcbf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ebcbf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcdg ._cege =_gbf .NewIdentityTextEncoder (_ebcbf );}else if _cd .IsPredefinedCMap (_ebcbf ){_bcdg ._geceg ,_dbadc =_cd .LoadPredefinedCMap (_ebcbf );
if _dbadc !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ebcbf ,_dbadc );
};}else {_ebdd .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ebcbf );};};case *_eag .PdfObjectStream :if _bcdg ._afga ==nil {_gddfc ,_bddca :=_cd .NewCIDSystemInfo (_eebea .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bddca !=nil {_ebdd .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_bddca );};_deece :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gddfc .Registry ,_gddfc .Ordering );
if _cd .IsPredefinedCMap (_deece ){_bcdg ._geceg ,_bddca =_cd .LoadPredefinedCMap (_deece );if _bddca !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_deece ,_bddca );
};}else {_deece =_eebea .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_fccdc ,_bccde :=_eag .DecodeStream (_eebea );if _bccde !=nil {_ebdd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_bccde );
return _bcdg ,_bccde ;};if _gabg :=_deece =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_deece =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_gabg {_bcdg ._geceg ,_bccde =_cd .LoadCmapFromData (_fccdc ,_gabg );
if _bccde !=nil {_ebdd .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_bccde ,string (_fccdc ));
return _bcdg ,_bccde ;};_egdfd :=make (map[_cd .CharCode ]rune ,256);for _gaebc :=0x00;_gaebc <=0xFF;_gaebc ++{_egdfd [_cd .CharCode (_gaebc )]=rune (_gaebc );};_bcdg ._dccf =_cd .NewToUnicodeCMap (_egdfd );};};};};if _febab :=_fdgda .baseFields ()._dccf ;
_febab !=nil {if _abca :=_febab .Name ();_abca =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_abca =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_abca =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_abca =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcdg ._cege =_gbf .NewCMapEncoder (_ebcbf ,_bcdg ._geceg ,_febab );
};};return _bcdg ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_ddefg *Image )ConvertToBinary ()error {if _ddefg .ColorComponents ==1&&_ddefg .BitsPerComponent ==1{return nil ;};_gdcc ,_abbg :=_ddefg .ToGoImage ();if _abbg !=nil {return _abbg ;};_afaaa ,_abbg :=_fde .MonochromeConverter .Convert (_gdcc );if _abbg !=nil {return _abbg ;
};_ddefg .Data =_afaaa .Base ().Data ;_ddefg ._cbefd ,_abbg =_fde .ScaleAlphaToMonochrome (_ddefg ._cbefd ,int (_ddefg .Width ),int (_ddefg .Height ));if _abbg !=nil {return _abbg ;};_ddefg .BitsPerComponent =1;_ddefg .ColorComponents =1;_ddefg ._dadbe =nil ;
return nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_efgdg *PdfWriter )SetNamedDestinations (dests _eag .PdfObject )error {if dests ==nil {return nil ;};_ebdd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_efgdg ._daegb .Set ("\u0044\u0065\u0073t\u0073",dests );return _efgdg .addObjects (dests );};type pdfFont interface{_eeb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_eag .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gcgbg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ddbc *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bffb :=_dba .NewReader (img .getBase ());_bcgcf :=_fde .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cadd :=_dba .NewWriter (_bcgcf );
_dbgb :=_gcg .Pow (2,float64 (img .BitsPerComponent ))-1;_bfbgg :=make ([]uint32 ,3);var (_gedd error ;_acda ,_fafeg ,_gfea ,_gfeg ,_ebcg ,_cecg float64 ;);for {_gedd =_bffb .ReadSamples (_bfbgg );if _gedd ==_ba .EOF {break ;}else if _gedd !=nil {return img ,_gedd ;
};_acda =float64 (_bfbgg [0])/_dbgb ;_fafeg =float64 (_bfbgg [1])/_dbgb ;_gfea =float64 (_bfbgg [2])/_dbgb ;_gfeg =_ddbc .Matrix [0]*_gcg .Pow (_acda ,_ddbc .Gamma [0])+_ddbc .Matrix [3]*_gcg .Pow (_fafeg ,_ddbc .Gamma [1])+_ddbc .Matrix [6]*_gcg .Pow (_gfea ,_ddbc .Gamma [2]);
_ebcg =_ddbc .Matrix [1]*_gcg .Pow (_acda ,_ddbc .Gamma [0])+_ddbc .Matrix [4]*_gcg .Pow (_fafeg ,_ddbc .Gamma [1])+_ddbc .Matrix [7]*_gcg .Pow (_gfea ,_ddbc .Gamma [2]);_cecg =_ddbc .Matrix [2]*_gcg .Pow (_acda ,_ddbc .Gamma [0])+_ddbc .Matrix [5]*_gcg .Pow (_fafeg ,_ddbc .Gamma [1])+_ddbc .Matrix [8]*_gcg .Pow (_gfea ,_ddbc .Gamma [2]);
_acda =3.240479*_gfeg +-1.537150*_ebcg +-0.498535*_cecg ;_fafeg =-0.969256*_gfeg +1.875992*_ebcg +0.041556*_cecg ;_gfea =0.055648*_gfeg +-0.204043*_ebcg +1.057311*_cecg ;_acda =_gcg .Min (_gcg .Max (_acda ,0),1.0);_fafeg =_gcg .Min (_gcg .Max (_fafeg ,0),1.0);
_gfea =_gcg .Min (_gcg .Max (_gfea ,0),1.0);_bfbgg [0]=uint32 (_acda *_dbgb );_bfbgg [1]=uint32 (_fafeg *_dbgb );_bfbgg [2]=uint32 (_gfea *_dbgb );if _gedd =_cadd .WriteSamples (_bfbgg );_gedd !=nil {return img ,_gedd ;};};return _ecfe (&_bcgcf ),nil ;
};func _gfba (_ddcdf *_eag .PdfIndirectObject ,_dfcfc *_eag .PdfObjectDictionary )(*DSS ,error ){if _ddcdf ==nil {_ddcdf =_eag .MakeIndirectObject (nil );};_ddcdf .PdfObject =_eag .MakeDict ();_dfda :=map[string ]*VRI {};if _bfgf ,_ecge :=_eag .GetDict (_dfcfc .Get ("\u0056\u0052\u0049"));
_ecge {for _ ,_eccd :=range _bfgf .Keys (){if _edecc ,_fgdc :=_eag .GetDict (_bfgf .Get (_eccd ));_fgdc {_dfda [_cb .ToUpper (_eccd .String ())]=_ffca (_edecc );};};};return &DSS {Certs :_degec (_dfcfc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_degec (_dfcfc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_degec (_dfcfc .Get ("\u0043\u0052\u004c\u0073")),VRI :_dfda ,_fede :_ddcdf },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gca *PdfActionSubmitForm )ToPdfObject ()_eag .PdfObject {_gca .PdfAction .ToPdfObject ();_cacb :=_gca ._ggd ;_gfg :=_cacb .PdfObject .(*_eag .PdfObjectDictionary );_gfg .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeSubmitForm )));if _gca .F !=nil {_gfg .Set ("\u0046",_gca .F .ToPdfObject ());
};_gfg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gca .Fields );_gfg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gca .Flags );return _cacb ;};func (_decbb *fontFile )loadFromSegments (_afdc ,_bcfg []byte )error {_ebdd .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_afdc ),len (_bcfg ));
_abcaa :=_decbb .parseASCIIPart (_afdc );if _abcaa !=nil {return _abcaa ;};_ebdd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_decbb );if len (_bcfg )==0{return nil ;};_ebdd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_decbb );
return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cgeg ,_gedad :=_babf (basefont );if _gedad !=nil {return nil ,_gedad ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cgeg ._defdg =_gbf .NewWinAnsiEncoder ();};return &PdfFont {_dagg :&_cgeg },nil ;
};func (_fcddb *pdfFontType0 )bytesToCharcodes (_cgca []byte )([]_gbf .CharCode ,bool ){if _fcddb ._geceg ==nil {return nil ,false ;};_eebbg ,_begg :=_fcddb ._geceg .BytesToCharcodes (_cgca );if !_begg {return nil ,false ;};_daae :=make ([]_gbf .CharCode ,len (_eebbg ));
for _gabb ,_eceea :=range _eebbg {_daae [_gabb ]=_gbf .CharCode (_eceea );};return _daae ,true ;};

// ToPdfObject converts the font to a PDF representation.
func (_bbegb *pdfFontType3 )ToPdfObject ()_eag .PdfObject {if _bbegb ._fbcgf ==nil {_bbegb ._fbcgf =&_eag .PdfIndirectObject {};};_dddec :=_bbegb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bbegb ._fbcgf .PdfObject =_dddec ;if _bbegb .FirstChar !=nil {_dddec .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bbegb .FirstChar );
};if _bbegb .LastChar !=nil {_dddec .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bbegb .LastChar );};if _bbegb .Widths !=nil {_dddec .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bbegb .Widths );};if _bbegb .Encoding !=nil {_dddec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbegb .Encoding );
}else if _bbegb ._abccd !=nil {_fgfff :=_bbegb ._abccd .ToPdfObject ();if _fgfff !=nil {_dddec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgfff );};};if _bbegb .FontBBox !=nil {_dddec .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bbegb .FontBBox );
};if _bbegb .FontMatrix !=nil {_dddec .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bbegb .FontMatrix );};if _bbegb .CharProcs !=nil {_dddec .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bbegb .CharProcs );};if _bbegb .Resources !=nil {_dddec .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbegb .Resources );
};return _bbegb ._fbcgf ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_adacf *Outline )ToPdfObject ()_eag .PdfObject {return _adacf .ToPdfOutline ().ToPdfObject ()};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fe :=NewPdfAction ();_bde :=&PdfActionLaunch {};_bde .PdfAction =_fe ;_fe .SetContext (_bde );return _bde ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_efbgc :=&PdfFilespec {};_efbgc ._afdac =_eag .MakeIndirectObject (_eag .MakeDict ());return _efbgc ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_aee :=NewPdfAnnotation ();_fcbb :=&PdfAnnotationCircle {};_fcbb .PdfAnnotation =_aee ;_fcbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aee .SetContext (_fcbb );return _fcbb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fedd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fedd .Alternate ==nil {if _fedd .N ==1{_bbgb :=NewPdfColorspaceDeviceGray ();return _bbgb .ColorFromFloats (vals );}else if _fedd .N ==3{_agd :=NewPdfColorspaceDeviceRGB ();
return _agd .ColorFromFloats (vals );}else if _fedd .N ==4{_cfga :=NewPdfColorspaceDeviceCMYK ();return _cfga .ColorFromFloats (vals );}else {return nil ,_bag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fedd .Alternate .ColorFromFloats (vals );};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_aagc *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aagc .AlternateSpace ==nil {return nil ,_bag .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _aagc .AlternateSpace .ColorToRGB (color );};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bbcaa *PdfReader )GetNamedDestinations ()(_eag .PdfObject ,error ){_eedcf :=_eag .ResolveReference (_bbcaa ._adbgg .Get ("\u0044\u0065\u0073t\u0073"));if _eedcf ==nil {return nil ,nil ;};if !_bbcaa ._dgabg {_aadeg :=_bbcaa .traverseObjectData (_eedcf );
if _aadeg !=nil {return nil ,_aadeg ;};};return _eedcf ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_daede :=&PdfAppender {_efgc :reader ._cfacd ,Reader :reader ,_dgde :reader ._afegd ,_aaed :reader ._dbcaa };_cfbg ,_ecd :=_daede ._efgc .Seek (0,_ba .SeekEnd );if _ecd !=nil {return nil ,_ecd ;
};_daede ._cgbe =_cfbg ;if _ ,_ecd =_daede ._efgc .Seek (0,_ba .SeekStart );_ecd !=nil {return nil ,_ecd ;};_daede ._egeg ,_ecd =NewPdfReader (_daede ._efgc );if _ecd !=nil {return nil ,_ecd ;};for _ ,_eccb :=range _daede .Reader .GetObjectNums (){if _daede ._ffce < _eccb {_daede ._ffce =_eccb ;
};};_daede ._gcgb =_daede ._dgde .GetXrefTable ();_daede ._gbcg =_daede ._dgde .GetXrefOffset ();_daede ._abag =append (_daede ._abag ,_daede ._egeg .PageList ...);_daede ._dbaf =make (map[_eag .PdfObject ]struct{});_daede ._ddde =make (map[_eag .PdfObject ]int64 );
_daede ._bafb =make (map[_eag .PdfObject ]struct{});_daede ._gaba =_daede ._egeg .AcroForm ;_daede ._bea =_daede ._egeg .DSS ;return _daede ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_egefb *PdfPageResources )HasPatternByName (keyName _eag .PdfObjectName )bool {_ ,_gegfe :=_egefb .GetPatternByName (keyName );return _gegfe ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gedde *PdfPageResources )GetXObjectByName (keyName _eag .PdfObjectName )(*_eag .PdfObjectStream ,XObjectType ){if _gedde .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bbgffa ,_fbdc :=_eag .TraceToDirectObject (_gedde .XObject ).(*_eag .PdfObjectDictionary );
if !_fbdc {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eag .TraceToDirectObject (_gedde .XObject ));
return nil ,XObjectTypeUndefined ;};if _ggaae :=_bbgffa .Get (keyName );_ggaae !=nil {_ggdgb ,_dfbcb :=_eag .GetStream (_ggaae );if !_dfbcb {_ebdd .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_ggaae );
return nil ,XObjectTypeUndefined ;};_ddcf :=_ggdgb .PdfObjectDictionary ;_ecggfc ,_dfbcb :=_eag .TraceToDirectObject (_ddcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_eag .PdfObjectName );if !_dfbcb {_ebdd .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ddcf .String ());
return nil ,XObjectTypeUndefined ;};if *_ecggfc =="\u0049\u006d\u0061g\u0065"{return _ggdgb ,XObjectTypeImage ;}else if *_ecggfc =="\u0046\u006f\u0072\u006d"{return _ggdgb ,XObjectTypeForm ;}else if *_ecggfc =="\u0050\u0053"{return _ggdgb ,XObjectTypePS ;
}else {_ebdd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ecggfc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};var _ pdfFont =(*pdfFontType0 )(nil );func _afcb (_gdde _eag .PdfObject )(*fontFile ,error ){_ebdd .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gdde );
_ffccd :=&fontFile {};_gdde =_eag .TraceToDirectObject (_gdde );_ceddf ,_cbdeef :=_gdde .(*_eag .PdfObjectStream );if !_cbdeef {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gdde );
return nil ,_eag .ErrTypeError ;};_dbce :=_ceddf .PdfObjectDictionary ;_edge ,_ebafg :=_eag .DecodeStream (_ceddf );if _ebafg !=nil {return nil ,_ebafg ;};_adeea ,_cbdeef :=_eag .GetNameVal (_dbce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cbdeef {_ffccd ._ecabd =_adeea ;
if _adeea =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ebdd .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_adca ,_ :=_eag .GetIntVal (_dbce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fcafb ,_ :=_eag .GetIntVal (_dbce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _adca > len (_edge ){_adca =len (_edge );
};if _adca +_fcafb > len (_edge ){_fcafb =len (_edge )-_adca ;};_afba :=_edge [:_adca ];var _gegb []byte ;if _fcafb > 0{_gegb =_edge [_adca :_adca +_fcafb ];};if _adca > 0&&_fcafb > 0{_aefaa :=_ffccd .loadFromSegments (_afba ,_gegb );if _aefaa !=nil {return nil ,_aefaa ;
};};return _ffccd ,nil ;};

// ParserMetadata gets the parser  metadata.
func (_ddgcb *CompliancePdfReader )ParserMetadata ()_eag .ParserMetadata {if _ddgcb ._cccd ==(_eag .ParserMetadata {}){_ddgcb ._cccd ,_ =_ddgcb ._afegd .ParserMetadata ();};return _ddgcb ._cccd ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gggbc :=&PdfShadingType3 {};_gggbc .PdfShading =&PdfShading {};_gggbc .PdfShading ._aadgg =_eag .MakeIndirectObject (_eag .MakeDict ());_gggbc .PdfShading ._dcgab =_gggbc ;return _gggbc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cdbda *PdfFilespec )GetContainingPdfObject ()_eag .PdfObject {return _cdbda ._afdac };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bcfa :=PdfColorCalGray (grayVal );return &_bcfa ;};func (_dfbf *PdfAppender )updateObjectsDeep (_fbfb _eag .PdfObject ,_ecad map[_eag .PdfObject ]struct{}){if _ecad ==nil {_ecad =map[_eag .PdfObject ]struct{}{};
};if _ ,_cdb :=_ecad [_fbfb ];_cdb ||_fbfb ==nil {return ;};_ecad [_fbfb ]=struct{}{};_cbd :=_eag .ResolveReferencesDeep (_fbfb ,_dfbf ._aaed );if _cbd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbd );};switch _bage :=_fbfb .(type ){case *_eag .PdfIndirectObject :switch {case _bage .GetParser ()==_dfbf ._egeg ._afegd :return ;
case _bage .GetParser ()==_dfbf .Reader ._afegd :_efff ,_ :=_dfbf ._egeg .GetIndirectObjectByNumber (int (_bage .ObjectNumber ));_gbgg ,_ccfda :=_efff .(*_eag .PdfIndirectObject );if _ccfda &&_gbgg !=nil {if _gbgg .PdfObject !=_bage .PdfObject &&_gbgg .PdfObject .WriteString ()!=_bage .PdfObject .WriteString (){if _cb .Contains (_bage .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_cb .Contains (_bage .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_dfbf .addNewObject (_fbfb );_dfbf ._ddde [_fbfb ]=_bage .ObjectNumber ;};};default:_dfbf .addNewObject (_fbfb );};_dfbf .updateObjectsDeep (_bage .PdfObject ,_ecad );case *_eag .PdfObjectArray :for _ ,_bgcc :=range _bage .Elements (){_dfbf .updateObjectsDeep (_bgcc ,_ecad );
};case *_eag .PdfObjectDictionary :for _ ,_bdca :=range _bage .Keys (){_dfbf .updateObjectsDeep (_bage .Get (_bdca ),_ecad );};case *_eag .PdfObjectStreams :if _bage .GetParser ()!=_dfbf ._egeg ._afegd {for _ ,_fceg :=range _bage .Elements (){_dfbf .updateObjectsDeep (_fceg ,_ecad );
};};case *_eag .PdfObjectStream :switch {case _bage .GetParser ()==_dfbf ._egeg ._afegd :return ;case _bage .GetParser ()==_dfbf .Reader ._afegd :if _gdga ,_gfcf :=_dfbf ._egeg ._afegd .LookupByReference (_bage .PdfObjectReference );_gfcf ==nil {var _caccg bool ;
if _fafd ,_decb :=_eag .GetStream (_gdga );_decb &&_cf .Equal (_fafd .Stream ,_bage .Stream ){_caccg =true ;};if _fbfbb ,_fdd :=_eag .GetDict (_gdga );_caccg &&_fdd {_caccg =_fbfbb .WriteString ()==_bage .PdfObjectDictionary .WriteString ();};if _caccg {return ;
};};if _bage .ObjectNumber !=0{_dfbf ._ddde [_fbfb ]=_bage .ObjectNumber ;};default:if _ ,_ggcc :=_dfbf ._dbaf [_fbfb ];!_ggcc {_dfbf .addNewObject (_fbfb );};};_dfbf .updateObjectsDeep (_bage .PdfObjectDictionary ,_ecad );};};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_cdaad *PdfPageResources )HasShadingByName (keyName _eag .PdfObjectName )bool {_ ,_cbcg :=_cdaad .GetShadingByName (keyName );return _cbcg ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _eag .PdfObject ;FS _eag .PdfObject ;F _eag .PdfObject ;UF _eag .PdfObject ;DOS _eag .PdfObject ;Mac _eag .PdfObject ;Unix _eag .PdfObject ;ID _eag .PdfObject ;V _eag .PdfObject ;EF _eag .PdfObject ;RF _eag .PdfObject ;Desc _eag .PdfObject ;
CI _eag .PdfObject ;AFRelationship _eag .PdfObject ;_afdac _eag .PdfObject ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// GetNumPages returns the number of pages in the document.
func (_cbfdc *PdfReader )GetNumPages ()(int ,error ){if _cbfdc ._afegd .GetCrypter ()!=nil &&!_cbfdc ._afegd .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_cbfdc ._cfffe ),nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bdfa :=NewPdfAnnotation ();_aeg :=&PdfAnnotationFreeText {};_aeg .PdfAnnotation =_bdfa ;_aeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdfa .SetContext (_aeg );return _aeg ;};func _gcagd (_dfdgf _eag .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gfcd :=&PdfColorspaceDeviceNAttributes {};
var _fdaa *_eag .PdfObjectDictionary ;switch _fag :=_dfdgf .(type ){case *_eag .PdfIndirectObject :_gfcd ._afcf =_fag ;var _bdag bool ;_fdaa ,_bdag =_fag .PdfObject .(*_eag .PdfObjectDictionary );if !_bdag {_ebdd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_eag .PdfObjectDictionary :_fdaa =_fag ;case *_eag .PdfObjectReference :_cfdbg :=_fag .Resolve ();return _gcagd (_cfdbg );default:_ebdd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ceg :=_fdaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ceg !=nil {_fcbd ,_gcgba :=_eag .TraceToDirectObject (_ceg ).(*_eag .PdfObjectName );if !_gcgba {_ebdd .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gfcd .Subtype =_fcbd ;};if _fgbf :=_fdaa .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fgbf !=nil {_gfcd .Colorants =_fgbf ;};if _fgde :=_fdaa .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fgde !=nil {_gfcd .Process =_fgde ;};if _gdfdg :=_fdaa .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gdfdg !=nil {_gfcd .MixingHints =_gdfdg ;};return _gfcd ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_fc .File ,error ){const _bbdec ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fedfe ,_ffede :=_fc .Open (pdfFile );if _ffede !=nil {return nil ,nil ,_ffede ;};_efgbf ,_ffede :=_dgbcf (_fedfe ,opts ,true ,_bbdec );if _ffede !=nil {_fedfe .Close ();return nil ,nil ,_ffede ;};return _efgbf ,_fedfe ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gfef *PdfFunctionType2 )ToPdfObject ()_eag .PdfObject {_daeaf :=_eag .MakeDict ();_daeaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eag .MakeInteger (2));_ffdcf :=&_eag .PdfObjectArray {};for _ ,_addg :=range _gfef .Domain {_ffdcf .Append (_eag .MakeFloat (_addg ));
};_daeaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffdcf );if _gfef .Range !=nil {_dadge :=&_eag .PdfObjectArray {};for _ ,_ceeee :=range _gfef .Range {_dadge .Append (_eag .MakeFloat (_ceeee ));};_daeaf .Set ("\u0052\u0061\u006eg\u0065",_dadge );};
if _gfef .C0 !=nil {_fgdfb :=&_eag .PdfObjectArray {};for _ ,_afcd :=range _gfef .C0 {_fgdfb .Append (_eag .MakeFloat (_afcd ));};_daeaf .Set ("\u0043\u0030",_fgdfb );};if _gfef .C1 !=nil {_ffdea :=&_eag .PdfObjectArray {};for _ ,_afff :=range _gfef .C1 {_ffdea .Append (_eag .MakeFloat (_afff ));
};_daeaf .Set ("\u0043\u0031",_ffdea );};_daeaf .Set ("\u004e",_eag .MakeFloat (_gfef .N ));if _gfef ._bggae !=nil {_gfef ._bggae .PdfObject =_daeaf ;return _gfef ._bggae ;};return _daeaf ;};

// ToPdfObject implements interface PdfModel.
func (_dgb *PdfActionTrans )ToPdfObject ()_eag .PdfObject {_dgb .PdfAction .ToPdfObject ();_dec :=_dgb ._ggd ;_eaff :=_dec .PdfObject .(*_eag .PdfObjectDictionary );_eaff .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeTrans )));_eaff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dgb .Trans );
return _dec ;};

// AddOutlineTree adds outlines to a PDF file.
func (_bagba *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bagba ._aafaa =outlineTree };

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_aaaca PdfModel ;_bcdbe _eag .PdfObject ;};func (_acdcb *PdfFilespec )getDict ()*_eag .PdfObjectDictionary {if _dcca ,_fcda :=_acdcb ._afdac .(*_eag .PdfIndirectObject );_fcda {_abbc ,_bgfe :=_dcca .PdfObject .(*_eag .PdfObjectDictionary );
if !_bgfe {return nil ;};return _abbc ;}else if _cgce ,_gcfad :=_acdcb ._afdac .(*_eag .PdfObjectDictionary );_gcfad {return _cgce ;}else {_ebdd .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_acdcb ._afdac );
return nil ;};};func _afccbb (_eefaa *_eag .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cadda :=&PdfTilingPattern {};_cegec :=_eefaa .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _cegec ==nil {_ebdd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_adbba ,_afeeb :=_cegec .(*_eag .PdfObjectInteger );if !_afeeb {_ebdd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cegec );
return nil ,_eag .ErrTypeError ;};_cadda .PaintType =_adbba ;_cegec =_eefaa .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cegec ==nil {_ebdd .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cggbf ,_afeeb :=_cegec .(*_eag .PdfObjectInteger );if !_afeeb {_ebdd .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cegec );
return nil ,_eag .ErrTypeError ;};_cadda .TilingType =_cggbf ;_cegec =_eefaa .Get ("\u0042\u0042\u006f\u0078");if _cegec ==nil {_ebdd .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cegec =_eag .TraceToDirectObject (_cegec );_gfee ,_afeeb :=_cegec .(*_eag .PdfObjectArray );if !_afeeb {_ebdd .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cegec );
return nil ,_eag .ErrTypeError ;};_abec ,_gcfee :=NewPdfRectangle (*_gfee );if _gcfee !=nil {_ebdd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gcfee );return nil ,_gcfee ;};_cadda .BBox =_abec ;_cegec =_eefaa .Get ("\u0058\u0053\u0074e\u0070");
if _cegec ==nil {_ebdd .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_feaeg ,_gcfee :=_eag .GetNumberAsFloat (_cegec );if _gcfee !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_feaeg );
return nil ,_gcfee ;};_cadda .XStep =_eag .MakeFloat (_feaeg );_cegec =_eefaa .Get ("\u0059\u0053\u0074e\u0070");if _cegec ==nil {_ebdd .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_caece ,_gcfee :=_eag .GetNumberAsFloat (_cegec );if _gcfee !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_caece );
return nil ,_gcfee ;};_cadda .YStep =_eag .MakeFloat (_caece );_cegec =_eefaa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cegec ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eefaa ,_afeeb =_eag .TraceToDirectObject (_cegec ).(*_eag .PdfObjectDictionary );if !_afeeb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cegec );
};_ggaaa ,_gcfee :=NewPdfPageResourcesFromDict (_eefaa );if _gcfee !=nil {return nil ,_gcfee ;};_cadda .Resources =_ggaaa ;if _dggde :=_eefaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dggde !=nil {_fccdb ,_fagaf :=_dggde .(*_eag .PdfObjectArray );
if !_fagaf {_ebdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dggde );return nil ,_eag .ErrTypeError ;};_cadda .Matrix =_fccdb ;};return _cadda ,nil ;
};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _fcg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_eag .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_eag .MakeInteger (int64 (permission )),V :_eag .MakeName ("\u0031\u002e\u0032")};
};func _bdbg (_ead _eag .PdfObject )(*PdfBorderStyle ,error ){_bfde :=&PdfBorderStyle {};_bfde ._dfce =_ead ;var _aegc *_eag .PdfObjectDictionary ;_ead =_eag .TraceToDirectObject (_ead );_aegc ,_ggfd :=_ead .(*_eag .PdfObjectDictionary );if !_ggfd {return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};if _bggb :=_aegc .Get ("\u0054\u0079\u0070\u0065");_bggb !=nil {_ebef ,_fabg :=_bggb .(*_eag .PdfObjectName );if !_fabg {_ebdd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bggb );
}else {if *_ebef !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ebdd .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ebef );};};};if _bacd :=_aegc .Get ("\u0057");
_bacd !=nil {_caf ,_caca :=_eag .GetNumberAsFloat (_bacd );if _caca !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_caca );return nil ,_caca ;};_bfde .W =&_caf ;
};if _eega :=_aegc .Get ("\u0053");_eega !=nil {_ffebd ,_caaff :=_eega .(*_eag .PdfObjectName );if !_caaff {return nil ,_bag .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dbfc BorderStyle ;switch *_ffebd {case "\u0053":_dbfc =BorderStyleSolid ;case "\u0044":_dbfc =BorderStyleDashed ;case "\u0042":_dbfc =BorderStyleBeveled ;case "\u0049":_dbfc =BorderStyleInset ;case "\u0055":_dbfc =BorderStyleUnderline ;default:_ebdd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ffebd );
return nil ,_bag .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bfde .S =&_dbfc ;};if _cgad :=_aegc .Get ("\u0044");_cgad !=nil {_deae ,_dddg :=_cgad .(*_eag .PdfObjectArray );
if !_dddg {_ebdd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cgad );return nil ,_bag .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bcdc ,_gcfg :=_deae .ToIntegerArray ();if _gcfg !=nil {_ebdd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_gcfg );
return nil ,_gcfg ;};_bfde .D =&_bcdc ;};return _bfde ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_decd *PdfAnnotationLink )SetAction (action *PdfAction ){_decd ._deg =action ;if action ==nil {_decd .A =nil ;};};

// IsSimple returns true if `font` is a simple font.
func (_fcgfa *PdfFont )IsSimple ()bool {_ ,_ceafa :=_fcgfa ._dagg .(*pdfFontSimple );return _ceafa };func (_ecggfb *PdfAcroForm )filteredFields (_dabdg FieldFilterFunc ,_ddcde bool )[]*PdfField {if _ecggfb ==nil {return nil ;};return _ebcfb (_ecggfb .Fields ,_dabdg ,_ddcde );
};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dcda *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgfe ,_agfa :=color .(*PdfColorCalRGB );if !_agfa {_ebdd .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebaf :=_dgfe .A ();_dgbd :=_dgfe .B ();_gabac :=_dgfe .C ();X :=_dcda .Matrix [0]*_gcg .Pow (_ebaf ,_dcda .Gamma [0])+_dcda .Matrix [3]*_gcg .Pow (_dgbd ,_dcda .Gamma [1])+_dcda .Matrix [6]*_gcg .Pow (_gabac ,_dcda .Gamma [2]);
Y :=_dcda .Matrix [1]*_gcg .Pow (_ebaf ,_dcda .Gamma [0])+_dcda .Matrix [4]*_gcg .Pow (_dgbd ,_dcda .Gamma [1])+_dcda .Matrix [7]*_gcg .Pow (_gabac ,_dcda .Gamma [2]);Z :=_dcda .Matrix [2]*_gcg .Pow (_ebaf ,_dcda .Gamma [0])+_dcda .Matrix [5]*_gcg .Pow (_dgbd ,_dcda .Gamma [1])+_dcda .Matrix [8]*_gcg .Pow (_gabac ,_dcda .Gamma [2]);
_egcb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_agbe :=-0.969256*X +1.875992*Y +0.041556*Z ;_ddgf :=0.055648*X +-0.204043*Y +1.057311*Z ;_egcb =_gcg .Min (_gcg .Max (_egcb ,0),1.0);_agbe =_gcg .Min (_gcg .Max (_agbe ,0),1.0);_ddgf =_gcg .Min (_gcg .Max (_ddgf ,0),1.0);
return NewPdfColorDeviceRGB (_egcb ,_agbe ,_ddgf ),nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ecdb :=&PdfColorspaceCalRGB {};_ecdb .BlackPoint =[]float64 {0.0,0.0,0.0};_ecdb .Gamma =[]float64 {1.0,1.0,1.0};_ecdb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ecdb ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_aeedb *PdfReader )GetRevisionNumber ()int {return _aeedb ._afegd .GetRevisionNumber ()};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_eccg *PdfField )GetContainingPdfObject ()_eag .PdfObject {return _eccg ._eebf };

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _eag .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _dade *_eag .PdfIndirectObject ;var _abea *_eag .PdfObjectName ;var _efef *_eag .PdfObjectArray ;if _bfba ,_edad :=obj .(*_eag .PdfIndirectObject );
_edad {_dade =_bfba ;};obj =_eag .TraceToDirectObject (obj );switch _eegc :=obj .(type ){case *_eag .PdfObjectArray :_efef =_eegc ;case *_eag .PdfObjectName :_abea =_eegc ;};if _abea !=nil {switch *_abea {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_abea );return nil ,_adda ;};};if _efef !=nil &&_efef .Len ()> 0{var _dbed _eag .PdfObject =_dade ;
if _dade ==nil {_dbed =_efef ;};if _fbgfa ,_fbde :=_eag .GetName (_efef .Get (0));_fbde {switch _fbgfa .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _efef .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _efef .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _efef .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ccdb (_dbed );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cafd (_dbed );
case "\u004c\u0061\u0062":return _cfaad (_dbed );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _ebdgc (_dbed );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _dbdab (_dbed );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _afb (_dbed );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ccefg (_dbed );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cbec (_dbed );default:_ebdd .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_fbgfa );
};};};_ebdd .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_feagb pdfCIDFontType0 )GetCharMetrics (code _gbf .CharCode )(_eeb .CharMetrics ,bool ){_gfeb :=_feagb ._cfcae ;if _gbca ,_cfff :=_feagb ._ffbce [code ];_cfff {_gfeb =_gbca ;};return _eeb .CharMetrics {Wx :_gfeb },true ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_ddfdf *PdfReader )GetCatalogMarkInfo ()(_eag .PdfObject ,bool ){if _ddfdf ._adbgg ==nil {return nil ,false ;};_dffee :=_ddfdf ._adbgg .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _dffee ,_dffee !=nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gdfcb *PdfPage )ToPdfObject ()_eag .PdfObject {_acacb :=_gdfcb ._beadd ;_gdfcb .GetPageDict ();return _acacb ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};var _bfaf =_gc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gcgff :=PdfColorCalRGB {a ,b ,c };return &_gcgff ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_dbbbd *PdfPage )GetRotate ()(int64 ,error ){if _dbbbd .Rotate !=nil {return *_dbbbd .Rotate ,nil ;};_bfge :=_dbbbd .Parent ;for _bfge !=nil {_eefa ,_cgagg :=_eag .GetDict (_bfge );if !_cgagg {return 0,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cgbc :=_eefa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cgbc !=nil {_egag ,_cdffd :=_eag .GetInt (_cgbc );if !_cdffd {return 0,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _egag !=nil {return int64 (*_egag ),nil ;
};return 0,_bag .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bfge =_eefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_bag .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_efcb pdfFontSimple )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){if _efcb ._gbdg !=nil {_fecg ,_gbccf :=_efcb ._gbdg .Read (r );if _gbccf {return _fecg ,true ;};};_agce :=_efcb .Encoder ();if _agce ==nil {_ebdd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_efcb );
return _eeb .CharMetrics {},false ;};_ceb ,_dcage :=_agce .RuneToCharcode (r );if !_dcage {if r !=' '{_ebdd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_efcb );
};return _eeb .CharMetrics {},false ;};_fddc ,_geac :=_efcb .GetCharMetrics (_ceb );return _fddc ,_geac ;};var _bcbe =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// String returns a string representation of what flags are set.
func (_bfdef FieldFlag )String ()string {_gedba :="";if _bfdef ==FieldFlagClear {_gedba ="\u0043\u006c\u0065a\u0072";return _gedba ;};if _bfdef &FieldFlagReadOnly > 0{_gedba +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bfdef &FieldFlagRequired > 0{_gedba +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _bfdef &FieldFlagNoExport > 0{_gedba +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bfdef &FieldFlagNoToggleToOff > 0{_gedba +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bfdef &FieldFlagRadio > 0{_gedba +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bfdef &FieldFlagPushbutton > 0{_gedba +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bfdef &FieldFlagRadiosInUnision > 0{_gedba +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};
if _bfdef &FieldFlagMultiline > 0{_gedba +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _bfdef &FieldFlagPassword > 0{_gedba +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bfdef &FieldFlagFileSelect > 0{_gedba +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bfdef &FieldFlagDoNotScroll > 0{_gedba +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _bfdef &FieldFlagComb > 0{_gedba +="\u007c\u0043\u006fm\u0062";};if _bfdef &FieldFlagRichText > 0{_gedba +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _bfdef &FieldFlagDoNotSpellCheck > 0{_gedba +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _bfdef &FieldFlagCombo > 0{_gedba +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bfdef &FieldFlagEdit > 0{_gedba +="\u007c\u0045\u0064i\u0074";
};if _bfdef &FieldFlagSort > 0{_gedba +="\u007c\u0053\u006fr\u0074";};if _bfdef &FieldFlagMultiSelect > 0{_gedba +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _bfdef &FieldFlagCommitOnSelChange > 0{_gedba +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _cb .Trim (_gedba ,"\u007c");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fccf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gade :=vals [0];if _gade < 0.0||_gade > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gade );
return nil ,ErrColorOutOfRange ;};_eagf :=NewPdfColorCalGray (_gade );return _eagf ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gac :=NewPdfAction ();_gbd :=&PdfActionGoToE {};_gbd .PdfAction =_gac ;_gac .SetContext (_gbd );return _gbd ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cee :=NewPdfAnnotation ();_feg :=&PdfAnnotationInk {};_feg .PdfAnnotation =_cee ;_feg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cee .SetContext (_feg );return _feg ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_eag .PdfObjectInteger ;BitsPerComponent *_eag .PdfObjectInteger ;BitsPerFlag *_eag .PdfObjectInteger ;Decode *_eag .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbee :=&PdfColorspaceLab {};_gbee .BlackPoint =[]float64 {0.0,0.0,0.0};_gbee .Range =[]float64 {-100,100,-100,100};return _gbee ;};

// String returns a string describing the font descriptor.
func (_gegf *PdfFontDescriptor )String ()string {var _eeef []string ;if _gegf .FontName !=nil {_eeef =append (_eeef ,_gegf .FontName .String ());};if _gegf .FontFamily !=nil {_eeef =append (_eeef ,_gegf .FontFamily .String ());};if _gegf .fontFile !=nil {_eeef =append (_eeef ,_gegf .fontFile .String ());
};if _gegf ._aaac !=nil {_eeef =append (_eeef ,_gegf ._aaac .String ());};_eeef =append (_eeef ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gegf .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_cb .Join (_eeef ,"\u002c\u0020"));
};var _gcfcg =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ColorFromFloats returns a new PdfColor based on input color components.
func (_ddge *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_ddge .GetNumComponents (){return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fade ,_gfede :=_ddge .TintTransform .Evaluate (vals );
if _gfede !=nil {return nil ,_gfede ;};_gba ,_gfede :=_ddge .AlternateSpace .ColorFromFloats (_fade );if _gfede !=nil {return nil ,_gfede ;};return _gba ,nil ;};func (_aecf *PdfReader )newPdfAnnotationStrikeOut (_ccge *_eag .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fea :=PdfAnnotationStrikeOut {};
_dege ,_aacb :=_aecf .newPdfAnnotationMarkupFromDict (_ccge );if _aacb !=nil {return nil ,_aacb ;};_fea .PdfAnnotationMarkup =_dege ;_fea .QuadPoints =_ccge .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fea ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_afgb :=NewPdfAnnotation ();_deb :=&PdfAnnotationSquare {};_deb .PdfAnnotation =_afgb ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afgb .SetContext (_deb );return _deb ;};var (CourierName =_eeb .CourierName ;
CourierBoldName =_eeb .CourierBoldName ;CourierObliqueName =_eeb .CourierObliqueName ;CourierBoldObliqueName =_eeb .CourierBoldObliqueName ;HelveticaName =_eeb .HelveticaName ;HelveticaBoldName =_eeb .HelveticaBoldName ;HelveticaObliqueName =_eeb .HelveticaObliqueName ;
HelveticaBoldObliqueName =_eeb .HelveticaBoldObliqueName ;SymbolName =_eeb .SymbolName ;ZapfDingbatsName =_eeb .ZapfDingbatsName ;TimesRomanName =_eeb .TimesRomanName ;TimesBoldName =_eeb .TimesBoldName ;TimesItalicName =_eeb .TimesItalicName ;TimesBoldItalicName =_eeb .TimesBoldItalicName ;
);

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_eeb .CharMetrics ;func (_bbe *PdfReader )newPdfActionTransFromDict (_gaf *_eag .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gaf .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cabff .Lock ();defer _cabff .Unlock ();_ecfc =keywords };

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cdcad *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_eag .StreamEncoder ,error ){_aace ,_ccbba :=_cdcad ._bcdbe .(*_eag .PdfObjectStream );if !_ccbba {_ebdd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdcad ._bcdbe );
return nil ,nil ,_eag .ErrTypeError ;};_dccg ,_bgdeb :=_eag .DecodeStream (_aace );if _bgdeb !=nil {_ebdd .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bgdeb );
return nil ,nil ,_bgdeb ;};_ecfdga ,_bgdeb :=_eag .NewEncoderFromStream (_aace );if _bgdeb !=nil {_ebdd .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bgdeb );
return nil ,nil ,_bgdeb ;};return _dccg ,_ecfdga ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aadfc :=map[rune ]int {};for _ ,_ceeg :=range text {_aadfc [_ceeg ]++;};return _aadfc ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dfaa *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToInteger convert to an integer format.
func (_efaga *PdfColorLab )ToInteger (bits int )[3]uint32 {_gffeg :=_gcg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gffeg *_efaga .L ()),uint32 (_gffeg *_efaga .A ()),uint32 (_gffeg *_efaga .B ())};};func (_deed *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cecea *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bgabf :=_cecea .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bgabf )> 0;_dfdegb :=_eag .NewFlateEncoder ();_fbbbd :=_eag .MakeArray ();if wrapContents {_agagf ,_gdbbf :=_eag .MakeStream ([]byte ("\u0071\u000a"),_dfdegb );
if _gdbbf !=nil {return _gdbbf ;};_fbbbd .Append (_agagf );};_fbbbd .Append (_bgabf ...);if wrapContents {_adadd ,_adaf :=_eag .MakeStream ([]byte ("\u000a\u0051\u000a"),_dfdegb );if _adaf !=nil {return _adaf ;};_fbbbd .Append (_adadd );};_bacga ,_dbgc :=_eag .MakeStream (cs ,_dfdegb );
if _dbgc !=nil {return _dbgc ;};_fbbbd .Append (_bacga );_cecea .Contents =_fbbbd ;return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _eag .PdfObject ;Movie _eag .PdfObject ;A _eag .PdfObject ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_gecae :=&PdfPageResources {};_gecae ._aafeb =_eag .MakeDict ();return _gecae ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_eag .PdfObjectInteger ;BitsPerComponent *_eag .PdfObjectInteger ;BitsPerFlag *_eag .PdfObjectInteger ;Decode *_eag .PdfObjectArray ;Function []PdfFunction ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dad *PdfAction )GetContainingPdfObject ()_eag .PdfObject {return _dad ._ggd };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_bfdfb *PdfPageResources )SetXObjectImageByName (keyName _eag .PdfObjectName ,ximg *XObjectImage )error {_cfadc :=ximg .ToPdfObject ().(*_eag .PdfObjectStream );_ccbaa :=_bfdfb .SetXObjectByName (keyName ,_cfadc );return _ccbaa ;};func _cdcbd (_adfd _eag .PdfObject )(*_eag .PdfObjectDictionary ,*fontCommon ,error ){_gfffg :=&fontCommon {};
if _cabcf ,_cabd :=_adfd .(*_eag .PdfIndirectObject );_cabd {_gfffg ._bbbff =_cabcf .ObjectNumber ;};_degag ,_cfaaa :=_eag .GetDict (_adfd );if !_cfaaa {_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_adfd );
return nil ,nil ,ErrFontNotSupported ;};_becc ,_cfaaa :=_eag .GetNameVal (_degag .Get ("\u0054\u0079\u0070\u0065"));if !_cfaaa {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _becc !="\u0046\u006f\u006e\u0074"{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_becc ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_eag .ErrTypeError ;};_ecef ,_cfaaa :=_eag .GetNameVal (_degag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cfaaa {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gfffg ._cdabe =_ecef ;_aafc ,_cfaaa :=_eag .GetNameVal (_degag .Get ("\u004e\u0061\u006d\u0065"));if _cfaaa {_gfffg ._afbf =_aafc ;};_defea :=_degag .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _defea !=nil {_gfffg ._afga =_eag .TraceToDirectObject (_defea );_bdec ,_abfa :=_bdgc (_gfffg ._afga ,_gfffg );if _abfa !=nil {return _degag ,_gfffg ,_abfa ;};_gfffg ._dccf =_bdec ;}else if _ecef =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ecef =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gccd ,_ggce :=_cd .NewCIDSystemInfo (_degag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ggce !=nil {return _degag ,_gfffg ,_ggce ;};_agbebd :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gccd .Registry ,_gccd .Ordering );if _cd .IsPredefinedCMap (_agbebd ){_gfffg ._dccf ,_ggce =_cd .LoadPredefinedCMap (_agbebd );
if _ggce !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_agbebd ,_ggce );
};};};_eccdd :=_degag .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _eccdd !=nil {_dggg ,_gagac :=_abdfa (_eccdd );if _gagac !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gagac );
return _degag ,_gfffg ,_gagac ;};_gfffg ._ecdgfc =_dggg ;};if _ecef !="\u0054\u0079\u0070e\u0033"{_caee ,_dgeg :=_eag .GetNameVal (_degag .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgeg {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _degag ,_gfffg ,ErrRequiredAttributeMissing ;};_gfffg ._fgcc =_caee ;};return _degag ,_gfffg ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _eag .PdfObject )(*PdfFont ,error ){return _dbea (fontObj ,true )};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fca :=NewPdfAction ();_fdf :=&PdfActionSetOCGState {};_fdf .PdfAction =_fca ;_fca .SetContext (_fdf );return _fdf ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gaegc []byte )(_cfagb int ,_bdgacb error );};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cccd _eag .ParserMetadata ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_dbeee *PdfColorspaceICCBased )GetContainingPdfObject ()_eag .PdfObject {return _dbeee ._dcbe };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eag .PdfObject ;};func (_efbc *PdfAcroForm )fill (_gdfeg FieldValueProvider ,_bbccc FieldAppearanceGenerator )error {if _efbc ==nil {return nil ;};_adbd ,_bbgf :=_gdfeg .FieldValues ();
if _bbgf !=nil {return _bbgf ;};for _ ,_aeaag :=range _efbc .AllFields (){_bgaa :=_aeaag .PartialName ();_gagdf ,_gbfcf :=_adbd [_bgaa ];if !_gbfcf {if _ceea ,_fcbbe :=_aeaag .FullName ();_fcbbe ==nil {_gagdf ,_gbfcf =_adbd [_ceea ];};};if !_gbfcf {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bgaa );
continue ;};if _ecaa :=_babga (_aeaag ,_gagdf );_ecaa !=nil {return _ecaa ;};if _bbccc ==nil {continue ;};for _ ,_gafb :=range _aeaag .Annotations {_dbec ,_gbcb :=_bbccc .GenerateAppearanceDict (_efbc ,_aeaag ,_gafb );if _gbcb !=nil {return _gbcb ;};_gafb .AP =_dbec ;
_gafb .ToPdfObject ();};};return nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _eag .PdfObject ;Flags _eag .PdfObject ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gafg :=PdfWriter {};_gafg ._fcced =map[_eag .PdfObject ]struct{}{};_gafg ._eggea =[]_eag .PdfObject {};_gafg ._abbad =map[_eag .PdfObject ][]*_eag .PdfObjectDictionary {};_gafg ._edecd =map[_eag .PdfObject ]struct{}{};_gafg ._ddcce .Major =1;
_gafg ._ddcce .Minor =3;_dgccb :=_eag .MakeDict ();_cecbg :=[]struct{_ffaeg _eag .PdfObjectName ;_dfabe string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cggee ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_fagad ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_adbdf ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_cfbgb ()},{"\u0054\u0069\u0074l\u0065",_eebfe ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fbfed ()}};
for _ ,_egafb :=range _cecbg {if _egafb ._dfabe !=""{_dgccb .Set (_egafb ._ffaeg ,_eag .MakeString (_egafb ._dfabe ));};};if _ecdffb :=_fbaff ();!_ecdffb .IsZero (){if _cafcd ,_edcg :=NewPdfDateFromTime (_ecdffb );_edcg ==nil {_dgccb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cafcd .ToPdfObject ());
};};if _dbdfa :=_dfcdg ();!_dbdfa .IsZero (){if _dccdc ,_cbefgc :=NewPdfDateFromTime (_dbdfa );_cbefgc ==nil {_dgccb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_dccdc .ToPdfObject ());};};_fdeef :=_eag .PdfIndirectObject {};_fdeef .PdfObject =_dgccb ;
_gafg ._eagcbd =&_fdeef ;_gafg .addObject (&_fdeef );_efdcg :=_eag .PdfIndirectObject {};_dacfdf :=_eag .MakeDict ();_dacfdf .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_efdcg .PdfObject =_dacfdf ;_gafg ._gebfg =&_efdcg ;
_gafg .addObject (_gafg ._gebfg );_eecff ,_dcgbc :=_efbac ("\u0077");if _dcgbc !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcgbc );};_gafg ._aadea =_eecff ;_ebbge :=_eag .PdfIndirectObject {};_ecbfa :=_eag .MakeDict ();_ecbfa .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0050\u0061\u0067e\u0073"));
_ggdd :=_eag .PdfObjectArray {};_ecbfa .Set ("\u004b\u0069\u0064\u0073",&_ggdd );_ecbfa .Set ("\u0043\u006f\u0075n\u0074",_eag .MakeInteger (0));_ebbge .PdfObject =_ecbfa ;_gafg ._gcedb =&_ebbge ;_gafg ._gcbbbd =map[_eag .PdfObject ]struct{}{};_gafg .addObject (_gafg ._gcedb );
_dacfdf .Set ("\u0050\u0061\u0067e\u0073",&_ebbge );_gafg ._daegb =_dacfdf ;_ebdd .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_efdcg );return _gafg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_daeb *PdfShadingType6 )ToPdfObject ()_eag .PdfObject {_daeb .PdfShading .ToPdfObject ();_eaaf ,_edeag :=_daeb .getShadingDict ();if _edeag !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _daeb .BitsPerCoordinate !=nil {_eaaf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_daeb .BitsPerCoordinate );};if _daeb .BitsPerComponent !=nil {_eaaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daeb .BitsPerComponent );
};if _daeb .BitsPerFlag !=nil {_eaaf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_daeb .BitsPerFlag );};if _daeb .Decode !=nil {_eaaf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_daeb .Decode );};if _daeb .Function !=nil {if len (_daeb .Function )==1{_eaaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daeb .Function [0].ToPdfObject ());
}else {_dgag :=_eag .MakeArray ();for _ ,_fcaag :=range _daeb .Function {_dgag .Append (_fcaag .ToPdfObject ());};_eaaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgag );};};return _daeb ._aadgg ;};func (_eeab *LTV )getCRLs (_ecbda []*_ed .Certificate )([][]byte ,error ){_dgcec :=make ([][]byte ,0,len (_ecbda ));
for _ ,_becfg :=range _ecbda {for _ ,_fgbe :=range _becfg .CRLDistributionPoints {if _eeab .CertClient .IsCA (_becfg ){continue ;};_fdbcd ,_eebfbg :=_eeab .CRLClient .MakeRequest (_fgbe ,_becfg );if _eebfbg !=nil {_ebdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_eebfbg );
continue ;};_dgcec =append (_dgcec ,_fdbcd );};};return _dgcec ,nil ;};

// PdfVersion returns version of the PDF file.
func (_ddebf *PdfReader )PdfVersion ()_eag .Version {return _ddebf ._afegd .PdfVersion ()};func (_gbdaf *Image )samplesTrimPadding (_gdcec []uint32 )[]uint32 {_efbbg :=_gbdaf .ColorComponents *int (_gbdaf .Width )*int (_gbdaf .Height );if len (_gdcec )==_efbbg {return _gdcec ;
};_fabac :=make ([]uint32 ,_efbbg );_dcge :=int (_gbdaf .Width )*_gbdaf .ColorComponents ;var _acfa ,_eegea ,_fdbbf ,_fffdb int ;_afca :=_fde .BytesPerLine (int (_gbdaf .Width ),int (_gbdaf .BitsPerComponent ),_gbdaf .ColorComponents );for _acfa =0;_acfa < int (_gbdaf .Height );
_acfa ++{_eegea =_acfa *int (_gbdaf .Width );_fdbbf =_acfa *_afca ;for _fffdb =0;_fffdb < _dcge ;_fffdb ++{_fabac [_eegea +_fffdb ]=_gdcec [_fdbbf +_fffdb ];};};return _fabac ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_egede *pdfFontSimple )ToPdfObject ()_eag .PdfObject {if _egede ._ebfgf ==nil {_egede ._ebfgf =&_eag .PdfIndirectObject {};};_cdcdec :=_egede .baseFields ().asPdfObjectDictionary ("");_egede ._ebfgf .PdfObject =_cdcdec ;if _egede .FirstChar !=nil {_cdcdec .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_egede .FirstChar );
};if _egede .LastChar !=nil {_cdcdec .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_egede .LastChar );};if _egede .Widths !=nil {_cdcdec .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_egede .Widths );};if _egede .Encoding !=nil {_cdcdec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egede .Encoding );
}else if _egede ._defdg !=nil {_cddcf :=_egede ._defdg .ToPdfObject ();if _cddcf !=nil {_cdcdec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cddcf );};};return _egede ._ebfgf ;};func _geaf (_deaab _eeb .StdFont )pdfFontSimple {_cefaef :=_deaab .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_cdabe :"\u0054\u0079\u0070e\u0031",_fgcc :_deaab .Name ()},_gbdg :_deaab .GetMetricsTable (),_cfbf :&PdfFontDescriptor {FontName :_eag .MakeName (string (_cefaef .Name )),FontFamily :_eag .MakeName (_cefaef .Family ),FontWeight :_eag .MakeFloat (float64 (_cefaef .Weight )),Flags :_eag .MakeInteger (int64 (_cefaef .Flags )),FontBBox :_eag .MakeArrayFromFloats (_cefaef .BBox [:]),ItalicAngle :_eag .MakeFloat (_cefaef .ItalicAngle ),Ascent :_eag .MakeFloat (_cefaef .Ascent ),Descent :_eag .MakeFloat (_cefaef .Descent ),CapHeight :_eag .MakeFloat (_cefaef .CapHeight ),XHeight :_eag .MakeFloat (_cefaef .XHeight ),StemV :_eag .MakeFloat (_cefaef .StemV ),StemH :_eag .MakeFloat (_cefaef .StemH )},_ddggb :_deaab .Encoder ()};
};func (_gdbde *PdfWriter )optimizeDocument ()error {if _gdbde ._ccffb ==nil {return nil ;};_faacca ,_egbbf :=_eag .GetDict (_gdbde ._eagcbd );if !_egbbf {return _bag .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fefec :=_ce .Document {ID :[2]string {_gdbde ._aecb ,_gdbde ._bcfgc },Version :_gdbde ._ddcce ,Objects :_gdbde ._eggea ,Info :_faacca ,Crypt :_gdbde ._ffbfg ,UseHashBasedID :_gdbde ._afbe };if _ebdff :=_gdbde ._ccffb .ApplyStandard (&_fefec );_ebdff !=nil {return _ebdff ;
};_gdbde ._aecb ,_gdbde ._bcfgc =_fefec .ID [0],_fefec .ID [1];_gdbde ._ddcce =_fefec .Version ;_gdbde ._eggea =_fefec .Objects ;_gdbde ._eagcbd .PdfObject =_fefec .Info ;_gdbde ._afbe =_fefec .UseHashBasedID ;_gdbde ._ffbfg =_fefec .Crypt ;_gfeba :=make (map[_eag .PdfObject ]struct{},len (_gdbde ._eggea ));
for _ ,_bfagc :=range _gdbde ._eggea {_gfeba [_bfagc ]=struct{}{};};_gdbde ._fcced =_gfeba ;return nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_eag .PdfObjectArray ;_ggge *Image ;};

// SetCatalogLanguage sets the catalog language.
func (_gfbcc *PdfWriter )SetCatalogLanguage (lang _eag .PdfObject )error {if lang ==nil {_gfbcc ._daegb .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_gfbcc .addObject (lang );_gfbcc ._daegb .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_deegg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _deegg ._dagg .getFontDescriptor (),nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_addda *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_efgca ,_ ,_cbdad :=_addda .CharcodesToUnicodeWithStats (_addda .BytesToCharcodes (data ));_gefe :=_gbf .ExpandLigatures (_efgca );return _gefe ,_gg .RuneCountInString (_gefe ),_cbdad ;
};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_ccff *PdfAnnotationWatermark )ToPdfObject ()_eag .PdfObject {_ccff .PdfAnnotation .ToPdfObject ();_cca :=_ccff ._gfa ;_geda :=_cca .PdfObject .(*_eag .PdfObjectDictionary );_geda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_geda .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ccff .FixedPrint );return _cca ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_eag .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_eag .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bad :=NewPdfAction ();_baf :=&PdfActionMovie {};_baf .PdfAction =_bad ;_bad .SetContext (_baf );return _baf ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_acaaf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_agccg :=func (_aedae float64 )float64 {if _aedae >=6.0/29{return _aedae *_aedae *_aedae ;};return 108.0/841*(_aedae -4.0/29.0);};_cbba ,_bbba :=color .(*PdfColorLab );if !_bbba {_ebdd .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cbba .L ();AStar :=_cbba .A ();BStar :=_cbba .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_acaaf .WhitePoint [0]*_agccg (L );Y :=_acaaf .WhitePoint [1]*_agccg (M );Z :=_acaaf .WhitePoint [2]*_agccg (N );_gddc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gefca :=-0.969256*X +1.875992*Y +0.041556*Z ;_aeca :=0.055648*X +-0.204043*Y +1.057311*Z ;
_gddc =_gcg .Min (_gcg .Max (_gddc ,0),1.0);_gefca =_gcg .Min (_gcg .Max (_gefca ,0),1.0);_aeca =_gcg .Min (_gcg .Max (_aeca ,0),1.0);return NewPdfColorDeviceRGB (_gddc ,_gefca ,_aeca ),nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efbed *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ebdd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_bag .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ImageToRGB convert an indexed image to RGB.
func (_fegfc *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fegfc .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ebgf :=_fde .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cbefd ,img ._dadbe );_ffdca :=_dba .NewReader (img .getBase ());_gbce :=_dba .NewWriter (_ebgf );var (_afdff uint32 ;_ffed int ;_dffe error ;);for {_afdff ,_dffe =_ffdca .ReadSample ();
if _dffe ==_ba .EOF {break ;}else if _dffe !=nil {return img ,_dffe ;};_ffed =int (_afdff );_ebdd .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ffed ,N ,len (_fegfc ._adeb ));
if (_ffed +1)*N > len (_fegfc ._adeb ){_ffed =len (_fegfc ._adeb )/N -1;_ebdd .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ffed );if _ffed < 0{_ebdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _eebc :=_ffed *N ;_eebc < (_ffed +1)*N ;_eebc ++{if _dffe =_gbce .WriteSample (uint32 (_fegfc ._adeb [_eebc ]));_dffe !=nil {return img ,_dffe ;};};};return _fegfc .Base .ImageToRGB (_ecfe (&_ebgf ));};func (_bded *PdfReader )newPdfActionSubmitFormFromDict (_gddf *_eag .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_aac ,_bdac :=_bae (_gddf .Get ("\u0046"));
if _bdac !=nil {return nil ,_bdac ;};return &PdfActionSubmitForm {F :_aac ,Fields :_gddf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gddf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cbaee *PdfShadingPatternType2 )ToPdfObject ()_eag .PdfObject {_cbaee .PdfPattern .ToPdfObject ();_edbed :=_cbaee .getDict ();if _cbaee .Shading !=nil {_edbed .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cbaee .Shading .ToPdfObject ());};if _cbaee .Matrix !=nil {_edbed .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cbaee .Matrix );
};if _cbaee .ExtGState !=nil {_edbed .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cbaee .ExtGState );};return _cbaee ._bcdbe ;};

// A returns the value of the A component of the color.
func (_gfgfa *PdfColorLab )A ()float64 {return _gfgfa [1]};func (_daegd *PdfReader )newPdfSignatureFromIndirect (_cdefbf *_eag .PdfIndirectObject )(*PdfSignature ,error ){_gabcb ,_cedbf :=_cdefbf .PdfObject .(*_eag .PdfObjectDictionary );if !_cedbf {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fbcc ,_adcgb :=_daegd ._gbada .GetModelFromPrimitive (_cdefbf ).(*PdfSignature );_adcgb {return _fbcc ,nil ;};_bgbcd :=&PdfSignature {};_bgbcd ._bdda =_cdefbf ;_bgbcd .Type ,_ =_eag .GetName (_gabcb .Get ("\u0054\u0079\u0070\u0065"));
_bgbcd .Filter ,_cedbf =_eag .GetName (_gabcb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cedbf {_ebdd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bgbcd .SubFilter ,_ =_eag .GetName (_gabcb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bgbcd .Contents ,_cedbf =_eag .GetString (_gabcb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cedbf {_ebdd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _fbacc ,_abaae :=_eag .GetArray (_gabcb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_abaae {_bgbcd .Reference =_eag .MakeArray ();for _ ,_fdbae :=range _fbacc .Elements (){_bgaea ,_bfddb :=_eag .GetDict (_fdbae );
if !_bfddb {_ebdd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_adcad ,_egccd :=_daegd .newPdfSignatureReferenceFromDict (_bgaea );if _egccd !=nil {return nil ,_egccd ;};_bgbcd .Reference .Append (_adcad .ToPdfObject ());};};_bgbcd .Cert =_gabcb .Get ("\u0043\u0065\u0072\u0074");_bgbcd .ByteRange ,_ =_eag .GetArray (_gabcb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_bgbcd .Changes ,_ =_eag .GetArray (_gabcb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bgbcd .Name ,_ =_eag .GetString (_gabcb .Get ("\u004e\u0061\u006d\u0065"));_bgbcd .M ,_ =_eag .GetString (_gabcb .Get ("\u004d"));_bgbcd .Location ,_ =_eag .GetString (_gabcb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_bgbcd .Reason ,_ =_eag .GetString (_gabcb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bgbcd .ContactInfo ,_ =_eag .GetString (_gabcb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bgbcd .R ,_ =_eag .GetInt (_gabcb .Get ("\u0052"));
_bgbcd .V ,_ =_eag .GetInt (_gabcb .Get ("\u0056"));_bgbcd .PropBuild ,_ =_eag .GetDict (_gabcb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bgbcd .PropAuthTime ,_ =_eag .GetInt (_gabcb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_bgbcd .PropAuthType ,_ =_eag .GetName (_gabcb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_daegd ._gbada .Register (_cdefbf ,_bgbcd );return _bgbcd ,nil ;};func _dgecg (_gcfcb []byte )(_ceafd ,_effbc string ,_ffebb error ){_ebdd .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gcfcb ));
_bebeg :=_ecfa .FindIndex (_gcfcb );if _bebeg ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_eag .ErrTypeError ;};_dcbbe :=_bebeg [1];_fcgagf :=_cb .Index (string (_gcfcb [_dcbbe :]),_bgbf );if _fcgagf < 0{_ceafd =string (_gcfcb [_dcbbe :]);return _ceafd ,"",nil ;};_bbbfd :=_dcbbe +_fcgagf ;_ceafd =string (_gcfcb [_dcbbe :_bbbfd ]);
_gabfc :=_bbbfd ;_fcgagf =_cb .Index (string (_gcfcb [_gabfc :]),_ceeca );if _fcgagf < 0{_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffebb );
return "","",_eag .ErrTypeError ;};_dadf :=_gabfc +_fcgagf ;_effbc =string (_gcfcb [_gabfc :_dadf ]);return _ceafd ,_effbc ,nil ;};func (_fdc *PdfReader )newPdfAnnotationFromIndirectObject (_cgg *_eag .PdfIndirectObject )(*PdfAnnotation ,error ){_bcgc ,_fcgd :=_cgg .PdfObject .(*_eag .PdfObjectDictionary );
if !_fcgd {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fdc ._gbada .GetModelFromPrimitive (_bcgc );model !=nil {_fcc ,_ggfe :=model .(*PdfAnnotation );if !_ggfe {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fcc ,nil ;};_gag :=&PdfAnnotation {};_gag ._gfa =_cgg ;_fdc ._gbada .Register (_bcgc ,_gag );if _aacf :=_bcgc .Get ("\u0054\u0079\u0070\u0065");_aacf !=nil {_eaab ,_aefa :=_aacf .(*_eag .PdfObjectName );if !_aefa {_ebdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aacf );
}else {if *_eaab !="\u0041\u006e\u006eo\u0074"{_ebdd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_eaab );};};
};if _efa :=_bcgc .Get ("\u0052\u0065\u0063\u0074");_efa !=nil {_gag .Rect =_efa ;};if _gab :=_bcgc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gab !=nil {_gag .Contents =_gab ;};if _agcc :=_bcgc .Get ("\u0050");_agcc !=nil {_gag .P =_agcc ;
};if _bcc :=_bcgc .Get ("\u004e\u004d");_bcc !=nil {_gag .NM =_bcc ;};if _ddd :=_bcgc .Get ("\u004d");_ddd !=nil {_gag .M =_ddd ;};if _gcc :=_bcgc .Get ("\u0046");_gcc !=nil {_gag .F =_gcc ;};if _dacb :=_bcgc .Get ("\u0041\u0050");_dacb !=nil {_gag .AP =_dacb ;
};if _gdce :=_bcgc .Get ("\u0041\u0053");_gdce !=nil {_gag .AS =_gdce ;};if _bfa :=_bcgc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bfa !=nil {_gag .Border =_bfa ;};if _edf :=_bcgc .Get ("\u0043");_edf !=nil {_gag .C =_edf ;};if _bcab :=_bcgc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bcab !=nil {_gag .StructParent =_bcab ;};if _daed :=_bcgc .Get ("\u004f\u0043");_daed !=nil {_gag .OC =_daed ;};_fcd :=_bcgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fcd ==nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_gag ._bga =nil ;return _gag ,nil ;};_cdce ,_cefa :=_fcd .(*_eag .PdfObjectName );if !_cefa {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fcd );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fcd );};switch *_cdce {case "\u0054\u0065\u0078\u0074":_ccf ,_fdfg :=_fdc .newPdfAnnotationTextFromDict (_bcgc );
if _fdfg !=nil {return nil ,_fdfg ;};_ccf .PdfAnnotation =_gag ;_gag ._bga =_ccf ;return _gag ,nil ;case "\u004c\u0069\u006e\u006b":_fdeg ,_cdg :=_fdc .newPdfAnnotationLinkFromDict (_bcgc );if _cdg !=nil {return nil ,_cdg ;};_fdeg .PdfAnnotation =_gag ;
_gag ._bga =_fdeg ;return _gag ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_facf ,_bfab :=_fdc .newPdfAnnotationFreeTextFromDict (_bcgc );if _bfab !=nil {return nil ,_bfab ;};_facf .PdfAnnotation =_gag ;_gag ._bga =_facf ;return _gag ,nil ;
case "\u004c\u0069\u006e\u0065":_dadg ,_bef :=_fdc .newPdfAnnotationLineFromDict (_bcgc );if _bef !=nil {return nil ,_bef ;};_dadg .PdfAnnotation =_gag ;_gag ._bga =_dadg ;_ebdd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gag ,_gag );
_ebdd .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dadg ,_dadg );_ebdd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dadg .PdfAnnotationMarkup ,_dadg .PdfAnnotationMarkup );
return _gag ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cde ,_ccde :=_fdc .newPdfAnnotationSquareFromDict (_bcgc );if _ccde !=nil {return nil ,_ccde ;};_cde .PdfAnnotation =_gag ;_gag ._bga =_cde ;return _gag ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_deeg ,_dff :=_fdc .newPdfAnnotationCircleFromDict (_bcgc );
if _dff !=nil {return nil ,_dff ;};_deeg .PdfAnnotation =_gag ;_gag ._bga =_deeg ;return _gag ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dcgb ,_cfg :=_fdc .newPdfAnnotationPolygonFromDict (_bcgc );if _cfg !=nil {return nil ,_cfg ;};_dcgb .PdfAnnotation =_gag ;
_gag ._bga =_dcgb ;return _gag ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgb ,_bdgf :=_fdc .newPdfAnnotationPolyLineFromDict (_bcgc );if _bdgf !=nil {return nil ,_bdgf ;};_fgb .PdfAnnotation =_gag ;_gag ._bga =_fgb ;return _gag ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fgbd ,_edac :=_fdc .newPdfAnnotationHighlightFromDict (_bcgc );if _edac !=nil {return nil ,_edac ;};_fgbd .PdfAnnotation =_gag ;_gag ._bga =_fgbd ;return _gag ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bfff ,_gde :=_fdc .newPdfAnnotationUnderlineFromDict (_bcgc );
if _gde !=nil {return nil ,_gde ;};_bfff .PdfAnnotation =_gag ;_gag ._bga =_bfff ;return _gag ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gcgf ,_aegb :=_fdc .newPdfAnnotationSquigglyFromDict (_bcgc );if _aegb !=nil {return nil ,_aegb ;
};_gcgf .PdfAnnotation =_gag ;_gag ._bga =_gcgf ;return _gag ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gcbg ,_edab :=_fdc .newPdfAnnotationStrikeOut (_bcgc );if _edab !=nil {return nil ,_edab ;};_gcbg .PdfAnnotation =_gag ;_gag ._bga =_gcbg ;
return _gag ,nil ;case "\u0043\u0061\u0072e\u0074":_afcg ,_afce :=_fdc .newPdfAnnotationCaretFromDict (_bcgc );if _afce !=nil {return nil ,_afce ;};_afcg .PdfAnnotation =_gag ;_gag ._bga =_afcg ;return _gag ,nil ;case "\u0053\u0074\u0061m\u0070":_dged ,_ggg :=_fdc .newPdfAnnotationStampFromDict (_bcgc );
if _ggg !=nil {return nil ,_ggg ;};_dged .PdfAnnotation =_gag ;_gag ._bga =_dged ;return _gag ,nil ;case "\u0049\u006e\u006b":_ccc ,_ddfg :=_fdc .newPdfAnnotationInkFromDict (_bcgc );if _ddfg !=nil {return nil ,_ddfg ;};_ccc .PdfAnnotation =_gag ;_gag ._bga =_ccc ;
return _gag ,nil ;case "\u0050\u006f\u0070u\u0070":_acaa ,_dace :=_fdc .newPdfAnnotationPopupFromDict (_bcgc );if _dace !=nil {return nil ,_dace ;};_acaa .PdfAnnotation =_gag ;_gag ._bga =_acaa ;return _gag ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_egg ,_ccce :=_fdc .newPdfAnnotationFileAttachmentFromDict (_bcgc );
if _ccce !=nil {return nil ,_ccce ;};_egg .PdfAnnotation =_gag ;_gag ._bga =_egg ;return _gag ,nil ;case "\u0053\u006f\u0075n\u0064":_baff ,_ceef :=_fdc .newPdfAnnotationSoundFromDict (_bcgc );if _ceef !=nil {return nil ,_ceef ;};_baff .PdfAnnotation =_gag ;
_gag ._bga =_baff ;return _gag ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_afd ,_acce :=_fdc .newPdfAnnotationRichMediaFromDict (_bcgc );if _acce !=nil {return nil ,_acce ;};_afd .PdfAnnotation =_gag ;_gag ._bga =_afd ;return _gag ,nil ;
case "\u004d\u006f\u0076i\u0065":_eac ,_dda :=_fdc .newPdfAnnotationMovieFromDict (_bcgc );if _dda !=nil {return nil ,_dda ;};_eac .PdfAnnotation =_gag ;_gag ._bga =_eac ;return _gag ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ffc ,_ecac :=_fdc .newPdfAnnotationScreenFromDict (_bcgc );
if _ecac !=nil {return nil ,_ecac ;};_ffc .PdfAnnotation =_gag ;_gag ._bga =_ffc ;return _gag ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gdfc ,_dfe :=_fdc .newPdfAnnotationWidgetFromDict (_bcgc );if _dfe !=nil {return nil ,_dfe ;};_gdfc .PdfAnnotation =_gag ;
_gag ._bga =_gdfc ;return _gag ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_ggbb ,_bbdf :=_fdc .newPdfAnnotationPrinterMarkFromDict (_bcgc );if _bbdf !=nil {return nil ,_bbdf ;};_ggbb .PdfAnnotation =_gag ;_gag ._bga =_ggbb ;
return _gag ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_ebda ,_bbgg :=_fdc .newPdfAnnotationTrapNetFromDict (_bcgc );if _bbgg !=nil {return nil ,_bbgg ;};_ebda .PdfAnnotation =_gag ;_gag ._bga =_ebda ;return _gag ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_efb ,_defd :=_fdc .newPdfAnnotationWatermarkFromDict (_bcgc );
if _defd !=nil {return nil ,_defd ;};_efb .PdfAnnotation =_gag ;_gag ._bga =_efb ;return _gag ,nil ;case "\u0033\u0044":_dgea ,_cgc :=_fdc .newPdfAnnotation3DFromDict (_bcgc );if _cgc !=nil {return nil ,_cgc ;};_dgea .PdfAnnotation =_gag ;_gag ._bga =_dgea ;
return _gag ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dcf ,_abe :=_fdc .newPdfAnnotationProjectionFromDict (_bcgc );if _abe !=nil {return nil ,_abe ;};_dcf .PdfAnnotation =_gag ;_gag ._bga =_dcf ;return _gag ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_dcba ,_cfgc :=_fdc .newPdfAnnotationRedactFromDict (_bcgc );
if _cfgc !=nil {return nil ,_cfgc ;};_dcba .PdfAnnotation =_gag ;_gag ._bga =_dcba ;return _gag ,nil ;};_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cdce );
return nil ,nil ;};func _cdca (_accg *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_befe ,_efegg :=_eag .GetDict (_accg .AP );if !_efegg {return nil ,nil ,_bag .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _befe ==nil {return nil ,nil ,nil ;};_agbcb ,_efegg :=_eag .GetArray (_accg .Rect );if !_efegg ||_agbcb .Len ()!=4{return nil ,nil ,_bag .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bbfd ,_bfce :=NewPdfRectangle (*_agbcb );
if _bfce !=nil {return nil ,nil ,_bfce ;};_fddb :=_eag .TraceToDirectObject (_befe .Get ("\u004e"));switch _gggd :=_fddb .(type ){case *_eag .PdfObjectStream :_gecb :=_gggd ;_aabgb ,_defg :=NewXObjectFormFromStream (_gecb );return _aabgb ,_bbfd ,_defg ;
case *_eag .PdfObjectDictionary :_ebcbe :=_gggd ;var _aabd _eag .PdfObject ;_ffcaf ,_ecdgd :=_eag .GetName (_accg .AS );if _ecdgd {_aabd =_ebcbe .Get (*_ffcaf );}else {_ebdgb :=_accg ._gfa .PdfObject .(*_eag .PdfObjectDictionary );if _ccedd :=_ebdgb .Get ("\u0056");
_ccedd !=nil {_aabd =_ebcbe .Get (_eag .PdfObjectName (_ccedd .String ()));};};if _aabd ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_daaf ,_ecdgd :=_eag .GetStream (_aabd );if !_ecdgd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ffcaf );
return nil ,nil ,_bag .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bdae ,_bbaa :=NewXObjectFormFromStream (_daaf );return _bdae ,_bbfd ,_bbaa ;};_ebdd .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fddb );
return nil ,nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_cbbc *PdfActionSetOCGState )ToPdfObject ()_eag .PdfObject {_cbbc .PdfAction .ToPdfObject ();_fac :=_cbbc ._ggd ;_aaf :=_fac .PdfObject .(*_eag .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeSetOCGState )));_aaf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cbbc .State );
_aaf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cbbc .PreserveRB );return _fac ;};func (_bggf *PdfReader )newPdfActionMovieFromDict (_aag *_eag .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aag .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aag .Get ("\u0054"),Operation :_aag .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dcea :=NewPdfAnnotation ();_ggc :=&PdfAnnotationMovie {};_ggc .PdfAnnotation =_dcea ;_dcea .SetContext (_ggc );return _ggc ;};

// ToPdfObject implements interface PdfModel.
func (_egfd *PdfAnnotationPolyLine )ToPdfObject ()_eag .PdfObject {_egfd .PdfAnnotation .ToPdfObject ();_dfb :=_egfd ._gfa ;_febc :=_dfb .PdfObject .(*_eag .PdfObjectDictionary );_egfd .PdfAnnotationMarkup .appendToPdfDictionary (_febc );_febc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_febc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_egfd .Vertices );_febc .SetIfNotNil ("\u004c\u0045",_egfd .LE );_febc .SetIfNotNil ("\u0042\u0053",_egfd .BS );_febc .SetIfNotNil ("\u0049\u0043",_egfd .IC );_febc .SetIfNotNil ("\u0042\u0045",_egfd .BE );
_febc .SetIfNotNil ("\u0049\u0054",_egfd .IT );_febc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_egfd .Measure );return _dfb ;};func (_gabab *PdfReader )resolveReference (_eagece *_eag .PdfObjectReference )(_eag .PdfObject ,bool ,error ){_dbdcb ,_aefda :=_gabab ._afegd .ObjCache [int (_eagece .ObjectNumber )];
if !_aefda {_ebdd .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_eagece );_dcgdg ,_ccdbe :=_gabab ._afegd .LookupByReference (*_eagece );if _ccdbe !=nil {return nil ,false ,_ccdbe ;
};_gabab ._afegd .ObjCache [int (_eagece .ObjectNumber )]=_dcgdg ;return _dcgdg ,false ,nil ;};return _dbdcb ,true ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_bcce ,_acddc :=_fc .ReadFile (path );if _acddc !=nil {return nil ,_acddc ;};_ccba :=_db .Detect (_bcce );_badg :=_fb .Sum (_bcce );_cafac :=&EmbeddedFile {Name :_ebd .Base (path ),Content :_bcce ,FileType :_ccba .String (),Hash :_df .EncodeToString (_badg [:])};
return _cafac ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_adgaea *pdfCIDFontType0 )ToPdfObject ()_eag .PdfObject {return _eag .MakeNull ()};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ggdbgf *PdfOutlineTreeNode )GetContext ()PdfModel {if _fbefg ,_gggf :=_ggdbgf ._addfb .(*PdfOutline );_gggf {return _fbefg ;};if _gggfc ,_ggded :=_ggdbgf ._addfb .(*PdfOutlineItem );_ggded {return _gggfc ;};_ebdd .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func _ffcef (_efcg *_eag .PdfObjectDictionary )bool {for _ ,_cbfd :=range _efcg .Keys (){if _ ,_cfec :=_bbbb [_cbfd .String ()];_cfec {return true ;};};return false ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gfaca *PdfReader )Decrypt (password []byte )(bool ,error ){_gdfcd ,_bggeg :=_gfaca ._afegd .Decrypt (password );if _bggeg !=nil {return false ,_bggeg ;};if !_gdfcd {return false ,nil ;};_bggeg =_gfaca .loadStructure ();if _bggeg !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bggeg );
return false ,_bggeg ;};return true ,nil ;};func (_fbdd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dfbaa *PdfFieldButton )IsCheckbox ()bool {return _dfbaa .GetType ()==ButtonTypeCheckbox };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cgaag *Outline )Insert (index uint ,item *OutlineItem ){_gbbfc :=uint (len (_cgaag .Entries ));if index > _gbbfc {index =_gbbfc ;};_cgaag .Entries =append (_cgaag .Entries [:index ],append ([]*OutlineItem {item },_cgaag .Entries [index :]...)...);
};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ccg :=NewPdfAction ();_cga :=&PdfActionSubmitForm {};_cga .PdfAction =_ccg ;_ccg .SetContext (_cga );return _cga ;};func (_bgfc *PdfReader )newPdfAnnotationRichMediaFromDict (_dbde *_eag .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_fdgg :=&PdfAnnotationRichMedia {};
_fdgg .RichMediaSettings =_dbde .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_fdgg .RichMediaContent =_dbde .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _fdgg ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_cfgfe *PdfFont )ToUnicode ()string {if _cfgfe .baseFields ()._dccf ==nil {return "";};return _cfgfe .baseFields ()._dccf .Name ();};const (_bcbg =0x00001;_ffbee =0x00002;_aeffc =0x00004;_gdgg =0x00008;_aced =0x00020;_gagc =0x00040;_fcbec =0x10000;
_eabe =0x20000;_afab =0x40000;);func _ebac (_dcebd _eag .PdfObject )(map[_gbf .CharCode ]float64 ,error ){if _dcebd ==nil {return nil ,nil ;};_edgd ,_decf :=_eag .GetArray (_dcebd );if !_decf {return nil ,nil ;};_fccc :=map[_gbf .CharCode ]float64 {};_gbab :=_edgd .Len ();
for _agcg :=0;_agcg < _gbab -1;_agcg ++{_gaebe :=_eag .TraceToDirectObject (_edgd .Get (_agcg ));_ggbae ,_fcfb :=_eag .GetIntVal (_gaebe );if !_fcfb {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_agcg ,_gaebe );
};_agcg ++;if _agcg > _gbab -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_edgd );};_adbb :=_eag .TraceToDirectObject (_edgd .Get (_agcg ));
switch _adbb .(type ){case *_eag .PdfObjectArray :_afee ,_ :=_eag .GetArray (_adbb );if _gaedg ,_bcgbc :=_afee .ToFloat64Array ();_bcgbc ==nil {for _eegaf :=0;_eegaf < len (_gaedg );_eegaf ++{_fccc [_gbf .CharCode (_ggbae +_eegaf )]=_gaedg [_eegaf ];};
}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_agcg ,_adbb );};case *_eag .PdfObjectInteger :_egfea ,_befdg :=_eag .GetIntVal (_adbb );
if !_befdg {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_agcg ,_adbb );};_agcg ++;if _agcg > _gbab -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_edgd );
};_bcef :=_edgd .Get (_agcg );_gagd ,_ecdgcf :=_eag .GetNumberAsFloat (_bcef );if _ecdgcf !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_agcg ,_bcef );
};for _aadef :=_ggbae ;_aadef <=_egfea ;_aadef ++{_fccc [_gbf .CharCode (_aadef )]=_gagd ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_agcg ,_adbb );
};};return _fccc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cdbab *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbb :=vals [0];_cbff :=[]float64 {_cfbb };_ebeb ,_defcc :=_cdbab .TintTransform .Evaluate (_cbff );
if _defcc !=nil {_ebdd .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_defcc );_ebdd .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cdbab .TintTransform );
return nil ,_defcc ;};_ebdd .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ebeb ,_cdbab .AlternateSpace );
_eccae ,_defcc :=_cdbab .AlternateSpace .ColorFromFloats (_ebeb );if _defcc !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_defcc );
return nil ,_defcc ;};return _eccae ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fgca _ba .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cadab _d .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ceac _d .Image )(*Image ,error );

// Compress an image.
Compress (_gbgeg *Image ,_bgded int64 )(*Image ,error );};

// AddExtGState adds a graphics state to the XObject resources.
func (_addfa *PdfPage )AddExtGState (name _eag .PdfObjectName ,egs *_eag .PdfObjectDictionary )error {if _addfa .Resources ==nil {_addfa .Resources =NewPdfPageResources ();};if _addfa .Resources .ExtGState ==nil {_addfa .Resources .ExtGState =_eag .MakeDict ();
};_bcbc ,_egge :=_eag .TraceToDirectObject (_addfa .Resources .ExtGState ).(*_eag .PdfObjectDictionary );if !_egge {_ebdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_eag .TraceToDirectObject (_addfa .Resources .ExtGState ));
return _bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcbc .Set (name ,egs );return nil ;};func _fada ()string {_ageb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _caaea _cf .Buffer ;for _aabbd :=0;_aabbd < 6;_aabbd ++{_caaea .WriteRune (rune (_ageb [_fd .Intn (len (_ageb ))]));};return _caaea .String ();};

// GetContentStream returns the XObject Form's content stream.
func (_acgad *XObjectForm )GetContentStream ()([]byte ,error ){_gdccf ,_eegec :=_eag .DecodeStream (_acgad ._beaeg );if _eegec !=nil {return nil ,_eegec ;};return _gdccf ,nil ;};func _fgfc (_gdea string )(map[_gbf .CharCode ]_gbf .GlyphName ,error ){_gdgb :=_cb .Split (_gdea ,"\u000a");
_gbeg :=make (map[_gbf .CharCode ]_gbf .GlyphName );for _ ,_becca :=range _gdgb {_cbcd :=_aeaa .FindStringSubmatch (_becca );if _cbcd ==nil {continue ;};_febaf ,_dgef :=_cbcd [1],_cbcd [2];_addf ,_fbbaa :=_da .Atoi (_febaf );if _fbbaa !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_becca );
return nil ,_eag .ErrTypeError ;};_gbeg [_gbf .CharCode (_addf )]=_gbf .GlyphName (_dgef );};_ebdd .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gbeg );
return _gbeg ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _eag .PdfObject ;PreserveRB _eag .PdfObject ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cfcgf *PdfFieldText )ToPdfObject ()_eag .PdfObject {_cfcgf .PdfField .ToPdfObject ();_afdffa :=_cfcgf ._eebf ;_bfca :=_afdffa .PdfObject .(*_eag .PdfObjectDictionary );_bfca .Set ("\u0046\u0054",_eag .MakeName ("\u0054\u0078"));if _cfcgf .DA !=nil {_bfca .Set ("\u0044\u0041",_cfcgf .DA );
};if _cfcgf .Q !=nil {_bfca .Set ("\u0051",_cfcgf .Q );};if _cfcgf .DS !=nil {_bfca .Set ("\u0044\u0053",_cfcgf .DS );};if _cfcgf .RV !=nil {_bfca .Set ("\u0052\u0056",_cfcgf .RV );};if _cfcgf .MaxLen !=nil {_bfca .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cfcgf .MaxLen );
};return _afdffa ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_aadge *PdfPageResources )GetShadingByName (keyName _eag .PdfObjectName )(*PdfShading ,bool ){if _aadge .Shading ==nil {return nil ,false ;};_ecaf ,_cdcdg :=_eag .TraceToDirectObject (_aadge .Shading ).(*_eag .PdfObjectDictionary );if !_cdcdg {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aadge .Shading );
return nil ,false ;};if _fabc :=_ecaf .Get (keyName );_fabc !=nil {_egfcd ,_fecgd :=_cbea (_fabc );if _fecgd !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fecgd );
return nil ,false ;};return _egfcd ,true ;};return nil ,false ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ef :=NewPdfAnnotation ();_eed :=&PdfAnnotationWidget {};_eed .PdfAnnotation =_ef ;_ef .SetContext (_eed );return _eed ;};func (_eadaa *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_eadaa ._ddcce .Major ,_eadaa ._ddcce .Minor );
};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _eag .PdfObject ;IC _eag .PdfObject ;BE _eag .PdfObject ;RD _eag .PdfObject ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_dafa :_eag .MakeDict ()};
};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bgeee DefaultImageHandler )Read (reader _ba .Reader )(*Image ,error ){_edfa ,_ ,_cceef :=_d .Decode (reader );if _cceef !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cceef );
return nil ,_cceef ;};return _bgeee .NewImageFromGoImage (_edfa );};func _cggee ()string {_cabff .Lock ();defer _cabff .Unlock ();_gfcda :=_bda .GetLicenseKey ();if len (_bfgd )> 0&&(_gfcda .IsLicensed ()||_efdgf ){return _bfgd ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_adagf (),_gfcda .TypeToString ());
};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_dgdcg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_gbf .CharCode )(_bcdcf []rune ,_aeff ,_aaga int ){_agdb ,_aeff ,_aaga :=_dgdcg .CharcodesToStrings (charcodes );return []rune (_cb .Join (_agdb ,"")),_aeff ,_aaga ;};func (_cacbc *PdfReader )newPdfActionRenditionFromDict (_abd *_eag .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_abd .Get ("\u0052"),AN :_abd .Get ("\u0041\u004e"),OP :_abd .Get ("\u004f\u0050"),JS :_abd .Get ("\u004a\u0053")},nil ;
};func (_fbg *PdfReader )newPdfAnnotationInkFromDict (_gaa *_eag .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_febb :=PdfAnnotationInk {};_bbf ,_dffd :=_fbg .newPdfAnnotationMarkupFromDict (_gaa );if _dffd !=nil {return nil ,_dffd ;};_febb .PdfAnnotationMarkup =_bbf ;
_febb .InkList =_gaa .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_febb .BS =_gaa .Get ("\u0042\u0053");return &_febb ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ccdee *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adcd :=vals [0];if _adcd < 0.0||_adcd > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adcd );
return nil ,ErrColorOutOfRange ;};_cfgd :=vals [1];if _cfgd < 0.0||_cfgd > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adcd );return nil ,ErrColorOutOfRange ;
};_ccefa :=vals [2];if _ccefa < 0.0||_ccefa > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adcd );return nil ,ErrColorOutOfRange ;};_dgaa :=NewPdfColorDeviceRGB (_adcd ,_cfgd ,_ccefa );
return _dgaa ,nil ;};func _facbb (_gabaa *_eag .PdfObjectArray )(float64 ,error ){_bdegb ,_gafc :=_gabaa .ToFloat64Array ();if _gafc !=nil {_ebdd .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gabaa ,_gafc );
};switch len (_bdegb ){case 1:return _bdegb [0],nil ;case 3:_ggcac :=PdfColorspaceDeviceRGB {};_fdbee ,_debd :=_ggcac .ColorFromFloats (_bdegb );if _debd !=nil {return 0.0,_debd ;};return _fdbee .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fbgec :=PdfColorspaceDeviceCMYK {};
_gbebb ,_edagb :=_fbgec .ColorFromFloats (_bdegb );if _edagb !=nil {return 0.0,_edagb ;};_aedeb ,_edagb :=_fbgec .ColorToRGB (_gbebb .(*PdfColorDeviceCMYK ));if _edagb !=nil {return 0.0,_edagb ;};return _aedeb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_gafc =_bag .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ebdd .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gabaa ,_gafc );
return 0.0,_gafc ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_fedg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dbbag *PdfSignature ,_ddbfg Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_cedbg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_bcgedf *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_eaebc *PdfSignature ,_eafdd Hasher )error ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_eag .PdfObjectStream ;OCSP []*_eag .PdfObjectStream ;CRL []*_eag .PdfObjectStream ;TU *_eag .PdfObjectString ;TS *_eag .PdfObjectString ;};func _efbac (_fgcdg string )(string ,error ){var _edeb _cf .Buffer ;_edeb .WriteString (_fgcdg );
_bggee :=make ([]byte ,8+16);_cadbd :=_ag .Now ().UTC ().UnixNano ();_ee .BigEndian .PutUint64 (_bggee ,uint64 (_cadbd ));_ ,_baebg :=_eeg .Read (_bggee [8:]);if _baebg !=nil {return "",_baebg ;};_edeb .WriteString (_df .EncodeToString (_bggee ));return _edeb .String (),nil ;
};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_fabadc PdfOutputIntentType )String ()string {switch _fabadc {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func (_fad *PdfReader )newPdfActionURIFromDict (_cbca *_eag .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cbca .Get ("\u0055\u0052\u0049"),IsMap :_cbca .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ggaag *PdfOutlineTreeNode )GetContainingPdfObject ()_eag .PdfObject {return _ggaag .GetContext ().GetContainingPdfObject ();};func (_abgb *PdfReader )newPdfOutlineItemFromIndirectObject (_bcced *_eag .PdfIndirectObject )(*PdfOutlineItem ,error ){_acgggc ,_facde :=_bcced .PdfObject .(*_eag .PdfObjectDictionary );
if !_facde {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cfbc :=NewPdfOutlineItem ();_bbfbe :=_acgggc .Get ("\u0054\u0069\u0074l\u0065");
if _bbfbe ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_defcf ,_ffcg :=_eag .GetString (_bbfbe );if !_ffcg {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bbfbe );};_cfbc .Title =_defcf ;if _aagac :=_acgggc .Get ("\u0043\u006f\u0075n\u0074");
_aagac !=nil {_gccgd ,_cace :=_aagac .(*_eag .PdfObjectInteger );if !_cace {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_aagac );};_adfgg :=int64 (*_gccgd );
_cfbc .Count =&_adfgg ;};if _dedc :=_acgggc .Get ("\u0044\u0065\u0073\u0074");_dedc !=nil {_cfbc .Dest =_eag .ResolveReference (_dedc );if !_abgb ._dgabg {_faacc :=_abgb .traverseObjectData (_cfbc .Dest );if _faacc !=nil {return nil ,_faacc ;};};};if _adgcda :=_acgggc .Get ("\u0041");
_adgcda !=nil {_cfbc .A =_eag .ResolveReference (_adgcda );if !_abgb ._dgabg {_gbfad :=_abgb .traverseObjectData (_cfbc .A );if _gbfad !=nil {return nil ,_gbfad ;};};};if _bdaab :=_acgggc .Get ("\u0053\u0045");_bdaab !=nil {_cfbc .SE =nil ;};if _fgab :=_acgggc .Get ("\u0043");
_fgab !=nil {_cfbc .C =_eag .ResolveReference (_fgab );};if _acad :=_acgggc .Get ("\u0046");_acad !=nil {_cfbc .F =_eag .ResolveReference (_acad );};return _cfbc ,nil ;};func _eddee (_dddd *PdfField ,_fbbdc _eag .PdfObject ){for _ ,_deebg :=range _dddd .Annotations {_deebg .AS =_fbbdc ;
_deebg .ToPdfObject ();};};

// Fill populates `form` with values provided by `provider`.
func (_fbbba *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fbbba .fill (provider ,nil )};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_aafgd *PdfReader )GetPageLabels ()(_eag .PdfObject ,error ){_ccgbbc :=_eag .ResolveReference (_aafgd ._adbgg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ccgbbc ==nil {return nil ,nil ;};if !_aafgd ._dgabg {_eegeg :=_aafgd .traverseObjectData (_ccgbbc );
if _eegeg !=nil {return nil ,_eegeg ;};};return _ccgbbc ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_eag .PdfObjectArray ;Matrix *_eag .PdfObjectArray ;Function []PdfFunction ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gbcgb *PdfField )FullName ()(string ,error ){var _befbg _cf .Buffer ;_afceab :=[]string {};if _gbcgb .T !=nil {_afceab =append (_afceab ,_gbcgb .T .Decoded ());};_fcdf :=map[*PdfField ]bool {};_fcdf [_gbcgb ]=true ;_aebc :=_gbcgb .Parent ;for _aebc !=nil {if _ ,_begf :=_fcdf [_aebc ];
_begf {return _befbg .String (),_bag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _aebc .T ==nil {return _befbg .String (),_bag .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_afceab =append (_afceab ,_aebc .T .Decoded ());_fcdf [_aebc ]=true ;_aebc =_aebc .Parent ;};for _efbg :=len (_afceab )-1;_efbg >=0;_efbg --{_befbg .WriteString (_afceab [_efbg ]);if _efbg > 0{_befbg .WriteString ("\u002e");};};return _befbg .String (),nil ;
};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cdgg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bbade *PdfReader )GetCatalogMetadata ()(_eag .PdfObject ,bool ){if _bbade ._adbgg ==nil {return nil ,false ;};_bcbgg :=_bbade ._adbgg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bcbgg ,_bcbgg !=nil ;};func (_caef *PdfReader )newPdfAnnotationTrapNetFromDict (_beb *_eag .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dddb :=PdfAnnotationTrapNet {};
return &_dddb ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ccbcd *PdfPattern )GetContext ()PdfModel {return _ccbcd ._aaaca };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _eag .PdfObject ;Open _eag .PdfObject ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ba .ReadSeeker )(*CompliancePdfReader ,error ){const _ebab ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_cbgca ,_dafb :=_dgbcf (rs ,&ReaderOpts {ComplianceMode :true },false ,_ebab );
if _dafb !=nil {return nil ,_dafb ;};return &CompliancePdfReader {PdfReader :_cbgca },nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_bgaec *PdfWriter )GetPdfVersion ()string {return _bgaec .getPdfVersion ()};var _bbbb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetOCProperties returns the optional content properties PdfObject.
func (_daba *PdfReader )GetOCProperties ()(_eag .PdfObject ,error ){_fbeab :=_daba ._adbgg ;_gfae :=_fbeab .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gfae =_eag .ResolveReference (_gfae );if !_daba ._dgabg {_cfbge :=_daba .traverseObjectData (_gfae );
if _cfbge !=nil {return nil ,_cfbge ;};};return _gfae ,nil ;};func (_bbgcd *PdfPage )setContainer (_dcebc *_eag .PdfIndirectObject ){_dcebc .PdfObject =_bbgcd ._eeaa ;_bbgcd ._beadd =_dcebc ;};func _aead (_badf *_eag .PdfObjectDictionary ,_ecdgc *fontCommon )(*pdfCIDFontType0 ,error ){if _ecdgc ._cdabe !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ebdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ecdgc );
return nil ,_eag .ErrRangeError ;};_acfg :=_dgaab (_ecdgc );_cage ,_fafb :=_eag .GetDict (_badf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fafb {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ecdgc );
return nil ,ErrRequiredAttributeMissing ;};_acfg .CIDSystemInfo =_cage ;_acfg .DW =_badf .Get ("\u0044\u0057");_acfg .W =_badf .Get ("\u0057");_acfg .DW2 =_badf .Get ("\u0044\u0057\u0032");_acfg .W2 =_badf .Get ("\u0057\u0032");_acfg ._cfcae =1000.0;if _fabbd ,_abfg :=_eag .GetNumberAsFloat (_acfg .DW );
_abfg ==nil {_acfg ._cfcae =_fabbd ;};_bfdge ,_ffcc :=_ebac (_acfg .W );if _ffcc !=nil {return nil ,_ffcc ;};if _bfdge ==nil {_bfdge =map[_gbf .CharCode ]float64 {};};_acfg ._ffbce =_bfdge ;return _acfg ,nil ;};func _babf (_edfd StdFontName )(pdfFontSimple ,error ){_dfga ,_defe :=_eeb .NewStdFontByName (_edfd );
if !_defe {return pdfFontSimple {},ErrFontNotSupported ;};_cfed :=_geaf (_dfga );return _cfed ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_eag .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dffab *_eag .PdfIndirectObject ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_eag .PdfObjectStream )(*XObjectForm ,error ){_ecacbb :=&XObjectForm {};_ecacbb ._beaeg =stream ;_aadcbe :=*(stream .PdfObjectDictionary );_fdad ,_dcbdc :=_eag .NewEncoderFromStream (stream );if _dcbdc !=nil {return nil ,_dcbdc ;
};_ecacbb .Filter =_fdad ;if _gcbgdc :=_aadcbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gcbgdc !=nil {_dfacc ,_ddbfb :=_gcbgdc .(*_eag .PdfObjectName );if !_ddbfb {return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_dfacc !="\u0046\u006f\u0072\u006d"{_ebdd .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _cfeed :=_aadcbe .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_cfeed !=nil {_ecacbb .FormType =_cfeed ;};if _bgdgc :=_aadcbe .Get ("\u0042\u0042\u006f\u0078");_bgdgc !=nil {_ecacbb .BBox =_bgdgc ;};if _afbcf :=_aadcbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_afbcf !=nil {_ecacbb .Matrix =_afbcf ;};if _ggace :=_aadcbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggace !=nil {_ggace =_eag .TraceToDirectObject (_ggace );_eegac ,_bcgad :=_ggace .(*_eag .PdfObjectDictionary );if !_bcgad {_ebdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_eag .ErrTypeError ;};_agccfd ,_beefeg :=NewPdfPageResourcesFromDict (_eegac );if _beefeg !=nil {_ebdd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_beefeg ;};_ecacbb .Resources =_agccfd ;_ebdd .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ecacbb .Resources );};_ecacbb .Group =_aadcbe .Get ("\u0047\u0072\u006fu\u0070");
_ecacbb .Ref =_aadcbe .Get ("\u0052\u0065\u0066");_ecacbb .MetaData =_aadcbe .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ecacbb .PieceInfo =_aadcbe .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecacbb .LastModified =_aadcbe .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ecacbb .StructParent =_aadcbe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ecacbb .StructParents =_aadcbe .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ecacbb .OPI =_aadcbe .Get ("\u004f\u0050\u0049");
_ecacbb .OC =_aadcbe .Get ("\u004f\u0043");_ecacbb .Name =_aadcbe .Get ("\u004e\u0061\u006d\u0065");_ecacbb .Stream =stream .Stream ;return _ecacbb ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ecgc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToInteger convert to an integer format.
func (_caaa *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_edea :=_gcg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_edea *_caaa .C ()),uint32 (_edea *_caaa .M ()),uint32 (_edea *_caaa .Y ()),uint32 (_edea *_caaa .K ())};};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gbb :=NewPdfAction ();_bg :=&PdfActionImportData {};_bg .PdfAction =_gbb ;_gbb .SetContext (_bg );return _bg ;};

// ToPdfObject implements interface PdfModel.
func (_eaabd *PdfAnnotationPopup )ToPdfObject ()_eag .PdfObject {_eaabd .PdfAnnotation .ToPdfObject ();_fefc :=_eaabd ._gfa ;_ffde :=_fefc .PdfObject .(*_eag .PdfObjectDictionary );_ffde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0050\u006f\u0070u\u0070"));
_ffde .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaabd .Parent );_ffde .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eaabd .Open );return _fefc ;};func (_cccbg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// ToPdfObject implements interface PdfModel.
func (_aeadb *PdfSignature )ToPdfObject ()_eag .PdfObject {_gccge :=_aeadb ._bdda ;var _cgaadg *_eag .PdfObjectDictionary ;if _fgef ,_fdec :=_gccge .PdfObject .(*pdfSignDictionary );_fdec {_cgaadg =_fgef .PdfObjectDictionary ;}else {_cgaadg =_gccge .PdfObject .(*_eag .PdfObjectDictionary );
};_cgaadg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aeadb .Type );_cgaadg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_aeadb .Filter );_cgaadg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_aeadb .SubFilter );_cgaadg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_aeadb .ByteRange );
_cgaadg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aeadb .Contents );_cgaadg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_aeadb .Cert );_cgaadg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aeadb .Name );_cgaadg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_aeadb .Reason );
_cgaadg .SetIfNotNil ("\u004d",_aeadb .M );_cgaadg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_aeadb .Reference );_cgaadg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_aeadb .Changes );_cgaadg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_aeadb .ContactInfo );
return _gccge ;};

// B returns the value of the blue component of the color.
func (_dfec *PdfColorDeviceRGB )B ()float64 {return _dfec [2]};func _ccbf (_dcag ,_affeb string )string {if _cb .Contains (_dcag ,"\u002b"){_cface :=_cb .Split (_dcag ,"\u002b");if len (_cface )==2{_dcag =_cface [1];};};return _affeb +"\u002b"+_dcag ;};


// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_gadeg :=&PdfShadingType2 {};_gadeg .PdfShading =&PdfShading {};_gadeg .PdfShading ._aadgg =_eag .MakeIndirectObject (_eag .MakeDict ());_gadeg .PdfShading ._dcgab =_gadeg ;return _gadeg ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ccbb *PdfFont )CharcodesToStrings (charcodes []_gbf .CharCode )([]string ,int ,int ){_ecceb :=_ccbb .baseFields ();_gdcd :=make ([]string ,0,len (charcodes ));_fdfb :=0;_bcaa :=_ccbb .Encoder ();_eafdg :=_ecceb ._dccf !=nil &&_ccbb .IsSimple ()&&_ccbb .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_cb .Contains (_ecceb ._dccf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_eafdg &&_bcaa !=nil {switch _gfcfe :=_bcaa .(type ){case _gbf .SimpleEncoder :_ffada :=_gfcfe .BaseName ();if _ ,_ega :=_gcfcg [_ffada ];_ega {for _ ,_dfgge :=range charcodes {if _eebd ,_feda :=_bcaa .CharcodeToRune (_dfgge );_feda {_gdcd =append (_gdcd ,string (_eebd ));
}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dfgge ,charcodes ,_ecceb .isCIDFont (),_ccbb ,_bcaa );
_fdfb ++;_gdcd =append (_gdcd ,_cd .MissingCodeString );};};return _gdcd ,len (_gdcd ),_fdfb ;};};};for _ ,_ccag :=range charcodes {if _ecceb ._dccf !=nil {if _ccae ,_aaccb :=_ecceb ._dccf .CharcodeToUnicode (_cd .CharCode (_ccag ));_aaccb {_gdcd =append (_gdcd ,_ccae );
continue ;};};if _bcaa !=nil {if _cdaa ,_eegf :=_bcaa .CharcodeToRune (_ccag );_eegf {_gdcd =append (_gdcd ,string (_cdaa ));continue ;};};_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ccag ,charcodes ,_ecceb .isCIDFont (),_ccbb ,_bcaa );
_fdfb ++;_gdcd =append (_gdcd ,_cd .MissingCodeString );};if _fdfb !=0{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fdfb ,_ccbb );
};return _gdcd ,len (_gdcd ),_fdfb ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_efbdb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _efbdb ._faeb ==nil {_efbdb ._faeb =_bd .NewPSExecutor (_efbdb .Program );};var _cabbd []_bd .PSObject ;for _ ,_cddec :=range xVec {_cabbd =append (_cabbd ,_bd .MakeReal (_cddec ));
};_gdada ,_eagd :=_efbdb ._faeb .Execute (_cabbd );if _eagd !=nil {return nil ,_eagd ;};_acdbf ,_eagd :=_bd .PSObjectArrayToFloat64Array (_gdada );if _eagd !=nil {return nil ,_eagd ;};return _acdbf ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eaba *_eag .PdfIndirectObject ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_dcbae *PdfWriter )SetRotation (rotate int64 )error {_cfdf ,_adbfa :=_eag .GetDict (_dcbae ._gcedb );if !_adbfa {return ErrTypeCheck ;};_cfdf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_eag .MakeInteger (rotate ));return nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_aaagf *PdfPageResources )SetXObjectFormByName (keyName _eag .PdfObjectName ,xform *XObjectForm )error {_bdccd :=xform .ToPdfObject ().(*_eag .PdfObjectStream );_fcfgb :=_aaagf .SetXObjectByName (keyName ,_bdccd );return _fcfgb ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fgff *PdfField )Flags ()FieldFlag {var _bcag FieldFlag ;_abff ,_gada :=_fgff .inherit (func (_deabb *PdfField )bool {if _deabb .Ff !=nil {_bcag =FieldFlag (*_deabb .Ff );return true ;};return false ;});if _gada !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gada );
};if !_abff {_ebdd .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bcag ;};func (_fec *PdfReader )newPdfAnnotationProjectionFromDict (_cfaa *_eag .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_gdb :=&PdfAnnotationProjection {};
_bafg ,_eaec :=_fec .newPdfAnnotationMarkupFromDict (_cfaa );if _eaec !=nil {return nil ,_eaec ;};_gdb .PdfAnnotationMarkup =_bafg ;return _gdb ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_fbbb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_fbbb ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _eag .PdfObject )(*EmbeddedFile ,error ){_gfcgf :=_eag .TraceToDirectObject (obj );_ddaf ,_ccda :=_gfcgf .(*_eag .PdfObjectDictionary );if !_ccda {return nil ,_bag .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bgedcc :=_eag .TraceToDirectObject (_ddaf .Get ("\u0046"));if _bgedcc ==nil {return nil ,_bag .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_ffbc ,_ccda :=_bgedcc .(*_eag .PdfObjectStream );
if !_ccda {return nil ,_bag .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_aeag :=_ffbc .PdfObjectDictionary ;_gfafe :=_aeag .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _gfafe ==nil {return nil ,_bag .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_faccg ,_ccda :=_gfafe .(*_eag .PdfObjectDictionary );if !_ccda {return nil ,_bag .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_bggba :="";_edcf :=_faccg .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _edcf !=nil {_bggba =_edcf .(*_eag .PdfObjectString ).Str ();};_fegbf ,_eageb :=_eag .DecodeStream (_ffbc );if _eageb !=nil {return nil ,_eageb ;};_dddcd :=&EmbeddedFile {Content :_fegbf ,Hash :_bggba };return _dddcd ,nil ;};func (_bca *PdfReader )newPdfActionGotoEFromDict (_dceb *_eag .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ddg ,_abf :=_bae (_dceb .Get ("\u0046"));
if _abf !=nil {return nil ,_abf ;};return &PdfActionGoToE {D :_dceb .Get ("\u0044"),NewWindow :_dceb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dceb .Get ("\u0054"),F :_ddg },nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ecgfg *PdfPage )GetContainingPdfObject ()_eag .PdfObject {return _ecgfg ._beadd };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_eag .PdfObjectArray ;ExtGState _eag .PdfObject ;};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_gfdf *PdfReader )GetCatalogViewerPreferences ()(_eag .PdfObject ,bool ){if _gfdf ._adbgg ==nil {return nil ,false ;};_caeed :=_gfdf ._adbgg .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _caeed ,_caeed !=nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcfb *PdfPageResourcesColorspaces )ToPdfObject ()_eag .PdfObject {_fafac :=_eag .MakeDict ();for _ ,_ffaf :=range _bcfb .Names {_fafac .Set (_eag .PdfObjectName (_ffaf ),_bcfb .Colorspaces [_ffaf ].ToPdfObject ());};if _bcfb ._egdac !=nil {_bcfb ._egdac .PdfObject =_fafac ;
return _bcfb ._egdac ;};return _fafac ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bggae *_eag .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_aagd *PdfAnnotationSound )ToPdfObject ()_eag .PdfObject {_aagd .PdfAnnotation .ToPdfObject ();_cgef :=_aagd ._gfa ;_eceg :=_cgef .PdfObject .(*_eag .PdfObjectDictionary );_aagd .PdfAnnotationMarkup .appendToPdfDictionary (_eceg );_eceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053\u006f\u0075n\u0064"));
_eceg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_aagd .Sound );_eceg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aagd .Name );return _cgef ;};func _cfaad (_bada _eag .PdfObject )(*PdfColorspaceLab ,error ){_aade :=NewPdfColorspaceLab ();if _gfabc ,_ggef :=_bada .(*_eag .PdfIndirectObject );
_ggef {_aade ._eaba =_gfabc ;};_bada =_eag .TraceToDirectObject (_bada );_fefe ,_caeg :=_bada .(*_eag .PdfObjectArray );if !_caeg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fefe .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bada =_eag .TraceToDirectObject (_fefe .Get (0));_abef ,_caeg :=_bada .(*_eag .PdfObjectName );if !_caeg {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_abef !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bada =_eag .TraceToDirectObject (_fefe .Get (1));_gbdb ,_caeg :=_bada .(*_eag .PdfObjectDictionary );
if !_caeg {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bada =_gbdb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bada =_eag .TraceToDirectObject (_bada );_cbf ,_caeg :=_bada .(*_eag .PdfObjectArray );if !_caeg {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _cbf .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_eadc ,_egfaa :=_cbf .GetAsFloat64Slice ();if _egfaa !=nil {return nil ,_egfaa ;};_aade .WhitePoint =_eadc ;_bada =_gbdb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bada !=nil {_bada =_eag .TraceToDirectObject (_bada );_bfdd ,_bfbea :=_bada .(*_eag .PdfObjectArray );
if !_bfbea {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bfdd .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_cdgc ,_fege :=_bfdd .GetAsFloat64Slice ();if _fege !=nil {return nil ,_fege ;};_aade .BlackPoint =_cdgc ;};_bada =_gbdb .Get ("\u0052\u0061\u006eg\u0065");if _bada !=nil {_bada =_eag .TraceToDirectObject (_bada );_fbegd ,_bagf :=_bada .(*_eag .PdfObjectArray );
if !_bagf {_ebdd .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbegd .Len ()!=4{_ebdd .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_beda ,_egef :=_fbegd .GetAsFloat64Slice ();if _egef !=nil {return nil ,_egef ;};_aade .Range =_beda ;};return _aade ,nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_aabc *PdfPage )GetStructTreeRoot ()(*_eag .PdfObject ,bool ){_cdgdd ,_gbgega :=_aabc ._adgb .GetCatalogStructTreeRoot ();return &_cdgdd ,_gbgega ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bga PdfModel ;Rect _eag .PdfObject ;Contents _eag .PdfObject ;P _eag .PdfObject ;NM _eag .PdfObject ;M _eag .PdfObject ;F _eag .PdfObject ;AP _eag .PdfObject ;AS _eag .PdfObject ;Border _eag .PdfObject ;C _eag .PdfObject ;StructParent _eag .PdfObject ;
OC _eag .PdfObject ;_gfa *_eag .PdfIndirectObject ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_aacc :=NewPdfAnnotation ();_deeb :=&PdfAnnotationWatermark {};_deeb .PdfAnnotation =_aacc ;_aacc .SetContext (_deeb );return _deeb ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_feega *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_daegc :=_feega ._afegd .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _daegc {return nil ,_bag .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_daegc {return _feega ,nil ;};if _feega ._dbeag [revisionNumber ]!=nil {return _feega ._dbeag [revisionNumber ],nil ;};_caceg :=_feega ;for _babae :=_daegc -1;_babae >=revisionNumber ;_babae --{_dgcecd ,_dfbfe :=_caceg .GetPreviousRevision ();
if _dfbfe !=nil {return nil ,_dfbfe ;};_feega ._dbeag [_babae ]=_dgcecd ;_caceg =_dgcecd ;};return _caceg ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_babeb *PdfAppender )UpdateObject (obj _eag .PdfObject ){_babeb .replaceObject (obj ,obj );if _ ,_ffa :=_babeb ._dbaf [obj ];!_ffa {_babeb ._aea =append (_babeb ._aea ,obj );_babeb ._dbaf [obj ]=struct{}{};};};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_eag .PdfObjectString ;Q *_eag .PdfObjectInteger ;DS *_eag .PdfObjectString ;RV _eag .PdfObject ;MaxLen *_eag .PdfObjectInteger ;};

// GetXObjectByName gets XObject by name.
func (_dgbcg *PdfPage )GetXObjectByName (name _eag .PdfObjectName )(_eag .PdfObject ,bool ){_bccfc ,_afeed :=_dgbcg .Resources .XObject .(*_eag .PdfObjectDictionary );if !_afeed {return nil ,false ;};if _cbge :=_bccfc .Get (name );_cbge !=nil {return _cbge ,true ;
};return nil ,false ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_babec *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _babec ._aaaca .(*PdfShadingPattern );};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_eag .PdfObjectBool ;SigFlags *_eag .PdfObjectInteger ;CO *_eag .PdfObjectArray ;DR *PdfPageResources ;DA *_eag .PdfObjectString ;Q *_eag .PdfObjectInteger ;XFA _eag .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _eag .PdfObject ;_cada *_eag .PdfIndirectObject ;_efefb bool ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bbedgb *PdfWriter )SetPageLabels (pageLabels _eag .PdfObject )error {if pageLabels ==nil {return nil ;};_ebdd .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bbedgb ._daegb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bbedgb .addObjects (pageLabels );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_eag .PdfIndirectObject )*PdfOutlineItem {_dbcd :=PdfOutlineItem {};_dbcd ._addfb =&_dbcd ;_dbcd .Title =_eag .MakeString (title );_baafc :=_eag .MakeArray ();_baafc .Append (page );_baafc .Append (_eag .MakeName ("\u0046\u0069\u0074"));
_dbcd .Dest =_baafc ;return &_dbcd ;};var _ pdfFont =(*pdfFontType3 )(nil );func _aacfd (_ccaec *_eag .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ecadf :=PdfShadingType6 {};_bdgaca :=_ccaec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bdgaca ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbcgbd ,_gbgcd :=_bdgaca .(*_eag .PdfObjectInteger );if !_gbgcd {_ebdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgaca );
return nil ,_eag .ErrTypeError ;};_ecadf .BitsPerCoordinate =_gbcgbd ;_bdgaca =_ccaec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdgaca ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gbcgbd ,_gbgcd =_bdgaca .(*_eag .PdfObjectInteger );if !_gbgcd {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdgaca );
return nil ,_eag .ErrTypeError ;};_ecadf .BitsPerComponent =_gbcgbd ;_bdgaca =_ccaec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdgaca ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbcgbd ,_gbgcd =_bdgaca .(*_eag .PdfObjectInteger );if !_gbgcd {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdgaca );
return nil ,_eag .ErrTypeError ;};_ecadf .BitsPerComponent =_gbcgbd ;_bdgaca =_ccaec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdgaca ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dacd ,_gbgcd :=_bdgaca .(*_eag .PdfObjectArray );if !_gbgcd {_ebdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdgaca );
return nil ,_eag .ErrTypeError ;};_ecadf .Decode =_dacd ;if _cgffaf :=_ccaec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cgffaf !=nil {_ecadf .Function =[]PdfFunction {};if _geeeb ,_bade :=_cgffaf .(*_eag .PdfObjectArray );_bade {for _ ,_gbbdf :=range _geeeb .Elements (){_bccac ,_gbcaa :=_baaab (_gbbdf );
if _gbcaa !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbcaa );return nil ,_gbcaa ;};_ecadf .Function =append (_ecadf .Function ,_bccac );
};}else {_dfgfga ,_egcbe :=_baaab (_cgffaf );if _egcbe !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egcbe );return nil ,_egcbe ;
};_ecadf .Function =append (_ecadf .Function ,_dfgfga );};};return &_ecadf ,nil ;};func (_cbdg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func _fbfed ()string {_cabff .Lock ();defer _cabff .Unlock ();
return _ecfc };var (ErrRequiredAttributeMissing =_bag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_adda =_bag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_bag .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_bag .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_aa .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_eag .ErrNotSupported );
ErrType1CFontNotSupported =_aa .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_eag .ErrNotSupported );
ErrType3FontNotSupported =_aa .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_eag .ErrNotSupported );
ErrTTCmapNotSupported =_aa .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_eag .ErrNotSupported );
ErrSignNotEnoughSpace =_aa .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_aa .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_ffbfc *LTV )getCerts (_ddgad []*_ed .Certificate )([][]byte ,error ){_bdde :=make ([][]byte ,0,len (_ddgad ));
for _ ,_abga :=range _ddgad {_bdde =append (_bdde ,_abga .Raw );};return _bdde ,nil ;};

// ToPdfObject returns a stream object.
func (_ggfc *XObjectImage )ToPdfObject ()_eag .PdfObject {_bbacbf :=_ggfc ._cgfecg ;if _ggfc ._ecbga {return _bbacbf ;};_ecafd :=_bbacbf .PdfObjectDictionary ;if _ggfc .Filter !=nil {_ecafd =_ggfc .Filter .MakeStreamDict ();_bbacbf .PdfObjectDictionary =_ecafd ;
};_ecafd .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_ecafd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0049\u006d\u0061g\u0065"));_ecafd .Set ("\u0057\u0069\u0064t\u0068",_eag .MakeInteger (*(_ggfc .Width )));
_ecafd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eag .MakeInteger (*(_ggfc .Height )));if _ggfc .BitsPerComponent !=nil {_ecafd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eag .MakeInteger (*(_ggfc .BitsPerComponent )));
};if _ggfc .ColorSpace !=nil {_ecafd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ggfc .ColorSpace .ToPdfObject ());};_ecafd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ggfc .Intent );_ecafd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ggfc .ImageMask );
_ecafd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ggfc .Mask );_ccceg :=_ecafd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _ggfc .Decode ==nil &&_ccceg {_ecafd .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ggfc .Decode !=nil {_ecafd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggfc .Decode );
};_ecafd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ggfc .Interpolate );_ecafd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ggfc .Alternatives );_ecafd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ggfc .SMask );
_ecafd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ggfc .SMaskInData );_ecafd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ggfc .Matte );_ecafd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggfc .Name );_ecafd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ggfc .StructParent );
_ecafd .SetIfNotNil ("\u0049\u0044",_ggfc .ID );_ecafd .SetIfNotNil ("\u004f\u0050\u0049",_ggfc .OPI );_ecafd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ggfc .Metadata );_ecafd .SetIfNotNil ("\u004f\u0043",_ggfc .OC );_ecafd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_ggfc .Stream ))));
_bbacbf .Stream =_ggfc .Stream ;_ggfc ._ecbga =true ;return _bbacbf ;};

// HasFontByName checks if has font resource by name.
func (_ffdd *PdfPage )HasFontByName (name _eag .PdfObjectName )bool {_bfabg ,_gdaf :=_ffdd .Resources .Font .(*_eag .PdfObjectDictionary );if !_gdaf {return false ;};if _daafd :=_bfabg .Get (name );_daafd !=nil {return true ;};return false ;};

// IsValid checks if the given pdf output intent type is valid.
func (_edede PdfOutputIntentType )IsValid ()bool {return _edede >=PdfOutputIntentTypeA1 &&_edede <=PdfOutputIntentTypeX ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gfec ,_cbbge :=NewStandard14Font (basefont );if _cbbge !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gfec ;};func (_abfgad *PdfReader )loadAnnotations (_ddecf _eag .PdfObject )([]*PdfAnnotation ,error ){_deeaa ,_fdaf :=_eag .GetArray (_ddecf );if !_fdaf {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _egdbe []*PdfAnnotation ;for _ ,_ccgcg :=range _deeaa .Elements (){_ccgcg =_eag .ResolveReference (_ccgcg );if _ ,_dgfbe :=_ccgcg .(*_eag .PdfObjectNull );_dgfbe {continue ;};_fdce ,_debg :=_ccgcg .(*_eag .PdfObjectDictionary );_dgdf ,_ggcff :=_ccgcg .(*_eag .PdfIndirectObject );
if _debg {_dgdf =&_eag .PdfIndirectObject {};_dgdf .PdfObject =_fdce ;}else {if !_ggcff {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_feae ,_cffbf :=_abfgad .newPdfAnnotationFromIndirectObject (_dgdf );if _cffbf !=nil {return nil ,_cffbf ;};switch _afabg :=_feae .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ebfge :=range _abfgad .AcroForm .AllFields (){if _ebfge ._eebf ==_afabg .Parent {_afabg ._bgda =_ebfge ;
break ;};};};if _feae !=nil {_egdbe =append (_egdbe ,_feae );};};return _egdbe ,nil ;};var _efdgf =false ;

// Items returns all children outline items.
func (_gddd *OutlineItem )Items ()[]*OutlineItem {return _gddd .Entries };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bddea *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bddea .ToPdfOutline ().PdfOutlineTreeNode ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ecdf *PdfColorLab )GetNumComponents ()int {return 3};

// SetAlpha sets the alpha layer for the image.
func (_bcgcb *Image )SetAlpha (alpha []byte ){_bcgcb ._cbefd =alpha };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdgb *PdfShadingType2 )ToPdfObject ()_eag .PdfObject {_cdgb .PdfShading .ToPdfObject ();_bega ,_cgfa :=_cdgb .getShadingDict ();if _cgfa !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bega ==nil {_ebdd .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _cdgb .Coords !=nil {_bega .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cdgb .Coords );
};if _cdgb .Domain !=nil {_bega .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdgb .Domain );};if _cdgb .Function !=nil {if len (_cdgb .Function )==1{_bega .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdgb .Function [0].ToPdfObject ());}else {_babbb :=_eag .MakeArray ();
for _ ,_cdee :=range _cdgb .Function {_babbb .Append (_cdee .ToPdfObject ());};_bega .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_babbb );};};if _cdgb .Extend !=nil {_bega .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cdgb .Extend );};return _cdgb ._aadgg ;
};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_eag .PdfObjectArray ;Domain *_eag .PdfObjectArray ;Function []PdfFunction ;Extend *_eag .PdfObjectArray ;};func (_gcab *PdfReader )newPdfAnnotationFreeTextFromDict (_cgea *_eag .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dga :=PdfAnnotationFreeText {};
_afcc ,_fbfgf :=_gcab .newPdfAnnotationMarkupFromDict (_cgea );if _fbfgf !=nil {return nil ,_fbfgf ;};_dga .PdfAnnotationMarkup =_afcc ;_dga .DA =_cgea .Get ("\u0044\u0041");_dga .Q =_cgea .Get ("\u0051");_dga .RC =_cgea .Get ("\u0052\u0043");_dga .DS =_cgea .Get ("\u0044\u0053");
_dga .CL =_cgea .Get ("\u0043\u004c");_dga .IT =_cgea .Get ("\u0049\u0054");_dga .BE =_cgea .Get ("\u0042\u0045");_dga .RD =_cgea .Get ("\u0052\u0044");_dga .BS =_cgea .Get ("\u0042\u0053");_dga .LE =_cgea .Get ("\u004c\u0045");return &_dga ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_gcadc *PdfPageResources )GetXObjectFormByName (keyName _eag .PdfObjectName )(*XObjectForm ,error ){_gdcdg ,_fgcf :=_gcadc .GetXObjectByName (keyName );if _gdcdg ==nil {return nil ,nil ;};if _fgcf !=XObjectTypeForm {return nil ,_bag .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fdcfg ,_cbbbd :=NewXObjectFormFromStream (_gdcdg );if _cbbbd !=nil {return nil ,_cbbbd ;};return _fdcfg ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_ffbdb *PdfAcroForm )AllFields ()[]*PdfField {if _ffbdb ==nil {return nil ;};var _fgafb []*PdfField ;if _ffbdb .Fields !=nil {for _ ,_cbbcc :=range *_ffbdb .Fields {_fgafb =append (_fgafb ,_fgdgc (_cbbcc )...);};};return _fgafb ;};

// GetBorderWidth returns the border style's width.
func (_ddecc *PdfBorderStyle )GetBorderWidth ()float64 {if _ddecc .W ==nil {return 1;};return *_ddecc .W ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetNumComponents returns the number of color components.
func (_ace *PdfColorspaceICCBased )GetNumComponents ()int {return _ace .N };

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _eag .PdfObject ;B _eag .PdfObject ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_aafce *PdfRectangle )Normalize (){if _aafce .Llx > _aafce .Urx {_aafce .Llx ,_aafce .Urx =_aafce .Urx ,_aafce .Llx ;};if _aafce .Lly > _aafce .Ury {_aafce .Lly ,_aafce .Ury =_aafce .Ury ,_aafce .Lly ;};};

// ToPdfObject implements interface PdfModel.
func (_dffa *PdfAnnotationLink )ToPdfObject ()_eag .PdfObject {_dffa .PdfAnnotation .ToPdfObject ();_eff :=_dffa ._gfa ;_bbfg :=_eff .PdfObject .(*_eag .PdfObjectDictionary );_bbfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u004c\u0069\u006e\u006b"));
if _dffa ._deg !=nil &&_dffa ._deg ._eea !=nil {_bbfg .Set ("\u0041",_dffa ._deg ._eea .ToPdfObject ());}else if _dffa .A !=nil {_bbfg .Set ("\u0041",_dffa .A );};_bbfg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dffa .Dest );_bbfg .SetIfNotNil ("\u0048",_dffa .H );
_bbfg .SetIfNotNil ("\u0050\u0041",_dffa .PA );_bbfg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dffa .QuadPoints );_bbfg .SetIfNotNil ("\u0042\u0053",_dffa .BS );return _eff ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _eag .PdfObject ;Volume _eag .PdfObject ;Synchronous _eag .PdfObject ;Repeat _eag .PdfObject ;Mix _eag .PdfObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eag .PdfObject ;};func (_aadd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_eafb *PdfReader )newPdfActionGotoRFromDict (_bgc *_eag .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dbfd ,_baa :=_bae (_bgc .Get ("\u0046"));
if _baa !=nil {return nil ,_baa ;};return &PdfActionGoToR {D :_bgc .Get ("\u0044"),NewWindow :_bgc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dbfd },nil ;};

// ToPdfObject implements interface PdfModel.
func (_efd *PdfAnnotationFileAttachment )ToPdfObject ()_eag .PdfObject {_efd .PdfAnnotation .ToPdfObject ();_beece :=_efd ._gfa ;_ddc :=_beece .PdfObject .(*_eag .PdfObjectDictionary );_efd .PdfAnnotationMarkup .appendToPdfDictionary (_ddc );_ddc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ddc .SetIfNotNil ("\u0046\u0053",_efd .FS );_ddc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efd .Name );return _beece ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_edfee *PdfOutlineTreeNode )ToPdfObject ()_eag .PdfObject {return _edfee .GetContext ().ToPdfObject ();};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_efbf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _efbf .RunesToCharcodeBytes ([]rune (str ));};func (_ddfbd *pdfFontSimple )addEncoding ()error {var (_bcged string ;_bacfb map[_gbf .CharCode ]_gbf .GlyphName ;_bdfec _gbf .SimpleEncoder ;
);if _ddfbd .Encoder ()!=nil {_gfacg ,_degee :=_ddfbd .Encoder ().(_gbf .SimpleEncoder );if _degee &&_gfacg !=nil {_bcged =_gfacg .BaseName ();};};if _ddfbd .Encoding !=nil {_cfbe ,_bdad ,_bcfc :=_ddfbd .getFontEncoding ();if _bcfc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ddfbd ._fgcc ,_ddfbd ._cdabe ,_ddfbd .Encoding ,_ddfbd .Encoding ,_bcfc );
return _bcfc ;};if _cfbe !=""{_bcged =_cfbe ;};_bacfb =_bdad ;_bdfec ,_bcfc =_gbf .NewSimpleTextEncoder (_bcged ,_bacfb );if _bcfc !=nil {return _bcfc ;};};if _bdfec ==nil {_cebe :=_ddfbd ._ecdgfc ;if _cebe !=nil {switch _ddfbd ._cdabe {case "\u0054\u0079\u0070e\u0031":if _cebe .fontFile !=nil &&_cebe .fontFile ._cefb !=nil {_ebdd .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bdfec =_cebe .fontFile ._cefb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cebe ._aaac !=nil {_ebdd .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_egaf ,_agbgg :=_cebe ._aaac .MakeEncoder ();
if _agbgg ==nil {_bdfec =_egaf ;};if _ddfbd ._dccf ==nil {_ddfbd ._dccf =_cebe ._aaac .MakeToUnicode ();};};};};};if _bdfec !=nil {if _bacfb !=nil {_ebdd .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bacfb ,_ddfbd .baseFields ());
_bdfec =_gbf .ApplyDifferences (_bdfec ,_bacfb );};_ddfbd .SetEncoder (_bdfec );};return nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_ggad *pdfSignDictionary )GetSubFilter ()string {_acccb :=_ggad .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _acccb ==nil {return "";};if _afef ,_fbcgge :=_eag .GetNameVal (_acccb );_fbcgge {return _afef ;};return "";};

// AddPages adds pages to be appended to the end of the source PDF.
func (_efeg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_egbbd :=range pages {_egbbd =_egbbd .Duplicate ();_ecfab (_egbbd );_efeg ._abag =append (_efeg ._abag ,_egbbd );};};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_fgfae *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_acdec ,_bfedc :=_eag .GetDict (_fgfae ._daegb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bfedc {_acdec =_eag .MakeDict ();_fgfae ._daegb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_acdec );
};_gecece ,_bfedc :=_eag .GetDict (_acdec .Get (_eag .PdfObjectName (extName )));if !_bfedc {_gecece =_eag .MakeDict ();_acdec .Set (_eag .PdfObjectName (extName ),_gecece );};if _dgabdd ,_ :=_eag .GetNameVal (_gecece .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_dgabdd !=baseVersion {_gecece .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_eag .MakeName (baseVersion ));};if _gaeba ,_ :=_eag .GetIntVal (_gecece .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gaeba !=extLevel {_gecece .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_eag .MakeInteger (int64 (extLevel )));};};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_dagg pdfFont };

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_dg :=NewPdfAction ();_ec :=&PdfActionNamed {};_ec .PdfAction =_dg ;_dg .SetContext (_ec );return _ec ;};func _fbaff ()_ag .Time {_cabff .Lock ();defer _cabff .Unlock ();return _fegec };func (_gccg fontCommon )asPdfObjectDictionary (_gbedg string )*_eag .PdfObjectDictionary {if _gbedg !=""&&_gccg ._cdabe !=""&&_gbedg !=_gccg ._cdabe {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gbedg ,_gccg );
}else if _gbedg ==""&&_gccg ._cdabe ==""{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gccg );
}else if _gccg ._cdabe ==""{_gccg ._cdabe =_gbedg ;};_edba :=_eag .MakeDict ();_edba .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0046\u006f\u006e\u0074"));_edba .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_eag .MakeName (_gccg ._fgcc ));
_edba .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName (_gccg ._cdabe ));if _gccg ._ecdgfc !=nil {_edba .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_gccg ._ecdgfc .ToPdfObject ());};if _gccg ._afga !=nil {_edba .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gccg ._afga );
}else if _gccg ._dccf !=nil {_geba ,_edfbf :=_gccg ._dccf .Stream ();if _edfbf !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_edfbf );
}else {_edba .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_geba );};};return _edba ;};func _dbgfa (_febce *_eag .PdfObjectDictionary )(*PdfShadingType5 ,error ){_cbaa :=PdfShadingType5 {};_dgabd :=_febce .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dgabd ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fbbe ,_aedb :=_dgabd .(*_eag .PdfObjectInteger );if !_aedb {_ebdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgabd );
return nil ,_eag .ErrTypeError ;};_cbaa .BitsPerCoordinate =_fbbe ;_dgabd =_febce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dgabd ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fbbe ,_aedb =_dgabd .(*_eag .PdfObjectInteger );if !_aedb {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dgabd );
return nil ,_eag .ErrTypeError ;};_cbaa .BitsPerComponent =_fbbe ;_dgabd =_febce .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _dgabd ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_fbbe ,_aedb =_dgabd .(*_eag .PdfObjectInteger );if !_aedb {_ebdd .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dgabd );
return nil ,_eag .ErrTypeError ;};_cbaa .VerticesPerRow =_fbbe ;_dgabd =_febce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dgabd ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aaedb ,_aedb :=_dgabd .(*_eag .PdfObjectArray );if !_aedb {_ebdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgabd );
return nil ,_eag .ErrTypeError ;};_cbaa .Decode =_aaedb ;if _faeg :=_febce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_faeg !=nil {_cbaa .Function =[]PdfFunction {};if _fcbga ,_aggb :=_faeg .(*_eag .PdfObjectArray );_aggb {for _ ,_dagef :=range _fcbga .Elements (){_ddaga ,_cebea :=_baaab (_dagef );
if _cebea !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cebea );return nil ,_cebea ;};_cbaa .Function =append (_cbaa .Function ,_ddaga );
};}else {_bdaed ,_bddd :=_baaab (_faeg );if _bddd !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bddd );return nil ,_bddd ;
};_cbaa .Function =append (_cbaa .Function ,_bdaed );};};return &_cbaa ,nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _eag .PdfObject ;Popup *PdfAnnotationPopup ;CA _eag .PdfObject ;RC _eag .PdfObject ;CreationDate _eag .PdfObject ;IRT _eag .PdfObject ;Subj _eag .PdfObject ;RT _eag .PdfObject ;IT _eag .PdfObject ;ExData _eag .PdfObject ;
};

// WriteString outputs the object as it is to be written to file.
func (_ffdfab *PdfTransformParamsDocMDP )WriteString ()string {return _ffdfab .ToPdfObject ().WriteString ();};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _eag .PdfObject ;IsMap _eag .PdfObject ;};func (_fdbb fontCommon )coreString ()string {_bedac :="";if _fdbb ._ecdgfc !=nil {_bedac =_fdbb ._ecdgfc .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fdbb ._cdabe ,_fdbb ._fgcc ,_fdbb ._afbf ,_fdbb ._bbbff ,_fdbb ._afga !=nil ,_fdbb .fontFlags (),_bedac );
};func _baaab (_fdbc _eag .PdfObject )(PdfFunction ,error ){_fdbc =_eag .ResolveReference (_fdbc );if _edbg ,_fdcc :=_fdbc .(*_eag .PdfObjectStream );_fdcc {_fgddd :=_edbg .PdfObjectDictionary ;_beef ,_ccgc :=_fgddd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eag .PdfObjectInteger );
if !_ccgc {_ebdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_beef ==0{return _fcgda (_edbg );}else if *_beef ==4{return _accb (_edbg );}else {return nil ,_bag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _deaf ,_ffgaf :=_fdbc .(*_eag .PdfIndirectObject );
_ffgaf {_fegee ,_ededf :=_deaf .PdfObject .(*_eag .PdfObjectDictionary );if !_ededf {_ebdd .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_abaed ,_ededf :=_fegee .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eag .PdfObjectInteger );
if !_ededf {_ebdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_abaed ==2{return _effd (_deaf );}else if *_abaed ==3{return _gbdgb (_deaf );}else {return nil ,_bag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _afebc ,_fegfgc :=_fdbc .(*_eag .PdfObjectDictionary );
_fegfgc {_bagdf ,_faacf :=_afebc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eag .PdfObjectInteger );if !_faacf {_ebdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bagdf ==2{return _effd (_afebc );}else if *_bagdf ==3{return _gbdgb (_afebc );
}else {return nil ,_bag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ebdd .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fdbc );
return nil ,_bag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ecgea *PdfPageResources )GetPatternByName (keyName _eag .PdfObjectName )(*PdfPattern ,bool ){if _ecgea .Pattern ==nil {return nil ,false ;};_agbbg ,_ggegc :=_eag .TraceToDirectObject (_ecgea .Pattern ).(*_eag .PdfObjectDictionary );if !_ggegc {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecgea .Pattern );
return nil ,false ;};if _ecda :=_agbbg .Get (keyName );_ecda !=nil {_gacbe ,_cgffd :=_bgafe (_ecda );if _cgffd !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cgffd );
return nil ,false ;};return _gacbe ,true ;};return nil ,false ;};func _fagad ()string {_cabff .Lock ();defer _cabff .Unlock ();if len (_ddfcf )> 0{return _ddfcf ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bbcf *modelManager )GetModelFromPrimitive (primitive _eag .PdfObject )PdfModel {model ,_deeae :=_bbcf ._agda [primitive ];if !_deeae {return nil ;};return model ;};func (_ggbbf *PdfReader )newPdfAnnotationHighlightFromDict (_cfb *_eag .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_dbaa :=PdfAnnotationHighlight {};
_cged ,_aae :=_ggbbf .newPdfAnnotationMarkupFromDict (_cfb );if _aae !=nil {return nil ,_aae ;};_dbaa .PdfAnnotationMarkup =_cged ;_dbaa .QuadPoints =_cfb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbaa ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_egac *Image )ToJBIG2Image ()(*_eag .JBIG2Image ,error ){_accd ,_acdeg :=_egac .ToGoImage ();if _acdeg !=nil {return nil ,_acdeg ;};return _eag .GoImageToJBIG2 (_accd ,_eag .JB2ImageAutoThreshold );};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_eag .PdfObjectArray ;TI *_eag .PdfObjectInteger ;I *_eag .PdfObjectArray ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eagec ,_ddga :=_eeb .NewStdFontByName (HelveticaName );if !_ddga {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fadb :=_geaf (_eagec );return &PdfFont {_dagg :&_fadb };};func (_cgegc *PdfWriter )writeNamesDictionary ()error {if _cgegc ._eecd ==nil {return nil ;};_bcbff :=_cgegc ._eecd .ToPdfObject ();_cgegc ._daegb .Set ("\u004e\u0061\u006de\u0073",_bcbff );_bceffc :=_cgegc .addObjects (_bcbff );
if _bceffc !=nil {return _bceffc ;};return nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eefe :=&PdfBorderStyle {};return _eefe };

// GetPage returns the PdfPage model for the specified page number.
func (_ecacb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ecacb ._afegd .GetCrypter ()!=nil &&!_ecacb ._afegd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ecacb ._cfffe )< pageNumber {return nil ,_bag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_fcbee :=pageNumber -1;if _fcbee < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fcadg :=_ecacb .PageList [_fcbee ];
return _fcadg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eae *PdfActionMovie )ToPdfObject ()_eag .PdfObject {_eae .PdfAction .ToPdfObject ();_bdf :=_eae ._ggd ;_dae :=_bdf .PdfObject .(*_eag .PdfObjectDictionary );_dae .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeMovie )));_dae .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eae .Annotation );
_dae .SetIfNotNil ("\u0054",_eae .T );_dae .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eae .Operation );return _bdf ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bfbdc *PdfFont )GetCharMetrics (code _gbf .CharCode )(CharMetrics ,bool ){var _feddd _eeb .CharMetrics ;switch _dcdad :=_bfbdc ._dagg .(type ){case *pdfFontSimple :if _cefg ,_cggbe :=_dcdad .GetCharMetrics (code );_cggbe {return _cefg ,_cggbe ;};
case *pdfFontType0 :if _cbeb ,_cdcde :=_dcdad .GetCharMetrics (code );_cdcde {return _cbeb ,_cdcde ;};case *pdfCIDFontType0 :if _gbedc ,_gbbf :=_dcdad .GetCharMetrics (code );_gbbf {return _gbedc ,_gbbf ;};case *pdfCIDFontType2 :if _face ,_gbafa :=_dcdad .GetCharMetrics (code );
_gbafa {return _face ,_gbafa ;};case *pdfFontType3 :if _fgac ,_abddc :=_dcdad .GetCharMetrics (code );_abddc {return _fgac ,_abddc ;};default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bfbdc ._dagg );
return _feddd ,false ;};if _beeef ,_effg :=_bfbdc .GetFontDescriptor ();_effg ==nil &&_beeef !=nil {return _eeb .CharMetrics {Wx :_beeef ._eeae },true ;};_ebdd .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bfbdc );
return _feddd ,false ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gbfd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_bbee *PdfReader )buildOutlineTree (_faeed _eag .PdfObject ,_agedf *PdfOutlineTreeNode ,_addgc *PdfOutlineTreeNode ,_bceff map[_eag .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bceff ==nil {_bceff =map[_eag .PdfObject ]struct{}{};
};_bceff [_faeed ]=struct{}{};_gdgga ,_dcgfe :=_faeed .(*_eag .PdfIndirectObject );if !_dcgfe {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_faeed );
};_fcgde ,_cgacg :=_gdgga .PdfObject .(*_eag .PdfObjectDictionary );if !_cgacg {return nil ,nil ,_bag .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebdd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fcgde ,_gdgga ,_gdgga );
if _ggcbd :=_fcgde .Get ("\u0054\u0069\u0074l\u0065");_ggcbd !=nil {_bacee ,_abfed :=_bbee .newPdfOutlineItemFromIndirectObject (_gdgga );if _abfed !=nil {return nil ,nil ,_abfed ;};_bacee .Parent =_agedf ;_bacee .Prev =_addgc ;_debcgf :=_eag .ResolveReference (_fcgde .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_afegf :=_bceff [_debcgf ];_debcgf !=nil &&_debcgf !=_gdgga &&!_afegf {if !_eag .IsNullObject (_debcgf ){_abfee ,_efegf ,_acfcc :=_bbee .buildOutlineTree (_debcgf ,&_bacee .PdfOutlineTreeNode ,nil ,_bceff );if _acfcc !=nil {_ebdd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_acfcc );
}else {_bacee .First =_abfee ;_bacee .Last =_efegf ;};};};_aafda :=_eag .ResolveReference (_fcgde .Get ("\u004e\u0065\u0078\u0074"));if _ ,_edae :=_bceff [_aafda ];_aafda !=nil &&_aafda !=_gdgga &&!_edae {if !_eag .IsNullObject (_aafda ){_gage ,_fggfc ,_egadd :=_bbee .buildOutlineTree (_aafda ,_agedf ,&_bacee .PdfOutlineTreeNode ,_bceff );
if _egadd !=nil {_ebdd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_egadd );
}else {_bacee .Next =_gage ;return &_bacee .PdfOutlineTreeNode ,_fggfc ,nil ;};};};return &_bacee .PdfOutlineTreeNode ,&_bacee .PdfOutlineTreeNode ,nil ;};_bbega ,_fcgg :=_adfa (_gdgga );if _fcgg !=nil {return nil ,nil ,_fcgg ;};_bbega .Parent =_agedf ;
if _afeca :=_fcgde .Get ("\u0046\u0069\u0072s\u0074");_afeca !=nil {_afeca =_eag .ResolveReference (_afeca );if _ ,_gbedb :=_bceff [_afeca ];_afeca !=nil &&_afeca !=_gdgga &&!_gbedb {_gdgd :=_eag .TraceToDirectObject (_afeca );if _ ,_cdbca :=_gdgd .(*_eag .PdfObjectNull );
!_cdbca &&_gdgd !=nil {_abcbe ,_ccdg ,_agbdd :=_bbee .buildOutlineTree (_afeca ,&_bbega .PdfOutlineTreeNode ,nil ,_bceff );if _agbdd !=nil {_ebdd .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_agbdd );
}else {_bbega .First =_abcbe ;_bbega .Last =_ccdg ;};};};};return &_bbega .PdfOutlineTreeNode ,&_bbega .PdfOutlineTreeNode ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_gcbc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fecc ,_ ,_bfacbg :=_gcbc .GetContentStreamWithEncoder ();return _fecc ,_bfacbg ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ccdc *_eag .PdfIndirectObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _eag .PdfObject ;LE _eag .PdfObject ;BS _eag .PdfObject ;IC _eag .PdfObject ;BE _eag .PdfObject ;IT _eag .PdfObject ;Measure _eag .PdfObject ;};func (_fcaf *PdfReader )newPdfAnnotationPopupFromDict (_dgcb *_eag .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cad :=PdfAnnotationPopup {};
_cad .Parent =_dgcb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cad .Open =_dgcb .Get ("\u004f\u0070\u0065\u006e");return &_cad ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_baefg *PdfPage )AppendContentStream (contentStr string )error {_bgaac ,_edacfc :=_baefg .GetContentStreams ();if _edacfc !=nil {return _edacfc ;};if len (_bgaac )==0{_bgaac =[]string {contentStr };return _baefg .SetContentStreams (_bgaac ,_eag .NewFlateEncoder ());
};var _fbdb _cf .Buffer ;_fbdb .WriteString (_bgaac [len (_bgaac )-1]);_fbdb .WriteString ("\u000a");_fbdb .WriteString (contentStr );_bgaac [len (_bgaac )-1]=_fbdb .String ();return _baefg .SetContentStreams (_bgaac ,_eag .NewFlateEncoder ());};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_eccce *PdfPattern )SetContext (ctx PdfModel ){_eccce ._aaaca =ctx };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbeb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _efgcaf ,_fdfe :=range _dbeb ._cbefd {_dbeb ._cbefd [_efgcaf ]=mapFunc (_fdfe );};};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_fabaf *DSS )GenerateHashMaps ()error {_feggg ,_ecff :=_fabaf .generateHashMap (_fabaf .Certs );if _ecff !=nil {return _ecff ;};_gggg ,_ecff :=_fabaf .generateHashMap (_fabaf .OCSPs );if _ecff !=nil {return _ecff ;};_dgae ,_ecff :=_fabaf .generateHashMap (_fabaf .CRLs );
if _ecff !=nil {return _ecff ;};_fabaf ._bdgdg =_feggg ;_fabaf ._bebg =_gggg ;_fabaf ._gbaf =_dgae ;return nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ecag :=NewPdfAnnotation ();_bgb :=&PdfAnnotationRichMedia {};_bgb .PdfAnnotation =_ecag ;_ecag .SetContext (_bgb );return _bgb ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fgbec *PdfTilingPattern )ToPdfObject ()_eag .PdfObject {_fgbec .PdfPattern .ToPdfObject ();_fdae :=_fgbec .getDict ();if _fgbec .PaintType !=nil {_fdae .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fgbec .PaintType );};if _fgbec .TilingType !=nil {_fdae .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fgbec .TilingType );
};if _fgbec .BBox !=nil {_fdae .Set ("\u0042\u0042\u006f\u0078",_fgbec .BBox .ToPdfObject ());};if _fgbec .XStep !=nil {_fdae .Set ("\u0058\u0053\u0074e\u0070",_fgbec .XStep );};if _fgbec .YStep !=nil {_fdae .Set ("\u0059\u0053\u0074e\u0070",_fgbec .YStep );
};if _fgbec .Resources !=nil {_fdae .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fgbec .Resources .ToPdfObject ());};if _fgbec .Matrix !=nil {_fdae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgbec .Matrix );};return _fgbec ._bcdbe ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_abb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _bag .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_cade :=field .V ;if _cade ==nil {return _bag .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ecfb :=pageNum -1;
if _ecfb < 0||_ecfb > len (_abb ._abag )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_efag :=_abb .Reader .PageList [_ecfb ];field .P =_efag .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_eag .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_efag .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _abb ._gaba ==_abb ._egeg .AcroForm {_abb ._gaba =_abb .Reader .AcroForm ;};_faac :=_abb ._gaba ;if _faac ==nil {_faac =NewPdfAcroForm ();};_faac .SigFlags =_eag .MakeInteger (3);if _faac .NeedAppearances !=nil {_faac .NeedAppearances =nil ;
};_bfgg :=append (_faac .AllFields (),field .PdfField );_faac .Fields =&_bfgg ;_abb .ReplaceAcroForm (_faac );_abb .UpdatePage (_efag );_abb ._abag [_ecfb ]=_efag ;if _ ,_ececc :=field .V .GetDocMDPPermission ();_ececc {_abb ._dcc =NewPermissions (field .V );
};return nil ;};func _gbdgb (_fegd _eag .PdfObject )(*PdfFunctionType3 ,error ){_eedd :=&PdfFunctionType3 {};var _bcbgb *_eag .PdfObjectDictionary ;if _feecf ,_fgafda :=_fegd .(*_eag .PdfIndirectObject );_fgafda {_dgdeeg ,_ggdbg :=_feecf .PdfObject .(*_eag .PdfObjectDictionary );
if !_ggdbg {return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eedd ._dcgf =_feecf ;_bcbgb =_dgdeeg ;}else if _ccbbe ,_eebeb :=_fegd .(*_eag .PdfObjectDictionary );_eebeb {_bcbgb =_ccbbe ;
}else {return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abdea ,_cafacc :=_eag .TraceToDirectObject (_bcbgb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eag .PdfObjectArray );if !_cafacc {_ebdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _abdea .Len ()!=2{_ebdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acga ,_fbed :=_abdea .ToFloat64Array ();if _fbed !=nil {return nil ,_fbed ;};_eedd .Domain =_acga ;_abdea ,_cafacc =_eag .TraceToDirectObject (_bcbgb .Get ("\u0052\u0061\u006eg\u0065")).(*_eag .PdfObjectArray );
if _cafacc {if _abdea .Len ()< 0||_abdea .Len ()%2!=0{return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cdda ,_acaafd :=_abdea .ToFloat64Array ();if _acaafd !=nil {return nil ,_acaafd ;};_eedd .Range =_cdda ;
};_abdea ,_cafacc =_eag .TraceToDirectObject (_bcbgb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_eag .PdfObjectArray );if !_cafacc {_ebdd .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eedd .Functions =[]PdfFunction {};
for _ ,_afbd :=range _abdea .Elements (){_gbcbg ,_gcafg :=_baaab (_afbd );if _gcafg !=nil {return nil ,_gcafg ;};_eedd .Functions =append (_eedd .Functions ,_gbcbg );};_abdea ,_cafacc =_eag .TraceToDirectObject (_bcbgb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_eag .PdfObjectArray );
if !_cafacc {_ebdd .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gefea ,_fbed :=_abdea .ToFloat64Array ();if _fbed !=nil {return nil ,_fbed ;};_eedd .Bounds =_gefea ;if len (_eedd .Bounds )!=len (_eedd .Functions )-1{_ebdd .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_eedd .Bounds ),len (_eedd .Functions ));
return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abdea ,_cafacc =_eag .TraceToDirectObject (_bcbgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_eag .PdfObjectArray );if !_cafacc {_ebdd .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_degdd ,_fbed :=_abdea .ToFloat64Array ();
if _fbed !=nil {return nil ,_fbed ;};_eedd .Encode =_degdd ;if len (_eedd .Encode )!=2*len (_eedd .Functions ){_ebdd .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_eedd .Encode ),len (_eedd .Functions ));
return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _eedd ,nil ;};var _bcfec =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_bgfaae *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bgfaae ._afegd .GetCrypter ()!=nil &&!_bgfaae ._afegd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_abddd :=_bgfaae ._adbgg ;_dbdg :=_abddd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dbdg ==nil {return nil ,nil ;};_ebdd .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gffb :=_eag .ResolveReference (_dbdg );
_ebdd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gffb );if _gcdc :=_eag .IsNullObject (_gffb );_gcdc {_ebdd .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_caffe ,_ddefe :=_gffb .(*_eag .PdfIndirectObject );if !_ddefe {if _ ,_gggcaa :=_eag .GetDict (_gffb );!_gggcaa {_ebdd .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ebdd .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_caffe =_eag .MakeIndirectObject (_gffb );};_bgbag ,_ddefe :=_caffe .PdfObject .(*_eag .PdfObjectDictionary );if !_ddefe {return nil ,_bag .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ebdd .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bgbag );_ccbdb ,_ ,_gbbg :=_bgfaae .buildOutlineTree (_caffe ,nil ,nil ,nil );if _gbbg !=nil {return nil ,_gbbg ;};_ebdd .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ccbdb );
return _ccbdb ,nil ;};func (_fafc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fafc ._ecdgfc ==nil &&_fafc .DescendantFont !=nil {return _fafc .DescendantFont .FontDescriptor ();};return _fafc ._ecdgfc ;};func _cbdab (_agcbdc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_agcbdc }};


// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_be .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_be .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_be .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cbdb *PdfAppender ;_cgcca *DSS ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _eag .PdfObjectName ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_cbde *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _cbde .Alternate ==nil {_ebdd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cbde .N ==1{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ffadd :=NewPdfColorspaceDeviceGray ();return _ffadd .ImageToRGB (img );}else if _cbde .N ==3{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _cbde .N ==4{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_begd :=NewPdfColorspaceDeviceCMYK ();return _begd .ImageToRGB (img );}else {return img ,_bag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ebdd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cbde );
_acac ,_gbde :=_cbde .Alternate .ImageToRGB (img );_ebdd .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ebdd .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_acac );
return _acac ,_gbde ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_fggf *pdfFontSimple )SetEncoder (encoder _gbf .TextEncoder ){_fggf ._defdg =encoder };

// SetFillImage attach a model.Image to push button.
func (_ddca *PdfFieldButton )SetFillImage (image *Image ){if _ddca .IsPush (){_ddca ._ggge =image ;};};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fefcb *PdfField )SetContext (ctx PdfModel ){_fefcb ._afdfd =ctx };func (_bdcda *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ecga :=_bdcda .Parent ;for _ecga !=nil {_gfaa ,_cfaee :=_eag .GetDict (_ecga );if !_cfaee {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_bag .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _egadf :=_gfaa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_egadf !=nil {_bfbga ,_febg :=_eag .GetDict (_egadf );
if !_febg {return nil ,_bag .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_gdbb ,_efbge :=NewPdfPageResourcesFromDict (_bfbga );if _efbge !=nil {return nil ,_efbge ;};return _gdbb ,nil ;
};_ecga =_gfaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// B returns the value of the B component of the color.
func (_gfbf *PdfColorLab )B ()float64 {return _gfbf [2]};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_eag .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _eag .PdfObject ;A _eag .PdfObject ;SE _eag .PdfObject ;C _eag .PdfObject ;F _eag .PdfObject ;
_ceecc *_eag .PdfIndirectObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bd .PSProgram ;_faeb *_bd .PSExecutor ;_fddg []byte ;_baca *_eag .PdfObjectStream ;};

// Add appends a top level outline item to the outline.
func (_ecfeb *Outline )Add (item *OutlineItem ){_ecfeb .Entries =append (_ecfeb .Entries ,item )};

// String returns a human readable description of `fontfile`.
func (_gaca *fontFile )String ()string {_fegfgg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gaca ._cefb !=nil {_fegfgg =_gaca ._cefb .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gaca ._gbcd ,_fegfgg );
};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_gcedc *PdfPageResources )GetContainingPdfObject ()_eag .PdfObject {return _gcedc ._aafeb };const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_agfae *PdfFont )BytesToCharcodes (data []byte )[]_gbf .CharCode {_ebdd .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cggb ,_gegcf :=_agfae ._dagg .(*pdfFontType0 );_gegcf &&_cggb ._geceg !=nil {if _egccb ,_faefd :=_cggb .bytesToCharcodes (data );_faefd {return _egccb ;};};var (_edfe =make ([]_gbf .CharCode ,0,len (data )+len (data )%2);_fadbe =_agfae .baseFields ();
);if _fadbe ._dccf !=nil {if _fdcgg ,_ebebc :=_fadbe ._dccf .BytesToCharcodes (data );_ebebc {for _ ,_aagg :=range _fdcgg {_edfe =append (_edfe ,_gbf .CharCode (_aagg ));};return _edfe ;};};if _fadbe .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _agcbd :=0;_agcbd < len (data );_agcbd +=2{_aeeg :=uint16 (data [_agcbd ])<<8|uint16 (data [_agcbd +1]);_edfe =append (_edfe ,_gbf .CharCode (_aeeg ));};}else {for _ ,_gadec :=range data {_edfe =append (_edfe ,_gbf .CharCode (_gadec ));
};};return _edfe ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ac .Permissions ;Algorithm EncryptionAlgorithm ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_efgec *PdfPattern )getDict ()*_eag .PdfObjectDictionary {if _bgbbb ,_fbeag :=_efgec ._bcdbe .(*_eag .PdfIndirectObject );_fbeag {_bagef ,_defaf :=_bgbbb .PdfObject .(*_eag .PdfObjectDictionary );
if !_defaf {return nil ;};return _bagef ;}else if _gcd ,_ebcdd :=_efgec ._bcdbe .(*_eag .PdfObjectStream );_ebcdd {return _gcd .PdfObjectDictionary ;}else {_ebdd .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_efgec ._bcdbe );
return nil ;};};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dbecb *PdfOutlineItem )GetContainingPdfObject ()_eag .PdfObject {return _dbecb ._ceecc };

// IsShading specifies if the pattern is a shading pattern.
func (_ddgfg *PdfPattern )IsShading ()bool {return _ddgfg .PatternType ==2};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cdfb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_eag .PdfParser ;DiffPolicy _fcg .DiffPolicy ;};func (_gcgfg *PdfWriter )writeDocumentVersion (){if _gcgfg ._fgfg {_gcgfg .writeString ("\u000a");}else {_gcgfg .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gcgfg ._ddcce .Major ,_gcgfg ._ddcce .Minor ));
_gcgfg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// IsColored specifies if the pattern is colored.
func (_ecbag *PdfTilingPattern )IsColored ()bool {if _ecbag .PaintType !=nil &&*_ecbag .PaintType ==1{return true ;};return false ;};

// ReplacePage replaces the original page to a new page.
func (_gece *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bbge :=pageNum -1;for _fcgf :=range _gece ._abag {if _fcgf ==_bbge {_cbgd :=page .Duplicate ();_ecfab (_cbgd );_gece ._abag [_fcgf ]=_cbgd ;};};};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _eag .PdfObject ;ColorSpace _eag .PdfObject ;Pattern _eag .PdfObject ;Shading _eag .PdfObject ;XObject _eag .PdfObject ;Font _eag .PdfObject ;ProcSet _eag .PdfObject ;Properties _eag .PdfObject ;_aafeb *_eag .PdfObjectDictionary ;
_dcbf *PdfPageResourcesColorspaces ;};func _bfggg (_cccdg *_eag .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dcgeb :=&PdfShadingPattern {};_faec :=_cccdg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _faec ==nil {_ebdd .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgabb ,_fagf :=_cbea (_faec );if _fagf !=nil {_ebdd .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fagf );return nil ,_fagf ;
};_dcgeb .Shading =_fgabb ;if _beff :=_cccdg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_beff !=nil {_ddfc ,_caefb :=_beff .(*_eag .PdfObjectArray );if !_caefb {_ebdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beff );
return nil ,_eag .ErrTypeError ;};_dcgeb .Matrix =_ddfc ;};if _afec :=_cccdg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_afec !=nil {_dcgeb .ExtGState =_afec ;};return _dcgeb ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_baea *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_agf ,_edcc :=color .(*PdfColorDeviceGray );if !_edcc {_ebdd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_agf ),float64 (*_agf ),float64 (*_agf )),nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_afbae *PdfPattern )IsTiling ()bool {return _afbae .PatternType ==1};type fontFile struct{_gbcd string ;_ecabd string ;_cefb _gbf .SimpleEncoder ;};func (_feb *PdfReader )newPdfActionGoTo3DViewFromDict (_egfa *_eag .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_egfa .Get ("\u0054\u0041"),V :_egfa .Get ("\u0056")},nil ;
};

// GetContentStreams returns the content stream as an array of strings.
func (_aede *PdfPage )GetContentStreams ()([]string ,error ){_gfead :=_aede .GetContentStreamObjs ();var _ffcab []string ;for _ ,_ggbac :=range _gfead {_dgecdd ,_aefbg :=_bfffg (_ggbac );if _aefbg !=nil {return nil ,_aefbg ;};_ffcab =append (_ffcab ,_dgecdd );
};return _ffcab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bebe *PdfAnnotationSquare )ToPdfObject ()_eag .PdfObject {_bebe .PdfAnnotation .ToPdfObject ();_dgce :=_bebe ._gfa ;_bdc :=_dgce .PdfObject .(*_eag .PdfObjectDictionary );if _bebe .PdfAnnotationMarkup !=nil {_bebe .PdfAnnotationMarkup .appendToPdfDictionary (_bdc );
};_bdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bdc .SetIfNotNil ("\u0042\u0053",_bebe .BS );_bdc .SetIfNotNil ("\u0049\u0043",_bebe .IC );_bdc .SetIfNotNil ("\u0042\u0045",_bebe .BE );
_bdc .SetIfNotNil ("\u0052\u0044",_bebe .RD );return _dgce ;};func (_eggb *PdfWriter )optimize ()error {if _eggb ._ceag ==nil {return nil ;};var _fgbfb error ;_eggb ._eggea ,_fgbfb =_eggb ._ceag .Optimize (_eggb ._eggea );if _fgbfb !=nil {return _fgbfb ;
};_gcgdg :=make (map[_eag .PdfObject ]struct{},len (_eggb ._eggea ));for _ ,_dcbea :=range _eggb ._eggea {_gcgdg [_dcbea ]=struct{}{};};_eggb ._fcced =_gcgdg ;return nil ;};func (_affge *PdfReader )traverseObjectData (_ecbc _eag .PdfObject )error {return _eag .ResolveReferencesDeep (_ecbc ,_affge ._dbcaa );
};func (_fdgdf *pdfFontType0 )subsetRegistered ()error {_cfgag ,_ccaf :=_fdgdf .DescendantFont ._dagg .(*pdfCIDFontType2 );if !_ccaf {_ebdd .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_fdgdf .DescendantFont );
return nil ;};if _cfgag ==nil {return nil ;};if _cfgag ._ecdgfc ==nil {_ebdd .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _fdgdf ._cege ==nil {_ebdd .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_accfc ,_ccaf :=_eag .GetStream (_cfgag ._ecdgfc .FontFile2 );if !_ccaf {_ebdd .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _bag .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bcgab ,_gafd :=_eag .DecodeStream (_accfc );if _gafd !=nil {_ebdd .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gafd );
return _gafd ;};_bbacb ,_gafd :=_gecc .Parse (_cf .NewReader (_bcgab ));if _gafd !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_accfc .Stream ));
return _gafd ;};var _dgcdb []rune ;var _bege *_gecc .Font ;switch _ggdf :=_fdgdf ._cege .(type ){case *_gbf .TrueTypeFontEncoder :_dgcdb =_ggdf .RegisteredRunes ();_bege ,_gafd =_bbacb .SubsetKeepRunes (_dgcdb );if _gafd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gafd );
return _gafd ;};_ggdf .SubsetRegistered ();case *_gbf .IdentityEncoder :_dgcdb =_ggdf .RegisteredRunes ();_edgfee :=make ([]_gecc .GlyphIndex ,len (_dgcdb ));for _cdac ,_fgfa :=range _dgcdb {_edgfee [_cdac ]=_gecc .GlyphIndex (_fgfa );};_bege ,_gafd =_bbacb .SubsetKeepIndices (_edgfee );
if _gafd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gafd );return _gafd ;};case _gbf .SimpleEncoder :_fefb :=_ggdf .Charcodes ();for _ ,_beagb :=range _fefb {_agcac ,_fdbfa :=_ggdf .CharcodeToRune (_beagb );if !_fdbfa {_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_beagb );
continue ;};_dgcdb =append (_dgcdb ,_agcac );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_fdgdf ._cege );
};var _efcfd _cf .Buffer ;_gafd =_bege .Write (&_efcfd );if _gafd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gafd );return _gafd ;};if _fdgdf ._dccf !=nil {_acf :=make (map[_cd .CharCode ]rune ,len (_dgcdb ));for _ ,_gggea :=range _dgcdb {_cgaad ,_cgbb :=_fdgdf ._cege .RuneToCharcode (_gggea );
if !_cgbb {continue ;};_acf [_cd .CharCode (_cgaad )]=_gggea ;};_fdgdf ._dccf =_cd .NewToUnicodeCMap (_acf );};_accfc ,_gafd =_eag .MakeStream (_efcfd .Bytes (),_eag .NewFlateEncoder ());if _gafd !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gafd );
return _gafd ;};_accfc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eag .MakeInteger (int64 (_efcfd .Len ())));if _acbaa ,_feag :=_eag .GetStream (_cfgag ._ecdgfc .FontFile2 );_feag {*_acbaa =*_accfc ;}else {_cfgag ._ecdgfc .FontFile2 =_accfc ;};_faaac :=_fada ();
if len (_fdgdf ._fgcc )> 0{_fdgdf ._fgcc =_ccbf (_fdgdf ._fgcc ,_faaac );};if len (_cfgag ._fgcc )> 0{_cfgag ._fgcc =_ccbf (_cfgag ._fgcc ,_faaac );};if len (_fdgdf ._afbf )> 0{_fdgdf ._afbf =_ccbf (_fdgdf ._afbf ,_faaac );};if _cfgag ._ecdgfc !=nil {_bcegdb ,_ceece :=_eag .GetName (_cfgag ._ecdgfc .FontName );
if _ceece &&len (_bcegdb .String ())> 0{_babc :=_ccbf (_bcegdb .String (),_faaac );_cfgag ._ecdgfc .FontName =_eag .MakeName (_babc );};};return nil ;};func (_gcbd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fbeg *_eag .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aaa :=PdfAnnotationFileAttachment {};
_ffcf ,_bbdg :=_gcbd .newPdfAnnotationMarkupFromDict (_fbeg );if _bbdg !=nil {return nil ,_bbdg ;};_aaa .PdfAnnotationMarkup =_ffcf ;_aaa .FS =_fbeg .Get ("\u0046\u0053");_aaa .Name =_fbeg .Get ("\u004e\u0061\u006d\u0065");return &_aaa ,nil ;};func _gdbe (_dcbgc _eag .PdfObject )*Names {_eccfg :=_fcbcc ();
_cgdbc :=_eag .TraceToDirectObject (_dcbgc ).(*_eag .PdfObjectDictionary );if _aega :=_cgdbc .Get ("\u0044\u0065\u0073t\u0073");_aega !=nil {_eccfg .Dests =_eag .TraceToDirectObject (_aega ).(*_eag .PdfObjectDictionary );};if _ebgc :=_cgdbc .Get ("\u0041\u0050");
_ebgc !=nil {_eccfg .AP =_eag .TraceToDirectObject (_ebgc ).(*_eag .PdfObjectDictionary );};if _edfde :=_cgdbc .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_edfde !=nil {_eccfg .JavaScript =_eag .TraceToDirectObject (_edfde ).(*_eag .PdfObjectDictionary );
};if _eddeb :=_cgdbc .Get ("\u0050\u0061\u0067e\u0073");_eddeb !=nil {_eccfg .Pages =_eag .TraceToDirectObject (_eddeb ).(*_eag .PdfObjectDictionary );};if _agcag :=_cgdbc .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_agcag !=nil {_eccfg .Templates =_eag .TraceToDirectObject (_agcag ).(*_eag .PdfObjectDictionary );
};if _bfed :=_cgdbc .Get ("\u0049\u0044\u0053");_bfed !=nil {_eccfg .IDS =_eag .TraceToDirectObject (_bfed ).(*_eag .PdfObjectDictionary );};if _bafdg :=_cgdbc .Get ("\u0055\u0052\u004c\u0053");_bafdg !=nil {_eccfg .URLS =_eag .TraceToDirectObject (_bafdg ).(*_eag .PdfObjectDictionary );
};if _cdec :=_cgdbc .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_cdec !=nil {_eccfg .EmbeddedFiles =_eag .TraceToDirectObject (_cdec ).(*_eag .PdfObjectDictionary );};if _dbfb :=_cgdbc .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_dbfb !=nil {_eccfg .AlternatePresentations =_eag .TraceToDirectObject (_dbfb ).(*_eag .PdfObjectDictionary );};if _cedgdg :=_cgdbc .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_cedgdg !=nil {_eccfg .Renditions =_eag .TraceToDirectObject (_cedgdg ).(*_eag .PdfObjectDictionary );
};return _eccfg ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bggbf *PdfAcroForm )ToPdfObject ()_eag .PdfObject {_cecd :=_bggbf ._cada ;_dfgff :=_cecd .PdfObject .(*_eag .PdfObjectDictionary );if _bggbf .Fields !=nil {_cdaba :=_eag .PdfObjectArray {};for _ ,_gfgbe :=range *_bggbf .Fields {_egga :=_gfgbe .GetContext ();
if _egga !=nil {_cdaba .Append (_egga .ToPdfObject ());}else {_cdaba .Append (_gfgbe .ToPdfObject ());};};_dfgff .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cdaba );};if _bggbf .NeedAppearances !=nil {_dfgff .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bggbf .NeedAppearances );
}else {if _cefad :=_dfgff .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cefad !=nil {_dfgff .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _bggbf .SigFlags !=nil {_dfgff .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bggbf .SigFlags );
};if _bggbf .CO !=nil {_dfgff .Set ("\u0043\u004f",_bggbf .CO );};if _bggbf .DR !=nil {_dfgff .Set ("\u0044\u0052",_bggbf .DR .ToPdfObject ());};if _bggbf .DA !=nil {_dfgff .Set ("\u0044\u0041",_bggbf .DA );};if _bggbf .Q !=nil {_dfgff .Set ("\u0051",_bggbf .Q );
};if _bggbf .XFA !=nil {_dfgff .Set ("\u0058\u0046\u0041",_bggbf .XFA );};if _bggbf .ADBEEchoSign !=nil {_dfgff .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_bggbf .ADBEEchoSign );};return _cecd ;};func _egbb (_eage *PdfPage )map[_eag .PdfObjectName ]_eag .PdfObject {_cbga :=make (map[_eag .PdfObjectName ]_eag .PdfObject );
if _eage .Resources ==nil {return _cbga ;};if _eage .Resources .Font !=nil {if _bdbd ,_ebfe :=_eag .GetDict (_eage .Resources .Font );_ebfe {for _ ,_cgae :=range _bdbd .Keys (){_cbga [_cgae ]=_bdbd .Get (_cgae );};};};if _eage .Resources .ExtGState !=nil {if _cfca ,_fccd :=_eag .GetDict (_eage .Resources .ExtGState );
_fccd {for _ ,_ecegb :=range _cfca .Keys (){_cbga [_ecegb ]=_cfca .Get (_ecegb );};};};if _eage .Resources .XObject !=nil {if _dgf ,_dede :=_eag .GetDict (_eage .Resources .XObject );_dede {for _ ,_fabb :=range _dgf .Keys (){_cbga [_fabb ]=_dgf .Get (_fabb );
};};};if _eage .Resources .Pattern !=nil {if _ecedd ,_cacf :=_eag .GetDict (_eage .Resources .Pattern );_cacf {for _ ,_ddgg :=range _ecedd .Keys (){_cbga [_ddgg ]=_ecedd .Get (_ddgg );};};};if _eage .Resources .Shading !=nil {if _bgcd ,_bcb :=_eag .GetDict (_eage .Resources .Shading );
_bcb {for _ ,_cfad :=range _bgcd .Keys (){_cbga [_cfad ]=_bgcd .Get (_cfad );};};};if _eage .Resources .ProcSet !=nil {if _cgfg ,_baafa :=_eag .GetDict (_eage .Resources .ProcSet );_baafa {for _ ,_bce :=range _cgfg .Keys (){_cbga [_bce ]=_cgfg .Get (_bce );
};};};if _eage .Resources .Properties !=nil {if _dbac ,_bgcg :=_eag .GetDict (_eage .Resources .Properties );_bgcg {for _ ,_cafe :=range _dbac .Keys (){_cbga [_cafe ]=_dbac .Get (_cafe );};};};return _cbga ;};func (_ebcd *PdfReader )newPdfAnnotationCaretFromDict (_afccb *_eag .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gbec :=PdfAnnotationCaret {};
_ggdb ,_bdge :=_ebcd .newPdfAnnotationMarkupFromDict (_afccb );if _bdge !=nil {return nil ,_bdge ;};_gbec .PdfAnnotationMarkup =_ggdb ;_gbec .RD =_afccb .Get ("\u0052\u0044");_gbec .Sy =_afccb .Get ("\u0053\u0079");return &_gbec ,nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gfaae *PdfWriter )SetCatalogMetadata (meta _eag .PdfObject )error {if meta ==nil {_gfaae ._daegb .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_fcgfe ,_ccdga :=_eag .GetStream (meta );if !_ccdga {return _bag .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gfaae .addObject (_fcgfe );_gfaae ._daegb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fcgfe );return nil ;};func _efgdc (_ffab *_eag .PdfObjectDictionary ,_gefgb *fontCommon ,_acfe _gbf .TextEncoder )(*pdfFontSimple ,error ){_cegg :=_cabb (_gefgb );
_cegg ._ddggb =_acfe ;if _acfe ==nil {_decg :=_ffab .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _decg ==nil {_decg =_eag .MakeInteger (0);};_cegg .FirstChar =_decg ;_afgg ,_cgdd :=_eag .GetIntVal (_decg );if !_cgdd {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_decg );
return nil ,_eag .ErrTypeError ;};_eeaf :=_gbf .CharCode (_afgg );_decg =_ffab .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _decg ==nil {_decg =_eag .MakeInteger (255);};_cegg .LastChar =_decg ;_afgg ,_cgdd =_eag .GetIntVal (_decg );if !_cgdd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_decg );
return nil ,_eag .ErrTypeError ;};_cecbdd :=_gbf .CharCode (_afgg );_cegg ._fgdd =make (map[_gbf .CharCode ]float64 );_decg =_ffab .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _decg !=nil {_cegg .Widths =_decg ;_cgbdb ,_ccfg :=_eag .GetArray (_decg );
if !_ccfg {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_decg );return nil ,_eag .ErrTypeError ;
};_dceaa ,_bagc :=_cgbdb .ToFloat64Array ();if _bagc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bagc ;};if len (_dceaa )!=int (_cecbdd -_eeaf +1){_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cecbdd -_eeaf +1,len (_dceaa ));
return nil ,_eag .ErrRangeError ;};for _ffbf ,_fbfc :=range _dceaa {_cegg ._fgdd [_eeaf +_gbf .CharCode (_ffbf )]=_fbfc ;};};};_cegg .Encoding =_eag .TraceToDirectObject (_ffab .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cegg ,nil ;
};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _eag .PdfObject ;T _eag .PdfObject ;Operation _eag .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bedgd *PdfShadingType5 )ToPdfObject ()_eag .PdfObject {_bedgd .PdfShading .ToPdfObject ();_bfgfe ,_eede :=_bedgd .getShadingDict ();if _eede !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bedgd .BitsPerCoordinate !=nil {_bfgfe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bedgd .BitsPerCoordinate );};if _bedgd .BitsPerComponent !=nil {_bfgfe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bedgd .BitsPerComponent );
};if _bedgd .VerticesPerRow !=nil {_bfgfe .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bedgd .VerticesPerRow );};if _bedgd .Decode !=nil {_bfgfe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bedgd .Decode );};
if _bedgd .Function !=nil {if len (_bedgd .Function )==1{_bfgfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bedgd .Function [0].ToPdfObject ());}else {_beged :=_eag .MakeArray ();for _ ,_egfad :=range _bedgd .Function {_beged .Append (_egfad .ToPdfObject ());
};_bfgfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beged );};};return _bedgd ._aadgg ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dcgf *_eag .PdfIndirectObject ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_ddgga *LTV )EnableChain (chain []*_ed .Certificate )error {return _ddgga .enable (nil ,chain ,"")};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_cgbca *PdfWriter )AddPage (page *PdfPage )error {const _gagad ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ecfab (page );_acffe :=page .ToPdfObject ();_ebdd .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ebdd .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_acffe );_aagaa ,_dfegd :=_eag .GetIndirect (_acffe );if !_dfegd {return _bag .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ebdd .Log .Trace ("\u0025\u0073",_aagaa );_ebdd .Log .Trace ("\u0025\u0073",_aagaa .PdfObject );_cbfg ,_dfegd :=_eag .GetDict (_aagaa .PdfObject );if !_dfegd {return _bag .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffdfe ,_dfegd :=_eag .GetName (_cbfg .Get ("\u0054\u0079\u0070\u0065"));if !_dfegd {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cbfg .Get ("\u0054\u0079\u0070\u0065"));
};if _ffdfe .String ()!="\u0050\u0061\u0067\u0065"{return _bag .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bedd :=[]_eag .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ddebb ,_agbca :=_eag .GetIndirect (_cbfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ebdd .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cbfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_agbca );
for _agbca {_ebdd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddebb );_bfdb ,_efgbb :=_eag .GetDict (_ddebb .PdfObject );if !_efgbb {return _bag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ebddd :=range _bedd {_ebdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebddd );if _cbfg .Get (_ebddd )!=nil {_ebdd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fcdca :=_bfdb .Get (_ebddd );_fcdca !=nil {_ebdd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebddd );_cbfg .Set (_ebddd ,_fcdca );};};_ddebb ,_agbca =_eag .GetIndirect (_bfdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ebdd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ebdd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_cbfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgbca ._gcedb );_aagaa .PdfObject =_cbfg ;_bcbag ,_dfegd :=_eag .GetDict (_cgbca ._gcedb .PdfObject );if !_dfegd {return _bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gbggd ,_dfegd :=_eag .GetArray (_bcbag .Get ("\u004b\u0069\u0064\u0073"));if !_dfegd {return _bag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gbggd .Append (_aagaa );_cgbca ._gcbbbd [_cbfg ]=struct{}{};_afdag ,_dfegd :=_eag .GetInt (_bcbag .Get ("\u0043\u006f\u0075n\u0074"));if !_dfegd {return _bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_afdag =*_afdag +1;if page ._adgb ==nil {_dbdbcb :=_bda .Track (_cgbca ._aadea ,_gagad );if _dbdbcb !=nil {return _dbdbcb ;};}else {_cdfed :=_bda .Track (page ._adgb ._egeca ,_gagad );if _cdfed !=nil {return _cdfed ;};};_cgbca .addObject (_aagaa );_bgcdd :=_cgbca .addObjects (_cbfg );
if _bgcdd !=nil {return _bgcdd ;};return nil ;};func _dfffc (_bcff _eag .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fcgcg :=&PdfPageResourcesColorspaces {};if _dfbbac ,_bfbdaa :=_bcff .(*_eag .PdfIndirectObject );_bfbdaa {_fcgcg ._egdac =_dfbbac ;
_bcff =_dfbbac .PdfObject ;};_cgfcb ,_fdbcf :=_eag .GetDict (_bcff );if !_fdbcf {return nil ,_bag .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fcgcg .Names =[]string {};
_fcgcg .Colorspaces =map[string ]PdfColorspace {};for _ ,_eccec :=range _cgfcb .Keys (){_gbgae :=_cgfcb .Get (_eccec );_fcgcg .Names =append (_fcgcg .Names ,string (_eccec ));_edbf ,_ffcee :=NewPdfColorspaceFromPdfObject (_gbgae );if _ffcee !=nil {return nil ,_ffcee ;
};_fcgcg .Colorspaces [string (_eccec )]=_edbf ;};return _fcgcg ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_cegf *PdfRectangle )ToPdfObject ()_eag .PdfObject {return _eag .MakeArray (_eag .MakeFloat (_cegf .Llx ),_eag .MakeFloat (_cegf .Lly ),_eag .MakeFloat (_cegf .Urx ),_eag .MakeFloat (_cegf .Ury ));};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dbcaa :map[_eag .PdfObject ]struct{}{},_gbada :_ffge (),_afegd :_eag .NewParserFromString (txt )};};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ecba :=NewPdfAnnotation ();_ccb :=&PdfAnnotationText {};_ccb .PdfAnnotation =_ecba ;_ccb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecba .SetContext (_ccb );return _ccb ;};

// Initialize initializes the PdfSignature.
func (_aafee *PdfSignature )Initialize ()error {if _aafee .Handler ==nil {return _bag .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _aafee .Handler .InitSignature (_aafee );};

// ToInteger convert to an integer format.
func (_adgad *PdfColorCalGray )ToInteger (bits int )uint32 {_decdd :=_gcg .Pow (2,float64 (bits ))-1;return uint32 (_decdd *_adgad .Val ());};func (_ggfbd *PdfWriter )writeObjectsInStreams (_fgggd map[_eag .PdfObject ]bool )error {for _ ,_cbecgf :=range _ggfbd ._eggea {if _afgaa :=_fgggd [_cbecgf ];
_afgaa {continue ;};_cfacdb :=int64 (0);switch _eafccg :=_cbecgf .(type ){case *_eag .PdfIndirectObject :_cfacdb =_eafccg .ObjectNumber ;case *_eag .PdfObjectStream :_cfacdb =_eafccg .ObjectNumber ;case *_eag .PdfObjectStreams :_cfacdb =_eafccg .ObjectNumber ;
case *_eag .PdfObjectReference :_cfacdb =_eafccg .ObjectNumber ;case *_eag .PdfObjectDictionary ,*_eag .PdfObjectString :default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_cbecgf ,_eafccg );
return ErrTypeCheck ;};if _ggfbd ._ffbfg !=nil &&_cbecgf !=_ggfbd ._agdeb {_fabdc :=_ggfbd ._ffbfg .Encrypt (_cbecgf ,_cfacdb ,0);if _fabdc !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_fabdc );
return _fabdc ;};};_ggfbd .writeObject (int (_cfacdb ),_cbecgf );};return nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_aecc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aecc .Alternate ==nil {_ebdd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _aecc .N ==1{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bgfb :=NewPdfColorspaceDeviceGray ();return _bgfb .ColorToRGB (color );}else if _aecc .N ==3{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _aecc .N ==4{_ebdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ddfga :=NewPdfColorspaceDeviceCMYK ();return _ddfga .ColorToRGB (color );}else {return nil ,_bag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ebdd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_aecc );
return _aecc .Alternate .ColorToRGB (color );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_egcd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecbdg ,_ddfbb :=_eag .GetNumbersAsFloat (objects );
if _ddfbb !=nil {return nil ,_ddfbb ;};return _egcd .ColorFromFloats (_ecbdg );};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_fffa *XObjectImage )GetContainingPdfObject ()_eag .PdfObject {return _fffa ._cgfecg };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dfae *PdfAppender )UpdatePage (page *PdfPage ){_dfae .updateObjectsDeep (page .ToPdfObject (),nil )};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gbgb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ddbfe []float64 ;for _bcdaa :=0;_bcdaa < _gbgb .GetNumComponents ();_bcdaa ++{_ddbfe =append (_ddbfe ,0.0,1.0);};return _ddbfe ;};

// HasExtGState checks if ExtGState name is available.
func (_dfgae *PdfPage )HasExtGState (name _eag .PdfObjectName )bool {if _dfgae .Resources ==nil {return false ;};if _dfgae .Resources .ExtGState ==nil {return false ;};_dcgfb ,_fefg :=_eag .TraceToDirectObject (_dfgae .Resources .ExtGState ).(*_eag .PdfObjectDictionary );
if !_fefg {_ebdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_eag .TraceToDirectObject (_dfgae .Resources .ExtGState ));
return false ;};_gdbcg :=_dcgfb .Get (name );_ebae :=_gdbcg !=nil ;return _ebae ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_aaeee *_eag .PdfObjectDictionary ;Type *_eag .PdfObjectName ;TransformMethod *_eag .PdfObjectName ;TransformParams _eag .PdfObject ;Data _eag .PdfObject ;DigestMethod *_eag .PdfObjectName ;};func (_abgf *PdfReader )newPdfFieldFromIndirectObject (_geeb *_eag .PdfIndirectObject ,_dfdce *PdfField )(*PdfField ,error ){if _bbggd ,_fbgg :=_abgf ._gbada .GetModelFromPrimitive (_geeb ).(*PdfField );
_fbgg {return _bbggd ,nil ;};_daeg ,_afeb :=_eag .GetDict (_geeb );if !_afeb {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bfcc :=NewPdfField ();_bfcc ._eebf =_geeb ;_bfcc ._eebf .PdfObject =_daeg ;if _beba ,_gcca :=_eag .GetName (_daeg .Get ("\u0046\u0054"));_gcca {_bfcc .FT =_beba ;};if _dfdce !=nil {_bfcc .Parent =_dfdce ;};_bfcc .T ,_ =_daeg .Get ("\u0054").(*_eag .PdfObjectString );
_bfcc .TU ,_ =_daeg .Get ("\u0054\u0055").(*_eag .PdfObjectString );_bfcc .TM ,_ =_daeg .Get ("\u0054\u004d").(*_eag .PdfObjectString );_bfcc .Ff ,_ =_daeg .Get ("\u0046\u0066").(*_eag .PdfObjectInteger );_bfcc .V =_daeg .Get ("\u0056");_bfcc .DV =_daeg .Get ("\u0044\u0056");
_bfcc .AA =_daeg .Get ("\u0041\u0041");if DA :=_daeg .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_eag .GetString (DA );_bfcc .VariableText =&VariableText {DA :DA };Q ,_ :=_daeg .Get ("\u0051").(*_eag .PdfObjectInteger );DS ,_ :=_daeg .Get ("\u0044\u0053").(*_eag .PdfObjectString );
RV :=_daeg .Get ("\u0052\u0056");_bfcc .VariableText .Q =Q ;_bfcc .VariableText .DS =DS ;_bfcc .VariableText .RV =RV ;};_ced :=_bfcc .FT ;if _ced ==nil &&_dfdce !=nil {_ced =_dfdce .FT ;};if _ced !=nil {switch *_ced {case "\u0054\u0078":_cafa ,_dacff :=_addd (_daeg );
if _dacff !=nil {return nil ,_dacff ;};_cafa .PdfField =_bfcc ;_bfcc ._afdfd =_cafa ;case "\u0043\u0068":_gfcce ,_gdca :=_fcad (_daeg );if _gdca !=nil {return nil ,_gdca ;};_gfcce .PdfField =_bfcc ;_bfcc ._afdfd =_gfcce ;case "\u0042\u0074\u006e":_bgca ,_faffcc :=_egcbc (_daeg );
if _faffcc !=nil {return nil ,_faffcc ;};_bgca .PdfField =_bfcc ;_bfcc ._afdfd =_bgca ;case "\u0053\u0069\u0067":_dedb ,_fdfc :=_abgf .newPdfFieldSignatureFromDict (_daeg );if _fdfc !=nil {return nil ,_fdfc ;};_dedb .PdfField =_bfcc ;_bfcc ._afdfd =_dedb ;
default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bfcc .FT );return nil ,_bag .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gcgfa ,_afdg :=_eag .GetName (_daeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_afdg {if *_gcgfa =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bfbd ,_bdgde :=_abgf .newPdfAnnotationFromIndirectObject (_geeb );if _bdgde !=nil {return nil ,_bdgde ;
};_aabf ,_cadg :=_bfbd .GetContext ().(*PdfAnnotationWidget );if !_cadg {return nil ,_bag .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_aabf ._bgda =_bfcc ;_aabf .Parent =_bfcc ._eebf ;
_bfcc .Annotations =append (_bfcc .Annotations ,_aabf );return _bfcc ,nil ;};};_cfcfb :=true ;if _ggdea ,_abbe :=_eag .GetArray (_daeg .Get ("\u004b\u0069\u0064\u0073"));_abbe {_efba :=make ([]*_eag .PdfIndirectObject ,0,_ggdea .Len ());for _ ,_ddeb :=range _ggdea .Elements (){_abde ,_aebcg :=_eag .GetIndirect (_ddeb );
if !_aebcg {_gegeg ,_fagd :=_eag .GetStream (_ddeb );if _fagd &&_gegeg .PdfObjectDictionary !=nil {_gebd ,_cbfe :=_eag .GetNameVal (_gegeg .Get ("\u0054\u0079\u0070\u0065"));if _cbfe &&_gebd =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ebdd .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_bag .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cgebc ,_cagab :=_eag .GetDict (_abde );
if !_cagab {return nil ,ErrTypeCheck ;};if _cfcfb {_cfcfb =!_ffcef (_cgebc );};_efba =append (_efba ,_abde );};for _ ,_acdb :=range _efba {if _cfcfb {_fgadg ,_gcbbf :=_abgf .newPdfAnnotationFromIndirectObject (_acdb );if _gcbbf !=nil {_ebdd .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gcbbf );
return nil ,_gcbbf ;};_adea ,_eaad :=_fgadg ._bga .(*PdfAnnotationWidget );if !_eaad {return nil ,ErrTypeCheck ;};_adea ._bgda =_bfcc ;_bfcc .Annotations =append (_bfcc .Annotations ,_adea );}else {_baaa ,_dega :=_abgf .newPdfFieldFromIndirectObject (_acdb ,_bfcc );
if _dega !=nil {_ebdd .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_dega );return nil ,_dega ;};_bfcc .Kids =append (_bfcc .Kids ,_baaa );
};};};return _bfcc ,nil ;};

// SetAnnotations sets the annotations list.
func (_bdcc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_bdcc ._bcebb =annotations };

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gecd *PdfFieldChoice )ToPdfObject ()_eag .PdfObject {_gecd .PdfField .ToPdfObject ();_dfee :=_gecd ._eebf ;_cdgd :=_dfee .PdfObject .(*_eag .PdfObjectDictionary );_cdgd .Set ("\u0046\u0054",_eag .MakeName ("\u0043\u0068"));if _gecd .Opt !=nil {_cdgd .Set ("\u004f\u0070\u0074",_gecd .Opt );
};if _gecd .TI !=nil {_cdgd .Set ("\u0054\u0049",_gecd .TI );};if _gecd .I !=nil {_cdgd .Set ("\u0049",_gecd .I );};return _dfee ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cccbb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ebdd .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ebdd .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ebdd .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ebdd .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bbfe ,_gaga :=_fde .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbefd ,img ._dadbe );if _gaga !=nil {return Image {},_gaga ;};_afag ,_gaga :=_fde .NRGBAConverter .Convert (_bbfe );
if _gaga !=nil {return Image {},_gaga ;};return _ecfe (_afag .Base ()),nil ;};

// K returns the value of the key component of the color.
func (_dcdd *PdfColorDeviceCMYK )K ()float64 {return _dcdd [3]};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _eag .StreamEncoder )(*XObjectImage ,error ){_cegfd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cegfd ,img ,cs ,encoder );};func (_cgaa *PdfReader )flattenFieldsWithOpts (_eacfg bool ,_aabb FieldAppearanceGenerator ,_eegd *FieldFlattenOpts )error {if _eegd ==nil {_eegd =&FieldFlattenOpts {};
};var _cdgdb bool ;_dfbec :=map[*PdfAnnotation ]bool {};{var _gcfc []*PdfField ;_ddgge :=_cgaa .AcroForm ;if _ddgge !=nil {if _eegd .FilterFunc !=nil {_gcfc =_ddgge .filteredFields (_eegd .FilterFunc ,true );_cdgdb =_ddgge .Fields !=nil &&len (*_ddgge .Fields )> 0;
}else {_gcfc =_ddgge .AllFields ();};};for _ ,_cecgc :=range _gcfc {if len (_cecgc .Annotations )< 1{_ebdd .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_cecgc .PartialName ());
for _dagd ,_ddab :=range _cecgc .Kids {for _ ,_cddb :=range _ddab .Annotations {_dfbec [_cddb .PdfAnnotation ]=_cecgc .V !=nil ;if _ddab .V ==nil {_ddab .V =_cecgc .V ;};if _ddab .T ==nil {_ddab .T =_eag .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_cecgc .PartialName (),_dagd ));
};if _aabb !=nil {_ffga ,_afdbd :=_aabb .GenerateAppearanceDict (_ddgge ,_ddab ,_cddb );if _afdbd !=nil {return _afdbd ;};_cddb .AP =_ffga ;};};};};for _ ,_fgadga :=range _cecgc .Annotations {_dfbec [_fgadga .PdfAnnotation ]=_cecgc .V !=nil ;if _aabb !=nil {_ggbbfd ,_bfec :=_aabb .GenerateAppearanceDict (_ddgge ,_cecgc ,_fgadga );
if _bfec !=nil {return _bfec ;};_fgadga .AP =_ggbbfd ;};};};};if _eacfg {for _ ,_deebd :=range _cgaa .PageList {_bcbf ,_ffdga :=_deebd .GetAnnotations ();if _ffdga !=nil {return _ffdga ;};for _ ,_dggec :=range _bcbf {_dfbec [_dggec ]=true ;};};};for _ ,_efeag :=range _cgaa .PageList {_cedg :=_efeag .flattenFieldsWithOpts (_aabb ,_eegd ,_dfbec );
if _cedg !=nil {return _cedg ;};};if !_cdgdb {_cgaa .AcroForm =nil ;};return nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cgffa *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cgffa ._dcbf =colorspace ;};func (_ggdef *PdfReader )newPdfAnnotation3DFromDict (_cfd *_eag .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_bcf :=PdfAnnotation3D {};
_bcf .T3DD =_cfd .Get ("\u0033\u0044\u0044");_bcf .T3DV =_cfd .Get ("\u0033\u0044\u0056");_bcf .T3DA =_cfd .Get ("\u0033\u0044\u0041");_bcf .T3DI =_cfd .Get ("\u0033\u0044\u0049");_bcf .T3DB =_cfd .Get ("\u0033\u0044\u0042");return &_bcf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfAnnotationInk )ToPdfObject ()_eag .PdfObject {_fef .PdfAnnotation .ToPdfObject ();_fbaa :=_fef ._gfa ;_ffdg :=_fbaa .PdfObject .(*_eag .PdfObjectDictionary );_fef .PdfAnnotationMarkup .appendToPdfDictionary (_ffdg );_ffdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0049\u006e\u006b"));
_ffdg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fef .InkList );_ffdg .SetIfNotNil ("\u0042\u0053",_fef .BS );return _fbaa ;};func _dabgb (_bccfa *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_bccfa }};

// Reset sets the multi font encoder to its initial state.
func (_ggggb *MultipleFontEncoder )Reset (){_ggggb .CurrentFont =_ggggb ._ebfgc [0]};

// ToPdfObject implements interface PdfModel.
func (_fg *PdfActionJavaScript )ToPdfObject ()_eag .PdfObject {_fg .PdfAction .ToPdfObject ();_gce :=_fg ._ggd ;_fda :=_gce .PdfObject .(*_eag .PdfObjectDictionary );_fda .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeJavaScript )));_fda .SetIfNotNil ("\u004a\u0053",_fg .JS );
return _gce ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ceff *PdfPage )AddContentStreamByString (contentStr string )error {_bfacb ,_geada :=_eag .MakeStream ([]byte (contentStr ),_eag .NewFlateEncoder ());if _geada !=nil {return _geada ;};if _ceff .Contents ==nil {_ceff .Contents =_bfacb ;}else {_cfgg :=_eag .TraceToDirectObject (_ceff .Contents );
_ccddb ,_fgadd :=_cfgg .(*_eag .PdfObjectArray );if !_fgadd {_ccddb =_eag .MakeArray (_cfgg );};_ccddb .Append (_bfacb );_ceff .Contents =_ccddb ;};return nil ;};func (_bdabe *PdfAcroForm )fillImageWithAppearance (_egda FieldImageProvider ,_ccebb FieldAppearanceGenerator )error {if _bdabe ==nil {return nil ;
};_abgfa ,_dgbec :=_egda .FieldImageValues ();if _dgbec !=nil {return _dgbec ;};for _ ,_gaeg :=range _bdabe .AllFields (){_eebeg :=_gaeg .PartialName ();_agba ,_dgbff :=_abgfa [_eebeg ];if !_dgbff {if _geeba ,_bfbc :=_gaeg .FullName ();_bfbc ==nil {_agba ,_dgbff =_abgfa [_geeba ];
};};if !_dgbff {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_eebeg );
continue ;};switch _cagge :=_gaeg .GetContext ().(type ){case *PdfFieldButton :if _cagge .IsPush (){_cagge .SetFillImage (_agba );};};if _ccebb ==nil {continue ;};for _ ,_edabc :=range _gaeg .Annotations {_ffcff ,_fgcce :=_ccebb .GenerateAppearanceDict (_bdabe ,_gaeg ,_edabc );
if _fgcce !=nil {return _fgcce ;};_edabc .AP =_ffcff ;_edabc .ToPdfObject ();};};return nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ffbfe *XObjectForm )SetContentStream (content []byte ,encoder _eag .StreamEncoder )error {_accaa :=content ;if encoder ==nil {if _ffbfe .Filter !=nil {encoder =_ffbfe .Filter ;}else {encoder =_eag .NewRawEncoder ();};};_efdcd ,_cebf :=encoder .EncodeBytes (_accaa );
if _cebf !=nil {return _cebf ;};_accaa =_efdcd ;_ffbfe .Stream =_accaa ;_ffbfe .Filter =encoder ;return nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _eag .PdfObject ;Flags _eag .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dagc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// C returns the value of the C component of the color.
func (_cgeda *PdfColorCalRGB )C ()float64 {return _cgeda [2]};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ccffg *PdfColorspaceSpecialPattern )ToPdfObject ()_eag .PdfObject {if _ccffg .UnderlyingCS ==nil {return _eag .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gaac :=_eag .MakeArray (_eag .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_gaac .Append (_ccffg .UnderlyingCS .ToPdfObject ());if _ccffg ._ccdc !=nil {_ccffg ._ccdc .PdfObject =_gaac ;return _ccffg ._ccdc ;};return _gaac ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_affeae *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _affeae ._afegd .GetRevisionNumber ()==0{return nil ,_bag .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _dgfgf ,_cgagf :=_affeae ._edef [_affeae ];_cgagf {return _dgfgf ,nil ;};_efcdd ,_acdaeb :=_affeae ._afegd .GetPreviousRevisionReadSeeker ();if _acdaeb !=nil {return nil ,_acdaeb ;};_cfefe ,_acdaeb :=_dgbcf (_efcdd ,_affeae ._ggcb ,_affeae ._agdfg ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _acdaeb !=nil {return nil ,_acdaeb ;};_affeae ._dbeag [_affeae ._afegd .GetRevisionNumber ()-1]=_cfefe ;_affeae ._edef [_affeae ]=_cfefe ;_cfefe ._edef =_affeae ._edef ;return _cfefe ,nil ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_bdda *_eag .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_eag .PdfObjectName ;Filter *_eag .PdfObjectName ;SubFilter *_eag .PdfObjectName ;Contents *_eag .PdfObjectString ;Cert _eag .PdfObject ;ByteRange *_eag .PdfObjectArray ;Reference *_eag .PdfObjectArray ;Changes *_eag .PdfObjectArray ;Name *_eag .PdfObjectString ;
M *_eag .PdfObjectString ;Location *_eag .PdfObjectString ;Reason *_eag .PdfObjectString ;ContactInfo *_eag .PdfObjectString ;R *_eag .PdfObjectInteger ;V *_eag .PdfObjectInteger ;PropBuild *_eag .PdfObjectDictionary ;PropAuthTime *_eag .PdfObjectInteger ;
PropAuthType *_eag .PdfObjectName ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gafbb *Image )SetSamples (samples []uint32 ){if _gafbb .BitsPerComponent < 8{samples =_gafbb .samplesAddPadding (samples );};_feceg :=_dba .ResampleUint32 (samples ,int (_gafbb .BitsPerComponent ),8);_gcbba :=make ([]byte ,len (_feceg ));for _bdeab ,_gaeaf :=range _feceg {_gcbba [_bdeab ]=byte (_gaeaf );
};_gafbb .Data =_gcbba ;};func _cbec (_gdcg _eag .PdfObject )(*PdfColorspaceDeviceN ,error ){_dgcea :=NewPdfColorspaceDeviceN ();if _cfceg ,_dece :=_gdcg .(*_eag .PdfIndirectObject );_dece {_dgcea ._abdg =_cfceg ;};_gdcg =_eag .TraceToDirectObject (_gdcg );
_gbfce ,_bdgd :=_gdcg .(*_eag .PdfObjectArray );if !_bdgd {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _gbfce .Len ()!=4&&_gbfce .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gdcg =_gbfce .Get (0);_gcecf ,_bdgd :=_gdcg .(*_eag .PdfObjectName );if !_bdgd {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gcecf !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gdcg =_gbfce .Get (1);
_gdcg =_eag .TraceToDirectObject (_gdcg );_ggfdd ,_bdgd :=_gdcg .(*_eag .PdfObjectArray );if !_bdgd {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_dgcea .ColorantNames =_ggfdd ;_gdcg =_gbfce .Get (2);_gaeb ,_adb :=NewPdfColorspaceFromPdfObject (_gdcg );if _adb !=nil {return nil ,_adb ;};_dgcea .AlternateSpace =_gaeb ;_cdccb ,_adb :=_baaab (_gbfce .Get (3));if _adb !=nil {return nil ,_adb ;};_dgcea .TintTransform =_cdccb ;
if _gbfce .Len ()==5{_geddd ,_dgcg :=_gcagd (_gbfce .Get (4));if _dgcg !=nil {return nil ,_dgcg ;};_dgcea .Attributes =_geddd ;};return _dgcea ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_agaf *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _agaf .Range };

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_caecb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _eag .GetNumberAsFloat (_caecb .CapHeight );};func (_bdfg *PdfReader )newPdfAnnotationMarkupFromDict (_fcf *_eag .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_age :=&PdfAnnotationMarkup {};
if _bdab :=_fcf .Get ("\u0054");_bdab !=nil {_age .T =_bdab ;};if _eabc :=_fcf .Get ("\u0050\u006f\u0070u\u0070");_eabc !=nil {_bcga ,_fbe :=_eabc .(*_eag .PdfIndirectObject );if !_fbe {if _ ,_beec :=_eabc .(*_eag .PdfObjectNull );!_beec {return nil ,_bag .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_bbb ,_gff :=_bdfg .newPdfAnnotationFromIndirectObject (_bcga );if _gff !=nil {return nil ,_gff ;};if _bbb !=nil {_bdd ,_bcdf :=_bbb ._bga .(*PdfAnnotationPopup );if !_bcdf {return nil ,_bag .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_age .Popup =_bdd ;};};};if _ebfc :=_fcf .Get ("\u0043\u0041");_ebfc !=nil {_age .CA =_ebfc ;};if _degg :=_fcf .Get ("\u0052\u0043");_degg !=nil {_age .RC =_degg ;};if _agec :=_fcf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_agec !=nil {_age .CreationDate =_agec ;};if _bgaf :=_fcf .Get ("\u0049\u0052\u0054");_bgaf !=nil {_age .IRT =_bgaf ;};if _ded :=_fcf .Get ("\u0053\u0075\u0062\u006a");_ded !=nil {_age .Subj =_ded ;};if _afdf :=_fcf .Get ("\u0052\u0054");_afdf !=nil {_age .RT =_afdf ;
};if _cbgc :=_fcf .Get ("\u0049\u0054");_cbgc !=nil {_age .IT =_cbgc ;};if _agag :=_fcf .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_agag !=nil {_age .ExData =_agag ;};return _age ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_acfb *PdfFunctionType0 )ToPdfObject ()_eag .PdfObject {if _acfb ._abcad ==nil {_acfb ._abcad =&_eag .PdfObjectStream {};};_cbcda :=_eag .MakeDict ();_cbcda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eag .MakeInteger (0));
_cefdb :=&_eag .PdfObjectArray {};for _ ,_gebag :=range _acfb .Domain {_cefdb .Append (_eag .MakeFloat (_gebag ));};_cbcda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cefdb );_cgdgg :=&_eag .PdfObjectArray {};for _ ,_cfbfe :=range _acfb .Range {_cgdgg .Append (_eag .MakeFloat (_cfbfe ));
};_cbcda .Set ("\u0052\u0061\u006eg\u0065",_cgdgg );_dcbd :=&_eag .PdfObjectArray {};for _ ,_fedfb :=range _acfb .Size {_dcbd .Append (_eag .MakeInteger (int64 (_fedfb )));};_cbcda .Set ("\u0053\u0069\u007a\u0065",_dcbd );_cbcda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_eag .MakeInteger (int64 (_acfb .BitsPerSample )));
if _acfb .Order !=1{_cbcda .Set ("\u004f\u0072\u0064e\u0072",_eag .MakeInteger (int64 (_acfb .Order )));};_cbcda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_acfb ._gcffb ))));_acfb ._abcad .Stream =_acfb ._gcffb ;_acfb ._abcad .PdfObjectDictionary =_cbcda ;
return _acfb ._abcad ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_egbf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cabff .Lock ();defer _cabff .Unlock ();_bfgd =producer };

// RemovePage removes a page by number.
func (_bfdc *PdfAppender )RemovePage (pageNum int ){_ceee :=pageNum -1;_bfdc ._abag =append (_bfdc ._abag [0:_ceee ],_bfdc ._abag [pageNum :]...);};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_caeeb *PdfReader )PageFromIndirectObject (ind *_eag .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_caeeb .PageList )!=len (_caeeb ._cfffe ){return nil ,0,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _ccbcf ,_cegae :=range _caeeb ._cfffe {if _cegae ==ind {return _caeeb .PageList [_ccbcf ],_ccbcf +1,nil ;};};return nil ,0,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// M returns the value of the magenta component of the color.
func (_dfdg *PdfColorDeviceCMYK )M ()float64 {return _dfdg [1]};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_adfg *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_feaag *PdfFilespec )ToPdfObject ()_eag .PdfObject {_eecb :=_feaag .getDict ();_eecb .Clear ();_eecb .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_eecb .SetIfNotNil ("\u0046\u0053",_feaag .FS );
_eecb .SetIfNotNil ("\u0046",_feaag .F );_eecb .SetIfNotNil ("\u0055\u0046",_feaag .UF );_eecb .SetIfNotNil ("\u0044\u004f\u0053",_feaag .DOS );_eecb .SetIfNotNil ("\u004d\u0061\u0063",_feaag .Mac );_eecb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_feaag .Unix );
_eecb .SetIfNotNil ("\u0049\u0044",_feaag .ID );_eecb .SetIfNotNil ("\u0056",_feaag .V );_eecb .SetIfNotNil ("\u0045\u0046",_feaag .EF );_eecb .SetIfNotNil ("\u0052\u0046",_feaag .RF );_eecb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_feaag .Desc );_eecb .SetIfNotNil ("\u0043\u0049",_feaag .CI );
_eecb .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_feaag .AFRelationship );return _feaag ._afdac ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ecegbd *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ecegbd ._aaaca .(*PdfTilingPattern );};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _eag .PdfObject ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gcffb []byte ;_gcgae []uint32 ;_abcad *_eag .PdfObjectStream ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_edecg :=PdfColorLab {l ,a ,b };return &_edecg };

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bdcf *Image )ColorAt (x ,y int )(_ge .Color ,error ){_fgce :=_fde .BytesPerLine (int (_bdcf .Width ),int (_bdcf .BitsPerComponent ),_bdcf .ColorComponents );switch _bdcf .ColorComponents {case 1:return _fde .ColorAtGrayscale (x ,y ,int (_bdcf .BitsPerComponent ),_fgce ,_bdcf .Data ,_bdcf ._dadbe );
case 3:return _fde .ColorAtNRGBA (x ,y ,int (_bdcf .Width ),_fgce ,int (_bdcf .BitsPerComponent ),_bdcf .Data ,_bdcf ._cbefd ,_bdcf ._dadbe );case 4:return _fde .ColorAtCMYK (x ,y ,int (_bdcf .Width ),_bdcf .Data ,_bdcf ._dadbe );};_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdcf .ColorComponents ,_bdcf .BitsPerComponent );
return nil ,_bag .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_dbf :=NewPdfAction ();_cda :=&PdfActionGoTo3DView {};_cda .PdfAction =_dbf ;_dbf .SetContext (_cda );return _cda ;};func (_agcd *PdfReader )newPdfAcroFormFromDict (_ccaa *_eag .PdfIndirectObject ,_abcf *_eag .PdfObjectDictionary )(*PdfAcroForm ,error ){_cabba :=NewPdfAcroForm ();
if _ccaa !=nil {_cabba ._cada =_ccaa ;_ccaa .PdfObject =_eag .MakeDict ();};if _geaec :=_abcf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_geaec !=nil &&!_eag .IsNullObject (_geaec ){_fceeg ,_bbdgd :=_eag .GetArray (_geaec );if !_bbdgd {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_geaec );
};var _gffed []*PdfField ;for _ ,_bffca :=range _fceeg .Elements (){_efed ,_ffbdbb :=_eag .GetIndirect (_bffca );if !_ffbdbb {if _ ,_cecgd :=_bffca .(*_eag .PdfObjectNull );_cecgd {_ebdd .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ebdd .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bffca );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dbfg ,_aeaf :=_agcd .newPdfFieldFromIndirectObject (_efed ,nil );
if _aeaf !=nil {return nil ,_aeaf ;};_ebdd .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dbfg );_gffed =append (_gffed ,_dbfg );};_cabba .Fields =&_gffed ;};if _bfda :=_abcf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bfda !=nil {_aaged ,_gagfd :=_eag .GetBool (_bfda );if _gagfd {_cabba .NeedAppearances =_aaged ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bfda );
};};if _facgf :=_abcf .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_facgf !=nil {_gacd ,_dcfe :=_eag .GetInt (_facgf );if _dcfe {_cabba .SigFlags =_gacd ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_facgf );
};};if _ffae :=_abcf .Get ("\u0043\u004f");_ffae !=nil {_abad ,_abaa :=_eag .GetArray (_ffae );if _abaa {_cabba .CO =_abad ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ffae );
};};if _agebf :=_abcf .Get ("\u0044\u0052");_agebf !=nil {if _baagc ,_gcbf :=_eag .GetDict (_agebf );_gcbf {_cbecg ,_fcgdd :=NewPdfPageResourcesFromDict (_baagc );if _fcgdd !=nil {_ebdd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fcgdd );
return nil ,_fcgdd ;};_cabba .DR =_cbecg ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_agebf );};};if _dbaaa :=_abcf .Get ("\u0044\u0041");
_dbaaa !=nil {_geggf ,_cgaef :=_eag .GetString (_dbaaa );if _cgaef {_cabba .DA =_geggf ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dbaaa );
};};if _cddg :=_abcf .Get ("\u0051");_cddg !=nil {_bgaed ,_faafc :=_eag .GetInt (_cddg );if _faafc {_cabba .Q =_bgaed ;}else {_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cddg );
};};if _cbae :=_abcf .Get ("\u0058\u0046\u0041");_cbae !=nil {_cabba .XFA =_cbae ;};if _efcd :=_abcf .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_efcd !=nil {_cabba .ADBEEchoSign =_efcd ;};_cabba .ToPdfObject ();
return _cabba ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_eadbb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _fcaa []*PdfOutlineTreeNode ;var _gegbd []string ;var _abcbb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_abcbb =func (_febbb *PdfOutlineTreeNode ,_fbacf *[]*PdfOutlineTreeNode ,_baaafb *[]string ,_dfbbad int ){if _febbb ==nil {return ;
};if _febbb ._addfb ==nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ddfff ,_beacg :=_febbb ._addfb .(*PdfOutlineItem );if _beacg {*_fbacf =append (*_fbacf ,&_ddfff .PdfOutlineTreeNode );
_cbddd :=_cb .Repeat ("\u0020",_dfbbad *2)+_ddfff .Title .Decoded ();*_baaafb =append (*_baaafb ,_cbddd );};if _febbb .First !=nil {_bedfg :=_cb .Repeat ("\u0020",_dfbbad *2)+"\u002b";*_baaafb =append (*_baaafb ,_bedfg );_abcbb (_febbb .First ,_fbacf ,_baaafb ,_dfbbad +1);
};if _beacg &&_ddfff .Next !=nil {_abcbb (_ddfff .Next ,_fbacf ,_baaafb ,_dfbbad );};};_abcbb (_eadbb ._degc ,&_fcaa ,&_gegbd ,0);return _fcaa ,_gegbd ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_cbdgg *PdfSignature )SetLocation (location string ){_cbdgg .Location =_eag .MakeString (location )};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _eag .PdfObject ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_acd :=NewPdfAction ();_bb :=&PdfActionSound {};_bb .PdfAction =_acd ;_acd .SetContext (_bb );return _bb ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fgedg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fgedg .UnderlyingCS .GetNumComponents ();};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_babfb :=&PdfPageResourcesColorspaces {};_babfb .Names =[]string {};_babfb .Colorspaces =map[string ]PdfColorspace {};_babfb ._egdac =&_eag .PdfIndirectObject {};return _babfb ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _eag .StreamEncoder ;FormType _eag .PdfObject ;BBox _eag .PdfObject ;Matrix _eag .PdfObject ;Resources *PdfPageResources ;Group _eag .PdfObject ;Ref _eag .PdfObject ;MetaData _eag .PdfObject ;PieceInfo _eag .PdfObject ;LastModified _eag .PdfObject ;
StructParent _eag .PdfObject ;StructParents _eag .PdfObject ;OPI _eag .PdfObject ;OC _eag .PdfObject ;Name _eag .PdfObject ;

// Stream data.
Stream []byte ;_beaeg *_eag .PdfObjectStream ;};type pdfCIDFontType0 struct{fontCommon ;_fcbbg *_eag .PdfIndirectObject ;_gefef _gbf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_eag .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _eag .PdfObject ;W _eag .PdfObject ;DW2 _eag .PdfObject ;W2 _eag .PdfObject ;_ffbce map[_gbf .CharCode ]float64 ;_cfcae float64 ;};func (_ddcda *PdfReader )loadPerms ()(*Permissions ,error ){if _dgba :=_ddcda ._adbgg .Get ("\u0050\u0065\u0072m\u0073");
_dgba !=nil {if _adcb ,_efcac :=_eag .GetDict (_dgba );_efcac {_abeb :=_adcb .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _abeb ==nil {return nil ,nil ;};if _afcca ,_bdafc :=_eag .GetIndirect (_abeb );_bdafc {_ceed ,_bdgac :=_ddcda .newPdfSignatureFromIndirect (_afcca );
if _bdgac !=nil {return nil ,_bdgac ;};return NewPermissions (_ceed ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _eag .PdfObject ;BS _eag .PdfObject ;LE _eag .PdfObject ;IC _eag .PdfObject ;LL _eag .PdfObject ;LLE _eag .PdfObject ;Cap _eag .PdfObject ;IT _eag .PdfObject ;LLO _eag .PdfObject ;CP _eag .PdfObject ;
Measure _eag .PdfObject ;CO _eag .PdfObject ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cabff .Lock ();defer _cabff .Unlock ();_dbge =title };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_eggc DefaultImageHandler )NewGrayImageFromGoImage (goimg _d .Image )(*Image ,error ){_cgcc :=goimg .Bounds ();_edgde :=&Image {Width :int64 (_cgcc .Dx ()),Height :int64 (_cgcc .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _deeac :=goimg .(type ){case *_d .Gray :if len (_deeac .Pix )!=_cgcc .Dx ()*_cgcc .Dy (){_bggab ,_fafcg :=_fde .GrayConverter .Convert (goimg );
if _fafcg !=nil {return nil ,_fafcg ;};_edgde .Data =_bggab .Pix ();}else {_edgde .Data =_deeac .Pix ;};case *_d .Gray16 :_edgde .BitsPerComponent =16;if len (_deeac .Pix )!=_cgcc .Dx ()*_cgcc .Dy ()*2{_bfecc ,_febafc :=_fde .Gray16Converter .Convert (goimg );
if _febafc !=nil {return nil ,_febafc ;};_edgde .Data =_bfecc .Pix ();}else {_edgde .Data =_deeac .Pix ;};case _fde .Image :_ffeba :=_deeac .Base ();if _ffeba .ColorComponents ==1{_edgde .BitsPerComponent =int64 (_ffeba .BitsPerComponent );_edgde .Data =_ffeba .Data ;
return _edgde ,nil ;};_cedgd ,_gabec :=_fde .GrayConverter .Convert (goimg );if _gabec !=nil {return nil ,_gabec ;};_edgde .Data =_cedgd .Pix ();default:_cecdg ,_bageb :=_fde .GrayConverter .Convert (goimg );if _bageb !=nil {return nil ,_bageb ;};_edgde .Data =_cecdg .Pix ();
};return _edgde ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dbdf :=NewPdfAnnotation ();_ebc :=&PdfAnnotationFileAttachment {};_ebc .PdfAnnotation =_dbdf ;_ebc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbdf .SetContext (_ebc );return _ebc ;
};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_cggf *Image )GetParamsDict ()*_eag .PdfObjectDictionary {_cbedg :=_eag .MakeDict ();_cbedg .Set ("\u0057\u0069\u0064t\u0068",_eag .MakeInteger (_cggf .Width ));_cbedg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eag .MakeInteger (_cggf .Height ));
_cbedg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eag .MakeInteger (int64 (_cggf .ColorComponents )));_cbedg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eag .MakeInteger (_cggf .BitsPerComponent ));
return _cbedg ;};func (_aafa *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aafa .fontCommon };func (_bgd *PdfAnnotation )String ()string {_agg :="";_acg ,_edbc :=_bgd .ToPdfObject ().(*_eag .PdfIndirectObject );if _edbc {_agg =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bgd ._bga ,_acg .PdfObject .String ());
};return _agg ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_eag .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_eag .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_eag .PdfObjectBool ;_dcgab PdfModel ;_aadgg _eag .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_cbce *PdfColorspaceLab )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efc ,_cecb :=_eag .GetNumbersAsFloat (objects );
if _cecb !=nil {return nil ,_cecb ;};return _cbce .ColorFromFloats (_efc );};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ba .ReadSeeker )(*PdfFont ,error ){const _dbbb =_gbf .CharCode (32);const _becdg =_gbf .CharCode (255);_cabac ,_cfef :=_eb .ReadAll (r );if _cfef !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cfef );
return nil ,_cfef ;};_edcad ,_cfef :=_eeb .TtfParse (_cf .NewReader (_cabac ));if _cfef !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cfef );
return nil ,_cfef ;};_bfgce :=&pdfFontSimple {_fgdd :make (map[_gbf .CharCode ]float64 ),fontCommon :fontCommon {_cdabe :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bfgce ._defdg =_gbf .NewWinAnsiEncoder ();_bfgce ._fgcc =_edcad .PostScriptName ;
_bfgce .FirstChar =_eag .MakeInteger (int64 (_dbbb ));_bfgce .LastChar =_eag .MakeInteger (int64 (_becdg ));_gdece :=1000.0/float64 (_edcad .UnitsPerEm );if len (_edcad .Widths )<=0{return nil ,_bag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gbeab :=_gdece *float64 (_edcad .Widths [0]);_geee :=make ([]float64 ,0,_becdg -_dbbb +1);for _ccfgg :=_dbbb ;_ccfgg <=_becdg ;_ccfgg ++{_febaa ,_cgfbd :=_bfgce .Encoder ().CharcodeToRune (_ccfgg );if !_cgfbd {_ebdd .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ccfgg );
_geee =append (_geee ,_gbeab );continue ;};_ebfd ,_bgcab :=_edcad .Chars [_febaa ];if !_bgcab {_ebdd .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_geee =append (_geee ,_gbeab );continue ;
};_acaad :=_gdece *float64 (_edcad .Widths [_ebfd ]);_geee =append (_geee ,_acaad );};_bfgce .Widths =_eag .MakeIndirectObject (_eag .MakeArrayFromFloats (_geee ));if len (_geee )< int (_becdg -_dbbb +1){_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_geee ),255-32+1);
return nil ,_eag .ErrRangeError ;};for _adade :=_dbbb ;_adade <=_becdg ;_adade ++{_bfgce ._fgdd [_adade ]=_geee [_adade -_dbbb ];};_bfgce .Encoding =_eag .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_cebc :=&PdfFontDescriptor {};
_cebc .FontName =_eag .MakeName (_edcad .PostScriptName );_cebc .Ascent =_eag .MakeFloat (_gdece *float64 (_edcad .TypoAscender ));_cebc .Descent =_eag .MakeFloat (_gdece *float64 (_edcad .TypoDescender ));_cebc .CapHeight =_eag .MakeFloat (_gdece *float64 (_edcad .CapHeight ));
_cebc .FontBBox =_eag .MakeArrayFromFloats ([]float64 {_gdece *float64 (_edcad .Xmin ),_gdece *float64 (_edcad .Ymin ),_gdece *float64 (_edcad .Xmax ),_gdece *float64 (_edcad .Ymax )});_cebc .ItalicAngle =_eag .MakeFloat (_edcad .ItalicAngle );_cebc .MissingWidth =_eag .MakeFloat (_gdece *float64 (_edcad .Widths [0]));
_dggb ,_cfef :=_eag .MakeStream (_cabac ,_eag .NewFlateEncoder ());if _cfef !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cfef );
return nil ,_cfef ;};_dggb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eag .MakeInteger (int64 (len (_cabac ))));_cebc .FontFile2 =_dggb ;if _edcad .Bold {_cebc .StemV =_eag .MakeInteger (120);}else {_cebc .StemV =_eag .MakeInteger (70);
};_gfabe :=_aced ;if _edcad .IsFixedPitch {_gfabe |=_bcbg ;};if _edcad .ItalicAngle !=0{_gfabe |=_gagc ;};_cebc .Flags =_eag .MakeInteger (int64 (_gfabe ));_bfgce ._ecdgfc =_cebc ;_deaag :=&PdfFont {_dagg :_bfgce };return _deaag ,nil ;};func (_deea *PdfReader )newPdfAnnotationSoundFromDict (_ecf *_eag .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ceefg :=PdfAnnotationSound {};
_cdgf ,_aaee :=_deea .newPdfAnnotationMarkupFromDict (_ecf );if _aaee !=nil {return nil ,_aaee ;};_ceefg .PdfAnnotationMarkup =_cdgf ;_ceefg .Name =_ecf .Get ("\u004e\u0061\u006d\u0065");_ceefg .Sound =_ecf .Get ("\u0053\u006f\u0075n\u0064");return &_ceefg ,nil ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bfdg *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_dcfeb *PdfSignature )extractChainFromCert ()([]*_ed .Certificate ,error ){var _ccfga *_eag .PdfObjectArray ;switch _gfdgd :=_dcfeb .Cert .(type ){case *_eag .PdfObjectString :_ccfga =_eag .MakeArray (_gfdgd );
case *_eag .PdfObjectArray :_ccfga =_gfdgd ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gfdgd );
};var _adbdg _cf .Buffer ;for _ ,_bacdc :=range _ccfga .Elements (){_gdddf ,_acgcb :=_eag .GetString (_bacdc );if !_acgcb {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bacdc );
};if _ ,_edcde :=_adbdg .Write (_gdddf .Bytes ());_edcde !=nil {return nil ,_edcde ;};};return _ed .ParseCertificates (_adbdg .Bytes ());};

// String implements interface PdfObject.
func (_bee *PdfAction )String ()string {_ae ,_ga :=_bee .ToPdfObject ().(*_eag .PdfIndirectObject );if _ga {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bee ._eea ,_ae .PdfObject .String ());};return "";};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ddfd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_dgaag :=_ddfd .fill (provider ,appGen );if _dgaag !=nil {return _dgaag ;};if _ ,_gaecf :=provider .(FieldImageProvider );_gaecf {_dgaag =_ddfd .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _dgaag ;};func (_ebfab *PdfWriter )hasObject (_dgcda _eag .PdfObject )bool {_ ,_dccc :=_ebfab ._fcced [_dgcda ];return _dccc ;};func _cgde (_dfafd map[_eeb .GID ]int ,_fcfa uint16 )*_eag .PdfObjectArray {_bcaed :=&_eag .PdfObjectArray {};_bagaf :=_eeb .GID (_fcfa );
for _dfgfc :=_eeb .GID (0);_dfgfc < _bagaf ;{_feeae ,_ccac :=_dfafd [_dfgfc ];if !_ccac {_dfgfc ++;continue ;};_cbbgf :=_dfgfc ;for _dafe :=_cbbgf +1;_dafe < _bagaf ;_dafe ++{if _fegfg ,_agcgg :=_dfafd [_dafe ];!_agcgg ||_feeae !=_fegfg {break ;};_cbbgf =_dafe ;
};_bcaed .Append (_eag .MakeInteger (int64 (_dfgfc )));_bcaed .Append (_eag .MakeInteger (int64 (_cbbgf )));_bcaed .Append (_eag .MakeInteger (int64 (_feeae )));_dfgfc =_cbbgf +1;};return _bcaed ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ba .ReadSeeker )(*PdfFont ,error ){_gggee ,_gdggc :=_eb .ReadAll (r );if _gdggc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gdggc );
return nil ,_gdggc ;};_fcba ,_gdggc :=_eeb .TtfParse (_cf .NewReader (_gggee ));if _gdggc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gdggc );
return nil ,_gdggc ;};_gcgc :=&pdfCIDFontType2 {fontCommon :fontCommon {_cdabe :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_eag .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_fcba .Widths )<=0{return nil ,_bag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_aacfgb :=1000.0/float64 (_fcba .UnitsPerEm );_affc :=_aacfgb *float64 (_fcba .Widths [0]);_cbcf :=make (map[rune ]int );_cfae :=make (map[_eeb .GID ]int );_gaea :=_eeb .GID (len (_fcba .Widths ));for _agfb ,_fcdgf :=range _fcba .Chars {if _fcdgf > _gaea -1{continue ;
};_eadcb :=int (_aacfgb *float64 (_fcba .Widths [_fcdgf ]));_cbcf [_agfb ]=_eadcb ;_cfae [_fcdgf ]=_eadcb ;};_gcgc ._fgcdbg =_cbcf ;_gcgc .DW =_eag .MakeInteger (int64 (_affc ));_eeffd :=_cgde (_cfae ,uint16 (_gaea ));_gcgc .W =_eag .MakeIndirectObject (_eeffd );
_dcdbb :=_eag .MakeDict ();_dcdbb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_eag .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dcdbb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_eag .MakeString ("\u0041\u0064\u006fb\u0065"));
_dcdbb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_eag .MakeInteger (0));_gcgc .CIDSystemInfo =_dcdbb ;_efbe :=&PdfFontDescriptor {FontName :_eag .MakeName (_fcba .PostScriptName ),Ascent :_eag .MakeFloat (_aacfgb *float64 (_fcba .TypoAscender )),Descent :_eag .MakeFloat (_aacfgb *float64 (_fcba .TypoDescender )),CapHeight :_eag .MakeFloat (_aacfgb *float64 (_fcba .CapHeight )),FontBBox :_eag .MakeArrayFromFloats ([]float64 {_aacfgb *float64 (_fcba .Xmin ),_aacfgb *float64 (_fcba .Ymin ),_aacfgb *float64 (_fcba .Xmax ),_aacfgb *float64 (_fcba .Ymax )}),ItalicAngle :_eag .MakeFloat (_fcba .ItalicAngle ),MissingWidth :_eag .MakeFloat (_affc )};
_ecbabd ,_gdggc :=_eag .MakeStream (_gggee ,_eag .NewFlateEncoder ());if _gdggc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gdggc );
return nil ,_gdggc ;};_ecbabd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eag .MakeInteger (int64 (len (_gggee ))));_efbe .FontFile2 =_ecbabd ;if _fcba .Bold {_efbe .StemV =_eag .MakeInteger (120);}else {_efbe .StemV =_eag .MakeInteger (70);
};_gdfdf :=_aeffc ;if _fcba .IsFixedPitch {_gdfdf |=_bcbg ;};if _fcba .ItalicAngle !=0{_gdfdf |=_gagc ;};_efbe .Flags =_eag .MakeInteger (int64 (_gdfdf ));_gcgc ._fgcc =_fcba .PostScriptName ;_gcgc ._ecdgfc =_efbe ;_fbcg :=pdfFontType0 {fontCommon :fontCommon {_cdabe :"\u0054\u0079\u0070e\u0030",_fgcc :_fcba .PostScriptName },DescendantFont :&PdfFont {_dagg :_gcgc },Encoding :_eag .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cege :_fcba .NewEncoder ()};
if len (_fcba .Chars )> 0{_ebfg :=make (map[_cd .CharCode ]rune ,len (_fcba .Chars ));for _fcabg ,_efgcb :=range _fcba .Chars {_deaae :=_cd .CharCode (_efgcb );if _bdaae ,_gbgf :=_ebfg [_deaae ];!_gbgf ||(_gbgf &&_bdaae > _fcabg ){_ebfg [_deaae ]=_fcabg ;
};};_fbcg ._dccf =_cd .NewToUnicodeCMap (_ebfg );};_feee :=PdfFont {_dagg :&_fbcg };return &_feee ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cafdc byte )byte ;

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_eag .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_abdg *_eag .PdfIndirectObject ;};

// Transform rectangle with the supplied matrix.
func (_faege *PdfRectangle )Transform (transformMatrix _de .Matrix ){_faege .Llx ,_faege .Lly =transformMatrix .Transform (_faege .Llx ,_faege .Lly );_faege .Urx ,_faege .Ury =transformMatrix .Transform (_faege .Urx ,_faege .Ury );_faege .Normalize ();
};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_bdba :=Permissions {};_bdba .DocMDP =docMdp ;_cgee :=_eag .MakeDict ();_cgee .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_bdba ._gfcae =_cgee ;return &_bdba ;};

// SetDate sets the `M` field of the signature.
func (_facca *PdfSignature )SetDate (date _ag .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_facca .M =_eag .MakeString (date .Format (format ));
};func _dgbcf (_eead _ba .ReadSeeker ,_fcgada *ReaderOpts ,_ddffb bool ,_cfag string )(*PdfReader ,error ){if _fcgada ==nil {_fcgada =NewReaderOpts ();};_dbgf :=*_fcgada ;_ecdff :=&PdfReader {_cfacd :_eead ,_dbcaa :map[_eag .PdfObject ]struct{}{},_gbada :_ffge (),_dgabg :_fcgada .LazyLoad ,_dcgc :_fcgada .ComplianceMode ,_agdfg :_ddffb ,_ggcb :&_dbgf };
_adbf ,_gdcgc :=_efbac ("\u0072");if _gdcgc !=nil {return nil ,_gdcgc ;};_gdcgc =_bda .Track (_adbf ,_cfag );if _gdcgc !=nil {return nil ,_gdcgc ;};_ecdff ._egeca =_adbf ;var _caage *_eag .PdfParser ;if !_ecdff ._dcgc {_caage ,_gdcgc =_eag .NewParser (_eead );
}else {_caage ,_gdcgc =_eag .NewCompliancePdfParser (_eead );};if _gdcgc !=nil {return nil ,_gdcgc ;};_ecdff ._afegd =_caage ;_gfddd ,_gdcgc :=_ecdff .IsEncrypted ();if _gdcgc !=nil {return nil ,_gdcgc ;};if !_gfddd {_gdcgc =_ecdff .loadStructure ();if _gdcgc !=nil {return nil ,_gdcgc ;
};}else if _ddffb {_gbccb ,_ccbg :=_ecdff .Decrypt ([]byte (_fcgada .Password ));if _ccbg !=nil {return nil ,_ccbg ;};if !_gbccb {return nil ,_bag .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_ecdff ._edef =make (map[*PdfReader ]*PdfReader );_ecdff ._dbeag =make ([]*PdfReader ,_caage .GetRevisionNumber ());return _ecdff ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_ecggab *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _ecggab ._bcebb ==nil {_ecggab .GetAnnotations ();};_ecggab ._bcebb =append (_ecggab ._bcebb ,annot );};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_abfda *PdfPageResources )AddExtGState (gsName _eag .PdfObjectName ,gsDict _eag .PdfObject )error {if _abfda .ExtGState ==nil {_abfda .ExtGState =_eag .MakeDict ();};_bbedeb :=_abfda .ExtGState ;_bgbba ,_cadaa :=_eag .TraceToDirectObject (_bbedeb ).(*_eag .PdfObjectDictionary );
if !_cadaa {_ebdd .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bbedeb ,_eag .TraceToDirectObject (_bbedeb ));
return _eag .ErrTypeError ;};_bgbba .Set (gsName ,gsDict );return nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_babg *PdfFieldButton )IsPush ()bool {return _babg .GetType ()==ButtonTypePush };func (_bffbef *PdfReader )loadStructure ()error {if _bffbef ._afegd .GetCrypter ()!=nil &&!_bffbef ._afegd .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gdfga :=_bffbef ._afegd .GetTrailer ();if _gdfga ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ddecb ,_ececd :=_gdfga .Get ("\u0052\u006f\u006f\u0074").(*_eag .PdfObjectReference );if !_ececd {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gdfga );
};_gaebg ,_ccbea :=_bffbef ._afegd .LookupByReference (*_ddecb );if _ccbea !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ccbea );
return _ccbea ;};_eabgg ,_ececd :=_gaebg .(*_eag .PdfIndirectObject );if !_ececd {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gaebg ,*_gdfga );
return _bag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eebag ,_ececd :=(*_eabgg ).PdfObject .(*_eag .PdfObjectDictionary );if !_ececd {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_eabgg .PdfObject );
return _bag .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ebdd .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eebag );_gbbbd ,_ececd :=_eebag .Get ("\u0050\u0061\u0067e\u0073").(*_eag .PdfObjectReference );
if !_ececd {return _bag .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_acaf ,_ccbea :=_bffbef ._afegd .LookupByReference (*_gbbbd );
if _ccbea !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ccbea ;};_gdfb ,_ececd :=_acaf .(*_eag .PdfIndirectObject );if !_ececd {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ebdd .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_gdfb );return _bag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_befae ,_ececd :=_gdfb .PdfObject .(*_eag .PdfObjectDictionary );if !_ececd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_gdfb );
return _bag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bebcg ,_ececd :=_eag .GetInt (_befae .Get ("\u0043\u006f\u0075n\u0074"));if !_ececd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _bag .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ececd =_eag .GetName (_befae .Get ("\u0054\u0079\u0070\u0065"));!_ececd {_ebdd .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_befae .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0050\u0061\u0067e\u0073"));};if _dggdg ,_gccef :=_eag .GetInt (_befae .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gccef {_cdefbb :=int64 (*_dggdg );_bffbef .Rotate =&_cdefbb ;};_bffbef ._fcccg =_ddecb ;
_bffbef ._adbgg =_eebag ;_bffbef ._bdgec =_befae ;_bffbef ._acgaf =_gdfb ;_bffbef ._gcabd =int (*_bebcg );_bffbef ._cfffe =[]*_eag .PdfIndirectObject {};_bgdb :=map[_eag .PdfObject ]struct{}{};_ccbea =_bffbef .buildPageList (_gdfb ,nil ,_bgdb );if _ccbea !=nil {return _ccbea ;
};_ebdd .Log .Trace ("\u002d\u002d\u002d");_ebdd .Log .Trace ("\u0054\u004f\u0043");_ebdd .Log .Trace ("\u0050\u0061\u0067e\u0073");_ebdd .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bffbef ._cfffe ),_bffbef ._cfffe );_bffbef ._degc ,_ccbea =_bffbef .loadOutlines ();
if _ccbea !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ccbea );
return _ccbea ;};_bffbef .AcroForm ,_ccbea =_bffbef .loadForms ();if _ccbea !=nil {return _ccbea ;};_bffbef .DSS ,_ccbea =_bffbef .loadDSS ();if _ccbea !=nil {return _ccbea ;};_bffbef ._eecef ,_ccbea =_bffbef .loadPerms ();if _ccbea !=nil {return _ccbea ;
};return nil ;};func (_bcg *PdfReader )newPdfActionJavaScriptFromDict (_eced *_eag .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_eced .Get ("\u004a\u0053")},nil ;};func (_gcdcb *PdfWriter )AttachFile (file *EmbeddedFile )error {_cfced :=_gcdcb ._eecd ;
if _cfced ==nil {_cfced =_fcbcc ();};_cedde :=_cfced .addEmbeddedFile (file );if _cedde !=nil {return _cedde ;};_gcdcb ._eecd =_cfced ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_adgaf *PdfSignature )GetContainingPdfObject ()_eag .PdfObject {return _adgaf ._bdda };

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_cfdc *PdfShading )GetContext ()PdfModel {return _cfdc ._dcgab };func (_beccf *PdfReader )lookupPageByObject (_cceee _eag .PdfObject )(*PdfPage ,error ){return nil ,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};type pdfFontSimple struct{fontCommon ;_ebfgf *_eag .PdfIndirectObject ;_fgdd map[_gbf .CharCode ]float64 ;_defdg _gbf .TextEncoder ;_ddggb _gbf .TextEncoder ;_cfbf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _eag .PdfObject ;LastChar _eag .PdfObject ;Widths _eag .PdfObject ;Encoding _eag .PdfObject ;_gbdg *_eeb .RuneCharSafeMap ;};func (_cfbbff SignatureValidationResult )String ()string {var _baeba _cf .Buffer ;_baeba .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_cfbbff .Name ));
if _cfbbff .Date ._abdgf > 0{_baeba .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_cfbbff .Date .ToGoTime ().String ()));}else {_baeba .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_cfbbff .Reason )> 0{_baeba .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cfbbff .Reason ));}else {_baeba .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_cfbbff .Location )> 0{_baeba .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cfbbff .Location ));}else {_baeba .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_cfbbff .ContactInfo )> 0{_baeba .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_cfbbff .ContactInfo ));}else {_baeba .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_baeba .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_cfbbff .Fields )));if _cfbbff .IsSigned {_baeba .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_baeba .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _cfbbff .IsVerified {_baeba .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_baeba .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _cfbbff .IsTrusted {_baeba .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_baeba .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_cfbbff .GeneralizedTime .IsZero (){_baeba .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_cfbbff .GeneralizedTime .String ()));
};if _cfbbff .DiffResults !=nil {_baeba .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_cfbbff .DiffResults .IsPermitted ()));if len (_cfbbff .DiffResults .Warnings )> 0{_baeba .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_ggecd :=range _cfbbff .DiffResults .Warnings {_baeba .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ggecd ));};};if len (_cfbbff .DiffResults .Errors )> 0{_baeba .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_bdfbf :=range _cfbbff .DiffResults .Errors {_baeba .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_bdfbf ));};};};if _cfbbff .IsCrlFound {_baeba .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_baeba .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _cfbbff .IsOcspFound {_baeba .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_baeba .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _baeba .String ();};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _eag .PdfObject ;Name _eag .PdfObject ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_eag .PdfObjectDictionary )(*PdfPageResources ,error ){_cgbec :=NewPdfPageResources ();if _efee :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_efee !=nil {_cgbec .ExtGState =_efee ;};if _gdafa :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gdafa !=nil &&!_eag .IsNullObject (_gdafa ){_cgbec .ColorSpace =_gdafa ;};if _eabd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_eabd !=nil {_cgbec .Pattern =_eabd ;};if _fegdb :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fegdb !=nil {_cgbec .Shading =_fegdb ;
};if _ebcab :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_ebcab !=nil {_cgbec .XObject =_ebcab ;};if _eedcd :=_eag .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_eedcd !=nil {_cgbec .Font =_eedcd ;};if _dgbde :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_dgbde !=nil {_cgbec .ProcSet =_dgbde ;};if _bfacg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfacg !=nil {_cgbec .Properties =_bfacg ;};return _cgbec ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_agb :=NewPdfAnnotation ();_eege :=&PdfAnnotationUnderline {};_eege .PdfAnnotation =_agb ;_eege .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agb .SetContext (_eege );return _eege ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_ebad *PdfOutputIntent )GetContainingPdfObject ()_eag .PdfObject {return _ebad ._dafa };

// SetVersion sets the PDF version of the output file.
func (_cbfea *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cbfea ._ddcce .Major =majorVersion ;_cbfea ._ddcce .Minor =minorVersion ;};func _ecfe (_fbgeb *_fde .ImageBase )(_fdeb Image ){_fdeb .Width =int64 (_fbgeb .Width );_fdeb .Height =int64 (_fbgeb .Height );
_fdeb .BitsPerComponent =int64 (_fbgeb .BitsPerComponent );_fdeb .ColorComponents =_fbgeb .ColorComponents ;_fdeb .Data =_fbgeb .Data ;_fdeb ._dadbe =_fbgeb .Decode ;_fdeb ._cbefd =_fbgeb .Alpha ;return _fdeb ;};

// PartialName returns the partial name of the field.
func (_deef *PdfField )PartialName ()string {_ccdcb :="";if _deef .T !=nil {_ccdcb =_deef .T .Decoded ();}else {_ebdd .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _ccdcb ;};func (_ebgga *PdfWriter )mapObjectStreams (_gbgca bool )(map[_eag .PdfObject ]bool ,bool ){_gddbe :=make (map[_eag .PdfObject ]bool );for _ ,_dgbac :=range _ebgga ._eggea {if _dbdbb ,_bgcde :=_dgbac .(*_eag .PdfObjectStreams );_bgcde {_gbgca =true ;
for _ ,_agdgc :=range _dbdbb .Elements (){_gddbe [_agdgc ]=true ;if _cdcce ,_eafbf :=_agdgc .(*_eag .PdfIndirectObject );_eafbf {_gddbe [_cdcce .PdfObject ]=true ;};};};};return _gddbe ,_gbgca ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ffbeeg *XObjectForm )GetContainingPdfObject ()_eag .PdfObject {return _ffbeeg ._beaeg };

// ToPdfObject implements interface PdfModel.
func (_ggdab *PdfAnnotationTrapNet )ToPdfObject ()_eag .PdfObject {_ggdab .PdfAnnotation .ToPdfObject ();_ddec :=_ggdab ._gfa ;_ggff :=_ddec .PdfObject .(*_eag .PdfObjectDictionary );_ggff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ddec ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// SetReason sets the `Reason` field of the signature.
func (_ceefb *PdfSignature )SetReason (reason string ){_ceefb .Reason =_eag .MakeEncodedString (reason ,true );};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fdef *PdfAnnotation )GetContext ()PdfModel {if _fdef ==nil {return nil ;};return _fdef ._bga ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _eag .PdfObject ;LE _eag .PdfObject ;BS _eag .PdfObject ;IC _eag .PdfObject ;BE _eag .PdfObject ;IT _eag .PdfObject ;Measure _eag .PdfObject ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _eag .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afdfg *PdfShadingType7 )ToPdfObject ()_eag .PdfObject {_afdfg .PdfShading .ToPdfObject ();_agccb ,_cadgc :=_afdfg .getShadingDict ();if _cadgc !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afdfg .BitsPerCoordinate !=nil {_agccb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_afdfg .BitsPerCoordinate );};if _afdfg .BitsPerComponent !=nil {_agccb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afdfg .BitsPerComponent );
};if _afdfg .BitsPerFlag !=nil {_agccb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_afdfg .BitsPerFlag );};if _afdfg .Decode !=nil {_agccb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_afdfg .Decode );};if _afdfg .Function !=nil {if len (_afdfg .Function )==1{_agccb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afdfg .Function [0].ToPdfObject ());
}else {_ddad :=_eag .MakeArray ();for _ ,_fgbeg :=range _afdfg .Function {_ddad .Append (_fgbeg .ToPdfObject ());};_agccb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddad );};};return _afdfg ._aadgg ;};func (_decc *PdfSignature )extractChainFromPKCS7 ()([]*_ed .Certificate ,error ){_fdebf ,_gbdef :=_bfb .Parse (_decc .Contents .Bytes ());
if _gbdef !=nil {return nil ,_gbdef ;};return _fdebf .Certificates ,nil ;};func _ccefg (_fabge _eag .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dbca :=NewPdfColorspaceSpecialSeparation ();if _feadg ,_efeb :=_fabge .(*_eag .PdfIndirectObject );
_efeb {_dbca ._dffab =_feadg ;};_fabge =_eag .TraceToDirectObject (_fabge );_bcgdc ,_ggaa :=_fabge .(*_eag .PdfObjectArray );if !_ggaa {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _bcgdc .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fabge =_bcgdc .Get (0);
_egff ,_ggaa :=_fabge .(*_eag .PdfObjectName );if !_ggaa {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_egff !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_fabge =_bcgdc .Get (1);_egff ,_ggaa =_fabge .(*_eag .PdfObjectName );if !_ggaa {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dbca .ColorantName =_egff ;_fabge =_bcgdc .Get (2);_cacbf ,_abefd :=NewPdfColorspaceFromPdfObject (_fabge );if _abefd !=nil {return nil ,_abefd ;};_dbca .AlternateSpace =_cacbf ;_dedd ,_abefd :=_baaab (_bcgdc .Get (3));if _abefd !=nil {return nil ,_abefd ;
};_dbca .TintTransform =_dedd ;return _dbca ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fdfee *PdfWriter )SetDocInfo (info *PdfInfo ){_fdfee .setDocInfo (info .ToPdfObject ())};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gedg :=NewPdfAnnotation ();_eba :=&PdfAnnotationHighlight {};_eba .PdfAnnotation =_gedg ;_eba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gedg .SetContext (_eba );return _eba ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_fede :_eag .MakeIndirectObject (_eag .MakeDict ()),VRI :map[string ]*VRI {}};};func (_ddcag *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _ddcag ._ecdgfc };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_fbea *PdfFieldSignature )ToPdfObject ()_eag .PdfObject {if _fbea .PdfAnnotationWidget !=nil {_fbea .PdfAnnotationWidget .ToPdfObject ();};_fbea .PdfField .ToPdfObject ();_egca :=_fbea ._eebf ;_bffda :=_egca .PdfObject .(*_eag .PdfObjectDictionary );
_bffda .SetIfNotNil ("\u0046\u0054",_eag .MakeName ("\u0053\u0069\u0067"));_bffda .SetIfNotNil ("\u004c\u006f\u0063\u006b",_fbea .Lock );_bffda .SetIfNotNil ("\u0053\u0056",_fbea .SV );if _fbea .V !=nil {_bffda .SetIfNotNil ("\u0056",_fbea .V .ToPdfObject ());
};return _egca ;};

// ToPdfObject implements interface PdfModel.
func (_fge *PdfAnnotationWidget )ToPdfObject ()_eag .PdfObject {_fge .PdfAnnotation .ToPdfObject ();_agcf :=_fge ._gfa ;_debc :=_agcf .PdfObject .(*_eag .PdfObjectDictionary );if _fge ._dbb {return _agcf ;};_fge ._dbb =true ;_debc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_debc .SetIfNotNil ("\u0048",_fge .H );_debc .SetIfNotNil ("\u004d\u004b",_fge .MK );_debc .SetIfNotNil ("\u0041",_fge .A );_debc .SetIfNotNil ("\u0041\u0041",_fge .AA );_debc .SetIfNotNil ("\u0042\u0053",_fge .BS );_ecbd :=_fge .Parent ;if _fge ._bgda !=nil {if _fge ._bgda ._eebf ==_fge ._gfa {_fge ._bgda .ToPdfObject ();
};_ecbd =_fge ._bgda .GetContainingPdfObject ();};if _ecbd !=_agcf {_debc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecbd );};_fge ._dbb =false ;return _agcf ;};

// GetFillImage get attached model.Image in push button.
func (_ddbfc *PdfFieldButton )GetFillImage ()*Image {if _ddbfc .IsPush (){return _ddbfc ._ggge ;};return nil ;};

// B returns the value of the B component of the color.
func (_befd *PdfColorCalRGB )B ()float64 {return _befd [1]};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_bgcfb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_bgcfb ._ccffb =optimizer };

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_fgdcb *_eag .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_eag .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_eag .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_eag .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_eag .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_eag .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_eag .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_eag .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_eag .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_eag .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_eag .PdfObjectDictionary ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_acfgd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _caecbg []*PdfField ;_fcdcb :=map[*_eag .PdfIndirectObject ]struct{}{};for _ ,_fabec :=range _acfgd .PageList {_efabca ,_acec :=_fabec .GetAnnotations ();if _acec !=nil {return _acec ;
};for _ ,_gegga :=range _efabca {var _cfaaf *PdfField ;switch _gbdf :=_gegga .GetContext ().(type ){case *PdfAnnotationWidget :if _gbdf ._bgda !=nil {_cfaaf =_gbdf ._bgda ;break ;};if _afagc ,_bdccf :=_eag .GetIndirect (_gbdf .Parent );_bdccf {_cfaaf ,_acec =_acfgd .newPdfFieldFromIndirectObject (_afagc ,nil );
if _acec ==nil {break ;};_ebdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_afagc ,_acec );
};if _gbdf ._gfa !=nil {_cfaaf ,_acec =_acfgd .newPdfFieldFromIndirectObject (_gbdf ._gfa ,nil );if _acec ==nil {break ;};_ebdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gbdf ._gfa ,_acec );
};};if _cfaaf ==nil {continue ;};if _ ,_bfdf :=_fcdcb [_cfaaf ._eebf ];_bfdf {continue ;};_fcdcb [_cfaaf ._eebf ]=struct{}{};_caecbg =append (_caecbg ,_cfaaf );};};if len (_caecbg )==0{return nil ;};if _acfgd .AcroForm ==nil {_acfgd .AcroForm =NewPdfAcroForm ();
};_acfgd .AcroForm .Fields =&_caecbg ;return nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_edgg :=&PdfFilespec {};_edgg ._afdac =_eag .MakeIndirectObject (_eag .MakeDict ());_edgg .Desc =_eag .MakeString (file .Description );_edgg .EF =file .ToPdfObject ();_edgg .F =_eag .MakeString (file .Name );
_edgg .UF =_eag .MakeEncodedString (file .Name ,true );_daefa :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_daefa ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_daefa ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_daefa ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_daefa ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_edgg .AFRelationship =_eag .MakeName (_daefa );
return _edgg ;};

// ToPdfObject implements interface PdfModel.
func (_cgcg *PdfAnnotationText )ToPdfObject ()_eag .PdfObject {_cgcg .PdfAnnotation .ToPdfObject ();_bbfa :=_cgcg ._gfa ;_ebbab :=_bbfa .PdfObject .(*_eag .PdfObjectDictionary );if _cgcg .PdfAnnotationMarkup !=nil {_cgcg .PdfAnnotationMarkup .appendToPdfDictionary (_ebbab );
};_ebbab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0054\u0065\u0078\u0074"));_ebbab .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cgcg .Open );_ebbab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cgcg .Name );_ebbab .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cgcg .State );
_ebbab .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cgcg .StateModel );return _bbfa ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bdeabb *LTV )EnableByName (name string ,extraCerts []*_ed .Certificate )error {_egafe :=_bdeabb ._cbdb ._egeg .AcroForm ;for _ ,_facbc :=range _egafe .AllFields (){_bdgcb ,_ :=_facbc .GetContext ().(*PdfFieldSignature );if _bdgcb ==nil {continue ;
};if _dgecd :=_bdgcb .PartialName ();_dgecd !=name {continue ;};return _bdeabb .Enable (_bdgcb .V ,extraCerts );};return nil ;};func (_gbef *PdfReader )newPdfAnnotationSquareFromDict (_cfe *_eag .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_cgac :=PdfAnnotationSquare {};
_bcdfd ,_afccf :=_gbef .newPdfAnnotationMarkupFromDict (_cfe );if _afccf !=nil {return nil ,_afccf ;};_cgac .PdfAnnotationMarkup =_bcdfd ;_cgac .BS =_cfe .Get ("\u0042\u0053");_cgac .IC =_cfe .Get ("\u0049\u0043");_cgac .BE =_cfe .Get ("\u0042\u0045");
_cgac .RD =_cfe .Get ("\u0052\u0044");return &_cgac ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _eag .PdfObject ;Name _eag .PdfObject ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ddff PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_eag .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aage []_eag .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_effe []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gcgg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gcgg .flattenFieldsWithOpts (false ,appgen ,opts );};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cada :_eag .MakeIndirectObject (_eag .MakeDict ())};};func _bgafe (_daega _eag .PdfObject )(*PdfPattern ,error ){_eegdg :=&PdfPattern {};var _fdead *_eag .PdfObjectDictionary ;
if _caecd ,_gbedec :=_eag .GetIndirect (_daega );_gbedec {_eegdg ._bcdbe =_caecd ;_dadcd ,_abaf :=_caecd .PdfObject .(*_eag .PdfObjectDictionary );if !_abaf {_ebdd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_caecd .PdfObject );
return nil ,_eag .ErrTypeError ;};_fdead =_dadcd ;}else if _ddbe ,_bcfab :=_eag .GetStream (_daega );_bcfab {_eegdg ._bcdbe =_ddbe ;_fdead =_ddbe .PdfObjectDictionary ;}else {_ebdd .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_daega );
return nil ,_eag .ErrTypeError ;};_gfdab :=_fdead .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _gfdab ==nil {_ebdd .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdaaa ,_efddc :=_gfdab .(*_eag .PdfObjectInteger );if !_efddc {_ebdd .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gfdab );
return nil ,_eag .ErrTypeError ;};if *_fdaaa !=1&&*_fdaaa !=2{_ebdd .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fdaaa );return nil ,_eag .ErrRangeError ;
};_eegdg .PatternType =int64 (*_fdaaa );switch *_fdaaa {case 1:_fcfggd ,_acgeb :=_afccbb (_fdead );if _acgeb !=nil {return nil ,_acgeb ;};_fcfggd .PdfPattern =_eegdg ;_eegdg ._aaaca =_fcfggd ;return _eegdg ,nil ;case 2:_egfaed ,_dccab :=_bfggg (_fdead );
if _dccab !=nil {return nil ,_dccab ;};_egfaed .PdfPattern =_eegdg ;_eegdg ._aaaca =_egfaed ;return _eegdg ,nil ;};return nil ,_bag .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};const (_ PdfOutputIntentType =iota ;
PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eebb :=NewPdfAnnotation ();_cgf :=&PdfAnnotationLine {};_cgf .PdfAnnotation =_eebb ;_cgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eebb .SetContext (_cgf );return _cgf ;};func (_gdfec Image )getBase ()_fde .ImageBase {return _fde .NewImageBase (int (_gdfec .Width ),int (_gdfec .Height ),int (_gdfec .BitsPerComponent ),_gdfec .ColorComponents ,_gdfec .Data ,_gdfec ._cbefd ,_gdfec ._dadbe );
};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// Width returns the width of `rect`.
func (_dabgf *PdfRectangle )Width ()float64 {return _gcg .Abs (_dabgf .Urx -_dabgf .Llx )};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_abefc *PdfPageResources )GetColorspaceByName (keyName _eag .PdfObjectName )(PdfColorspace ,bool ){_cdaaf ,_cbefcf :=_abefc .GetColorspaces ();if _cbefcf !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbefcf );
return nil ,false ;};if _cdaaf ==nil {return nil ,false ;};_defee ,_bdgdc :=_cdaaf .Colorspaces [string (keyName )];if !_bdgdc {return nil ,false ;};return _defee ,true ;};

// SetName sets the `Name` field of the signature.
func (_gfffgd *PdfSignature )SetName (name string ){_gfffgd .Name =_eag .MakeEncodedString (name ,true )};func (_cafbc *PdfWriter )copyObject (_aefdd _eag .PdfObject ,_afcfd map[_eag .PdfObject ]_eag .PdfObject ,_dbfa map[_eag .PdfObject ]struct{},_faafd bool )_eag .PdfObject {_cgccf :=!_cafbc ._fgfg &&_dbfa !=nil ;
if _dbeg ,_geab :=_afcfd [_aefdd ];_geab {if _cgccf &&!_faafd {delete (_dbfa ,_aefdd );};return _dbeg ;};if _aefdd ==nil {_aadeff :=_eag .MakeNull ();return _aadeff ;};_gceg :=_aefdd ;switch _cdefe :=_aefdd .(type ){case *_eag .PdfObjectArray :_fgbega :=_eag .MakeArray ();
_gceg =_fgbega ;_afcfd [_aefdd ]=_gceg ;for _ ,_ebga :=range _cdefe .Elements (){_fgbega .Append (_cafbc .copyObject (_ebga ,_afcfd ,_dbfa ,_faafd ));};case *_eag .PdfObjectStreams :_ccfdc :=&_eag .PdfObjectStreams {PdfObjectReference :_cdefe .PdfObjectReference };
_gceg =_ccfdc ;_afcfd [_aefdd ]=_gceg ;for _ ,_egbe :=range _cdefe .Elements (){_ccfdc .Append (_cafbc .copyObject (_egbe ,_afcfd ,_dbfa ,_faafd ));};case *_eag .PdfObjectStream :_gdddg :=&_eag .PdfObjectStream {Stream :_cdefe .Stream ,PdfObjectReference :_cdefe .PdfObjectReference ,Lazy :_cdefe .Lazy ,TempFile :_cdefe .TempFile };
_gceg =_gdddg ;_afcfd [_aefdd ]=_gceg ;_gdddg .PdfObjectDictionary =_cafbc .copyObject (_cdefe .PdfObjectDictionary ,_afcfd ,_dbfa ,_faafd ).(*_eag .PdfObjectDictionary );case *_eag .PdfObjectDictionary :var _efefc bool ;if _cgccf &&!_faafd {if _dbfcg ,_ :=_eag .GetNameVal (_cdefe .Get ("\u0054\u0079\u0070\u0065"));
_dbfcg =="\u0050\u0061\u0067\u0065"{_ ,_aadca :=_cafbc ._gcbbbd [_cdefe ];_faafd =!_aadca ;_efefc =_faafd ;};};_bgfgd :=_eag .MakeDict ();_gceg =_bgfgd ;_afcfd [_aefdd ]=_gceg ;for _ ,_fdegb :=range _cdefe .Keys (){_bgfgd .Set (_fdegb ,_cafbc .copyObject (_cdefe .Get (_fdegb ),_afcfd ,_dbfa ,_faafd ));
};if _efefc {_gceg =_eag .MakeNull ();_faafd =false ;};case *_eag .PdfIndirectObject :_egcda :=&_eag .PdfIndirectObject {PdfObjectReference :_cdefe .PdfObjectReference };_gceg =_egcda ;_afcfd [_aefdd ]=_gceg ;_egcda .PdfObject =_cafbc .copyObject (_cdefe .PdfObject ,_afcfd ,_dbfa ,_faafd );
case *_eag .PdfObjectString :_bcea :=*_cdefe ;_gceg =&_bcea ;_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectName :_dcgfeg :=*_cdefe ;_gceg =&_dcgfeg ;_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectNull :_gceg =_eag .MakeNull ();_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectInteger :_cfgb :=*_cdefe ;
_gceg =&_cfgb ;_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectReference :_gggfg :=*_cdefe ;_gceg =&_gggfg ;_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectFloat :_egdcg :=*_cdefe ;_gceg =&_egdcg ;_afcfd [_aefdd ]=_gceg ;case *_eag .PdfObjectBool :_dfafga :=*_cdefe ;
_gceg =&_dfafga ;_afcfd [_aefdd ]=_gceg ;case *pdfSignDictionary :_feegb :=&pdfSignDictionary {PdfObjectDictionary :_eag .MakeDict (),_fdbgd :_cdefe ._fdbgd ,_gafdb :_cdefe ._gafdb };_gceg =_feegb ;_afcfd [_aefdd ]=_gceg ;for _ ,_dcaa :=range _cdefe .Keys (){_feegb .Set (_dcaa ,_cafbc .copyObject (_cdefe .Get (_dcaa ),_afcfd ,_dbfa ,_faafd ));
};default:_ebdd .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_aefdd );
};if _cgccf &&_faafd {_dbfa [_aefdd ]=struct{}{};};return _gceg ;};

// BaseFont returns the font's "BaseFont" field.
func (_bggd *PdfFont )BaseFont ()string {return _bggd .baseFields ()._fgcc };

// SetImage updates XObject Image with new image data.
func (_aecdb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_aecdb .Filter .UpdateParams (img .GetParamsDict ());_gabecc ,_eccece :=_aecdb .Filter .EncodeBytes (img .Data );if _eccece !=nil {return _eccece ;};_aecdb .Stream =_gabecc ;_caggeg :=img .Width ;
_aecdb .Width =&_caggeg ;_ebaab :=img .Height ;_aecdb .Height =&_ebaab ;_agggd :=img .BitsPerComponent ;_aecdb .BitsPerComponent =&_agggd ;if cs ==nil {if img .ColorComponents ==1{_aecdb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_aecdb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_aecdb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _bag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_aecdb .ColorSpace =cs ;};return nil ;
};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dbe :=NewPdfAnnotation ();_agaa :=&PdfAnnotationPolyLine {};_agaa .PdfAnnotation =_dbe ;_agaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbe .SetContext (_agaa );return _agaa ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gbfa :=NewPdfAnnotation ();_gcag :=&PdfAnnotationLink {};_gcag .PdfAnnotation =_gbfa ;_gbfa .SetContext (_gcag );return _gcag ;};func (_fgge *PdfFont )baseFields ()*fontCommon {if _fgge ._dagg ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _fgge ._dagg .baseFields ();};func _ffcb (_dgfcb *_eag .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dgcga :=PdfShadingType2 {};_edfdf :=_dgfcb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _edfdf ==nil {_ebdd .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bdgfe ,_fbbab :=_edfdf .(*_eag .PdfObjectArray );if !_fbbab {_ebdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edfdf );
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdgfe .Len ()!=4{_ebdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdgfe .Len ());
return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dgcga .Coords =_bdgfe ;if _aeebc :=_dgfcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_aeebc !=nil {_aeebc =_eag .TraceToDirectObject (_aeebc );
_afad ,_gdecc :=_aeebc .(*_eag .PdfObjectArray );if !_gdecc {_ebdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeebc );return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgcga .Domain =_afad ;};_edfdf =_dgfcb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _edfdf ==nil {_ebdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgcga .Function =[]PdfFunction {};if _dcfdd ,_fedda :=_edfdf .(*_eag .PdfObjectArray );_fedda {for _ ,_eaga :=range _dcfdd .Elements (){_fgfcf ,_fbgebe :=_baaab (_eaga );if _fbgebe !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbgebe );
return nil ,_fbgebe ;};_dgcga .Function =append (_dgcga .Function ,_fgfcf );};}else {_ffcdc ,_eaddaf :=_baaab (_edfdf );if _eaddaf !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaddaf );
return nil ,_eaddaf ;};_dgcga .Function =append (_dgcga .Function ,_ffcdc );};if _faagf :=_dgfcb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_faagf !=nil {_faagf =_eag .TraceToDirectObject (_faagf );_gfaea ,_ffaeec :=_faagf .(*_eag .PdfObjectArray );
if !_ffaeec {_ebdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faagf );return nil ,_eag .ErrTypeError ;};if _gfaea .Len ()!=2{_ebdd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gfaea .Len ());
return nil ,ErrInvalidAttribute ;};_dgcga .Extend =_gfaea ;};return &_dgcga ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_fcbde *PdfOutputIntent )ParsePdfObject (object _eag .PdfObject )error {_cbbgb ,_ccbcb :=_eag .GetDict (object );if !_ccbcb {_ebdd .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _bag .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fcbde ._dafa =_cbbgb ;_fcbde .Type ,_ =_cbbgb .GetString ("\u0054\u0079\u0070\u0065");_faddg ,_ccbcb :=_cbbgb .GetString ("\u0053");if _ccbcb {switch _faddg {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fcbde .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fcbde .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fcbde .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fcbde .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fcbde .S =PdfOutputIntentTypeX ;
};};_fcbde .OutputCondition ,_ =_cbbgb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fcbde .OutputConditionIdentifier ,_ =_cbbgb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fcbde .RegistryName ,_ =_cbbgb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fcbde .Info ,_ =_cbbgb .GetString ("\u0049\u006e\u0066\u006f");if _abfdc ,_fbgcg :=_eag .GetStream (_cbbgb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fbgcg {_fcbde .ColorComponents ,_ =_eag .GetIntVal (_abfdc .Get ("\u004e"));_defdd ,_fgfec :=_eag .DecodeStream (_abfdc );if _fgfec !=nil {return _fgfec ;};_fcbde .DestOutputProfile =_defdd ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deceg *PdfShadingType3 )ToPdfObject ()_eag .PdfObject {_deceg .PdfShading .ToPdfObject ();_aafb ,_bcbfc :=_deceg .getShadingDict ();if _bcbfc !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _deceg .Coords !=nil {_aafb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_deceg .Coords );};if _deceg .Domain !=nil {_aafb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_deceg .Domain );};if _deceg .Function !=nil {if len (_deceg .Function )==1{_aafb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deceg .Function [0].ToPdfObject ());
}else {_ddfbc :=_eag .MakeArray ();for _ ,_aaadg :=range _deceg .Function {_ddfbc .Append (_aaadg .ToPdfObject ());};_aafb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddfbc );};};if _deceg .Extend !=nil {_aafb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_deceg .Extend );
};return _deceg ._aadgg ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cabff .Lock ();defer _cabff .Unlock ();_effbe =author };

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _eag .StreamEncoder ;Intent _eag .PdfObject ;ImageMask _eag .PdfObject ;Mask _eag .PdfObject ;Matte _eag .PdfObject ;Decode _eag .PdfObject ;Interpolate _eag .PdfObject ;
Alternatives _eag .PdfObject ;SMask _eag .PdfObject ;SMaskInData _eag .PdfObject ;Name _eag .PdfObject ;StructParent _eag .PdfObject ;ID _eag .PdfObject ;OPI _eag .PdfObject ;Metadata _eag .PdfObject ;OC _eag .PdfObject ;Stream []byte ;_cgfecg *_eag .PdfObjectStream ;
_ecbga bool ;};

// GetPerms returns the Permissions dictionary
func (_acbc *PdfReader )GetPerms ()*Permissions {return _acbc ._eecef };

// SetFontByName sets the font specified by keyName to the given object.
func (_gbbff *PdfPageResources )SetFontByName (keyName _eag .PdfObjectName ,obj _eag .PdfObject )error {if _gbbff .Font ==nil {_gbbff .Font =_eag .MakeDict ();};_beeb ,_dfbecb :=_eag .TraceToDirectObject (_gbbff .Font ).(*_eag .PdfObjectDictionary );if !_dfbecb {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eag .TraceToDirectObject (_gbbff .Font ));
return _eag .ErrTypeError ;};_beeb .Set (keyName ,obj );return nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fafae *PdfFontDescriptor )ToPdfObject ()_eag .PdfObject {_adaca :=_eag .MakeDict ();if _fafae ._ecdd ==nil {_fafae ._ecdd =&_eag .PdfIndirectObject {};};_fafae ._ecdd .PdfObject =_adaca ;_adaca .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fafae .FontName !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fafae .FontName );};if _fafae .FontFamily !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fafae .FontFamily );};if _fafae .FontStretch !=nil {_adaca .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fafae .FontStretch );
};if _fafae .FontWeight !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fafae .FontWeight );};if _fafae .Flags !=nil {_adaca .Set ("\u0046\u006c\u0061g\u0073",_fafae .Flags );};if _fafae .FontBBox !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fafae .FontBBox );
};if _fafae .ItalicAngle !=nil {_adaca .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fafae .ItalicAngle );};if _fafae .Ascent !=nil {_adaca .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fafae .Ascent );};if _fafae .Descent !=nil {_adaca .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fafae .Descent );
};if _fafae .Leading !=nil {_adaca .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fafae .Leading );};if _fafae .CapHeight !=nil {_adaca .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fafae .CapHeight );};if _fafae .XHeight !=nil {_adaca .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fafae .XHeight );
};if _fafae .StemV !=nil {_adaca .Set ("\u0053\u0074\u0065m\u0056",_fafae .StemV );};if _fafae .StemH !=nil {_adaca .Set ("\u0053\u0074\u0065m\u0048",_fafae .StemH );};if _fafae .AvgWidth !=nil {_adaca .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fafae .AvgWidth );
};if _fafae .MaxWidth !=nil {_adaca .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fafae .MaxWidth );};if _fafae .MissingWidth !=nil {_adaca .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fafae .MissingWidth );};
if _fafae .FontFile !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fafae .FontFile );};if _fafae .FontFile2 !=nil {_adaca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fafae .FontFile2 );};if _fafae .FontFile3 !=nil {_adaca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fafae .FontFile3 );
};if _fafae .CharSet !=nil {_adaca .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fafae .CharSet );};if _fafae .Style !=nil {_adaca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fafae .FontName );};if _fafae .Lang !=nil {_adaca .Set ("\u004c\u0061\u006e\u0067",_fafae .Lang );
};if _fafae .FD !=nil {_adaca .Set ("\u0046\u0044",_fafae .FD );};if _fafae .CIDSet !=nil {_adaca .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fafae .CIDSet );};return _fafae ._ecdd ;};func _cgcf (_fafafe *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fafafe }};


// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_fdga :=NewPdfAnnotation ();_gbc :=&PdfAnnotationCaret {};_gbc .PdfAnnotation =_fdga ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdga .SetContext (_gbc );return _gbc ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_bfdfd *PdfWriter )updateObjectNumbers (){_gcaff :=_bfdfd .ObjNumOffset ;_bgacf :=0;for _ ,_ebgd :=range _bfdfd ._eggea {_gcagb :=int64 (_bgacf +1+_gcaff );_affga :=true ;if _bfdfd ._fgfg {if _adcfd ,_fgcac :=_bfdfd ._fbbde [_ebgd ];
_fgcac {_gcagb =_adcfd ;_affga =false ;};};switch _ceacf :=_ebgd .(type ){case *_eag .PdfIndirectObject :_ceacf .ObjectNumber =_gcagb ;_ceacf .GenerationNumber =0;case *_eag .PdfObjectStream :_ceacf .ObjectNumber =_gcagb ;_ceacf .GenerationNumber =0;case *_eag .PdfObjectStreams :_ceacf .ObjectNumber =_gcagb ;
_ceacf .GenerationNumber =0;default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ceacf );continue ;
};if _affga {_bgacf ++;};};_bgcef :=func (_efbbgc _eag .PdfObject )int64 {switch _dagaa :=_efbbgc .(type ){case *_eag .PdfIndirectObject :return _dagaa .ObjectNumber ;case *_eag .PdfObjectStream :return _dagaa .ObjectNumber ;case *_eag .PdfObjectStreams :return _dagaa .ObjectNumber ;
};return 0;};_ea .SliceStable (_bfdfd ._eggea ,func (_cfaafa ,_fdfeg int )bool {return _bgcef (_bfdfd ._eggea [_cfaafa ])< _bgcef (_bfdfd ._eggea [_fdfeg ])});};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_egdfdc *_ce .Document )error ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gbgad *LTV )EnableAll (extraCerts []*_ed .Certificate )error {_ffcd :=_gbgad ._cbdb ._egeg .AcroForm ;for _ ,_geeg :=range _ffcd .AllFields (){_dbdcc ,_ :=_geeg .GetContext ().(*PdfFieldSignature );if _dbdcc ==nil {continue ;};_ccede :=_dbdcc .V ;
if _fedcg :=_gbgad .validateSig (_ccede );_fedcg !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fedcg );
};if _eccca :=_gbgad .Enable (_ccede ,extraCerts );_eccca !=nil {return _eccca ;};};return nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_addfd :=&PdfSignature {Type :_eag .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fbbff :=&pdfSignDictionary {PdfObjectDictionary :_eag .MakeDict (),_fdbgd :&handler ,_gafdb :_addfd };
_addfd ._bdda =_eag .MakeIndirectObject (_fbbff );return _addfd ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bcega *XObjectImage )SetFilter (encoder _eag .StreamEncoder )error {_edcef :=_bcega .Stream ;_eagb ,_cddbg :=_bcega .Filter .DecodeBytes (_edcef );if _cddbg !=nil {return _cddbg ;};_bcega .Filter =encoder ;encoder .UpdateParams (_bcega .getParamsDict ());
_edcef ,_cddbg =encoder .EncodeBytes (_eagb );if _cddbg !=nil {return _cddbg ;};_bcega .Stream =_edcef ;return nil ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_beabc *PdfInfo )ToPdfObject ()_eag .PdfObject {_dbcfb :=_eag .MakeDict ();_dbcfb .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_beabc .Title );_dbcfb .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_beabc .Author );_dbcfb .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_beabc .Subject );
_dbcfb .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_beabc .Keywords );_dbcfb .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_beabc .Creator );_dbcfb .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_beabc .Producer );
_dbcfb .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_beabc .Trapped );if _beabc .CreationDate !=nil {_dbcfb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_beabc .CreationDate .ToPdfObject ());};if _beabc .ModifiedDate !=nil {_dbcfb .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_beabc .ModifiedDate .ToPdfObject ());
};for _ ,_beac :=range _beabc ._gege .Keys (){_dbcfb .SetIfNotNil (_beac ,_beabc ._gege .Get (_beac ));};return _dbcfb ;};

// ToPdfObject implements interface PdfModel.
func (_aeec *PdfAnnotation3D )ToPdfObject ()_eag .PdfObject {_aeec .PdfAnnotation .ToPdfObject ();_fead :=_aeec ._gfa ;_bbag :=_fead .PdfObject .(*_eag .PdfObjectDictionary );_bbag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0033\u0044"));
_bbag .SetIfNotNil ("\u0033\u0044\u0044",_aeec .T3DD );_bbag .SetIfNotNil ("\u0033\u0044\u0056",_aeec .T3DV );_bbag .SetIfNotNil ("\u0033\u0044\u0041",_aeec .T3DA );_bbag .SetIfNotNil ("\u0033\u0044\u0049",_aeec .T3DI );_bbag .SetIfNotNil ("\u0033\u0044\u0042",_aeec .T3DB );
return _fead ;};func (_ddged *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ddged ._ecdgfc };

// SetContext set the sub annotation (context).
func (_abfdec *PdfShading )SetContext (ctx PdfModel ){_abfdec ._dcgab =ctx };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eag .PdfObject ;IC _eag .PdfObject ;RO _eag .PdfObject ;OverlayText _eag .PdfObject ;Repeat _eag .PdfObject ;DA _eag .PdfObject ;Q _eag .PdfObject ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bgcdg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgcdg .AlternateSpace ==nil {return nil ,_bag .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bgcdg .AlternateSpace .ColorToRGB (color );};func _bfffg (_adfdd _eag .PdfObject )(string ,error ){_adfdd =_eag .TraceToDirectObject (_adfdd );switch _bfcee :=_adfdd .(type ){case *_eag .PdfObjectString :return _bfcee .Str (),nil ;case *_eag .PdfObjectStream :_faefc ,_aecd :=_eag .DecodeStream (_bfcee );
if _aecd !=nil {return "",_aecd ;};return string (_faefc ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_adfdd );
};func (_aadgf *Names )addEmbeddedFile (_eecbe *EmbeddedFile )error {if _aadgf .EmbeddedFiles ==nil {_aadgf .EmbeddedFiles =_eag .MakeDict ();_aadgf .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_eag .MakeArray ());};_gbafe :=NewPdfFileSpecFromEmbeddedFile (_eecbe );
_bcac :=_aadgf .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_feeaa ,_feac :=_bcac .(*_eag .PdfObjectArray );if !_feac {return _bag .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};
type FileSpecMap struct{_dbfbc string ;_bfeae *PdfFilespec ;};_ggbe :=[]FileSpecMap {};for _ffebf :=0;_ffebf < len (_feeaa .Elements ());_ffebf +=2{if _ffebf %2==0{_gccad :=_feeaa .Get (_ffebf );if _gccad !=nil {_egfc :=_gccad .(*_eag .PdfObjectString );
_caafb :=_feeaa .Get (_ffebf +1);_ffgd ,_gacgc :=NewPdfFilespecFromObj (_caafb );if _gacgc !=nil {return _gacgc ;};_ggbe =append (_ggbe ,FileSpecMap {_dbfbc :_egfc .String (),_bfeae :_ffgd });};};};_ggbe =append (_ggbe ,FileSpecMap {_dbfbc :_eecbe .Name ,_bfeae :_gbafe });
_ea .Slice (_ggbe ,func (_cebd ,_bfbeaa int )bool {return _ggbe [_cebd ]._dbfbc < _ggbe [_bfbeaa ]._dbfbc });_feeaa =_eag .MakeArray ();for _ ,_cbeg :=range _ggbe {_feeaa .Append (_eag .MakeString (_cbeg ._dbfbc ));_feeaa .Append (_cbeg ._bfeae .ToPdfObject ());
};_aadgf .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_feeaa );return nil ;};func _gbac (_ccfe *_eag .PdfObjectDictionary ,_ebcc *fontCommon )(*pdfCIDFontType2 ,error ){if _ebcc ._cdabe !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ebdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ebcc );
return nil ,_eag .ErrRangeError ;};_bgagc :=_cgcf (_ebcc );_fcbg ,_bcbb :=_eag .GetDict (_ccfe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bcbb {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ebcc );
return nil ,ErrRequiredAttributeMissing ;};_bgagc .CIDSystemInfo =_fcbg ;_bgagc .DW =_ccfe .Get ("\u0044\u0057");_bgagc .W =_ccfe .Get ("\u0057");_bgagc .DW2 =_ccfe .Get ("\u0044\u0057\u0032");_bgagc .W2 =_ccfe .Get ("\u0057\u0032");_bgagc .CIDToGIDMap =_ccfe .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bgagc ._faag =1000.0;if _bcgef ,_fafgf :=_eag .GetNumberAsFloat (_bgagc .DW );_fafgf ==nil {_bgagc ._faag =_bcgef ;};_bgbg ,_ddcg :=_ebac (_bgagc .W );if _ddcg !=nil {return nil ,_ddcg ;};if _bgbg ==nil {_bgbg =map[_gbf .CharCode ]float64 {};};_bgagc ._fdfa =_bgbg ;
return _bgagc ,nil ;};func _ffge ()*modelManager {_eecfd :=modelManager {};_eecfd ._gfbgg =map[PdfModel ]_eag .PdfObject {};_eecfd ._agda =map[_eag .PdfObject ]PdfModel {};return &_eecfd ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_eag .PdfObjectArray ;ExtGState _eag .PdfObject ;};func (_bbcc fontCommon )isCIDFont ()bool {if _bbcc ._cdabe ==""{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbcc );
};_gdgc :=false ;switch _bbcc ._cdabe {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gdgc =true ;};_ebdd .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_gdgc ,_bbcc );
return _gdgc ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_eag .PdfObjectString ;Q *_eag .PdfObjectInteger ;DS *_eag .PdfObjectString ;RV _eag .PdfObject ;};

// String returns a string that describes `base`.
func (_babgc fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_babgc .coreString ());};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ddfbda *PdfPageResources )GenerateXObjectName ()_eag .PdfObjectName {_dccd :=1;for {_fdefg :=_eag .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dccd ));if !_ddfbda .HasXObjectByName (*_fdefg ){return *_fdefg ;};_dccd ++;};};

// CustomKeys returns all custom info keys as list.
func (_bgfce *PdfInfo )CustomKeys ()[]string {if _bgfce ._gege ==nil {return nil ;};_ddce :=make ([]string ,len (_bgfce ._gege .Keys ()));for _ ,_abedf :=range _bgfce ._gege .Keys (){_ddce =append (_ddce ,_abedf .String ());};return _ddce ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cdcd :=NewPdfAnnotation ();_aef :=&PdfAnnotationTrapNet {};_aef .PdfAnnotation =_cdcd ;_cdcd .SetContext (_aef );return _aef ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_gdfe :=NewPdfAnnotation ();_facg :=&PdfAnnotationPolygon {};_facg .PdfAnnotation =_gdfe ;_facg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdfe .SetContext (_facg );return _facg ;};

// GetOptimizer returns current PDF optimizer.
func (_bbcab *PdfWriter )GetOptimizer ()Optimizer {return _bbcab ._ceag };

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_ggcf :=&PdfColorPatternType2 {};return _ggcf };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_cfbcd *PdfReader )GetOutlines ()(*Outline ,error ){if _cfbcd ==nil {return nil ,_bag .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_aaegd :=_cfbcd .GetOutlineTree ();if _aaegd ==nil {return nil ,_bag .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gfged func (_dadcfc *PdfOutlineTreeNode ,_gbdaa *[]*OutlineItem );_gfged =func (_gdfdc *PdfOutlineTreeNode ,_eeedea *[]*OutlineItem ){if _gdfdc ==nil {return ;};if _gdfdc ._addfb ==nil {_ebdd .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _agfe *OutlineItem ;if _gbacd ,_afafc :=_gdfdc ._addfb .(*PdfOutlineItem );_afafc {_gfdg :=_gbacd .Dest ;if (_gfdg ==nil ||_eag .IsNullObject (_gfdg ))&&_gbacd .A !=nil {if _ddeae ,_bdcad :=_eag .GetDict (_gbacd .A );_bdcad {if _cdabea ,_gfeca :=_eag .GetArray (_ddeae .Get ("\u0044"));
_gfeca {_gfdg =_cdabea ;}else {_efcaa ,_cdaedg :=_eag .GetString (_ddeae .Get ("\u0044"));if !_cdaedg {return ;};_abefdg ,_cdaedg :=_cfbcd ._adbgg .Get ("\u004e\u0061\u006de\u0073").(*_eag .PdfObjectReference );if !_cdaedg {return ;};_bdfae ,_fcacg :=_cfbcd ._afegd .LookupByReference (*_abefdg );
if _fcacg !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fcacg .Error ());
return ;};_cbgcad ,_cdaedg :=_bdfae .(*_eag .PdfIndirectObject );if !_cdaedg {return ;};_dceg :=map[_eag .PdfObject ]struct{}{};_fcacg =_cfbcd .buildNameNodes (_cbgcad ,_dceg );if _fcacg !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fcacg .Error ());
return ;};for _eccge :=range _dceg {_cgbeb ,_gagb :=_eag .GetDict (_eccge );if !_gagb {continue ;};_cdfea ,_gagb :=_eag .GetArray (_cgbeb .Get ("\u004e\u0061\u006de\u0073"));if !_gagb {continue ;};for _gegee ,_cagfc :=range _cdfea .Elements (){switch _cagfc .(type ){case *_eag .PdfObjectString :if _cagfc .String ()==_efcaa .String (){if _cggfe :=_cdfea .Get (_gegee +1);
_cggfe !=nil {if _fgacb ,_cfaeg :=_eag .GetDict (_cggfe );_cfaeg {_gfdg =_fgacb .Get ("\u0044");break ;};};};};};};};};};var _bfbf OutlineDest ;if _gfdg !=nil &&!_eag .IsNullObject (_gfdg ){if _faaccf ,_bbgcg :=_egad (_gfdg ,_cfbcd );_bbgcg ==nil {_bfbf =*_faaccf ;
}else {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gfdg ,_bbgcg );
};};_agfe =NewOutlineItem (_gbacd .Title .Decoded (),_bfbf );*_eeedea =append (*_eeedea ,_agfe );if _gbacd .Next !=nil {_gfged (_gbacd .Next ,_eeedea );};};if _gdfdc .First !=nil {if _agfe !=nil {_eeedea =&_agfe .Entries ;};_gfged (_gdfdc .First ,_eeedea );
};};_dabe :=NewOutline ();_gfged (_aaegd ,&_dabe .Entries );return _dabe ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_fcgad *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_fddd :=&PdfColorPattern {};_ebaa ,_acdab :=objects [len (objects )-1].(*_eag .PdfObjectName );if !_acdab {_ebdd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_fddd .PatternName =*_ebaa ;if len (objects )> 1{_agccaa :=objects [0:len (objects )-1];if _fcgad .UnderlyingCS ==nil {_ebdd .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_bag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_adac ,_fbaaa :=_fcgad .UnderlyingCS .ColorFromPdfObjects (_agccaa );if _fbaaa !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_fbaaa );
return nil ,_fbaaa ;};_fddd .Color =_adac ;};return _fddd ,nil ;};func (_gfgefd *PdfWriter )writeObject (_accef int ,_bfbac _eag .PdfObject ){_ebdd .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_accef );
if _gdbcd ,_cecaa :=_bfbac .(*_eag .PdfIndirectObject );_cecaa {_gfgefd ._dfdb [_accef ]=crossReference {Type :1,Offset :_gfgefd ._bfacf ,Generation :_gdbcd .GenerationNumber };_dfdcd :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_accef );
if _dggab ,_eaag :=_gdbcd .PdfObject .(*pdfSignDictionary );_eaag {_dggab ._agagb =_gfgefd ._bfacf +int64 (len (_dfdcd ));};if _gdbcd .PdfObject ==nil {_ebdd .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gdbcd .PdfObject =_eag .MakeNull ();};_dfdcd +=_gdbcd .PdfObject .WriteString ();_dfdcd +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_gfgefd .writeString (_dfdcd );return ;};if _ddfce ,_dgaed :=_bfbac .(*_eag .PdfObjectStream );_dgaed {_gfgefd ._dfdb [_accef ]=crossReference {Type :1,Offset :_gfgefd ._bfacf ,Generation :_ddfce .GenerationNumber };
_aaadc :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_accef );_aaadc +=_ddfce .PdfObjectDictionary .WriteString ();_aaadc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gfgefd .writeString (_aaadc );if _ddfce .Lazy {_ecffg ,_fcef :=_fc .ReadFile (_ddfce .TempFile );
if _fcef !=nil {_ebdd .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ddfce .TempFile );return ;};_gfgefd .writeBytes (_ecffg );
_fc .Remove (_ddfce .TempFile );}else {_gfgefd .writeBytes (_ddfce .Stream );};_gfgefd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fgddc ,_caaeag :=_bfbac .(*_eag .PdfObjectStreams );
_caaeag {_gfgefd ._dfdb [_accef ]=crossReference {Type :1,Offset :_gfgefd ._bfacf ,Generation :_fgddc .GenerationNumber };_befbb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_accef );var _cbbeg []string ;var _acbcc string ;var _fdffb int64 ;
for _bcgfc ,_deaabg :=range _fgddc .Elements (){_gagaa ,_dbadb :=_deaabg .(*_eag .PdfIndirectObject );if !_dbadb {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_accef ,_deaabg );
continue ;};_cabaccc :=_gagaa .PdfObject .WriteString ()+"\u0020";_acbcc =_acbcc +_cabaccc ;_cbbeg =append (_cbbeg ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_gagaa .ObjectNumber ,_fdffb ));_gfgefd ._dfdb [int (_gagaa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_accef ,Index :_bcgfc };
_fdffb =_fdffb +int64 (len ([]byte (_cabaccc )));};_aefgc :=_cb .Join (_cbbeg ,"\u0020")+"\u0020";_agfbd :=_eag .NewFlateEncoder ();_cdeeb :=_agfbd .MakeStreamDict ();_cdeeb .Set (_eag .PdfObjectName ("\u0054\u0079\u0070\u0065"),_eag .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gggeeg :=int64 (_fgddc .Len ());_cdeeb .Set (_eag .PdfObjectName ("\u004e"),_eag .MakeInteger (_gggeeg ));_gbdff :=int64 (len (_aefgc ));_cdeeb .Set (_eag .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_eag .MakeInteger (_gbdff ));_efcae ,_ :=_agfbd .EncodeBytes ([]byte (_aefgc +_acbcc ));
_cfgbe :=int64 (len (_efcae ));_cdeeb .Set (_eag .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_eag .MakeInteger (_cfgbe ));_befbb +=_cdeeb .WriteString ();_befbb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gfgefd .writeString (_befbb );
_gfgefd .writeBytes (_efcae );_gfgefd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_gfgefd .writeString (_bfbac .WriteString ());};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_adad *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _adad .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject implements interface PdfModel.
func (_ff *PdfActionLaunch )ToPdfObject ()_eag .PdfObject {_ff .PdfAction .ToPdfObject ();_ebdg :=_ff ._ggd ;_dbd :=_ebdg .PdfObject .(*_eag .PdfObjectDictionary );_dbd .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeLaunch )));if _ff .F !=nil {_dbd .Set ("\u0046",_ff .F .ToPdfObject ());
};_dbd .SetIfNotNil ("\u0057\u0069\u006e",_ff .Win );_dbd .SetIfNotNil ("\u004d\u0061\u0063",_ff .Mac );_dbd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ff .Unix );_dbd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ff .NewWindow );return _ebdg ;
};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_gbccfe *Names )ToPdfObject ()_eag .PdfObject {_acccc :=_gbccfe ._fgdcb ;_ddgd ,_edcfb :=_acccc .PdfObject .(*_eag .PdfObjectDictionary );if !_edcfb {_ebdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _acccc ;};if _gbccfe .EmbeddedFiles !=nil {_ddgd .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_eag .MakeIndirectObject (_gbccfe .EmbeddedFiles ));};return _acccc ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eag .PdfObject ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_af :=&PdfAction {};_af ._ggd =_eag .MakeIndirectObject (_eag .MakeDict ());return _af ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _eag .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_agdde :=NewXObjectImage ();if lazy {_befde ,_gcdaef :=UpdateXObjectImageFromImage (_agdde ,img ,cs ,encoder );if _gcdaef !=nil {return nil ,_gcdaef ;
};_befde .ToPdfObject ();_gcdaef =_befde ._cgfecg .MakeLazy ();if _gcdaef !=nil {return nil ,_gcdaef ;};_befde .Stream =nil ;return _befde ,nil ;};return UpdateXObjectImageFromImage (_agdde ,img ,cs ,encoder );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eag .PdfObject ;};func _cabb (_fcbea *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fcbea }};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cfcee *PdfAppender )GetDSS ()(_dfgb *DSS ){return _cfcee ._bea };

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_eaee *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_eaee .updateObjectsDeep (dss .ToPdfObject (),nil );};_eaee ._bea =dss ;};

// ToPdfObject implements interface PdfModel.
func (_bcd *PdfActionGoTo3DView )ToPdfObject ()_eag .PdfObject {_bcd .PdfAction .ToPdfObject ();_dcg :=_bcd ._ggd ;_bfbg :=_dcg .PdfObject .(*_eag .PdfObjectDictionary );_bfbg .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeGoTo3DView )));_bfbg .SetIfNotNil ("\u0054\u0041",_bcd .TA );
_bfbg .SetIfNotNil ("\u0056",_bcd .V );return _dcg ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_eggdd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_bag .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_eaca ,_gbga :=_fde .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbefd ,img ._dadbe );if _gbga !=nil {return img ,_gbga ;};_cdcgc ,_gbga :=_fde .NRGBAConverter .Convert (_eaca );if _gbga !=nil {return img ,_gbga ;
};_ccfc :=_ecfe (_cdcgc .Base ());_ebdd .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ebdd .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ebdd .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ccfc .Data );
_ebdd .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ccfc );return _ccfc ,nil ;};func _cdabd (_agbbb *_eag .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dgdeg :=PdfShadingType7 {};_cebec :=_agbbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cebec ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cebeg ,_fbbeb :=_cebec .(*_eag .PdfObjectInteger );if !_fbbeb {_ebdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cebec );
return nil ,_eag .ErrTypeError ;};_dgdeg .BitsPerCoordinate =_cebeg ;_cebec =_agbbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cebec ==nil {_ebdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cebeg ,_fbbeb =_cebec .(*_eag .PdfObjectInteger );if !_fbbeb {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cebec );
return nil ,_eag .ErrTypeError ;};_dgdeg .BitsPerComponent =_cebeg ;_cebec =_agbbb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cebec ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cebeg ,_fbbeb =_cebec .(*_eag .PdfObjectInteger );if !_fbbeb {_ebdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cebec );
return nil ,_eag .ErrTypeError ;};_dgdeg .BitsPerComponent =_cebeg ;_cebec =_agbbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cebec ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cabcc ,_fbbeb :=_cebec .(*_eag .PdfObjectArray );if !_fbbeb {_ebdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cebec );
return nil ,_eag .ErrTypeError ;};_dgdeg .Decode =_cabcc ;if _acdfe :=_agbbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_acdfe !=nil {_dgdeg .Function =[]PdfFunction {};if _fafdg ,_cbecf :=_acdfe .(*_eag .PdfObjectArray );_cbecf {for _ ,_aedag :=range _fafdg .Elements (){_afcfa ,_fdbab :=_baaab (_aedag );
if _fdbab !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdbab );return nil ,_fdbab ;};_dgdeg .Function =append (_dgdeg .Function ,_afcfa );
};}else {_baefda ,_eggad :=_baaab (_acdfe );if _eggad !=nil {_ebdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eggad );return nil ,_eggad ;
};_dgdeg .Function =append (_dgdeg .Function ,_baefda );};};return &_dgdeg ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dfeg *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaeda ,_fggdg :=_eag .GetNumbersAsFloat (objects );
if _fggdg !=nil {return nil ,_fggdg ;};return _dfeg .ColorFromFloats (_eaeda );};func _ebcfb (_decde *[]*PdfField ,_gcfgg FieldFilterFunc ,_dagcd bool )[]*PdfField {if _decde ==nil {return nil ;};_cgba :=*_decde ;if len (*_decde )==0{return nil ;};_aadg :=_cgba [:0];
if _gcfgg ==nil {_gcfgg =func (*PdfField )bool {return true };};var _dfffd []*PdfField ;for _ ,_ecgec :=range _cgba {_dabdd :=_gcfgg (_ecgec );if _dabdd {_dfffd =append (_dfffd ,_ecgec );if len (_ecgec .Kids )> 0{_dfffd =append (_dfffd ,_ebcfb (&_ecgec .Kids ,_gcfgg ,_dagcd )...);
};};if !_dagcd ||!_dabdd ||len (_ecgec .Kids )> 0{_aadg =append (_aadg ,_ecgec );};};*_decde =_aadg ;return _dfffd ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ebbg *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bdcdc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bdcdc .UnderlyingCS ==nil {return nil ,_bag .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _bdcdc .UnderlyingCS .ColorFromFloats (vals );};func _fcbcc ()*Names {return &Names {_fgdcb :_eag .MakeIndirectObject (_eag .MakeDict ())}};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _eag .PdfObject ;Dest _eag .PdfObject ;H _eag .PdfObject ;PA _eag .PdfObject ;QuadPoints _eag .PdfObject ;BS _eag .PdfObject ;_deg *PdfAction ;_afg *PdfReader ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_abdgf int64 ;_agab int64 ;_bdecd int64 ;_bcgf int64 ;_gfeab int64 ;_fgaa int64 ;_efegd byte ;_adae int64 ;_cfea int64 ;};type pdfSignDictionary struct{*_eag .PdfObjectDictionary ;_fdbgd *SignatureHandler ;_gafdb *PdfSignature ;_agagb int64 ;
_dgcdc int ;_abebb int ;_dbfdb int ;_fcfec int ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ege :=NewPdfAnnotation ();_baag :=&PdfAnnotationRedact {};_baag .PdfAnnotation =_ege ;_baag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ege .SetContext (_baag );return _baag ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_faadc *PdfReader )Inspect ()(map[string ]int ,error ){return _faadc ._afegd .Inspect ()};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ccbe *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acge :=vals [0];if _acge < 0.0||_acge > 1.0{_ebdd .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _acge < 0.0{_acge =0.0;}else if _acge > 1.0{_acge =1.0;};return NewPdfColorDeviceGray (_acge ),nil ;};type pdfFontType3 struct{fontCommon ;_fbcgf *_eag .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _eag .PdfObject ;Encoding _eag .PdfObject ;FontBBox _eag .PdfObject ;FontMatrix _eag .PdfObject ;FirstChar _eag .PdfObject ;LastChar _eag .PdfObject ;Widths _eag .PdfObject ;Resources _eag .PdfObject ;_ffbef map[_gbf .CharCode ]float64 ;_abccd _gbf .TextEncoder ;
};

// ToPdfObject implements interface PdfModel.
func (_bfd *PdfAnnotationHighlight )ToPdfObject ()_eag .PdfObject {_bfd .PdfAnnotation .ToPdfObject ();_aba :=_bfd ._gfa ;_faa :=_aba .PdfObject .(*_eag .PdfObjectDictionary );_bfd .PdfAnnotationMarkup .appendToPdfDictionary (_faa );_faa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_faa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfd .QuadPoints );return _aba ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _eag .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _eag .PdfObject ;Contents _eag .PdfObject ;
Rotate *int64 ;Group _eag .PdfObject ;Thumb _eag .PdfObject ;B _eag .PdfObject ;Dur _eag .PdfObject ;Trans _eag .PdfObject ;AA _eag .PdfObject ;Metadata _eag .PdfObject ;PieceInfo _eag .PdfObject ;StructParents _eag .PdfObject ;ID _eag .PdfObject ;PZ _eag .PdfObject ;
SeparationInfo _eag .PdfObject ;Tabs _eag .PdfObject ;TemplateInstantiated _eag .PdfObject ;PresSteps _eag .PdfObject ;UserUnit _eag .PdfObject ;VP _eag .PdfObject ;Annots _eag .PdfObject ;_bcebb []*PdfAnnotation ;_eeaa *_eag .PdfObjectDictionary ;_beadd *_eag .PdfIndirectObject ;
_cggfd _eag .PdfObjectDictionary ;_adgb *PdfReader ;};var (_cabff _g .Mutex ;_effbe ="";_fegec _ag .Time ;_ddfcf ="";_ecfc ="";_afeea _ag .Time ;_bfgd ="";_gdeae ="";_dbge ="";);

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dacg *PdfPageResources )GetXObjectImageByName (keyName _eag .PdfObjectName )(*XObjectImage ,error ){_gcac ,_ddfdb :=_dacg .GetXObjectByName (keyName );if _gcac ==nil {return nil ,nil ;};if _ddfdb !=XObjectTypeImage {return nil ,_bag .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_edeec ,_gcdb :=NewXObjectImageFromStream (_gcac );if _gcdb !=nil {return nil ,_gcdb ;};return _edeec ,nil ;};

// Write writes out the PDF.
func (_gdcf *PdfWriter )Write (writer _ba .Writer )error {_ebdd .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_fcacd :=_gdcf .checkLicense ();if _fcacd !=nil {return _fcacd ;};if _fcacd =_gdcf .writeOutlines ();_fcacd !=nil {return _fcacd ;};if _fcacd =_gdcf .writeAcroFormFields ();
_fcacd !=nil {return _fcacd ;};if _fcacd =_gdcf .writeNamesDictionary ();_fcacd !=nil {return _fcacd ;};_gdcf .checkPendingObjects ();if _fcacd =_gdcf .writeOutputIntents ();_fcacd !=nil {return _fcacd ;};_gdcf .setCatalogVersion ();_gdcf .copyObjects ();
if _fcacd =_gdcf .optimize ();_fcacd !=nil {return _fcacd ;};if _fcacd =_gdcf .optimizeDocument ();_fcacd !=nil {return _fcacd ;};var _ggcea _c .Hash ;if _gdcf ._afbe {_ggcea =_fb .New ();writer =_ba .MultiWriter (_ggcea ,writer );};_gdcf .setWriter (writer );
_bdbaa :=_gdcf .checkCrossReferenceStream ();_dfedg ,_bdbaa :=_gdcf .mapObjectStreams (_bdbaa );_gdcf .adjustXRefAffectedVersion (_bdbaa );_gdcf .writeDocumentVersion ();_gdcf .updateObjectNumbers ();_gdcf .writeObjects ();if _fcacd =_gdcf .writeObjectsInStreams (_dfedg );
_fcacd !=nil {return _fcacd ;};_gdff :=_gdcf ._bfacf ;var _acfec int ;for _fffc :=range _gdcf ._dfdb {if _fffc > _acfec {_acfec =_fffc ;};};if _gdcf ._afbe {if _fcacd =_gdcf .setHashIDs (_ggcea );_fcacd !=nil {return _fcacd ;};};if _bdbaa {if _fcacd =_gdcf .writeXRefStreams (_acfec ,_gdff );
_fcacd !=nil {return _fcacd ;};}else {_gdcf .writeTrailer (_acfec );};_gdcf .makeOffSetReference (_gdff );if _fcacd =_gdcf .flushWriter ();_fcacd !=nil {return _fcacd ;};return nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aadc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_afcdb *PdfDate )ToPdfObject ()_eag .PdfObject {_geaee :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_afcdb ._abdgf ,_afcdb ._agab ,_afcdb ._bdecd ,_afcdb ._bcgf ,_afcdb ._gfeab ,_afcdb ._fgaa ,_afcdb ._efegd ,_afcdb ._adae ,_afcdb ._cfea );
return _eag .MakeString (_geaee );};func (_gbda *PdfReader )newPdfActionGotoFromDict (_fbf *_eag .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fbf .Get ("\u0044")},nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _eag .PdfObject ;T3DV _eag .PdfObject ;T3DA _eag .PdfObject ;T3DI _eag .PdfObject ;T3DB _eag .PdfObject ;};func _dbea (_bdgda _eag .PdfObject ,_aebg bool )(*PdfFont ,error ){_ggac ,_caff ,_fded :=_cdcbd (_bdgda );
if _ggac !=nil {_caaeg (_ggac );};if _fded !=nil {if _fded ==ErrType1CFontNotSupported {_daff ,_dcac :=_efgdc (_ggac ,_caff ,nil );if _dcac !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_caff ,_dcac );
return nil ,_fded ;};return &PdfFont {_dagg :_daff },_fded ;};return nil ,_fded ;};_ddgfe :=&PdfFont {};switch _caff ._cdabe {case "\u0054\u0079\u0070e\u0030":if !_aebg {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_caff );
return nil ,_bag .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dfafa ,_gfgec :=_cfcec (_ggac ,_caff );if _gfgec !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_caff ,_gfgec );
return nil ,_gfgec ;};_ddgfe ._dagg =_dfafa ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _cgbd *pdfFontSimple ;_adcg ,_afcgb :=_eeb .NewStdFontByName (_eeb .StdFontName (_caff ._fgcc ));
if _afcgb {_gbdae :=_geaf (_adcg );_ddgfe ._dagg =&_gbdae ;_gddce :=_eag .TraceToDirectObject (_gbdae .ToPdfObject ());_aecfg ,_fdgec ,_fbcbe :=_cdcbd (_gddce );if _fbcbe !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_caff ,_gbdae );
return nil ,_fbcbe ;};for _ ,_eeede :=range _ggac .Keys (){_aecfg .Set (_eeede ,_ggac .Get (_eeede ));};_cgbd ,_fbcbe =_efgdc (_aecfg ,_fdgec ,_gbdae ._ddggb );if _fbcbe !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_caff ,_gbdae );
return nil ,_fbcbe ;};_cgbd ._fgdd =_gbdae ._fgdd ;_cgbd ._gbdg =_gbdae ._gbdg ;if _cgbd ._cfbf ==nil {_cgbd ._cfbf =_gbdae ._cfbf ;};}else {_cgbd ,_fded =_efgdc (_ggac ,_caff ,nil );if _fded !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_caff ,_fded );
return nil ,_fded ;};};_fded =_cgbd .addEncoding ();if _fded !=nil {return nil ,_fded ;};if _afcgb {_cgbd .updateStandard14Font ();};if _afcgb &&_cgbd ._defdg ==nil &&_cgbd ._ddggb ==nil {_ebdd .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cgbd );
_ebdd .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_adcg );};if len (_cgbd ._fgdd )==0{_ebdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_cgbd );};_ddgfe ._dagg =_cgbd ;
case "\u0054\u0079\u0070e\u0033":_adbg ,_ccee :=_dabbg (_ggac ,_caff );if _ccee !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ccee );
return nil ,_ccee ;};_ddgfe ._dagg =_adbg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ccbca ,_cbcc :=_aead (_ggac ,_caff );if _cbcc !=nil {_ebdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cbcc );
return nil ,_cbcc ;};_ddgfe ._dagg =_ccbca ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dgdg ,_efafde :=_gbac (_ggac ,_caff );if _efafde !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_caff ,_efafde );
return nil ,_efafde ;};_ddgfe ._dagg =_dgdg ;default:_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_caff );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_caff );};return _ddgfe ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_abcc :=&PdfFieldSignature {};_abcc .PdfField =NewPdfField ();_abcc .PdfField .SetContext (_abcc );_abcc .PdfAnnotationWidget =NewPdfAnnotationWidget ();_abcc .PdfAnnotationWidget .SetContext (_abcc );
_abcc .PdfAnnotationWidget ._gfa =_abcc .PdfField ._eebf ;_abcc .T =_eag .MakeString ("");_abcc .F =_eag .MakeInteger (132);_abcc .V =signature ;return _abcc ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_cfda int ,_dgaccf *PdfPage )error ;

// GetCharMetrics returns the char metrics for character code `code`.
func (_fagc pdfCIDFontType2 )GetCharMetrics (code _gbf .CharCode )(_eeb .CharMetrics ,bool ){if _fafbd ,_acdcg :=_fagc ._fdfa [code ];_acdcg {return _eeb .CharMetrics {Wx :_fafbd },true ;};_gacbg :=rune (code );_agdgf ,_becd :=_fagc ._fgcdbg [_gacbg ];
if !_becd {_agdgf =int (_fagc ._faag );};return _eeb .CharMetrics {Wx :float64 (_agdgf )},true ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_bbec :=&PdfColorPattern {};return _bbec };

// GetNumComponents returns the number of color components (1 for Separation).
func (_dfgfg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// Subtype returns the font's "Subtype" field.
func (_gaef *PdfFont )Subtype ()string {_facd :=_gaef .baseFields ()._cdabe ;if _ccgbd ,_eeecb :=_gaef ._dagg .(*pdfFontType0 );_eeecb {_facd =_facd +"\u003a"+_ccgbd .DescendantFont .Subtype ();};return _facd ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gcge :=&PdfAnnotation {};_gcge ._gfa =_eag .MakeIndirectObject (_eag .MakeDict ());return _gcge ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_fbbd *PdfPage )error ;};func (_fcgee *LTV )generateVRIKey (_cgadg *PdfSignature )(string ,error ){_cafef ,_cbdeb :=_egfcc (_cgadg .Contents .Bytes ());if _cbdeb !=nil {return "",_cbdeb ;};return _cb .ToUpper (_df .EncodeToString (_cafef )),nil ;
};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gbag *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _eag .GetNumberAsFloat (_gbag .Ascent );};func (_bgcgb *PdfShading )getShadingDict ()(*_eag .PdfObjectDictionary ,error ){_efafe :=_bgcgb ._aadgg ;if _dbcde ,_ddba :=_efafe .(*_eag .PdfIndirectObject );
_ddba {_aedgg ,_fdcbe :=_dbcde .PdfObject .(*_eag .PdfObjectDictionary );if !_fdcbe {return nil ,_eag .ErrTypeError ;};return _aedgg ,nil ;}else if _acgfe ,_ecfag :=_efafe .(*_eag .PdfObjectStream );_ecfag {return _acgfe .PdfObjectDictionary ,nil ;}else if _ffdfa ,_fecd :=_efafe .(*_eag .PdfObjectDictionary );
_fecd {return _ffdfa ,nil ;}else {_ebdd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_eag .ErrTypeError ;
};};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_dc :=NewPdfAction ();_bff :=&PdfActionThread {};_bff .PdfAction =_dc ;_dc .SetContext (_bff );return _bff ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_degd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_aga *PdfReader )newPdfActionNamedFromDict (_dfd *_eag .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dfd .Get ("\u004e")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bba *PdfActionResetForm )ToPdfObject ()_eag .PdfObject {_bba .PdfAction .ToPdfObject ();_gfgb :=_bba ._ggd ;_fcb :=_gfgb .PdfObject .(*_eag .PdfObjectDictionary );_fcb .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeResetForm )));_fcb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bba .Fields );
_fcb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bba .Flags );return _gfgb ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_bdedc *PdfWriter )SetCatalogMarkInfo (info _eag .PdfObject )error {if info ==nil {_bdedc ._daegb .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};_bdedc .addObject (info );_bdedc ._daegb .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );
return nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bcda :=NewPdfAnnotation ();_gea :=&PdfAnnotationSound {};_gea .PdfAnnotation =_bcda ;_gea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcda .SetContext (_gea );return _gea ;};func _bgcgd (_babcg []byte )[]byte {const _decgd =52845;
const _gfddb =22719;_ebff :=55665;for _ ,_debb :=range _babcg [:4]{_ebff =(int (_debb )+_ebff )*_decgd +_gfddb ;};_afge :=make ([]byte ,len (_babcg )-4);for _fbbfa ,_agedc :=range _babcg [4:]{_afge [_fbbfa ]=byte (int (_agedc )^_ebff >>8);_ebff =(int (_agedc )+_ebff )*_decgd +_gfddb ;
};return _afge ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gd :=NewPdfAction ();_egf :=&PdfActionURI {};_egf .PdfAction =_gd ;_gd .SetContext (_egf );return _egf ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fcffe *PdfAnnotation )ToPdfObject ()_eag .PdfObject {_dcdef :=_fcffe ._gfa ;_fga :=_dcdef .PdfObject .(*_eag .PdfObjectDictionary );_fga .Clear ();_fga .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0041\u006e\u006eo\u0074"));_fga .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fcffe .Rect );
_fga .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcffe .Contents );_fga .SetIfNotNil ("\u0050",_fcffe .P );_fga .SetIfNotNil ("\u004e\u004d",_fcffe .NM );_fga .SetIfNotNil ("\u004d",_fcffe .M );_fga .SetIfNotNil ("\u0046",_fcffe .F );
_fga .SetIfNotNil ("\u0041\u0050",_fcffe .AP );_fga .SetIfNotNil ("\u0041\u0053",_fcffe .AS );_fga .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fcffe .Border );_fga .SetIfNotNil ("\u0043",_fcffe .C );_fga .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fcffe .StructParent );
_fga .SetIfNotNil ("\u004f\u0043",_fcffe .OC );return _dcdef ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _eag .PdfObject ;NewWindow _eag .PdfObject ;T _eag .PdfObject ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_babcga *PdfOutline )GetContainingPdfObject ()_eag .PdfObject {return _babcga ._cgcea };

// Encrypt encrypts the output file with a specified user/owner password.
func (_cdgca *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_edbce :=RC4_128bit ;if options !=nil {_edbce =options .Algorithm ;};_decbc :=_ac .PermOwner ;if options !=nil {_decbc =options .Permissions ;};var _acbgd _fdg .Filter ;
switch _edbce {case RC4_128bit :_acbgd =_fdg .NewFilterV2 (16);case AES_128bit :_acbgd =_fdg .NewFilterAESV2 ();case AES_256bit :_acbgd =_fdg .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_caafcf ,_bdbcf ,_abgab :=_eag .PdfCryptNewEncrypt (_acbgd ,userPass ,ownerPass ,_decbc );if _abgab !=nil {return _abgab ;};_cdgca ._ffbfg =_caafcf ;if _bdbcf .Major !=0{_cdgca .SetVersion (_bdbcf .Major ,_bdbcf .Minor );};_cdgca ._edabb =_bdbcf .Encrypt ;
_cdgca ._aecb ,_cdgca ._bcfgc =_bdbcf .ID0 ,_bdbcf .ID1 ;_bfag :=_eag .MakeIndirectObject (_bdbcf .Encrypt );_cdgca ._agdeb =_bfag ;_cdgca .addObject (_bfag );return nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_gccbg *PdfFont )ToPdfObject ()_eag .PdfObject {if _gccbg ._dagg ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _eag .MakeNull ();
};return _gccbg ._dagg .ToPdfObject ();};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ffafb *PdfPageResources )SetXObjectImageByNameLazy (keyName _eag .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_efeeb :=ximg .ToPdfObject ().(*_eag .PdfObjectStream );if lazy {_efeeb .MakeLazy ();};_gaabd :=_ffafb .SetXObjectByName (keyName ,_efeeb );
return _gaabd ;};

// ToPdfObject implements interface PdfModel.
func (_gebfe *Permissions )ToPdfObject ()_eag .PdfObject {return _gebfe ._gfcae };

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bcdee *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _bag .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bcdee .S =subtype ;return nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dfbb ,_ceca :=_fc .Open (filePath );if _ceca !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ceca );
return nil ,_ceca ;};defer _dfbb .Close ();return NewPdfFontFromTTF (_dfbb );};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ccec :=PdfPage {};_ccec ._eeaa =_eag .MakeDict ();_ccec .Resources =NewPdfPageResources ();_efefe :=_eag .PdfIndirectObject {};_efefe .PdfObject =_ccec ._eeaa ;_ccec ._beadd =&_efefe ;_ccec ._cggfd =*_ccec ._eeaa ;return &_ccec ;
};func _egcbc (_eacae *_eag .PdfObjectDictionary )(*PdfFieldButton ,error ){_bbbe :=&PdfFieldButton {};_bbbe .PdfField =NewPdfField ();_bbbe .PdfField .SetContext (_bbbe );_bbbe .Opt ,_ =_eag .GetArray (_eacae .Get ("\u004f\u0070\u0074"));_dfegc :=NewPdfAnnotationWidget ();
_dfegc .A ,_ =_eag .GetDict (_eacae .Get ("\u0041"));_dfegc .AP ,_ =_eag .GetDict (_eacae .Get ("\u0041\u0050"));_dfegc .SetContext (_bbbe );_bbbe .PdfField .Annotations =append (_bbbe .PdfField .Annotations ,_dfegc );return _bbbe ,nil ;};func (_fcafg *pdfFontSimple )getFontEncoding ()(_dfad string ,_fbgc map[_gbf .CharCode ]_gbf .GlyphName ,_ddgag error ){_dfad ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _eaacg ,_dggd :=_bcbe [_fcafg ._fgcc ];_dggd {_dfad =_eaacg ;}else if _fcafg .fontFlags ()&_aeffc !=0{for _bdcg ,_gdaad :=range _bcbe {if _cb .Contains (_fcafg ._fgcc ,_bdcg ){_dfad =_gdaad ;break ;};};};if _fcafg .Encoding ==nil {return _dfad ,nil ,nil ;
};switch _fdde :=_fcafg .Encoding .(type ){case *_eag .PdfObjectName :return string (*_fdde ),nil ,nil ;case *_eag .PdfObjectDictionary :_egde ,_baba :=_eag .GetName (_fdde .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _baba {_dfad =_egde .String ();
};if _cdfge :=_fdde .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cdfge !=nil {_cfegg ,_cecf :=_eag .GetArray (_cdfge );if !_cecf {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fdde ,_fdde .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_eag .ErrTypeError ;};_fbgc ,_ddgag =_gbf .FromFontDifferences (_cfegg );};return _dfad ,_fbgc ,_ddgag ;default:_ebdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fcafg .Encoding ,_fcafg .Encoding );
return "",nil ,_eag .ErrTypeError ;};};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_agceg *Image )Resample (targetBitsPerComponent int64 ){if _agceg .BitsPerComponent ==targetBitsPerComponent {return ;};_cbfeb :=_agceg .GetSamples ();if targetBitsPerComponent < _agceg .BitsPerComponent {_fcec :=_agceg .BitsPerComponent -targetBitsPerComponent ;
for _ebbe :=range _cbfeb {_cbfeb [_ebbe ]>>=uint (_fcec );};}else if targetBitsPerComponent > _agceg .BitsPerComponent {_bdce :=targetBitsPerComponent -_agceg .BitsPerComponent ;for _edgga :=range _cbfeb {_cbfeb [_edgga ]<<=uint (_bdce );};};_agceg .BitsPerComponent =targetBitsPerComponent ;
if _agceg .BitsPerComponent < 8{_agceg .resampleLowBits (_cbfeb );return ;};_faead :=_fde .BytesPerLine (int (_agceg .Width ),int (_agceg .BitsPerComponent ),_agceg .ColorComponents );_becfb :=make ([]byte ,_faead *int (_agceg .Height ));var (_aegbff ,_eada ,_cdeb ,_gcged int ;
_egcag uint32 ;);for _cdeb =0;_cdeb < int (_agceg .Height );_cdeb ++{_aegbff =_cdeb *_faead ;_eada =(_cdeb +1)*_faead -1;_fbdgd :=_dba .ResampleUint32 (_cbfeb [_aegbff :_eada ],int (targetBitsPerComponent ),8);for _gcged ,_egcag =range _fbdgd {_becfb [_gcged +_aegbff ]=byte (_egcag );
};};_agceg .Data =_becfb ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dee *PdfAnnotationWidget )Field ()*PdfField {return _dee ._bgda };

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_acdga :=&PdfShadingPatternType3 {};_acdga .Matrix =_eag .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_acdga .PdfPattern =&PdfPattern {};_acdga .PdfPattern .PatternType =int64 (*_eag .MakeInteger (2));
_acdga .PdfPattern ._aaaca =_acdga ;_acdga .PdfPattern ._bcdbe =_eag .MakeIndirectObject (_eag .MakeDict ());return _acdga ;};

// WriteString outputs the object as it is to be written to file.
func (_cbee *pdfSignDictionary )WriteString ()string {_cbee ._dgcdc =0;_cbee ._abebb =0;_cbee ._dbfdb =0;_cbee ._fcfec =0;_acfcb :=_cf .NewBuffer (nil );_acfcb .WriteString ("\u003c\u003c");for _ ,_feaea :=range _cbee .Keys (){_babgd :=_cbee .Get (_feaea );
switch _feaea {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_acfcb .WriteString (_feaea .WriteString ());_acfcb .WriteString ("\u0020");_cbee ._dbfdb =_acfcb .Len ();_acfcb .WriteString (_babgd .WriteString ());_acfcb .WriteString ("\u0020");_cbee ._fcfec =_acfcb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_acfcb .WriteString (_feaea .WriteString ());_acfcb .WriteString ("\u0020");_cbee ._dgcdc =_acfcb .Len ();_acfcb .WriteString (_babgd .WriteString ());_acfcb .WriteString ("\u0020");_cbee ._abebb =_acfcb .Len ()-1;
default:_acfcb .WriteString (_feaea .WriteString ());_acfcb .WriteString ("\u0020");_acfcb .WriteString (_babgd .WriteString ());};};_acfcb .WriteString ("\u003e\u003e");return _acfcb .String ();};

// GetAction returns the PDF action for the annotation link.
func (_dcbb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dcbb ._deg !=nil {return _dcbb ._deg ,nil ;};if _dcbb .A ==nil {return nil ,nil ;};if _dcbb ._afg ==nil {return nil ,nil ;};_fbb ,_ebf :=_dcbb ._afg .loadAction (_dcbb .A );if _ebf !=nil {return nil ,_ebf ;
};_dcbb ._deg =_fbb ;return _dcbb ._deg ,nil ;};func (_bbga *PdfReader )newPdfAnnotationCircleFromDict (_dfg *_eag .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ebcf :=PdfAnnotationCircle {};_ebba ,_ceeff :=_bbga .newPdfAnnotationMarkupFromDict (_dfg );
if _ceeff !=nil {return nil ,_ceeff ;};_ebcf .PdfAnnotationMarkup =_ebba ;_ebcf .BS =_dfg .Get ("\u0042\u0053");_ebcf .IC =_dfg .Get ("\u0049\u0043");_ebcf .BE =_dfg .Get ("\u0042\u0045");_ebcf .RD =_dfg .Get ("\u0052\u0044");return &_ebcf ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _eag .PdfObject ;H _eag .PdfObject ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_bafge FieldFlag )Mask ()uint32 {return uint32 (_bafge )};type pdfCIDFontType2 struct{fontCommon ;_becf *_eag .PdfIndirectObject ;_aeeb _gbf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_eag .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _eag .PdfObject ;W _eag .PdfObject ;DW2 _eag .PdfObject ;W2 _eag .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _eag .PdfObject ;_fdfa map[_gbf .CharCode ]float64 ;_faag float64 ;_fgcdbg map[rune ]int ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_eceb :=NewPdfAnnotation ();_gdc :=&PdfAnnotationProjection {};_gdc .PdfAnnotation =_eceb ;_gdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eceb .SetContext (_gdc );return _gdc ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cdcag *PdfPageResources )HasColorspaceByName (keyName _eag .PdfObjectName )bool {_cbcfe ,_bafeg :=_cdcag .GetColorspaces ();if _bafeg !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bafeg );
return false ;};if _cbcfe ==nil {return false ;};_ ,_acca :=_cbcfe .Colorspaces [string (keyName )];return _acca ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gfdd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_eafd ,_gacg :=color .(*PdfColorPattern );if !_gacg {_ebdd .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _eafd .Color ==nil {return color ,nil ;};if _gfdd .UnderlyingCS ==nil {return nil ,_bag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gfdd .UnderlyingCS .ColorToRGB (_eafd .Color );
};

// SetForms sets the Acroform for a PDF file.
func (_ffeef *PdfWriter )SetForms (form *PdfAcroForm )error {_ffeef ._aagab =form ;return nil };

// MergePageWith appends page content to source Pdf file page content.
func (_bec *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_efac :=pageNum -1;var _aedd *PdfPage ;for _eeacf ,_fgdb :=range _bec ._abag {if _eeacf ==_efac {_aedd =_fgdb ;};};if _aedd ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _aedd ._beadd !=nil &&_aedd ._beadd .GetParser ()==_bec ._egeg ._afegd {_aedd =_aedd .Duplicate ();_bec ._abag [_efac ]=_aedd ;};page =page .Duplicate ();_ecfab (page );_faff :=_egbb (_aedd );_fcce :=_egbb (page );_bbfge :=make (map[_eag .PdfObjectName ]_eag .PdfObjectName );
for _fbfe :=range _fcce {if _ ,_gfd :=_faff [_fbfe ];_gfd {for _dfbd :=1;true ;_dfbd ++{_bgdf :=_eag .PdfObjectName (string (_fbfe )+_da .Itoa (_dfbd ));if _ ,_aagb :=_faff [_bgdf ];!_aagb {_bbfge [_fbfe ]=_bgdf ;break ;};};};};_cffa ,_ffee :=page .GetContentStreams ();
if _ffee !=nil {return _ffee ;};_fcac ,_ffee :=_aedd .GetContentStreams ();if _ffee !=nil {return _ffee ;};for _affe ,_daef :=range _cffa {for _cdef ,_facc :=range _bbfge {_daef =_cb .Replace (_daef ,"\u002f"+string (_cdef ),"\u002f"+string (_facc ),-1);
};_cffa [_affe ]=_daef ;};_fcac =append (_fcac ,_cffa ...);if _bgag :=_aedd .SetContentStreams (_fcac ,_eag .NewFlateEncoder ());_bgag !=nil {return _bgag ;};_aedd ._bcebb =append (_aedd ._bcebb ,page ._bcebb ...);if _aedd .Resources ==nil {_aedd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_aedd .Resources .Font =_bec .mergeResources (_aedd .Resources .Font ,page .Resources .Font ,_bbfge );_aedd .Resources .XObject =_bec .mergeResources (_aedd .Resources .XObject ,page .Resources .XObject ,_bbfge );_aedd .Resources .Properties =_bec .mergeResources (_aedd .Resources .Properties ,page .Resources .Properties ,_bbfge );
if _aedd .Resources .ProcSet ==nil {_aedd .Resources .ProcSet =page .Resources .ProcSet ;};_aedd .Resources .Shading =_bec .mergeResources (_aedd .Resources .Shading ,page .Resources .Shading ,_bbfge );_aedd .Resources .ExtGState =_bec .mergeResources (_aedd .Resources .ExtGState ,page .Resources .ExtGState ,_bbfge );
};_ecec ,_ffee :=_aedd .GetMediaBox ();if _ffee !=nil {return _ffee ;};_beab ,_ffee :=page .GetMediaBox ();if _ffee !=nil {return _ffee ;};var _fbd bool ;if _ecec .Llx > _beab .Llx {_ecec .Llx =_beab .Llx ;_fbd =true ;};if _ecec .Lly > _beab .Lly {_ecec .Lly =_beab .Lly ;
_fbd =true ;};if _ecec .Urx < _beab .Urx {_ecec .Urx =_beab .Urx ;_fbd =true ;};if _ecec .Ury < _beab .Ury {_ecec .Ury =_beab .Ury ;_fbd =true ;};if _fbd {_aedd .MediaBox =_ecec ;};return nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fdcee *PdfReader )GetNameDictionary ()(_eag .PdfObject ,error ){_ebgff :=_eag .ResolveReference (_fdcee ._adbgg .Get ("\u004e\u0061\u006de\u0073"));if _ebgff ==nil {return nil ,nil ;};if !_fdcee ._dgabg {_bcbdb :=_fdcee .traverseObjectData (_ebgff );
if _bcbdb !=nil {return nil ,_bcbdb ;};};return _ebgff ,nil ;};func (_gbg *PdfReader )newPdfActionImportDataFromDict (_fcab *_eag .PdfObjectDictionary )(*PdfActionImportData ,error ){_dfa ,_ged :=_bae (_fcab .Get ("\u0046"));if _ged !=nil {return nil ,_ged ;
};return &PdfActionImportData {F :_dfa },nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_geaaa *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_dddcg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_dddcg .Mask ()|fl .Mask ())};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_dgdcc *PdfAcroForm ,_adag *PdfField ,_dafcg *PdfAnnotationWidget )(*_eag .PdfObjectDictionary ,error );};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_bdgeb *PdfWriter )SetCatalogViewerPreferences (pref _eag .PdfObject )error {if pref ==nil {_bdgeb ._daegb .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};_bdgeb .addObject (pref );
_bdgeb ._daegb .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );return nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bgfa *_eag .PdfObjectDictionary ;_fdcgc *_eag .PdfIndirectObject ;};

// L returns the value of the L component of the color.
func (_cgfb *PdfColorLab )L ()float64 {return _cgfb [0]};func (_agc *PdfReader )newPdfActionFromIndirectObject (_aaff *_eag .PdfIndirectObject )(*PdfAction ,error ){_cbg ,_gebf :=_aaff .PdfObject .(*_eag .PdfObjectDictionary );if !_gebf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_agc ._gbada .GetModelFromPrimitive (_cbg );model !=nil {_cce ,_eab :=model .(*PdfAction );if !_eab {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _cce ,nil ;};_gae :=&PdfAction {};_gae ._ggd =_aaff ;_agc ._gbada .Register (_cbg ,_gae );if _gfgc :=_cbg .Get ("\u0054\u0079\u0070\u0065");_gfgc !=nil {_gge ,_edc :=_gfgc .(*_eag .PdfObjectName );if !_edc {_ebdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfgc );
}else {if *_gge !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ebdd .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gge );
};_gae .Type =_gge ;};};if _fba :=_cbg .Get ("\u004e\u0065\u0078\u0074");_fba !=nil {_gae .Next =_fba ;};if _dge :=_cbg .Get ("\u0053");_dge !=nil {_gae .S =_dge ;};_ebdgd ,_edg :=_gae .S .(*_eag .PdfObjectName );if !_edg {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gae .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gae .S );};_gbbb :=PdfActionType (_ebdgd .String ());
switch _gbbb {case ActionTypeGoTo :_bdaa ,_ecc :=_agc .newPdfActionGotoFromDict (_cbg );if _ecc !=nil {return nil ,_ecc ;};_bdaa .PdfAction =_gae ;_gae ._eea =_bdaa ;return _gae ,nil ;case ActionTypeGoToR :_agca ,_dgbe :=_agc .newPdfActionGotoRFromDict (_cbg );
if _dgbe !=nil {return nil ,_dgbe ;};_agca .PdfAction =_gae ;_gae ._eea =_agca ;return _gae ,nil ;case ActionTypeGoToE :_gfb ,_afc :=_agc .newPdfActionGotoEFromDict (_cbg );if _afc !=nil {return nil ,_afc ;};_gfb .PdfAction =_gae ;_gae ._eea =_gfb ;return _gae ,nil ;
case ActionTypeLaunch :_gdf ,_eeac :=_agc .newPdfActionLaunchFromDict (_cbg );if _eeac !=nil {return nil ,_eeac ;};_gdf .PdfAction =_gae ;_gae ._eea =_gdf ;return _gae ,nil ;case ActionTypeThread :_ebb ,_gbe :=_agc .newPdfActionThreadFromDict (_cbg );if _gbe !=nil {return nil ,_gbe ;
};_ebb .PdfAction =_gae ;_gae ._eea =_ebb ;return _gae ,nil ;case ActionTypeURI :_fbaf ,_fgf :=_agc .newPdfActionURIFromDict (_cbg );if _fgf !=nil {return nil ,_fgf ;};_fbaf .PdfAction =_gae ;_gae ._eea =_fbaf ;return _gae ,nil ;case ActionTypeSound :_eaa ,_fee :=_agc .newPdfActionSoundFromDict (_cbg );
if _fee !=nil {return nil ,_fee ;};_eaa .PdfAction =_gae ;_gae ._eea =_eaa ;return _gae ,nil ;case ActionTypeMovie :_ecbg ,_gceb :=_agc .newPdfActionMovieFromDict (_cbg );if _gceb !=nil {return nil ,_gceb ;};_ecbg .PdfAction =_gae ;_gae ._eea =_ecbg ;return _gae ,nil ;
case ActionTypeHide :_bbd ,_dcb :=_agc .newPdfActionHideFromDict (_cbg );if _dcb !=nil {return nil ,_dcb ;};_bbd .PdfAction =_gae ;_gae ._eea =_bbd ;return _gae ,nil ;case ActionTypeNamed :_cbbg ,_bbg :=_agc .newPdfActionNamedFromDict (_cbg );if _bbg !=nil {return nil ,_bbg ;
};_cbbg .PdfAction =_gae ;_gae ._eea =_cbbg ;return _gae ,nil ;case ActionTypeSubmitForm :_gdd ,_dab :=_agc .newPdfActionSubmitFormFromDict (_cbg );if _dab !=nil {return nil ,_dab ;};_gdd .PdfAction =_gae ;_gae ._eea =_gdd ;return _gae ,nil ;case ActionTypeResetForm :_cff ,_cab :=_agc .newPdfActionResetFormFromDict (_cbg );
if _cab !=nil {return nil ,_cab ;};_cff .PdfAction =_gae ;_gae ._eea =_cff ;return _gae ,nil ;case ActionTypeImportData :_edd ,_dcd :=_agc .newPdfActionImportDataFromDict (_cbg );if _dcd !=nil {return nil ,_dcd ;};_edd .PdfAction =_gae ;_gae ._eea =_edd ;
return _gae ,nil ;case ActionTypeSetOCGState :_cgab ,_ddf :=_agc .newPdfActionSetOCGStateFromDict (_cbg );if _ddf !=nil {return nil ,_ddf ;};_cgab .PdfAction =_gae ;_gae ._eea =_cgab ;return _gae ,nil ;case ActionTypeRendition :_fab ,_dbda :=_agc .newPdfActionRenditionFromDict (_cbg );
if _dbda !=nil {return nil ,_dbda ;};_fab .PdfAction =_gae ;_gae ._eea =_fab ;return _gae ,nil ;case ActionTypeTrans :_dcdf ,_dbc :=_agc .newPdfActionTransFromDict (_cbg );if _dbc !=nil {return nil ,_dbc ;};_dcdf .PdfAction =_gae ;_gae ._eea =_dcdf ;return _gae ,nil ;
case ActionTypeGoTo3DView :_ddb ,_bab :=_agc .newPdfActionGoTo3DViewFromDict (_cbg );if _bab !=nil {return nil ,_bab ;};_ddb .PdfAction =_gae ;_gae ._eea =_ddb ;return _gae ,nil ;case ActionTypeJavaScript :_cef ,_bafc :=_agc .newPdfActionJavaScriptFromDict (_cbg );
if _bafc !=nil {return nil ,_bafc ;};_cef .PdfAction =_gae ;_gae ._eea =_cef ;return _gae ,nil ;};_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gbbb );
return nil ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_feff *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgab ,_bedg :=_eag .GetNumbersAsFloat (objects );
if _bedg !=nil {return nil ,_bedg ;};return _feff .ColorFromFloats (_bgab );};

// GetContainingPdfObject implements interface PdfModel.
func (_ede *PdfAnnotation )GetContainingPdfObject ()_eag .PdfObject {return _ede ._gfa };func (_dfcgg *PdfWriter )addObjects (_cbfeba _eag .PdfObject )error {_ebdd .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _feffdb ,_efdf :=_cbfeba .(*_eag .PdfIndirectObject );_efdf {_ebdd .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ebdd .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cbfeba ,_feffdb );_ebdd .Log .Trace ("\u002d\u0020\u0025\u0073",_feffdb .PdfObject );
if _dfcgg .addObject (_feffdb ){_abefb :=_dfcgg .addObjects (_feffdb .PdfObject );if _abefb !=nil {return _abefb ;};};return nil ;};if _dfdgff ,_baab :=_cbfeba .(*_eag .PdfObjectStream );_baab {_ebdd .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_ebdd .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cbfeba ,_cbfeba );if _dfcgg .addObject (_dfdgff ){_cfcb :=_dfcgg .addObjects (_dfdgff .PdfObjectDictionary );if _cfcb !=nil {return _cfcb ;};};return nil ;};if _gefa ,_facge :=_cbfeba .(*_eag .PdfObjectDictionary );
_facge {_ebdd .Log .Trace ("\u0044\u0069\u0063\u0074");_ebdd .Log .Trace ("\u002d\u0020\u0025\u0073",_cbfeba );for _ ,_beccac :=range _gefa .Keys (){_aaegb :=_gefa .Get (_beccac );if _gbgd ,_deee :=_aaegb .(*_eag .PdfObjectReference );_deee {_aaegb =_gbgd .Resolve ();
_gefa .Set (_beccac ,_aaegb );};if _beccac !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bddcd :=_dfcgg .addObjects (_aaegb );_bddcd !=nil {return _bddcd ;};}else {if _ ,_abdcc :=_aaegb .(*_eag .PdfObjectNull );_abdcc {continue ;};if _fcdae :=_dfcgg .hasObject (_aaegb );
!_fcdae {_ebdd .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_aaegb ,_aaegb ,_aaegb );_dfcgg ._abbad [_aaegb ]=append (_dfcgg ._abbad [_aaegb ],_gefa );
};};};return nil ;};if _gfbac ,_fgede :=_cbfeba .(*_eag .PdfObjectArray );_fgede {_ebdd .Log .Trace ("\u0041\u0072\u0072a\u0079");_ebdd .Log .Trace ("\u002d\u0020\u0025\u0073",_cbfeba );if _gfbac ==nil {return _bag .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _cadedd ,_fbbcf :=range _gfbac .Elements (){if _eefad ,_dfgca :=_fbbcf .(*_eag .PdfObjectReference );_dfgca {_fbbcf =_eefad .Resolve ();_gfbac .Set (_cadedd ,_fbbcf );};if _ffgae :=_dfcgg .addObjects (_fbbcf );_ffgae !=nil {return _ffgae ;};};return nil ;
};if _ ,_eeea :=_cbfeba .(*_eag .PdfObjectReference );_eeea {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cbfeba );
return _bag .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gfc :=NewPdfAction ();_eg :=&PdfActionGoToR {};_eg .PdfAction =_gfc ;_gfc .SetContext (_eg );return _eg ;};func (_aaaf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};func _cfbgb ()string {_cabff .Lock ();defer _cabff .Unlock ();return _gdeae };

// String returns a string representation of PdfTransformParamsDocMDP.
func (_fabag *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_fabag .Type ,_fabag .P ,_fabag .V );};func _degec (_agacf _eag .PdfObject )[]*_eag .PdfObjectStream {if _agacf ==nil {return nil ;
};_afeac ,_ecccg :=_eag .GetArray (_agacf );if !_ecccg ||_afeac .Len ()==0{return nil ;};_aadcb :=make ([]*_eag .PdfObjectStream ,0,_afeac .Len ());for _ ,_bbce :=range _afeac .Elements (){if _degae ,_ggbfbb :=_eag .GetStream (_bbce );_ggbfbb {_aadcb =append (_aadcb ,_degae );
};};return _aadcb ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_agbfg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _agbfg ._bcebb !=nil {return _agbfg ._bcebb ,nil ;};if _agbfg .Annots ==nil {_agbfg ._bcebb =[]*PdfAnnotation {};return nil ,nil ;};if _agbfg ._adgb ==nil {_agbfg ._bcebb =[]*PdfAnnotation {};
return nil ,nil ;};_cdabb ,_dafbd :=_agbfg ._adgb .loadAnnotations (_agbfg .Annots );if _dafbd !=nil {return nil ,_dafbd ;};if _cdabb ==nil {_agbfg ._bcebb =[]*PdfAnnotation {};};_agbfg ._bcebb =_cdabb ;return _agbfg ._bcebb ,nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_bcgce *PdfColorspaceDeviceN )ToPdfObject ()_eag .PdfObject {_gdaa :=_eag .MakeArray (_eag .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gdaa .Append (_bcgce .ColorantNames );_gdaa .Append (_bcgce .AlternateSpace .ToPdfObject ());_gdaa .Append (_bcgce .TintTransform .ToPdfObject ());
if _bcgce .Attributes !=nil {_gdaa .Append (_bcgce .Attributes .ToPdfObject ());};if _bcgce ._abdg !=nil {_bcgce ._abdg .PdfObject =_gdaa ;return _bcgce ._abdg ;};return _gdaa ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dfbbe *PdfShading )GetContainingPdfObject ()_eag .PdfObject {return _dfbbe ._aadgg };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ag .Time )(PdfDate ,error ){_ggeeg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gaee ,_ :=_da .ParseInt (_ggeeg [1:3],10,32);_ecaaf ,_ :=_da .ParseInt (_ggeeg [4:6],10,32);return PdfDate {_abdgf :int64 (timeObj .Year ()),_agab :int64 (timeObj .Month ()),_bdecd :int64 (timeObj .Day ()),_bcgf :int64 (timeObj .Hour ()),_gfeab :int64 (timeObj .Minute ()),_fgaa :int64 (timeObj .Second ()),_efegd :_ggeeg [0],_adae :_gaee ,_cfea :_ecaaf },nil ;
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dafcc *PdfShadingPattern )ToPdfObject ()_eag .PdfObject {_dafcc .PdfPattern .ToPdfObject ();_gddfcf :=_dafcc .getDict ();if _dafcc .Shading !=nil {_gddfcf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dafcc .Shading .ToPdfObject ());};if _dafcc .Matrix !=nil {_gddfcf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dafcc .Matrix );
};if _dafcc .ExtGState !=nil {_gddfcf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dafcc .ExtGState );};return _dafcc ._bcdbe ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fcbcd *PdfColorspaceSpecialIndexed )ToPdfObject ()_eag .PdfObject {_ddcd :=_eag .MakeArray (_eag .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_ddcd .Append (_fcbcd .Base .ToPdfObject ());_ddcd .Append (_eag .MakeInteger (int64 (_fcbcd .HiVal )));
_ddcd .Append (_fcbcd .Lookup );if _fcbcd ._eggdg !=nil {_fcbcd ._eggdg .PdfObject =_ddcd ;return _fcbcd ._eggdg ;};return _ddcd ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_edcfd OutlineDest )ToPdfObject ()_eag .PdfObject {if (_edcfd .PageObj ==nil &&_edcfd .Page < 0)||_edcfd .Mode ==""{return _eag .MakeNull ();};_fbeb :=_eag .MakeArray ();if _edcfd .PageObj !=nil {_fbeb .Append (_edcfd .PageObj );}else {_fbeb .Append (_eag .MakeInteger (_edcfd .Page ));
};_fbeb .Append (_eag .MakeName (_edcfd .Mode ));switch _edcfd .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fbeb .Append (_eag .MakeFloat (_edcfd .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fbeb .Append (_eag .MakeFloat (_edcfd .X ));
case "\u0058\u0059\u005a":_fbeb .Append (_eag .MakeFloat (_edcfd .X ));_fbeb .Append (_eag .MakeFloat (_edcfd .Y ));_fbeb .Append (_eag .MakeFloat (_edcfd .Zoom ));default:_fbeb .Set (1,_eag .MakeName ("\u0046\u0069\u0074"));};return _fbeb ;};func (_bac *PdfReader )newPdfActionHideFromDict (_dac *_eag .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dac .Get ("\u0054"),H :_dac .Get ("\u0048")},nil ;
};

// Encoder returns the font's text encoder.
func (_adgf pdfFontType0 )Encoder ()_gbf .TextEncoder {return _adgf ._cege };

// SetDecode sets the decode image float slice.
func (_cgag *Image )SetDecode (decode []float64 ){_cgag ._dadbe =decode };func (_efbfc *LTV )getOCSPs (_eebfb []*_ed .Certificate ,_fegfcg map[string ]*_ed .Certificate )([][]byte ,error ){_ebace :=make ([][]byte ,0,len (_eebfb ));for _ ,_agfd :=range _eebfb {for _ ,_aeea :=range _agfd .OCSPServer {if _efbfc .CertClient .IsCA (_agfd ){continue ;
};_daafab ,_cgbaf :=_fegfcg [_agfd .Issuer .CommonName ];if !_cgbaf {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bgfcd ,_fddca :=_efbfc .OCSPClient .MakeRequest (_aeea ,_agfd ,_daafab );if _fddca !=nil {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fddca );
continue ;};_ebace =append (_ebace ,_bgfcd );};};return _ebace ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcag *PdfAnnotationRichMedia )ToPdfObject ()_eag .PdfObject {_fcag .PdfAnnotation .ToPdfObject ();_caccd :=_fcag ._gfa ;_faba :=_caccd .PdfObject .(*_eag .PdfObjectDictionary );_faba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_faba .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fcag .RichMediaSettings );_faba .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fcag .RichMediaContent );
return _caccd ;};

// G returns the value of the green component of the color.
func (_ecbad *PdfColorDeviceRGB )G ()float64 {return _ecbad [1]};func _agde (_cbacd []byte )bool {if len (_cbacd )< 4{return true ;};for _fdgad :=range _cbacd [:4]{_fabgb :=rune (_fdgad );if !_bf .Is (_bf .ASCII_Hex_Digit ,_fabgb )&&!_bf .IsSpace (_fabgb ){return true ;
};};return false ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_ecgff *PdfPageResources )GetExtGState (keyName _eag .PdfObjectName )(_eag .PdfObject ,bool ){if _ecgff .ExtGState ==nil {return nil ,false ;};_agaab ,_fccfd :=_eag .TraceToDirectObject (_ecgff .ExtGState ).(*_eag .PdfObjectDictionary );if !_fccfd {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecgff .ExtGState );
return nil ,false ;};if _ddfcb :=_agaab .Get (keyName );_ddfcb !=nil {return _ddfcb ,true ;};return nil ,false ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_afbb *PdfPageResources )HasFontByName (keyName _eag .PdfObjectName )bool {_ ,_aadde :=_afbb .GetFontByName (keyName );return _aadde ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_dffgb *DSS )generateHashMap (_ebec []*_eag .PdfObjectStream )(map[string ]*_eag .PdfObjectStream ,error ){_aacfg :=map[string ]*_eag .PdfObjectStream {};for _ ,_gbae :=range _ebec {_afgd ,_gdfg :=_eag .DecodeStream (_gbae );
if _gdfg !=nil {return nil ,_gdfg ;};_cbbe ,_gdfg :=_egfcc (_afgd );if _gdfg !=nil {return nil ,_gdfg ;};_aacfg [string (_cbbe )]=_gbae ;};return _aacfg ,nil ;};

// Height returns the height of `rect`.
func (_feeb *PdfRectangle )Height ()float64 {return _gcg .Abs (_feeb .Ury -_feeb .Lly )};func (_edafb *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _edafb ._afegd .GetCrypter ()!=nil &&!_edafb ._afegd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aagdf :=_edafb ._adbgg ;_gfebb :=_aagdf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gfebb ==nil {return nil ,nil ;};_defcd ,_afegb :=_eag .GetIndirect (_gfebb );_gfebb =_eag .TraceToDirectObject (_gfebb );if _eag .IsNullObject (_gfebb ){_ebdd .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bbfce ,_ffegc :=_eag .GetDict (_gfebb );if !_ffegc {_ebdd .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gfebb );_ebdd .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gfebb );};_ebdd .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ebdd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_edafb ._dgabg {_ecea :=_edafb .traverseObjectData (_bbfce );
if _ecea !=nil {_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ecea );
return nil ,_ecea ;};};_efbea ,_adcdf :=_edafb .newPdfAcroFormFromDict (_defcd ,_bbfce );if _adcdf !=nil {return nil ,_adcdf ;};_efbea ._efefb =!_afegb ;return _efbea ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_eag .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _eebfe ()string {_cabff .Lock ();defer _cabff .Unlock ();
return _dbge };

// ToPdfObject implements interface PdfModel.
func (_gcfe *PdfActionGoTo )ToPdfObject ()_eag .PdfObject {_gcfe .PdfAction .ToPdfObject ();_cdab :=_gcfe ._ggd ;_dce :=_cdab .PdfObject .(*_eag .PdfObjectDictionary );_dce .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeGoTo )));_dce .SetIfNotNil ("\u0044",_gcfe .D );
return _cdab ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_aggce *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecggf ,_bdcd :=color .(*PdfColorDeviceCMYK );if !_bdcd {_ebdd .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bged :=_ecggf .C ();_fecf :=_ecggf .M ();_bbfb :=_ecggf .Y ();_cdf :=_ecggf .K ();_bged =_bged *(1-_cdf )+_cdf ;_fecf =_fecf *(1-_cdf )+_cdf ;
_bbfb =_bbfb *(1-_cdf )+_cdf ;_cacd :=1-_bged ;_eeec :=1-_fecf ;_acdg :=1-_bbfb ;return NewPdfColorDeviceRGB (_cacd ,_eeec ,_acdg ),nil ;};func _addd (_egcgf *_eag .PdfObjectDictionary )(*PdfFieldText ,error ){_dfbad :=&PdfFieldText {};_dfbad .DA ,_ =_eag .GetString (_egcgf .Get ("\u0044\u0041"));
_dfbad .Q ,_ =_eag .GetInt (_egcgf .Get ("\u0051"));_dfbad .DS ,_ =_eag .GetString (_egcgf .Get ("\u0044\u0053"));_dfbad .RV =_egcgf .Get ("\u0052\u0056");_dfbad .MaxLen ,_ =_eag .GetInt (_egcgf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _dfbad ,nil ;
};func _adfa (_bfbda *_eag .PdfIndirectObject )(*PdfOutline ,error ){_ecagb ,_abfdb :=_bfbda .PdfObject .(*_eag .PdfObjectDictionary );if !_abfdb {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dada :=NewPdfOutline ();if _gfcegf :=_ecagb .Get ("\u0054\u0079\u0070\u0065");_gfcegf !=nil {_bgbb ,_bbde :=_gfcegf .(*_eag .PdfObjectName );if _bbde {if *_bgbb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ebdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bgbb );
};};};if _cdaed :=_ecagb .Get ("\u0043\u006f\u0075n\u0074");_cdaed !=nil {_bcbfa ,_abbeb :=_eag .GetNumberAsInt64 (_cdaed );if _abbeb !=nil {return nil ,_abbeb ;};_dada .Count =&_bcbfa ;};return _dada ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbg *PdfActionSound )ToPdfObject ()_eag .PdfObject {_dbg .PdfAction .ToPdfObject ();_dd :=_dbg ._ggd ;_ad :=_dd .PdfObject .(*_eag .PdfObjectDictionary );_ad .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeSound )));_ad .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dbg .Sound );
_ad .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dbg .Volume );_ad .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dbg .Synchronous );_ad .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dbg .Repeat );_ad .SetIfNotNil ("\u004d\u0069\u0078",_dbg .Mix );
return _dd ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_fcg .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ag .Time ;};func (_agdd *PdfWriter )writeOutputIntents ()error {if len (_agdd ._gcdaf )==0{return nil ;};_ccebf :=make ([]_eag .PdfObject ,len (_agdd ._gcdaf ));for _ddeba ,_gcdga :=range _agdd ._gcdaf {_gbcdb :=_gcdga .ToPdfObject ();
_ccebf [_ddeba ]=_eag .MakeIndirectObject (_gbcdb );};_feddg :=_eag .MakeIndirectObject (_eag .MakeArray (_ccebf ...));_agdd ._daegb .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_feddg );if _cddag :=_agdd .addObjects (_feddg );
_cddag !=nil {return _cddag ;};return nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_fagg *PdfPattern )ToPdfObject ()_eag .PdfObject {_befdf :=_fagg .getDict ();_befdf .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_befdf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_eag .MakeInteger (_fagg .PatternType ));
return _fagg ._bcdbe ;};

// ToPdfObject returns a stream object.
func (_eadfc *XObjectForm )ToPdfObject ()_eag .PdfObject {_ebebca :=_eadfc ._beaeg ;_bcffc :=_ebebca .PdfObjectDictionary ;if _eadfc .Filter !=nil {_bcffc =_eadfc .Filter .MakeStreamDict ();_ebebca .PdfObjectDictionary =_bcffc ;};_bcffc .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bcffc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0046\u006f\u0072\u006d"));_bcffc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_eadfc .FormType );_bcffc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_eadfc .BBox );
_bcffc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_eadfc .Matrix );if _eadfc .Resources !=nil {_bcffc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eadfc .Resources .ToPdfObject ());};_bcffc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eadfc .Group );
_bcffc .SetIfNotNil ("\u0052\u0065\u0066",_eadfc .Ref );_bcffc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_eadfc .MetaData );_bcffc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eadfc .PieceInfo );_bcffc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eadfc .LastModified );
_bcffc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eadfc .StructParent );_bcffc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eadfc .StructParents );_bcffc .SetIfNotNil ("\u004f\u0050\u0049",_eadfc .OPI );
_bcffc .SetIfNotNil ("\u004f\u0043",_eadfc .OC );_bcffc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eadfc .Name );_bcffc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_eadfc .Stream ))));_ebebca .Stream =_eadfc .Stream ;return _ebebca ;
};func (_ddbd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _eag .PdfObject ;V _eag .PdfObject ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_eca :=NewPdfAction ();_gga :=&PdfActionRendition {};_gga .PdfAction =_eca ;_eca .SetContext (_gga );return _gga ;};func (_agdgg *PdfWriter )writeBytes (_gddbd []byte ){if _agdgg ._cdbbd !=nil {return ;
};_fcaaa ,_aaefg :=_agdgg ._fdcde .Write (_gddbd );_agdgg ._bfacf +=int64 (_fcaaa );_agdgg ._cdbbd =_aaefg ;};

// Val returns the color value.
func (_ggbg *PdfColorDeviceGray )Val ()float64 {return float64 (*_ggbg )};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_afdb *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_aafd :=func (_aaeda float64 )float64 {if _aaeda >=6.0/29{return _aaeda *_aaeda *_aaeda ;};return 108.0/841*(_aaeda -4.0/29.0);};_dbcf :=img ._dadbe ;if len (_dbcf )!=6{_ebdd .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dbcf =_afdb .DecodeArray ();};_cggg :=_dba .NewReader (img .getBase ());_dgece :=_fde .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cbefd ,img ._dadbe );_dcgd :=_dba .NewWriter (_dgece );_gbea :=_gcg .Pow (2,float64 (img .BitsPerComponent ))-1;
_bcbab :=make ([]uint32 ,3);var (_gefd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dedef ,_ddea ,_egfe float64 ;);for {_gefd =_cggg .ReadSamples (_bcbab );if _gefd ==_ba .EOF {break ;}else if _gefd !=nil {return img ,_gefd ;};Ls =float64 (_bcbab [0])/_gbea ;
As =float64 (_bcbab [1])/_gbea ;Bs =float64 (_bcbab [2])/_gbea ;Ls =_fde .LinearInterpolate (Ls ,0.0,1.0,_dbcf [0],_dbcf [1]);As =_fde .LinearInterpolate (As ,0.0,1.0,_dbcf [2],_dbcf [3]);Bs =_fde .LinearInterpolate (Bs ,0.0,1.0,_dbcf [4],_dbcf [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_afdb .WhitePoint [0]*_aafd (L );Y =_afdb .WhitePoint [1]*_aafd (M );Z =_afdb .WhitePoint [2]*_aafd (N );_dedef =3.240479*X +-1.537150*Y +-0.498535*Z ;_ddea =-0.969256*X +1.875992*Y +0.041556*Z ;_egfe =0.055648*X +-0.204043*Y +1.057311*Z ;
_dedef =_gcg .Min (_gcg .Max (_dedef ,0),1.0);_ddea =_gcg .Min (_gcg .Max (_ddea ,0),1.0);_egfe =_gcg .Min (_gcg .Max (_egfe ,0),1.0);_bcbab [0]=uint32 (_dedef *_gbea );_bcbab [1]=uint32 (_ddea *_gbea );_bcbab [2]=uint32 (_egfe *_gbea );if _gefd =_dcgd .WriteSamples (_bcbab );
_gefd !=nil {return img ,_gefd ;};};return _ecfe (&_dgece ),nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_eeb .StdFontName ;

// AddCerts adds certificates to DSS.
func (_dbace *DSS )AddCerts (certs [][]byte )([]*_eag .PdfObjectStream ,error ){return _dbace .add (&_dbace .Certs ,_dbace ._bdgdg ,certs );};func (_dbbc *PdfWriter )copyObjects (){_cbagc :=make (map[_eag .PdfObject ]_eag .PdfObject );_bcgfb :=make ([]_eag .PdfObject ,0,len (_dbbc ._eggea ));
_ecdgge :=make (map[_eag .PdfObject ]struct{},len (_dbbc ._eggea ));_afebb :=make (map[_eag .PdfObject ]struct{});for _ ,_fcadge :=range _dbbc ._eggea {_cfcd :=_dbbc .copyObject (_fcadge ,_cbagc ,_afebb ,false );if _ ,_eacab :=_afebb [_fcadge ];_eacab {continue ;
};_bcgfb =append (_bcgfb ,_cfcd );_ecdgge [_cfcd ]=struct{}{};};_dbbc ._eggea =_bcgfb ;_dbbc ._fcced =_ecdgge ;_dbbc ._eagcbd =_dbbc .copyObject (_dbbc ._eagcbd ,_cbagc ,nil ,false ).(*_eag .PdfIndirectObject );_dbbc ._gebfg =_dbbc .copyObject (_dbbc ._gebfg ,_cbagc ,nil ,false ).(*_eag .PdfIndirectObject );
if _dbbc ._agdeb !=nil {_dbbc ._agdeb =_dbbc .copyObject (_dbbc ._agdeb ,_cbagc ,nil ,false ).(*_eag .PdfIndirectObject );};if _dbbc ._fgfg {_agef :=make (map[_eag .PdfObject ]int64 );for _edaa ,_fabgf :=range _dbbc ._fbbde {if _efcbc ,_ddadg :=_cbagc [_edaa ];
_ddadg {_agef [_efcbc ]=_fabgf ;}else {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dbbc ._fbbde =_agef ;};};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dceab *PdfField )ToPdfObject ()_eag .PdfObject {_dgbca :=_dceab ._eebf ;_cdfe :=_dgbca .PdfObject .(*_eag .PdfObjectDictionary );_fdbfb :=_eag .MakeArray ();for _ ,_dfea :=range _dceab .Kids {_fdbfb .Append (_dfea .ToPdfObject ());};for _ ,_gcad :=range _dceab .Annotations {if _gcad ._gfa !=_dceab ._eebf {_fdbfb .Append (_gcad .GetContext ().ToPdfObject ());
};};if _dceab .Parent !=nil {_cdfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dceab .Parent .GetContainingPdfObject ());};if _fdbfb .Len ()> 0{_cdfe .Set ("\u004b\u0069\u0064\u0073",_fdbfb );};_cdfe .SetIfNotNil ("\u0046\u0054",_dceab .FT );
_cdfe .SetIfNotNil ("\u0054",_dceab .T );_cdfe .SetIfNotNil ("\u0054\u0055",_dceab .TU );_cdfe .SetIfNotNil ("\u0054\u004d",_dceab .TM );_cdfe .SetIfNotNil ("\u0046\u0066",_dceab .Ff );_cdfe .SetIfNotNil ("\u0056",_dceab .V );_cdfe .SetIfNotNil ("\u0044\u0056",_dceab .DV );
_cdfe .SetIfNotNil ("\u0041\u0041",_dceab .AA );if _dceab .VariableText !=nil {_cdfe .SetIfNotNil ("\u0044\u0041",_dceab .VariableText .DA );_cdfe .SetIfNotNil ("\u0051",_dceab .VariableText .Q );_cdfe .SetIfNotNil ("\u0044\u0053",_dceab .VariableText .DS );
_cdfe .SetIfNotNil ("\u0052\u0056",_dceab .VariableText .RV );};return _dgbca ;};func (_cdddf *PdfWriter )writeOutlines ()error {if _cdddf ._aafaa ==nil {return nil ;};_ebdd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cdddf ._aafaa );
_dadbg :=_cdddf ._aafaa .ToPdfObject ();_ebdd .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dadbg ,_dadbg ,_dadbg );_cdddf ._daegb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dadbg );
_ffcbg :=_cdddf .addObjects (_dadbg );if _ffcbg !=nil {return _ffcbg ;};return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ebefg *PdfFieldButton )GetType ()ButtonType {_gceac :=ButtonTypeCheckbox ;if _ebefg .Ff !=nil {if (uint32 (*_ebefg .Ff )&FieldFlagPushbutton .Mask ())> 0{_gceac =ButtonTypePush ;}else if (uint32 (*_ebefg .Ff )&FieldFlagRadio .Mask ())> 0{_gceac =ButtonTypeRadio ;
};};return _gceac ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dabbe *PdfPageResources )SetXObjectByName (keyName _eag .PdfObjectName ,stream *_eag .PdfObjectStream )error {if _dabbe .XObject ==nil {_dabbe .XObject =_eag .MakeDict ();};_afgga :=_eag .TraceToDirectObject (_dabbe .XObject );_edcd ,_cdfa :=_afgga .(*_eag .PdfObjectDictionary );
if !_cdfa {_ebdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dabbe .XObject ,_afgga );return _bag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edcd .Set (keyName ,stream );return nil ;};func _cbea (_fdeeb _eag .PdfObject )(*PdfShading ,error ){_cbddf :=&PdfShading {};var _gbegg *_eag .PdfObjectDictionary ;if _fggdc ,_gdgce :=_eag .GetIndirect (_fdeeb );_gdgce {_cbddf ._aadgg =_fggdc ;_dbbf ,_gbebe :=_fggdc .PdfObject .(*_eag .PdfObjectDictionary );
if !_gbebe {_ebdd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_eag .ErrTypeError ;};_gbegg =_dbbf ;}else if _fcbcbe ,_adfaf :=_eag .GetStream (_fdeeb );
_adfaf {_cbddf ._aadgg =_fcbcbe ;_gbegg =_fcbcbe .PdfObjectDictionary ;}else if _abbbbe ,_ggcffb :=_eag .GetDict (_fdeeb );_ggcffb {_cbddf ._aadgg =_abbbbe ;_gbegg =_abbbbe ;}else {_ebdd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fdeeb );
return nil ,_eag .ErrTypeError ;};if _gbegg ==nil {_ebdd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_bag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fdeeb =_gbegg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fdeeb ==nil {_ebdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fdeeb =_eag .TraceToDirectObject (_fdeeb );_gfdfe ,_gebee :=_fdeeb .(*_eag .PdfObjectInteger );if !_gebee {_ebdd .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fdeeb );
return nil ,_eag .ErrTypeError ;};if *_gfdfe < 1||*_gfdfe > 7{_ebdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gfdfe );
return nil ,_eag .ErrTypeError ;};_cbddf .ShadingType =_gfdfe ;_fdeeb =_gbegg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fdeeb ==nil {_ebdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffcac ,_eggf :=NewPdfColorspaceFromPdfObject (_fdeeb );if _eggf !=nil {_ebdd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_eggf );
return nil ,_eggf ;};_cbddf .ColorSpace =_ffcac ;_fdeeb =_gbegg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fdeeb !=nil {_fdeeb =_eag .TraceToDirectObject (_fdeeb );_cfacdg ,_fdfaa :=_fdeeb .(*_eag .PdfObjectArray );if !_fdfaa {_ebdd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fdeeb );
return nil ,_eag .ErrTypeError ;};_cbddf .Background =_cfacdg ;};_fdeeb =_gbegg .Get ("\u0042\u0042\u006f\u0078");if _fdeeb !=nil {_fdeeb =_eag .TraceToDirectObject (_fdeeb );_ebdgf ,_dcbad :=_fdeeb .(*_eag .PdfObjectArray );if !_dcbad {_ebdd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fdeeb );
return nil ,_eag .ErrTypeError ;};_aggag ,_ccffd :=NewPdfRectangle (*_ebdgf );if _ccffd !=nil {_ebdd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccffd );return nil ,_ccffd ;};_cbddf .BBox =_aggag ;};_fdeeb =_gbegg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _fdeeb !=nil {_fdeeb =_eag .TraceToDirectObject (_fdeeb );_ccedb ,_adfc :=_fdeeb .(*_eag .PdfObjectBool );if !_adfc {_ebdd .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdeeb );
return nil ,_eag .ErrTypeError ;};_cbddf .AntiAlias =_ccedb ;};switch *_gfdfe {case 1:_baccc ,_dedff :=_cgacdf (_gbegg );if _dedff !=nil {return nil ,_dedff ;};_baccc .PdfShading =_cbddf ;_cbddf ._dcgab =_baccc ;return _cbddf ,nil ;case 2:_fdggd ,_afgdd :=_ffcb (_gbegg );
if _afgdd !=nil {return nil ,_afgdd ;};_fdggd .PdfShading =_cbddf ;_cbddf ._dcgab =_fdggd ;return _cbddf ,nil ;case 3:_aeba ,_gdgdc :=_fgbb (_gbegg );if _gdgdc !=nil {return nil ,_gdgdc ;};_aeba .PdfShading =_cbddf ;_cbddf ._dcgab =_aeba ;return _cbddf ,nil ;
case 4:_dbagg ,_bece :=_cfee (_gbegg );if _bece !=nil {return nil ,_bece ;};_dbagg .PdfShading =_cbddf ;_cbddf ._dcgab =_dbagg ;return _cbddf ,nil ;case 5:_fdgdc ,_acadg :=_dbgfa (_gbegg );if _acadg !=nil {return nil ,_acadg ;};_fdgdc .PdfShading =_cbddf ;
_cbddf ._dcgab =_fdgdc ;return _cbddf ,nil ;case 6:_cddfc ,_adeee :=_aacfd (_gbegg );if _adeee !=nil {return nil ,_adeee ;};_cddfc .PdfShading =_cbddf ;_cbddf ._dcgab =_cddfc ;return _cbddf ,nil ;case 7:_cdbae ,_agcae :=_cdabd (_gbegg );if _agcae !=nil {return nil ,_agcae ;
};_cdbae .PdfShading =_cbddf ;_cbddf ._dcgab =_cdbae ;return _cbddf ,nil ;};return nil ,_bag .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_feaga :=&PdfOutlineItem {_ceecc :_eag .MakeIndirectObject (_eag .MakeDict ())};_feaga ._addfb =_feaga ;return _feaga ;};

// WriteToFile writes the output PDF to file.
func (_dbdgd *PdfWriter )WriteToFile (outputFilePath string )error {_fgcfa ,_gadag :=_fc .Create (outputFilePath );if _gadag !=nil {return _gadag ;};defer _fgcfa .Close ();return _dbdgd .Write (_fgcfa );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aebbf pdfFontType3 )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){_abgd :=_aebbf .Encoder ();if _abgd ==nil {_ebdd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_aebbf );
return _eeb .CharMetrics {},false ;};_bgba ,_fgfd :=_abgd .RuneToCharcode (r );if !_fgfd {if r !=' '{_ebdd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_aebbf );
};return _eeb .CharMetrics {},false ;};_fcfbf ,_cggd :=_aebbf .GetCharMetrics (_bgba );return _fcfbf ,_cggd ;};func _adagf ()string {return _ebdd .Version };

// ToPdfObject implements interface PdfModel.
func (_efcf *EmbeddedFile )ToPdfObject ()_eag .PdfObject {_agccab :=_eag .NewFlateEncoder ();_cedd ,_dafbb :=_eag .MakeStream (_efcf .Content ,_agccab );if _dafbb !=nil {_ebdd .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dafbb );
return nil ;};_ffgg :=_cedd .PdfObjectDictionary ;_ffgg .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_ffgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_badaa :=_eag .MakeDict ();_badaa .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_eag .MakeString (_efcf .Hash [:]));_badaa .Set ("\u0053\u0069\u007a\u0065",_eag .MakeInteger (int64 (len (_efcf .Content ))));_eebe :=_efcf .CreationTime ;if _eebe .IsZero (){_eebe =_ag .Now ();
};_egcba :=_efcf .ModTime ;if _egcba .IsZero (){_egcba =_eebe ;};_ebfca ,_dafbb :=NewPdfDateFromTime (_eebe );if _dafbb !=nil {_ebdd .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dafbb );
return nil ;};_fgda ,_dafbb :=NewPdfDateFromTime (_egcba );if _dafbb !=nil {_ebdd .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_dafbb );
return nil ;};_badaa .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ebfca .ToPdfObject ());_badaa .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fgda .ToPdfObject ());_ffgg .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_badaa );
_gacf :=_eag .MakeDict ();_gacf .Set (*_eag .MakeName ("\u0046"),_cedd );return _gacf ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eea PdfModel ;Type _eag .PdfObject ;S _eag .PdfObject ;Next _eag .PdfObject ;_ggd *_eag .PdfIndirectObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gaff pdfFontType0 )GetCharMetrics (code _gbf .CharCode )(_eeb .CharMetrics ,bool ){if _gaff .DescendantFont ==nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gaff );
return _eeb .CharMetrics {},false ;};return _gaff .DescendantFont .GetCharMetrics (code );};

// Register registers (caches) a model to primitive object relationship.
func (_ecffb *modelManager )Register (primitive _eag .PdfObject ,model PdfModel ){_ecffb ._gfbgg [model ]=primitive ;_ecffb ._agda [primitive ]=model ;};func _adbdf ()string {_cabff .Lock ();defer _cabff .Unlock ();return _effbe };

// ToPdfObject implements interface PdfModel.
func (_eacg *PdfAnnotationCaret )ToPdfObject ()_eag .PdfObject {_eacg .PdfAnnotation .ToPdfObject ();_cfc :=_eacg ._gfa ;_baee :=_cfc .PdfObject .(*_eag .PdfObjectDictionary );_eacg .PdfAnnotationMarkup .appendToPdfDictionary (_baee );_baee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0043\u0061\u0072e\u0074"));
_baee .SetIfNotNil ("\u0052\u0044",_eacg .RD );_baee .SetIfNotNil ("\u0053\u0079",_eacg .Sy );return _cfc ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ggdaf *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _caead []*PdfField ;if _ggdaf .AcroForm !=nil {_caead =_ggdaf .AcroForm .AllFields ();};_bebgg :=make (map[*PdfField ]struct{},len (_caead ));for _ ,_afaae :=range _caead {_bebgg [_afaae ]=struct{}{};
};for _ ,_fegge :=range _ggdaf .PageList {_aeed ,_gagee :=_fegge .GetAnnotations ();if _gagee !=nil {return false ,_gagee ;};for _ ,_ebece :=range _aeed {_bbeee ,_gaedc :=_ebece .GetContext ().(*PdfAnnotationWidget );if !_gaedc {continue ;};_bfege :=_bbeee .Field ();
if _bfege ==nil {return true ,nil ;};if _ ,_fdfba :=_bebgg [_bfege ];!_fdfba {return true ,nil ;};};};return false ,nil ;};func (_eaeb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_eaeb .fontCommon };

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gbcgf FieldFlag )Has (fl FieldFlag )bool {return (_gbcgf .Mask ()&fl .Mask ())> 0};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetContainingPdfObject implements interface PdfModel.
func (_dbcaf *PdfSignatureReference )GetContainingPdfObject ()_eag .PdfObject {return _dbcaf ._aaeee };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_bacf pdfFontSimple )GetCharMetrics (code _gbf .CharCode )(_eeb .CharMetrics ,bool ){if _bgcgc ,_bdfab :=_bacf ._fgdd [code ];_bdfab {return _eeb .CharMetrics {Wx :_bgcgc },true ;};if _eeb .IsStdFont (_eeb .StdFontName (_bacf ._fgcc )){return _eeb .CharMetrics {Wx :250},true ;
};return _eeb .CharMetrics {},false ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_dafa :_eag .MakeDict (),ColorComponents :colorComponents };
};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_eccf *pdfCIDFontType2 )ToPdfObject ()_eag .PdfObject {if _eccf ._becf ==nil {_eccf ._becf =&_eag .PdfIndirectObject {};};_gbeea :=_eccf .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_eccf ._becf .PdfObject =_gbeea ;if _eccf .CIDSystemInfo !=nil {_gbeea .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_eccf .CIDSystemInfo );};if _eccf .DW !=nil {_gbeea .Set ("\u0044\u0057",_eccf .DW );};if _eccf .DW2 !=nil {_gbeea .Set ("\u0044\u0057\u0032",_eccf .DW2 );
};if _eccf .W !=nil {_gbeea .Set ("\u0057",_eccf .W );};if _eccf .W2 !=nil {_gbeea .Set ("\u0057\u0032",_eccf .W2 );};if _eccf .CIDToGIDMap !=nil {_gbeea .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_eccf .CIDToGIDMap );};return _eccf ._becf ;
};func (_dfgeg *PdfWriter )setDocumentIDs (_caad ,_gceea string ){_dfgeg ._cabccg =_eag .MakeArray (_eag .MakeHexString (_caad ),_eag .MakeHexString (_gceea ));};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_gfdb *PdfColorspaceLab )DecodeArray ()[]float64 {_acggg :=[]float64 {0,100};if _gfdb .Range !=nil &&len (_gfdb .Range )==4{_acggg =append (_acggg ,_gfdb .Range ...);}else {_acggg =append (_acggg ,-100,100,-100,100);};return _acggg ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_eadg *PdfFieldButton )ToPdfObject ()_eag .PdfObject {_eadg .PdfField .ToPdfObject ();_bbeg :=_eadg ._eebf ;_eabf :=_bbeg .PdfObject .(*_eag .PdfObjectDictionary );_eabf .Set ("\u0046\u0054",_eag .MakeName ("\u0042\u0074\u006e"));if _eadg .Opt !=nil {_eabf .Set ("\u004f\u0070\u0074",_eadg .Opt );
};return _bbeg ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cddf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_bag .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_edaf ,_cfdg :=_fde .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbefd ,img ._dadbe );if _cfdg !=nil {return img ,_cfdg ;};_ecbab ,_cfdg :=_fde .GrayConverter .Convert (_edaf );if _cfdg !=nil {return img ,_cfdg ;
};return _ecfe (_ecbab .Base ()),nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_faeadb :=&XObjectForm {};_bfgcb :=&_eag .PdfObjectStream {};_bfgcb .PdfObjectDictionary =_eag .MakeDict ();_faeadb ._beaeg =_bfgcb ;return _faeadb ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_caeab *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_caeab .HiVal )};};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_ebfgc []*PdfFont ;CurrentFont *PdfFont ;};

// ToGoTime returns the date in time.Time format.
func (_agbdf PdfDate )ToGoTime ()_ag .Time {_cdggf :=int (_agbdf ._adae *60*60+_agbdf ._cfea *60);switch _agbdf ._efegd {case '-':_cdggf =-_cdggf ;case 'Z':_cdggf =0;};_bbcb :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_agbdf ._efegd ,_agbdf ._adae ,_agbdf ._cfea );
_acbfd :=_ag .FixedZone (_bbcb ,_cdggf );return _ag .Date (int (_agbdf ._abdgf ),_ag .Month (_agbdf ._agab ),int (_agbdf ._bdecd ),int (_agbdf ._bcgf ),int (_agbdf ._gfeab ),int (_agbdf ._fgaa ),0,_acbfd );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_eebg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egeb ,_dfgf :=_eag .GetNumbersAsFloat (objects );
if _dfgf !=nil {return nil ,_dfgf ;};return _eebg .ColorFromFloats (_egeb );};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func (_cfa *PdfReader )newPdfAnnotationLinkFromDict (_aff *_eag .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gedb :=PdfAnnotationLink {};_gedb .A =_aff .Get ("\u0041");
_gedb .Dest =_aff .Get ("\u0044\u0065\u0073\u0074");_gedb .H =_aff .Get ("\u0048");_gedb .PA =_aff .Get ("\u0050\u0041");_gedb .QuadPoints =_aff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gedb .BS =_aff .Get ("\u0042\u0053");
return &_gedb ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_eag .PdfObjectArray ;Domain *_eag .PdfObjectArray ;Function []PdfFunction ;Extend *_eag .PdfObjectArray ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_degcb *PdfPageResources )SetShadingByName (keyName _eag .PdfObjectName ,shadingObj _eag .PdfObject )error {if _degcb .Shading ==nil {_degcb .Shading =_eag .MakeDict ();};_fggc ,_ebacg :=_eag .GetDict (_degcb .Shading );if !_ebacg {return _eag .ErrTypeError ;
};_fggc .Set (keyName ,shadingObj );return nil ;};func (_aec *PdfReader )newPdfActionResetFormFromDict (_fgg *_eag .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_caba *PdfBorderStyle )ToPdfObject ()_eag .PdfObject {_dbeef :=_eag .MakeDict ();if _caba ._dfce !=nil {if _bgacc ,_bgee :=_caba ._dfce .(*_eag .PdfIndirectObject );_bgee {_bgacc .PdfObject =_dbeef ;};};_dbeef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _caba .W !=nil {_dbeef .Set ("\u0057",_eag .MakeFloat (*_caba .W ));};if _caba .S !=nil {_dbeef .Set ("\u0053",_eag .MakeName (_caba .S .GetPdfName ()));};if _caba .D !=nil {_dbeef .Set ("\u0044",_eag .MakeArrayFromIntegers (*_caba .D ));};if _caba ._dfce !=nil {return _caba ._dfce ;
};return _dbeef ;};

// ToPdfObject implements interface PdfModel.
func (_cbe *PdfActionImportData )ToPdfObject ()_eag .PdfObject {_cbe .PdfAction .ToPdfObject ();_cdc :=_cbe ._ggd ;_cbb :=_cdc .PdfObject .(*_eag .PdfObjectDictionary );_cbb .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeImportData )));if _cbe .F !=nil {_cbb .Set ("\u0046",_cbe .F .ToPdfObject ());
};return _cdc ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_abfad *PdfPageResources )ToPdfObject ()_eag .PdfObject {_eeebg :=_abfad ._aafeb ;_eeebg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_abfad .ExtGState );if _abfad ._dcbf !=nil {_abfad .ColorSpace =_abfad ._dcbf .ToPdfObject ();};
_eeebg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_abfad .ColorSpace );_eeebg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_abfad .Pattern );_eeebg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_abfad .Shading );
_eeebg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_abfad .XObject );_eeebg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_abfad .Font );_eeebg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_abfad .ProcSet );_eeebg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_abfad .Properties );
return _eeebg ;};func (_cegaa *PdfWriter )writeXRefStreams (_edbgg int ,_decae int64 )error {_cbffe :=_edbgg +1;_cegaa ._dfdb [_cbffe ]=crossReference {Type :1,ObjectNumber :_cbffe ,Offset :_decae };_cdga :=_cf .NewBuffer (nil );_bcebg :=_eag .MakeArray ();
for _bdecdd :=0;_bdecdd <=_edbgg ;{for ;_bdecdd <=_edbgg ;_bdecdd ++{_daefc ,_bdbb :=_cegaa ._dfdb [_bdecdd ];if _bdbb &&(!_cegaa ._fgfg ||_cegaa ._fgfg &&(_daefc .Type ==1&&_daefc .Offset >=_cegaa ._ccdba ||_daefc .Type ==0)){break ;};};var _cacdg int ;
for _cacdg =_bdecdd +1;_cacdg <=_edbgg ;_cacdg ++{_fdfce ,_dffaf :=_cegaa ._dfdb [_cacdg ];if _dffaf &&(!_cegaa ._fgfg ||_cegaa ._fgfg &&(_fdfce .Type ==1&&_fdfce .Offset > _cegaa ._ccdba )){continue ;};break ;};_bcebg .Append (_eag .MakeInteger (int64 (_bdecdd )),_eag .MakeInteger (int64 (_cacdg -_bdecdd )));
for _becde :=_bdecdd ;_becde < _cacdg ;_becde ++{_dfbef :=_cegaa ._dfdb [_becde ];switch _dfbef .Type {case 0:_ee .Write (_cdga ,_ee .BigEndian ,byte (0));_ee .Write (_cdga ,_ee .BigEndian ,uint32 (0));_ee .Write (_cdga ,_ee .BigEndian ,uint16 (0xFFFF));
case 1:_ee .Write (_cdga ,_ee .BigEndian ,byte (1));_ee .Write (_cdga ,_ee .BigEndian ,uint32 (_dfbef .Offset ));_ee .Write (_cdga ,_ee .BigEndian ,uint16 (_dfbef .Generation ));case 2:_ee .Write (_cdga ,_ee .BigEndian ,byte (2));_ee .Write (_cdga ,_ee .BigEndian ,uint32 (_dfbef .ObjectNumber ));
_ee .Write (_cdga ,_ee .BigEndian ,uint16 (_dfbef .Index ));};};_bdecdd =_cacdg +1;};_gcaeb ,_fcde :=_eag .MakeStream (_cdga .Bytes (),_eag .NewFlateEncoder ());if _fcde !=nil {return _fcde ;};_gcaeb .ObjectNumber =int64 (_cbffe );_gcaeb .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0058\u0052\u0065\u0066"));
_gcaeb .PdfObjectDictionary .Set ("\u0057",_eag .MakeArray (_eag .MakeInteger (1),_eag .MakeInteger (4),_eag .MakeInteger (2)));_gcaeb .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bcebg );_gcaeb .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_eag .MakeInteger (int64 (_cbffe )));
_gcaeb .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cegaa ._eagcbd );_gcaeb .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cegaa ._gebfg );if _cegaa ._fgfg &&_cegaa ._fbcge > 0{_gcaeb .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_eag .MakeInteger (_cegaa ._fbcge ));
};if _cegaa ._ffbfg !=nil {_gcaeb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cegaa ._agdeb );};if _cegaa ._cabccg ==nil &&_cegaa ._aecb !=""&&_cegaa ._bcfgc !=""{_cegaa ._cabccg =_eag .MakeArray (_eag .MakeHexString (_cegaa ._aecb ),_eag .MakeHexString (_cegaa ._bcfgc ));
};if _cegaa ._cabccg !=nil {_ebdd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cegaa ._cabccg );_gcaeb .Set ("\u0049\u0044",_cegaa ._cabccg );};_cegaa .writeObject (int (_gcaeb .ObjectNumber ),_gcaeb );return nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_efca *PdfPage )GetAllContentStreams ()(string ,error ){_ebada ,_bfcfa :=_efca .GetContentStreams ();if _bfcfa !=nil {return "",_bfcfa ;};return _cb .Join (_ebada ,"\u0020"),nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ecdbb :=&PdfColorspaceDeviceN {};return _ecdbb ;};func (_afea *PdfField )inherit (_caga func (*PdfField )bool )(bool ,error ){_edcb :=map[*PdfField ]bool {};_acdaf :=false ;_ccdbf :=_afea ;for _ccdbf !=nil {if _ ,_eeda :=_edcb [_ccdbf ];
_eeda {return false ,_bag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_bdfb :=_caga (_ccdbf );if _bdfb {_acdaf =true ;break ;};_edcb [_ccdbf ]=true ;_ccdbf =_ccdbf .Parent ;};return _acdaf ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionGoToR )ToPdfObject ()_eag .PdfObject {_ecb .PdfAction .ToPdfObject ();_eagc :=_ecb ._ggd ;_ca :=_eagc .PdfObject .(*_eag .PdfObjectDictionary );_ca .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeGoToR )));if _ecb .F !=nil {_ca .Set ("\u0046",_ecb .F .ToPdfObject ());
};_ca .SetIfNotNil ("\u0044",_ecb .D );_ca .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ecb .NewWindow );return _eagc ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _eag .PdfObject ;Sy _eag .PdfObject ;};func (_caeac *PdfWriter )flushWriter ()error {if _caeac ._cdbbd ==nil {_caeac ._cdbbd =_caeac ._fdcde .Flush ();};return _caeac ._cdbbd ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _eag .PdfObjectName ;};func (_deec *PdfReader )newPdfAnnotationLineFromDict (_abg *_eag .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_dde :=PdfAnnotationLine {};_eddc ,_gfcc :=_deec .newPdfAnnotationMarkupFromDict (_abg );
if _gfcc !=nil {return nil ,_gfcc ;};_dde .PdfAnnotationMarkup =_eddc ;_dde .L =_abg .Get ("\u004c");_dde .BS =_abg .Get ("\u0042\u0053");_dde .LE =_abg .Get ("\u004c\u0045");_dde .IC =_abg .Get ("\u0049\u0043");_dde .LL =_abg .Get ("\u004c\u004c");_dde .LLE =_abg .Get ("\u004c\u004c\u0045");
_dde .Cap =_abg .Get ("\u0043\u0061\u0070");_dde .IT =_abg .Get ("\u0049\u0054");_dde .LLO =_abg .Get ("\u004c\u004c\u004f");_dde .CP =_abg .Get ("\u0043\u0050");_dde .Measure =_abg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_dde .CO =_abg .Get ("\u0043\u004f");
return &_dde ,nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_eag .PdfObjectName ;P *_eag .PdfObjectInteger ;V *_eag .PdfObjectName ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _eag .PdfObject ;Q _eag .PdfObject ;RC _eag .PdfObject ;DS _eag .PdfObject ;CL _eag .PdfObject ;IT _eag .PdfObject ;BE _eag .PdfObject ;RD _eag .PdfObject ;BS _eag .PdfObject ;LE _eag .PdfObject ;
};func (_bccdc *Image )getSuitableEncoder ()(_eag .StreamEncoder ,error ){var (_gecca ,_dbede =int (_bccdc .Width ),int (_bccdc .Height );_cfcaa =make (map[string ]bool );_fffd =true ;_bgfaa =false ;_gddfd =func ()*_eag .DCTEncoder {return _eag .NewDCTEncoder ()};
_eeega =func ()*_eag .DCTEncoder {_cefe :=_eag .NewDCTEncoder ();_cefe .BitsPerComponent =16;return _cefe };);for _dgead :=0;_dgead < _dbede ;_dgead ++{for _bbgff :=0;_bbgff < _gecca ;_bbgff ++{_cggac ,_adadb :=_bccdc .ColorAt (_bbgff ,_dgead );if _adadb !=nil {return nil ,_adadb ;
};_cffb ,_eabg ,_fcbf ,_dfbg :=_cggac .RGBA ();if _fffd &&(_cffb !=_eabg ||_cffb !=_fcbf ||_eabg !=_fcbf ){_fffd =false ;};if !_bgfaa {switch _cggac .(type ){case _ge .NRGBA :_bgfaa =_dfbg > 0;};};_cfcaa [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_cffb ,_eabg ,_fcbf )]=true ;
if len (_cfcaa )> 2&&_bgfaa {return _eeega (),nil ;};};};if _bgfaa ||len (_bccdc ._cbefd )> 0{return _eag .NewFlateEncoder (),nil ;};if len (_cfcaa )<=2{_eccc :=_bccdc .ConvertToBinary ();if _eccc !=nil {return nil ,_eccc ;};return _eag .NewJBIG2Encoder (),nil ;
};if _fffd {return _gddfd (),nil ;};if _bccdc .ColorComponents ==1{if _bccdc .BitsPerComponent ==1{return _eag .NewJBIG2Encoder (),nil ;}else if _bccdc .BitsPerComponent ==8{_eaeeb :=_eag .NewDCTEncoder ();_eaeeb .ColorComponents =1;return _eaeeb ,nil ;
};}else if _bccdc .ColorComponents ==3{if _bccdc .BitsPerComponent ==8{return _gddfd (),nil ;}else if _bccdc .BitsPerComponent ==16{return _eeega (),nil ;};}else if _bccdc .ColorComponents ==4{_aaae :=_eeega ();_aaae .ColorComponents =4;return _aaae ,nil ;
};return _eeega (),nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_ecbe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_afeg ,_abdag :=_ecbe .GetMediaBox ();if _abdag !=nil {return _abdag ;};_daggf :=_afeg .Urx -_afeg .Llx ;_fbgge :=_afeg .Ury -_afeg .Lly ;_fbff :=float64 (*ximg .Width );
_acbea :=(_daggf -_fbff )/2;if opt .FitToWidth {_fbff =_daggf ;_acbea =0;};_bffab :=_fbgge ;_fedcf :=float64 (0);if opt .PreserveAspectRatio {_bffab =_fbff *float64 (*ximg .Height )/float64 (*ximg .Width );_fedcf =(_fbgge -_bffab )/2;};if _ecbe .Resources ==nil {_ecbe .Resources =NewPdfPageResources ();
};_facba :=0;_fgadc :=_eag .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_facba ));for _ecbe .Resources .HasXObjectByName (_fgadc ){_facba ++;_fgadc =_eag .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_facba ));};_abdag =_ecbe .AddImageResource (_fgadc ,ximg );
if _abdag !=nil {return _abdag ;};_facba =0;_fcdac :=_eag .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_facba ));for _ecbe .HasExtGState (_fcdac ){_facba ++;_fcdac =_eag .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_facba ));};_cdadf :=_eag .MakeDict ();
_cdadf .Set ("\u0042\u004d",_eag .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cdadf .Set ("\u0043\u0041",_eag .MakeFloat (opt .Alpha ));_cdadf .Set ("\u0063\u0061",_eag .MakeFloat (opt .Alpha ));_abdag =_ecbe .AddExtGState (_fcdac ,_cdadf );if _abdag !=nil {return _abdag ;
};_daggd :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fcdac ,_fbff ,_bffab ,_acbea ,_fedcf ,_fgadc );
_ecbe .AddContentStreamByString (_daggd );return nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gffgb *PdfPage )GetPageDict ()*_eag .PdfObjectDictionary {_bace :=_gffgb ._eeaa ;_bace .Clear ();_bace .Set ("\u0054\u0079\u0070\u0065",_eag .MakeName ("\u0050\u0061\u0067\u0065"));_bace .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gffgb .Parent );
if _gffgb .LastModified !=nil {_bace .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gffgb .LastModified .ToPdfObject ());};if _gffgb .Resources !=nil {_bace .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gffgb .Resources .ToPdfObject ());
};if _gffgb .CropBox !=nil {_bace .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gffgb .CropBox .ToPdfObject ());};if _gffgb .MediaBox !=nil {_bace .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gffgb .MediaBox .ToPdfObject ());};if _gffgb .BleedBox !=nil {_bace .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gffgb .BleedBox .ToPdfObject ());
};if _gffgb .TrimBox !=nil {_bace .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gffgb .TrimBox .ToPdfObject ());};if _gffgb .ArtBox !=nil {_bace .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gffgb .ArtBox .ToPdfObject ());};_bace .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gffgb .BoxColorInfo );
_bace .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gffgb .Contents );if _gffgb .Rotate !=nil {_bace .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_eag .MakeInteger (*_gffgb .Rotate ));};_bace .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gffgb .Group );
_bace .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gffgb .Thumb );_bace .SetIfNotNil ("\u0042",_gffgb .B );_bace .SetIfNotNil ("\u0044\u0075\u0072",_gffgb .Dur );_bace .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gffgb .Trans );_bace .SetIfNotNil ("\u0041\u0041",_gffgb .AA );
_bace .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gffgb .Metadata );_bace .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gffgb .PieceInfo );_bace .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gffgb .StructParents );
_bace .SetIfNotNil ("\u0049\u0044",_gffgb .ID );_bace .SetIfNotNil ("\u0050\u005a",_gffgb .PZ );_bace .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gffgb .SeparationInfo );_bace .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gffgb .Tabs );
_bace .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gffgb .TemplateInstantiated );_bace .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gffgb .PresSteps );_bace .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gffgb .UserUnit );
_bace .SetIfNotNil ("\u0056\u0050",_gffgb .VP );if _gffgb ._bcebb !=nil {_deaea :=_eag .MakeArray ();for _ ,_bffa :=range _gffgb ._bcebb {if _dfbfg :=_bffa .GetContext ();_dfbfg !=nil {_deaea .Append (_dfbfg .ToPdfObject ());}else {_deaea .Append (_bffa .ToPdfObject ());
};};if _deaea .Len ()> 0{_bace .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_deaea );};}else if _gffgb .Annots !=nil {_bace .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gffgb .Annots );};return _bace ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_aeaab *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_egdb :=NewPdfOutlineItem ();_egdb .Title =_eag .MakeEncodedString (_aeaab .Title ,true );_egdb .Dest =_aeaab .Dest .ToPdfObject ();var _ebcaa []*PdfOutlineItem ;var _fgceb int64 ;
var _gbcfd *PdfOutlineItem ;for _ ,_cdagf :=range _aeaab .Entries {_bdceb ,_dgdgd :=_cdagf .ToPdfOutlineItem ();_bdceb .Parent =&_egdb .PdfOutlineTreeNode ;if _gbcfd !=nil {_gbcfd .Next =&_bdceb .PdfOutlineTreeNode ;_bdceb .Prev =&_gbcfd .PdfOutlineTreeNode ;
};_ebcaa =append (_ebcaa ,_bdceb );_fgceb +=_dgdgd ;_gbcfd =_bdceb ;};_aeaga :=len (_ebcaa );_fgceb +=int64 (_aeaga );if _aeaga > 0{_egdb .First =&_ebcaa [0].PdfOutlineTreeNode ;_egdb .Last =&_ebcaa [_aeaga -1].PdfOutlineTreeNode ;_egdb .Count =&_fgceb ;
};return _egdb ,_fgceb ;};func _dced (_aebb *XObjectForm )(*PdfRectangle ,bool ,error ){if _febcf ,_cabf :=_aebb .BBox .(*_eag .PdfObjectArray );_cabf {_gebdg ,_ggdeff :=NewPdfRectangle (*_febcf );if _ggdeff !=nil {return nil ,false ,_ggdeff ;};if _bagb ,_gfbe :=_aebb .Matrix .(*_eag .PdfObjectArray );
_gfbe {_gggged ,_cadb :=_bagb .ToFloat64Array ();if _cadb !=nil {return nil ,false ,_cadb ;};_decdg :=_de .IdentityMatrix ();if len (_gggged )==6{_decdg =_de .NewMatrix (_gggged [0],_gggged [1],_gggged [2],_gggged [3],_gggged [4],_gggged [5]);};_gebdg .Transform (_decdg );
return _gebdg ,true ,nil ;};return _gebdg ,false ,nil ;};return nil ,false ,_bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");};func _agabc (_beecd *XObjectImage )error {if _beecd .SMask ==nil {return nil ;
};_eefb ,_gfaaa :=_beecd .SMask .(*_eag .PdfObjectStream );if !_gfaaa {_ebdd .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _eag .ErrTypeError ;};_ebgcg :=_eefb .PdfObjectDictionary ;_geceef :=_ebgcg .Get ("\u004d\u0061\u0074t\u0065");if _geceef ==nil {return nil ;};_eaaab ,_bcaab :=_facbb (_geceef .(*_eag .PdfObjectArray ));if _bcaab !=nil {return _bcaab ;};_egdfg :=_eag .MakeArrayFromFloats ([]float64 {_eaaab });
_ebgcg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_egdfg );return nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_afffd :=appender .Reader .DSS ;if _afffd ==nil {_afffd =NewDSS ();};if _feeg :=_afffd .GenerateHashMaps ();_feeg !=nil {return nil ,_feeg ;};return &LTV {CertClient :_be .NewCertClient (),OCSPClient :_be .NewOCSPClient (),CRLClient :_be .NewCRLClient (),SkipExisting :true ,_cbdb :appender ,_cgcca :_afffd },nil ;
};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bfbe :=NewPdfAnnotation ();_dcde :=&PdfAnnotationSquiggly {};_dcde .PdfAnnotation =_bfbe ;_dcde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfbe .SetContext (_dcde );return _dcde ;};func (_abda *PdfAppender )addNewObject (_fgaf _eag .PdfObject ){if _ ,_ebca :=_abda ._dbaf [_fgaf ];
!_ebca {_abda ._aea =append (_abda ._aea ,_fgaf );_abda ._dbaf [_fgaf ]=struct{}{};};};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ffd :=NewPdfAnnotation ();_fggd :=&PdfAnnotationPrinterMark {};_fggd .PdfAnnotation =_ffd ;_ffd .SetContext (_fggd );return _fggd ;};

// ToPdfObject implements interface PdfModel.
func (_cdd *PdfAnnotationScreen )ToPdfObject ()_eag .PdfObject {_cdd .PdfAnnotation .ToPdfObject ();_edbb :=_cdd ._gfa ;_ffeb :=_edbb .PdfObject .(*_eag .PdfObjectDictionary );_ffeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_ffeb .SetIfNotNil ("\u0054",_cdd .T );_ffeb .SetIfNotNil ("\u004d\u004b",_cdd .MK );_ffeb .SetIfNotNil ("\u0041",_cdd .A );_ffeb .SetIfNotNil ("\u0041\u0041",_cdd .AA );return _edbb ;};

// Encoder returns the font's text encoder.
func (_adcf pdfCIDFontType2 )Encoder ()_gbf .TextEncoder {return _adcf ._aeeb };

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_eebf :_eag .MakeIndirectObject (_eag .MakeDict ())}};

// ToInteger convert to an integer format.
func (_ffef *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bfeg :=_gcg .Pow (2,float64 (bits ))-1;return uint32 (_bfeg *_ffef .Val ());};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_fbcac *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fbcac ._ecdgfc };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cbefd []byte ;_dadbe []float64 ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cabff .Lock ();defer _cabff .Unlock ();_gdeae =subject };func (_dgg *PdfReader )newPdfActionThreadFromDict (_fdb *_eag .PdfObjectDictionary )(*PdfActionThread ,error ){_cbc ,_baec :=_bae (_fdb .Get ("\u0046"));if _baec !=nil {return nil ,_baec ;
};return &PdfActionThread {D :_fdb .Get ("\u0044"),B :_fdb .Get ("\u0042"),F :_cbc },nil ;};func (_cdddg *PdfWriter )setHashIDs (_ecfec _c .Hash )error {_aagbe :=_ecfec .Sum (nil );if _cdddg ._aecb ==""{_cdddg ._aecb =_df .EncodeToString (_aagbe [:8]);
};_cdddg .setDocumentIDs (_cdddg ._aecb ,_df .EncodeToString (_aagbe [8:]));return nil ;};func (_cba *PdfReader )newPdfAnnotationUnderlineFromDict (_gdfd *_eag .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_ebbd :=PdfAnnotationUnderline {};_febd ,_aada :=_cba .newPdfAnnotationMarkupFromDict (_gdfd );
if _aada !=nil {return nil ,_aada ;};_ebbd .PdfAnnotationMarkup =_febd ;_ebbd .QuadPoints =_gdfd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ebbd ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bbfc *PdfPage )SetContentStreams (cStreams []string ,encoder _eag .StreamEncoder )error {if len (cStreams )==0{_bbfc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_eag .NewRawEncoder ();};var _gdggf []*_eag .PdfObjectStream ;for _ ,_ggeef :=range cStreams {_gacde :=&_eag .PdfObjectStream {};
_cffe :=encoder .MakeStreamDict ();_cdced ,_ebgeg :=encoder .EncodeBytes ([]byte (_ggeef ));if _ebgeg !=nil {return _ebgeg ;};_cffe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_cdced ))));_gacde .PdfObjectDictionary =_cffe ;
_gacde .Stream =_cdced ;_gdggf =append (_gdggf ,_gacde );};if len (_gdggf )==1{_bbfc .Contents =_gdggf [0];}else {_acff :=_eag .MakeArray ();for _ ,_gbgc :=range _gdggf {_acff .Append (_gbgc );};_bbfc .Contents =_acff ;};return nil ;};

// ToInteger convert to an integer format.
func (_fbdgb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_bbbg :=_gcg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bbbg *_fbdgb .A ()),uint32 (_bbbg *_fbdgb .B ()),uint32 (_bbbg *_fbdgb .C ())};};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _eag .PdfObject ;Mac _eag .PdfObject ;Unix _eag .PdfObject ;NewWindow _eag .PdfObject ;};

// AddCRLs adds CRLs to DSS.
func (_bafe *DSS )AddCRLs (crls [][]byte )([]*_eag .PdfObjectStream ,error ){return _bafe .add (&_bafe .CRLs ,_bafe ._gbaf ,crls );};func _abdfa (_fcgc _eag .PdfObject )(*PdfFontDescriptor ,error ){_aaef :=&PdfFontDescriptor {};_fcgc =_eag .ResolveReference (_fcgc );
if _bffcf ,_aedf :=_fcgc .(*_eag .PdfIndirectObject );_aedf {_aaef ._ecdd =_bffcf ;_fcgc =_bffcf .PdfObject ;};_dfeac ,_eecg :=_eag .GetDict (_fcgc );if !_eecg {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcgc );
return nil ,_eag .ErrTypeError ;};if _ggbgc :=_dfeac .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ggbgc !=nil {_aaef .FontName =_ggbgc ;}else {_ebdd .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_edccg ,_ :=_eag .GetName (_aaef .FontName );if _aebcb :=_dfeac .Get ("\u0054\u0079\u0070\u0065");_aebcb !=nil {_egdcb ,_cbag :=_aebcb .(*_eag .PdfObjectName );if !_cbag ||string (*_egdcb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ebdd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_aebcb ,_edccg ,_aaef .FontName );
};}else {_ebdd .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_edccg ,_aaef .FontName );
};_aaef .FontFamily =_dfeac .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_aaef .FontStretch =_dfeac .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_aaef .FontWeight =_dfeac .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_aaef .Flags =_dfeac .Get ("\u0046\u006c\u0061g\u0073");_aaef .FontBBox =_dfeac .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_aaef .ItalicAngle =_dfeac .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_aaef .Ascent =_dfeac .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_aaef .Descent =_dfeac .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_aaef .Leading =_dfeac .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_aaef .CapHeight =_dfeac .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_aaef .XHeight =_dfeac .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_aaef .StemV =_dfeac .Get ("\u0053\u0074\u0065m\u0056");_aaef .StemH =_dfeac .Get ("\u0053\u0074\u0065m\u0048");_aaef .AvgWidth =_dfeac .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_aaef .MaxWidth =_dfeac .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_aaef .MissingWidth =_dfeac .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_aaef .FontFile =_dfeac .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_aaef .FontFile2 =_dfeac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_aaef .FontFile3 =_dfeac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_aaef .CharSet =_dfeac .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_aaef .Style =_dfeac .Get ("\u0053\u0074\u0079l\u0065");_aaef .Lang =_dfeac .Get ("\u004c\u0061\u006e\u0067");
_aaef .FD =_dfeac .Get ("\u0046\u0044");_aaef .CIDSet =_dfeac .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _aaef .Flags !=nil {if _eece ,_eeebe :=_eag .GetIntVal (_aaef .Flags );_eeebe {_aaef ._gafa =_eece ;};};if _aaef .MissingWidth !=nil {if _fbbbf ,_eegcc :=_eag .GetNumberAsFloat (_aaef .MissingWidth );
_eegcc ==nil {_aaef ._eeae =_fbbbf ;};};if _aaef .FontFile !=nil {_bdaac ,_bbbbf :=_afcb (_aaef .FontFile );if _bbbbf !=nil {return _aaef ,_bbbbf ;};_ebdd .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bdaac );_aaef .fontFile =_bdaac ;
};if _aaef .FontFile2 !=nil {_ceaf ,_eged :=_eeb .NewFontFile2FromPdfObject (_aaef .FontFile2 );if _eged !=nil {return _aaef ,_eged ;};_ebdd .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ceaf .String ());_aaef ._aaac =&_ceaf ;
};return _aaef ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_fdcb []_eag .PdfObject )([]_eag .PdfObject ,error );};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cabff .Lock ();defer _cabff .Unlock ();_ddfcf =creator };

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_bbgee *PdfSignature ,_fgcec Hasher ,_cafag SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gedbc *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func (_cgbg *PdfReader )newPdfPageFromDict (_affbe *_eag .PdfObjectDictionary )(*PdfPage ,error ){_cdcef :=NewPdfPage ();_cdcef ._eeaa =_affbe ;_cdcef ._cggfd =*_affbe ;_cecc :=*_affbe ;_fbadb ,_cgdc :=_cecc .Get ("\u0054\u0079\u0070\u0065").(*_eag .PdfObjectName );
if !_cgdc {return nil ,_bag .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_fbadb !="\u0050\u0061\u0067\u0065"{return nil ,_bag .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _bdadb :=_cecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bdadb !=nil {_cdcef .Parent =_bdadb ;};if _ggea :=_cecc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ggea !=nil {_bdaaea ,_dbdac :=_eag .GetString (_ggea );
if !_dbdac {return nil ,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_dfdac ,_edgec :=NewPdfDate (_bdaaea .Str ());if _edgec !=nil {return nil ,_edgec ;};_cdcef .LastModified =&_dfdac ;};if _deead :=_cecc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_deead !=nil &&!_eag .IsNullObject (_deead ){_dcgea ,_cbbb :=_eag .GetDict (_deead );
if !_cbbb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_deead );};var _cedb error ;_cdcef .Resources ,_cedb =NewPdfPageResourcesFromDict (_dcgea );
if _cedb !=nil {return nil ,_cedb ;};}else {_eaada ,_debe :=_cdcef .getParentResources ();if _debe !=nil {return nil ,_debe ;};if _eaada ==nil {_eaada =NewPdfPageResources ();};_cdcef .Resources =_eaada ;};if _cadbg :=_cecc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cadbg !=nil {_ggecg ,_gfedb :=_eag .GetArray (_cadbg );if !_gfedb {return nil ,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _edgdf error ;
_cdcef .MediaBox ,_edgdf =NewPdfRectangle (*_ggecg );if _edgdf !=nil {return nil ,_edgdf ;};};if _dcbeb :=_cecc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_dcbeb !=nil {_dadcf ,_ddcca :=_eag .GetArray (_dcbeb );if !_ddcca {return nil ,_bag .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _daaa error ;_cdcef .CropBox ,_daaa =NewPdfRectangle (*_dadcf );if _daaa !=nil {return nil ,_daaa ;};};if _debcg :=_cecc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_debcg !=nil {_fdbe ,_caaad :=_eag .GetArray (_debcg );if !_caaad {return nil ,_bag .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _eedac error ;_cdcef .BleedBox ,_eedac =NewPdfRectangle (*_fdbe );if _eedac !=nil {return nil ,_eedac ;};};if _gecf :=_cecc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gecf !=nil {_gbbd ,_baeac :=_eag .GetArray (_gecf );if !_baeac {return nil ,_bag .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _afabd error ;_cdcef .TrimBox ,_afabd =NewPdfRectangle (*_gbbd );if _afabd !=nil {return nil ,_afabd ;};};if _abcg :=_cecc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_abcg !=nil {_ecfdg ,_agffa :=_eag .GetArray (_abcg );if !_agffa {return nil ,_bag .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _dgacc error ;_cdcef .ArtBox ,_dgacc =NewPdfRectangle (*_ecfdg );if _dgacc !=nil {return nil ,_dgacc ;};};if _cfcgg :=_cecc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_cfcgg !=nil {_cdcef .BoxColorInfo =_cfcgg ;};
if _adfdg :=_cecc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adfdg !=nil {_cdcef .Contents =_adfdg ;};if _fgcda :=_cecc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fgcda !=nil {_ebgg ,_cefdaa :=_eag .GetNumberAsInt64 (_fgcda );if _cefdaa !=nil {return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cdcef .Rotate =&_ebgg ;};if _bcceb :=_cecc .Get ("\u0047\u0072\u006fu\u0070");_bcceb !=nil {_cdcef .Group =_bcceb ;};if _becbe :=_cecc .Get ("\u0054\u0068\u0075m\u0062");_becbe !=nil {_cdcef .Thumb =_becbe ;};if _dacc :=_cecc .Get ("\u0042");_dacc !=nil {_cdcef .B =_dacc ;
};if _bgeda :=_cecc .Get ("\u0044\u0075\u0072");_bgeda !=nil {_cdcef .Dur =_bgeda ;};if _acbd :=_cecc .Get ("\u0054\u0072\u0061n\u0073");_acbd !=nil {_cdcef .Trans =_acbd ;};if _dabf :=_cecc .Get ("\u0041\u0041");_dabf !=nil {_cdcef .AA =_dabf ;};if _bdace :=_cecc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_bdace !=nil {_cdcef .Metadata =_bdace ;};if _cggdg :=_cecc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cggdg !=nil {_cdcef .PieceInfo =_cggdg ;};if _bgbbf :=_cecc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bgbbf !=nil {_cdcef .StructParents =_bgbbf ;};if _gdddd :=_cecc .Get ("\u0049\u0044");_gdddd !=nil {_cdcef .ID =_gdddd ;};if _efcgb :=_cecc .Get ("\u0050\u005a");_efcgb !=nil {_cdcef .PZ =_efcgb ;};if _afdce :=_cecc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_afdce !=nil {_cdcef .SeparationInfo =_afdce ;};if _dacbc :=_cecc .Get ("\u0054\u0061\u0062\u0073");_dacbc !=nil {_cdcef .Tabs =_dacbc ;};if _aegcf :=_cecc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_aegcf !=nil {_cdcef .TemplateInstantiated =_aegcf ;};if _dggad :=_cecc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dggad !=nil {_cdcef .PresSteps =_dggad ;};if _acdae :=_cecc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_acdae !=nil {_cdcef .UserUnit =_acdae ;
};if _aagcc :=_cecc .Get ("\u0056\u0050");_aagcc !=nil {_cdcef .VP =_aagcc ;};if _gcee :=_cecc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_gcee !=nil {_cdcef .Annots =_gcee ;};_cdcef ._adgb =_cgbg ;return _cdcef ,nil ;};func (_aaeg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_gbf .SimpleEncoder ,error ){_bcegd ,_dfag :=_babf (basefont );if _dfag !=nil {return nil ,nil ,_dfag ;};_aded ,_ecdgf :=_bcegd .Encoder ().(_gbf .SimpleEncoder );
if !_ecdgf {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bcegd .Encoder ());
};_gfff :=make (map[rune ]_gbf .GlyphName );for _faga :=range alphabet {if _ ,_gadc :=_aded .RuneToCharcode (_faga );!_gadc {_ ,_cgec :=_bcegd ._gbdg .Read (_faga );if !_cgec {_ebdd .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_faga ,_faga );
continue ;};_eafc ,_cgec :=_gbf .RuneToGlyph (_faga );if !_cgec {_ebdd .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_faga ,_faga );continue ;};if len (_gfff )>=255{return nil ,nil ,_bag .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gfff [_faga ]=_eafc ;};};var (_fcadb []_gbf .CharCode ;_dagdg []_gbf .CharCode ;);for _aged :=_gbf .CharCode (1);_aged <=0xff;_aged ++{_acag ,_gaec :=_aded .CharcodeToRune (_aged );if !_gaec {_fcadb =append (_fcadb ,_aged );continue ;};if _ ,_gaec =alphabet [_acag ];
!_gaec {_dagdg =append (_dagdg ,_aged );};};_ffgb :=append (_fcadb ,_dagdg ...);if len (_ffgb )< len (_gfff ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gfff ),len (_ffgb ));
};_efebb :=make ([]rune ,0,len (_gfff ));for _cbdae :=range _gfff {_efebb =append (_efebb ,_cbdae );};_ea .Slice (_efebb ,func (_gebfa ,_fcdg int )bool {return _efebb [_gebfa ]< _efebb [_fcdg ]});_fdgba :=make (map[_gbf .CharCode ]_gbf .GlyphName ,len (_efebb ));
for _ ,_dafg :=range _efebb {_abbbb :=_ffgb [0];_ffgb =_ffgb [1:];_fdgba [_abbbb ]=_gfff [_dafg ];};_aded =_gbf .ApplyDifferences (_aded ,_fdgba );_bcegd .SetEncoder (_aded );return &PdfFont {_dagg :&_bcegd },_aded ,nil ;};func (_caaf *PdfReader )newPdfAnnotationStampFromDict (_ecbaf *_eag .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cfgf :=PdfAnnotationStamp {};
_bgcb ,_bacb :=_caaf .newPdfAnnotationMarkupFromDict (_ecbaf );if _bacb !=nil {return nil ,_bacb ;};_cfgf .PdfAnnotationMarkup =_bgcb ;_cfgf .Name =_ecbaf .Get ("\u004e\u0061\u006d\u0065");return &_cfgf ,nil ;};

// ToInteger convert to an integer format.
func (_gfab *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_abdf :=_gcg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_abdf *_gfab .R ()),uint32 (_abdf *_gfab .G ()),uint32 (_abdf *_gfab .B ())};};

// ToPdfObject returns the PDF representation of the function.
func (_afcbb *PdfFunctionType4 )ToPdfObject ()_eag .PdfObject {_addbc :=_afcbb ._baca ;if _addbc ==nil {_afcbb ._baca =&_eag .PdfObjectStream {};_addbc =_afcbb ._baca ;};_edcaf :=_eag .MakeDict ();_edcaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eag .MakeInteger (4));
_beecg :=&_eag .PdfObjectArray {};for _ ,_ebfa :=range _afcbb .Domain {_beecg .Append (_eag .MakeFloat (_ebfa ));};_edcaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_beecg );_afaa :=&_eag .PdfObjectArray {};for _ ,_ecegd :=range _afcbb .Range {_afaa .Append (_eag .MakeFloat (_ecegd ));
};_edcaf .Set ("\u0052\u0061\u006eg\u0065",_afaa );if _afcbb ._fddg ==nil &&_afcbb .Program !=nil {_afcbb ._fddg =[]byte (_afcbb .Program .String ());};_edcaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_afcbb ._fddg ))));
_addbc .Stream =_afcbb ._fddg ;_addbc .PdfObjectDictionary =_edcaf ;return _addbc ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gdac *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gdac ._dcbf !=nil {return _gdac ._dcbf ,nil ;};if _gdac .ColorSpace ==nil {return nil ,nil ;};_dgbcfb ,_aebfe :=_dfffc (_gdac .ColorSpace );if _aebfe !=nil {return nil ,_aebfe ;
};_gdac ._dcbf =_dgbcfb ;return _gdac ._dcbf ,nil ;};func (_gdda *PdfFunctionType0 )processSamples ()error {_cabg :=_dba .ResampleBytes (_gdda ._gcffb ,_gdda .BitsPerSample );_gdda ._gcgae =_cabg ;return nil ;};func _dfcdg ()_ag .Time {_cabff .Lock ();
defer _cabff .Unlock ();return _afeea };

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _eag .PdfObject )(*PdfFilespec ,error ){_dcead :=&PdfFilespec {};var _cdde *_eag .PdfObjectDictionary ;if _edacf ,_aefb :=_eag .GetIndirect (obj );_aefb {_dcead ._afdac =_edacf ;_cdggb ,_dacfd :=_eag .GetDict (_edacf .PdfObject );
if !_dacfd {_ebdd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_eag .ErrTypeError ;};_cdde =_cdggb ;}else if _efdc ,_fffb :=_eag .GetDict (obj );
_fffb {_dcead ._afdac =_efdc ;_cdde =_efdc ;}else {_ebdd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_eag .ErrTypeError ;};if _cdde ==nil {_ebdd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _baaaf :=_cdde .Get ("\u0054\u0079\u0070\u0065");_baaaf !=nil {_bdbc ,_eafda :=_baaaf .(*_eag .PdfObjectName );if !_eafda {_ebdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_baaaf );
}else {if *_bdbc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ebdd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bdbc );
};};};if _ebea :=_cdde .Get ("\u0046\u0053");_ebea !=nil {_dcead .FS =_ebea ;};if _fedf :=_cdde .Get ("\u0046");_fedf !=nil {_dcead .F =_fedf ;};if _gefb :=_cdde .Get ("\u0055\u0046");_gefb !=nil {_dcead .UF =_gefb ;};if _dbdabg :=_cdde .Get ("\u0044\u004f\u0053");
_dbdabg !=nil {_dcead .DOS =_dbdabg ;};if _eagea :=_cdde .Get ("\u004d\u0061\u0063");_eagea !=nil {_dcead .Mac =_eagea ;};if _edgc :=_cdde .Get ("\u0055\u006e\u0069\u0078");_edgc !=nil {_dcead .Unix =_edgc ;};if _gggge :=_cdde .Get ("\u0049\u0044");_gggge !=nil {_dcead .ID =_gggge ;
};if _fagb :=_cdde .Get ("\u0056");_fagb !=nil {_dcead .V =_fagb ;};if _caafc :=_cdde .Get ("\u0045\u0046");_caafc !=nil {_dcead .EF =_caafc ;};if _cbed :=_cdde .Get ("\u0052\u0046");_cbed !=nil {_dcead .RF =_cbed ;};if _gedbfc :=_cdde .Get ("\u0044\u0065\u0073\u0063");
_gedbfc !=nil {_dcead .Desc =_gedbfc ;};if _bdeg :=_cdde .Get ("\u0043\u0049");_bdeg !=nil {_dcead .CI =_bdeg ;};if _feed :=_cdde .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_feed !=nil {_dcead .AFRelationship =_feed ;
};return _dcead ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_deba *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dfafg []_gbf .TextEncoder ;var _ggfg _gbf .CMapEncoder ;if _edeg :=_deba .baseFields ()._dccf ;_edeg !=nil {_ggfg =_gbf .NewCMapEncoder ("",nil ,_edeg );};_fcbbf :=_deba .Encoder ();
if _fcbbf !=nil {switch _fcdcc :=_fcbbf .(type ){case _gbf .SimpleEncoder :_cgggd :=_fcdcc .BaseName ();if _ ,_badc :=_gcfcg [_cgggd ];_badc {_dfafg =append (_dfafg ,_fcbbf );};};};if len (_dfafg )==0{if _deba .baseFields ()._dccf !=nil {_dfafg =append (_dfafg ,_ggfg );
};if _fcbbf !=nil {_dfafg =append (_dfafg ,_fcbbf );};};var _cagf _cf .Buffer ;var _dbgd int ;for _ ,_afeag :=range data {var _bbc bool ;for _ ,_gaedb :=range _dfafg {if _ffbe :=_gaedb .Encode (string (_afeag ));len (_ffbe )> 0{_cagf .Write (_ffbe );_bbc =true ;
break ;};};if !_bbc {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_afeag );
_dbgd ++;};};if _dbgd !=0{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dbgd ,_deba ,_dfafg );
};return _cagf .Bytes (),_dbgd ;};

// GetStandardApplier gets currently used StandardApplier..
func (_cdbgg *PdfWriter )GetStandardApplier ()StandardApplier {return _cdbgg ._ccffb };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_gdeced *PdfPageResourcesColorspaces )Set (key _eag .PdfObjectName ,val PdfColorspace ){if _ ,_gdebb :=_gdeced .Colorspaces [string (key )];!_gdebb {_gdeced .Names =append (_gdeced .Names ,string (key ));};_gdeced .Colorspaces [string (key )]=val ;
};func _ccdb (_cgge _eag .PdfObject )(*PdfColorspaceCalGray ,error ){_aafec :=NewPdfColorspaceCalGray ();if _ggca ,_ebg :=_cgge .(*_eag .PdfIndirectObject );_ebg {_aafec ._gaed =_ggca ;};_cgge =_eag .TraceToDirectObject (_cgge );_aeda ,_fdgag :=_cgge .(*_eag .PdfObjectArray );
if !_fdgag {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aeda .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cgge =_eag .TraceToDirectObject (_aeda .Get (0));_ffdc ,_fdgag :=_cgge .(*_eag .PdfObjectName );if !_fdgag {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ffdc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cgge =_eag .TraceToDirectObject (_aeda .Get (1));
_efdg ,_fdgag :=_cgge .(*_eag .PdfObjectDictionary );if !_fdgag {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cgge =_efdg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgge =_eag .TraceToDirectObject (_cgge );_faee ,_fdgag :=_cgge .(*_eag .PdfObjectArray );if !_fdgag {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _faee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dfge ,_agcca :=_faee .GetAsFloat64Slice ();
if _agcca !=nil {return nil ,_agcca ;};_aafec .WhitePoint =_dfge ;_cgge =_efdg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgge !=nil {_cgge =_eag .TraceToDirectObject (_cgge );_fbfbc ,_fefcd :=_cgge .(*_eag .PdfObjectArray );
if !_fefcd {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _fbfbc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_egba ,_gdbc :=_fbfbc .GetAsFloat64Slice ();if _gdbc !=nil {return nil ,_gdbc ;};_aafec .BlackPoint =_egba ;};_cgge =_efdg .Get ("\u0047\u0061\u006dm\u0061");if _cgge !=nil {_cgge =_eag .TraceToDirectObject (_cgge );_bcfag ,_fgbc :=_eag .GetNumberAsFloat (_cgge );
if _fgbc !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_aafec .Gamma =_bcfag ;};return _aafec ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_eadga *PdfShadingPatternType3 )ToPdfObject ()_eag .PdfObject {_eadga .PdfPattern .ToPdfObject ();_fedaa :=_eadga .getDict ();if _eadga .Shading !=nil {_fedaa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eadga .Shading .ToPdfObject ());};if _eadga .Matrix !=nil {_fedaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eadga .Matrix );
};if _eadga .ExtGState !=nil {_fedaa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eadga .ExtGState );};return _eadga ._bcdbe ;};func (_gcbac *LTV )validateSig (_egfae *PdfSignature )error {if _egfae ==nil ||_egfae .Contents ==nil ||len (_egfae .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_egfae );
};return nil ;};func (_agfaa *PdfReader )buildPageList (_ccgda *_eag .PdfIndirectObject ,_gcgcg *_eag .PdfIndirectObject ,_bfbeac map[_eag .PdfObject ]struct{})error {if _ccgda ==nil {return nil ;};if _ ,_fgagc :=_bfbeac [_ccgda ];_fgagc {_ebdd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ccgda .ObjectNumber );
return nil ;};_bfbeac [_ccgda ]=struct{}{};_bgcge ,_cdbbe :=_ccgda .PdfObject .(*_eag .PdfObjectDictionary );if !_cdbbe {return _bag .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cabcb ,_cdbbe :=(*_bgcge ).Get ("\u0054\u0079\u0070\u0065").(*_eag .PdfObjectName );
if !_cdbbe {if _bgcge .Get ("\u004b\u0069\u0064\u0073")==nil {return _bag .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ebdd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_cabcb =_eag .MakeName ("\u0050\u0061\u0067e\u0073");_bgcge .Set ("\u0054\u0079\u0070\u0065",_cabcb );};_ebdd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cabcb ,_ccgda );
if *_cabcb =="\u0050\u0061\u0067\u0065"{_ebcca ,_fdfde :=_agfaa .newPdfPageFromDict (_bgcge );if _fdfde !=nil {return _fdfde ;};_ebcca .setContainer (_ccgda );if _gcgcg !=nil {_bgcge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcgcg );};_agfaa ._cfffe =append (_agfaa ._cfffe ,_ccgda );
_agfaa .PageList =append (_agfaa .PageList ,_ebcca );return nil ;};if *_cabcb !="\u0050\u0061\u0067e\u0073"{_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cabcb );
return _bag .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gcgcg !=nil {_bgcge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcgcg );};if !_agfaa ._dgabg {_ccgeb :=_agfaa .traverseObjectData (_ccgda );if _ccgeb !=nil {return _ccgeb ;};};_dfab ,_aceeg :=_agfaa ._afegd .Resolve (_bgcge .Get ("\u004b\u0069\u0064\u0073"));
if _aceeg !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _aceeg ;};var _afgbg *_eag .PdfObjectArray ;
_afgbg ,_cdbbe =_dfab .(*_eag .PdfObjectArray );if !_cdbbe {_gcgcb ,_fddcfg :=_dfab .(*_eag .PdfIndirectObject );if !_fddcfg {return _bag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_afgbg ,_cdbbe =_gcgcb .PdfObject .(*_eag .PdfObjectArray );if !_cdbbe {return _bag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ebdd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_afgbg );
for _aebca ,_dgeec :=range _afgbg .Elements (){_dgeb ,_gfdddd :=_eag .GetIndirect (_dgeec );if !_gfdddd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dgeb );
return _bag .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_afgbg .Set (_aebca ,_dgeb );_aceeg =_agfaa .buildPageList (_dgeb ,_ccgda ,_bfbeac );if _aceeg !=nil {return _aceeg ;
};};return nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _eag .PdfObject ;_adeb []byte ;_eggdg *_eag .PdfIndirectObject ;};func (_gfabcd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};func (_bddfg *PdfReader )newPdfSignatureReferenceFromDict (_daffd *_eag .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _gfbd ,_ecdde :=_bddfg ._gbada .GetModelFromPrimitive (_daffd ).(*PdfSignatureReference );_ecdde {return _gfbd ,nil ;};_dfeb :=&PdfSignatureReference {_aaeee :_daffd ,Data :_daffd .Get ("\u0044\u0061\u0074\u0061")};
var _gbbfe bool ;_dfeb .Type ,_ =_eag .GetName (_daffd .Get ("\u0054\u0079\u0070\u0065"));_dfeb .TransformMethod ,_gbbfe =_eag .GetName (_daffd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));if !_gbbfe {_ebdd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dfeb .TransformParams ,_ =_eag .GetDict (_daffd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_dfeb .DigestMethod ,_ =_eag .GetName (_daffd .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _dfeb ,nil ;};func (_dcfbc *PdfWriter )adjustXRefAffectedVersion (_bbaebg bool ){if _bbaebg &&_dcfbc ._ddcce .Major ==1&&_dcfbc ._ddcce .Minor < 5{_dcfbc ._ddcce .Minor =5;};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgd *PdfColorspaceDeviceCMYK )ToPdfObject ()_eag .PdfObject {return _eag .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gbgef *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gbgef .baseFields ()._ecdgfc !=nil {return _gbgef .baseFields ()._ecdgfc ;};if _baga :=_gbgef ._dagg .getFontDescriptor ();_baga !=nil {return _baga ;};_ebdd .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gbgef );
return nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fafaf *DSS )ToPdfObject ()_eag .PdfObject {_baefb :=_fafaf ._fede .PdfObject .(*_eag .PdfObjectDictionary );_baefb .Clear ();_fbbbc :=_eag .MakeDict ();for _edee ,_daca :=range _fafaf .VRI {_fbbbc .Set (*_eag .MakeName (_edee ),_daca .ToPdfObject ());
};_baefb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ffgca (_fafaf .Certs ));_baefb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ffgca (_fafaf .OCSPs ));_baefb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ffgca (_fafaf .CRLs ));_baefb .Set ("\u0056\u0052\u0049",_fbbbc );
return _fafaf ._fede ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_cg :=NewPdfAction ();_cc :=&PdfActionGoTo {};_cc .PdfAction =_cg ;_cg .SetContext (_cc );return _cc ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_egdac *_eag .PdfIndirectObject ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bdbdg *PdfInfo )AddCustomInfo (name string ,value string )error {if _bdbdg ._gege ==nil {_bdbdg ._gege =_eag .MakeDict ();};if _ ,_gcgbab :=_bcfec [name ];_gcgbab {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bdbdg ._gege .SetIfNotNil (*_eag .MakeName (name ),_eag .MakeString (value ));return nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_fdgae *BorderStyle )GetPdfName ()string {switch *_fdgae {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func (_abc *PdfAppender )mergeResources (_fdcg ,_gefc _eag .PdfObject ,_accf map[_eag .PdfObjectName ]_eag .PdfObjectName )_eag .PdfObject {if _gefc ==nil &&_fdcg ==nil {return nil ;};if _gefc ==nil {return _fdcg ;};_bgdaf ,_faea :=_eag .GetDict (_gefc );
if !_faea {return _fdcg ;};if _fdcg ==nil {_cfce :=_eag .MakeDict ();_cfce .Merge (_bgdaf );return _gefc ;};_fcaga ,_faea :=_eag .GetDict (_fdcg );if !_faea {_ebdd .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_fcaga =_eag .MakeDict ();};for _ ,_ebeff :=range _bgdaf .Keys (){if _bbdgb ,_dgee :=_accf [_ebeff ];_dgee {_fcaga .Set (_bbdgb ,_bgdaf .Get (_ebeff ));}else {_fcaga .Set (_ebeff ,_bgdaf .Get (_ebeff ));};};return _fcaga ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _eag .PdfObjectArray )(*PdfRectangle ,error ){_fadg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ggbgd error ;_fadg .Llx ,_ggbgd =_eag .GetNumberAsFloat (arr .Get (0));if _ggbgd !=nil {return nil ,_ggbgd ;};_fadg .Lly ,_ggbgd =_eag .GetNumberAsFloat (arr .Get (1));if _ggbgd !=nil {return nil ,_ggbgd ;};_fadg .Urx ,_ggbgd =_eag .GetNumberAsFloat (arr .Get (2));
if _ggbgd !=nil {return nil ,_ggbgd ;};_fadg .Ury ,_ggbgd =_eag .GetNumberAsFloat (arr .Get (3));if _ggbgd !=nil {return nil ,_ggbgd ;};return &_fadg ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cgcea *_eag .PdfIndirectObject ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_gebfg *_eag .PdfIndirectObject ;_gcedb *_eag .PdfIndirectObject ;_gcbbbd map[_eag .PdfObject ]struct{};_eggea []_eag .PdfObject ;_fcced map[_eag .PdfObject ]struct{};_dcbfc []*_eag .PdfIndirectObject ;_aafaa *PdfOutlineTreeNode ;
_daegb *_eag .PdfObjectDictionary ;_ccfa []_eag .PdfObject ;_eagcbd *_eag .PdfIndirectObject ;_fdcde *_a .Writer ;_bfacf int64 ;_cdbbd error ;_ffbfg *_eag .PdfCrypt ;_edabb *_eag .PdfObjectDictionary ;_agdeb *_eag .PdfIndirectObject ;_cabccg *_eag .PdfObjectArray ;
_ddcce _eag .Version ;_edbba *bool ;_abbad map[_eag .PdfObject ][]*_eag .PdfObjectDictionary ;_aagab *PdfAcroForm ;_eecd *Names ;_ceag Optimizer ;_ccffb StandardApplier ;_dfdb map[int ]crossReference ;_aaeea int64 ;ObjNumOffset int ;_fgfg bool ;_fdbde _eag .XrefTable ;
_fbcge int64 ;_ccdba int64 ;_fbbde map[_eag .PdfObject ]int64 ;_edecd map[_eag .PdfObject ]struct{};_aadea string ;_gcdaf []*PdfOutputIntent ;_afbe bool ;_aecb ,_bcfgc string ;};

// ToPdfObject implements interface PdfModel.
func (_geaa *PdfAnnotationSquiggly )ToPdfObject ()_eag .PdfObject {_geaa .PdfAnnotation .ToPdfObject ();_cefag :=_geaa ._gfa ;_egd :=_cefag .PdfObject .(*_eag .PdfObjectDictionary );_geaa .PdfAnnotationMarkup .appendToPdfDictionary (_egd );_egd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_egd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geaa .QuadPoints );return _cefag ;};func (_cedgg *pdfFontType3 )baseFields ()*fontCommon {return &_cedgg .fontCommon };

// GetOutlineTree returns the outline tree.
func (_bfbdaf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bfbdaf ._degc };func _ffca (_dbdbc *_eag .PdfObjectDictionary )*VRI {_dcdb ,_ :=_eag .GetString (_dbdbc .Get ("\u0054\u0055"));_cgeb ,_ :=_eag .GetString (_dbdbc .Get ("\u0054\u0053"));
return &VRI {Cert :_degec (_dbdbc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_degec (_dbdbc .Get ("\u004f\u0043\u0053\u0050")),CRL :_degec (_dbdbc .Get ("\u0043\u0052\u004c")),TU :_dcdb ,TS :_cgeb };};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ggbeb :=NewPdfOutline ();_ggbeb ._addfb =&_ggbeb ;return _ggbeb ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dgbf *PdfFieldButton )SetType (btype ButtonType ){_bggef :=uint32 (0);if _dgbf .Ff !=nil {_bggef =uint32 (*_dgbf .Ff );};switch btype {case ButtonTypePush :_bggef |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_bggef |=FieldFlagRadio .Mask ();
};_dgbf .Ff =_eag .MakeInteger (int64 (_bggef ));};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_beaa *PdfOutlineItem )ToPdfObject ()_eag .PdfObject {_eaabg :=_beaa ._ceecc ;_ffaee :=_eaabg .PdfObject .(*_eag .PdfObjectDictionary );_ffaee .Set ("\u0054\u0069\u0074l\u0065",_beaa .Title );if _beaa .A !=nil {_ffaee .Set ("\u0041",_beaa .A );};
if _afbc :=_ffaee .Get ("\u0053\u0045");_afbc !=nil {_ffaee .Remove ("\u0053\u0045");};if _beaa .C !=nil {_ffaee .Set ("\u0043",_beaa .C );};if _beaa .Dest !=nil {_ffaee .Set ("\u0044\u0065\u0073\u0074",_beaa .Dest );};if _beaa .F !=nil {_ffaee .Set ("\u0046",_beaa .F );
};if _beaa .Count !=nil {_ffaee .Set ("\u0043\u006f\u0075n\u0074",_eag .MakeInteger (*_beaa .Count ));};if _beaa .Next !=nil {_ffaee .Set ("\u004e\u0065\u0078\u0074",_beaa .Next .ToPdfObject ());};if _beaa .First !=nil {_ffaee .Set ("\u0046\u0069\u0072s\u0074",_beaa .First .ToPdfObject ());
};if _beaa .Prev !=nil {_ffaee .Set ("\u0050\u0072\u0065\u0076",_beaa .Prev .GetContext ().GetContainingPdfObject ());};if _beaa .Last !=nil {_ffaee .Set ("\u004c\u0061\u0073\u0074",_beaa .Last .GetContext ().GetContainingPdfObject ());};if _beaa .Parent !=nil {_ffaee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_beaa .Parent .GetContext ().GetContainingPdfObject ());
};return _eaabg ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cedga *PdfWriter )SetOpenAction (dest _eag .PdfObject )error {if dest ==nil ||_eag .IsNullObject (dest ){return nil ;};_cedga ._daegb .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cedga .addObjects (dest );};
const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);func _egad (_bgfcc _eag .PdfObject ,_bfffc *PdfReader )(*OutlineDest ,error ){_cbcca ,_dfbba :=_eag .GetArray (_bgfcc );
if !_dfbba {return nil ,_bag .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_cdff :=_cbcca .Len ();if _cdff < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_cdff );
};_bgacd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dacfb :=_cbcca .Get (0);if _adfeb ,_befc :=_eag .GetIndirect (_dacfb );_befc {if _ ,_bdagd ,_ebcge :=_bfffc .PageFromIndirectObject (_adfeb );_ebcge ==nil {_bgacd .Page =int64 (_bdagd -1);}else {_ebdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_adfeb );
};_bgacd .PageObj =_adfeb ;}else if _ffgee ,_cgedd :=_eag .GetIntVal (_dacfb );_cgedd {if _ffgee >=0&&_ffgee < len (_bfffc .PageList ){_bgacd .PageObj =_bfffc .PageList [_ffgee ].GetPageAsIndirectObject ();}else {_ebdd .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ffgee );
};_bgacd .Page =int64 (_ffgee );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dacfb );};_eefca ,_dfbba :=_eag .GetNameVal (_cbcca .Get (1));
if !_dfbba {_ebdd .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cbcca .Get (1));
return _bgacd ,nil ;};switch _eefca {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _cdff > 2{_bgacd .Y ,_ =_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_cbcca .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _cdff > 2{_bgacd .X ,_ =_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_cbcca .Get (2)));
};case "\u0058\u0059\u005a":if _cdff > 4{_bgacd .X ,_ =_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_cbcca .Get (2)));_bgacd .Y ,_ =_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_cbcca .Get (3)));_bgacd .Zoom ,_ =_eag .GetNumberAsFloat (_eag .TraceToDirectObject (_cbcca .Get (4)));
};default:_eefca ="\u0046\u0069\u0074";};_bgacd .Mode =_eefca ;return _bgacd ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _eag .PdfObject ;IC _eag .PdfObject ;BE _eag .PdfObject ;RD _eag .PdfObject ;};

// Val returns the value of the color.
func (_ecfbc *PdfColorCalGray )Val ()float64 {return float64 (*_ecfbc )};func (_ggcag *PdfWriter )addObject (_cddga _eag .PdfObject )bool {_gbcag :=_ggcag .hasObject (_cddga );if !_gbcag {_badfc :=_eag .ResolveReferencesDeep (_cddga ,_ggcag ._edecd );if _badfc !=nil {_ebdd .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_badfc );
};_ggcag ._eggea =append (_ggcag ._eggea ,_cddga );_ggcag ._fcced [_cddga ]=struct{}{};return true ;};return false ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_addef *PdfReader )GetObjectNums ()[]int {return _addef ._afegd .GetObjectNums ()};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bgbfe *PdfPage )Duplicate ()*PdfPage {_dbcda :=*_bgbfe ;_dbcda ._eeaa =_eag .MakeDict ();_dbcda ._beadd =_eag .MakeIndirectObject (_dbcda ._eeaa );_dbcda ._cggfd =*_dbcda ._eeaa ;return &_dbcda ;};

// ToPdfObject implements interface PdfModel.
func (_gcec *PdfAnnotationRedact )ToPdfObject ()_eag .PdfObject {_gcec .PdfAnnotation .ToPdfObject ();_deaa :=_gcec ._gfa ;_dadb :=_deaa .PdfObject .(*_eag .PdfObjectDictionary );_gcec .PdfAnnotationMarkup .appendToPdfDictionary (_dadb );_dadb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eag .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_dadb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcec .QuadPoints );_dadb .SetIfNotNil ("\u0049\u0043",_gcec .IC );_dadb .SetIfNotNil ("\u0052\u004f",_gcec .RO );_dadb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gcec .OverlayText );
_dadb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gcec .Repeat );_dadb .SetIfNotNil ("\u0044\u0041",_gcec .DA );_dadb .SetIfNotNil ("\u0051",_gcec .Q );return _deaa ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_aab :=&PdfColorspaceSpecialSeparation {};return _aab ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gef :=NewPdfAnnotation ();_afgc :=&PdfAnnotationStrikeOut {};_afgc .PdfAnnotation =_gef ;_afgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gef .SetContext (_afgc );return _afgc ;};

// IsCID returns true if the underlying font is CID.
func (_faadb *PdfFont )IsCID ()bool {return _faadb .baseFields ().isCIDFont ()};

// A returns the value of the A component of the color.
func (_bdfd *PdfColorCalRGB )A ()float64 {return _bdfd [0]};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _eag .PdfObject )(*PdfOutputIntent ,error ){_dcga :=&PdfOutputIntent {};if _dcab :=_dcga .ParsePdfObject (object );_dcab !=nil {return nil ,_dcab ;};return _dcga ,nil ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_bgfg :=&PdfAppender {_efgc :reader ._cfacd ,Reader :reader ,_dgde :reader ._afegd ,_aaed :reader ._dbcaa };_ecebc ,_gbcc :=_bgfg ._efgc .Seek (0,_ba .SeekEnd );
if _gbcc !=nil {return nil ,_gbcc ;};_bgfg ._cgbe =_ecebc ;if _ ,_gbcc =_bgfg ._efgc .Seek (0,_ba .SeekStart );_gbcc !=nil {return nil ,_gbcc ;};_bgfg ._egeg ,_gbcc =NewPdfReaderWithOpts (_bgfg ._efgc ,opts );if _gbcc !=nil {return nil ,_gbcc ;};for _ ,_cdad :=range _bgfg .Reader .GetObjectNums (){if _bgfg ._ffce < _cdad {_bgfg ._ffce =_cdad ;
};};_bgfg ._gcgb =_bgfg ._dgde .GetXrefTable ();_bgfg ._gbcg =_bgfg ._dgde .GetXrefOffset ();_bgfg ._abag =append (_bgfg ._abag ,_bgfg ._egeg .PageList ...);_bgfg ._dbaf =make (map[_eag .PdfObject ]struct{});_bgfg ._ddde =make (map[_eag .PdfObject ]int64 );
_bgfg ._bafb =make (map[_eag .PdfObject ]struct{});_bgfg ._gaba =_bgfg ._egeg .AcroForm ;_bgfg ._bea =_bgfg ._egeg .DSS ;if opts !=nil {_bgfg ._dca =opts .Password ;};if encryptOptions !=nil {_bgfg ._dabb =encryptOptions ;};return _bgfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bge *PdfActionGoToE )ToPdfObject ()_eag .PdfObject {_bge .PdfAction .ToPdfObject ();_bgg :=_bge ._ggd ;_gfce :=_bgg .PdfObject .(*_eag .PdfObjectDictionary );_gfce .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeGoToE )));if _bge .F !=nil {_gfce .Set ("\u0046",_bge .F .ToPdfObject ());
};_gfce .SetIfNotNil ("\u0044",_bge .D );_gfce .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bge .NewWindow );_gfce .SetIfNotNil ("\u0054",_bge .T );return _bgg ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cecfg *Image )GetSamples ()[]uint32 {_eegca :=_dba .ResampleBytes (_cecfg .Data ,int (_cecfg .BitsPerComponent ));if _cecfg .BitsPerComponent < 8{_eegca =_cecfg .samplesTrimPadding (_eegca );};_fcbge :=int (_cecfg .Width )*int (_cecfg .Height )*_cecfg .ColorComponents ;
if len (_eegca )< _fcbge {_ebdd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_eegca ),_fcbge );
return _eegca ;}else if len (_eegca )> _fcbge {_ebdd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_eegca ),_fcbge );
_eegca =_eegca [:_fcbge ];};return _eegca ;};func (_aed *PdfReader )newPdfAnnotationMovieFromDict (_fgd *_eag .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dea :=PdfAnnotationMovie {};_dea .T =_fgd .Get ("\u0054");_dea .Movie =_fgd .Get ("\u004d\u006f\u0076i\u0065");
_dea .A =_fgd .Get ("\u0041");return &_dea ,nil ;};func (_bceb *pdfFontType0 )baseFields ()*fontCommon {return &_bceb .fontCommon };func (_bgeg *PdfReader )newPdfAnnotationRedactFromDict (_dgd *_eag .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_dag :=PdfAnnotationRedact {};
_fcff ,_ccfd :=_bgeg .newPdfAnnotationMarkupFromDict (_dgd );if _ccfd !=nil {return nil ,_ccfd ;};_dag .PdfAnnotationMarkup =_fcff ;_dag .QuadPoints =_dgd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dag .IC =_dgd .Get ("\u0049\u0043");
_dag .RO =_dgd .Get ("\u0052\u004f");_dag .OverlayText =_dgd .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_dag .Repeat =_dgd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_dag .DA =_dgd .Get ("\u0044\u0041");_dag .Q =_dgd .Get ("\u0051");
return &_dag ,nil ;};func _dabbg (_bccg *_eag .PdfObjectDictionary ,_afbfe *fontCommon )(*pdfFontType3 ,error ){_faab :=_dabgb (_afbfe );_gcaa :=_bccg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gcaa ==nil {_gcaa =_eag .MakeInteger (0);};
_faab .FirstChar =_gcaa ;_dgbdg ,_bedf :=_eag .GetIntVal (_gcaa );if !_bedf {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gcaa );
return nil ,_eag .ErrTypeError ;};_gggc :=_gbf .CharCode (_dgbdg );_gcaa =_bccg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gcaa ==nil {_gcaa =_eag .MakeInteger (255);};_faab .LastChar =_gcaa ;_dgbdg ,_bedf =_eag .GetIntVal (_gcaa );if !_bedf {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gcaa );
return nil ,_eag .ErrTypeError ;};_deefc :=_gbf .CharCode (_dgbdg );_gcaa =_bccg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gcaa !=nil {_faab .Resources =_gcaa ;};_gcaa =_bccg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _gcaa ==nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_gcaa );
return nil ,_eag .ErrNotSupported ;};_faab .CharProcs =_gcaa ;_gcaa =_bccg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _gcaa ==nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_gcaa );
return nil ,_eag .ErrNotSupported ;};_faab .FontMatrix =_gcaa ;_faab ._ffbef =make (map[_gbf .CharCode ]float64 );_gcaa =_bccg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gcaa !=nil {_faab .Widths =_gcaa ;_affec ,_bbgd :=_eag .GetArray (_gcaa );if !_bbgd {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gcaa );
return nil ,_eag .ErrTypeError ;};_bcaaf ,_afgcc :=_affec .ToFloat64Array ();if _afgcc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_afgcc ;};if len (_bcaaf )!=int (_deefc -_gggc +1){_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_deefc -_gggc +1,len (_bcaaf ));
return nil ,_eag .ErrRangeError ;};_gcbgd ,_bbgd :=_eag .GetArray (_faab .FontMatrix );if !_bbgd {_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gcbgd );
return nil ,_afgcc ;};_ecceg ,_afgcc :=_gcbgd .ToFloat64Array ();if _afgcc !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_afgcc ;};_cbaf :=_de .NewMatrix (_ecceg [0],_ecceg [1],_ecceg [2],_ecceg [3],_ecceg [4],_ecceg [5]);for _bdff ,_bbcca :=range _bcaaf {_edgfed ,_ :=_cbaf .Transform (_bbcca ,_bbcca );_faab ._ffbef [_gggc +_gbf .CharCode (_bdff )]=_edgfed ;};
};_faab .Encoding =_eag .TraceToDirectObject (_bccg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_ffbd :=_bccg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ffbd !=nil {_faab ._afga =_eag .TraceToDirectObject (_ffbd );_bbacd ,_degbg :=_bdgc (_faab ._afga ,&_faab .fontCommon );
if _degbg !=nil {return nil ,_degbg ;};_faab ._dccf =_bbacd ;};if _facb :=_faab ._dccf ;_facb !=nil {_faab ._abccd =_gbf .NewCMapEncoder ("",nil ,_facb );}else {_faab ._abccd =_gbf .NewPdfDocEncoder ();};return _faab ,nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gfcae *_eag .PdfObjectDictionary ;};

// String returns a string representation of the field.
func (_geaag *PdfField )String ()string {if _ecaga ,_dgdae :=_geaag .ToPdfObject ().(*_eag .PdfIndirectObject );_dgdae {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_geaag ._afdfd ,_ecaga .PdfObject .String ());};return "";};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _eag .PdfObject ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_decbf *PdfPage )Size ()(float64 ,float64 ,error ){_eebge ,_cdfbc :=_decbf .GetMediaBox ();if _cdfbc !=nil {return 0,0,_cdfbc ;};_bebb ,_acdge :=_eebge .Width (),_eebge .Height ();_feegf ,_cdfbc :=_decbf .GetRotate ();if _cdfbc !=nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cdfbc .Error ());
};if _edbcdc :=_feegf ;_edbcdc %360!=0&&_edbcdc %90==0{if _aagf :=(360+_edbcdc %360)%360;_aagf ==90||_aagf ==270{_bebb ,_acdge =_acdge ,_bebb ;};};return _bebb ,_acdge ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfba *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dfba .Base .GetNumComponents ();_fbac :=int (vals [0])*N ;
if _fbac < 0||(_fbac +N -1)>=len (_dfba ._adeb ){_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbac );return nil ,ErrColorOutOfRange ;};_agad :=_dfba ._adeb [_fbac :_fbac +N ];
var _fdba []float64 ;for _ ,_efdgd :=range _agad {_fdba =append (_fdba ,float64 (_efdgd )/255.0);};_ecca ,_bdfc :=_dfba .Base .ColorFromFloats (_fdba );if _bdfc !=nil {return nil ,_bdfc ;};return _ecca ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcfc *PdfShadingType1 )ToPdfObject ()_eag .PdfObject {_dcfc .PdfShading .ToPdfObject ();_fbgb ,_gcgffb :=_dcfc .getShadingDict ();if _gcgffb !=nil {_ebdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dcfc .Domain !=nil {_fbgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcfc .Domain );};if _dcfc .Matrix !=nil {_fbgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcfc .Matrix );};if _dcfc .Function !=nil {if len (_dcfc .Function )==1{_fbgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcfc .Function [0].ToPdfObject ());
}else {_decef :=_eag .MakeArray ();for _ ,_faaga :=range _dcfc .Function {_decef .Append (_faaga .ToPdfObject ());};_fbgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_decef );};};return _dcfc ._aadgg ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _eag .PdfObject ;};func (_ecade *XObjectImage )getParamsDict ()*_eag .PdfObjectDictionary {_ffecf :=_eag .MakeDict ();_ffecf .Set ("\u0057\u0069\u0064t\u0068",_eag .MakeInteger (*_ecade .Width ));
_ffecf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eag .MakeInteger (*_ecade .Height ));_ffecf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eag .MakeInteger (int64 (_ecade .ColorSpace .GetNumComponents ())));
_ffecf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eag .MakeInteger (*_ecade .BitsPerComponent ));return _ffecf ;};var _ pdfFont =(*pdfFontSimple )(nil );func (_beaf *pdfFontSimple )updateStandard14Font (){_afafg ,_efabe :=_beaf .Encoder ().(_gbf .SimpleEncoder );
if !_efabe {_ebdd .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_beaf .Encoder (),_beaf );return ;};
_gfaba :=_afafg .Charcodes ();_beaf ._fgdd =make (map[_gbf .CharCode ]float64 ,len (_gfaba ));for _ ,_cfcgac :=range _gfaba {_bcbd ,_ :=_afafg .CharcodeToRune (_cfcgac );_gbfb ,_ :=_beaf ._gbdg .Read (_bcbd );_beaf ._fgdd [_cfcgac ]=_gbfb .Wx ;};};func _ecfab (_dagf *PdfPage ){_begdb :=_bda .GetLicenseKey ();
if _begdb !=nil &&_begdb .IsLicensed (){return ;};_fgae :=_eag .PdfObjectName ("\u0055\u0046\u0031");if !_dagf .Resources .HasFontByName (_fgae ){_dagf .Resources .SetFontByName (_fgae ,DefaultFont ().ToPdfObject ());};var _fabcd []string ;_fabcd =append (_fabcd ,"\u0071");
_fabcd =append (_fabcd ,"\u0042\u0054");_fabcd =append (_fabcd ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fgae .String ()));_fabcd =append (_fabcd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_fabcd =append (_fabcd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_dffea :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_fabcd =append (_fabcd ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dffea ));_fabcd =append (_fabcd ,"\u0045\u0054");_fabcd =append (_fabcd ,"\u0051");_cfedd :=_cb .Join (_fabcd ,"\u000a");_dagf .AddContentStreamByString (_cfedd );_dagf .ToPdfObject ();
};func (_cffba *PdfWriter )setDocInfo (_cbbgbd _eag .PdfObject ){if _cffba .hasObject (_cffba ._eagcbd ){delete (_cffba ._fcced ,_cffba ._eagcbd );delete (_cffba ._edecd ,_cffba ._eagcbd );for _edbbe ,_ddac :=range _cffba ._eggea {if _ddac ==_cffba ._eagcbd {copy (_cffba ._eggea [_edbbe :],_cffba ._eggea [_edbbe +1:]);
_cffba ._eggea [len (_cffba ._eggea )-1]=nil ;_cffba ._eggea =_cffba ._eggea [:len (_cffba ._eggea )-1];break ;};};};_agae :=_eag .PdfIndirectObject {};_agae .PdfObject =_cbbgbd ;_cffba ._eagcbd =&_agae ;_cffba .addObject (&_agae );};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gafad *OutlineItem )Insert (index uint ,item *OutlineItem ){_ddaag :=uint (len (_gafad .Entries ));if index > _ddaag {index =_ddaag ;};_gafad .Entries =append (_gafad .Entries [:index ],append ([]*OutlineItem {item },_gafad .Entries [index :]...)...);
};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_eag .PdfObject ,error );};

// C returns the value of the cyan component of the color.
func (_aagef *PdfColorDeviceCMYK )C ()float64 {return _aagef [0]};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_fabadg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _fabadg .MediaBox !=nil {return _fabadg .MediaBox ,nil ;};_fdgecb :=_fabadg .Parent ;for _fdgecb !=nil {_fbfbd ,_fcdag :=_eag .GetDict (_fdgecb );if !_fcdag {return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _aedcf :=_fbfbd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_aedcf !=nil {_gedga ,_gdbd :=_eag .GetArray (_aedcf );if !_gdbd {return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_deff ,_efddb :=NewPdfRectangle (*_gedga );if _efddb !=nil {return nil ,_efddb ;};return _deff ,nil ;};_fdgecb =_fbfbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_bag .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgdf pdfFontType0 )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){if _fgdf .DescendantFont ==nil {_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fgdf );
return _eeb .CharMetrics {},false ;};return _fgdf .DescendantFont .GetRuneMetrics (r );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _eag .PdfObject )(_eag .PdfObjectName ,error ){var _dbded *_eag .PdfObjectName ;var _fdacf *_eag .PdfObjectArray ;if _cced ,_dffg :=obj .(*_eag .PdfIndirectObject );_dffg {if _fbbg ,_fbga :=_cced .PdfObject .(*_eag .PdfObjectArray );
_fbga {_fdacf =_fbbg ;}else if _geg ,_adgag :=_cced .PdfObject .(*_eag .PdfObjectName );_adgag {_dbded =_geg ;};}else if _gecce ,_eec :=obj .(*_eag .PdfObjectArray );_eec {_fdacf =_gecce ;}else if _edfb ,_ecdg :=obj .(*_eag .PdfObjectName );_ecdg {_dbded =_edfb ;
};if _dbded !=nil {switch *_dbded {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_dbded ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_dbded ,nil ;
};};if _fdacf !=nil &&_fdacf .Len ()> 0{if _fdgf ,_cbefc :=_fdacf .Get (0).(*_eag .PdfObjectName );_cbefc {switch *_fdgf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fdacf .Len ()==1{return *_fdgf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_fdgf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_fdgf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_fdgf ,nil ;};};};return "",nil ;};

// GetVersion gets the document version.
func (_ddcaf *PdfWriter )GetVersion ()_eag .Version {return _ddcaf ._ddcce };

// SetContentStream sets the pattern cell's content stream.
func (_aeccc *PdfTilingPattern )SetContentStream (content []byte ,encoder _eag .StreamEncoder )error {_eggeg ,_cdbg :=_aeccc ._bcdbe .(*_eag .PdfObjectStream );if !_cdbg {_ebdd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeccc ._bcdbe );
return _eag .ErrTypeError ;};if encoder ==nil {encoder =_eag .NewRawEncoder ();};_dceag :=_eggeg .PdfObjectDictionary ;_feefc :=encoder .MakeStreamDict ();_dceag .Merge (_feefc );_ecde ,_daec :=encoder .EncodeBytes (content );if _daec !=nil {return _daec ;
};_dceag .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eag .MakeInteger (int64 (len (_ecde ))));_eggeg .Stream =_ecde ;return nil ;};func (_ffbdf *PdfReader )loadDSS ()(*DSS ,error ){if _ffbdf ._afegd .GetCrypter ()!=nil &&!_ffbdf ._afegd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gabc :=_ffbdf ._adbgg .Get ("\u0044\u0053\u0053");if _gabc ==nil {return nil ,nil ;};_ccbbaf ,_ :=_eag .GetIndirect (_gabc );_gabc =_eag .TraceToDirectObject (_gabc );switch _acecc :=_gabc .(type ){case *_eag .PdfObjectNull :return nil ,nil ;case *_eag .PdfObjectDictionary :return _gfba (_ccbbaf ,_acecc );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gabc );};func (_efg *PdfReader )newPdfAnnotationWidgetFromDict (_bgac *_eag .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ecgg :=PdfAnnotationWidget {};
_ecgg .H =_bgac .Get ("\u0048");_ecgg .MK =_bgac .Get ("\u004d\u004b");_ecgg .A =_bgac .Get ("\u0041");_ecgg .AA =_bgac .Get ("\u0041\u0041");_ecgg .BS =_bgac .Get ("\u0042\u0053");_ecgg .Parent =_bgac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ecgg ,nil ;
};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ggde :=NewPdfAnnotation ();_fdbf :=&PdfAnnotationScreen {};_fdbf .PdfAnnotation =_ggde ;_ggde .SetContext (_fdbf );return _fdbf ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_eedaa *PdfAcroForm )GetContainingPdfObject ()_eag .PdfObject {return _eedaa ._cada };

// ToPdfObject implements interface PdfModel.
func (_affebf *PdfTransformParamsDocMDP )ToPdfObject ()_eag .PdfObject {_ccgbgc :=_eag .MakeDict ();_ccgbgc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_affebf .Type );_ccgbgc .SetIfNotNil ("\u0056",_affebf .V );_ccgbgc .SetIfNotNil ("\u0050",_affebf .P );
return _ccgbgc ;};type fontCommon struct{_fgcc string ;_cdabe string ;_afbf string ;_afga _eag .PdfObject ;_dccf *_cd .CMap ;_ecdgfc *PdfFontDescriptor ;_bbbff int64 ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_eag .PdfObjectStream )(*XObjectImage ,error ){_ceceae :=&XObjectImage {};_ceceae ._cgfecg =stream ;_daeee :=*(stream .PdfObjectDictionary );_cfge ,_affgg :=_eag .NewEncoderFromStream (stream );if _affgg !=nil {return nil ,_affgg ;
};_ceceae .Filter =_cfge ;if _daac :=_eag .TraceToDirectObject (_daeee .Get ("\u0057\u0069\u0064t\u0068"));_daac !=nil {_fccb ,_effa :=_daac .(*_eag .PdfObjectInteger );if !_effa {return nil ,_bag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ddaae :=int64 (*_fccb );_ceceae .Width =&_ddaae ;}else {return nil ,_bag .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _efdfe :=_eag .TraceToDirectObject (_daeee .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_efdfe !=nil {_gega ,_agaeg :=_efdfe .(*_eag .PdfObjectInteger );if !_agaeg {return nil ,_bag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aggg :=int64 (*_gega );
_ceceae .Height =&_aggg ;}else {return nil ,_bag .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cdadfd :=_eag .TraceToDirectObject (_daeee .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cdadfd !=nil {_bcdfb ,_ebacgf :=NewPdfColorspaceFromPdfObject (_cdadfd );if _ebacgf !=nil {return nil ,_ebacgf ;};_ceceae .ColorSpace =_bcdfb ;}else {_ebdd .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_ceceae .ColorSpace =NewPdfColorspaceDeviceGray ();};if _daad :=_eag .TraceToDirectObject (_daeee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_daad !=nil {_eebac ,_faddb :=_daad .(*_eag .PdfObjectInteger );
if !_faddb {return nil ,_bag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccccf :=int64 (*_eebac );_ceceae .BitsPerComponent =&_ccccf ;};_ceceae .Intent =_daeee .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_ceceae .ImageMask =_daeee .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ceceae .Mask =_daeee .Get ("\u004d\u0061\u0073\u006b");_ceceae .Decode =_daeee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ceceae .Interpolate =_daeee .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_ceceae .Alternatives =_daeee .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ceceae .SMask =_daeee .Get ("\u0053\u004d\u0061s\u006b");_ceceae .SMaskInData =_daeee .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_ceceae .Matte =_daeee .Get ("\u004d\u0061\u0074t\u0065");_ceceae .Name =_daeee .Get ("\u004e\u0061\u006d\u0065");_ceceae .StructParent =_daeee .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ceceae .ID =_daeee .Get ("\u0049\u0044");
_ceceae .OPI =_daeee .Get ("\u004f\u0050\u0049");_ceceae .Metadata =_daeee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ceceae .OC =_daeee .Get ("\u004f\u0043");_ceceae .Stream =stream .Stream ;return _ceceae ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aabdd *PdfReader )GetIndirectObjectByNumber (number int )(_eag .PdfObject ,error ){_ccfec ,_eagcc :=_aabdd ._afegd .LookupByNumber (number );return _ccfec ,_eagcc ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_eabcc *PdfSignature )GetDocMDPPermission ()(_fcg .DocMDPPermission ,bool ){for _ ,_gegega :=range _eabcc .Reference .Elements (){if _cdbdg ,_ffgag :=_eag .GetDict (_gegega );_ffgag {if _ccccd ,_gcece :=_eag .GetNameVal (_cdbdg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_gcece &&_ccccd =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _bffdg ,_cdcga :=_eag .GetDict (_cdbdg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cdcga {if P ,_afefe :=_eag .GetIntVal (_bffdg .Get ("\u0050"));
_afefe {return _fcg .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func (_dcdbe *PdfWriter )setCatalogVersion (){_dcdbe ._daegb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_eag .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_dcdbe ._ddcce .Major ,_dcdbe ._ddcce .Minor )));
};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_efegc ,_egfb :=_eda .ParsePdfTime (dateStr );if _egfb !=nil {return PdfDate {},_egfb ;};return NewPdfDateFromTime (_efegc );};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gaag *PdfFont )SubsetRegistered ()error {switch _gcaf :=_gaag ._dagg .(type ){case *pdfFontType0 :_eacb :=_gcaf .subsetRegistered ();if _eacb !=nil {_ebdd .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eacb );
return _eacb ;};if _gcaf ._gefcg !=nil {if _gcaf ._cege !=nil {_gcaf ._cege .ToPdfObject ();};_gcaf .ToPdfObject ();};default:_ebdd .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gcaf );
};return nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_acdc :=NewPdfAnnotation ();_gbba :=&PdfAnnotationPopup {};_gbba .PdfAnnotation =_acdc ;_acdc .SetContext (_gbba );return _gbba ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_eag .PdfObjectInteger ;BitsPerComponent *_eag .PdfObjectInteger ;VerticesPerRow *_eag .PdfObjectInteger ;Decode *_eag .PdfObjectArray ;Function []PdfFunction ;};func (_dddgbg *PdfWriter )writeAcroFormFields ()error {if _dddgbg ._aagab ==nil {return nil ;
};_ebdd .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_edcfga :=_dddgbg ._aagab .ToPdfObject ();_ebdd .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_edcfga );
_dddgbg ._daegb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_edcfga );_cfgbg :=_dddgbg .addObjects (_edcfga );if _cfgbg !=nil {return _cfgbg ;};return nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dacf :=NewPdfAnnotation ();_cge :=&PdfAnnotationStamp {};_cge .PdfAnnotation =_dacf ;_cge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dacf .SetContext (_cge );return _cge ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetPatternByName sets a pattern resource specified by keyName.
func (_gecde *PdfPageResources )SetPatternByName (keyName _eag .PdfObjectName ,pattern _eag .PdfObject )error {if _gecde .Pattern ==nil {_gecde .Pattern =_eag .MakeDict ();};_gdfa ,_aafgg :=_eag .GetDict (_gecde .Pattern );if !_aafgg {return _eag .ErrTypeError ;
};_gdfa .Set (keyName ,pattern );return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_addfb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dgfb ,_dgfc :=_fc .Open (filePath );if _dgfc !=nil {_ebdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dgfc );
return nil ,_dgfc ;};defer _dgfb .Close ();return NewCompositePdfFontFromTTF (_dgfb );};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _eag .PdfObject ;MK _eag .PdfObject ;A _eag .PdfObject ;AA _eag .PdfObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_eef :=NewPdfAction ();_ebe :=&PdfActionJavaScript {};_ebe .PdfAction =_eef ;_eef .SetContext (_ebe );return _ebe ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ToPdfObject returns the PDF representation of the function.
func (_gegfa *PdfFunctionType3 )ToPdfObject ()_eag .PdfObject {_cfcgd :=_eag .MakeDict ();_cfcgd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eag .MakeInteger (3));_fcdgfd :=&_eag .PdfObjectArray {};for _ ,_aabea :=range _gegfa .Domain {_fcdgfd .Append (_eag .MakeFloat (_aabea ));
};_cfcgd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcdgfd );if _gegfa .Range !=nil {_cgacd :=&_eag .PdfObjectArray {};for _ ,_ebdf :=range _gegfa .Range {_cgacd .Append (_eag .MakeFloat (_ebdf ));};_cfcgd .Set ("\u0052\u0061\u006eg\u0065",_cgacd );
};if _gegfa .Functions !=nil {_bfdcd :=&_eag .PdfObjectArray {};for _ ,_egcea :=range _gegfa .Functions {_bfdcd .Append (_egcea .ToPdfObject ());};_cfcgd .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bfdcd );};if _gegfa .Bounds !=nil {_gfde :=&_eag .PdfObjectArray {};
for _ ,_cgga :=range _gegfa .Bounds {_gfde .Append (_eag .MakeFloat (_cgga ));};_cfcgd .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gfde );};if _gegfa .Encode !=nil {_bcad :=&_eag .PdfObjectArray {};for _ ,_aceg :=range _gegfa .Encode {_bcad .Append (_eag .MakeFloat (_aceg ));
};_cfcgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bcad );};if _gegfa ._dcgf !=nil {_gegfa ._dcgf .PdfObject =_cfcgd ;return _gegfa ._dcgf ;};return _cfcgd ;};func _baeeb (_bbegg _eag .PdfObject ){_ebdd .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bbegg ,_bbegg .String ());
if _bfdfa ,_cdbaa :=_bbegg .(*_eag .PdfObjectStream );_cdbaa {_aaegg ,_dbagf :=_eag .DecodeStream (_bfdfa );if _dbagf !=nil {_ebdd .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dbagf );return ;};_ebdd .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_aaegg );
}else if _eebca ,_ccfb :=_bbegg .(*_eag .PdfIndirectObject );_ccfb {_ebdd .Log .Debug ("\u0025\u0054\u0020%\u0076",_eebca .PdfObject ,_eebca .PdfObject );_ebdd .Log .Debug ("\u0025\u0073",_eebca .PdfObject .String ());};};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_aedc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_bag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abce :=vals [0];if _abce < 0.0||_abce > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abce );
return nil ,ErrColorOutOfRange ;};_bgegb :=vals [1];if _bgegb < 0.0||_bgegb > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bgegb );return nil ,ErrColorOutOfRange ;
};_cfcf :=vals [2];if _cfcf < 0.0||_cfcf > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfcf );return nil ,ErrColorOutOfRange ;};_eadb :=vals [3];
if _eadb < 0.0||_eadb > 1.0{_ebdd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eadb );return nil ,ErrColorOutOfRange ;};_cbdd :=NewPdfColorDeviceCMYK (_abce ,_bgegb ,_cfcf ,_eadb );
return _cbdd ,nil ;};

// GetCerts returns the signature certificate chain.
func (_faebf *PdfSignature )GetCerts ()([]*_ed .Certificate ,error ){var _bcbabd []func ()([]*_ed .Certificate ,error );switch _edegc ,_ :=_eag .GetNameVal (_faebf .SubFilter );_edegc {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bcbabd =append (_bcbabd ,_faebf .extractChainFromPKCS7 ,_faebf .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bcbabd =append (_bcbabd ,_faebf .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bcbabd =append (_bcbabd ,_faebf .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_edegc );};for _ ,_adabb :=range _bcbabd {_aagfa ,_eafgd :=_adabb ();if _eafgd !=nil {return nil ,_eafgd ;
};if len (_aagfa )> 0{return _aagfa ,nil ;};};return nil ,ErrSignNoCertificates ;};func _babga (_agcdb *PdfField ,_fabe _eag .PdfObject )error {switch _agcdb .GetContext ().(type ){case *PdfFieldText :switch _bbca :=_fabe .(type ){case *_eag .PdfObjectName :_cefda :=_bbca ;
_ebdd .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cefda .String ());
_agcdb .V =_eag .MakeEncodedString (_bbca .String (),true );case *_eag .PdfObjectString :_agcdb .V =_eag .MakeEncodedString (_bbca .String (),true );default:_ebdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bbca ,_bbca );
};case *PdfFieldButton :switch _fabe .(type ){case *_eag .PdfObjectName :if len (_fabe .String ())> 0{_agcdb .V =_fabe ;_eddee (_agcdb ,_fabe );};case *_eag .PdfObjectString :if len (_fabe .String ())> 0{_agcdb .V =_eag .MakeName (_fabe .String ());_eddee (_agcdb ,_agcdb .V );
};default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_agcdb .PartialName (),_fabe );_agcdb .V =_fabe ;};case *PdfFieldChoice :switch _fabe .(type ){case *_eag .PdfObjectName :if len (_fabe .String ())> 0{_agcdb .V =_eag .MakeString (_fabe .String ());
_eddee (_agcdb ,_fabe );};case *_eag .PdfObjectString :if len (_fabe .String ())> 0{_agcdb .V =_fabe ;_eddee (_agcdb ,_eag .MakeName (_fabe .String ()));};default:_ebdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_agcdb .PartialName (),_fabe );
_agcdb .V =_fabe ;};case *PdfFieldSignature :_ebdd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_agcdb .PartialName (),_fabe );
};return nil ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _eag .PdfObject )(*PdfInfo ,error ){var _edecge PdfInfo ;_ffdb ,_adef :=obj .(*_eag .PdfObjectDictionary );if !_adef {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_bbbf :=range _ffdb .Keys (){switch _bbbf {case "\u0054\u0069\u0074l\u0065":_edecge .Title ,_ =_eag .GetString (_ffdb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_edecge .Author ,_ =_eag .GetString (_ffdb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_edecge .Subject ,_ =_eag .GetString (_ffdb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_edecge .Keywords ,_ =_eag .GetString (_ffdb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_edecge .Creator ,_ =_eag .GetString (_ffdb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_edecge .Producer ,_ =_eag .GetString (_ffdb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_edecge .Trapped ,_ =_eag .GetName (_ffdb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _edbcd ,_bccd :=_eag .GetString (_ffdb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_bccd &&_edbcd .String ()!=""{_aefc ,_efea :=NewPdfDate (_edbcd .String ());if _efea !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_efea );
};_edecge .CreationDate =&_aefc ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _fgbfc ,_aeef :=_eag .GetString (_ffdb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_aeef &&_fgbfc .String ()!=""{_gbed ,_bffbe :=NewPdfDate (_fgbfc .String ());if _bffbe !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bffbe );
};_edecge .ModifiedDate =&_gbed ;};default:_begda ,_ :=_eag .GetString (_ffdb .Get (_bbbf ));if _edecge ._gege ==nil {_edecge ._gege =_eag .MakeDict ();};_edecge ._gege .Set (_bbbf ,_begda );};};return &_edecge ,nil ;};func (_ecdbf *Image )resampleLowBits (_gfffb []uint32 ){_abdeb :=_fde .BytesPerLine (int (_ecdbf .Width ),int (_ecdbf .BitsPerComponent ),_ecdbf .ColorComponents );
_faeee :=make ([]byte ,_ecdbf .ColorComponents *_abdeb *int (_ecdbf .Height ));_cgff :=int (_ecdbf .BitsPerComponent )*_ecdbf .ColorComponents *int (_ecdbf .Width );_ceebb :=uint8 (8);var (_bebc ,_aaag int ;_efbbf uint32 ;);for _geaaafe :=0;_geaaafe < int (_ecdbf .Height );
_geaaafe ++{_aaag =_geaaafe *_abdeb ;for _cdcbe :=0;_cdcbe < _cgff ;_cdcbe ++{_efbbf =_gfffb [_bebc ];_ceebb -=uint8 (_ecdbf .BitsPerComponent );_faeee [_aaag ]|=byte (_efbbf )<<_ceebb ;if _ceebb ==0{_ceebb =8;_aaag ++;};_bebc ++;};};_ecdbf .Data =_faeee ;
};

// Items returns all children outline items.
func (_afdffb *Outline )Items ()[]*OutlineItem {return _afdffb .Entries };

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// ToPdfObject implements interface PdfModel.
func (_aca *PdfActionThread )ToPdfObject ()_eag .PdfObject {_aca .PdfAction .ToPdfObject ();_geb :=_aca ._ggd ;_def :=_geb .PdfObject .(*_eag .PdfObjectDictionary );_def .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeThread )));if _aca .F !=nil {_def .Set ("\u0046",_aca .F .ToPdfObject ());
};_def .SetIfNotNil ("\u0044",_aca .D );_def .SetIfNotNil ("\u0042",_aca .B );return _geb ;};func _cafd (_gefg _eag .PdfObject )(*PdfColorspaceCalRGB ,error ){_dcfd :=NewPdfColorspaceCalRGB ();if _dcbg ,_fcbc :=_gefg .(*_eag .PdfIndirectObject );_fcbc {_dcfd ._fdcgc =_dcbg ;
};_gefg =_eag .TraceToDirectObject (_gefg );_efbd ,_fbafa :=_gefg .(*_eag .PdfObjectArray );if !_fbafa {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efbd .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gefg =_eag .TraceToDirectObject (_efbd .Get (0));_cdeg ,_fbafa :=_gefg .(*_eag .PdfObjectName );if !_fbafa {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_cdeg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gefg =_eag .TraceToDirectObject (_efbd .Get (1));
_efdd ,_fbafa :=_gefg .(*_eag .PdfObjectDictionary );if !_fbafa {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_gefg =_efdd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gefg =_eag .TraceToDirectObject (_gefg );_aefd ,_fbafa :=_gefg .(*_eag .PdfObjectArray );if !_fbafa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _aefd .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbgeg ,_abee :=_aefd .GetAsFloat64Slice ();
if _abee !=nil {return nil ,_abee ;};_dcfd .WhitePoint =_bbgeg ;_gefg =_efdd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gefg !=nil {_gefg =_eag .TraceToDirectObject (_gefg );_fed ,_abed :=_gefg .(*_eag .PdfObjectArray );if !_abed {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _fed .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fcfg ,_eecf :=_fed .GetAsFloat64Slice ();
if _eecf !=nil {return nil ,_eecf ;};_dcfd .BlackPoint =_fcfg ;};_gefg =_efdd .Get ("\u0047\u0061\u006dm\u0061");if _gefg !=nil {_gefg =_eag .TraceToDirectObject (_gefg );_fgee ,_bcfe :=_gefg .(*_eag .PdfObjectArray );if !_bcfe {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _fgee .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_eafa ,_faaa :=_fgee .GetAsFloat64Slice ();if _faaa !=nil {return nil ,_faaa ;
};_dcfd .Gamma =_eafa ;};_gefg =_efdd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gefg !=nil {_gefg =_eag .TraceToDirectObject (_gefg );_efga ,_bcgb :=_gefg .(*_eag .PdfObjectArray );if !_bcgb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _efga .Len ()!=9{_ebdd .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_efga .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_afda ,_ddaa :=_efga .GetAsFloat64Slice ();if _ddaa !=nil {return nil ,_ddaa ;};_dcfd .Matrix =_afda ;};return _dcfd ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_ebccg *Image )ToGoImage ()(_d .Image ,error ){_ebdd .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cagd ,_bdgg :=_fde .NewImage (int (_ebccg .Width ),int (_ebccg .Height ),int (_ebccg .BitsPerComponent ),_ebccg .ColorComponents ,_ebccg .Data ,_ebccg ._cbefd ,_ebccg ._dadbe );
if _bdgg !=nil {return nil ,_bdgg ;};return _cagd ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_caec *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cggc :=_dba .NewReader (img .getBase ());_fafg :=_fde .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dcbc :=_dba .NewWriter (_fafg );
_fegg :=_gcg .Pow (2,float64 (img .BitsPerComponent ))-1;_cece :=make ([]uint32 ,3);var (_dabg uint32 ;ANorm ,X ,Y ,Z ,_cdfg ,_ggfdf ,_acbe float64 ;_cacg error ;);for {_dabg ,_cacg =_cggc .ReadSample ();if _cacg ==_ba .EOF {break ;}else if _cacg !=nil {return img ,_cacg ;
};ANorm =float64 (_dabg )/_fegg ;X =_caec .WhitePoint [0]*_gcg .Pow (ANorm ,_caec .Gamma );Y =_caec .WhitePoint [1]*_gcg .Pow (ANorm ,_caec .Gamma );Z =_caec .WhitePoint [2]*_gcg .Pow (ANorm ,_caec .Gamma );_cdfg =3.240479*X +-1.537150*Y +-0.498535*Z ;
_ggfdf =-0.969256*X +1.875992*Y +0.041556*Z ;_acbe =0.055648*X +-0.204043*Y +1.057311*Z ;_cdfg =_gcg .Min (_gcg .Max (_cdfg ,0),1.0);_ggfdf =_gcg .Min (_gcg .Max (_ggfdf ,0),1.0);_acbe =_gcg .Min (_gcg .Max (_acbe ,0),1.0);_cece [0]=uint32 (_cdfg *_fegg );
_cece [1]=uint32 (_ggfdf *_fegg );_cece [2]=uint32 (_acbe *_fegg );if _cacg =_dcbc .WriteSamples (_cece );_cacg !=nil {return img ,_cacg ;};};return _ecfe (&_fafg ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gddcg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_eag .PdfObject )(PdfColor ,error ){if _gddcg .Alternate ==nil {if _gddcg .N ==1{_ade :=NewPdfColorspaceDeviceGray ();return _ade .ColorFromPdfObjects (objects );}else if _gddcg .N ==3{_adee :=NewPdfColorspaceDeviceRGB ();
return _adee .ColorFromPdfObjects (objects );}else if _gddcg .N ==4{_efabb :=NewPdfColorspaceDeviceCMYK ();return _efabb .ColorFromPdfObjects (objects );}else {return nil ,_bag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gddcg .Alternate .ColorFromPdfObjects (objects );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_efgc _ba .ReadSeeker ;_dgde *_eag .PdfParser ;_egeg *PdfReader ;Reader *PdfReader ;_abag []*PdfPage ;_gaba *PdfAcroForm ;_bea *DSS ;_dcc *Permissions ;_gcgb _eag .XrefTable ;_gbcg int64 ;_ffce int ;_aea []_eag .PdfObject ;_dbaf map[_eag .PdfObject ]struct{};
_ddde map[_eag .PdfObject ]int64 ;_bafb map[_eag .PdfObject ]struct{};_aaed map[_eag .PdfObject ]struct{};_cgbe int64 ;_aggc bool ;_dca string ;_dabb *EncryptOptions ;_cceb *PdfInfo ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ba .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gcda ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dgbcf (rs ,opts ,true ,_gcda );
};func _fcad (_fcfe *_eag .PdfObjectDictionary )(*PdfFieldChoice ,error ){_ffg :=&PdfFieldChoice {};_ffg .Opt ,_ =_eag .GetArray (_fcfe .Get ("\u004f\u0070\u0074"));_ffg .TI ,_ =_eag .GetInt (_fcfe .Get ("\u0054\u0049"));_ffg .I ,_ =_eag .GetArray (_fcfe .Get ("\u0049"));
return _ffg ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbfbge pdfCIDFontType2 )GetRuneMetrics (r rune )(_eeb .CharMetrics ,bool ){_beacd ,_gddb :=_bbfbge ._fgcdbg [r ];if !_gddb {_eaeca ,_bdfde :=_eag .GetInt (_bbfbge .DW );if !_bdfde {return _eeb .CharMetrics {},false ;};_beacd =int (*_eaeca );};return _eeb .CharMetrics {Wx :float64 (_beacd )},true ;
};

// ToPdfObject implements interface PdfModel.
func (_cac *PdfActionNamed )ToPdfObject ()_eag .PdfObject {_cac .PdfAction .ToPdfObject ();_fdgb :=_cac ._ggd ;_ggf :=_fdgb .PdfObject .(*_eag .PdfObjectDictionary );_ggf .SetIfNotNil ("\u0053",_eag .MakeName (string (ActionTypeNamed )));_ggf .SetIfNotNil ("\u004e",_cac .N );
return _fdgb ;};