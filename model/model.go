//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_ee "bytes";_ef "crypto/md5";_fb "crypto/rand";_fd "crypto/sha1";_ffc "crypto/x509";_cb "encoding/binary";_de "encoding/hex";_bbc "errors";_e "fmt";_eccd "github.com/gabriel-vasile/mimetype";_ecc "github.com/unidoc/freetype";
_dg "github.com/unidoc/freetype/truetype";_gb "github.com/unidoc/pkcs7";_df "github.com/unidoc/unipdf/v3/common";_fe "github.com/unidoc/unipdf/v3/core";_be "github.com/unidoc/unipdf/v3/core/security";_def "github.com/unidoc/unipdf/v3/core/security/crypt";
_gf "github.com/unidoc/unipdf/v3/internal/cmap";_af "github.com/unidoc/unipdf/v3/internal/imageutil";_ae "github.com/unidoc/unipdf/v3/internal/license";_dfc "github.com/unidoc/unipdf/v3/internal/sampling";_cbg "github.com/unidoc/unipdf/v3/internal/textencoding";
_ded "github.com/unidoc/unipdf/v3/internal/timeutils";_db "github.com/unidoc/unipdf/v3/internal/transform";_ad "github.com/unidoc/unipdf/v3/internal/uuid";_ce "github.com/unidoc/unipdf/v3/model/internal/docutil";_ag "github.com/unidoc/unipdf/v3/model/internal/fonts";
_gbf "github.com/unidoc/unipdf/v3/model/mdp";_eeb "github.com/unidoc/unipdf/v3/model/sigutil";_gc "github.com/unidoc/unipdf/v3/ps";_gce "github.com/unidoc/unitype";_ga "golang.org/x/image/font";_fdc "golang.org/x/xerrors";_f "hash";_ab "image";_c "image/color";
_g "image/draw";_ "image/gif";_ec "image/png";_gd "io";_dd "math";_ffd "math/rand";_dc "os";_abd "path/filepath";_bg "regexp";_gg "sort";_bb "strconv";_bf "strings";_b "sync";_abb "time";_ff "unicode";_bd "unicode/utf8";);func (_baffd *LTV )validateSig (_bfec *PdfSignature )error {if _bfec ==nil ||_bfec .Contents ==nil ||len (_bfec .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bfec );
};return nil ;};func (_ceff *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bacf *_fe .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_baf :=PdfAnnotationFileAttachment {};_dcec ,_ddbf :=_ceff .newPdfAnnotationMarkupFromDict (_bacf );
if _ddbf !=nil {return nil ,_ddbf ;};_baf .PdfAnnotationMarkup =_dcec ;_baf .FS =_bacf .Get ("\u0046\u0053");_baf .Name =_bacf .Get ("\u004e\u0061\u006d\u0065");return &_baf ,nil ;};var (ErrRequiredAttributeMissing =_bbc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gbd =_bbc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_bbc .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_bbc .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_fdc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fe .ErrNotSupported );ErrType1CFontNotSupported =_fdc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fe .ErrNotSupported );
ErrType3FontNotSupported =_fdc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fe .ErrNotSupported );
ErrTTCmapNotSupported =_fdc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fe .ErrNotSupported );
ErrSignNotEnoughSpace =_fdc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_fdc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_faaad *PdfWriter )SetRotation (rotate int64 )error {_gcdcde ,_caeedb :=_fe .GetDict (_faaad ._ggfge );if !_caeedb {return ErrTypeCheck ;};_gcdcde .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fe .MakeInteger (rotate ));return nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_egda ,_gacfc :=_dc .ReadFile (path );if _gacfc !=nil {return nil ,_gacfc ;};_dfbdb :=_eccd .Detect (_egda );_efec :=_ef .Sum (_egda );_ggfdd :=&EmbeddedFile {Name :_abd .Base (path ),Content :_egda ,FileType :_dfbdb .String (),Hash :_de .EncodeToString (_efec [:])};
return _ggfdd ,nil ;};func (_ccgfd *PdfPage )generateImage (_acbbd string ,_acda float64 ,_eacdb string ,_acbee _c .Color )([]byte ,error ){_cbfc ,_fdecf ,_bgfd ,_ :=_acbee .RGBA ();_fbebe :=_c .RGBA {uint8 (_cbfc >>8),uint8 (_fdecf >>8),uint8 (_bgfd >>8),255};
_aegc :=_c .RGBA {0xff,0xff,0xff,0x00};_bafaf ,_ecdd :=_ccgfd .loadFont (_eacdb );if _ecdd !=nil {return nil ,_ecdd ;};_eebdf :=_bf .Replace (_acbbd ,"\u0009","\u0020\u0020\u0020\u0020",-1);_ggddb :=_bf .Split (_eebdf ,"\u000a");_efcbd :=1.0;for _ ,_gccde :=range _ggddb {if float64 (len (_gccde ))*_acda > _efcbd {_efcbd =float64 (len (_gccde ))*_acda ;
};};if _efcbd > _ccgfd .MediaBox .Width (){_efcbd =_ccgfd .MediaBox .Width ();};_gbae :=_ab .NewUniform (_fbebe );_cebgd :=_ab .NewUniform (_aegc );_bfdgb :=_ab .NewRGBA (_ab .Rect (0,0,int (_efcbd ),int (_acda *1.5*float64 (len (_ggddb )))));_g .Draw (_bfdgb ,_bfdgb .Bounds (),_cebgd ,_ab .Pt (0,0),_g .Src );
_bdafd :=_ecc .NewContext ();_bdafd .SetDPI (72);_bdafd .SetFont (_bafaf );_bdafd .SetFontSize (_acda );_bdafd .SetHinting (_ga .HintingNone );_bdafd .SetClip (_bfdgb .Bounds ());_bdafd .SetDst (_bfdgb );_bdafd .SetSrc (_gbae );_efeg :=50;_adbca :=10+int (_bdafd .PointToFixed (_acda )>>6);
_acbdg :=_ecc .Pt (_efeg ,_adbca );for _ ,_cadgge :=range _ggddb {_ ,_ecdd =_bdafd .DrawString (_bf .Replace (_cadgge ,"\u000d","",-1),_acbdg );if _ecdd !=nil {return nil ,_ecdd ;};_acbdg .Y +=_bdafd .PointToFixed (_acda *1.5);};_gfdcf :=new (_ee .Buffer );
if _afaff :=_ec .Encode (_gfdcf ,_bfdgb );_afaff !=nil {return nil ,_afaff ;};return _gfdcf .Bytes (),nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cedgc *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fe .GetNumberAsFloat (_cedgc .CapHeight );};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_deab *PdfReader )newPdfAnnotation3DFromDict (_afgg *_fe .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ddcfa :=PdfAnnotation3D {};_ddcfa .T3DD =_afgg .Get ("\u0033\u0044\u0044");_ddcfa .T3DV =_afgg .Get ("\u0033\u0044\u0056");
_ddcfa .T3DA =_afgg .Get ("\u0033\u0044\u0041");_ddcfa .T3DI =_afgg .Get ("\u0033\u0044\u0049");_ddcfa .T3DB =_afgg .Get ("\u0033\u0044\u0042");return &_ddcfa ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_aebed *PdfFont )Subtype ()string {_dabde :=_aebed .baseFields ()._cdgfg ;if _bebca ,_agcfc :=_aebed ._aeacd .(*pdfFontType0 );_agcfc {_dabde =_dabde +"\u003a"+_bebca .DescendantFont .Subtype ();};return _dabde ;};

// SetName sets the `Name` field of the signature.
func (_bbbgae *PdfSignature )SetName (name string ){_bbbgae .Name =_fe .MakeEncodedString (name ,true )};func _gbeb (_bega *_fe .PdfObjectDictionary )(*PdfFieldButton ,error ){_fdcbd :=&PdfFieldButton {};_fdcbd .PdfField =NewPdfField ();_fdcbd .PdfField .SetContext (_fdcbd );
_fdcbd .Opt ,_ =_fe .GetArray (_bega .Get ("\u004f\u0070\u0074"));_efge :=NewPdfAnnotationWidget ();_efge .A ,_ =_fe .GetDict (_bega .Get ("\u0041"));_efge .AP ,_ =_fe .GetDict (_bega .Get ("\u0041\u0050"));_efge .SetContext (_fdcbd );_fdcbd .PdfField .Annotations =append (_fdcbd .PdfField .Annotations ,_efge );
return _fdcbd ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_beefa *XObjectImage )GetContainingPdfObject ()_fe .PdfObject {return _beefa ._daceg };

// GetRefObject returns the reference object of the KValue.
func (_ebed *KValue )GetRefObject ()_fe .PdfObject {return _ebed ._ebfce };

// SetFitWindow sets the value of the fitWindow flag.
func (_badad *ViewerPreferences )SetFitWindow (fitWindow bool ){_badad ._gcfg =&fitWindow };

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_eeabd *PdfWriter )SetOpenAction (dest _fe .PdfObject )error {if dest ==nil ||_fe .IsNullObject (dest ){return nil ;};_eeabd ._efaac .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _eeabd .addObjects (dest );};

// ColorToRGB converts a CalGray color to an RGB color.
func (_egfd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_geef ,_dade :=color .(*PdfColorCalGray );if !_dade {_df .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_geef .Val ();X :=_egfd .WhitePoint [0]*_dd .Pow (ANorm ,_egfd .Gamma );Y :=_egfd .WhitePoint [1]*_dd .Pow (ANorm ,_egfd .Gamma );
Z :=_egfd .WhitePoint [2]*_dd .Pow (ANorm ,_egfd .Gamma );_adfb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cdgc :=-0.969256*X +1.875992*Y +0.041556*Z ;_efdfc :=0.055648*X +-0.204043*Y +1.057311*Z ;_adfb =_dd .Min (_dd .Max (_adfb ,0),1.0);_cdgc =_dd .Min (_dd .Max (_cdgc ,0),1.0);
_efdfc =_dd .Min (_dd .Max (_efdfc ,0),1.0);return NewPdfColorDeviceRGB (_adfb ,_cdgc ,_efdfc ),nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_bfaf *PdfOutputIntent )ToPdfObject ()_fe .PdfObject {if _bfaf ._gaecg ==nil {_bfaf ._gaecg =_fe .MakeDict ();};_ggcgg :=_bfaf ._gaecg ;if _bfaf .Type !=""{_ggcgg .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName (_bfaf .Type ));};_ggcgg .Set ("\u0053",_fe .MakeName (_bfaf .S .String ()));
if _bfaf .OutputCondition !=""{_ggcgg .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fe .MakeString (_bfaf .OutputCondition ));};_ggcgg .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fe .MakeString (_bfaf .OutputConditionIdentifier ));
_ggcgg .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fe .MakeString (_bfaf .RegistryName ));if _bfaf .Info !=""{_ggcgg .Set ("\u0049\u006e\u0066\u006f",_fe .MakeString (_bfaf .Info ));};if len (_bfaf .DestOutputProfile )!=0{_dcbfa ,_agcga :=_fe .MakeStream (_bfaf .DestOutputProfile ,_fe .NewFlateEncoder ());
if _agcga !=nil {_df .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_agcga );
};_dcbfa .PdfObjectDictionary .Set ("\u004e",_fe .MakeInteger (int64 (_bfaf .ColorComponents )));_ddaad :=make ([]float64 ,_bfaf .ColorComponents *2);for _bggfe :=0;_bggfe < _bfaf .ColorComponents *2;_bggfe ++{_babb :=0.0;if _bggfe %2!=0{_babb =1.0;};_ddaad [_bggfe ]=_babb ;
};_dcbfa .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fe .MakeArrayFromFloats (_ddaad ));_ggcgg .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_dcbfa );};return _ggcgg ;};func _aege (_abfb *_fe .PdfIndirectObject ,_aeaf *_fe .PdfObjectDictionary )(*DSS ,error ){if _abfb ==nil {_abfb =_fe .MakeIndirectObject (nil );
};_abfb .PdfObject =_fe .MakeDict ();_cbce :=map[string ]*VRI {};if _eebaa ,_acabd :=_fe .GetDict (_aeaf .Get ("\u0056\u0052\u0049"));_acabd {for _ ,_aged :=range _eebaa .Keys (){if _cafbe ,_bbgb :=_fe .GetDict (_eebaa .Get (_aged ));_bbgb {_cbce [_bf .ToUpper (_aged .String ())]=_dbfe (_cafbe );
};};};return &DSS {Certs :_adbdg (_aeaf .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_adbdg (_aeaf .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_adbdg (_aeaf .Get ("\u0043\u0052\u004c\u0073")),VRI :_cbce ,_ddeb :_abfb },nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gced *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fe .StreamEncoder ,error ){_fadf ,_edcb :=_gced ._aegcc .(*_fe .PdfObjectStream );if !_edcb {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gced ._aegcc );
return nil ,nil ,_fe .ErrTypeError ;};_cedgce ,_afgdc :=_fe .DecodeStream (_fadf );if _afgdc !=nil {_df .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_afgdc );
return nil ,nil ,_afgdc ;};_afdfeb ,_afgdc :=_fe .NewEncoderFromStream (_fadf );if _afgdc !=nil {_df .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_afgdc );
return nil ,nil ,_afgdc ;};return _cedgce ,_afdfeb ,nil ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_fdgad :make ([]*KValue ,0),_gebfa :-1}};

// ToInteger convert to an integer format.
func (_ddgf *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_efc :=_dd .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_efc *_ddgf .C ()),uint32 (_efc *_ddgf .M ()),uint32 (_efc *_ddgf .Y ()),uint32 (_efc *_ddgf .K ())};};func _gbcab (_fega _fe .PdfObject )(*PdfColorspaceCalRGB ,error ){_dbde :=NewPdfColorspaceCalRGB ();
if _cgbfe ,_cgfe :=_fega .(*_fe .PdfIndirectObject );_cgfe {_dbde ._fbg =_cgbfe ;};_fega =_fe .TraceToDirectObject (_fega );_fdcg ,_ddbff :=_fega .(*_fe .PdfObjectArray );if !_ddbff {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _fdcg .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fega =_fe .TraceToDirectObject (_fdcg .Get (0));_ffeae ,_ddbff :=_fega .(*_fe .PdfObjectName );
if !_ddbff {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_ffeae !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fega =_fe .TraceToDirectObject (_fdcg .Get (1));_eagc ,_ddbff :=_fega .(*_fe .PdfObjectDictionary );if !_ddbff {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fega =_eagc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fega =_fe .TraceToDirectObject (_fega );_fdeg ,_ddbff :=_fega .(*_fe .PdfObjectArray );if !_ddbff {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fdeg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bgge ,_ebff :=_fdeg .GetAsFloat64Slice ();
if _ebff !=nil {return nil ,_ebff ;};_dbde .WhitePoint =_bgge ;_fega =_eagc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fega !=nil {_fega =_fe .TraceToDirectObject (_fega );_ace ,_fbcac :=_fega .(*_fe .PdfObjectArray );if !_fbcac {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _ace .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ebab ,_dffg :=_ace .GetAsFloat64Slice ();
if _dffg !=nil {return nil ,_dffg ;};_dbde .BlackPoint =_ebab ;};_fega =_eagc .Get ("\u0047\u0061\u006dm\u0061");if _fega !=nil {_fega =_fe .TraceToDirectObject (_fega );_abef ,_edfa :=_fega .(*_fe .PdfObjectArray );if !_edfa {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _abef .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_adga ,_bgeg :=_abef .GetAsFloat64Slice ();if _bgeg !=nil {return nil ,_bgeg ;
};_dbde .Gamma =_adga ;};_fega =_eagc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fega !=nil {_fega =_fe .TraceToDirectObject (_fega );_fbfef ,_cbggb :=_fega .(*_fe .PdfObjectArray );if !_cbggb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _fbfef .Len ()!=9{_df .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_fbfef .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_ffeg ,_dcdc :=_fbfef .GetAsFloat64Slice ();if _dcdc !=nil {return nil ,_dcdc ;};_dbde .Matrix =_ffeg ;};return _dbde ,nil ;};func _dbfe (_ecbgd *_fe .PdfObjectDictionary )*VRI {_cgda ,_ :=_fe .GetString (_ecbgd .Get ("\u0054\u0055"));_dged ,_ :=_fe .GetString (_ecbgd .Get ("\u0054\u0053"));
return &VRI {Cert :_adbdg (_ecbgd .Get ("\u0043\u0065\u0072\u0074")),OCSP :_adbdg (_ecbgd .Get ("\u004f\u0043\u0053\u0050")),CRL :_adbdg (_ecbgd .Get ("\u0043\u0052\u004c")),TU :_cgda ,TS :_dged };};

// PrintArea returns the value of the printArea.
func (_aegead *ViewerPreferences )PrintArea ()PageBoundary {return _aegead ._afceb };

// PdfVersion returns version of the PDF file.
func (_aegb *PdfReader )PdfVersion ()_fe .Version {return _aegb ._gabca .PdfVersion ()};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_aggdgc int64 ;_edage int64 ;_adadfg int64 ;_dbbce int64 ;_abebf int64 ;_egagcg int64 ;_caeead byte ;_aaag int64 ;_gcgge int64 ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fe .PdfObject ;Name _fe .PdfObject ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_cddaa *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_cddaa ._bfbab =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// WriteToFile writes the Appender output to file specified by path.
func (_cbfaf *PdfAppender )WriteToFile (outputPath string )error {_cafbc ,_eddg :=_dc .Create (outputPath );if _eddg !=nil {return _eddg ;};defer _cafbc .Close ();return _cbfaf .Write (_cafbc );};

// ToPdfObject implements interface PdfModel.
func (_ggd *PdfActionSetOCGState )ToPdfObject ()_fe .PdfObject {_ggd .PdfAction .ToPdfObject ();_bca :=_ggd ._ea ;_feca :=_bca .PdfObject .(*_fe .PdfObjectDictionary );_feca .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSetOCGState )));_feca .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ggd .State );
_feca .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ggd .PreserveRB );return _bca ;};func (_dedad *Image )getSuitableEncoder ()(_fe .StreamEncoder ,error ){var (_cdfbf ,_caaa =int (_dedad .Width ),int (_dedad .Height );_eaeff =make (map[string ]bool );
_eaca =true ;_dcce =false ;_ceaba =func ()*_fe .DCTEncoder {return _fe .NewDCTEncoder ()};_dcced =func ()*_fe .DCTEncoder {_dfaca :=_fe .NewDCTEncoder ();_dfaca .BitsPerComponent =16;return _dfaca };);for _defdg :=0;_defdg < _caaa ;_defdg ++{for _dcbbe :=0;
_dcbbe < _cdfbf ;_dcbbe ++{_dbdag ,_bfga :=_dedad .ColorAt (_dcbbe ,_defdg );if _bfga !=nil {return nil ,_bfga ;};_bdffe ,_eegg ,_eced ,_bcbd :=_dbdag .RGBA ();if _eaca &&(_bdffe !=_eegg ||_bdffe !=_eced ||_eegg !=_eced ){_eaca =false ;};if !_dcce {switch _dbdag .(type ){case _c .NRGBA :_dcce =_bcbd > 0;
};};_eaeff [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_bdffe ,_eegg ,_eced )]=true ;if len (_eaeff )> 2&&_dcce {return _dcced (),nil ;};};};if _dcce ||len (_dedad ._dbgaf )> 0{return _fe .NewFlateEncoder (),nil ;};if len (_eaeff )<=2{_dfcdb :=_dedad .ConvertToBinary ();
if _dfcdb !=nil {return nil ,_dfcdb ;};return _fe .NewJBIG2Encoder (),nil ;};if _eaca {return _ceaba (),nil ;};if _dedad .ColorComponents ==1{if _dedad .BitsPerComponent ==1{return _fe .NewJBIG2Encoder (),nil ;}else if _dedad .BitsPerComponent ==8{_cfebc :=_fe .NewDCTEncoder ();
_cfebc .ColorComponents =1;return _cfebc ,nil ;};}else if _dedad .ColorComponents ==3{if _dedad .BitsPerComponent ==8{return _ceaba (),nil ;}else if _dedad .BitsPerComponent ==16{return _dcced (),nil ;};}else if _dedad .ColorComponents ==4{_dfegf :=_dcced ();
_dfegf .ColorComponents =4;return _dfegf ,nil ;};return _dcced (),nil ;};

// ViewClip returns the value of the viewClip.
func (_eagec *ViewerPreferences )ViewClip ()PageBoundary {return _eagec ._ecebe };

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fe .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fe .PdfObject ;A _fe .PdfObject ;SE _fe .PdfObject ;C _fe .PdfObject ;F _fe .PdfObject ;
_cfgag *_fe .PdfIndirectObject ;};func (_dcdfbf SignatureValidationResult )String ()string {var _eefbc _ee .Buffer ;_eefbc .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_dcdfbf .Name ));if _dcdfbf .Date ._aggdgc > 0{_eefbc .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_dcdfbf .Date .ToGoTime ().String ()));
}else {_eefbc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dcdfbf .Reason )> 0{_eefbc .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dcdfbf .Reason ));
}else {_eefbc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_dcdfbf .Location )> 0{_eefbc .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dcdfbf .Location ));
}else {_eefbc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dcdfbf .ContactInfo )> 0{_eefbc .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_dcdfbf .ContactInfo ));
}else {_eefbc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_eefbc .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_dcdfbf .Fields )));
if _dcdfbf .IsSigned {_eefbc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_eefbc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _dcdfbf .IsVerified {_eefbc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_eefbc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _dcdfbf .IsTrusted {_eefbc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_eefbc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_dcdfbf .GeneralizedTime .IsZero (){_eefbc .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_dcdfbf .GeneralizedTime .String ()));};if _dcdfbf .DiffResults !=nil {_eefbc .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_dcdfbf .DiffResults .IsPermitted ()));
if len (_dcdfbf .DiffResults .Warnings )> 0{_eefbc .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_eaffb :=range _dcdfbf .DiffResults .Warnings {_eefbc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_eaffb ));
};};if len (_dcdfbf .DiffResults .Errors )> 0{_eefbc .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_ceeca :=range _dcdfbf .DiffResults .Errors {_eefbc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ceeca ));
};};};if _dcdfbf .IsCrlFound {_eefbc .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");}else {_eefbc .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};if _dcdfbf .IsOcspFound {_eefbc .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");}else {_eefbc .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};return _eefbc .String ();};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gdacb :map[_fe .PdfObject ]struct{}{},_afac :_bccgb (),_gabca :_fe .NewParserFromString (txt )};};func (_aaf *PdfReader )newPdfActionThreadFromDict (_cab *_fe .PdfObjectDictionary )(*PdfActionThread ,error ){_dbc ,_gcde :=_cdb (_cab .Get ("\u0046"));
if _gcde !=nil {return nil ,_gcde ;};return &PdfActionThread {D :_cab .Get ("\u0044"),B :_cab .Get ("\u0042"),F :_dbc },nil ;};func _dbebc (_fcgga _fe .PdfObject )(*PdfFunctionType3 ,error ){_edgc :=&PdfFunctionType3 {};var _ggaff *_fe .PdfObjectDictionary ;
if _edfeg ,_egcec :=_fcgga .(*_fe .PdfIndirectObject );_egcec {_fecgf ,_aefcc :=_edfeg .PdfObject .(*_fe .PdfObjectDictionary );if !_aefcc {return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_edgc ._dfbe =_edfeg ;_ggaff =_fecgf ;}else if _cdbge ,_ecbefc :=_fcgga .(*_fe .PdfObjectDictionary );_ecbefc {_ggaff =_cdbge ;}else {return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfgdeb ,_fdeff :=_fe .TraceToDirectObject (_ggaff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );
if !_fdeff {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cfgdeb .Len ()!=2{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dacc ,_egdgf :=_cfgdeb .ToFloat64Array ();
if _egdgf !=nil {return nil ,_egdgf ;};_edgc .Domain =_dacc ;_cfgdeb ,_fdeff =_fe .TraceToDirectObject (_ggaff .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if _fdeff {if _cfgdeb .Len ()< 0||_cfgdeb .Len ()%2!=0{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cdada ,_bdffa :=_cfgdeb .ToFloat64Array ();if _bdffa !=nil {return nil ,_bdffa ;};_edgc .Range =_cdada ;};_cfgdeb ,_fdeff =_fe .TraceToDirectObject (_ggaff .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fe .PdfObjectArray );if !_fdeff {_df .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_edgc .Functions =[]PdfFunction {};
for _ ,_ffgb :=range _cfgdeb .Elements (){_fgeaa ,_agce :=_cebb (_ffgb );if _agce !=nil {return nil ,_agce ;};_edgc .Functions =append (_edgc .Functions ,_fgeaa );};_cfgdeb ,_fdeff =_fe .TraceToDirectObject (_ggaff .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fe .PdfObjectArray );
if !_fdeff {_df .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_eaeca ,_egdgf :=_cfgdeb .ToFloat64Array ();if _egdgf !=nil {return nil ,_egdgf ;};_edgc .Bounds =_eaeca ;if len (_edgc .Bounds )!=len (_edgc .Functions )-1{_df .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_edgc .Bounds ),len (_edgc .Functions ));
return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgdeb ,_fdeff =_fe .TraceToDirectObject (_ggaff .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );if !_fdeff {_df .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_agaa ,_egdgf :=_cfgdeb .ToFloat64Array ();
if _egdgf !=nil {return nil ,_egdgf ;};_edgc .Encode =_agaa ;if len (_edgc .Encode )!=2*len (_edgc .Functions ){_df .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_edgc .Encode ),len (_edgc .Functions ));
return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _edgc ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_deb *PdfAnnotation )GetContext ()PdfModel {if _deb ==nil {return nil ;};return _deb ._cdg ;};

// AddMCIDChild adds a child MCID object.
func (_eaeb *KDict )AddMCIDChild (mcid int ){_eaeb ._fdgad =append (_eaeb ._fdgad ,&KValue {_cffeed :&mcid });};

// ToPdfObject implements interface PdfModel.
func (_fag *PdfActionGoToE )ToPdfObject ()_fe .PdfObject {_fag .PdfAction .ToPdfObject ();_gdg :=_fag ._ea ;_dbf :=_gdg .PdfObject .(*_fe .PdfObjectDictionary );_dbf .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoToE )));if _fag .F !=nil {_dbf .Set ("\u0046",_fag .F .ToPdfObject ());
};_dbf .SetIfNotNil ("\u0044",_fag .D );_dbf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fag .NewWindow );_dbf .SetIfNotNil ("\u0054",_fag .T );return _gdg ;};var _cffe =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// SetTabOrder sets the tab order for the page.
func (_abdf *PdfPage )SetTabOrder (order TabOrderType ){_abdf .Tabs =_fe .MakeName (string (order ))};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_fe .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_fe .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func _dfabb (_bfcad _fe .PdfObject )*IDTree {_bfcad =_fe .ResolveReference (_bfcad );_bcbb :=_fe .MakeArray ();_bbcbe :=_fe .MakeArray ();_ecdga :=[]*IDTree {};if _bbfad ,_fded :=_fe .GetDict (_bfcad );_fded {if _afgdg :=_bbfad .Get ("\u004e\u0061\u006de\u0073");
_afgdg !=nil {_afgdg =_fe .ResolveReference (_afgdg );if _dffag ,_ecfaa :=_fe .GetArray (_afgdg );_ecfaa {for _ ,_gcfcd :=range _dffag .Elements (){_bcbb .Append (_gcfcd );};};};if _dedgc :=_bbfad .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_dedgc !=nil {_dedgc =_fe .ResolveReference (_dedgc );
if _ccgfa ,_cfcdd :=_fe .GetArray (_dedgc );_cfcdd {for _cagdb :=0;_cagdb < 2;_cagdb ++{_bbcbe .Append (_ccgfa .Get (_cagdb ));};};};if _ffeab :=_bbfad .Get ("\u004b\u0069\u0064\u0073");_ffeab !=nil {_ffeab =_fe .ResolveReference (_ffeab );if _dfdea ,_efgab :=_fe .GetArray (_ffeab );
_efgab {for _ ,_gdgef :=range _dfdea .Elements (){_abbce :=_dfabb (_gdgef );_ecdga =append (_ecdga ,_abbce );};};};};_fadcd :=&IDTree {Names :_bcbb ,Limits :_bbcbe };if len (_ecdga )> 0{_fadcd .Kids =_ecdga ;};return _fadcd ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fe .PdfObject ;MK _fe .PdfObject ;A _fe .PdfObject ;AA _fe .PdfObject ;BS _fe .PdfObject ;Parent _fe .PdfObject ;_feg *PdfField ;_gdb bool ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_cgdd :=NewPdfAnnotation ();_agag :=&PdfAnnotationScreen {};_agag .PdfAnnotation =_cgdd ;_cgdd .SetContext (_agag );return _agag ;};func _dfgc (_aeade *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_aeade }};


// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_daegc DefaultImageHandler )Read (reader _gd .Reader )(*Image ,error ){_gdbed ,_ ,_abceaa :=_ab .Decode (reader );if _abceaa !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_abceaa );
return nil ,_abceaa ;};return _daegc .NewImageFromGoImage (_gdbed );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_deeec *PdfAcroForm )ToPdfObject ()_fe .PdfObject {_gdebg :=_deeec ._ggdb ;_gbbdd :=_gdebg .PdfObject .(*_fe .PdfObjectDictionary );if _deeec .Fields !=nil {_bagd :=_fe .PdfObjectArray {};for _ ,_cfeea :=range *_deeec .Fields {_aafef :=_cfeea .GetContext ();
if _aafef !=nil {_bagd .Append (_aafef .ToPdfObject ());}else {_bagd .Append (_cfeea .ToPdfObject ());};};_gbbdd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_bagd );};if _deeec .NeedAppearances !=nil {_gbbdd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_deeec .NeedAppearances );
}else {if _fbdg :=_gbbdd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_fbdg !=nil {_gbbdd .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _deeec .SigFlags !=nil {_gbbdd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_deeec .SigFlags );
};if _deeec .CO !=nil {_gbbdd .Set ("\u0043\u004f",_deeec .CO );};if _deeec .DR !=nil {_gbbdd .Set ("\u0044\u0052",_deeec .DR .ToPdfObject ());};if _deeec .DA !=nil {_gbbdd .Set ("\u0044\u0041",_deeec .DA );};if _deeec .Q !=nil {_gbbdd .Set ("\u0051",_deeec .Q );
};if _deeec .XFA !=nil {_gbbdd .Set ("\u0058\u0046\u0041",_deeec .XFA );};if _deeec .ADBEEchoSign !=nil {_gbbdd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_deeec .ADBEEchoSign );};return _gdebg ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bbcge :=PdfColorDeviceRGB {r ,g ,b };return &_bbcge ;};func (_dagb *PdfReader )newPdfActionRenditionFromDict (_ccc *_fe .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ccc .Get ("\u0052"),AN :_ccc .Get ("\u0041\u004e"),OP :_ccc .Get ("\u004f\u0050"),JS :_ccc .Get ("\u004a\u0053")},nil ;
};func _dgdbf (_gecbf []*_fe .PdfObjectStream )*_fe .PdfObjectArray {if len (_gecbf )==0{return nil ;};_ggffb :=make ([]_fe .PdfObject ,0,len (_gecbf ));for _ ,_edegd :=range _gecbf {_ggffb =append (_ggffb ,_edegd );};return _fe .MakeArray (_ggffb ...);
};

// GetStructRoot gets the StructTreeRoot object
func (_dddae *PdfPage )GetStructTreeRoot ()(*_fe .PdfObject ,bool ){_egegb ,_cbag :=_dddae ._agfed .GetCatalogStructTreeRoot ();return &_egegb ,_cbag ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_faddf *Outline )ToPdfOutline ()*PdfOutline {_gcba :=NewPdfOutline ();var _egeff []*PdfOutlineItem ;var _cdfbfa int64 ;var _ffad *PdfOutlineItem ;for _ ,_dfagb :=range _faddf .Entries {_eadcc ,_fbffa :=_dfagb .ToPdfOutlineItem ();_eadcc .Parent =&_gcba .PdfOutlineTreeNode ;
if _ffad !=nil {_ffad .Next =&_eadcc .PdfOutlineTreeNode ;_eadcc .Prev =&_ffad .PdfOutlineTreeNode ;};_egeff =append (_egeff ,_eadcc );_cdfbfa +=_fbffa ;_ffad =_eadcc ;};_bgaf :=int64 (len (_egeff ));_cdfbfa +=_bgaf ;if _bgaf > 0{_gcba .First =&_egeff [0].PdfOutlineTreeNode ;
_gcba .Last =&_egeff [_bgaf -1].PdfOutlineTreeNode ;_gcba .Count =&_cdfbfa ;};return _gcba ;};type pdfCIDFontType0 struct{fontCommon ;_dggec *_fe .PdfIndirectObject ;_ebef _cbg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fe .PdfObject ;W _fe .PdfObject ;DW2 _fe .PdfObject ;W2 _fe .PdfObject ;_cbca map[_cbg .CharCode ]float64 ;_dcad float64 ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fe .PdfObjectArray ;ExtGState _fe .PdfObject ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gdfb *DSS )GetContainingPdfObject ()_fe .PdfObject {return _gdfb ._ddeb };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fe .PdfObject ;Mac _fe .PdfObject ;Unix _fe .PdfObject ;NewWindow _fe .PdfObject ;};func (_fagf *PdfReader )newPdfAnnotationLinkFromDict (_acf *_fe .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_eaeg :=PdfAnnotationLink {};
_eaeg .A =_acf .Get ("\u0041");_eaeg .Dest =_acf .Get ("\u0044\u0065\u0073\u0074");_eaeg .H =_acf .Get ("\u0048");_eaeg .PA =_acf .Get ("\u0050\u0041");_eaeg .QuadPoints =_acf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eaeg .BS =_acf .Get ("\u0042\u0053");
return &_eaeg ,nil ;};func (_bfcdc *PdfPage )flattenFieldsWithOpts (_ebaebc FieldAppearanceGenerator ,_bcffe *FieldFlattenOpts ,_dagde map[*PdfAnnotation ]bool )error {var _babce []*PdfAnnotation ;if _ebaebc !=nil {if _afdgc :=_ebaebc .WrapContentStream (_bfcdc );
_afdgc !=nil {return _afdgc ;};};_dcag ,_ecbef :=_bfcdc .GetAnnotations ();if _ecbef !=nil {return _ecbef ;};for _ ,_deee :=range _dcag {_gcff ,_fcae :=_dagde [_deee ];if !_fcae &&_bcffe .AnnotFilterFunc !=nil {if _ ,_efce :=_deee .GetContext ().(*PdfAnnotationWidget );
!_efce {_fcae =_bcffe .AnnotFilterFunc (_deee );};};if !_fcae {_babce =append (_babce ,_deee );continue ;};switch _deee .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_bdfbg ,_aggd ,_gffcf :=_cbbab (_deee );if _gffcf !=nil {if !_gcff {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gffcf );
continue ;};if _bdfbg ==nil {continue ;};_egbg :=_bfcdc .Resources .GenerateXObjectName ();_bfcdc .Resources .SetXObjectFormByName (_egbg ,_bdfbg );_bfbg ,_cccgb ,_gffcf :=_gbcb (_bdfbg );if _gffcf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_gffcf );
}else {_ddaa :=_db .IdentityMatrix ();_ddaa =_ddaa .Translate (-_bfbg .Llx ,-_bfbg .Lly );if _cccgb {_edce :=0.0;if _bfbg .Width ()> 0{_edce =_aggd .Width ()/_bfbg .Width ();};_acaea :=0.0;if _bfbg .Height ()> 0{_acaea =_aggd .Height ()/_bfbg .Height ();
};_ddaa =_ddaa .Scale (_edce ,_acaea );};_aggd .Transform (_ddaa );};_ggac :=_dd .Min (_aggd .Llx ,_aggd .Urx );_dbceg :=_dd .Min (_aggd .Lly ,_aggd .Ury );var _ggff []string ;_ggff =append (_ggff ,"\u0071");_ggff =append (_ggff ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ggac ,_dbceg ));
_ggff =append (_ggff ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_egbg .String ()));_ggff =append (_ggff ,"\u0051");_eeddb :=_bf .Join (_ggff ,"\u000a");_gffcf =_bfcdc .AppendContentStream (_eeddb );if _gffcf !=nil {return _gffcf ;};if _bdfbg .Resources !=nil {_cfeef ,_ddaf :=_fe .GetDict (_bdfbg .Resources .Font );
if _ddaf {for _ ,_aegea :=range _cfeef .Keys (){if !_bfcdc .Resources .HasFontByName (_aegea ){_bfcdc .Resources .SetFontByName (_aegea ,_cfeef .Get (_aegea ));};};};};};if len (_babce )> 0{_bfcdc ._eeae =_babce ;}else {_bfcdc ._eeae =[]*PdfAnnotation {};
};return nil ;};

// SetContext sets the sub action (context).
func (_ece *PdfAction )SetContext (ctx PdfModel ){_ece ._eb =ctx };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_afgdaf *PdfPageResources )GetXObjectFormByName (keyName _fe .PdfObjectName )(*XObjectForm ,error ){_cdegd ,_dfggb :=_afgdaf .GetXObjectByName (keyName );if _cdegd ==nil {return nil ,nil ;};if _dfggb !=XObjectTypeForm {return nil ,_bbc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_aeadc ,_ddfbc :=NewXObjectFormFromStream (_cdegd );if _ddfbc !=nil {return nil ,_ddfbc ;};return _aeadc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edd *PdfAnnotationTrapNet )ToPdfObject ()_fe .PdfObject {_edd .PdfAnnotation .ToPdfObject ();_gfaa :=_edd ._efg ;_ffecf :=_gfaa .PdfObject .(*_fe .PdfObjectDictionary );_ffecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gfaa ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dbgbff *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dbgbff ._ecfdd .(*PdfTilingPattern );};

// ToPdfObject implements interface PdfModel.
func (_cbfa *PdfAnnotationMovie )ToPdfObject ()_fe .PdfObject {_cbfa .PdfAnnotation .ToPdfObject ();_dca :=_cbfa ._efg ;_gbcg :=_dca .PdfObject .(*_fe .PdfObjectDictionary );_gbcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004d\u006f\u0076i\u0065"));
_gbcg .SetIfNotNil ("\u0054",_cbfa .T );_gbcg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cbfa .Movie );_gbcg .SetIfNotNil ("\u0041",_cbfa .A );return _dca ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// SetBorderWidth sets the style's border width.
func (_bbcga *PdfBorderStyle )SetBorderWidth (width float64 ){_bbcga .W =&width };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_gbcc :=NewPdfAnnotation ();_defa :=&PdfAnnotationSound {};_defa .PdfAnnotation =_gbcc ;_defa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbcc .SetContext (_defa );return _defa ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dfbe *_fe .PdfIndirectObject ;};

// AddOCSPs adds OCSPs to DSS.
func (_fddb *DSS )AddOCSPs (ocsps [][]byte )([]*_fe .PdfObjectStream ,error ){return _fddb .add (&_fddb .OCSPs ,_fddb ._cdbaf ,ocsps );};

// NumCopies returns the value of the numCopies.
func (_fgedd *ViewerPreferences )NumCopies ()int {return _fgedd ._dafea };

// GetNumComponents returns the number of color components.
func (_gfff *PdfColorspaceICCBased )GetNumComponents ()int {return _gfff .N };func _gfbebf (_agcgc *_fe .PdfObjectDictionary ,_gbda *fontCommon )(*pdfFontType0 ,error ){_fcff ,_abga :=_fe .GetArray (_agcgc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_abga {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gbda );
return nil ,_fe .ErrRangeError ;};if _fcff .Len ()!=1{_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_fcff .Len ());return nil ,_fe .ErrRangeError ;
};_dcebd ,_daee :=_dega (_fcff .Get (0),false );if _daee !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_daee ,_gbda );
return nil ,_daee ;};_dedef :=_agcgc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bdfce :="";_acdba :=_cddaf (_gbda );_acdba .DescendantFont =_dcebd ;switch _gega :=_dedef .(type ){case *_fe .PdfObjectName :_bdfce ,_abga =_fe .GetNameVal (_dedef );
if _abga {if _bdfce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bdfce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_acdba ._agfa =_cbg .NewIdentityTextEncoder (_bdfce );}else if _gf .IsPredefinedCMap (_bdfce ){_acdba ._dgccd ,_daee =_gf .LoadPredefinedCMap (_bdfce );
if _daee !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bdfce ,_daee );
};}else {_df .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bdfce );};};case *_fe .PdfObjectStream :if _acdba ._bfccg ==nil {_acafb ,_befda :=_gf .NewCIDSystemInfo (_gega .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _befda !=nil {_df .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_befda );};_faaga :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_acafb .Registry ,_acafb .Ordering );
if _gf .IsPredefinedCMap (_faaga ){_acdba ._dgccd ,_befda =_gf .LoadPredefinedCMap (_faaga );if _befda !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_faaga ,_befda );
};}else {_faaga =_gega .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_aaadb ,_beaga :=_fe .DecodeStream (_gega );if _beaga !=nil {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_beaga );
return _acdba ,_beaga ;};if _cfed :=_faaga =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_faaga =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_cfed {_acdba ._dgccd ,_beaga =_gf .LoadCmapFromData (_aaadb ,_cfed );
if _beaga !=nil {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_beaga ,string (_aaadb ));
return _acdba ,_beaga ;};_fcead :=make (map[_gf .CharCode ]rune ,256);for _dbbf :=0x00;_dbbf <=0xFF;_dbbf ++{_fcead [_gf .CharCode (_dbbf )]=rune (_dbbf );};_acdba ._fcfaf =_gf .NewToUnicodeCMap (_fcead );};};};};if _dcae :=_dcebd .baseFields ()._fcfaf ;
_dcae !=nil {if _cffd :=_dcae .Name ();_cffd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cffd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_acdba ._agfa =_cbg .NewCMapEncoder (_bdfce ,_acdba ._dgccd ,_dcae );
};};return _acdba ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_beddc *PdfPageResources )GetColorspaceByName (keyName _fe .PdfObjectName )(PdfColorspace ,bool ){_dbdde ,_bgebb :=_beddc .GetColorspaces ();if _bgebb !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgebb );
return nil ,false ;};if _dbdde ==nil {return nil ,false ;};_ebaaad ,_febda :=_dbdde .Colorspaces [string (keyName )];if !_febda {return nil ,false ;};return _ebaaad ,true ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_ccca :=&PdfColorspaceLab {};_ccca .BlackPoint =[]float64 {0.0,0.0,0.0};_ccca .Range =[]float64 {-100,100,-100,100};return _ccca ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_ceace *ViewerPreferences )IsHideToolbar ()bool {if _ceace ._degb ==nil {return false ;};return *_ceace ._degb ;};

// ToPdfObject implements interface PdfModel.
func (_bce *PdfActionHide )ToPdfObject ()_fe .PdfObject {_bce .PdfAction .ToPdfObject ();_cea :=_bce ._ea ;_ffdb :=_cea .PdfObject .(*_fe .PdfObjectDictionary );_ffdb .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeHide )));_ffdb .SetIfNotNil ("\u0054",_bce .T );
_ffdb .SetIfNotNil ("\u0048",_bce .H );return _cea ;};

// A returns the value of the A component of the color.
func (_ececf *PdfColorLab )A ()float64 {return _ececf [1]};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fe .PdfObject ;MK _fe .PdfObject ;A _fe .PdfObject ;AA _fe .PdfObject ;};func (_ggace *PdfWriter )writeAcroFormFields ()error {if _ggace ._bcgdc ==nil {return nil ;};_df .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_cebab :=_ggace ._bcgdc .ToPdfObject ();_df .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cebab );_ggace ._efaac .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cebab );_ffeaef :=_ggace .addObjects (_cebab );
if _ffeaef !=nil {return _ffeaef ;};return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dcga :=&PdfColorspaceSpecialSeparation {};return _dcga ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// Mask returns the uin32 bitmask for the specific flag.
func (_bbda FieldFlag )Mask ()uint32 {return uint32 (_bbda )};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ggge *PdfFieldSignature )ToPdfObject ()_fe .PdfObject {if _ggge .PdfAnnotationWidget !=nil {_ggge .PdfAnnotationWidget .ToPdfObject ();};_ggge .PdfField .ToPdfObject ();_aabaa :=_ggge ._ddfe ;_gfgg :=_aabaa .PdfObject .(*_fe .PdfObjectDictionary );
_gfgg .SetIfNotNil ("\u0046\u0054",_fe .MakeName ("\u0053\u0069\u0067"));_gfgg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ggge .Lock );_gfgg .SetIfNotNil ("\u0053\u0056",_ggge .SV );if _ggge .V !=nil {_gfgg .SetIfNotNil ("\u0056",_ggge .V .ToPdfObject ());
};return _aabaa ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_da :=NewPdfAction ();_ceb :=&PdfActionSound {};_ceb .PdfAction =_da ;_da .SetContext (_ceb );return _ceb ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_abde *PdfOutline )ToPdfObject ()_fe .PdfObject {_dcbge :=_abde ._cadgg ;_afdcc :=_dcbge .PdfObject .(*_fe .PdfObjectDictionary );_afdcc .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _abde .First !=nil {_afdcc .Set ("\u0046\u0069\u0072s\u0074",_abde .First .ToPdfObject ());
};if _abde .Last !=nil {_afdcc .Set ("\u004c\u0061\u0073\u0074",_abde .Last .GetContext ().GetContainingPdfObject ());};if _abde .Parent !=nil {_afdcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abde .Parent .GetContext ().GetContainingPdfObject ());
};if _abde .Count !=nil {_afdcc .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (*_abde .Count ));};return _dcbge ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_aaaff *pdfCIDFontType2 )ToPdfObject ()_fe .PdfObject {if _aaaff ._bgccdf ==nil {_aaaff ._bgccdf =&_fe .PdfIndirectObject {};};_ggbc :=_aaaff .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_aaaff ._bgccdf .PdfObject =_ggbc ;if _aaaff .CIDSystemInfo !=nil {_ggbc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_aaaff .CIDSystemInfo );};if _aaaff .DW !=nil {_ggbc .Set ("\u0044\u0057",_aaaff .DW );};if _aaaff .DW2 !=nil {_ggbc .Set ("\u0044\u0057\u0032",_aaaff .DW2 );
};if _aaaff .W !=nil {_ggbc .Set ("\u0057",_aaaff .W );};if _aaaff .W2 !=nil {_ggbc .Set ("\u0057\u0032",_aaaff .W2 );};if _aaaff .CIDToGIDMap !=nil {_ggbc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_aaaff .CIDToGIDMap );};return _aaaff ._bgccdf ;
};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bgfe *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_baab *PdfAnnotationPolygon )ToPdfObject ()_fe .PdfObject {_baab .PdfAnnotation .ToPdfObject ();_fabgb :=_baab ._efg ;_aad :=_fabgb .PdfObject .(*_fe .PdfObjectDictionary );_baab .PdfAnnotationMarkup .appendToPdfDictionary (_aad );_aad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_aad .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_baab .Vertices );_aad .SetIfNotNil ("\u004c\u0045",_baab .LE );_aad .SetIfNotNil ("\u0042\u0053",_baab .BS );_aad .SetIfNotNil ("\u0049\u0043",_baab .IC );_aad .SetIfNotNil ("\u0042\u0045",_baab .BE );
_aad .SetIfNotNil ("\u0049\u0054",_baab .IT );_aad .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_baab .Measure );return _fabgb ;};func (_abbbd *PdfAcroForm )fillImageWithAppearance (_abfbd FieldImageProvider ,_gfga FieldAppearanceGenerator )error {if _abbbd ==nil {return nil ;
};_cgeb ,_gage :=_abfbd .FieldImageValues ();if _gage !=nil {return _gage ;};for _ ,_eceec :=range _abbbd .AllFields (){_agfc :=_eceec .PartialName ();_ebgce ,_dbdeb :=_cgeb [_agfc ];if !_dbdeb {if _gbgd ,_cdcfg :=_eceec .FullName ();_cdcfg ==nil {_ebgce ,_dbdeb =_cgeb [_gbgd ];
};};if !_dbdeb {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_agfc );
continue ;};switch _abdce :=_eceec .GetContext ().(type ){case *PdfFieldButton :if _abdce .IsPush (){_abdce .SetFillImage (_ebgce );};};if _gfga ==nil {continue ;};for _ ,_ffbc :=range _eceec .Annotations {_dgea ,_ddgg :=_gfga .GenerateAppearanceDict (_abbbd ,_eceec ,_ffbc );
if _ddgg !=nil {return _ddgg ;};_ffbc .AP =_dgea ;_ffbc .ToPdfObject ();};};return nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fe .PdfObject ;FontFamily _fe .PdfObject ;FontStretch _fe .PdfObject ;FontWeight _fe .PdfObject ;Flags _fe .PdfObject ;FontBBox _fe .PdfObject ;ItalicAngle _fe .PdfObject ;Ascent _fe .PdfObject ;Descent _fe .PdfObject ;
Leading _fe .PdfObject ;CapHeight _fe .PdfObject ;XHeight _fe .PdfObject ;StemV _fe .PdfObject ;StemH _fe .PdfObject ;AvgWidth _fe .PdfObject ;MaxWidth _fe .PdfObject ;MissingWidth _fe .PdfObject ;FontFile _fe .PdfObject ;FontFile2 _fe .PdfObject ;FontFile3 _fe .PdfObject ;
CharSet _fe .PdfObject ;_aedg int ;_gdeda float64 ;*fontFile ;_ffbag *_ag .TtfType ;

// Additional entries for CIDFonts
Style _fe .PdfObject ;Lang _fe .PdfObject ;FD _fe .PdfObject ;CIDSet _fe .PdfObject ;_cfbaa *_fe .PdfIndirectObject ;};func _accc (_deaa _fe .PdfObject )(*_fe .PdfObjectDictionary ,*fontCommon ,error ){_gbdg :=&fontCommon {};if _agcce ,_baegc :=_deaa .(*_fe .PdfIndirectObject );
_baegc {_gbdg ._fdcab =_agcce .ObjectNumber ;};_egaf ,_cbec :=_fe .GetDict (_deaa );if !_cbec {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_deaa );
return nil ,nil ,ErrFontNotSupported ;};_dedd ,_cbec :=_fe .GetNameVal (_egaf .Get ("\u0054\u0079\u0070\u0065"));if !_cbec {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dedd !="\u0046\u006f\u006e\u0074"{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dedd ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fe .ErrTypeError ;};_cgeab ,_cbec :=_fe .GetNameVal (_egaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cbec {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gbdg ._cdgfg =_cgeab ;_gfad ,_cbec :=_fe .GetNameVal (_egaf .Get ("\u004e\u0061\u006d\u0065"));if _cbec {_gbdg ._gfab =_gfad ;};_efdda :=_egaf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _efdda !=nil {_gbdg ._bfccg =_fe .TraceToDirectObject (_efdda );
_fffe ,_bcbg :=_defee (_gbdg ._bfccg ,_gbdg );if _bcbg !=nil {return _egaf ,_gbdg ,_bcbg ;};_gbdg ._fcfaf =_fffe ;}else if _cgeab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cgeab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_afecc ,_defgc :=_gf .NewCIDSystemInfo (_egaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _defgc !=nil {return _egaf ,_gbdg ,_defgc ;};_fabcd :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_afecc .Registry ,_afecc .Ordering );if _gf .IsPredefinedCMap (_fabcd ){_gbdg ._fcfaf ,_defgc =_gf .LoadPredefinedCMap (_fabcd );
if _defgc !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fabcd ,_defgc );
};};};_gfege :=_egaf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gfege !=nil {_fgfa ,_febc :=_eabeb (_gfege );if _febc !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_febc );
return _egaf ,_gbdg ,_febc ;};_gbdg ._gdgcc =_fgfa ;};if _cgeab !="\u0054\u0079\u0070e\u0033"{_bgce ,_eacg :=_fe .GetNameVal (_egaf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_eacg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _egaf ,_gbdg ,ErrRequiredAttributeMissing ;};_gbdg ._cecc =_bgce ;};return _egaf ,_gbdg ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fe .PdfObject ;ColorSpace _fe .PdfObject ;Pattern _fe .PdfObject ;Shading _fe .PdfObject ;XObject _fe .PdfObject ;Font _fe .PdfObject ;ProcSet _fe .PdfObject ;Properties _fe .PdfObject ;_fdcdc *_fe .PdfObjectDictionary ;
_bdfdf *PdfPageResourcesColorspaces ;};func _dbgc (_edbad *_fe .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cedeg :=PdfShadingType4 {};_fbefd :=_edbad .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fbefd ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dadd ,_affa :=_fbefd .(*_fe .PdfObjectInteger );if !_affa {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbefd );
return nil ,_fe .ErrTypeError ;};_cedeg .BitsPerCoordinate =_dadd ;_fbefd =_edbad .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fbefd ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dadd ,_affa =_fbefd .(*_fe .PdfObjectInteger );if !_affa {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fbefd );
return nil ,_fe .ErrTypeError ;};_cedeg .BitsPerComponent =_dadd ;_fbefd =_edbad .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fbefd ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dadd ,_affa =_fbefd .(*_fe .PdfObjectInteger );if !_affa {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fbefd );
return nil ,_fe .ErrTypeError ;};_cedeg .BitsPerComponent =_dadd ;_fbefd =_edbad .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fbefd ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfed ,_affa :=_fbefd .(*_fe .PdfObjectArray );if !_affa {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbefd );
return nil ,_fe .ErrTypeError ;};_cedeg .Decode =_dfed ;_fbefd =_edbad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbefd ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cedeg .Function =[]PdfFunction {};if _ddbad ,_agcff :=_fbefd .(*_fe .PdfObjectArray );_agcff {for _ ,_bddee :=range _ddbad .Elements (){_dfcdba ,_ffdff :=_cebb (_bddee );if _ffdff !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffdff );
return nil ,_ffdff ;};_cedeg .Function =append (_cedeg .Function ,_dfcdba );};}else {_bgac ,_aace :=_cebb (_fbefd );if _aace !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aace );
return nil ,_aace ;};_cedeg .Function =append (_cedeg .Function ,_bgac );};return &_cedeg ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_adfaf *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _bbc .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_daac :=field .V ;if _daac ==nil {return _bbc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_acb :=pageNum -1;
if _acb < 0||_acb > len (_adfaf ._gdf )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gdga :=_adfaf .Reader .PageList [_acb ];field .P =_gdga .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fe .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gdga .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _adfaf ._fdcb ==_adfaf ._cca .AcroForm {_adfaf ._fdcb =_adfaf .Reader .AcroForm ;};_dagcb :=_adfaf ._fdcb ;if _dagcb ==nil {_dagcb =NewPdfAcroForm ();};_dagcb .SigFlags =_fe .MakeInteger (3);
if _dagcb .NeedAppearances !=nil {_dagcb .NeedAppearances =nil ;};_eaab :=append (_dagcb .AllFields (),field .PdfField );_dagcb .Fields =&_eaab ;_adfaf .ReplaceAcroForm (_dagcb );_adfaf .UpdatePage (_gdga );_adfaf ._gdf [_acb ]=_gdga ;if _ ,_gfaab :=field .V .GetDocMDPPermission ();
_gfaab {_adfaf ._gcb =NewPermissions (field .V );};return nil ;};func (_aadc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_addg *KDict )GetPageNumber ()int64 {return _addg ._gebfa };

// MergePageWith appends page content to source Pdf file page content.
func (_abcf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_adcf :=pageNum -1;var _aaggg *PdfPage ;for _bdc ,_gcdb :=range _abcf ._gdf {if _bdc ==_adcf {_aaggg =_gcdb ;};};if _aaggg ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _aaggg ._fbecf !=nil &&_aaggg ._fbecf .GetParser ()==_abcf ._cca ._gabca {_aaggg =_aaggg .Duplicate ();_abcf ._gdf [_adcf ]=_aaggg ;};page =page .Duplicate ();_dacdab (page );_feec :=_baaf (_aaggg );_gafd :=_baaf (page );_egfe :=make (map[_fe .PdfObjectName ]_fe .PdfObjectName );
for _abcd :=range _gafd {if _ ,_dbae :=_feec [_abcd ];_dbae {for _eceg :=1;true ;_eceg ++{_fecd :=_fe .PdfObjectName (string (_abcd )+_bb .Itoa (_eceg ));if _ ,_bbfb :=_feec [_fecd ];!_bbfb {_egfe [_abcd ]=_fecd ;break ;};};};};_ffeb ,_fae :=page .GetContentStreams ();
if _fae !=nil {return _fae ;};_dfcd ,_fae :=_aaggg .GetContentStreams ();if _fae !=nil {return _fae ;};for _gaad ,_fcag :=range _ffeb {for _ddag ,_gcbe :=range _egfe {_fcag =_bf .Replace (_fcag ,"\u002f"+string (_ddag ),"\u002f"+string (_gcbe ),-1);};_ffeb [_gaad ]=_fcag ;
};_dfcd =append (_dfcd ,_ffeb ...);if _cceb :=_aaggg .SetContentStreams (_dfcd ,_fe .NewFlateEncoder ());_cceb !=nil {return _cceb ;};_aaggg ._eeae =append (_aaggg ._eeae ,page ._eeae ...);if _aaggg .Resources ==nil {_aaggg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_aaggg .Resources .Font =_abcf .mergeResources (_aaggg .Resources .Font ,page .Resources .Font ,_egfe );_aaggg .Resources .XObject =_abcf .mergeResources (_aaggg .Resources .XObject ,page .Resources .XObject ,_egfe );_aaggg .Resources .Properties =_abcf .mergeResources (_aaggg .Resources .Properties ,page .Resources .Properties ,_egfe );
if _aaggg .Resources .ProcSet ==nil {_aaggg .Resources .ProcSet =page .Resources .ProcSet ;};_aaggg .Resources .Shading =_abcf .mergeResources (_aaggg .Resources .Shading ,page .Resources .Shading ,_egfe );_aaggg .Resources .ExtGState =_abcf .mergeResources (_aaggg .Resources .ExtGState ,page .Resources .ExtGState ,_egfe );
};_efbf ,_fae :=_aaggg .GetMediaBox ();if _fae !=nil {return _fae ;};_ddae ,_fae :=page .GetMediaBox ();if _fae !=nil {return _fae ;};var _eabd bool ;if _efbf .Llx > _ddae .Llx {_efbf .Llx =_ddae .Llx ;_eabd =true ;};if _efbf .Lly > _ddae .Lly {_efbf .Lly =_ddae .Lly ;
_eabd =true ;};if _efbf .Urx < _ddae .Urx {_efbf .Urx =_ddae .Urx ;_eabd =true ;};if _efbf .Ury < _ddae .Ury {_efbf .Ury =_ddae .Ury ;_eabd =true ;};if _eabd {_aaggg .MediaBox =_efbf ;};return nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_eeebd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_cadgeb *Names )addEmbeddedFile (_fgeag *EmbeddedFile )error {if _cadgeb .EmbeddedFiles ==nil {_cadgeb .EmbeddedFiles =_fe .MakeDict ();_cadgeb .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_fe .MakeArray ());
};_aeafg :=NewPdfFileSpecFromEmbeddedFile (_fgeag );_efabb :=_cadgeb .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_bcgeg ,_cfbbg :=_efabb .(*_fe .PdfObjectArray );if !_cfbbg {return _bbc .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_eebaab string ;_ebbg *PdfFilespec ;};_abdddf :=[]FileSpecMap {};for _geebc :=0;_geebc < len (_bcgeg .Elements ());_geebc +=2{if _geebc %2==0{_eeef :=_bcgeg .Get (_geebc );if _eeef !=nil {_geeec :=_eeef .(*_fe .PdfObjectString );
_dgfc :=_bcgeg .Get (_geebc +1);_dbfad ,_acfb :=NewPdfFilespecFromObj (_dgfc );if _acfb !=nil {return _acfb ;};_abdddf =append (_abdddf ,FileSpecMap {_eebaab :_geeec .String (),_ebbg :_dbfad });};};};_abdddf =append (_abdddf ,FileSpecMap {_eebaab :_fgeag .Name ,_ebbg :_aeafg });
_gg .Slice (_abdddf ,func (_fdffe ,_edff int )bool {return _abdddf [_fdffe ]._eebaab < _abdddf [_edff ]._eebaab });_bcgeg =_fe .MakeArray ();for _ ,_dagad :=range _abdddf {_bcgeg .Append (_fe .MakeString (_dagad ._eebaab ));_bcgeg .Append (_dagad ._ebbg .ToPdfObject ());
};_cadgeb .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_bcgeg );return nil ;};func (_ddgb *PdfReader )newPdfOutlineItemFromIndirectObject (_dbfc *_fe .PdfIndirectObject )(*PdfOutlineItem ,error ){_dbcce ,_ccgb :=_dbfc .PdfObject .(*_fe .PdfObjectDictionary );
if !_ccgb {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ccgab :=NewPdfOutlineItem ();_afdee :=_dbcce .Get ("\u0054\u0069\u0074l\u0065");
if _afdee ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_daaae ,_beebg :=_fe .GetString (_afdee );if !_beebg {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_afdee );};_ccgab .Title =_daaae ;if _aedd :=_dbcce .Get ("\u0043\u006f\u0075n\u0074");
_aedd !=nil {_geffc ,_ggfgg :=_aedd .(*_fe .PdfObjectInteger );if !_ggfgg {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_aedd );};_bdbe :=int64 (*_geffc );
_ccgab .Count =&_bdbe ;};if _ffade :=_dbcce .Get ("\u0044\u0065\u0073\u0074");_ffade !=nil {_ccgab .Dest =_fe .ResolveReference (_ffade );if !_ddgb ._feega {_cfbce :=_ddgb .traverseObjectData (_ccgab .Dest );if _cfbce !=nil {return nil ,_cfbce ;};};};if _cbff :=_dbcce .Get ("\u0041");
_cbff !=nil {_ccgab .A =_fe .ResolveReference (_cbff );if !_ddgb ._feega {_aafea :=_ddgb .traverseObjectData (_ccgab .A );if _aafea !=nil {return nil ,_aafea ;};};};if _aegg :=_dbcce .Get ("\u0053\u0045");_aegg !=nil {_ccgab .SE =nil ;};if _ecceef :=_dbcce .Get ("\u0043");
_ecceef !=nil {_ccgab .C =_fe .ResolveReference (_ecceef );};if _deccf :=_dbcce .Get ("\u0046");_deccf !=nil {_ccgab .F =_fe .ResolveReference (_deccf );};return _ccgab ,nil ;};func _bddg (_ffafb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ffafb }};


// ValidateSignatures validates digital signatures in the document.
func (_aabfb *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _aabfb .AcroForm ==nil {return nil ,nil ;};if _aabfb .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_bffbd *PdfSignature ;
_fbac *PdfField ;_bbacf SignatureHandler ;};var _ddaef []*sigFieldPair ;for _ ,_fgggbb :=range _aabfb .AcroForm .AllFields (){if _fgggbb .V ==nil {continue ;};if _beeega ,_bbfdaf :=_fe .GetDict (_fgggbb .V );_bbfdaf {if _fbgab ,_eeff :=_fe .GetNameVal (_beeega .Get ("\u0054\u0079\u0070\u0065"));
_eeff &&(_fbgab =="\u0053\u0069\u0067"||_fbgab =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_ccbcf ,_ebfcg :=_fe .GetIndirect (_fgggbb .V );if !_ebfcg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cdebg ,_adcgf :=_aabfb .newPdfSignatureFromIndirect (_ccbcf );if _adcgf !=nil {return nil ,_adcgf ;};var _eeeee SignatureHandler ;for _ ,_bgbaf :=range handlers {if _bgbaf .IsApplicable (_cdebg ){_eeeee =_bgbaf ;break ;};};
_ddaef =append (_ddaef ,&sigFieldPair {_bffbd :_cdebg ,_fbac :_fgggbb ,_bbacf :_eeeee });};};};var _egaeb []SignatureValidationResult ;for _ ,_dcbdfg :=range _ddaef {_gdfegf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_dcbdfg ._fbac }};
if _dcbdfg ._bbacf ==nil {_gdfegf .Errors =append (_gdfegf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_egaeb =append (_egaeb ,_gdfegf );continue ;};_ebcb ,_cdbcb :=_dcbdfg ._bbacf .NewDigest (_dcbdfg ._bffbd );
if _cdbcb !=nil {_gdfegf .Errors =append (_gdfegf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cdbcb .Error ());_egaeb =append (_egaeb ,_gdfegf );continue ;};_egfdf :=_dcbdfg ._bffbd .ByteRange ;if _egfdf ==nil {_gdfegf .Errors =append (_gdfegf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_egaeb =append (_egaeb ,_gdfegf );continue ;};for _faac :=0;_faac < _egfdf .Len ();_faac =_faac +2{_cbcfc ,_ :=_fe .GetNumberAsInt64 (_egfdf .Get (_faac ));_bbedb ,_ :=_fe .GetIntVal (_egfdf .Get (_faac +1));if _ ,_fbgfd :=_aabfb ._afgaf .Seek (_cbcfc ,_gd .SeekStart );
_fbgfd !=nil {return nil ,_fbgfd ;};_cabec :=make ([]byte ,_bbedb );if _ ,_bgfac :=_aabfb ._afgaf .Read (_cabec );_bgfac !=nil {return nil ,_bgfac ;};_ebcb .Write (_cabec );};var _gbbbb SignatureValidationResult ;if _aaebe ,_fbfga :=_dcbdfg ._bbacf .(SignatureHandlerDocMDP );
_fbfga {_gbbbb ,_cdbcb =_aaebe .ValidateWithOpts (_dcbdfg ._bffbd ,_ebcb ,SignatureHandlerDocMDPParams {Parser :_aabfb ._gabca });}else {_gbbbb ,_cdbcb =_dcbdfg ._bbacf .Validate (_dcbdfg ._bffbd ,_ebcb );};if _cdbcb !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cdbcb ,_dcbdfg ._bbacf );
_gbbbb .Errors =append (_gbbbb .Errors ,_cdbcb .Error ());};_gbbbb .Name =_dcbdfg ._bffbd .Name .Decoded ();_gbbbb .Reason =_dcbdfg ._bffbd .Reason .Decoded ();if _dcbdfg ._bffbd .M !=nil {_dfdec ,_feggdb :=NewPdfDate (_dcbdfg ._bffbd .M .String ());if _feggdb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feggdb );
_gbbbb .Errors =append (_gbbbb .Errors ,_feggdb .Error ());continue ;};_gbbbb .Date =_dfdec ;};_gbbbb .ContactInfo =_dcbdfg ._bffbd .ContactInfo .Decoded ();_gbbbb .Location =_dcbdfg ._bffbd .Location .Decoded ();_gbbbb .Fields =_gdfegf .Fields ;_egaeb =append (_egaeb ,_gbbbb );
};return _egaeb ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_egga .Lock ();defer _egga .Unlock ();_caab =title };func (_dgfga *PdfAcroForm )filteredFields (_bcfe FieldFilterFunc ,_bbdfd bool )[]*PdfField {if _dgfga ==nil {return nil ;};return _begdd (_dgfga .Fields ,_bcfe ,_bbdfd );
};func (_bcegg *DSS )generateHashMap (_gagbd []*_fe .PdfObjectStream )(map[string ]*_fe .PdfObjectStream ,error ){_egagf :=map[string ]*_fe .PdfObjectStream {};for _ ,_eeac :=range _gagbd {_gfbaf ,_dfac :=_fe .DecodeStream (_eeac );if _dfac !=nil {return nil ,_dfac ;
};_ecaf ,_dfac :=_bebdb (_gfbaf );if _dfac !=nil {return nil ,_dfac ;};_egagf [string (_ecaf )]=_eeac ;};return _egagf ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fe .PdfObject ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_bebag *PdfColorspaceDeviceN )ToPdfObject ()_fe .PdfObject {_feedg :=_fe .MakeArray (_fe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_feedg .Append (_bebag .ColorantNames );_feedg .Append (_bebag .AlternateSpace .ToPdfObject ());_feedg .Append (_bebag .TintTransform .ToPdfObject ());
if _bebag .Attributes !=nil {_feedg .Append (_bebag .Attributes .ToPdfObject ());};if _bebag ._affd !=nil {_bebag ._affd .PdfObject =_feedg ;return _bebag ._affd ;};return _feedg ;};func (_cfeedb *PdfWriter )addObjects (_daecc _fe .PdfObject )error {_df .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _abbad ,_fefed :=_daecc .(*_fe .PdfIndirectObject );_fefed {_df .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_daecc ,_abbad );_df .Log .Trace ("\u002d\u0020\u0025\u0073",_abbad .PdfObject );
if _cfeedb .addObject (_abbad ){_aggcd :=_cfeedb .addObjects (_abbad .PdfObject );if _aggcd !=nil {return _aggcd ;};};return nil ;};if _daebge ,_facba :=_daecc .(*_fe .PdfObjectStream );_facba {_df .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_daecc ,_daecc );
if _cfeedb .addObject (_daebge ){_aedfb :=_cfeedb .addObjects (_daebge .PdfObjectDictionary );if _aedfb !=nil {return _aedfb ;};};return nil ;};if _bdfbb ,_afbccg :=_daecc .(*_fe .PdfObjectDictionary );_afbccg {_df .Log .Trace ("\u0044\u0069\u0063\u0074");
_df .Log .Trace ("\u002d\u0020\u0025\u0073",_daecc );for _ ,_dbabd :=range _bdfbb .Keys (){_adbcc :=_bdfbb .Get (_dbabd );if _beecd ,_beadd :=_adbcc .(*_fe .PdfObjectReference );_beadd {_adbcc =_beecd .Resolve ();_bdfbb .Set (_dbabd ,_adbcc );};if _dbabd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _caeb :=_cfeedb .addObjects (_adbcc );
_caeb !=nil {return _caeb ;};}else {if _ ,_effbc :=_adbcc .(*_fe .PdfObjectNull );_effbc {continue ;};if _caeeg :=_cfeedb .hasObject (_adbcc );!_caeeg {_df .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_adbcc ,_adbcc ,_adbcc );
_cfeedb ._ebgca [_adbcc ]=append (_cfeedb ._ebgca [_adbcc ],_bdfbb );};};};return nil ;};if _edbde ,_bacbb :=_daecc .(*_fe .PdfObjectArray );_bacbb {_df .Log .Trace ("\u0041\u0072\u0072a\u0079");_df .Log .Trace ("\u002d\u0020\u0025\u0073",_daecc );if _edbde ==nil {return _bbc .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gadbgd ,_abdgb :=range _edbde .Elements (){if _bafec ,_bgcdab :=_abdgb .(*_fe .PdfObjectReference );_bgcdab {_abdgb =_bafec .Resolve ();_edbde .Set (_gadbgd ,_abdgb );};if _aaecf :=_cfeedb .addObjects (_abdgb );_aaecf !=nil {return _aaecf ;};};return nil ;
};if _ ,_decbf :=_daecc .(*_fe .PdfObjectReference );_decbf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_daecc );
return _bbc .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fe .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ddcc *PdfColorspaceLab )ToPdfObject ()_fe .PdfObject {_ffaf :=_fe .MakeArray ();_ffaf .Append (_fe .MakeName ("\u004c\u0061\u0062"));_bfaeb :=_fe .MakeDict ();if _ddcc .WhitePoint !=nil {_bafg :=_fe .MakeArray (_fe .MakeFloat (_ddcc .WhitePoint [0]),_fe .MakeFloat (_ddcc .WhitePoint [1]),_fe .MakeFloat (_ddcc .WhitePoint [2]));
_bfaeb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bafg );}else {_df .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ddcc .BlackPoint !=nil {_gcbd :=_fe .MakeArray (_fe .MakeFloat (_ddcc .BlackPoint [0]),_fe .MakeFloat (_ddcc .BlackPoint [1]),_fe .MakeFloat (_ddcc .BlackPoint [2]));_bfaeb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gcbd );
};if _ddcc .Range !=nil {_aec :=_fe .MakeArray (_fe .MakeFloat (_ddcc .Range [0]),_fe .MakeFloat (_ddcc .Range [1]),_fe .MakeFloat (_ddcc .Range [2]),_fe .MakeFloat (_ddcc .Range [3]));_bfaeb .Set ("\u0052\u0061\u006eg\u0065",_aec );};_ffaf .Append (_bfaeb );
if _ddcc ._bbgeg !=nil {_ddcc ._bbgeg .PdfObject =_ffaf ;return _ddcc ._bbgeg ;};return _ffaf ;};func _cccdc ()string {_cgga :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _gcaag _ee .Buffer ;for _dgac :=0;_dgac < 6;_dgac ++{_gcaag .WriteRune (rune (_cgga [_ffd .Intn (len (_cgga ))]));};return _gcaag .String ();};func _gebdg (_dbac *_fe .PdfIndirectObject )(*PdfOutline ,error ){_bgdb ,_ddfd :=_dbac .PdfObject .(*_fe .PdfObjectDictionary );
if !_ddfd {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fafbb :=NewPdfOutline ();if _ebfab :=_bgdb .Get ("\u0054\u0079\u0070\u0065");
_ebfab !=nil {_abbdc ,_bagcf :=_ebfab .(*_fe .PdfObjectName );if _bagcf {if *_abbdc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_abbdc );
};};};if _badgb :=_bgdb .Get ("\u0043\u006f\u0075n\u0074");_badgb !=nil {_gedec ,_efdgde :=_fe .GetNumberAsInt64 (_badgb );if _efdgde !=nil {return nil ,_efdgde ;};_fafbb .Count =&_gedec ;};return _fafbb ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_agdg *PdfPageResources )HasPatternByName (keyName _fe .PdfObjectName )bool {_ ,_bdfad :=_agdg .GetPatternByName (keyName );return _bdfad ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gcaae *PdfFont )GetCharMetrics (code _cbg .CharCode )(CharMetrics ,bool ){var _fgbad _ag .CharMetrics ;switch _efcb :=_gcaae ._aeacd .(type ){case *pdfFontSimple :if _fffg ,_bbabd :=_efcb .GetCharMetrics (code );_bbabd {return _fffg ,_bbabd ;};case *pdfFontType0 :if _cadge ,_dgda :=_efcb .GetCharMetrics (code );
_dgda {return _cadge ,_dgda ;};case *pdfCIDFontType0 :if _bcdec ,_eabf :=_efcb .GetCharMetrics (code );_eabf {return _bcdec ,_eabf ;};case *pdfCIDFontType2 :if _fdbeb ,_eegcc :=_efcb .GetCharMetrics (code );_eegcc {return _fdbeb ,_eegcc ;};case *pdfFontType3 :if _fdbfc ,_dbdg :=_efcb .GetCharMetrics (code );
_dbdg {return _fdbfc ,_dbdg ;};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gcaae ._aeacd );
return _fgbad ,false ;};if _dgcd ,_befde :=_gcaae .GetFontDescriptor ();_befde ==nil &&_dgcd !=nil {return _ag .CharMetrics {Wx :_dgcd ._gdeda },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gcaae );
return _fgbad ,false ;};func _cddaf (_daacf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_daacf }};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dfa *PdfAnnotationWidget )Field ()*PdfField {return _dfa ._feg };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_efca *PdfPage )AppendContentStream (contentStr string )error {_ffgbc ,_gcfb :=_efca .GetContentStreams ();if _gcfb !=nil {return _gcfb ;};if len (_ffgbc )==0{_ffgbc =[]string {contentStr };return _efca .SetContentStreams (_ffgbc ,_fe .NewFlateEncoder ());
};var _aebdg _ee .Buffer ;_aebdg .WriteString (_ffgbc [len (_ffgbc )-1]);_aebdg .WriteString ("\u000a");_aebdg .WriteString (contentStr );_ffgbc [len (_ffgbc )-1]=_aebdg .String ();return _efca .SetContentStreams (_ffgbc ,_fe .NewFlateEncoder ());};

// SetCenterWindow sets the value of the centerWindow flag.
func (_cdegbg *ViewerPreferences )SetCenterWindow (centerWindow bool ){_cdegbg ._bcefb =&centerWindow };

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eafce *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_baaff ,_edfed :=_fe .GetDict (_eafce ._efaac .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_edfed {_baaff =_fe .MakeDict ();_eafce ._efaac .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_baaff );
};_dcdfbfa ,_edfed :=_fe .GetDict (_baaff .Get (_fe .PdfObjectName (extName )));if !_edfed {_dcdfbfa =_fe .MakeDict ();_baaff .Set (_fe .PdfObjectName (extName ),_dcdfbfa );};if _ggbdff ,_ :=_fe .GetNameVal (_dcdfbfa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ggbdff !=baseVersion {_dcdfbfa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fe .MakeName (baseVersion ));};if _aabbb ,_ :=_fe .GetIntVal (_dcdfbfa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_aabbb !=extLevel {_dcdfbfa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fe .MakeInteger (int64 (extLevel )));};};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gc .PSProgram ;_dcbcc *_gc .PSExecutor ;_fggad []byte ;_acegb *_fe .PdfObjectStream ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_dcee *PdfPageResources )GetContainingPdfObject ()_fe .PdfObject {return _dcee ._fdcdc };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_efbc pdfCIDFontType0 )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){return _ag .CharMetrics {Wx :_efbc ._dcad },true ;};

// C returns the value of the C component of the color.
func (_ceeb *PdfColorCalRGB )C ()float64 {return _ceeb [2]};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ffe :=NewPdfAction ();_cd :=&PdfActionThread {};_cd .PdfAction =_ffe ;_ffe .SetContext (_cd );return _cd ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cgbde *PdfPageResourcesColorspaces )Set (key _fe .PdfObjectName ,val PdfColorspace ){if _ ,_bacbg :=_cgbde .Colorspaces [string (key )];!_bacbg {_cgbde .Names =append (_cgbde .Names ,string (key ));};_cgbde .Colorspaces [string (key )]=val ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_fgbd *_fe .PdfObjectDictionary ;_fbg *_fe .PdfIndirectObject ;};func (_aagad *PdfReader )newPdfAcroFormFromDict (_aacdg *_fe .PdfIndirectObject ,_gdfeg *_fe .PdfObjectDictionary )(*PdfAcroForm ,error ){_ffgd :=NewPdfAcroForm ();
if _aacdg !=nil {_ffgd ._ggdb =_aacdg ;_aacdg .PdfObject =_fe .MakeDict ();};if _cbbgd :=_gdfeg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbbgd !=nil &&!_fe .IsNullObject (_cbbgd ){_abcfg ,_afae :=_fe .GetArray (_cbbgd );if !_afae {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbbgd );
};var _egagfa []*PdfField ;for _ ,_ddce :=range _abcfg .Elements (){_dfag ,_gfdef :=_fe .GetIndirect (_ddce );if !_gfdef {if _ ,_adbb :=_ddce .(*_fe .PdfObjectNull );_adbb {_df .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_df .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ddce );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fgbb ,_aacc :=_aagad .newPdfFieldFromIndirectObject (_dfag ,nil );
if _aacc !=nil {return nil ,_aacc ;};_df .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fgbb );_egagfa =append (_egagfa ,_fgbb );};_ffgd .Fields =&_egagfa ;};if _agccb :=_gdfeg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_agccb !=nil {_dgcgd ,_dedge :=_fe .GetBool (_agccb );if _dedge {_ffgd .NeedAppearances =_dgcgd ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_agccb );
};};if _gbbad :=_gdfeg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gbbad !=nil {_cagegg ,_dgcfda :=_fe .GetInt (_gbbad );if _dgcfda {_ffgd .SigFlags =_cagegg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbbad );
};};if _edba :=_gdfeg .Get ("\u0043\u004f");_edba !=nil {_dacg ,_fead :=_fe .GetArray (_edba );if _fead {_ffgd .CO =_dacg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edba );
};};if _cgdeg :=_gdfeg .Get ("\u0044\u0052");_cgdeg !=nil {if _gbee ,_ggaeg :=_fe .GetDict (_cgdeg );_ggaeg {_ddfeb ,_eafec :=NewPdfPageResourcesFromDict (_gbee );if _eafec !=nil {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_eafec );
return nil ,_eafec ;};_ffgd .DR =_ddfeb ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cgdeg );};};if _gaeae :=_gdfeg .Get ("\u0044\u0041");
_gaeae !=nil {_dgeg ,_gcace :=_fe .GetString (_gaeae );if _gcace {_ffgd .DA =_dgeg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gaeae );
};};if _dfdga :=_gdfeg .Get ("\u0051");_dfdga !=nil {_ecbda ,_aeca :=_fe .GetInt (_dfdga );if _aeca {_ffgd .Q =_ecbda ;}else {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dfdga );
};};if _fedag :=_gdfeg .Get ("\u0058\u0046\u0041");_fedag !=nil {_ffgd .XFA =_fedag ;};if _dgfa :=_gdfeg .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_dgfa !=nil {_ffgd .ADBEEchoSign =_dgfa ;};_ffgd .ToPdfObject ();
return _ffgd ,nil ;};func _ggfae (_egded *_fe .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dcaf :=PdfShadingType2 {};_febb :=_egded .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _febb ==nil {_df .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ddcbg ,_feba :=_febb .(*_fe .PdfObjectArray );if !_feba {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_febb );
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddcbg .Len ()!=4{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ddcbg .Len ());
return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dcaf .Coords =_ddcbg ;if _bbaag :=_egded .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bbaag !=nil {_bbaag =_fe .TraceToDirectObject (_bbaag );
_ffbcc ,_dgdee :=_bbaag .(*_fe .PdfObjectArray );if !_dgdee {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbaag );return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dcaf .Domain =_ffbcc ;};_febb =_egded .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _febb ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dcaf .Function =[]PdfFunction {};if _egfebf ,_degab :=_febb .(*_fe .PdfObjectArray );_degab {for _ ,_gfbb :=range _egfebf .Elements (){_cbbb ,_eddca :=_cebb (_gfbb );if _eddca !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eddca );
return nil ,_eddca ;};_dcaf .Function =append (_dcaf .Function ,_cbbb );};}else {_dabbb ,_bgfa :=_cebb (_febb );if _bgfa !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgfa );
return nil ,_bgfa ;};_dcaf .Function =append (_dcaf .Function ,_dabbb );};if _eeeba :=_egded .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eeeba !=nil {_eeeba =_fe .TraceToDirectObject (_eeeba );_gcaec ,_baeca :=_eeeba .(*_fe .PdfObjectArray );if !_baeca {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeeba );
return nil ,_fe .ErrTypeError ;};if _gcaec .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcaec .Len ());return nil ,ErrInvalidAttribute ;
};_dcaf .Extend =_gcaec ;};return &_dcaf ,nil ;};func (_gfddc *fontFile )parseASCIIPart (_fgebe []byte )error {if len (_fgebe )< 2||string (_fgebe [:2])!="\u0025\u0021"{return _bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_bccac ,_cbfd ,_faaag :=_egcg (_fgebe );if _faaag !=nil {return _faaag ;};_gdddb :=_gebff (_bccac );_gfddc ._befce =_gdddb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gfddc ._befce ==""{_df .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cbfd !=""{_eecdf ,_bffbbe :=_begca (_cbfd );if _bffbbe !=nil {return _bffbbe ;};_cfecfd ,_bffbbe :=_cbg .NewCustomSimpleTextEncoder (_eecdf ,nil );if _bffbbe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bffbbe );
return nil ;};_gfddc ._fcdbad =_cfecfd ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cde *PdfAnnotationText )ToPdfObject ()_fe .PdfObject {_cde .PdfAnnotation .ToPdfObject ();_bbag :=_cde ._efg ;_fabg :=_bbag .PdfObject .(*_fe .PdfObjectDictionary );if _cde .PdfAnnotationMarkup !=nil {_cde .PdfAnnotationMarkup .appendToPdfDictionary (_fabg );
};_fabg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0054\u0065\u0078\u0074"));_fabg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cde .Open );_fabg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cde .Name );_fabg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cde .State );
_fabg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cde .StateModel );return _bbag ;};

// SetViewClip sets the value of the viewClip.
func (_eaded *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_eaded ._ecebe =viewClip };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ccbg *PdfPageResources )GetShadingByName (keyName _fe .PdfObjectName )(*PdfShading ,bool ){if _ccbg .Shading ==nil {return nil ,false ;};_gcccd ,_gaaf :=_fe .TraceToDirectObject (_ccbg .Shading ).(*_fe .PdfObjectDictionary );if !_gaaf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccbg .Shading );
return nil ,false ;};if _cacfe :=_gcccd .Get (keyName );_cacfe !=nil {_affec ,_gbdgc :=_gggbc (_cacfe );if _gbdgc !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gbdgc );
return nil ,false ;};return _affec ,true ;};return nil ,false ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_cbcf *PdfInfo )GetCustomInfo (name string )*_fe .PdfObjectString {var _ddbe *_fe .PdfObjectString ;if _cbcf ._bdgg ==nil {return _ddbe ;};if _eebce ,_gbbc :=_cbcf ._bdgg .Get (*_fe .MakeName (name )).(*_fe .PdfObjectString );_gbbc {_ddbe =_eebce ;
};return _ddbe ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_gada *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _gada .Range };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ggb :=NewPdfAnnotation ();_eef :=&PdfAnnotationProjection {};_eef .PdfAnnotation =_ggb ;_eef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggb .SetContext (_eef );return _eef ;};

// ToPdfObject implements interface PdfModel.
func (_ced *PdfActionNamed )ToPdfObject ()_fe .PdfObject {_ced .PdfAction .ToPdfObject ();_dde :=_ced ._ea ;_bcd :=_dde .PdfObject .(*_fe .PdfObjectDictionary );_bcd .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeNamed )));_bcd .SetIfNotNil ("\u004e",_ced .N );
return _dde ;};func (_efage *PdfWriter )setDocInfo (_cecff _fe .PdfObject ){if _efage .hasObject (_efage ._fefff ){delete (_efage ._debbc ,_efage ._fefff );delete (_efage ._gdcbbb ,_efage ._fefff );for _adcdd ,_gcfedd :=range _efage ._dbbcd {if _gcfedd ==_efage ._fefff {copy (_efage ._dbbcd [_adcdd :],_efage ._dbbcd [_adcdd +1:]);
_efage ._dbbcd [len (_efage ._dbbcd )-1]=nil ;_efage ._dbbcd =_efage ._dbbcd [:len (_efage ._dbbcd )-1];break ;};};};_gffac :=_fe .PdfIndirectObject {};_gffac .PdfObject =_cecff ;_efage ._fefff =&_gffac ;_efage .addObject (&_gffac );};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bedca *PdfWriter )SetNameDictionary (names _fe .PdfObject )error {if names ==nil {return nil ;};_bedca ._cbbce =_dfdbb (names );_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bedca ._efaac .Set ("\u004e\u0061\u006de\u0073",names );return _bedca .addObjects (names );};

// B returns the value of the blue component of the color.
func (_defag *PdfColorDeviceRGB )B ()float64 {return _defag [2]};

// AllFields returns a flattened list of all fields in the form.
func (_aefg *PdfAcroForm )AllFields ()[]*PdfField {if _aefg ==nil {return nil ;};var _cadcd []*PdfField ;if _aefg .Fields !=nil {for _ ,_abea :=range *_aefg .Fields {_cadcd =append (_cadcd ,_febec (_abea )...);};};return _cadcd ;};func (_ege *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dadag *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_ggfd *PdfAnnotationPrinterMark )ToPdfObject ()_fe .PdfObject {_ggfd .PdfAnnotation .ToPdfObject ();_gcgc :=_ggfd ._efg ;_cfbf :=_gcgc .PdfObject .(*_fe .PdfObjectDictionary );_cfbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_cfbf .SetIfNotNil ("\u004d\u004e",_ggfd .MN );return _gcgc ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_deac :=NewPdfAnnotation ();_dad :=&PdfAnnotationText {};_dad .PdfAnnotation =_deac ;_dad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deac .SetContext (_dad );return _dad ;};func (_aaedg *pdfFontType3 )baseFields ()*fontCommon {return &_aaedg .fontCommon };


// PartialName returns the partial name of the field.
func (_cfbae *PdfField )PartialName ()string {_ecadd :="";if _cfbae .T !=nil {_ecadd =_cfbae .T .Decoded ();}else {_df .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _ecadd ;};func _efbg (_faae StdFontName )(pdfFontSimple ,error ){_gcbb ,_eegc :=_ag .NewStdFontByName (_faae );if !_eegc {return pdfFontSimple {},ErrFontNotSupported ;};_eede :=_faaf (_gcbb );return _eede ,nil ;};func (_fgea *PdfReader )newPdfAnnotationStampFromDict (_fbbca *_fe .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_gec :=PdfAnnotationStamp {};
_ffed ,_bcfb :=_fgea .newPdfAnnotationMarkupFromDict (_fbbca );if _bcfb !=nil {return nil ,_bcfb ;};_gec .PdfAnnotationMarkup =_ffed ;_gec .Name =_fbbca .Get ("\u004e\u0061\u006d\u0065");return &_gec ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_edcff *PdfPageResources )GetFontByName (keyName _fe .PdfObjectName )(_fe .PdfObject ,bool ){if _edcff .Font ==nil {return nil ,false ;};_dadbd ,_bdgeee :=_fe .TraceToDirectObject (_edcff .Font ).(*_fe .PdfObjectDictionary );if !_bdgeee {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_edcff .Font ));
return nil ,false ;};if _gabe :=_dadbd .Get (keyName );_gabe !=nil {return _gabe ,true ;};return nil ,false ;};func (_efdea *PdfReader )loadPerms ()(*Permissions ,error ){if _eefbdf :=_efdea ._bbfec .Get ("\u0050\u0065\u0072m\u0073");_eefbdf !=nil {if _bbfdc ,_dgecc :=_fe .GetDict (_eefbdf );
_dgecc {_acfgc :=_bbfdc .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _acfgc ==nil {return nil ,nil ;};if _bcfeg ,_ccfae :=_fe .GetIndirect (_acfgc );_ccfae {_dcbga ,_baccg :=_efdea .newPdfSignatureFromIndirect (_bcfeg );if _baccg !=nil {return nil ,_baccg ;
};return NewPermissions (_dcbga ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};func (_cadbf *LTV )enable (_gfffd ,_eacfb []*_ffc .Certificate ,_cbeef string )error {_eccdf ,_fdfc ,_dcbgd :=_cadbf .buildCertChain (_gfffd ,_eacfb );if _dcbgd !=nil {return _dcbgd ;};_gbgb ,_dcbgd :=_cadbf .getCerts (_eccdf );if _dcbgd !=nil {return _dcbgd ;
};var _dfae ,_fbag [][]byte ;if _cadbf .OCSPClient !=nil {_dfae ,_dcbgd =_cadbf .getOCSPs (_eccdf ,_fdfc );if _dcbgd !=nil {return _dcbgd ;};};if _cadbf .CRLClient !=nil {_fbag ,_dcbgd =_cadbf .getCRLs (_eccdf );if _dcbgd !=nil {return _dcbgd ;};};_eaea :=_cadbf ._abbd ;
_adadf ,_dcbgd :=_eaea .AddCerts (_gbgb );if _dcbgd !=nil {return _dcbgd ;};_gegc ,_dcbgd :=_eaea .AddOCSPs (_dfae );if _dcbgd !=nil {return _dcbgd ;};_baef ,_dcbgd :=_eaea .AddCRLs (_fbag );if _dcbgd !=nil {return _dcbgd ;};if _cbeef !=""{_eaea .VRI [_cbeef ]=&VRI {Cert :_adadf ,OCSP :_gegc ,CRL :_baef };
};_cadbf ._eacb .SetDSS (_eaea );return nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_fe .PdfObjectArray ;ExtGState _fe .PdfObject ;};func (_eccad *pdfCIDFontType2 )baseFields ()*fontCommon {return &_eccad .fontCommon };

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_egga .Lock ();defer _egga .Unlock ();_gecdg =keywords };func (_eafae *PdfWriter )makeOffSetReference (_becfa int64 ){_ebdgfd :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_becfa );
_eafae .writeString (_ebdgfd );_eafae .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fe .PdfObject ;IsMap _fe .PdfObject ;};

// Val returns the value of the color.
func (_bcaec *PdfColorCalGray )Val ()float64 {return float64 (*_bcaec )};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_eggbd *PdfPageResources )HasShadingByName (keyName _fe .PdfObjectName )bool {_ ,_ebfbf :=_eggbd .GetShadingByName (keyName );return _ebfbf ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fcbbg *PdfOutlineItem )GetContainingPdfObject ()_fe .PdfObject {return _fcbbg ._cfgag };

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_acee *PdfFont )ToPdfObject ()_fe .PdfObject {if _acee ._aeacd ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fe .MakeNull ();
};return _acee ._aeacd .ToPdfObject ();};

// Write writes out the PDF.
func (_begfd *PdfWriter )Write (writer _gd .Writer )error {_df .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _ccbac ,_caec :=writer .(*_dc .File );_caec {_begfd .SetFileName (_ccbac .Name ());};_fccf :=_begfd .checkLicense ();if _fccf !=nil {return _fccf ;
};if _fccf =_begfd .writeOutlines ();_fccf !=nil {return _fccf ;};if _fccf =_begfd .writeAcroFormFields ();_fccf !=nil {return _fccf ;};if _fccf =_begfd .writeNamesDictionary ();_fccf !=nil {return _fccf ;};_begfd .checkPendingObjects ();if _fccf =_begfd .writeOutputIntents ();
_fccf !=nil {return _fccf ;};_begfd .setCatalogVersion ();_begfd .copyObjects ();if _fccf =_begfd .optimize ();_fccf !=nil {return _fccf ;};if _fccf =_begfd .optimizeDocument ();_fccf !=nil {return _fccf ;};var _fdffd _f .Hash ;if _begfd ._gaeb {_fdffd =_ef .New ();
writer =_gd .MultiWriter (_fdffd ,writer );};_begfd .setWriter (writer );_ccddc :=_begfd .checkCrossReferenceStream ();_bcaac ,_ccddc :=_begfd .mapObjectStreams (_ccddc );_begfd .adjustXRefAffectedVersion (_ccddc );_begfd .writeDocumentVersion ();_begfd .updateObjectNumbers ();
_begfd .writeObjects ();if _fccf =_begfd .writeObjectsInStreams (_bcaac );_fccf !=nil {return _fccf ;};_gegg :=_begfd ._acfae ;var _fgcdf int ;for _fbaege :=range _begfd ._bdaaa {if _fbaege > _fgcdf {_fgcdf =_fbaege ;};};if _begfd ._gaeb {if _fccf =_begfd .setHashIDs (_fdffd );
_fccf !=nil {return _fccf ;};};if _ccddc {if _fccf =_begfd .writeXRefStreams (_fgcdf ,_gegg );_fccf !=nil {return _fccf ;};}else {_begfd .writeTrailer (_fgcdf );};_begfd .makeOffSetReference (_gegg );if _fccf =_begfd .flushWriter ();_fccf !=nil {return _fccf ;
};return nil ;};

// RemveTabOrder removes the tab order for the page.
func (_cbcb *PdfPage )RemoveTabOrder (){_cbcb .Tabs =nil };func _adbdg (_debb _fe .PdfObject )[]*_fe .PdfObjectStream {if _debb ==nil {return nil ;};_gdfa ,_ffcgc :=_fe .GetArray (_debb );if !_ffcgc ||_gdfa .Len ()==0{return nil ;};_dcaed :=make ([]*_fe .PdfObjectStream ,0,_gdfa .Len ());
for _ ,_egfeg :=range _gdfa .Elements (){if _afbdc ,_bccce :=_fe .GetStream (_egfeg );_bccce {_dcaed =append (_dcaed ,_afbdc );};};return _dcaed ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_cfgdb *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_bfcf :=map[*PdfAnnotation ]bool {};_eefcd ,_dace :=_cfgdb .GetAnnotations ();if _dace !=nil {return _dace ;};_dbbe :=false ;for _ ,_ggbd :=range _eefcd {if opts .AnnotFilterFunc !=nil {_bfcf [_ggbd ]=opts .AnnotFilterFunc (_ggbd );
}else {_bfcf [_ggbd ]=true ;};if _bfcf [_ggbd ]{_dbbe =true ;};};if !_dbbe {return nil ;};return _cfgdb .flattenFieldsWithOpts (appgen ,opts ,_bfcf );};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_ffdbe *PdfSignature ,_gceg Hasher ,_gfgbe SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// SetFillImage attach a model.Image to push button.
func (_cgag *PdfFieldButton )SetFillImage (image *Image ){if _cgag .IsPush (){_cgag ._acag =image ;};};func (_dcb *PdfReader )newPdfActionJavaScriptFromDict (_dcbf *_fe .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dcbf .Get ("\u004a\u0053")},nil ;
};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gfcc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_gfcc .NumInputs {_df .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _gfcc ._bddgb ==nil {_bbaaf :=_gfcc .processSamples ();if _bbaaf !=nil {return nil ,_bbaaf ;};};_bfgc :=_gfcc .Encode ;if _bfgc ==nil {_bfgc =[]float64 {};
for _efedf :=0;_efedf < len (_gfcc .Size );_efedf ++{_bfgc =append (_bfgc ,0);_bfgc =append (_bfgc ,float64 (_gfcc .Size [_efedf ]-1));};};_cbafb :=_gfcc .Decode ;if _cbafb ==nil {_cbafb =_gfcc .Range ;};_gfcbf :=make ([]int ,len (x ));for _cacc :=0;_cacc < len (x );
_cacc ++{_gggdb :=x [_cacc ];_gaaba :=_dd .Min (_dd .Max (_gggdb ,_gfcc .Domain [2*_cacc ]),_gfcc .Domain [2*_cacc +1]);_dddgbd :=_af .LinearInterpolate (_gaaba ,_gfcc .Domain [2*_cacc ],_gfcc .Domain [2*_cacc +1],_bfgc [2*_cacc ],_bfgc [2*_cacc +1]);_dgef :=_dd .Min (_dd .Max (_dddgbd ,0),float64 (_gfcc .Size [_cacc ]-1));
_ffbaa :=int (_dd .Floor (_dgef +0.5));if _ffbaa < 0{_ffbaa =0;}else if _ffbaa > _gfcc .Size [_cacc ]{_ffbaa =_gfcc .Size [_cacc ]-1;};_gfcbf [_cacc ]=_ffbaa ;};_eabb :=_gfcbf [0];for _abge :=1;_abge < _gfcc .NumInputs ;_abge ++{_ggfc :=_gfcbf [_abge ];
for _fbfbd :=0;_fbfbd < _abge ;_fbfbd ++{_ggfc *=_gfcc .Size [_fbfbd ];};_eabb +=_ggfc ;};_eabb *=_gfcc .NumOutputs ;var _eabfg []float64 ;for _dadac :=0;_dadac < _gfcc .NumOutputs ;_dadac ++{_aegd :=_eabb +_dadac ;if _aegd >=len (_gfcc ._bddgb ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dabgb :=_gfcc ._bddgb [_aegd ];_bbee :=_af .LinearInterpolate (float64 (_dabgb ),0,_dd .Pow (2,float64 (_gfcc .BitsPerSample )),_cbafb [2*_dadac ],_cbafb [2*_dadac +1]);_cbcedf :=_dd .Min (_dd .Max (_bbee ,_gfcc .Range [2*_dadac ]),_gfcc .Range [2*_dadac +1]);
_eabfg =append (_eabfg ,_cbcedf );};return _eabfg ,nil ;};func _begca (_abfff string )(map[_cbg .CharCode ]_cbg .GlyphName ,error ){_ggaf :=_bf .Split (_abfff ,"\u000a");_faeee :=make (map[_cbg .CharCode ]_cbg .GlyphName );for _ ,_aeefg :=range _ggaf {_ccedd :=_abcbb .FindStringSubmatch (_aeefg );
if _ccedd ==nil {continue ;};_geece ,_defb :=_ccedd [1],_ccedd [2];_bfbd ,_eeag :=_bb .Atoi (_geece );if _eeag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_aeefg );
return nil ,_fe .ErrTypeError ;};_faeee [_cbg .CharCode (_bfbd )]=_cbg .GlyphName (_defb );};_df .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_faeee );
return _faeee ,nil ;};func (_aabbbb *PdfWriter )writeOutlines ()error {if _aabbbb ._ccbce ==nil {return nil ;};_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_aabbbb ._ccbce );_fcgd :=_aabbbb ._ccbce .ToPdfObject ();
_df .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fcgd ,_fcgd ,_fcgd );_aabbbb ._efaac .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fcgd );
_ceggc :=_aabbbb .addObjects (_fcgd );if _ceggc !=nil {return _ceggc ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfActionURI )ToPdfObject ()_fe .PdfObject {_eg .PdfAction .ToPdfObject ();_caf :=_eg ._ea ;_ffee :=_caf .PdfObject .(*_fe .PdfObjectDictionary );_ffee .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeURI )));_ffee .SetIfNotNil ("\u0055\u0052\u0049",_eg .URI );
_ffee .SetIfNotNil ("\u0049\u0073\u004da\u0070",_eg .IsMap );return _caf ;};func _cbage (_dcfgc _fe .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dbgbf :=&PdfPageResourcesColorspaces {};if _bebbc ,_gdcd :=_dcfgc .(*_fe .PdfIndirectObject );_gdcd {_dbgbf ._beeeg =_bebbc ;
_dcfgc =_bebbc .PdfObject ;};_bfdceg ,_bdeaa :=_fe .GetDict (_dcfgc );if !_bdeaa {return nil ,_bbc .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dbgbf .Names =[]string {};
_dbgbf .Colorspaces =map[string ]PdfColorspace {};for _ ,_efgf :=range _bfdceg .Keys (){_acadg :=_bfdceg .Get (_efgf );_dbgbf .Names =append (_dbgbf .Names ,string (_efgf ));_fgbbfg ,_cdegg :=NewPdfColorspaceFromPdfObject (_acadg );if _cdegg !=nil {return nil ,_cdegg ;
};_dbgbf .Colorspaces [string (_efgf )]=_fgbbfg ;};return _dbgbf ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_ceggf :=&PdfFilespec {};_ceggf ._ccdd =_fe .MakeIndirectObject (_fe .MakeDict ());_ceggf .Desc =_fe .MakeString (file .Description );_ceggf .EF =file .ToPdfObject ();_ceggf .F =_fe .MakeString (file .Name );
_ceggf .UF =_fe .MakeEncodedString (file .Name ,true );_bgbe :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_bgbe ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_bgbe ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_bgbe ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_bgbe ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_ceggf .AFRelationship =_fe .MakeName (_bgbe );return _ceggf ;
};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_dgcfc *PdfFont )GetCIDToGIDMapObject ()_fe .PdfObject {_bbbga ,_fddc :=_dgcfc ._aeacd .(*pdfCIDFontType2 );if _fddc {return _bbbga .CIDToGIDMap ;};return nil ;};

// WriteString outputs the object as it is to be written to file.
func (_cfacbb *pdfSignDictionary )WriteString ()string {_cfacbb ._aaabg =0;_cfacbb ._afbfg =0;_cfacbb ._faffab =0;_cfacbb ._eadfg =0;_fedcd :=_ee .NewBuffer (nil );_fedcd .WriteString ("\u003c\u003c");for _ ,_egadg :=range _cfacbb .Keys (){_bgcf :=_cfacbb .Get (_egadg );
switch _egadg {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fedcd .WriteString (_egadg .WriteString ());_fedcd .WriteString ("\u0020");_cfacbb ._faffab =_fedcd .Len ();_fedcd .WriteString (_bgcf .WriteString ());_fedcd .WriteString ("\u0020");_cfacbb ._eadfg =_fedcd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fedcd .WriteString (_egadg .WriteString ());_fedcd .WriteString ("\u0020");_cfacbb ._aaabg =_fedcd .Len ();_fedcd .WriteString (_bgcf .WriteString ());_fedcd .WriteString ("\u0020");_cfacbb ._afbfg =_fedcd .Len ()-1;
default:_fedcd .WriteString (_egadg .WriteString ());_fedcd .WriteString ("\u0020");_fedcd .WriteString (_bgcf .WriteString ());};};_fedcd .WriteString ("\u003e\u003e");return _fedcd .String ();};func _bbbbe (_dfcc _fe .PdfObject )(map[_cbg .CharCode ]float64 ,error ){if _dfcc ==nil {return nil ,nil ;
};_cdeb ,_dbbg :=_fe .GetArray (_dfcc );if !_dbbg {return nil ,nil ;};_adccd :=map[_cbg .CharCode ]float64 {};_caffc :=_cdeb .Len ();for _edbg :=0;_edbg < _caffc -1;_edbg ++{_acceb :=_fe .TraceToDirectObject (_cdeb .Get (_edbg ));_edbfd ,_eeacc :=_fe .GetIntVal (_acceb );
if !_eeacc {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_edbg ,_acceb );};_edbg ++;if _edbg > _caffc -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cdeb );
};_cdcf :=_fe .TraceToDirectObject (_cdeb .Get (_edbg ));switch _cdcf .(type ){case *_fe .PdfObjectArray :_dgae ,_ :=_fe .GetArray (_cdcf );if _ecgcb ,_gffb :=_dgae .ToFloat64Array ();_gffb ==nil {for _aeefa :=0;_aeefa < len (_ecgcb );_aeefa ++{_adccd [_cbg .CharCode (_edbfd +_aeefa )]=_ecgcb [_aeefa ];
};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_edbg ,_cdcf );};case *_fe .PdfObjectInteger :_bbbge ,_gbced :=_fe .GetIntVal (_cdcf );
if !_gbced {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_edbg ,_cdcf );};_edbg ++;if _edbg > _caffc -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cdeb );
};_edace :=_cdeb .Get (_edbg );_daef ,_aabg :=_fe .GetNumberAsFloat (_edace );if _aabg !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_edbg ,_edace );
};for _ebabd :=_edbfd ;_ebabd <=_bbbge ;_ebabd ++{_adccd [_cbg .CharCode (_ebabd )]=_daef ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_edbg ,_cdcf );
};};return _adccd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfff *PdfAnnotationSound )ToPdfObject ()_fe .PdfObject {_dfff .PdfAnnotation .ToPdfObject ();_ddcb :=_dfff ._efg ;_geb :=_ddcb .PdfObject .(*_fe .PdfObjectDictionary );_dfff .PdfAnnotationMarkup .appendToPdfDictionary (_geb );_geb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u006f\u0075n\u0064"));
_geb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dfff .Sound );_geb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfff .Name );return _ddcb ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_aggfgd *PdfReader )GetCatalogMarkInfo ()(_fe .PdfObject ,bool ){if _aggfgd ._bbfec ==nil {return nil ,false ;};_ddba :=_aggfgd ._bbfec .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _ddba ,_ddba !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcbb *PdfAnnotationLink )ToPdfObject ()_fe .PdfObject {_fcbb .PdfAnnotation .ToPdfObject ();_cfbee :=_fcbb ._efg ;_ead :=_cfbee .PdfObject .(*_fe .PdfObjectDictionary );_ead .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004c\u0069\u006e\u006b"));
if _fcbb ._fdfd !=nil &&_fcbb ._fdfd ._eb !=nil {_ead .Set ("\u0041",_fcbb ._fdfd ._eb .ToPdfObject ());}else if _fcbb .A !=nil {_ead .Set ("\u0041",_fcbb .A );};_ead .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fcbb .Dest );_ead .SetIfNotNil ("\u0048",_fcbb .H );
_ead .SetIfNotNil ("\u0050\u0041",_fcbb .PA );_ead .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcbb .QuadPoints );_ead .SetIfNotNil ("\u0042\u0053",_fcbb .BS );return _cfbee ;};func (_gbca *PdfAppender )addNewObject (_gfaf _fe .PdfObject ){if _ ,_ebcdf :=_gbca ._dgg [_gfaf ];
!_ebcdf {_gbca ._baeg =append (_gbca ._baeg ,_gfaf );_gbca ._dgg [_gfaf ]=struct{}{};};};

// ToPdfObject returns the PDF representation of the function.
func (_efae *PdfFunctionType4 )ToPdfObject ()_fe .PdfObject {_bdde :=_efae ._acegb ;if _bdde ==nil {_efae ._acegb =&_fe .PdfObjectStream {};_bdde =_efae ._acegb ;};_abce :=_fe .MakeDict ();_abce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (4));
_egeba :=&_fe .PdfObjectArray {};for _ ,_agfde :=range _efae .Domain {_egeba .Append (_fe .MakeFloat (_agfde ));};_abce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egeba );_gecgf :=&_fe .PdfObjectArray {};for _ ,_cbeg :=range _efae .Range {_gecgf .Append (_fe .MakeFloat (_cbeg ));
};_abce .Set ("\u0052\u0061\u006eg\u0065",_gecgf );if _efae ._fggad ==nil &&_efae .Program !=nil {_efae ._fggad =[]byte (_efae .Program .String ());};_abce .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_efae ._fggad ))));_bdde .Stream =_efae ._fggad ;
_bdde .PdfObjectDictionary =_abce ;return _bdde ;};

// SetLocation sets the `Location` field of the signature.
func (_dgdde *PdfSignature )SetLocation (location string ){_dgdde .Location =_fe .MakeEncodedString (location ,true );};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fe .PdfObjectArray ;Domain *_fe .PdfObjectArray ;Function []PdfFunction ;Extend *_fe .PdfObjectArray ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bffab *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_bbc .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_afb *PdfAnnotation )ToPdfObject ()_fe .PdfObject {_edcc :=_afb ._efg ;_ffda :=_edcc .PdfObject .(*_fe .PdfObjectDictionary );_ffda .Clear ();_ffda .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0041\u006e\u006eo\u0074"));_ffda .SetIfNotNil ("\u0052\u0065\u0063\u0074",_afb .Rect );
_ffda .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_afb .Contents );_ffda .SetIfNotNil ("\u0050",_afb .P );_ffda .SetIfNotNil ("\u004e\u004d",_afb .NM );_ffda .SetIfNotNil ("\u004d",_afb .M );_ffda .SetIfNotNil ("\u0046",_afb .F );_ffda .SetIfNotNil ("\u0041\u0050",_afb .AP );
_ffda .SetIfNotNil ("\u0041\u0053",_afb .AS );_ffda .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_afb .Border );_ffda .SetIfNotNil ("\u0043",_afb .C );_ffda .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_afb .StructParent );
_ffda .SetIfNotNil ("\u004f\u0043",_afb .OC );return _edcc ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_aead :=&PdfColorspaceCalGray {};_aead .BlackPoint =[]float64 {0.0,0.0,0.0};_aead .Gamma =1;return _aead ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_edaaf *PdfReader )GetPageLabels ()(_fe .PdfObject ,error ){_gfgb :=_fe .ResolveReference (_edaaf ._bbfec .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gfgb ==nil {return nil ,nil ;};if !_edaaf ._feega {_ebadd :=_edaaf .traverseObjectData (_gfgb );
if _ebadd !=nil {return nil ,_ebadd ;};};return _gfgb ,nil ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _fe .PdfObjectName ;};

// Tab order types.
type TabOrderType string ;func (_cacbd *LTV )getCerts (_baadc []*_ffc .Certificate )([][]byte ,error ){_beefb :=make ([][]byte ,0,len (_baadc ));for _ ,_abgeb :=range _baadc {_beefb =append (_beefb ,_abgeb .Raw );};return _beefb ,nil ;};

// ParserMetadata gets the parser  metadata.
func (_dgadc *CompliancePdfReader )ParserMetadata ()_fe .ParserMetadata {if _dgadc ._dgcf ==(_fe .ParserMetadata {}){_dgadc ._dgcf ,_ =_dgadc ._gabca .ParserMetadata ();};return _dgadc ._dgcf ;};func (_agdcf *PdfSignature )extractChainFromCert ()([]*_ffc .Certificate ,error ){var _aegfc *_fe .PdfObjectArray ;
switch _afdcf :=_agdcf .Cert .(type ){case *_fe .PdfObjectString :_aegfc =_fe .MakeArray (_afdcf );case *_fe .PdfObjectArray :_aegfc =_afdcf ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_afdcf );
};var _fbdgf _ee .Buffer ;for _ ,_ffdbd :=range _aegfc .Elements (){_cccdd ,_feddf :=_fe .GetString (_ffdbd );if !_feddf {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_ffdbd );
};if _ ,_ccced :=_fbdgf .Write (_cccdd .Bytes ());_ccced !=nil {return nil ,_ccced ;};};return _ffc .ParseCertificates (_fbdgf .Bytes ());};

// ToPdfObject implements interface PdfModel.
func (_ecae *PdfAnnotationStamp )ToPdfObject ()_fe .PdfObject {_ecae .PdfAnnotation .ToPdfObject ();_gdea :=_ecae ._efg ;_fgff :=_gdea .PdfObject .(*_fe .PdfObjectDictionary );_ecae .PdfAnnotationMarkup .appendToPdfDictionary (_fgff );_fgff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0074\u0061m\u0070"));
_fgff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecae .Name );return _gdea ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_dccae *PdfReader )loadDSS ()(*DSS ,error ){if _dccae ._gabca .GetCrypter ()!=nil &&!_dccae ._gabca .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fdgfe :=_dccae ._bbfec .Get ("\u0044\u0053\u0053");if _fdgfe ==nil {return nil ,nil ;};_agee ,_ :=_fe .GetIndirect (_fdgfe );_fdgfe =_fe .TraceToDirectObject (_fdgfe );switch _bacag :=_fdgfe .(type ){case *_fe .PdfObjectNull :return nil ,nil ;case *_fe .PdfObjectDictionary :return _aege (_agee ,_bacag );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fdgfe );};

// R returns the value of the red component of the color.
func (_egde *PdfColorDeviceRGB )R ()float64 {return _egde [0]};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fe .PdfObject ;LE _fe .PdfObject ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;IT _fe .PdfObject ;Measure _fe .PdfObject ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _fe .PdfObjectName ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bdafe *Image )GetParamsDict ()*_fe .PdfObjectDictionary {_ccbbc :=_fe .MakeDict ();_ccbbc .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (_bdafe .Width ));_ccbbc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (_bdafe .Height ));
_ccbbc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_bdafe .ColorComponents )));_ccbbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (_bdafe .BitsPerComponent ));
return _ccbbc ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ddfe :_fe .MakeIndirectObject (_fe .MakeDict ())}};

// ToPdfObject implements interface PdfModel.
func (_ed *PdfActionTrans )ToPdfObject ()_fe .PdfObject {_ed .PdfAction .ToPdfObject ();_defg :=_ed ._ea ;_fffd :=_defg .PdfObject .(*_fe .PdfObjectDictionary );_fffd .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeTrans )));_fffd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ed .Trans );
return _defg ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bffd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbeff ,_becac :=color .(*PdfColorDeviceRGB );if !_becac {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fbeff ,nil ;};func (_acabe *PdfWriter )optimizeDocument ()error {if _acabe ._fagcf ==nil {return nil ;};_gafgfg ,_ecdeg :=_fe .GetDict (_acabe ._fefff );
if !_ecdeg {return _bbc .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fcgaf :=_ce .Document {ID :[2]string {_acabe ._gfcfeg ,_acabe ._eafad },Version :_acabe ._gdbffa ,Objects :_acabe ._dbbcd ,Info :_gafgfg ,Crypt :_acabe ._aebgf ,UseHashBasedID :_acabe ._gaeb };
if _cgeec :=_acabe ._fagcf .ApplyStandard (&_fcgaf );_cgeec !=nil {return _cgeec ;};_acabe ._gfcfeg ,_acabe ._eafad =_fcgaf .ID [0],_fcgaf .ID [1];_acabe ._gdbffa =_fcgaf .Version ;_acabe ._dbbcd =_fcgaf .Objects ;_acabe ._fefff .PdfObject =_fcgaf .Info ;
_acabe ._gaeb =_fcgaf .UseHashBasedID ;_acabe ._aebgf =_fcgaf .Crypt ;_ffeagd :=make (map[_fe .PdfObject ]struct{},len (_acabe ._dbbcd ));for _ ,_gbafa :=range _acabe ._dbbcd {_ffeagd [_gbafa ]=struct{}{};};_acabe ._debbc =_ffeagd ;return nil ;};func (_bdbfgf *PdfWriter )writeString (_eeafcf string ){if _bdbfgf ._bfebc !=nil {return ;
};_fcdbbe ,_gfbfe :=_bdbfgf ._efdfa .WriteString (_eeafcf );_bdbfgf ._acfae +=int64 (_fcdbbe );_bdbfgf ._bfebc =_gfbfe ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbbd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgg :=vals [0];_dbag :=[]float64 {_gdgg };_aeefd ,_bfag :=_bbbd .TintTransform .Evaluate (_dbag );
if _bfag !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bfag );_df .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bbbd .TintTransform );
return nil ,_bfag ;};_df .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aeefd ,_bbbd .AlternateSpace );
_cdaa ,_bfag :=_bbbd .AlternateSpace .ColorFromFloats (_aeefd );if _bfag !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bfag );
return nil ,_bfag ;};return _cdaa ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dbgab *PdfOutlineTreeNode )ToPdfObject ()_fe .PdfObject {return _dbgab .GetContext ().ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_gaff *PdfAnnotationScreen )ToPdfObject ()_fe .PdfObject {_gaff .PdfAnnotation .ToPdfObject ();_bbcg :=_gaff ._efg ;_eag :=_bbcg .PdfObject .(*_fe .PdfObjectDictionary );_eag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_eag .SetIfNotNil ("\u0054",_gaff .T );_eag .SetIfNotNil ("\u004d\u004b",_gaff .MK );_eag .SetIfNotNil ("\u0041",_gaff .A );_eag .SetIfNotNil ("\u0041\u0041",_gaff .AA );return _bbcg ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};func (_bfeb *PdfReader )newPdfSignatureFromIndirect (_bfeaf *_fe .PdfIndirectObject )(*PdfSignature ,error ){_ggaeb ,_cegfd :=_bfeaf .PdfObject .(*_fe .PdfObjectDictionary );if !_cegfd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gccf ,_agbce :=_bfeb ._afac .GetModelFromPrimitive (_bfeaf ).(*PdfSignature );_agbce {return _gccf ,nil ;};_eaggb :=&PdfSignature {};_eaggb ._cafdb =_bfeaf ;_eaggb .Type ,_ =_fe .GetName (_ggaeb .Get ("\u0054\u0079\u0070\u0065"));
_eaggb .Filter ,_cegfd =_fe .GetName (_ggaeb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cegfd {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_eaggb .SubFilter ,_ =_fe .GetName (_ggaeb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_eaggb .Contents ,_cegfd =_fe .GetString (_ggaeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cegfd {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _decf ,_ffeca :=_fe .GetArray (_ggaeb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ffeca {_eaggb .Reference =_fe .MakeArray ();for _ ,_bfcaf :=range _decf .Elements (){_acge ,_gceae :=_fe .GetDict (_bfcaf );
if !_gceae {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_aeffd ,_eegec :=_bfeb .newPdfSignatureReferenceFromDict (_acge );if _eegec !=nil {return nil ,_eegec ;};_eaggb .Reference .Append (_aeffd .ToPdfObject ());};};_eaggb .Cert =_ggaeb .Get ("\u0043\u0065\u0072\u0074");_eaggb .ByteRange ,_ =_fe .GetArray (_ggaeb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_eaggb .Changes ,_ =_fe .GetArray (_ggaeb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_eaggb .Name ,_ =_fe .GetString (_ggaeb .Get ("\u004e\u0061\u006d\u0065"));_eaggb .M ,_ =_fe .GetString (_ggaeb .Get ("\u004d"));_eaggb .Location ,_ =_fe .GetString (_ggaeb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_eaggb .Reason ,_ =_fe .GetString (_ggaeb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_eaggb .ContactInfo ,_ =_fe .GetString (_ggaeb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_eaggb .R ,_ =_fe .GetInt (_ggaeb .Get ("\u0052"));
_eaggb .V ,_ =_fe .GetInt (_ggaeb .Get ("\u0056"));_eaggb .PropBuild ,_ =_fe .GetDict (_ggaeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_eaggb .PropAuthTime ,_ =_fe .GetInt (_ggaeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_eaggb .PropAuthType ,_ =_fe .GetName (_ggaeb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_bfeb ._afac .Register (_bfeaf ,_eaggb );return _eaggb ,nil ;};func (_aeeeb *PdfReader )flattenFieldsWithOpts (_fbccc bool ,_adbe FieldAppearanceGenerator ,_faaa *FieldFlattenOpts )error {if _faaa ==nil {_faaa =&FieldFlattenOpts {};
};var _gffg bool ;_cfga :=map[*PdfAnnotation ]bool {};{var _dagbc []*PdfField ;_fgda :=_aeeeb .AcroForm ;if _fgda !=nil {if _faaa .FilterFunc !=nil {_dagbc =_fgda .filteredFields (_faaa .FilterFunc ,true );_gffg =_fgda .Fields !=nil &&len (*_fgda .Fields )> 0;
}else {_dagbc =_fgda .AllFields ();};};for _ ,_agbgae :=range _dagbc {if len (_agbgae .Annotations )< 1{_df .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_agbgae .PartialName ());
for _edfd ,_bgabc :=range _agbgae .Kids {for _ ,_gdba :=range _bgabc .Annotations {_cfga [_gdba .PdfAnnotation ]=_agbgae .V !=nil ;if _bgabc .V ==nil {_bgabc .V =_agbgae .V ;};if _bgabc .T ==nil {_bgabc .T =_fe .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_agbgae .PartialName (),_edfd ));
};if _adbe !=nil {_fbcd ,_ecbb :=_adbe .GenerateAppearanceDict (_fgda ,_bgabc ,_gdba );if _ecbb !=nil {return _ecbb ;};_gdba .AP =_fbcd ;};};};};for _ ,_dfbgb :=range _agbgae .Annotations {_cfga [_dfbgb .PdfAnnotation ]=_agbgae .V !=nil ;if _adbe !=nil {_efddg ,_acac :=_adbe .GenerateAppearanceDict (_fgda ,_agbgae ,_dfbgb );
if _acac !=nil {return _acac ;};_dfbgb .AP =_efddg ;};};};};if _fbccc {for _ ,_feddd :=range _aeeeb .PageList {_ddge ,_cadf :=_feddd .GetAnnotations ();if _cadf !=nil {return _cadf ;};for _ ,_bdba :=range _ddge {_cfga [_bdba ]=true ;};};};for _ ,_aebef :=range _aeeeb .PageList {_egbdf :=_aebef .flattenFieldsWithOpts (_adbe ,_faaa ,_cfga );
if _egbdf !=nil {return _egbdf ;};};if !_gffg {_aeeeb .AcroForm =nil ;};return nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dgb :=&PdfAppender {_efdf :reader ._afgaf ,Reader :reader ,_gcea :reader ._gabca ,_gdcb :reader ._gdacb };_gfeg ,_dgce :=_dgb ._efdf .Seek (0,_gd .SeekEnd );if _dgce !=nil {return nil ,_dgce ;
};_dgb ._ggcf =_gfeg ;if _ ,_dgce =_dgb ._efdf .Seek (0,_gd .SeekStart );_dgce !=nil {return nil ,_dgce ;};_dgb ._cca ,_dgce =NewPdfReader (_dgb ._efdf );if _dgce !=nil {return nil ,_dgce ;};for _ ,_cdag :=range _dgb .Reader .GetObjectNums (){if _dgb ._bdbf < _cdag {_dgb ._bdbf =_cdag ;
};};_dgb ._effa =_dgb ._gcea .GetXrefTable ();_dgb ._baga =_dgb ._gcea .GetXrefOffset ();_dgb ._gdf =append (_dgb ._gdf ,_dgb ._cca .PageList ...);_dgb ._dgg =make (map[_fe .PdfObject ]struct{});_dgb ._cdbb =make (map[_fe .PdfObject ]int64 );_dgb ._abac =make (map[_fe .PdfObject ]struct{});
_dgb ._fdcb =_dgb ._cca .AcroForm ;_dgb ._fdade =_dgb ._cca .DSS ;return _dgb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_caca *PdfActionMovie )ToPdfObject ()_fe .PdfObject {_caca .PdfAction .ToPdfObject ();_gcc :=_caca ._ea ;_deeb :=_gcc .PdfObject .(*_fe .PdfObjectDictionary );_deeb .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeMovie )));_deeb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_caca .Annotation );
_deeb .SetIfNotNil ("\u0054",_caca .T );_deeb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_caca .Operation );return _gcc ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_debe ,_cgad :=_dc .Open (filePath );if _cgad !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cgad );
return nil ,_cgad ;};defer _debe .Close ();return NewPdfFontFromTTF (_debe );};

// SetDecode sets the decode image float slice.
func (_geedg *Image )SetDecode (decode []float64 ){_geedg ._cccfg =decode };

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cabag DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_cgae *PdfWriter )SetCatalogMetadata (meta _fe .PdfObject )error {if meta ==nil {_cgae ._efaac .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gcdafa ,_cegbc :=_fe .GetStream (meta );if !_cegbc {return _bbc .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_cgae .addObject (_gcdafa );_cgae ._efaac .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcdafa );return nil ;};func _ecedf (_cefac *_fe .PdfObjectDictionary )(*PdfShadingPattern ,error ){_adagf :=&PdfShadingPattern {};_cgee :=_cefac .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _cgee ==nil {_df .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfdad ,_bagce :=_gggbc (_cgee );if _bagce !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bagce );
return nil ,_bagce ;};_adagf .Shading =_gfdad ;if _gdadd :=_cefac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdadd !=nil {_cdefa ,_eddcc :=_gdadd .(*_fe .PdfObjectArray );if !_eddcc {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdadd );
return nil ,_fe .ErrTypeError ;};_adagf .Matrix =_cdefa ;};if _bddcc :=_cefac .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bddcc !=nil {_adagf .ExtGState =_bddcc ;};return _adagf ,nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_dgcgde *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _bbc .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_dgcgde .S =subtype ;return nil ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _fe .PdfObject )(*EmbeddedFile ,error ){_afdc :=_fe .TraceToDirectObject (obj );_fdge ,_acbfa :=_afdc .(*_fe .PdfObjectDictionary );if !_acbfa {return nil ,_bbc .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bgggc :=_fe .TraceToDirectObject (_fdge .Get ("\u0046"));if _bgggc ==nil {return nil ,_bbc .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_gbadc ,_acbfa :=_bgggc .(*_fe .PdfObjectStream );
if !_acbfa {return nil ,_bbc .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_dddc :=_gbadc .PdfObjectDictionary ;_cbcc :=_dddc .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _cbcc ==nil {return nil ,_bbc .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_fcdc ,_acbfa :=_cbcc .(*_fe .PdfObjectDictionary );if !_acbfa {return nil ,_bbc .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_cfbag :="";_dacfb :=_fcdc .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _dacfb !=nil {_cfbag =_dacfb .(*_fe .PdfObjectString ).Str ();};_cfbb ,_eggd :=_fe .DecodeStream (_gbadc );if _eggd !=nil {return nil ,_eggd ;};_eedf :=&EmbeddedFile {Content :_cfbb ,Hash :_cfbag };return _eedf ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_egfea :=&PdfColorPatternType2 {};return _egfea ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_bccda *PdfWriter )SetDocInfo (info *PdfInfo ){_bccda .setDocInfo (info .ToPdfObject ())};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gedea *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bee :=NewPdfAction ();_aa :=&PdfActionGoToE {};_aa .PdfAction =_bee ;_bee .SetContext (_aa );return _aa ;};var _bfdgbf =false ;

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gdfd *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gdfd .HiVal )};};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cgdaa :=PdfWriter {};_cgdaa ._debbc =map[_fe .PdfObject ]struct{}{};_cgdaa ._dbbcd =[]_fe .PdfObject {};_cgdaa ._ebgca =map[_fe .PdfObject ][]*_fe .PdfObjectDictionary {};_cgdaa ._gdcbbb =map[_fe .PdfObject ]struct{}{};_cgdaa ._gdbffa .Major =1;
_cgdaa ._gdbffa .Minor =3;_gdbdb :=_fe .MakeDict ();_cddfc :=[]struct{_dfacc _fe .PdfObjectName ;_eebeg string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dgdff ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gbfea ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bfbafa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_babaa ()},{"\u0054\u0069\u0074l\u0065",_ddadb ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cbfef ()}};
for _ ,_agdgf :=range _cddfc {if _agdgf ._eebeg !=""{_gdbdb .Set (_agdgf ._dfacc ,_fe .MakeString (_agdgf ._eebeg ));};};if _ebcgf :=_ecbgdf ();!_ebcgf .IsZero (){if _cbeeb ,_dacda :=NewPdfDateFromTime (_ebcgf );_dacda ==nil {_gdbdb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cbeeb .ToPdfObject ());
};};if _bfgaf :=_eeecdg ();!_bfgaf .IsZero (){if _ggeea ,_aedad :=NewPdfDateFromTime (_bfgaf );_aedad ==nil {_gdbdb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ggeea .ToPdfObject ());};};_babba :=_fe .PdfIndirectObject {};_babba .PdfObject =_gdbdb ;
_cgdaa ._fefff =&_babba ;_cgdaa .addObject (&_babba );_cefge :=_fe .PdfIndirectObject {};_cdage :=_fe .MakeDict ();_cdage .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cefge .PdfObject =_cdage ;_cgdaa ._dabeb =&_cefge ;
_cgdaa .addObject (_cgdaa ._dabeb );_cadad ,_fcfba :=_eefge ("\u0077");if _fcfba !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcfba );};_cgdaa ._ggfbb =_cadad ;_geeea :=_fe .PdfIndirectObject {};_bgaeg :=_fe .MakeDict ();_bgaeg .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067e\u0073"));
_ebfbc :=_fe .PdfObjectArray {};_bgaeg .Set ("\u004b\u0069\u0064\u0073",&_ebfbc );_bgaeg .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (0));_geeea .PdfObject =_bgaeg ;_cgdaa ._ggfge =&_geeea ;_cgdaa ._ebaga =map[_fe .PdfObject ]struct{}{};_cgdaa ._cacecg =[]*_fe .PdfIndirectObject {};
_cgdaa .addObject (_cgdaa ._ggfge );_cdage .Set ("\u0050\u0061\u0067e\u0073",&_geeea );_cgdaa ._efaac =_cdage ;_df .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cefge );return _cgdaa ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eadc *PdfColorspaceDeviceRGB )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ceeeef byte )byte ;

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fe .PdfObjectString ;Q *_fe .PdfObjectInteger ;DS *_fe .PdfObjectString ;RV _fe .PdfObject ;MaxLen *_fe .PdfObjectInteger ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gadg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gadg .RunesToCharcodeBytes ([]rune (str ));};func (_adbeg Image )getBase ()_af .ImageBase {return _af .NewImageBase (int (_adbeg .Width ),int (_adbeg .Height ),int (_adbeg .BitsPerComponent ),_adbeg .ColorComponents ,_adbeg .Data ,_adbeg ._dbgaf ,_adbeg ._cccfg );
};func (_abecg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bcad :=NewPdfAnnotation ();_dcfd :=&PdfAnnotationPolyLine {};_dcfd .PdfAnnotation =_bcad ;_dcfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcad .SetContext (_dcfd );return _dcfd ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fdfe *PdfAppender )UpdatePage (page *PdfPage ){_fdfe .updateObjectsDeep (page .ToPdfObject (),nil )};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fedagg *PdfPageResources )HasFontByName (keyName _fe .PdfObjectName )bool {_ ,_dcdfb :=_fedagg .GetFontByName (keyName );return _dcdfb ;};func _acgb (_edaabf *_fe .PdfObjectStream )(*PdfFunctionType4 ,error ){_egfeb :=&PdfFunctionType4 {};_egfeb ._acegb =_edaabf ;
_dcbfea :=_edaabf .PdfObjectDictionary ;_bagb ,_edfb :=_fe .TraceToDirectObject (_dcbfea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );if !_edfb {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bagb .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfgf ,_cagd :=_bagb .ToFloat64Array ();if _cagd !=nil {return nil ,_cagd ;};_egfeb .Domain =_gfgf ;_bagb ,_edfb =_fe .TraceToDirectObject (_dcbfea .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );
if _edfb {if _bagb .Len ()< 0||_bagb .Len ()%2!=0{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_daege ,_ffbdg :=_bagb .ToFloat64Array ();if _ffbdg !=nil {return nil ,_ffbdg ;};_egfeb .Range =_daege ;
};_aefca ,_cagd :=_fe .DecodeStream (_edaabf );if _cagd !=nil {return nil ,_cagd ;};_egfeb ._fggad =_aefca ;_cfgdee :=_gc .NewPSParser (_aefca );_bcegb ,_cagd :=_cfgdee .Parse ();if _cagd !=nil {return nil ,_cagd ;};_egfeb .Program =_bcegb ;return _egfeb ,nil ;
};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fe .PdfObject ;};

// Transform rectangle with the supplied matrix.
func (_bcaaf *PdfRectangle )Transform (transformMatrix _db .Matrix ){_bcaaf .Llx ,_bcaaf .Lly =transformMatrix .Transform (_bcaaf .Llx ,_bcaaf .Lly );_bcaaf .Urx ,_bcaaf .Ury =transformMatrix .Transform (_bcaaf .Urx ,_bcaaf .Ury );_bcaaf .Normalize ();
};func (_eafg *PdfWriter )checkPendingObjects (){for _dbgeb ,_edffe :=range _eafg ._ebgca {if !_eafg .hasObject (_dbgeb ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dbgeb ,_dbgeb ,_dbgeb );
for _ ,_gbgdc :=range _edffe {for _ ,_feagc :=range _gbgdc .Keys (){_baabc :=_gbgdc .Get (_feagc );if _baabc ==_dbgeb {_df .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_gbgdc .Set (_feagc ,_fe .MakeNull ());break ;};};};};};};

// ToInteger convert to an integer format.
func (_dfbd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cfeb :=_dd .Pow (2,float64 (bits ))-1;return uint32 (_cfeb *_dfbd .Val ());};func _dega (_abgg _fe .PdfObject ,_fdefe bool )(*PdfFont ,error ){_fced ,_edfc ,_bbdeb :=_accc (_abgg );if _fced !=nil {_baabd (_fced );
};if _bbdeb !=nil {if _bbdeb ==ErrType1CFontNotSupported {_cbfe ,_cddbgb :=_abfdb (_fced ,_edfc ,nil );if _cddbgb !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_edfc ,_cddbgb );
return nil ,_bbdeb ;};return &PdfFont {_aeacd :_cbfe },_bbdeb ;};return nil ,_bbdeb ;};_ggfg :=&PdfFont {};switch _edfc ._cdgfg {case "\u0054\u0079\u0070e\u0030":if !_fdefe {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edfc );
return nil ,_bbc .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gagc ,_cfbc :=_gfbebf (_fced ,_edfc );if _cfbc !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_edfc ,_cfbc );
return nil ,_cfbc ;};_ggfg ._aeacd =_gagc ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gcag *pdfFontSimple ;_dedg ,_dddf :=_ag .NewStdFontByName (_ag .StdFontName (_edfc ._cecc ));
if _dddf {_bgabd :=_faaf (_dedg );_ggfg ._aeacd =&_bgabd ;_cdfb :=_fe .TraceToDirectObject (_bgabd .ToPdfObject ());_daae ,_ggcg ,_cfde :=_accc (_cdfb );if _cfde !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_edfc ,_bgabd );
return nil ,_cfde ;};for _ ,_aedb :=range _fced .Keys (){_daae .Set (_aedb ,_fced .Get (_aedb ));};_gcag ,_cfde =_abfdb (_daae ,_ggcg ,_bgabd ._egeg );if _cfde !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_edfc ,_bgabd );
return nil ,_cfde ;};_gcag ._efacff =_bgabd ._efacff ;_gcag ._cgfcc =_bgabd ._cgfcc ;if _gcag ._deacf ==nil {_gcag ._deacf =_bgabd ._deacf ;};}else {_gcag ,_bbdeb =_abfdb (_fced ,_edfc ,nil );if _bbdeb !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_edfc ,_bbdeb );
return nil ,_bbdeb ;};};_bbdeb =_gcag .addEncoding ();if _bbdeb !=nil {return nil ,_bbdeb ;};if _dddf {_gcag .updateStandard14Font ();};if _dddf &&_gcag ._dcdgc ==nil &&_gcag ._egeg ==nil {_df .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcag );
_df .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dedg );};if len (_gcag ._efacff )==0{_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gcag );};_ggfg ._aeacd =_gcag ;
case "\u0054\u0079\u0070e\u0033":_bdac ,_badb :=_ebde (_fced ,_edfc );if _badb !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_badb );
return nil ,_badb ;};_ggfg ._aeacd =_bdac ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gefceb ,_ceffd :=_fcdba (_fced ,_edfc );if _ceffd !=nil {_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ceffd );
return nil ,_ceffd ;};_ggfg ._aeacd =_gefceb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cgge ,_eecd :=_eceb (_fced ,_edfc );if _eecd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_edfc ,_eecd );
return nil ,_eecd ;};_ggfg ._aeacd =_cgge ;default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_edfc );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edfc );};return _ggfg ,nil ;};func _gfbfca (_gefg *_fe .PdfObjectStream )(*PdfFunctionType0 ,error ){_baabf :=&PdfFunctionType0 {};
_baabf ._fgbbd =_gefg ;_beebf :=_gefg .PdfObjectDictionary ;_dfegb ,_aebd :=_fe .TraceToDirectObject (_beebf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );if !_aebd {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dfegb .Len ()< 0||_dfegb .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_baabf .NumInputs =_dfegb .Len ()/2;_bgffc ,_ddcg :=_dfegb .ToFloat64Array ();if _ddcg !=nil {return nil ,_ddcg ;};_baabf .Domain =_bgffc ;
_dfegb ,_aebd =_fe .TraceToDirectObject (_beebf .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );if !_aebd {_df .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dfegb .Len ()< 0||_dfegb .Len ()%2!=0{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_baabf .NumOutputs =_dfegb .Len ()/2;_cffad ,_ddcg :=_dfegb .ToFloat64Array ();if _ddcg !=nil {return nil ,_ddcg ;
};_baabf .Range =_cffad ;_dfegb ,_aebd =_fe .TraceToDirectObject (_beebf .Get ("\u0053\u0069\u007a\u0065")).(*_fe .PdfObjectArray );if !_aebd {_df .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aafed ,_ddcg :=_dfegb .ToIntegerArray ();
if _ddcg !=nil {return nil ,_ddcg ;};if len (_aafed )!=_baabf .NumInputs {_df .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baabf .Size =_aafed ;_agfd ,_aebd :=_fe .TraceToDirectObject (_beebf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fe .PdfObjectInteger );
if !_aebd {_df .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_agfd !=1&&*_agfd !=2&&*_agfd !=4&&*_agfd !=8&&*_agfd !=12&&*_agfd !=16&&*_agfd !=24&&*_agfd !=32{_df .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_agfd );
return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baabf .BitsPerSample =int (*_agfd );_baabf .Order =1;_cbccf ,_aebd :=_fe .TraceToDirectObject (_beebf .Get ("\u004f\u0072\u0064e\u0072")).(*_fe .PdfObjectInteger );
if _aebd {if *_cbccf !=1&&*_cbccf !=3{_df .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_cbccf );return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baabf .Order =int (*_cbccf );
};_dfegb ,_aebd =_fe .TraceToDirectObject (_beebf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );if _aebd {_afbc ,_ddfgf :=_dfegb .ToFloat64Array ();if _ddfgf !=nil {return nil ,_ddfgf ;};_baabf .Encode =_afbc ;};_dfegb ,_aebd =_fe .TraceToDirectObject (_beebf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fe .PdfObjectArray );
if _aebd {_ggfga ,_gbebg :=_dfegb .ToFloat64Array ();if _gbebg !=nil {return nil ,_gbebg ;};_baabf .Decode =_ggfga ;};_begfc ,_ddcg :=_fe .DecodeStream (_gefg );if _ddcg !=nil {return nil ,_ddcg ;};_baabf ._abdcef =_begfc ;return _baabf ,nil ;};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_fe .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _fe .PdfObject ;ClassMap *_fe .PdfObjectDictionary ;_febgf *_fe .PdfIndirectObject ;_ffaac []_ad .UUID ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_efddga int ,_eccff *PdfPage )error ;

// StdFontName represents name of a standard font.
type StdFontName =_ag .StdFontName ;func (_cfd *PdfAnnotation )String ()string {_geg :="";_cbb ,_ddee :=_cfd .ToPdfObject ().(*_fe .PdfIndirectObject );if _ddee {_geg =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cfd ._cdg ,_cbb .PdfObject .String ());
};return _geg ;};func _gceag (_dbggd *_fe .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ggbcc :=PdfShadingType7 {};_gfdce :=_dbggd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gfdce ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcedb ,_daece :=_gfdce .(*_fe .PdfObjectInteger );if !_daece {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfdce );
return nil ,_fe .ErrTypeError ;};_ggbcc .BitsPerCoordinate =_fcedb ;_gfdce =_dbggd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gfdce ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fcedb ,_daece =_gfdce .(*_fe .PdfObjectInteger );if !_daece {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gfdce );
return nil ,_fe .ErrTypeError ;};_ggbcc .BitsPerComponent =_fcedb ;_gfdce =_dbggd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gfdce ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fcedb ,_daece =_gfdce .(*_fe .PdfObjectInteger );if !_daece {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gfdce );
return nil ,_fe .ErrTypeError ;};_ggbcc .BitsPerComponent =_fcedb ;_gfdce =_dbggd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gfdce ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_badd ,_daece :=_gfdce .(*_fe .PdfObjectArray );if !_daece {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfdce );
return nil ,_fe .ErrTypeError ;};_ggbcc .Decode =_badd ;if _baefc :=_dbggd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_baefc !=nil {_ggbcc .Function =[]PdfFunction {};if _fcga ,_feeee :=_baefc .(*_fe .PdfObjectArray );_feeee {for _ ,_gagcg :=range _fcga .Elements (){_ddcgb ,_dggee :=_cebb (_gagcg );
if _dggee !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dggee );return nil ,_dggee ;};_ggbcc .Function =append (_ggbcc .Function ,_ddcgb );
};}else {_gedga ,_ebgfe :=_cebb (_baefc );if _ebgfe !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgfe );return nil ,_ebgfe ;
};_ggbcc .Function =append (_ggbcc .Function ,_gedga );};};return &_ggbcc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_egcc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dbed *PdfPageResources )GetExtGState (keyName _fe .PdfObjectName )(_fe .PdfObject ,bool ){if _dbed .ExtGState ==nil {return nil ,false ;};_degg ,_adegg :=_fe .TraceToDirectObject (_dbed .ExtGState ).(*_fe .PdfObjectDictionary );if !_adegg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbed .ExtGState );
return nil ,false ;};if _edfcg :=_degg .Get (keyName );_edfcg !=nil {return _edfcg ,true ;};return nil ,false ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dabfe *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dabfe .updateObjectsDeep (dss .ToPdfObject (),nil );};_dabfe ._fdade =dss ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_egga .Lock ();defer _egga .Unlock ();_fdfga =producer };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_daeg *PdfReader )newPdfFieldSignatureFromDict (_fefcd *_fe .PdfObjectDictionary )(*PdfFieldSignature ,error ){_fgca :=&PdfFieldSignature {};_gffc ,_beddd :=_fe .GetIndirect (_fefcd .Get ("\u0056"));
if _beddd {var _deaef error ;_fgca .V ,_deaef =_daeg .newPdfSignatureFromIndirect (_gffc );if _deaef !=nil {return nil ,_deaef ;};};_fgca .Lock ,_ =_fe .GetIndirect (_fefcd .Get ("\u004c\u006f\u0063\u006b"));_fgca .SV ,_ =_fe .GetIndirect (_fefcd .Get ("\u0053\u0056"));
return _fgca ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func _debg (_aefdf _fe .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gcfda :=NewPdfColorspaceSpecialSeparation ();
if _bgccg ,_caba :=_aefdf .(*_fe .PdfIndirectObject );_caba {_gcfda ._faada =_bgccg ;};_aefdf =_fe .TraceToDirectObject (_aefdf );_acff ,_aecc :=_aefdf .(*_fe .PdfObjectArray );if !_aecc {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _acff .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_aefdf =_acff .Get (0);
_bggb ,_aecc :=_aefdf .(*_fe .PdfObjectName );if !_aecc {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bggb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_aefdf =_acff .Get (1);_bggb ,_aecc =_aefdf .(*_fe .PdfObjectName );if !_aecc {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gcfda .ColorantName =_bggb ;_aefdf =_acff .Get (2);_fdgf ,_edaa :=NewPdfColorspaceFromPdfObject (_aefdf );if _edaa !=nil {return nil ,_edaa ;};_gcfda .AlternateSpace =_fdgf ;_fbcag ,_edaa :=_cebb (_acff .Get (3));if _edaa !=nil {return nil ,_edaa ;};
_gcfda .TintTransform =_fbcag ;return _gcfda ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fe .PdfObject ;LE _fe .PdfObject ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;IT _fe .PdfObject ;Measure _fe .PdfObject ;};func (_fdcf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// Direction returns the value of the direction.
func (_bfff *ViewerPreferences )Direction ()Direction {return _bfff ._cebcg };

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gebee []_fe .PdfObject )([]_fe .PdfObject ,error );};

// HasFontByName checks if has font resource by name.
func (_bbcee *PdfPage )HasFontByName (name _fe .PdfObjectName )bool {_acgbd ,_dbgfa :=_bbcee .Resources .Font .(*_fe .PdfObjectDictionary );if !_dbgfa {return false ;};if _fcbc :=_acgbd .Get (name );_fcbc !=nil {return true ;};return false ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_accg :=NewPdfOutline ();_accg ._dedcd =&_accg ;return _accg };

// ToPdfObject implements interface PdfModel.
func (_gfe *PdfAnnotationUnderline )ToPdfObject ()_fe .PdfObject {_gfe .PdfAnnotation .ToPdfObject ();_abaf :=_gfe ._efg ;_aca :=_abaf .PdfObject .(*_fe .PdfObjectDictionary );_gfe .PdfAnnotationMarkup .appendToPdfDictionary (_aca );_aca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_aca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfe .QuadPoints );return _abaf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbbe *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbbe .Alternate ==nil {if _fbbe .N ==1{_ddga :=NewPdfColorspaceDeviceGray ();return _ddga .ColorFromFloats (vals );}else if _fbbe .N ==3{_dabd :=NewPdfColorspaceDeviceRGB ();
return _dabd .ColorFromFloats (vals );}else if _fbbe .N ==4{_effb :=NewPdfColorspaceDeviceCMYK ();return _effb .ColorFromFloats (vals );}else {return nil ,_bbc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fbbe .Alternate .ColorFromFloats (vals );};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_bcffc *PdfWriter )GetPageIndirectObject (pageNum int )(*_fe .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_bcffc ._cacecg ){return nil ,_bbc .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _bcffc ._cacecg [pageNum ],nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aegage []byte )(_ababd int ,_gfgfa error );};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_afdfa *PdfReader )GetCatalogMetadata ()(_fe .PdfObject ,bool ){if _afdfa ._bbfec ==nil {return nil ,false ;};_becea :=_afdfa ._bbfec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _becea ,_becea !=nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccbae pdfCIDFontType2 )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){_gcbf ,_bdeg :=_ccbae ._ageg [r ];if !_bdeg {_cede ,_gaae :=_fe .GetInt (_ccbae .DW );if !_gaae {return _ag .CharMetrics {},false ;};_gcbf =int (*_cede );};return _ag .CharMetrics {Wx :float64 (_gcbf )},true ;
};

// SetOCProperties sets the optional content properties.
func (_gdde *PdfWriter )SetOCProperties (ocProperties _fe .PdfObject )error {_bggeb :=_gdde ._efaac ;if ocProperties !=nil {_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bggeb .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gdde .addObjects (ocProperties );};return nil ;};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;
RelationshipUnspecified ;);func _dagf ()*Names {return &Names {_gegeg :_fe .MakeIndirectObject (_fe .MakeDict ())}};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_bffa :=NewPdfAnnotation ();_cff :=&PdfAnnotationRedact {};_cff .PdfAnnotation =_bffa ;_cff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bffa .SetContext (_cff );return _cff ;};func (_agcf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// GetAction returns the PDF action for the annotation link.
func (_efaa *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _efaa ._fdfd !=nil {return _efaa ._fdfd ,nil ;};if _efaa .A ==nil {return nil ,nil ;};if _efaa ._ebdb ==nil {return nil ,nil ;};_cgfc ,_bcf :=_efaa ._ebdb .loadAction (_efaa .A );if _bcf !=nil {return nil ,_bcf ;
};_efaa ._fdfd =_cgfc ;return _efaa ._fdfd ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_caff *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_begc ,_acdbc :=_fe .GetNumbersAsFloat (objects );
if _acdbc !=nil {return nil ,_acdbc ;};return _caff .ColorFromFloats (_begc );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_egfda *PdfFieldChoice )ToPdfObject ()_fe .PdfObject {_egfda .PdfField .ToPdfObject ();_fddf :=_egfda ._ddfe ;_feeb :=_fddf .PdfObject .(*_fe .PdfObjectDictionary );_feeb .Set ("\u0046\u0054",_fe .MakeName ("\u0043\u0068"));if _egfda .Opt !=nil {_feeb .Set ("\u004f\u0070\u0074",_egfda .Opt );
};if _egfda .TI !=nil {_feeb .Set ("\u0054\u0049",_egfda .TI );};if _egfda .I !=nil {_feeb .Set ("\u0049",_egfda .I );};return _fddf ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gefd *PdfRectangle )Normalize (){if _gefd .Llx > _gefd .Urx {_gefd .Llx ,_gefd .Urx =_gefd .Urx ,_gefd .Llx ;};if _gefd .Lly > _gefd .Ury {_gefd .Lly ,_gefd .Ury =_gefd .Ury ,_gefd .Lly ;};};

// ToPdfObject implements interface PdfModel.
func (_ddde *PdfAnnotationCaret )ToPdfObject ()_fe .PdfObject {_ddde .PdfAnnotation .ToPdfObject ();_eaac :=_ddde ._efg ;_ggdc :=_eaac .PdfObject .(*_fe .PdfObjectDictionary );_ddde .PdfAnnotationMarkup .appendToPdfDictionary (_ggdc );_ggdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0043\u0061\u0072e\u0074"));
_ggdc .SetIfNotNil ("\u0052\u0044",_ddde .RD );_ggdc .SetIfNotNil ("\u0053\u0079",_ddde .Sy );return _eaac ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ggg :=NewPdfAnnotation ();_dbe :=&PdfAnnotationUnderline {};_dbe .PdfAnnotation =_ggg ;_dbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggg .SetContext (_dbe );return _dbe ;};func _egcg (_ddeed []byte )(_afgbeb ,_cccfd string ,_cfeg error ){_df .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ddeed ));
_fdfag :=_dbdaa .FindIndex (_ddeed );if _fdfag ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_fe .ErrTypeError ;};_ddbc :=_fdfag [1];_ddbde :=_bf .Index (string (_ddeed [_ddbc :]),_dfce );if _ddbde < 0{_afgbeb =string (_ddeed [_ddbc :]);return _afgbeb ,"",nil ;};_gfede :=_ddbc +_ddbde ;_afgbeb =string (_ddeed [_ddbc :_gfede ]);_ebgbe :=_gfede ;
_ddbde =_bf .Index (string (_ddeed [_ebgbe :]),_cfcb );if _ddbde < 0{_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cfeg );
return "","",_fe .ErrTypeError ;};_ebdee :=_ebgbe +_ddbde ;_cccfd =string (_ddeed [_ebgbe :_ebdee ]);return _afgbeb ,_cccfd ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_gbab *PdfField )ToPdfObject ()_fe .PdfObject {_fgcb :=_gbab ._ddfe ;_beff :=_fgcb .PdfObject .(*_fe .PdfObjectDictionary );_abfbe :=_fe .MakeArray ();for _ ,_ccaf :=range _gbab .Kids {_abfbe .Append (_ccaf .ToPdfObject ());};for _ ,_ccbb :=range _gbab .Annotations {if _ccbb ._efg !=_gbab ._ddfe {_abfbe .Append (_ccbb .GetContext ().ToPdfObject ());
};};if _gbab .Parent !=nil {_beff .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbab .Parent .GetContainingPdfObject ());};if _abfbe .Len ()> 0{_beff .Set ("\u004b\u0069\u0064\u0073",_abfbe );};_beff .SetIfNotNil ("\u0046\u0054",_gbab .FT );_beff .SetIfNotNil ("\u0054",_gbab .T );
_beff .SetIfNotNil ("\u0054\u0055",_gbab .TU );_beff .SetIfNotNil ("\u0054\u004d",_gbab .TM );_beff .SetIfNotNil ("\u0046\u0066",_gbab .Ff );_beff .SetIfNotNil ("\u0056",_gbab .V );_beff .SetIfNotNil ("\u0044\u0056",_gbab .DV );_beff .SetIfNotNil ("\u0041\u0041",_gbab .AA );
if _gbab .VariableText !=nil {_beff .SetIfNotNil ("\u0044\u0041",_gbab .VariableText .DA );_beff .SetIfNotNil ("\u0051",_gbab .VariableText .Q );_beff .SetIfNotNil ("\u0044\u0053",_gbab .VariableText .DS );_beff .SetIfNotNil ("\u0052\u0056",_gbab .VariableText .RV );
};return _fgcb ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_edgag *LTV )EnableAll (extraCerts []*_ffc .Certificate )error {_dgde :=_edgag ._eacb ._cca .AcroForm ;for _ ,_eddde :=range _dgde .AllFields (){_dbcb ,_ :=_eddde .GetContext ().(*PdfFieldSignature );if _dbcb ==nil {continue ;};_afdcb :=_dbcb .V ;
if _aegda :=_edgag .validateSig (_afdcb );_aegda !=nil {_df .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aegda );
};if _debga :=_edgag .Enable (_afdcb ,extraCerts );_debga !=nil {return _debga ;};};return nil ;};

// ReplacePage replaces the original page to a new page.
func (_aagb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_gaccf :=pageNum -1;for _cdf :=range _aagb ._gdf {if _cdf ==_gaccf {_egfg :=page .Duplicate ();_dacdab (_egfg );_aagb ._gdf [_cdf ]=_egfg ;};};};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bdffd *LTV )EnableChain (chain []*_ffc .Certificate )error {return _bdffd .enable (nil ,chain ,"")};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fe .PdfObject ,error );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ecbg *PdfColorspaceDeviceGray )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_gefb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gefb ._gdgcc };

// Add appends a top level outline item to the outline.
func (_daff *Outline )Add (item *OutlineItem ){_daff .Entries =append (_daff .Entries ,item )};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_acdgc *PdfPage )AddContentStreamByString (contentStr string )error {_eefae ,_daaf :=_fe .MakeStream ([]byte (contentStr ),_fe .NewFlateEncoder ());if _daaf !=nil {return _daaf ;};if _acdgc .Contents ==nil {_acdgc .Contents =_eefae ;}else {_gfeae :=_fe .TraceToDirectObject (_acdgc .Contents );
_dgdacc ,_bdagc :=_gfeae .(*_fe .PdfObjectArray );if !_bdagc {_dgdacc =_fe .MakeArray (_gfeae );};_dgdacc .Append (_eefae );_acdgc .Contents =_dgdacc ;};return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_cgeca *pdfFontType0 )ToPdfObject ()_fe .PdfObject {if _cgeca ._cdcc ==nil {_cgeca ._cdcc =&_fe .PdfIndirectObject {};};_baaa :=_cgeca .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cgeca ._cdcc .PdfObject =_baaa ;if _cgeca .Encoding !=nil {_baaa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgeca .Encoding );
}else if _cgeca ._agfa !=nil {_baaa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgeca ._agfa .ToPdfObject ());};if _cgeca .DescendantFont !=nil {_baaa .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fe .MakeArray (_cgeca .DescendantFont .ToPdfObject ()));
};return _cgeca ._cdcc ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_egfdc *PdfShadingPattern )ToPdfObject ()_fe .PdfObject {_egfdc .PdfPattern .ToPdfObject ();_egfb :=_egfdc .getDict ();if _egfdc .Shading !=nil {_egfb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_egfdc .Shading .ToPdfObject ());};if _egfdc .Matrix !=nil {_egfb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_egfdc .Matrix );
};if _egfdc .ExtGState !=nil {_egfb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_egfdc .ExtGState );};return _egfdc ._aegcc ;};

// SetPrintArea sets the value of the printArea.
func (_bdaab *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_bdaab ._afceb =printArea };

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_dggg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_facc :=0.3*_dggg .R ()+0.59*_dggg .G ()+0.11*_dggg .B ();_facc =_dd .Min (_dd .Max (_facc ,0.0),1.0);return NewPdfColorDeviceGray (_facc );};func (_bdab *PdfReader )newPdfAnnotationTrapNetFromDict (_cgaa *_fe .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bcdd :=PdfAnnotationTrapNet {};
return &_bcdd ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bccg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bccg .baseFields ()._gdgcc !=nil {return _bccg .baseFields ()._gdgcc ;};if _dcbfeg :=_bccg ._aeacd .getFontDescriptor ();_dcbfeg !=nil {return _dcbfeg ;};_df .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bccg );
return nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_aagfa *PdfWriter )SetFileName (name string ){_aagfa ._fdgdb =name };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func (_eefa *PdfReader )newPdfAnnotationSoundFromDict (_aaca *_fe .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eece :=PdfAnnotationSound {};_cafd ,_deag :=_eefa .newPdfAnnotationMarkupFromDict (_aaca );if _deag !=nil {return nil ,_deag ;
};_eece .PdfAnnotationMarkup =_cafd ;_eece .Name =_aaca .Get ("\u004e\u0061\u006d\u0065");_eece .Sound =_aaca .Get ("\u0053\u006f\u0075n\u0064");return &_eece ,nil ;};func (_cfacbg *PdfReader )buildOutlineTree (_ggebg _fe .PdfObject ,_gcdcgbd *PdfOutlineTreeNode ,_dafda *PdfOutlineTreeNode ,_dffd map[_fe .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dffd ==nil {_dffd =map[_fe .PdfObject ]struct{}{};
};_dffd [_ggebg ]=struct{}{};_cbcff ,_cabdd :=_ggebg .(*_fe .PdfIndirectObject );if !_cabdd {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ggebg );
};_abeb ,_fdcgc :=_cbcff .PdfObject .(*_fe .PdfObjectDictionary );if !_fdcgc {return nil ,nil ,_bbc .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_abeb ,_cbcff ,_cbcff );
if _acaba :=_abeb .Get ("\u0054\u0069\u0074l\u0065");_acaba !=nil {_gccda ,_cdcfe :=_cfacbg .newPdfOutlineItemFromIndirectObject (_cbcff );if _cdcfe !=nil {return nil ,nil ,_cdcfe ;};_gccda .Parent =_gcdcgbd ;_gccda .Prev =_dafda ;_beed :=_fe .ResolveReference (_abeb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_ebaaa :=_dffd [_beed ];_beed !=nil &&_beed !=_cbcff &&!_ebaaa {if !_fe .IsNullObject (_beed ){_dddaa ,_dgcdf ,_fgaadd :=_cfacbg .buildOutlineTree (_beed ,&_gccda .PdfOutlineTreeNode ,nil ,_dffd );if _fgaadd !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fgaadd );
}else {_gccda .First =_dddaa ;_gccda .Last =_dgcdf ;};};};_edef :=_fe .ResolveReference (_abeb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_caged :=_dffd [_edef ];_edef !=nil &&_edef !=_cbcff &&!_caged {if !_fe .IsNullObject (_edef ){_gebb ,_cccdb ,_dbfd :=_cfacbg .buildOutlineTree (_edef ,_gcdcgbd ,&_gccda .PdfOutlineTreeNode ,_dffd );
if _dbfd !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_dbfd );
}else {_gccda .Next =_gebb ;return &_gccda .PdfOutlineTreeNode ,_cccdb ,nil ;};};};return &_gccda .PdfOutlineTreeNode ,&_gccda .PdfOutlineTreeNode ,nil ;};_ggffg ,_fede :=_gebdg (_cbcff );if _fede !=nil {return nil ,nil ,_fede ;};_ggffg .Parent =_gcdcgbd ;
if _dcdf :=_abeb .Get ("\u0046\u0069\u0072s\u0074");_dcdf !=nil {_dcdf =_fe .ResolveReference (_dcdf );if _ ,_caaad :=_dffd [_dcdf ];_dcdf !=nil &&_dcdf !=_cbcff &&!_caaad {_bcbgd :=_fe .TraceToDirectObject (_dcdf );if _ ,_bbbe :=_bcbgd .(*_fe .PdfObjectNull );
!_bbbe &&_bcbgd !=nil {_aefcb ,_agfb ,_afag :=_cfacbg .buildOutlineTree (_dcdf ,&_ggffg .PdfOutlineTreeNode ,nil ,_dffd );if _afag !=nil {_df .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_afag );
}else {_ggffg .First =_aefcb ;_ggffg .Last =_agfb ;};};};};return &_ggffg .PdfOutlineTreeNode ,&_ggffg .PdfOutlineTreeNode ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adcb *PdfColorspaceSpecialSeparation )ToPdfObject ()_fe .PdfObject {_acae :=_fe .MakeArray (_fe .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_acae .Append (_adcb .ColorantName );_acae .Append (_adcb .AlternateSpace .ToPdfObject ());
_acae .Append (_adcb .TintTransform .ToPdfObject ());if _adcb ._faada !=nil {_adcb ._faada .PdfObject =_acae ;return _adcb ._faada ;};return _acae ;};func (_cad *PdfReader )newPdfActionSetOCGStateFromDict (_cebd *_fe .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cebd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cebd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_gdadb :=Permissions {};_gdadb .DocMDP =docMdp ;_abebc :=_fe .MakeDict ();_abebc .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_gdadb ._gedgde =_abebc ;return &_gdadb ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_eace *BorderStyle )GetPdfName ()string {switch *_eace {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";
StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";
StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";
StructureTypeForm ="\u0046\u006f\u0072\u006d";);

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_edeb pdfFontSimple )GetCharMetrics (code _cbg .CharCode )(_ag .CharMetrics ,bool ){if _ecegc ,_accf :=_edeb ._efacff [code ];_accf {return _ag .CharMetrics {Wx :_ecegc },true ;};if _ag .IsStdFont (_ag .StdFontName (_edeb ._cecc )){return _ag .CharMetrics {Wx :250},true ;
};return _ag .CharMetrics {},false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbbbg *PdfShadingType5 )ToPdfObject ()_fe .PdfObject {_gbbbg .PdfShading .ToPdfObject ();_gcgff ,_acaa :=_gbbbg .getShadingDict ();if _acaa !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbbbg .BitsPerCoordinate !=nil {_gcgff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gbbbg .BitsPerCoordinate );};if _gbbbg .BitsPerComponent !=nil {_gcgff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbbbg .BitsPerComponent );
};if _gbbbg .VerticesPerRow !=nil {_gcgff .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_gbbbg .VerticesPerRow );};if _gbbbg .Decode !=nil {_gcgff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbbbg .Decode );};
if _gbbbg .Function !=nil {if len (_gbbbg .Function )==1{_gcgff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbbbg .Function [0].ToPdfObject ());}else {_cgeac :=_fe .MakeArray ();for _ ,_ebee :=range _gbbbg .Function {_cgeac .Append (_ebee .ToPdfObject ());
};_gcgff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgeac );};};return _gbbbg ._gbaea ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dcbde *PdfOutlineTreeNode )GetContext ()PdfModel {if _eagb ,_bbbac :=_dcbde ._dedcd .(*PdfOutline );_bbbac {return _eagb ;};if _dccbb ,_edgb :=_dcbde ._dedcd .(*PdfOutlineItem );_edgb {return _dccbb ;};_df .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// AddCerts adds certificates to DSS.
func (_gggg *DSS )AddCerts (certs [][]byte )([]*_fe .PdfObjectStream ,error ){return _gggg .add (&_gggg .Certs ,_gggg ._gdfg ,certs );};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ecgg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agbc ,_bcde :=_fe .GetNumbersAsFloat (objects );
if _bcde !=nil {return nil ,_bcde ;};return _ecgg .ColorFromFloats (_agbc );};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fe .PdfObject )(*PdfInfo ,error ){var _ebaeb PdfInfo ;_cddb ,_gbfec :=obj .(*_fe .PdfObjectDictionary );if !_gbfec {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ffgc :=range _cddb .Keys (){switch _ffgc {case "\u0054\u0069\u0074l\u0065":_ebaeb .Title ,_ =_fe .GetString (_cddb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_ebaeb .Author ,_ =_fe .GetString (_cddb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ebaeb .Subject ,_ =_fe .GetString (_cddb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ebaeb .Keywords ,_ =_fe .GetString (_cddb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ebaeb .Creator ,_ =_fe .GetString (_cddb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ebaeb .Producer ,_ =_fe .GetString (_cddb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ebaeb .Trapped ,_ =_fe .GetName (_cddb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _aafd ,_fcdbb :=_fe .GetString (_cddb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_fcdbb &&_aafd .String ()!=""{_fcgf ,_fadg :=NewPdfDate (_aafd .String ());if _fadg !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_fadg );
};_ebaeb .CreationDate =&_fcgf ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _babae ,_egfa :=_fe .GetString (_cddb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_egfa &&_babae .String ()!=""{_afga ,_bgca :=NewPdfDate (_babae .String ());if _bgca !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bgca );
};_ebaeb .ModifiedDate =&_afga ;};default:_ecgb ,_ :=_fe .GetString (_cddb .Get (_ffgc ));if _ebaeb ._bdgg ==nil {_ebaeb ._bdgg =_fe .MakeDict ();};_ebaeb ._bdgg .Set (_ffgc ,_ecgb );};};return &_ebaeb ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_bgeabe *PdfOutputIntent )ParsePdfObject (object _fe .PdfObject )error {_bdabc ,_ggeeb :=_fe .GetDict (object );if !_ggeeb {_df .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _bbc .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_bgeabe ._gaecg =_bdabc ;_bgeabe .Type ,_ =_bdabc .GetString ("\u0054\u0079\u0070\u0065");_fbbfd ,_ggeeb :=_bdabc .GetString ("\u0053");if _ggeeb {switch _fbbfd {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_bgeabe .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_bgeabe .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_bgeabe .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_bgeabe .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_bgeabe .S =PdfOutputIntentTypeX ;
};};_bgeabe .OutputCondition ,_ =_bdabc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_bgeabe .OutputConditionIdentifier ,_ =_bdabc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_bgeabe .RegistryName ,_ =_bdabc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_bgeabe .Info ,_ =_bdabc .GetString ("\u0049\u006e\u0066\u006f");if _fddbb ,_bgabfg :=_fe .GetStream (_bdabc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_bgabfg {_bgeabe .ColorComponents ,_ =_fe .GetIntVal (_fddbb .Get ("\u004e"));_beffe ,_gafgf :=_fe .DecodeStream (_fddbb );if _gafgf !=nil {return _gafgf ;};_bgeabe .DestOutputProfile =_beffe ;};return nil ;};func (_bgg *PdfReader )newPdfAnnotationInkFromDict (_gdce *_fe .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ddcf :=PdfAnnotationInk {};
_gecc ,_gdd :=_bgg .newPdfAnnotationMarkupFromDict (_gdce );if _gdd !=nil {return nil ,_gdd ;};_ddcf .PdfAnnotationMarkup =_gecc ;_ddcf .InkList =_gdce .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ddcf .BS =_gdce .Get ("\u0042\u0053");return &_ddcf ,nil ;
};func (_agac *PdfReader )newPdfAnnotationWatermarkFromDict (_ccga *_fe .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_egd :=PdfAnnotationWatermark {};_egd .FixedPrint =_ccga .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_egd ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_cbced *PdfFieldButton )IsRadio ()bool {return _cbced .GetType ()==ButtonTypeRadio };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fe .PdfObject ;_faeg []byte ;_acad *_fe .PdfIndirectObject ;};

// SetStructParentsKey sets the StructParents key.
func (_fbcdb *PdfPage )SetStructParentsKey (key int ){if key ==-1{_fbcdb .StructParents =nil ;}else {_fbcdb .StructParents =_fe .MakeInteger (int64 (key ));};};

// SetForms sets the Acroform for a PDF file.
func (_eeffg *PdfWriter )SetForms (form *PdfAcroForm )error {_eeffg ._bcgdc =form ;return nil };

// BaseFont returns the font's "BaseFont" field.
func (_bcegag *PdfFont )BaseFont ()string {return _bcegag .baseFields ()._cecc };

// GetFontDescriptor returns the font descriptor for `font`.
func (_abbb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _abbb ._aeacd .getFontDescriptor (),nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_edcf *PdfFieldButton )SetType (btype ButtonType ){_agdc :=uint32 (0);if _edcf .Ff !=nil {_agdc =uint32 (*_edcf .Ff );};switch btype {case ButtonTypePush :_agdc |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_agdc |=FieldFlagRadio .Mask ();
};_edcf .Ff =_fe .MakeInteger (int64 (_agdc ));};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_dcfbf *PdfPage )GetStructParentsKey ()int {if _fdaa ,_faab :=_fe .GetIntVal (_dcfbf .StructParents );_faab {return _fdaa ;};return -1;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_gegeg *_fe .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_fe .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_fe .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_fe .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_fe .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_fe .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_fe .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_fe .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_fe .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_fe .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_fe .PdfObjectDictionary ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cfab *PdfFont )SubsetRegistered ()error {switch _bafa :=_cfab ._aeacd .(type ){case *pdfFontType0 :_cfefg :=_bafa .subsetRegistered ();if _cfefg !=nil {_df .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cfefg );
return _cfefg ;};if _bafa ._cdcc !=nil {if _bafa ._agfa !=nil {_bafa ._agfa .ToPdfObject ();};_bafa .ToPdfObject ();};default:_df .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bafa );
};return nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fe .PdfObject ;Flags _fe .PdfObject ;};func (_ddac *PdfWriter )copyObjects (){_bfgb :=make (map[_fe .PdfObject ]_fe .PdfObject );_afcbd :=make ([]_fe .PdfObject ,0,len (_ddac ._dbbcd ));
_gadd :=make (map[_fe .PdfObject ]struct{},len (_ddac ._dbbcd ));_eaadg :=make (map[_fe .PdfObject ]struct{});for _ ,_bfafd :=range _ddac ._dbbcd {_degbe :=_ddac .copyObject (_bfafd ,_bfgb ,_eaadg ,false );if _ ,_abgb :=_eaadg [_bfafd ];_abgb {continue ;
};_afcbd =append (_afcbd ,_degbe );_gadd [_degbe ]=struct{}{};};_ddac ._dbbcd =_afcbd ;_ddac ._debbc =_gadd ;_ddac ._fefff =_ddac .copyObject (_ddac ._fefff ,_bfgb ,nil ,false ).(*_fe .PdfIndirectObject );_ddac ._dabeb =_ddac .copyObject (_ddac ._dabeb ,_bfgb ,nil ,false ).(*_fe .PdfIndirectObject );
if _ddac ._bceed !=nil {_ddac ._bceed =_ddac .copyObject (_ddac ._bceed ,_bfgb ,nil ,false ).(*_fe .PdfIndirectObject );};if _ddac ._cgedg {_agbac :=make (map[_fe .PdfObject ]int64 );for _aaaca ,_becfe :=range _ddac ._aeffda {if _ceeeec ,_fabad :=_bfgb [_aaaca ];
_fabad {_agbac [_ceeeec ]=_becfe ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ddac ._aeffda =_agbac ;};};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// Encoder returns the font's text encoder.
func (_dcfea pdfCIDFontType2 )Encoder ()_cbg .TextEncoder {return _dcfea ._egdcg };

// ToPdfObject implements interface PdfModel.
func (_fgf *PdfActionThread )ToPdfObject ()_fe .PdfObject {_fgf .PdfAction .ToPdfObject ();_dac :=_fgf ._ea ;_ac :=_dac .PdfObject .(*_fe .PdfObjectDictionary );_ac .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeThread )));if _fgf .F !=nil {_ac .Set ("\u0046",_fgf .F .ToPdfObject ());
};_ac .SetIfNotNil ("\u0044",_fgf .D );_ac .SetIfNotNil ("\u0042",_fgf .B );return _dac ;};func _dddee (_ecdc ,_cfge string )string {if _bf .Contains (_ecdc ,"\u002b"){_adgf :=_bf .Split (_ecdc ,"\u002b");if len (_adgf )==2{_ecdc =_adgf [1];};};return _cfge +"\u002b"+_ecdc ;
};

// AddChild adds a child object.
func (_bebbcd *KDict )AddChild (kv *KValue ){_bebbcd ._fdgad =append (_bebbcd ._fdgad ,kv )};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_cbde *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_cbde ._bdebd =nonFullScreenPageMode ;};func (_gdaag *Image )resampleLowBits (_aeadg []uint32 ){_ccde :=_af .BytesPerLine (int (_gdaag .Width ),int (_gdaag .BitsPerComponent ),_gdaag .ColorComponents );
_ffafbe :=make ([]byte ,_gdaag .ColorComponents *_ccde *int (_gdaag .Height ));_decd :=int (_gdaag .BitsPerComponent )*_gdaag .ColorComponents *int (_gdaag .Width );_fcaba :=uint8 (8);var (_bcecc ,_dcba int ;_ebac uint32 ;);for _gbfce :=0;_gbfce < int (_gdaag .Height );
_gbfce ++{_dcba =_gbfce *_ccde ;for _adec :=0;_adec < _decd ;_adec ++{_ebac =_aeadg [_bcecc ];_fcaba -=uint8 (_gdaag .BitsPerComponent );_ffafbe [_dcba ]|=byte (_ebac )<<_fcaba ;if _fcaba ==0{_fcaba =8;_dcba ++;};_bcecc ++;};};_gdaag .Data =_ffafbe ;};


// String returns a string that describes `font`.
func (_dfdeg *PdfFont )String ()string {_ccgc :="";if _dfdeg ._aeacd .Encoder ()!=nil {_ccgc =_dfdeg ._aeacd .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_dfdeg ._aeacd ,_dfdeg .baseFields ().coreString (),_ccgc );
};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";
StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";
StructureTypeTableHeaderCell ="\u0054\u0048";StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);

// A returns the value of the A component of the color.
func (_dagd *PdfColorCalRGB )A ()float64 {return _dagd [0]};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fcecg *modelManager )GetPrimitiveFromModel (model PdfModel )_fe .PdfObject {_ddbec ,_cgbaf :=_fcecg ._bgcbf [model ];if !_cgbaf {return nil ;};return _ddbec ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _fe .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _fe .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_fe .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _fe .PdfObject ;

// The children of this structure element.
K _fe .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _fe .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _fe .PdfObject ;

// The current revision number of this structure element
R *_fe .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_fe .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_fe .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_fe .PdfObjectString ;

// The expanded form of an abbreviation.
E *_fe .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_fe .PdfObjectString ;_fdgad []*KValue ;_gebfa int64 ;_bfbab *PdfRectangle ;};

// GetXObjectByName gets XObject by name.
func (_bcgbg *PdfPage )GetXObjectByName (name _fe .PdfObjectName )(_fe .PdfObject ,bool ){_ggaffe ,_addaf :=_bcgbg .Resources .XObject .(*_fe .PdfObjectDictionary );if !_addaf {return nil ,false ;};if _gcdec :=_ggaffe .Get (name );_gcdec !=nil {return _gcdec ,true ;
};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_cgg *PdfAnnotationRichMedia )ToPdfObject ()_fe .PdfObject {_cgg .PdfAnnotation .ToPdfObject ();_dfaa :=_cgg ._efg ;_dgcg :=_dfaa .PdfObject .(*_fe .PdfObjectDictionary );_dgcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_dgcg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_cgg .RichMediaSettings );_dgcg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_cgg .RichMediaContent );
return _dfaa ;};func _eabeb (_gfbg _fe .PdfObject )(*PdfFontDescriptor ,error ){_gbdb :=&PdfFontDescriptor {};_gfbg =_fe .ResolveReference (_gfbg );if _ccgf ,_acfa :=_gfbg .(*_fe .PdfIndirectObject );_acfa {_gbdb ._cfbaa =_ccgf ;_gfbg =_ccgf .PdfObject ;
};_gggbd ,_cdce :=_fe .GetDict (_gfbg );if !_cdce {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfbg );
return nil ,_fe .ErrTypeError ;};if _gaabc :=_gggbd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gaabc !=nil {_gbdb .FontName =_gaabc ;}else {_df .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_bdcfg ,_ :=_fe .GetName (_gbdb .FontName );if _eccc :=_gggbd .Get ("\u0054\u0079\u0070\u0065");_eccc !=nil {_bfcce ,_befbba :=_eccc .(*_fe .PdfObjectName );if !_befbba ||string (*_bfcce )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eccc ,_bdcfg ,_gbdb .FontName );
};}else {_df .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bdcfg ,_gbdb .FontName );
};_gbdb .FontFamily =_gggbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gbdb .FontStretch =_gggbd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gbdb .FontWeight =_gggbd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gbdb .Flags =_gggbd .Get ("\u0046\u006c\u0061g\u0073");_gbdb .FontBBox =_gggbd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gbdb .ItalicAngle =_gggbd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gbdb .Ascent =_gggbd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gbdb .Descent =_gggbd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gbdb .Leading =_gggbd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gbdb .CapHeight =_gggbd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gbdb .XHeight =_gggbd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gbdb .StemV =_gggbd .Get ("\u0053\u0074\u0065m\u0056");_gbdb .StemH =_gggbd .Get ("\u0053\u0074\u0065m\u0048");_gbdb .AvgWidth =_gggbd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gbdb .MaxWidth =_gggbd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gbdb .MissingWidth =_gggbd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gbdb .FontFile =_gggbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gbdb .FontFile2 =_gggbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gbdb .FontFile3 =_gggbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gbdb .CharSet =_gggbd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gbdb .Style =_gggbd .Get ("\u0053\u0074\u0079l\u0065");_gbdb .Lang =_gggbd .Get ("\u004c\u0061\u006e\u0067");
_gbdb .FD =_gggbd .Get ("\u0046\u0044");_gbdb .CIDSet =_gggbd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gbdb .Flags !=nil {if _dgbbe ,_fdgde :=_fe .GetIntVal (_gbdb .Flags );_fdgde {_gbdb ._aedg =_dgbbe ;};};if _gbdb .MissingWidth !=nil {if _acaf ,_cccd :=_fe .GetNumberAsFloat (_gbdb .MissingWidth );
_cccd ==nil {_gbdb ._gdeda =_acaf ;};};if _gbdb .FontFile !=nil {_dgedf ,_deead :=_dgabg (_gbdb .FontFile );if _deead !=nil {return _gbdb ,_deead ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_dgedf );_gbdb .fontFile =_dgedf ;
};if _gbdb .FontFile2 !=nil {_gdfc ,_ceee :=_ag .NewFontFile2FromPdfObject (_gbdb .FontFile2 );if _ceee !=nil {return _gbdb ,_ceee ;};_df .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_gdfc .String ());_gbdb ._ffbag =&_gdfc ;
};return _gbdb ,nil ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_fgdd *IDTree )ToPdfObject ()_fe .PdfObject {_efea :=_fe .MakeDict ();if _fgdd .Names !=nil &&_fgdd .Names .Len ()> 0{_efea .Set ("\u004e\u0061\u006de\u0073",_fgdd .Names );_efea .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_fgdd .Limits );};if len (_fgdd .Kids )> 0{_gdef :=_fe .MakeArray ();
for _ ,_dacec :=range _fgdd .Kids {_gdef .Append (_dacec .ToPdfObject ());};_dffgf :=_fe .MakeDict ();_dffgf .Set ("\u004b\u0069\u0064\u0073",_gdef );_efea .Set ("\u004b\u0069\u0064\u0073",_dffgf );};return _efea ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cagdg :=&PdfOutlineItem {_cfgag :_fe .MakeIndirectObject (_fe .MakeDict ())};_cagdg ._dedcd =_cagdg ;return _cagdg ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_adaga *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _adaga ._bdfdf !=nil {return _adaga ._bdfdf ,nil ;};if _adaga .ColorSpace ==nil {return nil ,nil ;};_beagf ,_adggd :=_cbage (_adaga .ColorSpace );if _adggd !=nil {return nil ,_adggd ;
};_adaga ._bdfdf =_beagf ;return _adaga ._bdfdf ,nil ;};func (_egfaa *PdfField )inherit (_dgeb func (*PdfField )bool )(bool ,error ){_aecbc :=map[*PdfField ]bool {};_gece :=false ;_eafag :=_egfaa ;for _eafag !=nil {if _ ,_dfadb :=_aecbc [_eafag ];_dfadb {return false ,_bbc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_bfdge :=_dgeb (_eafag );if _bfdge {_gece =true ;break ;};_aecbc [_eafag ]=true ;_eafag =_eafag .Parent ;};return _gece ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ggdd *PdfAppender )UpdateObject (obj _fe .PdfObject ){_ggdd .replaceObject (obj ,obj );if _ ,_bbbg :=_ggdd ._dgg [obj ];!_bbbg {_ggdd ._baeg =append (_ggdd ._baeg ,obj );_ggdd ._dgg [obj ]=struct{}{};};};func (_cfe *PdfReader )newPdfActionSoundFromDict (_gea *_fe .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gea .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gea .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gea .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gea .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gea .Get ("\u004d\u0069\u0078")},nil ;
};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bfdef *PdfReader )GetOutlines ()(*Outline ,error ){if _bfdef ==nil {return nil ,_bbc .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dggb :=_bfdef .GetOutlineTree ();if _dggb ==nil {return nil ,_bbc .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dfdag func (_debc *PdfOutlineTreeNode ,_bcagaf *[]*OutlineItem );_dfdag =func (_cgdba *PdfOutlineTreeNode ,_bedgd *[]*OutlineItem ){if _cgdba ==nil {return ;};if _cgdba ._dedcd ==nil {_df .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cegea *OutlineItem ;if _dgcce ,_dadg :=_cgdba ._dedcd .(*PdfOutlineItem );_dadg {_ccdgg :=_dgcce .Dest ;if (_ccdgg ==nil ||_fe .IsNullObject (_ccdgg ))&&_dgcce .A !=nil {if _fddfd ,_eafdf :=_fe .GetDict (_dgcce .A );_eafdf {if _gedgd ,_bfafa :=_fe .GetArray (_fddfd .Get ("\u0044"));
_bfafa {_ccdgg =_gedgd ;}else {_bgafb ,_eaaf :=_fe .GetString (_fddfd .Get ("\u0044"));if !_eaaf {return ;};_babga ,_eaaf :=_bfdef ._bbfec .Get ("\u004e\u0061\u006de\u0073").(*_fe .PdfObjectReference );if !_eaaf {return ;};_bdcce ,_ebbe :=_bfdef ._gabca .LookupByReference (*_babga );
if _ebbe !=nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_ebbe .Error ());
return ;};_ababf ,_eaaf :=_bdcce .(*_fe .PdfIndirectObject );if !_eaaf {return ;};_babgd :=map[_fe .PdfObject ]struct{}{};_ebbe =_bfdef .buildNameNodes (_ababf ,_babgd );if _ebbe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_ebbe .Error ());
return ;};for _acdca :=range _babgd {_bdgbb ,_efacaa :=_fe .GetDict (_acdca );if !_efacaa {continue ;};_fcadd ,_efacaa :=_fe .GetArray (_bdgbb .Get ("\u004e\u0061\u006de\u0073"));if !_efacaa {continue ;};for _fcdcg ,_daccg :=range _fcadd .Elements (){switch _daccg .(type ){case *_fe .PdfObjectString :if _daccg .String ()==_bgafb .String (){if _dgagg :=_fcadd .Get (_fcdcg +1);
_dgagg !=nil {if _gfgfbg ,_bbac :=_fe .GetDict (_dgagg );_bbac {_ccdgg =_gfgfbg .Get ("\u0044");break ;};};};};};};};};};var _bgccf OutlineDest ;if _ccdgg !=nil &&!_fe .IsNullObject (_ccdgg ){if _feddg ,_gabga :=_bedaf (_ccdgg ,_bfdef );_gabga ==nil {_bgccf =*_feddg ;
}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_ccdgg ,_gabga );
};};_cegea =NewOutlineItem (_dgcce .Title .Decoded (),_bgccf );*_bedgd =append (*_bedgd ,_cegea );if _dgcce .Next !=nil {_dfdag (_dgcce .Next ,_bedgd );};};if _cgdba .First !=nil {if _cegea !=nil {_bedgd =&_cegea .Entries ;};_dfdag (_cgdba .First ,_bedgd );
};};_acegc :=NewOutline ();_dfdag (_dggb ,&_acegc .Entries );return _acegc ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_eccee :=&PdfOutline {_cadgg :_fe .MakeIndirectObject (_fe .MakeDict ())};_eccee ._dedcd =_eccee ;return _eccee ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_ceadb *KDict )ToPdfObject ()_fe .PdfObject {_aeda :=_fe .MakeDict ();if _ceadb .ID !=nil {_aeda .Set ("\u0049\u0044",_ceadb .ID );};if _ceadb .K !=nil {_aeda .Set ("\u004b",_ceadb .K );}else if len (_ceadb ._fdgad )> 0{if len (_ceadb ._fdgad )==1{_ceadb .K =_ceadb ._fdgad [0].ToPdfObject ();
}else {_agfcd :=_fe .MakeArray ();for _ ,_afdcag :=range _ceadb ._fdgad {_agfcd .Append (_afdcag .ToPdfObject ());};_ceadb .K =_agfcd ;};_aeda .Set ("\u004b",_ceadb .K );};if _ceadb .S !=nil {_aeda .Set ("\u0053",_ceadb .S );};if _ceadb .P !=nil {_aeda .Set ("\u0050",_ceadb .P );
};if _ceadb .Pg !=nil {_aeda .Set ("\u0050\u0067",_ceadb .Pg );};if _ceadb .C !=nil {_aeda .Set ("\u0043",_ceadb .C );};if _ceadb .R !=nil {_aeda .Set ("\u0052",_ceadb .R );};if _ceadb .T !=nil {_aeda .Set ("\u0054",_ceadb .T );};if _ceadb .Lang !=nil {_aeda .Set ("\u004c\u0061\u006e\u0067",_ceadb .Lang );
};if _ceadb .Alt !=nil {_aeda .Set ("\u0041\u006c\u0074",_ceadb .Alt );};if _ceadb .E !=nil {_aeda .Set ("\u0045",_ceadb .E );};if _ceadb .A !=nil {_aeda .Set ("\u0041",_ceadb .A );}else if _ceadb ._bfbab !=nil {_ebdge :=_fe .MakeArrayFromFloats ([]float64 {_ceadb ._bfbab .Llx ,_ceadb ._bfbab .Lly ,_ceadb ._bfbab .Urx ,_ceadb ._bfbab .Ury });
_aabgg :=_fe .MakeDict ();_aabgg .Set ("\u0042\u0042\u006f\u0078",_ebdge );_aabgg .Set ("\u004f",_fe .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_aeda .Set ("\u0041",_fe .MakeIndirectObject (_aabgg ));};return _aeda ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fe .PdfObject ;T3DV _fe .PdfObject ;T3DA _fe .PdfObject ;T3DI _fe .PdfObject ;T3DB _fe .PdfObject ;};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_fe .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_fe .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};

// GetChildren returns the children of the K dictionary object.
func (_fbafc *KDict )GetChildren ()[]*KValue {return _fbafc ._fdgad };var _ccfa =_bg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gdgc *_fe .PdfIndirectObject ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_fbgg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _fbgg .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fbgg .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bgea :=NewPdfColorspaceDeviceGray ();return _bgea .ImageToRGB (img );}else if _fbgg .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _fbgg .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cebf :=NewPdfColorspaceDeviceCMYK ();return _cebf .ImageToRGB (img );}else {return img ,_bbc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fbgg );
_dgcab ,_acbf :=_fbgg .Alternate .ImageToRGB (img );_df .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_df .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dgcab );
return _dgcab ,_acbf ;};func (_gdagg *fontFile )loadFromSegments (_eadf ,_bcbc []byte )error {_df .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_eadf ),len (_bcbc ));
_dgggd :=_gdagg .parseASCIIPart (_eadf );if _dgggd !=nil {return _dgggd ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gdagg );if len (_bcbc )==0{return nil ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gdagg );
return nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_adfc *PdfPage )GetPageAsIndirectObject ()*_fe .PdfIndirectObject {return _adfc ._fbecf };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fe .StreamEncoder )(*XObjectImage ,error ){_eacc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_eacc ,img ,cs ,encoder );};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bbdga *PdfWriter )SetPageLabels (pageLabels _fe .PdfObject )error {if pageLabels ==nil {return nil ;};_df .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bbdga ._efaac .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bbdga .addObjects (pageLabels );};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_eafb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_eafb .GetNumComponents (){return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafa ,_gecg :=_eafb .TintTransform .Evaluate (vals );
if _gecg !=nil {return nil ,_gecg ;};_ccce ,_gecg :=_eafb .AlternateSpace .ColorFromFloats (_cafa );if _gecg !=nil {return nil ,_gecg ;};return _ccce ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_feae *PdfColorspaceLab )DecodeArray ()[]float64 {_cgde :=[]float64 {0,100};if _feae !=nil &&_feae .Range !=nil &&len (_feae .Range )==4{_cgde =append (_cgde ,_feae .Range ...);}else {_cgde =append (_cgde ,-100,100,-100,100);};return _cgde ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ccb :=NewPdfAction ();_fa :=&PdfActionGoTo3DView {};_fa .PdfAction =_ccb ;_ccb .SetContext (_fa );return _fa ;};func _fafg (_fbcga *XObjectImage )error {if _fbcga .SMask ==nil {return nil ;};_aebaf ,_abdea :=_fbcga .SMask .(*_fe .PdfObjectStream );
if !_abdea {_df .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _fe .ErrTypeError ;};_cdebb :=_aebaf .PdfObjectDictionary ;
_fbfca :=_cdebb .Get ("\u004d\u0061\u0074t\u0065");if _fbfca ==nil {return nil ;};_cdaea ,_ddbea :=_agaae (_fbfca .(*_fe .PdfObjectArray ));if _ddbea !=nil {return _ddbea ;};_ceacb :=_fe .MakeArrayFromFloats ([]float64 {_cdaea });_cdebb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ceacb );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbbf *PdfAnnotation3D )ToPdfObject ()_fe .PdfObject {_cbbf .PdfAnnotation .ToPdfObject ();_bddd :=_cbbf ._efg ;_aebc :=_bddd .PdfObject .(*_fe .PdfObjectDictionary );_aebc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0033\u0044"));
_aebc .SetIfNotNil ("\u0033\u0044\u0044",_cbbf .T3DD );_aebc .SetIfNotNil ("\u0033\u0044\u0056",_cbbf .T3DV );_aebc .SetIfNotNil ("\u0033\u0044\u0041",_cbbf .T3DA );_aebc .SetIfNotNil ("\u0033\u0044\u0049",_cbbf .T3DI );_aebc .SetIfNotNil ("\u0033\u0044\u0042",_cbbf .T3DB );
return _bddd ;};

// SetRefObject sets the reference object for the KValue.
func (_bdede *KValue )SetRefObject (refObject _fe .PdfObject ){_bdede .Clear ();_bdede ._ebfce =refObject ;};func (_ccgfb *pdfFontType0 )baseFields ()*fontCommon {return &_ccgfb .fontCommon };

// ToPdfObject returns the PDF representation of the colorspace.
func (_edgeb *PdfPageResourcesColorspaces )ToPdfObject ()_fe .PdfObject {_cbdf :=_fe .MakeDict ();for _ ,_ebge :=range _edgeb .Names {_cbdf .Set (_fe .PdfObjectName (_ebge ),_edgeb .Colorspaces [_ebge ].ToPdfObject ());};if _edgeb ._beeeg !=nil {_edgeb ._beeeg .PdfObject =_cbdf ;
return _edgeb ._beeeg ;};return _cbdf ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gd .ReadSeeker )(*PdfFont ,error ){const _dbab =_cbg .CharCode (32);const _cfac =_cbg .CharCode (255);_cbee ,_cbabe :=_gd .ReadAll (r );if _cbabe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cbabe );
return nil ,_cbabe ;};_cbfeg ,_cbabe :=_ag .TtfParse (_ee .NewReader (_cbee ));if _cbabe !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cbabe );
return nil ,_cbabe ;};_adbd :=&pdfFontSimple {_efacff :make (map[_cbg .CharCode ]float64 ),fontCommon :fontCommon {_cdgfg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_adbd ._dcdgc =_cbg .NewWinAnsiEncoder ();_adbd ._cecc =_cbfeg .PostScriptName ;
_adbd .FirstChar =_fe .MakeInteger (int64 (_dbab ));_adbd .LastChar =_fe .MakeInteger (int64 (_cfac ));_aedba :=1000.0/float64 (_cbfeg .UnitsPerEm );if len (_cbfeg .Widths )<=0{return nil ,_bbc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cebag :=_aedba *float64 (_cbfeg .Widths [0]);_ddebg :=make ([]float64 ,0,_cfac -_dbab +1);for _fgae :=_dbab ;_fgae <=_cfac ;_fgae ++{_feeedd ,_ggbe :=_adbd .Encoder ().CharcodeToRune (_fgae );if !_ggbe {_df .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fgae );
_ddebg =append (_ddebg ,_cebag );continue ;};_abbba ,_aabea :=_cbfeg .Chars [_feeedd ];if !_aabea {_df .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_ddebg =append (_ddebg ,_cebag );
continue ;};_dbdef :=_aedba *float64 (_cbfeg .Widths [_abbba ]);_ddebg =append (_ddebg ,_dbdef );};_adbd .Widths =_fe .MakeIndirectObject (_fe .MakeArrayFromFloats (_ddebg ));if len (_ddebg )< int (_cfac -_dbab +1){_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_ddebg ),255-32+1);
return nil ,_fe .ErrRangeError ;};for _efacb :=_dbab ;_efacb <=_cfac ;_efacb ++{_adbd ._efacff [_efacb ]=_ddebg [_efacb -_dbab ];};_adbd .Encoding =_fe .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fage :=&PdfFontDescriptor {};
_fage .FontName =_fe .MakeName (_cbfeg .PostScriptName );_fage .Ascent =_fe .MakeFloat (_aedba *float64 (_cbfeg .TypoAscender ));_fage .Descent =_fe .MakeFloat (_aedba *float64 (_cbfeg .TypoDescender ));_fage .CapHeight =_fe .MakeFloat (_aedba *float64 (_cbfeg .CapHeight ));
_fage .FontBBox =_fe .MakeArrayFromFloats ([]float64 {_aedba *float64 (_cbfeg .Xmin ),_aedba *float64 (_cbfeg .Ymin ),_aedba *float64 (_cbfeg .Xmax ),_aedba *float64 (_cbfeg .Ymax )});_fage .ItalicAngle =_fe .MakeFloat (_cbfeg .ItalicAngle );_fage .MissingWidth =_fe .MakeFloat (_aedba *float64 (_cbfeg .Widths [0]));
_aeccg ,_cbabe :=_fe .MakeStream (_cbee ,_fe .NewFlateEncoder ());if _cbabe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cbabe );
return nil ,_cbabe ;};_aeccg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (len (_cbee ))));_fage .FontFile2 =_aeccg ;if _cbfeg .Bold {_fage .StemV =_fe .MakeInteger (120);}else {_fage .StemV =_fe .MakeInteger (70);
};_gbef :=_ffbad ;if _cbfeg .IsFixedPitch {_gbef |=_dcde ;};if _cbfeg .ItalicAngle !=0{_gbef |=_bddbf ;};_fage .Flags =_fe .MakeInteger (int64 (_gbef ));_adbd ._gdgcc =_fage ;_aadcc :=&PdfFont {_aeacd :_adbd };return _aadcc ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fe .PdfObjectArray ;Domain *_fe .PdfObjectArray ;Function []PdfFunction ;Extend *_fe .PdfObjectArray ;};func _dfdbb (_cdebd _fe .PdfObject )*Names {_ddecf :=_dagf ();_efecb :=_fe .TraceToDirectObject (_cdebd ).(*_fe .PdfObjectDictionary );
if _gedg :=_efecb .Get ("\u0044\u0065\u0073t\u0073");_gedg !=nil {_ddecf .Dests =_fe .TraceToDirectObject (_gedg ).(*_fe .PdfObjectDictionary );};if _cade :=_efecb .Get ("\u0041\u0050");_cade !=nil {_ddecf .AP =_fe .TraceToDirectObject (_cade ).(*_fe .PdfObjectDictionary );
};if _gbgdf :=_efecb .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_gbgdf !=nil {_ddecf .JavaScript =_fe .TraceToDirectObject (_gbgdf ).(*_fe .PdfObjectDictionary );};if _defgb :=_efecb .Get ("\u0050\u0061\u0067e\u0073");_defgb !=nil {_ddecf .Pages =_fe .TraceToDirectObject (_defgb ).(*_fe .PdfObjectDictionary );
};if _dfgd :=_efecb .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_dfgd !=nil {_ddecf .Templates =_fe .TraceToDirectObject (_dfgd ).(*_fe .PdfObjectDictionary );};if _fbcdf :=_efecb .Get ("\u0049\u0044\u0053");_fbcdf !=nil {_ddecf .IDS =_fe .TraceToDirectObject (_fbcdf ).(*_fe .PdfObjectDictionary );
};if _acedc :=_efecb .Get ("\u0055\u0052\u004c\u0053");_acedc !=nil {_ddecf .URLS =_fe .TraceToDirectObject (_acedc ).(*_fe .PdfObjectDictionary );};if _edbdc :=_efecb .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_edbdc !=nil {_ddecf .EmbeddedFiles =_fe .TraceToDirectObject (_edbdc ).(*_fe .PdfObjectDictionary );};if _fggee :=_efecb .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_fggee !=nil {_ddecf .AlternatePresentations =_fe .TraceToDirectObject (_fggee ).(*_fe .PdfObjectDictionary );
};if _gdgb :=_efecb .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_gdgb !=nil {_ddecf .Renditions =_fe .TraceToDirectObject (_gdgb ).(*_fe .PdfObjectDictionary );};return _ddecf ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};var _deec =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;type modelManager struct{_bgcbf map[PdfModel ]_fe .PdfObject ;_dcege map[_fe .PdfObject ]PdfModel ;};

// GetFillImage get attached model.Image in push button.
func (_dfcg *PdfFieldButton )GetFillImage ()*Image {if _dfcg .IsPush (){return _dfcg ._acag ;};return nil ;};func (_fcde *PdfPage )removeXObj (_eeebg *_fe .PdfObjectDictionary ,_dabbf _fe .PdfObjectName ){_eeebg .Remove (_dabbf );_ffbaga :=_fe .NewFlateEncoder ();
_bgef :=_fcde .GetContentStreamObjs ();_acfca :=_fe .MakeArray ();for _ ,_fdbcb :=range _bgef {_adedb ,_ :=_bgae (_fdbcb );if _bf .Contains (_adedb ,_dabbf .String ()){_bdbab :=_bf .Index (_adedb ,_dabbf .String ());_cbabg :=_bf .LastIndex (_adedb [:_bdbab ],"\u0071");
_ebeae :=_bf .Index (_adedb [_bdbab :],"\u0051")+_bdbab +1;if _cbabg >=0&&_ebeae >=0{var _becb _bf .Builder ;_becb .WriteString (_adedb [:_cbabg ]);_becb .WriteString (_adedb [_ebeae :]);_gdacg ,_aebae :=_fe .MakeStream ([]byte (_becb .String ()),_ffbaga );
if _aebae ==nil {_acfca .Append (_gdacg );continue ;};};};_acfca .Append (_fdbcb );};_fcde .Contents =_acfca ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ffecg *PdfOutlineTreeNode )GetContainingPdfObject ()_fe .PdfObject {return _ffecg .GetContext ().GetContainingPdfObject ();};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gddce *XObjectImage )SetFilter (encoder _fe .StreamEncoder )error {_aeefad :=_gddce .Stream ;_dbbeg ,_dgba :=_gddce .Filter .DecodeBytes (_aeefad );if _dgba !=nil {return _dgba ;};_gddce .Filter =encoder ;encoder .UpdateParams (_gddce .getParamsDict ());
_aeefad ,_dgba =encoder .EncodeBytes (_dbbeg );if _dgba !=nil {return _dgba ;};_gddce .Stream =_aeefad ;return nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_ababa *PdfPageResources )ToPdfObject ()_fe .PdfObject {_gcbfe :=_ababa ._fdcdc ;_gcbfe .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ababa .ExtGState );if _ababa ._bdfdf !=nil {_ababa .ColorSpace =_ababa ._bdfdf .ToPdfObject ();};
_gcbfe .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ababa .ColorSpace );_gcbfe .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ababa .Pattern );_gcbfe .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ababa .Shading );
_gcbfe .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ababa .XObject );_gcbfe .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ababa .Font );_gcbfe .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ababa .ProcSet );_gcbfe .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ababa .Properties );
return _gcbfe ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ddeb *_fe .PdfIndirectObject ;Certs []*_fe .PdfObjectStream ;OCSPs []*_fe .PdfObjectStream ;CRLs []*_fe .PdfObjectStream ;VRI map[string ]*VRI ;_gdfg map[string ]*_fe .PdfObjectStream ;_cdbaf map[string ]*_fe .PdfObjectStream ;_dgcge map[string ]*_fe .PdfObjectStream ;
};

// GetStandardApplier gets currently used StandardApplier..
func (_dcfgdg *PdfWriter )GetStandardApplier ()StandardApplier {return _dcfgdg ._fagcf };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gdc :=NewPdfAction ();_dgc :=&PdfActionSetOCGState {};_dgc .PdfAction =_gdc ;_gdc .SetContext (_dgc );return _dgc ;};func _dead (_efced *PdfField ,_ffdfc _fe .PdfObject )error {switch _efced .GetContext ().(type ){case *PdfFieldText :switch _abcdb :=_ffdfc .(type ){case *_fe .PdfObjectName :_aebg :=_abcdb ;
_df .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_aebg .String ());
_efced .V =_fe .MakeEncodedString (_abcdb .String (),true );case *_fe .PdfObjectString :_efced .V =_fe .MakeEncodedString (_abcdb .String (),true );default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_abcdb ,_abcdb );
};case *PdfFieldButton :switch _ffdfc .(type ){case *_fe .PdfObjectName :if len (_ffdfc .String ())> 0{_efced .V =_ffdfc ;_gbcfa (_efced ,_ffdfc );};case *_fe .PdfObjectString :if len (_ffdfc .String ())> 0{_efced .V =_fe .MakeName (_ffdfc .String ());
_gbcfa (_efced ,_efced .V );};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_efced .PartialName (),_ffdfc );_efced .V =_ffdfc ;
};case *PdfFieldChoice :switch _ffdfc .(type ){case *_fe .PdfObjectName :if len (_ffdfc .String ())> 0{_efced .V =_fe .MakeString (_ffdfc .String ());_gbcfa (_efced ,_ffdfc );};case *_fe .PdfObjectString :if len (_ffdfc .String ())> 0{_efced .V =_ffdfc ;
_gbcfa (_efced ,_fe .MakeName (_ffdfc .String ()));};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_efced .PartialName (),_ffdfc );
_efced .V =_ffdfc ;};case *PdfFieldSignature :_df .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_efced .PartialName (),_ffdfc );
};return nil ;};func _dcgge (_cdcg _fe .PdfObject )(*PdfFunctionType2 ,error ){_bedb :=&PdfFunctionType2 {};var _ffdbc *_fe .PdfObjectDictionary ;if _cfacb ,_cdac :=_cdcg .(*_fe .PdfIndirectObject );_cdac {_ebce ,_ecdab :=_cfacb .PdfObject .(*_fe .PdfObjectDictionary );
if !_ecdab {return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bedb ._fgfd =_cfacb ;_ffdbc =_ebce ;}else if _bagf ,_afcdd :=_cdcg .(*_fe .PdfObjectDictionary );_afcdd {_ffdbc =_bagf ;}else {return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_df .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ffdbc .String ());_egdfe ,_cdgg :=_fe .TraceToDirectObject (_ffdbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fe .PdfObjectArray );if !_cdgg {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bbc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _egdfe .Len ()< 0||_egdfe .Len ()%2!=0{_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gcagbc ,_gccd :=_egdfe .ToFloat64Array ();if _gccd !=nil {return nil ,_gccd ;};_bedb .Domain =_gcagbc ;_egdfe ,_cdgg =_fe .TraceToDirectObject (_ffdbc .Get ("\u0052\u0061\u006eg\u0065")).(*_fe .PdfObjectArray );
if _cdgg {if _egdfe .Len ()< 0||_egdfe .Len ()%2!=0{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gabg ,_bagaa :=_egdfe .ToFloat64Array ();if _bagaa !=nil {return nil ,_bagaa ;};_bedb .Range =_gabg ;
};_egdfe ,_cdgg =_fe .TraceToDirectObject (_ffdbc .Get ("\u0043\u0030")).(*_fe .PdfObjectArray );if _cdgg {_debgb ,_gfcf :=_egdfe .ToFloat64Array ();if _gfcf !=nil {return nil ,_gfcf ;};_bedb .C0 =_debgb ;};_egdfe ,_cdgg =_fe .TraceToDirectObject (_ffdbc .Get ("\u0043\u0031")).(*_fe .PdfObjectArray );
if _cdgg {_afccc ,_bggfc :=_egdfe .ToFloat64Array ();if _bggfc !=nil {return nil ,_bggfc ;};_bedb .C1 =_afccc ;};if len (_bedb .C0 )!=len (_bedb .C1 ){_df .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_fe .ErrRangeError ;};N ,_gccd :=_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_ffdbc .Get ("\u004e")));if _gccd !=nil {_df .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ffdbc .String ());
return nil ,_gccd ;};_bedb .N =N ;return _bedb ,nil ;};

// IsValid checks if the given pdf output intent type is valid.
func (_edfcc PdfOutputIntentType )IsValid ()bool {return _edfcc >=PdfOutputIntentTypeA1 &&_edfcc <=PdfOutputIntentTypeX ;};

// SetFlag sets the flag for the field.
func (_dbaea *PdfField )SetFlag (flag FieldFlag ){_dbaea .Ff =_fe .MakeInteger (int64 (flag ))};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ebcg :=map[rune ]int {};for _ ,_acaga :=range text {_ebcg [_acaga ]++;};return _ebcg ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eb PdfModel ;Type _fe .PdfObject ;S _fe .PdfObject ;Next _fe .PdfObject ;_ea *_fe .PdfIndirectObject ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_dgcf _fe .ParserMetadata ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_eadd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_afbdg *PdfReader )loadAnnotations (_adfe _fe .PdfObject )([]*PdfAnnotation ,error ){_bdbg ,_agcbf :=_fe .GetArray (_adfe );if !_agcbf {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _baadd []*PdfAnnotation ;for _ ,_afbfb :=range _bdbg .Elements (){_afbfb =_fe .ResolveReference (_afbfb );if _ ,_dfefd :=_afbfb .(*_fe .PdfObjectNull );_dfefd {continue ;};_feaf ,_dfbeb :=_afbfb .(*_fe .PdfObjectDictionary );_dgfcd ,_bcege :=_afbfb .(*_fe .PdfIndirectObject );
if _dfbeb {_dgfcd =&_fe .PdfIndirectObject {};_dgfcd .PdfObject =_feaf ;}else {if !_bcege {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_bfbaa ,_bbcdff :=_afbdg .newPdfAnnotationFromIndirectObject (_dgfcd );if _bbcdff !=nil {return nil ,_bbcdff ;};switch _daced :=_bfbaa .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_fbaba :=range _afbdg .AcroForm .AllFields (){if _fbaba ._ddfe ==_daced .Parent {_daced ._feg =_fbaba ;
break ;};};};if _bfbaa !=nil {_baadd =append (_baadd ,_bfbaa );};};return _baadd ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_adcfb *PdfSignature )GetContainingPdfObject ()_fe .PdfObject {return _adcfb ._cafdb };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bcagc *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bcagc .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_abdd :=NewPdfAnnotation ();_faf :=&PdfAnnotationPolygon {};_faf .PdfAnnotation =_abdd ;_faf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abdd .SetContext (_faf );return _faf ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_caeae *PdfPage )RemoveWatermarkImage (name string )error {if _caeae .Resources !=nil &&_caeae .Resources .XObject !=nil {if _ffbfd ,_deaag :=_fe .GetDict (_caeae .Resources .XObject );_deaag {for _ ,_affdg :=range _ffbfd .Keys (){if name ==_affdg .String (){_caeae .removeXObj (_ffbfd ,_affdg );
continue ;};_bcgf ,_gdec :=_fe .GetStream (_ffbfd .Get (_affdg ));if !_gdec {continue ;};_gcdcgb ,_gdec :=_fe .GetDict (_bcgf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_gdec {continue ;};_ggbdf ,_gdec :=_fe .GetDict (_gcdcgb .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_gdec {continue ;};if _ggbdf .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_ggbdf .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_caeae .removeXObj (_ffbfd ,_affdg );};};};};_cefe ,_agagc :=_caeae .GetAnnotations ();
if _agagc ==nil {_ecdb :=make ([]*PdfAnnotation ,0);for _ ,_fbbg :=range _cefe {switch _fbbg .GetContext ().(type ){case *PdfAnnotationWatermark :default:_ecdb =append (_ecdb ,_fbbg );};};_caeae .SetAnnotations (_ecdb );};return nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fdggd *PdfSignatureReference )GetContainingPdfObject ()_fe .PdfObject {return _fdggd ._egagc };

// GetContainingPdfObject implements interface PdfModel.
func (_ceba *PdfFilespec )GetContainingPdfObject ()_fe .PdfObject {return _ceba ._ccdd };func (_eggfg *PdfSignature )extractChainFromPKCS7 ()([]*_ffc .Certificate ,error ){_aaegf ,_cceaa :=_gb .Parse (_eggfg .Contents .Bytes ());if _cceaa !=nil {return nil ,_cceaa ;
};return _aaegf .Certificates ,nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fe .PdfObjectStream )(*XObjectForm ,error ){_gegcc :=&XObjectForm {};_gegcc ._adcdb =stream ;_aeebg :=*(stream .PdfObjectDictionary );_cafdf ,_gbdca :=_fe .NewEncoderFromStream (stream );if _gbdca !=nil {return nil ,_gbdca ;
};_gegcc .Filter =_cafdf ;if _degge :=_aeebg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_degge !=nil {_aecgc ,_bdafdc :=_degge .(*_fe .PdfObjectName );if !_bdafdc {return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_aecgc !="\u0046\u006f\u0072\u006d"{_df .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _agfee :=_aeebg .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_agfee !=nil {_gegcc .FormType =_agfee ;};if _fdged :=_aeebg .Get ("\u0042\u0042\u006f\u0078");_fdged !=nil {_gegcc .BBox =_fdged ;};if _aaadf :=_aeebg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_aaadf !=nil {_gegcc .Matrix =_aaadf ;};if _eadee :=_aeebg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eadee !=nil {_eadee =_fe .TraceToDirectObject (_eadee );_aagcdc ,_badf :=_eadee .(*_fe .PdfObjectDictionary );if !_badf {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fe .ErrTypeError ;};_gccfa ,_aagfe :=NewPdfPageResourcesFromDict (_aagcdc );if _aagfe !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_aagfe ;};_gegcc .Resources =_gccfa ;_df .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gegcc .Resources );};_gegcc .Group =_aeebg .Get ("\u0047\u0072\u006fu\u0070");
_gegcc .Ref =_aeebg .Get ("\u0052\u0065\u0066");_gegcc .MetaData =_aeebg .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gegcc .PieceInfo =_aeebg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gegcc .LastModified =_aeebg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gegcc .StructParent =_aeebg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gegcc .StructParents =_aeebg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gegcc .OPI =_aeebg .Get ("\u004f\u0050\u0049");
_gegcc .OC =_aeebg .Get ("\u004f\u0043");_gegcc .Name =_aeebg .Get ("\u004e\u0061\u006d\u0065");_gegcc .Stream =stream .Stream ;return _gegcc ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bfdefg *PdfReader )GetObjectNums ()[]int {return _bfdefg ._gabca .GetObjectNums ()};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_ebgee *CompliancePdfReader )error ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fgbfd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fe .GetNumberAsFloat (_fgbfd .Ascent );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ffaaa OutlineDest )ToPdfObject ()_fe .PdfObject {if (_ffaaa .PageObj ==nil &&_ffaaa .Page < 0)||_ffaaa .Mode ==""{return _fe .MakeNull ();};_deeg :=_fe .MakeArray ();if _ffaaa .PageObj !=nil {_deeg .Append (_ffaaa .PageObj );}else {_deeg .Append (_fe .MakeInteger (_ffaaa .Page ));
};_deeg .Append (_fe .MakeName (_ffaaa .Mode ));switch _ffaaa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_deeg .Append (_fe .MakeFloat (_ffaaa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_deeg .Append (_fe .MakeFloat (_ffaaa .X ));
case "\u0058\u0059\u005a":_deeg .Append (_fe .MakeFloat (_ffaaa .X ));_deeg .Append (_fe .MakeFloat (_ffaaa .Y ));_deeg .Append (_fe .MakeFloat (_ffaaa .Zoom ));default:_deeg .Set (1,_fe .MakeName ("\u0046\u0069\u0074"));};return _deeg ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cfecff *LTV )Enable (sig *PdfSignature ,extraCerts []*_ffc .Certificate )error {if _ecfg :=_cfecff .validateSig (sig );_ecfg !=nil {return _ecfg ;};_gbfga ,_fefgd :=_cfecff .generateVRIKey (sig );if _fefgd !=nil {return _fefgd ;};if _ ,_ggdg :=_cfecff ._abbd .VRI [_gbfga ];
_ggdg &&_cfecff .SkipExisting {return nil ;};_gcfce ,_fefgd :=sig .GetCerts ();if _fefgd !=nil {return _fefgd ;};return _cfecff .enable (_gcfce ,extraCerts ,_gbfga );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_adfafg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfga ,_daaad :=_fe .GetNumbersAsFloat (objects );
if _daaad !=nil {return nil ,_daaad ;};return _adfafg .ColorFromFloats (_dfga );};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gbdef *PdfPage )GetContainingPdfObject ()_fe .PdfObject {return _gbdef ._fbecf };

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bbga *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bbga .MediaBox !=nil {return _bbga .MediaBox ,nil ;};_gffab :=_bbga .Parent ;for _gffab !=nil {_cggbe ,_gggge :=_fe .GetDict (_gffab );if !_gggge {return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dgbec :=_cggbe .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dgbec !=nil {_ccag ,_geegc :=_fe .GetArray (_dgbec );if !_geegc {return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dabgc ,_ggdeg :=NewPdfRectangle (*_ccag );if _ggdeg !=nil {return nil ,_ggdeg ;};return _dabgc ,nil ;};_gffab =_cggbe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_bbc .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func _defee (_cffga _fe .PdfObject ,_aggadd *fontCommon )(*_gf .CMap ,error ){_ccfg ,_cfgc :=_fe .GetStream (_cffga );if !_cfgc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cffga );
return nil ,_fe .ErrTypeError ;};_dfgg ,_fbdf :=_fe .DecodeStream (_ccfg );if _fbdf !=nil {return nil ,_fbdf ;};_gcdcd ,_fbdf :=_gf .LoadCmapFromData (_dfgg ,!_aggadd .isCIDFont ());if _fbdf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_ccfg .ObjectNumber ,_fbdf );
};return _gcdcd ,_fbdf ;};

// ToPdfObject implements interface PdfModel.
func (_bed *PdfAnnotationFileAttachment )ToPdfObject ()_fe .PdfObject {_bed .PdfAnnotation .ToPdfObject ();_dabgf :=_bed ._efg ;_feda :=_dabgf .PdfObject .(*_fe .PdfObjectDictionary );_bed .PdfAnnotationMarkup .appendToPdfDictionary (_feda );_feda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_feda .SetIfNotNil ("\u0046\u0053",_bed .FS );_feda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bed .Name );return _dabgf ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_gdagb :=_eccd .Detect (content );_dcaa :=_ef .Sum (content );_aede :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_gdagb .String (),Hash :_de .EncodeToString (_dcaa [:])};
return _aede ,nil ;};func _ebde (_fgdbe *_fe .PdfObjectDictionary ,_cgbb *fontCommon )(*pdfFontType3 ,error ){_egbe :=_bgeab (_cgbb );_fdafd :=_fgdbe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fdafd ==nil {_fdafd =_fe .MakeInteger (0);};
_egbe .FirstChar =_fdafd ;_dccc ,_decc :=_fe .GetIntVal (_fdafd );if !_decc {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fdafd );
return nil ,_fe .ErrTypeError ;};_baeaf :=_cbg .CharCode (_dccc );_fdafd =_fgdbe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fdafd ==nil {_fdafd =_fe .MakeInteger (255);};_egbe .LastChar =_fdafd ;_dccc ,_decc =_fe .GetIntVal (_fdafd );
if !_decc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fdafd );return nil ,_fe .ErrTypeError ;
};_gfacf :=_cbg .CharCode (_dccc );_fdafd =_fgdbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fdafd !=nil {_egbe .Resources =_fdafd ;};_fdafd =_fgdbe .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fdafd ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fdafd );
return nil ,_fe .ErrNotSupported ;};_egbe .CharProcs =_fdafd ;_fdafd =_fgdbe .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fdafd ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fdafd );
return nil ,_fe .ErrNotSupported ;};_egbe .FontMatrix =_fdafd ;_egbe ._aacad =make (map[_cbg .CharCode ]float64 );_fdafd =_fgdbe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fdafd !=nil {_egbe .Widths =_fdafd ;_bagab ,_eeacda :=_fe .GetArray (_fdafd );
if !_eeacda {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fdafd );return nil ,_fe .ErrTypeError ;
};_eccf ,_ecbee :=_bagab .ToFloat64Array ();if _ecbee !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecbee ;};if len (_eccf )!=int (_gfacf -_baeaf +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gfacf -_baeaf +1,len (_eccf ));
return nil ,_fe .ErrRangeError ;};_fefa ,_eeacda :=_fe .GetArray (_egbe .FontMatrix );if !_eeacda {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fefa );
return nil ,_ecbee ;};_cefc ,_ecbee :=_fefa .ToFloat64Array ();if _ecbee !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecbee ;};_fgac :=_db .NewMatrix (_cefc [0],_cefc [1],_cefc [2],_cefc [3],_cefc [4],_cefc [5]);for _ddeeab ,_efdgd :=range _eccf {_abdab ,_ :=_fgac .Transform (_efdgd ,_efdgd );_egbe ._aacad [_baeaf +_cbg .CharCode (_ddeeab )]=_abdab ;};};_egbe .Encoding =_fe .TraceToDirectObject (_fgdbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_eeea :=_fgdbe .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _eeea !=nil {_egbe ._bfccg =_fe .TraceToDirectObject (_eeea );_effad ,_baead :=_defee (_egbe ._bfccg ,&_egbe .fontCommon );if _baead !=nil {return nil ,_baead ;};_egbe ._fcfaf =_effad ;
};if _eacf :=_egbe ._fcfaf ;_eacf !=nil {_egbe ._adgfe =_cbg .NewCMapEncoder ("",nil ,_eacf );}else {_egbe ._adgfe =_cbg .NewPdfDocEncoder ();};return _egbe ,nil ;};func _gefe (_cfbcb map[_ag .GID ]int ,_ffbgf uint16 )*_fe .PdfObjectArray {_dbcgd :=&_fe .PdfObjectArray {};
_ecegd :=_ag .GID (_ffbgf );for _geec :=_ag .GID (0);_geec < _ecegd ;{_gdca ,_fgaad :=_cfbcb [_geec ];if !_fgaad {_geec ++;continue ;};_gcagb :=_geec ;for _cfddd :=_gcagb +1;_cfddd < _ecegd ;_cfddd ++{if _dabb ,_gfee :=_cfbcb [_cfddd ];!_gfee ||_gdca !=_dabb {break ;
};_gcagb =_cfddd ;};_dbcgd .Append (_fe .MakeInteger (int64 (_geec )));_dbcgd .Append (_fe .MakeInteger (int64 (_gcagb )));_dbcgd .Append (_fe .MakeInteger (int64 (_gdca )));_geec =_gcagb +1;};return _dbcgd ;};var _ pdfFont =(*pdfFontSimple )(nil );

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ggaea *XObjectImage )ToImage ()(*Image ,error ){_gdggf :=&Image {};if _ggaea .Height ==nil {return nil ,_bbc .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gdggf .Height =*_ggaea .Height ;if _ggaea .Width ==nil {return nil ,_bbc .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gdggf .Width =*_ggaea .Width ;if _ggaea .BitsPerComponent ==nil {switch _ggaea .Filter .(type ){case *_fe .CCITTFaxEncoder ,*_fe .JBIG2Encoder :_gdggf .BitsPerComponent =1;
case *_fe .LZWEncoder ,*_fe .RunLengthEncoder :_gdggf .BitsPerComponent =8;default:return nil ,_bbc .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gdggf .BitsPerComponent =*_ggaea .BitsPerComponent ;};_gdggf .ColorComponents =_ggaea .ColorSpace .GetNumComponents ();_ggaea ._daceg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_gdggf .ColorComponents )));
_afbcca ,_gabgaa :=_fe .DecodeStream (_ggaea ._daceg );if _gabgaa !=nil {return nil ,_gabgaa ;};_gdggf .Data =_afbcca ;if _ggaea .Decode !=nil {_ecabf ,_feead :=_ggaea .Decode .(*_fe .PdfObjectArray );if !_feead {_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_bbc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bdbdd ,_ebbga :=_ecabf .ToFloat64Array ();if _ebbga !=nil {return nil ,_ebbga ;};switch _ggaea .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_edacg :=_ggaea .ColorSpace .DecodeArray ();
if _edacg [0]==_bdbdd [0]&&_edacg [1]==_bdbdd [1]&&_edacg [2]==_bdbdd [2]&&_edacg [3]==_bdbdd [3]{_gdggf ._cccfg =_bdbdd ;};default:_gdggf ._cccfg =_bdbdd ;};};return _gdggf ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_egga .Lock ();defer _egga .Unlock ();_aegcb =subject };

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_degb *bool ;_daddc *bool ;_egfgb *bool ;_gcfg *bool ;_bcefb *bool ;_acdff *bool ;_bdebd NonFullScreenPageMode ;_cebcg Direction ;_gebdc PageBoundary ;_ecebe PageBoundary ;_afceb PageBoundary ;_dgaec PageBoundary ;_aagge PrintScaling ;
_efecf Duplex ;_eebag *bool ;_gbgcf []int ;_dafea int ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_dedcd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fefc *DSS )ToPdfObject ()_fe .PdfObject {_aaafd :=_fefc ._ddeb .PdfObject .(*_fe .PdfObjectDictionary );_aaafd .Clear ();_bdgdf :=_fe .MakeDict ();for _ggba ,_dbgg :=range _fefc .VRI {_bdgdf .Set (*_fe .MakeName (_ggba ),_dbgg .ToPdfObject ());};
_aaafd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_dgdbf (_fefc .Certs ));_aaafd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_dgdbf (_fefc .OCSPs ));_aaafd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_dgdbf (_fefc .CRLs ));_aaafd .Set ("\u0056\u0052\u0049",_bdgdf );
return _fefc ._ddeb ;};func (_add *PdfReader )newPdfAnnotationScreenFromDict (_bbfc *_fe .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bffg :=PdfAnnotationScreen {};_bffg .T =_bbfc .Get ("\u0054");_bffg .MK =_bbfc .Get ("\u004d\u004b");_bffg .A =_bbfc .Get ("\u0041");
_bffg .AA =_bbfc .Get ("\u0041\u0041");return &_bffg ,nil ;};func _ccabg (_dfacg *_fe .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dggf :=&PdfFieldChoice {};_dggf .Opt ,_ =_fe .GetArray (_dfacg .Get ("\u004f\u0070\u0074"));_dggf .TI ,_ =_fe .GetInt (_dfacg .Get ("\u0054\u0049"));
_dggf .I ,_ =_fe .GetArray (_dfacg .Get ("\u0049"));return _dggf ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cgcc *PdfFieldButton )GetType ()ButtonType {_cbfg :=ButtonTypeCheckbox ;if _cgcc .Ff !=nil {if (uint32 (*_cgcc .Ff )&FieldFlagPushbutton .Mask ())> 0{_cbfg =ButtonTypePush ;}else if (uint32 (*_cgcc .Ff )&FieldFlagRadio .Mask ())> 0{_cbfg =ButtonTypeRadio ;
};};return _cbfg ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bccd _fe .PdfObject ;};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _fe .PdfObject )(*StructTreeRoot ,error ){_gbea :=_fe .ResolveReference (obj );_ffdfd ,_ecdfe :=_fe .GetDict (_gbea );if !_ecdfe {return nil ,_e .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_bcfag :=&StructTreeRoot {};_bcfag ._febgf =_fe .MakeIndirectObject (_fe .MakeDict ());if _eedfd :=_ffdfd .Get ("\u004b");_eedfd !=nil {_bcgab :=_fe .ResolveReference (_eedfd );_bgbag :=_fe .ResolveReferencesDeep (_bcgab ,nil );if _bgbag !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_bgbag );
};_bcfag .K =[]*KDict {};if _gbdbb ,_ddbfg :=_fe .GetArray (_bcgab );_ddbfg {for _cgaad :=0;_cgaad < _gbdbb .Len ();_cgaad ++{_cffae :=_gbdbb .Get (_cgaad );_gbacg ,_fadag :=_abcfa (_cffae );if _fadag !=nil {return nil ,_fadag ;};_bcfag .K =append (_bcfag .K ,_gbacg );
};}else {_fdefc ,_gbcfaa :=_abcfa (_bcgab );if _gbcfaa !=nil {return nil ,_gbcfaa ;};_bcfag .K =append (_bcfag .K ,_fdefc );};};if _bgadc :=_ffdfd .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_bgadc !=nil {_bcfag .IDTree =_dfabb (_bgadc );};if _eaada :=_ffdfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");
_eaada !=nil {_ffbfc :=_fe .ResolveReference (_eaada );if _afaca ,_afca :=_fe .GetDict (_ffbfc );_afca {_bcfag .ParentTree =_afaca ;};};if _bbgbe :=_ffdfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_bbgbe !=nil {_ ,_abgc :=_fe .GetInt (_bbgbe );if _abgc {_eceac ,_geced :=_fe .GetNumberAsInt64 (_bbgbe );if _geced !=nil {return nil ,_geced ;};_bcfag .ParentTreeNextKey =_eceac ;};};if _bfeg :=_ffdfd .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");_bfeg !=nil {switch _bcfdaf :=_bfeg .(type ){case *_fe .PdfIndirectObject :if _bdceg ,_ggdag :=_fe .GetDict (_bcfdaf .PdfObject );
_ggdag {_bcfag .RoleMap =_bdceg ;};case *_fe .PdfObjectDictionary :_bcfag .RoleMap =_bcfdaf ;case *_fe .PdfObjectString :_bcfag .RoleMap =_bcfdaf ;};};if _cecf :=_ffdfd .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_cecf !=nil {if _dddgbf ,_aggcf :=_fe .GetDict (_cecf );
_aggcf {_bcfag .ClassMap =_dddgbf ;};};return _bcfag ,nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_dcbdf :=PdfPage {};_dcbdf ._bcgdf =_fe .MakeDict ();_dcbdf .Resources =NewPdfPageResources ();_acfd :=_fe .PdfIndirectObject {};_acfd .PdfObject =_dcbdf ._bcgdf ;_dcbdf ._fbecf =&_acfd ;_dcbdf ._beae =*_dcbdf ._bcgdf ;return &_dcbdf ;
};

// ToInteger convert to an integer format.
func (_bbge *PdfColorLab )ToInteger (bits int )[3]uint32 {_befb :=_dd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_befb *_bbge .L ()),uint32 (_befb *_bbge .A ()),uint32 (_befb *_bbge .B ())};};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_bcbcc *Image )ConvertToBinary ()error {if _bcbcc .ColorComponents ==1&&_bcbcc .BitsPerComponent ==1{return nil ;};_bfcgb ,_abffa :=_bcbcc .ToGoImage ();if _abffa !=nil {return _abffa ;};_eabfc ,_abffa :=_af .MonochromeConverter .Convert (_bfcgb );
if _abffa !=nil {return _abffa ;};_bcbcc .Data =_eabfc .Base ().Data ;_bcbcc ._dbgaf ,_abffa =_af .ScaleAlphaToMonochrome (_bcbcc ._dbgaf ,int (_bcbcc .Width ),int (_bcbcc .Height ));if _abffa !=nil {return _abffa ;};_bcbcc .BitsPerComponent =1;_bcbcc .ColorComponents =1;
_bcbcc ._cccfg =nil ;return nil ;};func (_dbce *DSS )add (_acgc *[]*_fe .PdfObjectStream ,_dbdb map[string ]*_fe .PdfObjectStream ,_geea [][]byte )([]*_fe .PdfObjectStream ,error ){_gdgge :=make ([]*_fe .PdfObjectStream ,0,len (_geea ));for _ ,_ffab :=range _geea {_eccb ,_gaage :=_bebdb (_ffab );
if _gaage !=nil {return nil ,_gaage ;};_aceg ,_gefc :=_dbdb [string (_eccb )];if !_gefc {_aceg ,_gaage =_fe .MakeStream (_ffab ,_fe .NewRawEncoder ());if _gaage !=nil {return nil ,_gaage ;};_dbdb [string (_eccb )]=_aceg ;*_acgc =append (*_acgc ,_aceg );
};_gdgge =append (_gdgge ,_aceg );};return _gdgge ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ebggd ,_gbbda :=NewStandard14Font (basefont );if _gbbda !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ebggd ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fe .StreamEncoder ;Intent _fe .PdfObject ;ImageMask _fe .PdfObject ;Mask _fe .PdfObject ;Matte _fe .PdfObject ;Decode _fe .PdfObject ;Interpolate _fe .PdfObject ;Alternatives _fe .PdfObject ;
SMask _fe .PdfObject ;SMaskInData _fe .PdfObject ;Name _fe .PdfObject ;StructParent _fe .PdfObject ;ID _fe .PdfObject ;OPI _fe .PdfObject ;Metadata _fe .PdfObject ;OC _fe .PdfObject ;Stream []byte ;_daceg *_fe .PdfObjectStream ;_aeeag bool ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_abdg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_afgdb ,_abbcdb :=color .(*PdfColorDeviceGray );if !_abbcdb {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_afgdb ),float64 (*_afgdb ),float64 (*_afgdb )),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cebea pdfFontType3 )GetCharMetrics (code _cbg .CharCode )(_ag .CharMetrics ,bool ){if _eafbbb ,_gdad :=_cebea ._aacad [code ];_gdad {return _ag .CharMetrics {Wx :_eafbbb },true ;};if _ag .IsStdFont (_ag .StdFontName (_cebea ._cecc )){return _ag .CharMetrics {Wx :250},true ;
};return _ag .CharMetrics {},false ;};

// Duplex returns the value of the duplex.
func (_gbgaa *ViewerPreferences )Duplex ()Duplex {return _gbgaa ._efecf };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cdef *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bcce :=_cdef .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bcce )> 0;_agdb :=_fe .NewFlateEncoder ();_cacf :=_fe .MakeArray ();if wrapContents {_abddf ,_fbfd :=_fe .MakeStream ([]byte ("\u0071\u000a"),_agdb );
if _fbfd !=nil {return _fbfd ;};_cacf .Append (_abddf );};_cacf .Append (_bcce ...);if wrapContents {_egfed ,_aaabd :=_fe .MakeStream ([]byte ("\u000a\u0051\u000a"),_agdb );if _aaabd !=nil {return _aaabd ;};_cacf .Append (_egfed );};_gcab ,_fdagg :=_fe .MakeStream (cs ,_agdb );
if _fdagg !=nil {return _fdagg ;};_cacf .Append (_gcab );_cdef .Contents =_cacf ;return nil ;};func (_efa *PdfReader )newPdfActionTransFromDict (_dagc *_fe .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dagc .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cfec :=NewPdfAnnotation ();_gfb :=&PdfAnnotationLine {};_gfb .PdfAnnotation =_cfec ;_gfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfec .SetContext (_gfb );return _gfb ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fe .PdfObjectStream ;OCSP []*_fe .PdfObjectStream ;CRL []*_fe .PdfObjectStream ;TU *_fe .PdfObjectString ;TS *_fe .PdfObjectString ;};func (_egag *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// GetContentStream returns the pattern cell's content stream
func (_bbcca *PdfTilingPattern )GetContentStream ()([]byte ,error ){_deece ,_ ,_bgdbc :=_bbcca .GetContentStreamWithEncoder ();return _deece ,_bgdbc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bgff *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcega ,_fgbfa :=_fe .GetNumbersAsFloat (objects );
if _fgbfa !=nil {return nil ,_fgbfa ;};return _bgff .ColorFromFloats (_bcega );};func _eeecdg ()_abb .Time {_egga .Lock ();defer _egga .Unlock ();return _gdced };

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_bdefc *PdfPage )GetRotate ()(int64 ,error ){if _bdefc .Rotate !=nil {return *_bdefc .Rotate ,nil ;};_dabea :=_bdefc .Parent ;for _dabea !=nil {_badbb ,_dgede :=_fe .GetDict (_dabea );if !_dgede {return 0,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _afeag :=_badbb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_afeag !=nil {_cfgcb ,_adbcd :=_fe .GetInt (_afeag );if !_adbcd {return 0,_bbc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _cfgcb !=nil {return int64 (*_cfgcb ),nil ;};return 0,_bbc .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dabea =_badbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_bbc .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_bagfa *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cfgb []*PdfOutlineTreeNode ;var _acba []string ;var _gcfedf func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gcfedf =func (_aedfd *PdfOutlineTreeNode ,_eeadc *[]*PdfOutlineTreeNode ,_bbca *[]string ,_gfgfb int ){if _aedfd ==nil {return ;
};if _aedfd ._dedcd ==nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_fdadef ,_ddfbf :=_aedfd ._dedcd .(*PdfOutlineItem );if _ddfbf {*_eeadc =append (*_eeadc ,&_fdadef .PdfOutlineTreeNode );
_ecgea :=_bf .Repeat ("\u0020",_gfgfb *2)+_fdadef .Title .Decoded ();*_bbca =append (*_bbca ,_ecgea );};if _aedfd .First !=nil {_ggfeb :=_bf .Repeat ("\u0020",_gfgfb *2)+"\u002b";*_bbca =append (*_bbca ,_ggfeb );_gcfedf (_aedfd .First ,_eeadc ,_bbca ,_gfgfb +1);
};if _ddfbf &&_fdadef .Next !=nil {_gcfedf (_fdadef .Next ,_eeadc ,_bbca ,_gfgfb );};};_gcfedf (_bagfa ._bcaca ,&_cfgb ,&_acba ,0);return _cfgb ,_acba ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fbfa :=&PdfFilespec {};_fbfa ._ccdd =_fe .MakeIndirectObject (_fe .MakeDict ());return _fbfa ;};func (_bbaf *pdfFontType0 )bytesToCharcodes (_cccgbg []byte )([]_cbg .CharCode ,bool ){if _bbaf ._dgccd ==nil {return nil ,false ;
};_dfdg ,_bfea :=_bbaf ._dgccd .BytesToCharcodes (_cccgbg );if !_bfea {return nil ,false ;};_cgeaf :=make ([]_cbg .CharCode ,len (_dfdg ));for _bbgeb ,_febf :=range _dfdg {_cgeaf [_bbgeb ]=_cbg .CharCode (_febf );};return _cgeaf ,true ;};

// G returns the value of the green component of the color.
func (_aeag *PdfColorDeviceRGB )G ()float64 {return _aeag [1]};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dcdg ,_agbdf :=_dc .Open (filePath );if _agbdf !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_agbdf );
return nil ,_agbdf ;};defer _dcdg .Close ();return NewCompositePdfFontFromTTF (_dcdg );};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};func (_efdcbe *PdfWriter )checkLicense ()error {_bcgfe :=_ae .GetLicenseKey ();
if (_bcgfe ==nil ||!_bcgfe .IsLicensed ())&&!_bfdgbf {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _bbc .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func (_abba *PdfReader )newPdfAnnotationCaretFromDict (_dgf *_fe .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_eed :=PdfAnnotationCaret {};_fdef ,_gacgg :=_abba .newPdfAnnotationMarkupFromDict (_dgf );if _gacgg !=nil {return nil ,_gacgg ;
};_eed .PdfAnnotationMarkup =_fdef ;_eed .RD =_dgf .Get ("\u0052\u0044");_eed .Sy =_dgf .Get ("\u0053\u0079");return &_eed ,nil ;};

// Encoder returns the font's text encoder.
func (_bdfca pdfFontType3 )Encoder ()_cbg .TextEncoder {return _bdfca ._adgfe };

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fe .PdfObjectName ;Colorants _fe .PdfObject ;Process _fe .PdfObject ;MixingHints _fe .PdfObject ;_fcaa *_fe .PdfIndirectObject ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_eegdgc *PdfPageResources )SetXObjectImageByNameLazy (keyName _fe .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_acedd :=ximg .ToPdfObject ().(*_fe .PdfObjectStream );if lazy {_acedd .MakeLazy ();};_dfeaed :=_eegdgc .SetXObjectByName (keyName ,_acedd );
return _dfeaed ;};func (_bcdg *PdfReader )newPdfAnnotationProjectionFromDict (_ede *_fe .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_decg :=&PdfAnnotationProjection {};_gfcb ,_fbe :=_bcdg .newPdfAnnotationMarkupFromDict (_ede );if _fbe !=nil {return nil ,_fbe ;
};_decg .PdfAnnotationMarkup =_gfcb ;return _decg ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_bbfbb *PdfDate )ToPdfObject ()_fe .PdfObject {_bbabf :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bbfbb ._aggdgc ,_bbfbb ._edage ,_bbfbb ._adadfg ,_bbfbb ._dbbce ,_bbfbb ._abebf ,_bbfbb ._egagcg ,_bbfbb ._caeead ,_bbfbb ._aaag ,_bbfbb ._gcgge );
return _fe .MakeString (_bbabf );};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_afdbg *KDict )GenerateRandomID ()string {_fbegb ,_bffdg :=_ad .NewUUID ();if _bffdg !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_bffdg );};if _fbegb !=_ad .Nil {_cdgde :=_fbegb .String ();
_afdbg .ID =_fe .MakeString (_cdgde );return _cdgde ;};return "";};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;func (_ggef fontCommon )coreString ()string {_ffae :="";if _ggef ._gdgcc !=nil {_ffae =_ggef ._gdgcc .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ggef ._cdgfg ,_ggef ._cecc ,_ggef ._gfab ,_ggef ._fdcab ,_ggef ._bfccg !=nil ,_ggef .fontFlags (),_ffae );
};func (_bcacd *PdfPage )loadFont (_bbadb string )(*_dg .Font ,error ){_dcbdc ,_gadca :=_dc .ReadFile (_bbadb );if _gadca !=nil {return nil ,_gadca ;};_egaa ,_gadca :=_ecc .ParseFont (_dcbdc );if _gadca !=nil {return nil ,_gadca ;};return _egaa ,nil ;};
func _dgabg (_fged _fe .PdfObject )(*fontFile ,error ){_df .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fged );
_caad :=&fontFile {};_fged =_fe .TraceToDirectObject (_fged );_ffeag ,_fgcg :=_fged .(*_fe .PdfObjectStream );if !_fgcg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fged );
return nil ,_fe .ErrTypeError ;};_feggc :=_ffeag .PdfObjectDictionary ;_ebfed ,_dddgg :=_fe .DecodeStream (_ffeag );if _dddgg !=nil {return nil ,_dddgg ;};_dbaf ,_fgcg :=_fe .GetNameVal (_feggc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fgcg {_caad ._aeegf =_dbaf ;
if _dbaf =="\u0054\u0079\u0070\u0065\u0031\u0043"{_df .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ecbfc ,_ :=_fe .GetIntVal (_feggc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bddcf ,_ :=_fe .GetIntVal (_feggc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ecbfc > len (_ebfed ){_ecbfc =len (_ebfed );
};if _ecbfc +_bddcf > len (_ebfed ){_bddcf =len (_ebfed )-_ecbfc ;};_deca :=_ebfed [:_ecbfc ];var _ggecb []byte ;if _bddcf > 0{_ggecb =_ebfed [_ecbfc :_ecbfc +_bddcf ];};if _ecbfc > 0&&_bddcf > 0{_fbafb :=_caad .loadFromSegments (_deca ,_ggecb );if _fbafb !=nil {return nil ,_fbafb ;
};};return _caad ,nil ;};func (_dfabe *PdfFont )baseFields ()*fontCommon {if _dfabe ._aeacd ==nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dfabe ._aeacd .baseFields ();};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_fddd :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_fddd ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_dfe :=NewPdfAction ();_dee :=&PdfActionImportData {};_dee .PdfAction =_dfe ;_dfe .SetContext (_dee );return _dee ;};func _agde (_edgce _fe .PdfObject )(*PdfPattern ,error ){_afadg :=&PdfPattern {};var _dcca *_fe .PdfObjectDictionary ;
if _fcbd ,_afed :=_fe .GetIndirect (_edgce );_afed {_afadg ._aegcc =_fcbd ;_cedce ,_fegef :=_fcbd .PdfObject .(*_fe .PdfObjectDictionary );if !_fegef {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fcbd .PdfObject );
return nil ,_fe .ErrTypeError ;};_dcca =_cedce ;}else if _dfbfa ,_edgg :=_fe .GetStream (_edgce );_edgg {_afadg ._aegcc =_dfbfa ;_dcca =_dfbfa .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_edgce );
return nil ,_fe .ErrTypeError ;};_ebgbef :=_dcca .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ebgbef ==nil {_df .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbfceb ,_ddbcc :=_ebgbef .(*_fe .PdfObjectInteger );if !_ddbcc {_df .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ebgbef );
return nil ,_fe .ErrTypeError ;};if *_gbfceb !=1&&*_gbfceb !=2{_df .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gbfceb );return nil ,_fe .ErrRangeError ;
};_afadg .PatternType =int64 (*_gbfceb );switch *_gbfceb {case 1:_gdggc ,_abbea :=_caggg (_dcca );if _abbea !=nil {return nil ,_abbea ;};_gdggc .PdfPattern =_afadg ;_afadg ._ecfdd =_gdggc ;return _afadg ,nil ;case 2:_cfgce ,_cegcc :=_ecedf (_dcca );if _cegcc !=nil {return nil ,_cegcc ;
};_cfgce .PdfPattern =_afadg ;_afadg ._ecfdd =_cfgce ;return _afadg ,nil ;};return nil ,_bbc .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject implements interface PdfModel.
func (_acdc *PdfAnnotationRedact )ToPdfObject ()_fe .PdfObject {_acdc .PdfAnnotation .ToPdfObject ();_facb :=_acdc ._efg ;_edfg :=_facb .PdfObject .(*_fe .PdfObjectDictionary );_acdc .PdfAnnotationMarkup .appendToPdfDictionary (_edfg );_edfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_edfg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acdc .QuadPoints );_edfg .SetIfNotNil ("\u0049\u0043",_acdc .IC );_edfg .SetIfNotNil ("\u0052\u004f",_acdc .RO );_edfg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_acdc .OverlayText );
_edfg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_acdc .Repeat );_edfg .SetIfNotNil ("\u0044\u0041",_acdc .DA );_edfg .SetIfNotNil ("\u0051",_acdc .Q );return _facb ;};func _bbdca (_ebegc *_fe .PdfObjectDictionary )(*PdfFieldText ,error ){_fcfbf :=&PdfFieldText {};
_fcfbf .DA ,_ =_fe .GetString (_ebegc .Get ("\u0044\u0041"));_fcfbf .Q ,_ =_fe .GetInt (_ebegc .Get ("\u0051"));_fcfbf .DS ,_ =_fe .GetString (_ebegc .Get ("\u0044\u0053"));_fcfbf .RV =_ebegc .Get ("\u0052\u0056");_fcfbf .MaxLen ,_ =_fe .GetInt (_ebegc .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _fcfbf ,nil ;};func (_cebe *PdfReader )newPdfAnnotationHighlightFromDict (_cfg *_fe .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fbbb :=PdfAnnotationHighlight {};_gadf ,_abbca :=_cebe .newPdfAnnotationMarkupFromDict (_cfg );if _abbca !=nil {return nil ,_abbca ;
};_fbbb .PdfAnnotationMarkup =_gadf ;_fbbb .QuadPoints =_cfg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbbb ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bfadg *PdfReader )GetOCProperties ()(_fe .PdfObject ,error ){_cbcda :=_bfadg ._bbfec ;_bacd :=_cbcda .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bacd =_fe .ResolveReference (_bacd );if !_bfadg ._feega {_gdeeg :=_bfadg .traverseObjectData (_bacd );
if _gdeeg !=nil {return nil ,_gdeeg ;};};return _bacd ,nil ;};func (_fdd *PdfReader )newPdfAnnotationPolygonFromDict (_dabg *_fe .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bfae :=PdfAnnotationPolygon {};_ggae ,_bddc :=_fdd .newPdfAnnotationMarkupFromDict (_dabg );
if _bddc !=nil {return nil ,_bddc ;};_bfae .PdfAnnotationMarkup =_ggae ;_bfae .Vertices =_dabg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bfae .LE =_dabg .Get ("\u004c\u0045");_bfae .BS =_dabg .Get ("\u0042\u0053");_bfae .IC =_dabg .Get ("\u0049\u0043");
_bfae .BE =_dabg .Get ("\u0042\u0045");_bfae .IT =_dabg .Get ("\u0049\u0054");_bfae .Measure =_dabg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bfae ,nil ;};func (_abdfd *PdfReader )lookupPageByObject (_gedfd _fe .PdfObject )(*PdfPage ,error ){return nil ,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns a stream object.
func (_ebccg *XObjectForm )ToPdfObject ()_fe .PdfObject {_aeefc :=_ebccg ._adcdb ;_fdde :=_aeefc .PdfObjectDictionary ;if _ebccg .Filter !=nil {_fdde =_ebccg .Filter .MakeStreamDict ();_aeefc .PdfObjectDictionary =_fdde ;};_fdde .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_fdde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u0072\u006d"));_fdde .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ebccg .FormType );_fdde .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ebccg .BBox );_fdde .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebccg .Matrix );
if _ebccg .Resources !=nil {_fdde .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebccg .Resources .ToPdfObject ());};_fdde .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ebccg .Group );_fdde .SetIfNotNil ("\u0052\u0065\u0066",_ebccg .Ref );_fdde .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ebccg .MetaData );
_fdde .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ebccg .PieceInfo );_fdde .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ebccg .LastModified );_fdde .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebccg .StructParent );
_fdde .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ebccg .StructParents );_fdde .SetIfNotNil ("\u004f\u0050\u0049",_ebccg .OPI );_fdde .SetIfNotNil ("\u004f\u0043",_ebccg .OC );_fdde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebccg .Name );
_fdde .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_ebccg .Stream ))));_aeefc .Stream =_ebccg .Stream ;return _aeefc ;};func (_dfdaa *PdfFunctionType0 )processSamples ()error {_ecfd :=_dfc .ResampleBytes (_dfdaa ._abdcef ,_dfdaa .BitsPerSample );
_dfdaa ._bddgb =_ecfd ;return nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cbegb *PdfSignature )GetDocMDPPermission ()(_gbf .DocMDPPermission ,bool ){for _ ,_gecce :=range _cbegb .Reference .Elements (){if _aegag ,_gefaa :=_fe .GetDict (_gecce );_gefaa {if _cadag ,_deaee :=_fe .GetNameVal (_aegag .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_deaee &&_cadag =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _afgag ,_cceaf :=_fe .GetDict (_aegag .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cceaf {if P ,_fcbf :=_fe .GetIntVal (_afgag .Get ("\u0050"));_fcbf {return _gbf .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// ToPdfObject implements interface PdfModel.
func (_dece *PdfTransformParamsDocMDP )ToPdfObject ()_fe .PdfObject {_afbgf :=_fe .MakeDict ();_afbgf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dece .Type );_afbgf .SetIfNotNil ("\u0056",_dece .V );_afbgf .SetIfNotNil ("\u0050",_dece .P );return _afbgf ;
};type pdfFont interface{_ag .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fe .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_aagc :=&PdfColorspaceCalRGB {};_aagc .BlackPoint =[]float64 {0.0,0.0,0.0};_aagc .Gamma =[]float64 {1.0,1.0,1.0};_aagc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _aagc ;};

// RemovePage removes a page by number.
func (_ffdab *PdfAppender )RemovePage (pageNum int ){_effab :=pageNum -1;_ffdab ._gdf =append (_ffdab ._gdf [0:_effab ],_ffdab ._gdf [pageNum :]...);};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ddeb :_fe .MakeIndirectObject (_fe .MakeDict ()),VRI :map[string ]*VRI {}};};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _abb .Time ){_egga .Lock ();defer _egga .Unlock ();_gcfef =creationDate ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fe .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fe .PdfObject ;Contents _fe .PdfObject ;
Rotate *int64 ;Group _fe .PdfObject ;Thumb _fe .PdfObject ;B _fe .PdfObject ;Dur _fe .PdfObject ;Trans _fe .PdfObject ;AA _fe .PdfObject ;Metadata _fe .PdfObject ;PieceInfo _fe .PdfObject ;StructParents _fe .PdfObject ;ID _fe .PdfObject ;PZ _fe .PdfObject ;
SeparationInfo _fe .PdfObject ;Tabs _fe .PdfObject ;TemplateInstantiated _fe .PdfObject ;PresSteps _fe .PdfObject ;UserUnit _fe .PdfObject ;VP _fe .PdfObject ;Annots _fe .PdfObject ;_eeae []*PdfAnnotation ;_bcgdf *_fe .PdfObjectDictionary ;_fbecf *_fe .PdfIndirectObject ;
_beae _fe .PdfObjectDictionary ;_agfed *PdfReader ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;func (_eccae *pdfFontSimple )updateStandard14Font (){_feaeg ,_ggbcf :=_eccae .Encoder ().(_cbg .SimpleEncoder );if !_ggbcf {_df .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eccae .Encoder (),_eccae );
return ;};_dbgd :=_feaeg .Charcodes ();_eccae ._efacff =make (map[_cbg .CharCode ]float64 ,len (_dbgd ));for _ ,_ffcdf :=range _dbgd {_faceb ,_ :=_feaeg .CharcodeToRune (_ffcdf );_gaaed ,_ :=_eccae ._cgfcc .Read (_faceb );_eccae ._efacff [_ffcdf ]=_gaaed .Wx ;
};};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;NewWindow _fe .PdfObject ;};func (_bcee *PdfReader )newPdfAnnotationPolyLineFromDict (_efdd *_fe .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bcfd :=PdfAnnotationPolyLine {};
_fdga ,_bfcbb :=_bcee .newPdfAnnotationMarkupFromDict (_efdd );if _bfcbb !=nil {return nil ,_bfcbb ;};_bcfd .PdfAnnotationMarkup =_fdga ;_bcfd .Vertices =_efdd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bcfd .LE =_efdd .Get ("\u004c\u0045");
_bcfd .BS =_efdd .Get ("\u0042\u0053");_bcfd .IC =_efdd .Get ("\u0049\u0043");_bcfd .BE =_efdd .Get ("\u0042\u0045");_bcfd .IT =_efdd .Get ("\u0049\u0054");_bcfd .Measure =_efdd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bcfd ,nil ;};

// B returns the value of the B component of the color.
func (_egdfd *PdfColorLab )B ()float64 {return _egdfd [2]};type fontFile struct{_befce string ;_aeegf string ;_fcdbad _cbg .SimpleEncoder ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_aacgc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_fdcga :=func (_fdbc float64 )float64 {if _fdbc >=6.0/29{return _fdbc *_fdbc *_fdbc ;};return 108.0/841*(_fdbc -4.0/29.0);};_ceag ,_ebaa :=color .(*PdfColorLab );if !_ebaa {_df .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ceag .L ();AStar :=_ceag .A ();BStar :=_ceag .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_aacgc .WhitePoint [0]*_fdcga (L );Y :=_aacgc .WhitePoint [1]*_fdcga (M );Z :=_aacgc .WhitePoint [2]*_fdcga (N );_egfga :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eccda :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdaa :=0.055648*X +-0.204043*Y +1.057311*Z ;
_egfga =_dd .Min (_dd .Max (_egfga ,0),1.0);_eccda =_dd .Min (_dd .Max (_eccda ,0),1.0);_gdaa =_dd .Min (_dd .Max (_gdaa ,0),1.0);return NewPdfColorDeviceRGB (_egfga ,_eccda ,_gdaa ),nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cdg PdfModel ;Rect _fe .PdfObject ;Contents _fe .PdfObject ;P _fe .PdfObject ;NM _fe .PdfObject ;M _fe .PdfObject ;F _fe .PdfObject ;AP _fe .PdfObject ;AS _fe .PdfObject ;Border _fe .PdfObject ;C _fe .PdfObject ;StructParent _fe .PdfObject ;
OC _fe .PdfObject ;_efg *_fe .PdfIndirectObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_ddfgc *PdfPage )SetContentStreams (cStreams []string ,encoder _fe .StreamEncoder )error {if len (cStreams )==0{_ddfgc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fe .NewRawEncoder ();};var _cbac []*_fe .PdfObjectStream ;for _ ,_cgeag :=range cStreams {_baaga :=&_fe .PdfObjectStream {};
_cbcd :=encoder .MakeStreamDict ();_afbg ,_dbafe :=encoder .EncodeBytes ([]byte (_cgeag ));if _dbafe !=nil {return _dbafe ;};_cbcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_afbg ))));_baaga .PdfObjectDictionary =_cbcd ;
_baaga .Stream =_afbg ;_cbac =append (_cbac ,_baaga );};if len (_cbac )==1{_ddfgc .Contents =_cbac [0];}else {_bgcda :=_fe .MakeArray ();for _ ,_dfgag :=range _cbac {_bgcda .Append (_dfgag );};_ddfgc .Contents =_bgcda ;};return nil ;};type pdfFontType3 struct{fontCommon ;
_cdea *_fe .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fe .PdfObject ;Encoding _fe .PdfObject ;FontBBox _fe .PdfObject ;FontMatrix _fe .PdfObject ;FirstChar _fe .PdfObject ;LastChar _fe .PdfObject ;Widths _fe .PdfObject ;Resources _fe .PdfObject ;_aacad map[_cbg .CharCode ]float64 ;_adgfe _cbg .TextEncoder ;
};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fcec PdfModel ;_ddfe *_fe .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fe .PdfObjectName ;T *_fe .PdfObjectString ;TU *_fe .PdfObjectString ;TM *_fe .PdfObjectString ;Ff *_fe .PdfObjectInteger ;
V _fe .PdfObject ;DV _fe .PdfObject ;AA _fe .PdfObject ;VariableText *VariableText ;};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_aacef *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_aacef ._egfgb =&hideWindowUI };

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fe .PdfIndirectObject ;SV *_fe .PdfIndirectObject ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ecfdd PdfModel ;_aegcc _fe .PdfObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fe .PdfObjectStream ;Data []byte ;_beecb *_fe .PdfIndirectObject ;_gbfg *_fe .PdfObjectStream ;};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bfdc :=NewPdfAnnotation ();_aeb :=&PdfAnnotationFreeText {};_aeb .PdfAnnotation =_bfdc ;_aeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfdc .SetContext (_aeb );return _aeb ;};func (_fbbfc *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _efdfce :=_fbbfc ._gdgcc ;
_efdfce !=nil {return _efdfce ;};return _fbbfc ._deacf ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_afea pdfCIDFontType0 )GetCharMetrics (code _cbg .CharCode )(_ag .CharMetrics ,bool ){_egef :=_afea ._dcad ;if _egce ,_eeacd :=_afea ._cbca [code ];_eeacd {_egef =_egce ;};return _ag .CharMetrics {Wx :_egef },true ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fabf :=&PdfBorderStyle {};return _fabf };

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_dggd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dbcggf :=_dggd .actualFont ();if _dbcggf ==nil {_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dggd ._aeacd );
return _ag .CharMetrics {},false ;};if _dbdf ,_accbc :=_dbcggf .GetRuneMetrics (r );_accbc {return _dbdf ,true ;};if _ecgc ,_bcccd :=_dggd .GetFontDescriptor ();_bcccd ==nil &&_ecgc !=nil {return _ag .CharMetrics {Wx :_ecgc ._gdeda },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dggd );
return _ag .CharMetrics {},false ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_deafb *PdfColorspaceICCBased )ToPdfObject ()_fe .PdfObject {_dfdfd :=&_fe .PdfObjectArray {};_dfdfd .Append (_fe .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bdbc *_fe .PdfObjectStream ;if _deafb ._gbfg !=nil {_bdbc =_deafb ._gbfg ;
}else {_bdbc =&_fe .PdfObjectStream {};};_fcc :=_fe .MakeDict ();_fcc .Set ("\u004e",_fe .MakeInteger (int64 (_deafb .N )));if _deafb .Alternate !=nil {_fcc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_deafb .Alternate .ToPdfObject ());};if _deafb .Metadata !=nil {_fcc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deafb .Metadata );
};if _deafb .Range !=nil {var _fedgd []_fe .PdfObject ;for _ ,_debd :=range _deafb .Range {_fedgd =append (_fedgd ,_fe .MakeFloat (_debd ));};_fcc .Set ("\u0052\u0061\u006eg\u0065",_fe .MakeArray (_fedgd ...));};_fcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_deafb .Data ))));
_bdbc .Stream =_deafb .Data ;_bdbc .PdfObjectDictionary =_fcc ;_dfdfd .Append (_bdbc );if _deafb ._beecb !=nil {_deafb ._beecb .PdfObject =_dfdfd ;return _deafb ._beecb ;};return _dfdfd ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fdfg :=NewPdfAnnotation ();_bcg :=&PdfAnnotationMovie {};_bcg .PdfAnnotation =_fdfg ;_fdfg .SetContext (_bcg );return _bcg ;};

// ToPdfObject implements interface PdfModel.
func (_cafb *PdfActionSubmitForm )ToPdfObject ()_fe .PdfObject {_cafb .PdfAction .ToPdfObject ();_gcd :=_cafb ._ea ;_bfa :=_gcd .PdfObject .(*_fe .PdfObjectDictionary );_bfa .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSubmitForm )));if _cafb .F !=nil {_bfa .Set ("\u0046",_cafb .F .ToPdfObject ());
};_bfa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cafb .Fields );_bfa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cafb .Flags );return _gcd ;};func (_afgda PdfFont )actualFont ()pdfFont {if _afgda ._aeacd ==nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_afgda );
};return _afgda ._aeacd ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fe .PdfObject ;Volume _fe .PdfObject ;Synchronous _fe .PdfObject ;Repeat _fe .PdfObject ;Mix _fe .PdfObject ;};func (_dfbeg *PdfReader )newPdfSignatureReferenceFromDict (_aggea *_fe .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _ecbgda ,_ddad :=_dfbeg ._afac .GetModelFromPrimitive (_aggea ).(*PdfSignatureReference );
_ddad {return _ecbgda ,nil ;};_gecac :=&PdfSignatureReference {_egagc :_aggea ,Data :_aggea .Get ("\u0044\u0061\u0074\u0061")};var _ffaea bool ;_gecac .Type ,_ =_fe .GetName (_aggea .Get ("\u0054\u0079\u0070\u0065"));_gecac .TransformMethod ,_ffaea =_fe .GetName (_aggea .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ffaea {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gecac .TransformParams ,_ =_fe .GetDict (_aggea .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gecac .DigestMethod ,_ =_fe .GetName (_aggea .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _gecac ,nil ;};

// GetOutlineTree returns the outline tree.
func (_fbed *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fbed ._bcaca };func (_efdcb *PdfWriter )optimize ()error {if _efdcb ._cbcfa ==nil {return nil ;};var _eefcg error ;_efdcb ._dbbcd ,_eefcg =_efdcb ._cbcfa .Optimize (_efdcb ._dbbcd );
if _eefcg !=nil {return _eefcg ;};_fgaaa :=make (map[_fe .PdfObject ]struct{},len (_efdcb ._dbbcd ));for _ ,_eaedc :=range _efdcb ._dbbcd {_fgaaa [_eaedc ]=struct{}{};};_efdcb ._debbc =_fgaaa ;return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fe .PdfObjectArray ;Matrix *_fe .PdfObjectArray ;Function []PdfFunction ;};

// ToInteger convert to an integer format.
func (_bbeg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_aacf :=_dd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aacf *_bbeg .R ()),uint32 (_aacf *_bbeg .G ()),uint32 (_aacf *_bbeg .B ())};};

// ToPdfObject implements interface PdfModel.
func (_eebbg *PdfSignature )ToPdfObject ()_fe .PdfObject {_ccgbb :=_eebbg ._cafdb ;var _bdabg *_fe .PdfObjectDictionary ;if _bccbf ,_afbb :=_ccgbb .PdfObject .(*pdfSignDictionary );_afbb {_bdabg =_bccbf .PdfObjectDictionary ;}else {_bdabg =_ccgbb .PdfObject .(*_fe .PdfObjectDictionary );
};_bdabg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eebbg .Type );_bdabg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_eebbg .Filter );_bdabg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_eebbg .SubFilter );_bdabg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eebbg .ByteRange );
_bdabg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eebbg .Contents );_bdabg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_eebbg .Cert );_bdabg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eebbg .Name );_bdabg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_eebbg .Reason );
_bdabg .SetIfNotNil ("\u004d",_eebbg .M );_bdabg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_eebbg .Reference );_bdabg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_eebbg .Changes );_bdabg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_eebbg .ContactInfo );
_bdabg .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_eebbg .Location );return _ccgbb ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fe .PdfObject ;AN _fe .PdfObject ;OP _fe .PdfObject ;JS _fe .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gcgf *PdfOutlineItem )ToPdfObject ()_fe .PdfObject {_fgfbd :=_gcgf ._cfgag ;_ddaed :=_fgfbd .PdfObject .(*_fe .PdfObjectDictionary );_ddaed .Set ("\u0054\u0069\u0074l\u0065",_gcgf .Title );if _gcgf .A !=nil {_ddaed .Set ("\u0041",_gcgf .A );};if _cacaga :=_ddaed .Get ("\u0053\u0045");
_cacaga !=nil {_ddaed .Remove ("\u0053\u0045");};if _gcgf .C !=nil {_ddaed .Set ("\u0043",_gcgf .C );};if _gcgf .Dest !=nil {_ddaed .Set ("\u0044\u0065\u0073\u0074",_gcgf .Dest );};if _gcgf .F !=nil {_ddaed .Set ("\u0046",_gcgf .F );};if _gcgf .Count !=nil {_ddaed .Set ("\u0043\u006f\u0075n\u0074",_fe .MakeInteger (*_gcgf .Count ));
};if _gcgf .Next !=nil {_ddaed .Set ("\u004e\u0065\u0078\u0074",_gcgf .Next .ToPdfObject ());};if _gcgf .First !=nil {_ddaed .Set ("\u0046\u0069\u0072s\u0074",_gcgf .First .ToPdfObject ());};if _gcgf .Prev !=nil {_ddaed .Set ("\u0050\u0072\u0065\u0076",_gcgf .Prev .GetContext ().GetContainingPdfObject ());
};if _gcgf .Last !=nil {_ddaed .Set ("\u004c\u0061\u0073\u0074",_gcgf .Last .GetContext ().GetContainingPdfObject ());};if _gcgf .Parent !=nil {_ddaed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcgf .Parent .GetContext ().GetContainingPdfObject ());
};return _fgfbd ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_eeabg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_eeabg .Type ,_eeabg .P ,_eeabg .V );};

// ToPdfObject returns a PDF object representation of the outline item.
func (_cgaf *OutlineItem )ToPdfObject ()_fe .PdfObject {_bedc ,_ :=_cgaf .ToPdfOutlineItem ();return _bedc .ToPdfObject ();};

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _c .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};

// Items returns all children outline items.
func (_bdea *Outline )Items ()[]*OutlineItem {return _bdea .Entries };

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fe .PdfObjectArray ;TI *_fe .PdfObjectInteger ;I *_fe .PdfObjectArray ;};var (_egga _b .Mutex ;_faaca ="";_gcfef _abb .Time ;_gdbcf ="";_gecdg ="";_gdced _abb .Time ;_fdfga ="";_aegcb ="";_caab ="";);func (_bcacf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bcacf .fontCommon };


// ToInteger convert to an integer format.
func (_gccg *PdfColorCalGray )ToInteger (bits int )uint32 {_efbb :=_dd .Pow (2,float64 (bits ))-1;return uint32 (_efbb *_gccg .Val ());};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_bbce *PdfPage )ToPdfObject ()_fe .PdfObject {_abffg :=_bbce ._fbecf ;_bbce .GetPageDict ();return _abffg ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gdebba *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gdge :=_gdebba .fill (provider ,appGen );if _gdge !=nil {return _gdge ;};if _ ,_edacc :=provider .(FieldImageProvider );_edacc {_gdge =_gdebba .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gdge ;};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_debf *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _debf ._bdebd };

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_ebdgf *KDict ;_ebfce _fe .PdfObject ;_cffeed *int ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_beba *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgfbf :=vals [0];if _fgfbf < 0.0||_fgfbf > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgfbf );
return nil ,ErrColorOutOfRange ;};_acce :=vals [1];if _acce < 0.0||_acce > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_acce );return nil ,ErrColorOutOfRange ;
};_bbad :=vals [2];if _bbad < 0.0||_bbad > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbad );return nil ,ErrColorOutOfRange ;};_dbcgg :=vals [3];
if _dbcgg < 0.0||_dbcgg > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbcgg );return nil ,ErrColorOutOfRange ;};_gbbe :=NewPdfColorDeviceCMYK (_fgfbf ,_acce ,_bbad ,_dbcgg );
return _gbbe ,nil ;};func (_becdc *Image )samplesTrimPadding (_ccbf []uint32 )[]uint32 {_fabga :=_becdc .ColorComponents *int (_becdc .Width )*int (_becdc .Height );if len (_ccbf )==_fabga {return _ccbf ;};_ddgd :=make ([]uint32 ,_fabga );_cfcd :=int (_becdc .Width )*_becdc .ColorComponents ;
var _dfggc ,_fcac ,_fggb ,_aegdf int ;_fbgf :=_af .BytesPerLine (int (_becdc .Width ),int (_becdc .BitsPerComponent ),_becdc .ColorComponents );for _dfggc =0;_dfggc < int (_becdc .Height );_dfggc ++{_fcac =_dfggc *int (_becdc .Width );_fggb =_dfggc *_fbgf ;
for _aegdf =0;_aegdf < _cfcd ;_aegdf ++{_ddgd [_fcac +_aegdf ]=_ccbf [_fggb +_aegdf ];};};return _ddgd ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fe .PdfObject ;RichMediaContent _fe .PdfObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fe .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _fbff *_fe .PdfIndirectObject ;var _cdeg *_fe .PdfObjectName ;var _dfca *_fe .PdfObjectArray ;if _fegfe ,_fgfbb :=obj .(*_fe .PdfIndirectObject );
_fgfbb {_fbff =_fegfe ;};obj =_fe .TraceToDirectObject (obj );switch _fdbf :=obj .(type ){case *_fe .PdfObjectArray :_dfca =_fdbf ;case *_fe .PdfObjectName :_cdeg =_fdbf ;};if _cdeg !=nil {switch *_cdeg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cdeg );return nil ,_gbd ;};};if _dfca !=nil &&_dfca .Len ()> 0{var _edge _fe .PdfObject =_fbff ;
if _fbff ==nil {_edge =_dfca ;};if _eaba ,_egae :=_fe .GetName (_dfca .Get (0));_egae {switch _eaba .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dfca .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dfca .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dfca .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _gffd (_edge );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gbcab (_edge );
case "\u004c\u0061\u0062":return _aaec (_edge );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gaade (_edge );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bcafc (_edge );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _bfbb (_edge );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _debg (_edge );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dafg (_edge );default:_df .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eaba );
};};};_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_gaccd *LTV )getOCSPs (_bcaga []*_ffc .Certificate ,_gdafd map[string ]*_ffc .Certificate )([][]byte ,error ){_dcecc :=make ([][]byte ,0,len (_bcaga ));for _ ,_fbga :=range _bcaga {for _ ,_cdee :=range _fbga .OCSPServer {if _gaccd .CertClient .IsCA (_fbga ){continue ;
};_fgbbf ,_feaa :=_gdafd [_fbga .Issuer .CommonName ];if !_feaa {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gbaa ,_efcbe :=_gaccd .OCSPClient .MakeRequest (_cdee ,_fbga ,_fgbbf );if _efcbe !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_efcbe );
continue ;};_dcecc =append (_dcecc ,_gbaa );};};return _dcecc ,nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_cbaa *PdfOutputIntent )GetContainingPdfObject ()_fe .PdfObject {return _cbaa ._gaecg };

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_dddga *PdfWriter )SetCatalogViewerPreferences (pref _fe .PdfObject )error {if pref ==nil {_dddga ._efaac .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _dfbbf ,_ecegcc :=pref .(*_fe .PdfObjectReference );
_ecegcc {pref =_dfbbf .Resolve ();if pref ==nil {_dddga ._efaac .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_dddga .addObject (pref );_dddga ._efaac .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};func (_fgef *pdfFontType0 )subsetRegistered ()error {_cfbbc ,_egada :=_fgef .DescendantFont ._aeacd .(*pdfCIDFontType2 );if !_egada {_df .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_fgef .DescendantFont );
return nil ;};if _cfbbc ==nil {return nil ;};if _cfbbc ._gdgcc ==nil {_df .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _fgef ._agfa ==nil {_df .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_eaae ,_egada :=_fe .GetStream (_cfbbc ._gdgcc .FontFile2 );if !_egada {_df .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _bbc .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cbdbg ,_beda :=_fe .DecodeStream (_eaae );if _beda !=nil {_df .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_beda );
return _beda ;};_dadce ,_beda :=_gce .Parse (_ee .NewReader (_cbdbg ));if _beda !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_eaae .Stream ));
return _beda ;};var _befcb []rune ;var _cdedb *_gce .Font ;switch _fbafe :=_fgef ._agfa .(type ){case *_cbg .TrueTypeFontEncoder :_befcb =_fbafe .RegisteredRunes ();_cdedb ,_beda =_dadce .SubsetKeepRunes (_befcb );if _beda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beda );
return _beda ;};_fbafe .SubsetRegistered ();case *_cbg .IdentityEncoder :_befcb =_fbafe .RegisteredRunes ();_efdga :=make ([]_gce .GlyphIndex ,len (_befcb ));for _gade ,_cdae :=range _befcb {_efdga [_gade ]=_gce .GlyphIndex (_cdae );};_cdedb ,_beda =_dadce .SubsetKeepIndices (_efdga );
if _beda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beda );return _beda ;};case _cbg .SimpleEncoder :_egeb :=_fbafe .Charcodes ();for _ ,_adab :=range _egeb {_dacdb ,_adabc :=_fbafe .CharcodeToRune (_adab );if !_adabc {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_adab );
continue ;};_befcb =append (_befcb ,_dacdb );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_fgef ._agfa );
};var _gbgc _ee .Buffer ;_beda =_cdedb .Write (&_gbgc );if _beda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beda );return _beda ;};if _fgef ._fcfaf !=nil {_babd :=make (map[_gf .CharCode ]rune ,len (_befcb ));for _ ,_ageff :=range _befcb {_baae ,_cgaca :=_fgef ._agfa .RuneToCharcode (_ageff );
if !_cgaca {continue ;};_babd [_gf .CharCode (_baae )]=_ageff ;};_fgef ._fcfaf =_gf .NewToUnicodeCMap (_babd );};_eaae ,_beda =_fe .MakeStream (_gbgc .Bytes (),_fe .NewFlateEncoder ());if _beda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beda );
return _beda ;};_eaae .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (_gbgc .Len ())));if _aeba ,_acgd :=_fe .GetStream (_cfbbc ._gdgcc .FontFile2 );_acgd {*_aeba =*_eaae ;}else {_cfbbc ._gdgcc .FontFile2 =_eaae ;};_fddg :=_cccdc ();
if len (_fgef ._cecc )> 0{_fgef ._cecc =_dddee (_fgef ._cecc ,_fddg );};if len (_cfbbc ._cecc )> 0{_cfbbc ._cecc =_dddee (_cfbbc ._cecc ,_fddg );};if len (_fgef ._gfab )> 0{_fgef ._gfab =_dddee (_fgef ._gfab ,_fddg );};if _cfbbc ._gdgcc !=nil {_fgcf ,_cdff :=_fe .GetName (_cfbbc ._gdgcc .FontName );
if _cdff &&len (_fgcf .String ())> 0{_bbgg :=_dddee (_fgcf .String (),_fddg );_cfbbc ._gdgcc .FontName =_fe .MakeName (_bbgg );};};return nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gcf :=NewPdfAction ();_fffb :=&PdfActionSubmitForm {};_fffb .PdfAction =_gcf ;_gcf .SetContext (_fffb );return _fffb ;};

// WriteString outputs the object as it is to be written to file.
func (_dggecc *PdfTransformParamsDocMDP )WriteString ()string {return _dggecc .ToPdfObject ().WriteString ();};func (_bba *PdfReader )newPdfActionFromIndirectObject (_cag *_fe .PdfIndirectObject )(*PdfAction ,error ){_cgb ,_dce :=_cag .PdfObject .(*_fe .PdfObjectDictionary );
if !_dce {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bba ._afac .GetModelFromPrimitive (_cgb );model !=nil {_bda ,_ffef :=model .(*PdfAction );if !_ffef {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _bda ,nil ;};_bdae :=&PdfAction {};_bdae ._ea =_cag ;_bba ._afac .Register (_cgb ,_bdae );if _efe :=_cgb .Get ("\u0054\u0079\u0070\u0065");_efe !=nil {_cf ,_ffec :=_efe .(*_fe .PdfObjectName );if !_ffec {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_efe );
}else {if *_cf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_df .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cf );
};_bdae .Type =_cf ;};};if _ddd :=_cgb .Get ("\u004e\u0065\u0078\u0074");_ddd !=nil {_bdae .Next =_ddd ;};if _gac :=_cgb .Get ("\u0053");_gac !=nil {_bdae .S =_gac ;};_edg ,_dcff :=_bdae .S .(*_fe .PdfObjectName );if !_dcff {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bdae .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bdae .S );};_bbde :=PdfActionType (_edg .String ());
switch _bbde {case ActionTypeGoTo :_gacf ,_ge :=_bba .newPdfActionGotoFromDict (_cgb );if _ge !=nil {return nil ,_ge ;};_gacf .PdfAction =_bdae ;_bdae ._eb =_gacf ;return _bdae ,nil ;case ActionTypeGoToR :_ada ,_fbb :=_bba .newPdfActionGotoRFromDict (_cgb );
if _fbb !=nil {return nil ,_fbb ;};_ada .PdfAction =_bdae ;_bdae ._eb =_ada ;return _bdae ,nil ;case ActionTypeGoToE :_efb ,_dge :=_bba .newPdfActionGotoEFromDict (_cgb );if _dge !=nil {return nil ,_dge ;};_efb .PdfAction =_bdae ;_bdae ._eb =_efb ;return _bdae ,nil ;
case ActionTypeLaunch :_bcc ,_ffbg :=_bba .newPdfActionLaunchFromDict (_cgb );if _ffbg !=nil {return nil ,_ffbg ;};_bcc .PdfAction =_bdae ;_bdae ._eb =_bcc ;return _bdae ,nil ;case ActionTypeThread :_cef ,_eda :=_bba .newPdfActionThreadFromDict (_cgb );
if _eda !=nil {return nil ,_eda ;};_cef .PdfAction =_bdae ;_bdae ._eb =_cef ;return _bdae ,nil ;case ActionTypeURI :_baa ,_abf :=_bba .newPdfActionURIFromDict (_cgb );if _abf !=nil {return nil ,_abf ;};_baa .PdfAction =_bdae ;_bdae ._eb =_baa ;return _bdae ,nil ;
case ActionTypeSound :_bbdf ,_ceg :=_bba .newPdfActionSoundFromDict (_cgb );if _ceg !=nil {return nil ,_ceg ;};_bbdf .PdfAction =_bdae ;_bdae ._eb =_bbdf ;return _bdae ,nil ;case ActionTypeMovie :_abbc ,_gba :=_bba .newPdfActionMovieFromDict (_cgb );if _gba !=nil {return nil ,_gba ;
};_abbc .PdfAction =_bdae ;_bdae ._eb =_abbc ;return _bdae ,nil ;case ActionTypeHide :_fac ,_fef :=_bba .newPdfActionHideFromDict (_cgb );if _fef !=nil {return nil ,_fef ;};_fac .PdfAction =_bdae ;_bdae ._eb =_fac ;return _bdae ,nil ;case ActionTypeNamed :_ade ,_bccb :=_bba .newPdfActionNamedFromDict (_cgb );
if _bccb !=nil {return nil ,_bccb ;};_ade .PdfAction =_bdae ;_bdae ._eb =_ade ;return _bdae ,nil ;case ActionTypeSubmitForm :_gcg ,_dcef :=_bba .newPdfActionSubmitFormFromDict (_cgb );if _dcef !=nil {return nil ,_dcef ;};_gcg .PdfAction =_bdae ;_bdae ._eb =_gcg ;
return _bdae ,nil ;case ActionTypeResetForm :_ddf ,_agbg :=_bba .newPdfActionResetFormFromDict (_cgb );if _agbg !=nil {return nil ,_agbg ;};_ddf .PdfAction =_bdae ;_bdae ._eb =_ddf ;return _bdae ,nil ;case ActionTypeImportData :_dfef ,_fdg :=_bba .newPdfActionImportDataFromDict (_cgb );
if _fdg !=nil {return nil ,_fdg ;};_dfef .PdfAction =_bdae ;_bdae ._eb =_dfef ;return _bdae ,nil ;case ActionTypeSetOCGState :_bfd ,_fce :=_bba .newPdfActionSetOCGStateFromDict (_cgb );if _fce !=nil {return nil ,_fce ;};_bfd .PdfAction =_bdae ;_bdae ._eb =_bfd ;
return _bdae ,nil ;case ActionTypeRendition :_fdf ,_bff :=_bba .newPdfActionRenditionFromDict (_cgb );if _bff !=nil {return nil ,_bff ;};_fdf .PdfAction =_bdae ;_bdae ._eb =_fdf ;return _bdae ,nil ;case ActionTypeTrans :_dbg ,_bfcb :=_bba .newPdfActionTransFromDict (_cgb );
if _bfcb !=nil {return nil ,_bfcb ;};_dbg .PdfAction =_bdae ;_bdae ._eb =_dbg ;return _bdae ,nil ;case ActionTypeGoTo3DView :_ged ,_fagg :=_bba .newPdfActionGoTo3DViewFromDict (_cgb );if _fagg !=nil {return nil ,_fagg ;};_ged .PdfAction =_bdae ;_bdae ._eb =_ged ;
return _bdae ,nil ;case ActionTypeJavaScript :_aea ,_aab :=_bba .newPdfActionJavaScriptFromDict (_cgb );if _aab !=nil {return nil ,_aab ;};_aea .PdfAction =_bdae ;_bdae ._eb =_aea ;return _bdae ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bbde );
return nil ,nil ;};

// B returns the value of the B component of the color.
func (_ffeaf *PdfColorCalRGB )B ()float64 {return _ffeaf [1]};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_cfb :=NewPdfAnnotation ();_aabc :=&PdfAnnotationLink {};_aabc .PdfAnnotation =_cfb ;_cfb .SetContext (_aabc );return _aabc ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_bfcg *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bdgb ,_ ,_dffebb :=_bfcg .CharcodesToUnicodeWithStats (_bfcg .BytesToCharcodes (data ));_gaeg :=_cbg .ExpandLigatures (_bdgb );return _gaeg ,_bd .RuneCountInString (_gaeg ),_dffebb ;
};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_daace *PdfAcroForm )GetContainingPdfObject ()_fe .PdfObject {return _daace ._ggdb };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gbf .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _abb .Time ;};

// AddImageResource adds an image to the XObject resources.
func (_cdbf *PdfPage )AddImageResource (name _fe .PdfObjectName ,ximg *XObjectImage )error {var _dedgfb *_fe .PdfObjectDictionary ;if _cdbf .Resources .XObject ==nil {_dedgfb =_fe .MakeDict ();_cdbf .Resources .XObject =_dedgfb ;}else {var _fffbc bool ;
_dedgfb ,_fffbc =(_cdbf .Resources .XObject ).(*_fe .PdfObjectDictionary );if !_fffbc {return _bbc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dedgfb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fe .PdfObject ;Popup *PdfAnnotationPopup ;CA _fe .PdfObject ;RC _fe .PdfObject ;CreationDate _fe .PdfObject ;IRT _fe .PdfObject ;Subj _fe .PdfObject ;RT _fe .PdfObject ;IT _fe .PdfObject ;ExData _fe .PdfObject ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fedfd *PdfPageResources )HasExtGState (keyName _fe .PdfObjectName )bool {_ ,_fbfab :=_fedfd .GetFontByName (keyName );return _fbfab ;};

// GetContentStream returns the XObject Form's content stream.
func (_ccbfdg *XObjectForm )GetContentStream ()([]byte ,error ){_abgdga ,_dcffd :=_fe .DecodeStream (_ccbfdg ._adcdb );if _dcffd !=nil {return nil ,_dcffd ;};return _abgdga ,nil ;};func (_edfef *PdfWriter )hasObject (_fcbca _fe .PdfObject )bool {_ ,_dgceg :=_edfef ._debbc [_fcbca ];
return _dgceg ;};func _bgae (_fdbde _fe .PdfObject )(string ,error ){_fdbde =_fe .TraceToDirectObject (_fdbde );switch _cfddc :=_fdbde .(type ){case *_fe .PdfObjectString :return _cfddc .Str (),nil ;case *_fe .PdfObjectStream :_dgdgc ,_bbfda :=_fe .DecodeStream (_cfddc );
if _bbfda !=nil {return "",_bbfda ;};return string (_dgdgc ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fdbde );
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fe .PdfObject )(*PdfFont ,error ){return _dega (fontObj ,true )};

// IsFitWindow returns the value of the fitWindow flag.
func (_ebfgb *ViewerPreferences )IsFitWindow ()bool {if _ebfgb ._gcfg ==nil {return false ;};return *_ebfgb ._gcfg ;};func (_edb *PdfReader )newPdfActionImportDataFromDict (_ggc *_fe .PdfObjectDictionary )(*PdfActionImportData ,error ){_ecea ,_ddb :=_cdb (_ggc .Get ("\u0046"));
if _ddb !=nil {return nil ,_ddb ;};return &PdfActionImportData {F :_ecea },nil ;};

// ToGoTime returns the date in time.Time format.
func (_affgd PdfDate )ToGoTime ()_abb .Time {_dagadb :=int (_affgd ._aaag *60*60+_affgd ._gcgge *60);switch _affgd ._caeead {case '-':_dagadb =-_dagadb ;case 'Z':_dagadb =0;};_ffbb :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_affgd ._caeead ,_affgd ._aaag ,_affgd ._gcgge );
_gddbe :=_abb .FixedZone (_ffbb ,_dagadb );return _abb .Date (int (_affgd ._aggdgc ),_abb .Month (_affgd ._edage ),int (_affgd ._adadfg ),int (_affgd ._dbbce ),int (_affgd ._abebf ),int (_affgd ._egagcg ),0,_gddbe );};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_geeac *PdfReader )CheckAccessRights (password []byte )(bool ,_be .Permissions ,error ){return _geeac ._gabca .CheckAccessRights (password );};var ImageHandling ImageHandler =DefaultImageHandler {};

// AddWatermarkImage adds an image watermark to the page.
func (_cfad *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bacc ,_gagf :=_cfad .GetMediaBox ();if _gagf !=nil {return _gagf ;};_dgaf :=_bacc .Urx -_bacc .Llx ;_edgcg :=_bacc .Ury -_bacc .Lly ;_cafbf :=opt .Angle *_dd .Pi /180;
_efdgf :=float64 (*ximg .Width );_bafag :=(_dgaf -_efdgf *_dd .Cos (_cafbf ))/2;if opt .FitToWidth {_efdgf =_dgaf ;_bafag =0;};_cbaga :=_edgcg ;_ggggad :=float64 (0);if opt .PreserveAspectRatio {_cbaga =_efdgf *float64 (*ximg .Height )/float64 (*ximg .Width );
_ggggad =(_edgcg -_cbaga )/2;_ggggad -=float64 (*ximg .Width )/2*_dd .Sin (_cafbf );};if _cfad .Resources ==nil {_cfad .Resources =NewPdfPageResources ();};_acdf :=NewXObjectForm ();_acdf .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_efdgf ,_cbaga });
_acdf .Resources =NewPdfPageResources ();_fcce :=0;_gcce :=_fe .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_fcce ));for _acdf .Resources .HasXObjectByName (_gcce ){_fcce ++;_gcce =_fe .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_fcce ));
};_gagf =_acdf .Resources .SetXObjectImageByName (_gcce ,ximg );if _gagf !=nil {return _gagf ;};_fcce =0;_ggfgf :=_fe .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_fcce ));for _acdf .Resources .HasExtGState (_ggfgf ){_fcce ++;_ggfgf =_fe .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_fcce ));
};_bgcg :=_fe .MakeDict ();_bgcg .Set ("\u0042\u004d",_fe .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_bgcg .Set ("\u0043\u0041",_fe .MakeFloat (opt .Alpha ));_bgcg .Set ("\u0063\u0061",_fe .MakeFloat (opt .Alpha ));_gagf =_acdf .Resources .AddExtGState (_ggfgf ,_bgcg );
if _gagf !=nil {return _gagf ;};_gecbe :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ggfgf ,_efdgf ,_cbaga ,0.0,0.0,_gcce );
_acdf .SetContentStream ([]byte (_gecbe ),nil );_fdbgb :=_db .IdentityMatrix ().Rotate (_cafbf );_fgdef :=[]float64 {_fdbgb [0],_fdbgb [1],_fdbgb [3],_fdbgb [4],_fdbgb [6],_fdbgb [7]};_acdf .Matrix =_fe .MakeArrayFromFloats (_fgdef );_bfge :=_cfad .Resources .GenerateXObjectName ();
_gagf =_cfad .Resources .SetXObjectFormByName (_bfge ,_acdf );if _gagf !=nil {return _gagf ;};_fbbbd :=_e .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_bafag ,_ggggad ,_bfge );
return _cfad .AddContentStreamByString (_fbbbd );};func (_dafdf *PdfPattern )getDict ()*_fe .PdfObjectDictionary {if _fbega ,_cafca :=_dafdf ._aegcc .(*_fe .PdfIndirectObject );_cafca {_gfeed ,_fdfbg :=_fbega .PdfObject .(*_fe .PdfObjectDictionary );if !_fdfbg {return nil ;
};return _gfeed ;}else if _cdfg ,_dgbdb :=_dafdf ._aegcc .(*_fe .PdfObjectStream );_dgbdb {return _cdfg .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dafdf ._aegcc );
return nil ;};};func _baabd (_aage *_fe .PdfObjectDictionary ){_fedf ,_bgbeg :=_fe .GetArray (_aage .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_gafag ,_gcdc :=_fe .GetIntVal (_aage .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_cgddc ,_dagcd :=_fe .GetIntVal (_aage .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));
if _bgbeg &&_gcdc &&_dagcd {_efdeg :=_fedf .Len ();if _efdeg !=_cgddc -_gafag +1{_df .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_efdeg ,_cgddc );
_aecg :=_fe .PdfObjectInteger (_gafag +_efdeg -1);_aage .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_aecg );};};};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fe .PdfObject ;BS _fe .PdfObject ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_aaddd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_aaddd ._bdfdf =colorspace ;};func _dedc (_feff _fe .PdfObject )(*PdfBorderStyle ,error ){_afba :=&PdfBorderStyle {};_afba ._bccd =_feff ;var _cadd *_fe .PdfObjectDictionary ;
_feff =_fe .TraceToDirectObject (_feff );_cadd ,_gfdf :=_feff .(*_fe .PdfObjectDictionary );if !_gfdf {return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ebcd :=_cadd .Get ("\u0054\u0079\u0070\u0065");_ebcd !=nil {_bdff ,_ebae :=_ebcd .(*_fe .PdfObjectName );
if !_ebae {_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ebcd );
}else {if *_bdff !="\u0042\u006f\u0072\u0064\u0065\u0072"{_df .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bdff );};};};if _ddbdf :=_cadd .Get ("\u0057");
_ddbdf !=nil {_bbgd ,_gacc :=_fe .GetNumberAsFloat (_ddbdf );if _gacc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gacc );return nil ,_gacc ;};_afba .W =&_bbgd ;
};if _dada :=_cadd .Get ("\u0053");_dada !=nil {_abfd ,_dbcd :=_dada .(*_fe .PdfObjectName );if !_dbcd {return nil ,_bbc .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _gbba BorderStyle ;switch *_abfd {case "\u0053":_gbba =BorderStyleSolid ;case "\u0044":_gbba =BorderStyleDashed ;case "\u0042":_gbba =BorderStyleBeveled ;case "\u0049":_gbba =BorderStyleInset ;case "\u0055":_gbba =BorderStyleUnderline ;default:_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_abfd );
return nil ,_bbc .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_afba .S =&_gbba ;};if _dceb :=_cadd .Get ("\u0044");_dceb !=nil {_bdfac ,_baag :=_dceb .(*_fe .PdfObjectArray );
if !_baag {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_dceb );return nil ,_bbc .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dgab ,_bdfc :=_bdfac .ToIntegerArray ();if _bdfc !=nil {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bdfc );
return nil ,_bdfc ;};_afba .D =&_dgab ;};return _afba ,nil ;};func (_gffa *PdfReader )newPdfAnnotationPopupFromDict (_cbeb *_fe .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cbc :=PdfAnnotationPopup {};_cbc .Parent =_cbeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_cbc .Open =_cbeb .Get ("\u004f\u0070\u0065\u006e");return &_cbc ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_aeacdf *PdfReader )newPdfPageFromDict (_bdffag *_fe .PdfObjectDictionary )(*PdfPage ,error ){_afada :=NewPdfPage ();
_afada ._bcgdf =_bdffag ;_afada ._beae =*_bdffag ;_afce :=*_bdffag ;_egaedf ,_fffae :=_afce .Get ("\u0054\u0079\u0070\u0065").(*_fe .PdfObjectName );if !_fffae {return nil ,_bbc .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_egaedf !="\u0050\u0061\u0067\u0065"{return nil ,_bbc .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _gceee :=_afce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gceee !=nil {_afada .Parent =_gceee ;};if _cbbad :=_afce .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cbbad !=nil {_daba ,_gdebf :=_fe .GetString (_cbbad );if !_gdebf {return nil ,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gbegg ,_gfadd :=NewPdfDate (_daba .Str ());if _gfadd !=nil {return nil ,_gfadd ;};_afada .LastModified =&_gbegg ;};if _eead :=_afce .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eead !=nil &&!_fe .IsNullObject (_eead ){_gcbfg ,_ccad :=_fe .GetDict (_eead );
if !_ccad {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eead );};var _geagg error ;_afada .Resources ,_geagg =NewPdfPageResourcesFromDict (_gcbfg );
if _geagg !=nil {return nil ,_geagg ;};}else {_ebfc ,_gbgaba :=_afada .getParentResources ();if _gbgaba !=nil {return nil ,_gbgaba ;};if _ebfc ==nil {_ebfc =NewPdfPageResources ();};_afada .Resources =_ebfc ;};if _gaecf :=_afce .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gaecf !=nil {_gefeb ,_eacea :=_fe .GetArray (_gaecf );if !_eacea {return nil ,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cdgad error ;
_afada .MediaBox ,_cdgad =NewPdfRectangle (*_gefeb );if _cdgad !=nil {return nil ,_cdgad ;};};if _ebfd :=_afce .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ebfd !=nil {_acbe ,_feadf :=_fe .GetArray (_ebfd );if !_feadf {return nil ,_bbc .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _abca error ;_afada .CropBox ,_abca =NewPdfRectangle (*_acbe );if _abca !=nil {return nil ,_abca ;};};if _egadc :=_afce .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_egadc !=nil {_eaeeg ,_cggbc :=_fe .GetArray (_egadc );if !_cggbc {return nil ,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cegaf error ;_afada .BleedBox ,_cegaf =NewPdfRectangle (*_eaeeg );if _cegaf !=nil {return nil ,_cegaf ;};};if _bbcc :=_afce .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_bbcc !=nil {_baade ,_agfdf :=_fe .GetArray (_bbcc );if !_agfdf {return nil ,_bbc .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dfegg error ;_afada .TrimBox ,_dfegg =NewPdfRectangle (*_baade );if _dfegg !=nil {return nil ,_dfegg ;};};if _aggb :=_afce .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_aggb !=nil {_fegdg ,_bbeb :=_fe .GetArray (_aggb );if !_bbeb {return nil ,_bbc .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bgebc error ;_afada .ArtBox ,_bgebc =NewPdfRectangle (*_fegdg );if _bgebc !=nil {return nil ,_bgebc ;};};if _ecebd :=_afce .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_ecebd !=nil {_afada .BoxColorInfo =_ecebd ;};
if _gaabg :=_afce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gaabg !=nil {_afada .Contents =_gaabg ;};if _dgdac :=_afce .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dgdac !=nil {_dfbb ,_cbcef :=_fe .GetNumberAsInt64 (_dgdac );if _cbcef !=nil {return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_afada .Rotate =&_dfbb ;};if _ddefd :=_afce .Get ("\u0047\u0072\u006fu\u0070");_ddefd !=nil {_afada .Group =_ddefd ;};if _gegb :=_afce .Get ("\u0054\u0068\u0075m\u0062");_gegb !=nil {_afada .Thumb =_gegb ;};if _aecaa :=_afce .Get ("\u0042");_aecaa !=nil {_afada .B =_aecaa ;
};if _gdbff :=_afce .Get ("\u0044\u0075\u0072");_gdbff !=nil {_afada .Dur =_gdbff ;};if _fdec :=_afce .Get ("\u0054\u0072\u0061n\u0073");_fdec !=nil {_afada .Trans =_fdec ;};if _gdab :=_afce .Get ("\u0041\u0041");_gdab !=nil {_afada .AA =_gdab ;};if _dfbf :=_afce .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_dfbf !=nil {_afada .Metadata =_dfbf ;};if _gfaed :=_afce .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gfaed !=nil {_afada .PieceInfo =_gfaed ;};if _aeeac :=_afce .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_aeeac !=nil {_afada .StructParents =_aeeac ;};if _bbabdc :=_afce .Get ("\u0049\u0044");_bbabdc !=nil {_afada .ID =_bbabdc ;};if _fegc :=_afce .Get ("\u0050\u005a");_fegc !=nil {_afada .PZ =_fegc ;};if _fcage :=_afce .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_fcage !=nil {_afada .SeparationInfo =_fcage ;};if _gddf :=_afce .Get ("\u0054\u0061\u0062\u0073");_gddf !=nil {_afada .Tabs =_gddf ;};if _edceb :=_afce .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_edceb !=nil {_afada .TemplateInstantiated =_edceb ;};if _ffdgc :=_afce .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ffdgc !=nil {_afada .PresSteps =_ffdgc ;};if _ggca :=_afce .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ggca !=nil {_afada .UserUnit =_ggca ;
};if _cdfc :=_afce .Get ("\u0056\u0050");_cdfc !=nil {_afada .VP =_cdfc ;};if _efgd :=_afce .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_efgd !=nil {_afada .Annots =_efgd ;};_afada ._agfed =_aeacdf ;return _afada ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bafe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fe .PdfObject {_bccc :=_fe .MakeDict ();if _bafe .Subtype !=nil {_bccc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bafe .Subtype );};_bccc .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bafe .Colorants );
_bccc .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bafe .Process );_bccc .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bafe .MixingHints );if _bafe ._fcaa !=nil {_bafe ._fcaa .PdfObject =_bccc ;return _bafe ._fcaa ;
};return _bccc ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cc :=&PdfAction {};_cc ._ea =_fe .MakeIndirectObject (_fe .MakeDict ());return _cc ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gbcceb :=appender .Reader .DSS ;if _gbcceb ==nil {_gbcceb =NewDSS ();};if _dddggb :=_gbcceb .GenerateHashMaps ();_dddggb !=nil {return nil ,_dddggb ;};return &LTV {CertClient :_eeb .NewCertClient (),OCSPClient :_eeb .NewOCSPClient (),CRLClient :_eeb .NewCRLClient (),SkipExisting :true ,_eacb :appender ,_abbd :_gbcceb },nil ;
};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_efbfa *pdfCIDFontType0 )ToPdfObject ()_fe .PdfObject {return _fe .MakeNull ()};func (_ffeeb *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_ffeeb ._gdbffa .Major ,_ffeeb ._gdbffa .Minor );};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_dbgaf []byte ;_cccfg []float64 ;};func (_ggbb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_fe .PdfObjectArray ;ExtGState _fe .PdfObject ;};var _facfb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _babaa ()string {_egga .Lock ();defer _egga .Unlock ();return _aegcb };

// Clear clears flag fl from the flag and returns the resulting flag.
func (_caag FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_caag .Mask ()&^fl .Mask ())};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fgdcf *PdfColorspaceLab )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abecgf ,_efcg :=_fe .GetNumbersAsFloat (objects );
if _efcg !=nil {return nil ,_efcg ;};return _fgdcf .ColorFromFloats (_abecgf );};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ToPdfObject converts the font to a PDF representation.
func (_cfabg *pdfFontType3 )ToPdfObject ()_fe .PdfObject {if _cfabg ._cdea ==nil {_cfabg ._cdea =&_fe .PdfIndirectObject {};};_cggg :=_cfabg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_cfabg ._cdea .PdfObject =_cggg ;if _cfabg .FirstChar !=nil {_cggg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cfabg .FirstChar );
};if _cfabg .LastChar !=nil {_cggg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cfabg .LastChar );};if _cfabg .Widths !=nil {_cggg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cfabg .Widths );};if _cfabg .Encoding !=nil {_cggg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cfabg .Encoding );
}else if _cfabg ._adgfe !=nil {_cecb :=_cfabg ._adgfe .ToPdfObject ();if _cecb !=nil {_cggg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cecb );};};if _cfabg .FontBBox !=nil {_cggg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cfabg .FontBBox );
};if _cfabg .FontMatrix !=nil {_cggg .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_cfabg .FontMatrix );};if _cfabg .CharProcs !=nil {_cggg .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_cfabg .CharProcs );};if _cfabg .Resources !=nil {_cggg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cfabg .Resources );
};return _cfabg ._cdea ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fe .PdfObject ;V _fe .PdfObject ;};func (_ddfg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fedba *_fe .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_cbab :=PdfAnnotationPrinterMark {};_cbab .MN =_fedba .Get ("\u004d\u004e");
return &_cbab ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_adacc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cbg .CharCode )(_fecbe []rune ,_ffdcd ,_ddfc int ){_gdebb ,_ffdcd ,_ddfc :=_adacc .CharcodesToStrings (charcodes ,"");return []rune (_bf .Join (_gdebb ,"")),_ffdcd ,_ddfc ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_aafae *PdfReader )GetTrailer ()(*_fe .PdfObjectDictionary ,error ){_egdag :=_aafae ._gabca .GetTrailer ();if _egdag ==nil {return nil ,_bbc .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _egdag ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gggd *PdfAnnotationHighlight )ToPdfObject ()_fe .PdfObject {_gggd .PdfAnnotation .ToPdfObject ();_feee :=_gggd ._efg ;_aacg :=_feee .PdfObject .(*_fe .PdfObjectDictionary );_gggd .PdfAnnotationMarkup .appendToPdfDictionary (_aacg );_aacg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_aacg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gggd .QuadPoints );return _feee ;};func (_cage *PdfAppender )mergeResources (_cgfcb ,_beef _fe .PdfObject ,_bdbd map[_fe .PdfObjectName ]_fe .PdfObjectName )_fe .PdfObject {if _beef ==nil &&_cgfcb ==nil {return nil ;
};if _beef ==nil {return _cgfcb ;};_dgcc ,_dded :=_fe .GetDict (_beef );if !_dded {return _cgfcb ;};if _cgfcb ==nil {_abcg :=_fe .MakeDict ();_abcg .Merge (_dgcc );return _beef ;};_dedca ,_dded :=_fe .GetDict (_cgfcb );if !_dded {_df .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dedca =_fe .MakeDict ();};for _ ,_faff :=range _dgcc .Keys (){if _gggb ,_fgaf :=_bdbd [_faff ];_fgaf {_dedca .Set (_gggb ,_dgcc .Get (_faff ));}else {_dedca .Set (_faff ,_dgcc .Get (_faff ));};};return _dedca ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_edaf :=NewPdfAnnotation ();_fde :=&PdfAnnotationHighlight {};_fde .PdfAnnotation =_edaf ;_fde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edaf .SetContext (_fde );return _fde ;};

// String returns a string that describes `base`.
func (_ddef fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ddef .coreString ());};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ebcge :=&PdfPageResourcesColorspaces {};_ebcge .Names =[]string {};_ebcge .Colorspaces =map[string ]PdfColorspace {};_ebcge ._beeeg =&_fe .PdfIndirectObject {};return _ebcge ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_gceb *Outline )Insert (index uint ,item *OutlineItem ){_ccea :=uint (len (_gceb .Entries ));if index > _ccea {index =_ccea ;};_gceb .Entries =append (_gceb .Entries [:index ],append ([]*OutlineItem {item },_gceb .Entries [index :]...)...);};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_afdbc *PdfPattern )SetContext (ctx PdfModel ){_afdbc ._ecfdd =ctx };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_aabce :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_aabce .N =N ;return _aabce ,nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_eeb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_eeb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_eeb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_eacb *PdfAppender ;_abbd *DSS ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_egdg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cgcf :=NewPdfAnnotation ();_bfad :=&PdfAnnotationTrapNet {};_bfad .PdfAnnotation =_cgcf ;_cgcf .SetContext (_bfad );return _bfad ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _fe .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_aeddc :=NewXObjectImage ();if lazy {_cbbcf ,_ebgege :=UpdateXObjectImageFromImage (_aeddc ,img ,cs ,encoder );if _ebgege !=nil {return nil ,_ebgege ;
};_cbbcf .ToPdfObject ();_ebgege =_cbbcf ._daceg .MakeLazy ();if _ebgege !=nil {return nil ,_ebgege ;};_cbbcf .Stream =nil ;return _cbbcf ,nil ;};return UpdateXObjectImageFromImage (_aeddc ,img ,cs ,encoder );};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_afgc *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fffde ,_ecad :=color .(*PdfColorDeviceCMYK );if !_ecad {_df .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bddb :=_fffde .C ();_bde :=_fffde .M ();_bgad :=_fffde .Y ();_ccfc :=_fffde .K ();_bddb =_bddb *(1-_ccfc )+_ccfc ;_bde =_bde *(1-_ccfc )+_ccfc ;
_bgad =_bgad *(1-_ccfc )+_ccfc ;_gbec :=1-_bddb ;_baea :=1-_bde ;_faga :=1-_bgad ;return NewPdfColorDeviceRGB (_gbec ,_baea ,_faga ),nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_efcf :=&PdfShadingPatternType3 {};_efcf .Matrix =_fe .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_efcf .PdfPattern =&PdfPattern {};_efcf .PdfPattern .PatternType =int64 (*_fe .MakeInteger (2));
_efcf .PdfPattern ._ecfdd =_efcf ;_efcf .PdfPattern ._aegcc =_fe .MakeIndirectObject (_fe .MakeDict ());return _efcf ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_agff *PdfPageResources )HasXObjectByName (keyName _fe .PdfObjectName )bool {_bbgc ,_ :=_agff .GetXObjectByName (keyName );return _bbgc !=nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fdca *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fdca .UnderlyingCS ==nil {return nil ,_bbc .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fdca .UnderlyingCS .ColorFromFloats (vals );};func _abcfa (_faaeg _fe .PdfObject )(*KDict ,error ){_ebacc :=_fe .ResolveReference (_faaeg );if _ebacc ==nil {return nil ,_e .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};_fegfec ,_cfadb :=_fe .GetDict (_ebacc );if !_cfadb {return nil ,_e .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_aabfd :=&KDict {};
if _cgbff :=_fegfec .Get ("\u0053");_cgbff !=nil {_aabfd .S =_cgbff ;};if _ddebf :=_fegfec .Get ("\u0050");_ddebf !=nil {_aabfd .P =_ddebf ;};if _gebfad :=_fegfec .Get ("\u0049\u0044");_gebfad !=nil {if _ebgcb ,_bbbfa :=_fe .GetString (_gebfad );_bbbfa {_aabfd .ID =_ebgcb ;
};};if _cdbec :=_fegfec .Get ("\u0050\u0067");_cdbec !=nil {_aabfd .Pg =_cdbec ;};if _aadg :=_fegfec .Get ("\u004b");_aadg !=nil {_aabfd .K =_aadg ;switch _deccd :=_aadg .(type ){case *_fe .PdfObjectArray :if _fcdff ,_gcdaf :=_fe .GetArray (_aadg );_gcdaf {for _ ,_ddeged :=range _fcdff .Elements (){switch _acfge :=_ddeged .(type ){case *_fe .PdfIndirectObject :_bbgaf ,_bbbfb :=_abcfa (_acfge );
if _bbbfb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_bbbfb );continue ;};_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_ebdgf :_bbgaf });
case *_fe .PdfObjectInteger :if _fdfbga ,_cgfeac :=_fe .GetIntVal (_ddeged );_cgfeac {_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_cffeed :&_fdfbga });};case *_fe .PdfObjectDictionary :_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_ebfce :_ddeged });
};};};case *_fe .PdfIndirectObject :_aedfa ,_cbda :=_abcfa (_deccd );if _cbda !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_cbda );
};if _aedfa !=nil {_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_ebdgf :_aedfa });};case *_fe .PdfObjectDictionary :_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_ebfce :_deccd });case *_fe .PdfObjectInteger :if _fbdgfg ,_bdabf :=_fe .GetIntVal (_aadg );
_bdabf {_aabfd ._fdgad =append (_aabfd ._fdgad ,&KValue {_cffeed :&_fbdgfg });};};};if _bgbf :=_fegfec .Get ("\u0041");_bgbf !=nil {_aabfd .A =_bgbf ;};if _abggc :=_fegfec .Get ("\u0043");_abggc !=nil {_aabfd .C =_abggc ;};if _bcdff :=_fegfec .Get ("\u0052");
_bcdff !=nil {if _adcgc ,_baabdg :=_fe .GetInt (_bcdff );_baabdg {_aabfd .R =_adcgc ;};};if _feag :=_fegfec .Get ("\u0054");_feag !=nil {if _gfbfff ,_gadff :=_fe .GetString (_feag );_gadff {_aabfd .T =_gfbfff ;};};if _ffebg :=_fegfec .Get ("\u004c\u0061\u006e\u0067");
_ffebg !=nil {if _fbgde ,_ecegg :=_fe .GetString (_ffebg );_ecegg {_aabfd .Lang =_fbgde ;};};if _aabgf :=_fegfec .Get ("\u0041\u006c\u0074");_aabgf !=nil {if _fggfcb ,_edagfd :=_fe .GetString (_aabgf );_edagfd {_aabfd .Alt =_fggfcb ;};};if _ffgdf :=_fegfec .Get ("\u0045");
_ffgdf !=nil {if _edfgg ,_fgee :=_fe .GetString (_ffgdf );_fgee {_aabfd .E =_edfgg ;};};return _aabfd ,nil ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ddfb *PdfAppender )GetDSS ()(_bbdc *DSS ){return _ddfb ._fdade };

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fe .PdfObject ;BS _fe .PdfObject ;LE _fe .PdfObject ;IC _fe .PdfObject ;LL _fe .PdfObject ;LLE _fe .PdfObject ;Cap _fe .PdfObject ;IT _fe .PdfObject ;LLO _fe .PdfObject ;CP _fe .PdfObject ;
Measure _fe .PdfObject ;CO _fe .PdfObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ebfg *PdfColorLab )GetNumComponents ()int {return 3};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_beea *Image )ToGoImage ()(_ab .Image ,error ){_df .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_ddebd ,_ecde :=_af .NewImage (int (_beea .Width ),int (_beea .Height ),int (_beea .BitsPerComponent ),_beea .ColorComponents ,_beea .Data ,_beea ._dbgaf ,_beea ._cccfg );
if _ecde !=nil {return nil ,_ecde ;};return _ddebd ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_geeg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};var (_dbdaa =_bg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_gcdcg =_bg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_abcbb =_bg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dfce ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cfcb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cfeda ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_fedd *PdfReader )newPdfAnnotationWidgetFromDict (_dgca *_fe .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dga :=PdfAnnotationWidget {};_dga .H =_dgca .Get ("\u0048");_dga .MK =_dgca .Get ("\u004d\u004b");_dga .A =_dgca .Get ("\u0041");
_dga .AA =_dgca .Get ("\u0041\u0041");_dga .BS =_dgca .Get ("\u0042\u0053");_dga .Parent =_dgca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dga ,nil ;};

// SetHideMenubar sets the value of the hideMenubar flag.
func (_bbec *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_bbec ._daddc =&hideMenubar };func (_cee *PdfReader )newPdfActionHideFromDict (_efd *_fe .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_efd .Get ("\u0054"),H :_efd .Get ("\u0048")},nil ;
};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gaec *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_acdgg *ViewerPreferences )IsDisplayDocTitle ()bool {if _acdgg ._acdff ==nil {return false ;};return *_acdgg ._acdff ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cba :=NewPdfAction ();_gfc :=&PdfActionHide {};_gfc .PdfAction =_cba ;_cba .SetContext (_gfc );return _gfc ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_egabb :=&PdfShadingType2 {};_egabb .PdfShading =&PdfShading {};_egabb .PdfShading ._gbaea =_fe .MakeIndirectObject (_fe .MakeDict ());_egabb .PdfShading ._bfgae =_egabb ;return _egabb ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_addfc *PdfPageResources )SetFontByName (keyName _fe .PdfObjectName ,obj _fe .PdfObject )error {if _addfc .Font ==nil {_addfc .Font =_fe .MakeDict ();};_dbcgb ,_gacda :=_fe .TraceToDirectObject (_addfc .Font ).(*_fe .PdfObjectDictionary );if !_gacda {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_addfc .Font ));
return _fe .ErrTypeError ;};_dbcgb .Set (keyName ,obj );return nil ;};

// GetPerms returns the Permissions dictionary
func (_bafbd *PdfReader )GetPerms ()*Permissions {return _bafbd ._ageda };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bbgeg *_fe .PdfIndirectObject ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cada *PdfFontDescriptor )ToPdfObject ()_fe .PdfObject {_cgcca :=_fe .MakeDict ();if _cada ._cfbaa ==nil {_cada ._cfbaa =&_fe .PdfIndirectObject {};};_cada ._cfbaa .PdfObject =_cgcca ;_cgcca .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _cada .FontName !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cada .FontName );};if _cada .FontFamily !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cada .FontFamily );};if _cada .FontStretch !=nil {_cgcca .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cada .FontStretch );
};if _cada .FontWeight !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cada .FontWeight );};if _cada .Flags !=nil {_cgcca .Set ("\u0046\u006c\u0061g\u0073",_cada .Flags );};if _cada .FontBBox !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cada .FontBBox );
};if _cada .ItalicAngle !=nil {_cgcca .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cada .ItalicAngle );};if _cada .Ascent !=nil {_cgcca .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cada .Ascent );};if _cada .Descent !=nil {_cgcca .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cada .Descent );
};if _cada .Leading !=nil {_cgcca .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cada .Leading );};if _cada .CapHeight !=nil {_cgcca .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cada .CapHeight );};if _cada .XHeight !=nil {_cgcca .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cada .XHeight );
};if _cada .StemV !=nil {_cgcca .Set ("\u0053\u0074\u0065m\u0056",_cada .StemV );};if _cada .StemH !=nil {_cgcca .Set ("\u0053\u0074\u0065m\u0048",_cada .StemH );};if _cada .AvgWidth !=nil {_cgcca .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cada .AvgWidth );
};if _cada .MaxWidth !=nil {_cgcca .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cada .MaxWidth );};if _cada .MissingWidth !=nil {_cgcca .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cada .MissingWidth );};if _cada .FontFile !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cada .FontFile );
};if _cada .FontFile2 !=nil {_cgcca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cada .FontFile2 );};if _cada .FontFile3 !=nil {_cgcca .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cada .FontFile3 );};if _cada .CharSet !=nil {_cgcca .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cada .CharSet );
};if _cada .Style !=nil {_cgcca .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cada .FontName );};if _cada .Lang !=nil {_cgcca .Set ("\u004c\u0061\u006e\u0067",_cada .Lang );};if _cada .FD !=nil {_cgcca .Set ("\u0046\u0044",_cada .FD );};if _cada .CIDSet !=nil {_cgcca .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cada .CIDSet );
};return _cada ._cfbaa ;};

// Encoder returns the font's text encoder.
func (_ecee *pdfFontSimple )Encoder ()_cbg .TextEncoder {if _ecee ._dcdgc !=nil {return _ecee ._dcdgc ;};if _ecee ._egeg !=nil {return _ecee ._egeg ;};_ceab ,_ :=_cbg .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ceab ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_adgg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _adgg ._gabca .GetRevisionNumber ()==0{return nil ,_bbc .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _egdab ,_fceg :=_adgg ._affbg [_adgg ];_fceg {return _egdab ,nil ;};_daffd ,_cgff :=_adgg ._gabca .GetPreviousRevisionReadSeeker ();if _cgff !=nil {return nil ,_cgff ;};_bbdg ,_cgff :=_faded (_daffd ,_adgg ._gdfde ,_adgg ._cfbeg ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cgff !=nil {return nil ,_cgff ;};_adgg ._fgfed [_adgg ._gabca .GetRevisionNumber ()-1]=_bbdg ;_adgg ._affbg [_adgg ]=_bbdg ;_bbdg ._affbg =_adgg ._affbg ;return _bbdg ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _be .Permissions ;Algorithm EncryptionAlgorithm ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aebge *PdfWriter )SetNamedDestinations (dests _fe .PdfObject )error {if dests ==nil {return nil ;};_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_aebge ._efaac .Set ("\u0044\u0065\u0073t\u0073",dests );return _aebge .addObjects (dests );};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_affee *Image )AlphaMap (mapFunc AlphaMapFunc ){for _geda ,_fbfbg :=range _affee ._dbgaf {_affee ._dbgaf [_geda ]=mapFunc (_fbfbg );};};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fe .PdfObject ;Open _fe .PdfObject ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fe .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _fggea error ;encoder ,_fggea =img .getSuitableEncoder ();if _fggea !=nil {_df .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fggea );
encoder =_fe .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_dfffb ,_afbe :=encoder .EncodeBytes (img .Data );if _afbe !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_afbe );
return nil ,_afbe ;};_fcafe :=NewXObjectImage ();_caecg :=img .Width ;_aeagc :=img .Height ;_fcafe .Width =&_caecg ;_fcafe .Height =&_aeagc ;_bcefc :=img .BitsPerComponent ;_fcafe .BitsPerComponent =&_bcefc ;_fcafe .Filter =encoder ;_fcafe .Stream =_dfffb ;
if cs ==nil {if img .ColorComponents ==1{_fcafe .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_fe .DCTEncoder :_fcafe .ColorSpace =NewPdfColorspaceDeviceRGB ();_bcefc =8;_fcafe .BitsPerComponent =&_bcefc ;
};};}else if img .ColorComponents ==3{_fcafe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_fe .DCTEncoder :_fcafe .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_fcafe .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_bbc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fcafe .ColorSpace =cs ;};if len (img ._dbgaf )!=0{_begdc :=NewXObjectImage ();_begdc .Filter =encoder ;_bcabb ,_bbfed :=encoder .EncodeBytes (img ._dbgaf );
if _bbfed !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bbfed );return nil ,_bbfed ;};_begdc .Stream =_bcabb ;_begdc .BitsPerComponent =_fcafe .BitsPerComponent ;
_begdc .Width =&img .Width ;_begdc .Height =&img .Height ;_begdc .ColorSpace =NewPdfColorspaceDeviceGray ();_fcafe .SMask =_begdc .ToPdfObject ();}else {_fcafe .SMask =xobjIn .SMask ;_fcafe .ImageMask =xobjIn .ImageMask ;if _fcafe .ColorSpace .GetNumComponents ()==1{_fafg (_fcafe );
};};return _fcafe ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fbfb :=PdfColorCalGray (grayVal );return &_fbfb ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gdff *PdfPageResources )SetXObjectImageByName (keyName _fe .PdfObjectName ,ximg *XObjectImage )error {_eagcb :=ximg .ToPdfObject ().(*_fe .PdfObjectStream );_ggggf :=_gdff .SetXObjectByName (keyName ,_eagcb );return _ggggf ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ddbfb *PdfWriter )AddPage (page *PdfPage )error {const _bdaff ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dacdab (page );_fggfg :=page .ToPdfObject ();_df .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_df .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fggfg );_afbff ,_ecggb :=_fe .GetIndirect (_fggfg );if !_ecggb {return _bbc .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_df .Log .Trace ("\u0025\u0073",_afbff );_df .Log .Trace ("\u0025\u0073",_afbff .PdfObject );_cbddc ,_ecggb :=_fe .GetDict (_afbff .PdfObject );if !_ecggb {return _bbc .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_geebb ,_ecggb :=_fe .GetName (_cbddc .Get ("\u0054\u0079\u0070\u0065"));if !_ecggb {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cbddc .Get ("\u0054\u0079\u0070\u0065"));
};if _geebb .String ()!="\u0050\u0061\u0067\u0065"{return _bbc .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dcdaf :=[]_fe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ebabde ,_eegcf :=_fe .GetIndirect (_cbddc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_df .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cbddc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_eegcf );
for _eegcf {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebabde );_becbc ,_ebega :=_fe .GetDict (_ebabde .PdfObject );if !_ebega {return _bbc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ddgc :=range _dcdaf {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ddgc );if _cbddc .Get (_ddgc )!=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fddbe :=_becbc .Get (_ddgc );_fddbe !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ddgc );_cbddc .Set (_ddgc ,_fddbe );};};_ebabde ,_eegcf =_fe .GetIndirect (_becbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_becbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_cbddc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddbfb ._ggfge );_afbff .PdfObject =_cbddc ;_dggeeb ,_ecggb :=_fe .GetDict (_ddbfb ._ggfge .PdfObject );if !_ecggb {return _bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bgcga ,_ecggb :=_fe .GetArray (_dggeeb .Get ("\u004b\u0069\u0064\u0073"));if !_ecggb {return _bbc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bgcga .Append (_afbff );_ddbfb ._ebaga [_cbddc ]=struct{}{};_ddbfb ._cacecg =append (_ddbfb ._cacecg ,_afbff );_ffggf ,_ecggb :=_fe .GetInt (_dggeeb .Get ("\u0043\u006f\u0075n\u0074"));if !_ecggb {return _bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ffggf =*_ffggf +1;if page ._agfed ==nil {_cfdf :=_ae .Track (_ddbfb ._ggfbb ,_bdaff ,_ddbfb ._fdgdb );if _cfdf !=nil {return _cfdf ;};}else {_bgcbg :=_ae .Track (page ._agfed ._ccfdg ,_bdaff ,page ._agfed ._cdega );if _bgcbg !=nil {return _bgcbg ;};
};_ddbfb .addObject (_afbff );_dfada :=_ddbfb .addObjects (_cbddc );if _dfada !=nil {return _dfada ;};return nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fe .PdfObjectString ;Author *_fe .PdfObjectString ;Subject *_fe .PdfObjectString ;Keywords *_fe .PdfObjectString ;Creator *_fe .PdfObjectString ;Producer *_fe .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_fe .PdfObjectName ;
_bdgg *_fe .PdfObjectDictionary ;};

// ToPdfObject converts the structure tree root to a PDF object.
func (_cdeca *StructTreeRoot )ToPdfObject ()_fe .PdfObject {_ebga :=_cdeca ._febgf ;if _ebga ==nil {_ebga =&_fe .PdfIndirectObject {};_ebga .PdfObject =_fe .MakeDict ();};_caef :=_ebga .PdfObject .(*_fe .PdfObjectDictionary );var _cfegb _fe .PdfObject ;
if len (_cdeca .K )==1{_cfegb =_fe .MakeIndirectObject (_cdeca .K [0].ToPdfObject ());}else {_dgee :=_fe .MakeArray ();for _ ,K :=range _cdeca .K {_dgee .Append (_fe .MakeIndirectObject (K .ToPdfObject ()));};_cfegb =_dgee ;};var (_edgab =[]_fe .PdfObject {};
_ffaacb =map[_fe .PdfObject ][]_fe .PdfObject {};_fecdc =map[string ]_fe .PdfObject {};);_geac (_cfegb ,_ebga ,_ffaacb ,_fecdc ,&_edgab );_caef .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_caef .Set ("\u004b",_cfegb );if _cdeca .IDTree !=nil {_caef .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_fe .MakeIndirectObject (_cdeca .IDTree .ToPdfObject ()));}else if len (_fecdc )> 0{_abgdg :=_fe .MakeArray ();_febbe :=make ([]string ,0,len (_fecdc ));
for _fgcde :=range _fecdc {_febbe =append (_febbe ,_fgcde );};_gg .Strings (_febbe );for _ ,_gbebga :=range _febbe {_abgdg .Append (_fe .MakeString (_gbebga ));_abgdg .Append (_fecdc [_gbebga ]);};_cdeca .IDTree =&IDTree {Names :_abgdg ,Limits :_fe .MakeArray (_fe .MakeString (_febbe [0]),_fe .MakeString (_febbe [len (_febbe )-1]))};
_caef .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_fe .MakeIndirectObject (_cdeca .IDTree .ToPdfObject ()));};if _cdeca .ParentTree !=nil {_caef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_fe .MakeIndirectObject (_cdeca .ParentTree ));
}else if len (_ffaacb )> 0||len (_edgab )> 0{_dgffe :=_fe .MakeArray ();_cegbf :=0;for _dgbge ,_aeaa :=range _ffaacb {_acbef :=_fe .MakeArray ();for _ ,_eeabgc :=range _aeaa {_acbef .Append (_eeabgc );};_gdegd :=_fe .MakeInteger (int64 (_cegbf ));_dgffe .Append (_gdegd );
_dgffe .Append (_fe .MakeIndirectObject (_acbef ));if _eceece ,_bedga :=_fe .GetIndirect (_dgbge );_bedga {if _afcfg ,_cbdbfa :=_fe .GetDict (_eceece .PdfObject );_cbdbfa {_bbbdf :=_afcfg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _bbbdf !=nil {if _cbcfd ,_ecfea :=_fe .GetIntVal (_bbbdf );_ecfea {if _cegbf < _cbcfd {_afcfg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gdegd );};};}else {_afcfg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gdegd );
};};};_cegbf ++;};_abfe :=func (_abfc _fe .PdfObject ,_ceca *_fe .PdfObjectDictionary )bool {if _dfbgf :=_ceca .Get ("\u004f\u0062\u006a");_dfbgf !=nil {if _ecaa ,_cbfb :=_fe .GetDict (_dfbgf );_cbfb {_eeega :=_ecaa .Get ("\u0054\u0079\u0070\u0065");_febde :=_ecaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");
if _eeega !=nil &&_eeega .String ()=="\u0041\u006e\u006eo\u0074"&&_febde !=nil &&_febde .String ()=="\u004c\u0069\u006e\u006b"{_gfadgd :=_fe .MakeInteger (int64 (_cegbf ));_ecaa .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gfadgd );
_dgffe .Append (_gfadgd );_dgffe .Append (_abfc );_cegbf ++;return true ;};};};return false ;};for _ ,_eggdd :=range _edgab {if _gacfa ,_adgb :=_fe .GetDict (_eggdd );_adgb {if _bfbaf :=_gacfa .Get ("\u0053");_bfbaf !=nil {if _aedcaa ,_gcccc :=_fe .GetNameVal (_bfbaf );
_gcccc &&_aedcaa ==StructureTypeLink {if _fefeg :=_gacfa .Get ("\u004b");_fefeg !=nil {if _gdedb ,_dfbaf :=_fe .GetArray (_fefeg );_dfbaf {for _ ,_dfecd :=range _gdedb .Elements (){if _caccc ,_eegda :=_fe .GetDict (_dfecd );_eegda {_abfe (_eggdd ,_caccc );
};};}else if _ffeaa ,_efaeg :=_fe .GetDict (_fefeg );_efaeg {_abfe (_eggdd ,_ffeaa );};};};};};};_cdeca .ParentTree =_fe .MakeDict ();_cdeca .ParentTree .Set ("\u004e\u0075\u006d\u0073",_dgffe );_cdeca .ParentTreeNextKey =int64 (_cegbf );_caef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_fe .MakeIndirectObject (_cdeca .ParentTree ));
};_caef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_fe .MakeInteger (_cdeca .ParentTreeNextKey ));if _cdeca .RoleMap !=nil {_caef .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_cdeca .RoleMap );
};if _cdeca .ClassMap !=nil {_caef .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_cdeca .ClassMap );};return _ebga ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gfadg *PdfPage )GetContentStreamObjs ()[]_fe .PdfObject {if _gfadg .Contents ==nil {return nil ;};_abcad :=_fe .TraceToDirectObject (_gfadg .Contents );if _ggccf ,_afdgf :=_abcad .(*_fe .PdfObjectArray );_afdgf {return _ggccf .Elements ();};return []_fe .PdfObject {_abcad };
};func (_gbaad *PdfWriter )addObject (_fbbgd _fe .PdfObject )bool {_gaegc :=_gbaad .hasObject (_fbbgd );if !_gaegc {_dgbbc :=_fe .ResolveReferencesDeep (_fbbgd ,_gbaad ._gdcbbb );if _dgbbc !=nil {_df .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dgbbc );
};_gbaad ._dbbcd =append (_gbaad ._dbbcd ,_fbbgd );_gbaad ._debbc [_fbbgd ]=struct{}{};return true ;};return false ;};func _gbfea ()string {_egga .Lock ();defer _egga .Unlock ();if len (_gdbcf )> 0{return _gdbcf ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fe .PdfObject ;Q _fe .PdfObject ;RC _fe .PdfObject ;DS _fe .PdfObject ;CL _fe .PdfObject ;IT _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;BS _fe .PdfObject ;LE _fe .PdfObject ;
};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};

// SetPatternByName sets a pattern resource specified by keyName.
func (_ggdca *PdfPageResources )SetPatternByName (keyName _fe .PdfObjectName ,pattern _fe .PdfObject )error {if _ggdca .Pattern ==nil {_ggdca .Pattern =_fe .MakeDict ();};_becg ,_egebaf :=_fe .GetDict (_ggdca .Pattern );if !_egebaf {return _fe .ErrTypeError ;
};_becg .Set (keyName ,pattern );return nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_ebdf *PdfFont )BytesToCharcodes (data []byte )[]_cbg .CharCode {_df .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _feea ,_adbc :=_ebdf ._aeacd .(*pdfFontType0 );_adbc &&_feea ._dgccd !=nil {if _acbd ,_fdfaf :=_feea .bytesToCharcodes (data );_fdfaf {return _acbd ;};};var (_geff =make ([]_cbg .CharCode ,0,len (data )+len (data )%2);_adfd =_ebdf .baseFields (););if _adfd ._fcfaf !=nil {if _bebad ,_fdegd :=_adfd ._fcfaf .BytesToCharcodes (data );
_fdegd {for _ ,_fgbg :=range _bebad {_geff =append (_geff ,_cbg .CharCode (_fgbg ));};return _geff ;};};if _adfd .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bfee :=0;_bfee < len (data );_bfee +=2{_eadea :=uint16 (data [_bfee ])<<8|uint16 (data [_bfee +1]);_geff =append (_geff ,_cbg .CharCode (_eadea ));};}else {for _ ,_adef :=range data {_geff =append (_geff ,_cbg .CharCode (_adef ));
};};return _geff ;};func _bebdb (_febfc []byte )([]byte ,error ){_gedead :=_fd .New ();if _ ,_gead :=_gd .Copy (_gedead ,_ee .NewReader (_febfc ));_gead !=nil {return nil ,_gead ;};return _gedead .Sum (nil ),nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fe .PdfObject ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_efgce *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_fcdbg :=_efgce ._gabca .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _fcdbg {return nil ,_bbc .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_fcdbg {return _efgce ,nil ;};if _efgce ._fgfed [revisionNumber ]!=nil {return _efgce ._fgfed [revisionNumber ],nil ;};_fafea :=_efgce ;for _ffecb :=_fcdbg -1;_ffecb >=revisionNumber ;_ffecb --{_ddbdc ,_bfgeg :=_fafea .GetPreviousRevision ();
if _bfgeg !=nil {return nil ,_bfgeg ;};_efgce ._fgfed [_ffecb ]=_ddbdc ;_fafea =_ddbdc ;};return _fafea ,nil ;};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_bbcef *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_bbcef ._eebag =&pickTrayByPDFSize ;};var _dedcb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fe .PdfObject ;T _fe .PdfObject ;Operation _fe .PdfObject ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_gcdf *LTV )EnableByName (name string ,extraCerts []*_ffc .Certificate )error {_gffdb :=_gcdf ._eacb ._cca .AcroForm ;for _ ,_gbcag :=range _gffdb .AllFields (){_edeg ,_ :=_gbcag .GetContext ().(*PdfFieldSignature );if _edeg ==nil {continue ;};if _gadad :=_edeg .PartialName ();
_gadad !=name {continue ;};return _gcdf .Enable (_edeg .V ,extraCerts );};return nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_baged *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _afcd []_cbg .TextEncoder ;var _ecaeb _cbg .CMapEncoder ;if _bgcb :=_baged .baseFields ()._fcfaf ;_bgcb !=nil {_ecaeb =_cbg .NewCMapEncoder ("",nil ,_bgcb );};_abff :=_baged .Encoder ();
if _abff !=nil {switch _gfef :=_abff .(type ){case _cbg .SimpleEncoder :_cdbg :=_gfef .BaseName ();if _ ,_ffccd :=_deec [_cdbg ];_ffccd {_afcd =append (_afcd ,_abff );};};};if len (_afcd )==0{if _baged .baseFields ()._fcfaf !=nil {_afcd =append (_afcd ,_ecaeb );
};if _abff !=nil {_afcd =append (_afcd ,_abff );};};var _cfccb _ee .Buffer ;var _dfddd int ;for _ ,_dedfe :=range data {var _bccca bool ;for _ ,_gcaf :=range _afcd {if _dacd :=_gcaf .Encode (string (_dedfe ));len (_dacd )> 0{_cfccb .Write (_dacd );_bccca =true ;
break ;};};if !_bccca {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dedfe );
_dfddd ++;};};if _dfddd !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dfddd ,_baged ,_afcd );
};return _cfccb .Bytes (),_dfddd ;};

// ToPdfObject returns the PDF representation of the function.
func (_dabdb *PdfFunctionType2 )ToPdfObject ()_fe .PdfObject {_ebea :=_fe .MakeDict ();_ebea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (2));_gcgd :=&_fe .PdfObjectArray {};for _ ,_ggddf :=range _dabdb .Domain {_gcgd .Append (_fe .MakeFloat (_ggddf ));
};_ebea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcgd );if _dabdb .Range !=nil {_defbd :=&_fe .PdfObjectArray {};for _ ,_bddcg :=range _dabdb .Range {_defbd .Append (_fe .MakeFloat (_bddcg ));};_ebea .Set ("\u0052\u0061\u006eg\u0065",_defbd );};if _dabdb .C0 !=nil {_gbcdf :=&_fe .PdfObjectArray {};
for _ ,_dgegc :=range _dabdb .C0 {_gbcdf .Append (_fe .MakeFloat (_dgegc ));};_ebea .Set ("\u0043\u0030",_gbcdf );};if _dabdb .C1 !=nil {_feeaa :=&_fe .PdfObjectArray {};for _ ,_eaced :=range _dabdb .C1 {_feeaa .Append (_fe .MakeFloat (_eaced ));};_ebea .Set ("\u0043\u0031",_feeaa );
};_ebea .Set ("\u004e",_fe .MakeFloat (_dabdb .N ));if _dabdb ._fgfd !=nil {_dabdb ._fgfd .PdfObject =_ebea ;return _dabdb ._fgfd ;};return _ebea ;};

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_affdgg *ViewerPreferences )IsHideWindowUI ()bool {if _affdgg ._egfgb ==nil {return false ;};return *_affdgg ._egfgb ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_acgac *PdfPageResources )GenerateXObjectName ()_fe .PdfObjectName {_deecbe :=1;for {_ebfga :=_fe .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_deecbe ));if !_acgac .HasXObjectByName (*_ebfga ){return *_ebfga ;};_deecbe ++;};};func (_dbea *LTV )getCRLs (_fdff []*_ffc .Certificate )([][]byte ,error ){_bcbccg :=make ([][]byte ,0,len (_fdff ));
for _ ,_faffe :=range _fdff {for _ ,_bdbdb :=range _faffe .CRLDistributionPoints {if _dbea .CertClient .IsCA (_faffe ){continue ;};_efaca ,_affg :=_dbea .CRLClient .MakeRequest (_bdbdb ,_faffe );if _affg !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_affg );
continue ;};_bcbccg =append (_bcbccg ,_efaca );};};return _bcbccg ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_bgccdf *_fe .PdfIndirectObject ;_egdcg _cbg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fe .PdfObject ;W _fe .PdfObject ;DW2 _fe .PdfObject ;W2 _fe .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fe .PdfObject ;_edgaa map[_cbg .CharCode ]float64 ;_efadd float64 ;_ageg map[rune ]int ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cfbe :=NewPdfAnnotation ();_cgc :=&PdfAnnotationCircle {};_cgc .PdfAnnotation =_cfbe ;_cgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfbe .SetContext (_cgc );return _cgc ;};

// ToPdfObject implements interface PdfModel.
func (_egg *PdfActionRendition )ToPdfObject ()_fe .PdfObject {_egg .PdfAction .ToPdfObject ();_ecb :=_egg ._ea ;_fee :=_ecb .PdfObject .(*_fe .PdfObjectDictionary );_fee .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeRendition )));_fee .SetIfNotNil ("\u0052",_egg .R );
_fee .SetIfNotNil ("\u0041\u004e",_egg .AN );_fee .SetIfNotNil ("\u004f\u0050",_egg .OP );_fee .SetIfNotNil ("\u004a\u0053",_egg .JS );return _ecb ;};func (_abe *PdfReader )newPdfAnnotationSquigglyFromDict (_bebcb *_fe .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gafa :=PdfAnnotationSquiggly {};
_cae ,_eege :=_abe .newPdfAnnotationMarkupFromDict (_bebcb );if _eege !=nil {return nil ,_eege ;};_gafa .PdfAnnotationMarkup =_cae ;_gafa .QuadPoints =_bebcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gafa ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;NewWindow _fe .PdfObject ;T _fe .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dbgbd *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ccagf :=RC4_128bit ;if options !=nil {_ccagf =options .Algorithm ;};_bedag :=_be .PermOwner ;if options !=nil {_bedag =options .Permissions ;};var _ccdbe _def .Filter ;
switch _ccagf {case RC4_128bit :_ccdbe =_def .NewFilterV2 (16);case AES_128bit :_ccdbe =_def .NewFilterAESV2 ();case AES_256bit :_ccdbe =_def .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_dcgb ,_bedgc ,_dbad :=_fe .PdfCryptNewEncrypt (_ccdbe ,userPass ,ownerPass ,_bedag );if _dbad !=nil {return _dbad ;};_dbgbd ._aebgf =_dcgb ;if _bedgc .Major !=0{_dbgbd .SetVersion (_bedgc .Major ,_bedgc .Minor );};_dbgbd ._baaaa =_bedgc .Encrypt ;_dbgbd ._gfcfeg ,_dbgbd ._eafad =_bedgc .ID0 ,_bedgc .ID1 ;
_fefd :=_fe .MakeIndirectObject (_bedgc .Encrypt );_dbgbd ._bceed =_fefd ;_dbgbd .addObject (_fefd );return nil ;};func (_cga *PdfReader )newPdfActionGotoFromDict (_bfca *_fe .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bfca .Get ("\u0044")},nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fgbf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gadc :=vals [0];if _gadc < 0.0||_gadc > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gadc );
return nil ,ErrColorOutOfRange ;};_feecd :=vals [1];if _feecd < 0.0||_feecd > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feecd );return nil ,ErrColorOutOfRange ;
};_ddcfb :=vals [2];if _ddcfb < 0.0||_ddcfb > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ddcfb );return nil ,ErrColorOutOfRange ;};_agdd :=NewPdfColorCalRGB (_gadc ,_feecd ,_ddcfb );
return _agdd ,nil ;};type pdfFontType0 struct{fontCommon ;_cdcc *_fe .PdfIndirectObject ;_agfa _cbg .TextEncoder ;Encoding _fe .PdfObject ;DescendantFont *PdfFont ;_dgccd *_gf .CMap ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_bfggc *PdfPageResources )SetShadingByName (keyName _fe .PdfObjectName ,shadingObj _fe .PdfObject )error {if _bfggc .Shading ==nil {_bfggc .Shading =_fe .MakeDict ();};_eebed ,_eecb :=_fe .GetDict (_bfggc .Shading );if !_eecb {return _fe .ErrTypeError ;
};_eebed .Set (keyName ,shadingObj );return nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fecg :=NewPdfAction ();_bc :=&PdfActionJavaScript {};_bc .PdfAction =_fecg ;_fecg .SetContext (_bc );return _bc ;};func (_fadbd *PdfWriter )writeDocumentVersion (){if _fadbd ._cgedg {_fadbd .writeString ("\u000a");
}else {_fadbd .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fadbd ._gdbffa .Major ,_fadbd ._gdbffa .Minor ));_fadbd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dbdeg *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dbdeg .Base .GetNumComponents ();_cafbcb :=int (vals [0])*N ;
if _cafbcb < 0||(_cafbcb +N -1)>=len (_dbdeg ._faeg ){_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cafbcb );return nil ,ErrColorOutOfRange ;};_fdgd :=_dbdeg ._faeg [_cafbcb :_cafbcb +N ];
var _ggebb []float64 ;for _ ,_gbbb :=range _fdgd {_ggebb =append (_ggebb ,float64 (_gbbb )/255.0);};_afge ,_bcff :=_dbdeg .Base .ColorFromFloats (_ggebb );if _bcff !=nil {return nil ,_bcff ;};return _afge ,nil ;};type pdfFontSimple struct{fontCommon ;_gcfc *_fe .PdfIndirectObject ;
_efacff map[_cbg .CharCode ]float64 ;_dcdgc _cbg .TextEncoder ;_egeg _cbg .TextEncoder ;_deacf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fe .PdfObject ;LastChar _fe .PdfObject ;Widths _fe .PdfObject ;Encoding _fe .PdfObject ;_cgfcc *_ag .RuneCharSafeMap ;};func (_aececc *PdfWriter )checkCrossReferenceStream ()bool {_cgbbg :=_aececc ._gdbffa .Major > 1||(_aececc ._gdbffa .Major ==1&&_aececc ._gdbffa .Minor > 4);
if _aececc ._eecdg !=nil {_cgbbg =*_aececc ._eecdg ;};return _cgbbg ;};

// SetMCID sets the MCID for the KValue.
func (_eccaec *KValue )SetMCID (mcid int ){_eccaec .Clear ();_eccaec ._cffeed =&mcid };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fe .PdfObjectName ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_cbabf *PdfInfo )ToPdfObject ()_fe .PdfObject {_bgee :=_fe .MakeDict ();_bgee .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_cbabf .Title );_bgee .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_cbabf .Author );_bgee .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_cbabf .Subject );
_bgee .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cbabf .Keywords );_bgee .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_cbabf .Creator );_bgee .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cbabf .Producer );
_bgee .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_cbabf .Trapped );if _cbabf .CreationDate !=nil {_bgee .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cbabf .CreationDate .ToPdfObject ());};if _cbabf .ModifiedDate !=nil {_bgee .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_cbabf .ModifiedDate .ToPdfObject ());
};for _ ,_dbga :=range _cbabf ._bdgg .Keys (){_bgee .SetIfNotNil (_dbga ,_cbabf ._bdgg .Get (_dbga ));};return _bgee ;};func (_badgc *Image )samplesAddPadding (_aebac []uint32 )[]uint32 {_cfea :=_af .BytesPerLine (int (_badgc .Width ),int (_badgc .BitsPerComponent ),_badgc .ColorComponents )*(8/int (_badgc .BitsPerComponent ));
_bfdaa :=_cfea *int (_badgc .Height );if len (_aebac )==_bfdaa {return _aebac ;};_agdde :=make ([]uint32 ,_bfdaa );_afad :=int (_badgc .Width )*_badgc .ColorComponents ;for _bdgff :=0;_bdgff < int (_badgc .Height );_bdgff ++{_gabcg :=_bdgff *int (_badgc .Width );
_dgag :=_bdgff *_cfea ;for _ccbab :=0;_ccbab < _afad ;_ccbab ++{_agdde [_dgag +_ccbab ]=_aebac [_gabcg +_ccbab ];};};return _agdde ;};

// Reset sets the multi font encoder to its initial state.
func (_cgfae *MultipleFontEncoder )Reset (){_cgfae .CurrentFont =_cgfae ._cgbc [0]};func _begdd (_gbbddg *[]*PdfField ,_fadc FieldFilterFunc ,_gcfed bool )[]*PdfField {if _gbbddg ==nil {return nil ;};_bgabf :=*_gbbddg ;if len (*_gbbddg )==0{return nil ;
};_cdbed :=_bgabf [:0];if _fadc ==nil {_fadc =func (*PdfField )bool {return true };};var _abfdf []*PdfField ;for _ ,_bffga :=range _bgabf {_bedg :=_fadc (_bffga );if _bedg {_abfdf =append (_abfdf ,_bffga );if len (_bffga .Kids )> 0{_abfdf =append (_abfdf ,_begdd (&_bffga .Kids ,_fadc ,_gcfed )...);
};};if !_gcfed ||!_bedg ||len (_bffga .Kids )> 0{_cdbed =append (_cdbed ,_bffga );};};*_gbbddg =_cdbed ;return _abfdf ;};func _gggbc (_bgdd _fe .PdfObject )(*PdfShading ,error ){_fdae :=&PdfShading {};var _cegee *_fe .PdfObjectDictionary ;if _bgefe ,_cbcbe :=_fe .GetIndirect (_bgdd );
_cbcbe {_fdae ._gbaea =_bgefe ;_dbgdd ,_adfaa :=_bgefe .PdfObject .(*_fe .PdfObjectDictionary );if !_adfaa {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fe .ErrTypeError ;};_cegee =_dbgdd ;}else if _aeffe ,_dfgge :=_fe .GetStream (_bgdd );_dfgge {_fdae ._gbaea =_aeffe ;_cegee =_aeffe .PdfObjectDictionary ;}else if _abdcf ,_geegf :=_fe .GetDict (_bgdd );_geegf {_fdae ._gbaea =_abdcf ;_cegee =_abdcf ;
}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_bgdd );return nil ,_fe .ErrTypeError ;};if _cegee ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bbc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bgdd =_cegee .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bgdd ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bgdd =_fe .TraceToDirectObject (_bgdd );_cefeg ,_ddbfd :=_bgdd .(*_fe .PdfObjectInteger );if !_ddbfd {_df .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bgdd );
return nil ,_fe .ErrTypeError ;};if *_cefeg < 1||*_cefeg > 7{_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_cefeg );
return nil ,_fe .ErrTypeError ;};_fdae .ShadingType =_cefeg ;_bgdd =_cegee .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _bgdd ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfcbe ,_dbgae :=NewPdfColorspaceFromPdfObject (_bgdd );if _dbgae !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dbgae );
return nil ,_dbgae ;};_fdae .ColorSpace =_dfcbe ;_bgdd =_cegee .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _bgdd !=nil {_bgdd =_fe .TraceToDirectObject (_bgdd );_gbgcd ,_fbecbd :=_bgdd .(*_fe .PdfObjectArray );if !_fbecbd {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bgdd );
return nil ,_fe .ErrTypeError ;};_fdae .Background =_gbgcd ;};_bgdd =_cegee .Get ("\u0042\u0042\u006f\u0078");if _bgdd !=nil {_bgdd =_fe .TraceToDirectObject (_bgdd );_geagbe ,_egbdfb :=_bgdd .(*_fe .PdfObjectArray );if !_egbdfb {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bgdd );
return nil ,_fe .ErrTypeError ;};_ebdc ,_fgfc :=NewPdfRectangle (*_geagbe );if _fgfc !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fgfc );return nil ,_fgfc ;};_fdae .BBox =_ebdc ;};_bgdd =_cegee .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _bgdd !=nil {_bgdd =_fe .TraceToDirectObject (_bgdd );_ebdd ,_abgd :=_bgdd .(*_fe .PdfObjectBool );if !_abgd {_df .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgdd );
return nil ,_fe .ErrTypeError ;};_fdae .AntiAlias =_ebdd ;};switch *_cefeg {case 1:_bgead ,_acfdg :=_cdcaf (_cegee );if _acfdg !=nil {return nil ,_acfdg ;};_bgead .PdfShading =_fdae ;_fdae ._bfgae =_bgead ;return _fdae ,nil ;case 2:_ffdfca ,_fgffb :=_ggfae (_cegee );
if _fgffb !=nil {return nil ,_fgffb ;};_ffdfca .PdfShading =_fdae ;_fdae ._bfgae =_ffdfca ;return _fdae ,nil ;case 3:_cegec ,_daab :=_ccgbg (_cegee );if _daab !=nil {return nil ,_daab ;};_cegec .PdfShading =_fdae ;_fdae ._bfgae =_cegec ;return _fdae ,nil ;
case 4:_cegb ,_cbbag :=_dbgc (_cegee );if _cbbag !=nil {return nil ,_cbbag ;};_cegb .PdfShading =_fdae ;_fdae ._bfgae =_cegb ;return _fdae ,nil ;case 5:_eadcce ,_gagga :=_gfbga (_cegee );if _gagga !=nil {return nil ,_gagga ;};_eadcce .PdfShading =_fdae ;
_fdae ._bfgae =_eadcce ;return _fdae ,nil ;case 6:_fbafd ,_ddefb :=_ebgfa (_cegee );if _ddefb !=nil {return nil ,_ddefb ;};_fbafd .PdfShading =_fdae ;_fdae ._bfgae =_fbafd ;return _fdae ,nil ;case 7:_dcffa ,_ggdgb :=_gceag (_cegee );if _ggdgb !=nil {return nil ,_ggdgb ;
};_dcffa .PdfShading =_fdae ;_fdae ._bfgae =_dcffa ;return _fdae ,nil ;};return nil ,_bbc .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gdda *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// L returns the value of the L component of the color.
func (_febd *PdfColorLab )L ()float64 {return _febd [0]};

// AddExtGState adds a graphics state to the XObject resources.
func (_aaecg *PdfPage )AddExtGState (name _fe .PdfObjectName ,egs *_fe .PdfObjectDictionary )error {if _aaecg .Resources ==nil {_aaecg .Resources =NewPdfPageResources ();};if _aaecg .Resources .ExtGState ==nil {_aaecg .Resources .ExtGState =_fe .MakeDict ();
};_ccbfd ,_cgade :=_fe .TraceToDirectObject (_aaecg .Resources .ExtGState ).(*_fe .PdfObjectDictionary );if !_cgade {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fe .TraceToDirectObject (_aaecg .Resources .ExtGState ));
return _bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccbfd .Set (name ,egs );return nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_gaecg :_fe .MakeDict ()};
};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// HasXObjectByName checks if has XObject resource by name.
func (_abdda *PdfPage )HasXObjectByName (name _fe .PdfObjectName )bool {_cbdgc ,_fabd :=_abdda .Resources .XObject .(*_fe .PdfObjectDictionary );if !_fabd {return false ;};if _ggdfa :=_cbdgc .Get (name );_ggdfa !=nil {return true ;};return false ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_gaecg *_fe .PdfObjectDictionary ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fbc :=NewPdfAnnotation ();_gbc :=&PdfAnnotationStrikeOut {};_gbc .PdfAnnotation =_fbc ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbc .SetContext (_gbc );return _gbc ;};func _dafg (_bbff _fe .PdfObject )(*PdfColorspaceDeviceN ,error ){_daedd :=NewPdfColorspaceDeviceN ();
if _dedf ,_afec :=_bbff .(*_fe .PdfIndirectObject );_afec {_daedd ._affd =_dedf ;};_bbff =_fe .TraceToDirectObject (_bbff );_dgbgc ,_bbgec :=_bbff .(*_fe .PdfObjectArray );if !_bbgec {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _dgbgc .Len ()!=4&&_dgbgc .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bbff =_dgbgc .Get (0);
_gbfc ,_bbgec :=_bbff .(*_fe .PdfObjectName );if !_bbgec {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gbfc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bbff =_dgbgc .Get (1);
_bbff =_fe .TraceToDirectObject (_bbff );_efde ,_bbgec :=_bbff .(*_fe .PdfObjectArray );if !_bbgec {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_daedd .ColorantNames =_efde ;_bbff =_dgbgc .Get (2);_gbbd ,_fdfad :=NewPdfColorspaceFromPdfObject (_bbff );if _fdfad !=nil {return nil ,_fdfad ;};_daedd .AlternateSpace =_gbbd ;_eaabb ,_fdfad :=_cebb (_dgbgc .Get (3));if _fdfad !=nil {return nil ,_fdfad ;
};_daedd .TintTransform =_eaabb ;if _dgbgc .Len ()==5{_aecb ,_befbb :=_eaff (_dgbgc .Get (4));if _befbb !=nil {return nil ,_befbb ;};_daedd .Attributes =_aecb ;};return _daedd ,nil ;};func _eefge (_bace string )(string ,error ){var _fdafa _ee .Buffer ;
_fdafa .WriteString (_bace );_bddeec :=make ([]byte ,8+16);_ddedc :=_abb .Now ().UTC ().UnixNano ();_cb .BigEndian .PutUint64 (_bddeec ,uint64 (_ddedc ));_ ,_acbed :=_fb .Read (_bddeec [8:]);if _acbed !=nil {return "",_acbed ;};_fdafa .WriteString (_de .EncodeToString (_bddeec ));
return _fdafa .String (),nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_aeacd pdfFont };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_cbbd *PdfFont )CharcodesToUnicode (charcodes []_cbg .CharCode )[]rune {_cbcg ,_ ,_ :=_cbbd .CharcodesToUnicodeWithStats (charcodes );return _cbcg ;};func (_fgdf *PdfWriter )setCatalogVersion (){_fgdf ._efaac .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fe .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_fgdf ._gdbffa .Major ,_fgdf ._gdbffa .Minor )));
};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_bdecf *PdfPageResources )SetXObjectFormByName (keyName _fe .PdfObjectName ,xform *XObjectForm )error {_fcaac :=xform .ToPdfObject ().(*_fe .PdfObjectStream );_bdacb :=_bdecf .SetXObjectByName (keyName ,_fcaac );return _bdacb ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_efcc *_fe .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_feffg *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_cgbgb *pdfFontSimple )getFontEncoding ()(_fegac string ,_ccebf map[_cbg .CharCode ]_cbg .GlyphName ,_cffdg error ){_fegac ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _ddbb ,_cgdcb :=_cffe [_cgbgb ._cecc ];_cgdcb {_fegac =_ddbb ;}else if _cgbgb .fontFlags ()&_fccg !=0{for _bfacd ,_gfbfd :=range _cffe {if _bf .Contains (_cgbgb ._cecc ,_bfacd ){_fegac =_gfbfd ;break ;};};};if _cgbgb .Encoding ==nil {return _fegac ,nil ,nil ;
};switch _bacb :=_cgbgb .Encoding .(type ){case *_fe .PdfObjectName :return string (*_bacb ),nil ,nil ;case *_fe .PdfObjectDictionary :_agcca ,_gebd :=_fe .GetName (_bacb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gebd {_fegac =_agcca .String ();
};if _aebf :=_bacb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_aebf !=nil {_bdgc ,_cccdf :=_fe .GetArray (_aebf );if !_cccdf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bacb ,_bacb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fe .ErrTypeError ;};_ccebf ,_cffdg =_cbg .FromFontDifferences (_bdgc );};return _fegac ,_ccebf ,_cffdg ;default:_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cgbgb .Encoding ,_cgbgb .Encoding );
return "",nil ,_fe .ErrTypeError ;};};

// SetDirection sets the value of the direction.
func (_cbaag *ViewerPreferences )SetDirection (direction Direction ){_cbaag ._cebcg =direction };

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fcfd *Image )ColorAt (x ,y int )(_c .Color ,error ){_geeceb :=_af .BytesPerLine (int (_fcfd .Width ),int (_fcfd .BitsPerComponent ),_fcfd .ColorComponents );switch _fcfd .ColorComponents {case 1:return _af .ColorAtGrayscale (x ,y ,int (_fcfd .BitsPerComponent ),_geeceb ,_fcfd .Data ,_fcfd ._cccfg );
case 3:return _af .ColorAtNRGBA (x ,y ,int (_fcfd .Width ),_geeceb ,int (_fcfd .BitsPerComponent ),_fcfd .Data ,_fcfd ._dbgaf ,_fcfd ._cccfg );case 4:return _af .ColorAtCMYK (x ,y ,int (_fcfd .Width ),_fcfd .Data ,_fcfd ._cccfg );};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcfd .ColorComponents ,_fcfd .BitsPerComponent );
return nil ,_bbc .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fe .PdfObject ;Name _fe .PdfObject ;State _fe .PdfObject ;StateModel _fe .PdfObject ;};

// AddWatermarkText adds a text watermark to the page.
func (_fbebf *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _bbc .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _bbc .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_c .Black ;};_fdeeb ,_edebg :=_fbebf .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _edebg !=nil {return _edebg ;
};_bbbgg ,_ ,_edebg :=_ab .Decode (_ee .NewReader (_fdeeb ));if _edebg !=nil {return _edebg ;};_bead ,_edebg :=ImageHandling .NewImageFromGoImage (_bbbgg );if _edebg !=nil {return _edebg ;};_dffa ,_edebg :=NewXObjectImageFromImage (_bead ,nil ,_fe .NewFlateEncoder ());
if _edebg !=nil {return _edebg ;};_gedeg :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _fbebf .AddWatermarkImage (_dffa ,_gedeg );};

// GetBorderWidth returns the border style's width.
func (_aabf *PdfBorderStyle )GetBorderWidth ()float64 {if _aabf .W ==nil {return 1;};return *_aabf .W ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dadc :=NewPdfAnnotation ();_aag :=&PdfAnnotationStamp {};_aag .PdfAnnotation =_dadc ;_aag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dadc .SetContext (_aag );return _aag ;};func _cfgaa (_cgbbb *_af .ImageBase )(_fbffgf Image ){_fbffgf .Width =int64 (_cgbbb .Width );
_fbffgf .Height =int64 (_cgbbb .Height );_fbffgf .BitsPerComponent =int64 (_cgbbb .BitsPerComponent );_fbffgf .ColorComponents =_cgbbb .ColorComponents ;_fbffgf .Data =_cgbbb .Data ;_fbffgf ._cccfg =_cgbbb .Decode ;_fbffgf ._dbgaf =_cgbbb .Alpha ;return _fbffgf ;
};func (_eab *PdfReader )newPdfActionGotoRFromDict (_ebb *_fe .PdfObjectDictionary )(*PdfActionGoToR ,error ){_agg ,_ddc :=_cdb (_ebb .Get ("\u0046"));if _ddc !=nil {return nil ,_ddc ;};return &PdfActionGoToR {D :_ebb .Get ("\u0044"),NewWindow :_ebb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_agg },nil ;
};func _baaf (_gebf *PdfPage )map[_fe .PdfObjectName ]_fe .PdfObject {_dcbec :=make (map[_fe .PdfObjectName ]_fe .PdfObject );if _gebf .Resources ==nil {return _dcbec ;};if _gebf .Resources .Font !=nil {if _aaae ,_dgece :=_fe .GetDict (_gebf .Resources .Font );
_dgece {for _ ,_dbcg :=range _aaae .Keys (){_dcbec [_dbcg ]=_aaae .Get (_dbcg );};};};if _gebf .Resources .ExtGState !=nil {if _aaaf ,_aefc :=_fe .GetDict (_gebf .Resources .ExtGState );_aefc {for _ ,_ffbaf :=range _aaaf .Keys (){_dcbec [_ffbaf ]=_aaaf .Get (_ffbaf );
};};};if _gebf .Resources .XObject !=nil {if _dcffe ,_fgfb :=_fe .GetDict (_gebf .Resources .XObject );_fgfb {for _ ,_bbef :=range _dcffe .Keys (){_dcbec [_bbef ]=_dcffe .Get (_bbef );};};};if _gebf .Resources .Pattern !=nil {if _ddcd ,_fgfe :=_fe .GetDict (_gebf .Resources .Pattern );
_fgfe {for _ ,_ebag :=range _ddcd .Keys (){_dcbec [_ebag ]=_ddcd .Get (_ebag );};};};if _gebf .Resources .Shading !=nil {if _dcda ,_face :=_fe .GetDict (_gebf .Resources .Shading );_face {for _ ,_abbcaa :=range _dcda .Keys (){_dcbec [_abbcaa ]=_dcda .Get (_abbcaa );
};};};if _gebf .Resources .ProcSet !=nil {if _dgfb ,_cbdb :=_fe .GetDict (_gebf .Resources .ProcSet );_cbdb {for _ ,_acdg :=range _dgfb .Keys (){_dcbec [_acdg ]=_dgfb .Get (_acdg );};};};if _gebf .Resources .Properties !=nil {if _egcd ,_bbcb :=_fe .GetDict (_gebf .Resources .Properties );
_bbcb {for _ ,_fggg :=range _egcd .Keys (){_dcbec [_fggg ]=_egcd .Get (_fggg );};};};return _dcbec ;};

// SetContentStream sets the pattern cell's content stream.
func (_geffb *PdfTilingPattern )SetContentStream (content []byte ,encoder _fe .StreamEncoder )error {_dcccg ,_bcada :=_geffb ._aegcc .(*_fe .PdfObjectStream );if !_bcada {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geffb ._aegcc );
return _fe .ErrTypeError ;};if encoder ==nil {encoder =_fe .NewRawEncoder ();};_baffe :=_dcccg .PdfObjectDictionary ;_cfegf :=encoder .MakeStreamDict ();_baffe .Merge (_cfegf );_daebg ,_egdbf :=encoder .EncodeBytes (content );if _egdbf !=nil {return _egdbf ;
};_baffe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_daebg ))));_dcccg .Stream =_daebg ;return nil ;};func (_gaadd *LTV )generateVRIKey (_ccfd *PdfSignature )(string ,error ){_cegae ,_bbfg :=_bebdb (_ccfd .Contents .Bytes ());
if _bbfg !=nil {return "",_bbfg ;};return _bf .ToUpper (_de .EncodeToString (_cegae )),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddea *PdfShadingType7 )ToPdfObject ()_fe .PdfObject {_ddea .PdfShading .ToPdfObject ();_cbagd ,_gfcbfc :=_ddea .getShadingDict ();if _gfcbfc !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ddea .BitsPerCoordinate !=nil {_cbagd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ddea .BitsPerCoordinate );};if _ddea .BitsPerComponent !=nil {_cbagd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ddea .BitsPerComponent );
};if _ddea .BitsPerFlag !=nil {_cbagd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ddea .BitsPerFlag );};if _ddea .Decode !=nil {_cbagd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ddea .Decode );};if _ddea .Function !=nil {if len (_ddea .Function )==1{_cbagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddea .Function [0].ToPdfObject ());
}else {_geeaf :=_fe .MakeArray ();for _ ,_gbfb :=range _ddea .Function {_geeaf .Append (_gbfb .ToPdfObject ());};_cbagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_geeaf );};};return _ddea ._gbaea ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ca :=NewPdfAction ();_age :=&PdfActionLaunch {};_age .PdfAction =_ca ;_ca .SetContext (_age );return _age ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ddfdf :=&PdfShadingType3 {};_ddfdf .PdfShading =&PdfShading {};_ddfdf .PdfShading ._gbaea =_fe .MakeIndirectObject (_fe .MakeDict ());_ddfdf .PdfShading ._bfgae =_ddfdf ;return _ddfdf ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gbffb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gbffb ._fagcf =optimizer };

// ToPdfObject implements interface PdfModel.
func (_befc *PdfActionGoToR )ToPdfObject ()_fe .PdfObject {_befc .PdfAction .ToPdfObject ();_cge :=_befc ._ea ;_eee :=_cge .PdfObject .(*_fe .PdfObjectDictionary );_eee .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoToR )));if _befc .F !=nil {_eee .Set ("\u0046",_befc .F .ToPdfObject ());
};_eee .SetIfNotNil ("\u0044",_befc .D );_eee .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_befc .NewWindow );return _cge ;};func (_bcfbf *PdfAppender )updateObjectsDeep (_bdaba _fe .PdfObject ,_ecfc map[_fe .PdfObject ]struct{}){if _ecfc ==nil {_ecfc =map[_fe .PdfObject ]struct{}{};
};if _ ,_eabe :=_ecfc [_bdaba ];_eabe ||_bdaba ==nil {return ;};_ecfc [_bdaba ]=struct{}{};_efba :=_fe .ResolveReferencesDeep (_bdaba ,_bcfbf ._gdcb );if _efba !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efba );};switch _fbda :=_bdaba .(type ){case *_fe .PdfIndirectObject :switch {case _fbda .GetParser ()==_bcfbf ._cca ._gabca :return ;
case _fbda .GetParser ()==_bcfbf .Reader ._gabca :_dadfg ,_ :=_bcfbf ._cca .GetIndirectObjectByNumber (int (_fbda .ObjectNumber ));_bdgac ,_egbd :=_dadfg .(*_fe .PdfIndirectObject );if _egbd &&_bdgac !=nil {if _bdgac .PdfObject !=_fbda .PdfObject &&_bdgac .PdfObject .WriteString ()!=_fbda .PdfObject .WriteString (){if _bf .Contains (_fbda .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_bf .Contains (_fbda .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_bcfbf .addNewObject (_bdaba );_bcfbf ._cdbb [_bdaba ]=_fbda .ObjectNumber ;};};default:_bcfbf .addNewObject (_bdaba );};_bcfbf .updateObjectsDeep (_fbda .PdfObject ,_ecfc );case *_fe .PdfObjectArray :for _ ,_bcb :=range _fbda .Elements (){_bcfbf .updateObjectsDeep (_bcb ,_ecfc );
};case *_fe .PdfObjectDictionary :for _ ,_fagd :=range _fbda .Keys (){_bcfbf .updateObjectsDeep (_fbda .Get (_fagd ),_ecfc );};case *_fe .PdfObjectStreams :if _fbda .GetParser ()!=_bcfbf ._cca ._gabca {for _ ,_faag :=range _fbda .Elements (){_bcfbf .updateObjectsDeep (_faag ,_ecfc );
};};case *_fe .PdfObjectStream :switch {case _fbda .GetParser ()==_bcfbf ._cca ._gabca :return ;case _fbda .GetParser ()==_bcfbf .Reader ._gabca :if _gbgg ,_baagd :=_bcfbf ._cca ._gabca .LookupByReference (_fbda .PdfObjectReference );_baagd ==nil {var _cbba bool ;
if _gee ,_fefgg :=_fe .GetStream (_gbgg );_fefgg &&_ee .Equal (_gee .Stream ,_fbda .Stream ){_cbba =true ;};if _eeec ,_gagb :=_fe .GetDict (_gbgg );_cbba &&_gagb {_cbba =_eeec .WriteString ()==_fbda .PdfObjectDictionary .WriteString ();};if _cbba {return ;
};};if _fbda .ObjectNumber !=0{_bcfbf ._cdbb [_bdaba ]=_fbda .ObjectNumber ;};default:if _ ,_ecac :=_bcfbf ._dgg [_bdaba ];!_ecac {_bcfbf .addNewObject (_bdaba );};};_bcfbf .updateObjectsDeep (_fbda .PdfObjectDictionary ,_ecfc );};};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dcega *PdfReader )PageFromIndirectObject (ind *_fe .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dcega .PageList )!=len (_dcega ._bbfga ){return nil ,0,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _gdfea ,_fcedc :=range _dcega ._bbfga {if _fcedc ==ind {return _dcega .PageList [_gdfea ],_gdfea +1,nil ;};};return nil ,0,_bbc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _agaae (_cgccg *_fe .PdfObjectArray )(float64 ,error ){_fdgbg ,_cebfdc :=_cgccg .ToFloat64Array ();
if _cebfdc !=nil {_df .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cgccg ,_cebfdc );};switch len (_fdgbg ){case 1:return _fdgbg [0],nil ;
case 3:_cgacae :=PdfColorspaceDeviceRGB {};_fbbba ,_egec :=_cgacae .ColorFromFloats (_fdgbg );if _egec !=nil {return 0.0,_egec ;};return _fbbba .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_edad :=PdfColorspaceDeviceCMYK {};_degcb ,_adae :=_edad .ColorFromFloats (_fdgbg );
if _adae !=nil {return 0.0,_adae ;};_efcgg ,_adae :=_edad .ColorToRGB (_degcb .(*PdfColorDeviceCMYK ));if _adae !=nil {return 0.0,_adae ;};return _efcgg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cebfdc =_bbc .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_df .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cgccg ,_cebfdc );return 0.0,_cebfdc ;};func (_agbga *PdfReader )newPdfAnnotationSquareFromDict (_fcea *_fe .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bfdca :=PdfAnnotationSquare {};
_bbf ,_bae :=_agbga .newPdfAnnotationMarkupFromDict (_fcea );if _bae !=nil {return nil ,_bae ;};_bfdca .PdfAnnotationMarkup =_bbf ;_bfdca .BS =_fcea .Get ("\u0042\u0053");_bfdca .IC =_fcea .Get ("\u0049\u0043");_bfdca .BE =_fcea .Get ("\u0042\u0045");_bfdca .RD =_fcea .Get ("\u0052\u0044");
return &_bfdca ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eebd ,_gbdc :=_ag .NewStdFontByName (HelveticaName );if !_gbdc {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_afde :=_faaf (_eebd );return &PdfFont {_aeacd :&_afde };};func (_gfdge *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gfdge ._gdgcc ==nil &&_gfdge .DescendantFont !=nil {return _gfdge .DescendantFont .FontDescriptor ();};return _gfdge ._gdgcc ;
};func (_fdeb *PdfWriter )writeXRefStreams (_fgdac int ,_cdcbe int64 )error {_eecde :=_fgdac +1;_fdeb ._bdaaa [_eecde ]=crossReference {Type :1,ObjectNumber :_eecde ,Offset :_cdcbe };_eaefbg :=_ee .NewBuffer (nil );_daebd :=_fe .MakeArray ();for _bebagd :=0;
_bebagd <=_fgdac ;{for ;_bebagd <=_fgdac ;_bebagd ++{_dbeaf ,_geedfg :=_fdeb ._bdaaa [_bebagd ];if _geedfg &&(!_fdeb ._cgedg ||_fdeb ._cgedg &&(_dbeaf .Type ==1&&_dbeaf .Offset >=_fdeb ._cddfd ||_dbeaf .Type ==0)){break ;};};var _bdbae int ;for _bdbae =_bebagd +1;
_bdbae <=_fgdac ;_bdbae ++{_fbacb ,_eaddg :=_fdeb ._bdaaa [_bdbae ];if _eaddg &&(!_fdeb ._cgedg ||_fdeb ._cgedg &&(_fbacb .Type ==1&&_fbacb .Offset > _fdeb ._cddfd )){continue ;};break ;};_daebd .Append (_fe .MakeInteger (int64 (_bebagd )),_fe .MakeInteger (int64 (_bdbae -_bebagd )));
for _fbcge :=_bebagd ;_fbcge < _bdbae ;_fbcge ++{_daad :=_fdeb ._bdaaa [_fbcge ];switch _daad .Type {case 0:_cb .Write (_eaefbg ,_cb .BigEndian ,byte (0));_cb .Write (_eaefbg ,_cb .BigEndian ,uint32 (0));_cb .Write (_eaefbg ,_cb .BigEndian ,uint16 (0xFFFF));
case 1:_cb .Write (_eaefbg ,_cb .BigEndian ,byte (1));_cb .Write (_eaefbg ,_cb .BigEndian ,uint32 (_daad .Offset ));_cb .Write (_eaefbg ,_cb .BigEndian ,uint16 (_daad .Generation ));case 2:_cb .Write (_eaefbg ,_cb .BigEndian ,byte (2));_cb .Write (_eaefbg ,_cb .BigEndian ,uint32 (_daad .ObjectNumber ));
_cb .Write (_eaefbg ,_cb .BigEndian ,uint16 (_daad .Index ));};};_bebagd =_bdbae +1;};_fddfb ,_cgbaa :=_fe .MakeStream (_eaefbg .Bytes (),_fe .NewFlateEncoder ());if _cgbaa !=nil {return _cgbaa ;};_fddfb .ObjectNumber =int64 (_eecde );_fddfb .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058\u0052\u0065\u0066"));
_fddfb .PdfObjectDictionary .Set ("\u0057",_fe .MakeArray (_fe .MakeInteger (1),_fe .MakeInteger (4),_fe .MakeInteger (2)));_fddfb .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_daebd );_fddfb .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fe .MakeInteger (int64 (_eecde )));
_fddfb .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_fdeb ._fefff );_fddfb .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_fdeb ._dabeb );if _fdeb ._cgedg &&_fdeb ._bfcedc > 0{_fddfb .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fe .MakeInteger (_fdeb ._bfcedc ));
};if _fdeb ._aebgf !=nil {_fddfb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fdeb ._bceed );};if _fdeb ._gbgde ==nil &&_fdeb ._gfcfeg !=""&&_fdeb ._eafad !=""{_fdeb ._gbgde =_fe .MakeArray (_fe .MakeHexString (_fdeb ._gfcfeg ),_fe .MakeHexString (_fdeb ._eafad ));
};if _fdeb ._gbgde !=nil {_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fdeb ._gbgde );_fddfb .Set ("\u0049\u0044",_fdeb ._gbgde );};_fdeb .writeObject (int (_fddfb .ObjectNumber ),_fddfb );return nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cdbgef :=&PdfPageResources {};_cdbgef ._fdcdc =_fe .MakeDict ();return _cdbgef ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eefbd pdfFontType0 )GetCharMetrics (code _cbg .CharCode )(_ag .CharMetrics ,bool ){if _eefbd .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eefbd );
return _ag .CharMetrics {},false ;};return _eefbd .DescendantFont .GetCharMetrics (code );};

// ToPdfObject converts the K dictionary to a PDF object.
func (_fgffa *KValue )ToPdfObject ()_fe .PdfObject {if _fgffa ._ebdgf !=nil {return _fe .MakeIndirectObject (_fgffa ._ebdgf .ToPdfObject ());};if _fgffa ._ebfce !=nil {return _fgffa ._ebfce ;};if _fgffa ._cffeed !=nil {return _fe .MakeInteger (int64 (*_fgffa ._cffeed ));
};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ffdf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fccb ,_ggee :=_fe .GetNumbersAsFloat (objects );
if _ggee !=nil {return nil ,_ggee ;};return _ffdf .ColorFromFloats (_fccb );};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";StructureTypeSection ="\u0053\u0065\u0063\u0074";
StructureTypeDivision ="\u0044\u0069\u0076";StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";StructureTypeTOCI ="\u0054\u004f\u0043\u0049";
StructureTypeIndex ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);func (_bcgdg *PdfWriter )updateObjectNumbers (){_adged :=_bcgdg .ObjNumOffset ;
_aaaa :=0;for _ ,_gfcfa :=range _bcgdg ._dbbcd {_gbdd :=int64 (_aaaa +1+_adged );_beeef :=true ;if _bcgdg ._cgedg {if _gdbcb ,_bfebf :=_bcgdg ._aeffda [_gfcfa ];_bfebf {_gbdd =_gdbcb ;_beeef =false ;};};switch _fedaf :=_gfcfa .(type ){case *_fe .PdfIndirectObject :_fedaf .ObjectNumber =_gbdd ;
_fedaf .GenerationNumber =0;case *_fe .PdfObjectStream :_fedaf .ObjectNumber =_gbdd ;_fedaf .GenerationNumber =0;case *_fe .PdfObjectStreams :_fedaf .ObjectNumber =_gbdd ;_fedaf .GenerationNumber =0;case *_fe .PdfObjectReference :_fedaf .ObjectNumber =_gbdd ;
_fedaf .GenerationNumber =0;case *_fe .PdfObjectDictionary ,*_fe .PdfObjectString :default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_fedaf );
continue ;};if _beeef {_aaaa ++;};};_afcca :=func (_eeaca _fe .PdfObject )int64 {switch _bgcac :=_eeaca .(type ){case *_fe .PdfIndirectObject :return _bgcac .ObjectNumber ;case *_fe .PdfObjectStream :return _bgcac .ObjectNumber ;case *_fe .PdfObjectStreams :return _bgcac .ObjectNumber ;
case *_fe .PdfObjectReference :return _bgcac .ObjectNumber ;};return 0;};_gg .SliceStable (_bcgdg ._dbbcd ,func (_cfbcbd ,_gbgag int )bool {return _afcca (_bcgdg ._dbbcd [_cfbcbd ])< _afcca (_bcgdg ._dbbcd [_gbgag ])});};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_fbae *PdfColorspaceICCBased )GetContainingPdfObject ()_fe .PdfObject {return _fbae ._gbfg };

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_cgbc []*PdfFont ;CurrentFont *PdfFont ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fe .PdfIndirectObject )*PdfOutlineItem {_ecfgg :=PdfOutlineItem {};_ecfgg ._dedcd =&_ecfgg ;_ecfgg .Title =_fe .MakeString (title );_dagbd :=_fe .MakeArray ();_dagbd .Append (page );_dagbd .Append (_fe .MakeName ("\u0046\u0069\u0074"));
_ecfgg .Dest =_dagbd ;return &_ecfgg ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fe .PdfObject ;Dest _fe .PdfObject ;H _fe .PdfObject ;PA _fe .PdfObject ;QuadPoints _fe .PdfObject ;BS _fe .PdfObject ;_fdfd *PdfAction ;_ebdb *PdfReader ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_agbd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cegg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gcbc :=_dfc .NewReader (img .getBase ());_cege :=_af .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cegg .AlternateSpace .GetNumComponents (),nil ,img ._dbgaf ,nil );
_gcaa :=_dfc .NewWriter (_cege );_feeg :=_dd .Pow (2,float64 (img .BitsPerComponent ))-1;_df .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_df .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cegg .TintTransform );_fdbga :=_cegg .AlternateSpace .DecodeArray ();var (_aegf uint32 ;_gdcea error ;);for {_aegf ,_gdcea =_gcbc .ReadSample ();
if _gdcea ==_gd .EOF {break ;};if _gdcea !=nil {return img ,_gdcea ;};_gbcd :=float64 (_aegf )/_feeg ;_fgaa ,_gdee :=_cegg .TintTransform .Evaluate ([]float64 {_gbcd });if _gdee !=nil {return img ,_gdee ;};for _eade ,_bcfdf :=range _fgaa {_cggb :=_af .LinearInterpolate (_bcfdf ,_fdbga [_eade *2],_fdbga [_eade *2+1],0,1);
if _gdee =_gcaa .WriteSample (uint32 (_cggb *_feeg ));_gdee !=nil {return img ,_gdee ;};};};return _cegg .AlternateSpace .ImageToRGB (_cfgaa (&_cege ));};

// AddKChild adds a child K dictionary object.
func (_acega *KDict )AddKChild (kChild *KDict ){_acega ._fdgad =append (_acega ._fdgad ,&KValue {_ebdgf :kChild });};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_eefc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};

// ImageToRGB convert an indexed image to RGB.
func (_ebcda *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ebcda .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_cffg :=_af .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._dbgaf ,img ._cccfg );_ffecdc :=_dfc .NewReader (img .getBase ());_adac :=_dfc .NewWriter (_cffg );var (_cacdd uint32 ;_fbeb int ;_acdd error ;);for {_cacdd ,_acdd =_ffecdc .ReadSample ();
if _acdd ==_gd .EOF {break ;}else if _acdd !=nil {return img ,_acdd ;};_fbeb =int (_cacdd );_df .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fbeb ,N ,len (_ebcda ._faeg ));
if (_fbeb +1)*N > len (_ebcda ._faeg ){_fbeb =len (_ebcda ._faeg )/N -1;_df .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fbeb );if _fbeb < 0{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _eggf :=_fbeb *N ;_eggf < (_fbeb +1)*N ;_eggf ++{if _acdd =_adac .WriteSample (uint32 (_ebcda ._faeg [_eggf ]));_acdd !=nil {return img ,_acdd ;};};};return _ebcda .Base .ImageToRGB (_cfgaa (&_cffg ));};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_gaecg :_fe .MakeDict (),ColorComponents :colorComponents };
};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_adcg *PdfField )IsTerminal ()bool {return len (_adcg .Kids )==0};

// PrintScaling returns the value of the printScaling.
func (_aaded *ViewerPreferences )PrintScaling ()PrintScaling {return _aaded ._aagge };

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gfdg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gfdg .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fe .PdfObject ;Flags _fe .PdfObject ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cbg .SimpleEncoder ,error ){_cbef ,_bdcf :=_efbg (basefont );if _bdcf !=nil {return nil ,nil ,_bdcf ;};_gbbbe ,_caafa :=_cbef .Encoder ().(_cbg .SimpleEncoder );
if !_caafa {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cbef .Encoder ());
};_gfde :=make (map[rune ]_cbg .GlyphName );for _cadce :=range alphabet {if _ ,_ccbc :=_gbbbe .RuneToCharcode (_cadce );!_ccbc {_ ,_gcda :=_cbef ._cgfcc .Read (_cadce );if !_gcda {_df .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_cadce ,_cadce );
continue ;};_bcea ,_gcda :=_cbg .RuneToGlyph (_cadce );if !_gcda {_df .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_cadce ,_cadce );continue ;};if len (_gfde )>=255{return nil ,nil ,_bbc .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gfde [_cadce ]=_bcea ;};};var (_dgbca []_cbg .CharCode ;_eabgf []_cbg .CharCode ;);for _fbfbf :=_cbg .CharCode (1);_fbfbf <=0xff;_fbfbf ++{_gacd ,_aagcd :=_gbbbe .CharcodeToRune (_fbfbf );if !_aagcd {_dgbca =append (_dgbca ,_fbfbf );continue ;};if _ ,_aagcd =alphabet [_gacd ];
!_aagcd {_eabgf =append (_eabgf ,_fbfbf );};};_cdec :=append (_dgbca ,_eabgf ...);if len (_cdec )< len (_gfde ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gfde ),len (_cdec ));
};_dffeb :=make ([]rune ,0,len (_gfde ));for _gdgab :=range _gfde {_dffeb =append (_dffeb ,_gdgab );};_gg .Slice (_dffeb ,func (_beeg ,_adfg int )bool {return _dffeb [_beeg ]< _dffeb [_adfg ]});_gcad :=make (map[_cbg .CharCode ]_cbg .GlyphName ,len (_dffeb ));
for _ ,_acbg :=range _dffeb {_cdfdg :=_cdec [0];_cdec =_cdec [1:];_gcad [_cdfdg ]=_gfde [_acbg ];};_gbbbe =_cbg .ApplyDifferences (_gbbbe ,_gcad );_cbef .SetEncoder (_gbbbe );return &PdfFont {_aeacd :&_cbef },_gbbbe ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_agacc *PdfFieldButton )ToPdfObject ()_fe .PdfObject {_agacc .PdfField .ToPdfObject ();_faba :=_agacc ._ddfe ;_efbe :=_faba .PdfObject .(*_fe .PdfObjectDictionary );_efbe .Set ("\u0046\u0054",_fe .MakeName ("\u0042\u0074\u006e"));if _agacc .Opt !=nil {_efbe .Set ("\u004f\u0070\u0074",_agacc .Opt );
};return _faba ;};

// SetPage directly sets the page object.
func (_gdcgb *KDict )SetPage (page *_fe .PdfIndirectObject ){_gdcgb .Pg =page };const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);func (_cdafg *PdfWriter )setDocumentIDs (_bbae ,_fcfacb string ){_cdafg ._gbgde =_fe .MakeArray (_fe .MakeHexString (_bbae ),_fe .MakeHexString (_fcfacb ));};func _eceb (_bdaf *_fe .PdfObjectDictionary ,_fdaf *fontCommon )(*pdfCIDFontType2 ,error ){if _fdaf ._cdgfg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fdaf );
return nil ,_fe .ErrRangeError ;};_ececd :=_eagg (_fdaf );_eeaba ,_bcag :=_fe .GetDict (_bdaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bcag {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fdaf );
return nil ,ErrRequiredAttributeMissing ;};_ececd .CIDSystemInfo =_eeaba ;_ececd .DW =_bdaf .Get ("\u0044\u0057");_ececd .W =_bdaf .Get ("\u0057");_ececd .DW2 =_bdaf .Get ("\u0044\u0057\u0032");_ececd .W2 =_bdaf .Get ("\u0057\u0032");_ececd .CIDToGIDMap =_bdaf .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_ececd ._efadd =1000.0;if _gdbf ,_ggefc :=_fe .GetNumberAsFloat (_ececd .DW );_ggefc ==nil {_ececd ._efadd =_gdbf ;};_egbaa ,_dggdb :=_bbbbe (_ececd .W );if _dggdb !=nil {return nil ,_dggdb ;};if _egbaa ==nil {_egbaa =map[_cbg .CharCode ]float64 {};};_ececd ._edgaa =_egbaa ;
return _ececd ,nil ;};func (_gggc *pdfFontSimple )baseFields ()*fontCommon {return &_gggc .fontCommon };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aceb *PdfShading )ToPdfObject ()_fe .PdfObject {_cffaa :=_aceb ._gbaea ;_adedc ,_ffeeg :=_aceb .getShadingDict ();if _ffeeg !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aceb .ShadingType !=nil {_adedc .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_aceb .ShadingType );};if _aceb .ColorSpace !=nil {_adedc .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aceb .ColorSpace .ToPdfObject ());
};if _aceb .Background !=nil {_adedc .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_aceb .Background );};if _aceb .BBox !=nil {_adedc .Set ("\u0042\u0042\u006f\u0078",_aceb .BBox .ToPdfObject ());};if _aceb .AntiAlias !=nil {_adedc .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_aceb .AntiAlias );
};return _cffaa ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _abb .Time )(PdfDate ,error ){_gdffg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gfcbg ,_ :=_bb .ParseInt (_gdffg [1:3],10,32);_eccffd ,_ :=_bb .ParseInt (_gdffg [4:6],10,32);return PdfDate {_aggdgc :int64 (timeObj .Year ()),_edage :int64 (timeObj .Month ()),_adadfg :int64 (timeObj .Day ()),_dbbce :int64 (timeObj .Hour ()),_abebf :int64 (timeObj .Minute ()),_egagcg :int64 (timeObj .Second ()),_caeead :_gdffg [0],_aaag :_gfcbg ,_gcgge :_eccffd },nil ;
};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_acab *PdfColorspaceCalGray )ToPdfObject ()_fe .PdfObject {_dgbe :=&_fe .PdfObjectArray {};_dgbe .Append (_fe .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_ddec :=_fe .MakeDict ();if _acab .WhitePoint !=nil {_ddec .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fe .MakeArray (_fe .MakeFloat (_acab .WhitePoint [0]),_fe .MakeFloat (_acab .WhitePoint [1]),_fe .MakeFloat (_acab .WhitePoint [2])));
}else {_df .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _acab .BlackPoint !=nil {_ddec .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fe .MakeArray (_fe .MakeFloat (_acab .BlackPoint [0]),_fe .MakeFloat (_acab .BlackPoint [1]),_fe .MakeFloat (_acab .BlackPoint [2])));
};_ddec .Set ("\u0047\u0061\u006dm\u0061",_fe .MakeFloat (_acab .Gamma ));_dgbe .Append (_ddec );if _acab ._efcc !=nil {_acab ._efcc .PdfObject =_dgbe ;return _acab ._efcc ;};return _dgbe ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_efdg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_bbc .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_adaf ,_dbfa :=_af .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbgaf ,img ._cccfg );if _dbfa !=nil {return img ,_dbfa ;};_cegf ,_dbfa :=_af .GrayConverter .Convert (_adaf );if _dbfa !=nil {return img ,_dbfa ;
};return _cfgaa (_cegf .Base ()),nil ;};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_fe .MakeDict (),ParentTreeNextKey :0};};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _gd .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _eggdg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _faded (rs ,opts ,true ,_eggdg );
};func _gfbga (_gfbab *_fe .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ebdbc :=PdfShadingType5 {};_feadfa :=_gfbab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _feadfa ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bggfed ,_dfdc :=_feadfa .(*_fe .PdfObjectInteger );if !_dfdc {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_feadfa );
return nil ,_fe .ErrTypeError ;};_ebdbc .BitsPerCoordinate =_bggfed ;_feadfa =_gfbab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _feadfa ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bggfed ,_dfdc =_feadfa .(*_fe .PdfObjectInteger );if !_dfdc {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_feadfa );
return nil ,_fe .ErrTypeError ;};_ebdbc .BitsPerComponent =_bggfed ;_feadfa =_gfbab .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _feadfa ==nil {_df .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_bggfed ,_dfdc =_feadfa .(*_fe .PdfObjectInteger );if !_dfdc {_df .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_feadfa );
return nil ,_fe .ErrTypeError ;};_ebdbc .VerticesPerRow =_bggfed ;_feadfa =_gfbab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _feadfa ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cecgdf ,_dfdc :=_feadfa .(*_fe .PdfObjectArray );if !_dfdc {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feadfa );
return nil ,_fe .ErrTypeError ;};_ebdbc .Decode =_cecgdf ;if _afgac :=_gfbab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_afgac !=nil {_ebdbc .Function =[]PdfFunction {};if _afdbb ,_fggbe :=_afgac .(*_fe .PdfObjectArray );_fggbe {for _ ,_gedc :=range _afdbb .Elements (){_eecegg ,_gbbcf :=_cebb (_gedc );
if _gbbcf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbbcf );return nil ,_gbbcf ;};_ebdbc .Function =append (_ebdbc .Function ,_eecegg );
};}else {_edgec ,_gfggb :=_cebb (_afgac );if _gfggb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfggb );return nil ,_gfggb ;
};_ebdbc .Function =append (_ebdbc .Function ,_edgec );};};return &_ebdbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edegf *Permissions )ToPdfObject ()_fe .PdfObject {return _edegf ._gedgde };

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_babg *PdfReader )Decrypt (password []byte )(bool ,error ){_gdafe ,_bdcd :=_babg ._gabca .Decrypt (password );if _bdcd !=nil {return false ,_bdcd ;};if !_gdafe {return false ,nil ;};_bdcd =_babg .loadStructure ();if _bdcd !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bdcd );
return false ,_bdcd ;};return true ,nil ;};func (_efacd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// GetCerts returns the signature certificate chain.
func (_bafcb *PdfSignature )GetCerts ()([]*_ffc .Certificate ,error ){var _ccece []func ()([]*_ffc .Certificate ,error );switch _eeaga ,_ :=_fe .GetNameVal (_bafcb .SubFilter );_eeaga {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_ccece =append (_ccece ,_bafcb .extractChainFromPKCS7 ,_bafcb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_ccece =append (_ccece ,_bafcb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_ccece =append (_ccece ,_bafcb .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_eeaga );};for _ ,_dfgee :=range _ccece {_adfgc ,_dbbfe :=_dfgee ();if _dbbfe !=nil {return nil ,_dbbfe ;
};if len (_adfgc )> 0{return _adfgc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cebc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns the PDF representation of the pattern.
func (_ccbcbe *PdfPattern )ToPdfObject ()_fe .PdfObject {_cfbceb :=_ccbcbe .getDict ();_cfbceb .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cfbceb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (_ccbcbe .PatternType ));
return _ccbcbe ._aegcc ;};func _bccgb ()*modelManager {_bbgf :=modelManager {};_bbgf ._bgcbf =map[PdfModel ]_fe .PdfObject {};_bbgf ._dcege =map[_fe .PdfObject ]PdfModel {};return &_bbgf ;};func _egage (_bdce []byte )bool {if len (_bdce )< 4{return true ;
};for _cdebc :=range _bdce [:4]{_ecfbb :=rune (_cdebc );if !_ff .Is (_ff .ASCII_Hex_Digit ,_ecfbb )&&!_ff .IsSpace (_ecfbb ){return true ;};};return false ;};

// GetNumPages returns the number of pages in the document.
func (_afdeb *PdfReader )GetNumPages ()(int ,error ){if _afdeb ._gabca .GetCrypter ()!=nil &&!_afdeb ._gabca .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_afdeb ._bbfga ),nil ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_gafdb *Names )ToPdfObject ()_fe .PdfObject {_cdbd :=_gafdb ._gegeg ;_eefg ,_aefda :=_cdbd .PdfObject .(*_fe .PdfObjectDictionary );if !_aefda {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");return _cdbd ;
};if _gafdb .EmbeddedFiles !=nil {_eefg .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_fe .MakeIndirectObject (_gafdb .EmbeddedFiles ));};return _cdbd ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fafe *PdfFont )ToUnicode ()string {if _fafe .baseFields ()._fcfaf ==nil {return "";};return _fafe .baseFields ()._fcfaf .Name ();};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_caea pdfFontType3 )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){_edcac :=_caea .Encoder ();if _edcac ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_caea );
return _ag .CharMetrics {},false ;};_fgdaf ,_ebccd :=_edcac .RuneToCharcode (r );if !_ebccd {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_caea );
};return _ag .CharMetrics {},false ;};_bfcfc ,_efefg :=_caea .GetCharMetrics (_fgdaf );return _bfcfc ,_efefg ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_febce *PdfPageResources )GetXObjectByName (keyName _fe .PdfObjectName )(*_fe .PdfObjectStream ,XObjectType ){if _febce .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bebeb ,_aafda :=_fe .TraceToDirectObject (_febce .XObject ).(*_fe .PdfObjectDictionary );
if !_aafda {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fe .TraceToDirectObject (_febce .XObject ));
return nil ,XObjectTypeUndefined ;};if _bgbed :=_bebeb .Get (keyName );_bgbed !=nil {_badag ,_ccbaf :=_fe .GetStream (_bgbed );if !_ccbaf {_df .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bgbed );
return nil ,XObjectTypeUndefined ;};_eadb :=_badag .PdfObjectDictionary ;_gdebgb ,_ccbaf :=_fe .TraceToDirectObject (_eadb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fe .PdfObjectName );if !_ccbaf {_df .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eadb .String ());
return nil ,XObjectTypeUndefined ;};if *_gdebgb =="\u0049\u006d\u0061g\u0065"{return _badag ,XObjectTypeImage ;}else if *_gdebgb =="\u0046\u006f\u0072\u006d"{return _badag ,XObjectTypeForm ;}else if *_gdebgb =="\u0050\u0053"{return _badag ,XObjectTypePS ;
}else {_df .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gdebgb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_bafb *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _fe .GetNumberAsFloat (_bafb .XHeight );};func _caggg (_ebad *_fe .PdfObjectDictionary )(*PdfTilingPattern ,error ){_debea :=&PdfTilingPattern {};_eebf :=_ebad .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _eebf ==nil {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcef ,_cfcf :=_eebf .(*_fe .PdfObjectInteger );if !_cfcf {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eebf );
return nil ,_fe .ErrTypeError ;};_debea .PaintType =_fcef ;_eebf =_ebad .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _eebf ==nil {_df .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gegbc ,_cfcf :=_eebf .(*_fe .PdfObjectInteger );if !_cfcf {_df .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eebf );
return nil ,_fe .ErrTypeError ;};_debea .TilingType =_gegbc ;_eebf =_ebad .Get ("\u0042\u0042\u006f\u0078");if _eebf ==nil {_df .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_eebf =_fe .TraceToDirectObject (_eebf );_fegfb ,_cfcf :=_eebf .(*_fe .PdfObjectArray );if !_cfcf {_df .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eebf );
return nil ,_fe .ErrTypeError ;};_dfdae ,_dfdgac :=NewPdfRectangle (*_fegfb );if _dfdgac !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dfdgac );return nil ,_dfdgac ;};_debea .BBox =_dfdae ;_eebf =_ebad .Get ("\u0058\u0053\u0074e\u0070");
if _eebf ==nil {_df .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edbab ,_dfdgac :=_fe .GetNumberAsFloat (_eebf );if _dfdgac !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_edbab );
return nil ,_dfdgac ;};_debea .XStep =_fe .MakeFloat (_edbab );_eebf =_ebad .Get ("\u0059\u0053\u0074e\u0070");if _eebf ==nil {_df .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dadfb ,_dfdgac :=_fe .GetNumberAsFloat (_eebf );if _dfdgac !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dadfb );
return nil ,_dfdgac ;};_debea .YStep =_fe .MakeFloat (_dadfb );_eebf =_ebad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eebf ==nil {_df .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebad ,_cfcf =_fe .TraceToDirectObject (_eebf ).(*_fe .PdfObjectDictionary );if !_cfcf {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eebf );
};_fgegb ,_dfdgac :=NewPdfPageResourcesFromDict (_ebad );if _dfdgac !=nil {return nil ,_dfdgac ;};_debea .Resources =_fgegb ;if _fbgc :=_ebad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fbgc !=nil {_caeed ,_deada :=_fbgc .(*_fe .PdfObjectArray );if !_deada {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgc );
return nil ,_fe .ErrTypeError ;};_debea .Matrix =_caeed ;};return _debea ,nil ;};func (_ecce *PdfReader )newPdfAnnotationFromIndirectObject (_ageb *_fe .PdfIndirectObject )(*PdfAnnotation ,error ){_deg ,_abfg :=_ageb .PdfObject .(*_fe .PdfObjectDictionary );
if !_abfg {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ecce ._afac .GetModelFromPrimitive (_deg );model !=nil {_fcfg ,_befd :=model .(*PdfAnnotation );if !_befd {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fcfg ,nil ;};_adg :=&PdfAnnotation {};_adg ._efg =_ageb ;_ecce ._afac .Register (_deg ,_adg );if _ecef :=_deg .Get ("\u0054\u0079\u0070\u0065");_ecef !=nil {_dba ,_ebc :=_ecef .(*_fe .PdfObjectName );if !_ebc {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecef );
}else {if *_dba !="\u0041\u006e\u006eo\u0074"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dba );};};};if _ffdg :=_deg .Get ("\u0052\u0065\u0063\u0074");
_ffdg !=nil {_adg .Rect =_ffdg ;};if _abcc :=_deg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_abcc !=nil {_adg .Contents =_abcc ;};if _bec :=_deg .Get ("\u0050");_bec !=nil {_adg .P =_bec ;};if _aae :=_deg .Get ("\u004e\u004d");_aae !=nil {_adg .NM =_aae ;
};if _fbf :=_deg .Get ("\u004d");_fbf !=nil {_adg .M =_fbf ;};if _beg :=_deg .Get ("\u0046");_beg !=nil {_adg .F =_beg ;};if _aed :=_deg .Get ("\u0041\u0050");_aed !=nil {_adg .AP =_aed ;};if _cedb :=_deg .Get ("\u0041\u0053");_cedb !=nil {_adg .AS =_cedb ;
};if _aefd :=_deg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_aefd !=nil {_adg .Border =_aefd ;};if _fab :=_deg .Get ("\u0043");_fab !=nil {_adg .C =_fab ;};if _fdgg :=_deg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fdgg !=nil {_adg .StructParent =_fdgg ;};if _cdc :=_deg .Get ("\u004f\u0043");_cdc !=nil {_adg .OC =_cdc ;};_fdbe :=_deg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fdbe ==nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_adg ._cdg =nil ;return _adg ,nil ;};_afe ,_ccff :=_fdbe .(*_fe .PdfObjectName );if !_ccff {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fdbe );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fdbe );};switch *_afe {case "\u0054\u0065\u0078\u0074":_bdga ,_aagg :=_ecce .newPdfAnnotationTextFromDict (_deg );
if _aagg !=nil {return nil ,_aagg ;};_bdga .PdfAnnotation =_adg ;_adg ._cdg =_bdga ;return _adg ,nil ;case "\u004c\u0069\u006e\u006b":_fdee ,_cefa :=_ecce .newPdfAnnotationLinkFromDict (_deg );if _cefa !=nil {return nil ,_cefa ;};_fdee .PdfAnnotation =_adg ;
_adg ._cdg =_fdee ;return _adg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bfac ,_ecg :=_ecce .newPdfAnnotationFreeTextFromDict (_deg );if _ecg !=nil {return nil ,_ecg ;};_bfac .PdfAnnotation =_adg ;_adg ._cdg =_bfac ;return _adg ,nil ;
case "\u004c\u0069\u006e\u0065":_fda ,_agga :=_ecce .newPdfAnnotationLineFromDict (_deg );if _agga !=nil {return nil ,_agga ;};_fda .PdfAnnotation =_adg ;_adg ._cdg =_fda ;_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_adg ,_adg );
_df .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_fda ,_fda );_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_fda .PdfAnnotationMarkup ,_fda .PdfAnnotationMarkup );
return _adg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bbg ,_beb :=_ecce .newPdfAnnotationSquareFromDict (_deg );if _beb !=nil {return nil ,_beb ;};_bbg .PdfAnnotation =_adg ;_adg ._cdg =_bbg ;return _adg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_efef ,_fdbg :=_ecce .newPdfAnnotationCircleFromDict (_deg );
if _fdbg !=nil {return nil ,_fdbg ;};_efef .PdfAnnotation =_adg ;_adg ._cdg =_efef ;return _adg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_fgb ,_adc :=_ecce .newPdfAnnotationPolygonFromDict (_deg );if _adc !=nil {return nil ,_adc ;};_fgb .PdfAnnotation =_adg ;
_adg ._cdg =_fgb ;return _adg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_afd ,_bgc :=_ecce .newPdfAnnotationPolyLineFromDict (_deg );if _bgc !=nil {return nil ,_bgc ;};_afd .PdfAnnotation =_adg ;_adg ._cdg =_afd ;return _adg ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dfcf ,_eeeb :=_ecce .newPdfAnnotationHighlightFromDict (_deg );
if _eeeb !=nil {return nil ,_eeeb ;};_dfcf .PdfAnnotation =_adg ;_adg ._cdg =_dfcf ;return _adg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gbe ,_ffa :=_ecce .newPdfAnnotationUnderlineFromDict (_deg );if _ffa !=nil {return nil ,_ffa ;};_gbe .PdfAnnotation =_adg ;
_adg ._cdg =_gbe ;return _adg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dagca ,_eff :=_ecce .newPdfAnnotationSquigglyFromDict (_deg );if _eff !=nil {return nil ,_eff ;};_dagca .PdfAnnotation =_adg ;_adg ._cdg =_dagca ;return _adg ,nil ;
case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dadb ,_gbfe :=_ecce .newPdfAnnotationStrikeOut (_deg );if _gbfe !=nil {return nil ,_gbfe ;};_dadb .PdfAnnotation =_adg ;_adg ._cdg =_dadb ;return _adg ,nil ;case "\u0043\u0061\u0072e\u0074":_gacg ,_ggcb :=_ecce .newPdfAnnotationCaretFromDict (_deg );
if _ggcb !=nil {return nil ,_ggcb ;};_gacg .PdfAnnotation =_adg ;_adg ._cdg =_gacg ;return _adg ,nil ;case "\u0053\u0074\u0061m\u0070":_edag ,_ffeed :=_ecce .newPdfAnnotationStampFromDict (_deg );if _ffeed !=nil {return nil ,_ffeed ;};_edag .PdfAnnotation =_adg ;
_adg ._cdg =_edag ;return _adg ,nil ;case "\u0049\u006e\u006b":_gagd ,_bbe :=_ecce .newPdfAnnotationInkFromDict (_deg );if _bbe !=nil {return nil ,_bbe ;};_gagd .PdfAnnotation =_adg ;_adg ._cdg =_gagd ;return _adg ,nil ;case "\u0050\u006f\u0070u\u0070":_becc ,_acg :=_ecce .newPdfAnnotationPopupFromDict (_deg );
if _acg !=nil {return nil ,_acg ;};_becc .PdfAnnotation =_adg ;_adg ._cdg =_becc ;return _adg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dceg ,_gef :=_ecce .newPdfAnnotationFileAttachmentFromDict (_deg );
if _gef !=nil {return nil ,_gef ;};_dceg .PdfAnnotation =_adg ;_adg ._cdg =_dceg ;return _adg ,nil ;case "\u0053\u006f\u0075n\u0064":_dabf ,_bgd :=_ecce .newPdfAnnotationSoundFromDict (_deg );if _bgd !=nil {return nil ,_bgd ;};_dabf .PdfAnnotation =_adg ;
_adg ._cdg =_dabf ;return _adg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_adbg ,_eeg :=_ecce .newPdfAnnotationRichMediaFromDict (_deg );if _eeg !=nil {return nil ,_eeg ;};_adbg .PdfAnnotation =_adg ;_adg ._cdg =_adbg ;return _adg ,nil ;
case "\u004d\u006f\u0076i\u0065":_ffg ,_gbffd :=_ecce .newPdfAnnotationMovieFromDict (_deg );if _gbffd !=nil {return nil ,_gbffd ;};_ffg .PdfAnnotation =_adg ;_adg ._cdg =_ffg ;return _adg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fga ,_acd :=_ecce .newPdfAnnotationScreenFromDict (_deg );
if _acd !=nil {return nil ,_acd ;};_fga .PdfAnnotation =_adg ;_adg ._cdg =_fga ;return _adg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gaag ,_daaa :=_ecce .newPdfAnnotationWidgetFromDict (_deg );if _daaa !=nil {return nil ,_daaa ;};_gaag .PdfAnnotation =_adg ;
_adg ._cdg =_gaag ;return _adg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_eba ,_fge :=_ecce .newPdfAnnotationPrinterMarkFromDict (_deg );if _fge !=nil {return nil ,_fge ;};_eba .PdfAnnotation =_adg ;_adg ._cdg =_eba ;return _adg ,nil ;
case "\u0054r\u0061\u0070\u004e\u0065\u0074":_eaf ,_dff :=_ecce .newPdfAnnotationTrapNetFromDict (_deg );if _dff !=nil {return nil ,_dff ;};_eaf .PdfAnnotation =_adg ;_adg ._cdg =_eaf ;return _adg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_cbf ,_cbbe :=_ecce .newPdfAnnotationWatermarkFromDict (_deg );
if _cbbe !=nil {return nil ,_cbbe ;};_cbf .PdfAnnotation =_adg ;_adg ._cdg =_cbf ;return _adg ,nil ;case "\u0033\u0044":_dec ,_abbcd :=_ecce .newPdfAnnotation3DFromDict (_deg );if _abbcd !=nil {return nil ,_abbcd ;};_dec .PdfAnnotation =_adg ;_adg ._cdg =_dec ;
return _adg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ccd ,_bcae :=_ecce .newPdfAnnotationProjectionFromDict (_deg );if _bcae !=nil {return nil ,_bcae ;};_ccd .PdfAnnotation =_adg ;_adg ._cdg =_ccd ;return _adg ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_faggf ,_bdf :=_ecce .newPdfAnnotationRedactFromDict (_deg );
if _bdf !=nil {return nil ,_bdf ;};_faggf .PdfAnnotation =_adg ;_adg ._cdg =_faggf ;return _adg ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_afe );
return nil ,nil ;};func (_baadf *PdfReader )newPdfAnnotationRichMediaFromDict (_fca *_fe .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_eaa :=&PdfAnnotationRichMedia {};_eaa .RichMediaSettings =_fca .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_eaa .RichMediaContent =_fca .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _eaa ,nil ;};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_eagbb *ViewerPreferences )IsHideMenubar ()bool {if _eagbb ._daddc ==nil {return false ;};return *_eagbb ._daddc ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bge :=NewPdfAction ();_ggf :=&PdfActionTrans {};_ggf .PdfAction =_bge ;_bge .SetContext (_ggf );return _ggf ;};

// Val returns the color value.
func (_agadc *PdfColorDeviceGray )Val ()float64 {return float64 (*_agadc )};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_fegfef :=&PdfColorPatternType3 {};return _fegfef ;};

// M returns the value of the magenta component of the color.
func (_afff *PdfColorDeviceCMYK )M ()float64 {return _afff [1]};func (_afdbe *PdfWriter )writeTrailer (_fagcfe int ){_afdbe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _baeeb :=0;_baeeb <=_fagcfe ;{for ;_baeeb <=_fagcfe ;_baeeb ++{_bcacg ,_ebddg :=_afdbe ._bdaaa [_baeeb ];
if _ebddg &&(!_afdbe ._cgedg ||_afdbe ._cgedg &&(_bcacg .Type ==1&&_bcacg .Offset >=_afdbe ._cddfd ||_bcacg .Type ==0)){break ;};};var _gecf int ;for _gecf =_baeeb +1;_gecf <=_fagcfe ;_gecf ++{_fbbaec ,_dcgbb :=_afdbe ._bdaaa [_gecf ];if _dcgbb &&(!_afdbe ._cgedg ||_afdbe ._cgedg &&(_fbbaec .Type ==1&&_fbbaec .Offset > _afdbe ._cddfd )){continue ;
};break ;};_ddbada :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_baeeb ,_gecf -_baeeb );_afdbe .writeString (_ddbada );for _becca :=_baeeb ;_becca < _gecf ;_becca ++{_ffcfa :=_afdbe ._bdaaa [_becca ];switch _ffcfa .Type {case 0:_ddbada =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_afdbe .writeString (_ddbada );case 1:_ddbada =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_ffcfa .Offset ,0);_afdbe .writeString (_ddbada );};};_baeeb =_gecf +1;};_ebdcf :=_fe .MakeDict ();_ebdcf .Set ("\u0049\u006e\u0066\u006f",_afdbe ._fefff );
_ebdcf .Set ("\u0052\u006f\u006f\u0074",_afdbe ._dabeb );_ebdcf .Set ("\u0053\u0069\u007a\u0065",_fe .MakeInteger (int64 (_fagcfe +1)));if _afdbe ._cgedg &&_afdbe ._bfcedc > 0{_ebdcf .Set ("\u0050\u0072\u0065\u0076",_fe .MakeInteger (_afdbe ._bfcedc ));
};if _afdbe ._aebgf !=nil {_ebdcf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_afdbe ._bceed );};if _afdbe ._gbgde ==nil &&_afdbe ._gfcfeg !=""&&_afdbe ._eafad !=""{_afdbe ._gbgde =_fe .MakeArray (_fe .MakeHexString (_afdbe ._gfcfeg ),_fe .MakeHexString (_afdbe ._eafad ));
};if _afdbe ._gbgde !=nil {_ebdcf .Set ("\u0049\u0044",_afdbe ._gbgde );_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_afdbe ._gbgde );};_afdbe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_afdbe .writeString (_ebdcf .WriteString ());
_afdbe .writeString ("\u000a");};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gabca *_fe .PdfParser ;_gegaad _fe .PdfObject ;_bgdg *_fe .PdfIndirectObject ;_ccfbd *_fe .PdfObjectDictionary ;_bbfga []*_fe .PdfIndirectObject ;PageList []*PdfPage ;_ddcce int ;_bbfec *_fe .PdfObjectDictionary ;_bcaca *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_ageda *Permissions ;_affbg map[*PdfReader ]*PdfReader ;_fgfed []*PdfReader ;_afac *modelManager ;_feega bool ;_gdacb map[_fe .PdfObject ]struct{};_afgaf _gd .ReadSeeker ;_ccfdg string ;_gdbb bool ;_cdega string ;
_gdfde *ReaderOpts ;_cfbeg bool ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_egga .Lock ();defer _egga .Unlock ();_faaca =author };

// Items returns all children outline items.
func (_afbad *OutlineItem )Items ()[]*OutlineItem {return _afbad .Entries };func (_cbbg *PdfReader )newPdfAnnotationFreeTextFromDict (_gga *_fe .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dcg :=PdfAnnotationFreeText {};_edc ,_bfe :=_cbbg .newPdfAnnotationMarkupFromDict (_gga );
if _bfe !=nil {return nil ,_bfe ;};_dcg .PdfAnnotationMarkup =_edc ;_dcg .DA =_gga .Get ("\u0044\u0041");_dcg .Q =_gga .Get ("\u0051");_dcg .RC =_gga .Get ("\u0052\u0043");_dcg .DS =_gga .Get ("\u0044\u0053");_dcg .CL =_gga .Get ("\u0043\u004c");_dcg .IT =_gga .Get ("\u0049\u0054");
_dcg .BE =_gga .Get ("\u0042\u0045");_dcg .RD =_gga .Get ("\u0052\u0044");_dcg .BS =_gga .Get ("\u0042\u0053");_dcg .LE =_gga .Get ("\u004c\u0045");return &_dcg ,nil ;};func _cbfef ()string {_egga .Lock ();defer _egga .Unlock ();return _gecdg };

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_fe .PdfObjectString ;Q *_fe .PdfObjectInteger ;DS *_fe .PdfObjectString ;RV _fe .PdfObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_egf :=NewPdfAnnotation ();_ddg :=&PdfAnnotationFileAttachment {};_ddg .PdfAnnotation =_egf ;_ddg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egf .SetContext (_ddg );return _ddg ;};
func (_dgbgb *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dgbgb ._gabca .GetCrypter ()!=nil &&!_dgbgb ._gabca .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_daagd :=_dgbgb ._bbfec ;_bfdag :=_daagd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bfdag ==nil {return nil ,nil ;};_abceag ,_baefa :=_fe .GetIndirect (_bfdag );_bfdag =_fe .TraceToDirectObject (_bfdag );if _fe .IsNullObject (_bfdag ){_df .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_dddb ,_agadca :=_fe .GetDict (_bfdag );if !_agadca {_df .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bfdag );_df .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _dgbgb ._gdfde .RelaxedMode {_df .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bfdag );};_df .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dgbgb ._feega {_cgcd :=_dgbgb .traverseObjectData (_dddb );
if _cgcd !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cgcd );
return nil ,_cgcd ;};};_bcda ,_adccc :=_dgbgb .newPdfAcroFormFromDict (_abceag ,_dddb );if _adccc !=nil {return nil ,_adccc ;};_bcda ._adgc =!_baefa ;return _bcda ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_adda :=PdfColorDeviceGray (grayVal );return &_adda ;};

// ToPdfObject converts rectangle to a PDF object.
func (_becff *PdfRectangle )ToPdfObject ()_fe .PdfObject {return _fe .MakeArray (_fe .MakeFloat (_becff .Llx ),_fe .MakeFloat (_becff .Lly ),_fe .MakeFloat (_becff .Urx ),_fe .MakeFloat (_becff .Ury ));};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;};func (_dddgc *PdfReader )newPdfActionGoTo3DViewFromDict (_fcd *_fe .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fcd .Get ("\u0054\u0041"),V :_fcd .Get ("\u0056")},nil ;
};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_fgfd *_fe .PdfIndirectObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fe .PdfObject ;IC _fe .PdfObject ;RO _fe .PdfObject ;OverlayText _fe .PdfObject ;Repeat _fe .PdfObject ;DA _fe .PdfObject ;Q _fe .PdfObject ;};func (_ceec *PdfAnnotationMarkup )appendToPdfDictionary (_gca *_fe .PdfObjectDictionary ){_gca .SetIfNotNil ("\u0054",_ceec .T );
if _ceec .Popup !=nil {_gca .Set ("\u0050\u006f\u0070u\u0070",_ceec .Popup .ToPdfObject ());};_gca .SetIfNotNil ("\u0043\u0041",_ceec .CA );_gca .SetIfNotNil ("\u0052\u0043",_ceec .RC );_gca .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ceec .CreationDate );
_gca .SetIfNotNil ("\u0049\u0052\u0054",_ceec .IRT );_gca .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ceec .Subj );_gca .SetIfNotNil ("\u0052\u0054",_ceec .RT );_gca .SetIfNotNil ("\u0049\u0054",_ceec .IT );_gca .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ceec .ExData );
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gae *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aggc ,_gddd :=_fe .GetNumbersAsFloat (objects );
if _gddd !=nil {return nil ,_gddd ;};return _gae .ColorFromFloats (_aggc );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_efac *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_bbc .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_ggeg ,_dgd :=_af .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbgaf ,img ._cccfg );if _dgd !=nil {return img ,_dgd ;};_bcec ,_dgd :=_af .NRGBAConverter .Convert (_ggeg );if _dgd !=nil {return img ,_dgd ;
};_dfec :=_cfgaa (_bcec .Base ());_df .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_df .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_df .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dfec .Data );
_df .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dfec );return _dfec ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_geeb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if _geeb .Alternate ==nil {if _geeb .N ==1{_ecge :=NewPdfColorspaceDeviceGray ();return _ecge .ColorFromPdfObjects (objects );}else if _geeb .N ==3{_eafcf :=NewPdfColorspaceDeviceRGB ();
return _eafcf .ColorFromPdfObjects (objects );}else if _geeb .N ==4{_edfgd :=NewPdfColorspaceDeviceCMYK ();return _edfgd .ColorFromPdfObjects (objects );}else {return nil ,_bbc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _geeb .Alternate .ColorFromPdfObjects (objects );};func _bedaf (_cgbad _fe .PdfObject ,_edfgc *PdfReader )(*OutlineDest ,error ){_cggd ,_dgcfa :=_fe .GetArray (_cgbad );if !_dgcfa {return nil ,_bbc .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fcaaf :=_cggd .Len ();if _fcaaf < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fcaaf );
};_edede :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bcbgb :=_cggd .Get (0);if _begg ,_ebbd :=_fe .GetIndirect (_bcbgb );_ebbd {if _ ,_aabff ,_bbagc :=_edfgc .PageFromIndirectObject (_begg );_bbagc ==nil {_edede .Page =int64 (_aabff -1);}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_begg );
};_edede .PageObj =_begg ;}else if _gcaga ,_cacag :=_fe .GetIntVal (_bcbgb );_cacag {if _gcaga >=0&&_gcaga < len (_edfgc .PageList ){_edede .PageObj =_edfgc .PageList [_gcaga ].GetPageAsIndirectObject ();}else {_df .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gcaga );
};_edede .Page =int64 (_gcaga );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bcbgb );};_agcb ,_dgcfa :=_fe .GetNameVal (_cggd .Get (1));
if !_dgcfa {_df .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cggd .Get (1));
return _edede ,nil ;};switch _agcb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fcaaf > 2{_edede .Y ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_cggd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fcaaf > 2{_edede .X ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_cggd .Get (2)));
};case "\u0058\u0059\u005a":if _fcaaf > 4{_edede .X ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_cggd .Get (2)));_edede .Y ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_cggd .Get (3)));_edede .Zoom ,_ =_fe .GetNumberAsFloat (_fe .TraceToDirectObject (_cggd .Get (4)));
};default:_agcb ="\u0046\u0069\u0074";};_edede .Mode =_agcb ;return _edede ,nil ;};func _ddadb ()string {_egga .Lock ();defer _egga .Unlock ();return _caab };

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_bfce *PdfAppender )SetDocInfo (info *PdfInfo ){_bfce ._dfb =info };func _bfbb (_afdfc _fe .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_edca :=NewPdfColorspaceSpecialIndexed ();if _gbaf ,_edfe :=_afdfc .(*_fe .PdfIndirectObject );_edfe {_edca ._acad =_gbaf ;
};_afdfc =_fe .TraceToDirectObject (_afdfc );_eaabg ,_ggfa :=_afdfc .(*_fe .PdfObjectArray );if !_ggfa {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eaabg .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_afdfc =_eaabg .Get (0);_cfeed ,_ggfa :=_afdfc .(*_fe .PdfObjectName );if !_ggfa {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cfeed !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_afdfc =_eaabg .Get (1);_dfddf ,_bdge :=DetermineColorspaceNameFromPdfObject (_afdfc );if _bdge !=nil {return nil ,_bdge ;};if _dfddf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dfddf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dfddf );
return nil ,_gbd ;};_dbebg ,_bdge :=NewPdfColorspaceFromPdfObject (_afdfc );if _bdge !=nil {return nil ,_bdge ;};_edca .Base =_dbebg ;_afdfc =_eaabg .Get (2);_ebaba ,_bdge :=_fe .GetNumberAsInt64 (_afdfc );if _bdge !=nil {return nil ,_bdge ;};if _ebaba > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_edca .HiVal =int (_ebaba );_afdfc =_eaabg .Get (3);_edca .Lookup =_afdfc ;_afdfc =_fe .TraceToDirectObject (_afdfc );var _ceaa []byte ;if _cbdg ,_dgdf :=_afdfc .(*_fe .PdfObjectString );_dgdf {_ceaa =_cbdg .Bytes ();_df .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ceaa );
}else if _cddf ,_gadcg :=_afdfc .(*_fe .PdfObjectStream );_gadcg {_df .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_afdfc .String ());_df .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cddf .Stream ),_cddf .Stream );
_faccb ,_dcbg :=_fe .DecodeStream (_cddf );if _dcbg !=nil {return nil ,_dcbg ;};_df .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_faccb ),_faccb );_ceaa =_faccb ;}else {_df .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_afdfc );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ceaa )< _edca .Base .GetNumComponents ()*(_edca .HiVal +1){_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_df .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ceaa ),_edca .Base .GetNumComponents (),_edca .HiVal );
}else {_ceaa =_ceaa [:_edca .Base .GetNumComponents ()*(_edca .HiVal +1)];};_edca ._faeg =_ceaa ;return _edca ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_defc *PdfField )Flags ()FieldFlag {var _dbeff FieldFlag ;_eafd ,_acbb :=_defc .inherit (func (_gdfdf *PdfField )bool {if _gdfdf .Ff !=nil {_dbeff =FieldFlag (*_gdfdf .Ff );return true ;};return false ;});if _acbb !=nil {_df .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_acbb );
};if !_eafd {_df .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dbeff ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ffcdd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fe .GetNumberAsFloat (_ffcdd .Descent );};

// ToPdfObject implements interface PdfModel.
func (_ffff *PdfActionLaunch )ToPdfObject ()_fe .PdfObject {_ffff .PdfAction .ToPdfObject ();_aaa :=_ffff ._ea ;_cgf :=_aaa .PdfObject .(*_fe .PdfObjectDictionary );_cgf .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeLaunch )));if _ffff .F !=nil {_cgf .Set ("\u0046",_ffff .F .ToPdfObject ());
};_cgf .SetIfNotNil ("\u0057\u0069\u006e",_ffff .Win );_cgf .SetIfNotNil ("\u004d\u0061\u0063",_ffff .Mac );_cgf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffff .Unix );_cgf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ffff .NewWindow );
return _aaa ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_cccc *DSS )GenerateHashMaps ()error {_eccg ,_gdede :=_cccc .generateHashMap (_cccc .Certs );if _gdede !=nil {return _gdede ;};_bafc ,_gdede :=_cccc .generateHashMap (_cccc .OCSPs );if _gdede !=nil {return _gdede ;};_egbb ,_gdede :=_cccc .generateHashMap (_cccc .CRLs );
if _gdede !=nil {return _gdede ;};_cccc ._gdfg =_eccg ;_cccc ._cdbaf =_bafc ;_cccc ._dgcge =_egbb ;return nil ;};func (_bbb *PdfReader )newPdfActionLaunchFromDict (_fefg *_fe .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fed ,_dddg :=_cdb (_fefg .Get ("\u0046"));
if _dddg !=nil {return nil ,_dddg ;};return &PdfActionLaunch {Win :_fefg .Get ("\u0057\u0069\u006e"),Mac :_fefg .Get ("\u004d\u0061\u0063"),Unix :_fefg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fefg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fed },nil ;
};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cafdb *_fe .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fe .PdfObjectName ;Filter *_fe .PdfObjectName ;SubFilter *_fe .PdfObjectName ;Contents *_fe .PdfObjectString ;Cert _fe .PdfObject ;ByteRange *_fe .PdfObjectArray ;Reference *_fe .PdfObjectArray ;Changes *_fe .PdfObjectArray ;Name *_fe .PdfObjectString ;
M *_fe .PdfObjectString ;Location *_fe .PdfObjectString ;Reason *_fe .PdfObjectString ;ContactInfo *_fe .PdfObjectString ;R *_fe .PdfObjectInteger ;V *_fe .PdfObjectInteger ;PropBuild *_fe .PdfObjectDictionary ;PropAuthTime *_fe .PdfObjectInteger ;PropAuthType *_fe .PdfObjectName ;
};

// AddKDict adds a K dictionary object to the structure tree root.
func (_bbgcc *StructTreeRoot )AddKDict (k *KDict ){_bbgcc .K =append (_bbgcc .K ,k )};func (_aacb *PdfReader )newPdfAnnotationStrikeOut (_dbd *_fe .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gab :=PdfAnnotationStrikeOut {};_gff ,_fedb :=_aacb .newPdfAnnotationMarkupFromDict (_dbd );
if _fedb !=nil {return nil ,_fedb ;};_gab .PdfAnnotationMarkup =_gff ;_gab .QuadPoints =_dbd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gab ,nil ;};func (_ecda *PdfReader )newPdfAnnotationUnderlineFromDict (_bdbb *_fe .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_abda :=PdfAnnotationUnderline {};
_baec ,_fdad :=_ecda .newPdfAnnotationMarkupFromDict (_bdbb );if _fdad !=nil {return nil ,_fdad ;};_abda .PdfAnnotationMarkup =_baec ;_abda .QuadPoints =_bdbb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abda ,nil ;};func (_adbgb fontCommon )asPdfObjectDictionary (_bded string )*_fe .PdfObjectDictionary {if _bded !=""&&_adbgb ._cdgfg !=""&&_bded !=_adbgb ._cdgfg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bded ,_adbgb );
}else if _bded ==""&&_adbgb ._cdgfg ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_adbgb );
}else if _adbgb ._cdgfg ==""{_adbgb ._cdgfg =_bded ;};_bcgcg :=_fe .MakeDict ();_bcgcg .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u006f\u006e\u0074"));_bcgcg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fe .MakeName (_adbgb ._cecc ));
_bcgcg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName (_adbgb ._cdgfg ));if _adbgb ._gdgcc !=nil {_bcgcg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_adbgb ._gdgcc .ToPdfObject ());};if _adbgb ._bfccg !=nil {_bcgcg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_adbgb ._bfccg );
}else if _adbgb ._fcfaf !=nil {_eaec ,_eedda :=_adbgb ._fcfaf .Stream ();if _eedda !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_eedda );
}else {_bcgcg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eaec );};};return _bcgcg ;};

// Height returns the height of `rect`.
func (_eebef *PdfRectangle )Height ()float64 {return _dd .Abs (_eebef .Ury -_eebef .Lly )};func (_agfec *PdfReader )buildPageList (_cbbea *_fe .PdfIndirectObject ,_fbdef *_fe .PdfIndirectObject ,_aabb map[_fe .PdfObject ]struct{})error {if _cbbea ==nil {return nil ;
};if _ ,_cefd :=_aabb [_cbbea ];_cefd {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cbbea .ObjectNumber );
return nil ;};_aabb [_cbbea ]=struct{}{};_daggb ,_cdgb :=_cbbea .PdfObject .(*_fe .PdfObjectDictionary );if !_cdgb {return _bbc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bebcd ,_cdgb :=(*_daggb ).Get ("\u0054\u0079\u0070\u0065").(*_fe .PdfObjectName );
if !_cdgb {if _daggb .Get ("\u004b\u0069\u0064\u0073")==nil {return _bbc .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_bebcd =_fe .MakeName ("\u0050\u0061\u0067e\u0073");_daggb .Set ("\u0054\u0079\u0070\u0065",_bebcd );};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bebcd ,_cbbea );
if *_bebcd =="\u0050\u0061\u0067\u0065"{_acffe ,_daeee :=_agfec .newPdfPageFromDict (_daggb );if _daeee !=nil {return _daeee ;};_acffe .setContainer (_cbbea );if _fbdef !=nil {_daggb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbdef );};_agfec ._bbfga =append (_agfec ._bbfga ,_cbbea );
_agfec .PageList =append (_agfec .PageList ,_acffe );return nil ;};if *_bebcd !="\u0050\u0061\u0067e\u0073"{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bebcd );
return _bbc .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _fbdef !=nil {_daggb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbdef );};if !_agfec ._feega {_aaeg :=_agfec .traverseObjectData (_cbbea );if _aaeg !=nil {return _aaeg ;};};_dabag ,_dfefac :=_agfec ._gabca .Resolve (_daggb .Get ("\u004b\u0069\u0064\u0073"));
if _dfefac !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dfefac ;};var _ebaae *_fe .PdfObjectArray ;
_ebaae ,_cdgb =_dabag .(*_fe .PdfObjectArray );if !_cdgb {_gcgab ,_fbebb :=_dabag .(*_fe .PdfIndirectObject );if !_fbebb {return _bbc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebaae ,_cdgb =_gcgab .PdfObject .(*_fe .PdfObjectArray );
if !_cdgb {return _bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ebaae );
for _abfgc ,_fegb :=range _ebaae .Elements (){_ecfec ,_cegdf :=_fe .GetIndirect (_fegb );if !_cegdf {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ecfec );
return _bbc .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebaae .Set (_abfgc ,_ecfec );_dfefac =_agfec .buildPageList (_ecfec ,_cbbea ,_aabb );if _dfefac !=nil {return _dfefac ;
};};return nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bege *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bege .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bege ._fdcb =acroForm ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_cced :=NewPdfAnnotation ();_dcd :=&PdfAnnotationPrinterMark {};_dcd .PdfAnnotation =_cced ;_cced .SetContext (_dcd );return _dcd ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fe .PdfObject ;Movie _fe .PdfObject ;A _fe .PdfObject ;};

// GetPdfInfo returns the PDF info dictionary.
func (_cdccf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_deace ,_cggac :=_cdccf .GetTrailer ();if _cggac !=nil {return nil ,_cggac ;};var _gfega *_fe .PdfObjectDictionary ;_gbcfc :=_deace .Get ("\u0049\u006e\u0066\u006f");switch _ggdfaa :=_gbcfc .(type ){case *_fe .PdfObjectReference :_agagb :=_ggdfaa ;
_gbcfc ,_cggac =_cdccf .GetIndirectObjectByNumber (int (_agagb .ObjectNumber ));_gbcfc =_fe .TraceToDirectObject (_gbcfc );if _cggac !=nil {return nil ,_cggac ;};_gfega ,_ =_gbcfc .(*_fe .PdfObjectDictionary );case *_fe .PdfObjectDictionary :_gfega =_ggdfaa ;
};if _gfega ==nil {return nil ,_bbc .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ccfab ,_cggac :=NewPdfInfoFromObject (_gfega );if _cggac !=nil {return nil ,_cggac ;
};return _ccfab ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cdcbc *PdfPage )Duplicate ()*PdfPage {_bgbef :=*_cdcbc ;_bgbef ._bcgdf =_fe .MakeDict ();_bgbef ._fbecf =_fe .MakeIndirectObject (_bgbef ._bcgdf );_bgbef ._beae =*_bgbef ._bcgdf ;return &_bgbef ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cda :=NewPdfAction ();_dea :=&PdfActionURI {};_dea .PdfAction =_cda ;_cda .SetContext (_dea );return _dea ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cdagf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_df .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_df .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_df .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_df .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fgcd ,_agda :=_af .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbgaf ,img ._cccfg );if _agda !=nil {return Image {},_agda ;};_fdfge ,_agda :=_af .NRGBAConverter .Convert (_fgcd );if _agda !=nil {return Image {},_agda ;
};return _cfgaa (_fdfge .Base ()),nil ;};func _ccgbg (_fdfed *_fe .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bcecgb :=PdfShadingType3 {};_fgedf :=_fdfed .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fgedf ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gceaf ,_gebc :=_fgedf .(*_fe .PdfObjectArray );if !_gebc {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgedf );
return nil ,_fe .ErrTypeError ;};if _gceaf .Len ()!=6{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gceaf .Len ());return nil ,ErrInvalidAttribute ;
};_bcecgb .Coords =_gceaf ;if _ggefd :=_fdfed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggefd !=nil {_ggefd =_fe .TraceToDirectObject (_ggefd );_dedae ,_eegbg :=_ggefd .(*_fe .PdfObjectArray );if !_eegbg {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggefd );
return nil ,_fe .ErrTypeError ;};_bcecgb .Domain =_dedae ;};_fgedf =_fdfed .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fgedf ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bcecgb .Function =[]PdfFunction {};if _edbgb ,_ecbeec :=_fgedf .(*_fe .PdfObjectArray );_ecbeec {for _ ,_edfda :=range _edbgb .Elements (){_bcfa ,_egbab :=_cebb (_edfda );if _egbab !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egbab );
return nil ,_egbab ;};_bcecgb .Function =append (_bcecgb .Function ,_bcfa );};}else {_ffbe ,_eeeg :=_cebb (_fgedf );if _eeeg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeeg );
return nil ,_eeeg ;};_bcecgb .Function =append (_bcecgb .Function ,_ffbe );};if _ggffa :=_fdfed .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ggffa !=nil {_ggffa =_fe .TraceToDirectObject (_ggffa );_aggdca ,_ebdba :=_ggffa .(*_fe .PdfObjectArray );if !_ebdba {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggffa );
return nil ,_fe .ErrTypeError ;};if _aggdca .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aggdca .Len ());return nil ,ErrInvalidAttribute ;
};_bcecgb .Extend =_aggdca ;};return &_bcecgb ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_fe .PdfObjectName ;P *_fe .PdfObjectInteger ;V *_fe .PdfObjectName ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_baada *PdfField )GetContext ()PdfModel {return _baada ._fcec };func (_adeb *PdfReader )newPdfAnnotationLineFromDict (_bcac *_fe .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_agad :=PdfAnnotationLine {};_gaab ,_aaeb :=_adeb .newPdfAnnotationMarkupFromDict (_bcac );
if _aaeb !=nil {return nil ,_aaeb ;};_agad .PdfAnnotationMarkup =_gaab ;_agad .L =_bcac .Get ("\u004c");_agad .BS =_bcac .Get ("\u0042\u0053");_agad .LE =_bcac .Get ("\u004c\u0045");_agad .IC =_bcac .Get ("\u0049\u0043");_agad .LL =_bcac .Get ("\u004c\u004c");
_agad .LLE =_bcac .Get ("\u004c\u004c\u0045");_agad .Cap =_bcac .Get ("\u0043\u0061\u0070");_agad .IT =_bcac .Get ("\u0049\u0054");_agad .LLO =_bcac .Get ("\u004c\u004c\u004f");_agad .CP =_bcac .Get ("\u0043\u0050");_agad .Measure =_bcac .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_agad .CO =_bcac .Get ("\u0043\u004f");return &_agad ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_abg *PdfColorspaceSpecialPattern )ToPdfObject ()_fe .PdfObject {if _abg .UnderlyingCS ==nil {return _fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dgbg :=_fe .MakeArray (_fe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dgbg .Append (_abg .UnderlyingCS .ToPdfObject ());
if _abg ._gdgc !=nil {_abg ._gdgc .PdfObject =_dgbg ;return _abg ._gdgc ;};return _dgbg ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cfdc *PdfPage )error ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ebbb :=NewPdfAnnotation ();_adb :=&PdfAnnotationInk {};_adb .PdfAnnotation =_ebbb ;_adb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebbb .SetContext (_adb );return _adb ;};func _gaade (_cacd _fe .PdfObject )(*PdfColorspaceICCBased ,error ){_cfecf :=&PdfColorspaceICCBased {};
if _dedbd ,_eaee :=_cacd .(*_fe .PdfIndirectObject );_eaee {_cfecf ._beecb =_dedbd ;};_cacd =_fe .TraceToDirectObject (_cacd );_eabgd ,_gbeca :=_cacd .(*_fe .PdfObjectArray );if !_gbeca {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _eabgd .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_cacd =_fe .TraceToDirectObject (_eabgd .Get (0));_fbec ,_gbeca :=_cacd .(*_fe .PdfObjectName );
if !_gbeca {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fbec !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cacd =_eabgd .Get (1);_eedd ,_gbeca :=_fe .GetStream (_cacd );if !_gbeca {_df .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cacd );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ebeb :=_eedd .PdfObjectDictionary ;_bgec ,_gbeca :=_ebeb .Get ("\u004e").(*_fe .PdfObjectInteger );
if !_gbeca {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bgec !=1&&*_bgec !=3&&*_bgec !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cfecf .N =int (*_bgec );if _bada :=_ebeb .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bada !=nil {_fbba ,_aeac :=NewPdfColorspaceFromPdfObject (_bada );if _aeac !=nil {return nil ,_aeac ;};_cfecf .Alternate =_fbba ;};if _eddd :=_ebeb .Get ("\u0052\u0061\u006eg\u0065");
_eddd !=nil {_eddd =_fe .TraceToDirectObject (_eddd );_bgfg ,_fdfac :=_eddd .(*_fe .PdfObjectArray );if !_fdfac {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bgfg .Len ()!=2*_cfecf .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_faad ,_bcba :=_bgfg .GetAsFloat64Slice ();if _bcba !=nil {return nil ,_bcba ;};_cfecf .Range =_faad ;}else {_cfecf .Range =make ([]float64 ,2*_cfecf .N );for _abcb :=0;_abcb < _cfecf .N ;_abcb ++{_cfecf .Range [2*_abcb ]=0.0;_cfecf .Range [2*_abcb +1]=1.0;
};};if _caaf :=_ebeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_caaf !=nil {_faggc ,_eefab :=_caaf .(*_fe .PdfObjectStream );if !_eefab {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cfecf .Metadata =_faggc ;};_cdafc ,_agef :=_fe .DecodeStream (_eedd );if _agef !=nil {return nil ,_agef ;};_cfecf .Data =_cdafc ;_cfecf ._gbfg =_eedd ;return _cfecf ,nil ;};func (_bfeba *PdfWriter )writeObject (_dcdfc int ,_baacd _fe .PdfObject ){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_dcdfc );
if _caaae ,_ecdbg :=_baacd .(*_fe .PdfIndirectObject );_ecdbg {_bfeba ._bdaaa [_dcdfc ]=crossReference {Type :1,Offset :_bfeba ._acfae ,Generation :_caaae .GenerationNumber };_fccce :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcdfc );
if _dggda ,_bggdf :=_caaae .PdfObject .(*pdfSignDictionary );_bggdf {_dggda ._bfceb =_bfeba ._acfae +int64 (len (_fccce ));};if _caaae .PdfObject ==nil {_df .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_caaae .PdfObject =_fe .MakeNull ();};_fccce +=_caaae .PdfObject .WriteString ();_fccce +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bfeba .writeString (_fccce );return ;};if _geab ,_cgefa :=_baacd .(*_fe .PdfObjectStream );_cgefa {_bfeba ._bdaaa [_dcdfc ]=crossReference {Type :1,Offset :_bfeba ._acfae ,Generation :_geab .GenerationNumber };
_bdbdg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcdfc );_bdbdg +=_geab .PdfObjectDictionary .WriteString ();_bdbdg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bfeba .writeString (_bdbdg );if _geab .Lazy {_dddge ,_bafd :=_dc .ReadFile (_geab .TempFile );
if _bafd !=nil {_df .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_geab .TempFile );return ;};_bfeba .writeBytes (_dddge );
_dc .Remove (_geab .TempFile );}else {_bfeba .writeBytes (_geab .Stream );};_bfeba .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _agcbfe ,_bbdd :=_baacd .(*_fe .PdfObjectStreams );
_bbdd {_bfeba ._bdaaa [_dcdfc ]=crossReference {Type :1,Offset :_bfeba ._acfae ,Generation :_agcbfe .GenerationNumber };_beagb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcdfc );var _facaf []string ;var _ddead string ;var _dffdc int64 ;
for _daccb ,_febac :=range _agcbfe .Elements (){_gcacb ,_eabfa :=_febac .(*_fe .PdfIndirectObject );if !_eabfa {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_dcdfc ,_febac );
continue ;};_fgcfa :=_gcacb .PdfObject .WriteString ()+"\u0020";_ddead =_ddead +_fgcfa ;_facaf =append (_facaf ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_gcacb .ObjectNumber ,_dffdc ));_bfeba ._bdaaa [int (_gcacb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_dcdfc ,Index :_daccb };
_dffdc =_dffdc +int64 (len ([]byte (_fgcfa )));};_bddcff :=_bf .Join (_facaf ,"\u0020")+"\u0020";_agcfe :=_fe .NewFlateEncoder ();_dagdb :=_agcfe .MakeStreamDict ();_dagdb .Set (_fe .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fe .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_adcba :=int64 (_agcbfe .Len ());_dagdb .Set (_fe .PdfObjectName ("\u004e"),_fe .MakeInteger (_adcba ));_adggde :=int64 (len (_bddcff ));_dagdb .Set (_fe .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fe .MakeInteger (_adggde ));_aaaec ,_ :=_agcfe .EncodeBytes ([]byte (_bddcff +_ddead ));
_edbge :=int64 (len (_aaaec ));_dagdb .Set (_fe .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fe .MakeInteger (_edbge ));_beagb +=_dagdb .WriteString ();_beagb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bfeba .writeString (_beagb );
_bfeba .writeBytes (_aaaec );_bfeba .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bfeba .writeString (_baacd .WriteString ());};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_degcg *_ce .Document )error ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fba *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfdd :=vals [0];if _gfdd < 0.0||_gfdd > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfdd );
return nil ,ErrColorOutOfRange ;};_gedf :=vals [1];if _gedf < 0.0||_gedf > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfdd );return nil ,ErrColorOutOfRange ;
};_dcgg :=vals [2];if _dcgg < 0.0||_dcgg > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfdd );return nil ,ErrColorOutOfRange ;};_ebfb :=NewPdfColorDeviceRGB (_gfdd ,_gedf ,_dcgg );
return _ebfb ,nil ;};func _faded (_dgfgc _gd .ReadSeeker ,_gegaab *ReaderOpts ,_degc bool ,_dddad string )(*PdfReader ,error ){if _gegaab ==nil {_gegaab =NewReaderOpts ();};_bfdb :="";if _adeag ,_cbbec :=_dgfgc .(*_dc .File );_cbbec {_bfdb =_adeag .Name ();
};_dfcdf :=*_gegaab ;_dgcgc :=&PdfReader {_afgaf :_dgfgc ,_gdacb :map[_fe .PdfObject ]struct{}{},_afac :_bccgb (),_feega :_gegaab .LazyLoad ,_gdbb :_gegaab .ComplianceMode ,_cfbeg :_degc ,_gdfde :&_dfcdf ,_cdega :_bfdb };_fefcb ,_eacbe :=_eefge ("\u0072");
if _eacbe !=nil {return nil ,_eacbe ;};_eacbe =_ae .Track (_fefcb ,_dddad ,_dgcgc ._cdega );if _eacbe !=nil {return nil ,_eacbe ;};_dgcgc ._ccfdg =_fefcb ;var _daea *_fe .PdfParser ;if !_dgcgc ._gdbb {_daea ,_eacbe =_fe .NewParser (_dgfgc );}else {_daea ,_eacbe =_fe .NewCompliancePdfParser (_dgfgc );
};if _eacbe !=nil {return nil ,_eacbe ;};_dgcgc ._gabca =_daea ;_egbgd ,_eacbe :=_dgcgc .IsEncrypted ();if _eacbe !=nil {return nil ,_eacbe ;};if !_egbgd {_eacbe =_dgcgc .loadStructure ();if _eacbe !=nil {return nil ,_eacbe ;};}else if _degc {_adade ,_cggf :=_dgcgc .Decrypt ([]byte (_gegaab .Password ));
if _cggf !=nil {return nil ,_cggf ;};if !_adade {return nil ,_bbc .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_dgcgc ._affbg =make (map[*PdfReader ]*PdfReader );_dgcgc ._fgfed =make ([]*PdfReader ,_daea .GetRevisionNumber ());return _dgcgc ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fe .PdfObjectArray ;_acag *Image ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gedgde *_fe .PdfObjectDictionary ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_bbaa *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_edgfb *PdfShading )GetContainingPdfObject ()_fe .PdfObject {return _edgfb ._gbaea };

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fe .PdfObject ;PreserveRB _fe .PdfObject ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dabc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dabc .UnderlyingCS .GetNumComponents ();};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gcade *PdfPageResources )AddExtGState (gsName _fe .PdfObjectName ,gsDict _fe .PdfObject )error {if _gcade .ExtGState ==nil {_gcade .ExtGState =_fe .MakeDict ();};_dfge :=_gcade .ExtGState ;_gcedg ,_bgafe :=_fe .TraceToDirectObject (_dfge ).(*_fe .PdfObjectDictionary );
if !_bgafe {_df .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dfge ,_fe .TraceToDirectObject (_dfge ));
return _fe .ErrTypeError ;};_gcedg .Set (gsName ,gsDict );return nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fe .PdfObject )(*PdfFilespec ,error ){_dbgb :=&PdfFilespec {};var _faccc *_fe .PdfObjectDictionary ;if _fege ,_bddcdd :=_fe .GetIndirect (obj );_bddcdd {_dbgb ._ccdd =_fege ;_fcadb ,_gbggc :=_fe .GetDict (_fege .PdfObject );
if !_gbggc {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fe .ErrTypeError ;};_faccc =_fcadb ;}else if _bdef ,_gbad :=_fe .GetDict (obj );
_gbad {_dbgb ._ccdd =_bdef ;_faccc =_bdef ;}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fe .ErrTypeError ;};if _faccc ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bbc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ebaef :=_faccc .Get ("\u0054\u0079\u0070\u0065");_ebaef !=nil {_bgada ,_agaf :=_ebaef .(*_fe .PdfObjectName );if !_agaf {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ebaef );
}else {if *_bgada !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bgada );
};};};if _eegf :=_faccc .Get ("\u0046\u0053");_eegf !=nil {_dbgb .FS =_eegf ;};if _dcbc :=_faccc .Get ("\u0046");_dcbc !=nil {_dbgb .F =_dcbc ;};if _ccec :=_faccc .Get ("\u0055\u0046");_ccec !=nil {_dbgb .UF =_ccec ;};if _gbffe :=_faccc .Get ("\u0044\u004f\u0053");
_gbffe !=nil {_dbgb .DOS =_gbffe ;};if _ddfga :=_faccc .Get ("\u004d\u0061\u0063");_ddfga !=nil {_dbgb .Mac =_ddfga ;};if _fbaeg :=_faccc .Get ("\u0055\u006e\u0069\u0078");_fbaeg !=nil {_dbgb .Unix =_fbaeg ;};if _dbeffc :=_faccc .Get ("\u0049\u0044");_dbeffc !=nil {_dbgb .ID =_dbeffc ;
};if _dbb :=_faccc .Get ("\u0056");_dbb !=nil {_dbgb .V =_dbb ;};if _cafbd :=_faccc .Get ("\u0045\u0046");_cafbd !=nil {_dbgb .EF =_cafbd ;};if _cbbgg :=_faccc .Get ("\u0052\u0046");_cbbgg !=nil {_dbgb .RF =_cbbgg ;};if _gbcf :=_faccc .Get ("\u0044\u0065\u0073\u0063");
_gbcf !=nil {_dbgb .Desc =_gbcf ;};if _edde :=_faccc .Get ("\u0043\u0049");_edde !=nil {_dbgb .CI =_edde ;};if _daec :=_faccc .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_daec !=nil {_dbgb .AFRelationship =_daec ;
};return _dbgb ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_gcada *pdfSignDictionary )GetSubFilter ()string {_cacec :=_gcada .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _cacec ==nil {return "";};if _ggeda ,_cbae :=_fe .GetNameVal (_cacec );_cbae {return _ggeda ;};return "";};

// ToPdfObject returns a PDF object representation of the outline.
func (_afdfe *Outline )ToPdfObject ()_fe .PdfObject {return _afdfe .ToPdfOutline ().ToPdfObject ()};func _bgeab (_fgbga *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_fgbga }};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_efdf _gd .ReadSeeker ;_gcea *_fe .PdfParser ;_cca *PdfReader ;Reader *PdfReader ;_gdf []*PdfPage ;_fdcb *PdfAcroForm ;_fdade *DSS ;_gcb *Permissions ;_effa _fe .XrefTable ;_baga int64 ;_bdbf int ;_baeg []_fe .PdfObject ;_dgg map[_fe .PdfObject ]struct{};
_cdbb map[_fe .PdfObject ]int64 ;_abac map[_fe .PdfObject ]struct{};_gdcb map[_fe .PdfObject ]struct{};_ggcf int64 ;_abec bool ;_fgge string ;_fbfe *EncryptOptions ;_dfb *PdfInfo ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_caeg *PdfFieldButton )IsCheckbox ()bool {return _caeg .GetType ()==ButtonTypeCheckbox };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_dbfab *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=_dbfab .GetNumComponents (){return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgdda ,_fcfb :=_fe .GetNumbersAsFloat (objects );
if _fcfb !=nil {return nil ,_fcfb ;};return _dbfab .ColorFromFloats (_cgdda );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_eebab *PdfTilingPattern )ToPdfObject ()_fe .PdfObject {_eebab .PdfPattern .ToPdfObject ();_cdffb :=_eebab .getDict ();if _eebab .PaintType !=nil {_cdffb .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_eebab .PaintType );};if _eebab .TilingType !=nil {_cdffb .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eebab .TilingType );
};if _eebab .BBox !=nil {_cdffb .Set ("\u0042\u0042\u006f\u0078",_eebab .BBox .ToPdfObject ());};if _eebab .XStep !=nil {_cdffb .Set ("\u0058\u0053\u0074e\u0070",_eebab .XStep );};if _eebab .YStep !=nil {_cdffb .Set ("\u0059\u0053\u0074e\u0070",_eebab .YStep );
};if _eebab .Resources !=nil {_cdffb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eebab .Resources .ToPdfObject ());};if _eebab .Matrix !=nil {_cdffb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eebab .Matrix );};return _eebab ._aegcc ;};

// String returns a string describing the font descriptor.
func (_bgagg *PdfFontDescriptor )String ()string {var _bfgg []string ;if _bgagg .FontName !=nil {_bfgg =append (_bfgg ,_bgagg .FontName .String ());};if _bgagg .FontFamily !=nil {_bfgg =append (_bfgg ,_bgagg .FontFamily .String ());};if _bgagg .fontFile !=nil {_bfgg =append (_bfgg ,_bgagg .fontFile .String ());
};if _bgagg ._ffbag !=nil {_bfgg =append (_bfgg ,_bgagg ._ffbag .String ());};_bfgg =append (_bfgg ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bgagg .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_bf .Join (_bfgg ,"\u002c\u0020"));
};func (_edfaa *PdfWriter )writeBytes (_aabeb []byte ){if _edfaa ._bfebc !=nil {return ;};_fagb ,_acage :=_edfaa ._efdfa .Write (_aabeb );_edfaa ._acfae +=int64 (_fagb );_edfaa ._bfebc =_acage ;};func _ebgfa (_dbaae *_fe .PdfObjectDictionary )(*PdfShadingType6 ,error ){_cdcdd :=PdfShadingType6 {};
_cffab :=_dbaae .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cffab ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eacbf ,_efecbc :=_cffab .(*_fe .PdfObjectInteger );if !_efecbc {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cffab );
return nil ,_fe .ErrTypeError ;};_cdcdd .BitsPerCoordinate =_eacbf ;_cffab =_dbaae .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cffab ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eacbf ,_efecbc =_cffab .(*_fe .PdfObjectInteger );if !_efecbc {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cffab );
return nil ,_fe .ErrTypeError ;};_cdcdd .BitsPerComponent =_eacbf ;_cffab =_dbaae .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cffab ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eacbf ,_efecbc =_cffab .(*_fe .PdfObjectInteger );if !_efecbc {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cffab );
return nil ,_fe .ErrTypeError ;};_cdcdd .BitsPerComponent =_eacbf ;_cffab =_dbaae .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cffab ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcefb ,_efecbc :=_cffab .(*_fe .PdfObjectArray );if !_efecbc {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cffab );
return nil ,_fe .ErrTypeError ;};_cdcdd .Decode =_fcefb ;if _adecc :=_dbaae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_adecc !=nil {_cdcdd .Function =[]PdfFunction {};if _fbbd ,_afcfc :=_adecc .(*_fe .PdfObjectArray );_afcfc {for _ ,_cfaf :=range _fbbd .Elements (){_bgddg ,_babag :=_cebb (_cfaf );
if _babag !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_babag );return nil ,_babag ;};_cdcdd .Function =append (_cdcdd .Function ,_bgddg );
};}else {_ddfa ,_agec :=_cebb (_adecc );if _agec !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agec );return nil ,_agec ;};_cdcdd .Function =append (_cdcdd .Function ,_ddfa );
};};return &_cdcdd ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ffcg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _ggdef []float64 ;for _ffdbf :=0;_ffdbf < _ffcg .GetNumComponents ();_ffdbf ++{_ggdef =append (_ggdef ,0.0,1.0);};return _ggdef ;};func (_fcb *PdfReader )newPdfAnnotationCircleFromDict (_effe *_fe .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cabe :=PdfAnnotationCircle {};
_daeb ,_fbd :=_fcb .newPdfAnnotationMarkupFromDict (_effe );if _fbd !=nil {return nil ,_fbd ;};_cabe .PdfAnnotationMarkup =_daeb ;_cabe .BS =_effe .Get ("\u0042\u0053");_cabe .IC =_effe .Get ("\u0049\u0043");_cabe .BE =_effe .Get ("\u0042\u0045");_cabe .RD =_effe .Get ("\u0052\u0044");
return &_cabe ,nil ;};func (_gdbd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_egagc *_fe .PdfObjectDictionary ;Type *_fe .PdfObjectName ;TransformMethod *_fe .PdfObjectName ;TransformParams _fe .PdfObject ;Data _fe .PdfObject ;DigestMethod *_fe .PdfObjectName ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ffb :=NewPdfAction ();_bef :=&PdfActionGoTo {};_bef .PdfAction =_ffb ;_ffb .SetContext (_bef );return _bef ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gd .ReadSeeker )(*PdfReader ,error ){const _dbca ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _faded (rs ,&ReaderOpts {LazyLoad :true },false ,_dbca );
};func (_effbf fontCommon )isCIDFont ()bool {if _effbf ._cdgfg ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_effbf );
};_fbfc :=false ;switch _effbf ._cdgfg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fbfc =true ;};_df .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fbfc ,_effbf );
return _fbfc ;};

// PrintClip returns the value of the printClip.
func (_befbc *ViewerPreferences )PrintClip ()PageBoundary {return _befbc ._dgaec };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfcag *PdfShadingType4 )ToPdfObject ()_fe .PdfObject {_bfcag .PdfShading .ToPdfObject ();_aebde ,_cfccf :=_bfcag .getShadingDict ();if _cfccf !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfcag .BitsPerCoordinate !=nil {_aebde .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfcag .BitsPerCoordinate );};if _bfcag .BitsPerComponent !=nil {_aebde .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfcag .BitsPerComponent );
};if _bfcag .BitsPerFlag !=nil {_aebde .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfcag .BitsPerFlag );};if _bfcag .Decode !=nil {_aebde .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfcag .Decode );};if _bfcag .Function !=nil {if len (_bfcag .Function )==1{_aebde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfcag .Function [0].ToPdfObject ());
}else {_ddbg :=_fe .MakeArray ();for _ ,_cefaad :=range _bfcag .Function {_ddbg .Append (_cefaad .ToPdfObject ());};_aebde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddbg );};};return _bfcag ._gbaea ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_accb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_gabd :=range pages {_gabd =_gabd .Duplicate ();_dacdab (_gabd );_accb ._gdf =append (_accb ._gdf ,_gabd );};};

// GetCatalogLanguage gets catalog Language object.
func (_fbceg *PdfReader )GetCatalogLanguage ()(_fe .PdfObject ,bool ){if _fbceg ._bbfec ==nil {return nil ,false ;};_bgdae :=_fbceg ._bbfec .Get ("\u004c\u0061\u006e\u0067");return _bgdae ,_bgdae !=nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cebg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ecfcd *Image )SetSamples (samples []uint32 ){if _ecfcd .BitsPerComponent < 8{samples =_ecfcd .samplesAddPadding (samples );};_cgfag :=_dfc .ResampleUint32 (samples ,int (_ecfcd .BitsPerComponent ),8);_ceebf :=make ([]byte ,len (_cgfag ));for _cefaa ,_aefe :=range _cgfag {_ceebf [_cefaa ]=byte (_aefe );
};_ecfcd .Data =_ceebf ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fe .PdfObjectStream )(*XObjectImage ,error ){_aadf :=&XObjectImage {};_aadf ._daceg =stream ;_aagbfa :=*(stream .PdfObjectDictionary );_ebggce ,_ecgfa :=_fe .NewEncoderFromStream (stream );if _ecgfa !=nil {return nil ,_ecgfa ;
};_aadf .Filter =_ebggce ;if _gffcd :=_fe .TraceToDirectObject (_aagbfa .Get ("\u0057\u0069\u0064t\u0068"));_gffcd !=nil {_bcgdcf ,_cbfca :=_gffcd .(*_fe .PdfObjectInteger );if !_cbfca {return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_geage :=int64 (*_bcgdcf );_aadf .Width =&_geage ;}else {return nil ,_bbc .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _acfaef :=_fe .TraceToDirectObject (_aagbfa .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_acfaef !=nil {_cdcae ,_dggfd :=_acfaef .(*_fe .PdfObjectInteger );if !_dggfd {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aceead :=int64 (*_cdcae );
_aadf .Height =&_aceead ;}else {return nil ,_bbc .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gdefa :=_fe .TraceToDirectObject (_aagbfa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gdefa !=nil {_fdadee ,_gcfa :=NewPdfColorspaceFromPdfObject (_gdefa );if _gcfa !=nil {return nil ,_gcfa ;};_aadf .ColorSpace =_fdadee ;}else {_df .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_aadf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _aeeebf :=_fe .TraceToDirectObject (_aagbfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_aeeebf !=nil {_bbbad ,_fbbdf :=_aeeebf .(*_fe .PdfObjectInteger );
if !_fbbdf {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bcbce :=int64 (*_bbbad );_aadf .BitsPerComponent =&_bcbce ;};_aadf .Intent =_aagbfa .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_aadf .ImageMask =_aagbfa .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_aadf .Mask =_aagbfa .Get ("\u004d\u0061\u0073\u006b");_aadf .Decode =_aagbfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_aadf .Interpolate =_aagbfa .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_aadf .Alternatives =_aagbfa .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_aadf .SMask =_aagbfa .Get ("\u0053\u004d\u0061s\u006b");_aadf .SMaskInData =_aagbfa .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_aadf .Matte =_aagbfa .Get ("\u004d\u0061\u0074t\u0065");_aadf .Name =_aagbfa .Get ("\u004e\u0061\u006d\u0065");_aadf .StructParent =_aagbfa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_aadf .ID =_aagbfa .Get ("\u0049\u0044");
_aadf .OPI =_aagbfa .Get ("\u004f\u0050\u0049");_aadf .Metadata =_aagbfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_aadf .OC =_aagbfa .Get ("\u004f\u0043");_aadf .Stream =stream .Stream ;return _aadf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cbaf *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gabc :=vals [0];if _gabc < 0.0||_gabc > 100.0{_df .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_gabc );
return nil ,ErrColorOutOfRange ;};_bgcc :=vals [1];_bbbb :=float64 (-100);_dafc :=float64 (100);if len (_cbaf .Range )> 1{_bbbb =_cbaf .Range [0];_dafc =_cbaf .Range [1];};if _bgcc < _bbbb ||_bgcc > _dafc {_df .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bgcc ,_bbbb ,_dafc );
return nil ,ErrColorOutOfRange ;};_bede :=vals [2];_ebgc :=float64 (-100);_deaf :=float64 (100);if len (_cbaf .Range )> 3{_ebgc =_cbaf .Range [2];_deaf =_cbaf .Range [3];};if _bede < _ebgc ||_bede > _deaf {_df .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bede ,_ebgc ,_deaf );
return nil ,ErrColorOutOfRange ;};_bffc :=NewPdfColorLab (_gabc ,_bgcc ,_bede );return _bffc ,nil ;};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// IsColored specifies if the pattern is colored.
func (_affea *PdfTilingPattern )IsColored ()bool {if _affea .PaintType !=nil &&*_affea .PaintType ==1{return true ;};return false ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bbcgf *PdfWriter )SetOptimizer (optimizer Optimizer ){_bbcgf ._cbcfa =optimizer };

// SetPrintScaling sets the value of the printScaling.
func (_gecdf *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_gecdf ._aagge =printScaling ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dgfbb DefaultImageHandler )NewGrayImageFromGoImage (goimg _ab .Image )(*Image ,error ){_afcfb :=goimg .Bounds ();_dacdbc :=&Image {Width :int64 (_afcfb .Dx ()),Height :int64 (_afcfb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fdafb :=goimg .(type ){case *_ab .Gray :if len (_fdafb .Pix )!=_afcfb .Dx ()*_afcfb .Dy (){_fdcfe ,_bfced :=_af .GrayConverter .Convert (goimg );
if _bfced !=nil {return nil ,_bfced ;};_dacdbc .Data =_fdcfe .Pix ();}else {_dacdbc .Data =_fdafb .Pix ;};case *_ab .Gray16 :_dacdbc .BitsPerComponent =16;if len (_fdafb .Pix )!=_afcfb .Dx ()*_afcfb .Dy ()*2{_fbegc ,_dfcba :=_af .Gray16Converter .Convert (goimg );
if _dfcba !=nil {return nil ,_dfcba ;};_dacdbc .Data =_fbegc .Pix ();}else {_dacdbc .Data =_fdafb .Pix ;};case _af .Image :_gagg :=_fdafb .Base ();if _gagg .ColorComponents ==1{_dacdbc .BitsPerComponent =int64 (_gagg .BitsPerComponent );_dacdbc .Data =_gagg .Data ;
return _dacdbc ,nil ;};_abcea ,_cbgcf :=_af .GrayConverter .Convert (goimg );if _cbgcf !=nil {return nil ,_cbgcf ;};_dacdbc .Data =_abcea .Pix ();default:_edaba ,_geee :=_af .GrayConverter .Convert (goimg );if _geee !=nil {return nil ,_geee ;};_dacdbc .Data =_edaba .Pix ();
};return _dacdbc ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_ddbed *PdfFont )IsSimple ()bool {_ ,_afdad :=_ddbed ._aeacd .(*pdfFontSimple );return _afdad };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_eedc *PdfFieldButton )IsPush ()bool {return _eedc .GetType ()==ButtonTypePush };func (_ddafb *PdfWriter )adjustXRefAffectedVersion (_bgfbg bool ){if _bgfbg &&_ddafb ._gdbffa .Major ==1&&_ddafb ._gdbffa .Minor < 5{_ddafb ._gdbffa .Minor =5;};};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_aeefaa *PdfPageResources )HasColorspaceByName (keyName _fe .PdfObjectName )bool {_eafca ,_faddg :=_aeefaa .GetColorspaces ();if _faddg !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_faddg );
return false ;};if _eafca ==nil {return false ;};_ ,_adadb :=_eafca .Colorspaces [string (keyName )];return _adadb ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fefcc *PdfReader )GetIndirectObjectByNumber (number int )(_fe .PdfObject ,error ){_gccc ,_cgbec :=_fefcc ._gabca .LookupByNumber (number );return _gccc ,_cgbec ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cfecd :=PdfColorLab {l ,a ,b };return &_cfecd };

// SetDuplex sets the value of the duplex.
func (_bcbab *ViewerPreferences )SetDuplex (duplex Duplex ){_bcbab ._efecf =duplex };func (_bccf *PdfReader )newPdfActionGotoEFromDict (_dedb *_fe .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gfd ,_bdg :=_cdb (_dedb .Get ("\u0046"));if _bdg !=nil {return nil ,_bdg ;
};return &PdfActionGoToE {D :_dedb .Get ("\u0044"),NewWindow :_dedb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dedb .Get ("\u0054"),F :_gfd },nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func (_cfefd *PdfReader )traverseObjectData (_dgbeg _fe .PdfObject )error {return _fe .ResolveReferencesDeep (_dgbeg ,_cfefd ._gdacb );};

// SetAlpha sets the alpha layer for the image.
func (_bgced *Image )SetAlpha (alpha []byte ){_bgced ._dbgaf =alpha };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ddff *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddff .AlternateSpace ==nil {return nil ,_bbc .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ddff .AlternateSpace .ColorToRGB (color );};

// ToPdfObject returns the PDF representation of the function.
func (_dfeae *PdfFunctionType0 )ToPdfObject ()_fe .PdfObject {if _dfeae ._fgbbd ==nil {_dfeae ._fgbbd =&_fe .PdfObjectStream {};};_dabfc :=_fe .MakeDict ();_dabfc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (0));
_aggf :=&_fe .PdfObjectArray {};for _ ,_aeage :=range _dfeae .Domain {_aggf .Append (_fe .MakeFloat (_aeage ));};_dabfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aggf );_ggeab :=&_fe .PdfObjectArray {};for _ ,_dcebe :=range _dfeae .Range {_ggeab .Append (_fe .MakeFloat (_dcebe ));
};_dabfc .Set ("\u0052\u0061\u006eg\u0065",_ggeab );_bcab :=&_fe .PdfObjectArray {};for _ ,_aacdc :=range _dfeae .Size {_bcab .Append (_fe .MakeInteger (int64 (_aacdc )));};_dabfc .Set ("\u0053\u0069\u007a\u0065",_bcab );_dabfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fe .MakeInteger (int64 (_dfeae .BitsPerSample )));
if _dfeae .Order !=1{_dabfc .Set ("\u004f\u0072\u0064e\u0072",_fe .MakeInteger (int64 (_dfeae .Order )));};_dabfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_dfeae ._abdcef ))));_dfeae ._fgbbd .Stream =_dfeae ._abdcef ;_dfeae ._fgbbd .PdfObjectDictionary =_dabfc ;
return _dfeae ._fgbbd ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ebggc *PdfPageResources )SetColorspaceByName (keyName _fe .PdfObjectName ,cs PdfColorspace )error {_egdcc ,_efegf :=_ebggc .GetColorspaces ();if _efegf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_efegf );
return _efegf ;};if _egdcc ==nil {_egdcc =NewPdfPageResourcesColorspaces ();_ebggc .SetColorSpace (_egdcc );};_egdcc .Set (keyName ,cs );return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aece *PdfPattern )GetContainingPdfObject ()_fe .PdfObject {return _aece ._aegcc };

// ToPdfObject implements interface PdfModel.
func (_acdb *PdfAnnotationFreeText )ToPdfObject ()_fe .PdfObject {_acdb .PdfAnnotation .ToPdfObject ();_eac :=_acdb ._efg ;_fedbd :=_eac .PdfObject .(*_fe .PdfObjectDictionary );_acdb .PdfAnnotationMarkup .appendToPdfDictionary (_fedbd );_fedbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fedbd .SetIfNotNil ("\u0044\u0041",_acdb .DA );_fedbd .SetIfNotNil ("\u0051",_acdb .Q );_fedbd .SetIfNotNil ("\u0052\u0043",_acdb .RC );_fedbd .SetIfNotNil ("\u0044\u0053",_acdb .DS );_fedbd .SetIfNotNil ("\u0043\u004c",_acdb .CL );_fedbd .SetIfNotNil ("\u0049\u0054",_acdb .IT );
_fedbd .SetIfNotNil ("\u0042\u0045",_acdb .BE );_fedbd .SetIfNotNil ("\u0052\u0044",_acdb .RD );_fedbd .SetIfNotNil ("\u0042\u0053",_acdb .BS );_fedbd .SetIfNotNil ("\u004c\u0045",_acdb .LE );return _eac ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _abb .Time ;ModTime _abb .Time ;};

// Direction represents the predominant reading order for text.
type Direction string ;

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fe .PdfObjectDictionary )(*PdfPageResources ,error ){_afbdf :=NewPdfPageResources ();if _cagf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cagf !=nil {_afbdf .ExtGState =_cagf ;};if _fgcbg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fgcbg !=nil &&!_fe .IsNullObject (_fgcbg ){_afbdf .ColorSpace =_fgcbg ;};if _cbdbf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cbdbf !=nil {_afbdf .Pattern =_cbdbf ;};if _bcfbb :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bcfbb !=nil {_afbdf .Shading =_bcfbb ;
};if _efeb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_efeb !=nil {_afbdf .XObject =_efeb ;};if _gfgd :=_fe .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_gfgd !=nil {_afbdf .Font =_gfgd ;};if _febfb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_febfb !=nil {_afbdf .ProcSet =_febfb ;};if _fdbef :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fdbef !=nil {_afbdf .Properties =_fdbef ;};return _afbdf ,nil ;};var (CourierName =_ag .CourierName ;CourierBoldName =_ag .CourierBoldName ;
CourierObliqueName =_ag .CourierObliqueName ;CourierBoldObliqueName =_ag .CourierBoldObliqueName ;HelveticaName =_ag .HelveticaName ;HelveticaBoldName =_ag .HelveticaBoldName ;HelveticaObliqueName =_ag .HelveticaObliqueName ;HelveticaBoldObliqueName =_ag .HelveticaBoldObliqueName ;
SymbolName =_ag .SymbolName ;ZapfDingbatsName =_ag .ZapfDingbatsName ;TimesRomanName =_ag .TimesRomanName ;TimesBoldName =_ag .TimesBoldName ;TimesItalicName =_ag .TimesItalicName ;TimesBoldItalicName =_ag .TimesBoldItalicName ;);

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gbf .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_fe .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_fe .MakeInteger (int64 (permission )),V :_fe .MakeName ("\u0031\u002e\u0032")};
};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gdbde *PdfPage )Size ()(float64 ,float64 ,error ){_afdca ,_cead :=_gdbde .GetMediaBox ();if _cead !=nil {return 0,0,_cead ;};_gedb ,_bdbdc :=_afdca .Width (),_afdca .Height ();_bcagd ,_cead :=_gdbde .GetRotate ();if _cead !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cead .Error ());
};if _adeg :=_bcagd ;_adeg %360!=0&&_adeg %90==0{if _abbf :=(360+_adeg %360)%360;_abbf ==90||_abbf ==270{_gedb ,_bdbdc =_bdbdc ,_gedb ;};};return _gedb ,_bdbdc ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bdcc *pdfFontSimple )SetEncoder (encoder _cbg .TextEncoder ){_bdcc ._dcdgc =encoder };

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ecfa *PdfField )GetContainingPdfObject ()_fe .PdfObject {return _ecfa ._ddfe };

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_baegfb *PdfReader )GetNamedDestinations ()(_fe .PdfObject ,error ){_bcbcd :=_fe .ResolveReference (_baegfb ._bbfec .Get ("\u0044\u0065\u0073t\u0073"));if _bcbcd ==nil {return nil ,nil ;};if !_baegfb ._feega {_bebe :=_baegfb .traverseObjectData (_bcbcd );
if _bebe !=nil {return nil ,_bebe ;};};return _bcbcd ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dgbda *PdfPageResources )GetPatternByName (keyName _fe .PdfObjectName )(*PdfPattern ,bool ){if _dgbda .Pattern ==nil {return nil ,false ;};_agab ,_bdaa :=_fe .TraceToDirectObject (_dgbda .Pattern ).(*_fe .PdfObjectDictionary );if !_bdaa {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgbda .Pattern );
return nil ,false ;};if _cbbc :=_agab .Get (keyName );_cbbc !=nil {_gcaaff ,_dbebd :=_agde (_cbbc );if _dbebd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dbebd );
return nil ,false ;};return _gcaaff ,true ;};return nil ,false ;};func (_fgggb *PdfAcroForm )fill (_bfcabf FieldValueProvider ,_cbcee FieldAppearanceGenerator )error {if _fgggb ==nil {return nil ;};_fegeeg ,_cfece :=_bfcabf .FieldValues ();if _cfece !=nil {return _cfece ;
};for _ ,_fdgdc :=range _fgggb .AllFields (){_cafac :=_fdgdc .PartialName ();_ccgcg ,_ceeee :=_fegeeg [_cafac ];if !_ceeee {if _bfbae ,_dgdba :=_fdgdc .FullName ();_dgdba ==nil {_ccgcg ,_ceeee =_fegeeg [_bfbae ];};};if !_ceeee {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cafac );
continue ;};if _fddaf :=_dead (_fdgdc ,_ccgcg );_fddaf !=nil {return _fddaf ;};if _cbcee ==nil {continue ;};for _ ,_gacdb :=range _fdgdc .Annotations {_dgdd ,_fagaa :=_cbcee .GenerateAppearanceDict (_fgggb ,_fdgdc ,_gacdb );if _fagaa !=nil {return _fagaa ;
};_gacdb .AP =_dgdd ;_gacdb .ToPdfObject ();};};return nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_faef *PdfReader )IsEncrypted ()(bool ,error ){return _faef ._gabca .IsEncrypted ()};

// SetPrintClip sets the value of the printClip.
func (_bcbad *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_bcbad ._dgaec =printClip };

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bbfba *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdafe ,_bfdg :=color .(*PdfColorCalRGB );if !_bfdg {_df .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfeg :=_cdafe .A ();_afdg :=_cdafe .B ();_beec :=_cdafe .C ();X :=_bbfba .Matrix [0]*_dd .Pow (_dfeg ,_bbfba .Gamma [0])+_bbfba .Matrix [3]*_dd .Pow (_afdg ,_bbfba .Gamma [1])+_bbfba .Matrix [6]*_dd .Pow (_beec ,_bbfba .Gamma [2]);
Y :=_bbfba .Matrix [1]*_dd .Pow (_dfeg ,_bbfba .Gamma [0])+_bbfba .Matrix [4]*_dd .Pow (_afdg ,_bbfba .Gamma [1])+_bbfba .Matrix [7]*_dd .Pow (_beec ,_bbfba .Gamma [2]);Z :=_bbfba .Matrix [2]*_dd .Pow (_dfeg ,_bbfba .Gamma [0])+_bbfba .Matrix [5]*_dd .Pow (_afdg ,_bbfba .Gamma [1])+_bbfba .Matrix [8]*_dd .Pow (_beec ,_bbfba .Gamma [2]);
_gecd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aade :=-0.969256*X +1.875992*Y +0.041556*Z ;_abdc :=0.055648*X +-0.204043*Y +1.057311*Z ;_gecd =_dd .Min (_dd .Max (_gecd ,0),1.0);_aade =_dd .Min (_dd .Max (_aade ,0),1.0);_abdc =_dd .Min (_dd .Max (_abdc ,0),1.0);
return NewPdfColorDeviceRGB (_gecd ,_aade ,_abdc ),nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fe .PdfObject ;GetContainingPdfObject ()_fe .PdfObject ;};

// IsCID returns true if the underlying font is CID.
func (_begab *PdfFont )IsCID ()bool {return _begab .baseFields ().isCIDFont ()};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;BitsPerFlag *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_dcbfc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dcbfc ._eeae ==nil {_dcbfc .GetAnnotations ();};_dcbfc ._eeae =append (_dcbfc ._eeae ,annot );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ebgf :=&PdfAnnotation {};_ebgf ._efg =_fe .MakeIndirectObject (_fe .MakeDict ());return _ebgf ;};

// Clear clears the KValue.
func (_gbag *KValue )Clear (){_gbag ._ebdgf =nil ;_gbag ._ebfce =nil ;_gbag ._cffeed =nil };

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_gbaeb :=&PdfShadingPatternType2 {};_gbaeb .Matrix =_fe .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gbaeb .PdfPattern =&PdfPattern {};_gbaeb .PdfPattern .PatternType =int64 (*_fe .MakeInteger (2));
_gbaeb .PdfPattern ._ecfdd =_gbaeb ;_gbaeb .PdfPattern ._aegcc =_fe .MakeIndirectObject (_fe .MakeDict ());return _gbaeb ;};

// Y returns the value of the yellow component of the color.
func (_cfba *PdfColorDeviceCMYK )Y ()float64 {return _cfba [2]};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_eacd :=&PdfColorspaceDeviceN {};return _eacd };

// GetVersion gets the document version.
func (_abbbag *PdfWriter )GetVersion ()_fe .Version {return _abbbag ._gdbffa };func (_gbdaf *PdfReader )buildNameNodes (_cebac *_fe .PdfIndirectObject ,_dbge map[_fe .PdfObject ]struct{})error {if _cebac ==nil {return nil ;};if _ ,_bagba :=_dbge [_cebac ];
_bagba {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cebac .ObjectNumber );return nil ;};_dbge [_cebac ]=struct{}{};
_aecec ,_fcfc :=_cebac .PdfObject .(*_fe .PdfObjectDictionary );if !_fcfc {return _bbc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _ecbdd ,_abcbbc :=_fe .GetDict (_aecec .Get ("\u0044\u0065\u0073t\u0073"));
_abcbbc {_addc ,_bcecg :=_fe .GetArray (_ecbdd .Get ("\u004b\u0069\u0064\u0073"));if !_bcecg {return _bbc .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_addc );
for _acagf ,_gebg :=range _addc .Elements (){_fccc ,_gfbff :=_fe .GetIndirect (_gebg );if !_gfbff {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_fccc );
return _bbc .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_addc .Set (_acagf ,_fccc );_deecb :=_gbdaf .buildNameNodes (_fccc ,_dbge );if _deecb !=nil {return _deecb ;
};};};if _aebcf ,_fbcb :=_fe .GetDict (_aecec );_fbcb {if !_fe .IsNullObject (_aebcf .Get ("\u004b\u0069\u0064\u0073")){if _fecag ,_cedef :=_fe .GetArray (_aebcf .Get ("\u004b\u0069\u0064\u0073"));_cedef {for _fedeg ,_ggafa :=range _fecag .Elements (){if _fdeee ,_bcbgc :=_fe .GetIndirect (_ggafa );
_bcbgc {_fecag .Set (_fedeg ,_fdeee );_bfcedd :=_gbdaf .buildNameNodes (_fdeee ,_dbge );if _bfcedd !=nil {return _bfcedd ;};};};};};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdba *PdfAnnotationInk )ToPdfObject ()_fe .PdfObject {_cdba .PdfAnnotation .ToPdfObject ();_dfea :=_cdba ._efg ;_fcdb :=_dfea .PdfObject .(*_fe .PdfObjectDictionary );_cdba .PdfAnnotationMarkup .appendToPdfDictionary (_fcdb );_fcdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0049\u006e\u006b"));
_fcdb .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cdba .InkList );_fcdb .SetIfNotNil ("\u0042\u0053",_cdba .BS );return _dfea ;};

// SetDate sets the `M` field of the signature.
func (_ffgac *PdfSignature )SetDate (date _abb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ffgac .M =_fe .MakeString (date .Format (format ));
};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_egacf *VRI )ToPdfObject ()*_fe .PdfObjectDictionary {_cgac :=_fe .MakeDict ();_cgac .SetIfNotNil (_fe .PdfObjectName ("\u0043\u0065\u0072\u0074"),_dgdbf (_egacf .Cert ));_cgac .SetIfNotNil (_fe .PdfObjectName ("\u004f\u0043\u0053\u0050"),_dgdbf (_egacf .OCSP ));
_cgac .SetIfNotNil (_fe .PdfObjectName ("\u0043\u0052\u004c"),_dgdbf (_egacf .CRL ));_cgac .SetIfNotNil ("\u0054\u0055",_egacf .TU );_cgac .SetIfNotNil ("\u0054\u0053",_egacf .TS );return _cgac ;};func (_cfagda *PdfWriter )copyObject (_gbbdf _fe .PdfObject ,_fcefg map[_fe .PdfObject ]_fe .PdfObject ,_dddd map[_fe .PdfObject ]struct{},_aaedd bool )_fe .PdfObject {_cffgae :=!_cfagda ._cgedg &&_dddd !=nil ;
if _fggce ,_abfdgg :=_fcefg [_gbbdf ];_abfdgg {if _cffgae &&!_aaedd {delete (_dddd ,_gbbdf );};return _fggce ;};if _gbbdf ==nil {_efaab :=_fe .MakeNull ();return _efaab ;};_gfgde :=_gbbdf ;switch _bdfbba :=_gbbdf .(type ){case *_fe .PdfObjectArray :_bbbdfd :=_fe .MakeArray ();
_gfgde =_bbbdfd ;_fcefg [_gbbdf ]=_gfgde ;for _ ,_agcee :=range _bdfbba .Elements (){_bbbdfd .Append (_cfagda .copyObject (_agcee ,_fcefg ,_dddd ,_aaedd ));};case *_fe .PdfObjectStreams :_dggbc :=&_fe .PdfObjectStreams {PdfObjectReference :_bdfbba .PdfObjectReference };
_gfgde =_dggbc ;_fcefg [_gbbdf ]=_gfgde ;for _ ,_ecaba :=range _bdfbba .Elements (){_dggbc .Append (_cfagda .copyObject (_ecaba ,_fcefg ,_dddd ,_aaedd ));};case *_fe .PdfObjectStream :_dfffg :=&_fe .PdfObjectStream {Stream :_bdfbba .Stream ,PdfObjectReference :_bdfbba .PdfObjectReference ,Lazy :_bdfbba .Lazy ,TempFile :_bdfbba .TempFile };
_gfgde =_dfffg ;_fcefg [_gbbdf ]=_gfgde ;_dfffg .PdfObjectDictionary =_cfagda .copyObject (_bdfbba .PdfObjectDictionary ,_fcefg ,_dddd ,_aaedd ).(*_fe .PdfObjectDictionary );case *_fe .PdfObjectDictionary :var _fdfbe bool ;if _cffgae &&!_aaedd {if _gafe ,_ :=_fe .GetNameVal (_bdfbba .Get ("\u0054\u0079\u0070\u0065"));
_gafe =="\u0050\u0061\u0067\u0065"{_ ,_ceacd :=_cfagda ._ebaga [_bdfbba ];_aaedd =!_ceacd ;_fdfbe =_aaedd ;};};_gfedf :=_fe .MakeDict ();_gfgde =_gfedf ;_fcefg [_gbbdf ]=_gfgde ;for _ ,_efeec :=range _bdfbba .Keys (){_gfedf .Set (_efeec ,_cfagda .copyObject (_bdfbba .Get (_efeec ),_fcefg ,_dddd ,_aaedd ));
};if _fdfbe {_gfgde =_fe .MakeNull ();_aaedd =false ;};case *_fe .PdfIndirectObject :_gbcbe :=&_fe .PdfIndirectObject {PdfObjectReference :_bdfbba .PdfObjectReference };_gfgde =_gbcbe ;_fcefg [_gbbdf ]=_gfgde ;_gbcbe .PdfObject =_cfagda .copyObject (_bdfbba .PdfObject ,_fcefg ,_dddd ,_aaedd );
case *_fe .PdfObjectString :_cagae :=*_bdfbba ;_gfgde =&_cagae ;_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectName :_egfc :=*_bdfbba ;_gfgde =&_egfc ;_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectNull :_gfgde =_fe .MakeNull ();_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectInteger :_ffdaf :=*_bdfbba ;
_gfgde =&_ffdaf ;_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectReference :_fdddf :=*_bdfbba ;_gfgde =&_fdddf ;_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectFloat :_fbedd :=*_bdfbba ;_gfgde =&_fbedd ;_fcefg [_gbbdf ]=_gfgde ;case *_fe .PdfObjectBool :_adcbf :=*_bdfbba ;
_gfgde =&_adcbf ;_fcefg [_gbbdf ]=_gfgde ;case *pdfSignDictionary :_cgbac :=&pdfSignDictionary {PdfObjectDictionary :_fe .MakeDict (),_cecba :_bdfbba ._cecba ,_dcffed :_bdfbba ._dcffed };_gfgde =_cgbac ;_fcefg [_gbbdf ]=_gfgde ;for _ ,_dbged :=range _bdfbba .Keys (){_cgbac .Set (_dbged ,_cfagda .copyObject (_bdfbba .Get (_dbged ),_fcefg ,_dddd ,_aaedd ));
};default:_df .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gbbdf );
};if _cffgae &&_aaedd {_dddd [_gbbdf ]=struct{}{};};return _gfgde ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_aac :=NewPdfAnnotation ();_faa :=&PdfAnnotationWidget {};_faa .PdfAnnotation =_aac ;_aac .SetContext (_faa );return _faa ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fe .PdfObject ;FS _fe .PdfObject ;F _fe .PdfObject ;UF _fe .PdfObject ;DOS _fe .PdfObject ;Mac _fe .PdfObject ;Unix _fe .PdfObject ;ID _fe .PdfObject ;V _fe .PdfObject ;EF _fe .PdfObject ;RF _fe .PdfObject ;Desc _fe .PdfObject ;
CI _fe .PdfObject ;AFRelationship _fe .PdfObject ;_ccdd _fe .PdfObject ;};func (_fdb *PdfReader )newPdfActionResetFormFromDict (_ebd *_fe .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ebd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ebd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fggfc *PdfReader )GetEncryptionMethod ()string {_abfdg :=_fggfc ._gabca .GetCrypter ();return _abfdg .String ();};

// Add appends an outline item as a child of the current outline item.
func (_aeff *OutlineItem )Add (item *OutlineItem ){_aeff .Entries =append (_aeff .Entries ,item )};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fe .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_acc *PdfAnnotationWidget )ToPdfObject ()_fe .PdfObject {_acc .PdfAnnotation .ToPdfObject ();_bgf :=_acc ._efg ;_eceff :=_bgf .PdfObject .(*_fe .PdfObjectDictionary );if _acc ._gdb {return _bgf ;};_acc ._gdb =true ;_eceff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_eceff .SetIfNotNil ("\u0048",_acc .H );_eceff .SetIfNotNil ("\u004d\u004b",_acc .MK );_eceff .SetIfNotNil ("\u0041",_acc .A );_eceff .SetIfNotNil ("\u0041\u0041",_acc .AA );_eceff .SetIfNotNil ("\u0042\u0053",_acc .BS );_aee :=_acc .Parent ;if _acc ._feg !=nil {if _acc ._feg ._ddfe ==_acc ._efg {_acc ._feg .ToPdfObject ();
};_aee =_acc ._feg .GetContainingPdfObject ();};if _aee !=_bgf {_eceff .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aee );};_acc ._gdb =false ;return _bgf ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_fcafd *PdfPattern )GetContext ()PdfModel {return _fcafd ._ecfdd };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fe .PdfObject ;H _fe .PdfObject ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dcfbd *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dcfbd ._eeae !=nil {return _dcfbd ._eeae ,nil ;};if _dcfbd .Annots ==nil {_dcfbd ._eeae =[]*PdfAnnotation {};return nil ,nil ;};if _dcfbd ._agfed ==nil {_dcfbd ._eeae =[]*PdfAnnotation {};
return nil ,nil ;};_geagb ,_gagbdf :=_dcfbd ._agfed .loadAnnotations (_dcfbd .Annots );if _gagbdf !=nil {return nil ,_gagbdf ;};if _geagb ==nil {_dcfbd ._eeae =[]*PdfAnnotation {};};_dcfbd ._eeae =_geagb ;return _dcfbd ._eeae ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_fgg *PdfAnnotationLink )SetAction (action *PdfAction ){_fgg ._fdfd =action ;if action ==nil {_fgg .A =nil ;};};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fe .PdfObjectInteger ;TilingType *_fe .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fe .PdfObjectFloat ;YStep *_fe .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fe .PdfObjectArray ;};

// Register registers (caches) a model to primitive object relationship.
func (_gggbde *modelManager )Register (primitive _fe .PdfObject ,model PdfModel ){_gggbde ._bgcbf [model ]=primitive ;_gggbde ._dcege [primitive ]=model ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_deecd *OutlineItem )Insert (index uint ,item *OutlineItem ){_acadf :=uint (len (_deecd .Entries ));if index > _acadf {index =_acadf ;};_deecd .Entries =append (_deecd .Entries [:index ],append ([]*OutlineItem {item },_deecd .Entries [index :]...)...);
};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_gddb int ,_afeeg *PdfPage );

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_dgdec *PdfReader )GetCatalogViewerPreferences ()(_fe .PdfObject ,bool ){if _dgdec ._bbfec ==nil {return nil ,false ;};_dfefa :=_dgdec ._bbfec .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _dfefa ,_dfefa !=nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_daf :=NewPdfAnnotation ();_cceg :=&PdfAnnotationSquare {};_cceg .PdfAnnotation =_daf ;_cceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daf .SetContext (_cceg );return _cceg ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_geaf :=&PdfSignature {Type :_fe .MakeName ("\u0053\u0069\u0067"),Handler :handler };_egegd :=&pdfSignDictionary {PdfObjectDictionary :_fe .MakeDict (),_cecba :&handler ,_dcffed :_geaf };_geaf ._cafdb =_fe .MakeIndirectObject (_egegd );
return _geaf ;};

// ToPdfObject implements interface PdfModel.
func (_fabc *PdfAnnotationPopup )ToPdfObject ()_fe .PdfObject {_fabc .PdfAnnotation .ToPdfObject ();_gbb :=_fabc ._efg ;_fbde :=_gbb .PdfObject .(*_fe .PdfObjectDictionary );_fbde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050\u006f\u0070u\u0070"));
_fbde .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fabc .Parent );_fbde .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fabc .Open );return _gbb ;};func (_geefg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cgfbb []*PdfFieldSignature ;for _ ,_afgdd :=range _geefg .AllFields (){switch _bbfea :=_afgdd .GetContext ().(type ){case *PdfFieldSignature :_ccgcd :=_bbfea ;
_cgfbb =append (_cgfbb ,_ccgcd );};};return _cgfbb ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_egga .Lock ();defer _egga .Unlock ();_gdbcf =creator };

// C returns the value of the cyan component of the color.
func (_affe *PdfColorDeviceCMYK )C ()float64 {return _affe [0]};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eeded ,_gaef :=_efbg (basefont );if _gaef !=nil {return nil ,_gaef ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eeded ._dcdgc =_cbg .NewWinAnsiEncoder ();};return &PdfFont {_aeacd :&_eeded },nil ;
};func (_gaf *PdfReader )newPdfActionURIFromDict (_aga *_fe .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_aga .Get ("\u0055\u0052\u0049"),IsMap :_aga .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgab *PdfShadingType6 )ToPdfObject ()_fe .PdfObject {_fgab .PdfShading .ToPdfObject ();_bfggd ,_ededd :=_fgab .getShadingDict ();if _ededd !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgab .BitsPerCoordinate !=nil {_bfggd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fgab .BitsPerCoordinate );};if _fgab .BitsPerComponent !=nil {_bfggd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fgab .BitsPerComponent );
};if _fgab .BitsPerFlag !=nil {_bfggd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fgab .BitsPerFlag );};if _fgab .Decode !=nil {_bfggd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fgab .Decode );};if _fgab .Function !=nil {if len (_fgab .Function )==1{_bfggd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgab .Function [0].ToPdfObject ());
}else {_bdgab :=_fe .MakeArray ();for _ ,_ebfec :=range _fgab .Function {_bdgab .Append (_ebfec .ToPdfObject ());};_bfggd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdgab );};};return _fgab ._gbaea ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_cgbc :fonts ,CurrentFont :fonts [0]};};func _aaec (_cgfea _fe .PdfObject )(*PdfColorspaceLab ,error ){_feed :=NewPdfColorspaceLab ();if _begf ,_efdb :=_cgfea .(*_fe .PdfIndirectObject );
_efdb {_feed ._bbgeg =_begf ;};_cgfea =_fe .TraceToDirectObject (_cgfea );_ddbfa ,_fdfa :=_cgfea .(*_fe .PdfObjectArray );if !_fdfa {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddbfa .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cgfea =_fe .TraceToDirectObject (_ddbfa .Get (0));_ccab ,_fdfa :=_cgfea .(*_fe .PdfObjectName );if !_fdfa {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_ccab !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cgfea =_fe .TraceToDirectObject (_ddbfa .Get (1));_aefb ,_fdfa :=_cgfea .(*_fe .PdfObjectDictionary );
if !_fdfa {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cgfea =_aefb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_cgfea =_fe .TraceToDirectObject (_cgfea );_cgfa ,_fdfa :=_cgfea .(*_fe .PdfObjectArray );if !_fdfa {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _cgfa .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_dfcb ,_afcc :=_cgfa .GetAsFloat64Slice ();if _afcc !=nil {return nil ,_afcc ;};_feed .WhitePoint =_dfcb ;_cgfea =_aefb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgfea !=nil {_cgfea =_fe .TraceToDirectObject (_cgfea );
_dacf ,_dfdd :=_cgfea .(*_fe .PdfObjectArray );if !_dfdd {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dacf .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_daed ,_fceb :=_dacf .GetAsFloat64Slice ();if _fceb !=nil {return nil ,_fceb ;};_feed .BlackPoint =_daed ;};_cgfea =_aefb .Get ("\u0052\u0061\u006eg\u0065");if _cgfea !=nil {_cgfea =_fe .TraceToDirectObject (_cgfea );_geae ,_bfb :=_cgfea .(*_fe .PdfObjectArray );
if !_bfb {_df .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geae .Len ()!=4{_df .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cedbb ,_cfbeee :=_geae .GetAsFloat64Slice ();if _cfbeee !=nil {return nil ,_cfbeee ;};_feed .Range =_cedbb ;};return _feed ,nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cfcc *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfba ,_abece :=color .(*PdfColorPattern );if !_abece {_df .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gfba .Color ==nil {return color ,nil ;};if _cfcc .UnderlyingCS ==nil {return nil ,_bbc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _cfcc .UnderlyingCS .ColorToRGB (_gfba .Color );
};

// GetAttachedFiles retrieves all the attached files info and content.
func (_afgeg *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_cadea :=[]*EmbeddedFile {};_acagg ,_gfadc :=_afgeg .GetNameDictionary ();if _gfadc !=nil {return nil ,_gfadc ;};if _acagg ==nil {return _cadea ,nil ;};_aeec :=_dfdbb (_acagg );if _aeec .EmbeddedFiles ==nil {return nil ,nil ;
};_fedad :=_aeec .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_abgge ,_egbc :=_fedad .(*_fe .PdfObjectArray );if !_egbc {return nil ,_bbc .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _deffe :=1;_deffe < len (_abgge .Elements ());_deffe +=2{if _deffe %2!=0{_fcegd :=_abgge .Get (_deffe );_gdggcc ,_bddcdf :=NewPdfFilespecFromObj (_fcegd );if _bddcdf !=nil {return nil ,_bddcdf ;};_gfcce ,_bddcdf :=NewEmbeddedFileFromObject (_gdggcc .EF );
if _bddcdf !=nil {return nil ,_bddcdf ;};_ffggc ,_fdac :=_gdggcc .F .(*_fe .PdfObjectString );if _fdac {_gfcce .Name =_ffggc .Str ();};_gfcce .Description =_gdggcc .Desc .WriteString ();_gfcce .Relationship =RelationshipUnspecified ;if _gdggcc .AFRelationship !=nil {switch _gdggcc .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_gfcce .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_gfcce .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_gfcce .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_gfcce .Relationship =RelationshipSupplement ;
default:_gfcce .Relationship =RelationshipUnspecified ;};};_cadea =append (_cadea ,_gfcce );};};return _cadea ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_eegaf :=PdfColorCalRGB {a ,b ,c };return &_eegaf ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fe .PdfObject ;IC _fe .PdfObject ;BE _fe .PdfObject ;RD _fe .PdfObject ;};

// SetContext set the sub annotation (context).
func (_edcbe *PdfShading )SetContext (ctx PdfModel ){_edcbe ._bfgae =ctx };func (_dda *PdfReader )newPdfActionNamedFromDict (_ccg *_fe .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ccg .Get ("\u004e")},nil ;};func (_cdgf *PdfReader )loadAction (_edf _fe .PdfObject )(*PdfAction ,error ){if _cbd ,_eea :=_fe .GetIndirect (_edf );
_eea {_ddbd ,_dcbe :=_cdgf .newPdfActionFromIndirectObject (_cbd );if _dcbe !=nil {return nil ,_dcbe ;};return _ddbd ,nil ;}else if !_fe .IsNullObject (_edf ){return nil ,_bbc .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};const (_dcde =0x00001;_gfge =0x00002;_fccg =0x00004;_ecgdc =0x00008;_ffbad =0x00020;_bddbf =0x00040;_ffgf =0x10000;_cccb =0x20000;_faee =0x40000;);

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _fe .PdfObject )(*PdfOutputIntent ,error ){_afeg :=&PdfOutputIntent {};if _facg :=_afeg .ParsePdfObject (object );_facg !=nil {return nil ,_facg ;};return _afeg ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fe .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_faada *_fe .PdfIndirectObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ag .CharMetrics ;type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gfac *pdfFontSimple )ToPdfObject ()_fe .PdfObject {if _gfac ._gcfc ==nil {_gfac ._gcfc =&_fe .PdfIndirectObject {};};_bacg :=_gfac .baseFields ().asPdfObjectDictionary ("");_gfac ._gcfc .PdfObject =_bacg ;if _gfac .FirstChar !=nil {_bacg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gfac .FirstChar );
};if _gfac .LastChar !=nil {_bacg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gfac .LastChar );};if _gfac .Widths !=nil {_bacg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gfac .Widths );};if _gfac .Encoding !=nil {_bacg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfac .Encoding );
}else if _gfac ._dcdgc !=nil {_ggbg :=_gfac ._dcdgc .ToPdfObject ();if _ggbg !=nil {_bacg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ggbg );};};return _gfac ._gcfc ;};

// String returns a human readable description of `fontfile`.
func (_caee *fontFile )String ()string {_fgbgg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _caee ._fcdbad !=nil {_fgbgg =_caee ._fcdbad .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_caee ._befce ,_fgbgg );
};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ebgg :=NewPdfAnnotation ();_gad :=&PdfAnnotationSquiggly {};_gad .PdfAnnotation =_ebgg ;_gad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebgg .SetContext (_gad );return _gad ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _gd .ReadSeeker )(*CompliancePdfReader ,error ){const _baegf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_ffce ,_ggga :=_faded (rs ,&ReaderOpts {ComplianceMode :true },false ,_baegf );
if _ggga !=nil {return nil ,_ggga ;};return &CompliancePdfReader {PdfReader :_ffce },nil ;};func _febec (_eabgg *PdfField )[]*PdfField {_dgfg :=[]*PdfField {_eabgg };for _ ,_eggde :=range _eabgg .Kids {_dgfg =append (_dgfg ,_febec (_eggde )...);};return _dgfg ;
};

// ToPdfObject implements interface PdfModel.
func (_gfcd *PdfAnnotationCircle )ToPdfObject ()_fe .PdfObject {_gfcd .PdfAnnotation .ToPdfObject ();_bbdfg :=_gfcd ._efg ;_dcbfe :=_bbdfg .PdfObject .(*_fe .PdfObjectDictionary );_gfcd .PdfAnnotationMarkup .appendToPdfDictionary (_dcbfe );_dcbfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dcbfe .SetIfNotNil ("\u0042\u0053",_gfcd .BS );_dcbfe .SetIfNotNil ("\u0049\u0043",_gfcd .IC );_dcbfe .SetIfNotNil ("\u0042\u0045",_gfcd .BE );_dcbfe .SetIfNotNil ("\u0052\u0044",_gfcd .RD );return _bbdfg ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bgffb *PdfPage )GetAllContentStreams ()(string ,error ){_efgc ,_gbfa :=_bgffb .GetContentStreams ();if _gbfa !=nil {return "",_gbfa ;};return _bf .Join (_efgc ,"\u0020"),nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fe .StreamEncoder ;FormType _fe .PdfObject ;BBox _fe .PdfObject ;Matrix _fe .PdfObject ;Resources *PdfPageResources ;Group _fe .PdfObject ;Ref _fe .PdfObject ;MetaData _fe .PdfObject ;PieceInfo _fe .PdfObject ;LastModified _fe .PdfObject ;
StructParent _fe .PdfObject ;StructParents _fe .PdfObject ;OPI _fe .PdfObject ;OC _fe .PdfObject ;Name _fe .PdfObject ;

// Stream data.
Stream []byte ;_adcdb *_fe .PdfObjectStream ;};

// ViewArea returns the value of the viewArea.
func (_faagf *ViewerPreferences )ViewArea ()PageBoundary {return _faagf ._gebdc };

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dabeb *_fe .PdfIndirectObject ;_ggfge *_fe .PdfIndirectObject ;_ebaga map[_fe .PdfObject ]struct{};_cacecg []*_fe .PdfIndirectObject ;_dbbcd []_fe .PdfObject ;_debbc map[_fe .PdfObject ]struct{};_gdcbb []*_fe .PdfIndirectObject ;
_ccbce *PdfOutlineTreeNode ;_efaac *_fe .PdfObjectDictionary ;_gbaebe []_fe .PdfObject ;_fefff *_fe .PdfIndirectObject ;_efdfa *_a .Writer ;_acfae int64 ;_bfebc error ;_aebgf *_fe .PdfCrypt ;_baaaa *_fe .PdfObjectDictionary ;_bceed *_fe .PdfIndirectObject ;
_gbgde *_fe .PdfObjectArray ;_gdbffa _fe .Version ;_eecdg *bool ;_ebgca map[_fe .PdfObject ][]*_fe .PdfObjectDictionary ;_bcgdc *PdfAcroForm ;_cbbce *Names ;_cbcfa Optimizer ;_fagcf StandardApplier ;_bdaaa map[int ]crossReference ;_bggd int64 ;ObjNumOffset int ;
_cgedg bool ;_eaaeg _fe .XrefTable ;_bfcedc int64 ;_cddfd int64 ;_aeffda map[_fe .PdfObject ]int64 ;_gdcbbb map[_fe .PdfObject ]struct{};_ggfbb string ;_fdgdb string ;_cegca []*PdfOutputIntent ;_gaeb bool ;_gfcfeg ,_eafad string ;};type pdfSignDictionary struct{*_fe .PdfObjectDictionary ;
_cecba *SignatureHandler ;_dcffed *PdfSignature ;_bfceb int64 ;_aaabg int ;_afbfg int ;_faffab int ;_eadfg int ;};

// K returns the value of the key component of the color.
func (_bcgb *PdfColorDeviceCMYK )K ()float64 {return _bcgb [3]};

// Initialize initializes the PdfSignature.
func (_egbbb *PdfSignature )Initialize ()error {if _egbbb .Handler ==nil {return _bbc .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _egbbb .Handler .InitSignature (_egbbb );};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_fecgg *ViewerPreferences )ToPdfObject ()_fe .PdfObject {_afbfd :=_fe .MakeDict ();if _fecgg ._degb !=nil {_afbfd .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_fe .MakeBool (*_fecgg ._degb ));};if _fecgg ._daddc !=nil {_afbfd .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_fe .MakeBool (*_fecgg ._daddc ));
};if _fecgg ._egfgb !=nil {_afbfd .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_fe .MakeBool (*_fecgg ._egfgb ));};if _fecgg ._gcfg !=nil {_afbfd .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_fe .MakeBool (*_fecgg ._gcfg ));
};if _fecgg ._bcefb !=nil {_afbfd .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_fe .MakeBool (*_fecgg ._bcefb ));};if _fecgg ._acdff !=nil {_afbfd .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_fe .MakeBool (*_fecgg ._acdff ));
};if _fecgg ._bdebd !=""{_afbfd .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_fe .MakeName (string (_fecgg ._bdebd )));};if _fecgg ._cebcg !=""{_afbfd .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_fe .MakeName (string (_fecgg ._cebcg )));
};if _fecgg ._gebdc !=""{_afbfd .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_fe .MakeName (string (_fecgg ._gebdc )));};if _fecgg ._ecebe !=""{_afbfd .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_fe .MakeName (string (_fecgg ._ecebe )));
};if _fecgg ._afceb !=""{_afbfd .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_fe .MakeName (string (_fecgg ._afceb )));};if _fecgg ._dgaec !=""{_afbfd .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_fe .MakeName (string (_fecgg ._dgaec )));
};if _fecgg ._aagge !=""{_afbfd .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_fe .MakeName (string (_fecgg ._aagge )));};if _fecgg ._efecf !=""{_afbfd .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_fe .MakeName (string (_fecgg ._efecf )));
};if _fecgg ._eebag !=nil {_afbfd .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_fe .MakeBool (*_fecgg ._eebag ));};if _fecgg ._gbgcf !=nil {_afbfd .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_fe .MakeArrayFromIntegers (_fecgg ._gbgcf ));
};if _fecgg ._dafea !=0{_afbfd .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_fe .MakeInteger (int64 (_fecgg ._dafea )));};return _afbfd ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_bcaeb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_egadac PdfOutputIntentType )String ()string {switch _egadac {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func (_caed *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _caed ._gdgcc };


// SetReason sets the `Reason` field of the signature.
func (_agdbf *PdfSignature )SetReason (reason string ){_agdbf .Reason =_fe .MakeEncodedString (reason ,true );};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfActionJavaScript )ToPdfObject ()_fe .PdfObject {_afg .PdfAction .ToPdfObject ();_ccf :=_afg ._ea ;_gde :=_ccf .PdfObject .(*_fe .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeJavaScript )));_gde .SetIfNotNil ("\u004a\u0053",_afg .JS );
return _ccf ;};

// ToPdfObject implements interface PdfModel.
func (_gag *PdfActionImportData )ToPdfObject ()_fe .PdfObject {_gag .PdfAction .ToPdfObject ();_aba :=_gag ._ea ;_cec :=_aba .PdfObject .(*_fe .PdfObjectDictionary );_cec .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeImportData )));if _gag .F !=nil {_cec .Set ("\u0046",_gag .F .ToPdfObject ());
};return _aba ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_aafe *PdfAppender )Write (w _gd .Writer )error {if _aafe ._abec {return _bbc .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_eefb :=NewPdfWriter ();_abcgc ,_bbbgd :=_fe .GetDict (_eefb ._ggfge );if !_bbbgd {return _bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cdd ,_bbbgd :=_abcgc .Get ("\u004b\u0069\u0064\u0073").(*_fe .PdfObjectArray );if !_bbbgd {return _bbc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ddege ,_bbbgd :=_abcgc .Get ("\u0043\u006f\u0075n\u0074").(*_fe .PdfObjectInteger );if !_bbbgd {return _bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_bga :=_aafe ._cca ._gabca ;_beag :=_bga .GetTrailer ();if _beag ==nil {return _bbc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cfbg ,_bbbgd :=_fe .GetIndirect (_beag .Get ("\u0052\u006f\u006f\u0074"));
if !_bbbgd {return _bbc .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ffcb ,_bbbgd :=_fe .GetDict (_cfbg );if !_bbbgd {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cfbg ,*_beag );
return _bbc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cgdb :=false ;for _ ,_adea :=range _aafe ._cca .AcroForm .signatureFields (){if _adea .Lock !=nil {_cgdb =true ;break ;};};if _cgdb {_eefb ._dabeb =_cfbg ;
};for _ ,_gede :=range _ffcb .Keys (){if _eefb ._efaac .Get (_gede )==nil {_dffe :=_ffcb .Get (_gede );_eefb ._efaac .Set (_gede ,_dffe );};};if _aafe ._fdcb !=nil {if _aafe ._fdcb ._adgc {if _dgcb :=_fe .TraceToDirectObject (_aafe ._fdcb .ToPdfObject ());
!_fe .IsNullObject (_dgcb ){_eefb ._efaac .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dgcb );_aafe .updateObjectsDeep (_dgcb ,nil );}else {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_eefb ._efaac .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_aafe ._fdcb .ToPdfObject ());_aafe .updateObjectsDeep (_aafe ._fdcb .ToPdfObject (),nil );};};if _aafe ._fdade !=nil {_aafe .updateObjectsDeep (_aafe ._fdade .ToPdfObject (),nil );
_eefb ._efaac .Set ("\u0044\u0053\u0053",_aafe ._fdade .GetContainingPdfObject ());};if _aafe ._gcb !=nil {_eefb ._efaac .Set ("\u0050\u0065\u0072m\u0073",_aafe ._gcb .ToPdfObject ());_aafe .updateObjectsDeep (_aafe ._gcb .ToPdfObject (),nil );};if _eefb ._gdbffa .Major < 2{_eefb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_eefb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _afbf ,_gddc :=_fe .GetDict (_beag .Get ("\u0049\u006e\u0066\u006f"));_gddc {if _gfbe ,_dgge :=_fe .GetDict (_eefb ._fefff );_dgge {for _ ,_dgbb :=range _afbf .Keys (){if _gfbe .Get (_dgbb )==nil {_gfbe .Set (_dgbb ,_afbf .Get (_dgbb ));
};};};};if _aafe ._dfb !=nil {_eefb ._fefff =_fe .MakeIndirectObject (_aafe ._dfb .ToPdfObject ());};_aafe .updateObjectsDeep (_eefb ._fefff ,nil );_aafe .updateObjectsDeep (_eefb ._dabeb ,nil );_ebaf :=false ;if len (_aafe ._cca .PageList )!=len (_aafe ._gdf ){_ebaf =true ;
}else {for _begd :=range _aafe ._cca .PageList {switch {case _aafe ._gdf [_begd ]==_aafe ._cca .PageList [_begd ]:case _aafe ._gdf [_begd ]==_aafe .Reader .PageList [_begd ]:default:_ebaf =true ;};if _ebaf {break ;};};};if _ebaf {_aafe .updateObjectsDeep (_eefb ._ggfge ,nil );
}else {_aafe ._abac [_eefb ._ggfge ]=struct{}{};};_eefb ._ggfge .ObjectNumber =_aafe .Reader ._bgdg .ObjectNumber ;_aafe ._cdbb [_eefb ._ggfge ]=_aafe .Reader ._bgdg .ObjectNumber ;_aggag :=[]_fe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_agcc :=range _aafe ._gdf {_fdbb :=_agcc .ToPdfObject ();*_ddege =*_ddege +1;if _cgbg ,_cbgg :=_fdbb .(*_fe .PdfIndirectObject );_cbgg &&_cgbg .GetParser ()==_aafe ._cca ._gabca {_cdd .Append (&_cgbg .PdfObjectReference );continue ;};if _afgd ,_abcgcg :=_fe .GetDict (_fdbb );
_abcgcg {_afbag ,_bffbb :=_afgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fe .PdfIndirectObject );for _bffbb {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afbag );_cbbgf ,_edga :=_afbag .PdfObject .(*_fe .PdfObjectDictionary );
if !_edga {return _bbc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_fgeb :=range _aggag {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fgeb );if _agd :=_afgd .Get (_fgeb );
_agd !=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_agcc ._beae .Keys ())> 0&&!_ebaf {_cfa :=_agcc ._beae ;if _bfccd :=_cfa .Get (_fgeb );_bfccd !=nil {if _agd !=_bfccd {_df .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_fgeb ,_bfccd );
_afgd .Set (_fgeb ,_bfccd );};};};continue ;};if _abacb :=_cbbgf .Get (_fgeb );_abacb !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fgeb );_afgd .Set (_fgeb ,_abacb );
};};_afbag ,_bffbb =_cbbgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fe .PdfIndirectObject );_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cbbgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
};if _ebaf {_afgd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eefb ._ggfge );};};_aafe .updateObjectsDeep (_fdbb ,nil );_cdd .Append (_fdbb );};if _ ,_bgag :=_aafe ._efdf .Seek (0,_gd .SeekStart );_bgag !=nil {return _bgag ;};_gdgag :=make (map[SignatureHandler ]_gd .Writer );
_efed :=_fe .MakeArray ();for _ ,_afgb :=range _aafe ._baeg {if _gfbd ,_eefe :=_fe .GetIndirect (_afgb );_eefe {if _bcef ,_fea :=_gfbd .PdfObject .(*pdfSignDictionary );_fea {_abddd :=*_bcef ._cecba ;var _fcab error ;_gdgag [_abddd ],_fcab =_abddd .NewDigest (_bcef ._dcffed );
if _fcab !=nil {return _fcab ;};_efed .Append (_fe .MakeInteger (0xfffff),_fe .MakeInteger (0xfffff));};};};if _efed .Len ()> 0{_efed .Append (_fe .MakeInteger (0xfffff),_fe .MakeInteger (0xfffff));};for _ ,_eecc :=range _aafe ._baeg {if _dccb ,_edbd :=_fe .GetIndirect (_eecc );
_edbd {if _gbgab ,_ecbf :=_dccb .PdfObject .(*pdfSignDictionary );_ecbf {_gbgab .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_efed );};};};_geag :=len (_gdgag )> 0;var _ebba _gd .Reader =_aafe ._efdf ;if _geag {_bdag :=make ([]_gd .Writer ,0,len (_gdgag ));
for _ ,_ggcc :=range _gdgag {_bdag =append (_bdag ,_ggcc );};_ebba =_gd .TeeReader (_aafe ._efdf ,_gd .MultiWriter (_bdag ...));};_fegf ,_bedd :=_gd .Copy (w ,_ebba );if _bedd !=nil {return _bedd ;};if len (_aafe ._baeg )==0{return nil ;};_eefb ._bggd =_fegf ;
_eefb .ObjNumOffset =_aafe ._bdbf ;_eefb ._cgedg =true ;_eefb ._eaaeg =_aafe ._effa ;_eefb ._bfcedc =_aafe ._baga ;_eefb ._cddfd =_aafe ._ggcf ;_eefb ._gdbffa =_aafe ._cca .PdfVersion ();_eefb ._aeffda =_aafe ._cdbb ;_eefb ._aebgf =_aafe ._gcea .GetCrypter ();
_eefb ._bceed =_aafe ._gcea .GetEncryptObj ();_cace :=_aafe ._gcea .GetXrefType ();if _cace !=nil {_bbab :=*_cace ==_fe .XrefTypeObjectStream ;_eefb ._eecdg =&_bbab ;};_eefb ._debbc =map[_fe .PdfObject ]struct{}{};_eefb ._dbbcd =[]_fe .PdfObject {};for _ ,_gda :=range _aafe ._baeg {if _ ,_ffecd :=_aafe ._abac [_gda ];
_ffecd {continue ;};_eefb .addObject (_gda );};_afbd :=w ;if _geag {_afbd =_ee .NewBuffer (nil );};if _aafe ._fgge !=""&&_eefb ._aebgf ==nil {_eefb .Encrypt ([]byte (_aafe ._fgge ),[]byte (_aafe ._fgge ),_aafe ._fbfe );};if _dgbf :=_beag .Get ("\u0049\u0044");
_dgbf !=nil {if _beagg ,_bdfb :=_fe .GetArray (_dgbf );_bdfb {_eefb ._gbgde =_beagg ;};};if _gaagd :=_eefb .Write (_afbd );_gaagd !=nil {return _gaagd ;};if _geag {_bcaa :=_afbd .(*_ee .Buffer ).Bytes ();_eafa :=_fe .MakeArray ();var _dbgf []*pdfSignDictionary ;
var _cega int64 ;for _ ,_cdca :=range _eefb ._dbbcd {if _afa ,_baac :=_fe .GetIndirect (_cdca );_baac {if _gaga ,_cageg :=_afa .PdfObject .(*pdfSignDictionary );_cageg {_dbgf =append (_dbgf ,_gaga );_fbbf :=_gaga ._bfceb +int64 (_gaga ._aaabg );_eafa .Append (_fe .MakeInteger (_cega ),_fe .MakeInteger (_fbbf -_cega ));
_cega =_gaga ._bfceb +int64 (_gaga ._afbfg );};};};_eafa .Append (_fe .MakeInteger (_cega ),_fe .MakeInteger (_fegf +int64 (len (_bcaa ))-_cega ));_bgb :=[]byte (_eafa .WriteString ());for _ ,_cgbf :=range _dbgf {_fgc :=int (_cgbf ._bfceb -_fegf );for _cfgd :=_cgbf ._faffab ;
_cfgd < _cgbf ._eadfg ;_cfgd ++{_bcaa [_fgc +_cfgd ]=' ';};_fbca :=_bcaa [_fgc +_cgbf ._faffab :_fgc +_cgbf ._eadfg ];copy (_fbca ,_bgb );};var _ebaed int ;for _ ,_fgba :=range _dbgf {_bgdf :=int (_fgba ._bfceb -_fegf );_cbgc :=_bcaa [_ebaed :_bgdf +_fgba ._aaabg ];
_fcdf :=*_fgba ._cecba ;_gdgag [_fcdf ].Write (_cbgc );_ebaed =_bgdf +_fgba ._afbfg ;};for _ ,_cfc :=range _dbgf {_defe :=_bcaa [_ebaed :];_dbeb :=*_cfc ._cecba ;_gdgag [_dbeb ].Write (_defe );};for _ ,_adag :=range _dbgf {_aebce :=int (_adag ._bfceb -_fegf );
_feb :=*_adag ._cecba ;_agdf :=_gdgag [_feb ];if _gfg :=_feb .Sign (_adag ._dcffed ,_agdf );_gfg !=nil {return _gfg ;};_adag ._dcffed .ByteRange =_eafa ;_adca :=[]byte (_adag ._dcffed .Contents .WriteString ());for _gge :=_adag ._faffab ;_gge < _adag ._eadfg ;
_gge ++{_bcaa [_aebce +_gge ]=' ';};for _bdgf :=_adag ._aaabg ;_bdgf < _adag ._afbfg ;_bdgf ++{_bcaa [_aebce +_bdgf ]=' ';};_dgad :=_bcaa [_aebce +_adag ._faffab :_aebce +_adag ._eadfg ];copy (_dgad ,_bgb );_dgad =_bcaa [_aebce +_adag ._aaabg :_aebce +_adag ._afbfg ];
copy (_dgad ,_adca );};_gbce :=_ee .NewBuffer (_bcaa );_ ,_bedd =_gd .Copy (w ,_gbce );if _bedd !=nil {return _bedd ;};};_aafe ._abec =true ;return nil ;};

// HasExtGState checks if ExtGState name is available.
func (_ggged *PdfPage )HasExtGState (name _fe .PdfObjectName )bool {if _ggged .Resources ==nil {return false ;};if _ggged .Resources .ExtGState ==nil {return false ;};_bdgee ,_bdefa :=_fe .TraceToDirectObject (_ggged .Resources .ExtGState ).(*_fe .PdfObjectDictionary );
if !_bdefa {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fe .TraceToDirectObject (_ggged .Resources .ExtGState ));
return false ;};_ggaa :=_bdgee .Get (name );_caagc :=_ggaa !=nil ;return _caagc ;};func (_ecgd *PdfFilespec )getDict ()*_fe .PdfObjectDictionary {if _eggb ,_edbe :=_ecgd ._ccdd .(*_fe .PdfIndirectObject );_edbe {_ecbd ,_ceagb :=_eggb .PdfObject .(*_fe .PdfObjectDictionary );
if !_ceagb {return nil ;};return _ecbd ;}else if _dbfg ,_cded :=_ecgd ._ccdd .(*_fe .PdfObjectDictionary );_cded {return _dbfg ;}else {_df .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ecgd ._ccdd );
return nil ;};};func (_baad *PdfReader )newPdfAnnotationTextFromDict (_bceb *_fe .PdfObjectDictionary )(*PdfAnnotationText ,error ){_acga :=PdfAnnotationText {};_cabd ,_fbbc :=_baad .newPdfAnnotationMarkupFromDict (_bceb );if _fbbc !=nil {return nil ,_fbbc ;
};_acga .PdfAnnotationMarkup =_cabd ;_acga .Open =_bceb .Get ("\u004f\u0070\u0065\u006e");_acga .Name =_bceb .Get ("\u004e\u0061\u006d\u0065");_acga .State =_bceb .Get ("\u0053\u0074\u0061t\u0065");_acga .StateModel =_bceb .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_acga ,nil ;};func (_dagbf *PdfReader )newPdfFieldFromIndirectObject (_eabga *_fe .PdfIndirectObject ,_cdde *PdfField )(*PdfField ,error ){if _eedca ,_caegf :=_dagbf ._afac .GetModelFromPrimitive (_eabga ).(*PdfField );_caegf {return _eedca ,nil ;
};_gefce ,_eada :=_fe .GetDict (_eabga );if !_eada {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dcfbb :=NewPdfField ();_dcfbb ._ddfe =_eabga ;_dcfbb ._ddfe .PdfObject =_gefce ;if _afdb ,_bcdgb :=_fe .GetName (_gefce .Get ("\u0046\u0054"));_bcdgb {_dcfbb .FT =_afdb ;};if _cdde !=nil {_dcfbb .Parent =_cdde ;};_dcfbb .T ,_ =_gefce .Get ("\u0054").(*_fe .PdfObjectString );
_dcfbb .TU ,_ =_gefce .Get ("\u0054\u0055").(*_fe .PdfObjectString );_dcfbb .TM ,_ =_gefce .Get ("\u0054\u004d").(*_fe .PdfObjectString );_dcfbb .Ff ,_ =_gefce .Get ("\u0046\u0066").(*_fe .PdfObjectInteger );_dcfbb .V =_gefce .Get ("\u0056");_dcfbb .DV =_gefce .Get ("\u0044\u0056");
_dcfbb .AA =_gefce .Get ("\u0041\u0041");if DA :=_gefce .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_fe .GetString (DA );_dcfbb .VariableText =&VariableText {DA :DA };Q ,_ :=_gefce .Get ("\u0051").(*_fe .PdfObjectInteger );DS ,_ :=_gefce .Get ("\u0044\u0053").(*_fe .PdfObjectString );
RV :=_gefce .Get ("\u0052\u0056");_dcfbb .VariableText .Q =Q ;_dcfbb .VariableText .DS =DS ;_dcfbb .VariableText .RV =RV ;};_cgdbe :=_dcfbb .FT ;if _cgdbe ==nil &&_cdde !=nil {_cgdbe =_cdde .FT ;};if _cgdbe !=nil {switch *_cgdbe {case "\u0054\u0078":_aaff ,_aeeg :=_bbdca (_gefce );
if _aeeg !=nil {return nil ,_aeeg ;};_aaff .PdfField =_dcfbb ;_dcfbb ._fcec =_aaff ;case "\u0043\u0068":_efcgc ,_gfedc :=_ccabg (_gefce );if _gfedc !=nil {return nil ,_gfedc ;};_efcgc .PdfField =_dcfbb ;_dcfbb ._fcec =_efcgc ;case "\u0042\u0074\u006e":_cdegb ,_ffcba :=_gbeb (_gefce );
if _ffcba !=nil {return nil ,_ffcba ;};_cdegb .PdfField =_dcfbb ;_dcfbb ._fcec =_cdegb ;case "\u0053\u0069\u0067":_ccedbb ,_ecab :=_dagbf .newPdfFieldSignatureFromDict (_gefce );if _ecab !=nil {return nil ,_ecab ;};_ccedbb .PdfField =_dcfbb ;_dcfbb ._fcec =_ccedbb ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dcfbb .FT );return nil ,_bbc .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _fdab ,_gadb :=_fe .GetName (_gefce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gadb {if *_fdab =="\u0057\u0069\u0064\u0067\u0065\u0074"{_aeegd ,_abbe :=_dagbf .newPdfAnnotationFromIndirectObject (_eabga );if _abbe !=nil {return nil ,_abbe ;
};_gedeb ,_gcac :=_aeegd .GetContext ().(*PdfAnnotationWidget );if !_gcac {return nil ,_bbc .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_gedeb ._feg =_dcfbb ;_gedeb .Parent =_dcfbb ._ddfe ;
_dcfbb .Annotations =append (_dcfbb .Annotations ,_gedeb );return _dcfbb ,nil ;};};_bdgfc :=true ;if _dabff ,_bfba :=_fe .GetArray (_gefce .Get ("\u004b\u0069\u0064\u0073"));_bfba {_fbffg :=make ([]*_fe .PdfIndirectObject ,0,_dabff .Len ());for _ ,_bbfe :=range _dabff .Elements (){_egdc ,_fbfg :=_fe .GetIndirect (_bbfe );
if !_fbfg {_fbebc ,_abdaa :=_fe .GetStream (_bbfe );if _abdaa &&_fbebc .PdfObjectDictionary !=nil {_ggggc ,_edged :=_fe .GetNameVal (_fbebc .Get ("\u0054\u0079\u0070\u0065"));if _edged &&_ggggc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_df .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_bbc .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dbdbe ,_fdfb :=_fe .GetDict (_egdc );
if !_fdfb {return nil ,ErrTypeCheck ;};if _bdgfc {_bdgfc =!_ggab (_dbdbe );};_fbffg =append (_fbffg ,_egdc );};for _ ,_acabc :=range _fbffg {if _bdgfc {_cgfad ,_gfcdg :=_dagbf .newPdfAnnotationFromIndirectObject (_acabc );if _gfcdg !=nil {_df .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gfcdg );
return nil ,_gfcdg ;};_gbcde ,_egacg :=_cgfad ._cdg .(*PdfAnnotationWidget );if !_egacg {return nil ,ErrTypeCheck ;};_gbcde ._feg =_dcfbb ;_dcfbb .Annotations =append (_dcfbb .Annotations ,_gbcde );}else {_gdeed ,_gbde :=_dagbf .newPdfFieldFromIndirectObject (_acabc ,_dcfbb );
if _gbde !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gbde );return nil ,_gbde ;};_dcfbb .Kids =append (_dcfbb .Kids ,_gdeed );
};};};return _dcfbb ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fe .PdfObject ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_befab ,_ceea :=_ded .ParsePdfTime (dateStr );if _ceea !=nil {return PdfDate {},_ceea ;};return NewPdfDateFromTime (_befab );};

// ToInteger convert to an integer format.
func (_fffc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cecg :=_dd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cecg *_fffc .A ()),uint32 (_cecg *_fffc .B ()),uint32 (_cecg *_fffc .C ())};};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_agdac *PdfWriter )SetCatalogMarkInfo (info _fe .PdfObject )error {if info ==nil {_agdac ._efaac .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _dgcdff ,_deaced :=info .(*_fe .PdfObjectReference );_deaced {info =_dgcdff .Resolve ();
if info ==nil {_agdac ._efaac .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_agdac .addObject (info );_agdac ._efaac .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bcca :=NewPdfAnnotation ();_dcc :=&PdfAnnotationRichMedia {};_dcc .PdfAnnotation =_bcca ;_bcca .SetContext (_dcc );return _dcc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_agb *PdfAction )GetContainingPdfObject ()_fe .PdfObject {return _agb ._ea };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gdfe *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gdfe .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _cbbab (_gaea *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eafbb ,_dgbc :=_fe .GetDict (_gaea .AP );
if !_dgbc {return nil ,nil ,_bbc .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _eafbb ==nil {return nil ,nil ,nil ;};_dggfg ,_dgbc :=_fe .GetArray (_gaea .Rect );
if !_dgbc ||_dggfg .Len ()!=4{return nil ,nil ,_bbc .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dgdb ,_ffcc :=NewPdfRectangle (*_dggfg );if _ffcc !=nil {return nil ,nil ,_ffcc ;};_fcfgg :=_fe .TraceToDirectObject (_eafbb .Get ("\u004e"));
switch _agdfe :=_fcfgg .(type ){case *_fe .PdfObjectStream :_bgda :=_agdfe ;_gggbe ,_cfbeb :=NewXObjectFormFromStream (_bgda );return _gggbe ,_dgdb ,_cfbeb ;case *_fe .PdfObjectDictionary :_bbfa :=_agdfe ;if _bbfa ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _eabef _fe .PdfObject ;_afgae ,_daga :=_fe .GetName (_gaea .AS );if _daga {_eabef =_bbfa .Get (*_afgae );}else {_gfbf :=_gaea ._efg .PdfObject .(*_fe .PdfObjectDictionary );if _gfbf ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _begag :=_gfbf .Get ("\u0056");_begag !=nil {_eabef =_bbfa .Get (_fe .PdfObjectName (_begag .String ()));};};if _eabef ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_adebgd ,_daga :=_fe .GetStream (_eabef );if !_daga {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_afgae );
return nil ,nil ,_bbc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fbeg ,_dedee :=NewXObjectFormFromStream (_adebgd );return _fbeg ,_dgdb ,_dedee ;};_df .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fcfgg );
return nil ,nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_gbbdg *PdfWriter )writeNamesDictionary ()error {if _gbbdg ._cbbce ==nil {return nil ;};_edgcb :=_gbbdg ._cbbce .ToPdfObject ();
_gbbdg ._efaac .Set ("\u004e\u0061\u006de\u0073",_edgcb );_fadec :=_gbbdg .addObjects (_edgcb );if _fadec !=nil {return _fadec ;};return nil ;};

// SetViewArea sets the value of the viewArea.
func (_ecefg *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_ecefg ._gebdc =viewArea };

// ToPdfObject implements interface PdfModel.
func (_dcge *PdfAnnotationSquare )ToPdfObject ()_fe .PdfObject {_dcge .PdfAnnotation .ToPdfObject ();_dbef :=_dcge ._efg ;_aedf :=_dbef .PdfObject .(*_fe .PdfObjectDictionary );if _dcge .PdfAnnotationMarkup !=nil {_dcge .PdfAnnotationMarkup .appendToPdfDictionary (_aedf );
};_aedf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_aedf .SetIfNotNil ("\u0042\u0053",_dcge .BS );_aedf .SetIfNotNil ("\u0049\u0043",_dcge .IC );_aedf .SetIfNotNil ("\u0042\u0045",_dcge .BE );
_aedf .SetIfNotNil ("\u0052\u0044",_dcge .RD );return _dbef ;};func _geac (_aagf _fe .PdfObject ,_agbb _fe .PdfObject ,_ebbaa map[_fe .PdfObject ][]_fe .PdfObject ,_cddcc map[string ]_fe .PdfObject ,_ebcfg *[]_fe .PdfObject ){var _edgd *_fe .PdfIndirectObject ;
if _fegaa ,_caefg :=_fe .GetIndirect (_aagf );_caefg {_edgd =_fegaa ;_aagf =_fegaa .PdfObject ;};switch _fdea :=_aagf .(type ){case *_fe .PdfObjectDictionary :if _fdea .Get ("\u0053")==nil {return ;};_fdea .Set ("\u0050",_agbb );if _cabc :=_fdea .Get ("\u0050\u0067");
_cabc !=nil {if _fgagb ,_bbebd :=_fe .GetIndirect (_cabc );_bbebd &&_fgagb !=nil &&_fgagb .PdfObject !=nil {_ebbaa [_cabc ]=append (_ebbaa [_cabc ],_edgd );};};if _gace :=_fdea .Get ("\u0053");_gace !=nil {if _dbebgf ,_aagfb :=_fe .GetNameVal (_gace );
_aagfb {if _dbebgf ==StructureTypeLink {if _fdgb :=_fdea .Get ("\u004b");_fdgb !=nil {if _fdfbc ,_fdcde :=_fe .GetArray (_fdgb );_fdcde &&_fdfbc .Len ()==2{_daaaa :=false ;_fbbcae :=false ;for _ ,_bbgbc :=range _fdfbc .Elements (){if _ggeca ,_dbefb :=_fe .GetDict (_bbgbc );
_dbefb {if _geebf ,_gcced :=_fe .GetName (_ggeca .Get ("\u0054\u0079\u0070\u0065"));_gcced &&_geebf .String ()=="\u004f\u0042\u004a\u0052"{_fbbcae =true ;};}else if _ ,_cegac :=_fe .GetInt (_bbgbc );_cegac {_daaaa =true ;};};if _daaaa &&_fbbcae {*_ebcfg =append (*_ebcfg ,_edgd );
};}else if _dcgaa ,_aegeca :=_fe .GetDict (_fdgb );_aegeca {if _ebaac ,_egcf :=_fe .GetName (_dcgaa .Get ("\u0054\u0079\u0070\u0065"));_egcf &&_ebaac .String ()=="\u004f\u0042\u004a\u0052"{*_ebcfg =append (*_ebcfg ,_edgd );};};};};};};if _cdab :=_fdea .Get ("\u0049\u0044");
_cdab !=nil {_cddcc [_cdab .String ()]=_aagf ;};if _acec :=_fdea .Get ("\u004b");_acec !=nil {_geac (_acec ,_edgd ,_ebbaa ,_cddcc ,_ebcfg );};case *_fe .PdfObjectArray :for _ ,_acbbe :=range _fdea .Elements (){_geac (_acbbe ,_agbb ,_ebbaa ,_cddcc ,_ebcfg );
};default:};};

// SetNumCopies sets the value of the numCopies.
func (_fecbee *ViewerPreferences )SetNumCopies (numCopies int ){_fecbee ._dafea =numCopies };

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_aafb *PdfPageResources )GetXObjectImageByName (keyName _fe .PdfObjectName )(*XObjectImage ,error ){_dage ,_gfdcg :=_aafb .GetXObjectByName (keyName );if _dage ==nil {return nil ,nil ;};if _gfdcg !=XObjectTypeImage {return nil ,_bbc .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_dbbc ,_gfggg :=NewXObjectImageFromStream (_dage );if _gfggg !=nil {return nil ,_gfggg ;};return _dbbc ,nil ;};func (_beeb *PdfReader )newPdfAnnotationMarkupFromDict (_aggac *_fe .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bebd :=&PdfAnnotationMarkup {};
if _dfd :=_aggac .Get ("\u0054");_dfd !=nil {_bebd .T =_dfd ;};if _cbe :=_aggac .Get ("\u0050\u006f\u0070u\u0070");_cbe !=nil {_aega ,_ecec :=_cbe .(*_fe .PdfIndirectObject );if !_ecec {if _ ,_bebc :=_cbe .(*_fe .PdfObjectNull );!_bebc {return nil ,_bbc .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_aaed ,_gcfd :=_beeb .newPdfAnnotationFromIndirectObject (_aega );if _gcfd !=nil {return nil ,_gcfd ;};if _aaed !=nil {_bffb ,_dgec :=_aaed ._cdg .(*PdfAnnotationPopup );if !_dgec {return nil ,_bbc .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bebd .Popup =_bffb ;};};};if _dagg :=_aggac .Get ("\u0043\u0041");_dagg !=nil {_bebd .CA =_dagg ;};if _gefa :=_aggac .Get ("\u0052\u0043");_gefa !=nil {_bebd .RC =_gefa ;};if _bab :=_aggac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_bab !=nil {_bebd .CreationDate =_bab ;};if _bac :=_aggac .Get ("\u0049\u0052\u0054");_bac !=nil {_bebd .IRT =_bac ;};if _gege :=_aggac .Get ("\u0053\u0075\u0062\u006a");_gege !=nil {_bebd .Subj =_gege ;};if _bbed :=_aggac .Get ("\u0052\u0054");_bbed !=nil {_bebd .RT =_bbed ;
};if _eabg :=_aggac .Get ("\u0049\u0054");_eabg !=nil {_bebd .IT =_eabg ;};if _bdb :=_aggac .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bdb !=nil {_bebd .ExData =_bdb ;};return _bebd ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fe .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fe .PdfObjectArray )(*PdfRectangle ,error ){_bafcg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _aebgd error ;_bafcg .Llx ,_aebgd =_fe .GetNumberAsFloat (arr .Get (0));if _aebgd !=nil {return nil ,_aebgd ;};_bafcg .Lly ,_aebgd =_fe .GetNumberAsFloat (arr .Get (1));if _aebgd !=nil {return nil ,_aebgd ;};_bafcg .Urx ,_aebgd =_fe .GetNumberAsFloat (arr .Get (2));
if _aebgd !=nil {return nil ,_aebgd ;};_bafcg .Ury ,_aebgd =_fe .GetNumberAsFloat (arr .Get (3));if _aebgd !=nil {return nil ,_aebgd ;};return &_bafcg ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject implements interface PdfModel.
func (_eebc *PdfActionResetForm )ToPdfObject ()_fe .PdfObject {_eebc .PdfAction .ToPdfObject ();_ebg :=_eebc ._ea ;_egb :=_ebg .PdfObject .(*_fe .PdfObjectDictionary );_egb .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeResetForm )));_egb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eebc .Fields );
_egb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eebc .Flags );return _ebg ;};

// SetPageNumber sets the page number.
func (_gddfa *KDict )SetPageNumber (pageNumber int64 ){_gddfa ._gebfa =pageNumber };

// SetCatalogLanguage sets the catalog language.
func (_gfdcc *PdfWriter )SetCatalogLanguage (lang _fe .PdfObject )error {if lang ==nil {_gfdcc ._efaac .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_gfdcc .addObject (lang );_gfdcc ._efaac .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// String returns a string representation of the field.
func (_cfef *PdfField )String ()string {if _abdcg ,_cfgde :=_cfef .ToPdfObject ().(*_fe .PdfIndirectObject );_cfgde {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cfef ._fcec ,_abdcg .PdfObject .String ());};return "";};

// AddCRLs adds CRLs to DSS.
func (_eeab *DSS )AddCRLs (crls [][]byte )([]*_fe .PdfObjectStream ,error ){return _eeab .add (&_eeab .CRLs ,_eeab ._dgcge ,crls );};func (_aegcf *PdfWriter )seekByName (_gfec _fe .PdfObject ,_cbgcb []string ,_fggbg string )([]_fe .PdfObject ,error ){_df .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gfec );
var _acbeff []_fe .PdfObject ;if _ebcff ,_abfaa :=_gfec .(*_fe .PdfIndirectObject );_abfaa {return _aegcf .seekByName (_ebcff .PdfObject ,_cbgcb ,_fggbg );};if _aagceg ,_gdgbc :=_gfec .(*_fe .PdfObjectStream );_gdgbc {return _aegcf .seekByName (_aagceg .PdfObjectDictionary ,_cbgcb ,_fggbg );
};if _caddf ,_cadff :=_gfec .(*_fe .PdfObjectDictionary );_cadff {_df .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_efacc :=range _caddf .Keys (){_gegaaf :=_caddf .Get (_efacc );if string (_efacc )==_fggbg {_acbeff =append (_acbeff ,_gegaaf );};for _ ,_fefda :=range _cbgcb {if string (_efacc )==_fefda {_df .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fefda );
_dbefbb ,_gceage :=_aegcf .seekByName (_gegaaf ,_cbgcb ,_fggbg );if _gceage !=nil {return _acbeff ,_gceage ;};_acbeff =append (_acbeff ,_dbefbb ...);break ;};};};return _acbeff ,nil ;};return _acbeff ,nil ;};func _fcdba (_fdce *_fe .PdfObjectDictionary ,_adba *fontCommon )(*pdfCIDFontType0 ,error ){if _adba ._cdgfg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_adba );
return nil ,_fe .ErrRangeError ;};_gfbfc :=_bddg (_adba );_gegaa ,_dfdfb :=_fe .GetDict (_fdce .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dfdfb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_adba );
return nil ,ErrRequiredAttributeMissing ;};_gfbfc .CIDSystemInfo =_gegaa ;_gfbfc .DW =_fdce .Get ("\u0044\u0057");_gfbfc .W =_fdce .Get ("\u0057");_gfbfc .DW2 =_fdce .Get ("\u0044\u0057\u0032");_gfbfc .W2 =_fdce .Get ("\u0057\u0032");_gfbfc ._dcad =1000.0;
if _abace ,_gaca :=_fe .GetNumberAsFloat (_gfbfc .DW );_gaca ==nil {_gfbfc ._dcad =_abace ;};_ggea ,_cffdb :=_bbbbe (_gfbfc .W );if _cffdb !=nil {return nil ,_cffdb ;};if _ggea ==nil {_ggea =map[_cbg .CharCode ]float64 {};};_gfbfc ._cbca =_ggea ;return _gfbfc ,nil ;
};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_aagbc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cegd :=&PdfColorPattern {};_bebg ,_efab :=objects [len (objects )-1].(*_fe .PdfObjectName );if !_efab {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cegd .PatternName =*_bebg ;if len (objects )> 1{_ffegc :=objects [0:len (objects )-1];if _aagbc .UnderlyingCS ==nil {_df .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_bbc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_eabdf ,_efdba :=_aagbc .UnderlyingCS .ColorFromPdfObjects (_ffegc );if _efdba !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_efdba );
return nil ,_efdba ;};_cegd .Color =_eabdf ;};return _cegd ,nil ;};

// Width returns the width of `rect`.
func (_bcfaa *PdfRectangle )Width ()float64 {return _dd .Abs (_bcfaa .Urx -_bcfaa .Llx )};func (_bcgad *PdfWriter )writeObjects (){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bcgad ._dbbcd ));
_bcgad ._bdaaa =make (map[int ]crossReference );_bcgad ._bdaaa [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bcgad ._eaaeg .ObjectMap !=nil {for _fgad ,_acbfb :=range _bcgad ._eaaeg .ObjectMap {if _fgad ==0{continue ;};if _acbfb .XType ==_fe .XrefTypeObjectStream {_fbggb :=crossReference {Type :2,ObjectNumber :_acbfb .OsObjNumber ,Index :_acbfb .OsObjIndex };
_bcgad ._bdaaa [_fgad ]=_fbggb ;};if _acbfb .XType ==_fe .XrefTypeTableEntry {_gcec :=crossReference {Type :1,ObjectNumber :_acbfb .ObjectNumber ,Offset :_acbfb .Offset };_bcgad ._bdaaa [_fgad ]=_gcec ;};};};};

// GetKDict returns the KDict of the KValue.
func (_eecef *KValue )GetKDict ()*KDict {return _eecef ._ebdgf };

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_gcbg *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fe .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecefd ,_feggd :=_fe .GetNumbersAsFloat (objects );
if _feggd !=nil {return nil ,_feggd ;};return _gcbg .ColorFromFloats (_ecefd );};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_edbf :=NewPdfAnnotation ();_ecd :=&PdfAnnotation3D {};_ecd .PdfAnnotation =_edbf ;_edbf .SetContext (_ecd );return _ecd ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cdad :=NewPdfAction ();_fff :=&PdfActionMovie {};_fff .PdfAction =_cdad ;_cdad .SetContext (_fff );return _fff ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_ecdg *MultipleFontEncoder )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){_gged :=_ecdg .CurrentFont ;_cgbe ,_ccbcb :=_gged .GetRuneMetrics (r );for _fcggb :=1;_fcggb < len (_ecdg ._cgbc )&&_cgbe .Wx ==0;_fcggb ++{_gged =_ecdg ._cgbc [_fcggb ];
_cgbe ,_ccbcb =_gged .GetRuneMetrics (r );};return _cgbe ,_ccbcb ;};func _bcafc (_babc _fe .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_df .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_babc .String (),_babc );
_geca :=NewPdfColorspaceSpecialPattern ();if _facf ,_fad :=_babc .(*_fe .PdfIndirectObject );_fad {_geca ._gdgc =_facf ;};_babc =_fe .TraceToDirectObject (_babc );if _cafc ,_bdfba :=_babc .(*_fe .PdfObjectName );_bdfba {if *_cafc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _geca ,nil ;};_dfda ,_befa :=_babc .(*_fe .PdfObjectArray );if !_befa {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_babc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dfda .Len ()!=1&&_dfda .Len ()!=2{_df .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dfda );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_babc =_dfda .Get (0);if _eebca ,_cccg :=_babc .(*_fe .PdfObjectName );_cccg {if *_eebca !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_eebca );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dfda .Len ()> 1{_babc =_dfda .Get (1);_babc =_fe .TraceToDirectObject (_babc );_affb ,_bceg :=NewPdfColorspaceFromPdfObject (_babc );if _bceg !=nil {return nil ,_bceg ;
};_geca .UnderlyingCS =_affb ;};_df .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_geca .UnderlyingCS );
return _geca ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_egdf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// SetPrintPageRange sets the value of the printPageRange.
func (_bbeec *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_bbeec ._gbgcf =printPageRange ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ffbd *PdfColorspaceDeviceCMYK )ToPdfObject ()_fe .PdfObject {return _fe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ggdb :_fe .MakeIndirectObject (_fe .MakeDict ())};};

// ToPdfObject implements interface PdfModel.
func (_egea *PdfSignatureReference )ToPdfObject ()_fe .PdfObject {_fbbae :=_fe .MakeDict ();_fbbae .SetIfNotNil ("\u0054\u0079\u0070\u0065",_egea .Type );_fbbae .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_egea .TransformMethod );
_fbbae .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_egea .TransformParams );_fbbae .SetIfNotNil ("\u0044\u0061\u0074\u0061",_egea .Data );_fbbae .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_egea .DigestMethod );
return _fbbae ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cecgb *PdfColorspaceCalRGB )ToPdfObject ()_fe .PdfObject {_cgea :=&_fe .PdfObjectArray {};_cgea .Append (_fe .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ecca :=_fe .MakeDict ();if _cecgb .WhitePoint !=nil {_gfed :=_fe .MakeArray (_fe .MakeFloat (_cecgb .WhitePoint [0]),_fe .MakeFloat (_cecgb .WhitePoint [1]),_fe .MakeFloat (_cecgb .WhitePoint [2]));
_ecca .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gfed );}else {_df .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cecgb .BlackPoint !=nil {_bdec :=_fe .MakeArray (_fe .MakeFloat (_cecgb .BlackPoint [0]),_fe .MakeFloat (_cecgb .BlackPoint [1]),_fe .MakeFloat (_cecgb .BlackPoint [2]));_ecca .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bdec );
};if _cecgb .Gamma !=nil {_fffded :=_fe .MakeArray (_fe .MakeFloat (_cecgb .Gamma [0]),_fe .MakeFloat (_cecgb .Gamma [1]),_fe .MakeFloat (_cecgb .Gamma [2]));_ecca .Set ("\u0047\u0061\u006dm\u0061",_fffded );};if _cecgb .Matrix !=nil {_daag :=_fe .MakeArray (_fe .MakeFloat (_cecgb .Matrix [0]),_fe .MakeFloat (_cecgb .Matrix [1]),_fe .MakeFloat (_cecgb .Matrix [2]),_fe .MakeFloat (_cecgb .Matrix [3]),_fe .MakeFloat (_cecgb .Matrix [4]),_fe .MakeFloat (_cecgb .Matrix [5]),_fe .MakeFloat (_cecgb .Matrix [6]),_fe .MakeFloat (_cecgb .Matrix [7]),_fe .MakeFloat (_cecgb .Matrix [8]));
_ecca .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_daag );};_cgea .Append (_ecca );if _cecgb ._fbg !=nil {_cecgb ._fbg .PdfObject =_cgea ;return _cecgb ._fbg ;};return _cgea ;};func _cdb (_agc _fe .PdfObject )(*PdfFilespec ,error ){if _agc ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_agc );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_egaed *PdfField )FullName ()(string ,error ){var _dede _ee .Buffer ;_acfg :=[]string {};if _egaed .T !=nil {_acfg =append (_acfg ,_egaed .T .Decoded ());};_dgedg :=map[*PdfField ]bool {};_dgedg [_egaed ]=true ;_gdag :=_egaed .Parent ;for _gdag !=nil {if _ ,_afged :=_dgedg [_gdag ];
_afged {return _dede .String (),_bbc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gdag .T ==nil {return _dede .String (),_bbc .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_acfg =append (_acfg ,_gdag .T .Decoded ());_dgedg [_gdag ]=true ;_gdag =_gdag .Parent ;};for _bcga :=len (_acfg )-1;_bcga >=0;_bcga --{_dede .WriteString (_acfg [_bcga ]);if _bcga > 0{_dede .WriteString ("\u002e");};};return _dede .String (),nil ;};


// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cegaa *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_aedc :=_dfc .NewReader (img .getBase ());_deae :=_af .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._dbgaf ,img ._cccfg );
_ceed :=_dfc .NewWriter (_deae );_eaed :=_dd .Pow (2,float64 (img .BitsPerComponent ))-1;_ebda :=_cegaa .GetNumComponents ();_eggc :=make ([]uint32 ,_ebda );_cdafd :=make ([]float64 ,_ebda );for {_gdaf :=_aedc .ReadSamples (_eggc );if _gdaf ==_gd .EOF {break ;
}else if _gdaf !=nil {return img ,_gdaf ;};for _cffb :=0;_cffb < _ebda ;_cffb ++{_agfe :=float64 (_eggc [_cffb ])/_eaed ;_cdafd [_cffb ]=_agfe ;};_ceebe ,_gdaf :=_cegaa .TintTransform .Evaluate (_cdafd );if _gdaf !=nil {return img ,_gdaf ;};for _ ,_gebe :=range _ceebe {_gebe =_dd .Min (_dd .Max (0,_gebe ),1.0);
if _gdaf =_ceed .WriteSample (uint32 (_gebe *_eaed ));_gdaf !=nil {return img ,_gdaf ;};};};return _cegaa .AlternateSpace .ImageToRGB (_cfgaa (&_deae ));};func (_gcfde *PdfWriter )writeOutputIntents ()error {if len (_gcfde ._cegca )==0{return nil ;};_dgccg :=make ([]_fe .PdfObject ,len (_gcfde ._cegca ));
for _ccafa ,_dgded :=range _gcfde ._cegca {_acegcb :=_dgded .ToPdfObject ();_dgccg [_ccafa ]=_fe .MakeIndirectObject (_acegcb );};_abccf :=_fe .MakeIndirectObject (_fe .MakeArray (_dgccg ...));_gcfde ._efaac .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_abccf );
if _dfggbc :=_gcfde .addObjects (_abccf );_dfggbc !=nil {return _dfggbc ;};return nil ;};func _dgdff ()string {_egga .Lock ();defer _egga .Unlock ();_eaefc :=_ae .GetLicenseKey ();if len (_fdfga )> 0&&(_eaefc .IsLicensed ()||_bfdgbf ){return _fdfga ;};
return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_agace (),_eaefc .TypeToString ());};func _ggab (_bdggg *_fe .PdfObjectDictionary )bool {for _ ,_bfcdb :=range _bdggg .Keys (){if _ ,_fcdd :=_facfb [_bfcdb .String ()];
_fcdd {return true ;};};return false ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ggccfc *PdfShadingPatternType2 )ToPdfObject ()_fe .PdfObject {_ggccfc .PdfPattern .ToPdfObject ();_bfecb :=_ggccfc .getDict ();if _ggccfc .Shading !=nil {_bfecb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggccfc .Shading .ToPdfObject ());};if _ggccfc .Matrix !=nil {_bfecb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggccfc .Matrix );
};if _ggccfc .ExtGState !=nil {_bfecb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggccfc .ExtGState );};return _ggccfc ._aegcc ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_cfaa *PdfColorspaceSpecialIndexed )ToPdfObject ()_fe .PdfObject {_efad :=_fe .MakeArray (_fe .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_efad .Append (_cfaa .Base .ToPdfObject ());_efad .Append (_fe .MakeInteger (int64 (_cfaa .HiVal )));
_efad .Append (_cfaa .Lookup );if _cfaa ._acad !=nil {_cfaa ._acad .PdfObject =_efad ;return _cfaa ._acad ;};return _efad ;};

// SetVersion sets the PDF version of the output file.
func (_badadc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_badadc ._gdbffa .Major =majorVersion ;_badadc ._gdbffa .Minor =minorVersion ;};func _abfdb (_cfbea *_fe .PdfObjectDictionary ,_fbcca *fontCommon ,_cagbg _cbg .TextEncoder )(*pdfFontSimple ,error ){_bebbd :=_dfgc (_fbcca );
_bebbd ._egeg =_cagbg ;if _cagbg ==nil {_dedgd :=_cfbea .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _dedgd ==nil {_dedgd =_fe .MakeInteger (0);};_bebbd .FirstChar =_dedgd ;_cgef ,_dafd :=_fe .GetIntVal (_dedgd );if !_dafd {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dedgd );
return nil ,_fe .ErrTypeError ;};_fecf :=_cbg .CharCode (_cgef );_dedgd =_cfbea .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dedgd ==nil {_dedgd =_fe .MakeInteger (255);};_bebbd .LastChar =_dedgd ;_cgef ,_dafd =_fe .GetIntVal (_dedgd );
if !_dafd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dedgd );return nil ,_fe .ErrTypeError ;
};_gdggd :=_cbg .CharCode (_cgef );_bebbd ._efacff =make (map[_cbg .CharCode ]float64 );_dedgd =_cfbea .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dedgd !=nil {_bebbd .Widths =_dedgd ;_bcaad ,_ggdf :=_fe .GetArray (_dedgd );if !_ggdf {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dedgd );
return nil ,_fe .ErrTypeError ;};_fgde ,_eeafc :=_bcaad .ToFloat64Array ();if _eeafc !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_eeafc ;};if len (_fgde )!=int (_gdggd -_fecf +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gdggd -_fecf +1,len (_fgde ));
return nil ,_fe .ErrRangeError ;};for _gbabf ,_gcdcc :=range _fgde {_bebbd ._efacff [_fecf +_cbg .CharCode (_gbabf )]=_gcdcc ;};};};_bebbd .Encoding =_fe .TraceToDirectObject (_cfbea .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bebbd ,nil ;
};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_bfcd :=NewPdfAnnotation ();_ecf :=&PdfAnnotationPopup {};_ecf .PdfAnnotation =_bfcd ;_bfcd .SetContext (_ecf );return _ecf ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dcfbg *PdfPage )GetContentStreams ()([]string ,error ){_dbbge :=_dcfbg .GetContentStreamObjs ();var _gcebb []string ;for _ ,_agefg :=range _dbbge {_cffdd ,_cgeff :=_bgae (_agefg );if _cgeff !=nil {return nil ,_cgeff ;};_gcebb =append (_gcebb ,_cffdd );
};return _gcebb ,nil ;};func NewViewerPreferencesFromPdfObject (obj _fe .PdfObject )(*ViewerPreferences ,error ){_cegff :=_fe .ResolveReference (obj );_aafg ,_adacd :=_fe .GetDict (_cegff );if !_adacd {return nil ,_e .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffefa :=NewViewerPreferences ();if _dadcd :=_aafg .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_dadcd !=nil {if _bcdga ,_dafgg :=_fe .GetBool (_dadcd );_dafgg {_ffefa ._degb =(*bool )(_bcdga );};};if _gfccd :=_aafg .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_gfccd !=nil {if _gfdfb ,_gaed :=_fe .GetBool (_gfccd );_gaed {_ffefa ._daddc =(*bool )(_gfdfb );};};if _aabfa :=_aafg .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_aabfa !=nil {if _dgebg ,_beedb :=_fe .GetBool (_aabfa );
_beedb {_ffefa ._egfgb =(*bool )(_dgebg );};};if _degaf :=_aafg .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_degaf !=nil {if _aceea ,_gddac :=_fe .GetBool (_degaf );_gddac {_ffefa ._gcfg =(*bool )(_aceea );};};if _ffbfb :=_aafg .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_ffbfb !=nil {if _befba ,_fadb :=_fe .GetBool (_ffbfb );_fadb {_ffefa ._bcefb =(*bool )(_befba );};};if _bfgef :=_aafg .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_bfgef !=nil {if _bdceb ,_dedeec :=_fe .GetBool (_bfgef );
_dedeec {_ffefa ._acdff =(*bool )(_bdceb );};};if _agefbd :=_aafg .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_agefbd !=nil {if _faca ,_ecgbf :=_fe .GetName (_agefbd );_ecgbf {_ffefa ._bdebd =NonFullScreenPageMode (*_faca );
};};if _gbgef :=_aafg .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_gbgef !=nil {if _feabc ,_eeabb :=_fe .GetName (_gbgef );_eeabb {_ffefa ._cebcg =Direction (*_feabc );};};if _egbbc :=_aafg .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_egbbc !=nil {if _aaea ,_egfag :=_fe .GetName (_egbbc );_egfag {_ffefa ._gebdc =PageBoundary (*_aaea );};};if _dabeag :=_aafg .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_dabeag !=nil {if _acgef ,_fbdaf :=_fe .GetName (_dabeag );_fbdaf {_ffefa ._ecebe =PageBoundary (*_acgef );
};};if _gdbcd :=_aafg .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_gdbcd !=nil {if _abbaf ,_dfdde :=_fe .GetName (_gdbcd );_dfdde {_ffefa ._afceb =PageBoundary (*_abbaf );};};if _ggbdc :=_aafg .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_ggbdc !=nil {if _fggcf ,_gcadcf :=_fe .GetName (_ggbdc );_gcadcf {_ffefa ._dgaec =PageBoundary (*_fggcf );};};if _cadde :=_aafg .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_cadde !=nil {if _gefgg ,_bbfcc :=_fe .GetName (_cadde );
_bbfcc {_ffefa ._aagge =PrintScaling (*_gefgg );};};if _gdcdf :=_aafg .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_gdcdf !=nil {if _bfadgf ,_bgebf :=_fe .GetName (_gdcdf );_bgebf {_ffefa ._efecf =Duplex (*_bfadgf );};};if _faeb :=_aafg .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_faeb !=nil {if _edega ,_bbfge :=_fe .GetBool (_faeb );_bbfge {_ffefa ._eebag =(*bool )(_edega );};};if _bdbee :=_aafg .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_bdbee !=nil {if _ebec ,_cefae :=_fe .GetArray (_bdbee );
_cefae {_ffefa ._gbgcf =make ([]int ,_ebec .Len ());for _cdcce :=range _ffefa ._gbgcf {if _egbf :=_ebec .Get (_cdcce );_egbf !=nil {if _baee ,_gcgfa :=_fe .GetInt (_egbf );_gcgfa {_ffefa ._gbgcf [_cdcce ]=int (*_baee );};};};};};if _dgccc :=_aafg .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_dgccc !=nil {if _ecgdb ,_acccb :=_fe .GetInt (_dgccc );_acccb {_ffefa ._dafea =int (*_ecgdb );};};return _ffefa ,nil ;};type fontCommon struct{_cecc string ;_cdgfg string ;_gfab string ;_bfccg _fe .PdfObject ;_fcfaf *_gf .CMap ;_gdgcc *PdfFontDescriptor ;
_fdcab int64 ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_fe .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_affd *_fe .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_baacb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebb :=vals [0];if _eebb < 0.0||_eebb > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eebb );
return nil ,ErrColorOutOfRange ;};_dgdga :=NewPdfColorCalGray (_eebb );return _dgdga ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ccabgb *modelManager )GetModelFromPrimitive (primitive _fe .PdfObject )PdfModel {model ,_fffa :=_ccabgb ._dcege [primitive ];if !_fffa {return nil ;};return model ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cebcc *PdfShadingType3 )ToPdfObject ()_fe .PdfObject {_cebcc .PdfShading .ToPdfObject ();_gaffg ,_faffa :=_cebcc .getShadingDict ();if _faffa !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cebcc .Coords !=nil {_gaffg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cebcc .Coords );};if _cebcc .Domain !=nil {_gaffg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cebcc .Domain );};if _cebcc .Function !=nil {if len (_cebcc .Function )==1{_gaffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cebcc .Function [0].ToPdfObject ());
}else {_aedgf :=_fe .MakeArray ();for _ ,_efdfb :=range _cebcc .Function {_aedgf .Append (_efdfb .ToPdfObject ());};_gaffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aedgf );};};if _cebcc .Extend !=nil {_gaffg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cebcc .Extend );
};return _cebcc ._gbaea ;};

// Encoder returns the font's text encoder.
func (_acdga pdfCIDFontType0 )Encoder ()_cbg .TextEncoder {return _acdga ._ebef };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eefad *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _ddeeb []*PdfField ;if _eefad .AcroForm !=nil {_ddeeb =_eefad .AcroForm .AllFields ();};_gdgf :=make (map[*PdfField ]struct{},len (_ddeeb ));for _ ,_fdccg :=range _ddeeb {_gdgf [_fdccg ]=struct{}{};
};for _ ,_eaaccg :=range _eefad .PageList {_fgcfe ,_gabb :=_eaaccg .GetAnnotations ();if _gabb !=nil {return false ,_gabb ;};for _ ,_faadd :=range _fgcfe {_ebbgc ,_badc :=_faadd .GetContext ().(*PdfAnnotationWidget );if !_badc {continue ;};_dfdgag :=_ebbgc .Field ();
if _dfdgag ==nil {return true ,nil ;};if _ ,_dbgdc :=_gdgf [_dfdgag ];!_dbgdc {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dag *PdfActionGoTo )ToPdfObject ()_fe .PdfObject {_dag .PdfAction .ToPdfObject ();_cac :=_dag ._ea ;_dab :=_cac .PdfObject .(*_fe .PdfObjectDictionary );_dab .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoTo )));_dab .SetIfNotNil ("\u0044",_dag .D );
return _cac ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_eegfc *PdfAcroForm ,_deff *PdfField ,_cbbfb *PdfAnnotationWidget )(*_fe .PdfObjectDictionary ,error );};func _ecbgdf ()_abb .Time {_egga .Lock ();defer _egga .Unlock ();
return _gcfef };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gggaf pdfFontSimple )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){if _gggaf ._cgfcc !=nil {_addf ,_eggba :=_gggaf ._cgfcc .Read (r );if _eggba {return _addf ,true ;};};_aggg :=_gggaf .Encoder ();if _aggg ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gggaf );
return _ag .CharMetrics {},false ;};_bcge ,_cggee :=_aggg .RuneToCharcode (r );if !_cggee {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gggaf );
};return _ag .CharMetrics {},false ;};_fbaeb ,_bafgg :=_gggaf .GetCharMetrics (_bcge );return _fbaeb ,_bafgg ;};func (_dbfae *PdfPage )getParentResources ()(*PdfPageResources ,error ){_aecag :=_dbfae .Parent ;for _aecag !=nil {_decae ,_bgbga :=_fe .GetDict (_aecag );
if !_bgbga {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_bbc .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _cbafd :=_decae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cbafd !=nil {_aaeba ,_gbbac :=_fe .GetDict (_cbafd );if !_gbbac {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_ggbcb ,_bbfd :=NewPdfPageResourcesFromDict (_aaeba );if _bbfd !=nil {return nil ,_bbfd ;};return _ggbcb ,nil ;};_aecag =_decae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};var ErrColorOutOfRange =_bbc .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// AddOutlineTree adds outlines to a PDF file.
func (_ebbae *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ebbae ._ccbce =outlineTree };

// WriteToFile writes the output PDF to file.
func (_cffgc *PdfWriter )WriteToFile (outputFilePath string )error {_gbffg ,_cfagd :=_dc .Create (outputFilePath );if _cfagd !=nil {return _cfagd ;};defer _gbffg .Close ();return _cffgc .Write (_gbffg );};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dc .File ,error ){const _gcgga ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_bbcec ,_ggfe :=_dc .Open (pdfFile );if _ggfe !=nil {return nil ,nil ,_ggfe ;};_dcab ,_ggfe :=_faded (_bbcec ,opts ,true ,_gcgga );if _ggfe !=nil {_bbcec .Close ();return nil ,nil ,_ggfe ;};_dcab ._cdega =pdfFile ;return _dcab ,_bbcec ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cdbc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdbc .Base ==nil {return nil ,_bbc .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdbc .Base .ColorToRGB (color );};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bggbb *PdfOutline )GetContainingPdfObject ()_fe .PdfObject {return _bggbb ._cadgg };

// ToPdfObject returns a stream object.
func (_cggba *XObjectImage )ToPdfObject ()_fe .PdfObject {_gfgea :=_cggba ._daceg ;if _cggba ._aeeag {return _gfgea ;};_aaedf :=_gfgea .PdfObjectDictionary ;if _cggba .Filter !=nil {_aaedf =_cggba .Filter .MakeStreamDict ();_gfgea .PdfObjectDictionary =_aaedf ;
};_aaedf .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_aaedf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0049\u006d\u0061g\u0065"));_aaedf .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (*(_cggba .Width )));
_aaedf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (*(_cggba .Height )));if _cggba .BitsPerComponent !=nil {_aaedf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (*(_cggba .BitsPerComponent )));
};if _cggba .ColorSpace !=nil {_aaedf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cggba .ColorSpace .ToPdfObject ());};_aaedf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_cggba .Intent );_aaedf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_cggba .ImageMask );
_aaedf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_cggba .Mask );_dfaeb :=_aaedf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _cggba .Decode ==nil &&_dfaeb {_aaedf .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _cggba .Decode !=nil {_aaedf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cggba .Decode );
};_aaedf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_cggba .Interpolate );_aaedf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_cggba .Alternatives );_aaedf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_cggba .SMask );
_aaedf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_cggba .SMaskInData );_aaedf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cggba .Matte );_aaedf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cggba .Name );_aaedf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cggba .StructParent );
_aaedf .SetIfNotNil ("\u0049\u0044",_cggba .ID );_aaedf .SetIfNotNil ("\u004f\u0050\u0049",_cggba .OPI );_aaedf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cggba .Metadata );_aaedf .SetIfNotNil ("\u004f\u0043",_cggba .OC );_aaedf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fe .MakeInteger (int64 (len (_cggba .Stream ))));
_gfgea .Stream =_cggba .Stream ;_cggba ._aeeag =true ;return _gfgea ;};func _gbcb (_ffcf *XObjectForm )(*PdfRectangle ,bool ,error ){if _aggdg ,_deagc :=_ffcf .BBox .(*_fe .PdfObjectArray );_deagc {_feef ,_dfaf :=NewPdfRectangle (*_aggdg );if _dfaf !=nil {return nil ,false ,_dfaf ;
};if _gddda ,_bfbbf :=_ffcf .Matrix .(*_fe .PdfObjectArray );_bfbbf {_aaaeb ,_deea :=_gddda .ToFloat64Array ();if _deea !=nil {return nil ,false ,_deea ;};_ecfb :=_db .IdentityMatrix ();if len (_aaaeb )==6{_ecfb =_db .NewMatrix (_aaaeb [0],_aaaeb [1],_aaaeb [2],_aaaeb [3],_aaaeb [4],_aaaeb [5]);
};_feef .Transform (_ecfb );return _feef ,true ,nil ;};return _feef ,false ,nil ;};return nil ,false ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dgbgd *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dgbgd ._dcbcc ==nil {_dgbgd ._dcbcc =_gc .NewPSExecutor (_dgbgd .Program );};var _gbgcb []_gc .PSObject ;for _ ,_gbcce :=range xVec {_gbgcb =append (_gbgcb ,_gc .MakeReal (_gbcce ));
};_agca ,_bbbab :=_dgbgd ._dcbcc .Execute (_gbgcb );if _bbbab !=nil {return nil ,_bbbab ;};_gfccf ,_bbbab :=_gc .PSObjectArrayToFloat64Array (_agca );if _bbbab !=nil {return nil ,_bbbab ;};return _gfccf ,nil ;};

// Encoder returns the font's text encoder.
func (_aagce pdfFontType0 )Encoder ()_cbg .TextEncoder {return _aagce ._agfa };func (_cce *PdfReader )newPdfActionSubmitFormFromDict (_gaa *_fe .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_abc ,_eecf :=_cdb (_gaa .Get ("\u0046"));if _eecf !=nil {return nil ,_eecf ;
};return &PdfActionSubmitForm {F :_abc ,Fields :_gaa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gaa .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cfdg pdfCIDFontType2 )GetCharMetrics (code _cbg .CharCode )(_ag .CharMetrics ,bool ){if _cgce ,_cgba :=_cfdg ._edgaa [code ];_cgba {return _ag .CharMetrics {Wx :_cgce },true ;};_aaga :=rune (code );_aaab ,_bfde :=_cfdg ._ageg [_aaga ];if !_bfde {_aaab =int (_cfdg ._efadd );
};return _ag .CharMetrics {Wx :float64 (_aaab )},true ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bffe *PdfPage )GetPageDict ()*_fe .PdfObjectDictionary {_adcd :=_bffe ._bcgdf ;_adcd .Clear ();_adcd .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067\u0065"));_adcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bffe .Parent );
if _bffe .LastModified !=nil {_adcd .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bffe .LastModified .ToPdfObject ());};if _bffe .Resources !=nil {_adcd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bffe .Resources .ToPdfObject ());
};if _bffe .CropBox !=nil {_adcd .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bffe .CropBox .ToPdfObject ());};if _bffe .MediaBox !=nil {_adcd .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bffe .MediaBox .ToPdfObject ());};if _bffe .BleedBox !=nil {_adcd .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bffe .BleedBox .ToPdfObject ());
};if _bffe .TrimBox !=nil {_adcd .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bffe .TrimBox .ToPdfObject ());};if _bffe .ArtBox !=nil {_adcd .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bffe .ArtBox .ToPdfObject ());};_adcd .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bffe .BoxColorInfo );
_adcd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bffe .Contents );if _bffe .Rotate !=nil {_adcd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fe .MakeInteger (*_bffe .Rotate ));};_adcd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bffe .Group );
_adcd .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bffe .Thumb );_adcd .SetIfNotNil ("\u0042",_bffe .B );_adcd .SetIfNotNil ("\u0044\u0075\u0072",_bffe .Dur );_adcd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bffe .Trans );_adcd .SetIfNotNil ("\u0041\u0041",_bffe .AA );
_adcd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bffe .Metadata );_adcd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bffe .PieceInfo );_adcd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bffe .StructParents );
_adcd .SetIfNotNil ("\u0049\u0044",_bffe .ID );_adcd .SetIfNotNil ("\u0050\u005a",_bffe .PZ );_adcd .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bffe .SeparationInfo );_adcd .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bffe .Tabs );
_adcd .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bffe .TemplateInstantiated );_adcd .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bffe .PresSteps );_adcd .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bffe .UserUnit );
_adcd .SetIfNotNil ("\u0056\u0050",_bffe .VP );if _bffe ._eeae !=nil {_efcbc :=_fe .MakeArray ();for _ ,_eaacc :=range _bffe ._eeae {if _ddgba :=_eaacc .GetContext ();_ddgba !=nil {_efcbc .Append (_ddgba .ToPdfObject ());}else {_efcbc .Append (_eaacc .ToPdfObject ());
};};if _efcbc .Len ()> 0{_adcd .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_efcbc );};}else if _bffe .Annots !=nil {_adcd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bffe .Annots );};return _adcd ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fe .PdfObject ;Name _fe .PdfObject ;};func _agace ()string {return _df .Version };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cdadf :=&PdfFieldSignature {};_cdadf .PdfField =NewPdfField ();_cdadf .PdfField .SetContext (_cdadf );_cdadf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cdadf .PdfAnnotationWidget .SetContext (_cdadf );
_cdadf .PdfAnnotationWidget ._efg =_cdadf .PdfField ._ddfe ;_cdadf .T =_fe .MakeString ("");_cdadf .F =_fe .MakeInteger (132);_cdadf .V =signature ;return _cdadf ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _abb .Time ){_egga .Lock ();defer _egga .Unlock ();_gdced =modifiedDate ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_eaffe *Image )Resample (targetBitsPerComponent int64 ){if _eaffe .BitsPerComponent ==targetBitsPerComponent {return ;};_gafb :=_eaffe .GetSamples ();if targetBitsPerComponent < _eaffe .BitsPerComponent {_ggda :=_eaffe .BitsPerComponent -targetBitsPerComponent ;
for _aacdca :=range _gafb {_gafb [_aacdca ]>>=uint (_ggda );};}else if targetBitsPerComponent > _eaffe .BitsPerComponent {_dedgf :=targetBitsPerComponent -_eaffe .BitsPerComponent ;for _adeaf :=range _gafb {_gafb [_adeaf ]<<=uint (_dedgf );};};_eaffe .BitsPerComponent =targetBitsPerComponent ;
if _eaffe .BitsPerComponent < 8{_eaffe .resampleLowBits (_gafb );return ;};_bagc :=_af .BytesPerLine (int (_eaffe .Width ),int (_eaffe .BitsPerComponent ),_eaffe .ColorComponents );_bbcdb :=make ([]byte ,_bagc *int (_eaffe .Height ));var (_cdbgg ,_aafa ,_gdbc ,_afaf int ;
_gcdee uint32 ;);for _gdbc =0;_gdbc < int (_eaffe .Height );_gdbc ++{_cdbgg =_gdbc *_bagc ;_aafa =(_gdbc +1)*_bagc -1;_dcfcf :=_dfc .ResampleUint32 (_gafb [_cdbgg :_aafa ],int (targetBitsPerComponent ),8);for _afaf ,_gcdee =range _dcfcf {_bbcdb [_afaf +_cdbgg ]=byte (_gcdee );
};};_eaffe .Data =_bbcdb ;};func (_fffga *PdfPage )setContainer (_adacb *_fe .PdfIndirectObject ){_adacb .PdfObject =_fffga ._bcgdf ;_fffga ._fbecf =_adacb ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ggdcb :=&XObjectForm {};_aegff :=&_fe .PdfObjectStream {};_aegff .PdfObjectDictionary =_fe .MakeDict ();_ggdcb ._adcdb =_aegff ;return _ggdcb ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gd .ReadSeeker )(*PdfReader ,error ){const _eeabag ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _faded (rs ,&ReaderOpts {},false ,_eeabag );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_abacc FieldFlag )Has (fl FieldFlag )bool {return (_abacc .Mask ()&fl .Mask ())> 0};func _eagg (_fbcg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fbcg }};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_afaa *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_afaa ._degb =&hideToolbar };

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_fe .PdfParser ;DiffPolicy _gbf .DiffPolicy ;};func (_dgade *PdfReader )loadStructure ()error {if _dgade ._gabca .GetCrypter ()!=nil &&!_dgade ._gabca .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecfdg :=_dgade ._gabca .GetTrailer ();if _ecfdg ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eggg ,_gacff :=_ecfdg .Get ("\u0052\u006f\u006f\u0074").(*_fe .PdfObjectReference );if !_gacff {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ecfdg );
};_gcdbd ,_bfcfa :=_dgade ._gabca .LookupByReference (*_eggg );if _bfcfa !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bfcfa );
return _bfcfa ;};_fdaaa ,_gacff :=_gcdbd .(*_fe .PdfIndirectObject );if !_gacff {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gcdbd ,*_ecfdg );
return _bbc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aagag ,_gacff :=(*_fdaaa ).PdfObject .(*_fe .PdfObjectDictionary );if !_gacff {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fdaaa .PdfObject );
return _bbc .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_df .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_aagag );_gfegf ,_gacff :=_aagag .Get ("\u0050\u0061\u0067e\u0073").(*_fe .PdfObjectReference );
if !_gacff {return _bbc .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_adbdc ,_bfcfa :=_dgade ._gabca .LookupByReference (*_gfegf );
if _bfcfa !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bfcfa ;};_gdaga ,_gacff :=_adbdc .(*_fe .PdfIndirectObject );if !_gacff {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_df .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_gdaga );return _bbc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bcdf ,_gacff :=_gdaga .PdfObject .(*_fe .PdfObjectDictionary );if !_gacff {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_gdaga );
return _bbc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eacbd ,_gacff :=_fe .GetInt (_bcdf .Get ("\u0043\u006f\u0075n\u0074"));if !_gacff {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _bbc .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gacff =_fe .GetName (_bcdf .Get ("\u0054\u0079\u0070\u0065"));!_gacff {_df .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bcdf .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0050\u0061\u0067e\u0073"));};if _ccdbg ,_cacef :=_fe .GetInt (_bcdf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cacef {_fbebfg :=int64 (*_ccdbg );_dgade .Rotate =&_fbebfg ;};_dgade ._gegaad =_eggg ;
_dgade ._bbfec =_aagag ;_dgade ._ccfbd =_bcdf ;_dgade ._bgdg =_gdaga ;_dgade ._ddcce =int (*_eacbd );_dgade ._bbfga =[]*_fe .PdfIndirectObject {};_aecdg :=map[_fe .PdfObject ]struct{}{};_bfcfa =_dgade .buildPageList (_gdaga ,nil ,_aecdg );if _bfcfa !=nil {return _bfcfa ;
};_df .Log .Trace ("\u002d\u002d\u002d");_df .Log .Trace ("\u0054\u004f\u0043");_df .Log .Trace ("\u0050\u0061\u0067e\u0073");_df .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dgade ._bbfga ),_dgade ._bbfga );_dgade ._bcaca ,_bfcfa =_dgade .loadOutlines ();
if _bfcfa !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bfcfa );
return _bfcfa ;};_dgade .AcroForm ,_bfcfa =_dgade .loadForms ();if _bfcfa !=nil {return _bfcfa ;};_dgade .DSS ,_bfcfa =_dgade .loadDSS ();if _bfcfa !=nil {return _bfcfa ;};_dgade ._ageda ,_bfcfa =_dgade .loadPerms ();if _bfcfa !=nil {return _bfcfa ;};return nil ;
};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fe .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fe .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fe .PdfObjectBool ;_bfgae PdfModel ;_gbaea _fe .PdfObject ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_caga *MultipleFontEncoder )Encoder (rn rune )(_cbg .TextEncoder ,bool ){_aeeb :=_caga .CurrentFont ;_gcadc :=_aeeb .Encoder ();_ ,_baegb :=_gcadc .RuneToCharcode (rn );for _daeeg :=1;_daeeg < len (_caga ._cgbc )&&!_baegb ;_daeeg ++{_aeeb =_caga ._cgbc [_daeeg ];
_gcadc =_aeeb .Encoder ();_ ,_baegb =_gcadc .RuneToCharcode (rn );_caga .CurrentFont =_aeeb ;};return _gcadc ,_baegb ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_ceebb *PdfWriter )flushWriter ()error {if _ceebb ._bfebc ==nil {_ceebb ._bfebc =_ceebb ._efdfa .Flush ();};return _ceebb ._bfebc ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ba *PdfAction )GetContext ()PdfModel {if _ba ==nil {return nil ;};return _ba ._eb ;};func _gebff (_bfbe string )map[string ]string {_gbebb :=_ccfa .Split (_bfbe ,-1);_aagae :=map[string ]string {};for _ ,_bbea :=range _gbebb {_gfacb :=_gcdcg .FindStringSubmatch (_bbea );
if _gfacb ==nil {continue ;};_dbeg ,_bbba :=_gfacb [1],_gfacb [2];_aagae [_dbeg ]=_bbba ;};return _aagae ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fe .PdfObjectInteger ;BitsPerComponent *_fe .PdfObjectInteger ;VerticesPerRow *_fe .PdfObjectInteger ;Decode *_fe .PdfObjectArray ;Function []PdfFunction ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ffbaff FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ffbaff .Mask ()|fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_dgbd *EmbeddedFile )ToPdfObject ()_fe .PdfObject {_fgdb :=_fe .NewFlateEncoder ();_edbc ,_aefdc :=_fe .MakeStream (_dgbd .Content ,_fgdb );if _aefdc !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aefdc );
return nil ;};_dcfc :=_edbc .PdfObjectDictionary ;_dcfc .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_dcfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_ggcfe :=_fe .MakeDict ();_ggcfe .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_fe .MakeString (_dgbd .Hash [:]));_ggcfe .Set ("\u0053\u0069\u007a\u0065",_fe .MakeInteger (int64 (len (_dgbd .Content ))));_ccfb :=_dgbd .CreationTime ;if _ccfb .IsZero (){_ccfb =_abb .Now ();
};_beecf :=_dgbd .ModTime ;if _beecf .IsZero (){_beecf =_ccfb ;};_fbgd ,_aefdc :=NewPdfDateFromTime (_ccfb );if _aefdc !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_aefdc );
return nil ;};_cfffd ,_aefdc :=NewPdfDateFromTime (_beecf );if _aefdc !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_aefdc );
return nil ;};_ggcfe .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fbgd .ToPdfObject ());_ggcfe .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cfffd .ToPdfObject ());_dcfc .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_ggcfe );
_fegad :=_fe .MakeDict ();_fegad .Set (*_fe .MakeName ("\u0046"),_edbc );return _fegad ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_eca :=NewPdfAction ();_bbcd :=&PdfActionResetForm {};_bbcd .PdfAction =_eca ;_eca .SetContext (_bbcd );return _bbcd ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_aced :=&PdfColorPattern {};return _aced };const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// CustomKeys returns all custom info keys as list.
func (_ebcc *PdfInfo )CustomKeys ()[]string {if _ebcc ._bdgg ==nil {return nil ;};_cedcg :=make ([]string ,len (_ebcc ._bdgg .Keys ()));for _ ,_gdeg :=range _ebcc ._bdgg .Keys (){_cedcg =append (_cedcg ,_gdeg .String ());};return _cedcg ;};func _eggdb (_fcege _fe .PdfObject ){_df .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fcege ,_fcege .String ());
if _egee ,_gafab :=_fcege .(*_fe .PdfObjectStream );_gafab {_cbbee ,_afgf :=_fe .DecodeStream (_egee );if _afgf !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_afgf );return ;};_df .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_cbbee );
}else if _bbfef ,_ggeec :=_fcege .(*_fe .PdfIndirectObject );_ggeec {_df .Log .Debug ("\u0025\u0054\u0020%\u0076",_bbfef .PdfObject ,_bbfef .PdfObject );_df .Log .Debug ("\u0025\u0073",_bbfef .PdfObject .String ());};};func (_daecce *PdfWriter )setHashIDs (_dgddb _f .Hash )error {_eefag :=_dgddb .Sum (nil );
if _daecce ._gfcfeg ==""{_daecce ._gfcfeg =_de .EncodeToString (_eefag [:8]);};_daecce .setDocumentIDs (_daecce ._gfcfeg ,_de .EncodeToString (_eefag [8:]));return nil ;};func _eaff (_dfbg _fe .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ddagb :=&PdfColorspaceDeviceNAttributes {};
var _bage *_fe .PdfObjectDictionary ;switch _fefe :=_dfbg .(type ){case *_fe .PdfIndirectObject :_ddagb ._fcaa =_fefe ;var _ffbf bool ;_bage ,_ffbf =_fefe .PdfObject .(*_fe .PdfObjectDictionary );if !_ffbf {_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fe .PdfObjectDictionary :_bage =_fefe ;case *_fe .PdfObjectReference :_dafe :=_fefe .Resolve ();return _eaff (_dafe );default:_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdfacb :=_bage .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fdfacb !=nil {_fcg ,_eeba :=_fe .TraceToDirectObject (_fdfacb ).(*_fe .PdfObjectName );if !_eeba {_df .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ddagb .Subtype =_fcg ;};if _egab :=_bage .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_egab !=nil {_ddagb .Colorants =_egab ;};if _ccbe :=_bage .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_ccbe !=nil {_ddagb .Process =_ccbe ;};if _dddgb :=_bage .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dddgb !=nil {_ddagb .MixingHints =_dddgb ;};return _ddagb ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fdcc DefaultImageHandler )NewImageFromGoImage (goimg _ab .Image )(*Image ,error ){_deaca ,_dgcdg :=_af .FromGoImage (goimg );if _dgcdg !=nil {return nil ,_dgcdg ;};_gfacd :=_cfgaa (_deaca .Base ());return &_gfacd ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_dcfb :=NewPdfAction ();_daa :=&PdfActionRendition {};_daa .PdfAction =_dcfb ;_dcfb .SetContext (_daa );return _daa ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_cg :=NewPdfAction ();_aef :=&PdfActionNamed {};_aef .PdfAction =_cg ;_cg .SetContext (_aef );return _aef ;};

// SetContext sets the sub annotation (context).
func (_cgd *PdfAnnotation )SetContext (ctx PdfModel ){_cgd ._cdg =ctx };

// GetPage returns the PdfPage model for the specified page number.
func (_cggbf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cggbf ._gabca .GetCrypter ()!=nil &&!_cggbf ._gabca .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_cggbf ._bbfga )< pageNumber {return nil ,_bbc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_fbcgd :=pageNumber -1;if _fbcgd < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gecdb :=_cggbf .PageList [_fbcgd ];
return _gecdb ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fgcbbe *PdfShading )GetContext ()PdfModel {return _fgcbbe ._bfgae };

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_cbed *Image )ToJBIG2Image ()(*_fe .JBIG2Image ,error ){_dgegcg ,_dcfgd :=_cbed .ToGoImage ();if _dcfgd !=nil {return nil ,_dcfgd ;};return _fe .GoImageToJBIG2 (_dgegcg ,_fe .JB2ImageAutoThreshold );};

// AddCustomInfo adds a custom info into document info dictionary.
func (_egac *PdfInfo )AddCustomInfo (name string ,value string )error {if _egac ._bdgg ==nil {_egac ._bdgg =_fe .MakeDict ();};if _ ,_dfaac :=_dedcb [name ];_dfaac {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_egac ._bdgg .SetIfNotNil (*_fe .MakeName (name ),_fe .MakeString (value ));return nil ;};

// SetAnnotations sets the annotations list.
func (_fbce *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_fbce ._eeae =annotations };

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_gbac *PdfColorspaceDeviceN )GetNumComponents ()int {return _gbac .ColorantNames .Len ()};

// IsTiling specifies if the pattern is a tiling pattern.
func (_aeffa *PdfPattern )IsTiling ()bool {return _aeffa .PatternType ==1};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fffdc *PdfPageResources )SetXObjectByName (keyName _fe .PdfObjectName ,stream *_fe .PdfObjectStream )error {if _fffdc .XObject ==nil {_fffdc .XObject =_fe .MakeDict ();};_ecedd :=_fe .TraceToDirectObject (_fffdc .XObject );_ffdgca ,_eaad :=_ecedd .(*_fe .PdfObjectDictionary );
if !_eaad {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fffdc .XObject ,_ecedd );return _bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ffdgca .Set (keyName ,stream );return nil ;};

// Encoder returns the font's text encoder.
func (_bcfg *PdfFont )Encoder ()_cbg .TextEncoder {_bagg :=_bcfg .actualFont ();if _bagg ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bcfg ._aeacd );
return nil ;};return _bagg .Encoder ();};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cadgg *_fe .PdfIndirectObject ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bdfd _gd .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fabfa _ab .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dddaf _ab .Image )(*Image ,error );

// Compress an image.
Compress (_dacfd *Image ,_adad int64 )(*Image ,error );};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_bfgea *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_bfgea ._acdff =&displayDocTitle ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_agea *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_afc :=_dfc .NewReader (img .getBase ());_eadg :=_af .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cadg :=_dfc .NewWriter (_eadg );
_bggg :=_dd .Pow (2,float64 (img .BitsPerComponent ))-1;_ecdf :=make ([]uint32 ,3);var (_bggfa error ;_dfde ,_ffaaf ,_ggde ,_bdgd ,_adebg ,_edac float64 ;);for {_bggfa =_afc .ReadSamples (_ecdf );if _bggfa ==_gd .EOF {break ;}else if _bggfa !=nil {return img ,_bggfa ;
};_dfde =float64 (_ecdf [0])/_bggg ;_ffaaf =float64 (_ecdf [1])/_bggg ;_ggde =float64 (_ecdf [2])/_bggg ;_bdgd =_agea .Matrix [0]*_dd .Pow (_dfde ,_agea .Gamma [0])+_agea .Matrix [3]*_dd .Pow (_ffaaf ,_agea .Gamma [1])+_agea .Matrix [6]*_dd .Pow (_ggde ,_agea .Gamma [2]);
_adebg =_agea .Matrix [1]*_dd .Pow (_dfde ,_agea .Gamma [0])+_agea .Matrix [4]*_dd .Pow (_ffaaf ,_agea .Gamma [1])+_agea .Matrix [7]*_dd .Pow (_ggde ,_agea .Gamma [2]);_edac =_agea .Matrix [2]*_dd .Pow (_dfde ,_agea .Gamma [0])+_agea .Matrix [5]*_dd .Pow (_ffaaf ,_agea .Gamma [1])+_agea .Matrix [8]*_dd .Pow (_ggde ,_agea .Gamma [2]);
_dfde =3.240479*_bdgd +-1.537150*_adebg +-0.498535*_edac ;_ffaaf =-0.969256*_bdgd +1.875992*_adebg +0.041556*_edac ;_ggde =0.055648*_bdgd +-0.204043*_adebg +1.057311*_edac ;_dfde =_dd .Min (_dd .Max (_dfde ,0),1.0);_ffaaf =_dd .Min (_dd .Max (_ffaaf ,0),1.0);
_ggde =_dd .Min (_dd .Max (_ggde ,0),1.0);_ecdf [0]=uint32 (_dfde *_bggg );_ecdf [1]=uint32 (_ffaaf *_bggg );_ecdf [2]=uint32 (_ggde *_bggg );if _bggfa =_cadg .WriteSamples (_ecdf );_bggfa !=nil {return img ,_bggfa ;};};return _cfgaa (&_eadg ),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ebeg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetPdfVersion gets the version of the PDF used within this document.
func (_bdfbgd *PdfWriter )GetPdfVersion ()string {return _bdfbgd .getPdfVersion ()};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_babgae *PdfShadingType1 )ToPdfObject ()_fe .PdfObject {_babgae .PdfShading .ToPdfObject ();_bged ,_gabcb :=_babgae .getShadingDict ();if _gabcb !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _babgae .Domain !=nil {_bged .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_babgae .Domain );};if _babgae .Matrix !=nil {_bged .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_babgae .Matrix );};if _babgae .Function !=nil {if len (_babgae .Function )==1{_bged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_babgae .Function [0].ToPdfObject ());
}else {_eaefb :=_fe .MakeArray ();for _ ,_ecacg :=range _babgae .Function {_eaefb .Append (_ecacg .ToPdfObject ());};_bged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eaefb );};};return _babgae ._gbaea ;};func (_efee *PdfReader )newPdfAnnotationRedactFromDict (_gfa *_fe .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bfcdg :=PdfAnnotationRedact {};
_afda ,_afdf :=_efee .newPdfAnnotationMarkupFromDict (_gfa );if _afdf !=nil {return nil ,_afdf ;};_bfcdg .PdfAnnotationMarkup =_afda ;_bfcdg .QuadPoints =_gfa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bfcdg .IC =_gfa .Get ("\u0049\u0043");
_bfcdg .RO =_gfa .Get ("\u0052\u004f");_bfcdg .OverlayText =_gfa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_bfcdg .Repeat =_gfa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bfcdg .DA =_gfa .Get ("\u0044\u0041");_bfcdg .Q =_gfa .Get ("\u0051");
return &_bfcdg ,nil ;};func (_bebefg *PdfWriter )mapObjectStreams (_ffadd bool )(map[_fe .PdfObject ]bool ,bool ){_gcgfag :=make (map[_fe .PdfObject ]bool );for _ ,_dcdcg :=range _bebefg ._dbbcd {if _afbfe ,_cebead :=_dcdcg .(*_fe .PdfObjectStreams );_cebead {_ffadd =true ;
for _ ,_dabgg :=range _afbfe .Elements (){_gcgfag [_dabgg ]=true ;if _dcbca ,_beeae :=_dabgg .(*_fe .PdfIndirectObject );_beeae {_gcgfag [_dcbca .PdfObject ]=true ;};};};};return _gcgfag ,_ffadd ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfActionSound )ToPdfObject ()_fe .PdfObject {_fcf .PdfAction .ToPdfObject ();_aeg :=_fcf ._ea ;_ffba :=_aeg .PdfObject .(*_fe .PdfObjectDictionary );_ffba .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeSound )));_ffba .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fcf .Sound );
_ffba .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fcf .Volume );_ffba .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fcf .Synchronous );_ffba .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fcf .Repeat );
_ffba .SetIfNotNil ("\u004d\u0069\u0078",_fcf .Mix );return _aeg ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_egad *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ggeb :=_dfc .NewReader (img .getBase ());_babfe :=_af .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aaba :=_dfc .NewWriter (_babfe );
_cgbfg :=_dd .Pow (2,float64 (img .BitsPerComponent ))-1;_feeed :=make ([]uint32 ,3);var (_cfee uint32 ;ANorm ,X ,Y ,Z ,_gecb ,_bgbd ,_cfgf float64 ;_gcae error ;);for {_cfee ,_gcae =_ggeb .ReadSample ();if _gcae ==_gd .EOF {break ;}else if _gcae !=nil {return img ,_gcae ;
};ANorm =float64 (_cfee )/_cgbfg ;X =_egad .WhitePoint [0]*_dd .Pow (ANorm ,_egad .Gamma );Y =_egad .WhitePoint [1]*_dd .Pow (ANorm ,_egad .Gamma );Z =_egad .WhitePoint [2]*_dd .Pow (ANorm ,_egad .Gamma );_gecb =3.240479*X +-1.537150*Y +-0.498535*Z ;_bgbd =-0.969256*X +1.875992*Y +0.041556*Z ;
_cfgf =0.055648*X +-0.204043*Y +1.057311*Z ;_gecb =_dd .Min (_dd .Max (_gecb ,0),1.0);_bgbd =_dd .Min (_dd .Max (_bgbd ,0),1.0);_cfgf =_dd .Min (_dd .Max (_cfgf ,0),1.0);_feeed [0]=uint32 (_gecb *_cgbfg );_feeed [1]=uint32 (_bgbd *_cgbfg );_feeed [2]=uint32 (_cfgf *_cgbfg );
if _gcae =_aaba .WriteSamples (_feeed );_gcae !=nil {return img ,_gcae ;};};return _cfgaa (&_babfe ),nil ;};

// RemoveStructParentsKey removes the StructParents key.
func (_bcdb *PdfPage )RemoveStructParentsKey (){_bcdb .StructParents =nil };

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_abab :=&PdfAppender {_efdf :reader ._afgaf ,Reader :reader ,_gcea :reader ._gabca ,_gdcb :reader ._gdacb };_baca ,_dbda :=_abab ._efdf .Seek (0,_gd .SeekEnd );
if _dbda !=nil {return nil ,_dbda ;};_abab ._ggcf =_baca ;if _ ,_dbda =_abab ._efdf .Seek (0,_gd .SeekStart );_dbda !=nil {return nil ,_dbda ;};_abab ._cca ,_dbda =NewPdfReaderWithOpts (_abab ._efdf ,opts );if _dbda !=nil {return nil ,_dbda ;};for _ ,_ggcbg :=range _abab .Reader .GetObjectNums (){if _abab ._bdbf < _ggcbg {_abab ._bdbf =_ggcbg ;
};};_abab ._effa =_abab ._gcea .GetXrefTable ();_abab ._baga =_abab ._gcea .GetXrefOffset ();_abab ._gdf =append (_abab ._gdf ,_abab ._cca .PageList ...);_abab ._dgg =make (map[_fe .PdfObject ]struct{});_abab ._cdbb =make (map[_fe .PdfObject ]int64 );_abab ._abac =make (map[_fe .PdfObject ]struct{});
_abab ._fdcb =_abab ._cca .AcroForm ;_abab ._fdade =_abab ._cca .DSS ;if opts !=nil {_abab ._fgge =opts .Password ;};if encryptOptions !=nil {_abab ._fbfe =encryptOptions ;};return _abab ,nil ;};func (_bbagf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};func (_dae *PdfReader )newPdfActionMovieFromDict (_aff *_fe .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aff .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aff .Get ("\u0054"),Operation :_aff .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// GetMCID returns the MCID of the KValue.
func (_bbdea *KValue )GetMCID ()*int {return _bbdea ._cffeed };func (_cfag *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cfag ._gdgcc };

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// ToPdfObject implements interface PdfModel.
func (_cged *PdfAnnotationLine )ToPdfObject ()_fe .PdfObject {_cged .PdfAnnotation .ToPdfObject ();_gbg :=_cged ._efg ;_deda :=_gbg .PdfObject .(*_fe .PdfObjectDictionary );_cged .PdfAnnotationMarkup .appendToPdfDictionary (_deda );_deda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u004c\u0069\u006e\u0065"));
_deda .SetIfNotNil ("\u004c",_cged .L );_deda .SetIfNotNil ("\u0042\u0053",_cged .BS );_deda .SetIfNotNil ("\u004c\u0045",_cged .LE );_deda .SetIfNotNil ("\u0049\u0043",_cged .IC );_deda .SetIfNotNil ("\u004c\u004c",_cged .LL );_deda .SetIfNotNil ("\u004c\u004c\u0045",_cged .LLE );
_deda .SetIfNotNil ("\u0043\u0061\u0070",_cged .Cap );_deda .SetIfNotNil ("\u0049\u0054",_cged .IT );_deda .SetIfNotNil ("\u004c\u004c\u004f",_cged .LLO );_deda .SetIfNotNil ("\u0043\u0050",_cged .CP );_deda .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cged .Measure );
_deda .SetIfNotNil ("\u0043\u004f",_cged .CO );return _gbg ;};func (_dgbfg fontCommon )fontFlags ()int {if _dgbfg ._gdgcc ==nil {return 0;};return _dgbfg ._gdgcc ._aedg ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bcace *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bcace .AlternateSpace ==nil {return nil ,_bbc .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bcace .AlternateSpace .ColorToRGB (color );};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bcade *Image )GetSamples ()[]uint32 {_dbdegf :=_dfc .ResampleBytes (_bcade .Data ,int (_bcade .BitsPerComponent ));if _bcade .BitsPerComponent < 8{_dbdegf =_bcade .samplesTrimPadding (_dbdegf );};_eded :=int (_bcade .Width )*int (_bcade .Height )*_bcade .ColorComponents ;
if len (_dbdegf )< _eded {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dbdegf ),_eded );
return _dbdegf ;}else if len (_dbdegf )> _eded {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dbdegf ),_eded );
_dbdegf =_dbdegf [:_eded ];};return _dbdegf ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gd .ReadSeeker )(*PdfFont ,error ){_dgcde ,_efag :=_gd .ReadAll (r );if _efag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_efag );
return nil ,_efag ;};_gefbg ,_efag :=_ag .TtfParse (_ee .NewReader (_dgcde ));if _efag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_efag );
return nil ,_efag ;};_dcbb :=&pdfCIDFontType2 {fontCommon :fontCommon {_cdgfg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gefbg .Widths )<=0{return nil ,_bbc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_defd :=1000.0/float64 (_gefbg .UnitsPerEm );_fgcc :=_defd *float64 (_gefbg .Widths [0]);_fbgb :=make (map[rune ]int );_bcadf :=make (map[_ag .GID ]int );_dffff :=_ag .GID (len (_gefbg .Widths ));for _cdgcf ,_dcgea :=range _gefbg .Chars {if _dcgea > _dffff -1{continue ;
};_dcggb :=int (_defd *float64 (_gefbg .Widths [_dcgea ]));_fbgb [_cdgcf ]=_dcggb ;_bcadf [_dcgea ]=_dcggb ;};_dcbb ._ageg =_fbgb ;_dcbb .DW =_fe .MakeInteger (int64 (_fgcc ));_bafed :=_gefe (_bcadf ,uint16 (_dffff ));_dcbb .W =_fe .MakeIndirectObject (_bafed );
_edgf :=_fe .MakeDict ();_edgf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fe .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_edgf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fe .MakeString ("\u0041\u0064\u006fb\u0065"));
_edgf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fe .MakeInteger (0));_dcbb .CIDSystemInfo =_edgf ;_edcfc :=&PdfFontDescriptor {FontName :_fe .MakeName (_gefbg .PostScriptName ),Ascent :_fe .MakeFloat (_defd *float64 (_gefbg .TypoAscender )),Descent :_fe .MakeFloat (_defd *float64 (_gefbg .TypoDescender )),CapHeight :_fe .MakeFloat (_defd *float64 (_gefbg .CapHeight )),FontBBox :_fe .MakeArrayFromFloats ([]float64 {_defd *float64 (_gefbg .Xmin ),_defd *float64 (_gefbg .Ymin ),_defd *float64 (_gefbg .Xmax ),_defd *float64 (_gefbg .Ymax )}),ItalicAngle :_fe .MakeFloat (_gefbg .ItalicAngle ),MissingWidth :_fe .MakeFloat (_fgcc )};
_cadb ,_efag :=_fe .MakeStream (_dgcde ,_fe .NewFlateEncoder ());if _efag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_efag );
return nil ,_efag ;};_cadb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fe .MakeInteger (int64 (len (_dgcde ))));_edcfc .FontFile2 =_cadb ;if _gefbg .Bold {_edcfc .StemV =_fe .MakeInteger (120);}else {_edcfc .StemV =_fe .MakeInteger (70);
};_gfdc :=_fccg ;if _gefbg .IsFixedPitch {_gfdc |=_dcde ;};if _gefbg .ItalicAngle !=0{_gfdc |=_bddbf ;};_edcfc .Flags =_fe .MakeInteger (int64 (_gfdc ));_dcbb ._cecc =_gefbg .PostScriptName ;_dcbb ._gdgcc =_edcfc ;_geedf :=pdfFontType0 {fontCommon :fontCommon {_cdgfg :"\u0054\u0079\u0070e\u0030",_cecc :_gefbg .PostScriptName },DescendantFont :&PdfFont {_aeacd :_dcbb },Encoding :_fe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_agfa :_gefbg .NewEncoder ()};
if len (_gefbg .Chars )> 0{_bcfc :=make (map[_gf .CharCode ]rune ,len (_gefbg .Chars ));for _cegc ,_fade :=range _gefbg .Chars {_ebagd :=_gf .CharCode (_fade );if _aeea ,_afcf :=_bcfc [_ebagd ];!_afcf ||(_afcf &&_aeea > _cegc ){_bcfc [_ebagd ]=_cegc ;};
};_geedf ._fcfaf =_gf .NewToUnicodeCMap (_bcfc );};_aagba :=PdfFont {_aeacd :&_geedf };return &_aagba ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_egc :=NewPdfAnnotation ();_dbcc :=&PdfAnnotationWatermark {};_dbcc .PdfAnnotation =_egc ;_egc .SetContext (_dbcc );return _dbcc ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// SetImage updates XObject Image with new image data.
func (_ffaee *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_ffaee .Filter .UpdateParams (img .GetParamsDict ());_gfdae ,_aaffaf :=_ffaee .Filter .EncodeBytes (img .Data );if _aaffaf !=nil {return _aaffaf ;};_ffaee .Stream =_gfdae ;_fadad :=img .Width ;
_ffaee .Width =&_fadad ;_dbfca :=img .Height ;_ffaee .Height =&_dbfca ;_dgged :=img .BitsPerComponent ;_ffaee .BitsPerComponent =&_dgged ;if cs ==nil {if img .ColorComponents ==1{_ffaee .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_ffaee .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_ffaee .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _bbc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ffaee .ColorSpace =cs ;};return nil ;
};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fe .PdfObject ;B _fe .PdfObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_bfffe *XObjectForm )SetContentStream (content []byte ,encoder _fe .StreamEncoder )error {_bbdfa :=content ;if encoder ==nil {if _bfffe .Filter !=nil {encoder =_bfffe .Filter ;}else {encoder =_fe .NewRawEncoder ();};};_efdbc ,_dcbda :=encoder .EncodeBytes (_bbdfa );
if _dcbda !=nil {return _dcbda ;};_bbdfa =_efdbc ;_bfffe .Stream =_bbdfa ;_bfffe .Filter =encoder ;return nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// ToPdfObject implements interface PdfModel.
func (_ffdd *PdfAnnotationSquiggly )ToPdfObject ()_fe .PdfObject {_ffdd .PdfAnnotation .ToPdfObject ();_adge :=_ffdd ._efg ;_dadf :=_adge .PdfObject .(*_fe .PdfObjectDictionary );_ffdd .PdfAnnotationMarkup .appendToPdfDictionary (_dadf );_dadf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_dadf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffdd .QuadPoints );return _adge ;};func _cebb (_dagcf _fe .PdfObject )(PdfFunction ,error ){_dagcf =_fe .ResolveReference (_dagcf );if _ddaaf ,_begcf :=_dagcf .(*_fe .PdfObjectStream );
_begcf {_bfbad :=_ddaaf .PdfObjectDictionary ;_eeceg ,_dfgb :=_bfbad .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );if !_dfgb {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_eeceg ==0{return _gfbfca (_ddaaf );}else if *_eeceg ==4{return _acgb (_ddaaf );
}else {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dbcef ,_dcfdd :=_dagcf .(*_fe .PdfIndirectObject );_dcfdd {_afcb ,_gcga :=_dbcef .PdfObject .(*_fe .PdfObjectDictionary );
if !_gcga {_df .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bbggf ,_gcga :=_afcb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );
if !_gcga {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bbggf ==2{return _dcgge (_dbcef );}else if *_bbggf ==3{return _dbebc (_dbcef );}else {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _beabb ,_agfg :=_dagcf .(*_fe .PdfObjectDictionary );
_agfg {_bbede ,_ebdg :=_beabb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fe .PdfObjectInteger );if !_ebdg {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bbc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bbede ==2{return _dcgge (_beabb );}else if *_bbede ==3{return _dbebc (_beabb );
}else {return nil ,_bbc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_df .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dagcf );
return nil ,_bbc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aeee PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fe .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_abecc []_fe .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_ccba []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fdbd *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// IsShading specifies if the pattern is a shading pattern.
func (_ggage *PdfPattern )IsShading ()bool {return _ggage .PatternType ==2};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfAction )ToPdfObject ()_fe .PdfObject {_fg :=_bea ._ea ;_dcf :=_fg .PdfObject .(*_fe .PdfObjectDictionary );_dcf .Clear ();_dcf .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_dcf .SetIfNotNil ("\u0053",_bea .S );
_dcf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_bea .Next );return _fg ;};

// SetKDict sets the KDict for the KValue.
func (_gadcc *KValue )SetKDict (kDict *KDict ){_gadcc .Clear ();_gadcc ._ebdgf =kDict };

// Fill populates `form` with values provided by `provider`.
func (_adde *PdfAcroForm )Fill (provider FieldValueProvider )error {return _adde .fill (provider ,nil )};func _gffd (_dgdg _fe .PdfObject )(*PdfColorspaceCalGray ,error ){_baba :=NewPdfColorspaceCalGray ();if _gaba ,_cdcd :=_dgdg .(*_fe .PdfIndirectObject );
_cdcd {_baba ._efcc =_gaba ;};_dgdg =_fe .TraceToDirectObject (_dgdg );_decb ,_fedg :=_dgdg .(*_fe .PdfObjectArray );if !_fedg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _decb .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dgdg =_fe .TraceToDirectObject (_decb .Get (0));_baff ,_fedg :=_dgdg .(*_fe .PdfObjectName );if !_fedg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_baff !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dgdg =_fe .TraceToDirectObject (_decb .Get (1));
_ddfbb ,_fedg :=_dgdg .(*_fe .PdfObjectDictionary );if !_fedg {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_dgdg =_ddfbb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dgdg =_fe .TraceToDirectObject (_dgdg );_bcgd ,_fedg :=_dgdg .(*_fe .PdfObjectArray );if !_fedg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _bcgd .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gacgb ,_bad :=_bcgd .GetAsFloat64Slice ();
if _bad !=nil {return nil ,_bad ;};_baba .WhitePoint =_gacgb ;_dgdg =_ddfbb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dgdg !=nil {_dgdg =_fe .TraceToDirectObject (_dgdg );_ffea ,_efbfb :=_dgdg .(*_fe .PdfObjectArray );if !_efbfb {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _ffea .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fgdc ,_dfdf :=_ffea .GetAsFloat64Slice ();
if _dfdf !=nil {return nil ,_dfdf ;};_baba .BlackPoint =_fgdc ;};_dgdg =_ddfbb .Get ("\u0047\u0061\u006dm\u0061");if _dgdg !=nil {_dgdg =_fe .TraceToDirectObject (_dgdg );_ccebd ,_cccf :=_fe .GetNumberAsFloat (_dgdg );if _cccf !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_baba .Gamma =_ccebd ;};return _baba ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_abgeg *Permissions )GetContainingPdfObject ()_fe .PdfObject {return _abgeg ._gedgde };

// String implements interface PdfObject.
func (_agf *PdfAction )String ()string {_eae ,_fec :=_agf .ToPdfObject ().(*_fe .PdfIndirectObject );if _fec {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_agf ._eb ,_eae .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_fcad *PdfAnnotationPolyLine )ToPdfObject ()_fe .PdfObject {_fcad .PdfAnnotation .ToPdfObject ();_gded :=_fcad ._efg ;_cgec :=_gded .PdfObject .(*_fe .PdfObjectDictionary );_fcad .PdfAnnotationMarkup .appendToPdfDictionary (_cgec );_cgec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cgec .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_fcad .Vertices );_cgec .SetIfNotNil ("\u004c\u0045",_fcad .LE );_cgec .SetIfNotNil ("\u0042\u0053",_fcad .BS );_cgec .SetIfNotNil ("\u0049\u0043",_fcad .IC );_cgec .SetIfNotNil ("\u0042\u0045",_fcad .BE );
_cgec .SetIfNotNil ("\u0049\u0054",_fcad .IT );_cgec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fcad .Measure );return _gded ;};func (_ddeea *pdfFontSimple )addEncoding ()error {var (_ebfe string ;_eeddd map[_cbg .CharCode ]_cbg .GlyphName ;
_edaced _cbg .SimpleEncoder ;);if _ddeea .Encoder ()!=nil {_eaef ,_eegd :=_ddeea .Encoder ().(_cbg .SimpleEncoder );if _eegd &&_eaef !=nil {_ebfe =_eaef .BaseName ();};};if _ddeea .Encoding !=nil {_ggfb ,_eebe ,_agcfd :=_ddeea .getFontEncoding ();if _agcfd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ddeea ._cecc ,_ddeea ._cdgfg ,_ddeea .Encoding ,_ddeea .Encoding ,_agcfd );
return _agcfd ;};if _ggfb !=""{_ebfe =_ggfb ;};_eeddd =_eebe ;_edaced ,_agcfd =_cbg .NewSimpleTextEncoder (_ebfe ,_eeddd );if _agcfd !=nil {return _agcfd ;};};if _edaced ==nil {_fedc :=_ddeea ._gdgcc ;if _fedc !=nil {switch _ddeea ._cdgfg {case "\u0054\u0079\u0070e\u0031":if _fedc .fontFile !=nil &&_fedc .fontFile ._fcdbad !=nil {_df .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_edaced =_fedc .fontFile ._fcdbad ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fedc ._ffbag !=nil {_df .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_becf ,_egefc :=_fedc ._ffbag .MakeEncoder ();
if _egefc ==nil {_edaced =_becf ;};if _ddeea ._fcfaf ==nil {_ddeea ._fcfaf =_fedc ._ffbag .MakeToUnicode ();};};};};};if _edaced !=nil {if _eeddd !=nil {_df .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeddd ,_ddeea .baseFields ());
_edaced =_cbg .ApplyDifferences (_edaced ,_eeddd );};_ddeea .SetEncoder (_edaced );};return nil ;};func _dacdab (_eceacc *PdfPage ){_fgaeg :=_ae .GetLicenseKey ();if _fgaeg !=nil &&_fgaeg .IsLicensed (){return ;};_dffdd :=_fe .PdfObjectName ("\u0055\u0046\u0031");
if !_eceacc .Resources .HasFontByName (_dffdd ){_eceacc .Resources .SetFontByName (_dffdd ,DefaultFont ().ToPdfObject ());};var _fgec []string ;_fgec =append (_fgec ,"\u0071");_fgec =append (_fgec ,"\u0042\u0054");_fgec =append (_fgec ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_dffdd .String ()));
_fgec =append (_fgec ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_fgec =append (_fgec ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_aeebc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_fgec =append (_fgec ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_aeebc ));_fgec =append (_fgec ,"\u0045\u0054");_fgec =append (_fgec ,"\u0051");_efccg :=_bf .Join (_fgec ,"\u000a");_eceacc .AddContentStreamByString (_efccg );_eceacc .ToPdfObject ();
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_agafd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_efdc :=[]float64 {0.0};if _agafd .C0 !=nil {_efdc =_agafd .C0 ;};_gbbbeg :=[]float64 {1.0};if _agafd .C1 !=nil {_gbbbeg =_agafd .C1 ;};var _gfccc []float64 ;for _eddc :=0;_eddc < len (_efdc );_eddc ++{_eggbe :=_efdc [_eddc ]+_dd .Pow (x [0],_agafd .N )*(_gbbbeg [_eddc ]-_efdc [_eddc ]);
_gfccc =append (_gfccc ,_eggbe );};return _gfccc ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_cedg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_aada *XObjectForm )GetContainingPdfObject ()_fe .PdfObject {return _aada ._adcdb };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cagb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bbc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgcg :=vals [0];if _cgcg < 0.0||_cgcg > 1.0{_df .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _cgcg < 0.0{_cgcg =0.0;}else if _cgcg > 1.0{_cgcg =1.0;};return NewPdfColorDeviceGray (_cgcg ),nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GetOptimizer returns current PDF optimizer.
func (_fdaec *PdfWriter )GetOptimizer ()Optimizer {return _fdaec ._cbcfa };var _ pdfFont =(*pdfFontType0 )(nil );

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ffabg :=&XObjectImage {};_eeedg :=&_fe .PdfObjectStream {};_eeedg .PdfObjectDictionary =_fe .MakeDict ();_ffabg ._daceg =_eeedg ;return _ffabg ;};var _ pdfFont =(*pdfFontType3 )(nil );

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fe .PdfObjectBool ;SigFlags *_fe .PdfObjectInteger ;CO *_fe .PdfObjectArray ;DR *PdfPageResources ;DA *_fe .PdfObjectString ;Q *_fe .PdfObjectInteger ;XFA _fe .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _fe .PdfObject ;_ggdb *_fe .PdfIndirectObject ;_adgc bool ;};func _fcefa (_dbafd rune )string {for _fdeda ,_efcaa :=range _ff .Categories {if len (_fdeda )==2&&_ff .Is (_efcaa ,_dbafd ){return _fdeda ;};};return "\u0043\u006e";};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gadbg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _daeca []*PdfField ;_eggbea :=map[*_fe .PdfIndirectObject ]struct{}{};for _ ,_fgfbdd :=range _gadbg .PageList {_cfbgg ,_beaf :=_fgfbdd .GetAnnotations ();if _beaf !=nil {return _beaf ;
};for _ ,_dadaga :=range _cfbgg {var _gedebc *PdfField ;switch _caffa :=_dadaga .GetContext ().(type ){case *PdfAnnotationWidget :if _caffa ._feg !=nil {_gedebc =_caffa ._feg ;break ;};if _bebcba ,_daccgf :=_fe .GetIndirect (_caffa .Parent );_daccgf {_gedebc ,_beaf =_gadbg .newPdfFieldFromIndirectObject (_bebcba ,nil );
if _beaf ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bebcba ,_beaf );
};if _caffa ._efg !=nil {_gedebc ,_beaf =_gadbg .newPdfFieldFromIndirectObject (_caffa ._efg ,nil );if _beaf ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_caffa ._efg ,_beaf );
};};if _gedebc ==nil {continue ;};if _ ,_gagbb :=_eggbea [_gedebc ._ddfe ];_gagbb {continue ;};_eggbea [_gedebc ._ddfe ]=struct{}{};_daeca =append (_daeca ,_gedebc );};};if len (_daeca )==0{return nil ;};if _gadbg .AcroForm ==nil {_gadbg .AcroForm =NewPdfAcroForm ();
};_gadbg .AcroForm .Fields =&_daeca ;return nil ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fe .PdfObject )(_fe .PdfObjectName ,error ){var _agbe *_fe .PdfObjectName ;var _aaad *_fe .PdfObjectArray ;if _eegb ,_beca :=obj .(*_fe .PdfIndirectObject );_beca {if _bggf ,_edab :=_eegb .PdfObject .(*_fe .PdfObjectArray );
_edab {_aaad =_bggf ;}else if _fafb ,_fafc :=_eegb .PdfObject .(*_fe .PdfObjectName );_fafc {_agbe =_fafb ;};}else if _eefaf ,_becd :=obj .(*_fe .PdfObjectArray );_becd {_aaad =_eefaf ;}else if _cfff ,_ddda :=obj .(*_fe .PdfObjectName );_ddda {_agbe =_cfff ;
};if _agbe !=nil {switch *_agbe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_agbe ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_agbe ,nil ;
};};if _aaad !=nil &&_aaad .Len ()> 0{if _acdce ,_dcbd :=_aaad .Get (0).(*_fe .PdfObjectName );_dcbd {switch *_acdce {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _aaad .Len ()==1{return *_acdce ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_acdce ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_acdce ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_acdce ,nil ;};};};return "",nil ;};func _gbcfa (_effg *PdfField ,_agba _fe .PdfObject ){for _ ,_dgegf :=range _effg .Annotations {_dgegf .AS =_agba ;
_dgegf .ToPdfObject ();};};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fe .PdfObject ;Sy _fe .PdfObject ;};func (_bfdagg *XObjectImage )getParamsDict ()*_fe .PdfObjectDictionary {_efbag :=_fe .MakeDict ();_efbag .Set ("\u0057\u0069\u0064t\u0068",_fe .MakeInteger (*_bfdagg .Width ));
_efbag .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fe .MakeInteger (*_bfdagg .Height ));_efbag .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fe .MakeInteger (int64 (_bfdagg .ColorSpace .GetNumComponents ())));
_efbag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fe .MakeInteger (*_bfdagg .BitsPerComponent ));return _efbag ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bfcc *PdfAnnotation )GetContainingPdfObject ()_fe .PdfObject {return _bfcc ._efg };

// GetRevisionNumber returns the version of the current Pdf document
func (_agadd *PdfReader )GetRevisionNumber ()int {return _agadd ._gabca .GetRevisionNumber ()};

// ToPdfObject implements interface PdfModel.
func (_cdcb *PdfFilespec )ToPdfObject ()_fe .PdfObject {_badg :=_cdcb .getDict ();_badg .Clear ();_badg .Set ("\u0054\u0079\u0070\u0065",_fe .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_badg .SetIfNotNil ("\u0046\u0053",_cdcb .FS );
_badg .SetIfNotNil ("\u0046",_cdcb .F );_badg .SetIfNotNil ("\u0055\u0046",_cdcb .UF );_badg .SetIfNotNil ("\u0044\u004f\u0053",_cdcb .DOS );_badg .SetIfNotNil ("\u004d\u0061\u0063",_cdcb .Mac );_badg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cdcb .Unix );
_badg .SetIfNotNil ("\u0049\u0044",_cdcb .ID );_badg .SetIfNotNil ("\u0056",_cdcb .V );_badg .SetIfNotNil ("\u0045\u0046",_cdcb .EF );_badg .SetIfNotNil ("\u0052\u0046",_cdcb .RF );_badg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_cdcb .Desc );_badg .SetIfNotNil ("\u0043\u0049",_cdcb .CI );
_badg .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_cdcb .AFRelationship );return _cdcb ._ccdd ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfgf *PdfFieldText )ToPdfObject ()_fe .PdfObject {_bfgf .PdfField .ToPdfObject ();_ggag :=_bfgf ._ddfe ;_eafe :=_ggag .PdfObject .(*_fe .PdfObjectDictionary );_eafe .Set ("\u0046\u0054",_fe .MakeName ("\u0054\u0078"));if _bfgf .DA !=nil {_eafe .Set ("\u0044\u0041",_bfgf .DA );
};if _bfgf .Q !=nil {_eafe .Set ("\u0051",_bfgf .Q );};if _bfgf .DS !=nil {_eafe .Set ("\u0044\u0053",_bfgf .DS );};if _bfgf .RV !=nil {_eafe .Set ("\u0052\u0056",_bfgf .RV );};if _bfgf .MaxLen !=nil {_eafe .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfgf .MaxLen );
};return _ggag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bceba *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gegd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gegd .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gegd .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_egba :=NewPdfColorspaceDeviceGray ();return _egba .ColorToRGB (color );}else if _gegd .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gegd .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_aeef :=NewPdfColorspaceDeviceCMYK ();return _aeef .ColorToRGB (color );}else {return nil ,_bbc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gegd );
return _gegd .Alternate .ColorToRGB (color );};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bedeg *PdfField )SetContext (ctx PdfModel ){_bedeg ._fcec =ctx };

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_eec :=NewPdfAction ();_bbd :=&PdfActionGoToR {};_bbd .PdfAction =_eec ;_eec .SetContext (_bbd );return _bbd ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_beeeg *_fe .PdfIndirectObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_bgece *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ffdbg :=NewPdfWriter ();_ffdbg .SetFileName (_bgece ._cdega );if opts ==nil {opts =&ReaderToWriterOpts {};};_defed ,_abdb :=_bgece .GetNumPages ();if _abdb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abdb );
return nil ,_abdb ;};for _fabac :=1;_fabac <=_defed ;_fabac ++{_bcgg ,_deded :=_bgece .GetPage (_fabac );if _deded !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deded );return nil ,_deded ;};if opts .PageProcessCallback !=nil {_deded =opts .PageProcessCallback (_fabac ,_bcgg );
if _deded !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deded );return nil ,_deded ;};}else if opts .PageCallback !=nil {opts .PageCallback (_fabac ,_bcgg );};_deded =_ffdbg .AddPage (_bcgg );if _deded !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deded );
return nil ,_deded ;};};_ffdbg ._gdbffa =_bgece .PdfVersion ();if !opts .SkipInfo {_bdee ,_fgbff :=_bgece .GetPdfInfo ();if _fgbff !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgbff );}else {_ffdbg ._fefff .PdfObject =_bdee .ToPdfObject ();
};};if !opts .SkipMetadata {if _gbbf :=_bgece ._bbfec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gbbf !=nil {if _aecd :=_ffdbg .SetCatalogMetadata (_gbbf );_aecd !=nil {return nil ,_aecd ;};};};if !opts .SkipMarkInfo {if _adadfe ,_agefb :=_bgece .GetCatalogMarkInfo ();
_agefb {if _agaff :=_ffdbg .SetCatalogMarkInfo (_adadfe );_agaff !=nil {return nil ,_agaff ;};};};if !opts .SkipAcroForm {_ecgf :=_ffdbg .SetForms (_bgece .AcroForm );if _ecgf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecgf );
return nil ,_ecgf ;};};if !opts .SkipViewerPreferences {if _dbgaa ,_caeec :=_bgece .GetCatalogViewerPreferences ();_caeec {if _fdcbdf :=_ffdbg .SetCatalogViewerPreferences (_dbgaa );_fdcbdf !=nil {return nil ,_fdcbdf ;};};};if !opts .SkipLanguage {if _gdfed ,_aeeed :=_bgece .GetCatalogLanguage ();
_aeeed {if _ceacc :=_ffdbg .SetCatalogLanguage (_gdfed );_ceacc !=nil {return nil ,_ceacc ;};};};if !opts .SkipOutlines {_ffdbg .AddOutlineTree (_bgece .GetOutlineTree ());};if !opts .SkipOCProperties {_fbbbf ,_fagc :=_bgece .GetOCProperties ();if _fagc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagc );
}else {_fagc =_ffdbg .SetOCProperties (_fbbbf );if _fagc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagc );};};};if !opts .SkipPageLabels {_adcfc ,_bddda :=_bgece .GetPageLabels ();if _bddda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddda );
}else {_bddda =_ffdbg .SetPageLabels (_adcfc );if _bddda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddda );};};};if !opts .SkipNamedDests {_ecff ,_abbdd :=_bgece .GetNamedDestinations ();if _abbdd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abbdd );
}else {_abbdd =_ffdbg .SetNamedDestinations (_ecff );if _abbdd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abbdd );};};};if !opts .SkipNameDictionary {_abccg ,_fccd :=_bgece .GetNameDictionary ();if _fccd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fccd );
}else {_fccd =_ffdbg .SetNameDictionary (_abccg );if _fccd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fccd );};};};_edbca ,_bdfg :=_bgece .GetCatalogStructTreeRoot ();if _bdfg {_gaded :=_ffdbg .SetCatalogStructTreeRoot (_edbca );
if _gaded !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaded );};};if !opts .SkipRotation &&_bgece .Rotate !=nil {if _cgdaf :=_ffdbg .SetRotation (*_bgece .Rotate );_cgdaf !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgdaf );
};};return &_ffdbg ,nil ;};func (_gcdg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gcdg ._gabca .GetCrypter ()!=nil &&!_gcdg ._gabca .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aggdc :=_gcdg ._bbfec ;_dbdd :=_aggdc .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dbdd ==nil {return nil ,nil ;};_df .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ccecd :=_fe .ResolveReference (_dbdd );
_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ccecd );if _bbgfc :=_fe .IsNullObject (_ccecd );_bbgfc {_df .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_feegd ,_fbbaa :=_ccecd .(*_fe .PdfIndirectObject );if !_fbbaa {if _ ,_ggbbf :=_fe .GetDict (_ccecd );!_ggbbf {_df .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_df .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_feegd =_fe .MakeIndirectObject (_ccecd );};_dfba ,_fbbaa :=_feegd .PdfObject .(*_fe .PdfObjectDictionary );if !_fbbaa {return nil ,_bbc .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_df .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dfba );_fgbaf ,_ ,_abceac :=_gcdg .buildOutlineTree (_feegd ,nil ,nil ,nil );if _abceac !=nil {return nil ,_abceac ;};_df .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fgbaf );
return _fgbaf ,nil ;};func (_cbdc *PdfWriter )setWriter (_bebade _gd .Writer ){_cbdc ._acfae =_cbdc ._bggd ;_cbdc ._efdfa =_a .NewWriter (_bebade );};

// PrintPageRange returns the value of the printPageRange.
func (_fbffe *ViewerPreferences )PrintPageRange ()[]int {return _fbffe ._gbgcf };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcdbe *PdfShadingType2 )ToPdfObject ()_fe .PdfObject {_fcdbe .PdfShading .ToPdfObject ();_acdee ,_faaaa :=_fcdbe .getShadingDict ();if _faaaa !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acdee ==nil {_df .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fcdbe .Coords !=nil {_acdee .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fcdbe .Coords );
};if _fcdbe .Domain !=nil {_acdee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcdbe .Domain );};if _fcdbe .Function !=nil {if len (_fcdbe .Function )==1{_acdee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcdbe .Function [0].ToPdfObject ());
}else {_becee :=_fe .MakeArray ();for _ ,_adff :=range _fcdbe .Function {_becee .Append (_adff .ToPdfObject ());};_acdee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_becee );};};if _fcdbe .Extend !=nil {_acdee .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fcdbe .Extend );
};return _fcdbe ._gbaea ;};

// String returns a string representation of what flags are set.
func (_ffga FieldFlag )String ()string {_gaadee :="";if _ffga ==FieldFlagClear {_gaadee ="\u0043\u006c\u0065a\u0072";return _gaadee ;};if _ffga &FieldFlagReadOnly > 0{_gaadee +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ffga &FieldFlagRequired > 0{_gaadee +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _ffga &FieldFlagNoExport > 0{_gaadee +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ffga &FieldFlagNoToggleToOff > 0{_gaadee +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ffga &FieldFlagRadio > 0{_gaadee +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _ffga &FieldFlagPushbutton > 0{_gaadee +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ffga &FieldFlagRadiosInUnision > 0{_gaadee +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};
if _ffga &FieldFlagMultiline > 0{_gaadee +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _ffga &FieldFlagPassword > 0{_gaadee +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ffga &FieldFlagFileSelect > 0{_gaadee +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _ffga &FieldFlagDoNotScroll > 0{_gaadee +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _ffga &FieldFlagComb > 0{_gaadee +="\u007c\u0043\u006fm\u0062";};if _ffga &FieldFlagRichText > 0{_gaadee +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _ffga &FieldFlagDoNotSpellCheck > 0{_gaadee +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _ffga &FieldFlagCombo > 0{_gaadee +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ffga &FieldFlagEdit > 0{_gaadee +="\u007c\u0045\u0064i\u0074";
};if _ffga &FieldFlagSort > 0{_gaadee +="\u007c\u0053\u006fr\u0074";};if _ffga &FieldFlagMultiSelect > 0{_gaadee +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _ffga &FieldFlagCommitOnSelChange > 0{_gaadee +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _bf .Trim (_gaadee ,"\u007c");};func _cdcaf (_gadbd *_fe .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cebfd :=PdfShadingType1 {};if _ffbdf :=_gadbd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ffbdf !=nil {_ffbdf =_fe .TraceToDirectObject (_ffbdf );
_bbadba ,_agcae :=_ffbdf .(*_fe .PdfObjectArray );if !_agcae {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffbdf );return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cebfd .Domain =_bbadba ;};if _affece :=_gadbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_affece !=nil {_affece =_fe .TraceToDirectObject (_affece );_accee ,_baeb :=_affece .(*_fe .PdfObjectArray );if !_baeb {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_affece );
return nil ,_bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cebfd .Matrix =_accee ;};_eedeg :=_gadbd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eedeg ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cebfd .Function =[]PdfFunction {};if _bbgbg ,_feefc :=_eedeg .(*_fe .PdfObjectArray );_feefc {for _ ,_bbfgb :=range _bbgbg .Elements (){_fddbbb ,_fcfac :=_cebb (_bbfgb );if _fcfac !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcfac );
return nil ,_fcfac ;};_cebfd .Function =append (_cebfd .Function ,_fddbbb );};}else {_eafea ,_edfec :=_cebb (_eedeg );if _edfec !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edfec );
return nil ,_edfec ;};_cebfd .Function =append (_cebfd .Function ,_eafea );};return &_cebfd ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_acde *PdfFont )CharcodesToStrings (charcodes []_cbg .CharCode ,replacementText string )([]string ,int ,int ){_bbaae :=_acde .baseFields ();_cagg :=make ([]string ,0,len (charcodes ));_fagga :=0;_bfade :=_acde .Encoder ();_gfbeb :=_bbaae ._fcfaf !=nil &&_acde .IsSimple ()&&_acde .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_bf .Contains (_bbaae ._fcfaf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_gfbeb &&_bfade !=nil {switch _gbeba :=_bfade .(type ){case _cbg .SimpleEncoder :_fcaf :=_gbeba .BaseName ();if _ ,_bgbdf :=_deec [_fcaf ];_bgbdf {for _ ,_ebgb :=range charcodes {if _eadeb ,_fafcg :=_bfade .CharcodeToRune (_ebgb );_fafcg {_cagg =append (_cagg ,string (_eadeb ));
}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ebgb ,charcodes ,_bbaae .isCIDFont (),_acde ,_bfade );
_fagga ++;_cagg =append (_cagg ,_gf .MissingCodeString );};};return _cagg ,len (_cagg ),_fagga ;};};};for _ ,_aeaca :=range charcodes {if _bbaae ._fcfaf !=nil {if _ffacg ,_daded :=_bbaae ._fcfaf .CharcodeToUnicode (_gf .CharCode (_aeaca ));_daded {_fbaed ,_ :=_bd .DecodeLastRuneInString (_ffacg );
_fcaef :=_fcefa (_fbaed );if !(_fcaef =="\u0043\u006f"){_cagg =append (_cagg ,_ffacg );continue ;};_df .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_aeaca ,_ffacg );
};};if _bfade !=nil {if _fadd ,_aggad :=_bfade .CharcodeToRune (_aeaca );_aggad {_gbbbd :=_fcefa (_fadd );if !(_gbbbd =="\u0043\u006f"){_cagg =append (_cagg ,string (_fadd ));continue ;};_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_aeaca ,string (_fadd ));
};};if replacementText !=""{_cagg =append (_cagg ,replacementText );}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_aeaca ,charcodes ,_bbaae .isCIDFont (),_acde ,_bfade );
_fagga ++;_cagg =append (_cagg ,_gf .MissingCodeString );};};if _fagga !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fagga ,_acde );
};return _cagg ,len (_cagg ),_fagga ;};

// AddRefChild adds a child reference object.
func (_bebef *KDict )AddRefChild (kChild *_fe .PdfObjectDictionary ){_bebef ._fdgad =append (_bebef ._fdgad ,&KValue {_ebfce :kChild });};func (_cegaee *LTV )buildCertChain (_gfca ,_ddcgc []*_ffc .Certificate )([]*_ffc .Certificate ,map[string ]*_ffc .Certificate ,error ){_egge :=map[string ]*_ffc .Certificate {};
for _ ,_beeed :=range _gfca {_egge [_beeed .Subject .CommonName ]=_beeed ;};_dfdb :=_gfca ;for _ ,_ccbeg :=range _ddcgc {_cgbd :=_ccbeg .Subject .CommonName ;if _ ,_geegb :=_egge [_cgbd ];_geegb {continue ;};_egge [_cgbd ]=_ccbeg ;_dfdb =append (_dfdb ,_ccbeg );
};if len (_dfdb )==0{return nil ,nil ,ErrSignNoCertificates ;};var _aecad error ;for _efgb :=_dfdb [0];_efgb !=nil &&!_cegaee .CertClient .IsCA (_efgb );{_ffgg ,_gcdbf :=_egge [_efgb .Issuer .CommonName ];if !_gcdbf {if _ffgg ,_aecad =_cegaee .CertClient .GetIssuer (_efgb );
_aecad !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_aecad );
break ;};_egge [_efgb .Issuer .CommonName ]=_ffgg ;_dfdb =append (_dfdb ,_ffgg );};_efgb =_ffgg ;};return _dfdb ,_egge ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_eegde *PdfShadingPatternType3 )ToPdfObject ()_fe .PdfObject {_eegde .PdfPattern .ToPdfObject ();_aggff :=_eegde .getDict ();if _eegde .Shading !=nil {_aggff .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eegde .Shading .ToPdfObject ());};if _eegde .Matrix !=nil {_aggff .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eegde .Matrix );
};if _eegde .ExtGState !=nil {_aggff .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eegde .ExtGState );};return _eegde ._aegcc ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ccaff *PdfReader )GetCatalogStructTreeRoot ()(_fe .PdfObject ,bool ){_bfdd :=_fe .ResolveReference (_ccaff ._bbfec .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _bfdd ==nil {return nil ,false ;};if !_ccaff ._feega {_geba :=_ccaff .traverseObjectData (_bfdd );
if _geba !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_geba );
return nil ,false ;};};return _bfdd ,true ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_abdcef []byte ;_bddgb []uint32 ;_fgbbd *_fe .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_fbef *PdfBorderStyle )ToPdfObject ()_fe .PdfObject {_gbga :=_fe .MakeDict ();if _fbef ._bccd !=nil {if _caa ,_gafg :=_fbef ._bccd .(*_fe .PdfIndirectObject );_gafg {_caa .PdfObject =_gbga ;};};_gbga .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fbef .W !=nil {_gbga .Set ("\u0057",_fe .MakeFloat (*_fbef .W ));};if _fbef .S !=nil {_gbga .Set ("\u0053",_fe .MakeName (_fbef .S .GetPdfName ()));};if _fbef .D !=nil {_gbga .Set ("\u0044",_fe .MakeArrayFromIntegers (*_fbef .D ));};if _fbef ._bccd !=nil {return _fbef ._bccd ;
};return _gbga ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cdbe :=NewPdfAnnotation ();_aebb :=&PdfAnnotationCaret {};_aebb .PdfAnnotation =_cdbe ;_aebb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdbe .SetContext (_aebb );return _aebb ;};func (_ffdc *PdfAppender )replaceObject (_cbdd ,_adcc _fe .PdfObject ){switch _ebdbf :=_cbdd .(type ){case *_fe .PdfIndirectObject :_ffdc ._cdbb [_adcc ]=_ebdbf .ObjectNumber ;
case *_fe .PdfObjectStream :_ffdc ._cdbb [_adcc ]=_ebdbf .ObjectNumber ;};};

// IsCenterWindow returns the value of the centerWindow flag.
func (_cebdf *ViewerPreferences )IsCenterWindow ()bool {if _cebdf ._bcefb ==nil {return false ;};return *_cebdf ._bcefb ;};func (_dfagbf *PdfWriter )AttachFile (file *EmbeddedFile )error {_ecead :=_dfagbf ._cbbce ;if _ecead ==nil {_ecead =_dagf ();};_dcdeb :=_ecead .addEmbeddedFile (file );
if _dcdeb !=nil {return _dcdeb ;};_dfagbf ._cbbce =_ecead ;return nil ;};func (_cdgcg *PdfReader )resolveReference (_bfded *_fe .PdfObjectReference )(_fe .PdfObject ,bool ,error ){_dbdc ,_dggbd :=_cdgcg ._gabca .ObjCache [int (_bfded .ObjectNumber )];if !_dggbd {_df .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bfded );
_gfgcf ,_daffe :=_cdgcg ._gabca .LookupByReference (*_bfded );if _daffe !=nil {return nil ,false ,_daffe ;};_cdgcg ._gabca .ObjCache [int (_bfded .ObjectNumber )]=_gfgcf ;return _gfgcf ,false ,nil ;};return _dbdc ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aaac *PdfAnnotationWatermark )ToPdfObject ()_fe .PdfObject {_aaac .PdfAnnotation .ToPdfObject ();_bdfa :=_aaac ._efg ;_aefa :=_bdfa .PdfObject .(*_fe .PdfObjectDictionary );_aefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_aefa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_aaac .FixedPrint );return _bdfa ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bgade *PdfReader )GetNameDictionary ()(_fe .PdfObject ,error ){_bdddab :=_fe .ResolveReference (_bgade ._bbfec .Get ("\u004e\u0061\u006de\u0073"));if _bdddab ==nil {return nil ,nil ;};if !_bgade ._feega {_eage :=_bgade .traverseObjectData (_bdddab );
if _eage !=nil {return nil ,_eage ;};};return _bdddab ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_fada *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _fada ._ecfdd .(*PdfShadingPattern );};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_adee *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gfbge :=NewPdfOutlineItem ();_gfbge .Title =_fe .MakeEncodedString (_adee .Title ,true );_gfbge .Dest =_adee .Dest .ToPdfObject ();var _gggga []*PdfOutlineItem ;var _cddc int64 ;var _eddb *PdfOutlineItem ;
for _ ,_cbadf :=range _adee .Entries {_acbbc ,_gfggc :=_cbadf .ToPdfOutlineItem ();_acbbc .Parent =&_gfbge .PdfOutlineTreeNode ;if _eddb !=nil {_eddb .Next =&_acbbc .PdfOutlineTreeNode ;_acbbc .Prev =&_eddb .PdfOutlineTreeNode ;};_gggga =append (_gggga ,_acbbc );
_cddc +=_gfggc ;_eddb =_acbbc ;};_eggee :=len (_gggga );_cddc +=int64 (_eggee );if _eggee > 0{_gfbge .First =&_gggga [0].PdfOutlineTreeNode ;_gfbge .Last =&_gggga [_eggee -1].PdfOutlineTreeNode ;_gfbge .Count =&_cddc ;};return _gfbge ,_cddc ;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_ebgeg *ViewerPreferences )PickTrayByPDFSize ()bool {if _ebgeg ._eebag ==nil {return false ;};return *_ebgeg ._eebag ;};func _bfbafa ()string {_egga .Lock ();defer _egga .Unlock ();return _faaca };

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_daeag *PdfReader )Inspect ()(map[string ]int ,error ){return _daeag ._gabca .Inspect ()};func (_adf *PdfReader )newPdfAnnotationMovieFromDict (_ecece *_fe .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bfg :=PdfAnnotationMovie {};_bfg .T =_ecece .Get ("\u0054");
_bfg .Movie =_ecece .Get ("\u004d\u006f\u0076i\u0065");_bfg .A =_ecece .Get ("\u0041");return &_bfg ,nil ;};func (_dfdgf *PdfShading )getShadingDict ()(*_fe .PdfObjectDictionary ,error ){_efbac :=_dfdgf ._gbaea ;if _fegbe ,_afdac :=_efbac .(*_fe .PdfIndirectObject );
_afdac {_ebbc ,_cbfeb :=_fegbe .PdfObject .(*_fe .PdfObjectDictionary );if !_cbfeb {return nil ,_fe .ErrTypeError ;};return _ebbc ,nil ;}else if _dagff ,_bfccb :=_efbac .(*_fe .PdfObjectStream );_bfccb {return _dagff .PdfObjectDictionary ,nil ;}else if _fgdcc ,_egafa :=_efbac .(*_fe .PdfObjectDictionary );
_egafa {return _fgdcc ,nil ;}else {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fe .ErrTypeError ;
};};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gfgc *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bcgc :=func (_dcfe float64 )float64 {if _dcfe >=6.0/29{return _dcfe *_dcfe *_dcfe ;};return 108.0/841*(_dcfe -4.0/29.0);};_cgdc :=img ._cccfg ;if len (_cgdc )!=6{_df .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_cgdc =_gfgc .DecodeArray ();};_gdcg :=_dfc .NewReader (img .getBase ());_bgeb :=_af .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._dbgaf ,img ._cccfg );_dfefc :=_dfc .NewWriter (_bgeb );_fbaf :=_dd .Pow (2,float64 (img .BitsPerComponent ))-1;
_facce :=make ([]uint32 ,3);var (_cagba error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dced ,_ebfa ,_fbfff float64 ;);for {_cagba =_gdcg .ReadSamples (_facce );if _cagba ==_gd .EOF {break ;}else if _cagba !=nil {return img ,_cagba ;};Ls =float64 (_facce [0])/_fbaf ;
As =float64 (_facce [1])/_fbaf ;Bs =float64 (_facce [2])/_fbaf ;Ls =_af .LinearInterpolate (Ls ,0.0,1.0,_cgdc [0],_cgdc [1]);As =_af .LinearInterpolate (As ,0.0,1.0,_cgdc [2],_cgdc [3]);Bs =_af .LinearInterpolate (Bs ,0.0,1.0,_cgdc [4],_cgdc [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gfgc .WhitePoint [0]*_bcgc (L );Y =_gfgc .WhitePoint [1]*_bcgc (M );Z =_gfgc .WhitePoint [2]*_bcgc (N );_dced =3.240479*X +-1.537150*Y +-0.498535*Z ;_ebfa =-0.969256*X +1.875992*Y +0.041556*Z ;_fbfff =0.055648*X +-0.204043*Y +1.057311*Z ;
_dced =_dd .Min (_dd .Max (_dced ,0),1.0);_ebfa =_dd .Min (_dd .Max (_ebfa ,0),1.0);_fbfff =_dd .Min (_dd .Max (_fbfff ,0),1.0);_facce [0]=uint32 (_dced *_fbaf );_facce [1]=uint32 (_ebfa *_fbaf );_facce [2]=uint32 (_fbfff *_fbaf );if _cagba =_dfefc .WriteSamples (_facce );
_cagba !=nil {return img ,_cagba ;};};return _cfgaa (&_bgeb ),nil ;};func (_aafeff *PdfWriter )writeObjectsInStreams (_ddeff map[_fe .PdfObject ]bool )error {for _ ,_bgfaf :=range _aafeff ._dbbcd {if _gfdcb :=_ddeff [_bgfaf ];_gfdcb {continue ;};_edfac :=int64 (0);
switch _bacga :=_bgfaf .(type ){case *_fe .PdfIndirectObject :_edfac =_bacga .ObjectNumber ;case *_fe .PdfObjectStream :_edfac =_bacga .ObjectNumber ;case *_fe .PdfObjectStreams :_edfac =_bacga .ObjectNumber ;case *_fe .PdfObjectDictionary ,*_fe .PdfObjectString :default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_bgfaf ,_bacga );
return ErrTypeCheck ;};if _aafeff ._aebgf !=nil &&_bgfaf !=_aafeff ._bceed {_bffdd :=_aafeff ._aebgf .Encrypt (_bgfaf ,_edfac ,0);if _bffdd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bffdd );
return _bffdd ;};};_aafeff .writeObject (int (_edfac ),_bgfaf );};return nil ;};func _cgbae (_dgcfd []byte )[]byte {const _gfaba =52845;const _ddcfc =22719;_bfcab :=55665;for _ ,_febe :=range _dgcfd [:4]{_bfcab =(int (_febe )+_bfcab )*_gfaba +_ddcfc ;};
_cgadf :=make ([]byte ,len (_dgcfd )-4);for _efaf ,_fegee :=range _dgcfd [4:]{_cgadf [_efaf ]=byte (int (_fegee )^_bfcab >>8);_bfcab =(int (_fegee )+_bfcab )*_gfaba +_ddcfc ;};return _cgadf ;};

// ToPdfObject implements interface PdfModel.
func (_dfad *PdfAnnotationStrikeOut )ToPdfObject ()_fe .PdfObject {_dfad .PdfAnnotation .ToPdfObject ();_bcaf :=_dfad ._efg ;_cadc :=_bcaf .PdfObject .(*_fe .PdfObjectDictionary );_dfad .PdfAnnotationMarkup .appendToPdfDictionary (_cadc );_cadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fe .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cadc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfad .QuadPoints );return _bcaf ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionGoTo3DView )ToPdfObject ()_fe .PdfObject {_bfc .PdfAction .ToPdfObject ();_bdd :=_bfc ._ea ;_ceda :=_bdd .PdfObject .(*_fe .PdfObjectDictionary );_ceda .SetIfNotNil ("\u0053",_fe .MakeName (string (ActionTypeGoTo3DView )));_ceda .SetIfNotNil ("\u0054\u0041",_bfc .TA );
_ceda .SetIfNotNil ("\u0056",_bfc .V );return _bdd ;};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_cbge *PdfWriter )SetCatalogStructTreeRoot (tree _fe .PdfObject )error {if tree ==nil {_cbge ._efaac .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_cbge ._efaac .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _cbge .addObjects (tree );};

// ToPdfObject implements interface PdfModel.
func (_cgfb *PdfAnnotationProjection )ToPdfObject ()_fe .PdfObject {_cgfb .PdfAnnotation .ToPdfObject ();_ebf :=_cgfb ._efg ;_fbdec :=_ebf .PdfObject .(*_fe .PdfObjectDictionary );_cgfb .PdfAnnotationMarkup .appendToPdfDictionary (_fbdec );return _ebf ;
};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_gbed *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_egfab *PdfSignature ,_gccdea Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_fbefc *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_dcfef *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_cgaag *PdfSignature ,_cbbfe Hasher )error ;};

// ToPdfObject returns the PDF representation of the function.
func (_bggc *PdfFunctionType3 )ToPdfObject ()_fe .PdfObject {_gdfbe :=_fe .MakeDict ();_gdfbe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fe .MakeInteger (3));_acgce :=&_fe .PdfObjectArray {};for _ ,_afbcc :=range _bggc .Domain {_acgce .Append (_fe .MakeFloat (_afbcc ));
};_gdfbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acgce );if _bggc .Range !=nil {_bdcg :=&_fe .PdfObjectArray {};for _ ,_ddeeg :=range _bggc .Range {_bdcg .Append (_fe .MakeFloat (_ddeeg ));};_gdfbe .Set ("\u0052\u0061\u006eg\u0065",_bdcg );};if _bggc .Functions !=nil {_cbbdb :=&_fe .PdfObjectArray {};
for _ ,_cdcba :=range _bggc .Functions {_cbbdb .Append (_cdcba .ToPdfObject ());};_gdfbe .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cbbdb );};if _bggc .Bounds !=nil {_eeecd :=&_fe .PdfObjectArray {};for _ ,_ccafg :=range _bggc .Bounds {_eeecd .Append (_fe .MakeFloat (_ccafg ));
};_gdfbe .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_eeecd );};if _bggc .Encode !=nil {_ffgfb :=&_fe .PdfObjectArray {};for _ ,_abdcd :=range _bggc .Encode {_ffgfb .Append (_fe .MakeFloat (_abdcd ));};_gdfbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ffgfb );
};if _bggc ._dfbe !=nil {_bggc ._dfbe .PdfObject =_gdfbe ;return _bggc ._dfbe ;};return _gdfbe ;};func _faaf (_ccdb _ag .StdFont )pdfFontSimple {_gcfe :=_ccdb .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cdgfg :"\u0054\u0079\u0070e\u0031",_cecc :_ccdb .Name ()},_cgfcc :_ccdb .GetMetricsTable (),_deacf :&PdfFontDescriptor {FontName :_fe .MakeName (string (_gcfe .Name )),FontFamily :_fe .MakeName (_gcfe .Family ),FontWeight :_fe .MakeFloat (float64 (_gcfe .Weight )),Flags :_fe .MakeInteger (int64 (_gcfe .Flags )),FontBBox :_fe .MakeArrayFromFloats (_gcfe .BBox [:]),ItalicAngle :_fe .MakeFloat (_gcfe .ItalicAngle ),Ascent :_fe .MakeFloat (_gcfe .Ascent ),Descent :_fe .MakeFloat (_gcfe .Descent ),CapHeight :_fe .MakeFloat (_gcfe .CapHeight ),XHeight :_fe .MakeFloat (_gcfe .XHeight ),StemV :_fe .MakeFloat (_gcfe .StemV ),StemH :_fe .MakeFloat (_gcfe .StemH )},_egeg :_ccdb .Encoder ()};
};

// String returns the name of the colorspace (DeviceN).
func (_cedc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fe .PdfObject ;};

// AddFont adds a font dictionary to the Font resources.
func (_cecgf *PdfPage )AddFont (name _fe .PdfObjectName ,font _fe .PdfObject )error {if _cecgf .Resources ==nil {_cecgf .Resources =NewPdfPageResources ();};if _cecgf .Resources .Font ==nil {_cecgf .Resources .Font =_fe .MakeDict ();};_bgcd ,_fcdfg :=_fe .TraceToDirectObject (_cecgf .Resources .Font ).(*_fe .PdfObjectDictionary );
if !_fcdfg {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fe .TraceToDirectObject (_cecgf .Resources .Font ));
return _bbc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgcd .Set (name ,font );return nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fe .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_egbdc pdfFontType0 )GetRuneMetrics (r rune )(_ag .CharMetrics ,bool ){if _egbdc .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_egbdc );
return _ag .CharMetrics {},false ;};return _egbdc .DescendantFont .GetRuneMetrics (r );};