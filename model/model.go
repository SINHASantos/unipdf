//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_fb "bytes";_fc "crypto/md5";_bgb "crypto/rand";_cd "crypto/sha1";_dd "crypto/x509";_bg "encoding/binary";_ae "encoding/hex";_fd "errors";_e "fmt";_bca "github.com/gabriel-vasile/mimetype";_aac "github.com/unidoc/freetype";
_ea "github.com/unidoc/freetype/truetype";_cde "github.com/unidoc/pkcs7";_adc "github.com/unidoc/unipdf/v4/common";_fbg "github.com/unidoc/unipdf/v4/core";_abc "github.com/unidoc/unipdf/v4/core/security";_ce "github.com/unidoc/unipdf/v4/core/security/crypt";
_ed "github.com/unidoc/unipdf/v4/internal/cmap";_ced "github.com/unidoc/unipdf/v4/internal/imageutil";_eef "github.com/unidoc/unipdf/v4/internal/license";_gba "github.com/unidoc/unipdf/v4/internal/sampling";_cf "github.com/unidoc/unipdf/v4/internal/textencoding";
_dde "github.com/unidoc/unipdf/v4/internal/timeutils";_fbe "github.com/unidoc/unipdf/v4/internal/transform";_ffa "github.com/unidoc/unipdf/v4/internal/uuid";_ff "github.com/unidoc/unipdf/v4/model/internal/docutil";_dg "github.com/unidoc/unipdf/v4/model/internal/fonts";
_eae "github.com/unidoc/unipdf/v4/model/mdp";_gb "github.com/unidoc/unipdf/v4/model/sigutil";_ac "github.com/unidoc/unipdf/v4/ps";_cb "github.com/unidoc/unitype";_faa "golang.org/x/image/font";_be "golang.org/x/xerrors";_b "hash";_aa "image";_ec "image/color";
_d "image/draw";_ "image/gif";_ad "image/png";_gg "io";_ab "math";_bc "math/rand";_aef "os";_ee "path/filepath";_c "regexp";_db "sort";_eg "strconv";_gdg "strings";_g "sync";_dcc "time";_fa "unicode";_dc "unicode/utf8";);

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_agad :=&PdfShadingType2 {};_agad .PdfShading =&PdfShading {};_agad .PdfShading ._gedcg =_fbg .MakeIndirectObject (_fbg .MakeDict ());_agad .PdfShading ._bfffe =_agad ;return _agad ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gebfb :=&PdfColorPatternType2 {};return _gebfb ;};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_edfa *KDict )GenerateRandomID ()string {_dbgde ,_gadcc :=_ffa .NewUUID ();if _gadcc !=nil {_adc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_gadcc );};if _dbgde !=_ffa .Nil {_acge :=_dbgde .String ();
_edfa .ID =_fbg .MakeString (_acge );return _acge ;};return "";};

// GetBorderWidth returns the border style's width.
func (_fbef *PdfBorderStyle )GetBorderWidth ()float64 {if _fbef .W ==nil {return 1;};return *_fbef .W ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dabbg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dabbg ._dagbf !=nil {return _dabbg ._dagbf ,nil ;};if _dabbg .ColorSpace ==nil {return nil ,nil ;};_cdde ,_cbfdc :=_gdcce (_dabbg .ColorSpace );if _cbfdc !=nil {return nil ,_cbfdc ;
};_dabbg ._dagbf =_cdde ;return _dabbg ._dagbf ,nil ;};func _fcff (_cfgg _fbg .PdfObject )(*PdfBorderStyle ,error ){_adb :=&PdfBorderStyle {};_adb ._dabe =_cfgg ;var _fcfc *_fbg .PdfObjectDictionary ;_cfgg =_fbg .TraceToDirectObject (_cfgg );_fcfc ,_fcd :=_cfgg .(*_fbg .PdfObjectDictionary );
if !_fcd {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _agddfd :=_fcfc .Get ("\u0054\u0079\u0070\u0065");_agddfd !=nil {_fafg ,_geebb :=_agddfd .(*_fbg .PdfObjectName );if !_geebb {_adc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_agddfd );
}else {if *_fafg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_adc .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_fafg );};};};if _gcd :=_fcfc .Get ("\u0057");
_gcd !=nil {_dgb ,_gfeg :=_fbg .GetNumberAsFloat (_gcd );if _gfeg !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gfeg );return nil ,_gfeg ;};_adb .W =&_dgb ;
};if _befa :=_fcfc .Get ("\u0053");_befa !=nil {_gffeg ,_dcdc :=_befa .(*_fbg .PdfObjectName );if !_dcdc {return nil ,_fd .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _cfgd BorderStyle ;switch *_gffeg {case "\u0053":_cfgd =BorderStyleSolid ;case "\u0044":_cfgd =BorderStyleDashed ;case "\u0042":_cfgd =BorderStyleBeveled ;case "\u0049":_cfgd =BorderStyleInset ;case "\u0055":_cfgd =BorderStyleUnderline ;default:_adc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gffeg );
return nil ,_fd .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_adb .S =&_cfgd ;};if _cgde :=_fcfc .Get ("\u0044");_cgde !=nil {_fead ,_bfgfd :=_cgde .(*_fbg .PdfObjectArray );
if !_bfgfd {_adc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cgde );return nil ,_fd .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_fdfb ,_eaabe :=_fead .ToIntegerArray ();if _eaabe !=nil {_adc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_eaabe );
return nil ,_eaabe ;};_adb .D =&_fdfb ;};return _adb ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bff :=NewPdfAnnotation ();_cdcc :=&PdfAnnotation3D {};_cdcc .PdfAnnotation =_bff ;_bff .SetContext (_cdcc );return _cdcc ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bbcb :=PdfColorCalGray (grayVal );return &_bbcb ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cgbge *PdfFontDescriptor )ToPdfObject ()_fbg .PdfObject {_deccf :=_fbg .MakeDict ();if _cgbge ._geeag ==nil {_cgbge ._geeag =&_fbg .PdfIndirectObject {};};_cgbge ._geeag .PdfObject =_deccf ;_deccf .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _cgbge .FontName !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cgbge .FontName );};if _cgbge .FontFamily !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cgbge .FontFamily );};if _cgbge .FontStretch !=nil {_deccf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cgbge .FontStretch );
};if _cgbge .FontWeight !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cgbge .FontWeight );};if _cgbge .Flags !=nil {_deccf .Set ("\u0046\u006c\u0061g\u0073",_cgbge .Flags );};if _cgbge .FontBBox !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cgbge .FontBBox );
};if _cgbge .ItalicAngle !=nil {_deccf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cgbge .ItalicAngle );};if _cgbge .Ascent !=nil {_deccf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cgbge .Ascent );};if _cgbge .Descent !=nil {_deccf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cgbge .Descent );
};if _cgbge .Leading !=nil {_deccf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cgbge .Leading );};if _cgbge .CapHeight !=nil {_deccf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cgbge .CapHeight );};if _cgbge .XHeight !=nil {_deccf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cgbge .XHeight );
};if _cgbge .StemV !=nil {_deccf .Set ("\u0053\u0074\u0065m\u0056",_cgbge .StemV );};if _cgbge .StemH !=nil {_deccf .Set ("\u0053\u0074\u0065m\u0048",_cgbge .StemH );};if _cgbge .AvgWidth !=nil {_deccf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cgbge .AvgWidth );
};if _cgbge .MaxWidth !=nil {_deccf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cgbge .MaxWidth );};if _cgbge .MissingWidth !=nil {_deccf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cgbge .MissingWidth );};
if _cgbge .FontFile !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cgbge .FontFile );};if _cgbge .FontFile2 !=nil {_deccf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cgbge .FontFile2 );};if _cgbge .FontFile3 !=nil {_deccf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cgbge .FontFile3 );
};if _cgbge .CharSet !=nil {_deccf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cgbge .CharSet );};if _cgbge .Style !=nil {_deccf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cgbge .FontName );};if _cgbge .Lang !=nil {_deccf .Set ("\u004c\u0061\u006e\u0067",_cgbge .Lang );
};if _cgbge .FD !=nil {_deccf .Set ("\u0046\u0044",_cgbge .FD );};if _cgbge .CIDSet !=nil {_deccf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cgbge .CIDSet );};return _cgbge ._geeag ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_gbcdbe *PdfWriter )SetNameDictionary (names _fbg .PdfObject )error {if names ==nil {return nil ;};_gbcdbe ._dafcg =_gbgcf (names );_adc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_gbcdbe ._gdgbee .Set ("\u004e\u0061\u006de\u0073",names );return _gbcdbe .addObjects (names );};func (_fdbba *PdfSignature )extractChainFromPKCS7 ()([]*_dd .Certificate ,error ){_abcafa ,_cbbaf :=_cde .Parse (_fdbba .Contents .Bytes ());if _cbbaf !=nil {return nil ,_cbbaf ;
};return _abcafa .Certificates ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_beg *PdfActionSetOCGState )ToPdfObject ()_fbg .PdfObject {_beg .PdfAction .ToPdfObject ();_cedc :=_beg ._gc ;_dgg :=_cedc .PdfObject .(*_fbg .PdfObjectDictionary );_dgg .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeSetOCGState )));_dgg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_beg .State );
_dgg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_beg .PreserveRB );return _cedc ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ccfd :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ccfd ;};

// Tab order types.
type TabOrderType string ;

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fbg .PdfObject ;Q _fbg .PdfObject ;RC _fbg .PdfObject ;DS _fbg .PdfObject ;CL _fbg .PdfObject ;IT _fbg .PdfObject ;BE _fbg .PdfObject ;RD _fbg .PdfObject ;BS _fbg .PdfObject ;LE _fbg .PdfObject ;
};

// AddMCIDChild adds a child MCID object.
func (_dead *KDict )AddMCIDChild (mcid int ){_dead ._cgfe =append (_dead ._cgfe ,&KValue {_dcffg :&mcid })};func (_cgdb *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fbg .PdfObjectString ;Author *_fbg .PdfObjectString ;Subject *_fbg .PdfObjectString ;Keywords *_fbg .PdfObjectString ;Creator *_fbg .PdfObjectString ;Producer *_fbg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_fbg .PdfObjectName ;_fdgce *_fbg .PdfObjectDictionary ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_adfa *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_adfa .Base .GetNumComponents ();_dgde :=int (vals [0])*N ;
if _dgde < 0||(_dgde +N -1)>=len (_adfa ._dfab ){_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgde );return nil ,ErrColorOutOfRange ;};_accd :=_adfa ._dfab [_dgde :_dgde +N ];
var _fedc []float64 ;for _ ,_eacg :=range _accd {_fedc =append (_fedc ,float64 (_eacg )/255.0);};_cbd ,_gbcc :=_adfa .Base .ColorFromFloats (_fedc );if _gbcc !=nil {return nil ,_gbcc ;};return _cbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eaee *PdfActionJavaScript )ToPdfObject ()_fbg .PdfObject {_eaee .PdfAction .ToPdfObject ();_ddfg :=_eaee ._gc ;_edf :=_ddfg .PdfObject .(*_fbg .PdfObjectDictionary );_edf .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeJavaScript )));_edf .SetIfNotNil ("\u004a\u0053",_eaee .JS );
return _ddfg ;};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_aagef *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_aagef ._dddcag =&pickTrayByPDFSize ;};func (_deba *PdfReader )newPdfAnnotationStampFromDict (_deag *_fbg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bcca :=PdfAnnotationStamp {};
_efbg ,_ecdf :=_deba .newPdfAnnotationMarkupFromDict (_deag );if _ecdf !=nil {return nil ,_ecdf ;};_bcca .PdfAnnotationMarkup =_efbg ;_bcca .Name =_deag .Get ("\u004e\u0061\u006d\u0065");return &_bcca ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fbg .PdfObject ;Open _fbg .PdfObject ;};

// ToInteger convert to an integer format.
func (_fbgd *PdfColorLab )ToInteger (bits int )[3]uint32 {_aedb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aedb *_fbgd .L ()),uint32 (_aedb *_fbgd .A ()),uint32 (_aedb *_fbgd .B ())};};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_abcba :=_bca .Detect (content );_bcagf :=_fc .Sum (content );_gfffa :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_abcba .String (),Hash :_ae .EncodeToString (_bcagf [:])};
return _gfffa ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_fefd *PdfPage )AddFont (name _fbg .PdfObjectName ,font _fbg .PdfObject )error {if _fefd .Resources ==nil {_fefd .Resources =NewPdfPageResources ();};if _fefd .Resources .Font ==nil {_fefd .Resources .Font =_fbg .MakeDict ();};_cdgbf ,_ddege :=_fbg .TraceToDirectObject (_fefd .Resources .Font ).(*_fbg .PdfObjectDictionary );
if !_ddege {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fbg .TraceToDirectObject (_fefd .Resources .Font ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cdgbf .Set (name ,font );return nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ffac :=NewPdfAction ();_ddf :=&PdfActionNamed {};_ddf .PdfAction =_ffac ;_ffac .SetContext (_ddf );return _ddf ;};

// AllFields returns a flattened list of all fields in the form.
func (_bafd *PdfAcroForm )AllFields ()[]*PdfField {if _bafd ==nil {return nil ;};var _gcccb []*PdfField ;if _bafd .Fields !=nil {for _ ,_cfgcd :=range *_bafd .Fields {_gcccb =append (_gcccb ,_daebd (_cfgcd )...);};};return _gcccb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fgdd *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbbd ,_geef :=_fbg .GetNumbersAsFloat (objects );
if _geef !=nil {return nil ,_geef ;};return _fgdd .ColorFromFloats (_fbbd );};func _ddcf (_adab _fbg .PdfObject )(map[_cf .CharCode ]float64 ,error ){if _adab ==nil {return nil ,nil ;};_gddd ,_bbff :=_fbg .GetArray (_adab );if !_bbff {return nil ,nil ;
};_aeddf :=map[_cf .CharCode ]float64 {};_fced :=_gddd .Len ();for _geeg :=0;_geeg < _fced -1;_geeg ++{_abag :=_fbg .TraceToDirectObject (_gddd .Get (_geeg ));_gfcfe ,_bdcd :=_fbg .GetIntVal (_abag );if !_bdcd {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_geeg ,_abag );
};_geeg ++;if _geeg > _fced -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gddd );};_dfgbg :=_fbg .TraceToDirectObject (_gddd .Get (_geeg ));
switch _dfgbg .(type ){case *_fbg .PdfObjectArray :_baff ,_ :=_fbg .GetArray (_dfgbg );if _bccda ,_bbaga :=_baff .ToFloat64Array ();_bbaga ==nil {for _fbbg :=0;_fbbg < len (_bccda );_fbbg ++{_aeddf [_cf .CharCode (_gfcfe +_fbbg )]=_bccda [_fbbg ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_geeg ,_dfgbg );
};case *_fbg .PdfObjectInteger :_bebea ,_cdeca :=_fbg .GetIntVal (_dfgbg );if !_cdeca {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_geeg ,_dfgbg );
};_geeg ++;if _geeg > _fced -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gddd );};_cedcc :=_gddd .Get (_geeg );_abba ,_gdba :=_fbg .GetNumberAsFloat (_cedcc );
if _gdba !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_geeg ,_cedcc );};for _cdgc :=_gfcfe ;_cdgc <=_bebea ;
_cdgc ++{_aeddf [_cf .CharCode (_cdgc )]=_abba ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_geeg ,_dfgbg );
};};return _aeddf ,nil ;};

// RemveTabOrder removes the tab order for the page.
func (_bbcba *PdfPage )RemoveTabOrder (){_bbcba .Tabs =nil };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func _beaacf ()string {_ecegc .Lock ();defer _ecegc .Unlock ();_eccdge :=_eef .GetLicenseKey ();if len (_bcffcb )> 0&&(_eccdge .IsLicensed ()||_cacff ){return _bcffcb ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_bcfdg (),_eccdge .TypeToString ());
};func (_gabcg *PdfWriter )writeOutlines ()error {if _gabcg ._egaaaf ==nil {return nil ;};_adc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gabcg ._egaaaf );_dbbgbd :=_gabcg ._egaaaf .ToPdfObject ();
_adc .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dbbgbd ,_dbbgbd ,_dbbgbd );_gabcg ._gdgbee .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dbbgbd );
_eafca :=_gabcg .addObjects (_dbbgbd );if _eafca !=nil {return _eafca ;};return nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_bdgfdb *XObjectForm )GetContainingPdfObject ()_fbg .PdfObject {return _bdgfdb ._gcbcg };

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_cadae *Names )ToPdfObject ()_fbg .PdfObject {_bcfce :=_cadae ._gggca ;_gacfd ,_dedaf :=_bcfce .PdfObject .(*_fbg .PdfObjectDictionary );if !_dedaf {_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _bcfce ;};if _cadae .EmbeddedFiles !=nil {_gacfd .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_fbg .MakeIndirectObject (_cadae .EmbeddedFiles ));};return _bcfce ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_cfbfb *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _fbg .GetNumberAsFloat (_cfbfb .XHeight );};var _ddbbb =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";
StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";
StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";
StructureTypeForm ="\u0046\u006f\u0072\u006d";);func (_gffe *PdfReader )newPdfAnnotationRichMediaFromDict (_afa *_fbg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gfbb :=&PdfAnnotationRichMedia {};_gfbb .RichMediaSettings =_afa .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_gfbb .RichMediaContent =_afa .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _gfbb ,nil ;};

// String returns a string that describes `base`.
func (_egfb fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_egfb .coreString ());};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dgac *PdfColorCalRGB )GetNumComponents ()int {return 3};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_fbg .PdfObjectName ;P *_fbg .PdfObjectInteger ;V *_fbg .PdfObjectName ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_gegbdf *PdfPageResources )GetXObjectFormByName (keyName _fbg .PdfObjectName )(*XObjectForm ,error ){_bbde ,_eebge :=_gegbdf .GetXObjectByName (keyName );if _bbde ==nil {return nil ,nil ;};if _eebge !=XObjectTypeForm {return nil ,_fd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_dcdac ,_bgcg :=NewXObjectFormFromStream (_bbde );if _bgcg !=nil {return nil ,_bgcg ;};return _dcdac ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fbg .PdfObjectStream ;OCSP []*_fbg .PdfObjectStream ;CRL []*_fbg .PdfObjectStream ;TU *_fbg .PdfObjectString ;TS *_fbg .PdfObjectString ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fbg .PdfObjectInteger ;TilingType *_fbg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fbg .PdfObjectFloat ;YStep *_fbg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fbg .PdfObjectArray ;};


// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_edgde *PdfPage )ToPdfObject ()_fbg .PdfObject {_ebde :=_edgde ._ecedg ;_edgde .GetPageDict ();return _ebde ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bfaf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bgbd :=func (_bcbb float64 )float64 {if _bcbb >=6.0/29{return _bcbb *_bcbb *_bcbb ;};return 108.0/841*(_bcbb -4.0/29.0);};_egeb :=img ._beggbb ;if len (_egeb )!=6{_adc .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_egeb =_bfaf .DecodeArray ();};_aeeab :=_gba .NewReader (img .getBase ());_ddbae :=_ced .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._acag ,img ._beggbb );_ffce :=_gba .NewWriter (_ddbae );_fffad :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;
_cagg :=make ([]uint32 ,3);var (_ebfg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ceage ,_gdfg ,_ceec float64 ;);for {_ebfg =_aeeab .ReadSamples (_cagg );if _ebfg ==_gg .EOF {break ;}else if _ebfg !=nil {return img ,_ebfg ;};Ls =float64 (_cagg [0])/_fffad ;As =float64 (_cagg [1])/_fffad ;
Bs =float64 (_cagg [2])/_fffad ;Ls =_ced .LinearInterpolate (Ls ,0.0,1.0,_egeb [0],_egeb [1]);As =_ced .LinearInterpolate (As ,0.0,1.0,_egeb [2],_egeb [3]);Bs =_ced .LinearInterpolate (Bs ,0.0,1.0,_egeb [4],_egeb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_bfaf .WhitePoint [0]*_bgbd (L );Y =_bfaf .WhitePoint [1]*_bgbd (M );Z =_bfaf .WhitePoint [2]*_bgbd (N );_ceage =3.240479*X +-1.537150*Y +-0.498535*Z ;_gdfg =-0.969256*X +1.875992*Y +0.041556*Z ;_ceec =0.055648*X +-0.204043*Y +1.057311*Z ;
_ceage =_ab .Min (_ab .Max (_ceage ,0),1.0);_gdfg =_ab .Min (_ab .Max (_gdfg ,0),1.0);_ceec =_ab .Min (_ab .Max (_ceec ,0),1.0);_cagg [0]=uint32 (_ceage *_fffad );_cagg [1]=uint32 (_gdfg *_fffad );_cagg [2]=uint32 (_ceec *_fffad );if _ebfg =_ffce .WriteSamples (_cagg );
_ebfg !=nil {return img ,_ebfg ;};};return _cgdba (&_ddbae ),nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dfggb *PdfOutline )GetContainingPdfObject ()_fbg .PdfObject {return _dfggb ._ggde };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dabe _fbg .PdfObject ;};func (_facff *PdfReader )newPdfFieldSignatureFromDict (_bgdcb *_fbg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ccegf :=&PdfFieldSignature {};_bacg ,_dcfb :=_fbg .GetIndirect (_bgdcb .Get ("\u0056"));
if _dcfb {var _gecb error ;_ccegf .V ,_gecb =_facff .newPdfSignatureFromIndirect (_bacg );if _gecb !=nil {return nil ,_gecb ;};};_ccegf .Lock ,_ =_fbg .GetIndirect (_bgdcb .Get ("\u004c\u006f\u0063\u006b"));_ccegf .SV ,_ =_fbg .GetIndirect (_bgdcb .Get ("\u0053\u0056"));
return _ccegf ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fbg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gdcf *_fbg .PdfIndirectObject ;};func (_abad *PdfReader )newPdfAcroFormFromDict (_bfbf *_fbg .PdfIndirectObject ,_aggg *_fbg .PdfObjectDictionary )(*PdfAcroForm ,error ){_ffage :=NewPdfAcroForm ();
if _bfbf !=nil {_ffage ._bdef =_bfbf ;_bfbf .PdfObject =_fbg .MakeDict ();};if _cbfbd :=_aggg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbfbd !=nil &&!_fbg .IsNullObject (_cbfbd ){_gfcd ,_ebafa :=_fbg .GetArray (_cbfbd );if !_ebafa {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbfbd );
};var _fdaag []*PdfField ;for _ ,_cadc :=range _gfcd .Elements (){_adebb ,_affb :=_fbg .GetIndirect (_cadc );if !_affb {if _ ,_eddbc :=_cadc .(*_fbg .PdfObjectNull );_eddbc {_adc .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_adc .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cadc );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebdfc ,_afec :=_abad .newPdfFieldFromIndirectObject (_adebb ,nil );
if _afec !=nil {return nil ,_afec ;};_adc .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ebdfc );_fdaag =append (_fdaag ,_ebdfc );};_ffage .Fields =&_fdaag ;};if _eadge :=_aggg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_eadge !=nil {_fgdfd ,_eddce :=_fbg .GetBool (_eadge );if _eddce {_ffage .NeedAppearances =_fgdfd ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eadge );
};};if _cgcf :=_aggg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cgcf !=nil {_abgc ,_adccb :=_fbg .GetInt (_cgcf );if _adccb {_ffage .SigFlags =_abgc ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgcf );
};};if _adeeb :=_aggg .Get ("\u0043\u004f");_adeeb !=nil {_bfbae ,_aabb :=_fbg .GetArray (_adeeb );if _aabb {_ffage .CO =_bfbae ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_adeeb );
};};if _fgbb :=_aggg .Get ("\u0044\u0052");_fgbb !=nil {if _bbga ,_aaccad :=_fbg .GetDict (_fgbb );_aaccad {_dfddg ,_gaeee :=NewPdfPageResourcesFromDict (_bbga );if _gaeee !=nil {_adc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_gaeee );
return nil ,_gaeee ;};_ffage .DR =_dfddg ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fgbb );};};if _dfaa :=_aggg .Get ("\u0044\u0041");
_dfaa !=nil {_eeaa ,_aabab :=_fbg .GetString (_dfaa );if _aabab {_ffage .DA =_eeaa ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dfaa );
};};if _eged :=_aggg .Get ("\u0051");_eged !=nil {_cdgb ,_efbec :=_fbg .GetInt (_eged );if _efbec {_ffage .Q =_cdgb ;}else {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eged );
};};if _ebeec :=_aggg .Get ("\u0058\u0046\u0041");_ebeec !=nil {_ffage .XFA =_ebeec ;};if _cbbd :=_aggg .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_cbbd !=nil {_ffage .ADBEEchoSign =_cbbd ;};_ffage .ToPdfObject ();
return _ffage ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_fefg *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_dbfa :=map[*PdfAnnotation ]bool {};_dedc ,_aeed :=_fefg .GetAnnotations ();if _aeed !=nil {return _aeed ;};_ffdab :=false ;for _ ,_gfede :=range _dedc {if opts .AnnotFilterFunc !=nil {_dbfa [_gfede ]=opts .AnnotFilterFunc (_gfede );
}else {_dbfa [_gfede ]=true ;};if _dbfa [_gfede ]{_ffdab =true ;};};if !_ffdab {return nil ;};return _fefg .flattenFieldsWithOpts (appgen ,opts ,_dbfa );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fgee *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbbf ,_dfbag :=_fbg .GetNumbersAsFloat (objects );
if _dfbag !=nil {return nil ,_dfbag ;};return _fgee .ColorFromFloats (_gcbbf );};func (_ddbbe *PdfWriter )writeTrailer (_edff int ){_ddbbe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cccee :=0;_cccee <=_edff ;{for ;_cccee <=_edff ;_cccee ++{_aafbbb ,_dbbgdg :=_ddbbe ._baecgd [_cccee ];
if _dbbgdg &&(!_ddbbe ._aceab ||_ddbbe ._aceab &&(_aafbbb .Type ==1&&_aafbbb .Offset >=_ddbbe ._eceb ||_aafbbb .Type ==0)){break ;};};var _gedec int ;for _gedec =_cccee +1;_gedec <=_edff ;_gedec ++{_bfgbd ,_gcdef :=_ddbbe ._baecgd [_gedec ];if _gcdef &&(!_ddbbe ._aceab ||_ddbbe ._aceab &&(_bfgbd .Type ==1&&_bfgbd .Offset > _ddbbe ._eceb )){continue ;
};break ;};_fdggd :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cccee ,_gedec -_cccee );_ddbbe .writeString (_fdggd );for _cddb :=_cccee ;_cddb < _gedec ;_cddb ++{_feca :=_ddbbe ._baecgd [_cddb ];switch _feca .Type {case 0:_fdggd =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_ddbbe .writeString (_fdggd );case 1:_fdggd =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_feca .Offset ,0);_ddbbe .writeString (_fdggd );};};_cccee =_gedec +1;};_bggcca :=_fbg .MakeDict ();_bggcca .Set ("\u0049\u006e\u0066\u006f",_ddbbe ._abfag );
_bggcca .Set ("\u0052\u006f\u006f\u0074",_ddbbe ._bgbgb );_bggcca .Set ("\u0053\u0069\u007a\u0065",_fbg .MakeInteger (int64 (_edff +1)));if _ddbbe ._aceab &&_ddbbe ._ffbf > 0{_bggcca .Set ("\u0050\u0072\u0065\u0076",_fbg .MakeInteger (_ddbbe ._ffbf ));
};if _ddbbe ._dbbgb !=nil {_bggcca .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddbbe ._edcbd );};if _ddbbe ._bacgfa ==nil &&_ddbbe ._gebgg !=""&&_ddbbe ._aecaf !=""{_ddbbe ._bacgfa =_fbg .MakeArray (_fbg .MakeHexString (_ddbbe ._gebgg ),_fbg .MakeHexString (_ddbbe ._aecaf ));
};if _ddbbe ._bacgfa !=nil {_bggcca .Set ("\u0049\u0044",_ddbbe ._bacgfa );_adc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddbbe ._bacgfa );};_ddbbe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_ddbbe .writeBytes (_bggcca .Write ());
_ddbbe .writeString ("\u000a");};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_bfga *PdfReader )newPdfAnnotationFreeTextFromDict (_daaf *_fbg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ggb :=PdfAnnotationFreeText {};_cfac ,_ccd :=_bfga .newPdfAnnotationMarkupFromDict (_daaf );
if _ccd !=nil {return nil ,_ccd ;};_ggb .PdfAnnotationMarkup =_cfac ;_ggb .DA =_daaf .Get ("\u0044\u0041");_ggb .Q =_daaf .Get ("\u0051");_ggb .RC =_daaf .Get ("\u0052\u0043");_ggb .DS =_daaf .Get ("\u0044\u0053");_ggb .CL =_daaf .Get ("\u0043\u004c");
_ggb .IT =_daaf .Get ("\u0049\u0054");_ggb .BE =_daaf .Get ("\u0042\u0045");_ggb .RD =_daaf .Get ("\u0052\u0044");_ggb .BS =_daaf .Get ("\u0042\u0053");_ggb .LE =_daaf .Get ("\u004c\u0045");return &_ggb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_effbf *PdfFilespec )GetContainingPdfObject ()_fbg .PdfObject {return _effbf ._efba };

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bd :=NewPdfAnnotation ();_dbbe :=&PdfAnnotationPolyLine {};_dbbe .PdfAnnotation =_bd ;_dbbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bd .SetContext (_dbbe );return _dbbe ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_bdcda *PdfPageResources )SetXObjectImageByNameLazy (keyName _fbg .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_cffdd :=ximg .ToPdfObject ().(*_fbg .PdfObjectStream );if lazy {_cffdd .MakeLazy ();};_bbbc :=_bdcda .SetXObjectByName (keyName ,_cffdd );
return _bbbc ;};

// Encoder returns the font's text encoder.
func (_fabc *pdfFontSimple )Encoder ()_cf .TextEncoder {if _fabc ._efbad !=nil {return _fabc ._efbad ;};if _fabc ._adec !=nil {return _fabc ._adec ;};_cccga ,_ :=_cf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _cccga ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fbg .PdfObject ;_dfab []byte ;_eceadg *_fbg .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_efbga *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daeg ,_edadb :=_fbg .GetNumbersAsFloat (objects );
if _edadb !=nil {return nil ,_edadb ;};return _efbga .ColorFromFloats (_daeg );};func (_gbeac *PdfReader )newPdfAnnotationPolyLineFromDict (_aca *_fbg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cgeb :=PdfAnnotationPolyLine {};_aegc ,_fge :=_gbeac .newPdfAnnotationMarkupFromDict (_aca );
if _fge !=nil {return nil ,_fge ;};_cgeb .PdfAnnotationMarkup =_aegc ;_cgeb .Vertices =_aca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cgeb .LE =_aca .Get ("\u004c\u0045");_cgeb .BS =_aca .Get ("\u0042\u0053");_cgeb .IC =_aca .Get ("\u0049\u0043");
_cgeb .BE =_aca .Get ("\u0042\u0045");_cgeb .IT =_aca .Get ("\u0049\u0054");_cgeb .Measure =_aca .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cgeb ,nil ;};func (_deeca *PdfWriter )hasObject (_gafc _fbg .PdfObject )bool {_ ,_eafgg :=_deeca ._gcadf [_gafc ];
return _eafgg ;};var _ pdfFont =(*pdfFontType0 )(nil );

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fabg *PdfField )GetContainingPdfObject ()_fbg .PdfObject {return _fabg ._gcad };

// Items returns all children outline items.
func (_cgdg *OutlineItem )Items ()[]*OutlineItem {return _cgdg .Entries };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cdd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cdd .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aadd ,_eedbd :=_cdd .TintTransform .Evaluate (vals );
if _eedbd !=nil {return nil ,_eedbd ;};_dcag ,_eedbd :=_cdd .AlternateSpace .ColorFromFloats (_aadd );if _eedbd !=nil {return nil ,_eedbd ;};return _dcag ,nil ;};

// SetPrintClip sets the value of the printClip.
func (_dfbgb *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_dfbgb ._abgbc =printClip };

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;func _dfbefc (_agega string )(string ,error ){var _ggeae _fb .Buffer ;_ggeae .WriteString (_agega );_ceada :=make ([]byte ,8+16);_cffbd :=_dcc .Now ().UTC ().UnixNano ();_bg .BigEndian .PutUint64 (_ceada ,uint64 (_cffbd ));_ ,_dfafg :=_bgb .Read (_ceada [8:]);
if _dfafg !=nil {return "",_dfafg ;};_ggeae .WriteString (_ae .EncodeToString (_ceada ));return _ggeae .String (),nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_efac *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efac .Base ==nil {return nil ,_fd .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _efac .Base .ColorToRGB (color );};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cf .SimpleEncoder ,error ){_gfeda ,_ffcf :=_ddbf (basefont );if _ffcf !=nil {return nil ,nil ,_ffcf ;};_adga ,_bcfg :=_gfeda .Encoder ().(_cf .SimpleEncoder );
if !_bcfg {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_gfeda .Encoder ());
};_dadgg :=make (map[rune ]_cf .GlyphName );for _bcagd :=range alphabet {if _ ,_fgcb :=_adga .RuneToCharcode (_bcagd );!_fgcb {_ ,_aeag :=_gfeda ._ggcaa .Read (_bcagd );if !_aeag {_adc .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_bcagd ,_bcagd );
continue ;};_cfed ,_aeag :=_cf .RuneToGlyph (_bcagd );if !_aeag {_adc .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_bcagd ,_bcagd );continue ;};if len (_dadgg )>=255{return nil ,nil ,_fd .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dadgg [_bcagd ]=_cfed ;};};var (_cbecf []_cf .CharCode ;_efef []_cf .CharCode ;);for _ggga :=_cf .CharCode (1);_ggga <=0xff;_ggga ++{_dabbf ,_acbae :=_adga .CharcodeToRune (_ggga );if !_acbae {_cbecf =append (_cbecf ,_ggga );continue ;};if _ ,_acbae =alphabet [_dabbf ];
!_acbae {_efef =append (_efef ,_ggga );};};_ccfcc :=append (_cbecf ,_efef ...);if len (_ccfcc )< len (_dadgg ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dadgg ),len (_ccfcc ));
};_cbdga :=make ([]rune ,0,len (_dadgg ));for _ffaec :=range _dadgg {_cbdga =append (_cbdga ,_ffaec );};_db .Slice (_cbdga ,func (_cdec ,_dceb int )bool {return _cbdga [_cdec ]< _cbdga [_dceb ]});_dgggf :=make (map[_cf .CharCode ]_cf .GlyphName ,len (_cbdga ));
for _ ,_dagbg :=range _cbdga {_bffg :=_ccfcc [0];_ccfcc =_ccfcc [1:];_dgggf [_bffg ]=_dadgg [_dagbg ];};_adga =_cf .ApplyDifferences (_adga ,_dgggf );_gfeda .SetEncoder (_adga );return &PdfFont {_fbff :&_gfeda },_adga ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject implements interface PdfModel.
func (_abaf *PdfActionTrans )ToPdfObject ()_fbg .PdfObject {_abaf .PdfAction .ToPdfObject ();_bef :=_abaf ._gc ;_dfb :=_bef .PdfObject .(*_fbg .PdfObjectDictionary );_dfb .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeTrans )));_dfb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_abaf .Trans );
return _bef ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbbb *PdfColorspaceDeviceRGB )ToPdfObject ()_fbg .PdfObject {return _fbg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bcee *PdfPage )Duplicate ()*PdfPage {_gefbd :=*_bcee ;_gefbd ._afab =_fbg .MakeDict ();_gefbd ._ecedg =_fbg .MakeIndirectObject (_gefbd ._afab );_gefbd ._aaaf =*_gefbd ._afab ;return &_gefbd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbfdfe *PdfPageResourcesColorspaces )ToPdfObject ()_fbg .PdfObject {_fgbff :=_fbg .MakeDict ();for _ ,_cccfcb :=range _gbfdfe .Names {_fgbff .Set (_fbg .PdfObjectName (_cccfcb ),_gbfdfe .Colorspaces [_cccfcb ].ToPdfObject ());};if _gbfdfe ._edda !=nil {_gbfdfe ._edda .PdfObject =_fgbff ;
return _gbfdfe ._edda ;};return _fgbff ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_fbg .PdfObjectArray ;ExtGState _fbg .PdfObject ;};func (_dbgfb *PdfWriter )writeObjects (){_adc .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_dbgfb ._ddeeb ));
_dbgfb ._baecgd =make (map[int ]crossReference );_dbgfb ._baecgd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _dbgfb ._fegde .ObjectMap !=nil {for _bgcfbb ,_fbafcc :=range _dbgfb ._fegde .ObjectMap {if _bgcfbb ==0{continue ;};if _fbafcc .XType ==_fbg .XrefTypeObjectStream {_adbdde :=crossReference {Type :2,ObjectNumber :_fbafcc .OsObjNumber ,Index :_fbafcc .OsObjIndex };
_dbgfb ._baecgd [_bgcfbb ]=_adbdde ;};if _fbafcc .XType ==_fbg .XrefTypeTableEntry {_gcccad :=crossReference {Type :1,ObjectNumber :_fbafcc .ObjectNumber ,Offset :_fbafcc .Offset };_dbgfb ._baecgd [_bgcfbb ]=_gcccad ;};};};};func (_gabc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_faece *PdfPageResources )GetPatternByName (keyName _fbg .PdfObjectName )(*PdfPattern ,bool ){if _faece .Pattern ==nil {return nil ,false ;};_cgefb ,_acgg :=_fbg .TraceToDirectObject (_faece .Pattern ).(*_fbg .PdfObjectDictionary );if !_acgg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_faece .Pattern );
return nil ,false ;};if _fdaea :=_cgefb .Get (keyName );_fdaea !=nil {_acffg ,_fgaca :=_baef (_fdaea );if _fgaca !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_fgaca );
return nil ,false ;};return _acffg ,true ;};return nil ,false ;};

// String returns a string describing the font descriptor.
func (_debc *PdfFontDescriptor )String ()string {var _bded []string ;if _debc .FontName !=nil {_bded =append (_bded ,_debc .FontName .String ());};if _debc .FontFamily !=nil {_bded =append (_bded ,_debc .FontFamily .String ());};if _debc .fontFile !=nil {_bded =append (_bded ,_debc .fontFile .String ());
};if _debc ._feagd !=nil {_bded =append (_bded ,_debc ._feagd .String ());};_bded =append (_bded ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_debc .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gdg .Join (_bded ,"\u002c\u0020"));
};

// GetFontDescriptor returns the font descriptor for `font`.
func (_bggcc PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _bggcc ._fbff .getFontDescriptor (),nil ;};func _bdc (_dcacc *_fbg .PdfIndirectObject ,_cdbcab *_fbg .PdfObjectDictionary )(*DSS ,error ){if _dcacc ==nil {_dcacc =_fbg .MakeIndirectObject (nil );
};_dcacc .PdfObject =_fbg .MakeDict ();_fdbe :=map[string ]*VRI {};if _egbb ,_ceddf :=_fbg .GetDict (_cdbcab .Get ("\u0056\u0052\u0049"));_ceddf {for _ ,_daca :=range _egbb .Keys (){if _afeg ,_ebeb :=_fbg .GetDict (_egbb .Get (_daca ));_ebeb {_fdbe [_gdg .ToUpper (_daca .String ())]=_bcbf (_afeg );
};};};return &DSS {Certs :_feadg (_cdbcab .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_feadg (_cdbcab .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_feadg (_cdbcab .Get ("\u0043\u0052\u004c\u0073")),VRI :_fdbe ,_gcdad :_dcacc },nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_fabee *pdfFontType3 )ToPdfObject ()_fbg .PdfObject {if _fabee ._gfbfa ==nil {_fabee ._gfbfa =&_fbg .PdfIndirectObject {};};_bgag :=_fabee .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_fabee ._gfbfa .PdfObject =_bgag ;if _fabee .FirstChar !=nil {_bgag .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fabee .FirstChar );
};if _fabee .LastChar !=nil {_bgag .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fabee .LastChar );};if _fabee .Widths !=nil {_bgag .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fabee .Widths );};if _fabee .Encoding !=nil {_bgag .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fabee .Encoding );
}else if _fabee ._edegd !=nil {_gfeef :=_fabee ._edegd .ToPdfObject ();if _gfeef !=nil {_bgag .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfeef );};};if _fabee .FontBBox !=nil {_bgag .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fabee .FontBBox );
};if _fabee .FontMatrix !=nil {_bgag .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_fabee .FontMatrix );};if _fabee .CharProcs !=nil {_bgag .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_fabee .CharProcs );};if _fabee .Resources !=nil {_bgag .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fabee .Resources );
};return _fabee ._gfbfa ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fbg .PdfObject ;MK _fbg .PdfObject ;A _fbg .PdfObject ;AA _fbg .PdfObject ;BS _fbg .PdfObject ;Parent _fbg .PdfObject ;_abg *PdfField ;_ddg bool ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_eae .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _dcc .Time ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gadcf *OutlineItem )ToPdfObject ()_fbg .PdfObject {_geag ,_ :=_gadcf .ToPdfOutlineItem ();return _geag .ToPdfObject ();};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_edaf :=NewPdfAnnotation ();_daa :=&PdfAnnotationLink {};_daa .PdfAnnotation =_edaf ;_edaf .SetContext (_daa );return _daa ;};func _adfd (_fegfe _fbg .PdfObject )(*PdfColorspaceCalRGB ,error ){_dbbeg :=NewPdfColorspaceCalRGB ();
if _adbd ,_cgbfb :=_fegfe .(*_fbg .PdfIndirectObject );_cgbfb {_dbbeg ._cfge =_adbd ;};_fegfe =_fbg .TraceToDirectObject (_fegfe );_dcec ,_bgc :=_fegfe .(*_fbg .PdfObjectArray );if !_bgc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dcec .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fegfe =_fbg .TraceToDirectObject (_dcec .Get (0));_ggfa ,_bgc :=_fegfe .(*_fbg .PdfObjectName );
if !_bgc {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_ggfa !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fegfe =_fbg .TraceToDirectObject (_dcec .Get (1));_dede ,_bgc :=_fegfe .(*_fbg .PdfObjectDictionary );if !_bgc {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fegfe =_dede .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fegfe =_fbg .TraceToDirectObject (_fegfe );_dcb ,_bgc :=_fegfe .(*_fbg .PdfObjectArray );if !_bgc {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dcb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cbfd ,_bbec :=_dcb .GetAsFloat64Slice ();
if _bbec !=nil {return nil ,_bbec ;};_dbbeg .WhitePoint =_cbfd ;_fegfe =_dede .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fegfe !=nil {_fegfe =_fbg .TraceToDirectObject (_fegfe );_efa ,_gde :=_fegfe .(*_fbg .PdfObjectArray );
if !_gde {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _efa .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_dgae ,_deagb :=_efa .GetAsFloat64Slice ();if _deagb !=nil {return nil ,_deagb ;};_dbbeg .BlackPoint =_dgae ;};_fegfe =_dede .Get ("\u0047\u0061\u006dm\u0061");if _fegfe !=nil {_fegfe =_fbg .TraceToDirectObject (_fegfe );_fgde ,_gceg :=_fegfe .(*_fbg .PdfObjectArray );
if !_gceg {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _fgde .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_aadf ,_bbcf :=_fgde .GetAsFloat64Slice ();if _bbcf !=nil {return nil ,_bbcf ;};_dbbeg .Gamma =_aadf ;};_fegfe =_dede .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fegfe !=nil {_fegfe =_fbg .TraceToDirectObject (_fegfe );_dbfc ,_gcag :=_fegfe .(*_fbg .PdfObjectArray );
if !_gcag {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _dbfc .Len ()!=9{_adc .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_dbfc .String ());
return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fbfbf ,_fecc :=_dbfc .GetAsFloat64Slice ();if _fecc !=nil {return nil ,_fecc ;
};_dbbeg .Matrix =_fbfbf ;};return _dbbeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbdc *PdfAnnotationMovie )ToPdfObject ()_fbg .PdfObject {_gbdc .PdfAnnotation .ToPdfObject ();_fgc :=_gbdc ._ecfe ;_aceb :=_fgc .PdfObject .(*_fbg .PdfObjectDictionary );_aceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u004d\u006f\u0076i\u0065"));
_aceb .SetIfNotNil ("\u0054",_gbdc .T );_aceb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gbdc .Movie );_aceb .SetIfNotNil ("\u0041",_gbdc .A );return _fgc ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ffdf *PdfAnnotation )GetContext ()PdfModel {if _ffdf ==nil {return nil ;};return _ffdf ._cdc ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_gbbfdc *PdfPage )RemoveWatermarkImage (name string )error {if _gbbfdc .Resources !=nil &&_gbbfdc .Resources .XObject !=nil {if _dgbbg ,_aggc :=_fbg .GetDict (_gbbfdc .Resources .XObject );_aggc {for _ ,_cegab :=range _dgbbg .Keys (){if name ==_cegab .String (){_gbbfdc .removeXObj (_dgbbg ,_cegab );
continue ;};_agcab ,_dgad :=_fbg .GetStream (_dgbbg .Get (_cegab ));if !_dgad {continue ;};_edbafd ,_dgad :=_fbg .GetDict (_agcab .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_dgad {continue ;};_ccad ,_dgad :=_fbg .GetDict (_edbafd .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_dgad {continue ;};if _ccad .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_ccad .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_gbbfdc .removeXObj (_dgbbg ,_cegab );};};};};_dfdb ,_defgb :=_gbbfdc .GetAnnotations ();
if _defgb ==nil {_dbcge :=make ([]*PdfAnnotation ,0);for _ ,_agae :=range _dfdb {switch _agae .GetContext ().(type ){case *PdfAnnotationWatermark :default:_dbcge =append (_dbcge ,_agae );};};_gbbfdc .SetAnnotations (_dbcge );};return nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fbg .PdfObject ;};

// GetChildren returns the children of the K dictionary object.
func (_dcbbe *KDict )GetChildren ()[]*KValue {return _dcbbe ._cgfe };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_feff :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_feff .N =N ;return _feff ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_abeag *pdfFontType0 )ToPdfObject ()_fbg .PdfObject {if _abeag ._fccec ==nil {_abeag ._fccec =&_fbg .PdfIndirectObject {};};_gbefc :=_abeag .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_abeag ._fccec .PdfObject =_gbefc ;if _abeag .Encoding !=nil {_gbefc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abeag .Encoding );
}else if _abeag ._cgbbg !=nil {_gbefc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abeag ._cgbbg .ToPdfObject ());};if _abeag .DescendantFont !=nil {_gbefc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fbg .MakeArray (_abeag .DescendantFont .ToPdfObject ()));
};return _abeag ._fccec ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ef :=NewPdfAction ();_dbc :=&PdfActionMovie {};_dbc .PdfAction =_ef ;_ef .SetContext (_dbc );return _dbc ;};

// B returns the value of the B component of the color.
func (_ddddf *PdfColorCalRGB )B ()float64 {return _ddddf [1]};func (_eea *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject returns the PDF representation of the function.
func (_gffbc *PdfFunctionType0 )ToPdfObject ()_fbg .PdfObject {if _gffbc ._fdbfe ==nil {_gffbc ._fdbfe =&_fbg .PdfObjectStream {};};_fdbee :=_fbg .MakeDict ();_fdbee .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fbg .MakeInteger (0));
_bdfec :=&_fbg .PdfObjectArray {};for _ ,_baad :=range _gffbc .Domain {_bdfec .Append (_fbg .MakeFloat (_baad ));};_fdbee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdfec );_gcaa :=&_fbg .PdfObjectArray {};for _ ,_cfca :=range _gffbc .Range {_gcaa .Append (_fbg .MakeFloat (_cfca ));
};_fdbee .Set ("\u0052\u0061\u006eg\u0065",_gcaa );_gfacb :=&_fbg .PdfObjectArray {};for _ ,_gfaad :=range _gffbc .Size {_gfacb .Append (_fbg .MakeInteger (int64 (_gfaad )));};_fdbee .Set ("\u0053\u0069\u007a\u0065",_gfacb );_fdbee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fbg .MakeInteger (int64 (_gffbc .BitsPerSample )));
if _gffbc .Order !=1{_fdbee .Set ("\u004f\u0072\u0064e\u0072",_fbg .MakeInteger (int64 (_gffbc .Order )));};_fdbee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_gffbc ._gfeefe ))));_gffbc ._fdbfe .Stream =_gffbc ._gfeefe ;
_gffbc ._fdbfe .PdfObjectDictionary =_fdbee ;return _gffbc ._fdbfe ;};

// Height returns the height of `rect`.
func (_febac *PdfRectangle )Height ()float64 {return _ab .Abs (_febac .Ury -_febac .Lly )};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bbgcf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fd .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_ggbg ,_febf :=_ced .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acag ,img ._beggbb );if _febf !=nil {return img ,_febf ;};_bgge ,_febf :=_ced .GrayConverter .Convert (_ggbg );if _febf !=nil {return img ,_febf ;
};return _cgdba (_bgge .Base ()),nil ;};func (_cbe *PdfReader )newPdfActionGotoRFromDict (_ddc *_fbg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cgag ,_geb :=_dae (_ddc .Get ("\u0046"));if _geb !=nil {return nil ,_geb ;};return &PdfActionGoToR {D :_ddc .Get ("\u0044"),NewWindow :_ddc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cgag },nil ;
};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dcce *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fbg .StreamEncoder ,error ){_beccb ,_gfadb :=_dcce ._eadbd .(*_fbg .PdfObjectStream );if !_gfadb {_adc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcce ._eadbd );
return nil ,nil ,_fbg .ErrTypeError ;};_egdg ,_agcadd :=_fbg .DecodeStream (_beccb );if _agcadd !=nil {_adc .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_agcadd );
return nil ,nil ,_agcadd ;};_gbefb ,_agcadd :=_fbg .NewEncoderFromStream (_beccb );if _agcadd !=nil {_adc .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_agcadd );
return nil ,nil ,_agcadd ;};return _egdg ,_gbefb ,nil ;};func (_cgbe *PdfReader )newPdfAnnotationCircleFromDict (_dfcc *_fbg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_aeac :=PdfAnnotationCircle {};_eggb ,_cbcd :=_cgbe .newPdfAnnotationMarkupFromDict (_dfcc );
if _cbcd !=nil {return nil ,_cbcd ;};_aeac .PdfAnnotationMarkup =_eggb ;_aeac .BS =_dfcc .Get ("\u0042\u0053");_aeac .IC =_dfcc .Get ("\u0049\u0043");_aeac .BE =_dfcc .Get ("\u0042\u0045");_aeac .RD =_dfcc .Get ("\u0052\u0044");return &_aeac ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fbg .PdfObject ;Name _fbg .PdfObject ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bccde *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bebfc :=_bccde .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bebfc )> 0;_fabgd :=_fbg .NewFlateEncoder ();_feede :=_fbg .MakeArray ();if wrapContents {_agcgd ,_aaded :=_fbg .MakeStream ([]byte ("\u0071\u000a"),_fabgd );
if _aaded !=nil {return _aaded ;};_feede .Append (_agcgd );};_feede .Append (_bebfc ...);if wrapContents {_gdfb ,_eeecb :=_fbg .MakeStream ([]byte ("\u000a\u0051\u000a"),_fabgd );if _eeecb !=nil {return _eeecb ;};_feede .Append (_gdfb );};_dedbf ,_dadgb :=_fbg .MakeStream (cs ,_fabgd );
if _dadgb !=nil {return _dadgb ;};_feede .Append (_dedbf );_bccde .Contents =_feede ;return nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cfffg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_fbg .PdfObjectString ;Q *_fbg .PdfObjectInteger ;DS *_fbg .PdfObjectString ;RV _fbg .PdfObject ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject implements interface PdfModel.
func (_gga *PdfAnnotationFileAttachment )ToPdfObject ()_fbg .PdfObject {_gga .PdfAnnotation .ToPdfObject ();_cae :=_gga ._ecfe ;_aacge :=_cae .PdfObject .(*_fbg .PdfObjectDictionary );_gga .PdfAnnotationMarkup .appendToPdfDictionary (_aacge );_aacge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_aacge .SetIfNotNil ("\u0046\u0053",_gga .FS );_aacge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gga .Name );return _cae ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_edfe *PdfAnnotation )ToPdfObject ()_fbg .PdfObject {_ccdf :=_edfe ._ecfe ;_ecad :=_ccdf .PdfObject .(*_fbg .PdfObjectDictionary );_ecad .Clear ();_ecad .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0041\u006e\u006eo\u0074"));_ecad .SetIfNotNil ("\u0052\u0065\u0063\u0074",_edfe .Rect );
_ecad .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_edfe .Contents );_ecad .SetIfNotNil ("\u0050",_edfe .P );_ecad .SetIfNotNil ("\u004e\u004d",_edfe .NM );_ecad .SetIfNotNil ("\u004d",_edfe .M );_ecad .SetIfNotNil ("\u0046",_edfe .F );
_ecad .SetIfNotNil ("\u0041\u0050",_edfe .AP );_ecad .SetIfNotNil ("\u0041\u0053",_edfe .AS );_ecad .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_edfe .Border );_ecad .SetIfNotNil ("\u0043",_edfe .C );_ecad .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_edfe .StructParent );
_ecad .SetIfNotNil ("\u004f\u0043",_edfe .OC );return _ccdf ;};

// SetMCID sets the MCID for the KValue.
func (_ecfcd *KValue )SetMCID (mcid int ){_ecfcd .Clear ();_ecfcd ._dcffg =&mcid };

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_bdef :_fbg .MakeIndirectObject (_fbg .MakeDict ())};};

// AddOutlineTree adds outlines to a PDF file.
func (_gfcff *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gfcff ._egaaaf =outlineTree ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_abafb byte )byte ;

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ecegc .Lock ();defer _ecegc .Unlock ();_aebdd =author };

// GetPdfInfo returns the PDF info dictionary.
func (_gafb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_deac ,_ddcgd :=_gafb .GetTrailer ();if _ddcgd !=nil {return nil ,_ddcgd ;};var _dcda *_fbg .PdfObjectDictionary ;_acgbe :=_deac .Get ("\u0049\u006e\u0066\u006f");switch _gabde :=_acgbe .(type ){case *_fbg .PdfObjectReference :_fbadag :=_gabde ;
_acgbe ,_ddcgd =_gafb .GetIndirectObjectByNumber (int (_fbadag .ObjectNumber ));_acgbe =_fbg .TraceToDirectObject (_acgbe );if _ddcgd !=nil {return nil ,_ddcgd ;};_dcda ,_ =_acgbe .(*_fbg .PdfObjectDictionary );case *_fbg .PdfObjectDictionary :_dcda =_gabde ;
};if _dcda ==nil {return nil ,_fd .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_fadgf ,_ddcgd :=NewPdfInfoFromObject (_dcda );if _ddcgd !=nil {return nil ,_ddcgd ;
};return _fadgf ,nil ;};func _cfeb (_babgdf _fbg .PdfObject ,_eddb bool )(*PdfFont ,error ){_dcbb ,_dgbg ,_afagc :=_acfgg (_babgdf );if _dcbb !=nil {_dafbc (_dcbb );};if _afagc !=nil {if _afagc ==ErrType1CFontNotSupported {_cabca ,_ceaec :=_cbega (_dcbb ,_dgbg ,nil );
if _ceaec !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgbg ,_ceaec );
return nil ,_afagc ;};return &PdfFont {_fbff :_cabca },_afagc ;};return nil ,_afagc ;};_bebd :=&PdfFont {};switch _dgbg ._decd {case "\u0054\u0079\u0070e\u0030":if !_eddb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgbg );
return nil ,_fd .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cagf ,_aegfd :=_fddaf (_dcbb ,_dgbg );if _aegfd !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgbg ,_aegfd );
return nil ,_aegfd ;};_bebd ._fbff =_cagf ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ebdbe *pdfFontSimple ;_aefcf ,_bafca :=_dg .NewStdFontByName (_dg .StdFontName (_dgbg ._daef ));
if _bafca {_bbce :=_fbbeb (_aefcf );_bebd ._fbff =&_bbce ;_deec :=_fbg .TraceToDirectObject (_bbce .ToPdfObject ());_agag ,_fddc ,_bcfd :=_acfgg (_deec );if _bcfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgbg ,_bbce );
return nil ,_bcfd ;};for _ ,_egge :=range _dcbb .Keys (){_agag .Set (_egge ,_dcbb .Get (_egge ));};_ebdbe ,_bcfd =_cbega (_agag ,_fddc ,_bbce ._adec );if _bcfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgbg ,_bbce );
return nil ,_bcfd ;};_ebdbe ._gaeda =_bbce ._gaeda ;_ebdbe ._ggcaa =_bbce ._ggcaa ;if _ebdbe ._dgddad ==nil {_ebdbe ._dgddad =_bbce ._dgddad ;};}else {_ebdbe ,_afagc =_cbega (_dcbb ,_dgbg ,nil );if _afagc !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgbg ,_afagc );
return nil ,_afagc ;};};_afagc =_ebdbe .addEncoding ();if _afagc !=nil {return nil ,_afagc ;};if _bafca {_ebdbe .updateStandard14Font ();};if _bafca &&_ebdbe ._efbad ==nil &&_ebdbe ._adec ==nil {_adc .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebdbe );
_adc .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_aefcf );};if len (_ebdbe ._gaeda )==0{_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ebdbe );};_bebd ._fbff =_ebdbe ;
case "\u0054\u0079\u0070e\u0033":_bbggc ,_afaga :=_cbde (_dcbb ,_dgbg );if _afaga !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_afaga );
return nil ,_afaga ;};_bebd ._fbff =_bbggc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_aeede ,_cabff :=_fedcg (_dcbb ,_dgbg );if _cabff !=nil {_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cabff );
return nil ,_cabff ;};_bebd ._fbff =_aeede ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_adeefe ,_gfbe :=_bdgd (_dcbb ,_dgbg );if _gfbe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgbg ,_gfbe );
return nil ,_gfbe ;};_bebd ._fbff =_adeefe ;default:_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dgbg );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgbg );};return _bebd ,nil ;};func _acfgg (_fceed _fbg .PdfObject )(*_fbg .PdfObjectDictionary ,*fontCommon ,error ){_ageg :=&fontCommon {};
if _dbgg ,_facef :=_fceed .(*_fbg .PdfIndirectObject );_facef {_ageg ._eabe =_dbgg .ObjectNumber ;};_gbag ,_gadfa :=_fbg .GetDict (_fceed );if !_gadfa {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fceed );
return nil ,nil ,ErrFontNotSupported ;};_gagge ,_gadfa :=_fbg .GetNameVal (_gbag .Get ("\u0054\u0079\u0070\u0065"));if !_gadfa {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gagge !="\u0046\u006f\u006e\u0074"{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gagge ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fbg .ErrTypeError ;};_ebbb ,_gadfa :=_fbg .GetNameVal (_gbag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gadfa {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ageg ._decd =_ebbb ;_dbbfb ,_gadfa :=_fbg .GetNameVal (_gbag .Get ("\u004e\u0061\u006d\u0065"));if _gadfa {_ageg ._abed =_dbbfb ;};_agegg :=_gbag .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _agegg !=nil {_ageg ._eadad =_fbg .TraceToDirectObject (_agegg );
_dbdg ,_cbfb :=_bcbe (_ageg ._eadad ,_ageg );if _cbfb !=nil {return _gbag ,_ageg ,_cbfb ;};_ageg ._ceadf =_dbdg ;}else if _ebbb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ebbb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_decc ,_gbeg :=_ed .NewCIDSystemInfo (_gbag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gbeg !=nil {return _gbag ,_ageg ,_gbeg ;};_fadb :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_decc .Registry ,_decc .Ordering );if _ed .IsPredefinedCMap (_fadb ){_ageg ._ceadf ,_gbeg =_ed .LoadPredefinedCMap (_fadb );
if _gbeg !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fadb ,_gbeg );
};};};_bebce :=_gbag .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bebce !=nil {_aface ,_cgeg :=_ecdgb (_bebce );if _cgeg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cgeg );
return _gbag ,_ageg ,_cgeg ;};_ageg ._bgbb =_aface ;};if _ebbb !="\u0054\u0079\u0070e\u0033"{_daefg ,_ebfb :=_fbg .GetNameVal (_gbag .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ebfb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gbag ,_ageg ,ErrRequiredAttributeMissing ;};_ageg ._daef =_daefg ;};return _gbag ,_ageg ,nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cbcfa *BorderStyle )GetPdfName ()string {switch *_cbcfa {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fdgda *PdfPageResources )GetShadingByName (keyName _fbg .PdfObjectName )(*PdfShading ,bool ){if _fdgda .Shading ==nil {return nil ,false ;};_gddff ,_egfcg :=_fbg .TraceToDirectObject (_fdgda .Shading ).(*_fbg .PdfObjectDictionary );if !_egfcg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdgda .Shading );
return nil ,false ;};if _gccgb :=_gddff .Get (keyName );_gccgb !=nil {_dbcff ,_cbggc :=_badfd (_gccgb );if _cbggc !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cbggc );
return nil ,false ;};return _dbcff ,true ;};return nil ,false ;};

// Val returns the value of the color.
func (_dcdd *PdfColorCalGray )Val ()float64 {return float64 (*_dcdd )};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fbg .PdfObject ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_caaf *PdfAppender )Write (w _gg .Writer )error {if _caaf ._aae {return _fd .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_eegg :=NewPdfWriter ();_gfce ,_dag :=_fbg .GetDict (_eegg ._caaebg );if !_dag {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dffcf ,_dag :=_gfce .Get ("\u004b\u0069\u0064\u0073").(*_fbg .PdfObjectArray );if !_dag {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_edde ,_dag :=_gfce .Get ("\u0043\u006f\u0075n\u0074").(*_fbg .PdfObjectInteger );if !_dag {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_befe :=_caaf ._gafe ._eedad ;_bfda :=_befe .GetTrailer ();if _bfda ==nil {return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_badf ,_dag :=_fbg .GetIndirect (_bfda .Get ("\u0052\u006f\u006f\u0074"));
if !_dag {return _fd .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fdff ,_dag :=_fbg .GetDict (_badf );if !_dag {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_badf ,*_bfda );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cfbeg :=false ;for _ ,_egbd :=range _caaf ._gafe .AcroForm .signatureFields (){if _egbd .Lock !=nil {_cfbeg =true ;break ;};};if _cfbeg {_eegg ._bgbgb =_badf ;
};for _ ,_ffea :=range _fdff .Keys (){if _eegg ._gdgbee .Get (_ffea )==nil {_bagc :=_fdff .Get (_ffea );_eegg ._gdgbee .Set (_ffea ,_bagc );};};if _caaf ._ebaf !=nil {if _caaf ._ebaf ._gecf {if _babf :=_fbg .TraceToDirectObject (_caaf ._ebaf .ToPdfObject ());
!_fbg .IsNullObject (_babf ){_eegg ._gdgbee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_babf );_caaf .updateObjectsDeep (_babf ,nil );}else {_adc .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_eegg ._gdgbee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_caaf ._ebaf .ToPdfObject ());_caaf .updateObjectsDeep (_caaf ._ebaf .ToPdfObject (),nil );};};if _caaf ._dcae !=nil {_caaf .updateObjectsDeep (_caaf ._dcae .ToPdfObject (),nil );
_eegg ._gdgbee .Set ("\u0044\u0053\u0053",_caaf ._dcae .GetContainingPdfObject ());};if _caaf ._cfcc !=nil {_eegg ._gdgbee .Set ("\u0050\u0065\u0072m\u0073",_caaf ._cfcc .ToPdfObject ());_caaf .updateObjectsDeep (_caaf ._cfcc .ToPdfObject (),nil );};if _eegg ._bagfb .Major < 2{_eegg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_eegg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _acff ,_cade :=_fbg .GetDict (_bfda .Get ("\u0049\u006e\u0066\u006f"));_cade {if _abga ,_cgc :=_fbg .GetDict (_eegg ._abfag );_cgc {for _ ,_eadac :=range _acff .Keys (){if _abga .Get (_eadac )==nil {_abga .Set (_eadac ,_acff .Get (_eadac ));
};};};};if _caaf ._baa !=nil {_eegg ._abfag =_fbg .MakeIndirectObject (_caaf ._baa .ToPdfObject ());};_caaf .updateObjectsDeep (_eegg ._abfag ,nil );_caaf .updateObjectsDeep (_eegg ._bgbgb ,nil );_fcaf :=false ;if len (_caaf ._gafe .PageList )!=len (_caaf ._efgd ){_fcaf =true ;
}else {for _acffe :=range _caaf ._gafe .PageList {switch {case _caaf ._efgd [_acffe ]==_caaf ._gafe .PageList [_acffe ]:case _caaf ._efgd [_acffe ]==_caaf .Reader .PageList [_acffe ]:default:_fcaf =true ;};if _fcaf {break ;};};};if _fcaf {_caaf .updateObjectsDeep (_eegg ._caaebg ,nil );
}else {_caaf ._bdec [_eegg ._caaebg ]=struct{}{};};_eegg ._caaebg .ObjectNumber =_caaf .Reader ._bgca .ObjectNumber ;_caaf ._daec [_eegg ._caaebg ]=_caaf .Reader ._bgca .ObjectNumber ;_fdfg :=[]_fbg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_daead :=range _caaf ._efgd {_bcgdd :=_daead .ToPdfObject ();*_edde =*_edde +1;if _efdc ,_dggf :=_bcgdd .(*_fbg .PdfIndirectObject );_dggf &&_efdc .GetParser ()==_caaf ._gafe ._eedad {_dffcf .Append (&_efdc .PdfObjectReference );continue ;};if _fbfg ,_debac :=_fbg .GetDict (_bcgdd );
_debac {_aab ,_face :=_fbfg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fbg .PdfIndirectObject );for _face {_adc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aab );_ggad ,_dcad :=_aab .PdfObject .(*_fbg .PdfObjectDictionary );
if !_dcad {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_afae :=range _fdfg {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_afae );if _edea :=_fbfg .Get (_afae );
_edea !=nil {_adc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_daead ._aaaf .Keys ())> 0&&!_fcaf {_cegg :=_daead ._aaaf ;if _bedca :=_cegg .Get (_afae );_bedca !=nil {if _edea !=_bedca {_adc .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_afae ,_bedca );
_fbfg .Set (_afae ,_bedca );};};};continue ;};if _dbbg :=_ggad .Get (_afae );_dbbg !=nil {_adc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_afae );_fbfg .Set (_afae ,_dbbg );};
};_aab ,_face =_ggad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fbg .PdfIndirectObject );_adc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ggad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _fcaf {_fbfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eegg ._caaebg );
};};_caaf .updateObjectsDeep (_bcgdd ,nil );_dffcf .Append (_bcgdd );};if _ ,_gggfb :=_caaf ._cadb .Seek (0,_gg .SeekStart );_gggfb !=nil {return _gggfb ;};_bbgb :=make (map[SignatureHandler ]_gg .Writer );_cbbf :=_fbg .MakeArray ();for _ ,_gege :=range _caaf ._cgddd {if _aecb ,_ddgg :=_fbg .GetIndirect (_gege );
_ddgg {if _edeb ,_fdeg :=_aecb .PdfObject .(*pdfSignDictionary );_fdeg {_adfec :=*_edeb ._dafgc ;var _cffed error ;_bbgb [_adfec ],_cffed =_adfec .NewDigest (_edeb ._fddbd );if _cffed !=nil {return _cffed ;};_cbbf .Append (_fbg .MakeInteger (0xfffff),_fbg .MakeInteger (0xfffff));
};};};if _cbbf .Len ()> 0{_cbbf .Append (_fbg .MakeInteger (0xfffff),_fbg .MakeInteger (0xfffff));};for _ ,_bfaa :=range _caaf ._cgddd {if _dbgf ,_agge :=_fbg .GetIndirect (_bfaa );_agge {if _gdda ,_cgggd :=_dbgf .PdfObject .(*pdfSignDictionary );_cgggd {_gdda .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbbf );
};};};_ceacc :=len (_bbgb )> 0;var _fgdc _gg .Reader =_caaf ._cadb ;if _ceacc {_dfbgd :=make ([]_gg .Writer ,0,len (_bbgb ));for _ ,_gecg :=range _bbgb {_dfbgd =append (_dfbgd ,_gecg );};_fgdc =_gg .TeeReader (_caaf ._cadb ,_gg .MultiWriter (_dfbgd ...));
};_fgdf ,_egaf :=_gg .Copy (w ,_fgdc );if _egaf !=nil {return _egaf ;};if len (_caaf ._cgddd )==0{return nil ;};_eegg ._ggaaa =_fgdf ;_eegg .ObjNumOffset =_caaf ._cedef ;_eegg ._aceab =true ;_eegg ._fegde =_caaf ._cagb ;_eegg ._ffbf =_caaf ._fgbf ;_eegg ._eceb =_caaf ._aaaa ;
_eegg ._bagfb =_caaf ._gafe .PdfVersion ();_eegg ._ccafa =_caaf ._daec ;_eegg ._dbbgb =_caaf ._ffca .GetCrypter ();_eegg ._edcbd =_caaf ._ffca .GetEncryptObj ();_adgcc :=_caaf ._ffca .GetXrefType ();if _adgcc !=nil {_aeacc :=*_adgcc ==_fbg .XrefTypeObjectStream ;
_eegg ._cecc =&_aeacc ;};_eegg ._gcadf =map[_fbg .PdfObject ]struct{}{};_eegg ._ddeeb =[]_fbg .PdfObject {};for _ ,_gbgbb :=range _caaf ._cgddd {if _ ,_fcaeb :=_caaf ._bdec [_gbgbb ];_fcaeb {continue ;};_eegg .addObject (_gbgbb );};_addf :=w ;if _ceacc {_addf =_fb .NewBuffer (nil );
};if _caaf ._acde !=""&&_eegg ._dbbgb ==nil {_eegg .Encrypt ([]byte (_caaf ._acde ),[]byte (_caaf ._acde ),_caaf ._gggf );};if _gag :=_bfda .Get ("\u0049\u0044");_gag !=nil {if _fgga ,_acbe :=_fbg .GetArray (_gag );_acbe {_eegg ._bacgfa =_fgga ;};};if _ggbeb :=_eegg .Write (_addf );
_ggbeb !=nil {return _ggbeb ;};if _ceacc {_ggbf :=_addf .(*_fb .Buffer ).Bytes ();_faegb :=_fbg .MakeArray ();var _daecc []*pdfSignDictionary ;var _bbca int64 ;for _ ,_dcgd :=range _eegg ._ddeeb {if _bgac ,_aedd :=_fbg .GetIndirect (_dcgd );_aedd {if _ceae ,_cdcfe :=_bgac .PdfObject .(*pdfSignDictionary );
_cdcfe {_daecc =append (_daecc ,_ceae );_dce :=_ceae ._cgfgd +int64 (_ceae ._gccfe );_faegb .Append (_fbg .MakeInteger (_bbca ),_fbg .MakeInteger (_dce -_bbca ));_bbca =_ceae ._cgfgd +int64 (_ceae ._gaebd );};};};_faegb .Append (_fbg .MakeInteger (_bbca ),_fbg .MakeInteger (_fgdf +int64 (len (_ggbf ))-_bbca ));
_aegcf :=_faegb .Write ();for _ ,_bbgc :=range _daecc {_fdd :=int (_bbgc ._cgfgd -_fgdf );for _fbgec :=_bbgc ._faebe ;_fbgec < _bbgc ._fgacf ;_fbgec ++{_ggbf [_fdd +_fbgec ]=' ';};_dgcb :=_ggbf [_fdd +_bbgc ._faebe :_fdd +_bbgc ._fgacf ];copy (_dgcb ,_aegcf );
};var _aeeb int ;for _ ,_fceg :=range _daecc {_eabc :=int (_fceg ._cgfgd -_fgdf );_ddcdf :=_ggbf [_aeeb :_eabc +_fceg ._gccfe ];_eegf :=*_fceg ._dafgc ;_bbgb [_eegf ].Write (_ddcdf );_aeeb =_eabc +_fceg ._gaebd ;};for _ ,_gebfd :=range _daecc {_bafb :=_ggbf [_aeeb :];
_eabg :=*_gebfd ._dafgc ;_bbgb [_eabg ].Write (_bafb );};for _ ,_ggae :=range _daecc {_beggb :=int (_ggae ._cgfgd -_fgdf );_egba :=*_ggae ._dafgc ;_cabf :=_bbgb [_egba ];if _fgcc :=_egba .Sign (_ggae ._fddbd ,_cabf );_fgcc !=nil {return _fgcc ;};_ggae ._fddbd .ByteRange =_faegb ;
_cedce :=_ggae ._fddbd .Contents .Write ();for _aegd :=_ggae ._faebe ;_aegd < _ggae ._fgacf ;_aegd ++{_ggbf [_beggb +_aegd ]=' ';};for _fegf :=_ggae ._gccfe ;_fegf < _ggae ._gaebd ;_fegf ++{_ggbf [_beggb +_fegf ]=' ';};_edag :=_ggbf [_beggb +_ggae ._faebe :_beggb +_ggae ._fgacf ];
copy (_edag ,_aegcf );_edag =_ggbf [_beggb +_ggae ._gccfe :_beggb +_ggae ._gaebd ];copy (_edag ,_cedce );};_fcgd :=_fb .NewBuffer (_ggbf );_ ,_egaf =_gg .Copy (w ,_fcgd );if _egaf !=nil {return _egaf ;};};_caaf ._aae =true ;return nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fbg .PdfObject ;Popup *PdfAnnotationPopup ;CA _fbg .PdfObject ;RC _fbg .PdfObject ;CreationDate _fbg .PdfObject ;IRT _fbg .PdfObject ;Subj _fbg .PdfObject ;RT _fbg .PdfObject ;IT _fbg .PdfObject ;ExData _fbg .PdfObject ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_dega *Permissions )GetContainingPdfObject ()_fbg .PdfObject {return _dega ._ccfef };

// SetFlag sets the flag for the field.
func (_adag *PdfField )SetFlag (flag FieldFlag ){_adag .Ff =_fbg .MakeInteger (int64 (flag ))};func _gcbcf (_ecfa _fbg .PdfObject ){_adc .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ecfa ,_ecfa .String ());if _aaef ,_geccgc :=_ecfa .(*_fbg .PdfObjectStream );
_geccgc {_gdcde ,_fdabb :=_fbg .DecodeStream (_aaef );if _fdabb !=nil {_adc .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_fdabb );return ;};_adc .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gdcde );}else if _dgage ,_efgc :=_ecfa .(*_fbg .PdfIndirectObject );
_efgc {_adc .Log .Debug ("\u0025\u0054\u0020%\u0076",_dgage .PdfObject ,_dgage .PdfObject );_adc .Log .Debug ("\u0025\u0073",_dgage .PdfObject .String ());};};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_acfd *DSS )GenerateHashMaps ()error {_gcbg ,_fccf :=_acfd .generateHashMap (_acfd .Certs );if _fccf !=nil {return _fccf ;};_gafd ,_fccf :=_acfd .generateHashMap (_acfd .OCSPs );if _fccf !=nil {return _fccf ;};_acfe ,_fccf :=_acfd .generateHashMap (_acfd .CRLs );
if _fccf !=nil {return _fccf ;};_acfd ._cbced =_gcbg ;_acfd ._adgf =_gafd ;_acfd ._fdgd =_acfe ;return nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cdb :=NewPdfAction ();_ccb :=&PdfActionThread {};_ccb .PdfAction =_cdb ;_cdb .SetContext (_ccb );return _ccb ;};

// ToPdfObject implements interface PdfModel.
func (_dec *PdfAnnotationPolyLine )ToPdfObject ()_fbg .PdfObject {_dec .PdfAnnotation .ToPdfObject ();_efbb :=_dec ._ecfe ;_bbdg :=_efbb .PdfObject .(*_fbg .PdfObjectDictionary );_dec .PdfAnnotationMarkup .appendToPdfDictionary (_bbdg );_bbdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_bbdg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dec .Vertices );_bbdg .SetIfNotNil ("\u004c\u0045",_dec .LE );_bbdg .SetIfNotNil ("\u0042\u0053",_dec .BS );_bbdg .SetIfNotNil ("\u0049\u0043",_dec .IC );_bbdg .SetIfNotNil ("\u0042\u0045",_dec .BE );
_bbdg .SetIfNotNil ("\u0049\u0054",_dec .IT );_bbdg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dec .Measure );return _efbb ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gg .ReadSeeker )(*PdfFont ,error ){_becf ,_egfd :=_gg .ReadAll (r );if _egfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_egfd );
return nil ,_egfd ;};_gegg ,_egfd :=_dg .TtfParse (_fb .NewReader (_becf ));if _egfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_egfd );
return nil ,_egfd ;};_gdea :=&pdfCIDFontType2 {fontCommon :fontCommon {_decd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fbg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gegg .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_befc :=1000.0/float64 (_gegg .UnitsPerEm );_edceg :=_befc *float64 (_gegg .Widths [0]);_gbfdf :=make (map[rune ]int );_ffgfe :=make (map[_dg .GID ]int );_fcfa :=_dg .GID (len (_gegg .Widths ));for _bfbc ,_adgeb :=range _gegg .Chars {if _adgeb > _fcfa -1{continue ;
};_cgdfgd :=int (_befc *float64 (_gegg .Widths [_adgeb ]));_gbfdf [_bfbc ]=_cgdfgd ;_ffgfe [_adgeb ]=_cgdfgd ;};_gdea ._geaa =_gbfdf ;_gdea .DW =_fbg .MakeInteger (int64 (_edceg ));_bdbgb :=_cagfa (_ffgfe ,uint16 (_fcfa ));_gdea .W =_fbg .MakeIndirectObject (_bdbgb );
_gefc :=_fbg .MakeDict ();_gefc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fbg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gefc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fbg .MakeString ("\u0041\u0064\u006fb\u0065"));
_gefc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fbg .MakeInteger (0));_gdea .CIDSystemInfo =_gefc ;_ccgb :=&PdfFontDescriptor {FontName :_fbg .MakeName (_gegg .PostScriptName ),Ascent :_fbg .MakeFloat (_befc *float64 (_gegg .TypoAscender )),Descent :_fbg .MakeFloat (_befc *float64 (_gegg .TypoDescender )),CapHeight :_fbg .MakeFloat (_befc *float64 (_gegg .CapHeight )),FontBBox :_fbg .MakeArrayFromFloats ([]float64 {_befc *float64 (_gegg .Xmin ),_befc *float64 (_gegg .Ymin ),_befc *float64 (_gegg .Xmax ),_befc *float64 (_gegg .Ymax )}),ItalicAngle :_fbg .MakeFloat (_gegg .ItalicAngle ),MissingWidth :_fbg .MakeFloat (_edceg )};
_fcbcd ,_egfd :=_fbg .MakeStream (_becf ,_fbg .NewFlateEncoder ());if _egfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_egfd );
return nil ,_egfd ;};_fcbcd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fbg .MakeInteger (int64 (len (_becf ))));_ccgb .FontFile2 =_fcbcd ;if _gegg .Bold {_ccgb .StemV =_fbg .MakeInteger (120);}else {_ccgb .StemV =_fbg .MakeInteger (70);
};_geegf :=_fede ;if _gegg .IsFixedPitch {_geegf |=_fadgg ;};if _gegg .ItalicAngle !=0{_geegf |=_ffec ;};_ccgb .Flags =_fbg .MakeInteger (int64 (_geegf ));_gdea ._daef =_gegg .PostScriptName ;_gdea ._bgbb =_ccgb ;_dbdbg :=pdfFontType0 {fontCommon :fontCommon {_decd :"\u0054\u0079\u0070e\u0030",_daef :_gegg .PostScriptName },DescendantFont :&PdfFont {_fbff :_gdea },Encoding :_fbg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cgbbg :_gegg .NewEncoder ()};
if len (_gegg .Chars )> 0{_geccf :=make (map[_ed .CharCode ]rune ,len (_gegg .Chars ));for _dafbce ,_cbcdf :=range _gegg .Chars {_fabec :=_ed .CharCode (_cbcdf );if _cgegc ,_aagff :=_geccf [_fabec ];!_aagff ||(_aagff &&_cgegc > _dafbce ){_geccf [_fabec ]=_dafbce ;
};};_dbdbg ._ceadf =_ed .NewToUnicodeCMap (_geccf );};_edac :=PdfFont {_fbff :&_dbdbg };return &_edac ,nil ;};var (_dfabf =_c .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_ffcdg =_c .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_cbdeg =_c .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dcdcc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bcdc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_aeedc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);var _bacab =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _ccbd (_fdefg _fbg .PdfObject )(*PdfColorspaceICCBased ,error ){_egec :=&PdfColorspaceICCBased {};if _cecdc ,_gedce :=_fdefg .(*_fbg .PdfIndirectObject );_gedce {_egec ._afdbc =_cecdc ;};_fdefg =_fbg .TraceToDirectObject (_fdefg );_bbeb ,_dbde :=_fdefg .(*_fbg .PdfObjectArray );
if !_dbde {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbeb .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_fdefg =_fbg .TraceToDirectObject (_bbeb .Get (0));_ebfge ,_dbde :=_fdefg .(*_fbg .PdfObjectName );if !_dbde {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebfge !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fdefg =_bbeb .Get (1);
_ecdg ,_dbde :=_fbg .GetStream (_fdefg );if !_dbde {_adc .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fdefg );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gbca :=_ecdg .PdfObjectDictionary ;_dcfce ,_dbde :=_gbca .Get ("\u004e").(*_fbg .PdfObjectInteger );
if !_dbde {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dcfce !=1&&*_dcfce !=3&&*_dcfce !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_egec .N =int (*_dcfce );if _dadf :=_gbca .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dadf !=nil {_cbeeg ,_ddbed :=NewPdfColorspaceFromPdfObject (_dadf );if _ddbed !=nil {return nil ,_ddbed ;};_egec .Alternate =_cbeeg ;};if _abdc :=_gbca .Get ("\u0052\u0061\u006eg\u0065");
_abdc !=nil {_abdc =_fbg .TraceToDirectObject (_abdc );_bfcg ,_bgab :=_abdc .(*_fbg .PdfObjectArray );if !_bgab {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bfcg .Len ()!=2*_egec .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fggd ,_fgeeg :=_bfcg .GetAsFloat64Slice ();if _fgeeg !=nil {return nil ,_fgeeg ;};_egec .Range =_fggd ;}else {_egec .Range =make ([]float64 ,2*_egec .N );for _dfgbb :=0;_dfgbb < _egec .N ;_dfgbb ++{_egec .Range [2*_dfgbb ]=0.0;_egec .Range [2*_dfgbb +1]=1.0;
};};if _abbg :=_gbca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_abbg !=nil {_cege ,_dcab :=_abbg .(*_fbg .PdfObjectStream );if !_dcab {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_egec .Metadata =_cege ;};_cdff ,_bfcee :=_fbg .DecodeStream (_ecdg );if _bfcee !=nil {return nil ,_bfcee ;};_egec .Data =_cdff ;_egec ._fdfgb =_ecdg ;return _egec ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbdc *_fbg .PdfObjectDictionary ;_cfge *_fbg .PdfIndirectObject ;};func (_dfbad *PdfWriter )writeOutputIntents ()error {if len (_dfbad ._cdead )==0{return nil ;
};_cfgad :=make ([]_fbg .PdfObject ,len (_dfbad ._cdead ));for _babfb ,_ecec :=range _dfbad ._cdead {_dcgbg :=_ecec .ToPdfObject ();_cfgad [_babfb ]=_fbg .MakeIndirectObject (_dcgbg );};_eabbc :=_fbg .MakeIndirectObject (_fbg .MakeArray (_cfgad ...));_dfbad ._gdgbee .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_eabbc );
if _ddccd :=_dfbad .addObjects (_eabbc );_ddccd !=nil {return _ddccd ;};return nil ;};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_ddgad *KDict )GetPageNumber ()int64 {return _ddgad ._ebegf };

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_decgb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cf .CharCode )(_cfeg []rune ,_egbda ,_bffa int ){_fdfed ,_egbda ,_bffa :=_decgb .CharcodesToStrings (charcodes ,"");return []rune (_gdg .Join (_fdfed ,"")),_egbda ,_bffa ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ToPdfObject implements interface PdfModel.
func (_bbe *PdfAnnotationRichMedia )ToPdfObject ()_fbg .PdfObject {_bbe .PdfAnnotation .ToPdfObject ();_efg :=_bbe ._ecfe ;_bcff :=_efg .PdfObject .(*_fbg .PdfObjectDictionary );_bcff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bcff .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bbe .RichMediaSettings );_bcff .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bbe .RichMediaContent );
return _efg ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_gacdg pdfFontSimple )GetCharMetrics (code _cf .CharCode )(_dg .CharMetrics ,bool ){if _faac ,_ggdfe :=_gacdg ._gaeda [code ];_ggdfe {return _dg .CharMetrics {Wx :_faac },true ;};if _dg .IsStdFont (_dg .StdFontName (_gacdg ._daef )){return _dg .CharMetrics {Wx :250},true ;
};return _dg .CharMetrics {},false ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gdfaf *PdfPageResources )AddExtGState (gsName _fbg .PdfObjectName ,gsDict _fbg .PdfObject )error {if _gdfaf .ExtGState ==nil {_gdfaf .ExtGState =_fbg .MakeDict ();};_geabg :=_gdfaf .ExtGState ;_fbegd ,_cbca :=_fbg .TraceToDirectObject (_geabg ).(*_fbg .PdfObjectDictionary );
if !_cbca {_adc .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_geabg ,_fbg .TraceToDirectObject (_geabg ));
return _fbg .ErrTypeError ;};_fbegd .Set (gsName ,gsDict );return nil ;};func _ccef (_bbcdf _fbg .PdfObject )(*PdfColorspaceLab ,error ){_afgf :=NewPdfColorspaceLab ();if _fab ,_cgggg :=_bbcdf .(*_fbg .PdfIndirectObject );_cgggg {_afgf ._cccb =_fab ;};
_bbcdf =_fbg .TraceToDirectObject (_bbcdf );_dfgaf ,_bccg :=_bbcdf .(*_fbg .PdfObjectArray );if !_bccg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dfgaf .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bbcdf =_fbg .TraceToDirectObject (_dfgaf .Get (0));_geeeg ,_bccg :=_bbcdf .(*_fbg .PdfObjectName );if !_bccg {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_geeeg !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bbcdf =_fbg .TraceToDirectObject (_dfgaf .Get (1));_afaccg ,_bccg :=_bbcdf .(*_fbg .PdfObjectDictionary );
if !_bccg {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bbcdf =_afaccg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bbcdf =_fbg .TraceToDirectObject (_bbcdf );_dagg ,_bccg :=_bbcdf .(*_fbg .PdfObjectArray );if !_bccg {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _dagg .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_aagf ,_bcdb :=_dagg .GetAsFloat64Slice ();if _bcdb !=nil {return nil ,_bcdb ;};_afgf .WhitePoint =_aagf ;_bbcdf =_afaccg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bbcdf !=nil {_bbcdf =_fbg .TraceToDirectObject (_bbcdf );
_fgeg ,_beca :=_bbcdf .(*_fbg .PdfObjectArray );if !_beca {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _fgeg .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_acgb ,_aedfc :=_fgeg .GetAsFloat64Slice ();if _aedfc !=nil {return nil ,_aedfc ;};_afgf .BlackPoint =_acgb ;};_bbcdf =_afaccg .Get ("\u0052\u0061\u006eg\u0065");if _bbcdf !=nil {_bbcdf =_fbg .TraceToDirectObject (_bbcdf );_bcac ,_ccfg :=_bbcdf .(*_fbg .PdfObjectArray );
if !_ccfg {_adc .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcac .Len ()!=4{_adc .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_becc ,_gede :=_bcac .GetAsFloat64Slice ();if _gede !=nil {return nil ,_gede ;};_afgf .Range =_becc ;};return _afgf ,nil ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_bfedc *ViewerPreferences )IsDisplayDocTitle ()bool {if _bfedc ._dbfbb ==nil {return false ;};return *_bfedc ._dbfbb ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dcefb *PdfRectangle )Normalize (){if _dcefb .Llx > _dcefb .Urx {_dcefb .Llx ,_dcefb .Urx =_dcefb .Urx ,_dcefb .Llx ;};if _dcefb .Lly > _dcefb .Ury {_dcefb .Lly ,_dcefb .Ury =_dcefb .Ury ,_dcefb .Lly ;};};

// K returns the value of the key component of the color.
func (_gfff *PdfColorDeviceCMYK )K ()float64 {return _gfff [3]};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_bagcda DefaultImageHandler )NewImageFromGoImage (goimg _aa .Image )(*Image ,error ){_dedfg ,_cceff :=_ced .FromGoImage (goimg );if _cceff !=nil {return nil ,_cceff ;};_bdgea :=_cgdba (_dedfg .Base ());return &_bdgea ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_gdfbf *PdfTilingPattern )SetContentStream (content []byte ,encoder _fbg .StreamEncoder )error {_afde ,_dcfde :=_gdfbf ._eadbd .(*_fbg .PdfObjectStream );if !_dcfde {_adc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdfbf ._eadbd );
return _fbg .ErrTypeError ;};if encoder ==nil {encoder =_fbg .NewRawEncoder ();};_gfaed :=_afde .PdfObjectDictionary ;_ccde :=encoder .MakeStreamDict ();_gfaed .Merge (_ccde );_fdcae ,_gedf :=encoder .EncodeBytes (content );if _gedf !=nil {return _gedf ;
};_gfaed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_fdcae ))));_afde .Stream =_fdcae ;return nil ;};func _cggaa (_gfcfc *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gfcfc }};const (_ PdfOutputIntentType =iota ;
PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_ccfb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ggge ,_ ,_cgea :=_ccfb .CharcodesToUnicodeWithStats (_ccfb .BytesToCharcodes (data ));_age :=_cf .ExpandLigatures (_ggge );return _age ,_dc .RuneCountInString (_age ),_cgea ;
};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_becb []_fbg .PdfObject )([]_fbg .PdfObject ,error );};

// IsColored specifies if the pattern is colored.
func (_aaabd *PdfTilingPattern )IsColored ()bool {if _aaabd .PaintType !=nil &&*_aaabd .PaintType ==1{return true ;};return false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bbeff *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdgg :=vals [0];if _fdgg < 0.0||_fdgg > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdgg );
return nil ,ErrColorOutOfRange ;};_adda :=NewPdfColorCalGray (_fdgg );return _adda ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_deaa :=PdfColorDeviceRGB {r ,g ,b };return &_deaa ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ffag *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fd .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_fgfd ,_gfgag :=_ced .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acag ,img ._beggbb );if _gfgag !=nil {return img ,_gfgag ;};_ggag ,_gfgag :=_ced .NRGBAConverter .Convert (_fgfd );
if _gfgag !=nil {return img ,_gfgag ;};_edaa :=_cgdba (_ggag .Base ());_adc .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_adc .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_adc .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_edaa .Data );_adc .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_edaa );return _edaa ,nil ;};func (_bafab *PdfReader )resolveReference (_gbefff *_fbg .PdfObjectReference )(_fbg .PdfObject ,bool ,error ){_bgdac ,_eaggg :=_bafab ._eedad .ObjCache [int (_gbefff .ObjectNumber )];
if !_eaggg {_adc .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gbefff );_eadcf ,_cgac :=_bafab ._eedad .LookupByReference (*_gbefff );if _cgac !=nil {return nil ,false ,_cgac ;};_bafab ._eedad .ObjCache [int (_gbefff .ObjectNumber )]=_eadcf ;
return _eadcf ,false ,nil ;};return _bgdac ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eaf *PdfAnnotationPopup )ToPdfObject ()_fbg .PdfObject {_eaf .PdfAnnotation .ToPdfObject ();_fgfg :=_eaf ._ecfe ;_bbcd :=_fgfg .PdfObject .(*_fbg .PdfObjectDictionary );_bbcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0050\u006f\u0070u\u0070"));
_bbcd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaf .Parent );_bbcd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eaf .Open );return _fgfg ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_efeg *PdfPage )GetRotate ()(int64 ,error ){if _efeg .Rotate !=nil {return *_efeg .Rotate ,nil ;};_bdacf :=_efeg .Parent ;for _bdacf !=nil {_dfbd ,_bebbb :=_fbg .GetDict (_bdacf );if !_bebbb {return 0,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _baea :=_dfbd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_baea !=nil {_caeec ,_cdbg :=_fbg .GetInt (_baea );if !_cdbg {return 0,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _caeec !=nil {return int64 (*_caeec ),nil ;
};return 0,_fd .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bdacf =_dfbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_fd .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ColorToRGB converts a Lab color to an RGB color.
func (_agaf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_edee :=func (_gbcf float64 )float64 {if _gbcf >=6.0/29{return _gbcf *_gbcf *_gbcf ;};return 108.0/841*(_gbcf -4.0/29.0);};_fbbde ,_gdac :=color .(*PdfColorLab );if !_gdac {_adc .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_fbbde .L ();AStar :=_fbbde .A ();BStar :=_fbbde .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_agaf .WhitePoint [0]*_edee (L );Y :=_agaf .WhitePoint [1]*_edee (M );Z :=_agaf .WhitePoint [2]*_edee (N );_aadb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dbdcd :=-0.969256*X +1.875992*Y +0.041556*Z ;_efbe :=0.055648*X +-0.204043*Y +1.057311*Z ;_aadb =_ab .Min (_ab .Max (_aadb ,0),1.0);
_dbdcd =_ab .Min (_ab .Max (_dbdcd ,0),1.0);_efbe =_ab .Min (_ab .Max (_efbe ,0),1.0);return NewPdfColorDeviceRGB (_aadb ,_dbdcd ,_efbe ),nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cfddc :=&PdfPageResources {};_cfddc ._abcdeb =_fbg .MakeDict ();return _cfddc ;};

// SetTabOrder sets the tab order for the page.
func (_bbgdg *PdfPage )SetTabOrder (order TabOrderType ){_bbgdg .Tabs =_fbg .MakeName (string (order ))};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_agcae *LTV )EnableChain (chain []*_dd .Certificate )error {return _agcae .enable (nil ,chain ,"")};func (_dbdf *PdfReader )buildNameNodes (_faba *_fbg .PdfIndirectObject ,_dbef map[_fbg .PdfObject ]struct{})error {if _faba ==nil {return nil ;};if _ ,_gddb :=_dbef [_faba ];
_gddb {_adc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_faba .ObjectNumber );return nil ;};_dbef [_faba ]=struct{}{};
_effbfb ,_cegbf :=_faba .PdfObject .(*_fbg .PdfObjectDictionary );if !_cegbf {return _fd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _ccba ,_gfef :=_fbg .GetDict (_effbfb .Get ("\u0044\u0065\u0073t\u0073"));
_gfef {_faab ,_fdeab :=_fbg .GetArray (_ccba .Get ("\u004b\u0069\u0064\u0073"));if !_fdeab {return _fd .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_adc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_faab );
for _bgegg ,_faffc :=range _faab .Elements (){_fceaa ,_bcfcc :=_fbg .GetIndirect (_faffc );if !_bcfcc {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_fceaa );
return _fd .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_faab .Set (_bgegg ,_fceaa );_gcfga :=_dbdf .buildNameNodes (_fceaa ,_dbef );if _gcfga !=nil {return _gcfga ;
};};};if _dbbgd ,_ceebd :=_fbg .GetDict (_effbfb );_ceebd {if !_fbg .IsNullObject (_dbbgd .Get ("\u004b\u0069\u0064\u0073")){if _fdcaa ,_edafb :=_fbg .GetArray (_dbbgd .Get ("\u004b\u0069\u0064\u0073"));_edafb {for _cafb ,_dcfdg :=range _fdcaa .Elements (){if _ecdad ,_dagec :=_fbg .GetIndirect (_dcfdg );
_dagec {_fdcaa .Set (_cafb ,_ecdad );_fbbfa :=_dbdf .buildNameNodes (_ecdad ,_dbef );if _fbbfa !=nil {return _fbbfa ;};};};};};};return nil ;};func (_gbdd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};func (_cbag *LTV )getCRLs (_cfgge []*_dd .Certificate )([][]byte ,error ){_faacc :=make ([][]byte ,0,len (_cfgge ));for _ ,_gabb :=range _cfgge {for _ ,_ecadg :=range _gabb .CRLDistributionPoints {if _cbag .CertClient .IsCA (_gabb ){continue ;};_gbdgf ,_fdcc :=_cbag .CRLClient .MakeRequest (_ecadg ,_gabb );
if _fdcc !=nil {_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fdcc );continue ;};_faacc =append (_faacc ,_gbdgf );};};return _faacc ,nil ;};


// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_gdfea *PdfFont )GetCIDToGIDMapObject ()_fbg .PdfObject {_fagf ,_fcgba :=_gdfea ._fbff .(*pdfCIDFontType2 );if _fcgba {return _fagf .CIDToGIDMap ;};return nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_eedc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _eedc .Alternate ==nil {_adc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _eedc .N ==1{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ebgc :=NewPdfColorspaceDeviceGray ();return _ebgc .ImageToRGB (img );}else if _eedc .N ==3{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _eedc .N ==4{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cbea :=NewPdfColorspaceDeviceCMYK ();return _cbea .ImageToRGB (img );}else {return img ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_adc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_eedc );
_fgfa ,_egcd :=_eedc .Alternate .ImageToRGB (img );_adc .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_adc .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fgfa );
return _fgfa ,_egcd ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bdgg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fd .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_geee :=field .V ;if _geee ==nil {return _fd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_abge :=pageNum -1;
if _abge < 0||_abge > len (_bdgg ._efgd )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bage :=_bdgg .Reader .PageList [_abge ];field .P =_bage .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fbg .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_bage .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bdgg ._ebaf ==_bdgg ._gafe .AcroForm {_bdgg ._ebaf =_bdgg .Reader .AcroForm ;};_babb :=_bdgg ._ebaf ;if _babb ==nil {_babb =NewPdfAcroForm ();};_babb .SigFlags =_fbg .MakeInteger (3);
if _babb .NeedAppearances !=nil {_babb .NeedAppearances =nil ;};_egeae :=append (_babb .AllFields (),field .PdfField );_babb .Fields =&_egeae ;_bdgg .ReplaceAcroForm (_babb );_bdgg .UpdatePage (_bage );_bdgg ._efgd [_abge ]=_bage ;if _ ,_bbb :=field .V .GetDocMDPPermission ();
_bbb {_bdgg ._cfcc =NewPermissions (field .V );};return nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fbg .PdfObjectInteger ;BitsPerComponent *_fbg .PdfObjectInteger ;VerticesPerRow *_fbg .PdfObjectInteger ;Decode *_fbg .PdfObjectArray ;Function []PdfFunction ;};func (_aeg *PdfReader )newPdfActionThreadFromDict (_acd *_fbg .PdfObjectDictionary )(*PdfActionThread ,error ){_dbf ,_gce :=_dae (_acd .Get ("\u0046"));
if _gce !=nil {return nil ,_gce ;};return &PdfActionThread {D :_acd .Get ("\u0044"),B :_acd .Get ("\u0042"),F :_dbf },nil ;};func (_adcd *PdfReader )newPdfActionResetFormFromDict (_ace *_fbg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ace .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ace .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_debee :=&PdfColorPatternType3 {};return _debee ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gada FieldFlag )Has (fl FieldFlag )bool {return (_gada .Mask ()&fl .Mask ())> 0};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eacgc pdfFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _eacgc .DescendantFont ==nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eacgc );
return _dg .CharMetrics {},false ;};return _eacgc .DescendantFont .GetRuneMetrics (r );};

// IsSimple returns true if `font` is a simple font.
func (_abgea *PdfFont )IsSimple ()bool {_ ,_bbfc :=_abgea ._fbff .(*pdfFontSimple );return _bbfc };

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_fdfgf *PdfField )IsTerminal ()bool {return len (_fdfgf .Kids )==0};var _ceaa =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// SetViewArea sets the value of the viewArea.
func (_fegff *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_fegff ._cgefba =viewArea };

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_gfd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_dgbef *LTV )getCerts (_bdae []*_dd .Certificate )([][]byte ,error ){_gfacf :=make ([][]byte ,0,len (_bdae ));for _ ,_gcbgc :=range _bdae {_gfacf =append (_gfacf ,_gcbgc .Raw );};return _gfacf ,nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_adeg :_fbg .MakeDict (),ColorComponents :colorComponents };
};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_gfbgb *PdfWriter )SetCatalogStructTreeRoot (tree _fbg .PdfObject )error {if tree ==nil {_gfbgb ._gdgbee .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_gfbgb ._gdgbee .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _gfbgb .addObjects (tree );};func _cacf (_fcegd *_fbg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_aced :=&PdfFieldChoice {};_aced .Opt ,_ =_fbg .GetArray (_fcegd .Get ("\u004f\u0070\u0074"));_aced .TI ,_ =_fbg .GetInt (_fcegd .Get ("\u0054\u0049"));
_aced .I ,_ =_fbg .GetArray (_fcegd .Get ("\u0049"));return _aced ,nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gedbdc *PdfWriter )SetPageLabels (pageLabels _fbg .PdfObject )error {if pageLabels ==nil {return nil ;};_adc .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_gedbdc ._gdgbee .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _gedbdc .addObjects (pageLabels );};func (_abac *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bece *PdfColorspaceDeviceGray )ToPdfObject ()_fbg .PdfObject {return _fbg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_acfag PdfModel ;_eadbd _fbg .PdfObject ;};func (_fcae *PdfAppender )replaceObject (_acfa ,_bggcf _fbg .PdfObject ){switch _afbf :=_acfa .(type ){case *_fbg .PdfIndirectObject :_fcae ._daec [_bggcf ]=_afbf .ObjectNumber ;case *_fbg .PdfObjectStream :_fcae ._daec [_bggcf ]=_afbf .ObjectNumber ;
};};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_defbd *PdfPageResources )GetXObjectByName (keyName _fbg .PdfObjectName )(*_fbg .PdfObjectStream ,XObjectType ){if _defbd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dgfaa ,_dbdee :=_fbg .TraceToDirectObject (_defbd .XObject ).(*_fbg .PdfObjectDictionary );
if !_dbdee {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbg .TraceToDirectObject (_defbd .XObject ));
return nil ,XObjectTypeUndefined ;};if _gggbac :=_dgfaa .Get (keyName );_gggbac !=nil {_fafge ,_gaefd :=_fbg .GetStream (_gggbac );if !_gaefd {_adc .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gggbac );
return nil ,XObjectTypeUndefined ;};_bgdag :=_fafge .PdfObjectDictionary ;_dfbdf ,_gaefd :=_fbg .TraceToDirectObject (_bgdag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fbg .PdfObjectName );if !_gaefd {_adc .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_bgdag .String ());
return nil ,XObjectTypeUndefined ;};if *_dfbdf =="\u0049\u006d\u0061g\u0065"{return _fafge ,XObjectTypeImage ;}else if *_dfbdf =="\u0046\u006f\u0072\u006d"{return _fafge ,XObjectTypeForm ;}else if *_dfbdf =="\u0050\u0053"{return _fafge ,XObjectTypePS ;
}else {_adc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dfbdf );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject implements interface PdfModel.
func (_dcd *PdfAnnotationPolygon )ToPdfObject ()_fbg .PdfObject {_dcd .PdfAnnotation .ToPdfObject ();_gcca :=_dcd ._ecfe ;_daed :=_gcca .PdfObject .(*_fbg .PdfObjectDictionary );_dcd .PdfAnnotationMarkup .appendToPdfDictionary (_daed );_daed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_daed .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dcd .Vertices );_daed .SetIfNotNil ("\u004c\u0045",_dcd .LE );_daed .SetIfNotNil ("\u0042\u0053",_dcd .BS );_daed .SetIfNotNil ("\u0049\u0043",_dcd .IC );_daed .SetIfNotNil ("\u0042\u0045",_dcd .BE );
_daed .SetIfNotNil ("\u0049\u0054",_dcd .IT );_daed .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dcd .Measure );return _gcca ;};func _bbab (_aeddb *XObjectForm )(*PdfRectangle ,bool ,error ){if _bfafd ,_fbfc :=_aeddb .BBox .(*_fbg .PdfObjectArray );
_fbfc {_fcee ,_daaba :=NewPdfRectangle (*_bfafd );if _daaba !=nil {return nil ,false ,_daaba ;};if _eagdg ,_feeeg :=_aeddb .Matrix .(*_fbg .PdfObjectArray );_feeeg {_adef ,_eaga :=_eagdg .ToFloat64Array ();if _eaga !=nil {return nil ,false ,_eaga ;};_cgecab :=_fbe .IdentityMatrix ();
if len (_adef )==6{_cgecab =_fbe .NewMatrix (_adef [0],_adef [1],_adef [2],_adef [3],_adef [4],_adef [5]);};_fcee .Transform (_cgecab );return _fcee ,true ,nil ;};return _fcee ,false ,nil ;};return nil ,false ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};func _fgdae (_cffg _fbg .PdfObject )(string ,error ){_cffg =_fbg .TraceToDirectObject (_cffg );switch _gecee :=_cffg .(type ){case *_fbg .PdfObjectString :return _gecee .Str (),nil ;case *_fbg .PdfObjectStream :_eagc ,_dcadc :=_fbg .DecodeStream (_gecee );
if _dcadc !=nil {return "",_dcadc ;};return string (_eagc ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cffg );
};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_ccgfe *pdfFontSimple )ToPdfObject ()_fbg .PdfObject {if _ccgfe ._bfdag ==nil {_ccgfe ._bfdag =&_fbg .PdfIndirectObject {};};_ccega :=_ccgfe .baseFields ().asPdfObjectDictionary ("");_ccgfe ._bfdag .PdfObject =_ccega ;if _ccgfe .FirstChar !=nil {_ccega .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ccgfe .FirstChar );
};if _ccgfe .LastChar !=nil {_ccega .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ccgfe .LastChar );};if _ccgfe .Widths !=nil {_ccega .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ccgfe .Widths );};if _ccgfe .Encoding !=nil {_ccega .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ccgfe .Encoding );
}else if _ccgfe ._efbad !=nil {_gbga :=_ccgfe ._efbad .ToPdfObject ();if _gbga !=nil {_ccega .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbga );};};return _ccgfe ._bfdag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_eecd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cdf :=&PdfBorderStyle {};return _cdf };var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_geeaf pdfCIDFontType2 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_ddecc ,_bfcd :=_geeaf ._geaa [r ];if !_bfcd {_bafcaa ,_dgfa :=_fbg .GetInt (_geeaf .DW );if !_dgfa {return _dg .CharMetrics {},false ;};_ddecc =int (*_bafcaa );};return _dg .CharMetrics {Wx :float64 (_ddecc )},true ;
};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ecge :=&PdfFilespec {};_ecge ._efba =_fbg .MakeIndirectObject (_fbg .MakeDict ());return _ecge ;};

// GetPerms returns the Permissions dictionary
func (_gfea *PdfReader )GetPerms ()*Permissions {return _gfea ._dccdf };var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);func (_bba *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// SetReason sets the `Reason` field of the signature.
func (_cbge *PdfSignature )SetReason (reason string ){_cbge .Reason =_fbg .MakeEncodedString (reason ,true );};

// ToPdfObject implements interface PdfModel.
func (_ecdb *PdfAnnotationTrapNet )ToPdfObject ()_fbg .PdfObject {_ecdb .PdfAnnotation .ToPdfObject ();_dedgd :=_ecdb ._ecfe ;_gged :=_dedgd .PdfObject .(*_fbg .PdfObjectDictionary );_gged .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _dedgd ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_egcc *PdfColorspaceLab )DecodeArray ()[]float64 {_dagd :=[]float64 {0,100};if _egcc !=nil &&_egcc .Range !=nil &&len (_egcc .Range )==4{_dagd =append (_dagd ,_egcc .Range ...);}else {_dagd =append (_dagd ,-100,100,-100,100);};return _dagd ;};func (_bbgd fontCommon )fontFlags ()int {if _bbgd ._bgbb ==nil {return 0;
};return _bbgd ._bgbb ._gacb ;};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";
StructureTypeHeading5 ="\u0048\u0035";StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";
StructureTypeTableRow ="\u0054\u0052";StructureTypeTableHeaderCell ="\u0054\u0048";StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";
);

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _gg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _cbaef ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dggcc (rs ,opts ,true ,_cbaef );
};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_adgccd *PdfPageResources )SetColorspaceByName (keyName _fbg .PdfObjectName ,cs PdfColorspace )error {_facfdf ,_cegd :=_adgccd .GetColorspaces ();if _cegd !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cegd );
return _cegd ;};if _facfdf ==nil {_facfdf =NewPdfPageResourcesColorspaces ();_adgccd .SetColorSpace (_facfdf );};_facfdf .Set (keyName ,cs );return nil ;};func _gdeb (_eggde *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_eggde }};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _fbg .PdfObject )(*PdfOutputIntent ,error ){_ceeb :=&PdfOutputIntent {};if _cegegb :=_ceeb .ParsePdfObject (object );_cegegb !=nil {return nil ,_cegegb ;};return _ceeb ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dgeg *PdfPageResources )HasFontByName (keyName _fbg .PdfObjectName )bool {_ ,_afgcd :=_dgeg .GetFontByName (keyName );return _afgcd ;};

// GetStandardApplier gets currently used StandardApplier..
func (_edeeb *PdfWriter )GetStandardApplier ()StandardApplier {return _edeeb ._fffcf };

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ceadc *PdfPage )GetContentStreamObjs ()[]_fbg .PdfObject {if _ceadc .Contents ==nil {return nil ;};_gedbd :=_fbg .TraceToDirectObject (_ceadc .Contents );if _dcbbd ,_ffcbc :=_gedbd .(*_fbg .PdfObjectArray );_ffcbc {return _dcbbd .Elements ();};return []_fbg .PdfObject {_gedbd };
};func (_dfcgb *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_dfcgb ._bagfb .Major ,_dfcgb ._bagfb .Minor );};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cab :=NewPdfAnnotation ();_aacd :=&PdfAnnotationInk {};_aacd .PdfAnnotation =_cab ;_aacd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cab .SetContext (_aacd );return _aacd ;};

// AddWatermarkImage adds an image watermark to the page.
func (_fbeb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fccgg ,_gaegd :=_fbeb .GetMediaBox ();if _gaegd !=nil {return _gaegd ;};_cebg :=_fccgg .Urx -_fccgg .Llx ;_acbadf :=_fccgg .Ury -_fccgg .Lly ;_ffee :=opt .Angle *_ab .Pi /180;
_fdcbe :=float64 (*ximg .Width );_fegaf :=(_cebg -_fdcbe *_ab .Cos (_ffee ))/2;if opt .FitToWidth {_fdcbe =_cebg ;_fegaf =0;};_ddgb :=_acbadf ;_facfd :=float64 (0);if opt .PreserveAspectRatio {_ddgb =_fdcbe *float64 (*ximg .Height )/float64 (*ximg .Width );
_facfd =(_acbadf -_ddgb )/2;_facfd -=float64 (*ximg .Width )/2*_ab .Sin (_ffee );};if _fbeb .Resources ==nil {_fbeb .Resources =NewPdfPageResources ();};_gcdc :=NewXObjectForm ();_gcdc .BBox =_fbg .MakeArrayFromFloats ([]float64 {0,0,_fdcbe ,_ddgb });_gcdc .Resources =NewPdfPageResources ();
_bcaa :=0;_fagg :=_fbg .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bcaa ));for _gcdc .Resources .HasXObjectByName (_fagg ){_bcaa ++;_fagg =_fbg .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bcaa ));};_gaegd =_gcdc .Resources .SetXObjectImageByName (_fagg ,ximg );
if _gaegd !=nil {return _gaegd ;};_bcaa =0;_fcbg :=_fbg .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bcaa ));for _gcdc .Resources .HasExtGState (_fcbg ){_bcaa ++;_fcbg =_fbg .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bcaa ));};
_acdd :=_fbg .MakeDict ();_acdd .Set ("\u0042\u004d",_fbg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_acdd .Set ("\u0043\u0041",_fbg .MakeFloat (opt .Alpha ));_acdd .Set ("\u0063\u0061",_fbg .MakeFloat (opt .Alpha ));_gaegd =_gcdc .Resources .AddExtGState (_fcbg ,_acdd );
if _gaegd !=nil {return _gaegd ;};_eabaf :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fcbg ,_fdcbe ,_ddgb ,0.0,0.0,_fagg );
_gcdc .SetContentStream ([]byte (_eabaf ),nil );_beabe :=_fbe .IdentityMatrix ().Rotate (_ffee );_fgbfd :=[]float64 {_beabe [0],_beabe [1],_beabe [3],_beabe [4],_beabe [6],_beabe [7]};_gcdc .Matrix =_fbg .MakeArrayFromFloats (_fgbfd );_bdbgc :=_fbeb .Resources .GenerateXObjectName ();
_gaegd =_fbeb .Resources .SetXObjectFormByName (_bdbgc ,_gcdc );if _gaegd !=nil {return _gaegd ;};_acec :=_e .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_fegaf ,_facfd ,_bdbgc );
return _fbeb .AppendContentBytes ([]byte (_acec ),true );};func _aaee (_gaeef *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cega ,_ecagd :=_fbg .GetDict (_gaeef .AP );if !_ecagd {return nil ,nil ,_fd .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _cega ==nil {return nil ,nil ,nil ;};_cccc ,_ecagd :=_fbg .GetArray (_gaeef .Rect );if !_ecagd ||_cccc .Len ()!=4{return nil ,nil ,_fd .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_abffe ,_afgb :=NewPdfRectangle (*_cccc );
if _afgb !=nil {return nil ,nil ,_afgb ;};_egda :=_fbg .TraceToDirectObject (_cega .Get ("\u004e"));switch _bbgfb :=_egda .(type ){case *_fbg .PdfObjectStream :_edcga :=_bbgfb ;_cfdd ,_abea :=NewXObjectFormFromStream (_edcga );return _cfdd ,_abffe ,_abea ;
case *_fbg .PdfObjectDictionary :_bdbd :=_bbgfb ;if _bdbd ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _ecbc _fbg .PdfObject ;_cdfed ,_agda :=_fbg .GetName (_gaeef .AS );if _agda {_ecbc =_bdbd .Get (*_cdfed );}else {_cbgg :=_gaeef ._ecfe .PdfObject .(*_fbg .PdfObjectDictionary );if _cbgg ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _abgb :=_cbgg .Get ("\u0056");_abgb !=nil {_ecbc =_bdbd .Get (_fbg .PdfObjectName (_abgb .String ()));};};if _ecbc ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_agfg ,_agda :=_fbg .GetStream (_ecbc );if !_agda {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cdfed );
return nil ,nil ,_fd .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fccab ,_afba :=NewXObjectFormFromStream (_agfg );return _fccab ,_abffe ,_afba ;};_adc .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_egda );
return nil ,nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_bdeca *Image )samplesTrimPadding (_ceaad []uint32 )[]uint32 {_defa :=_bdeca .ColorComponents *int (_bdeca .Width )*int (_bdeca .Height );if len (_ceaad )==_defa {return _ceaad ;};_efee :=make ([]uint32 ,_defa );_bddbf :=int (_bdeca .Width )*_bdeca .ColorComponents ;
var _bggcd ,_faga ,_fccfe ,_ecdc int ;_gebd :=_ced .BytesPerLine (int (_bdeca .Width ),int (_bdeca .BitsPerComponent ),_bdeca .ColorComponents );for _bggcd =0;_bggcd < int (_bdeca .Height );_bggcd ++{_faga =_bggcd *int (_bdeca .Width );_fccfe =_bggcd *_gebd ;
for _ecdc =0;_ecdc < _bddbf ;_ecdc ++{_efee [_faga +_ecdc ]=_ceaad [_fccfe +_ecdc ];};};return _efee ;};var (ErrRequiredAttributeMissing =_fd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dedd =_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fd .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fd .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_be .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fbg .ErrNotSupported );ErrType1CFontNotSupported =_be .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fbg .ErrNotSupported );
ErrType3FontNotSupported =_be .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fbg .ErrNotSupported );
ErrTTCmapNotSupported =_be .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fbg .ErrNotSupported );
ErrSignNotEnoughSpace =_be .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_be .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject returns the PDF representation of the function.
func (_ggcbf *PdfFunctionType2 )ToPdfObject ()_fbg .PdfObject {_fefff :=_fbg .MakeDict ();_fefff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fbg .MakeInteger (2));_fgfe :=&_fbg .PdfObjectArray {};for _ ,_gggd :=range _ggcbf .Domain {_fgfe .Append (_fbg .MakeFloat (_gggd ));
};_fefff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgfe );if _ggcbf .Range !=nil {_bdbb :=&_fbg .PdfObjectArray {};for _ ,_fdeed :=range _ggcbf .Range {_bdbb .Append (_fbg .MakeFloat (_fdeed ));};_fefff .Set ("\u0052\u0061\u006eg\u0065",_bdbb );};if _ggcbf .C0 !=nil {_ecdff :=&_fbg .PdfObjectArray {};
for _ ,_ccae :=range _ggcbf .C0 {_ecdff .Append (_fbg .MakeFloat (_ccae ));};_fefff .Set ("\u0043\u0030",_ecdff );};if _ggcbf .C1 !=nil {_cfdda :=&_fbg .PdfObjectArray {};for _ ,_gfab :=range _ggcbf .C1 {_cfdda .Append (_fbg .MakeFloat (_gfab ));};_fefff .Set ("\u0043\u0031",_cfdda );
};_fefff .Set ("\u004e",_fbg .MakeFloat (_ggcbf .N ));if _ggcbf ._ddgfg !=nil {_ggcbf ._ddgfg .PdfObject =_fefff ;return _ggcbf ._ddgfg ;};return _fefff ;};func (_geg *PdfReader )newPdfAnnotationLineFromDict (_cag *_fbg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_bace :=PdfAnnotationLine {};
_cgfb ,_ggf :=_geg .newPdfAnnotationMarkupFromDict (_cag );if _ggf !=nil {return nil ,_ggf ;};_bace .PdfAnnotationMarkup =_cgfb ;_bace .L =_cag .Get ("\u004c");_bace .BS =_cag .Get ("\u0042\u0053");_bace .LE =_cag .Get ("\u004c\u0045");_bace .IC =_cag .Get ("\u0049\u0043");
_bace .LL =_cag .Get ("\u004c\u004c");_bace .LLE =_cag .Get ("\u004c\u004c\u0045");_bace .Cap =_cag .Get ("\u0043\u0061\u0070");_bace .IT =_cag .Get ("\u0049\u0054");_bace .LLO =_cag .Get ("\u004c\u004c\u004f");_bace .CP =_cag .Get ("\u0043\u0050");_bace .Measure =_cag .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_bace .CO =_cag .Get ("\u0043\u004f");return &_bace ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_cadf *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cadf .Alternate ==nil {_adc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cadf .N ==1{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_edfeg :=NewPdfColorspaceDeviceGray ();return _edfeg .ColorToRGB (color );}else if _cadf .N ==3{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _cadf .N ==4{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_acea :=NewPdfColorspaceDeviceCMYK ();return _acea .ColorToRGB (color );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_adc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cadf );
return _cadf .Alternate .ColorToRGB (color );};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_cecda *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _cecda .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_cgca *PdfFieldButton )IsRadio ()bool {return _cgca .GetType ()==ButtonTypeRadio };

// SetCenterWindow sets the value of the centerWindow flag.
func (_cgabf *ViewerPreferences )SetCenterWindow (centerWindow bool ){_cgabf ._dgeda =&centerWindow };type fontCommon struct{_daef string ;_decd string ;_abed string ;_eadad _fbg .PdfObject ;_ceadf *_ed .CMap ;_bgbb *PdfFontDescriptor ;_eabe int64 ;};func (_dage *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dage .fontCommon };


// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_dbbf *PdfField )SetContext (ctx PdfModel ){_dbbf ._becea =ctx };const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// Add appends a top level outline item to the outline.
func (_bfcc *Outline )Add (item *OutlineItem ){_bfcc .Entries =append (_bfcc .Entries ,item )};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_cbagg *PdfPageResources )HasPatternByName (keyName _fbg .PdfObjectName )bool {_ ,_fbgea :=_cbagg .GetPatternByName (keyName );return _fbgea ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_afee *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _feedgb []*PdfField ;if _afee .AcroForm !=nil {_feedgb =_afee .AcroForm .AllFields ();};_ccadf :=make (map[*PdfField ]struct{},len (_feedgb ));for _ ,_gbdb :=range _feedgb {_ccadf [_gbdb ]=struct{}{};
};for _ ,_ffeg :=range _afee .PageList {_ecgb ,_fefb :=_ffeg .GetAnnotations ();if _fefb !=nil {return false ,_fefb ;};for _ ,_effgc :=range _ecgb {_beeef ,_bbfgg :=_effgc .GetContext ().(*PdfAnnotationWidget );if !_bbfgg {continue ;};_eega :=_beeef .Field ();
if _eega ==nil {return true ,nil ;};if _ ,_babad :=_ccadf [_eega ];!_babad {return true ,nil ;};};};return false ,nil ;};func (_efcg *PdfWriter )writeString (_gebbb string ){if _efcg ._cefa !=nil {return ;};_acbaed ,_dade :=_efcg ._cedb .WriteString (_gebbb );
_efcg ._fbdga +=int64 (_acbaed );_efcg ._cefa =_dade ;};func _bdgd (_fbdf *_fbg .PdfObjectDictionary ,_afgd *fontCommon )(*pdfCIDFontType2 ,error ){if _afgd ._decd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_afgd );
return nil ,_fbg .ErrRangeError ;};_baed :=_cggaa (_afgd );_gdabe ,_ccegg :=_fbg .GetDict (_fbdf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ccegg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_afgd );
return nil ,ErrRequiredAttributeMissing ;};_baed .CIDSystemInfo =_gdabe ;_baed .DW =_fbdf .Get ("\u0044\u0057");_baed .W =_fbdf .Get ("\u0057");_baed .DW2 =_fbdf .Get ("\u0044\u0057\u0032");_baed .W2 =_fbdf .Get ("\u0057\u0032");_baed .CIDToGIDMap =_fbdf .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_baed ._afaed =1000.0;if _eccea ,_cdcb :=_fbg .GetNumberAsFloat (_baed .DW );_cdcb ==nil {_baed ._afaed =_eccea ;};_beef ,_gfda :=_ddcf (_baed .W );if _gfda !=nil {return nil ,_gfda ;};if _beef ==nil {_beef =map[_cf .CharCode ]float64 {};};_baed ._ecgd =_beef ;
return _baed ,nil ;};

// SetAnnotations sets the annotations list.
func (_agabd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_agabd ._fefa =annotations };func _cbfbe (_gade []byte )bool {if len (_gade )< 4{return true ;};for _caca :=range _gade [:4]{_bbecg :=rune (_caca );if !_fa .Is (_fa .ASCII_Hex_Digit ,_bbecg )&&!_fa .IsSpace (_bbecg ){return true ;
};};return false ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_dbac *PdfOutputIntent )GetContainingPdfObject ()_fbg .PdfObject {return _dbac ._adeg };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ecee *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetNumComponents returns the number of color components (3 for Lab).
func (_caec *PdfColorLab )GetNumComponents ()int {return 3};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_aead *PdfPageResources )SetXObjectByName (keyName _fbg .PdfObjectName ,stream *_fbg .PdfObjectStream )error {if _aead .XObject ==nil {_aead .XObject =_fbg .MakeDict ();};_ddecae :=_fbg .TraceToDirectObject (_aead .XObject );_fbgff ,_cffdg :=_ddecae .(*_fbg .PdfObjectDictionary );
if !_cffdg {_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_aead .XObject ,_ddecae );return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fbgff .Set (keyName ,stream );return nil ;};func (_ggdgc *PdfWriter )updateObjectNumbers (){_bbgfa :=_ggdgc .ObjNumOffset ;_adcfe :=0;for _ ,_abfee :=range _ggdgc ._ddeeb {_gfeff :=int64 (_adcfe +1+_bbgfa );_cbef :=true ;if _ggdgc ._aceab {if _dcbdd ,_dfedf :=_ggdgc ._ccafa [_abfee ];
_dfedf {_gfeff =_dcbdd ;_cbef =false ;};};switch _abgf :=_abfee .(type ){case *_fbg .PdfIndirectObject :_abgf .ObjectNumber =_gfeff ;_abgf .GenerationNumber =0;case *_fbg .PdfObjectStream :_abgf .ObjectNumber =_gfeff ;_abgf .GenerationNumber =0;case *_fbg .PdfObjectStreams :_abgf .ObjectNumber =_gfeff ;
_abgf .GenerationNumber =0;case *_fbg .PdfObjectReference :_abgf .ObjectNumber =_gfeff ;_abgf .GenerationNumber =0;case *_fbg .PdfObjectDictionary ,*_fbg .PdfObjectString :default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_abgf );
continue ;};if _cbef {_adcfe ++;};};_effcf :=func (_ddeffc _fbg .PdfObject )int64 {switch _ebac :=_ddeffc .(type ){case *_fbg .PdfIndirectObject :return _ebac .ObjectNumber ;case *_fbg .PdfObjectStream :return _ebac .ObjectNumber ;case *_fbg .PdfObjectStreams :return _ebac .ObjectNumber ;
case *_fbg .PdfObjectReference :return _ebac .ObjectNumber ;};return 0;};_db .SliceStable (_ggdgc ._ddeeb ,func (_ccedd ,_fgface int )bool {return _effcf (_ggdgc ._ddeeb [_ccedd ])< _effcf (_ggdgc ._ddeeb [_fgface ])});};func _daebd (_agage *PdfField )[]*PdfField {_dagdg :=[]*PdfField {_agage };
for _ ,_gaeff :=range _agage .Kids {_dagdg =append (_dagdg ,_daebd (_gaeff )...);};return _dagdg ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fbg .PdfObjectInteger ;BitsPerComponent *_fbg .PdfObjectInteger ;BitsPerFlag *_fbg .PdfObjectInteger ;Decode *_fbg .PdfObjectArray ;Function []PdfFunction ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_edaacd *PdfPageResources )HasExtGState (keyName _fbg .PdfObjectName )bool {_ ,_gfaede :=_edaacd .GetFontByName (keyName );return _gfaede ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_afgcc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_adc .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_adc .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_adc .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_adc .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bcgc ,_agff :=_ced .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acag ,img ._beggbb );if _agff !=nil {return Image {},_agff ;};_dfdc ,_agff :=_ced .NRGBAConverter .Convert (_bcgc );
if _agff !=nil {return Image {},_agff ;};return _cgdba (_dfdc .Base ()),nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bdceb *PdfOutlineTreeNode )GetContainingPdfObject ()_fbg .PdfObject {return _bdceb .GetContext ().GetContainingPdfObject ();};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_acefa :=&PdfShadingPatternType3 {};_acefa .Matrix =_fbg .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_acefa .PdfPattern =&PdfPattern {};_acefa .PdfPattern .PatternType =int64 (*_fbg .MakeInteger (2));
_acefa .PdfPattern ._acfag =_acefa ;_acefa .PdfPattern ._eadbd =_fbg .MakeIndirectObject (_fbg .MakeDict ());return _acefa ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_eaae *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gddag ,_fgbg :=color .(*PdfColorPattern );if !_fgbg {_adc .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gddag .Color ==nil {return color ,nil ;};if _eaae .UnderlyingCS ==nil {return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _eaae .UnderlyingCS .ColorToRGB (_gddag .Color );
};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bcc :=NewPdfAction ();_bf :=&PdfActionSound {};_bf .PdfAction =_bcc ;_bcc .SetContext (_bf );return _bf ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fgdce *PdfOutline )ToPdfObject ()_fbg .PdfObject {_cgdgb :=_fgdce ._ggde ;_ffagea :=_cgdgb .PdfObject .(*_fbg .PdfObjectDictionary );_ffagea .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fgdce .First !=nil {_ffagea .Set ("\u0046\u0069\u0072s\u0074",_fgdce .First .ToPdfObject ());
};if _fgdce .Last !=nil {_ffagea .Set ("\u004c\u0061\u0073\u0074",_fgdce .Last .GetContext ().GetContainingPdfObject ());};if _fgdce .Parent !=nil {_ffagea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgdce .Parent .GetContext ().GetContainingPdfObject ());
};if _fgdce .Count !=nil {_ffagea .Set ("\u0043\u006f\u0075n\u0074",_fbg .MakeInteger (*_fgdce .Count ));};return _cgdgb ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ddcad *PdfReader )Inspect ()(map[string ]int ,error ){return _ddcad ._eedad .Inspect ()};

// String returns a string that describes `font`.
func (_debdg *PdfFont )String ()string {_afbad :="";if _debdg ._fbff .Encoder ()!=nil {_afbad =_debdg ._fbff .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_debdg ._fbff ,_debdg .baseFields ().coreString (),_afbad );
};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ddbea *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddbea .AlternateSpace ==nil {return nil ,_fd .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ddbea .AlternateSpace .ColorToRGB (color );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gffee *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcaeb ,_abebf :=_fbg .GetNumbersAsFloat (objects );
if _abebf !=nil {return nil ,_abebf ;};return _gffee .ColorFromFloats (_bcaeb );};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fbg .PdfObject ;IC _fbg .PdfObject ;BE _fbg .PdfObject ;RD _fbg .PdfObject ;};

// BaseFont returns the font's "BaseFont" field.
func (_afcb *PdfFont )BaseFont ()string {return _afcb .baseFields ()._daef };

// GetPdfVersion gets the version of the PDF used within this document.
func (_becdc *PdfWriter )GetPdfVersion ()string {return _becdc .getPdfVersion ()};func (_gcbc fontCommon )isCIDFont ()bool {if _gcbc ._decd ==""{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcbc );
};_bacf :=false ;switch _gcbc ._decd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bacf =true ;};_adc .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bacf ,_gcbc );
return _bacf ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_aacgfc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fbg .GetNumberAsFloat (_aacgfc .Ascent );};func (_bddd *PdfField )inherit (_fddb func (*PdfField )bool )(bool ,error ){_ccbb :=map[*PdfField ]bool {};_edeef :=false ;_addg :=_bddd ;
for _addg !=nil {if _ ,_ebfd :=_ccbb [_addg ];_ebfd {return false ,_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cbba :=_fddb (_addg );if _cbba {_edeef =true ;break ;};_ccbb [_addg ]=true ;
_addg =_addg .Parent ;};return _edeef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eed *PdfActionMovie )ToPdfObject ()_fbg .PdfObject {_eed .PdfAction .ToPdfObject ();_ge :=_eed ._gc ;_fga :=_ge .PdfObject .(*_fbg .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeMovie )));_fga .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eed .Annotation );
_fga .SetIfNotNil ("\u0054",_eed .T );_fga .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eed .Operation );return _ge ;};func (_debbc *PdfWriter )mapObjectStreams (_cegdg bool )(map[_fbg .PdfObject ]bool ,bool ){_gdaca :=make (map[_fbg .PdfObject ]bool );
for _ ,_dbdea :=range _debbc ._ddeeb {if _eabbg ,_ddebec :=_dbdea .(*_fbg .PdfObjectStreams );_ddebec {_cegdg =true ;for _ ,_gadcb :=range _eabbg .Elements (){_gdaca [_gadcb ]=true ;if _fcecf ,_gaaac :=_gadcb .(*_fbg .PdfIndirectObject );_gaaac {_gdaca [_fcecf .PdfObject ]=true ;
};};};};return _gdaca ,_cegdg ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_ggdaa *PdfColorspaceDeviceN )ToPdfObject ()_fbg .PdfObject {_bfdf :=_fbg .MakeArray (_fbg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bfdf .Append (_ggdaa .ColorantNames );_bfdf .Append (_ggdaa .AlternateSpace .ToPdfObject ());_bfdf .Append (_ggdaa .TintTransform .ToPdfObject ());
if _ggdaa .Attributes !=nil {_bfdf .Append (_ggdaa .Attributes .ToPdfObject ());};if _ggdaa ._cgdf !=nil {_ggdaa ._cgdf .PdfObject =_bfdf ;return _ggdaa ._cgdf ;};return _bfdf ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ggdca *PdfAcroForm )GetContainingPdfObject ()_fbg .PdfObject {return _ggdca ._bdef };func (_afe *PdfReader )newPdfAnnotationMovieFromDict (_fffa *_fbg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_agdd :=PdfAnnotationMovie {};_agdd .T =_fffa .Get ("\u0054");
_agdd .Movie =_fffa .Get ("\u004d\u006f\u0076i\u0065");_agdd .A =_fffa .Get ("\u0041");return &_agdd ,nil ;};func (_ceac *PdfReader )newPdfAnnotationCaretFromDict (_eeeb *_fbg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bbc :=PdfAnnotationCaret {};
_gea ,_gffd :=_ceac .newPdfAnnotationMarkupFromDict (_eeeb );if _gffd !=nil {return nil ,_gffd ;};_bbc .PdfAnnotationMarkup =_gea ;_bbc .RD =_eeeb .Get ("\u0052\u0044");_bbc .Sy =_eeeb .Get ("\u0053\u0079");return &_bbc ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_egfce *PdfPageResources )GetFontByName (keyName _fbg .PdfObjectName )(_fbg .PdfObject ,bool ){if _egfce .Font ==nil {return nil ,false ;};_ebeecd ,_dddabd :=_fbg .TraceToDirectObject (_egfce .Font ).(*_fbg .PdfObjectDictionary );if !_dddabd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fbg .TraceToDirectObject (_egfce .Font ));
return nil ,false ;};if _badbd :=_ebeecd .Get (keyName );_badbd !=nil {return _badbd ,true ;};return nil ,false ;};func (_gcbb *PdfReader )newPdfAnnotationWatermarkFromDict (_aedee *_fbg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bcgd :=PdfAnnotationWatermark {};
_bcgd .FixedPrint =_aedee .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bcgd ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_gfddb *modelManager )GetModelFromPrimitive (primitive _fbg .PdfObject )PdfModel {_gfddb ._bgdee .RLock ();defer _gfddb ._bgdee .RUnlock ();model ,_cdffa :=_gfddb ._ebada [primitive ];if !_cdffa {return nil ;};return model ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cebc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_aefbg :=_cebc .fill (provider ,appGen );if _aefbg !=nil {return _aefbg ;};if _ ,_gfgbb :=provider .(FieldImageProvider );_gfgbb {_aefbg =_cebc .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _aefbg ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_beede *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fbg .PdfObject {_abdg :=_fbg .MakeDict ();if _beede .Subtype !=nil {_abdg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_beede .Subtype );};_abdg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_beede .Colorants );
_abdg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_beede .Process );_abdg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_beede .MixingHints );if _beede ._fdce !=nil {_beede ._fdce .PdfObject =_abdg ;return _beede ._fdce ;
};return _abdg ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_feba *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_feba .HiVal )};};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_cggd :=NewPdfOutline ();_cggd ._bfbgb =&_cggd ;return _cggd };

// GetCharMetrics returns the char metrics for character code `code`.
func (_agfcg pdfCIDFontType0 )GetCharMetrics (code _cf .CharCode )(_dg .CharMetrics ,bool ){_abbb :=_agfcg ._egaee ;if _aaaagd ,_dgef :=_agfcg ._aaab [code ];_dgef {_abbb =_aaaagd ;};return _dg .CharMetrics {Wx :_abbb },true ;};

// ToPdfObject implements interface PdfModel.
func (_abgadg *EmbeddedFile )ToPdfObject ()_fbg .PdfObject {_cfggd :=_fbg .NewFlateEncoder ();_ebcf ,_fcab :=_fbg .MakeStream (_abgadg .Content ,_cfggd );if _fcab !=nil {_adc .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fcab );
return nil ;};_cfef :=_ebcf .PdfObjectDictionary ;_cfef .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_cfef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_dfgf :=_fbg .MakeDict ();_dfgf .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_fbg .MakeString (_abgadg .Hash [:]));_dfgf .Set ("\u0053\u0069\u007a\u0065",_fbg .MakeInteger (int64 (len (_abgadg .Content ))));_fgcff :=_abgadg .CreationTime ;if _fgcff .IsZero (){_fgcff =_dcc .Now ();
};_daab :=_abgadg .ModTime ;if _daab .IsZero (){_daab =_fgcff ;};_ceecf ,_fcab :=NewPdfDateFromTime (_fgcff );if _fcab !=nil {_adc .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fcab );
return nil ;};_fbbb ,_fcab :=NewPdfDateFromTime (_daab );if _fcab !=nil {_adc .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fcab );
return nil ;};_dfgf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ceecf .ToPdfObject ());_dfgf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fbbb .ToPdfObject ());_cfef .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_dfgf );
_gcfdf :=_fbg .MakeDict ();_gcfdf .Set (*_fbg .MakeName ("\u0046"),_ebcf );return _gcfdf ;};func _fddcd (_eabfb *_fbg .PdfIndirectObject )(*PdfOutline ,error ){_aaadb ,_cfdge :=_eabfb .PdfObject .(*_fbg .PdfObjectDictionary );if !_cfdge {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_deea :=NewPdfOutline ();if _fdgfc :=_aaadb .Get ("\u0054\u0079\u0070\u0065");_fdgfc !=nil {_cadfa ,_fedbf :=_fdgfc .(*_fbg .PdfObjectName );if _fedbf {if *_cadfa !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_cadfa );
};};};if _effgb :=_aaadb .Get ("\u0043\u006f\u0075n\u0074");_effgb !=nil {_fgbec ,_cedefa :=_fbg .GetNumberAsInt64 (_effgb );if _cedefa !=nil {return nil ,_cedefa ;};_deea .Count =&_fgbec ;};return _deea ,nil ;};func (_beccd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _beccd ._bgbb };


// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fcfff *PdfField )FullName ()(string ,error ){var _adadb _fb .Buffer ;_ccac :=[]string {};if _fcfff .T !=nil {_ccac =append (_ccac ,_fcfff .T .Decoded ());};_gfbg :=map[*PdfField ]bool {};_gfbg [_fcfff ]=true ;_baee :=_fcfff .Parent ;for _baee !=nil {if _ ,_abdd :=_gfbg [_baee ];
_abdd {return _adadb .String (),_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _baee .T ==nil {return _adadb .String (),_fd .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ccac =append (_ccac ,_baee .T .Decoded ());_gfbg [_baee ]=true ;_baee =_baee .Parent ;};for _aaaed :=len (_ccac )-1;_aaaed >=0;_aaaed --{_adadb .WriteString (_ccac [_aaaed ]);if _aaaed > 0{_adadb .WriteString ("\u002e");};};return _adadb .String (),nil ;
};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_fbg .PdfObjectArray ;ExtGState _fbg .PdfObject ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_egbca *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_gaadg :=[]*EmbeddedFile {};_becbb ,_aabeg :=_egbca .GetNameDictionary ();if _aabeg !=nil {return nil ,_aabeg ;};if _becbb ==nil {return _gaadg ,nil ;};_dfeac :=_gbgcf (_becbb );if _dfeac .EmbeddedFiles ==nil {return nil ,nil ;
};_bdebf :=_dfeac .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_affab ,_ebdde :=_bdebf .(*_fbg .PdfObjectArray );if !_ebdde {return nil ,_fd .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _ccebf :=1;_ccebf < len (_affab .Elements ());_ccebf +=2{if _ccebf %2!=0{_caaeb :=_affab .Get (_ccebf );_gcccd ,_daeee :=NewPdfFilespecFromObj (_caaeb );if _daeee !=nil {return nil ,_daeee ;};_ddbcg ,_daeee :=NewEmbeddedFileFromObject (_gcccd .EF );
if _daeee !=nil {return nil ,_daeee ;};_aacf ,_bdcebb :=_gcccd .F .(*_fbg .PdfObjectString );if _bdcebb {_ddbcg .Name =_aacf .Str ();};_ddbcg .Description =string (_gcccd .Desc .Write ());_ddbcg .Relationship =RelationshipUnspecified ;if _gcccd .AFRelationship !=nil {switch string (_gcccd .AFRelationship .Write ()){case "\u0053\u006f\u0075\u0072\u0063\u0065":_ddbcg .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_ddbcg .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_ddbcg .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_ddbcg .Relationship =RelationshipSupplement ;
default:_ddbcg .Relationship =RelationshipUnspecified ;};};_gaadg =append (_gaadg ,_ddbcg );};};return _gaadg ,nil ;};func (_feaa *PdfWriter )writeAcroFormFields ()error {if _feaa ._cdcaa ==nil {return nil ;};_adc .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_cafgf :=_feaa ._cdcaa .ToPdfObject ();_adc .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cafgf );_feaa ._gdgbee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cafgf );_gbabf :=_feaa .addObjects (_cafgf );
if _gbabf !=nil {return _gbabf ;};return nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// IsFitWindow returns the value of the fitWindow flag.
func (_bafcad *ViewerPreferences )IsFitWindow ()bool {if _bafcad ._eggdd ==nil {return false ;};return *_bafcad ._eggdd ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fad :=&PdfAnnotation {};_fad ._ecfe =_fbg .MakeIndirectObject (_fbg .MakeDict ());return _fad ;};

// ToPdfObject implements interface PdfModel.
func (_ecafb *PdfAnnotationWidget )ToPdfObject ()_fbg .PdfObject {_ecafb .PdfAnnotation .ToPdfObject ();_abefg :=_ecafb ._ecfe ;_bgdd :=_abefg .PdfObject .(*_fbg .PdfObjectDictionary );if _ecafb ._ddg {return _abefg ;};_ecafb ._ddg =true ;_bgdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_bgdd .SetIfNotNil ("\u0048",_ecafb .H );_bgdd .SetIfNotNil ("\u004d\u004b",_ecafb .MK );_bgdd .SetIfNotNil ("\u0041",_ecafb .A );_bgdd .SetIfNotNil ("\u0041\u0041",_ecafb .AA );_bgdd .SetIfNotNil ("\u0042\u0053",_ecafb .BS );_cee :=_ecafb .Parent ;if _ecafb ._abg !=nil {if _ecafb ._abg ._gcad ==_ecafb ._ecfe {_ecafb ._abg .ToPdfObject ();
};_cee =_ecafb ._abg .GetContainingPdfObject ();};if _cee !=_abefg {_bgdd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cee );};_ecafb ._ddg =false ;return _abefg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gafgc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aabc :=[]float64 {0.0};if _gafgc .C0 !=nil {_aabc =_gafgc .C0 ;};_degfg :=[]float64 {1.0};if _gafgc .C1 !=nil {_degfg =_gafgc .C1 ;};var _agddb []float64 ;for _bdabd :=0;_bdabd < len (_aabc );_bdabd ++{_daafe :=_aabc [_bdabd ]+_ab .Pow (x [0],_gafgc .N )*(_degfg [_bdabd ]-_aabc [_bdabd ]);
_agddb =append (_agddb ,_daafe );};return _agddb ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_aaea :=PdfColorDeviceGray (grayVal );return &_aaea ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fbg .PdfObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ggfeb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _adee []float64 ;for _gecc :=0;_gecc < _ggfeb .GetNumComponents ();_gecc ++{_adee =append (_adee ,0.0,1.0);};return _adee ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dbaa *_fbg .PdfIndirectObject ;};func (_gbaa *PdfReader )newPdfAnnotationSquigglyFromDict (_dea *_fbg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_fbbe :=PdfAnnotationSquiggly {};
_acgd ,_cceg :=_gbaa .newPdfAnnotationMarkupFromDict (_dea );if _cceg !=nil {return nil ,_cceg ;};_fbbe .PdfAnnotationMarkup =_acgd ;_fbbe .QuadPoints =_dea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbbe ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecgc pdfFontType3 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_aegg :=_ecgc .Encoder ();if _aegg ==nil {_adc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ecgc );
return _dg .CharMetrics {},false ;};_cagd ,_ddaef :=_aegg .RuneToCharcode (r );if !_ddaef {if r !=' '{_adc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ecgc );
};return _dg .CharMetrics {},false ;};_acdgd ,_fafd :=_ecgc .GetCharMetrics (_cagd );return _acdgd ,_fafd ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_fgebf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_fgebf .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_efgdb :=&PdfOutline {_ggde :_fbg .MakeIndirectObject (_fbg .MakeDict ())};_efgdb ._bfbgb =_efgdb ;return _efgdb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_aebg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fgda *OutlineItem )Insert (index uint ,item *OutlineItem ){_bbagc :=uint (len (_fgda .Entries ));if index > _bbagc {index =_bbagc ;};_fgda .Entries =append (_fgda .Entries [:index ],append ([]*OutlineItem {item },_fgda .Entries [index :]...)...);
};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_eddf :=&PdfColorspaceSpecialSeparation {};return _eddf ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_afff :=&PdfShadingPatternType2 {};_afff .Matrix =_fbg .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_afff .PdfPattern =&PdfPattern {};_afff .PdfPattern .PatternType =int64 (*_fbg .MakeInteger (2));
_afff .PdfPattern ._acfag =_afff ;_afff .PdfPattern ._eadbd =_fbg .MakeIndirectObject (_fbg .MakeDict ());return _afff ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cccb *_fbg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbaf *PdfAnnotationProjection )ToPdfObject ()_fbg .PdfObject {_cbaf .PdfAnnotation .ToPdfObject ();_bgbg :=_cbaf ._ecfe ;_gdca :=_bgbg .PdfObject .(*_fbg .PdfObjectDictionary );_cbaf .PdfAnnotationMarkup .appendToPdfDictionary (_gdca );return _bgbg ;
};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_ffcb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fd .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_ffcb .S =subtype ;return nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fgccf *PdfPattern )IsShading ()bool {return _fgccf .PatternType ==2};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bfbgb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_ggbe *PdfAnnotationStamp )ToPdfObject ()_fbg .PdfObject {_ggbe .PdfAnnotation .ToPdfObject ();_ccage :=_ggbe ._ecfe ;_fea :=_ccage .PdfObject .(*_fbg .PdfObjectDictionary );_ggbe .PdfAnnotationMarkup .appendToPdfDictionary (_fea );_fea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u0074\u0061m\u0070"));
_fea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggbe .Name );return _ccage ;};

// ToPdfObject implements interface PdfModel.
func (_dddad *PdfSignatureReference )ToPdfObject ()_fbg .PdfObject {_fcbbg :=_fbg .MakeDict ();_fcbbg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dddad .Type );_fcbbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_dddad .TransformMethod );
_fcbbg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_dddad .TransformParams );_fcbbg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_dddad .Data );_fcbbg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_dddad .DigestMethod );
return _fcbbg ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_abcgd *_fbg .PdfIndirectObject ;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_dgebf *PdfPageResources )HasShadingByName (keyName _fbg .PdfObjectName )bool {_ ,_bfadc :=_dgebf .GetShadingByName (keyName );return _bfadc ;};func (_edegdg *PdfAcroForm )fill (_cbcc FieldValueProvider ,_aedcd FieldAppearanceGenerator )error {if _edegdg ==nil {return nil ;
};_dbaff ,_efbgaf :=_cbcc .FieldValues ();if _efbgaf !=nil {return _efbgaf ;};for _ ,_bbega :=range _edegdg .AllFields (){_eagag :=_bbega .PartialName ();_debb ,_gbaga :=_dbaff [_eagag ];if !_gbaga {if _fdedg ,_caaac :=_bbega .FullName ();_caaac ==nil {_debb ,_gbaga =_dbaff [_fdedg ];
};};if !_gbaga {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_eagag );
continue ;};if _eaba :=_fgegd (_bbega ,_debb );_eaba !=nil {return _eaba ;};if _aedcd ==nil {continue ;};for _ ,_gaeeg :=range _bbega .Annotations {_edgf ,_dfcb :=_aedcd .GenerateAppearanceDict (_edegdg ,_bbega ,_gaeeg );if _dfcb !=nil {return _dfcb ;};
_gaeeg .AP =_edgf ;_gaeeg .ToPdfObject ();};};return nil ;};

// PrintArea returns the value of the printArea.
func (_cfagd *ViewerPreferences )PrintArea ()PageBoundary {return _cfagd ._aaaca };func (_bce *DSS )add (_dcgc *[]*_fbg .PdfObjectStream ,_eggg map[string ]*_fbg .PdfObjectStream ,_defce [][]byte )([]*_fbg .PdfObjectStream ,error ){_cbgb :=make ([]*_fbg .PdfObjectStream ,0,len (_defce ));
for _ ,_cffc :=range _defce {_ceaeb ,_gacae :=_afgca (_cffc );if _gacae !=nil {return nil ,_gacae ;};_cdgd ,_bccdc :=_eggg [string (_ceaeb )];if !_bccdc {_cdgd ,_gacae =_fbg .MakeStream (_cffc ,_fbg .NewRawEncoder ());if _gacae !=nil {return nil ,_gacae ;
};_eggg [string (_ceaeb )]=_cdgd ;*_dcgc =append (*_dcgc ,_cdgd );};_cbgb =append (_cbgb ,_cdgd );};return _cbgb ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fdcf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fbg .PdfObjectStream ;Data []byte ;_afdbc *_fbg .PdfIndirectObject ;_fdfgb *_fbg .PdfObjectStream ;};func (_beed *PdfReader )newPdfAnnotationHighlightFromDict (_egcf *_fbg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_adg :=PdfAnnotationHighlight {};
_ecb ,_aaced :=_beed .newPdfAnnotationMarkupFromDict (_egcf );if _aaced !=nil {return nil ,_aaced ;};_adg .PdfAnnotationMarkup =_ecb ;_adg .QuadPoints =_egcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adg ,nil ;};func _eaca (_fbfd *_fbg .PdfObjectDictionary )(*PdfFieldText ,error ){_cegbb :=&PdfFieldText {};
_cegbb .DA ,_ =_fbg .GetString (_fbfd .Get ("\u0044\u0041"));_cegbb .Q ,_ =_fbg .GetInt (_fbfd .Get ("\u0051"));_cegbb .DS ,_ =_fbg .GetString (_fbfd .Get ("\u0044\u0053"));_cegbb .RV =_fbfd .Get ("\u0052\u0056");_cegbb .MaxLen ,_ =_fbg .GetInt (_fbfd .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _cegbb ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fccae *Image )ToJBIG2Image ()(*_fbg .JBIG2Image ,error ){_gfacc ,_gbaff :=_fccae .ToGoImage ();if _gbaff !=nil {return nil ,_gbaff ;};return _fbg .GoImageToJBIG2 (_gfacc ,_fbg .JB2ImageAutoThreshold );};

// IsCID returns true if the underlying font is CID.
func (_feed *PdfFont )IsCID ()bool {return _feed .baseFields ().isCIDFont ()};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fbg .PdfObject ;LE _fbg .PdfObject ;BS _fbg .PdfObject ;IC _fbg .PdfObject ;BE _fbg .PdfObject ;IT _fbg .PdfObject ;Measure _fbg .PdfObject ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_abffee *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_abffee ._cdaba =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_eaa :=NewPdfAction ();_gcb :=&PdfActionImportData {};_gcb .PdfAction =_eaa ;_eaa .SetContext (_gcb );return _gcb ;};

// ToPdfObject implements interface PdfModel.
func (_ccfe *PdfAnnotation3D )ToPdfObject ()_fbg .PdfObject {_ccfe .PdfAnnotation .ToPdfObject ();_ecead :=_ccfe ._ecfe ;_acb :=_ecead .PdfObject .(*_fbg .PdfObjectDictionary );_acb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0033\u0044"));
_acb .SetIfNotNil ("\u0033\u0044\u0044",_ccfe .T3DD );_acb .SetIfNotNil ("\u0033\u0044\u0056",_ccfe .T3DV );_acb .SetIfNotNil ("\u0033\u0044\u0041",_ccfe .T3DA );_acb .SetIfNotNil ("\u0033\u0044\u0049",_ccfe .T3DI );_acb .SetIfNotNil ("\u0033\u0044\u0042",_ccfe .T3DB );
return _ecead ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bbgdc :=PdfPage {};_bbgdc ._afab =_fbg .MakeDict ();_bbgdc .Resources =NewPdfPageResources ();_cgafg :=_fbg .PdfIndirectObject {};_cgafg .PdfObject =_bbgdc ._afab ;_bbgdc ._ecedg =&_cgafg ;_bbgdc ._aaaf =*_bbgdc ._afab ;return &_bbgdc ;
};func (_bfbg *pdfFontType0 )bytesToCharcodes (_fcgde []byte )([]_cf .CharCode ,bool ){if _bfbg ._fdgee ==nil {return nil ,false ;};_dbcb ,_ceaea :=_bfbg ._fdgee .BytesToCharcodes (_fcgde );if !_ceaea {return nil ,false ;};_becga :=make ([]_cf .CharCode ,len (_dbcb ));
for _acae ,_feaff :=range _dbcb {_becga [_acae ]=_cf .CharCode (_feaff );};return _becga ,true ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_fbde *PdfAnnotation )String ()string {_aag :="";_bfe ,_egca :=_fbde .ToPdfObject ().(*_fbg .PdfIndirectObject );if _egca {_aag =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fbde ._cdc ,_bfe .PdfObject .String ());
};return _aag ;};func NewViewerPreferencesFromPdfObject (obj _fbg .PdfObject )(*ViewerPreferences ,error ){_ffcda :=_fbg .ResolveReference (obj );_fafa ,_fegcb :=_fbg .GetDict (_ffcda );if !_fegcb {return nil ,_e .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bedff :=NewViewerPreferences ();if _gffed :=_fafa .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_gffed !=nil {if _dedafd ,_cbgfe :=_fbg .GetBool (_gffed );_cbgfe {_bedff ._fggca =(*bool )(_dedafd );};};if _abagb :=_fafa .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_abagb !=nil {if _cdfge ,_egegaf :=_fbg .GetBool (_abagb );_egegaf {_bedff ._acefc =(*bool )(_cdfge );};};if _dcagb :=_fafa .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_dcagb !=nil {if _fbdd ,_cbdeb :=_fbg .GetBool (_dcagb );
_cbdeb {_bedff ._cffcc =(*bool )(_fbdd );};};if _febbd :=_fafa .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_febbd !=nil {if _faged ,_afeeee :=_fbg .GetBool (_febbd );_afeeee {_bedff ._eggdd =(*bool )(_faged );};};if _dbgb :=_fafa .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_dbgb !=nil {if _aeaf ,_dafed :=_fbg .GetBool (_dbgb );_dafed {_bedff ._dgeda =(*bool )(_aeaf );};};if _acfef :=_fafa .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_acfef !=nil {if _dcfea ,_cbafb :=_fbg .GetBool (_acfef );
_cbafb {_bedff ._dbfbb =(*bool )(_dcfea );};};if _bdbeae :=_fafa .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_bdbeae !=nil {if _cfgebf ,_cegbea :=_fbg .GetName (_bdbeae );_cegbea {_bedff ._egega =NonFullScreenPageMode (*_cfgebf );
};};if _fcccb :=_fafa .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_fcccb !=nil {if _cagdf ,_gffdd :=_fbg .GetName (_fcccb );_gffdd {_bedff ._defgf =Direction (*_cagdf );};};if _aeedd :=_fafa .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_aeedd !=nil {if _fcdbc ,_eefbg :=_fbg .GetName (_aeedd );_eefbg {_bedff ._cgefba =PageBoundary (*_fcdbc );};};if _fdacec :=_fafa .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_fdacec !=nil {if _ceabf ,_abfd :=_fbg .GetName (_fdacec );_abfd {_bedff ._fadfe =PageBoundary (*_ceabf );
};};if _aafe :=_fafa .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_aafe !=nil {if _ffbgf ,_aeffd :=_fbg .GetName (_aafe );_aeffd {_bedff ._aaaca =PageBoundary (*_ffbgf );};};if _gbefg :=_fafa .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_gbefg !=nil {if _defgff ,_aggege :=_fbg .GetName (_gbefg );_aggege {_bedff ._abgbc =PageBoundary (*_defgff );};};if _dbcef :=_fafa .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_dbcef !=nil {if _efefb ,_cggac :=_fbg .GetName (_dbcef );
_cggac {_bedff ._cfbcg =PrintScaling (*_efefb );};};if _dgbde :=_fafa .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_dgbde !=nil {if _eadd ,_cgdbgd :=_fbg .GetName (_dgbde );_cgdbgd {_bedff ._dffg =Duplex (*_eadd );};};if _adeec :=_fafa .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_adeec !=nil {if _ddbac ,_ggdab :=_fbg .GetBool (_adeec );_ggdab {_bedff ._dddcag =(*bool )(_ddbac );};};if _cdabc :=_fafa .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_cdabc !=nil {if _badfa ,_ccgd :=_fbg .GetArray (_cdabc );
_ccgd {_bedff ._dedfe =make ([]int ,_badfa .Len ());for _edbffa :=range _bedff ._dedfe {if _fbdb :=_badfa .Get (_edbffa );_fbdb !=nil {if _eccfd ,_fffd :=_fbg .GetInt (_fbdb );_fffd {_bedff ._dedfe [_edbffa ]=int (*_eccfd );};};};};};if _fedff :=_fafa .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_fedff !=nil {if _ceged ,_gdacfb :=_fbg .GetInt (_fedff );_gdacfb {_bedff ._defcb =int (*_ceged );};};return _bedff ,nil ;};func (_dggd *pdfFontSimple )updateStandard14Font (){_ggggc ,_fgec :=_dggd .Encoder ().(_cf .SimpleEncoder );if !_fgec {_adc .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dggd .Encoder (),_dggd );
return ;};_bfaab :=_ggggc .Charcodes ();_dggd ._gaeda =make (map[_cf .CharCode ]float64 ,len (_bfaab ));for _ ,_bdfcd :=range _bfaab {_ggabe ,_ :=_ggggc .CharcodeToRune (_bdfcd );_feeg ,_ :=_dggd ._ggcaa .Read (_ggabe );_dggd ._gaeda [_bdfcd ]=_feeg .Wx ;
};};func _aaeb (_gddad _fbg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gfdd :=NewPdfColorspaceSpecialSeparation ();if _ffdfed ,_cdeae :=_gddad .(*_fbg .PdfIndirectObject );_cdeae {_gfdd ._gdcf =_ffdfed ;};_gddad =_fbg .TraceToDirectObject (_gddad );
_bbfdf ,_gbgbbb :=_gddad .(*_fbg .PdfObjectArray );if !_gbgbbb {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};
if _bbfdf .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gddad =_bbfdf .Get (0);
_bdd ,_gbgbbb :=_gddad .(*_fbg .PdfObjectName );if !_gbgbbb {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bdd !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gddad =_bbfdf .Get (1);_bdd ,_gbgbbb =_gddad .(*_fbg .PdfObjectName );if !_gbgbbb {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gfdd .ColorantName =_bdd ;_gddad =_bbfdf .Get (2);_bcae ,_fbaed :=NewPdfColorspaceFromPdfObject (_gddad );if _fbaed !=nil {return nil ,_fbaed ;};_gfdd .AlternateSpace =_bcae ;_aebe ,_fbaed :=_aabg (_bbfdf .Get (3));if _fbaed !=nil {return nil ,_fbaed ;
};_gfdd .TintTransform =_aebe ;return _gfdd ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_geged pdfFontType0 )GetCharMetrics (code _cf .CharCode )(_dg .CharMetrics ,bool ){if _geged .DescendantFont ==nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_geged );
return _dg .CharMetrics {},false ;};return _geged .DescendantFont .GetCharMetrics (code );};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ddgfg *_fbg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fdgc *PdfAnnotationUnderline )ToPdfObject ()_fbg .PdfObject {_fdgc .PdfAnnotation .ToPdfObject ();_agde :=_fdgc ._ecfe ;_caa :=_agde .PdfObject .(*_fbg .PdfObjectDictionary );_fdgc .PdfAnnotationMarkup .appendToPdfDictionary (_caa );_caa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_caa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fdgc .QuadPoints );return _agde ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fbg .PdfObjectInteger ;BitsPerComponent *_fbg .PdfObjectInteger ;BitsPerFlag *_fbg .PdfObjectInteger ;Decode *_fbg .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fcgb *PdfFieldText )ToPdfObject ()_fbg .PdfObject {_fcgb .PdfField .ToPdfObject ();_fgbe :=_fcgb ._gcad ;_ggcc :=_fgbe .PdfObject .(*_fbg .PdfObjectDictionary );_ggcc .Set ("\u0046\u0054",_fbg .MakeName ("\u0054\u0078"));if _fcgb .DA !=nil {_ggcc .Set ("\u0044\u0041",_fcgb .DA );
};if _fcgb .Q !=nil {_ggcc .Set ("\u0051",_fcgb .Q );};if _fcgb .DS !=nil {_ggcc .Set ("\u0044\u0053",_fcgb .DS );};if _fcgb .RV !=nil {_ggcc .Set ("\u0052\u0056",_fcgb .RV );};if _fcgb .MaxLen !=nil {_ggcc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fcgb .MaxLen );
};return _fgbe ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bedd *PdfOutlineItem )GetContainingPdfObject ()_fbg .PdfObject {return _bedd ._bebdb };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bgf :=NewPdfAction ();_bb :=&PdfActionGoToE {};_bb .PdfAction =_bgf ;_bgf .SetContext (_bb );return _bb ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_deecb *PdfOutlineTreeNode )GetContext ()PdfModel {if _ceba ,_bedcb :=_deecb ._bfbgb .(*PdfOutline );_bedcb {return _ceba ;};if _eedacc ,_bbfbfd :=_deecb ._bfbgb .(*PdfOutlineItem );_bbfbfd {return _eedacc ;};_adc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_geaac *XObjectImage )SetFilter (encoder _fbg .StreamEncoder )error {_feafe :=_geaac .Stream ;_gddedc ,_cdaf :=_geaac .Filter .DecodeBytes (_feafe );if _cdaf !=nil {return _cdaf ;};_geaac .Filter =encoder ;encoder .UpdateParams (_geaac .getParamsDict ());
_feafe ,_cdaf =encoder .EncodeBytes (_gddedc );if _cdaf !=nil {return _cdaf ;};_geaac .Stream =_feafe ;return nil ;};type pdfSignDictionary struct{*_fbg .PdfObjectDictionary ;_dafgc *SignatureHandler ;_fddbd *PdfSignature ;_cgfgd int64 ;_gccfe int ;_gaebd int ;
_faebe int ;_fgacf int ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_aecc _fbg .ParserMetadata ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ecegc .Lock ();defer _ecegc .Unlock ();_fcfe =title };

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_bcgf *PdfReader )GetCatalogMarkInfo ()(_fbg .PdfObject ,bool ){if _bcgf ._ffcac ==nil {return nil ,false ;};_acedb :=_bcgf ._ffcac .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _acedb ,_acedb !=nil ;};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _fbg .PdfObject )(*StructTreeRoot ,error ){_feada :=_fbg .ResolveReference (obj );_efaeb ,_cfce :=_fbg .GetDict (_feada );if !_cfce {return nil ,_e .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_afdbde :=&StructTreeRoot {};_afdbde ._aeabc =_fbg .MakeIndirectObject (_fbg .MakeDict ());if _abcbed :=_efaeb .Get ("\u004b");_abcbed !=nil {_egeff :=_fbg .ResolveReference (_abcbed );_dbffb :=_fbg .ResolveReferencesDeep (_egeff ,nil );if _dbffb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_dbffb );
};_afdbde .K =[]*KDict {};if _cdfaa ,_fdbef :=_fbg .GetArray (_egeff );_fdbef {for _gefee :=0;_gefee < _cdfaa .Len ();_gefee ++{_gccag :=_cdfaa .Get (_gefee );_afdc ,_ffadc :=NewKDictFromPdfObject (_gccag );if _ffadc !=nil {return nil ,_ffadc ;};_afdbde .K =append (_afdbde .K ,_afdc );
};}else {_fbbfag ,_bbaab :=NewKDictFromPdfObject (_egeff );if _bbaab !=nil {return nil ,_bbaab ;};_afdbde .K =append (_afdbde .K ,_fbbfag );};};if _cacab :=_efaeb .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_cacab !=nil {_afdbde .IDTree =_fabb (_cacab );
};if _eeggdb :=_efaeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");_eeggdb !=nil {_adgeab :=_fbg .ResolveReference (_eeggdb );if _ggcff ,_ddaf :=_fbg .GetDict (_adgeab );_ddaf {_afdbde .ParentTree =_ggcff ;};};if _addce :=_efaeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_addce !=nil {_ ,_efaef :=_fbg .GetInt (_addce );if _efaef {_bfaabf ,_eagb :=_fbg .GetNumberAsInt64 (_addce );if _eagb !=nil {return nil ,_eagb ;};_afdbde .ParentTreeNextKey =_bfaabf ;};};if _ebcdb :=_efaeb .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");
_ebcdb !=nil {switch _fefba :=_ebcdb .(type ){case *_fbg .PdfIndirectObject :if _eacf ,_dbafa :=_fbg .GetDict (_fefba .PdfObject );_dbafa {_afdbde .RoleMap =_eacf ;};case *_fbg .PdfObjectDictionary :_afdbde .RoleMap =_fefba ;case *_fbg .PdfObjectString :_afdbde .RoleMap =_fefba ;
};};if _adae :=_efaeb .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_adae !=nil {if _bebbc ,_ddaec :=_fbg .GetDict (_adae );_ddaec {_afdbde .ClassMap =_bebbc ;};};return _afdbde ,nil ;};func (_acege *PdfWriter )writeObject (_ffgeg int ,_dbdff _fbg .PdfObject ){_adc .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_ffgeg );
if _cfebc ,_ccdag :=_dbdff .(*_fbg .PdfIndirectObject );_ccdag {_acege ._baecgd [_ffgeg ]=crossReference {Type :1,Offset :_acege ._fbdga ,Generation :_cfebc .GenerationNumber };_dgcgb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffgeg );
if _ggebg ,_eeaae :=_cfebc .PdfObject .(*pdfSignDictionary );_eeaae {_ggebg ._cgfgd =_acege ._fbdga +int64 (len (_dgcgb ));};if _cfebc .PdfObject ==nil {_adc .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_cfebc .PdfObject =_fbg .MakeNull ();};_dgcgb +=string (_cfebc .PdfObject .Write ());_dgcgb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_acege .writeString (_dgcgb );return ;};if _gebfa ,_fadef :=_dbdff .(*_fbg .PdfObjectStream );_fadef {_acege ._baecgd [_ffgeg ]=crossReference {Type :1,Offset :_acege ._fbdga ,Generation :_gebfa .GenerationNumber };
_begdg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffgeg );_begdg +=string (_gebfa .PdfObjectDictionary .Write ());_begdg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_acege .writeString (_begdg );if _gebfa .Lazy {_babfa ,_ceda :=_aef .ReadFile (_gebfa .TempFile );
if _ceda !=nil {_adc .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gebfa .TempFile );return ;};_acege .writeBytes (_babfa );
_aef .Remove (_gebfa .TempFile );}else {_acege .writeBytes (_gebfa .Stream );};_acege .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _aedga ,_acca :=_dbdff .(*_fbg .PdfObjectStreams );
_acca {_acege ._baecgd [_ffgeg ]=crossReference {Type :1,Offset :_acege ._fbdga ,Generation :_aedga .GenerationNumber };_adfcb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ffgeg );var _cfgfb []string ;var _acce string ;var _eggdf int64 ;
for _agcga ,_bffgc :=range _aedga .Elements (){_ggagc ,_fabab :=_bffgc .(*_fbg .PdfIndirectObject );if !_fabab {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_ffgeg ,_bffgc );
continue ;};_gdcbg :=string (_ggagc .PdfObject .Write ())+"\u0020";_acce =_acce +_gdcbg ;_cfgfb =append (_cfgfb ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_ggagc .ObjectNumber ,_eggdf ));_acege ._baecgd [int (_ggagc .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_ffgeg ,Index :_agcga };
_eggdf =_eggdf +int64 (len ([]byte (_gdcbg )));};_gadda :=_gdg .Join (_cfgfb ,"\u0020")+"\u0020";_dfacg :=_fbg .NewFlateEncoder ();_cafba :=_dfacg .MakeStreamDict ();_cafba .Set (_fbg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fbg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_faafeb :=int64 (_aedga .Len ());_cafba .Set (_fbg .PdfObjectName ("\u004e"),_fbg .MakeInteger (_faafeb ));_cdacea :=int64 (len (_gadda ));_cafba .Set (_fbg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fbg .MakeInteger (_cdacea ));_abdfe ,_ :=_dfacg .EncodeBytes ([]byte (_gadda +_acce ));
_ebdfe :=int64 (len (_abdfe ));_cafba .Set (_fbg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fbg .MakeInteger (_ebdfe ));_adfcb +=string (_cafba .Write ());_adfcb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_acege .writeString (_adfcb );
_acege .writeBytes (_abdfe );_acege .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_acege .writeBytes (_dbdff .Write ());};

// AddWatermarkText adds a text watermark to the page.
func (_bgege *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _fd .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _fd .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_ec .Black ;};_fdfbd ,_badeb :=_bgege .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _badeb !=nil {return _badeb ;
};_egbdg ,_ ,_badeb :=_aa .Decode (_fb .NewReader (_fdfbd ));if _badeb !=nil {return _badeb ;};_eeaef ,_badeb :=ImageHandling .NewImageFromGoImage (_egbdg );if _badeb !=nil {return _badeb ;};_fgdcg ,_badeb :=NewXObjectImageFromImage (_eeaef ,nil ,_fbg .NewFlateEncoder ());
if _badeb !=nil {return _badeb ;};_fcada :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _bgege .AddWatermarkImage (_fgdcg ,_fcada );};func (_ecgeed *PdfWriter )setDocInfo (_ddcgc _fbg .PdfObject ){if _ecgeed .hasObject (_ecgeed ._abfag ){delete (_ecgeed ._gcadf ,_ecgeed ._abfag );
delete (_ecgeed ._cdgdc ,_ecgeed ._abfag );for _gggedg ,_bcbgef :=range _ecgeed ._ddeeb {if _bcbgef ==_ecgeed ._abfag {copy (_ecgeed ._ddeeb [_gggedg :],_ecgeed ._ddeeb [_gggedg +1:]);_ecgeed ._ddeeb [len (_ecgeed ._ddeeb )-1]=nil ;_ecgeed ._ddeeb =_ecgeed ._ddeeb [:len (_ecgeed ._ddeeb )-1];
break ;};};};_bgefg :=_fbg .PdfIndirectObject {};_bgefg .PdfObject =_ddcgc ;_ecgeed ._abfag =&_bgefg ;_ecgeed .addObject (&_bgefg );};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_faca *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=_faca .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgdcc ,_caf :=_fbg .GetNumbersAsFloat (objects );
if _caf !=nil {return nil ,_caf ;};return _faca .ColorFromFloats (_bgdcc );};func (_fada *Image )resampleLowBits (_ceca []uint32 ){_fgfbac :=_ced .BytesPerLine (int (_fada .Width ),int (_fada .BitsPerComponent ),_fada .ColorComponents );_bcde :=make ([]byte ,_fada .ColorComponents *_fgfbac *int (_fada .Height ));
_ebbcf :=int (_fada .BitsPerComponent )*_fada .ColorComponents *int (_fada .Width );_ccfbce :=uint8 (8);var (_gbfg ,_egcdf int ;_ffeaa uint32 ;);for _badfeg :=0;_badfeg < int (_fada .Height );_badfeg ++{_egcdf =_badfeg *_fgfbac ;for _bfdge :=0;_bfdge < _ebbcf ;
_bfdge ++{_ffeaa =_ceca [_gbfg ];_ccfbce -=uint8 (_fada .BitsPerComponent );_bcde [_egcdf ]|=byte (_ffeaa )<<_ccfbce ;if _ccfbce ==0{_ccfbce =8;_egcdf ++;};_gbfg ++;};};_fada .Data =_bcde ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ddadc *PdfShadingPattern )ToPdfObject ()_fbg .PdfObject {_ddadc .PdfPattern .ToPdfObject ();_gacba :=_ddadc .getDict ();if _ddadc .Shading !=nil {_gacba .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ddadc .Shading .ToPdfObject ());};if _ddadc .Matrix !=nil {_gacba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ddadc .Matrix );
};if _ddadc .ExtGState !=nil {_gacba .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ddadc .ExtGState );};return _ddadc ._eadbd ;};func _cagfa (_ddad map[_dg .GID ]int ,_fbda uint16 )*_fbg .PdfObjectArray {_ffbga :=&_fbg .PdfObjectArray {};_gadg :=_dg .GID (_fbda );
for _ccddea :=_dg .GID (0);_ccddea < _gadg ;{_ggba ,_afbeb :=_ddad [_ccddea ];if !_afbeb {_ccddea ++;continue ;};_egcfe :=_ccddea ;for _eacae :=_egcfe +1;_eacae < _gadg ;_eacae ++{if _ggab ,_ceff :=_ddad [_eacae ];!_ceff ||_ggba !=_ggab {break ;};_egcfe =_eacae ;
};_ffbga .Append (_fbg .MakeInteger (int64 (_ccddea )));_ffbga .Append (_fbg .MakeInteger (int64 (_egcfe )));_ffbga .Append (_fbg .MakeInteger (int64 (_ggba )));_ccddea =_egcfe +1;};return _ffbga ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_baffg *PdfPattern )ToPdfObject ()_fbg .PdfObject {_gaggd :=_baffg .getDict ();_gaggd .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gaggd .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fbg .MakeInteger (_baffg .PatternType ));
return _baffg ._eadbd ;};func (_eee *PdfReader )newPdfActionSubmitFormFromDict (_gfed *_fbg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_eca ,_def :=_dae (_gfed .Get ("\u0046"));if _def !=nil {return nil ,_def ;};return &PdfActionSubmitForm {F :_eca ,Fields :_gfed .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gfed .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gfaag *PdfWriter )SetNamedDestinations (dests _fbg .PdfObject )error {if dests ==nil {return nil ;};_adc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gfaag ._gdgbee .Set ("\u0044\u0065\u0073t\u0073",dests );return _gfaag .addObjects (dests );};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cccg *PdfFont )BytesToCharcodes (data []byte )[]_cf .CharCode {_adc .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _eeab ,_edbf :=_cccg ._fbff .(*pdfFontType0 );_edbf &&_eeab ._fdgee !=nil {if _ggea ,_bbcdgc :=_eeab .bytesToCharcodes (data );_bbcdgc {return _ggea ;};};var (_gcce =make ([]_cf .CharCode ,0,len (data )+len (data )%2);_fdfbg =_cccg .baseFields (););
if _fdfbg ._ceadf !=nil {if _cbeg ,_ccaf :=_fdfbg ._ceadf .BytesToCharcodes (data );_ccaf {for _ ,_bgafa :=range _cbeg {_gcce =append (_gcce ,_cf .CharCode (_bgafa ));};return _gcce ;};};if _fdfbg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cdbee :=0;_cdbee < len (data );_cdbee +=2{_fddae :=uint16 (data [_cdbee ])<<8|uint16 (data [_cdbee +1]);_gcce =append (_gcce ,_cf .CharCode (_fddae ));};}else {for _ ,_dbdb :=range data {_gcce =append (_gcce ,_cf .CharCode (_dbdb ));
};};return _gcce ;};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fbg .PdfObject ;Dest _fbg .PdfObject ;H _fbg .PdfObject ;PA _fbg .PdfObject ;QuadPoints _fbg .PdfObject ;BS _fbg .PdfObject ;_bfgf *PdfAction ;_cgec *PdfReader ;};

// Direction represents the predominant reading order for text.
type Direction string ;

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ecegc .Lock ();defer _ecegc .Unlock ();_eeedcf =keywords };

// SetOCProperties sets the optional content properties.
func (_dadfb *PdfWriter )SetOCProperties (ocProperties _fbg .PdfObject )error {_ccafe :=_dadfb ._gdgbee ;if ocProperties !=nil {_adc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ccafe .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dadfb .addObjects (ocProperties );};return nil ;};

// GetKDict returns the KDict of the KValue.
func (_aacec *KValue )GetKDict ()*KDict {return _aacec ._daabc };

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_ceef *PdfFont )ToUnicode ()string {if _ceef .baseFields ()._ceadf ==nil {return "";};return _ceef .baseFields ()._ceadf .Name ();};

// IsTiling specifies if the pattern is a tiling pattern.
func (_aafb *PdfPattern )IsTiling ()bool {return _aafb .PatternType ==1};func _begcg ()string {_ecegc .Lock ();defer _ecegc .Unlock ();return _aebdd };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gedcf *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_acdb :=_gba .NewReader (img .getBase ());_bccd :=_ced .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._acag ,img ._beggbb );
_gcec :=_gba .NewWriter (_bccd );_adeb :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_cgbeb :=_gedcf .GetNumComponents ();_bcfa :=make ([]uint32 ,_cgbeb );_abfe :=make ([]float64 ,_cgbeb );for {_dagda :=_acdb .ReadSamples (_bcfa );if _dagda ==_gg .EOF {break ;
}else if _dagda !=nil {return img ,_dagda ;};for _bdfge :=0;_bdfge < _cgbeb ;_bdfge ++{_bgaf :=float64 (_bcfa [_bdfge ])/_adeb ;_abfe [_bdfge ]=_bgaf ;};_aaae ,_dagda :=_gedcf .TintTransform .Evaluate (_abfe );if _dagda !=nil {return img ,_dagda ;};for _ ,_cfag :=range _aaae {_cfag =_ab .Min (_ab .Max (0,_cfag ),1.0);
if _dagda =_gcec .WriteSample (uint32 (_cfag *_adeb ));_dagda !=nil {return img ,_dagda ;};};};return _gedcf .AlternateSpace .ImageToRGB (_cgdba (&_bccd ));};

// WriteToFile writes the Appender output to file specified by path.
func (_edfea *PdfAppender )WriteToFile (outputPath string )error {_gefg ,_cbg :=_aef .Create (outputPath );if _cbg !=nil {return _cbg ;};defer _gefg .Close ();return _edfea .Write (_gefg );};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_agbdff *_fbg .PdfObjectDictionary ;Type *_fbg .PdfObjectName ;TransformMethod *_fbg .PdfObjectName ;TransformParams _fbg .PdfObject ;Data _fbg .PdfObject ;DigestMethod *_fbg .PdfObjectName ;};func _bbcdcf (_acagd *_fbg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ddabc :=PdfShadingType2 {};
_beddf :=_acagd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _beddf ==nil {_adc .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_adbc ,_ceaf :=_beddf .(*_fbg .PdfObjectArray );if !_ceaf {_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beddf );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _adbc .Len ()!=4{_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_adbc .Len ());
return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ddabc .Coords =_adbc ;if _dfbdg :=_acagd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dfbdg !=nil {_dfbdg =_fbg .TraceToDirectObject (_dfbdg );
_bfceb ,_ggbee :=_dfbdg .(*_fbg .PdfObjectArray );if !_ggbee {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfbdg );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ddabc .Domain =_bfceb ;};_beddf =_acagd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _beddf ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ddabc .Function =[]PdfFunction {};if _fcbcc ,_gbgfd :=_beddf .(*_fbg .PdfObjectArray );_gbgfd {for _ ,_geegfb :=range _fcbcc .Elements (){_fgebb ,_ffgbe :=_aabg (_geegfb );if _ffgbe !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffgbe );
return nil ,_ffgbe ;};_ddabc .Function =append (_ddabc .Function ,_fgebb );};}else {_acfba ,_acdde :=_aabg (_beddf );if _acdde !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acdde );
return nil ,_acdde ;};_ddabc .Function =append (_ddabc .Function ,_acfba );};if _ddfe :=_acagd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ddfe !=nil {_ddfe =_fbg .TraceToDirectObject (_ddfe );_bdgfd ,_abgagg :=_ddfe .(*_fbg .PdfObjectArray );if !_abgagg {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddfe );
return nil ,_fbg .ErrTypeError ;};if _bdgfd .Len ()!=2{_adc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdgfd .Len ());return nil ,ErrInvalidAttribute ;
};_ddabc .Extend =_bdgfd ;};return &_ddabc ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bceb ,_gbgc :=NewStandard14Font (basefont );if _gbgc !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bceb ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_ddbfd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_dcbbc :=_ddbfd ._eedad .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _dcbbc {return nil ,_fd .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_dcbbc {return _ddbfd ,nil ;};if _ddbfd ._eegc [revisionNumber ]!=nil {return _ddbfd ._eegc [revisionNumber ],nil ;};_defaa :=_ddbfd ;for _afeag :=_dcbbc -1;_afeag >=revisionNumber ;_afeag --{_aeegcf ,_edbfc :=_defaa .GetPreviousRevision ();
if _edbfc !=nil {return nil ,_edbfc ;};_ddbfd ._eegc [_afeag ]=_aeegcf ;_defaa =_aeegcf ;};return _defaa ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cgce *PdfReader )GetNamedDestinations ()(_fbg .PdfObject ,error ){_fadaf :=_fbg .ResolveReference (_cgce ._ffcac .Get ("\u0044\u0065\u0073t\u0073"));if _fadaf ==nil {return nil ,nil ;};if !_cgce ._cgfbeb {_dbfgfe :=_cgce .traverseObjectData (_fadaf );
if _dbfgfe !=nil {return nil ,_dbfgfe ;};};return _fadaf ,nil ;};func _aebbd (_edga *[]*PdfField ,_cdac FieldFilterFunc ,_bbgdf bool )[]*PdfField {if _edga ==nil {return nil ;};_eefa :=*_edga ;if len (*_edga )==0{return nil ;};_acdff :=_eefa [:0];if _cdac ==nil {_cdac =func (*PdfField )bool {return true };
};var _baag []*PdfField ;for _ ,_eedbc :=range _eefa {_ccge :=_cdac (_eedbc );if _ccge {_baag =append (_baag ,_eedbc );if len (_eedbc .Kids )> 0{_baag =append (_baag ,_aebbd (&_eedbc .Kids ,_cdac ,_bbgdf )...);};};if !_bbgdf ||!_ccge ||len (_eedbc .Kids )> 0{_acdff =append (_acdff ,_eedbc );
};};*_edga =_acdff ;return _baag ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bdab *PdfFieldButton )GetType ()ButtonType {_fdbd :=ButtonTypeCheckbox ;if _bdab .Ff !=nil {if (uint32 (*_bdab .Ff )&FieldFlagPushbutton .Mask ())> 0{_fdbd =ButtonTypePush ;}else if (uint32 (*_bdab .Ff )&FieldFlagRadio .Mask ())> 0{_fdbd =ButtonTypeRadio ;
};};return _fdbd ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_cebgf *ViewerPreferences )IsCenterWindow ()bool {if _cebgf ._dgeda ==nil {return false ;};return *_cebgf ._dgeda ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_aadg :=NewPdfAnnotation ();_ecea :=&PdfAnnotationScreen {};_ecea .PdfAnnotation =_aadg ;_aadg .SetContext (_ecea );return _ecea ;};

// Encoder returns the font's text encoder.
func (_gdfee pdfCIDFontType2 )Encoder ()_cf .TextEncoder {return _gdfee ._caga };func (_gbea *PdfReader )newPdfActionGoTo3DViewFromDict (_adfb *_fbg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_adfb .Get ("\u0054\u0041"),V :_adfb .Get ("\u0056")},nil ;
};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cca :=NewPdfAction ();_ecf :=&PdfActionRendition {};_ecf .PdfAction =_cca ;_cca .SetContext (_ecf );return _ecf ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fbg .PdfObject ;Movie _fbg .PdfObject ;A _fbg .PdfObject ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fega :=&PdfColorspaceCalRGB {};_fega .BlackPoint =[]float64 {0.0,0.0,0.0};_fega .Gamma =[]float64 {1.0,1.0,1.0};_fega .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fega ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_dbeeg *PdfPattern )SetContext (ctx PdfModel ){_dbeeg ._acfag =ctx };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbggac *PdfShadingType4 )ToPdfObject ()_fbg .PdfObject {_dbggac .PdfShading .ToPdfObject ();_cbdgd ,_bdgc :=_dbggac .getShadingDict ();if _bdgc !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbggac .BitsPerCoordinate !=nil {_cbdgd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbggac .BitsPerCoordinate );};if _dbggac .BitsPerComponent !=nil {_cbdgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbggac .BitsPerComponent );
};if _dbggac .BitsPerFlag !=nil {_cbdgd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbggac .BitsPerFlag );};if _dbggac .Decode !=nil {_cbdgd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbggac .Decode );};if _dbggac .Function !=nil {if len (_dbggac .Function )==1{_cbdgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbggac .Function [0].ToPdfObject ());
}else {_ecbbe :=_fbg .MakeArray ();for _ ,_cbcce :=range _dbggac .Function {_ecbbe .Append (_cbcce .ToPdfObject ());};_cbdgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecbbe );};};return _dbggac ._gedcg ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gabg :=&PdfOutlineItem {_bebdb :_fbg .MakeIndirectObject (_fbg .MakeDict ())};_gabg ._bfbgb =_gabg ;return _gabg ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_daeb :=&PdfColorspaceCalGray {};_daeb .BlackPoint =[]float64 {0.0,0.0,0.0};_daeb .Gamma =1;return _daeb ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_gedb :=NewPdfAnnotation ();_gbb :=&PdfAnnotationTrapNet {};_gbb .PdfAnnotation =_gedb ;_gedb .SetContext (_gbb );return _gbb ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_fcdcd *PdfPageResources )GenerateXObjectName ()_fbg .PdfObjectName {_fbfa :=1;for {_dcfab :=_fbg .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fbfa ));if !_fcdcd .HasXObjectByName (*_dcfab ){return *_dcfab ;};_fbfa ++;};};func _fdacg (_eaec _fbg .PdfObject )(*fontFile ,error ){_adc .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_eaec );
_cbedb :=&fontFile {};_eaec =_fbg .TraceToDirectObject (_eaec );_fcfcb ,_afea :=_eaec .(*_fbg .PdfObjectStream );if !_afea {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_eaec );
return nil ,_fbg .ErrTypeError ;};_fdca :=_fcfcb .PdfObjectDictionary ;_egafd ,_dgfg :=_fbg .DecodeStream (_fcfcb );if _dgfg !=nil {return nil ,_dgfg ;};_faaa ,_afea :=_fbg .GetNameVal (_fdca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_afea {_cbedb ._gcdfc =_faaa ;
if _faaa =="\u0054\u0079\u0070\u0065\u0031\u0043"{_adc .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dfgda ,_ :=_fbg .GetIntVal (_fdca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gbfef ,_ :=_fbg .GetIntVal (_fdca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dfgda > len (_egafd ){_dfgda =len (_egafd );
};if _dfgda +_gbfef > len (_egafd ){_gbfef =len (_egafd )-_dfgda ;};_acfgd :=_egafd [:_dfgda ];var _cbfaa []byte ;if _gbfef > 0{_cbfaa =_egafd [_dfgda :_dfgda +_gbfef ];};if _dfgda > 0&&_gbfef > 0{_dedea :=_cbedb .loadFromSegments (_acfgd ,_cbfaa );if _dedea !=nil {return nil ,_dedea ;
};};return _cbedb ,nil ;};

// Write outputs the object as it is to be written to file.
func (_bbace *pdfSignDictionary )Write ()[]byte {_bbace ._gccfe =0;_bbace ._gaebd =0;_bbace ._faebe =0;_bbace ._fgacf =0;_fcegb :=_fb .NewBuffer (nil );_fcegb .WriteString ("\u003c\u003c");for _ ,_ccce :=range _bbace .Keys (){_dfbagc :=_bbace .Get (_ccce );
switch _ccce {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fcegb .Write (_ccce .Write ());_fcegb .WriteString ("\u0020");_bbace ._faebe =_fcegb .Len ();_fcegb .Write (_dfbagc .Write ());_fcegb .WriteString ("\u0020");_bbace ._fgacf =_fcegb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fcegb .Write (_ccce .Write ());_fcegb .WriteString ("\u0020");_bbace ._gccfe =_fcegb .Len ();_fcegb .Write (_dfbagc .Write ());_fcegb .WriteString ("\u0020");_bbace ._gaebd =_fcegb .Len ()-1;default:_fcegb .Write (_ccce .Write ());
_fcegb .WriteString ("\u0020");_fcegb .Write (_dfbagc .Write ());};};_fcegb .WriteString ("\u003e\u003e");return _fcegb .Bytes ();};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebef *PdfColorspaceDeviceCMYK )ToPdfObject ()_fbg .PdfObject {return _fbg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject implements interface PdfModel.
func (_fbd *PdfActionLaunch )ToPdfObject ()_fbg .PdfObject {_fbd .PdfAction .ToPdfObject ();_eaaa :=_fbd ._gc ;_gcf :=_eaaa .PdfObject .(*_fbg .PdfObjectDictionary );_gcf .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeLaunch )));if _fbd .F !=nil {_gcf .Set ("\u0046",_fbd .F .ToPdfObject ());
};_gcf .SetIfNotNil ("\u0057\u0069\u006e",_fbd .Win );_gcf .SetIfNotNil ("\u004d\u0061\u0063",_fbd .Mac );_gcf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fbd .Unix );_gcf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fbd .NewWindow );return _eaaa ;
};func _fecef ()string {_ecegc .Lock ();defer _ecegc .Unlock ();return _eeedcf };

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func (_dgbc *XObjectImage )getParamsDict ()*_fbg .PdfObjectDictionary {_ccbgc :=_fbg .MakeDict ();_ccbgc .Set ("\u0057\u0069\u0064t\u0068",_fbg .MakeInteger (*_dgbc .Width ));_ccbgc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fbg .MakeInteger (*_dgbc .Height ));
_ccbgc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fbg .MakeInteger (int64 (_dgbc .ColorSpace .GetNumComponents ())));_ccbgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbg .MakeInteger (*_dgbc .BitsPerComponent ));
return _ccbgc ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_feeba *PdfWriter )SetOpenAction (dest _fbg .PdfObject )error {if dest ==nil ||_fbg .IsNullObject (dest ){return nil ;};_feeba ._gdgbee .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _feeba .addObjects (dest );
};

// SetViewClip sets the value of the viewClip.
func (_gcef *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_gcef ._fadfe =viewClip };

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_ddga *PdfAnnotationWatermark )ToPdfObject ()_fbg .PdfObject {_ddga .PdfAnnotation .ToPdfObject ();_dfca :=_ddga ._ecfe ;_gebf :=_dfca .PdfObject .(*_fbg .PdfObjectDictionary );_gebf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gebf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ddga .FixedPrint );return _dfca ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_gebda *XObjectImage )GetContainingPdfObject ()_fbg .PdfObject {return _gebda ._cacd };func (_fcac *PdfReader )loadAnnotations (_ccfbag _fbg .PdfObject )([]*PdfAnnotation ,error ){_aeccfe ,_degee :=_fbg .GetArray (_ccfbag );if !_degee {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _ddadd []*PdfAnnotation ;for _ ,_egcabd :=range _aeccfe .Elements (){_egcabd =_fbg .ResolveReference (_egcabd );if _ ,_dgfbd :=_egcabd .(*_fbg .PdfObjectNull );_dgfbd {continue ;};_addge ,_bbdd :=_egcabd .(*_fbg .PdfObjectDictionary );_beaeg ,_gfbcc :=_egcabd .(*_fbg .PdfIndirectObject );
if _bbdd {_beaeg =&_fbg .PdfIndirectObject {};_beaeg .PdfObject =_addge ;}else {if !_gfbcc {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_fafc ,_abgecd :=_fcac .newPdfAnnotationFromIndirectObject (_beaeg );if _abgecd !=nil {return nil ,_abgecd ;};switch _cdfa :=_fafc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dcbdf :=range _fcac .AcroForm .AllFields (){if _dcbdf ._gcad ==_cdfa .Parent {_cdfa ._abg =_dcbdf ;
break ;};};};if _fafc !=nil {_ddadd =append (_ddadd ,_fafc );};};return _ddadd ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_eeaeb *Image )ConvertToBinary ()error {if _eeaeb .ColorComponents ==1&&_eeaeb .BitsPerComponent ==1{return nil ;};_dddf ,_eggbf :=_eeaeb .ToGoImage ();if _eggbf !=nil {return _eggbf ;};_eaeg ,_eggbf :=_ced .MonochromeConverter .Convert (_dddf );
if _eggbf !=nil {return _eggbf ;};_eeaeb .Data =_eaeg .Base ().Data ;_eeaeb ._acag ,_eggbf =_ced .ScaleAlphaToMonochrome (_eeaeb ._acag ,int (_eeaeb .Width ),int (_eeaeb .Height ));if _eggbf !=nil {return _eggbf ;};_eeaeb .BitsPerComponent =1;_eeaeb .ColorComponents =1;
_eeaeb ._beggbb =nil ;return nil ;};

// L returns the value of the L component of the color.
func (_ade *PdfColorLab )L ()float64 {return _ade [0]};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fbg .PdfIndirectObject ;SV *_fbg .PdfIndirectObject ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cfec *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_agadd ,_cedf :=_fbg .GetDict (_cfec ._gdgbee .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cedf {_agadd =_fbg .MakeDict ();_cfec ._gdgbee .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_agadd );
};_fbcaa ,_cedf :=_fbg .GetDict (_agadd .Get (_fbg .PdfObjectName (extName )));if !_cedf {_fbcaa =_fbg .MakeDict ();_agadd .Set (_fbg .PdfObjectName (extName ),_fbcaa );};if _gbfa ,_ :=_fbg .GetNameVal (_fbcaa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_gbfa !=baseVersion {_fbcaa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fbg .MakeName (baseVersion ));};if _adada ,_ :=_fbg .GetIntVal (_fbcaa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_adada !=extLevel {_fbcaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fbg .MakeInteger (int64 (extLevel )));};};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ecag *PdfField )ToPdfObject ()_fbg .PdfObject {_gdge :=_ecag ._gcad ;_dgcf :=_gdge .PdfObject .(*_fbg .PdfObjectDictionary );_ddbad :=_fbg .MakeArray ();for _ ,_bgcf :=range _ecag .Kids {_ddbad .Append (_bgcf .ToPdfObject ());};for _ ,_fgdg :=range _ecag .Annotations {if _fgdg ._ecfe !=_ecag ._gcad {_ddbad .Append (_fgdg .GetContext ().ToPdfObject ());
};};if _ecag .Parent !=nil {_dgcf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecag .Parent .GetContainingPdfObject ());};if _ddbad .Len ()> 0{_dgcf .Set ("\u004b\u0069\u0064\u0073",_ddbad );};_dgcf .SetIfNotNil ("\u0046\u0054",_ecag .FT );_dgcf .SetIfNotNil ("\u0054",_ecag .T );
_dgcf .SetIfNotNil ("\u0054\u0055",_ecag .TU );_dgcf .SetIfNotNil ("\u0054\u004d",_ecag .TM );_dgcf .SetIfNotNil ("\u0046\u0066",_ecag .Ff );_dgcf .SetIfNotNil ("\u0056",_ecag .V );_dgcf .SetIfNotNil ("\u0044\u0056",_ecag .DV );_dgcf .SetIfNotNil ("\u0041\u0041",_ecag .AA );
if _ecag .VariableText !=nil {_dgcf .SetIfNotNil ("\u0044\u0041",_ecag .VariableText .DA );_dgcf .SetIfNotNil ("\u0051",_ecag .VariableText .Q );_dgcf .SetIfNotNil ("\u0044\u0053",_ecag .VariableText .DS );_dgcf .SetIfNotNil ("\u0052\u0056",_ecag .VariableText .RV );
};return _gdge ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fbg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fbg .PdfObject ;Contents _fbg .PdfObject ;
Rotate *int64 ;Group _fbg .PdfObject ;Thumb _fbg .PdfObject ;B _fbg .PdfObject ;Dur _fbg .PdfObject ;Trans _fbg .PdfObject ;AA _fbg .PdfObject ;Metadata _fbg .PdfObject ;PieceInfo _fbg .PdfObject ;StructParents _fbg .PdfObject ;ID _fbg .PdfObject ;PZ _fbg .PdfObject ;
SeparationInfo _fbg .PdfObject ;Tabs _fbg .PdfObject ;TemplateInstantiated _fbg .PdfObject ;PresSteps _fbg .PdfObject ;UserUnit _fbg .PdfObject ;VP _fbg .PdfObject ;Annots _fbg .PdfObject ;_fefa []*PdfAnnotation ;_afab *_fbg .PdfObjectDictionary ;_ecedg *_fbg .PdfIndirectObject ;
_aaaf _fbg .PdfObjectDictionary ;_fdfee *PdfReader ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_egd *PdfAction )GetContext ()PdfModel {if _egd ==nil {return nil ;};return _egd ._ddb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bgec *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_abcda *DSS )generateHashMap (_babaf []*_fbg .PdfObjectStream )(map[string ]*_fbg .PdfObjectStream ,error ){_cbfgc :=map[string ]*_fbg .PdfObjectStream {};for _ ,_fecfc :=range _babaf {_dbafc ,_ddce :=_fbg .DecodeStream (_fecfc );
if _ddce !=nil {return nil ,_ddce ;};_bgaag ,_ddce :=_afgca (_dbafc );if _ddce !=nil {return nil ,_ddce ;};_cbfgc [string (_bgaag )]=_fecfc ;};return _cbfgc ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bda :=NewPdfAnnotation ();_dfe :=&PdfAnnotationUnderline {};_dfe .PdfAnnotation =_bda ;_dfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bda .SetContext (_dfe );return _dfe ;};func (_dbbb *PdfAcroForm )fillImageWithAppearance (_dabf FieldImageProvider ,_deebf FieldAppearanceGenerator )error {if _dbbb ==nil {return nil ;
};_baecf ,_gaged :=_dabf .FieldImageValues ();if _gaged !=nil {return _gaged ;};for _ ,_cbae :=range _dbbb .AllFields (){_befed :=_cbae .PartialName ();_ggfec ,_bfdc :=_baecf [_befed ];if !_bfdc {if _begc ,_acdca :=_cbae .FullName ();_acdca ==nil {_ggfec ,_bfdc =_baecf [_begc ];
};};if !_bfdc {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_befed );
continue ;};switch _bdce :=_cbae .GetContext ().(type ){case *PdfFieldButton :if _bdce .IsPush (){_bdce .SetFillImage (_ggfec );};};if _deebf ==nil {continue ;};for _ ,_egbdb :=range _cbae .Annotations {_gbcg ,_efec :=_deebf .GenerateAppearanceDict (_dbbb ,_cbae ,_egbdb );
if _efec !=nil {return _efec ;};_egbdb .AP =_gbcg ;_egbdb .ToPdfObject ();};};return nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gdaf :=appender .Reader .DSS ;if _gdaf ==nil {_gdaf =NewDSS ();};if _accg :=_gdaf .GenerateHashMaps ();_accg !=nil {return nil ,_accg ;};return &LTV {CertClient :_gb .NewCertClient (),OCSPClient :_gb .NewOCSPClient (),CRLClient :_gb .NewCRLClient (),SkipExisting :true ,_bdbe :appender ,_aeded :_gdaf },nil ;
};func (_bcagcc *LTV )generateVRIKey (_aegfdd *PdfSignature )(string ,error ){_eadaa ,_cgeag :=_afgca (_aegfdd .Contents .Bytes ());if _cgeag !=nil {return "",_cgeag ;};return _gdg .ToUpper (_ae .EncodeToString (_eadaa )),nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cccbe pdfFontSimple )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){if _cccbe ._ggcaa !=nil {_dgdee ,_egccd :=_cccbe ._ggcaa .Read (r );if _egccd {return _dgdee ,true ;};};_beac :=_cccbe .Encoder ();if _beac ==nil {_adc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cccbe );
return _dg .CharMetrics {},false ;};_ebee ,_fgdef :=_beac .RuneToCharcode (r );if !_fgdef {if r !=' '{_adc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cccbe );
};return _dg .CharMetrics {},false ;};_dgddd ,_ebbadb :=_cccbe .GetCharMetrics (_ebee );return _dgddd ,_ebbadb ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_egabd *PdfPageResources )GetContainingPdfObject ()_fbg .PdfObject {return _egabd ._abcdeb };

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gbcgg _gg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gdbed _aa .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dfddf _aa .Image )(*Image ,error );

// Compress an image.
Compress (_dabd *Image ,_dfbc int64 )(*Image ,error );};

// GetCerts returns the signature certificate chain.
func (_eeedc *PdfSignature )GetCerts ()([]*_dd .Certificate ,error ){var _bacfb []func ()([]*_dd .Certificate ,error );switch _fegb ,_ :=_fbg .GetNameVal (_eeedc .SubFilter );_fegb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bacfb =append (_bacfb ,_eeedc .extractChainFromPKCS7 ,_eeedc .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bacfb =append (_bacfb ,_eeedc .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bacfb =append (_bacfb ,_eeedc .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_fegb );};for _ ,_bfdaef :=range _bacfb {_fbeea ,_ggcf :=_bfdaef ();if _ggcf !=nil {return nil ,_ggcf ;
};if len (_fbeea )> 0{return _fbeea ,nil ;};};return nil ,ErrSignNoCertificates ;};

// M returns the value of the magenta component of the color.
func (_fcgf *PdfColorDeviceCMYK )M ()float64 {return _fcgf [1]};func _bcbe (_gdef _fbg .PdfObject ,_fdgb *fontCommon )(*_ed .CMap ,error ){_aceeeb ,_faceg :=_fbg .GetStream (_gdef );if !_faceg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gdef );
return nil ,_fbg .ErrTypeError ;};_gcff ,_gdab :=_fbg .DecodeStream (_aceeeb );if _gdab !=nil {return nil ,_gdab ;};_egeg ,_gdab :=_ed .LoadCmapFromData (_gcff ,!_fdgb .isCIDFont ());if _gdab !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_aceeeb .ObjectNumber ,_gdab );
};return _egeg ,_gdab ;};func (_bebf *PdfAppender )addNewObject (_cgbb _fbg .PdfObject ){if _ ,_ccegb :=_bebf ._gbed [_cgbb ];!_ccegb {_bebf ._cgddd =append (_bebf ._cgddd ,_cgbb );_bebf ._gbed [_cgbb ]=struct{}{};};};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_agdfg *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_agdfg ._egega =nonFullScreenPageMode ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_edcc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfac :=vals [0];_abda :=[]float64 {_bfac };_fcaec ,_cgfd :=_edcc .TintTransform .Evaluate (_abda );
if _cgfd !=nil {_adc .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cgfd );_adc .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_edcc .TintTransform );
return nil ,_cgfd ;};_adc .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_fcaec ,_edcc .AlternateSpace );
_caae ,_cgfd :=_edcc .AlternateSpace .ColorFromFloats (_fcaec );if _cgfd !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cgfd );
return nil ,_cgfd ;};return _caae ,nil ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;func (_dfa *PdfReader )newPdfAnnotationFromIndirectObject (_bae *_fbg .PdfIndirectObject )(*PdfAnnotation ,error ){_cff ,_dba :=_bae .PdfObject .(*_fbg .PdfObjectDictionary );if !_dba {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dfa ._dccaf .GetModelFromPrimitive (_cff );model !=nil {_fgb ,_bdb :=model .(*PdfAnnotation );if !_bdb {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fgb ,nil ;};_eeed :=&PdfAnnotation {};_eeed ._ecfe =_bae ;_dfa ._dccaf .Register (_cff ,_eeed );if _dfgc :=_cff .Get ("\u0054\u0079\u0070\u0065");_dfgc !=nil {_egag ,_ddee :=_dfgc .(*_fbg .PdfObjectName );if !_ddee {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfgc );
}else {if *_egag !="\u0041\u006e\u006eo\u0074"{_adc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_egag );};};};
if _acf :=_cff .Get ("\u0052\u0065\u0063\u0074");_acf !=nil {_eeed .Rect =_acf ;};if _ggg :=_cff .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ggg !=nil {_eeed .Contents =_ggg ;};if _dfbg :=_cff .Get ("\u0050");_dfbg !=nil {_eeed .P =_dfbg ;
};if _eac :=_cff .Get ("\u004e\u004d");_eac !=nil {_eeed .NM =_eac ;};if _aggb :=_cff .Get ("\u004d");_aggb !=nil {_eeed .M =_aggb ;};if _cccf :=_cff .Get ("\u0046");_cccf !=nil {_eeed .F =_cccf ;};if _defe :=_cff .Get ("\u0041\u0050");_defe !=nil {_eeed .AP =_defe ;
};if _ege :=_cff .Get ("\u0041\u0053");_ege !=nil {_eeed .AS =_ege ;};if _fbgg :=_cff .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fbgg !=nil {_eeed .Border =_fbgg ;};if _dbd :=_cff .Get ("\u0043");_dbd !=nil {_eeed .C =_dbd ;};if _eag :=_cff .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_eag !=nil {_eeed .StructParent =_eag ;};if _deb :=_cff .Get ("\u004f\u0043");_deb !=nil {_eeed .OC =_deb ;};_dbce :=_cff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dbce ==nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_eeed ._cdc =nil ;return _eeed ,nil ;};_dga ,_dfd :=_dbce .(*_fbg .PdfObjectName );if !_dfd {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dbce );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dbce );};switch *_dga {case "\u0054\u0065\u0078\u0074":_effb ,_dgdf :=_dfa .newPdfAnnotationTextFromDict (_cff );
if _dgdf !=nil {return nil ,_dgdf ;};_effb .PdfAnnotation =_eeed ;_eeed ._cdc =_effb ;return _eeed ,nil ;case "\u004c\u0069\u006e\u006b":_fag ,_cged :=_dfa .newPdfAnnotationLinkFromDict (_cff );if _cged !=nil {return nil ,_cged ;};_fag .PdfAnnotation =_eeed ;
_eeed ._cdc =_fag ;return _eeed ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_aeff ,_ffg :=_dfa .newPdfAnnotationFreeTextFromDict (_cff );if _ffg !=nil {return nil ,_ffg ;};_aeff .PdfAnnotation =_eeed ;_eeed ._cdc =_aeff ;return _eeed ,nil ;
case "\u004c\u0069\u006e\u0065":_begg ,_gbc :=_dfa .newPdfAnnotationLineFromDict (_cff );if _gbc !=nil {return nil ,_gbc ;};_begg .PdfAnnotation =_eeed ;_eeed ._cdc =_begg ;_adc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_eeed ,_eeed );
_adc .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_begg ,_begg );_adc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_begg .PdfAnnotationMarkup ,_begg .PdfAnnotationMarkup );
return _eeed ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_gec ,_fafbc :=_dfa .newPdfAnnotationSquareFromDict (_cff );if _fafbc !=nil {return nil ,_fafbc ;};_gec .PdfAnnotation =_eeed ;_eeed ._cdc =_gec ;return _eeed ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_abab ,_gac :=_dfa .newPdfAnnotationCircleFromDict (_cff );
if _gac !=nil {return nil ,_gac ;};_abab .PdfAnnotation =_eeed ;_eeed ._cdc =_abab ;return _eeed ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ggd ,_bag :=_dfa .newPdfAnnotationPolygonFromDict (_cff );if _bag !=nil {return nil ,_bag ;};_ggd .PdfAnnotation =_eeed ;
_eeed ._cdc =_ggd ;return _eeed ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fcf ,_ecd :=_dfa .newPdfAnnotationPolyLineFromDict (_cff );if _ecd !=nil {return nil ,_ecd ;};_fcf .PdfAnnotation =_eeed ;_eeed ._cdc =_fcf ;return _eeed ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_cgdd ,_aeeg :=_dfa .newPdfAnnotationHighlightFromDict (_cff );if _aeeg !=nil {return nil ,_aeeg ;};_cgdd .PdfAnnotation =_eeed ;_eeed ._cdc =_cgdd ;return _eeed ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fcc ,_bac :=_dfa .newPdfAnnotationUnderlineFromDict (_cff );
if _bac !=nil {return nil ,_bac ;};_fcc .PdfAnnotation =_eeed ;_eeed ._cdc =_fcc ;return _eeed ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ccf ,_gee :=_dfa .newPdfAnnotationSquigglyFromDict (_cff );if _gee !=nil {return nil ,_gee ;};
_ccf .PdfAnnotation =_eeed ;_eeed ._cdc =_ccf ;return _eeed ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gaca ,_aeda :=_dfa .newPdfAnnotationStrikeOut (_cff );if _aeda !=nil {return nil ,_aeda ;};_gaca .PdfAnnotation =_eeed ;_eeed ._cdc =_gaca ;
return _eeed ,nil ;case "\u0043\u0061\u0072e\u0074":_egea ,_baca :=_dfa .newPdfAnnotationCaretFromDict (_cff );if _baca !=nil {return nil ,_baca ;};_egea .PdfAnnotation =_eeed ;_eeed ._cdc =_egea ;return _eeed ,nil ;case "\u0053\u0074\u0061m\u0070":_eede ,_adcg :=_dfa .newPdfAnnotationStampFromDict (_cff );
if _adcg !=nil {return nil ,_adcg ;};_eede .PdfAnnotation =_eeed ;_eeed ._cdc =_eede ;return _eeed ,nil ;case "\u0049\u006e\u006b":_gbba ,_gdf :=_dfa .newPdfAnnotationInkFromDict (_cff );if _gdf !=nil {return nil ,_gdf ;};_gbba .PdfAnnotation =_eeed ;_eeed ._cdc =_gbba ;
return _eeed ,nil ;case "\u0050\u006f\u0070u\u0070":_bedc ,_gbd :=_dfa .newPdfAnnotationPopupFromDict (_cff );if _gbd !=nil {return nil ,_gbd ;};_bedc .PdfAnnotation =_eeed ;_eeed ._cdc =_bedc ;return _eeed ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_egffb ,_fgbc :=_dfa .newPdfAnnotationFileAttachmentFromDict (_cff );
if _fgbc !=nil {return nil ,_fgbc ;};_egffb .PdfAnnotation =_eeed ;_eeed ._cdc =_egffb ;return _eeed ,nil ;case "\u0053\u006f\u0075n\u0064":_acfg ,_fdac :=_dfa .newPdfAnnotationSoundFromDict (_cff );if _fdac !=nil {return nil ,_fdac ;};_acfg .PdfAnnotation =_eeed ;
_eeed ._cdc =_acfg ;return _eeed ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gbg ,_gcbf :=_dfa .newPdfAnnotationRichMediaFromDict (_cff );if _gcbf !=nil {return nil ,_gcbf ;};_gbg .PdfAnnotation =_eeed ;_eeed ._cdc =_gbg ;return _eeed ,nil ;
case "\u004d\u006f\u0076i\u0065":_dgge ,_ecaa :=_dfa .newPdfAnnotationMovieFromDict (_cff );if _ecaa !=nil {return nil ,_ecaa ;};_dgge .PdfAnnotation =_eeed ;_eeed ._cdc =_dgge ;return _eeed ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ecaf ,_gdcd :=_dfa .newPdfAnnotationScreenFromDict (_cff );
if _gdcd !=nil {return nil ,_gdcd ;};_ecaf .PdfAnnotation =_eeed ;_eeed ._cdc =_ecaf ;return _eeed ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_dbe ,_ffgd :=_dfa .newPdfAnnotationWidgetFromDict (_cff );if _ffgd !=nil {return nil ,_ffgd ;};_dbe .PdfAnnotation =_eeed ;
_eeed ._cdc =_dbe ;return _eeed ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gfb ,_ebgbd :=_dfa .newPdfAnnotationPrinterMarkFromDict (_cff );if _ebgbd !=nil {return nil ,_ebgbd ;};_gfb .PdfAnnotation =_eeed ;_eeed ._cdc =_gfb ;
return _eeed ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_aede ,_aagg :=_dfa .newPdfAnnotationTrapNetFromDict (_cff );if _aagg !=nil {return nil ,_aagg ;};_aede .PdfAnnotation =_eeed ;_eeed ._cdc =_aede ;return _eeed ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ddcd ,_aecf :=_dfa .newPdfAnnotationWatermarkFromDict (_cff );
if _aecf !=nil {return nil ,_aecf ;};_ddcd .PdfAnnotation =_eeed ;_eeed ._cdc =_ddcd ;return _eeed ,nil ;case "\u0033\u0044":_deg ,_dbcc :=_dfa .newPdfAnnotation3DFromDict (_cff );if _dbcc !=nil {return nil ,_dbcc ;};_deg .PdfAnnotation =_eeed ;_eeed ._cdc =_deg ;
return _eeed ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_agga ,_ded :=_dfa .newPdfAnnotationProjectionFromDict (_cff );if _ded !=nil {return nil ,_ded ;};_agga .PdfAnnotation =_eeed ;_eeed ._cdc =_agga ;return _eeed ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gdd ,_cdbca :=_dfa .newPdfAnnotationRedactFromDict (_cff );if _cdbca !=nil {return nil ,_cdbca ;};_gdd .PdfAnnotation =_eeed ;_eeed ._cdc =_gdd ;return _eeed ,nil ;};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_dga );
return nil ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gbcgb *PdfReader )GetPageLabels ()(_fbg .PdfObject ,error ){_bgagd :=_fbg .ResolveReference (_gbcgb ._ffcac .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bgagd ==nil {return nil ,nil ;};if !_gbcgb ._cgfbeb {_adafa :=_gbcgb .traverseObjectData (_bgagd );
if _adafa !=nil {return nil ,_adafa ;};};return _bgagd ,nil ;};

// GetCatalogLanguage gets catalog Language object.
func (_dcbdg *PdfReader )GetCatalogLanguage ()(_fbg .PdfObject ,bool ){if _dcbdg ._ffcac ==nil {return nil ,false ;};_fgddd :=_dcbdg ._ffcac .Get ("\u004c\u0061\u006e\u0067");return _fgddd ,_fgddd !=nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_dg .StdFontName ;func (_bdff *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dbdd :=_bdff ._bgbb ;_dbdd !=nil {return _dbdd ;};return _bdff ._dgddad ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_ffdfe *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject implements interface PdfModel.
func (_debf *PdfFilespec )ToPdfObject ()_fbg .PdfObject {_afbga :=_debf .getDict ();_afbga .Clear ();_afbga .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_afbga .SetIfNotNil ("\u0046\u0053",_debf .FS );
_afbga .SetIfNotNil ("\u0046",_debf .F );_afbga .SetIfNotNil ("\u0055\u0046",_debf .UF );_afbga .SetIfNotNil ("\u0044\u004f\u0053",_debf .DOS );_afbga .SetIfNotNil ("\u004d\u0061\u0063",_debf .Mac );_afbga .SetIfNotNil ("\u0055\u006e\u0069\u0078",_debf .Unix );
_afbga .SetIfNotNil ("\u0049\u0044",_debf .ID );_afbga .SetIfNotNil ("\u0056",_debf .V );_afbga .SetIfNotNil ("\u0045\u0046",_debf .EF );_afbga .SetIfNotNil ("\u0052\u0046",_debf .RF );_afbga .SetIfNotNil ("\u0044\u0065\u0073\u0063",_debf .Desc );_afbga .SetIfNotNil ("\u0043\u0049",_debf .CI );
_afbga .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_debf .AFRelationship );return _debf ._efba ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func _ggged (_degb ,_dceba string )string {if _gdg .Contains (_degb ,"\u002b"){_eeecd :=_gdg .Split (_degb ,"\u002b");if len (_eeecd )==2{_degb =_eeecd [1];};};return _dceba +"\u002b"+_degb ;};

// Initialize initializes the PdfSignature.
func (_aabbb *PdfSignature )Initialize ()error {if _aabbb .Handler ==nil {return _fd .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _aabbb .Handler .InitSignature (_aabbb );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fcdb :=&PdfFieldSignature {};_fcdb .PdfField =NewPdfField ();_fcdb .PdfField .SetContext (_fcdb );_fcdb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fcdb .PdfAnnotationWidget .SetContext (_fcdb );
_fcdb .PdfAnnotationWidget ._ecfe =_fcdb .PdfField ._gcad ;_fcdb .T =_fbg .MakeString ("");_fcdb .F =_fbg .MakeInteger (132);_fcdb .V =signature ;return _fcdb ;};func (_fcdg *PdfFilespec )getDict ()*_fbg .PdfObjectDictionary {if _cefda ,_aaaac :=_fcdg ._efba .(*_fbg .PdfIndirectObject );
_aaaac {_gcade ,_cbfaf :=_cefda .PdfObject .(*_fbg .PdfObjectDictionary );if !_cbfaf {return nil ;};return _gcade ;}else if _dbgc ,_aaad :=_fcdg ._efba .(*_fbg .PdfObjectDictionary );_aaad {return _dbgc ;}else {_adc .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fcdg ._efba );
return nil ;};};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fbg .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _bec *_fbg .PdfIndirectObject ;var _begb *_fbg .PdfObjectName ;var _gbeaf *_fbg .PdfObjectArray ;if _fege ,_gcdaf :=obj .(*_fbg .PdfIndirectObject );
_gcdaf {_bec =_fege ;};obj =_fbg .TraceToDirectObject (obj );switch _ccbc :=obj .(type ){case *_fbg .PdfObjectArray :_gbeaf =_ccbc ;case *_fbg .PdfObjectName :_begb =_ccbc ;};if _begb !=nil {switch *_begb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_begb );return nil ,_dedd ;};};if _gbeaf !=nil &&_gbeaf .Len ()> 0{var _ddef _fbg .PdfObject =_bec ;
if _bec ==nil {_ddef =_gbeaf ;};if _cdef ,_baba :=_fbg .GetName (_gbeaf .Get (0));_baba {switch _cdef .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gbeaf .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gbeaf .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gbeaf .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _feag (_ddef );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _adfd (_ddef );
case "\u004c\u0061\u0062":return _ccef (_ddef );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _ccbd (_ddef );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _eaac (_ddef );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cdbb (_ddef );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _aaeb (_ddef );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gfbc (_ddef );default:_adc .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cdef );
};};};_adc .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_ffdec *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_afbeg :=NewPdfOutlineItem ();_afbeg .Title =_fbg .MakeEncodedString (_ffdec .Title ,true );_afbeg .Dest =_ffdec .Dest .ToPdfObject ();var _adcaf []*PdfOutlineItem ;var _efdef int64 ;
var _ccbbf *PdfOutlineItem ;for _ ,_eggeb :=range _ffdec .Entries {_gbgbce ,_cdda :=_eggeb .ToPdfOutlineItem ();_gbgbce .Parent =&_afbeg .PdfOutlineTreeNode ;if _ccbbf !=nil {_ccbbf .Next =&_gbgbce .PdfOutlineTreeNode ;_gbgbce .Prev =&_ccbbf .PdfOutlineTreeNode ;
};_adcaf =append (_adcaf ,_gbgbce );_efdef +=_cdda ;_ccbbf =_gbgbce ;};_gfccg :=len (_adcaf );_efdef +=int64 (_gfccg );if _gfccg > 0{_afbeg .First =&_adcaf [0].PdfOutlineTreeNode ;_afbeg .Last =&_adcaf [_gfccg -1].PdfOutlineTreeNode ;_afbeg .Count =&_efdef ;
};return _afbeg ,_efdef ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fdeb *PdfTilingPattern )ToPdfObject ()_fbg .PdfObject {_fdeb .PdfPattern .ToPdfObject ();_ebbaa :=_fdeb .getDict ();if _fdeb .PaintType !=nil {_ebbaa .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fdeb .PaintType );};if _fdeb .TilingType !=nil {_ebbaa .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fdeb .TilingType );
};if _fdeb .BBox !=nil {_ebbaa .Set ("\u0042\u0042\u006f\u0078",_fdeb .BBox .ToPdfObject ());};if _fdeb .XStep !=nil {_ebbaa .Set ("\u0058\u0053\u0074e\u0070",_fdeb .XStep );};if _fdeb .YStep !=nil {_ebbaa .Set ("\u0059\u0053\u0074e\u0070",_fdeb .YStep );
};if _fdeb .Resources !=nil {_ebbaa .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fdeb .Resources .ToPdfObject ());};if _fdeb .Matrix !=nil {_ebbaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fdeb .Matrix );};return _fdeb ._eadbd ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_caabe ,_fdcaae :=_dde .ParsePdfTime (dateStr );if _fdcaae !=nil {return PdfDate {},_fdcaae ;};return NewPdfDateFromTime (_caabe );};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_cgee *_fbg .PdfIndirectObject ;};func _bdafe (_abeff *_fbg .PdfObjectDictionary )bool {for _ ,_geac :=range _abeff .Keys (){if _ ,_gaee :=_bacab [_geac .String ()];_gaee {return true ;
};};return false ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fbg .PdfObject ;BS _fbg .PdfObject ;LE _fbg .PdfObject ;IC _fbg .PdfObject ;LL _fbg .PdfObject ;LLE _fbg .PdfObject ;Cap _fbg .PdfObject ;IT _fbg .PdfObject ;LLO _fbg .PdfObject ;CP _fbg .PdfObject ;
Measure _fbg .PdfObject ;CO _fbg .PdfObject ;};func (_fdcdb *PdfWriter )flushWriter ()error {if _fdcdb ._cefa ==nil {_fdcdb ._cefa =_fdcdb ._cedb .Flush ();};return _fdcdb ._cefa ;};

// GetOutlineTree returns the outline tree.
func (_cecec *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cecec ._fbea };

// B returns the value of the B component of the color.
func (_gbbf *PdfColorLab )B ()float64 {return _gbbf [2]};func (_bbbd *Image )samplesAddPadding (_faebc []uint32 )[]uint32 {_fgbd :=_ced .BytesPerLine (int (_bbbd .Width ),int (_bbbd .BitsPerComponent ),_bbbd .ColorComponents )*(8/int (_bbbd .BitsPerComponent ));
_afbec :=_fgbd *int (_bbbd .Height );if len (_faebc )==_afbec {return _faebc ;};_gbgbc :=make ([]uint32 ,_afbec );_fgba :=int (_bbbd .Width )*_bbbd .ColorComponents ;for _fegd :=0;_fegd < int (_bbbd .Height );_fegd ++{_cfbg :=_fegd *int (_bbbd .Width );
_gddab :=_fegd *_fgbd ;for _ggeb :=0;_ggeb < _fgba ;_ggeb ++{_gbgbc [_gddab +_ggeb ]=_faebc [_cfbg +_ggeb ];};};return _gbgbc ;};func _gaefeb (_fgbgbc _fbg .PdfObject ,_cbfeb *PdfReader )(*OutlineDest ,error ){_cfggf ,_cbfdd :=_fbg .GetArray (_fgbgbc );
if !_cbfdd {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fddd :=_cfggf .Len ();if _fddd < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fddd );
};_fgbfa :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_edgg :=_cfggf .Get (0);if _cgfdg ,_abgec :=_fbg .GetIndirect (_edgg );_abgec {if _ ,_fgce ,_cefgb :=_cbfeb .PageFromIndirectObject (_cgfdg );_cefgb ==nil {_fgbfa .Page =int64 (_fgce -1);}else {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cgfdg );
};_fgbfa .PageObj =_cgfdg ;}else if _gebee ,_fddgb :=_fbg .GetIntVal (_edgg );_fddgb {if _gebee >=0&&_gebee < len (_cbfeb .PageList ){_fgbfa .PageObj =_cbfeb .PageList [_gebee ].GetPageAsIndirectObject ();}else {_adc .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gebee );
};_fgbfa .Page =int64 (_gebee );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_edgg );};_faffg ,_cbfdd :=_fbg .GetNameVal (_cfggf .Get (1));
if !_cbfdd {_adc .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cfggf .Get (1));
return _fgbfa ,nil ;};switch _faffg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fddd > 2{_fgbfa .Y ,_ =_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_cfggf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fddd > 2{_fgbfa .X ,_ =_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_cfggf .Get (2)));
};case "\u0058\u0059\u005a":if _fddd > 4{_fgbfa .X ,_ =_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_cfggf .Get (2)));_fgbfa .Y ,_ =_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_cfggf .Get (3)));_fgbfa .Zoom ,_ =_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_cfggf .Get (4)));
};default:_faffg ="\u0046\u0069\u0074";};_fgbfa .Mode =_faffg ;return _fgbfa ,nil ;};

// AddCRLs adds CRLs to DSS.
func (_effg *DSS )AddCRLs (crls [][]byte )([]*_fbg .PdfObjectStream ,error ){return _effg .add (&_effg .CRLs ,_effg ._fdgd ,crls );};

// ToPdfObject implements interface PdfModel.
func (_bcd *PdfAnnotationFreeText )ToPdfObject ()_fbg .PdfObject {_bcd .PdfAnnotation .ToPdfObject ();_eeb :=_bcd ._ecfe ;_ecef :=_eeb .PdfObject .(*_fbg .PdfObjectDictionary );_bcd .PdfAnnotationMarkup .appendToPdfDictionary (_ecef );_ecef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_ecef .SetIfNotNil ("\u0044\u0041",_bcd .DA );_ecef .SetIfNotNil ("\u0051",_bcd .Q );_ecef .SetIfNotNil ("\u0052\u0043",_bcd .RC );_ecef .SetIfNotNil ("\u0044\u0053",_bcd .DS );_ecef .SetIfNotNil ("\u0043\u004c",_bcd .CL );_ecef .SetIfNotNil ("\u0049\u0054",_bcd .IT );
_ecef .SetIfNotNil ("\u0042\u0045",_bcd .BE );_ecef .SetIfNotNil ("\u0052\u0044",_bcd .RD );_ecef .SetIfNotNil ("\u0042\u0053",_bcd .BS );_ecef .SetIfNotNil ("\u004c\u0045",_bcd .LE );return _eeb ;};func (_cecd *PdfReader )newPdfAnnotationRedactFromDict (_gdfc *_fbg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bfc :=PdfAnnotationRedact {};
_afg ,_effe :=_cecd .newPdfAnnotationMarkupFromDict (_gdfc );if _effe !=nil {return nil ,_effe ;};_bfc .PdfAnnotationMarkup =_afg ;_bfc .QuadPoints =_gdfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bfc .IC =_gdfc .Get ("\u0049\u0043");
_bfc .RO =_gdfc .Get ("\u0052\u004f");_bfc .OverlayText =_gdfc .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_bfc .Repeat =_gdfc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bfc .DA =_gdfc .Get ("\u0044\u0041");_bfc .Q =_gdfc .Get ("\u0051");
return &_bfc ,nil ;};

// HasFontByName checks if has font resource by name.
func (_febe *PdfPage )HasFontByName (name _fbg .PdfObjectName )bool {_ddeg ,_edaac :=_febe .Resources .Font .(*_fbg .PdfObjectDictionary );if !_edaac {return false ;};if _eaacb :=_ddeg .Get (name );_eaacb !=nil {return true ;};return false ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_fbg .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_fbg .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fbg .PdfObject )(*PdfFont ,error ){return _cfeb (fontObj ,true )};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _dcc .Time ){_ecegc .Lock ();defer _ecegc .Unlock ();_gfacbf =modifiedDate ;};func _ecdgb (_gdde _fbg .PdfObject )(*PdfFontDescriptor ,error ){_cgdfa :=&PdfFontDescriptor {};_gdde =_fbg .ResolveReference (_gdde );if _geeega ,_aabe :=_gdde .(*_fbg .PdfIndirectObject );
_aabe {_cgdfa ._geeag =_geeega ;_gdde =_geeega .PdfObject ;};_fbcb ,_dgdd :=_fbg .GetDict (_gdde );if !_dgdd {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdde );
return nil ,_fbg .ErrTypeError ;};if _ceb :=_fbcb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ceb !=nil {_cgdfa .FontName =_ceb ;}else {_adc .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_egeba ,_ :=_fbg .GetName (_cgdfa .FontName );if _fdeea :=_fbcb .Get ("\u0054\u0079\u0070\u0065");_fdeea !=nil {_gbdg ,_cbbg :=_fdeea .(*_fbg .PdfObjectName );if !_cbbg ||string (*_gbdg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_adc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fdeea ,_egeba ,_cgdfa .FontName );
};}else {_adc .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_egeba ,_cgdfa .FontName );
};_cgdfa .FontFamily =_fbcb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cgdfa .FontStretch =_fbcb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cgdfa .FontWeight =_fbcb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_cgdfa .Flags =_fbcb .Get ("\u0046\u006c\u0061g\u0073");_cgdfa .FontBBox =_fbcb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cgdfa .ItalicAngle =_fbcb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cgdfa .Ascent =_fbcb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_cgdfa .Descent =_fbcb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cgdfa .Leading =_fbcb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cgdfa .CapHeight =_fbcb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cgdfa .XHeight =_fbcb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_cgdfa .StemV =_fbcb .Get ("\u0053\u0074\u0065m\u0056");_cgdfa .StemH =_fbcb .Get ("\u0053\u0074\u0065m\u0048");_cgdfa .AvgWidth =_fbcb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cgdfa .MaxWidth =_fbcb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_cgdfa .MissingWidth =_fbcb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cgdfa .FontFile =_fbcb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cgdfa .FontFile2 =_fbcb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_cgdfa .FontFile3 =_fbcb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cgdfa .CharSet =_fbcb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cgdfa .Style =_fbcb .Get ("\u0053\u0074\u0079l\u0065");_cgdfa .Lang =_fbcb .Get ("\u004c\u0061\u006e\u0067");
_cgdfa .FD =_fbcb .Get ("\u0046\u0044");_cgdfa .CIDSet =_fbcb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cgdfa .Flags !=nil {if _cdfd ,_eage :=_fbg .GetIntVal (_cgdfa .Flags );_eage {_cgdfa ._gacb =_cdfd ;};};if _cgdfa .MissingWidth !=nil {if _dedbc ,_gacd :=_fbg .GetNumberAsFloat (_cgdfa .MissingWidth );
_gacd ==nil {_cgdfa ._ecbbd =_dedbc ;};};if _cgdfa .FontFile !=nil {_aaaee ,_gfedd :=_fdacg (_cgdfa .FontFile );if _gfedd !=nil {return _cgdfa ,_gfedd ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_aaaee );_cgdfa .fontFile =_aaaee ;
};if _cgdfa .FontFile2 !=nil {_dcgb ,_adcb :=_dg .NewFontFile2FromPdfObject (_cgdfa .FontFile2 );if _adcb !=nil {return _cgdfa ,_adcb ;};_adc .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dcgb .String ());_cgdfa ._feagd =&_dcgb ;
};return _cgdfa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fg *PdfAction )ToPdfObject ()_fbg .PdfObject {_cga :=_fg ._gc ;_faf :=_cga .PdfObject .(*_fbg .PdfObjectDictionary );_faf .Clear ();_faf .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_faf .SetIfNotNil ("\u0053",_fg .S );
_faf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fg .Next );return _cga ;};func _gfbc (_acda _fbg .PdfObject )(*PdfColorspaceDeviceN ,error ){_befg :=NewPdfColorspaceDeviceN ();if _dced ,_dcdcd :=_acda .(*_fbg .PdfIndirectObject );_dcdcd {_befg ._cgdf =_dced ;
};_acda =_fbg .TraceToDirectObject (_acda );_gggg ,_deca :=_acda .(*_fbg .PdfObjectArray );if !_deca {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _gggg .Len ()!=4&&_gggg .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_acda =_gggg .Get (0);
_ebec ,_deca :=_acda .(*_fbg .PdfObjectName );if !_deca {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ebec !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_acda =_gggg .Get (1);
_acda =_fbg .TraceToDirectObject (_acda );_aaggg ,_deca :=_acda .(*_fbg .PdfObjectArray );if !_deca {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_befg .ColorantNames =_aaggg ;_acda =_gggg .Get (2);_bgde ,_fgeb :=NewPdfColorspaceFromPdfObject (_acda );if _fgeb !=nil {return nil ,_fgeb ;};_befg .AlternateSpace =_bgde ;_gcgd ,_fgeb :=_aabg (_gggg .Get (3));if _fgeb !=nil {return nil ,_fgeb ;};_befg .TintTransform =_gcgd ;
if _gggg .Len ()==5{_caee ,_ggcb :=_bedbf (_gggg .Get (4));if _ggcb !=nil {return nil ,_ggcb ;};_befg .Attributes =_caee ;};return _befg ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_feea *PdfFont )ToPdfObject ()_fbg .PdfObject {if _feea ._fbff ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fbg .MakeNull ();
};return _feea ._fbff .ToPdfObject ();};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_adegc *PdfPattern )GetContainingPdfObject ()_fbg .PdfObject {return _adegc ._eadbd };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cgeca :=NewPdfAnnotation ();_ca :=&PdfAnnotationPolygon {};_ca .PdfAnnotation =_cgeca ;_ca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgeca .SetContext (_ca );return _ca ;};

// GetAction returns the PDF action for the annotation link.
func (_fdaa *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fdaa ._bfgf !=nil {return _fdaa ._bfgf ,nil ;};if _fdaa .A ==nil {return nil ,nil ;};if _fdaa ._cgec ==nil {return nil ,nil ;};_dcf ,_edd :=_fdaa ._cgec .loadAction (_fdaa .A );if _edd !=nil {return nil ,_edd ;
};_fdaa ._bfgf =_dcf ;return _fdaa ._bfgf ,nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _eae .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_fbg .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_fbg .MakeInteger (int64 (permission )),V :_fbg .MakeName ("\u0031\u002e\u0032")};
};func (_ddcbf *PdfWriter )AttachFile (file *EmbeddedFile )error {_bfbcg :=_ddcbf ._dafcg ;if _bfbcg ==nil {_bfbcg =_egffa ();};_fcaef :=_bfbcg .addEmbeddedFile (file );if _fcaef !=nil {return _fcaef ;};_ddcbf ._dafcg =_bfbcg ;return nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gg .ReadSeeker )(*PdfReader ,error ){const _gegdb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dggcc (rs ,&ReaderOpts {LazyLoad :true },false ,_gegdb );
};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cfgc *PdfColorspaceLab )ToPdfObject ()_fbg .PdfObject {_ggfe :=_fbg .MakeArray ();_ggfe .Append (_fbg .MakeName ("\u004c\u0061\u0062"));_dafg :=_fbg .MakeDict ();if _cfgc .WhitePoint !=nil {_dfdg :=_fbg .MakeArray (_fbg .MakeFloat (_cfgc .WhitePoint [0]),_fbg .MakeFloat (_cfgc .WhitePoint [1]),_fbg .MakeFloat (_cfgc .WhitePoint [2]));
_dafg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dfdg );}else {_adc .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cfgc .BlackPoint !=nil {_daac :=_fbg .MakeArray (_fbg .MakeFloat (_cfgc .BlackPoint [0]),_fbg .MakeFloat (_cfgc .BlackPoint [1]),_fbg .MakeFloat (_cfgc .BlackPoint [2]));_dafg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_daac );
};if _cfgc .Range !=nil {_aegdb :=_fbg .MakeArray (_fbg .MakeFloat (_cfgc .Range [0]),_fbg .MakeFloat (_cfgc .Range [1]),_fbg .MakeFloat (_cfgc .Range [2]),_fbg .MakeFloat (_cfgc .Range [3]));_dafg .Set ("\u0052\u0061\u006eg\u0065",_aegdb );};_ggfe .Append (_dafg );
if _cfgc ._cccb !=nil {_cfgc ._cccb .PdfObject =_ggfe ;return _cfgc ._cccb ;};return _ggfe ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fbg .PdfObjectStream )(*XObjectForm ,error ){_bdfdef :=&XObjectForm {};_bdfdef ._gcbcg =stream ;_gccgbf :=*(stream .PdfObjectDictionary );_addba ,_abcca :=_fbg .NewEncoderFromStream (stream );if _abcca !=nil {return nil ,_abcca ;
};_bdfdef .Filter =_addba ;if _agcde :=_gccgbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_agcde !=nil {_cgged ,_bbdf :=_agcde .(*_fbg .PdfObjectName );if !_bbdf {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_cgged !="\u0046\u006f\u0072\u006d"{_adc .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _egbbd :=_gccgbf .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_egbbd !=nil {_bdfdef .FormType =_egbbd ;};if _decfa :=_gccgbf .Get ("\u0042\u0042\u006f\u0078");_decfa !=nil {_bdfdef .BBox =_decfa ;};if _acebf :=_gccgbf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_acebf !=nil {_bdfdef .Matrix =_acebf ;};if _eagfa :=_gccgbf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eagfa !=nil {_eagfa =_fbg .TraceToDirectObject (_eagfa );_gdded ,_eeebcb :=_eagfa .(*_fbg .PdfObjectDictionary );if !_eeebcb {_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fbg .ErrTypeError ;};_gffbb ,_accdd :=NewPdfPageResourcesFromDict (_gdded );if _accdd !=nil {_adc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_accdd ;};_bdfdef .Resources =_gffbb ;_adc .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bdfdef .Resources );};_bdfdef .Group =_gccgbf .Get ("\u0047\u0072\u006fu\u0070");
_bdfdef .Ref =_gccgbf .Get ("\u0052\u0065\u0066");_bdfdef .MetaData =_gccgbf .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bdfdef .PieceInfo =_gccgbf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bdfdef .LastModified =_gccgbf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_bdfdef .StructParent =_gccgbf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bdfdef .StructParents =_gccgbf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bdfdef .OPI =_gccgbf .Get ("\u004f\u0050\u0049");
_bdfdef .OC =_gccgbf .Get ("\u004f\u0043");_bdfdef .Name =_gccgbf .Get ("\u004e\u0061\u006d\u0065");_bdfdef .Stream =stream .Stream ;return _bdfdef ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_aedg *PdfPage )GetPageDict ()*_fbg .PdfObjectDictionary {_cadg :=_aedg ._afab ;_cadg .Clear ();_cadg .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0050\u0061\u0067\u0065"));_cadg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aedg .Parent );
if _aedg .LastModified !=nil {_cadg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aedg .LastModified .ToPdfObject ());};if _aedg .Resources !=nil {_cadg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aedg .Resources .ToPdfObject ());
};if _aedg .CropBox !=nil {_cadg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_aedg .CropBox .ToPdfObject ());};if _aedg .MediaBox !=nil {_cadg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_aedg .MediaBox .ToPdfObject ());};if _aedg .BleedBox !=nil {_cadg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_aedg .BleedBox .ToPdfObject ());
};if _aedg .TrimBox !=nil {_cadg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_aedg .TrimBox .ToPdfObject ());};if _aedg .ArtBox !=nil {_cadg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_aedg .ArtBox .ToPdfObject ());};_cadg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_aedg .BoxColorInfo );
_cadg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aedg .Contents );if _aedg .Rotate !=nil {_cadg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fbg .MakeInteger (*_aedg .Rotate ));};_cadg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aedg .Group );
_cadg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_aedg .Thumb );_cadg .SetIfNotNil ("\u0042",_aedg .B );_cadg .SetIfNotNil ("\u0044\u0075\u0072",_aedg .Dur );_cadg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_aedg .Trans );_cadg .SetIfNotNil ("\u0041\u0041",_aedg .AA );
_cadg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aedg .Metadata );_cadg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aedg .PieceInfo );_cadg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aedg .StructParents );
_cadg .SetIfNotNil ("\u0049\u0044",_aedg .ID );_cadg .SetIfNotNil ("\u0050\u005a",_aedg .PZ );_cadg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_aedg .SeparationInfo );_cadg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_aedg .Tabs );
_cadg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_aedg .TemplateInstantiated );_cadg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_aedg .PresSteps );_cadg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_aedg .UserUnit );
_cadg .SetIfNotNil ("\u0056\u0050",_aedg .VP );if _aedg ._fefa !=nil {_eagdgb :=_fbg .MakeArray ();for _ ,_edfeab :=range _aedg ._fefa {if _ddgaf :=_edfeab .GetContext ();_ddgaf !=nil {_eagdgb .Append (_ddgaf .ToPdfObject ());}else {_eagdgb .Append (_edfeab .ToPdfObject ());
};};if _eagdgb .Len ()> 0{_cadg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eagdgb );};}else if _aedg .Annots !=nil {_cadg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_aedg .Annots );};return _cadg ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bee :=NewPdfAction ();_dgdc :=&PdfActionJavaScript {};_dgdc .PdfAction =_bee ;_bee .SetContext (_dgdc );return _dgdc ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gcgc *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// C returns the value of the C component of the color.
func (_cbeb *PdfColorCalRGB )C ()float64 {return _cbeb [2]};

// Items returns all children outline items.
func (_defgc *Outline )Items ()[]*OutlineItem {return _defgc .Entries };

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_ccfef *_fbg .PdfObjectDictionary ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _abc .Permissions ;Algorithm EncryptionAlgorithm ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ebgbf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ebgbf ._fefa !=nil {return _ebgbf ._fefa ,nil ;};if _ebgbf .Annots ==nil {_ebgbf ._fefa =[]*PdfAnnotation {};return nil ,nil ;};if _ebgbf ._fdfee ==nil {_ebgbf ._fefa =[]*PdfAnnotation {};
return nil ,nil ;};_eadfbb ,_beddd :=_ebgbf ._fdfee .loadAnnotations (_ebgbf .Annots );if _beddd !=nil {return nil ,_beddd ;};if _eadfbb ==nil {_ebgbf ._fefa =[]*PdfAnnotation {};};_ebgbf ._fefa =_eadfbb ;return _ebgbf ._fefa ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_abdce *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fd .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_cbgef *PdfWriter )addObject (_gdecg _fbg .PdfObject )bool {_gbggc :=_cbgef .hasObject (_gdecg );if !_gbggc {_cdfaaa :=_fbg .ResolveReferencesDeep (_gdecg ,_cbgef ._cdgdc );
if _cdfaaa !=nil {_adc .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cdfaaa );};_cbgef ._ddeeb =append (_cbgef ._ddeeb ,_gdecg );_cbgef ._gcadf [_gdecg ]=struct{}{};return true ;};return false ;
};

// Encoder returns the font's text encoder.
func (_gdbbb pdfCIDFontType0 )Encoder ()_cf .TextEncoder {return _gdbbb ._fgcaa };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_daebg :=PdfWriter {};_daebg ._gcadf =map[_fbg .PdfObject ]struct{}{};_daebg ._ddeeb =[]_fbg .PdfObject {};_daebg ._gfedad =map[_fbg .PdfObject ][]*_fbg .PdfObjectDictionary {};_daebg ._cdgdc =map[_fbg .PdfObject ]struct{}{};
_daebg ._bagfb .Major =1;_daebg ._bagfb .Minor =3;_cdcgc :=_fbg .MakeDict ();_ebgfb :=[]struct{_fbbcc _fbg .PdfObjectName ;_cgbbc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_beaacf ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gfcgdg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_begcg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ffagc ()},{"\u0054\u0069\u0074l\u0065",_bddba ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fecef ()}};
for _ ,_deeeb :=range _ebgfb {if _deeeb ._cgbbc !=""{_cdcgc .Set (_deeeb ._fbbcc ,_fbg .MakeString (_deeeb ._cgbbc ));};};if _ffcbe :=_adfbaf ();!_ffcbe .IsZero (){if _cbfebe ,_gceba :=NewPdfDateFromTime (_ffcbe );_gceba ==nil {_cdcgc .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cbfebe .ToPdfObject ());
};};if _aeafb :=_gfge ();!_aeafb .IsZero (){if _cgagb ,_dedfeb :=NewPdfDateFromTime (_aeafb );_dedfeb ==nil {_cdcgc .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cgagb .ToPdfObject ());};};_bbfeb :=_fbg .PdfIndirectObject {};_bbfeb .PdfObject =_cdcgc ;
_daebg ._abfag =&_bbfeb ;_daebg .addObject (&_bbfeb );_ecgg :=_fbg .PdfIndirectObject {};_aegbb :=_fbg .MakeDict ();_aegbb .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ecgg .PdfObject =_aegbb ;_daebg ._bgbgb =&_ecgg ;
_daebg .addObject (_daebg ._bgbgb );_eeedcb ,_bfbd :=_dfbefc ("\u0077");if _bfbd !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfbd );};_daebg ._dffef =_eeedcb ;_dgfbf :=_fbg .PdfIndirectObject {};_cgeeg :=_fbg .MakeDict ();_cgeeg .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0050\u0061\u0067e\u0073"));
_dgfdd :=_fbg .PdfObjectArray {};_cgeeg .Set ("\u004b\u0069\u0064\u0073",&_dgfdd );_cgeeg .Set ("\u0043\u006f\u0075n\u0074",_fbg .MakeInteger (0));_dgfbf .PdfObject =_cgeeg ;_daebg ._caaebg =&_dgfbf ;_daebg ._gegac =map[_fbg .PdfObject ]struct{}{};_daebg ._fefbb =[]*_fbg .PdfIndirectObject {};
_daebg .addObject (_daebg ._caaebg );_aegbb .Set ("\u0050\u0061\u0067e\u0073",&_dgfbf );_daebg ._gdgbee =_aegbb ;_adc .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ecgg );return _daebg ;};func (_defee *PdfFont )baseFields ()*fontCommon {if _defee ._fbff ==nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _defee ._fbff .baseFields ();};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_afb :=NewPdfAnnotation ();_bfd :=&PdfAnnotationText {};_bfd .PdfAnnotation =_afb ;_bfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afb .SetContext (_bfd );return _bfd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_aad *PdfReader )newPdfActionSoundFromDict (_cea *_fbg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cea .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cea .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cea .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cea .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cea .Get ("\u004d\u0069\u0078")},nil ;
};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_caecf *PdfFieldSignature )ToPdfObject ()_fbg .PdfObject {if _caecf .PdfAnnotationWidget !=nil {_caecf .PdfAnnotationWidget .ToPdfObject ();};_caecf .PdfField .ToPdfObject ();_aaeab :=_caecf ._gcad ;_dbfga :=_aaeab .PdfObject .(*_fbg .PdfObjectDictionary );
_dbfga .SetIfNotNil ("\u0046\u0054",_fbg .MakeName ("\u0053\u0069\u0067"));_dbfga .SetIfNotNil ("\u004c\u006f\u0063\u006b",_caecf .Lock );_dbfga .SetIfNotNil ("\u0053\u0056",_caecf .SV );if _caecf .V !=nil {_dbfga .SetIfNotNil ("\u0056",_caecf .V .ToPdfObject ());
};return _aaeab ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_adeg *_fbg .PdfObjectDictionary ;};

// SetDate sets the `M` field of the signature.
func (_abdde *PdfSignature )SetDate (date _dcc .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_abdde .M =_fbg .MakeString (date .Format (format ));
};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ceaeg *DSS )GetContainingPdfObject ()_fbg .PdfObject {return _ceaeg ._gcdad };

// GetContainingPdfObject implements interface PdfModel.
func (_gfcgd *PdfSignatureReference )GetContainingPdfObject ()_fbg .PdfObject {return _gfcgd ._agbdff };

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_dffa *PdfPage )GetPageAsIndirectObject ()*_fbg .PdfIndirectObject {return _dffa ._ecedg };

// ToPdfObject implements interface PdfModel.
func (_edg *PdfAnnotationCaret )ToPdfObject ()_fbg .PdfObject {_edg .PdfAnnotation .ToPdfObject ();_fgac :=_edg ._ecfe ;_geeb :=_fgac .PdfObject .(*_fbg .PdfObjectDictionary );_edg .PdfAnnotationMarkup .appendToPdfDictionary (_geeb );_geeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0043\u0061\u0072e\u0074"));
_geeb .SetIfNotNil ("\u0052\u0044",_edg .RD );_geeb .SetIfNotNil ("\u0053\u0079",_edg .Sy );return _fgac ;};func _bbfgf (_dedaa *_fbg .PdfObjectStream )(*PdfFunctionType0 ,error ){_cddf :=&PdfFunctionType0 {};_cddf ._fdbfe =_dedaa ;_fcgg :=_dedaa .PdfObjectDictionary ;
_ebbg ,_gecd :=_fbg .TraceToDirectObject (_fcgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fbg .PdfObjectArray );if !_gecd {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ebbg .Len ()< 0||_ebbg .Len ()%2!=0{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cddf .NumInputs =_ebbg .Len ()/2;_gbfbb ,_gcdda :=_ebbg .ToFloat64Array ();if _gcdda !=nil {return nil ,_gcdda ;};_cddf .Domain =_gbfbb ;_ebbg ,_gecd =_fbg .TraceToDirectObject (_fcgg .Get ("\u0052\u0061\u006eg\u0065")).(*_fbg .PdfObjectArray );if !_gecd {_adc .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ebbg .Len ()< 0||_ebbg .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cddf .NumOutputs =_ebbg .Len ()/2;_dbcdc ,_gcdda :=_ebbg .ToFloat64Array ();if _gcdda !=nil {return nil ,_gcdda ;};_cddf .Range =_dbcdc ;_ebbg ,_gecd =_fbg .TraceToDirectObject (_fcgg .Get ("\u0053\u0069\u007a\u0065")).(*_fbg .PdfObjectArray );if !_gecd {_adc .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dbeaa ,_gcdda :=_ebbg .ToIntegerArray ();
if _gcdda !=nil {return nil ,_gcdda ;};if len (_dbeaa )!=_cddf .NumInputs {_adc .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cddf .Size =_dbeaa ;_fegaa ,_gecd :=_fbg .TraceToDirectObject (_fcgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fbg .PdfObjectInteger );
if !_gecd {_adc .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fegaa !=1&&*_fegaa !=2&&*_fegaa !=4&&*_fegaa !=8&&*_fegaa !=12&&*_fegaa !=16&&*_fegaa !=24&&*_fegaa !=32{_adc .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fegaa );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cddf .BitsPerSample =int (*_fegaa );_cddf .Order =1;_ffde ,_gecd :=_fbg .TraceToDirectObject (_fcgg .Get ("\u004f\u0072\u0064e\u0072")).(*_fbg .PdfObjectInteger );
if _gecd {if *_ffde !=1&&*_ffde !=3{_adc .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ffde );return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cddf .Order =int (*_ffde );
};_ebbg ,_gecd =_fbg .TraceToDirectObject (_fcgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fbg .PdfObjectArray );if _gecd {_gacdc ,_eegd :=_ebbg .ToFloat64Array ();if _eegd !=nil {return nil ,_eegd ;};_cddf .Encode =_gacdc ;};_ebbg ,_gecd =_fbg .TraceToDirectObject (_fcgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fbg .PdfObjectArray );
if _gecd {_fagb ,_eeba :=_ebbg .ToFloat64Array ();if _eeba !=nil {return nil ,_eeba ;};_cddf .Decode =_fagb ;};_cgcd ,_gcdda :=_fbg .DecodeStream (_dedaa );if _gcdda !=nil {return nil ,_gcdda ;};_cddf ._gfeefe =_cgcd ;return _cddf ,nil ;};

// AddKChild adds a child K dictionary object.
func (_fggdf *KDict )AddKChild (kChild *KDict ){_fggdf ._cgfe =append (_fggdf ._cgfe ,&KValue {_daabc :kChild });};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ged :=NewPdfAnnotation ();_bfee :=&PdfAnnotationCaret {};_bfee .PdfAnnotation =_ged ;_bfee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ged .SetContext (_bfee );return _bfee ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ebbbg *Image )GetParamsDict ()*_fbg .PdfObjectDictionary {_bacdd :=_fbg .MakeDict ();_bacdd .Set ("\u0057\u0069\u0064t\u0068",_fbg .MakeInteger (_ebbbg .Width ));_bacdd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fbg .MakeInteger (_ebbbg .Height ));
_bacdd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fbg .MakeInteger (int64 (_ebbbg .ColorComponents )));_bacdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbg .MakeInteger (_ebbbg .BitsPerComponent ));
return _bacdd ;};func _efda (_acbd *PdfPage )map[_fbg .PdfObjectName ]_fbg .PdfObject {_cfgf :=make (map[_fbg .PdfObjectName ]_fbg .PdfObject );if _acbd .Resources ==nil {return _cfgf ;};if _acbd .Resources .Font !=nil {if _eeec ,_aeaa :=_fbg .GetDict (_acbd .Resources .Font );
_aeaa {for _ ,_ccga :=range _eeec .Keys (){_cfgf [_ccga ]=_eeec .Get (_ccga );};};};if _acbd .Resources .ExtGState !=nil {if _ggca ,_beffa :=_fbg .GetDict (_acbd .Resources .ExtGState );_beffa {for _ ,_bbgf :=range _ggca .Keys (){_cfgf [_bbgf ]=_ggca .Get (_bbgf );
};};};if _acbd .Resources .XObject !=nil {if _cgg ,_fgg :=_fbg .GetDict (_acbd .Resources .XObject );_fgg {for _ ,_fdcg :=range _cgg .Keys (){_cfgf [_fdcg ]=_cgg .Get (_fdcg );};};};if _acbd .Resources .Pattern !=nil {if _efgdc ,_gca :=_fbg .GetDict (_acbd .Resources .Pattern );
_gca {for _ ,_adcgg :=range _efgdc .Keys (){_cfgf [_adcgg ]=_efgdc .Get (_adcgg );};};};if _acbd .Resources .Shading !=nil {if _bgeg ,_afce :=_fbg .GetDict (_acbd .Resources .Shading );_afce {for _ ,_gbab :=range _bgeg .Keys (){_cfgf [_gbab ]=_bgeg .Get (_gbab );
};};};if _acbd .Resources .ProcSet !=nil {if _bbef ,_bgg :=_fbg .GetDict (_acbd .Resources .ProcSet );_bgg {for _ ,_egac :=range _bbef .Keys (){_cfgf [_egac ]=_bbef .Get (_egac );};};};if _acbd .Resources .Properties !=nil {if _efdb ,_ebbc :=_fbg .GetDict (_acbd .Resources .Properties );
_ebbc {for _ ,_dcfc :=range _efdb .Keys (){_cfgf [_dcfc ]=_efdb .Get (_dcfc );};};};return _cfgf ;};

// ToPdfObject implements interface PdfModel.
func (_agddf *PdfAnnotationSquiggly )ToPdfObject ()_fbg .PdfObject {_agddf .PdfAnnotation .ToPdfObject ();_edcg :=_agddf ._ecfe ;_edef :=_edcg .PdfObject .(*_fbg .PdfObjectDictionary );_agddf .PdfAnnotationMarkup .appendToPdfDictionary (_edef );_edef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_edef .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agddf .QuadPoints );return _edcg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fegfa *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babc :=vals [0];if _babc < 0.0||_babc > 1.0{_adc .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _babc < 0.0{_babc =0.0;}else if _babc > 1.0{_babc =1.0;};return NewPdfColorDeviceGray (_babc ),nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fgd :=NewPdfAction ();_ba :=&PdfActionResetForm {};_ba .PdfAction =_fgd ;_fgd .SetContext (_ba );return _ba ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bdee *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bdee ._acfag .(*PdfShadingPattern );};type pdfFontType3 struct{fontCommon ;_gfbfa *_fbg .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fbg .PdfObject ;Encoding _fbg .PdfObject ;FontBBox _fbg .PdfObject ;FontMatrix _fbg .PdfObject ;FirstChar _fbg .PdfObject ;LastChar _fbg .PdfObject ;Widths _fbg .PdfObject ;Resources _fbg .PdfObject ;_fbecd map[_cf .CharCode ]float64 ;_edegd _cf .TextEncoder ;
};

// Val returns the color value.
func (_fbgca *PdfColorDeviceGray )Val ()float64 {return float64 (*_fbgca )};func (_ggcefgd *Image )getSuitableEncoder ()(_fbg .StreamEncoder ,error ){var (_geefa ,_ffcdf =int (_ggcefgd .Width ),int (_ggcefgd .Height );_bggg =make (map[string ]bool );_dcbd =true ;
_afcef =false ;_eaaee =func ()*_fbg .DCTEncoder {return _fbg .NewDCTEncoder ()};_dgfc =func ()*_fbg .DCTEncoder {_abefc :=_fbg .NewDCTEncoder ();_abefc .BitsPerComponent =16;return _abefc };);for _bcfff :=0;_bcfff < _ffcdf ;_bcfff ++{for _gcaac :=0;_gcaac < _geefa ;
_gcaac ++{_fefgc ,_badfe :=_ggcefgd .ColorAt (_gcaac ,_bcfff );if _badfe !=nil {return nil ,_badfe ;};_ffgfg ,_decec ,_gdefac ,_gccfc :=_fefgc .RGBA ();if _dcbd &&(_ffgfg !=_decec ||_ffgfg !=_gdefac ||_decec !=_gdefac ){_dcbd =false ;};if !_afcef {switch _fefgc .(type ){case _ec .NRGBA :_afcef =_gccfc > 0;
};};_bggg [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_ffgfg ,_decec ,_gdefac )]=true ;if len (_bggg )> 2&&_afcef {return _dgfc (),nil ;};};};if _afcef ||len (_ggcefgd ._acag )> 0{return _fbg .NewFlateEncoder (),nil ;};if len (_bggg )<=2{_ccfbc :=_ggcefgd .ConvertToBinary ();
if _ccfbc !=nil {return nil ,_ccfbc ;};return _fbg .NewJBIG2Encoder (),nil ;};if _dcbd {return _eaaee (),nil ;};if _ggcefgd .ColorComponents ==1{if _ggcefgd .BitsPerComponent ==1{return _fbg .NewJBIG2Encoder (),nil ;}else if _ggcefgd .BitsPerComponent ==8{_agaca :=_fbg .NewDCTEncoder ();
_agaca .ColorComponents =1;return _agaca ,nil ;};}else if _ggcefgd .ColorComponents ==3{if _ggcefgd .BitsPerComponent ==8{return _eaaee (),nil ;}else if _ggcefgd .BitsPerComponent ==16{return _dgfc (),nil ;};}else if _ggcefgd .ColorComponents ==4{_bbeffe :=_dgfc ();
_bbeffe .ColorComponents =4;return _bbeffe ,nil ;};return _dgfc (),nil ;};func (_gdae *PdfReader )newPdfFieldFromIndirectObject (_ffae *_fbg .PdfIndirectObject ,_gbfb *PdfField )(*PdfField ,error ){if _acee ,_dbab :=_gdae ._dccaf .GetModelFromPrimitive (_ffae ).(*PdfField );
_dbab {return _acee ,nil ;};_agddd ,_edbaf :=_fbg .GetDict (_ffae );if !_edbaf {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_badfb :=NewPdfField ();_badfb ._gcad =_ffae ;_badfb ._gcad .PdfObject =_agddd ;if _feagb ,_eaea :=_fbg .GetName (_agddd .Get ("\u0046\u0054"));_eaea {_badfb .FT =_feagb ;};if _gbfb !=nil {_badfb .Parent =_gbfb ;};_badfb .T ,_ =_agddd .Get ("\u0054").(*_fbg .PdfObjectString );
_badfb .TU ,_ =_agddd .Get ("\u0054\u0055").(*_fbg .PdfObjectString );_badfb .TM ,_ =_agddd .Get ("\u0054\u004d").(*_fbg .PdfObjectString );_badfb .Ff ,_ =_agddd .Get ("\u0046\u0066").(*_fbg .PdfObjectInteger );_badfb .V =_agddd .Get ("\u0056");_badfb .DV =_agddd .Get ("\u0044\u0056");
_badfb .AA =_agddd .Get ("\u0041\u0041");if DA :=_agddd .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_fbg .GetString (DA );_badfb .VariableText =&VariableText {DA :DA };Q ,_ :=_agddd .Get ("\u0051").(*_fbg .PdfObjectInteger );DS ,_ :=_agddd .Get ("\u0044\u0053").(*_fbg .PdfObjectString );
RV :=_agddd .Get ("\u0052\u0056");_badfb .VariableText .Q =Q ;_badfb .VariableText .DS =DS ;_badfb .VariableText .RV =RV ;};_feaf :=_badfb .FT ;if _feaf ==nil &&_gbfb !=nil {_feaf =_gbfb .FT ;};if _feaf !=nil {switch *_feaf {case "\u0054\u0078":_dbfgg ,_bdfde :=_eaca (_agddd );
if _bdfde !=nil {return nil ,_bdfde ;};_dbfgg .PdfField =_badfb ;_badfb ._becea =_dbfgg ;case "\u0043\u0068":_fgcad ,_fdcbd :=_cacf (_agddd );if _fdcbd !=nil {return nil ,_fdcbd ;};_fgcad .PdfField =_badfb ;_badfb ._becea =_fgcad ;case "\u0042\u0074\u006e":_aegf ,_bagb :=_fafgc (_agddd );
if _bagb !=nil {return nil ,_bagb ;};_aegf .PdfField =_badfb ;_badfb ._becea =_aegf ;case "\u0053\u0069\u0067":_fbgb ,_fgcg :=_gdae .newPdfFieldSignatureFromDict (_agddd );if _fgcg !=nil {return nil ,_fgcg ;};_fbgb .PdfField =_badfb ;_badfb ._becea =_fbgb ;
default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_badfb .FT );return nil ,_fd .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _dcbf ,_eccg :=_fbg .GetName (_agddd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eccg {if *_dcbf =="\u0057\u0069\u0064\u0067\u0065\u0074"{_acgbc ,_gfcg :=_gdae .newPdfAnnotationFromIndirectObject (_ffae );if _gfcg !=nil {return nil ,_gfcg ;
};_dcaf ,_gaef :=_acgbc .GetContext ().(*PdfAnnotationWidget );if !_gaef {return nil ,_fd .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dcaf ._abg =_badfb ;_dcaf .Parent =_badfb ._gcad ;
_badfb .Annotations =append (_badfb .Annotations ,_dcaf );return _badfb ,nil ;};};_cead :=true ;if _dfbagg ,_ccbg :=_fbg .GetArray (_agddd .Get ("\u004b\u0069\u0064\u0073"));_ccbg {_fdfbe :=make ([]*_fbg .PdfIndirectObject ,0,_dfbagg .Len ());for _ ,_eebb :=range _dfbagg .Elements (){_bbac ,_fggef :=_fbg .GetIndirect (_eebb );
if !_fggef {_bfacb ,_eeff :=_fbg .GetStream (_eebb );if _eeff &&_bfacb .PdfObjectDictionary !=nil {_effbbb ,_ccagb :=_fbg .GetNameVal (_bfacb .Get ("\u0054\u0079\u0070\u0065"));if _ccagb &&_effbbb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_adc .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fd .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bfceeb ,_addfe :=_fbg .GetDict (_bbac );
if !_addfe {return nil ,ErrTypeCheck ;};if _cead {_cead =!_bdafe (_bfceeb );};_fdfbe =append (_fdfbe ,_bbac );};for _ ,_dgeb :=range _fdfbe {if _cead {_cbbc ,_adgce :=_gdae .newPdfAnnotationFromIndirectObject (_dgeb );if _adgce !=nil {_adc .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_adgce );
return nil ,_adgce ;};_dfgce ,_ebcb :=_cbbc ._cdc .(*PdfAnnotationWidget );if !_ebcb {return nil ,ErrTypeCheck ;};_dfgce ._abg =_badfb ;_badfb .Annotations =append (_badfb .Annotations ,_dfgce );}else {_efdf ,_gdfe :=_gdae .newPdfFieldFromIndirectObject (_dgeb ,_badfb );
if _gdfe !=nil {_adc .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gdfe );return nil ,_gdfe ;};_badfb .Kids =append (_badfb .Kids ,_efdf );
};};};return _badfb ,nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cabd :=&PdfColorspaceLab {};_cabd .BlackPoint =[]float64 {0.0,0.0,0.0};_cabd .Range =[]float64 {-100,100,-100,100};return _cabd ;};

// C returns the value of the cyan component of the color.
func (_cgab *PdfColorDeviceCMYK )C ()float64 {return _cgab [0]};func (_ddeff fontCommon )asPdfObjectDictionary (_bgea string )*_fbg .PdfObjectDictionary {if _bgea !=""&&_ddeff ._decd !=""&&_bgea !=_ddeff ._decd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bgea ,_ddeff );
}else if _bgea ==""&&_ddeff ._decd ==""{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ddeff );
}else if _ddeff ._decd ==""{_ddeff ._decd =_bgea ;};_eeag :=_fbg .MakeDict ();_eeag .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u006f\u006e\u0074"));_eeag .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fbg .MakeName (_ddeff ._daef ));
_eeag .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName (_ddeff ._decd ));if _ddeff ._bgbb !=nil {_eeag .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_ddeff ._bgbb .ToPdfObject ());};if _ddeff ._eadad !=nil {_eeag .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ddeff ._eadad );
}else if _ddeff ._ceadf !=nil {_becd ,_ebbd :=_ddeff ._ceadf .Stream ();if _ebbd !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_ebbd );
}else {_eeag .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_becd );};};return _eeag ;};

// ToPdfObject returns the PDF representation of the function.
func (_bfge *PdfFunctionType4 )ToPdfObject ()_fbg .PdfObject {_bgcfb :=_bfge ._dbcba ;if _bgcfb ==nil {_bfge ._dbcba =&_fbg .PdfObjectStream {};_bgcfb =_bfge ._dbcba ;};_eefe :=_fbg .MakeDict ();_eefe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fbg .MakeInteger (4));
_dffe :=&_fbg .PdfObjectArray {};for _ ,_ceaae :=range _bfge .Domain {_dffe .Append (_fbg .MakeFloat (_ceaae ));};_eefe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dffe );_bfgag :=&_fbg .PdfObjectArray {};for _ ,_caeede :=range _bfge .Range {_bfgag .Append (_fbg .MakeFloat (_caeede ));
};_eefe .Set ("\u0052\u0061\u006eg\u0065",_bfgag );if _bfge ._bfdfd ==nil &&_bfge .Program !=nil {_bfge ._bfdfd =[]byte (_bfge .Program .String ());};_eefe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_bfge ._bfdfd ))));_bgcfb .Stream =_bfge ._bfdfd ;
_bgcfb .PdfObjectDictionary =_eefe ;return _bgcfb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bgace *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_bgace .NumInputs {_adc .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _bgace ._caad ==nil {_efdbg :=_bgace .processSamples ();if _efdbg !=nil {return nil ,_efdbg ;};};_ebad :=_bgace .Encode ;if _ebad ==nil {_ebad =[]float64 {};
for _eaed :=0;_eaed < len (_bgace .Size );_eaed ++{_ebad =append (_ebad ,0);_ebad =append (_ebad ,float64 (_bgace .Size [_eaed ]-1));};};_cfgef :=_bgace .Decode ;if _cfgef ==nil {_cfgef =_bgace .Range ;};_gebced :=make ([]int ,len (x ));for _fefc :=0;_fefc < len (x );
_fefc ++{_eeggff :=x [_fefc ];_bfdb :=_ab .Min (_ab .Max (_eeggff ,_bgace .Domain [2*_fefc ]),_bgace .Domain [2*_fefc +1]);_ecae :=_ced .LinearInterpolate (_bfdb ,_bgace .Domain [2*_fefc ],_bgace .Domain [2*_fefc +1],_ebad [2*_fefc ],_ebad [2*_fefc +1]);
_dacdg :=_ab .Min (_ab .Max (_ecae ,0),float64 (_bgace .Size [_fefc ]-1));_accf :=int (_ab .Floor (_dacdg +0.5));if _accf < 0{_accf =0;}else if _accf > _bgace .Size [_fefc ]{_accf =_bgace .Size [_fefc ]-1;};_gebced [_fefc ]=_accf ;};_aecda :=_gebced [0];
for _ddddc :=1;_ddddc < _bgace .NumInputs ;_ddddc ++{_gadec :=_gebced [_ddddc ];for _agdf :=0;_agdf < _ddddc ;_agdf ++{_gadec *=_bgace .Size [_agdf ];};_aecda +=_gadec ;};_aecda *=_bgace .NumOutputs ;var _affed []float64 ;for _bgega :=0;_bgega < _bgace .NumOutputs ;
_bgega ++{_afgbc :=_aecda +_bgega ;if _afgbc >=len (_bgace ._caad ){_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_ffbad :=_bgace ._caad [_afgbc ];_gaaf :=_ced .LinearInterpolate (float64 (_ffbad ),0,_ab .Pow (2,float64 (_bgace .BitsPerSample )),_cfgef [2*_bgega ],_cfgef [2*_bgega +1]);_dagbb :=_ab .Min (_ab .Max (_gaaf ,_bgace .Range [2*_bgega ]),_bgace .Range [2*_bgega +1]);
_affed =append (_affed ,_dagbb );};return _affed ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_abfc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _abfc .UnderlyingCS .GetNumComponents ();};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_efff *PdfFont )CharcodesToUnicode (charcodes []_cf .CharCode )[]rune {_dcbc ,_ ,_ :=_efff .CharcodesToUnicodeWithStats (charcodes );return _dcbc ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_edda *_fbg .PdfIndirectObject ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_accde *PdfInfo )ToPdfObject ()_fbg .PdfObject {_ggdg :=_fbg .MakeDict ();_ggdg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_accde .Title );_ggdg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_accde .Author );_ggdg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_accde .Subject );
_ggdg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_accde .Keywords );_ggdg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_accde .Creator );_ggdg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_accde .Producer );
_ggdg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_accde .Trapped );if _accde .CreationDate !=nil {_ggdg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_accde .CreationDate .ToPdfObject ());};if _accde .ModifiedDate !=nil {_ggdg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_accde .ModifiedDate .ToPdfObject ());
};for _ ,_afbg :=range _accde ._fdgce .Keys (){_ggdg .SetIfNotNil (_afbg ,_accde ._fdgce .Get (_afbg ));};return _ggdg ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dggdf DefaultImageHandler )Read (reader _gg .Reader )(*Image ,error ){_bagba ,_ ,_daccc :=_aa .Decode (reader );if _daccc !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_daccc );
return nil ,_daccc ;};return _dggdf .NewImageFromGoImage (_bagba );};func (_fbafc *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dgfad :=_fbafc .Parent ;for _dgfad !=nil {_gdeee ,_cadec :=_fbg .GetDict (_dgfad );if !_cadec {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _bagf :=_gdeee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bagf !=nil {_ebbaf ,_bedf :=_fbg .GetDict (_bagf );
if !_bedf {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_adfg ,_deecbg :=NewPdfPageResourcesFromDict (_ebbaf );if _deecbg !=nil {return nil ,_deecbg ;};return _adfg ,nil ;
};_dgfad =_gdeee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dcebc :map[_fbg .PdfObject ]struct{}{},_dccaf :_gafad (),_eedad :_fbg .NewParserFromString (txt )};};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_fdeca :=&PdfShadingType3 {};_fdeca .PdfShading =&PdfShading {};_fdeca .PdfShading ._gedcg =_fbg .MakeIndirectObject (_fbg .MakeDict ());_fdeca .PdfShading ._bfffe =_fdeca ;return _fdeca ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_aecd *PdfColorspaceDeviceN )GetNumComponents ()int {return _aecd .ColorantNames .Len ()};

// Duplex returns the value of the duplex.
func (_cgfda *ViewerPreferences )Duplex ()Duplex {return _cgfda ._dffg };

// ToPdfObject converts date to a PDF string object.
func (_gdbbe *PdfDate )ToPdfObject ()_fbg .PdfObject {_ebgab :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gdbbe ._begdcd ,_gdbbe ._eeaag ,_gdbbe ._ffgfgg ,_gdbbe ._bdbgce ,_gdbbe ._bfaaa ,_gdbbe ._fdace ,_gdbbe ._fbgece ,_gdbbe ._fcadaa ,_gdbbe ._dcagd );
return _fbg .MakeString (_ebgab );};func (_bada *PdfShading )getShadingDict ()(*_fbg .PdfObjectDictionary ,error ){_ggbaf :=_bada ._gedcg ;if _bfaeab ,_agacac :=_ggbaf .(*_fbg .PdfIndirectObject );_agacac {_gddca ,_geccg :=_bfaeab .PdfObject .(*_fbg .PdfObjectDictionary );
if !_geccg {return nil ,_fbg .ErrTypeError ;};return _gddca ,nil ;}else if _eeac ,_feffg :=_ggbaf .(*_fbg .PdfObjectStream );_feffg {return _eeac .PdfObjectDictionary ,nil ;}else if _abccc ,_ebefd :=_ggbaf .(*_fbg .PdfObjectDictionary );_ebefd {return _abccc ,nil ;
}else {_adc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fbg .ErrTypeError ;};};func (_aeef *PdfReader )newPdfActionGotoEFromDict (_fbgc *_fbg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gfcf ,_aaff :=_dae (_fbgc .Get ("\u0046"));
if _aaff !=nil {return nil ,_aaff ;};return &PdfActionGoToE {D :_fbgc .Get ("\u0044"),NewWindow :_fbgc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fbgc .Get ("\u0054"),F :_gfcf },nil ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};

// SetDirection sets the value of the direction.
func (_ggbeg *ViewerPreferences )SetDirection (direction Direction ){_ggbeg ._defgf =direction };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fbg .PdfObject ;Mac _fbg .PdfObject ;Unix _fbg .PdfObject ;NewWindow _fbg .PdfObject ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bcag PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fbg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_feb []_fbg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_eefd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fbdef FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fbdef .Mask ()|fl .Mask ())};

// GetOCProperties returns the optional content properties PdfObject.
func (_aagb *PdfReader )GetOCProperties ()(_fbg .PdfObject ,error ){_ecgdc :=_aagb ._ffcac ;_bcabg :=_ecgdc .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bcabg =_fbg .ResolveReference (_bcabg );if !_aagb ._cgfbeb {_dfecc :=_aagb .traverseObjectData (_bcabg );
if _dfecc !=nil {return nil ,_dfecc ;};};return _bcabg ,nil ;};func (_cdbf *PdfReader )newPdfAnnotationPolygonFromDict (_acgf *_fbg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cdcf :=PdfAnnotationPolygon {};_defc ,_daea :=_cdbf .newPdfAnnotationMarkupFromDict (_acgf );
if _daea !=nil {return nil ,_daea ;};_cdcf .PdfAnnotationMarkup =_defc ;_cdcf .Vertices =_acgf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cdcf .LE =_acgf .Get ("\u004c\u0045");_cdcf .BS =_acgf .Get ("\u0042\u0053");_cdcf .IC =_acgf .Get ("\u0049\u0043");
_cdcf .BE =_acgf .Get ("\u0042\u0045");_cdcf .IT =_acgf .Get ("\u0049\u0054");_cdcf .Measure =_acgf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cdcf ,nil ;};

// GetMCID returns the MCID of the KValue.
func (_gdacf *KValue )GetMCID ()*int {return _gdacf ._dcffg };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dgbf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};var ErrColorOutOfRange =_fd .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bfef *Image )GetSamples ()[]uint32 {_ebdd :=_gba .ResampleBytes (_bfef .Data ,int (_bfef .BitsPerComponent ));if _bfef .BitsPerComponent < 8{_ebdd =_bfef .samplesTrimPadding (_ebdd );};_degda :=int (_bfef .Width )*int (_bfef .Height )*_bfef .ColorComponents ;
if len (_ebdd )< _degda {_adc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ebdd ),_degda );
return _ebdd ;}else if len (_ebdd )> _degda {_adc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ebdd ),_degda );
_ebdd =_ebdd [:_degda ];};return _ebdd ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ImageToRGB convert an indexed image to RGB.
func (_dcca *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_dcca .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_edbb :=_ced .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._acag ,img ._beggbb );_eacd :=_gba .NewReader (img .getBase ());_bega :=_gba .NewWriter (_edbb );var (_ffcaf uint32 ;_accc int ;_aegdc error ;);for {_ffcaf ,_aegdc =_eacd .ReadSample ();
if _aegdc ==_gg .EOF {break ;}else if _aegdc !=nil {return img ,_aegdc ;};_accc =int (_ffcaf );_adc .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_accc ,N ,len (_dcca ._dfab ));
if (_accc +1)*N > len (_dcca ._dfab ){_accc =len (_dcca ._dfab )/N -1;_adc .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_accc );if _accc < 0{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ebed :=_accc *N ;_ebed < (_accc +1)*N ;_ebed ++{if _aegdc =_bega .WriteSample (uint32 (_dcca ._dfab [_ebed ]));_aegdc !=nil {return img ,_aegdc ;};};};return _dcca .Base .ImageToRGB (_cgdba (&_edbb ));};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_dccae *PdfFieldButton )ToPdfObject ()_fbg .PdfObject {_dccae .PdfField .ToPdfObject ();_caecd :=_dccae ._gcad ;_gadb :=_caecd .PdfObject .(*_fbg .PdfObjectDictionary );_gadb .Set ("\u0046\u0054",_fbg .MakeName ("\u0042\u0074\u006e"));if _dccae .Opt !=nil {_gadb .Set ("\u004f\u0070\u0074",_dccae .Opt );
};return _caecd ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gcg :=NewPdfAnnotation ();_gdc :=&PdfAnnotationProjection {};_gdc .PdfAnnotation =_gcg ;_gdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcg .SetContext (_gdc );return _gdc ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bfbe ,_gcdf :=_dg .NewStdFontByName (HelveticaName );if !_gcdf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dfbef :=_fbbeb (_bfbe );return &PdfFont {_fbff :&_dfbef };};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dfcec *PdfReader )GetObjectNums ()[]int {return _dfcec ._eedad .GetObjectNums ()};

// IsValid checks if the given pdf output intent type is valid.
func (_bbgcg PdfOutputIntentType )IsValid ()bool {return _bbgcg >=PdfOutputIntentTypeA1 &&_bbgcg <=PdfOutputIntentTypeX ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bbfbf *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fbg .GetNumberAsFloat (_bbfbf .Descent );};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_acg :=NewPdfAnnotation ();_abce :=&PdfAnnotationLine {};_abce .PdfAnnotation =_acg ;_abce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acg .SetContext (_abce );return _abce ;};func _bedbf (_gbbff _fbg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_eadfb :=&PdfColorspaceDeviceNAttributes {};
var _ffbe *_fbg .PdfObjectDictionary ;switch _cdfe :=_gbbff .(type ){case *_fbg .PdfIndirectObject :_eadfb ._fdce =_cdfe ;var _ffacd bool ;_ffbe ,_ffacd =_cdfe .PdfObject .(*_fbg .PdfObjectDictionary );if !_ffacd {_adc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fbg .PdfObjectDictionary :_ffbe =_cdfe ;case *_fbg .PdfObjectReference :_fggc :=_cdfe .Resolve ();return _bedbf (_fggc );default:_adc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfdb :=_ffbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfdb !=nil {_babg ,_eadfd :=_fbg .TraceToDirectObject (_cfdb ).(*_fbg .PdfObjectName );if !_eadfd {_adc .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eadfb .Subtype =_babg ;};if _agddg :=_ffbe .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_agddg !=nil {_eadfb .Colorants =_agddg ;};if _faaf :=_ffbe .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_faaf !=nil {_eadfb .Process =_faaf ;};if _agbd :=_ffbe .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_agbd !=nil {_eadfb .MixingHints =_agbd ;};return _eadfb ,nil ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _fbg .PdfObjectName ;};func _dggcc (_eabb _gg .ReadSeeker ,_feedg *ReaderOpts ,_fgaaa bool ,_ggabb string )(*PdfReader ,error ){if _feedg ==nil {_feedg =NewReaderOpts ();};_cecb :="";if _eeaf ,_dbff :=_eabb .(*_aef .File );
_dbff {_cecb =_eeaf .Name ();};_gbefa :=*_feedg ;_gafgf :=&PdfReader {_fbgef :_eabb ,_dcebc :map[_fbg .PdfObject ]struct{}{},_dccaf :_gafad (),_cgfbeb :_feedg .LazyLoad ,_ecbed :_feedg .ComplianceMode ,_gbfgc :_fgaaa ,_gcdfe :&_gbefa ,_ebea :_cecb };_afcg ,_ggdb :=_dfbefc ("\u0072");
if _ggdb !=nil {return nil ,_ggdb ;};_ggdb =_eef .Track (_afcg ,_ggabb ,_gafgf ._ebea );if _ggdb !=nil {return nil ,_ggdb ;};_gafgf ._ccgbe =_afcg ;var _aaaba *_fbg .PdfParser ;if !_gafgf ._ecbed {if _feedg !=nil {_ffgdg :=_fbg .ParserOpts {RelaxedMode :_feedg .RelaxedMode };
_aaaba ,_ggdb =_fbg .NewParserWithOpts (_eabb ,_ffgdg );}else {_aaaba ,_ggdb =_fbg .NewParser (_eabb );};}else {_aaaba ,_ggdb =_fbg .NewCompliancePdfParser (_eabb );};if _ggdb !=nil {return nil ,_ggdb ;};_gafgf ._eedad =_aaaba ;_gadea ,_ggdb :=_gafgf .IsEncrypted ();
if _ggdb !=nil {return nil ,_ggdb ;};if !_gadea {_ggdb =_gafgf .loadStructure ();if _ggdb !=nil {return nil ,_ggdb ;};}else if _fgaaa {_babfg ,_fbbced :=_gafgf .Decrypt ([]byte (_feedg .Password ));if _fbbced !=nil {return nil ,_fbbced ;};if !_babfg {return nil ,_fd .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gafgf ._gegfdd =make (map[*PdfReader ]*PdfReader );_gafgf ._eegc =make ([]*PdfReader ,_aaaba .GetRevisionNumber ());return _gafgf ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_cdace *PdfPageResources )ToPdfObject ()_fbg .PdfObject {_cefcb :=_cdace ._abcdeb ;_cefcb .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cdace .ExtGState );if _cdace ._dagbf !=nil {_cdace .ColorSpace =_cdace ._dagbf .ToPdfObject ();
};_cefcb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cdace .ColorSpace );_cefcb .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cdace .Pattern );_cefcb .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cdace .Shading );
_cefcb .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cdace .XObject );_cefcb .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cdace .Font );_cefcb .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cdace .ProcSet );_cefcb .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cdace .Properties );
return _cefcb ;};

// GetFillImage get attached model.Image in push button.
func (_aabd *PdfFieldButton )GetFillImage ()*Image {if _aabd .IsPush (){return _aabd ._egae ;};return nil ;};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_aaeaf *PdfPage )GetStructParentsKey ()int {if _ggced ,_bbgdgc :=_fbg .GetIntVal (_aaeaf .StructParents );_bbgdgc {return _ggced ;};return -1;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_eeedge *PdfColorspaceICCBased )GetContainingPdfObject ()_fbg .PdfObject {return _eeedge ._fdfgb };func (_agecb *PdfPage )removeXObj (_ggddc *_fbg .PdfObjectDictionary ,_gaeegc _fbg .PdfObjectName ){_ggddc .Remove (_gaeegc );_ggadd :=_fbg .NewFlateEncoder ();
_acddc :=_agecb .GetContentStreamObjs ();_fdae :=_fbg .MakeArray ();for _ ,_dfgabg :=range _acddc {_beee ,_ :=_fgdae (_dfgabg );if _gdg .Contains (_beee ,_gaeegc .String ()){_feegd :=_gdg .Index (_beee ,_gaeegc .String ());_ecbe :=_gdg .LastIndex (_beee [:_feegd ],"\u0071");
_gbcac :=_gdg .Index (_beee [_feegd :],"\u0051")+_feegd +1;if _ecbe >=0&&_gbcac >=0{var _dbbed _gdg .Builder ;_dbbed .WriteString (_beee [:_ecbe ]);_dbbed .WriteString (_beee [_gbcac :]);_aacde ,_gfgc :=_fbg .MakeStream ([]byte (_dbbed .String ()),_ggadd );
if _gfgc ==nil {_fdae .Append (_aacde );continue ;};};};_fdae .Append (_dfgabg );};_agecb .Contents =_fdae ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_cgfe :make ([]*KValue ,0),_ebegf :-1}};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fgfdd *PdfReader )GetIndirectObjectByNumber (number int )(_fbg .PdfObject ,error ){_aadgf ,_feec :=_fgfdd ._eedad .LookupByNumber (number );return _aadgf ,_feec ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fbg .PdfObject ;FontFamily _fbg .PdfObject ;FontStretch _fbg .PdfObject ;FontWeight _fbg .PdfObject ;Flags _fbg .PdfObject ;FontBBox _fbg .PdfObject ;ItalicAngle _fbg .PdfObject ;Ascent _fbg .PdfObject ;Descent _fbg .PdfObject ;
Leading _fbg .PdfObject ;CapHeight _fbg .PdfObject ;XHeight _fbg .PdfObject ;StemV _fbg .PdfObject ;StemH _fbg .PdfObject ;AvgWidth _fbg .PdfObject ;MaxWidth _fbg .PdfObject ;MissingWidth _fbg .PdfObject ;FontFile _fbg .PdfObject ;FontFile2 _fbg .PdfObject ;
FontFile3 _fbg .PdfObject ;CharSet _fbg .PdfObject ;_gacb int ;_ecbbd float64 ;*fontFile ;_feagd *_dg .TtfType ;

// Additional entries for CIDFonts
Style _fbg .PdfObject ;Lang _fbg .PdfObject ;FD _fbg .PdfObject ;CIDSet _fbg .PdfObject ;_geeag *_fbg .PdfIndirectObject ;};func _gafad ()*modelManager {_aebccc :=modelManager {};_aebccc ._eggac =map[PdfModel ]_fbg .PdfObject {};_aebccc ._ebada =map[_fbg .PdfObject ]PdfModel {};
_aebccc ._ccddd =_g .RWMutex {};_aebccc ._bgdee =_g .RWMutex {};return &_aebccc ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_agbe :=NewPdfAnnotation ();_gaf :=&PdfAnnotationPopup {};_gaf .PdfAnnotation =_agbe ;_agbe .SetContext (_gaf );return _gaf ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_beefc *PdfPageResources )GetXObjectImageByName (keyName _fbg .PdfObjectName )(*XObjectImage ,error ){_geagb ,_dgfgf :=_beefc .GetXObjectByName (keyName );if _geagb ==nil {return nil ,nil ;};if _dgfgf !=XObjectTypeImage {return nil ,_fd .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cfcca ,_abaae :=NewXObjectImageFromStream (_geagb );if _abaae !=nil {return nil ,_abaae ;};return _cfcca ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_fgdcc *_fbg .PdfIndirectObject ;_caga _cf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fbg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fbg .PdfObject ;W _fbg .PdfObject ;DW2 _fbg .PdfObject ;W2 _fbg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fbg .PdfObject ;_ecgd map[_cf .CharCode ]float64 ;_afaed float64 ;_geaa map[rune ]int ;};func (_dfcde *PdfWriter )adjustXRefAffectedVersion (_ceffbd bool ){if _ceffbd &&_dfcde ._bagfb .Major ==1&&_dfcde ._bagfb .Minor < 5{_dfcde ._bagfb .Minor =5;
};};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ffgf *PdfFieldButton )IsPush ()bool {return _ffgf .GetType ()==ButtonTypePush };

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// AddChild adds a child object.
func (_ddff *KDict )AddChild (kv *KValue ){_ddff ._cgfe =append (_ddff ._cgfe ,kv )};func (_affe *PdfReader )newPdfAnnotationTextFromDict (_cbf *_fbg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bacd :=PdfAnnotationText {};_cdbe ,_feee :=_affe .newPdfAnnotationMarkupFromDict (_cbf );
if _feee !=nil {return nil ,_feee ;};_bacd .PdfAnnotationMarkup =_cdbe ;_bacd .Open =_cbf .Get ("\u004f\u0070\u0065\u006e");_bacd .Name =_cbf .Get ("\u004e\u0061\u006d\u0065");_bacd .State =_cbf .Get ("\u0053\u0074\u0061t\u0065");_bacd .StateModel =_cbf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_bacd ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fbg .PdfObject ;V _fbg .PdfObject ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_eddd :=&PdfColorspaceDeviceN {};return _eddd };

// GetXObjectByName gets XObject by name.
func (_dccb *PdfPage )GetXObjectByName (name _fbg .PdfObjectName )(_fbg .PdfObject ,bool ){_cgbed ,_aaegb :=_dccb .Resources .XObject .(*_fbg .PdfObjectDictionary );if !_aaegb {return nil ,false ;};if _bdga :=_cgbed .Get (name );_bdga !=nil {return _bdga ,true ;
};return nil ,false ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _fbg .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_cedbg :=NewXObjectImage ();if lazy {_cfccbc ,_gccef :=UpdateXObjectImageFromImage (_cedbg ,img ,cs ,encoder );if _gccef !=nil {return nil ,_gccef ;
};_cfccbc .ToPdfObject ();_gccef =_cfccbc ._cacd .MakeLazy ();if _gccef !=nil {return nil ,_gccef ;};_cfccbc .Stream =nil ;return _cfccbc ,nil ;};return UpdateXObjectImageFromImage (_cedbg ,img ,cs ,encoder );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_abcc *pdfFontSimple )SetEncoder (encoder _cf .TextEncoder ){_abcc ._efbad =encoder };

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_abeeg *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_abcbd :=NewPdfWriter ();_abcbd .SetFileName (_abeeg ._ebea );if opts ==nil {opts =&ReaderToWriterOpts {};};_cfga ,_gdeag :=_abeeg .GetNumPages ();if _gdeag !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdeag );
return nil ,_gdeag ;};for _fggeg :=1;_fggeg <=_cfga ;_fggeg ++{_ddeb ,_ebeaa :=_abeeg .GetPage (_fggeg );if _ebeaa !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebeaa );return nil ,_ebeaa ;};if opts .PageProcessCallback !=nil {_ebeaa =opts .PageProcessCallback (_fggeg ,_ddeb );
if _ebeaa !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebeaa );return nil ,_ebeaa ;};}else if opts .PageCallback !=nil {opts .PageCallback (_fggeg ,_ddeb );};_ebeaa =_abcbd .AddPage (_ddeb );if _ebeaa !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebeaa );
return nil ,_ebeaa ;};};_abcbd ._bagfb =_abeeg .PdfVersion ();if !opts .SkipInfo {_dccc ,_faeeg :=_abeeg .GetPdfInfo ();if _faeeg !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_faeeg );}else {_abcbd ._abfag .PdfObject =_dccc .ToPdfObject ();
};};if !opts .SkipMetadata {if _ebfde :=_abeeg ._ffcac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ebfde !=nil {if _gcba :=_abcbd .SetCatalogMetadata (_ebfde );_gcba !=nil {return nil ,_gcba ;};};};if !opts .SkipMarkInfo {if _efdec ,_ababg :=_abeeg .GetCatalogMarkInfo ();
_ababg {if _gbgf :=_abcbd .SetCatalogMarkInfo (_efdec );_gbgf !=nil {return nil ,_gbgf ;};};};if !opts .SkipAcroForm {_babge :=_abcbd .SetForms (_abeeg .AcroForm );if _babge !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_babge );
return nil ,_babge ;};};if !opts .SkipViewerPreferences {if _cdfc ,_gefgd :=_abeeg .GetCatalogViewerPreferences ();_gefgd {if _ffdbg :=_abcbd .SetCatalogViewerPreferences (_cdfc );_ffdbg !=nil {return nil ,_ffdbg ;};};};if !opts .SkipLanguage {if _gcecc ,_edeba :=_abeeg .GetCatalogLanguage ();
_edeba {if _agfgf :=_abcbd .SetCatalogLanguage (_gcecc );_agfgf !=nil {return nil ,_agfgf ;};};};if !opts .SkipOutlines {_abcbd .AddOutlineTree (_abeeg .GetOutlineTree ());};if !opts .SkipOCProperties {_fgadf ,_bgfgb :=_abeeg .GetOCProperties ();if _bgfgb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgfgb );
}else {_bgfgb =_abcbd .SetOCProperties (_fgadf );if _bgfgb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgfgb );};};};if !opts .SkipPageLabels {_dgbgg ,_beffgf :=_abeeg .GetPageLabels ();if _beffgf !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beffgf );
}else {_beffgf =_abcbd .SetPageLabels (_dgbgg );if _beffgf !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beffgf );};};};if !opts .SkipNamedDests {_eecbb ,_beegb :=_abeeg .GetNamedDestinations ();if _beegb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beegb );
}else {_beegb =_abcbd .SetNamedDestinations (_eecbb );if _beegb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beegb );};};};if !opts .SkipNameDictionary {_ebgdc ,_bgcfc :=_abeeg .GetNameDictionary ();if _bgcfc !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgcfc );
}else {_bgcfc =_abcbd .SetNameDictionary (_ebgdc );if _bgcfc !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgcfc );};};};_fdgbc ,_bffgf :=_abeeg .GetCatalogStructTreeRoot ();if _bffgf {_dgfcfd :=_abcbd .SetCatalogStructTreeRoot (_fdgbc );
if _dgfcfd !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgfcfd );};};if !opts .SkipRotation &&_abeeg .Rotate !=nil {if _beaef :=_abcbd .SetRotation (*_abeeg .Rotate );_beaef !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beaef );
};};return &_abcbd ,nil ;};func _bcbf (_eaaef *_fbg .PdfObjectDictionary )*VRI {_efab ,_ :=_fbg .GetString (_eaaef .Get ("\u0054\u0055"));_ggeeb ,_ :=_fbg .GetString (_eaaef .Get ("\u0054\u0053"));return &VRI {Cert :_feadg (_eaaef .Get ("\u0043\u0065\u0072\u0074")),OCSP :_feadg (_eaaef .Get ("\u004f\u0043\u0053\u0050")),CRL :_feadg (_eaaef .Get ("\u0043\u0052\u004c")),TU :_efab ,TS :_ggeeb };
};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_bea *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _gdfeac (_caebf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_caebf }};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bgbgb *_fbg .PdfIndirectObject ;_caaebg *_fbg .PdfIndirectObject ;_gegac map[_fbg .PdfObject ]struct{};_fefbb []*_fbg .PdfIndirectObject ;_ddeeb []_fbg .PdfObject ;_gcadf map[_fbg .PdfObject ]struct{};_edaba []*_fbg .PdfIndirectObject ;
_egaaaf *PdfOutlineTreeNode ;_gdgbee *_fbg .PdfObjectDictionary ;_ggbb []_fbg .PdfObject ;_abfag *_fbg .PdfIndirectObject ;_cedb *_a .Writer ;_fbdga int64 ;_cefa error ;_dbbgb *_fbg .PdfCrypt ;_gdeaa *_fbg .PdfObjectDictionary ;_edcbd *_fbg .PdfIndirectObject ;
_bacgfa *_fbg .PdfObjectArray ;_bagfb _fbg .Version ;_cecc *bool ;_gfedad map[_fbg .PdfObject ][]*_fbg .PdfObjectDictionary ;_cdcaa *PdfAcroForm ;_dafcg *Names ;_eagae Optimizer ;_fffcf StandardApplier ;_baecgd map[int ]crossReference ;_ggaaa int64 ;ObjNumOffset int ;
_aceab bool ;_fegde _fbg .XrefTable ;_ffbf int64 ;_eceb int64 ;_ccafa map[_fbg .PdfObject ]int64 ;_cdgdc map[_fbg .PdfObject ]struct{};_dffef string ;_dbefd string ;_cdead []*PdfOutputIntent ;_bcgag bool ;_gebgg ,_aecaf string ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_bedg ,_gbfd :=_aef .ReadFile (path );if _gbfd !=nil {return nil ,_gbfd ;};_aacca :=_bca .Detect (_bedg );_efad :=_fc .Sum (_bedg );_addfa :=&EmbeddedFile {Name :_ee .Base (path ),Content :_bedg ,FileType :_aacca .String (),Hash :_ae .EncodeToString (_efad [:])};
return _addfa ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bcab :=NewPdfAnnotation ();_dcfa :=&PdfAnnotationFileAttachment {};_dcfa .PdfAnnotation =_bcab ;_dcfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcab .SetContext (_dcfa );return _dcfa ;
};func (_cfcbc *LTV )enable (_bddg ,_acaf []*_dd .Certificate ,_cgcag string )error {_bebde ,_baeed ,_daefga :=_cfcbc .buildCertChain (_bddg ,_acaf );if _daefga !=nil {return _daefga ;};_agcg ,_daefga :=_cfcbc .getCerts (_bebde );if _daefga !=nil {return _daefga ;
};var _eaecc ,_agfdc [][]byte ;if _cfcbc .OCSPClient !=nil {_eaecc ,_daefga =_cfcbc .getOCSPs (_bebde ,_baeed );if _daefga !=nil {return _daefga ;};};if _cfcbc .CRLClient !=nil {_agfdc ,_daefga =_cfcbc .getCRLs (_bebde );if _daefga !=nil {return _daefga ;
};};_cacfa :=_cfcbc ._aeded ;_cada ,_daefga :=_cacfa .AddCerts (_agcg );if _daefga !=nil {return _daefga ;};_caba ,_daefga :=_cacfa .AddOCSPs (_eaecc );if _daefga !=nil {return _daefga ;};_fggcf ,_daefga :=_cacfa .AddCRLs (_agfdc );if _daefga !=nil {return _daefga ;
};if _cgcag !=""{_cacfa .VRI [_cgcag ]=&VRI {Cert :_cada ,OCSP :_caba ,CRL :_fggcf };};_cfcbc ._bdbe .SetDSS (_cacfa );return nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gg .ReadSeeker )(*PdfFont ,error ){const _gegbd =_cf .CharCode (32);const _acgda =_cf .CharCode (255);_eacac ,_agaaa :=_gg .ReadAll (r );if _agaaa !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_agaaa );
return nil ,_agaaa ;};_fbbc ,_agaaa :=_dg .TtfParse (_fb .NewReader (_eacac ));if _agaaa !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_agaaa );
return nil ,_agaaa ;};_bgbf :=&pdfFontSimple {_gaeda :make (map[_cf .CharCode ]float64 ),fontCommon :fontCommon {_decd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bgbf ._efbad =_cf .NewWinAnsiEncoder ();_bgbf ._daef =_fbbc .PostScriptName ;_bgbf .FirstChar =_fbg .MakeInteger (int64 (_gegbd ));
_bgbf .LastChar =_fbg .MakeInteger (int64 (_acgda ));_dcafg :=1000.0/float64 (_fbbc .UnitsPerEm );if len (_fbbc .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_deaag :=_dcafg *float64 (_fbbc .Widths [0]);_dfcaf :=make ([]float64 ,0,_acgda -_gegbd +1);for _ggdfb :=_gegbd ;_ggdfb <=_acgda ;_ggdfb ++{_cfggdg ,_gbbag :=_bgbf .Encoder ().CharcodeToRune (_ggdfb );if !_gbbag {_adc .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ggdfb );
_dfcaf =append (_dfcaf ,_deaag );continue ;};_edbff ,_gacc :=_fbbc .Chars [_cfggdg ];if !_gacc {_adc .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dfcaf =append (_dfcaf ,_deaag );
continue ;};_gdfcb :=_dcafg *float64 (_fbbc .Widths [_edbff ]);_dfcaf =append (_dfcaf ,_gdfcb );};_bgbf .Widths =_fbg .MakeIndirectObject (_fbg .MakeArrayFromFloats (_dfcaf ));if len (_dfcaf )< int (_acgda -_gegbd +1){_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dfcaf ),255-32+1);
return nil ,_fbg .ErrRangeError ;};for _cfdc :=_gegbd ;_cfdc <=_acgda ;_cfdc ++{_bgbf ._gaeda [_cfdc ]=_dfcaf [_cfdc -_gegbd ];};_bgbf .Encoding =_fbg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_efbge :=&PdfFontDescriptor {};
_efbge .FontName =_fbg .MakeName (_fbbc .PostScriptName );_efbge .Ascent =_fbg .MakeFloat (_dcafg *float64 (_fbbc .TypoAscender ));_efbge .Descent =_fbg .MakeFloat (_dcafg *float64 (_fbbc .TypoDescender ));_efbge .CapHeight =_fbg .MakeFloat (_dcafg *float64 (_fbbc .CapHeight ));
_efbge .FontBBox =_fbg .MakeArrayFromFloats ([]float64 {_dcafg *float64 (_fbbc .Xmin ),_dcafg *float64 (_fbbc .Ymin ),_dcafg *float64 (_fbbc .Xmax ),_dcafg *float64 (_fbbc .Ymax )});_efbge .ItalicAngle =_fbg .MakeFloat (_fbbc .ItalicAngle );_efbge .MissingWidth =_fbg .MakeFloat (_dcafg *float64 (_fbbc .Widths [0]));
_bcga ,_agaaa :=_fbg .MakeStream (_eacac ,_fbg .NewFlateEncoder ());if _agaaa !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_agaaa );
return nil ,_agaaa ;};_bcga .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fbg .MakeInteger (int64 (len (_eacac ))));_efbge .FontFile2 =_bcga ;if _fbbc .Bold {_efbge .StemV =_fbg .MakeInteger (120);}else {_efbge .StemV =_fbg .MakeInteger (70);
};_ddde :=_aebd ;if _fbbc .IsFixedPitch {_ddde |=_fadgg ;};if _fbbc .ItalicAngle !=0{_ddde |=_ffec ;};_efbge .Flags =_fbg .MakeInteger (int64 (_ddde ));_bgbf ._bgbb =_efbge ;_cgfbe :=&PdfFont {_fbff :_bgbf };return _cgfbe ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_feffa *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _feffa .MediaBox !=nil {return _feffa .MediaBox ,nil ;};_ddbbd :=_feffa .Parent ;for _ddbbd !=nil {_becdbd ,_bcea :=_fbg .GetDict (_ddbbd );if !_bcea {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fdggcd :=_becdbd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fdggcd !=nil {_dfea ,_bceg :=_fbg .GetArray (_fdggcd );if !_bceg {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_befabg ,_ddfdg :=NewPdfRectangle (*_dfea );if _ddfdg !=nil {return nil ,_ddfdg ;};return _befabg ,nil ;};_ddbbd =_becdbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fd .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_gab *PdfBorderStyle )ToPdfObject ()_fbg .PdfObject {_ebgg :=_fbg .MakeDict ();if _gab ._dabe !=nil {if _deeb ,_cad :=_gab ._dabe .(*_fbg .PdfIndirectObject );_cad {_deeb .PdfObject =_ebgg ;};};_ebgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _gab .W !=nil {_ebgg .Set ("\u0057",_fbg .MakeFloat (*_gab .W ));};if _gab .S !=nil {_ebgg .Set ("\u0053",_fbg .MakeName (_gab .S .GetPdfName ()));};if _gab .D !=nil {_ebgg .Set ("\u0044",_fbg .MakeArrayFromIntegers (*_gab .D ));};if _gab ._dabe !=nil {return _gab ._dabe ;
};return _ebgg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gdgb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdfb ,_eace :=_fbg .GetNumbersAsFloat (objects );
if _eace !=nil {return nil ,_eace ;};return _gdgb .ColorFromFloats (_bdfb );};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_aabf :=Permissions {};_aabf .DocMDP =docMdp ;_baeda :=_fbg .MakeDict ();_baeda .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_aabf ._ccfef =_baeda ;return &_aabf ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fbg .PdfObject ;};func (_ecgee *PdfReader )newPdfSignatureFromIndirect (_gbgd *_fbg .PdfIndirectObject )(*PdfSignature ,error ){_dedfd ,_dfae :=_gbgd .PdfObject .(*_fbg .PdfObjectDictionary );if !_dfae {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fade ,_gcbd :=_ecgee ._dccaf .GetModelFromPrimitive (_gbgd ).(*PdfSignature );_gcbd {return _fade ,nil ;};_dfee :=&PdfSignature {};_dfee ._dedcf =_gbgd ;_dfee .Type ,_ =_fbg .GetName (_dedfd .Get ("\u0054\u0079\u0070\u0065"));
_dfee .Filter ,_dfae =_fbg .GetName (_dedfd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_dfae {_adc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dfee .SubFilter ,_ =_fbg .GetName (_dedfd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_dfee .Contents ,_dfae =_fbg .GetString (_dedfd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_dfae {_adc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _agggc ,_fdcbb :=_fbg .GetArray (_dedfd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fdcbb {_dfee .Reference =_fbg .MakeArray ();for _ ,_baecg :=range _agggc .Elements (){_gdebd ,_efag :=_fbg .GetDict (_baecg );
if !_efag {_adc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_adabf ,_ceaebf :=_ecgee .newPdfSignatureReferenceFromDict (_gdebd );if _ceaebf !=nil {return nil ,_ceaebf ;};_dfee .Reference .Append (_adabf .ToPdfObject ());};};_dfee .Cert =_dedfd .Get ("\u0043\u0065\u0072\u0074");_dfee .ByteRange ,_ =_fbg .GetArray (_dedfd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_dfee .Changes ,_ =_fbg .GetArray (_dedfd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_dfee .Name ,_ =_fbg .GetString (_dedfd .Get ("\u004e\u0061\u006d\u0065"));_dfee .M ,_ =_fbg .GetString (_dedfd .Get ("\u004d"));_dfee .Location ,_ =_fbg .GetString (_dedfd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_dfee .Reason ,_ =_fbg .GetString (_dedfd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_dfee .ContactInfo ,_ =_fbg .GetString (_dedfd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_dfee .R ,_ =_fbg .GetInt (_dedfd .Get ("\u0052"));
_dfee .V ,_ =_fbg .GetInt (_dedfd .Get ("\u0056"));_dfee .PropBuild ,_ =_fbg .GetDict (_dedfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_dfee .PropAuthTime ,_ =_fbg .GetInt (_dedfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_dfee .PropAuthType ,_ =_fbg .GetName (_dedfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_ecgee ._dccaf .Register (_gbgd ,_dfee );return _dfee ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _gg .ReadSeeker )(*CompliancePdfReader ,error ){const _edada ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_dedge ,_gdbe :=_dggcc (rs ,&ReaderOpts {ComplianceMode :true },false ,_edada );
if _gdbe !=nil {return nil ,_gdbe ;};return &CompliancePdfReader {PdfReader :_dedge },nil ;};

// AddRefChild adds a child reference object.
func (_edgag *KDict )AddRefChild (kChild *_fbg .PdfObjectDictionary ){_edgag ._cgfe =append (_edgag ._cgfe ,&KValue {_cfcg :kChild });};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_adeg :_fbg .MakeDict ()};
};func _aabg (_cdca _fbg .PdfObject )(PdfFunction ,error ){_cdca =_fbg .ResolveReference (_cdca );if _gfcb ,_baecc :=_cdca .(*_fbg .PdfObjectStream );_baecc {_efge :=_gfcb .PdfObjectDictionary ;_aegdee ,_dbdbf :=_efge .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fbg .PdfObjectInteger );
if !_dbdbf {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_aegdee ==0{return _bbfgf (_gfcb );}else if *_aegdee ==4{return _ddgdaf (_gfcb );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _adffg ,_gedd :=_cdca .(*_fbg .PdfIndirectObject );
_gedd {_acac ,_bcdcd :=_adffg .PdfObject .(*_fbg .PdfObjectDictionary );if !_bcdcd {_adc .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ddcgf ,_bcdcd :=_acac .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fbg .PdfObjectInteger );
if !_bcdcd {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_ddcgf ==2{return _adgeg (_adffg );}else if *_ddcgf ==3{return _eedae (_adffg );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _abdfa ,_fadc :=_cdca .(*_fbg .PdfObjectDictionary );
_fadc {_ebbdf ,_eeeee :=_abdfa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fbg .PdfObjectInteger );if !_eeeee {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ebbdf ==2{return _adgeg (_abdfa );}else if *_ebbdf ==3{return _eedae (_abdfa );
}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_adc .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cdca );
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dgc :=NewPdfAction ();_cc :=&PdfActionGoTo {};_cc .PdfAction =_dgc ;_dgc .SetContext (_cc );return _cc ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eebea *PdfAcroForm )ToPdfObject ()_fbg .PdfObject {_fcba :=_eebea ._bdef ;_ebebe :=_fcba .PdfObject .(*_fbg .PdfObjectDictionary );if _eebea .Fields !=nil {_feccd :=_fbg .PdfObjectArray {};for _ ,_gdece :=range *_eebea .Fields {_fegeg :=_gdece .GetContext ();
if _fegeg !=nil {_feccd .Append (_fegeg .ToPdfObject ());}else {_feccd .Append (_gdece .ToPdfObject ());};};_ebebe .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_feccd );};if _eebea .NeedAppearances !=nil {_ebebe .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eebea .NeedAppearances );
}else {if _bffae :=_ebebe .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bffae !=nil {_ebebe .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _eebea .SigFlags !=nil {_ebebe .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eebea .SigFlags );
};if _eebea .CO !=nil {_ebebe .Set ("\u0043\u004f",_eebea .CO );};if _eebea .DR !=nil {_ebebe .Set ("\u0044\u0052",_eebea .DR .ToPdfObject ());};if _eebea .DA !=nil {_ebebe .Set ("\u0044\u0041",_eebea .DA );};if _eebea .Q !=nil {_ebebe .Set ("\u0051",_eebea .Q );
};if _eebea .XFA !=nil {_ebebe .Set ("\u0058\u0046\u0041",_eebea .XFA );};if _eebea .ADBEEchoSign !=nil {_ebebe .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_eebea .ADBEEchoSign );};return _fcba ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_ccdg *PdfInfo )AddCustomInfo (name string ,value string )error {if _ccdg ._fdgce ==nil {_ccdg ._fdgce =_fbg .MakeDict ();};if _ ,_bddb :=_ceaa [name ];_bddb {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ccdg ._fdgce .SetIfNotNil (*_fbg .MakeName (name ),_fbg .MakeString (value ));return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_faadd *PdfFieldChoice )ToPdfObject ()_fbg .PdfObject {_faadd .PdfField .ToPdfObject ();_fcea :=_faadd ._gcad ;_dgbb :=_fcea .PdfObject .(*_fbg .PdfObjectDictionary );_dgbb .Set ("\u0046\u0054",_fbg .MakeName ("\u0043\u0068"));if _faadd .Opt !=nil {_dgbb .Set ("\u004f\u0070\u0074",_faadd .Opt );
};if _faadd .TI !=nil {_dgbb .Set ("\u0054\u0049",_faadd .TI );};if _faadd .I !=nil {_dgbb .Set ("\u0049",_faadd .I );};return _fcea ;};

// SetPage directly sets the page object.
func (_feddc *KDict )SetPage (page *_fbg .PdfIndirectObject ){_feddc .Pg =page };func (_daaa *pdfCIDFontType2 )baseFields ()*fontCommon {return &_daaa .fontCommon };

// IsEncrypted returns true if the PDF file is encrypted.
func (_aecbe *PdfReader )IsEncrypted ()(bool ,error ){return _aecbe ._eedad .IsEncrypted ()};func _fddaf (_caeeb *_fbg .PdfObjectDictionary ,_fffaf *fontCommon )(*pdfFontType0 ,error ){_ccgg ,_beaf :=_fbg .GetArray (_caeeb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_beaf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fffaf );
return nil ,_fbg .ErrRangeError ;};if _ccgg .Len ()!=1{_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ccgg .Len ());return nil ,_fbg .ErrRangeError ;
};_dacb ,_ccafc :=_cfeb (_ccgg .Get (0),false );if _ccafc !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ccafc ,_fffaf );
return nil ,_ccafc ;};_gefdbe :=_caeeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fdega :="";_abfaf :=_gdfeac (_fffaf );_abfaf .DescendantFont =_dacb ;switch _dgdda :=_gefdbe .(type ){case *_fbg .PdfObjectName :_fdega ,_beaf =_fbg .GetNameVal (_gefdbe );
if _beaf {if _fdega =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_fdega =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_abfaf ._cgbbg =_cf .NewIdentityTextEncoder (_fdega );}else if _ed .IsPredefinedCMap (_fdega ){_abfaf ._fdgee ,_ccafc =_ed .LoadPredefinedCMap (_fdega );
if _ccafc !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fdega ,_ccafc );
};}else {_adc .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_fdega );};};case *_fbg .PdfObjectStream :if _abfaf ._eadad ==nil {_aaag ,_ceacf :=_ed .NewCIDSystemInfo (_dgdda .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ceacf !=nil {_adc .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_ceacf );};_cgdfad :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_aaag .Registry ,_aaag .Ordering );
if _ed .IsPredefinedCMap (_cgdfad ){_abfaf ._fdgee ,_ceacf =_ed .LoadPredefinedCMap (_cgdfad );if _ceacf !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cgdfad ,_ceacf );
};}else {_cgdfad =_dgdda .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_cefdd ,_eeae :=_fbg .DecodeStream (_dgdda );if _eeae !=nil {_adc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_eeae );
return _abfaf ,_eeae ;};if _affa :=_cgdfad =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_cgdfad =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_affa {_abfaf ._fdgee ,_eeae =_ed .LoadCmapFromData (_cefdd ,_affa );
if _eeae !=nil {_adc .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_eeae ,string (_cefdd ));
return _abfaf ,_eeae ;};_adaf :=make (map[_ed .CharCode ]rune ,256);for _cegeb :=0x00;_cegeb <=0xFF;_cegeb ++{_adaf [_ed .CharCode (_cegeb )]=rune (_cegeb );};_abfaf ._ceadf =_ed .NewToUnicodeCMap (_adaf );};};};};if _aefgg :=_dacb .baseFields ()._ceadf ;
_aefgg !=nil {if _dcfaf :=_aefgg .Name ();_dcfaf =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dcfaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dcfaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dcfaf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_abfaf ._cgbbg =_cf .NewCMapEncoder (_fdega ,_abfaf ._fdgee ,_aefgg );
};};return _abfaf ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fded *PdfColorspaceLab )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abca ,_eggc :=_fbg .GetNumbersAsFloat (objects );
if _eggc !=nil {return nil ,_eggc ;};return _fded .ColorFromFloats (_abca );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fbg .PdfObject ;BS _fbg .PdfObject ;};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bbeg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if _bbeg .Alternate ==nil {if _bbeg .N ==1{_cabc :=NewPdfColorspaceDeviceGray ();return _cabc .ColorFromPdfObjects (objects );}else if _bbeg .N ==3{_fgag :=NewPdfColorspaceDeviceRGB ();
return _fgag .ColorFromPdfObjects (objects );}else if _bbeg .N ==4{_fgca :=NewPdfColorspaceDeviceCMYK ();return _fgca .ColorFromPdfObjects (objects );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bbeg .Alternate .ColorFromPdfObjects (objects );};

// ToPdfObject implements interface PdfModel.
func (_fdef *PdfAnnotationStrikeOut )ToPdfObject ()_fbg .PdfObject {_fdef .PdfAnnotation .ToPdfObject ();_gfee :=_fdef ._ecfe ;_geaf :=_gfee .PdfObject .(*_fbg .PdfObjectDictionary );_fdef .PdfAnnotationMarkup .appendToPdfDictionary (_geaf );_geaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_geaf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fdef .QuadPoints );return _gfee ;};

// ToPdfObject implements interface PdfModel.
func (_fdf *PdfActionSound )ToPdfObject ()_fbg .PdfObject {_fdf .PdfAction .ToPdfObject ();_adf :=_fdf ._gc ;_agg :=_adf .PdfObject .(*_fbg .PdfObjectDictionary );_agg .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeSound )));_agg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fdf .Sound );
_agg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fdf .Volume );_agg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fdf .Synchronous );_agg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fdf .Repeat );_agg .SetIfNotNil ("\u004d\u0069\u0078",_fdf .Mix );
return _adf ;};

// ToInteger convert to an integer format.
func (_bafg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gdbb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gdbb *_bafg .R ()),uint32 (_gdbb *_bafg .G ()),uint32 (_gdbb *_bafg .B ())};};type pdfFontType0 struct{fontCommon ;_fccec *_fbg .PdfIndirectObject ;
_cgbbg _cf .TextEncoder ;Encoding _fbg .PdfObject ;DescendantFont *PdfFont ;_fdgee *_ed .CMap ;};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_cdddc *PdfWriter )SetCatalogViewerPreferences (pref _fbg .PdfObject )error {if pref ==nil {_cdddc ._gdgbee .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _eccbf ,_dbdeeg :=pref .(*_fbg .PdfObjectReference );
_dbdeeg {pref =_eccbf .Resolve ();if pref ==nil {_cdddc ._gdgbee .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};if _ ,_fccbbd :=pref .(*_fbg .PdfIndirectObject );_fccbbd {_cdddc .addObject (pref );
};_cdddc ._gdgbee .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfdbg *PdfShadingType1 )ToPdfObject ()_fbg .PdfObject {_gfdbg .PdfShading .ToPdfObject ();_edgc ,_eeabc :=_gfdbg .getShadingDict ();if _eeabc !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfdbg .Domain !=nil {_edgc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfdbg .Domain );};if _gfdbg .Matrix !=nil {_edgc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfdbg .Matrix );};if _gfdbg .Function !=nil {if len (_gfdbg .Function )==1{_edgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdbg .Function [0].ToPdfObject ());
}else {_addc :=_fbg .MakeArray ();for _ ,_aceda :=range _gfdbg .Function {_addc .Append (_aceda .ToPdfObject ());};_edgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_addc );};};return _gfdbg ._gedcg ;};func _gfge ()_dcc .Time {_ecegc .Lock ();
defer _ecegc .Unlock ();return _gfacbf };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_aafcc *PdfPage )GetContainingPdfObject ()_fbg .PdfObject {return _aafcc ._ecedg };

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cbcb :=NewPdfAnnotation ();_ebe :=&PdfAnnotationCircle {};_ebe .PdfAnnotation =_cbcb ;_ebe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbcb .SetContext (_ebe );return _ebe ;};func (_ccdc *PdfAppender )updateObjectsDeep (_adad _fbg .PdfObject ,_gfgb map[_fbg .PdfObject ]struct{}){if _gfgb ==nil {_gfgb =map[_fbg .PdfObject ]struct{}{};
};if _ ,_cdce :=_gfgb [_adad ];_cdce ||_adad ==nil {return ;};_gfgb [_adad ]=struct{}{};_dbdc :=_fbg .ResolveReferencesDeep (_adad ,_ccdc ._fdc );if _dbdc !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbdc );};switch _dafc :=_adad .(type ){case *_fbg .PdfIndirectObject :switch {case _dafc .GetParser ()==_ccdc ._gafe ._eedad :return ;
case _dafc .GetParser ()==_ccdc .Reader ._eedad :_gcbbd ,_ :=_ccdc ._gafe .GetIndirectObjectByNumber (int (_dafc .ObjectNumber ));_add ,_cbee :=_gcbbd .(*_fbg .PdfIndirectObject );if _cbee &&_add !=nil {_cbed :=string (_dafc .PdfObject .Write ());if _add .PdfObject !=_dafc .PdfObject &&string (_add .PdfObject .Write ())!=_cbed {if _gdg .Contains (_cbed ,"\u002f\u0053\u0069\u0067")&&_gdg .Contains (_cbed ,"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_ccdc .addNewObject (_adad );_ccdc ._daec [_adad ]=_dafc .ObjectNumber ;};};default:_ccdc .addNewObject (_adad );};_ccdc .updateObjectsDeep (_dafc .PdfObject ,_gfgb );case *_fbg .PdfObjectArray :for _ ,_fgge :=range _dafc .Elements (){_ccdc .updateObjectsDeep (_fgge ,_gfgb );
};case *_fbg .PdfObjectDictionary :for _ ,_agfb :=range _dafc .Keys (){_ccdc .updateObjectsDeep (_dafc .Get (_agfb ),_gfgb );};case *_fbg .PdfObjectStreams :if _dafc .GetParser ()!=_ccdc ._gafe ._eedad {for _ ,_dbcd :=range _dafc .Elements (){_ccdc .updateObjectsDeep (_dbcd ,_gfgb );
};};case *_fbg .PdfObjectStream :switch {case _dafc .GetParser ()==_ccdc ._gafe ._eedad :return ;case _dafc .GetParser ()==_ccdc .Reader ._eedad :if _ebbf ,_gebc :=_ccdc ._gafe ._eedad .LookupByReference (_dafc .PdfObjectReference );_gebc ==nil {var _cgae bool ;
if _aacgf ,_gffb :=_fbg .GetStream (_ebbf );_gffb &&_fb .Equal (_aacgf .Stream ,_dafc .Stream ){_cgae =true ;};if _bbgg ,_deaf :=_fbg .GetDict (_ebbf );_cgae &&_deaf {_cgae =string (_bbgg .Write ())==string (_dafc .PdfObjectDictionary .Write ());};if _cgae {return ;
};};if _dafc .ObjectNumber !=0{_ccdc ._daec [_adad ]=_dafc .ObjectNumber ;};default:if _ ,_fdec :=_ccdc ._gbed [_adad ];!_fdec {_ccdc .addNewObject (_adad );};};_ccdc .updateObjectsDeep (_dafc .PdfObjectDictionary ,_gfgb );};};

// MergePageWith appends page content to source Pdf file page content.
func (_aefg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ffge :=pageNum -1;var _acdec *PdfPage ;for _gggcf ,_gebce :=range _aefg ._efgd {if _gggcf ==_ffge {_acdec =_gebce ;};};if _acdec ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _acdec ._ecedg !=nil &&_acdec ._ecedg .GetParser ()==_aefg ._gafe ._eedad {_acdec =_acdec .Duplicate ();_aefg ._efgd [_ffge ]=_acdec ;};page =page .Duplicate ();_cbeaf (page );_ffb :=_efda (_acdec );_afda :=_efda (page );_cbcg :=make (map[_fbg .PdfObjectName ]_fbg .PdfObjectName );
for _baccc :=range _afda {if _ ,_bfgb :=_ffb [_baccc ];_bfgb {for _bcfe :=1;true ;_bcfe ++{_cbaa :=_fbg .PdfObjectName (string (_baccc )+_eg .Itoa (_bcfe ));if _ ,_cgbd :=_ffb [_cbaa ];!_cgbd {_cbcg [_baccc ]=_cbaa ;break ;};};};};_bbdge ,_cfd :=page .GetContentStreams ();
if _cfd !=nil {return _cfd ;};_fcfb ,_cfd :=_acdec .GetContentStreams ();if _cfd !=nil {return _cfd ;};for _afbe ,_fbfb :=range _bbdge {for _gccc ,_cfcbf :=range _cbcg {_fbfb =_gdg .Replace (_fbfb ,"\u002f"+string (_gccc ),"\u002f"+string (_cfcbf ),-1);
};_bbdge [_afbe ]=_fbfb ;};_fcfb =append (_fcfb ,_bbdge ...);if _dfba :=_acdec .SetContentStreams (_fcfb ,_fbg .NewFlateEncoder ());_dfba !=nil {return _dfba ;};_acdec ._fefa =append (_acdec ._fefa ,page ._fefa ...);if _acdec .Resources ==nil {_acdec .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_acdec .Resources .Font =_aefg .mergeResources (_acdec .Resources .Font ,page .Resources .Font ,_cbcg );_acdec .Resources .XObject =_aefg .mergeResources (_acdec .Resources .XObject ,page .Resources .XObject ,_cbcg );_acdec .Resources .Properties =_aefg .mergeResources (_acdec .Resources .Properties ,page .Resources .Properties ,_cbcg );
if _acdec .Resources .ProcSet ==nil {_acdec .Resources .ProcSet =page .Resources .ProcSet ;};_acdec .Resources .Shading =_aefg .mergeResources (_acdec .Resources .Shading ,page .Resources .Shading ,_cbcg );_acdec .Resources .ExtGState =_aefg .mergeResources (_acdec .Resources .ExtGState ,page .Resources .ExtGState ,_cbcg );
};_gegf ,_cfd :=_acdec .GetMediaBox ();if _cfd !=nil {return _cfd ;};_ggdc ,_cfd :=page .GetMediaBox ();if _cfd !=nil {return _cfd ;};var _ggdf bool ;if _gegf .Llx > _ggdc .Llx {_gegf .Llx =_ggdc .Llx ;_ggdf =true ;};if _gegf .Lly > _ggdc .Lly {_gegf .Lly =_ggdc .Lly ;
_ggdf =true ;};if _gegf .Urx < _ggdc .Urx {_gegf .Urx =_ggdc .Urx ;_ggdf =true ;};if _gegf .Ury < _ggdc .Ury {_gegf .Ury =_ggdc .Ury ;_ggdf =true ;};if _ggdf {_acdec .MediaBox =_gegf ;};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aaa *PdfAction )GetContainingPdfObject ()_fbg .PdfObject {return _aaa ._gc };

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_agfdg *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _agfdg ._egega };

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aebc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbbb ,_gcdd :=_fbg .GetNumbersAsFloat (objects );
if _gcdd !=nil {return nil ,_gcdd ;};return _aebc .ColorFromFloats (_gcbbb );};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ggde *_fbg .PdfIndirectObject ;};func (_gggc *PdfReader )newPdfAnnotationLinkFromDict (_edfb *_fbg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_affc :=PdfAnnotationLink {};
_affc .A =_edfb .Get ("\u0041");_affc .Dest =_edfb .Get ("\u0044\u0065\u0073\u0074");_affc .H =_edfb .Get ("\u0048");_affc .PA =_edfb .Get ("\u0050\u0041");_affc .QuadPoints =_edfb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_affc .BS =_edfb .Get ("\u0042\u0053");
return &_affc ,nil ;};func (_dgag *PdfAppender )mergeResources (_caeg ,_dbgd _fbg .PdfObject ,_fcad map[_fbg .PdfObjectName ]_fbg .PdfObjectName )_fbg .PdfObject {if _dbgd ==nil &&_caeg ==nil {return nil ;};if _dbgd ==nil {return _caeg ;};_edeg ,_ffgb :=_fbg .GetDict (_dbgd );
if !_ffgb {return _caeg ;};if _caeg ==nil {_efcbf :=_fbg .MakeDict ();_efcbf .Merge (_edeg );return _dbgd ;};_dggg ,_ffgb :=_fbg .GetDict (_caeg );if !_ffgb {_adc .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dggg =_fbg .MakeDict ();};for _ ,_befb :=range _edeg .Keys (){if _acgdd ,_cadbg :=_fcad [_befb ];_cadbg {_dggg .Set (_acgdd ,_edeg .Get (_befb ));}else {_dggg .Set (_befb ,_edeg .Get (_befb ));};};return _dggg ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_eedad *_fbg .PdfParser ;_bceac _fbg .PdfObject ;_bgca *_fbg .PdfIndirectObject ;_gceb *_fbg .PdfObjectDictionary ;_bdad []*_fbg .PdfIndirectObject ;PageList []*PdfPage ;_ecgcb int ;_ffcac *_fbg .PdfObjectDictionary ;_fbea *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dccdf *Permissions ;_gegfdd map[*PdfReader ]*PdfReader ;_eegc []*PdfReader ;_dccaf *modelManager ;_cgfbeb bool ;_dcebc map[_fbg .PdfObject ]struct{};_fbgef _gg .ReadSeeker ;_ccgbe string ;_ecbed bool ;_ebea string ;
_gcdfe *ReaderOpts ;_gbfgc bool ;};

// ToInteger convert to an integer format.
func (_efgf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bgfb :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_bgfb *_efgf .Val ());};

// DecodeArray returns the component range values for the Separation colorspace.
func (_dfdgd *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ebecd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ebecd .RunesToCharcodeBytes ([]rune (str ));};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _dcc .Time ;ModTime _dcc .Time ;};func _ddgdaf (_bfca *_fbg .PdfObjectStream )(*PdfFunctionType4 ,error ){_egcdc :=&PdfFunctionType4 {};
_egcdc ._dbcba =_bfca ;_cgfc :=_bfca .PdfObjectDictionary ;_efgfa ,_adbfd :=_fbg .TraceToDirectObject (_cgfc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fbg .PdfObjectArray );if !_adbfd {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _efgfa .Len ()%2!=0{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_abfaa ,_dfgbc :=_efgfa .ToFloat64Array ();if _dfgbc !=nil {return nil ,_dfgbc ;};_egcdc .Domain =_abfaa ;_efgfa ,_adbfd =_fbg .TraceToDirectObject (_cgfc .Get ("\u0052\u0061\u006eg\u0065")).(*_fbg .PdfObjectArray );
if _adbfd {if _efgfa .Len ()< 0||_efgfa .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cacad ,_fgega :=_efgfa .ToFloat64Array ();if _fgega !=nil {return nil ,_fgega ;};_egcdc .Range =_cacad ;
};_cceda ,_dfgbc :=_fbg .DecodeStream (_bfca );if _dfgbc !=nil {return nil ,_dfgbc ;};_egcdc ._bfdfd =_cceda ;_dacc :=_ac .NewPSParser (_cceda );_edfee ,_dfgbc :=_dacc .Parse ();if _dfgbc !=nil {return nil ,_dfgbc ;};_egcdc .Program =_edfee ;return _egcdc ,nil ;
};var _ggcefg =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func _ffafd (_bbefb *_fbg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bfdcf :=PdfShadingType7 {};_bdagg :=_bbefb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdagg ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gddde ,_ggece :=_bdagg .(*_fbg .PdfObjectInteger );if !_ggece {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdagg );
return nil ,_fbg .ErrTypeError ;};_bfdcf .BitsPerCoordinate =_gddde ;_bdagg =_bbefb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdagg ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gddde ,_ggece =_bdagg .(*_fbg .PdfObjectInteger );if !_ggece {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdagg );
return nil ,_fbg .ErrTypeError ;};_bfdcf .BitsPerComponent =_gddde ;_bdagg =_bbefb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdagg ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gddde ,_ggece =_bdagg .(*_fbg .PdfObjectInteger );if !_ggece {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdagg );
return nil ,_fbg .ErrTypeError ;};_bfdcf .BitsPerComponent =_gddde ;_bdagg =_bbefb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdagg ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggbgf ,_ggece :=_bdagg .(*_fbg .PdfObjectArray );if !_ggece {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdagg );
return nil ,_fbg .ErrTypeError ;};_bfdcf .Decode =_ggbgf ;if _fcbbca :=_bbefb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fcbbca !=nil {_bfdcf .Function =[]PdfFunction {};if _bbagb ,_aeaab :=_fcbbca .(*_fbg .PdfObjectArray );_aeaab {for _ ,_ggfcf :=range _bbagb .Elements (){_affbd ,_geafd :=_aabg (_ggfcf );
if _geafd !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geafd );return nil ,_geafd ;};_bfdcf .Function =append (_bfdcf .Function ,_affbd );
};}else {_egad ,_badaf :=_aabg (_fcbbca );if _badaf !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_badaf );return nil ,_badaf ;
};_bfdcf .Function =append (_bfdcf .Function ,_egad );};};return &_bfdcf ,nil ;};func _feadg (_edae _fbg .PdfObject )[]*_fbg .PdfObjectStream {if _edae ==nil {return nil ;};_dgbd ,_aeedg :=_fbg .GetArray (_edae );if !_aeedg ||_dgbd .Len ()==0{return nil ;
};_bbagcc :=make ([]*_fbg .PdfObjectStream ,0,_dgbd .Len ());for _ ,_bgegf :=range _dgbd .Elements (){if _daggb ,_ebdec :=_fbg .GetStream (_bgegf );_ebdec {_bbagcc =append (_bbagcc ,_daggb );};};return _bbagcc ;};func (_dddab *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_dbg :=NewPdfAnnotation ();_ebc :=&PdfAnnotationWatermark {};_ebc .PdfAnnotation =_dbg ;_dbg .SetContext (_ebc );return _ebc ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gbac *Outline )ToPdfOutline ()*PdfOutline {_dcfg :=NewPdfOutline ();var _efcd []*PdfOutlineItem ;var _gffag int64 ;var _fdcge *PdfOutlineItem ;for _ ,_adgfe :=range _gbac .Entries {_gface ,_adfc :=_adgfe .ToPdfOutlineItem ();_gface .Parent =&_dcfg .PdfOutlineTreeNode ;
if _fdcge !=nil {_fdcge .Next =&_gface .PdfOutlineTreeNode ;_gface .Prev =&_fdcge .PdfOutlineTreeNode ;};_efcd =append (_efcd ,_gface );_gffag +=_adfc ;_fdcge =_gface ;};_ccgee :=int64 (len (_efcd ));_gffag +=_ccgee ;if _ccgee > 0{_dcfg .First =&_efcd [0].PdfOutlineTreeNode ;
_dcfg .Last =&_efcd [_ccgee -1].PdfOutlineTreeNode ;_dcfg .Count =&_gffag ;};return _dcfg ;};

// SetContext sets the sub action (context).
func (_cg *PdfAction )SetContext (ctx PdfModel ){_cg ._ddb =ctx };func (_adgg *PdfAcroForm )filteredFields (_deagg FieldFilterFunc ,_fdafe bool )[]*PdfField {if _adgg ==nil {return nil ;};return _aebbd (_adgg .Fields ,_deagg ,_fdafe );};

// GetRevisionNumber returns the version of the current Pdf document
func (_agcgb *PdfReader )GetRevisionNumber ()int {return _agcgb ._eedad .GetRevisionNumber ()};func _dae (_dab _fbg .PdfObject )(*PdfFilespec ,error ){if _dab ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dab );};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_afbfd *VRI )ToPdfObject ()*_fbg .PdfObjectDictionary {_aacaa :=_fbg .MakeDict ();_aacaa .SetIfNotNil (_fbg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bbcgb (_afbfd .Cert ));_aacaa .SetIfNotNil (_fbg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bbcgb (_afbfd .OCSP ));
_aacaa .SetIfNotNil (_fbg .PdfObjectName ("\u0043\u0052\u004c"),_bbcgb (_afbfd .CRL ));_aacaa .SetIfNotNil ("\u0054\u0055",_afbfd .TU );_aacaa .SetIfNotNil ("\u0054\u0053",_afbfd .TS );return _aacaa ;};func (_acdgg *PdfReader )buildOutlineTree (_abfg _fbg .PdfObject ,_egaag *PdfOutlineTreeNode ,_aafd *PdfOutlineTreeNode ,_dccdfd map[_fbg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dccdfd ==nil {_dccdfd =map[_fbg .PdfObject ]struct{}{};
};_dccdfd [_abfg ]=struct{}{};_ccbda ,_bafda :=_abfg .(*_fbg .PdfIndirectObject );if !_bafda {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_abfg );
};_acab ,_gcdce :=_ccbda .PdfObject .(*_fbg .PdfObjectDictionary );if !_gcdce {return nil ,nil ,_fd .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_acab ,_ccbda ,_ccbda );
if _eceaf :=_acab .Get ("\u0054\u0069\u0074l\u0065");_eceaf !=nil {_bbad ,_ddccc :=_acdgg .newPdfOutlineItemFromIndirectObject (_ccbda );if _ddccc !=nil {return nil ,nil ,_ddccc ;};_bbad .Parent =_egaag ;_bbad .Prev =_aafd ;_efgag :=_fbg .ResolveReference (_acab .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_gddf :=_dccdfd [_efgag ];_efgag !=nil &&_efgag !=_ccbda &&!_gddf {if !_fbg .IsNullObject (_efgag ){_gdefaa ,_dddca ,_geafb :=_acdgg .buildOutlineTree (_efgag ,&_bbad .PdfOutlineTreeNode ,nil ,_dccdfd );if _geafb !=nil {_adc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_geafb );
}else {_bbad .First =_gdefaa ;_bbad .Last =_dddca ;};};};_bfdafe :=_fbg .ResolveReference (_acab .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cfde :=_dccdfd [_bfdafe ];_bfdafe !=nil &&_bfdafe !=_ccbda &&!_cfde {if !_fbg .IsNullObject (_bfdafe ){_bbfda ,_aegdg ,_cece :=_acdgg .buildOutlineTree (_bfdafe ,_egaag ,&_bbad .PdfOutlineTreeNode ,_dccdfd );
if _cece !=nil {_adc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_cece );
}else {_bbad .Next =_bbfda ;return &_bbad .PdfOutlineTreeNode ,_aegdg ,nil ;};};};return &_bbad .PdfOutlineTreeNode ,&_bbad .PdfOutlineTreeNode ,nil ;};_dfec ,_fbfba :=_fddcd (_ccbda );if _fbfba !=nil {return nil ,nil ,_fbfba ;};_dfec .Parent =_egaag ;
if _adbdd :=_acab .Get ("\u0046\u0069\u0072s\u0074");_adbdd !=nil {_adbdd =_fbg .ResolveReference (_adbdd );if _ ,_gcafd :=_dccdfd [_adbdd ];_adbdd !=nil &&_adbdd !=_ccbda &&!_gcafd {_efcf :=_fbg .TraceToDirectObject (_adbdd );if _ ,_dagc :=_efcf .(*_fbg .PdfObjectNull );
!_dagc &&_efcf !=nil {_febab ,_ceab ,_bcaef :=_acdgg .buildOutlineTree (_adbdd ,&_dfec .PdfOutlineTreeNode ,nil ,_dccdfd );if _bcaef !=nil {_adc .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bcaef );
}else {_dfec .First =_febab ;_dfec .Last =_ceab ;};};};};return &_dfec .PdfOutlineTreeNode ,&_dfec .PdfOutlineTreeNode ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_fafce *PdfReader )CheckAccessRights (password []byte )(bool ,_abc .Permissions ,error ){return _fafce ._eedad .CheckAccessRights (password );};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ebeff *Image )AlphaMap (mapFunc AlphaMapFunc ){for _aadee ,_gfae :=range _ebeff ._acag {_ebeff ._acag [_aadee ]=mapFunc (_gfae );};};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fbg .PdfObject ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bcffc *PdfColorspaceCalGray )ToPdfObject ()_fbg .PdfObject {_acef :=&_fbg .PdfObjectArray {};_acef .Append (_fbg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_abfa :=_fbg .MakeDict ();if _bcffc .WhitePoint !=nil {_abfa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fbg .MakeArray (_fbg .MakeFloat (_bcffc .WhitePoint [0]),_fbg .MakeFloat (_bcffc .WhitePoint [1]),_fbg .MakeFloat (_bcffc .WhitePoint [2])));
}else {_adc .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bcffc .BlackPoint !=nil {_abfa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fbg .MakeArray (_fbg .MakeFloat (_bcffc .BlackPoint [0]),_fbg .MakeFloat (_bcffc .BlackPoint [1]),_fbg .MakeFloat (_bcffc .BlackPoint [2])));
};_abfa .Set ("\u0047\u0061\u006dm\u0061",_fbg .MakeFloat (_bcffc .Gamma ));_acef .Append (_abfa );if _bcffc ._abcgd !=nil {_bcffc ._abcgd .PdfObject =_acef ;return _bcffc ._abcgd ;};return _acef ;};

// Encoder returns the font's text encoder.
func (_gdcca pdfFontType3 )Encoder ()_cf .TextEncoder {return _gdcca ._edegd };

// GetContentStreams returns the content stream as an array of strings.
func (_fcdbe *PdfPage )GetContentStreams ()([]string ,error ){_dgdccc :=_fcdbe .GetContentStreamObjs ();var _affdf []string ;for _ ,_gefdf :=range _dgdccc {_aecbb ,_dbcde :=_fgdae (_gefdf );if _dbcde !=nil {return nil ,_dbcde ;};_affdf =append (_affdf ,_aecbb );
};return _affdf ,nil ;};func (_cbdg *PdfPage )flattenFieldsWithOpts (_aceee FieldAppearanceGenerator ,_ccdd *FieldFlattenOpts ,_dcdb map[*PdfAnnotation ]bool )error {var _cdeac []*PdfAnnotation ;if _aceee !=nil {if _cdgdd :=_aceee .WrapContentStream (_cbdg );
_cdgdd !=nil {return _cdgdd ;};};_bafge ,_defba :=_cbdg .GetAnnotations ();if _defba !=nil {return _defba ;};for _ ,_cbec :=range _bafge {_agac ,_gdad :=_dcdb [_cbec ];if !_gdad &&_ccdd .AnnotFilterFunc !=nil {if _ ,_gffdf :=_cbec .GetContext ().(*PdfAnnotationWidget );
!_gffdf {_gdad =_ccdd .AnnotFilterFunc (_cbec );};};if !_gdad {_cdeac =append (_cdeac ,_cbec );continue ;};switch _cbec .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_eggda ,_cbcfb ,_efgg :=_aaee (_cbec );if _efgg !=nil {if !_agac {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_efgg );
continue ;};if _eggda ==nil {continue ;};_bfab :=_cbdg .Resources .GenerateXObjectName ();_cbdg .Resources .SetXObjectFormByName (_bfab ,_eggda );_abbc ,_cadbc ,_efgg :=_bbab (_eggda );if _efgg !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_efgg );
}else {_cggb :=_fbe .IdentityMatrix ();_cggb =_cggb .Translate (-_abbc .Llx ,-_abbc .Lly );if _cadbc {_eegb :=1.0;if _abbc .Width ()> 0{_eegb =_ab .Round (_cbcfb .Width ()/_abbc .Width ());};_abdga :=1.0;if _abbc .Height ()> 0{_abdga =_ab .Round (_cbcfb .Height ()/_abbc .Height ());
};_cggb =_cggb .Scale (_eegb ,_abdga );};_cbcfb .Transform (_cggb );};_cffef :=_ab .Min (_cbcfb .Llx ,_cbcfb .Urx );_fbab :=_ab .Min (_cbcfb .Lly ,_cbcfb .Ury );var _cgcc []string ;_cgcc =append (_cgcc ,"\u0071");_cgcc =append (_cgcc ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_cffef ,_fbab ));
_cgcc =append (_cgcc ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bfab .String ()));_cgcc =append (_cgcc ,"\u0051");_gegec :=_gdg .Join (_cgcc ,"\u000a");_efgg =_cbdg .AppendContentStream (_gegec );if _efgg !=nil {return _efgg ;};if _eggda .Resources !=nil {_gfgf ,_abff :=_fbg .GetDict (_eggda .Resources .Font );
if _abff {for _ ,_geffa :=range _gfgf .Keys (){if !_cbdg .Resources .HasFontByName (_geffa ){_cbdg .Resources .SetFontByName (_geffa ,_gfgf .Get (_geffa ));};};};};};if len (_cdeac )> 0{_cbdg ._fefa =_cdeac ;}else {_cbdg ._fefa =[]*PdfAnnotation {};};return nil ;
};func _acdgf (_bcgb *_fbg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ggbd :=PdfShadingType1 {};if _eacga :=_bcgb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eacga !=nil {_eacga =_fbg .TraceToDirectObject (_eacga );_fagfc ,_fged :=_eacga .(*_fbg .PdfObjectArray );
if !_fged {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eacga );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggbd .Domain =_fagfc ;};if _bccab :=_bcgb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bccab !=nil {_bccab =_fbg .TraceToDirectObject (_bccab );_bfcgd ,_dgcec :=_bccab .(*_fbg .PdfObjectArray );if !_dgcec {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bccab );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggbd .Matrix =_bfcgd ;};_ccdddc :=_bcgb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ccdddc ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ggbd .Function =[]PdfFunction {};if _aebbg ,_dgec :=_ccdddc .(*_fbg .PdfObjectArray );_dgec {for _ ,_fdcag :=range _aebbg .Elements (){_cdedgd ,_fcef :=_aabg (_fdcag );if _fcef !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcef );
return nil ,_fcef ;};_ggbd .Function =append (_ggbd .Function ,_cdedgd );};}else {_aadddd ,_fgbbg :=_aabg (_ccdddc );if _fgbbg !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgbbg );
return nil ,_fgbbg ;};_ggbd .Function =append (_ggbd .Function ,_aadddd );};return &_ggbd ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cdc PdfModel ;Rect _fbg .PdfObject ;Contents _fbg .PdfObject ;P _fbg .PdfObject ;NM _fbg .PdfObject ;M _fbg .PdfObject ;F _fbg .PdfObject ;AP _fbg .PdfObject ;AS _fbg .PdfObject ;Border _fbg .PdfObject ;C _fbg .PdfObject ;StructParent _fbg .PdfObject ;
OC _fbg .PdfObject ;_ecfe *_fbg .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_fbgcaf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_bgee *PdfReader )buildPageList (_cacfe *_fbg .PdfIndirectObject ,_defcf *_fbg .PdfIndirectObject ,_aaffe map[_fbg .PdfObject ]struct{})error {if _cacfe ==nil {return nil ;
};if _ ,_dcea :=_aaffe [_cacfe ];_dcea {_adc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cacfe .ObjectNumber );
return nil ;};_aaffe [_cacfe ]=struct{}{};_edfbe ,_addfb :=_cacfe .PdfObject .(*_fbg .PdfObjectDictionary );if !_addfb {return _fd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gagea ,_addfb :=(*_edfbe ).Get ("\u0054\u0079\u0070\u0065").(*_fbg .PdfObjectName );
if !_addfb {if _edfbe .Get ("\u004b\u0069\u0064\u0073")==nil {return _fd .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_adc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gagea =_fbg .MakeName ("\u0050\u0061\u0067e\u0073");_edfbe .Set ("\u0054\u0079\u0070\u0065",_gagea );};_adc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gagea ,_cacfe );
if *_gagea =="\u0050\u0061\u0067\u0065"{_bfcf ,_bbafd :=_bgee .newPdfPageFromDict (_edfbe );if _bbafd !=nil {return _bbafd ;};_bfcf .setContainer (_cacfe );if _defcf !=nil {_edfbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_defcf );};_bgee ._bdad =append (_bgee ._bdad ,_cacfe );
_bgee .PageList =append (_bgee .PageList ,_bfcf );return nil ;};if *_gagea !="\u0050\u0061\u0067e\u0073"{if _bgee ._eedad .Opts !=nil &&_bgee ._eedad .Opts .RelaxedMode {_adc .Log .Warning ("\u0057\u0061\u0072\u006e\u0069\u006e\u0067\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066 \u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050a\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063t\u0021\u0020(\u0025s\u0029",_gagea );
return nil ;};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gagea );
return _fd .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _defcf !=nil {_edfbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_defcf );};if !_bgee ._cgfbeb {_afdbcb :=_bgee .traverseObjectData (_cacfe );if _afdbcb !=nil {return _afdbcb ;};};_affede ,_cccfg :=_bgee ._eedad .Resolve (_edfbe .Get ("\u004b\u0069\u0064\u0073"));
if _cccfg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cccfg ;};var _dfcee *_fbg .PdfObjectArray ;
_dfcee ,_addfb =_affede .(*_fbg .PdfObjectArray );if !_addfb {_adccg ,_gbedc :=_affede .(*_fbg .PdfIndirectObject );if !_gbedc {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_dfcee ,_addfb =_adccg .PdfObject .(*_fbg .PdfObjectArray );if !_addfb {return _fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_adc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dfcee );
for _cgcb ,_agaba :=range _dfcee .Elements (){_dbffa ,_faag :=_fbg .GetIndirect (_agaba );if !_faag {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dbffa );
return _fd .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfcee .Set (_cgcb ,_dbffa );_cccfg =_bgee .buildPageList (_dbffa ,_cacfe ,_aaffe );if _cccfg !=nil {return _cccfg ;
};};return nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_eccbg *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _fgfc (_gegce rune )string {for _dddcb ,_baded :=range _fa .Categories {if len (_dddcb )==2&&_fa .Is (_baded ,_gegce ){return _dddcb ;};};return "\u0043\u006e";};

// String returns a human readable description of `fontfile`.
func (_gffa *fontFile )String ()string {_bagcd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gffa ._gbcfa !=nil {_bagcd =_gffa ._gbcfa .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gffa ._gaad ,_bagcd );
};

// ToPdfObject implements interface PdfModel.
func (_fdaf *PdfAnnotationLine )ToPdfObject ()_fbg .PdfObject {_fdaf .PdfAnnotation .ToPdfObject ();_cgfbf :=_fdaf ._ecfe ;_dee :=_cgfbf .PdfObject .(*_fbg .PdfObjectDictionary );_fdaf .PdfAnnotationMarkup .appendToPdfDictionary (_dee );_dee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u004c\u0069\u006e\u0065"));
_dee .SetIfNotNil ("\u004c",_fdaf .L );_dee .SetIfNotNil ("\u0042\u0053",_fdaf .BS );_dee .SetIfNotNil ("\u004c\u0045",_fdaf .LE );_dee .SetIfNotNil ("\u0049\u0043",_fdaf .IC );_dee .SetIfNotNil ("\u004c\u004c",_fdaf .LL );_dee .SetIfNotNil ("\u004c\u004c\u0045",_fdaf .LLE );
_dee .SetIfNotNil ("\u0043\u0061\u0070",_fdaf .Cap );_dee .SetIfNotNil ("\u0049\u0054",_fdaf .IT );_dee .SetIfNotNil ("\u004c\u004c\u004f",_fdaf .LLO );_dee .SetIfNotNil ("\u0043\u0050",_fdaf .CP );_dee .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fdaf .Measure );
_dee .SetIfNotNil ("\u0043\u004f",_fdaf .CO );return _cgfbf ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fbg .PdfObjectArray )(*PdfRectangle ,error ){_eead :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ffbc error ;_eead .Llx ,_ffbc =_fbg .GetNumberAsFloat (arr .Get (0));if _ffbc !=nil {return nil ,_ffbc ;};_eead .Lly ,_ffbc =_fbg .GetNumberAsFloat (arr .Get (1));if _ffbc !=nil {return nil ,_ffbc ;};_eead .Urx ,_ffbc =_fbg .GetNumberAsFloat (arr .Get (2));
if _ffbc !=nil {return nil ,_ffbc ;};_eead .Ury ,_ffbc =_fbg .GetNumberAsFloat (arr .Get (3));if _ffbc !=nil {return nil ,_ffbc ;};return &_eead ,nil ;};func (_dafge *PdfReader )traverseObjectData (_ffcca _fbg .PdfObject )error {return _fbg .ResolveReferencesDeep (_ffcca ,_dafge ._dcebc );
};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bcace *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bcace .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_eeeaf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_eeeaf ._dagbf =colorspace ;};

// Write outputs the object as it is to be written to file.
func (_ccda *PdfTransformParamsDocMDP )Write ()[]byte {return _ccda .ToPdfObject ().Write ()};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};type fontFile struct{_gaad string ;_gcdfc string ;_gbcfa _cf .SimpleEncoder ;};func (_egga *PdfReader )newPdfAnnotationSoundFromDict (_afc *_fbg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eadf :=PdfAnnotationSound {};
_agfc ,_bcf :=_egga .newPdfAnnotationMarkupFromDict (_afc );if _bcf !=nil {return nil ,_bcf ;};_eadf .PdfAnnotationMarkup =_agfc ;_eadf .Name =_afc .Get ("\u004e\u0061\u006d\u0065");_eadf .Sound =_afc .Get ("\u0053\u006f\u0075n\u0064");return &_eadf ,nil ;
};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fbg .PdfObject ;Name _fbg .PdfObject ;State _fbg .PdfObject ;StateModel _fbg .PdfObject ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fbg .PdfObject ;FS _fbg .PdfObject ;F _fbg .PdfObject ;UF _fbg .PdfObject ;DOS _fbg .PdfObject ;Mac _fbg .PdfObject ;Unix _fbg .PdfObject ;ID _fbg .PdfObject ;V _fbg .PdfObject ;EF _fbg .PdfObject ;RF _fbg .PdfObject ;Desc _fbg .PdfObject ;
CI _fbg .PdfObject ;AFRelationship _fbg .PdfObject ;_efba _fbg .PdfObject ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// Encoder returns the font's text encoder.
func (_bdba *PdfFont )Encoder ()_cf .TextEncoder {_edefc :=_bdba .actualFont ();if _edefc ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bdba ._fbff );
return nil ;};return _edefc .Encoder ();};

// SetNumCopies sets the value of the numCopies.
func (_beaac *ViewerPreferences )SetNumCopies (numCopies int ){_beaac ._defcb =numCopies };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _dcc .Time )(PdfDate ,error ){_cbdbe :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ddgeca ,_ :=_eg .ParseInt (_cbdbe [1:3],10,32);_gbbfg ,_ :=_eg .ParseInt (_cbdbe [4:6],10,32);return PdfDate {_begdcd :int64 (timeObj .Year ()),_eeaag :int64 (timeObj .Month ()),_ffgfgg :int64 (timeObj .Day ()),_bdbgce :int64 (timeObj .Hour ()),_bfaaa :int64 (timeObj .Minute ()),_fdace :int64 (timeObj .Second ()),_fbgece :_cbdbe [0],_fcadaa :_ddgeca ,_dcagd :_gbbfg },nil ;
};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ecegc .Lock ();defer _ecegc .Unlock ();_agcff =creator };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eefaa OutlineDest )ToPdfObject ()_fbg .PdfObject {if (_eefaa .PageObj ==nil &&_eefaa .Page < 0)||_eefaa .Mode ==""{return _fbg .MakeNull ();};_aaeeb :=_fbg .MakeArray ();if _eefaa .PageObj !=nil {_aaeeb .Append (_eefaa .PageObj );}else {_aaeeb .Append (_fbg .MakeInteger (_eefaa .Page ));
};_aaeeb .Append (_fbg .MakeName (_eefaa .Mode ));switch _eefaa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_aaeeb .Append (_fbg .MakeFloat (_eefaa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_aaeeb .Append (_fbg .MakeFloat (_eefaa .X ));
case "\u0058\u0059\u005a":_aaeeb .Append (_fbg .MakeFloat (_eefaa .X ));_aaeeb .Append (_fbg .MakeFloat (_eefaa .Y ));_aaeeb .Append (_fbg .MakeFloat (_eefaa .Zoom ));default:_aaeeb .Set (1,_fbg .MakeName ("\u0046\u0069\u0074"));};return _aaeeb ;};func (_fccc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _fccc ._eedad .GetCrypter ()!=nil &&!_fccc ._eedad .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ggade :=_fccc ._ffcac ;_abcaf :=_ggade .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _abcaf ==nil {return nil ,nil ;};_efddg ,_cgfbebg :=_fbg .GetIndirect (_abcaf );_abcaf =_fbg .TraceToDirectObject (_abcaf );if _fbg .IsNullObject (_abcaf ){_adc .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_abbaf ,_becdg :=_fbg .GetDict (_abcaf );if !_becdg {_adc .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_abcaf );_adc .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _fccc ._gcdfe .RelaxedMode {_adc .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_abcaf );};_adc .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_adc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_fccc ._cgfbeb {_ebeee :=_fccc .traverseObjectData (_abbaf );
if _ebeee !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ebeee );
return nil ,_ebeee ;};};_edeag ,_cceec :=_fccc .newPdfAcroFormFromDict (_efddg ,_abbaf );if _cceec !=nil {return nil ,_cceec ;};_edeag ._gecf =!_cgfbebg ;return _edeag ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_aecab *PdfWriter )AddPage (page *PdfPage )error {const _bfdcb ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cbeaf (page );_ccede :=page .ToPdfObject ();_adc .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_adc .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ccede );_accfd ,_bcfbc :=_fbg .GetIndirect (_ccede );if !_bcfbc {return _fd .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_adc .Log .Trace ("\u0025\u0073",_accfd );_adc .Log .Trace ("\u0025\u0073",_accfd .PdfObject );_bacdc ,_bcfbc :=_fbg .GetDict (_accfd .PdfObject );if !_bcfbc {return _fd .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cgcde ,_bcfbc :=_fbg .GetName (_bacdc .Get ("\u0054\u0079\u0070\u0065"));if !_bcfbc {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_bacdc .Get ("\u0054\u0079\u0070\u0065"));
};if _cgcde .String ()!="\u0050\u0061\u0067\u0065"{return _fd .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_febaf :=[]_fbg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_fceef ,_aebeg :=_fbg .GetIndirect (_bacdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_adc .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_bacdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_aebeg );
for _aebeg {_adc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fceef );_beafa ,_cdbec :=_fbg .GetDict (_fceef .PdfObject );if !_cdbec {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fgaff :=range _febaf {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fgaff );if _bacdc .Get (_fgaff )!=nil {_adc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gddecb :=_beafa .Get (_fgaff );_gddecb !=nil {_adc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fgaff );_bacdc .Set (_fgaff ,_gddecb );};};_fceef ,_aebeg =_fbg .GetIndirect (_beafa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_adc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_beafa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_adc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_bacdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aecab ._caaebg );_accfd .PdfObject =_bacdc ;_dcdbe ,_bcfbc :=_fbg .GetDict (_aecab ._caaebg .PdfObject );if !_bcfbc {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gcfaa ,_bcfbc :=_fbg .GetArray (_dcdbe .Get ("\u004b\u0069\u0064\u0073"));if !_bcfbc {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gcfaa .Append (_accfd );_aecab ._gegac [_bacdc ]=struct{}{};_aecab ._fefbb =append (_aecab ._fefbb ,_accfd );_beegd ,_bcfbc :=_fbg .GetInt (_dcdbe .Get ("\u0043\u006f\u0075n\u0074"));if !_bcfbc {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_beegd =*_beegd +1;if page ._fdfee ==nil {_eccfa :=_eef .Track (_aecab ._dffef ,_bfdcb ,_aecab ._dbefd );if _eccfa !=nil {return _eccfa ;};}else {_ddebcg :=_eef .Track (page ._fdfee ._ccgbe ,_bfdcb ,page ._fdfee ._ebea );if _ddebcg !=nil {return _ddebcg ;
};};_aecab .addObject (_accfd );_dgccg :=_aecab .addObjects (_bacdc );if _dgccg !=nil {return _dgccg ;};return nil ;};func (_beeg *PdfReader )newPdfAnnotationWidgetFromDict (_bbf *_fbg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_daad :=PdfAnnotationWidget {};
_daad .H =_bbf .Get ("\u0048");_daad .MK =_bbf .Get ("\u004d\u004b");_daad .A =_bbf .Get ("\u0041");_daad .AA =_bbf .Get ("\u0041\u0041");_daad .BS =_bbf .Get ("\u0042\u0053");_daad .Parent =_bbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_daad ,nil ;
};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bfcdc *PdfPage )Size ()(float64 ,float64 ,error ){_bfea ,_ffbdb :=_bfcdc .GetMediaBox ();if _ffbdb !=nil {return 0,0,_ffbdb ;};_agbcf ,_dddggg :=_bfea .Width (),_bfea .Height ();_daedcc ,_ffbdb :=_bfcdc .GetRotate ();if _ffbdb !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_ffbdb .Error ());
};if _feab :=_daedcc ;_feab %360!=0&&_feab %90==0{if _gaab :=(360+_feab %360)%360;_gaab ==90||_gaab ==270{_agbcf ,_dddggg =_dddggg ,_agbcf ;};};return _agbcf ,_dddggg ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fbg .PdfObjectArray ;_egae *Image ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_decg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_decg .Mask ()&^fl .Mask ())};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_egffg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _egffg .AlternateSpace ==nil {return nil ,_fd .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _egffg .AlternateSpace .ColorToRGB (color );};

// AddImageResource adds an image to the XObject resources.
func (_cabdc *PdfPage )AddImageResource (name _fbg .PdfObjectName ,ximg *XObjectImage )error {var _cecdg *_fbg .PdfObjectDictionary ;if _cabdc .Resources .XObject ==nil {_cecdg =_fbg .MakeDict ();_cabdc .Resources .XObject =_cecdg ;}else {var _eaedd bool ;
_cecdg ,_eaedd =(_cabdc .Resources .XObject ).(*_fbg .PdfObjectDictionary );if !_eaedd {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_cecdg .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_ebebg *PdfReader )flattenFieldsWithOpts (_abeba bool ,_fffc FieldAppearanceGenerator ,_eabf *FieldFlattenOpts )error {if _eabf ==nil {_eabf =&FieldFlattenOpts {};};var _cabb bool ;_acba :=map[*PdfAnnotation ]bool {};{var _bbcfe []*PdfField ;
_befdd :=_ebebg .AcroForm ;if _befdd !=nil {if _eabf .FilterFunc !=nil {_bbcfe =_befdd .filteredFields (_eabf .FilterFunc ,true );_cabb =_befdd .Fields !=nil &&len (*_befdd .Fields )> 0;}else {_bbcfe =_befdd .AllFields ();};};for _ ,_bfeec :=range _bbcfe {if len (_bfeec .Annotations )< 1{_adc .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_bfeec .PartialName ());
for _edbba ,_agcb :=range _bfeec .Kids {for _ ,_fefga :=range _agcb .Annotations {_acba [_fefga .PdfAnnotation ]=_bfeec .V !=nil ;if _agcb .V ==nil {_agcb .V =_bfeec .V ;};if _agcb .T ==nil {_agcb .T =_fbg .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_bfeec .PartialName (),_edbba ));
};if _fffc !=nil {_ccdde ,_ecfb :=_fffc .GenerateAppearanceDict (_befdd ,_agcb ,_fefga );if _ecfb !=nil {return _ecfb ;};_fefga .AP =_ccdde ;};};};};for _ ,_bbcdb :=range _bfeec .Annotations {_acba [_bbcdb .PdfAnnotation ]=_bfeec .V !=nil ;if _fffc !=nil {_bbcae ,_ebge :=_fffc .GenerateAppearanceDict (_befdd ,_bfeec ,_bbcdb );
if _ebge !=nil {return _ebge ;};_bbcdb .AP =_bbcae ;};};};};if _abeba {for _ ,_fccfb :=range _ebebg .PageList {_eccff ,_bffc :=_fccfb .GetAnnotations ();if _bffc !=nil {return _bffc ;};for _ ,_aaaag :=range _eccff {_acba [_aaaag ]=true ;};};};for _ ,_bccbd :=range _ebebg .PageList {_cdcee :=_bccbd .flattenFieldsWithOpts (_fffc ,_eabf ,_acba );
if _cdcee !=nil {return _cdcee ;};};if !_cabb {_ebebg .AcroForm =nil ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfgfc *PdfAnnotationPrinterMark )ToPdfObject ()_fbg .PdfObject {_bfgfc .PdfAnnotation .ToPdfObject ();_dddg :=_bfgfc ._ecfe ;_aaac :=_dddg .PdfObject .(*_fbg .PdfObjectDictionary );_aaac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_aaac .SetIfNotNil ("\u004d\u004e",_bfgfc .MN );return _dddg ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gfgaa *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gfgaa .baseFields ()._bgbb !=nil {return _gfgaa .baseFields ()._bgbb ;};if _cgge :=_gfgaa ._fbff .getFontDescriptor ();_cgge !=nil {return _cgge ;};_adc .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gfgaa );
return nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_fbafb *LTV )EnableByName (name string ,extraCerts []*_dd .Certificate )error {_abbaa :=_fbafb ._bdbe ._gafe .AcroForm ;for _ ,_abddb :=range _abbaa .AllFields (){_bdcb ,_ :=_abddb .GetContext ().(*PdfFieldSignature );if _bdcb ==nil {continue ;};
if _aaga :=_bdcb .PartialName ();_aaga !=name {continue ;};return _fbafb .Enable (_bdcb .V ,extraCerts );};return nil ;};func _gdeg (_fdgbb *PdfField ,_cafeg _fbg .PdfObject ){for _ ,_egef :=range _fdgbb .Annotations {_egef .AS =_cafeg ;_egef .ToPdfObject ();
};};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_abgfd :=&XObjectForm {};_dgbbf :=&_fbg .PdfObjectStream {};_dgbbf .PdfObjectDictionary =_fbg .MakeDict ();_abgfd ._gcbcg =_dgbbf ;return _abgfd ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fbg .PdfObject ;MK _fbg .PdfObject ;A _fbg .PdfObject ;AA _fbg .PdfObject ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_gbee *PdfWriter )setWriter (_dcdcde _gg .Writer ){_gbee ._fbdga =_gbee ._ggaaa ;_gbee ._cedb =_a .NewWriter (_dcdcde );};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fbg .PdfObject ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fbff pdfFont };

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fbg .PdfObject ;B _fbg .PdfObject ;};

// PrintPageRange returns the value of the printPageRange.
func (_gddec *ViewerPreferences )PrintPageRange ()[]int {return _gddec ._dedfe };

// ToPdfObject returns a stream object.
func (_gaebdb *XObjectImage )ToPdfObject ()_fbg .PdfObject {_dbebed :=_gaebdb ._cacd ;if _gaebdb ._cbaad {return _dbebed ;};_gfffe :=_dbebed .PdfObjectDictionary ;if _gaebdb .Filter !=nil {_gfffe =_gaebdb .Filter .MakeStreamDict ();_dbebed .PdfObjectDictionary =_gfffe ;
};_gfffe .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gfffe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0049\u006d\u0061g\u0065"));_gfffe .Set ("\u0057\u0069\u0064t\u0068",_fbg .MakeInteger (*(_gaebdb .Width )));
_gfffe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fbg .MakeInteger (*(_gaebdb .Height )));if _gaebdb .BitsPerComponent !=nil {_gfffe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbg .MakeInteger (*(_gaebdb .BitsPerComponent )));
};if _gaebdb .ColorSpace !=nil {_gfffe .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gaebdb .ColorSpace .ToPdfObject ());};_gfffe .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gaebdb .Intent );_gfffe .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gaebdb .ImageMask );
_gfffe .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gaebdb .Mask );_dfagc :=_gfffe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _gaebdb .Decode ==nil &&_dfagc {_gfffe .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gaebdb .Decode !=nil {_gfffe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gaebdb .Decode );
};_gfffe .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gaebdb .Interpolate );_gfffe .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gaebdb .Alternatives );_gfffe .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gaebdb .SMask );
_gfffe .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gaebdb .SMaskInData );_gfffe .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gaebdb .Matte );_gfffe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaebdb .Name );_gfffe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gaebdb .StructParent );
_gfffe .SetIfNotNil ("\u0049\u0044",_gaebdb .ID );_gfffe .SetIfNotNil ("\u004f\u0050\u0049",_gaebdb .OPI );_gfffe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gaebdb .Metadata );_gfffe .SetIfNotNil ("\u004f\u0043",_gaebdb .OC );_gfffe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_gaebdb .Stream ))));
_dbebed .Stream =_gaebdb .Stream ;_gaebdb ._cbaad =true ;return _dbebed ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_ddgc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_ddgc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_ddgc ._ebaf =acroForm ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_edbe *PdfPage )AppendContentStream (contentStr string )error {_ebbafe ,_fadgd :=_edbe .GetContentStreams ();if _fadgd !=nil {return _fadgd ;};if len (_ebbafe )==0{_ebbafe =[]string {contentStr };return _edbe .SetContentStreams (_ebbafe ,_fbg .NewFlateEncoder ());
};var _cdbcc _fb .Buffer ;_cdbcc .WriteString (_ebbafe [len (_ebbafe )-1]);_cdbcc .WriteString ("\u000a");_cdbcc .WriteString (contentStr );_ebbafe [len (_ebbafe )-1]=_cdbcc .String ();return _edbe .SetContentStreams (_ebbafe ,_fbg .NewFlateEncoder ());
};

// ToPdfObject implements model.PdfModel interface.
func (_fagbc *PdfOutputIntent )ToPdfObject ()_fbg .PdfObject {if _fagbc ._adeg ==nil {_fagbc ._adeg =_fbg .MakeDict ();};_gbbfd :=_fagbc ._adeg ;if _fagbc .Type !=""{_gbbfd .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName (_fagbc .Type ));};_gbbfd .Set ("\u0053",_fbg .MakeName (_fagbc .S .String ()));
if _fagbc .OutputCondition !=""{_gbbfd .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fbg .MakeString (_fagbc .OutputCondition ));};_gbbfd .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fbg .MakeString (_fagbc .OutputConditionIdentifier ));
_gbbfd .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fbg .MakeString (_fagbc .RegistryName ));if _fagbc .Info !=""{_gbbfd .Set ("\u0049\u006e\u0066\u006f",_fbg .MakeString (_fagbc .Info ));};if len (_fagbc .DestOutputProfile )!=0{_cbccc ,_cadag :=_fbg .MakeStream (_fagbc .DestOutputProfile ,_fbg .NewFlateEncoder ());
if _cadag !=nil {_adc .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cadag );
};_cbccc .PdfObjectDictionary .Set ("\u004e",_fbg .MakeInteger (int64 (_fagbc .ColorComponents )));_fdafd :=make ([]float64 ,_fagbc .ColorComponents *2);for _bcbgd :=0;_bcbgd < _fagbc .ColorComponents *2;_bcbgd ++{_addfad :=0.0;if _bcbgd %2!=0{_addfad =1.0;
};_fdafd [_bcbgd ]=_addfad ;};_cbccc .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fbg .MakeArrayFromFloats (_fdafd ));_gbbfd .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_cbccc );};
return _gbbfd ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fbcdd *PdfPageResources )SetXObjectImageByName (keyName _fbg .PdfObjectName ,ximg *XObjectImage )error {_fgdcd :=ximg .ToPdfObject ().(*_fbg .PdfObjectStream );_aefe :=_fbcdd .SetXObjectByName (keyName ,_fgdcd );return _aefe ;};func (_dbfg *PdfReader )newPdfAnnotationUnderlineFromDict (_fgfb *_fbg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_ccg :=PdfAnnotationUnderline {};
_eeedg ,_ddba :=_dbfg .newPdfAnnotationMarkupFromDict (_fgfb );if _ddba !=nil {return nil ,_ddba ;};_ccg .PdfAnnotationMarkup =_eeedg ;_ccg .QuadPoints =_fgfb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ccg ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gfbf *PdfFont )SubsetRegistered ()error {switch _acdbd :=_gfbf ._fbff .(type ){case *pdfFontType0 :_dafe :=_acdbd .subsetRegistered ();if _dafe !=nil {_adc .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dafe );
return _dafe ;};if _acdbd ._fccec !=nil {if _acdbd ._cgbbg !=nil {_acdbd ._cgbbg .ToPdfObject ();};_acdbd .ToPdfObject ();};default:_adc .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_acdbd );
};return nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_dbdeb *PdfPageResources )HasXObjectByName (keyName _fbg .PdfObjectName )bool {_gefec ,_ :=_dbdeb .GetXObjectByName (keyName );return _gefec !=nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fe :=NewPdfAction ();_dgd :=&PdfActionSetOCGState {};_dgd .PdfAction =_fe ;_fe .SetContext (_dgd );return _dgd ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _fbg .PdfObject )(*EmbeddedFile ,error ){_becg :=_fbg .TraceToDirectObject (obj );_ddag ,_eeca :=_becg .(*_fbg .PdfObjectDictionary );if !_eeca {return nil ,_fd .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fagd :=_fbg .TraceToDirectObject (_ddag .Get ("\u0046"));if _fagd ==nil {return nil ,_fd .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_bbaa ,_eeca :=_fagd .(*_fbg .PdfObjectStream );
if !_eeca {return nil ,_fd .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_caeed :=_bbaa .PdfObjectDictionary ;_fgef :=_caeed .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _fgef ==nil {return nil ,_fd .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_abdgg ,_eeca :=_fgef .(*_fbg .PdfObjectDictionary );if !_eeca {return nil ,_fd .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_babgd :="";_bbag :=_abdgg .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _bbag !=nil {_babgd =_bbag .(*_fbg .PdfObjectString ).Str ();};_gebg ,_bgfba :=_fbg .DecodeStream (_bbaa );if _bgfba !=nil {return nil ,_bgfba ;};_beba :=&EmbeddedFile {Content :_gebg ,Hash :_babgd };return _beba ,nil ;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_eedba *ViewerPreferences )PickTrayByPDFSize ()bool {if _eedba ._dddcag ==nil {return false ;};return *_eedba ._dddcag ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_egb :=&PdfAction {};_egb ._gc =_fbg .MakeIndirectObject (_fbg .MakeDict ());return _egb ;};func _fabb (_gaedb _fbg .PdfObject )*IDTree {_gaedb =_fbg .ResolveReference (_gaedb );_bgae :=_fbg .MakeArray ();_ecbdb :=_fbg .MakeArray ();
_geebbd :=[]*IDTree {};if _edegg ,_begbe :=_fbg .GetDict (_gaedb );_begbe {if _dacg :=_edegg .Get ("\u004e\u0061\u006de\u0073");_dacg !=nil {_dacg =_fbg .ResolveReference (_dacg );if _feaffg ,_agfcga :=_fbg .GetArray (_dacg );_agfcga {for _ ,_fgfgb :=range _feaffg .Elements (){_bgae .Append (_fgfgb );
};};};if _gecbd :=_edegg .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_gecbd !=nil {_gecbd =_fbg .ResolveReference (_gecbd );if _egagf ,_edfegf :=_fbg .GetArray (_gecbd );_edfegf {for _dbca :=0;_dbca < 2;_dbca ++{_ecbdb .Append (_egagf .Get (_dbca ));
};};};if _gaccd :=_edegg .Get ("\u004b\u0069\u0064\u0073");_gaccd !=nil {_gaccd =_fbg .ResolveReference (_gaccd );if _gefcg ,_dbdbe :=_fbg .GetArray (_gaccd );_dbdbe {for _ ,_cbdb :=range _gefcg .Elements (){_dddbg :=_fabb (_cbdb );_geebbd =append (_geebbd ,_dddbg );
};};};};_dbgae :=&IDTree {Names :_bgae ,Limits :_ecbdb };if len (_geebbd )> 0{_dbgae .Kids =_geebbd ;};return _dbgae ;};func (_fabe *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fabe ._bgbb };

// GetCharMetrics returns the char metrics for character code `code`.
func (_aaeg pdfCIDFontType2 )GetCharMetrics (code _cf .CharCode )(_dg .CharMetrics ,bool ){if _gfedg ,_bgeaf :=_aaeg ._ecgd [code ];_bgeaf {return _dg .CharMetrics {Wx :_gfedg },true ;};_bfff :=rune (code );_eecc ,_daee :=_aaeg ._geaa [_bfff ];if !_daee {_eecc =int (_aaeg ._afaed );
};return _dg .CharMetrics {Wx :float64 (_eecc )},true ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_efgaa *PdfFont )CharcodesToStrings (charcodes []_cf .CharCode ,replacementText string )([]string ,int ,int ){_faff :=_efgaa .baseFields ();_fecfd :=make ([]string ,0,len (charcodes ));_ddeca :=0;_aaaacf :=_efgaa .Encoder ();_aeeaa :=_faff ._ceadf !=nil &&_efgaa .IsSimple ()&&_efgaa .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_gdg .Contains (_faff ._ceadf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_aeeaa &&_aaaacf !=nil {switch _ebgf :=_aaaacf .(type ){case _cf .SimpleEncoder :_dgaca :=_ebgf .BaseName ();if _ ,_gadf :=_ggcefg [_dgaca ];_gadf {for _ ,_fgbgb :=range charcodes {if _bfaba ,_cbeag :=_aaaacf .CharcodeToRune (_fgbgb );_cbeag {_fecfd =append (_fecfd ,string (_bfaba ));
}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fgbgb ,charcodes ,_faff .isCIDFont (),_efgaa ,_aaaacf );
_ddeca ++;_fecfd =append (_fecfd ,_ed .MissingCodeString );};};return _fecfd ,len (_fecfd ),_ddeca ;};};};for _ ,_dgcba :=range charcodes {if _faff ._ceadf !=nil {if _fgeef ,_aeebf :=_faff ._ceadf .CharcodeToUnicode (_ed .CharCode (_dgcba ));_aeebf {_agcad ,_ :=_dc .DecodeLastRuneInString (_fgeef );
_eeggf :=_fgfc (_agcad );if !(_eeggf =="\u0043\u006f"){_fecfd =append (_fecfd ,_fgeef );continue ;};_adc .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_dgcba ,_fgeef );
};};if _aaaacf !=nil {if _gfaac ,_cdcd :=_aaaacf .CharcodeToRune (_dgcba );_cdcd {_ebce :=_fgfc (_gfaac );if !(_ebce =="\u0043\u006f"){_fecfd =append (_fecfd ,string (_gfaac ));continue ;};_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_dgcba ,string (_gfaac ));
};};if replacementText !=""{_fecfd =append (_fecfd ,replacementText );}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dgcba ,charcodes ,_faff .isCIDFont (),_efgaa ,_aaaacf );
_ddeca ++;_fecfd =append (_fecfd ,_ed .MissingCodeString );};};if _ddeca !=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ddeca ,_efgaa );
};return _fecfd ,len (_fecfd ),_ddeca ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fbg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_dcdg *PdfReader )loadStructure ()error {if _dcdg ._eedad .GetCrypter ()!=nil &&!_dcdg ._eedad .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_afdag :=_dcdg ._eedad .GetTrailer ();if _afdag ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fcda ,_fbadf :=_afdag .Get ("\u0052\u006f\u006f\u0074").(*_fbg .PdfObjectReference );if !_fbadf {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_afdag );
};_fcfd ,_deece :=_dcdg ._eedad .LookupByReference (*_fcda );if _deece !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_deece );
return _deece ;};_degdg ,_fbadf :=_fcfd .(*_fbg .PdfIndirectObject );if !_fbadf {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fcfd ,*_afdag );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_faafe ,_fbadf :=(*_degdg ).PdfObject .(*_fbg .PdfObjectDictionary );if !_fbadf {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_degdg .PdfObject );
return _fd .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_adc .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_faafe );_fdbda ,_fbadf :=_faafe .Get ("\u0050\u0061\u0067e\u0073").(*_fbg .PdfObjectReference );
if !_fbadf {return _fd .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_eccdg ,_deece :=_dcdg ._eedad .LookupByReference (*_fdbda );
if _deece !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _deece ;};_bfbfc ,_fbadf :=_eccdg .(*_fbg .PdfIndirectObject );if !_fbadf {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_adc .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_bfbfc );return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_aaafd ,_fbadf :=_bfbfc .PdfObject .(*_fbg .PdfObjectDictionary );if !_fbadf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_bfbfc );
return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cgaa ,_fbadf :=_fbg .GetInt (_aaafd .Get ("\u0043\u006f\u0075n\u0074"));if !_fbadf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fd .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fbadf =_fbg .GetName (_aaafd .Get ("\u0054\u0079\u0070\u0065"));!_fbadf {_adc .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_aaafd .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _fabcd ,_bfebe :=_fbg .GetInt (_aaafd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bfebe {_gfcad :=int64 (*_fabcd );_dcdg .Rotate =&_gfcad ;};_dcdg ._bceac =_fcda ;
_dcdg ._ffcac =_faafe ;_dcdg ._gceb =_aaafd ;_dcdg ._bgca =_bfbfc ;_dcdg ._ecgcb =int (*_cgaa );_dcdg ._bdad =[]*_fbg .PdfIndirectObject {};_dgfec :=map[_fbg .PdfObject ]struct{}{};_deece =_dcdg .buildPageList (_bfbfc ,nil ,_dgfec );if _deece !=nil {return _deece ;
};_adc .Log .Trace ("\u002d\u002d\u002d");_adc .Log .Trace ("\u0054\u004f\u0043");_adc .Log .Trace ("\u0050\u0061\u0067e\u0073");_adc .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dcdg ._bdad ),_dcdg ._bdad );_dcdg ._fbea ,_deece =_dcdg .loadOutlines ();
if _deece !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_deece );
return _deece ;};_dcdg .AcroForm ,_deece =_dcdg .loadForms ();if _deece !=nil {return _deece ;};_dcdg .DSS ,_deece =_dcdg .loadDSS ();if _deece !=nil {return _deece ;};_dcdg ._dccdf ,_deece =_dcdg .loadPerms ();if _deece !=nil {return _deece ;};return nil ;
};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";StructureTypeSection ="\u0053\u0065\u0063\u0074";StructureTypeDivision ="\u0044\u0069\u0076";
StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";StructureTypeTOCI ="\u0054\u004f\u0043\u0049";StructureTypeIndex ="\u0049\u006e\u0064e\u0078";
StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);func (_gaade *PdfWriter )setHashIDs (_adabac _b .Hash )error {_aeegf :=_adabac .Sum (nil );if _gaade ._gebgg ==""{_gaade ._gebgg =_ae .EncodeToString (_aeegf [:8]);
};_gaade .setDocumentIDs (_gaade ._gebgg ,_ae .EncodeToString (_aeegf [8:]));return nil ;};func (_cfg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cdba *_fbg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gef :=PdfAnnotationFileAttachment {};
_bacc ,_gddc :=_cfg .newPdfAnnotationMarkupFromDict (_cdba );if _gddc !=nil {return nil ,_gddc ;};_gef .PdfAnnotationMarkup =_bacc ;_gef .FS =_cdba .Get ("\u0046\u0053");_gef .Name =_cdba .Get ("\u004e\u0061\u006d\u0065");return &_gef ,nil ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_defd *PdfAppender )GetDSS ()(_eadg *DSS ){return _defd ._dcae };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbeff *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbeff .Alternate ==nil {if _gbeff .N ==1{_egbaa :=NewPdfColorspaceDeviceGray ();return _egbaa .ColorFromFloats (vals );}else if _gbeff .N ==3{_cda :=NewPdfColorspaceDeviceRGB ();
return _cda .ColorFromFloats (vals );}else if _gbeff .N ==4{_deaac :=NewPdfColorspaceDeviceCMYK ();return _deaac .ColorFromFloats (vals );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gbeff .Alternate .ColorFromFloats (vals );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdfa *PdfColorspaceSpecialSeparation )ToPdfObject ()_fbg .PdfObject {_beag :=_fbg .MakeArray (_fbg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_beag .Append (_gdfa .ColorantName );_beag .Append (_gdfa .AlternateSpace .ToPdfObject ());
_beag .Append (_gdfa .TintTransform .ToPdfObject ());if _gdfa ._gdcf !=nil {_gdfa ._gdcf .PdfObject =_beag ;return _gdfa ._gdcf ;};return _beag ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cbgf *PdfShadingPatternType3 )ToPdfObject ()_fbg .PdfObject {_cbgf .PdfPattern .ToPdfObject ();_fgfdg :=_cbgf .getDict ();if _cbgf .Shading !=nil {_fgfdg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cbgf .Shading .ToPdfObject ());};if _cbgf .Matrix !=nil {_fgfdg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cbgf .Matrix );
};if _cbgf .ExtGState !=nil {_fgfdg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cbgf .ExtGState );};return _cbgf ._eadbd ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fbg .PdfObject ;T _fbg .PdfObject ;Operation _fbg .PdfObject ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bcad :=&PdfAppender {_cadb :reader ._fbgef ,Reader :reader ,_ffca :reader ._eedad ,_fdc :reader ._dcebc };_cdbff ,_eab :=_bcad ._cadb .Seek (0,_gg .SeekEnd );if _eab !=nil {return nil ,_eab ;
};_bcad ._aaaa =_cdbff ;if _ ,_eab =_bcad ._cadb .Seek (0,_gg .SeekStart );_eab !=nil {return nil ,_eab ;};_bcad ._gafe ,_eab =NewPdfReader (_bcad ._cadb );if _eab !=nil {return nil ,_eab ;};for _ ,_fggf :=range _bcad .Reader .GetObjectNums (){if _bcad ._cedef < _fggf {_bcad ._cedef =_fggf ;
};};_bcad ._cagb =_bcad ._ffca .GetXrefTable ();_bcad ._fgbf =_bcad ._ffca .GetXrefOffset ();_bcad ._efgd =append (_bcad ._efgd ,_bcad ._gafe .PageList ...);_bcad ._gbed =make (map[_fbg .PdfObject ]struct{});_bcad ._daec =make (map[_fbg .PdfObject ]int64 );
_bcad ._bdec =make (map[_fbg .PdfObject ]struct{});_bcad ._ebaf =_bcad ._gafe .AcroForm ;_bcad ._dcae =_bcad ._gafe .DSS ;return _bcad ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bdfg *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_afacc :=_gba .NewReader (img .getBase ());_gaba :=_ced .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_abfb :=_gba .NewWriter (_gaba );
_ddda :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_dfgb :=make ([]uint32 ,3);var (_ecdfc uint32 ;ANorm ,X ,Y ,Z ,_fcgda ,_fadg ,_fcbe float64 ;_ffcd error ;);for {_ecdfc ,_ffcd =_afacc .ReadSample ();if _ffcd ==_gg .EOF {break ;}else if _ffcd !=nil {return img ,_ffcd ;
};ANorm =float64 (_ecdfc )/_ddda ;X =_bdfg .WhitePoint [0]*_ab .Pow (ANorm ,_bdfg .Gamma );Y =_bdfg .WhitePoint [1]*_ab .Pow (ANorm ,_bdfg .Gamma );Z =_bdfg .WhitePoint [2]*_ab .Pow (ANorm ,_bdfg .Gamma );_fcgda =3.240479*X +-1.537150*Y +-0.498535*Z ;_fadg =-0.969256*X +1.875992*Y +0.041556*Z ;
_fcbe =0.055648*X +-0.204043*Y +1.057311*Z ;_fcgda =_ab .Min (_ab .Max (_fcgda ,0),1.0);_fadg =_ab .Min (_ab .Max (_fadg ,0),1.0);_fcbe =_ab .Min (_ab .Max (_fcbe ,0),1.0);_dfgb [0]=uint32 (_fcgda *_ddda );_dfgb [1]=uint32 (_fadg *_ddda );_dfgb [2]=uint32 (_fcbe *_ddda );
if _ffcd =_abfb .WriteSamples (_dfgb );_ffcd !=nil {return img ,_ffcd ;};};return _cgdba (&_gaba ),nil ;};

// SetAction sets the PDF action for the annotation link.
func (_dbcf *PdfAnnotationLink )SetAction (action *PdfAction ){_dbcf ._bfgf =action ;if action ==nil {_dbcf .A =nil ;};};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bbgaf *PdfShading )GetContext ()PdfModel {return _bbgaf ._bfffe };

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fgcf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gfaf :=0.3*_fgcf .R ()+0.59*_fgcf .G ()+0.11*_fgcf .B ();_gfaf =_ab .Min (_ab .Max (_gfaf ,0.0),1.0);return NewPdfColorDeviceGray (_gfaf );};func _agdab (_cdgg *_fbg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eefab :=PdfShadingType5 {};
_dagae :=_cdgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dagae ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dddge ,_dbaef :=_dagae .(*_fbg .PdfObjectInteger );if !_dbaef {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dagae );
return nil ,_fbg .ErrTypeError ;};_eefab .BitsPerCoordinate =_dddge ;_dagae =_cdgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dagae ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dddge ,_dbaef =_dagae .(*_fbg .PdfObjectInteger );if !_dbaef {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dagae );
return nil ,_fbg .ErrTypeError ;};_eefab .BitsPerComponent =_dddge ;_dagae =_cdgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _dagae ==nil {_adc .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dddge ,_dbaef =_dagae .(*_fbg .PdfObjectInteger );if !_dbaef {_adc .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dagae );
return nil ,_fbg .ErrTypeError ;};_eefab .VerticesPerRow =_dddge ;_dagae =_cdgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dagae ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfac ,_dbaef :=_dagae .(*_fbg .PdfObjectArray );if !_dbaef {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dagae );
return nil ,_fbg .ErrTypeError ;};_eefab .Decode =_dfac ;if _gdfgd :=_cdgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gdfgd !=nil {_eefab .Function =[]PdfFunction {};if _gcgaa ,_dfbae :=_gdfgd .(*_fbg .PdfObjectArray );_dfbae {for _ ,_ceaaa :=range _gcgaa .Elements (){_gbcd ,_beceb :=_aabg (_ceaaa );
if _beceb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beceb );return nil ,_beceb ;};_eefab .Function =append (_eefab .Function ,_gbcd );
};}else {_acgbd ,_gbgbg :=_aabg (_gdfgd );if _gbgbg !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbgbg );return nil ,_gbgbg ;
};_eefab .Function =append (_eefab .Function ,_acgbd );};};return &_eefab ,nil ;};

// SetDuplex sets the value of the duplex.
func (_bcffd *ViewerPreferences )SetDuplex (duplex Duplex ){_bcffd ._dffg =duplex };func (_aaddg *PdfPage )generateImage (_gdgbag string ,_abcde float64 ,_bagg string ,_aceae _ec .Color )([]byte ,error ){_bcbbe ,_cgbdd ,_fcec ,_ :=_aceae .RGBA ();_cbbfd :=_ec .RGBA {uint8 (_bcbbe >>8),uint8 (_cgbdd >>8),uint8 (_fcec >>8),255};
_dgace :=_ec .RGBA {0xff,0xff,0xff,0x00};_dfbgf ,_cbac :=_aaddg .loadFont (_bagg );if _cbac !=nil {return nil ,_cbac ;};_agcfc :=_gdg .Replace (_gdgbag ,"\u0009","\u0020\u0020\u0020\u0020",-1);_gccb :=_gdg .Split (_agcfc ,"\u000a");_agbba :=1.0;for _ ,_dadc :=range _gccb {if float64 (len (_dadc ))*_abcde > _agbba {_agbba =float64 (len (_dadc ))*_abcde ;
};};if _agbba > _aaddg .MediaBox .Width (){_agbba =_aaddg .MediaBox .Width ();};_cffeg :=_aa .NewUniform (_cbbfd );_ccee :=_aa .NewUniform (_dgace );_dbeag :=_aa .NewRGBA (_aa .Rect (0,0,int (_agbba ),int (_abcde *1.5*float64 (len (_gccb )))));_d .Draw (_dbeag ,_dbeag .Bounds (),_ccee ,_aa .Pt (0,0),_d .Src );
_bagbb :=_aac .NewContext ();_bagbb .SetDPI (72);_bagbb .SetFont (_dfbgf );_bagbb .SetFontSize (_abcde );_bagbb .SetHinting (_faa .HintingNone );_bagbb .SetClip (_dbeag .Bounds ());_bagbb .SetDst (_dbeag );_bagbb .SetSrc (_cffeg );_bafbe :=50;_eccce :=10+int (_bagbb .PointToFixed (_abcde )>>6);
_acfb :=_aac .Pt (_bafbe ,_eccce );for _ ,_gefe :=range _gccb {_ ,_cbac =_bagbb .DrawString (_gdg .Replace (_gefe ,"\u000d","",-1),_acfb );if _cbac !=nil {return nil ,_cbac ;};_acfb .Y +=_bagbb .PointToFixed (_abcde *1.5);};_faebg :=new (_fb .Buffer );
if _bcega :=_ad .Encode (_faebg ,_dbeag );_bcega !=nil {return nil ,_bcega ;};return _faebg .Bytes (),nil ;};func (_eada *PdfReader )newPdfAnnotationPopupFromDict (_abcg *_fbg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_affd :=PdfAnnotationPopup {};
_affd .Parent =_abcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_affd .Open =_abcg .Get ("\u004f\u0070\u0065\u006e");return &_affd ,nil ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fbg .PdfObject )(*PdfInfo ,error ){var _badb PdfInfo ;_beae ,_bafbg :=obj .(*_fbg .PdfObjectDictionary );if !_bafbg {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_abcd :=range _beae .Keys (){switch _abcd {case "\u0054\u0069\u0074l\u0065":_badb .Title ,_ =_fbg .GetString (_beae .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_badb .Author ,_ =_fbg .GetString (_beae .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_badb .Subject ,_ =_fbg .GetString (_beae .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_badb .Keywords ,_ =_fbg .GetString (_beae .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_badb .Creator ,_ =_fbg .GetString (_beae .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_badb .Producer ,_ =_fbg .GetString (_beae .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_badb .Trapped ,_ =_fbg .GetName (_beae .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _effed ,_aega :=_fbg .GetString (_beae .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_aega &&_effed .String ()!=""{_gaeb ,_cdceg :=NewPdfDate (_effed .String ());if _cdceg !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_cdceg );
};_badb .CreationDate =&_gaeb ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _edcf ,_bfad :=_fbg .GetString (_beae .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bfad &&_edcf .String ()!=""{_eedf ,_abdf :=NewPdfDate (_edcf .String ());if _abdf !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_abdf );
};_badb .ModifiedDate =&_eedf ;};default:_eagf ,_ :=_fbg .GetString (_beae .Get (_abcd ));if _badb ._fdgce ==nil {_badb ._fdgce =_fbg .MakeDict ();};_badb ._fdgce .Set (_abcd ,_eagf );};};return &_badb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_afd *PdfActionGoToR )ToPdfObject ()_fbg .PdfObject {_afd .PdfAction .ToPdfObject ();_aefc :=_afd ._gc ;_ag :=_aefc .PdfObject .(*_fbg .PdfObjectDictionary );_ag .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeGoToR )));if _afd .F !=nil {_ag .Set ("\u0046",_afd .F .ToPdfObject ());
};_ag .SetIfNotNil ("\u0044",_afd .D );_ag .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_afd .NewWindow );return _aefc ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fbg .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ceag *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abgd :=vals [0];if _abgd < 0.0||_abgd > 100.0{_adc .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_abgd );
return nil ,ErrColorOutOfRange ;};_aaccd :=vals [1];_fbaf :=float64 (-100);_bdgge :=float64 (100);if len (_ceag .Range )> 1{_fbaf =_ceag .Range [0];_bdgge =_ceag .Range [1];};if _aaccd < _fbaf ||_aaccd > _bdgge {_adc .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_aaccd ,_fbaf ,_bdgge );
return nil ,ErrColorOutOfRange ;};_cdccb :=vals [2];_gdcc :=float64 (-100);_fedg :=float64 (100);if len (_ceag .Range )> 3{_gdcc =_ceag .Range [2];_fedg =_ceag .Range [3];};if _cdccb < _gdcc ||_cdccb > _fedg {_adc .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cdccb ,_gdcc ,_fedg );
return nil ,ErrColorOutOfRange ;};_adgd :=NewPdfColorLab (_abgd ,_aaccd ,_cdccb );return _adgd ,nil ;};func _badfd (_agdcc _fbg .PdfObject )(*PdfShading ,error ){_fecfce :=&PdfShading {};var _edgdc *_fbg .PdfObjectDictionary ;if _eaeee ,_gegc :=_fbg .GetIndirect (_agdcc );
_gegc {_fecfce ._gedcg =_eaeee ;_aagd ,_fgbbe :=_eaeee .PdfObject .(*_fbg .PdfObjectDictionary );if !_fgbbe {_adc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fbg .ErrTypeError ;};_edgdc =_aagd ;}else if _caed ,_fdede :=_fbg .GetStream (_agdcc );_fdede {_fecfce ._gedcg =_caed ;_edgdc =_caed .PdfObjectDictionary ;}else if _ceffd ,_ebdcc :=_fbg .GetDict (_agdcc );_ebdcc {_fecfce ._gedcg =_ceffd ;_edgdc =_ceffd ;
}else {_adc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_agdcc );return nil ,_fbg .ErrTypeError ;};if _edgdc ==nil {_adc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_agdcc =_edgdc .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _agdcc ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_agdcc =_fbg .TraceToDirectObject (_agdcc );_gggdb ,_deggb :=_agdcc .(*_fbg .PdfObjectInteger );if !_deggb {_adc .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_agdcc );
return nil ,_fbg .ErrTypeError ;};if *_gggdb < 1||*_gggdb > 7{_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gggdb );
return nil ,_fbg .ErrTypeError ;};_fecfce .ShadingType =_gggdb ;_agdcc =_edgdc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _agdcc ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gedcc ,_bacdb :=NewPdfColorspaceFromPdfObject (_agdcc );if _bacdb !=nil {_adc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bacdb );
return nil ,_bacdb ;};_fecfce .ColorSpace =_gedcc ;_agdcc =_edgdc .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _agdcc !=nil {_agdcc =_fbg .TraceToDirectObject (_agdcc );_fcaed ,_cagbg :=_agdcc .(*_fbg .PdfObjectArray );if !_cagbg {_adc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agdcc );
return nil ,_fbg .ErrTypeError ;};_fecfce .Background =_fcaed ;};_agdcc =_edgdc .Get ("\u0042\u0042\u006f\u0078");if _agdcc !=nil {_agdcc =_fbg .TraceToDirectObject (_agdcc );_bbae ,_bfabda :=_agdcc .(*_fbg .PdfObjectArray );if !_bfabda {_adc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agdcc );
return nil ,_fbg .ErrTypeError ;};_dcfff ,_cbcee :=NewPdfRectangle (*_bbae );if _cbcee !=nil {_adc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cbcee );return nil ,_cbcee ;};_fecfce .BBox =_dcfff ;};_agdcc =_edgdc .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _agdcc !=nil {_agdcc =_fbg .TraceToDirectObject (_agdcc );_fgged ,_gagcg :=_agdcc .(*_fbg .PdfObjectBool );if !_gagcg {_adc .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agdcc );
return nil ,_fbg .ErrTypeError ;};_fecfce .AntiAlias =_fgged ;};switch *_gggdb {case 1:_adfda ,_bcfag :=_acdgf (_edgdc );if _bcfag !=nil {return nil ,_bcfag ;};_adfda .PdfShading =_fecfce ;_fecfce ._bfffe =_adfda ;return _fecfce ,nil ;case 2:_caggb ,_bdfda :=_bbcdcf (_edgdc );
if _bdfda !=nil {return nil ,_bdfda ;};_caggb .PdfShading =_fecfce ;_fecfce ._bfffe =_caggb ;return _fecfce ,nil ;case 3:_gefac ,_abbafc :=_gdefad (_edgdc );if _abbafc !=nil {return nil ,_abbafc ;};_gefac .PdfShading =_fecfce ;_fecfce ._bfffe =_gefac ;
return _fecfce ,nil ;case 4:_eacc ,_fgfeg :=_fcbbc (_edgdc );if _fgfeg !=nil {return nil ,_fgfeg ;};_eacc .PdfShading =_fecfce ;_fecfce ._bfffe =_eacc ;return _fecfce ,nil ;case 5:_dfeag ,_eadce :=_agdab (_edgdc );if _eadce !=nil {return nil ,_eadce ;};
_dfeag .PdfShading =_fecfce ;_fecfce ._bfffe =_dfeag ;return _fecfce ,nil ;case 6:_acfee ,_gbedg :=_efgb (_edgdc );if _gbedg !=nil {return nil ,_gbedg ;};_acfee .PdfShading =_fecfce ;_fecfce ._bfffe =_acfee ;return _fecfce ,nil ;case 7:_cbece ,_gfcge :=_ffafd (_edgdc );
if _gfcge !=nil {return nil ,_gfcge ;};_cbece .PdfShading =_fecfce ;_fecfce ._bfffe =_cbece ;return _fecfce ,nil ;};return nil ,_fd .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fbg .PdfObject ;T3DV _fbg .PdfObject ;T3DA _fbg .PdfObject ;T3DI _fbg .PdfObject ;T3DB _fbg .PdfObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_cadb _gg .ReadSeeker ;_ffca *_fbg .PdfParser ;_gafe *PdfReader ;Reader *PdfReader ;_efgd []*PdfPage ;_ebaf *PdfAcroForm ;_dcae *DSS ;_cfcc *Permissions ;_cagb _fbg .XrefTable ;_fgbf int64 ;_cedef int ;_cgddd []_fbg .PdfObject ;
_gbed map[_fbg .PdfObject ]struct{};_daec map[_fbg .PdfObject ]int64 ;_bdec map[_fbg .PdfObject ]struct{};_fdc map[_fbg .PdfObject ]struct{};_aaaa int64 ;_aae bool ;_acde string ;_gggf *EncryptOptions ;_baa *PdfInfo ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cfgag []byte )(_feagc int ,_cbbgg error );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbac pdfFontType3 )GetCharMetrics (code _cf .CharCode )(_dg .CharMetrics ,bool ){if _aecbc ,_bddc :=_fbac ._fbecd [code ];_bddc {return _dg .CharMetrics {Wx :_aecbc },true ;};if _dg .IsStdFont (_dg .StdFontName (_fbac ._daef )){return _dg .CharMetrics {Wx :250},true ;
};return _dg .CharMetrics {},false ;};func _gdefad (_cccd *_fbg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gadaf :=PdfShadingType3 {};_bdbea :=_cccd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bdbea ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_abebc ,_eceg :=_bdbea .(*_fbg .PdfObjectArray );if !_eceg {_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdbea );
return nil ,_fbg .ErrTypeError ;};if _abebc .Len ()!=6{_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_abebc .Len ());return nil ,ErrInvalidAttribute ;
};_gadaf .Coords =_abebc ;if _fbggd :=_cccd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbggd !=nil {_fbggd =_fbg .TraceToDirectObject (_fbggd );_eggbd ,_bgdg :=_fbggd .(*_fbg .PdfObjectArray );if !_bgdg {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbggd );
return nil ,_fbg .ErrTypeError ;};_gadaf .Domain =_eggbd ;};_bdbea =_cccd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bdbea ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gadaf .Function =[]PdfFunction {};if _cfdeg ,_ggcea :=_bdbea .(*_fbg .PdfObjectArray );_ggcea {for _ ,_bced :=range _cfdeg .Elements (){_bdbgbd ,_aceeea :=_aabg (_bced );if _aceeea !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aceeea );
return nil ,_aceeea ;};_gadaf .Function =append (_gadaf .Function ,_bdbgbd );};}else {_dbfb ,_beec :=_aabg (_bdbea );if _beec !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beec );
return nil ,_beec ;};_gadaf .Function =append (_gadaf .Function ,_dbfb );};if _bbgae :=_cccd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbgae !=nil {_bbgae =_fbg .TraceToDirectObject (_bbgae );_cace ,_cggbe :=_bbgae .(*_fbg .PdfObjectArray );if !_cggbe {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgae );
return nil ,_fbg .ErrTypeError ;};if _cace .Len ()!=2{_adc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cace .Len ());return nil ,ErrInvalidAttribute ;
};_gadaf .Extend =_cace ;};return &_gadaf ,nil ;};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_ggbafc *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_ggbafc ._dbfbb =&displayDocTitle ;};

// ToPdfObject implements interface PdfModel.
func (_cba *PdfAnnotationInk )ToPdfObject ()_fbg .PdfObject {_cba .PdfAnnotation .ToPdfObject ();_bdfd :=_cba ._ecfe ;_fbge :=_bdfd .PdfObject .(*_fbg .PdfObjectDictionary );_cba .PdfAnnotationMarkup .appendToPdfDictionary (_fbge );_fbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0049\u006e\u006b"));
_fbge .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cba .InkList );_fbge .SetIfNotNil ("\u0042\u0053",_cba .BS );return _bdfd ;};func _gdcce (_aeffa _fbg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dgadb :=&PdfPageResourcesColorspaces {};
if _cbaab ,_febb :=_aeffa .(*_fbg .PdfIndirectObject );_febb {_dgadb ._edda =_cbaab ;_aeffa =_cbaab .PdfObject ;};_baaaa ,_ddfad :=_fbg .GetDict (_aeffa );if !_ddfad {return nil ,_fd .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgadb .Names =[]string {};_dgadb .Colorspaces =map[string ]PdfColorspace {};for _ ,_egaaa :=range _baaaa .Keys (){_edbae :=_baaaa .Get (_egaaa );_dgadb .Names =append (_dgadb .Names ,string (_egaaa ));_fcbce ,_ddca :=NewPdfColorspaceFromPdfObject (_edbae );
if _ddca !=nil {return nil ,_ddca ;};_dgadb .Colorspaces [string (_egaaa )]=_fcbce ;};return _dgadb ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cadba *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fbg .GetNumberAsFloat (_cadba .CapHeight );};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gaa *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_addb ,_bdeg :=color .(*PdfColorDeviceGray );if !_bdeg {_adc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_addb ),float64 (*_addb ),float64 (*_addb )),nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ddb PdfModel ;Type _fbg .PdfObject ;S _fbg .PdfObject ;Next _fbg .PdfObject ;_gc *_fbg .PdfIndirectObject ;};func (_dfag *PdfReader )newPdfAnnotationMarkupFromDict (_gedc *_fbg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bde :=&PdfAnnotationMarkup {};
if _afdb :=_gedc .Get ("\u0054");_afdb !=nil {_bde .T =_afdb ;};if _afdbd :=_gedc .Get ("\u0050\u006f\u0070u\u0070");_afdbd !=nil {_ebd ,_fcbc :=_afdbd .(*_fbg .PdfIndirectObject );if !_fcbc {if _ ,_gff :=_afdbd .(*_fbg .PdfObjectNull );!_gff {return nil ,_fd .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cgf ,_cdg :=_dfag .newPdfAnnotationFromIndirectObject (_ebd );if _cdg !=nil {return nil ,_cdg ;};if _cgf !=nil {_gafg ,_abec :=_cgf ._cdc .(*PdfAnnotationPopup );if !_abec {return nil ,_fd .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bde .Popup =_gafg ;};};};if _dge :=_gedc .Get ("\u0043\u0041");_dge !=nil {_bde .CA =_dge ;};if _cegb :=_gedc .Get ("\u0052\u0043");_cegb !=nil {_bde .RC =_cegb ;};if _cgbg :=_gedc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cgbg !=nil {_bde .CreationDate =_cgbg ;};if _agf :=_gedc .Get ("\u0049\u0052\u0054");_agf !=nil {_bde .IRT =_agf ;};if _cce :=_gedc .Get ("\u0053\u0075\u0062\u006a");_cce !=nil {_bde .Subj =_cce ;};if _edce :=_gedc .Get ("\u0052\u0054");_edce !=nil {_bde .RT =_edce ;
};if _dff :=_gedc .Get ("\u0049\u0054");_dff !=nil {_bde .IT =_dff ;};if _ddfge :=_gedc .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ddfge !=nil {_bde .ExData =_ddfge ;};return _bde ,nil ;};func _acaec (_dbgdf string )map[string ]string {_abgadb :=_daba .Split (_dbgdf ,-1);
_dbbc :=map[string ]string {};for _ ,_dgfgb :=range _abgadb {_gaga :=_ffcdg .FindStringSubmatch (_dgfgb );if _gaga ==nil {continue ;};_ceeg ,_cbeege :=_gaga [1],_gaga [2];_dbbc [_ceeg ]=_cbeege ;};return _dbbc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_afbc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_aef .File ,error ){const _fbbbe ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_adbb ,_cfee :=_aef .Open (pdfFile );if _cfee !=nil {return nil ,nil ,_cfee ;};_gedff ,_cfee :=_dggcc (_adbb ,opts ,true ,_fbbbe );if _cfee !=nil {_adbb .Close ();return nil ,nil ,_cfee ;};_gedff ._ebea =pdfFile ;return _gedff ,_adbb ,nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gcdad :_fbg .MakeIndirectObject (_fbg .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_fca :=NewPdfAction ();_cec :=&PdfActionTrans {};_cec .PdfAction =_fca ;_fca .SetContext (_cec );return _cec ;};func (_aeca *PdfReader )loadDSS ()(*DSS ,error ){if _aeca ._eedad .GetCrypter ()!=nil &&!_aeca ._eedad .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dadab :=_aeca ._ffcac .Get ("\u0044\u0053\u0053");if _dadab ==nil {return nil ,nil ;};_dcgbf ,_ :=_fbg .GetIndirect (_dadab );_dadab =_fbg .TraceToDirectObject (_dadab );switch _edafa :=_dadab .(type ){case *_fbg .PdfObjectNull :return nil ,nil ;case *_fbg .PdfObjectDictionary :return _bdc (_dcgbf ,_edafa );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_dadab );};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_adffb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_agca ,_bccb :=color .(*PdfColorCalRGB );if !_bccb {_adc .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_affdd :=_agca .A ();_aedf :=_agca .B ();_bggd :=_agca .C ();X :=_adffb .Matrix [0]*_ab .Pow (_affdd ,_adffb .Gamma [0])+_adffb .Matrix [3]*_ab .Pow (_aedf ,_adffb .Gamma [1])+_adffb .Matrix [6]*_ab .Pow (_bggd ,_adffb .Gamma [2]);
Y :=_adffb .Matrix [1]*_ab .Pow (_affdd ,_adffb .Gamma [0])+_adffb .Matrix [4]*_ab .Pow (_aedf ,_adffb .Gamma [1])+_adffb .Matrix [7]*_ab .Pow (_bggd ,_adffb .Gamma [2]);Z :=_adffb .Matrix [2]*_ab .Pow (_affdd ,_adffb .Gamma [0])+_adffb .Matrix [5]*_ab .Pow (_aedf ,_adffb .Gamma [1])+_adffb .Matrix [8]*_ab .Pow (_bggd ,_adffb .Gamma [2]);
_dccf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gece :=-0.969256*X +1.875992*Y +0.041556*Z ;_gcee :=0.055648*X +-0.204043*Y +1.057311*Z ;_dccf =_ab .Min (_ab .Max (_dccf ,0),1.0);_gece =_ab .Min (_ab .Max (_gece ,0),1.0);_gcee =_ab .Min (_ab .Max (_gcee ,0),1.0);
return NewPdfColorDeviceRGB (_dccf ,_gece ,_gcee ),nil ;};

// NewKDictFromPdfObject creates a new K dictionary object from a PDF object.
func NewKDictFromPdfObject (obj _fbg .PdfObject )(*KDict ,error ){_gbgea :=_fbg .ResolveReference (obj );if _gbgea ==nil {return nil ,_e .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_ebded ,_egdgb :=_fbg .GetDict (_gbgea );
if !_egdgb {return nil ,_e .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_ebddd :=&KDict {};if _fbeac :=_ebded .Get ("\u0053");_fbeac !=nil {_ebddd .S =_fbeac ;
};if _bcedd :=_ebded .Get ("\u0050");_bcedd !=nil {_ebddd .P =_bcedd ;};if _fcgbe :=_ebded .Get ("\u0049\u0044");_fcgbe !=nil {if _faggg ,_gbdbg :=_fbg .GetString (_fcgbe );_gbdbg {_ebddd .ID =_faggg ;};};if _bdaa :=_ebded .Get ("\u0050\u0067");_bdaa !=nil {_ebddd .Pg =_bdaa ;
};if _gacbd :=_ebded .Get ("\u004b");_gacbd !=nil {_ebddd .K =_gacbd ;switch _ddcfg :=_gacbd .(type ){case *_fbg .PdfObjectArray :if _febdd ,_fccfea :=_fbg .GetArray (_gacbd );_fccfea {for _ ,_eaadg :=range _febdd .Elements (){switch _cfgeb :=_eaadg .(type ){case *_fbg .PdfIndirectObject :_bbgcc ,_aeegg :=NewKDictFromPdfObject (_cfgeb );
if _aeegg !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_aeegg );continue ;};_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_daabc :_bbgcc });
case *_fbg .PdfObjectInteger :if _aage ,_edeff :=_fbg .GetIntVal (_eaadg );_edeff {_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_dcffg :&_aage });};case *_fbg .PdfObjectDictionary :_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_cfcg :_eaadg });};};};
case *_fbg .PdfIndirectObject :_dcbg ,_acccd :=NewKDictFromPdfObject (_ddcfg );if _acccd !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_acccd );
};if _dcbg !=nil {_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_daabc :_dcbg });};case *_fbg .PdfObjectDictionary :_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_cfcg :_ddcfg });case *_fbg .PdfObjectInteger :if _ecdd ,_baadd :=_fbg .GetIntVal (_gacbd );
_baadd {_ebddd ._cgfe =append (_ebddd ._cgfe ,&KValue {_dcffg :&_ecdd });};};};if _gafdf :=_ebded .Get ("\u0041");_gafdf !=nil {_ebddd .A =_gafdf ;};if _baeg :=_ebded .Get ("\u0043");_baeg !=nil {_ebddd .C =_baeg ;};if _dcdgb :=_ebded .Get ("\u0052");_dcdgb !=nil {if _fbce ,_fcbad :=_fbg .GetInt (_dcdgb );
_fcbad {_ebddd .R =_fbce ;};};if _afaef :=_ebded .Get ("\u0054");_afaef !=nil {if _bcfdd ,_abafg :=_fbg .GetString (_afaef );_abafg {_ebddd .T =_bcfdd ;};};if _cabbd :=_ebded .Get ("\u004c\u0061\u006e\u0067");_cabbd !=nil {if _aeec ,_dcabdb :=_fbg .GetString (_cabbd );
_dcabdb {_ebddd .Lang =_aeec ;};};if _afeee :=_ebded .Get ("\u0041\u006c\u0074");_afeee !=nil {if _fefae ,_cbfbb :=_fbg .GetString (_afeee );_cbfbb {_ebddd .Alt =_fefae ;};};if _cfad :=_ebded .Get ("\u0045");_cfad !=nil {if _bbcdcb ,_gbeae :=_fbg .GetString (_cfad );
_gbeae {_ebddd .E =_bbcdcb ;};};if _beggc :=_ebded .Get ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074");_beggc !=nil {if _adfdf ,_ceeded :=_fbg .GetString (_beggc );_ceeded {_ebddd .ActualText =_adfdf ;};};return _ebddd ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_gdcda *PdfField )Flags ()FieldFlag {var _fdfaf FieldFlag ;_cccfa ,_dgfd :=_gdcda .inherit (func (_cfbf *PdfField )bool {if _cfbf .Ff !=nil {_fdfaf =FieldFlag (*_cfbf .Ff );return true ;};return false ;});if _dgfd !=nil {_adc .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dgfd );
};if !_cccfa {_adc .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fdfaf ;};

// G returns the value of the green component of the color.
func (_cef *PdfColorDeviceRGB )G ()float64 {return _cef [1]};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_bdfe *PdfAcroForm ,_dfbf *PdfField ,_bdeb *PdfAnnotationWidget )(*_fbg .PdfObjectDictionary ,error );};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cffd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gcfe ,_aeab :=color .(*PdfColorCalGray );if !_aeab {_adc .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gcfe .Val ();X :=_cffd .WhitePoint [0]*_ab .Pow (ANorm ,_cffd .Gamma );Y :=_cffd .WhitePoint [1]*_ab .Pow (ANorm ,_cffd .Gamma );
Z :=_cffd .WhitePoint [2]*_ab .Pow (ANorm ,_cffd .Gamma );_eccb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dddgg :=-0.969256*X +1.875992*Y +0.041556*Z ;_fdfgg :=0.055648*X +-0.204043*Y +1.057311*Z ;_eccb =_ab .Min (_ab .Max (_eccb ,0),1.0);_dddgg =_ab .Min (_ab .Max (_dddgg ,0),1.0);
_fdfgg =_ab .Min (_ab .Max (_fdfgg ,0),1.0);return NewPdfColorDeviceRGB (_eccb ,_dddgg ,_fdfgg ),nil ;};func _cbde (_dgce *_fbg .PdfObjectDictionary ,_fdga *fontCommon )(*pdfFontType3 ,error ){_bffb :=_cbdced (_fdga );_eadgf :=_dgce .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _eadgf ==nil {_eadgf =_fbg .MakeInteger (0);};_bffb .FirstChar =_eadgf ;_bdfcg ,_afdg :=_fbg .GetIntVal (_eadgf );if !_afdg {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eadgf );
return nil ,_fbg .ErrTypeError ;};_cbdgb :=_cf .CharCode (_bdfcg );_eadgf =_dgce .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eadgf ==nil {_eadgf =_fbg .MakeInteger (255);};_bffb .LastChar =_eadgf ;_bdfcg ,_afdg =_fbg .GetIntVal (_eadgf );
if !_afdg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eadgf );return nil ,_fbg .ErrTypeError ;
};_gagc :=_cf .CharCode (_bdfcg );_eadgf =_dgce .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eadgf !=nil {_bffb .Resources =_eadgf ;};_eadgf =_dgce .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _eadgf ==nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_eadgf );
return nil ,_fbg .ErrNotSupported ;};_bffb .CharProcs =_eadgf ;_eadgf =_dgce .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _eadgf ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_eadgf );
return nil ,_fbg .ErrNotSupported ;};_bffb .FontMatrix =_eadgf ;_bffb ._fbecd =make (map[_cf .CharCode ]float64 );_eadgf =_dgce .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eadgf !=nil {_bffb .Widths =_eadgf ;_bfed ,_ddeef :=_fbg .GetArray (_eadgf );
if !_ddeef {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eadgf );return nil ,_fbg .ErrTypeError ;
};_bgbeb ,_bcfeg :=_bfed .ToFloat64Array ();if _bcfeg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bcfeg ;};if len (_bgbeb )!=int (_gagc -_cbdgb +1){_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gagc -_cbdgb +1,len (_bgbeb ));
return nil ,_fbg .ErrRangeError ;};_dcafe ,_ddeef :=_fbg .GetArray (_bffb .FontMatrix );if !_ddeef {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcafe );
return nil ,_bcfeg ;};_eaad ,_bcfeg :=_dcafe .ToFloat64Array ();if _bcfeg !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bcfeg ;};_feadf :=_fbe .NewMatrix (_eaad [0],_eaad [1],_eaad [2],_eaad [3],_eaad [4],_eaad [5]);for _cdbeb ,_ddagd :=range _bgbeb {_cfcd ,_ :=_feadf .Transform (_ddagd ,_ddagd );_bffb ._fbecd [_cbdgb +_cf .CharCode (_cdbeb )]=_cfcd ;};};_bffb .Encoding =_fbg .TraceToDirectObject (_dgce .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_eddfg :=_dgce .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _eddfg !=nil {_bffb ._eadad =_fbg .TraceToDirectObject (_eddfg );_aaeba ,_ecgad :=_bcbe (_bffb ._eadad ,&_bffb .fontCommon );if _ecgad !=nil {return nil ,_ecgad ;};_bffb ._ceadf =_aaeba ;
};if _dbeba :=_bffb ._ceadf ;_dbeba !=nil {_bffb ._edegd =_cf .NewCMapEncoder ("",nil ,_dbeba );}else {_bffb ._edegd =_cf .NewPdfDocEncoder ();};return _bffb ,nil ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_gfad *MultipleFontEncoder )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){_bbdbf :=_gfad .CurrentFont ;_dadfc ,_ddfcf :=_bbdbf .GetRuneMetrics (r );for _dadd :=1;_dadd < len (_gfad ._agbb )&&_dadfc .Wx ==0;_dadd ++{_bbdbf =_gfad ._agbb [_dadd ];
_dadfc ,_ddfcf =_bbdbf .GetRuneMetrics (r );};return _dadfc ,_ddfcf ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cafeb *PdfShadingPatternType2 )ToPdfObject ()_fbg .PdfObject {_cafeb .PdfPattern .ToPdfObject ();_gcaf :=_cafeb .getDict ();if _cafeb .Shading !=nil {_gcaf .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cafeb .Shading .ToPdfObject ());};if _cafeb .Matrix !=nil {_gcaf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cafeb .Matrix );
};if _cafeb .ExtGState !=nil {_gcaf .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cafeb .ExtGState );};return _cafeb ._eadbd ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ccgaa *PdfReader )PageFromIndirectObject (ind *_fbg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ccgaa .PageList )!=len (_ccgaa ._bdad ){return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bfdad ,_aaddf :=range _ccgaa ._bdad {if _aaddf ==ind {return _ccgaa .PageList [_bfdad ],_bfdad +1,nil ;};};return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_abef :=NewPdfAnnotation ();_bbdb :=&PdfAnnotationSound {};_bbdb .PdfAnnotation =_abef ;_bbdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abef .SetContext (_bbdb );return _bbdb ;};type crossReference struct{Type int ;


// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_bgcc *PdfPageResources )SetXObjectFormByName (keyName _fbg .PdfObjectName ,xform *XObjectForm )error {_fbgeag :=xform .ToPdfObject ().(*_fbg .PdfObjectStream );_dggge :=_bgcc .SetXObjectByName (keyName ,_fbgeag );return _dggge ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ddgec *PdfFont )GetCharMetrics (code _cf .CharCode )(CharMetrics ,bool ){var _gefa _dg .CharMetrics ;switch _agbff :=_ddgec ._fbff .(type ){case *pdfFontSimple :if _gfde ,_edbc :=_agbff .GetCharMetrics (code );_edbc {return _gfde ,_edbc ;};case *pdfFontType0 :if _cgeff ,_bdge :=_agbff .GetCharMetrics (code );
_bdge {return _cgeff ,_bdge ;};case *pdfCIDFontType0 :if _ebca ,_dcaga :=_agbff .GetCharMetrics (code );_dcaga {return _ebca ,_dcaga ;};case *pdfCIDFontType2 :if _ebbad ,_gdeed :=_agbff .GetCharMetrics (code );_gdeed {return _ebbad ,_gdeed ;};case *pdfFontType3 :if _fddbe ,_ffdb :=_agbff .GetCharMetrics (code );
_ffdb {return _fddbe ,_ffdb ;};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ddgec ._fbff );
return _gefa ,false ;};if _dfbb ,_bbcaf :=_ddgec .GetFontDescriptor ();_bbcaf ==nil &&_dfbb !=nil {return _dg .CharMetrics {Wx :_dfbb ._ecbbd },true ;};_adc .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ddgec );
return _gefa ,false ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_fbg .PdfParser ;DiffPolicy _eae .DiffPolicy ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fccag *LTV )Enable (sig *PdfSignature ,extraCerts []*_dd .Certificate )error {if _cfdbe :=_fccag .validateSig (sig );_cfdbe !=nil {return _cfdbe ;};_ddfd ,_gagcd :=_fccag .generateVRIKey (sig );if _gagcd !=nil {return _gagcd ;};if _ ,_ecbde :=_fccag ._aeded .VRI [_ddfd ];
_ecbde &&_fccag .SkipExisting {return nil ;};_gcffb ,_gagcd :=sig .GetCerts ();if _gagcd !=nil {return _gagcd ;};return _fccag .enable (_gcffb ,extraCerts ,_ddfd );};

// Register registers (caches) a model to primitive object relationship.
func (_ddcdc *modelManager )Register (primitive _fbg .PdfObject ,model PdfModel ){_ddcdc ._ccddd .Lock ();defer _ddcdc ._ccddd .Unlock ();_ddcdc ._bgdee .Lock ();defer _ddcdc ._bgdee .Unlock ();_ddcdc ._eggac [model ]=primitive ;_ddcdc ._ebada [primitive ]=model ;
};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_ffeb *PdfReader )GetEncryptionMethod ()string {_ebdee :=_ffeb ._eedad .GetCrypter ();return _ebdee .String ();};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_deecc *ViewerPreferences )IsHideToolbar ()bool {if _deecc ._fggca ==nil {return false ;};return *_deecc ._fggca ;};type pdfCIDFontType0 struct{fontCommon ;_bdafc *_fbg .PdfIndirectObject ;_fgcaa _cf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fbg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fbg .PdfObject ;W _fbg .PdfObject ;DW2 _fbg .PdfObject ;W2 _fbg .PdfObject ;_aaab map[_cf .CharCode ]float64 ;_egaee float64 ;};

// Transform rectangle with the supplied matrix.
func (_aadef *PdfRectangle )Transform (transformMatrix _fbe .Matrix ){_aadef .Llx ,_aadef .Lly =transformMatrix .Transform (_aadef .Llx ,_aadef .Lly );_aadef .Urx ,_aadef .Ury =transformMatrix .Transform (_aadef .Urx ,_aadef .Ury );_aadef .Normalize ();
};func _fcbbc (_eggga *_fbg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ddebe :=PdfShadingType4 {};_efebe :=_eggga .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _efebe ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddgfd ,_baeac :=_efebe .(*_fbg .PdfObjectInteger );if !_baeac {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efebe );
return nil ,_fbg .ErrTypeError ;};_ddebe .BitsPerCoordinate =_ddgfd ;_efebe =_eggga .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _efebe ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddgfd ,_baeac =_efebe .(*_fbg .PdfObjectInteger );if !_baeac {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_efebe );
return nil ,_fbg .ErrTypeError ;};_ddebe .BitsPerComponent =_ddgfd ;_efebe =_eggga .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _efebe ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddgfd ,_baeac =_efebe .(*_fbg .PdfObjectInteger );if !_baeac {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_efebe );
return nil ,_fbg .ErrTypeError ;};_ddebe .BitsPerComponent =_ddgfd ;_efebe =_eggga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _efebe ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fece ,_baeac :=_efebe .(*_fbg .PdfObjectArray );if !_baeac {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efebe );
return nil ,_fbg .ErrTypeError ;};_ddebe .Decode =_fece ;_efebe =_eggga .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _efebe ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ddebe .Function =[]PdfFunction {};if _ddegea ,_fcbec :=_efebe .(*_fbg .PdfObjectArray );_fcbec {for _ ,_gbafd :=range _ddegea .Elements (){_deggaa ,_ceea :=_aabg (_gbafd );if _ceea !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ceea );
return nil ,_ceea ;};_ddebe .Function =append (_ddebe .Function ,_deggaa );};}else {_egfcc ,_ecgae :=_aabg (_efebe );if _ecgae !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecgae );
return nil ,_ecgae ;};_ddebe .Function =append (_ddebe .Function ,_egfcc );};return &_ddebe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddae *PdfAnnotationScreen )ToPdfObject ()_fbg .PdfObject {_ddae .PdfAnnotation .ToPdfObject ();_fcaga :=_ddae ._ecfe ;_edab :=_fcaga .PdfObject .(*_fbg .PdfObjectDictionary );_edab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_edab .SetIfNotNil ("\u0054",_ddae .T );_edab .SetIfNotNil ("\u004d\u004b",_ddae .MK );_edab .SetIfNotNil ("\u0041",_ddae .A );_edab .SetIfNotNil ("\u0041\u0041",_ddae .AA );return _fcaga ;};

// Direction returns the value of the direction.
func (_eccbd *ViewerPreferences )Direction ()Direction {return _eccbd ._defgf };func (_defb *PdfReader )newPdfActionRenditionFromDict (_aace *_fbg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_aace .Get ("\u0052"),AN :_aace .Get ("\u0041\u004e"),OP :_aace .Get ("\u004f\u0050"),JS :_aace .Get ("\u004a\u0053")},nil ;
};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_dbbbc *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_dbbbc ._cffcc =&hideWindowUI };

// ToPdfObject implements interface PdfModel.
func (_de *PdfActionRendition )ToPdfObject ()_fbg .PdfObject {_de .PdfAction .ToPdfObject ();_eaag :=_de ._gc ;_cgd :=_eaag .PdfObject .(*_fbg .PdfObjectDictionary );_cgd .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeRendition )));_cgd .SetIfNotNil ("\u0052",_de .R );
_cgd .SetIfNotNil ("\u0041\u004e",_de .AN );_cgd .SetIfNotNil ("\u004f\u0050",_de .OP );_cgd .SetIfNotNil ("\u004a\u0053",_de .JS );return _eaag ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_beccg *PdfShadingType5 )ToPdfObject ()_fbg .PdfObject {_beccg .PdfShading .ToPdfObject ();_gaaab ,_efadg :=_beccg .getShadingDict ();if _efadg !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _beccg .BitsPerCoordinate !=nil {_gaaab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_beccg .BitsPerCoordinate );};if _beccg .BitsPerComponent !=nil {_gaaab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_beccg .BitsPerComponent );
};if _beccg .VerticesPerRow !=nil {_gaaab .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_beccg .VerticesPerRow );};if _beccg .Decode !=nil {_gaaab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_beccg .Decode );};
if _beccg .Function !=nil {if len (_beccg .Function )==1{_gaaab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beccg .Function [0].ToPdfObject ());}else {_gfdda :=_fbg .MakeArray ();for _ ,_dcdce :=range _beccg .Function {_gfdda .Append (_dcdce .ToPdfObject ());
};_gaaab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdda );};};return _beccg ._gedcg ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_acbdc *_ff .Document )error ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ddge *PdfColorCalGray )GetNumComponents ()int {return 1};func (_gggb *PdfReader )newPdfAnnotationSquareFromDict (_abd *_fbg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gae :=PdfAnnotationSquare {};_dffc ,_gcfd :=_gggb .newPdfAnnotationMarkupFromDict (_abd );
if _gcfd !=nil {return nil ,_gcfd ;};_gae .PdfAnnotationMarkup =_dffc ;_gae .BS =_abd .Get ("\u0042\u0053");_gae .IC =_abd .Get ("\u0049\u0043");_gae .BE =_abd .Get ("\u0042\u0045");_gae .RD =_abd .Get ("\u0052\u0044");return &_gae ,nil ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_eddcc *MultipleFontEncoder )Encoder (rn rune )(_cf .TextEncoder ,bool ){_fgaa :=_eddcc .CurrentFont ;_egaed :=_fgaa .Encoder ();_ ,_egege :=_egaed .RuneToCharcode (rn );for _egedb :=1;_egedb < len (_eddcc ._agbb )&&!_egege ;_egedb ++{_fgaa =_eddcc ._agbb [_egedb ];
_egaed =_fgaa .Encoder ();_ ,_egege =_egaed .RuneToCharcode (rn );_eddcc .CurrentFont =_fgaa ;};return _egaed ,_egege ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ddfa :=NewPdfAnnotation ();_efcbg :=&PdfAnnotationRichMedia {};_efcbg .PdfAnnotation =_ddfa ;_ddfa .SetContext (_efcbg );return _efcbg ;};func _abfac (_bgcd *_fbg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cabcaf :=&PdfShadingPattern {};
_gebcb :=_bgcd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gebcb ==nil {_adc .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fdfec ,_gegfd :=_badfd (_gebcb );
if _gegfd !=nil {_adc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gegfd );return nil ,_gegfd ;};_cabcaf .Shading =_fdfec ;if _gccfd :=_bgcd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gccfd !=nil {_dgeef ,_afdee :=_gccfd .(*_fbg .PdfObjectArray );if !_afdee {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gccfd );
return nil ,_fbg .ErrTypeError ;};_cabcaf .Matrix =_dgeef ;};if _geda :=_bgcd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_geda !=nil {_cabcaf .ExtGState =_geda ;};return _cabcaf ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ecedf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_efae *PdfSignature ,_ggcbe Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_ebaa *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_acecf *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_abbce *PdfSignature ,_bged Hasher )error ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_fbg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cgdf *_fbg .PdfIndirectObject ;};func (_fbaeb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_egbce *_fbg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bge :=PdfAnnotationPrinterMark {};
_bge .MN =_egbce .Get ("\u004d\u004e");return &_bge ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ceggg *PdfColorspaceICCBased )ToPdfObject ()_fbg .PdfObject {_fdcgg :=&_fbg .PdfObjectArray {};_fdcgg .Append (_fbg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ffaf *_fbg .PdfObjectStream ;if _ceggg ._fdfgb !=nil {_ffaf =_ceggg ._fdfgb ;
}else {_ffaf =&_fbg .PdfObjectStream {};};_gadc :=_fbg .MakeDict ();_gadc .Set ("\u004e",_fbg .MakeInteger (int64 (_ceggg .N )));if _ceggg .Alternate !=nil {_gadc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ceggg .Alternate .ToPdfObject ());};
if _ceggg .Metadata !=nil {_gadc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ceggg .Metadata );};if _ceggg .Range !=nil {var _fgae []_fbg .PdfObject ;for _ ,_dccdb :=range _ceggg .Range {_fgae =append (_fgae ,_fbg .MakeFloat (_dccdb ));};
_gadc .Set ("\u0052\u0061\u006eg\u0065",_fbg .MakeArray (_fgae ...));};_gadc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_ceggg .Data ))));_ffaf .Stream =_ceggg .Data ;_ffaf .PdfObjectDictionary =_gadc ;_fdcgg .Append (_ffaf );
if _ceggg ._afdbc !=nil {_ceggg ._afdbc .PdfObject =_fdcgg ;return _ceggg ._afdbc ;};return _fdcgg ;};func (_aefb *PdfReader )newPdfAnnotationInkFromDict (_fde *_fbg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_effd :=PdfAnnotationInk {};_abb ,_cbfg :=_aefb .newPdfAnnotationMarkupFromDict (_fde );
if _cbfg !=nil {return nil ,_cbfg ;};_effd .PdfAnnotationMarkup =_abb ;_effd .InkList =_fde .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_effd .BS =_fde .Get ("\u0042\u0053");return &_effd ,nil ;};func (_befd *PdfReader )newPdfActionGotoFromDict (_fee *_fbg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fee .Get ("\u0044")},nil ;
};func (_dcgdb *PdfWriter )writeXRefStreams (_daddfe int ,_fccabd int64 )error {_gcadg :=_daddfe +1;_dcgdb ._baecgd [_gcadg ]=crossReference {Type :1,ObjectNumber :_gcadg ,Offset :_fccabd };_ddedg :=_fb .NewBuffer (nil );_cafff :=_fbg .MakeArray ();for _aggd :=0;
_aggd <=_daddfe ;{for ;_aggd <=_daddfe ;_aggd ++{_cegbeb ,_defegc :=_dcgdb ._baecgd [_aggd ];if _defegc &&(!_dcgdb ._aceab ||_dcgdb ._aceab &&(_cegbeb .Type ==1&&_cegbeb .Offset >=_dcgdb ._eceb ||_cegbeb .Type ==0)){break ;};};var _gcega int ;for _gcega =_aggd +1;
_gcega <=_daddfe ;_gcega ++{_daada ,_cdbbf :=_dcgdb ._baecgd [_gcega ];if _cdbbf &&(!_dcgdb ._aceab ||_dcgdb ._aceab &&(_daada .Type ==1&&_daada .Offset > _dcgdb ._eceb )){continue ;};break ;};_cafff .Append (_fbg .MakeInteger (int64 (_aggd )),_fbg .MakeInteger (int64 (_gcega -_aggd )));
for _bbgeg :=_aggd ;_bbgeg < _gcega ;_bbgeg ++{_cgfba :=_dcgdb ._baecgd [_bbgeg ];switch _cgfba .Type {case 0:_bg .Write (_ddedg ,_bg .BigEndian ,byte (0));_bg .Write (_ddedg ,_bg .BigEndian ,uint32 (0));_bg .Write (_ddedg ,_bg .BigEndian ,uint16 (0xFFFF));
case 1:_bg .Write (_ddedg ,_bg .BigEndian ,byte (1));_bg .Write (_ddedg ,_bg .BigEndian ,uint32 (_cgfba .Offset ));_bg .Write (_ddedg ,_bg .BigEndian ,uint16 (_cgfba .Generation ));case 2:_bg .Write (_ddedg ,_bg .BigEndian ,byte (2));_bg .Write (_ddedg ,_bg .BigEndian ,uint32 (_cgfba .ObjectNumber ));
_bg .Write (_ddedg ,_bg .BigEndian ,uint16 (_cgfba .Index ));};};_aggd =_gcega +1;};_eaaga ,_cedcf :=_fbg .MakeStream (_ddedg .Bytes (),_fbg .NewFlateEncoder ());if _cedcf !=nil {return _cedcf ;};_eaaga .ObjectNumber =int64 (_gcadg );_eaaga .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0058\u0052\u0065\u0066"));
_eaaga .PdfObjectDictionary .Set ("\u0057",_fbg .MakeArray (_fbg .MakeInteger (1),_fbg .MakeInteger (4),_fbg .MakeInteger (2)));_eaaga .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cafff );_eaaga .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fbg .MakeInteger (int64 (_gcadg )));
_eaaga .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dcgdb ._abfag );_eaaga .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dcgdb ._bgbgb );if _dcgdb ._aceab &&_dcgdb ._ffbf > 0{_eaaga .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fbg .MakeInteger (_dcgdb ._ffbf ));
};if _dcgdb ._dbbgb !=nil {_eaaga .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dcgdb ._edcbd );};if _dcgdb ._bacgfa ==nil &&_dcgdb ._gebgg !=""&&_dcgdb ._aecaf !=""{_dcgdb ._bacgfa =_fbg .MakeArray (_fbg .MakeHexString (_dcgdb ._gebgg ),_fbg .MakeHexString (_dcgdb ._aecaf ));
};if _dcgdb ._bacgfa !=nil {_adc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dcgdb ._bacgfa );_eaaga .Set ("\u0049\u0044",_dcgdb ._bacgfa );};_dcgdb .writeObject (int (_eaaga .ObjectNumber ),_eaaga );return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_dbbce *Image )SetAlpha (alpha []byte ){_dbbce ._acag =alpha };func _bcfdg ()string {return _adc .Version };

// SetPageNumber sets the page number.
func (_bafee *KDict )SetPageNumber (pageNumber int64 ){_bafee ._ebegf =pageNumber };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_effcg *PdfPage )AddContentStreamByString (contentStr string )error {_fdfeb ,_bfceee :=_fbg .MakeStream ([]byte (contentStr ),_fbg .NewFlateEncoder ());if _bfceee !=nil {return _bfceee ;};if _effcg .Contents ==nil {_effcg .Contents =_fdfeb ;}else {_cfggb :=_fbg .TraceToDirectObject (_effcg .Contents );
_gcfba ,_cfbcc :=_cfggb .(*_fbg .PdfObjectArray );if !_cfbcc {_gcfba =_fbg .MakeArray (_cfggb );};_gcfba .Append (_fdfeb );_effcg .Contents =_gcfba ;};return nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_gbef *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _gbef .Range };func (_edb *PdfAnnotationMarkup )appendToPdfDictionary (_eeebc *_fbg .PdfObjectDictionary ){_eeebc .SetIfNotNil ("\u0054",_edb .T );if _edb .Popup !=nil {_eeebc .Set ("\u0050\u006f\u0070u\u0070",_edb .Popup .ToPdfObject ());
};_eeebc .SetIfNotNil ("\u0043\u0041",_edb .CA );_eeebc .SetIfNotNil ("\u0052\u0043",_edb .RC );_eeebc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_edb .CreationDate );_eeebc .SetIfNotNil ("\u0049\u0052\u0054",_edb .IRT );
_eeebc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_edb .Subj );_eeebc .SetIfNotNil ("\u0052\u0054",_edb .RT );_eeebc .SetIfNotNil ("\u0049\u0054",_edb .IT );_eeebc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_edb .ExData );};

// AddExtGState adds a graphics state to the XObject resources.
func (_edbcd *PdfPage )AddExtGState (name _fbg .PdfObjectName ,egs *_fbg .PdfObjectDictionary )error {if _edbcd .Resources ==nil {_edbcd .Resources =NewPdfPageResources ();};if _edbcd .Resources .ExtGState ==nil {_edbcd .Resources .ExtGState =_fbg .MakeDict ();
};_gggaf ,_ddbgg :=_fbg .TraceToDirectObject (_edbcd .Resources .ExtGState ).(*_fbg .PdfObjectDictionary );if !_ddbgg {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fbg .TraceToDirectObject (_edbcd .Resources .ExtGState ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gggaf .Set (name ,egs );return nil ;};

// GetNumPages returns the number of pages in the document.
func (_cccfe *PdfReader )GetNumPages ()(int ,error ){if _cccfe ._eedad .GetCrypter ()!=nil &&!_cccfe ._eedad .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_cccfe ._bdad ),nil ;};type pdfFont interface{_dg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fbg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_ede *PdfActionGoToE )ToPdfObject ()_fbg .PdfObject {_ede .PdfAction .ToPdfObject ();_edc :=_ede ._gc ;_cded :=_edc .PdfObject .(*_fbg .PdfObjectDictionary );_cded .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeGoToE )));if _ede .F !=nil {_cded .Set ("\u0046",_ede .F .ToPdfObject ());
};_cded .SetIfNotNil ("\u0044",_ede .D );_cded .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ede .NewWindow );_cded .SetIfNotNil ("\u0054",_ede .T );return _edc ;};func (_dbad *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// Y returns the value of the yellow component of the color.
func (_ecaaa *PdfColorDeviceCMYK )Y ()float64 {return _ecaaa [2]};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ddcc pdfCIDFontType0 )GetRuneMetrics (r rune )(_dg .CharMetrics ,bool ){return _dg .CharMetrics {Wx :_ddcc ._egaee },true ;};

// WriteToFile writes the output PDF to file.
func (_ffdge *PdfWriter )WriteToFile (outputFilePath string )error {_edgfd ,_ggcged :=_aef .Create (outputFilePath );if _ggcged !=nil {return _ggcged ;};defer _edgfd .Close ();return _ffdge .Write (_edgfd );};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fbg .PdfObject ;RichMediaContent _fbg .PdfObject ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cegf *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_cegf .updateObjectsDeep (dss .ToPdfObject (),nil );};_cegf ._dcae =dss ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fbg .StreamEncoder ;FormType _fbg .PdfObject ;BBox _fbg .PdfObject ;Matrix _fbg .PdfObject ;Resources *PdfPageResources ;Group _fbg .PdfObject ;Ref _fbg .PdfObject ;MetaData _fbg .PdfObject ;PieceInfo _fbg .PdfObject ;LastModified _fbg .PdfObject ;
StructParent _fbg .PdfObject ;StructParents _fbg .PdfObject ;OPI _fbg .PdfObject ;OC _fbg .PdfObject ;Name _fbg .PdfObject ;

// Stream data.
Stream []byte ;_gcbcg *_fbg .PdfObjectStream ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fdggc *Outline )Insert (index uint ,item *OutlineItem ){_gacef :=uint (len (_fdggc .Entries ));if index > _gacef {index =_gacef ;};_fdggc .Entries =append (_fdggc .Entries [:index ],append ([]*OutlineItem {item },_fdggc .Entries [index :]...)...);
};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fbg .PdfObject ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_aafcf *PdfShading )GetContainingPdfObject ()_fbg .PdfObject {return _aafcf ._gedcg };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fbg .PdfObject ;NewWindow _fbg .PdfObject ;T _fbg .PdfObject ;};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_fbg .MakeDict (),ParentTreeNextKey :0};};func _cbeaf (_adafaa *PdfPage ){_gafga :=_eef .GetLicenseKey ();if _gafga !=nil &&_gafga .IsLicensed (){return ;};_fgcffd :=_fbg .PdfObjectName ("\u0055\u0046\u0031");
if !_adafaa .Resources .HasFontByName (_fgcffd ){_adafaa .Resources .SetFontByName (_fgcffd ,DefaultFont ().ToPdfObject ());};var _bbeec []string ;_bbeec =append (_bbeec ,"\u0071");_bbeec =append (_bbeec ,"\u0042\u0054");_bbeec =append (_bbeec ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fgcffd .String ()));
_bbeec =append (_bbeec ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_bbeec =append (_bbeec ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dgddadb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bbeec =append (_bbeec ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dgddadb ));_bbeec =append (_bbeec ,"\u0045\u0054");_bbeec =append (_bbeec ,"\u0051");_cbcced :=_gdg .Join (_bbeec ,"\u000a");_adafaa .AddContentStreamByString (_cbcced );_adafaa .ToPdfObject ();
};func (_fdfbgb *PdfWriter )writeBytes (_faaccg []byte ){if _fdfbgb ._cefa !=nil {return ;};_afdgc ,_dbceg :=_fdfbgb ._cedb .Write (_faaccg );_fdfbgb ._fbdga +=int64 (_afdgc );_fdfbgb ._cefa =_dbceg ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bfdg *PdfFieldButton )IsCheckbox ()bool {return _bfdg .GetType ()==ButtonTypeCheckbox };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cdeab :=NewPdfAnnotation ();_eeea :=&PdfAnnotationRedact {};_eeea .PdfAnnotation =_cdeab ;_eeea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdeab .SetContext (_eeea );return _eeea ;};func (_dafbf *pdfFontType0 )baseFields ()*fontCommon {return &_dafbf .fontCommon };


// SetImage updates XObject Image with new image data.
func (_aeadad *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_aeadad .Filter .UpdateParams (img .GetParamsDict ());_fgebbe ,_edgab :=_aeadad .Filter .EncodeBytes (img .Data );if _edgab !=nil {return _edgab ;};_aeadad .Stream =_fgebbe ;_ggfdc :=img .Width ;
_aeadad .Width =&_ggfdc ;_ddcde :=img .Height ;_aeadad .Height =&_ddcde ;_bbdgd :=img .BitsPerComponent ;_aeadad .BitsPerComponent =&_bbdgd ;if cs ==nil {if img .ColorComponents ==1{_aeadad .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_aeadad .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_aeadad .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_aeadad .ColorSpace =cs ;};return nil ;
};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cegeg *pdfCIDFontType2 )ToPdfObject ()_fbg .PdfObject {if _cegeg ._fgdcc ==nil {_cegeg ._fgdcc =&_fbg .PdfIndirectObject {};};_egdf :=_cegeg .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_cegeg ._fgdcc .PdfObject =_egdf ;if _cegeg .CIDSystemInfo !=nil {_egdf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cegeg .CIDSystemInfo );};if _cegeg .DW !=nil {_egdf .Set ("\u0044\u0057",_cegeg .DW );};if _cegeg .DW2 !=nil {_egdf .Set ("\u0044\u0057\u0032",_cegeg .DW2 );
};if _cegeg .W !=nil {_egdf .Set ("\u0057",_cegeg .W );};if _cegeg .W2 !=nil {_egdf .Set ("\u0057\u0032",_cegeg .W2 );};if _cegeg .CIDToGIDMap !=nil {_egdf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cegeg .CIDToGIDMap );};return _cegeg ._fgdcc ;
};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_beda :=&PdfColorPattern {};return _beda };func (_edced *PdfWriter )optimize ()error {if _edced ._eagae ==nil {return nil ;};var _dgcca error ;_edced ._ddeeb ,_dgcca =_edced ._eagae .Optimize (_edced ._ddeeb );
if _dgcca !=nil {return _dgcca ;};_bfacfa :=make (map[_fbg .PdfObject ]struct{},len (_edced ._ddeeb ));for _ ,_geca :=range _edced ._ddeeb {_bfacfa [_geca ]=struct{}{};};_edced ._gcadf =_bfacfa ;return nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ecgcg :=&XObjectImage {};_fdfd :=&_fbg .PdfObjectStream {};_fdfd .PdfObjectDictionary =_fbg .MakeDict ();_ecgcg ._cacd =_fdfd ;return _ecgcg ;};

// HasExtGState checks if ExtGState name is available.
func (_edgbe *PdfPage )HasExtGState (name _fbg .PdfObjectName )bool {if _edgbe .Resources ==nil {return false ;};if _edgbe .Resources .ExtGState ==nil {return false ;};_bbfdb ,_bbdba :=_fbg .TraceToDirectObject (_edgbe .Resources .ExtGState ).(*_fbg .PdfObjectDictionary );
if !_bbdba {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fbg .TraceToDirectObject (_edgbe .Resources .ExtGState ));
return false ;};_gfcgb :=_bbfdb .Get (name );_abbfb :=_gfcgb !=nil ;return _abbfb ;};func _egffa ()*Names {return &Names {_gggca :_fbg .MakeIndirectObject (_fbg .MakeDict ())}};type pdfFontSimple struct{fontCommon ;_bfdag *_fbg .PdfIndirectObject ;_gaeda map[_cf .CharCode ]float64 ;
_efbad _cf .TextEncoder ;_adec _cf .TextEncoder ;_dgddad *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fbg .PdfObject ;LastChar _fbg .PdfObject ;Widths _fbg .PdfObject ;Encoding _fbg .PdfObject ;_ggcaa *_dg .RuneCharSafeMap ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_facfda *CompliancePdfReader )error ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetPrintScaling sets the value of the printScaling.
func (_aadcg *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_aadcg ._cfbcg =printScaling ;};func (_ecde *pdfFontType3 )baseFields ()*fontCommon {return &_ecde .fontCommon };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ToPdfObject implements interface PdfModel.
func (_fafb *PdfActionResetForm )ToPdfObject ()_fbg .PdfObject {_fafb .PdfAction .ToPdfObject ();_ffd :=_fafb ._gc ;_ggc :=_ffd .PdfObject .(*_fbg .PdfObjectDictionary );_ggc .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeResetForm )));_ggc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fafb .Fields );
_ggc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fafb .Flags );return _ffd ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fbg .PdfObjectArray ;TI *_fbg .PdfObjectInteger ;I *_fbg .PdfObjectArray ;};func (_dfg *PdfReader )newPdfActionMovieFromDict (_efcb *_fbg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_efcb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_efcb .Get ("\u0054"),Operation :_efcb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcecee *PdfShadingType7 )ToPdfObject ()_fbg .PdfObject {_dcecee .PdfShading .ToPdfObject ();_cfggfc ,_gfdab :=_dcecee .getShadingDict ();if _gfdab !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dcecee .BitsPerCoordinate !=nil {_cfggfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dcecee .BitsPerCoordinate );};if _dcecee .BitsPerComponent !=nil {_cfggfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dcecee .BitsPerComponent );
};if _dcecee .BitsPerFlag !=nil {_cfggfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dcecee .BitsPerFlag );};if _dcecee .Decode !=nil {_cfggfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dcecee .Decode );};if _dcecee .Function !=nil {if len (_dcecee .Function )==1{_cfggfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcecee .Function [0].ToPdfObject ());
}else {_efed :=_fbg .MakeArray ();for _ ,_cbfdf :=range _dcecee .Function {_efed .Append (_cbfdf .ToPdfObject ());};_cfggfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efed );};};return _dcecee ._gedcg ;};

// ToPdfObject implements interface PdfModel.
func (_bfaaf *PdfTransformParamsDocMDP )ToPdfObject ()_fbg .PdfObject {_aafg :=_fbg .MakeDict ();_aafg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bfaaf .Type );_aafg .SetIfNotNil ("\u0056",_bfaaf .V );_aafg .SetIfNotNil ("\u0050",_bfaaf .P );return _aafg ;
};

// RemovePage removes a page by number.
func (_cbfa *PdfAppender )RemovePage (pageNum int ){_afcc :=pageNum -1;_cbfa ._efgd =append (_cbfa ._efgd [0:_afcc ],_cbfa ._efgd [pageNum :]...);};

// ToPdfObject implements interface PdfModel.
func (_ccag *PdfActionURI )ToPdfObject ()_fbg .PdfObject {_ccag .PdfAction .ToPdfObject ();_eff :=_ccag ._gc ;_beb :=_eff .PdfObject .(*_fbg .PdfObjectDictionary );_beb .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeURI )));_beb .SetIfNotNil ("\u0055\u0052\u0049",_ccag .URI );
_beb .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ccag .IsMap );return _eff ;};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject implements interface PdfModel.
func (_fgea *PdfAnnotationCircle )ToPdfObject ()_fbg .PdfObject {_fgea .PdfAnnotation .ToPdfObject ();_dfbe :=_fgea ._ecfe ;_ccgf :=_dfbe .PdfObject .(*_fbg .PdfObjectDictionary );_fgea .PdfAnnotationMarkup .appendToPdfDictionary (_ccgf );_ccgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ccgf .SetIfNotNil ("\u0042\u0053",_fgea .BS );_ccgf .SetIfNotNil ("\u0049\u0043",_fgea .IC );_ccgf .SetIfNotNil ("\u0042\u0045",_fgea .BE );_ccgf .SetIfNotNil ("\u0052\u0044",_fgea .RD );return _dfbe ;};func (_afdbe *PdfWriter )setCatalogVersion (){_afdbe ._gdgbee .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fbg .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_afdbe ._bagfb .Major ,_afdbe ._bagfb .Minor )));
};

// SetKDict sets the KDict for the KValue.
func (_fecgf *KValue )SetKDict (kDict *KDict ){_fecgf .Clear ();_fecgf ._daabc =kDict };

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cddgd *XObjectForm )SetContentStream (content []byte ,encoder _fbg .StreamEncoder )error {_efcc :=content ;if encoder ==nil {if _cddgd .Filter !=nil {encoder =_cddgd .Filter ;}else {encoder =_fbg .NewRawEncoder ();};};_afbge ,_ebdfa :=encoder .EncodeBytes (_efcc );
if _ebdfa !=nil {return _ebdfa ;};_efcc =_afbge ;_cddgd .Stream =_efcc ;_cddgd .Filter =encoder ;return nil ;};func (_efd *PdfReader )newPdfActionFromIndirectObject (_adfe *_fbg .PdfIndirectObject )(*PdfAction ,error ){_bebe ,_egbf :=_adfe .PdfObject .(*_fbg .PdfObjectDictionary );
if !_egbf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_efd ._dccaf .GetModelFromPrimitive (_bebe );model !=nil {_fgf ,_ffda :=model .(*PdfAction );if !_ffda {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _fgf ,nil ;};_eecf :=&PdfAction {};_eecf ._gc =_adfe ;_efd ._dccaf .Register (_bebe ,_eecf );if _fec :=_bebe .Get ("\u0054\u0079\u0070\u0065");_fec !=nil {_aff ,_egce :=_fec .(*_fbg .PdfObjectName );if !_egce {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fec );
}else {if *_aff !="\u0041\u0063\u0074\u0069\u006f\u006e"{_adc .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_aff );
};_eecf .Type =_aff ;};};if _gfg :=_bebe .Get ("\u004e\u0065\u0078\u0074");_gfg !=nil {_eecf .Next =_gfg ;};if _eggf :=_bebe .Get ("\u0053");_eggf !=nil {_eecf .S =_eggf ;};_ead ,_aee :=_eecf .S .(*_fbg .PdfObjectName );if !_aee {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eecf .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eecf .S );};_bcg :=PdfActionType (_ead .String ());
switch _bcg {case ActionTypeGoTo :_aec ,_abe :=_efd .newPdfActionGotoFromDict (_bebe );if _abe !=nil {return nil ,_abe ;};_aec .PdfAction =_eecf ;_eecf ._ddb =_aec ;return _eecf ,nil ;case ActionTypeGoToR :_fbc ,_fed :=_efd .newPdfActionGotoRFromDict (_bebe );
if _fed !=nil {return nil ,_fed ;};_fbc .PdfAction =_eecf ;_eecf ._ddb =_fbc ;return _eecf ,nil ;case ActionTypeGoToE :_cfe ,_bga :=_efd .newPdfActionGotoEFromDict (_bebe );if _bga !=nil {return nil ,_bga ;};_cfe .PdfAction =_eecf ;_eecf ._ddb =_cfe ;return _eecf ,nil ;
case ActionTypeLaunch :_cgbf ,_dcg :=_efd .newPdfActionLaunchFromDict (_bebe );if _dcg !=nil {return nil ,_dcg ;};_cgbf .PdfAction =_eecf ;_eecf ._ddb =_cgbf ;return _eecf ,nil ;case ActionTypeThread :_da ,_gfc :=_efd .newPdfActionThreadFromDict (_bebe );
if _gfc !=nil {return nil ,_gfc ;};_da .PdfAction =_eecf ;_eecf ._ddb =_da ;return _eecf ,nil ;case ActionTypeURI :_fecd ,_cfbe :=_efd .newPdfActionURIFromDict (_bebe );if _cfbe !=nil {return nil ,_cfbe ;};_fecd .PdfAction =_eecf ;_eecf ._ddb =_fecd ;return _eecf ,nil ;
case ActionTypeSound :_fff ,_ddbb :=_efd .newPdfActionSoundFromDict (_bebe );if _ddbb !=nil {return nil ,_ddbb ;};_fff .PdfAction =_eecf ;_eecf ._ddb =_fff ;return _eecf ,nil ;case ActionTypeMovie :_ga ,_bfa :=_efd .newPdfActionMovieFromDict (_bebe );if _bfa !=nil {return nil ,_bfa ;
};_ga .PdfAction =_eecf ;_eecf ._ddb =_ga ;return _eecf ,nil ;case ActionTypeHide :_gbf ,_cfc :=_efd .newPdfActionHideFromDict (_bebe );if _cfc !=nil {return nil ,_cfc ;};_gbf .PdfAction =_eecf ;_eecf ._ddb =_gbf ;return _eecf ,nil ;case ActionTypeNamed :_bgd ,_efc :=_efd .newPdfActionNamedFromDict (_bebe );
if _efc !=nil {return nil ,_efc ;};_bgd .PdfAction =_eecf ;_eecf ._ddb =_bgd ;return _eecf ,nil ;case ActionTypeSubmitForm :_bcce ,_eecff :=_efd .newPdfActionSubmitFormFromDict (_bebe );if _eecff !=nil {return nil ,_eecff ;};_bcce .PdfAction =_eecf ;_eecf ._ddb =_bcce ;
return _eecf ,nil ;case ActionTypeResetForm :_cge ,_agb :=_efd .newPdfActionResetFormFromDict (_bebe );if _agb !=nil {return nil ,_agb ;};_cge .PdfAction =_eecf ;_eecf ._ddb =_cge ;return _eecf ,nil ;case ActionTypeImportData :_daf ,_fbf :=_efd .newPdfActionImportDataFromDict (_bebe );
if _fbf !=nil {return nil ,_fbf ;};_daf .PdfAction =_eecf ;_eecf ._ddb =_daf ;return _eecf ,nil ;case ActionTypeSetOCGState :_gfa ,_bab :=_efd .newPdfActionSetOCGStateFromDict (_bebe );if _bab !=nil {return nil ,_bab ;};_gfa .PdfAction =_eecf ;_eecf ._ddb =_gfa ;
return _eecf ,nil ;case ActionTypeRendition :_cfcb ,_cdea :=_efd .newPdfActionRenditionFromDict (_bebe );if _cdea !=nil {return nil ,_cdea ;};_cfcb .PdfAction =_eecf ;_eecf ._ddb =_cfcb ;return _eecf ,nil ;case ActionTypeTrans :_agbc ,_ega :=_efd .newPdfActionTransFromDict (_bebe );
if _ega !=nil {return nil ,_ega ;};_agbc .PdfAction =_eecf ;_eecf ._ddb =_agbc ;return _eecf ,nil ;case ActionTypeGoTo3DView :_ebb ,_cdbc :=_efd .newPdfActionGoTo3DViewFromDict (_bebe );if _cdbc !=nil {return nil ,_cdbc ;};_ebb .PdfAction =_eecf ;_eecf ._ddb =_ebb ;
return _eecf ,nil ;case ActionTypeJavaScript :_efb ,_eda :=_efd .newPdfActionJavaScriptFromDict (_bebe );if _eda !=nil {return nil ,_eda ;};_efb .PdfAction =_eecf ;_eecf ._ddb =_efb ;return _eecf ,nil ;};_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bcg );
return nil ,nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cdbgb *PdfReader )GetNameDictionary ()(_fbg .PdfObject ,error ){_badec :=_fbg .ResolveReference (_cdbgb ._ffcac .Get ("\u004e\u0061\u006de\u0073"));if _badec ==nil {return nil ,nil ;};if !_cdbgb ._cgfbeb {_ecbfc :=_cdbgb .traverseObjectData (_badec );
if _ecbfc !=nil {return nil ,_ecbfc ;};};return _badec ,nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_cbgddb *PdfWriter )SetCatalogMetadata (meta _fbg .PdfObject )error {if meta ==nil {_cbgddb ._gdgbee .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_caeac ,_fgbfg :=_fbg .GetStream (meta );if !_fgbfg {return _fd .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_cbgddb .addObject (_caeac );_cbgddb ._gdgbee .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_caeac );return nil ;};func _egcec (_dcaeb *XObjectImage )error {if _dcaeb .SMask ==nil {return nil ;};_fcaede ,_gadac :=_dcaeb .SMask .(*_fbg .PdfObjectStream );
if !_gadac {_adc .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _fbg .ErrTypeError ;};_fedbc :=_fcaede .PdfObjectDictionary ;
_dcddg :=_fedbc .Get ("\u004d\u0061\u0074t\u0065");if _dcddg ==nil {return nil ;};_aaadg ,_cgcec :=_dbed (_dcddg .(*_fbg .PdfObjectArray ));if _cgcec !=nil {return _cgcec ;};_dcacf :=_fbg .MakeArrayFromFloats ([]float64 {_aaadg });_fedbc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dcacf );
return nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fbg .PdfObject ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gdee :=PdfColorLab {l ,a ,b };return &_gdee };

// ToPdfObject implements interface PdfModel.
func (_eabgg *Permissions )ToPdfObject ()_fbg .PdfObject {return _eabgg ._ccfef };

// CustomKeys returns all custom info keys as list.
func (_cfbc *PdfInfo )CustomKeys ()[]string {if _cfbc ._fdgce ==nil {return nil ;};_dgga :=make ([]string ,len (_cfbc ._fdgce .Keys ()));for _ ,_bgacb :=range _cfbc ._fdgce .Keys (){_dgga =append (_dgga ,_bgacb .String ());};return _dgga ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ggdee *PdfReader )GetCatalogStructTreeRoot ()(_fbg .PdfObject ,bool ){_bcegd :=_fbg .ResolveReference (_ggdee ._ffcac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _bcegd ==nil {return nil ,false ;};
if !_ggdee ._cgfbeb {_cfda :=_ggdee .traverseObjectData (_bcegd );if _cfda !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_cfda );
return nil ,false ;};};return _bcegd ,true ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fbg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _ccabf error ;encoder ,_ccabf =img .getSuitableEncoder ();if _ccabf !=nil {_adc .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ccabf );
encoder =_fbg .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_cagec ,_cadde :=encoder .EncodeBytes (img .Data );if _cadde !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cadde );
return nil ,_cadde ;};_cebb :=NewXObjectImage ();_bbceb :=img .Width ;_dffge :=img .Height ;_cebb .Width =&_bbceb ;_cebb .Height =&_dffge ;_dbec :=img .BitsPerComponent ;_cebb .BitsPerComponent =&_dbec ;_cebb .Filter =encoder ;_cebb .Stream =_cagec ;if cs ==nil {if img .ColorComponents ==1{_cebb .ColorSpace =NewPdfColorspaceDeviceGray ();
if img .BitsPerComponent ==16{switch encoder .(type ){case *_fbg .DCTEncoder :_cebb .ColorSpace =NewPdfColorspaceDeviceRGB ();_dbec =8;_cebb .BitsPerComponent =&_dbec ;};};}else if img .ColorComponents ==3{_cebb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{switch encoder .(type ){case *_fbg .DCTEncoder :_cebb .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_cebb .ColorSpace =NewPdfColorspaceDeviceCMYK ();};}else {return nil ,_fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cebb .ColorSpace =cs ;};if len (img ._acag )!=0{_edgdg :=NewXObjectImage ();_edgdg .Filter =encoder ;_badbe ,_cadab :=encoder .EncodeBytes (img ._acag );if _cadab !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cadab );
return nil ,_cadab ;};_edgdg .Stream =_badbe ;_edgdg .BitsPerComponent =_cebb .BitsPerComponent ;_edgdg .Width =&img .Width ;_edgdg .Height =&img .Height ;_edgdg .ColorSpace =NewPdfColorspaceDeviceGray ();_cebb .SMask =_edgdg .ToPdfObject ();}else {_cebb .SMask =xobjIn .SMask ;
_cebb .ImageMask =xobjIn .ImageMask ;if _cebb .ColorSpace .GetNumComponents ()==1{_egcec (_cebb );};};return _cebb ,nil ;};func (_aea *PdfReader )newPdfActionNamedFromDict (_ceg *_fbg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ceg .Get ("\u004e")},nil ;
};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_dfeb *PdfReader )GetCatalogMetadata ()(_fbg .PdfObject ,bool ){if _dfeb ._ffcac ==nil {return nil ,false ;};_abafd :=_dfeb ._ffcac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _abafd ,_abafd !=nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_ecfcg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ecfcg ._eedad .GetCrypter ()!=nil &&!_ecfcg ._eedad .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ecfcg ._bdad )< pageNumber {return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_agbdf :=pageNumber -1;if _agbdf < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dcdf :=_ecfcg .PageList [_agbdf ];
return _dcdf ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fbb :=NewPdfAnnotation ();_faad :=&PdfAnnotationHighlight {};_faad .PdfAnnotation =_fbb ;_faad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbb .SetContext (_faad );return _faad ;};func _gfgfg (_cafe []byte )(_deged ,_egccdd string ,_degc error ){_adc .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cafe ));
_ecfc :=_dfabf .FindIndex (_cafe );if _ecfc ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_fbg .ErrTypeError ;};_deff :=_ecfc [1];_bdafd :=_gdg .Index (string (_cafe [_deff :]),_dcdcc );if _bdafd < 0{_deged =string (_cafe [_deff :]);return _deged ,"",nil ;};_ggcge :=_deff +_bdafd ;_deged =string (_cafe [_deff :_ggcge ]);_ddgda :=_ggcge ;
_bdafd =_gdg .Index (string (_cafe [_ddgda :]),_bcdc );if _bdafd < 0{_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_degc );
return "","",_fbg .ErrTypeError ;};_bggcfb :=_ddgda +_bdafd ;_egccdd =string (_cafe [_ddgda :_bggcfb ]);return _deged ,_egccdd ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_dddae *PdfWriter )SetForms (form *PdfAcroForm )error {_dddae ._cdcaa =form ;return nil };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_efbd *PdfPageResourcesColorspaces )Set (key _fbg .PdfObjectName ,val PdfColorspace ){if _ ,_cgfgc :=_efbd .Colorspaces [string (key )];!_cgfgc {_efbd .Names =append (_efbd .Names ,string (key ));};_efbd .Colorspaces [string (key )]=val ;};

// ToPdfObject returns a stream object.
func (_cafgfd *XObjectForm )ToPdfObject ()_fbg .PdfObject {_ggfgea :=_cafgfd ._gcbcg ;_dfcafg :=_ggfgea .PdfObjectDictionary ;if _cafgfd .Filter !=nil {_dfcafg =_cafgfd .Filter .MakeStreamDict ();_ggfgea .PdfObjectDictionary =_dfcafg ;};_dfcafg .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dfcafg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0046\u006f\u0072\u006d"));_dfcafg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cafgfd .FormType );_dfcafg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cafgfd .BBox );
_dfcafg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cafgfd .Matrix );if _cafgfd .Resources !=nil {_dfcafg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cafgfd .Resources .ToPdfObject ());};_dfcafg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cafgfd .Group );
_dfcafg .SetIfNotNil ("\u0052\u0065\u0066",_cafgfd .Ref );_dfcafg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cafgfd .MetaData );_dfcafg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cafgfd .PieceInfo );_dfcafg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cafgfd .LastModified );
_dfcafg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cafgfd .StructParent );_dfcafg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cafgfd .StructParents );_dfcafg .SetIfNotNil ("\u004f\u0050\u0049",_cafgfd .OPI );
_dfcafg .SetIfNotNil ("\u004f\u0043",_cafgfd .OC );_dfcafg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cafgfd .Name );_dfcafg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_cafgfd .Stream ))));_ggfgea .Stream =_cafgfd .Stream ;
return _ggfgea ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gbbg :=NewPdfAnnotation ();_ebgb :=&PdfAnnotationWidget {};_ebgb .PdfAnnotation =_gbbg ;_gbbg .SetContext (_ebgb );return _ebgb ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_gegb *PdfField )GetContext ()PdfModel {return _gegb ._becea };

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_fggca *bool ;_acefc *bool ;_cffcc *bool ;_eggdd *bool ;_dgeda *bool ;_dbfbb *bool ;_egega NonFullScreenPageMode ;_defgf Direction ;_cgefba PageBoundary ;_fadfe PageBoundary ;_aaaca PageBoundary ;_abgbc PageBoundary ;_cfbcg PrintScaling ;
_dffg Duplex ;_dddcag *bool ;_dedfe []int ;_defcb int ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dg .CharMetrics ;

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _fbg .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _fbg .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_fbg .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _fbg .PdfObject ;

// The children of this structure element.
K _fbg .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _fbg .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _fbg .PdfObject ;

// The current revision number of this structure element
R *_fbg .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_fbg .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_fbg .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_fbg .PdfObjectString ;

// The expanded form of an abbreviation.
E *_fbg .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_fbg .PdfObjectString ;_cgfe []*KValue ;_ebegf int64 ;_cdaba *PdfRectangle ;};func (_bfbfa Image )getBase ()_ced .ImageBase {return _ced .NewImageBase (int (_bfbfa .Width ),int (_bfbfa .Height ),int (_bfbfa .BitsPerComponent ),_bfbfa .ColorComponents ,_bfbfa .Data ,_bfbfa ._acag ,_bfbfa ._beggbb );
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bdbg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fbg .PdfObject ;LE _fbg .PdfObject ;BS _fbg .PdfObject ;IC _fbg .PdfObject ;BE _fbg .PdfObject ;IT _fbg .PdfObject ;Measure _fbg .PdfObject ;};

// SetRefObject sets the reference object for the KValue.
func (_gdbcf *KValue )SetRefObject (refObject _fbg .PdfObject ){_gdbcf .Clear ();_gdbcf ._cfcg =refObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_cffa *PdfPageResources )SetPatternByName (keyName _fbg .PdfObjectName ,pattern _fbg .PdfObject )error {if _cffa .Pattern ==nil {_cffa .Pattern =_fbg .MakeDict ();};_bccgc ,_bccgf :=_fbg .GetDict (_cffa .Pattern );if !_bccgf {return _fbg .ErrTypeError ;
};_bccgc .Set (keyName ,pattern );return nil ;};

// AddKDict adds a K dictionary object to the structure tree root.
func (_eegbe *StructTreeRoot )AddKDict (k *KDict ){_eegbe .K =append (_eegbe .K ,k )};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ecegc .Lock ();defer _ecegc .Unlock ();_bcffcb =producer };

// AddAnnotation appends `annot` to the list of page annotations.
func (_dfffe *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dfffe ._fefa ==nil {_dfffe .GetAnnotations ();};_dfffe ._fefa =append (_dfffe ._fefa ,annot );};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_dbaf :=&PdfAppender {_cadb :reader ._fbgef ,Reader :reader ,_ffca :reader ._eedad ,_fdc :reader ._dcebc };_cggg ,_bggc :=_dbaf ._cadb .Seek (0,_gg .SeekEnd );
if _bggc !=nil {return nil ,_bggc ;};_dbaf ._aaaa =_cggg ;if _ ,_bggc =_dbaf ._cadb .Seek (0,_gg .SeekStart );_bggc !=nil {return nil ,_bggc ;};_dbaf ._gafe ,_bggc =NewPdfReaderWithOpts (_dbaf ._cadb ,opts );if _bggc !=nil {return nil ,_bggc ;};for _ ,_efga :=range _dbaf .Reader .GetObjectNums (){if _dbaf ._cedef < _efga {_dbaf ._cedef =_efga ;
};};_dbaf ._cagb =_dbaf ._ffca .GetXrefTable ();_dbaf ._fgbf =_dbaf ._ffca .GetXrefOffset ();_dbaf ._efgd =append (_dbaf ._efgd ,_dbaf ._gafe .PageList ...);_dbaf ._gbed =make (map[_fbg .PdfObject ]struct{});_dbaf ._daec =make (map[_fbg .PdfObject ]int64 );
_dbaf ._bdec =make (map[_fbg .PdfObject ]struct{});_dbaf ._ebaf =_dbaf ._gafe .AcroForm ;_dbaf ._dcae =_dbaf ._gafe .DSS ;if opts !=nil {_dbaf ._acde =opts .Password ;};if encryptOptions !=nil {_dbaf ._gggf =encryptOptions ;};return _dbaf ,nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_efbgae *PdfSignature )GetDocMDPPermission ()(_eae .DocMDPPermission ,bool ){for _ ,_eggfe :=range _efbgae .Reference .Elements (){if _ggfb ,_bcgac :=_fbg .GetDict (_eggfe );_bcgac {if _febbe ,_ceagd :=_fbg .GetNameVal (_ggfb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_ceagd &&_febbe =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _cfab ,_cdaea :=_fbg .GetDict (_ggfb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cdaea {if P ,_cbcfac :=_fbg .GetIntVal (_cfab .Get ("\u0050"));
_cbcfac {return _eae .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func (_becdb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _becdb ._bgbb };

// HasXObjectByName checks if has XObject resource by name.
func (_ggffg *PdfPage )HasXObjectByName (name _fbg .PdfObjectName )bool {_dgaf ,_gbgg :=_ggffg .Resources .XObject .(*_fbg .PdfObjectDictionary );if !_gbgg {return false ;};if _fbcf :=_dgaf .Get (name );_fbcf !=nil {return true ;};return false ;};func (_aabcb *PdfPage )loadFont (_dfadc string )(*_ea .Font ,error ){_deeed ,_dcade :=_aef .ReadFile (_dfadc );
if _dcade !=nil {return nil ,_dcade ;};_gfafc ,_dcade :=_aac .ParseFont (_deeed );if _dcade !=nil {return nil ,_dcade ;};return _gfafc ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fbg .PdfObject ;H _fbg .PdfObject ;};

// ToInteger convert to an integer format.
func (_dagb *PdfColorCalGray )ToInteger (bits int )uint32 {_bafc :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_bafc *_dagb .Val ());};

// ViewClip returns the value of the viewClip.
func (_decf *ViewerPreferences )ViewClip ()PageBoundary {return _decf ._fadfe };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fbg .PdfObjectArray ;Domain *_fbg .PdfObjectArray ;Function []PdfFunction ;Extend *_fbg .PdfObjectArray ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_eba :=NewPdfAnnotation ();_bedb :=&PdfAnnotationStrikeOut {};_bedb .PdfAnnotation =_eba ;_bedb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eba .SetContext (_bedb );return _bedb ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_debe *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgdaa ,_gbdf :=color .(*PdfColorDeviceCMYK );if !_gbdf {_adc .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgegb :=_dgdaa .C ();_caafd :=_dgdaa .M ();_bgaa :=_dgdaa .Y ();_fbad :=_dgdaa .K ();_bgegb =_bgegb *(1-_fbad )+_fbad ;_caafd =_caafd *(1-_fbad )+_fbad ;
_bgaa =_bgaa *(1-_fbad )+_fbad ;_cgga :=1-_bgegb ;_ebf :=1-_caafd ;_debd :=1-_bgaa ;return NewPdfColorDeviceRGB (_cgga ,_ebf ,_debd ),nil ;};

// PartialName returns the partial name of the field.
func (_bebb *PdfField )PartialName ()string {_abbfd :="";if _bebb .T !=nil {_abbfd =_bebb .T .Decoded ();}else {_adc .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _abbfd ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_bbaff *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ffdeed []*PdfField ;_gdbc :=map[*_fbg .PdfIndirectObject ]struct{}{};for _ ,_fegg :=range _bbaff .PageList {_cbgc ,_ebda :=_fegg .GetAnnotations ();if _ebda !=nil {return _ebda ;
};for _ ,_aafbb :=range _cbgc {var _gebcg *PdfField ;switch _dfadd :=_aafbb .GetContext ().(type ){case *PdfAnnotationWidget :if _dfadd ._abg !=nil {_gebcg =_dfadd ._abg ;break ;};if _cegfb ,_cadge :=_fbg .GetIndirect (_dfadd .Parent );_cadge {_gebcg ,_ebda =_bbaff .newPdfFieldFromIndirectObject (_cegfb ,nil );
if _ebda ==nil {break ;};_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cegfb ,_ebda );
};if _dfadd ._ecfe !=nil {_gebcg ,_ebda =_bbaff .newPdfFieldFromIndirectObject (_dfadd ._ecfe ,nil );if _ebda ==nil {break ;};_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dfadd ._ecfe ,_ebda );
};};if _gebcg ==nil {continue ;};if _ ,_fdccg :=_gdbc [_gebcg ._gcad ];_fdccg {continue ;};_gdbc [_gebcg ._gcad ]=struct{}{};_ffdeed =append (_ffdeed ,_gebcg );};};if len (_ffdeed )==0{return nil ;};if _bbaff .AcroForm ==nil {_bbaff .AcroForm =NewPdfAcroForm ();
};_bbaff .AcroForm .Fields =&_ffdeed ;return nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gcge *PdfSignature ,_daagc Hasher ,_adegb SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// ToPdfObject implements interface PdfModel.
func (_aba *PdfActionGoTo )ToPdfObject ()_fbg .PdfObject {_aba .PdfAction .ToPdfObject ();_ddd :=_aba ._gc ;_aacg :=_ddd .PdfObject .(*_fbg .PdfObjectDictionary );_aacg .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeGoTo )));_aacg .SetIfNotNil ("\u0044",_aba .D );
return _ddd ;};

// SetName sets the `Name` field of the signature.
func (_cbacg *PdfSignature )SetName (name string ){_cbacg .Name =_fbg .MakeEncodedString (name ,true )};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fbg .StreamEncoder )(*XObjectImage ,error ){_dgbac :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dgbac ,img ,cs ,encoder );};

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_aebcca *ViewerPreferences )IsHideWindowUI ()bool {if _aebcca ._cffcc ==nil {return false ;};return *_aebcca ._cffcc ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fcb :=NewPdfAnnotation ();_bdg :=&PdfAnnotationMovie {};_bdg .PdfAnnotation =_fcb ;_fcb .SetContext (_bdg );return _bdg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_cbfaff *PdfWriter )seekByName (_bgcgd _fbg .PdfObject ,_cbcda []string ,_deccg string )([]_fbg .PdfObject ,error ){_adc .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bgcgd );
var _daddf []_fbg .PdfObject ;if _geggb ,_afcd :=_bgcgd .(*_fbg .PdfIndirectObject );_afcd {return _cbfaff .seekByName (_geggb .PdfObject ,_cbcda ,_deccg );};if _dgedd ,_aefgf :=_bgcgd .(*_fbg .PdfObjectStream );_aefgf {return _cbfaff .seekByName (_dgedd .PdfObjectDictionary ,_cbcda ,_deccg );
};if _edbbd ,_bcece :=_bgcgd .(*_fbg .PdfObjectDictionary );_bcece {_adc .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gbfcc :=range _edbbd .Keys (){_bdca :=_edbbd .Get (_gbfcc );if string (_gbfcc )==_deccg {_daddf =append (_daddf ,_bdca );};for _ ,_dbgff :=range _cbcda {if string (_gbfcc )==_dbgff {_adc .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dbgff );
_deggbf ,_afed :=_cbfaff .seekByName (_bdca ,_cbcda ,_deccg );if _afed !=nil {return _daddf ,_afed ;};_daddf =append (_daddf ,_deggbf ...);break ;};};};return _daddf ,nil ;};return _daddf ,nil ;};func (_dded *PdfReader )newPdfAnnotation3DFromDict (_efe *_fbg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_aecfd :=PdfAnnotation3D {};
_aecfd .T3DD =_efe .Get ("\u0033\u0044\u0044");_aecfd .T3DV =_efe .Get ("\u0033\u0044\u0056");_aecfd .T3DA =_efe .Get ("\u0033\u0044\u0041");_aecfd .T3DI =_efe .Get ("\u0033\u0044\u0049");_aecfd .T3DB =_efe .Get ("\u0033\u0044\u0042");return &_aecfd ,nil ;
};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_afbfc *PdfPageResources )GetColorspaceByName (keyName _fbg .PdfObjectName )(PdfColorspace ,bool ){_geegg ,_bdfgd :=_afbfc .GetColorspaces ();if _bdfgd !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bdfgd );
return nil ,false ;};if _geegg ==nil {return nil ,false ;};_eagac ,_gaded :=_geegg .Colorspaces [string (keyName )];if !_gaded {return nil ,false ;};return _eagac ,true ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gge *PdfAnnotationWidget )Field ()*PdfField {return _gge ._abg };

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_abae *PdfPattern )GetContext ()PdfModel {return _abae ._acfag };

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_aegaa PdfOutputIntentType )String ()string {switch _aegaa {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gbdbeb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gbdbeb ._fffcf =optimizer };

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_agbb :fonts ,CurrentFont :fonts [0]};};func _ffagc ()string {_ecegc .Lock ();defer _ecegc .Unlock ();return _baae };func _adfbaf ()_dcc .Time {_ecegc .Lock ();
defer _ecegc .Unlock ();return _fbabd };

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fbg .PdfObject ;Flags _fbg .PdfObject ;};

// String returns the name of the colorspace (DeviceN).
func (_gffbg *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// SetDecode sets the decode image float slice.
func (_fbfef *Image )SetDecode (decode []float64 ){_fbfef ._beggbb =decode };func (_gfaa *PdfReader )newPdfActionLaunchFromDict (_egff *_fbg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_dccd ,_bgdb :=_dae (_egff .Get ("\u0046"));if _bgdb !=nil {return nil ,_bgdb ;
};return &PdfActionLaunch {Win :_egff .Get ("\u0057\u0069\u006e"),Mac :_egff .Get ("\u004d\u0061\u0063"),Unix :_egff .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_egff .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dccd },nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cbc :=NewPdfAnnotation ();_gda :=&PdfAnnotationFreeText {};_gda .PdfAnnotation =_cbc ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbc .SetContext (_gda );return _gda ;};func _feag (_aacc _fbg .PdfObject )(*PdfColorspaceCalGray ,error ){_cefd :=NewPdfColorspaceCalGray ();
if _dddd ,_egfc :=_aacc .(*_fbg .PdfIndirectObject );_egfc {_cefd ._abcgd =_dddd ;};_aacc =_fbg .TraceToDirectObject (_aacc );_ggdcb ,_eafe :=_aacc .(*_fbg .PdfObjectArray );if !_eafe {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ggdcb .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_aacc =_fbg .TraceToDirectObject (_ggdcb .Get (0));_agbf ,_eafe :=_aacc .(*_fbg .PdfObjectName );
if !_eafe {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_agbf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_aacc =_fbg .TraceToDirectObject (_ggdcb .Get (1));_eaeec ,_eafe :=_aacc .(*_fbg .PdfObjectDictionary );if !_eafe {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_aacc =_eaeec .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aacc =_fbg .TraceToDirectObject (_aacc );_cdga ,_eafe :=_aacc .(*_fbg .PdfObjectArray );if !_eafe {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cdga .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ebagd ,_cgbec :=_cdga .GetAsFloat64Slice ();
if _cgbec !=nil {return nil ,_cgbec ;};_cefd .WhitePoint =_ebagd ;_aacc =_eaeec .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aacc !=nil {_aacc =_fbg .TraceToDirectObject (_aacc );_agcf ,_bdgb :=_aacc .(*_fbg .PdfObjectArray );
if !_bdgb {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _agcf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_bbcbb ,_gaeg :=_agcf .GetAsFloat64Slice ();if _gaeg !=nil {return nil ,_gaeg ;};_cefd .BlackPoint =_bbcbb ;};_aacc =_eaeec .Get ("\u0047\u0061\u006dm\u0061");if _aacc !=nil {_aacc =_fbg .TraceToDirectObject (_aacc );_aeea ,_eggd :=_fbg .GetNumberAsFloat (_aacc );
if _eggd !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cefd .Gamma =_aeea ;};return _cefd ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dgca *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dgca ._gbcag ==nil {_dgca ._gbcag =_ac .NewPSExecutor (_dgca .Program );};var _feac []_ac .PSObject ;for _ ,_bebbg :=range xVec {_feac =append (_feac ,_ac .MakeReal (_bebbg ));
};_aadc ,_gcfbf :=_dgca ._gbcag .Execute (_feac );if _gcfbf !=nil {return nil ,_gcfbf ;};_gcbbba ,_gcfbf :=_ac .PSObjectArrayToFloat64Array (_aadc );if _gcfbf !=nil {return nil ,_gcfbf ;};return _gcbbba ,nil ;};

// ParserMetadata gets the parser  metadata.
func (_fegee *CompliancePdfReader )ParserMetadata ()_fbg .ParserMetadata {if _fegee ._aecc ==(_fbg .ParserMetadata {}){_fegee ._aecc ,_ =_fegee ._eedad .ParserMetadata ();};return _fegee ._aecc ;};func (_ggfc *Names )addEmbeddedFile (_bfgfcg *EmbeddedFile )error {if _ggfc .EmbeddedFiles ==nil {_ggfc .EmbeddedFiles =_fbg .MakeDict ();
_ggfc .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_fbg .MakeArray ());};_afgce :=NewPdfFileSpecFromEmbeddedFile (_bfgfcg );_eddef :=_ggfc .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ffdca ,_ddea :=_eddef .(*_fbg .PdfObjectArray );if !_ddea {return _fd .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_dafa string ;_bdgfbc *PdfFilespec ;};_dbfcd :=[]FileSpecMap {};for _dafd :=0;_dafd < len (_ffdca .Elements ());_dafd +=2{if _dafd %2==0{_febfg :=_ffdca .Get (_dafd );if _febfg !=nil {_ebbde :=_febfg .(*_fbg .PdfObjectString );
_fbdg :=_ffdca .Get (_dafd +1);_dgdfa ,_fccb :=NewPdfFilespecFromObj (_fbdg );if _fccb !=nil {return _fccb ;};_dbfcd =append (_dbfcd ,FileSpecMap {_dafa :_ebbde .String (),_bdgfbc :_dgdfa });};};};_dbfcd =append (_dbfcd ,FileSpecMap {_dafa :_bfgfcg .Name ,_bdgfbc :_afgce });
_db .Slice (_dbfcd ,func (_fgdb ,_ddefa int )bool {return _dbfcd [_fgdb ]._dafa < _dbfcd [_ddefa ]._dafa });_ffdca =_fbg .MakeArray ();for _ ,_fedcdg :=range _dbfcd {_ffdca .Append (_fbg .MakeString (_fedcdg ._dafa ));_ffdca .Append (_fedcdg ._bdgfbc .ToPdfObject ());
};_ggfc .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ffdca );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggcg *PdfAnnotationText )ToPdfObject ()_fbg .PdfObject {_ggcg .PdfAnnotation .ToPdfObject ();_fef :=_ggcg ._ecfe ;_aegb :=_fef .PdfObject .(*_fbg .PdfObjectDictionary );if _ggcg .PdfAnnotationMarkup !=nil {_ggcg .PdfAnnotationMarkup .appendToPdfDictionary (_aegb );
};_aegb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0054\u0065\u0078\u0074"));_aegb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ggcg .Open );_aegb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggcg .Name );_aegb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ggcg .State );
_aegb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ggcg .StateModel );return _fef ;};func _cgdba (_gebe *_ced .ImageBase )(_dgffd Image ){_dgffd .Width =int64 (_gebe .Width );_dgffd .Height =int64 (_gebe .Height );_dgffd .BitsPerComponent =int64 (_gebe .BitsPerComponent );
_dgffd .ColorComponents =_gebe .ColorComponents ;_dgffd .Data =_gebe .Data ;_dgffd ._beggbb =_gebe .Decode ;_dgffd ._acag =_gebe .Alpha ;return _dgffd ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_ceffb *PdfPageResources )GetExtGState (keyName _fbg .PdfObjectName )(_fbg .PdfObject ,bool ){if _ceffb .ExtGState ==nil {return nil ,false ;};_bgbdb ,_gaag :=_fbg .TraceToDirectObject (_ceffb .ExtGState ).(*_fbg .PdfObjectDictionary );if !_gaag {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ceffb .ExtGState );
return nil ,false ;};if _eadcg :=_bgbdb .Get (keyName );_eadcg !=nil {return _eadcg ,true ;};return nil ,false ;};

// SetBorderWidth sets the style's border width.
func (_egab *PdfBorderStyle )SetBorderWidth (width float64 ){_egab .W =&width };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdfca *PdfShadingType6 )ToPdfObject ()_fbg .PdfObject {_gdfca .PdfShading .ToPdfObject ();_fefcdg ,_dbga :=_gdfca .getShadingDict ();if _dbga !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdfca .BitsPerCoordinate !=nil {_fefcdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gdfca .BitsPerCoordinate );};if _gdfca .BitsPerComponent !=nil {_fefcdg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gdfca .BitsPerComponent );
};if _gdfca .BitsPerFlag !=nil {_fefcdg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gdfca .BitsPerFlag );};if _gdfca .Decode !=nil {_fefcdg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gdfca .Decode );};if _gdfca .Function !=nil {if len (_gdfca .Function )==1{_fefcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdfca .Function [0].ToPdfObject ());
}else {_gbda :=_fbg .MakeArray ();for _ ,_cegfe :=range _gdfca .Function {_gbda .Append (_cegfe .ToPdfObject ());};_fefcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbda );};};return _gdfca ._gedcg ;};func (_fabea *PdfSignature )extractChainFromCert ()([]*_dd .Certificate ,error ){var _bceaca *_fbg .PdfObjectArray ;
switch _bebad :=_fabea .Cert .(type ){case *_fbg .PdfObjectString :_bceaca =_fbg .MakeArray (_bebad );case *_fbg .PdfObjectArray :_bceaca =_bebad ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bebad );
};var _bfgfca _fb .Buffer ;for _ ,_bdda :=range _bceaca .Elements (){_ddebc ,_bfffc :=_fbg .GetString (_bdda );if !_bfffc {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bdda );
};if _ ,_gecbg :=_bfgfca .Write (_ddebc .Bytes ());_gecbg !=nil {return nil ,_gecbg ;};};return _dd .ParseCertificates (_bfgfca .Bytes ());};func (_ceace *PdfWriter )writeObjectsInStreams (_cgefbg map[_fbg .PdfObject ]bool )error {for _ ,_beeba :=range _ceace ._ddeeb {if _efada :=_cgefbg [_beeba ];
_efada {continue ;};_fgfbe :=int64 (0);switch _agbca :=_beeba .(type ){case *_fbg .PdfIndirectObject :_fgfbe =_agbca .ObjectNumber ;case *_fbg .PdfObjectStream :_fgfbe =_agbca .ObjectNumber ;case *_fbg .PdfObjectStreams :_fgfbe =_agbca .ObjectNumber ;case *_fbg .PdfObjectDictionary ,*_fbg .PdfObjectString :default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_beeba ,_agbca );
return ErrTypeCheck ;};if _ceace ._dbbgb !=nil &&_beeba !=_ceace ._edcbd {_ffab :=_ceace ._dbbgb .Encrypt (_beeba ,_fgfbe ,0);if _ffab !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ffab );
return _ffab ;};};_ceace .writeObject (int (_fgfbe ),_beeba );};return nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cgb :=NewPdfAction ();_fba :=&PdfActionSubmitForm {};_fba .PdfAction =_cgb ;_cgb .SetContext (_fba );return _fba ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ccdb *PdfPageResources )HasColorspaceByName (keyName _fbg .PdfObjectName )bool {_acgdc ,_egebag :=_ccdb .GetColorspaces ();if _egebag !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egebag );
return false ;};if _acgdc ==nil {return false ;};_ ,_bfeed :=_acgdc .Colorspaces [string (keyName )];return _bfeed ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_agbb []*PdfFont ;CurrentFont *PdfFont ;};

// AddOCSPs adds OCSPs to DSS.
func (_bfde *DSS )AddOCSPs (ocsps [][]byte )([]*_fbg .PdfObjectStream ,error ){return _bfde .add (&_bfde .OCSPs ,_bfde ._adgf ,ocsps );};func (_debdab *PdfWriter )writeDocumentVersion (){if _debdab ._aceab {_debdab .writeString ("\u000a");}else {_debdab .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_debdab ._bagfb .Major ,_debdab ._bagfb .Minor ));
_debdab .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

// ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fbg .StreamEncoder ;Intent _fbg .PdfObject ;ImageMask _fbg .PdfObject ;Mask _fbg .PdfObject ;Matte _fbg .PdfObject ;Decode _fbg .PdfObject ;Interpolate _fbg .PdfObject ;
Alternatives _fbg .PdfObject ;SMask _fbg .PdfObject ;SMaskInData _fbg .PdfObject ;Name _fbg .PdfObject ;StructParent _fbg .PdfObject ;ID _fbg .PdfObject ;OPI _fbg .PdfObject ;Metadata _fbg .PdfObject ;OC _fbg .PdfObject ;Stream []byte ;_cacd *_fbg .PdfObjectStream ;
_cbaad bool ;};

// R returns the value of the red component of the color.
func (_ecbb *PdfColorDeviceRGB )R ()float64 {return _ecbb [0]};

// SetFitWindow sets the value of the fitWindow flag.
func (_dacfa *ViewerPreferences )SetFitWindow (fitWindow bool ){_dacfa ._eggdd =&fitWindow };

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_acgbda *PdfWriter )SetOptimizer (optimizer Optimizer ){_acgbda ._eagae =optimizer };

// String returns a string representation of PdfTransformParamsDocMDP.
func (_aggeg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_aggeg .Type ,_aggeg .P ,_aggeg .V );};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_egf :=NewPdfAction ();_bbg :=&PdfActionGoTo3DView {};_bbg .PdfAction =_egf ;_egf .SetContext (_bbg );return _bbg ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bdde int ,_fddca *PdfPage );

// GetCustomInfo returns a custom info value for the specified name.
func (_edaaf *PdfInfo )GetCustomInfo (name string )*_fbg .PdfObjectString {var _caab *_fbg .PdfObjectString ;if _edaaf ._fdgce ==nil {return _caab ;};if _ebeg ,_bcdbd :=_edaaf ._fdgce .Get (*_fbg .MakeName (name )).(*_fbg .PdfObjectString );_bcdbd {_caab =_ebeg ;
};return _caab ;};

// ToPdfObject implements interface PdfModel.
func (_fbae *PdfActionThread )ToPdfObject ()_fbg .PdfObject {_fbae .PdfAction .ToPdfObject ();_edcb :=_fbae ._gc ;_agc :=_edcb .PdfObject .(*_fbg .PdfObjectDictionary );_agc .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeThread )));if _fbae .F !=nil {_agc .Set ("\u0046",_fbae .F .ToPdfObject ());
};_agc .SetIfNotNil ("\u0044",_fbae .D );_agc .SetIfNotNil ("\u0042",_fbae .B );return _edcb ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cdgf *PdfFieldButton )SetType (btype ButtonType ){_deee :=uint32 (0);if _cdgf .Ff !=nil {_deee =uint32 (*_cdgf .Ff );};switch btype {case ButtonTypePush :_deee |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_deee |=FieldFlagRadio .Mask ();
};_cdgf .Ff =_fbg .MakeInteger (int64 (_deee ));};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_feeab *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_feeab ._fggca =&hideToolbar };func _bbcgb (_bedcd []*_fbg .PdfObjectStream )*_fbg .PdfObjectArray {if len (_bedcd )==0{return nil ;};_eegcb :=make ([]_fbg .PdfObject ,0,len (_bedcd ));
for _ ,_gcgcb :=range _bedcd {_eegcb =append (_eegcb ,_gcgcb );};return _fbg .MakeArray (_eegcb ...);};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func _fgegd (_cefg *PdfField ,_geba _fbg .PdfObject )error {switch _cefg .GetContext ().(type ){case *PdfFieldText :switch _fbeg :=_geba .(type ){case *_fbg .PdfObjectName :_dbebe :=_fbeg ;
_adc .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dbebe .String ());
_cefg .V =_fbg .MakeEncodedString (_fbeg .String (),true );case *_fbg .PdfObjectString :_cefg .V =_fbg .MakeEncodedString (_fbeg .String (),true );default:_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fbeg ,_fbeg );
};case *PdfFieldButton :switch _geba .(type ){case *_fbg .PdfObjectName :if len (_geba .String ())> 0{_cefg .V =_geba ;_gdeg (_cefg ,_geba );};case *_fbg .PdfObjectString :if len (_geba .String ())> 0{_cefg .V =_fbg .MakeName (_geba .String ());_gdeg (_cefg ,_cefg .V );
};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cefg .PartialName (),_geba );_cefg .V =_geba ;};case *PdfFieldChoice :switch _geba .(type ){case *_fbg .PdfObjectName :if len (_geba .String ())> 0{_cefg .V =_fbg .MakeString (_geba .String ());
_gdeg (_cefg ,_geba );};case *_fbg .PdfObjectString :if len (_geba .String ())> 0{_cefg .V =_geba ;_gdeg (_cefg ,_fbg .MakeName (_geba .String ()));};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cefg .PartialName (),_geba );
_cefg .V =_geba ;};case *PdfFieldSignature :_adc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cefg .PartialName (),_geba );
};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ababb *PdfSignature )GetContainingPdfObject ()_fbg .PdfObject {return _ababb ._dedcf };func (_gcc *PdfReader )newPdfAnnotationScreenFromDict (_dfad *_fbg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ecda :=PdfAnnotationScreen {};_ecda .T =_dfad .Get ("\u0054");
_ecda .MK =_dfad .Get ("\u004d\u004b");_ecda .A =_dfad .Get ("\u0041");_ecda .AA =_dfad .Get ("\u0041\u0041");return &_ecda ,nil ;};

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _ec .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};var ImageHandling ImageHandler =DefaultImageHandler {};var (_ecegc _g .Mutex ;_aebdd ="";_fbabd _dcc .Time ;_agcff ="";_eeedcf ="";_gfacbf _dcc .Time ;_bcffcb ="";_baae ="";_fcfe ="";);const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dgf :=NewPdfAction ();_cfb :=&PdfActionURI {};_cfb .PdfAction =_dgf ;_dgf .SetContext (_cfb );return _cfb ;};func (_aafc *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fbg .PdfObjectBool ;SigFlags *_fbg .PdfObjectInteger ;CO *_fbg .PdfObjectArray ;DR *PdfPageResources ;DA *_fbg .PdfObjectString ;Q *_fbg .PdfObjectInteger ;XFA _fbg .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _fbg .PdfObject ;_bdef *_fbg .PdfIndirectObject ;_gecf bool ;};func _dafbc (_fbec *_fbg .PdfObjectDictionary ){_fgbfc ,_cbfe :=_fbg .GetArray (_fbec .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_gcfc ,_dbba :=_fbg .GetIntVal (_fbec .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_adge ,_eacb :=_fbg .GetIntVal (_fbec .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _cbfe &&_dbba &&_eacb {_fdab :=_fgbfc .Len ();if _fdab !=_adge -_gcfc +1{_adc .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fdab ,_adge );
_fdfe :=_fbg .PdfObjectInteger (_gcfc +_fdab -1);_fbec .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_fdfe );};};};func (_aedc *pdfFontSimple )baseFields ()*fontCommon {return &_aedc .fontCommon };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_dfffd *PdfWriter )SetDocInfo (info *PdfInfo ){_dfffd .setDocInfo (info .ToPdfObject ())};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_beacc *ViewerPreferences )IsHideMenubar ()bool {if _beacc ._acefc ==nil {return false ;};return *_beacc ._acefc ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gcdad *_fbg .PdfIndirectObject ;Certs []*_fbg .PdfObjectStream ;OCSPs []*_fbg .PdfObjectStream ;CRLs []*_fbg .PdfObjectStream ;VRI map[string ]*VRI ;_cbced map[string ]*_fbg .PdfObjectStream ;_adgf map[string ]*_fbg .PdfObjectStream ;_fdgd map[string ]*_fbg .PdfObjectStream ;
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gegd *PdfOutlineItem )ToPdfObject ()_fbg .PdfObject {_cecac :=_gegd ._bebdb ;_eagda :=_cecac .PdfObject .(*_fbg .PdfObjectDictionary );_eagda .Set ("\u0054\u0069\u0074l\u0065",_gegd .Title );if _gegd .A !=nil {_eagda .Set ("\u0041",_gegd .A );};
if _ddbee :=_eagda .Get ("\u0053\u0045");_ddbee !=nil {_eagda .Remove ("\u0053\u0045");};if _gegd .C !=nil {_eagda .Set ("\u0043",_gegd .C );};if _gegd .Dest !=nil {_eagda .Set ("\u0044\u0065\u0073\u0074",_gegd .Dest );};if _gegd .F !=nil {_eagda .Set ("\u0046",_gegd .F );
};if _gegd .Count !=nil {_eagda .Set ("\u0043\u006f\u0075n\u0074",_fbg .MakeInteger (*_gegd .Count ));};if _gegd .Next !=nil {_eagda .Set ("\u004e\u0065\u0078\u0074",_gegd .Next .ToPdfObject ());};if _gegd .First !=nil {_eagda .Set ("\u0046\u0069\u0072s\u0074",_gegd .First .ToPdfObject ());
};if _gegd .Prev !=nil {_eagda .Set ("\u0050\u0072\u0065\u0076",_gegd .Prev .GetContext ().GetContainingPdfObject ());};if _gegd .Last !=nil {_eagda .Set ("\u004c\u0061\u0073\u0074",_gegd .Last .GetContext ().GetContainingPdfObject ());};if _gegd .Parent !=nil {_eagda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gegd .Parent .GetContext ().GetContainingPdfObject ());
};return _cecac ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dabb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abafc :=vals [0];if _abafc < 0.0||_abafc > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abafc );
return nil ,ErrColorOutOfRange ;};_bgdc :=vals [1];if _bgdc < 0.0||_bgdc > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abafc );return nil ,ErrColorOutOfRange ;
};_eddc :=vals [2];if _eddc < 0.0||_eddc > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abafc );return nil ,ErrColorOutOfRange ;};_egbag :=NewPdfColorDeviceRGB (_abafc ,_bgdc ,_eddc );
return _egbag ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gcad :_fbg .MakeIndirectObject (_fbg .MakeDict ())}};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_eafa *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aegde ,_ffdg :=color .(*PdfColorDeviceRGB );if !_ffdg {_adc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _aegde ,nil ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_degdac *KValue )ToPdfObject ()_fbg .PdfObject {if _degdac ._daabc !=nil {return _fbg .MakeIndirectObject (_degdac ._daabc .ToPdfObject ());};if _degdac ._cfcg !=nil {return _degdac ._cfcg ;};if _degdac ._dcffg !=nil {return _fbg .MakeInteger (int64 (*_degdac ._dcffg ));
};return nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fbg .PdfObjectArray ;ExtGState _fbg .PdfObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eecbg ,_caece :=_aef .Open (filePath );if _caece !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_caece );
return nil ,_caece ;};defer _eecbg .Close ();return NewCompositePdfFontFromTTF (_eecbg );};func _egdbg (_fdebc _fbg .PdfObject ,_bacce _fbg .PdfObject ,_dbcdf map[_fbg .PdfObject ][]_fbg .PdfObject ,_gbdbe map[string ]_fbg .PdfObject ,_addfag *[]_fbg .PdfObject ){var _cegfa *_fbg .PdfIndirectObject ;
if _edebe ,_ffcee :=_fbg .GetIndirect (_fdebc );_ffcee {_cegfa =_edebe ;_fdebc =_edebe .PdfObject ;};switch _gdbbf :=_fdebc .(type ){case *_fbg .PdfObjectDictionary :if _gdbbf .Get ("\u0053")==nil {return ;};_gdbbf .Set ("\u0050",_bacce );if _febd :=_gdbbf .Get ("\u0050\u0067");
_febd !=nil {if _egbfc ,_gbdaf :=_fbg .GetIndirect (_febd );_gbdaf &&_egbfc !=nil &&_egbfc .PdfObject !=nil {_dbcdf [_febd ]=append (_dbcdf [_febd ],_cegfa );};};if _eacef :=_gdbbf .Get ("\u0053");_eacef !=nil {if _eddbe ,_cgecg :=_fbg .GetNameVal (_eacef );
_cgecg {if _eddbe ==StructureTypeLink {if _cbgcf :=_gdbbf .Get ("\u004b");_cbgcf !=nil {if _dfbbe ,_eebf :=_fbg .GetArray (_cbgcf );_eebf &&_dfbbe .Len ()==2{_efcad :=false ;_ecaee :=false ;for _ ,_cdcg :=range _dfbbe .Elements (){if _cbga ,_cfdcd :=_fbg .GetDict (_cdcg );
_cfdcd {if _cecaca ,_fecbb :=_fbg .GetName (_cbga .Get ("\u0054\u0079\u0070\u0065"));_fecbb &&_cecaca .String ()=="\u004f\u0042\u004a\u0052"{_ecaee =true ;};}else if _ ,_eeabg :=_fbg .GetInt (_cdcg );_eeabg {_efcad =true ;};};if _efcad &&_ecaee {*_addfag =append (*_addfag ,_cegfa );
};}else if _bcgge ,_bdaee :=_fbg .GetDict (_cbgcf );_bdaee {if _ebfa ,_bbafc :=_fbg .GetName (_bcgge .Get ("\u0054\u0079\u0070\u0065"));_bbafc &&_ebfa .String ()=="\u004f\u0042\u004a\u0052"{*_addfag =append (*_addfag ,_cegfa );};};};};};};if _cgdcb :=_gdbbf .Get ("\u0049\u0044");
_cgdcb !=nil {_gbdbe [_cgdcb .String ()]=_fdebc ;};if _gffbgf :=_gdbbf .Get ("\u004b");_gffbgf !=nil {_egdbg (_gffbgf ,_cegfa ,_dbcdf ,_gbdbe ,_addfag );};case *_fbg .PdfObjectArray :for _ ,_bcbge :=range _gdbbf .Elements (){_egdbg (_bcbge ,_bacce ,_dbcdf ,_gbdbe ,_addfag );
};default:};};func (_dgged fontCommon )coreString ()string {_edbfe :="";if _dgged ._bgbb !=nil {_edbfe =_dgged ._bgbb .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_dgged ._decd ,_dgged ._daef ,_dgged ._abed ,_dgged ._eabe ,_dgged ._eadad !=nil ,_dgged .fontFlags (),_edbfe );
};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func _afgca (_bdedc []byte )([]byte ,error ){_fgegab :=_cd .New ();if _ ,_dcgcf :=_gg .Copy (_fgegab ,_fb .NewReader (_bdedc ));_dcgcf !=nil {return nil ,_dcgcf ;};return _fgegab .Sum (nil ),nil ;};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_aecfb *ViewerPreferences )ToPdfObject ()_fbg .PdfObject {_acgdcd :=_fbg .MakeDict ();if _aecfb ._fggca !=nil {_acgdcd .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_fbg .MakeBool (*_aecfb ._fggca ));};if _aecfb ._acefc !=nil {_acgdcd .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_fbg .MakeBool (*_aecfb ._acefc ));
};if _aecfb ._cffcc !=nil {_acgdcd .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_fbg .MakeBool (*_aecfb ._cffcc ));};if _aecfb ._eggdd !=nil {_acgdcd .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_fbg .MakeBool (*_aecfb ._eggdd ));
};if _aecfb ._dgeda !=nil {_acgdcd .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_fbg .MakeBool (*_aecfb ._dgeda ));};if _aecfb ._dbfbb !=nil {_acgdcd .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_fbg .MakeBool (*_aecfb ._dbfbb ));
};if _aecfb ._egega !=""{_acgdcd .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_fbg .MakeName (string (_aecfb ._egega )));};if _aecfb ._defgf !=""{_acgdcd .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_fbg .MakeName (string (_aecfb ._defgf )));
};if _aecfb ._cgefba !=""{_acgdcd .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_fbg .MakeName (string (_aecfb ._cgefba )));};if _aecfb ._fadfe !=""{_acgdcd .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_fbg .MakeName (string (_aecfb ._fadfe )));
};if _aecfb ._aaaca !=""{_acgdcd .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_fbg .MakeName (string (_aecfb ._aaaca )));};if _aecfb ._abgbc !=""{_acgdcd .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_fbg .MakeName (string (_aecfb ._abgbc )));
};if _aecfb ._cfbcg !=""{_acgdcd .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_fbg .MakeName (string (_aecfb ._cfbcg )));};if _aecfb ._dffg !=""{_acgdcd .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_fbg .MakeName (string (_aecfb ._dffg )));
};if _aecfb ._dddcag !=nil {_acgdcd .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_fbg .MakeBool (*_aecfb ._dddcag ));};if _aecfb ._dedfe !=nil {_acgdcd .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_fbg .MakeArrayFromIntegers (_aecfb ._dedfe ));
};if _aecfb ._defcb !=0{_acgdcd .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_fbg .MakeInteger (int64 (_aecfb ._defcb )));};return _acgdcd ;};func _aaaad (_dabeg *_fbg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebcd :=&PdfTilingPattern {};
_baaaae :=_dabeg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _baaaae ==nil {_adc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aggcc ,_aged :=_baaaae .(*_fbg .PdfObjectInteger );
if !_aged {_adc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_baaaae );return nil ,_fbg .ErrTypeError ;
};_ebcd .PaintType =_aggcc ;_baaaae =_dabeg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _baaaae ==nil {_adc .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gfbff ,_aged :=_baaaae .(*_fbg .PdfObjectInteger );if !_aged {_adc .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baaaae );
return nil ,_fbg .ErrTypeError ;};_ebcd .TilingType =_gfbff ;_baaaae =_dabeg .Get ("\u0042\u0042\u006f\u0078");if _baaaae ==nil {_adc .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_baaaae =_fbg .TraceToDirectObject (_baaaae );_fdfeda ,_aged :=_baaaae .(*_fbg .PdfObjectArray );if !_aged {_adc .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baaaae );
return nil ,_fbg .ErrTypeError ;};_cdcfeb ,_dadag :=NewPdfRectangle (*_fdfeda );if _dadag !=nil {_adc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dadag );return nil ,_dadag ;};_ebcd .BBox =_cdcfeb ;_baaaae =_dabeg .Get ("\u0058\u0053\u0074e\u0070");
if _baaaae ==nil {_adc .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_daaae ,_dadag :=_fbg .GetNumberAsFloat (_baaaae );if _dadag !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_daaae );
return nil ,_dadag ;};_ebcd .XStep =_fbg .MakeFloat (_daaae );_baaaae =_dabeg .Get ("\u0059\u0053\u0074e\u0070");if _baaaae ==nil {_adc .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gbccd ,_dadag :=_fbg .GetNumberAsFloat (_baaaae );if _dadag !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gbccd );
return nil ,_dadag ;};_ebcd .YStep =_fbg .MakeFloat (_gbccd );_baaaae =_dabeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _baaaae ==nil {_adc .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dabeg ,_aged =_fbg .TraceToDirectObject (_baaaae ).(*_fbg .PdfObjectDictionary );if !_aged {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_baaaae );
};_ffcc ,_dadag :=NewPdfPageResourcesFromDict (_dabeg );if _dadag !=nil {return nil ,_dadag ;};_ebcd .Resources =_ffcc ;if _egdga :=_dabeg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_egdga !=nil {_fdde ,_gcac :=_egdga .(*_fbg .PdfObjectArray );if !_gcac {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egdga );
return nil ,_fbg .ErrTypeError ;};_ebcd .Matrix =_fdde ;};return _ebcd ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_bdbae *PdfReader )newPdfPageFromDict (_gcfbg *_fbg .PdfObjectDictionary )(*PdfPage ,error ){_bfcec :=NewPdfPage ();_bfcec ._afab =_gcfbg ;_bfcec ._aaaf =*_gcfbg ;_aabbg :=*_gcfbg ;_gdggg ,_dbcdcd :=_aabbg .Get ("\u0054\u0079\u0070\u0065").(*_fbg .PdfObjectName );
if !_dbcdcd {return nil ,_fd .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gdggg !="\u0050\u0061\u0067\u0065"{return nil ,_fd .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _bfbcd :=_aabbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bfbcd !=nil {_bfcec .Parent =_bfbcd ;};if _defbc :=_aabbg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_defbc !=nil {_ebgag ,_cddd :=_fbg .GetString (_defbc );
if !_cddd {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_edacc ,_dbdbd :=NewPdfDate (_ebgag .Str ());if _dbdbd !=nil {return nil ,_dbdbd ;};_bfcec .LastModified =&_edacc ;};if _gfca :=_aabbg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gfca !=nil &&!_fbg .IsNullObject (_gfca ){_gdedc ,_baffb :=_fbg .GetDict (_gfca );
if !_baffb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfca );};var _bbbef error ;_bfcec .Resources ,_bbbef =NewPdfPageResourcesFromDict (_gdedc );
if _bbbef !=nil {return nil ,_bbbef ;};}else {_agegb ,_babgc :=_bfcec .getParentResources ();if _babgc !=nil {return nil ,_babgc ;};if _agegb ==nil {_agegb =NewPdfPageResources ();};_bfcec .Resources =_agegb ;};if _cgefa :=_aabbg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cgefa !=nil {_afad ,_fdfab :=_fbg .GetArray (_cgefa );if !_fdfab {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cabe error ;
_bfcec .MediaBox ,_cabe =NewPdfRectangle (*_afad );if _cabe !=nil {return nil ,_cabe ;};};if _baac :=_aabbg .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_baac !=nil {_adgcee ,_agdad :=_fbg .GetArray (_baac );if !_agdad {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _agegc error ;_bfcec .CropBox ,_agegc =NewPdfRectangle (*_adgcee );if _agegc !=nil {return nil ,_agegc ;};};if _dfccd :=_aabbg .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dfccd !=nil {_geefe ,_dbccf :=_fbg .GetArray (_dfccd );if !_dbccf {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _beedd error ;_bfcec .BleedBox ,_beedd =NewPdfRectangle (*_geefe );if _beedd !=nil {return nil ,_beedd ;};};if _gdbbc :=_aabbg .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gdbbc !=nil {_gecce ,_cfbec :=_fbg .GetArray (_gdbbc );if !_cfbec {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fgad error ;_bfcec .TrimBox ,_fgad =NewPdfRectangle (*_gecce );if _fgad !=nil {return nil ,_fgad ;};};if _dagbba :=_aabbg .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dagbba !=nil {_aabed ,_deceg :=_fbg .GetArray (_dagbba );if !_deceg {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bbfe error ;_bfcec .ArtBox ,_bbfe =NewPdfRectangle (*_aabed );if _bbfe !=nil {return nil ,_bbfe ;};};if _cddg :=_aabbg .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_cddg !=nil {_bfcec .BoxColorInfo =_cddg ;};if _afca :=_aabbg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_afca !=nil {_bfcec .Contents =_afca ;};if _ffbd :=_aabbg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ffbd !=nil {_ffbde ,_fdafa :=_fbg .GetNumberAsInt64 (_ffbd );if _fdafa !=nil {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_bfcec .Rotate =&_ffbde ;};if _acgaf :=_aabbg .Get ("\u0047\u0072\u006fu\u0070");_acgaf !=nil {_bfcec .Group =_acgaf ;};if _eddfb :=_aabbg .Get ("\u0054\u0068\u0075m\u0062");_eddfb !=nil {_bfcec .Thumb =_eddfb ;};if _gegbb :=_aabbg .Get ("\u0042");_gegbb !=nil {_bfcec .B =_gegbb ;
};if _bdcea :=_aabbg .Get ("\u0044\u0075\u0072");_bdcea !=nil {_bfcec .Dur =_bdcea ;};if _dafgb :=_aabbg .Get ("\u0054\u0072\u0061n\u0073");_dafgb !=nil {_bfcec .Trans =_dafgb ;};if _gdaad :=_aabbg .Get ("\u0041\u0041");_gdaad !=nil {_bfcec .AA =_gdaad ;
};if _gbace :=_aabbg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gbace !=nil {_bfcec .Metadata =_gbace ;};if _ebdg :=_aabbg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ebdg !=nil {_bfcec .PieceInfo =_ebdg ;};if _gddadc :=_aabbg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_gddadc !=nil {_bfcec .StructParents =_gddadc ;};if _defed :=_aabbg .Get ("\u0049\u0044");_defed !=nil {_bfcec .ID =_defed ;};if _cddae :=_aabbg .Get ("\u0050\u005a");_cddae !=nil {_bfcec .PZ =_cddae ;};if _cdfga :=_aabbg .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cdfga !=nil {_bfcec .SeparationInfo =_cdfga ;};if _gdecb :=_aabbg .Get ("\u0054\u0061\u0062\u0073");_gdecb !=nil {_bfcec .Tabs =_gdecb ;};if _debea :=_aabbg .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_debea !=nil {_bfcec .TemplateInstantiated =_debea ;};if _dcbce :=_aabbg .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dcbce !=nil {_bfcec .PresSteps =_dcbce ;};if _bfaac :=_aabbg .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bfaac !=nil {_bfcec .UserUnit =_bfaac ;
};if _becde :=_aabbg .Get ("\u0056\u0050");_becde !=nil {_bfcec .VP =_becde ;};if _ffaa :=_aabbg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ffaa !=nil {_bfcec .Annots =_ffaa ;};_bfcec ._fdfee =_bdbae ;return _bfcec ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bdabc *PdfPage )GetAllContentStreams ()(string ,error ){_bgbga ,_fdbfc :=_bdabc .GetContentStreams ();if _fdbfc !=nil {return "",_fdbfc ;};return _gdg .Join (_bgbga ,"\u0020"),nil ;};func _cbega (_gdefa *_fbg .PdfObjectDictionary ,_gced *fontCommon ,_aacgfd _cf .TextEncoder )(*pdfFontSimple ,error ){_bcadf :=_gdeb (_gced );
_bcadf ._adec =_aacgfd ;if _aacgfd ==nil {_aaaga :=_gdefa .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aaaga ==nil {_aaaga =_fbg .MakeInteger (0);};_bcadf .FirstChar =_aaaga ;_gaeeff ,_bgddb :=_fbg .GetIntVal (_aaaga );if !_bgddb {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aaaga );
return nil ,_fbg .ErrTypeError ;};_ffcde :=_cf .CharCode (_gaeeff );_aaaga =_gdefa .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aaaga ==nil {_aaaga =_fbg .MakeInteger (255);};_bcadf .LastChar =_aaaga ;_gaeeff ,_bgddb =_fbg .GetIntVal (_aaaga );
if !_bgddb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aaaga );return nil ,_fbg .ErrTypeError ;
};_gfbed :=_cf .CharCode (_gaeeff );_bcadf ._gaeda =make (map[_cf .CharCode ]float64 );_aaaga =_gdefa .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aaaga !=nil {_bcadf .Widths =_aaaga ;_bcda ,_baaf :=_fbg .GetArray (_aaaga );if !_baaf {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aaaga );
return nil ,_fbg .ErrTypeError ;};_dceee ,_gfdef :=_bcda .ToFloat64Array ();if _gfdef !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gfdef ;};if len (_dceee )!=int (_gfbed -_ffcde +1){_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gfbed -_ffcde +1,len (_dceee ));
return nil ,_fbg .ErrRangeError ;};for _cgedd ,_bgga :=range _dceee {_bcadf ._gaeda [_ffcde +_cf .CharCode (_cgedd )]=_bgga ;};};};_bcadf .Encoding =_fbg .TraceToDirectObject (_gdefa .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bcadf ,nil ;
};func _gfcgdg ()string {_ecegc .Lock ();defer _ecegc .Unlock ();if len (_agcff )> 0{return _agcff ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ParsePdfObject parses input pdf object into given output intent.
func (_ccfba *PdfOutputIntent )ParsePdfObject (object _fbg .PdfObject )error {_aegdbc ,_eedbe :=_fbg .GetDict (object );if !_eedbe {_adc .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fd .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_ccfba ._adeg =_aegdbc ;_ccfba .Type ,_ =_aegdbc .GetString ("\u0054\u0079\u0070\u0065");_eafad ,_eedbe :=_aegdbc .GetString ("\u0053");if _eedbe {switch _eafad {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_ccfba .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_ccfba .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_ccfba .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_ccfba .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_ccfba .S =PdfOutputIntentTypeX ;
};};_ccfba .OutputCondition ,_ =_aegdbc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_ccfba .OutputConditionIdentifier ,_ =_aegdbc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_ccfba .RegistryName ,_ =_aegdbc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_ccfba .Info ,_ =_aegdbc .GetString ("\u0049\u006e\u0066\u006f");if _geed ,_ebbcb :=_fbg .GetStream (_aegdbc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_ebbcb {_ccfba .ColorComponents ,_ =_fbg .GetIntVal (_geed .Get ("\u004e"));_gabd ,_dfgbf :=_fbg .DecodeStream (_geed );if _dfgbf !=nil {return _dfgbf ;};_ccfba .DestOutputProfile =_gabd ;};return nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _dcc .Time ){_ecegc .Lock ();defer _ecegc .Unlock ();_fbabd =creationDate ;};func (_dfc *PdfReader )newPdfActionSetOCGStateFromDict (_faeg *_fbg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_faeg .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_faeg .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fbfea *PdfOutlineTreeNode )ToPdfObject ()_fbg .PdfObject {return _fbfea .GetContext ().ToPdfObject ();};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_effa *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _agce []_cf .TextEncoder ;var _agaa _cf .CMapEncoder ;if _eebg :=_effa .baseFields ()._ceadf ;_eebg !=nil {_agaa =_cf .NewCMapEncoder ("",nil ,_eebg );};_gadad :=_effa .Encoder ();
if _gadad !=nil {switch _bdgbd :=_gadad .(type ){case _cf .SimpleEncoder :_bgfe :=_bdgbd .BaseName ();if _ ,_bafe :=_ggcefg [_bgfe ];_bafe {_agce =append (_agce ,_gadad );};};};if len (_agce )==0{if _effa .baseFields ()._ceadf !=nil {_agce =append (_agce ,_agaa );
};if _gadad !=nil {_agce =append (_agce ,_gadad );};};var _bfaadb _fb .Buffer ;var _cdab int ;for _ ,_cgfbd :=range data {var _bbcg bool ;for _ ,_bcfb :=range _agce {if _babe :=_bcfb .Encode (string (_cgfbd ));len (_babe )> 0{_bfaadb .Write (_babe );_bbcg =true ;
break ;};};if !_bbcg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cgfbd );
_cdab ++;};};if _cdab !=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cdab ,_effa ,_agce );
};return _bfaadb .Bytes (),_cdab ;};func _cbdced (_bdgfb *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_bdgfb }};

// SetShadingByName sets a shading resource specified by keyName.
func (_aded *PdfPageResources )SetShadingByName (keyName _fbg .PdfObjectName ,shadingObj _fbg .PdfObject )error {if _aded .Shading ==nil {_aded .Shading =_fbg .MakeDict ();};_cefgbg ,_fagc :=_fbg .GetDict (_aded .Shading );if !_fagc {return _fbg .ErrTypeError ;
};_cefgbg .Set (keyName ,shadingObj );return nil ;};func (_bdea *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bdea ._bgbb ==nil &&_bdea .DescendantFont !=nil {return _bdea .DescendantFont .FontDescriptor ();};return _bdea ._bgbb ;};func (_dgccc *PdfPattern )getDict ()*_fbg .PdfObjectDictionary {if _bgcdb ,_decde :=_dgccc ._eadbd .(*_fbg .PdfIndirectObject );
_decde {_ecba ,_edecc :=_bgcdb .PdfObject .(*_fbg .PdfObjectDictionary );if !_edecc {return nil ;};return _ecba ;}else if _eceab ,_ddfcb :=_dgccc ._eadbd .(*_fbg .PdfObjectStream );_ddfcb {return _eceab .PdfObjectDictionary ;}else {_adc .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dgccc ._eadbd );
return nil ;};};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_bebg *LTV )EnableAll (extraCerts []*_dd .Certificate )error {_fefcd :=_bebg ._bdbe ._gafe .AcroForm ;for _ ,_cgcda :=range _fefcd .AllFields (){_gabcb ,_ :=_cgcda .GetContext ().(*PdfFieldSignature );if _gabcb ==nil {continue ;};_dcfbc :=_gabcb .V ;
if _bcaga :=_bebg .validateSig (_dcfbc );_bcaga !=nil {_adc .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bcaga );
};if _deffe :=_bebg .Enable (_dcfbc ,extraCerts );_deffe !=nil {return _deffe ;};};return nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fbg .PdfObject ;Name _fbg .PdfObject ;};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);func (_gdgg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ebga []*PdfFieldSignature ;for _ ,_egcab :=range _gdgg .AllFields (){switch _adgcf :=_egcab .GetContext ().(type ){case *PdfFieldSignature :_eeccf :=_adgcf ;_ebga =append (_ebga ,_eeccf );
};};return _ebga ;};

// ToPdfObject implements interface PdfModel.
func (_dcgg *PdfAnnotationLink )ToPdfObject ()_fbg .PdfObject {_dcgg .PdfAnnotation .ToPdfObject ();_dcfe :=_dcgg ._ecfe ;_ffe :=_dcfe .PdfObject .(*_fbg .PdfObjectDictionary );_ffe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u004c\u0069\u006e\u006b"));
if _dcgg ._bfgf !=nil &&_dcgg ._bfgf ._ddb !=nil {_ffe .Set ("\u0041",_dcgg ._bfgf ._ddb .ToPdfObject ());}else if _dcgg .A !=nil {_ffe .Set ("\u0041",_dcgg .A );};_ffe .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dcgg .Dest );_ffe .SetIfNotNil ("\u0048",_dcgg .H );
_ffe .SetIfNotNil ("\u0050\u0041",_dcgg .PA );_ffe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcgg .QuadPoints );_ffe .SetIfNotNil ("\u0042\u0053",_dcgg .BS );return _dcfe ;};const (RelationshipSource FileRelationship =iota ;
RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_fbbf *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_abbgd :=_gba .NewReader (img .getBase ());_cbdc :=_ced .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_fbbf .AlternateSpace .GetNumComponents (),nil ,img ._acag ,nil );
_gfac :=_gba .NewWriter (_cbdc );_bdaf :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_adc .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_adc .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_fbbf .TintTransform );_bdac :=_fbbf .AlternateSpace .DecodeArray ();var (_aeaccd uint32 ;_faed error ;);for {_aeaccd ,_faed =_abbgd .ReadSample ();
if _faed ==_gg .EOF {break ;};if _faed !=nil {return img ,_faed ;};_gage :=float64 (_aeaccd )/_bdaf ;_cgecd ,_eedb :=_fbbf .TintTransform .Evaluate ([]float64 {_gage });if _eedb !=nil {return img ,_eedb ;};for _eadc ,_dcde :=range _cgecd {_caaec :=_ced .LinearInterpolate (_dcde ,_bdac [_eadc *2],_bdac [_eadc *2+1],0,1);
if _eedb =_gfac .WriteSample (uint32 (_caaec *_bdaf ));_eedb !=nil {return img ,_eedb ;};};};return _fbbf .AlternateSpace .ImageToRGB (_cgdba (&_cbdc ));};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gfeefe []byte ;_caad []uint32 ;_fdbfe *_fbg .PdfObjectStream ;};

// ToInteger convert to an integer format.
func (_eadb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ggce :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ggce *_eadb .A ()),uint32 (_ggce *_eadb .B ()),uint32 (_ggce *_eadb .C ())};};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_dcdcf *Image )ToGoImage ()(_aa .Image ,error ){_adc .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gbegb ,_becdf :=_ced .NewImage (int (_dcdcf .Width ),int (_dcdcf .Height ),int (_dcdcf .BitsPerComponent ),_dcdcf .ColorComponents ,_dcdcf .Data ,_dcdcf ._acag ,_dcdcf ._beggbb );
if _becdf !=nil {return nil ,_becdf ;};return _gbegb ,nil ;};

// String returns a string representation of what flags are set.
func (_fadga FieldFlag )String ()string {_ecce :="";if _fadga ==FieldFlagClear {_ecce ="\u0043\u006c\u0065a\u0072";return _ecce ;};if _fadga &FieldFlagReadOnly > 0{_ecce +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fadga &FieldFlagRequired > 0{_ecce +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _fadga &FieldFlagNoExport > 0{_ecce +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fadga &FieldFlagNoToggleToOff > 0{_ecce +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fadga &FieldFlagRadio > 0{_ecce +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _fadga &FieldFlagPushbutton > 0{_ecce +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fadga &FieldFlagRadiosInUnision > 0{_ecce +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fadga &FieldFlagMultiline > 0{_ecce +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _fadga &FieldFlagPassword > 0{_ecce +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fadga &FieldFlagFileSelect > 0{_ecce +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fadga &FieldFlagDoNotScroll > 0{_ecce +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _fadga &FieldFlagComb > 0{_ecce +="\u007c\u0043\u006fm\u0062";};if _fadga &FieldFlagRichText > 0{_ecce +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fadga &FieldFlagDoNotSpellCheck > 0{_ecce +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _fadga &FieldFlagCombo > 0{_ecce +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fadga &FieldFlagEdit > 0{_ecce +="\u007c\u0045\u0064i\u0074";};if _fadga &FieldFlagSort > 0{_ecce +="\u007c\u0053\u006fr\u0074";};if _fadga &FieldFlagMultiSelect > 0{_ecce +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _fadga &FieldFlagCommitOnSelChange > 0{_ecce +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gdg .Trim (_ecce ,"\u007c");};

// ToPdfObject converts rectangle to a PDF object.
func (_ceadg *PdfRectangle )ToPdfObject ()_fbg .PdfObject {return _fbg .MakeArray (_fbg .MakeFloat (_ceadg .Llx ),_fbg .MakeFloat (_ceadg .Lly ),_fbg .MakeFloat (_ceadg .Urx ),_fbg .MakeFloat (_ceadg .Ury ));};

// ToPdfObject implements interface PdfModel.
func (_egg *PdfActionSubmitForm )ToPdfObject ()_fbg .PdfObject {_egg .PdfAction .ToPdfObject ();_eb :=_egg ._gc ;_ebg :=_eb .PdfObject .(*_fbg .PdfObjectDictionary );_ebg .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeSubmitForm )));if _egg .F !=nil {_ebg .Set ("\u0046",_egg .F .ToPdfObject ());
};_ebg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_egg .Fields );_ebg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_egg .Flags );return _eb ;};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_fbg .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_fbg .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cegbbf *PdfReader )Decrypt (password []byte )(bool ,error ){_ggec ,_gbdcf :=_cegbbf ._eedad .Decrypt (password );if _gbdcf !=nil {return false ,_gbdcf ;};if !_ggec {return false ,nil ;};_gbdcf =_cegbbf .loadStructure ();if _gbdcf !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_gbdcf );
return false ,_gbdcf ;};return true ,nil ;};

// ToPdfObject converts the structure tree root to a PDF object.
func (_adggg *StructTreeRoot )ToPdfObject ()_fbg .PdfObject {_bgfab :=_adggg ._aeabc ;if _bgfab ==nil {_bgfab =&_fbg .PdfIndirectObject {};_bgfab .PdfObject =_fbg .MakeDict ();};_ggfgc :=_bgfab .PdfObject .(*_fbg .PdfObjectDictionary );var _ffecd _fbg .PdfObject ;
if len (_adggg .K )==1{_ffecd =_fbg .MakeIndirectObject (_adggg .K [0].ToPdfObject ());}else {_eecacb :=_fbg .MakeArray ();for _ ,K :=range _adggg .K {_eecacb .Append (_fbg .MakeIndirectObject (K .ToPdfObject ()));};_ffecd =_eecacb ;};var (_bbfdbb =[]_fbg .PdfObject {};
_fgbaa =map[_fbg .PdfObject ][]_fbg .PdfObject {};_edeec =map[string ]_fbg .PdfObject {};);_egdbg (_ffecd ,_bgfab ,_fgbaa ,_edeec ,&_bbfdbb );_ggfgc .Set ("\u0054\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_ggfgc .Set ("\u004b",_ffecd );if _adggg .IDTree !=nil {_ggfgc .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_fbg .MakeIndirectObject (_adggg .IDTree .ToPdfObject ()));}else if len (_edeec )> 0{_afagac :=_fbg .MakeArray ();_afeb :=make ([]string ,0,len (_edeec ));
for _cecg :=range _edeec {_afeb =append (_afeb ,_cecg );};_db .Strings (_afeb );for _ ,_fedd :=range _afeb {_afagac .Append (_fbg .MakeString (_fedd ));_afagac .Append (_edeec [_fedd ]);};_adggg .IDTree =&IDTree {Names :_afagac ,Limits :_fbg .MakeArray (_fbg .MakeString (_afeb [0]),_fbg .MakeString (_afeb [len (_afeb )-1]))};
_ggfgc .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_fbg .MakeIndirectObject (_adggg .IDTree .ToPdfObject ()));};if _adggg .ParentTree !=nil {_ggfgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_fbg .MakeIndirectObject (_adggg .ParentTree ));
}else if len (_fgbaa )> 0||len (_bbfdbb )> 0{_gfdbd :=_fbg .MakeArray ();_cfdgf :=0;for _eggebe ,_bffada :=range _fgbaa {_fdaaf :=_fbg .MakeArray ();for _ ,_gadeb :=range _bffada {_fdaaf .Append (_gadeb );};_egebg :=_fbg .MakeInteger (int64 (_cfdgf ));
_gfdbd .Append (_egebg );_gfdbd .Append (_fbg .MakeIndirectObject (_fdaaf ));if _ecadga ,_cfccb :=_fbg .GetIndirect (_eggebe );_cfccb {if _adfba ,_ffdd :=_fbg .GetDict (_ecadga .PdfObject );_ffdd {_debfc :=_adfba .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _debfc !=nil {if _bffd ,_fgcdb :=_fbg .GetIntVal (_debfc );_fgcdb {if _cfdgf < _bffd {_adfba .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_egebg );};};}else {_adfba .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_egebg );
};};};_cfdgf ++;};_fbcfd :=func (_fffac _fbg .PdfObject ,_fbfbac *_fbg .PdfObjectDictionary )bool {if _edcd :=_fbfbac .Get ("\u004f\u0062\u006a");_edcd !=nil {if _bcagg ,_cfgfd :=_fbg .GetDict (_edcd );_cfgfd {_fdacgf :=_bcagg .Get ("\u0054\u0079\u0070\u0065");
_degaa :=_bcagg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fdacgf !=nil &&_fdacgf .String ()=="\u0041\u006e\u006eo\u0074"&&_degaa !=nil &&_degaa .String ()=="\u004c\u0069\u006e\u006b"{_beace :=_fbg .MakeInteger (int64 (_cfdgf ));_bcagg .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_beace );
_gfdbd .Append (_beace );_gfdbd .Append (_fffac );_cfdgf ++;return true ;};};};return false ;};for _ ,_bdfbfd :=range _bbfdbb {if _eddfd ,_egbfd :=_fbg .GetDict (_bdfbfd );_egbfd {if _gaebg :=_eddfd .Get ("\u0053");_gaebg !=nil {if _fabdg ,_afdf :=_fbg .GetNameVal (_gaebg );
_afdf &&_fabdg ==StructureTypeLink {if _efce :=_eddfd .Get ("\u004b");_efce !=nil {if _edca ,_cdadb :=_fbg .GetArray (_efce );_cdadb {for _ ,_fafdfc :=range _edca .Elements (){if _cafegb ,_dceg :=_fbg .GetDict (_fafdfc );_dceg {_fbcfd (_bdfbfd ,_cafegb );
};};}else if _edbg ,_febbc :=_fbg .GetDict (_efce );_febbc {_fbcfd (_bdfbfd ,_edbg );};};};};};};_adggg .ParentTree =_fbg .MakeDict ();_adggg .ParentTree .Set ("\u004e\u0075\u006d\u0073",_gfdbd );_adggg .ParentTreeNextKey =int64 (_cfdgf );_ggfgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_fbg .MakeIndirectObject (_adggg .ParentTree ));
};_ggfgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_fbg .MakeInteger (_adggg .ParentTreeNextKey ));if _adggg .RoleMap !=nil {_ggfgc .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_adggg .RoleMap );
};if _adggg .ClassMap !=nil {_ggfgc .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_adggg .ClassMap );};return _bgfab ;};

// PdfVersion returns version of the PDF file.
func (_dbfgf *PdfReader )PdfVersion ()_fbg .Version {return _dbfgf ._eedad .PdfVersion ()};

// Reset sets the multi font encoder to its initial state.
func (_ggfg *MultipleFontEncoder )Reset (){_ggfg .CurrentFont =_ggfg ._agbb [0]};const (_fadgg =0x00001;_bfacc =0x00002;_fede =0x00004;_beceg =0x00008;_aebd =0x00020;_ffec =0x00040;_cgdbg =0x10000;_gafde =0x20000;_dbcec =0x40000;);

// PrintScaling returns the value of the printScaling.
func (_eabcad *ViewerPreferences )PrintScaling ()PrintScaling {return _eabcad ._cfbcg };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_eeaaef *XObjectImage )ToImage ()(*Image ,error ){_cgff :=&Image {};if _eeaaef .Height ==nil {return nil ,_fd .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cgff .Height =*_eeaaef .Height ;if _eeaaef .Width ==nil {return nil ,_fd .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cgff .Width =*_eeaaef .Width ;if _eeaaef .BitsPerComponent ==nil {switch _eeaaef .Filter .(type ){case *_fbg .CCITTFaxEncoder ,*_fbg .JBIG2Encoder :_cgff .BitsPerComponent =1;
case *_fbg .LZWEncoder ,*_fbg .RunLengthEncoder :_cgff .BitsPerComponent =8;default:return nil ,_fd .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cgff .BitsPerComponent =*_eeaaef .BitsPerComponent ;};_cgff .ColorComponents =_eeaaef .ColorSpace .GetNumComponents ();_eeaaef ._cacd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fbg .MakeInteger (int64 (_cgff .ColorComponents )));
_cfceb ,_gdcfc :=_fbg .DecodeStream (_eeaaef ._cacd );if _gdcfc !=nil {return nil ,_gdcfc ;};_cgff .Data =_cfceb ;if _eeaaef .Decode !=nil {_dbbad ,_ffed :=_eeaaef .Decode .(*_fbg .PdfObjectArray );if !_ffed {_adc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_dfcgc ,_efeaf :=_dbbad .ToFloat64Array ();if _efeaf !=nil {return nil ,_efeaf ;};switch _eeaaef .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_beedf :=_eeaaef .ColorSpace .DecodeArray ();
if _beedf [0]==_dfcgc [0]&&_beedf [1]==_dfcgc [1]&&_beedf [2]==_dfcgc [2]&&_beedf [3]==_dfcgc [3]{_cgff ._beggbb =_dfcgc ;};default:_cgff ._beggbb =_dfcgc ;};};return _cgff ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_begdcd int64 ;_eeaag int64 ;_ffgfgg int64 ;_bdbgce int64 ;_bfaaa int64 ;_fdace int64 ;_fbgece byte ;_fcadaa int64 ;_dcagd int64 ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fbg .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gg .ReadSeeker )(*PdfReader ,error ){const _fegc ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dggcc (rs ,&ReaderOpts {},false ,_fegc );};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_faec *modelManager )GetPrimitiveFromModel (model PdfModel )_fbg .PdfObject {_faec ._ccddd .RLock ();defer _faec ._ccddd .RUnlock ();_bfdaeb ,_cfdbf :=_faec ._eggac [model ];if !_cfdbf {return nil ;};return _bfdaeb ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fbg .PdfObject ;ColorSpace _fbg .PdfObject ;Pattern _fbg .PdfObject ;Shading _fbg .PdfObject ;XObject _fbg .PdfObject ;Font _fbg .PdfObject ;ProcSet _fbg .PdfObject ;Properties _fbg .PdfObject ;_abcdeb *_fbg .PdfObjectDictionary ;
_dagbf *PdfPageResourcesColorspaces ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fdaad *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bbggb []*PdfOutlineTreeNode ;var _cgcaf []string ;var _adaba func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_adaba =func (_cccgc *PdfOutlineTreeNode ,_dgcbf *[]*PdfOutlineTreeNode ,_aafbe *[]string ,_fgfga int ){if _cccgc ==nil {return ;
};if _cccgc ._bfbgb ==nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_afaa ,_gacag :=_cccgc ._bfbgb .(*PdfOutlineItem );if _gacag {*_dgcbf =append (*_dgcbf ,&_afaa .PdfOutlineTreeNode );
_aegbc :=_gdg .Repeat ("\u0020",_fgfga *2)+_afaa .Title .Decoded ();*_aafbe =append (*_aafbe ,_aegbc );};if _cccgc .First !=nil {_daebde :=_gdg .Repeat ("\u0020",_fgfga *2)+"\u002b";*_aafbe =append (*_aafbe ,_daebde );_adaba (_cccgc .First ,_dgcbf ,_aafbe ,_fgfga +1);
};if _gacag &&_afaa .Next !=nil {_adaba (_afaa .Next ,_dgcbf ,_aafbe ,_fgfga );};};_adaba (_fdaad ._fbea ,&_bbggb ,&_cgcaf ,0);return _bbggb ,_cgcaf ,nil ;};var _daba =_c .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _efgb (_ffgc *_fbg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_bbegd :=PdfShadingType6 {};
_fefcec :=_ffgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fefcec ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eabeb ,_deagf :=_fefcec .(*_fbg .PdfObjectInteger );if !_deagf {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fefcec );
return nil ,_fbg .ErrTypeError ;};_bbegd .BitsPerCoordinate =_eabeb ;_fefcec =_ffgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fefcec ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eabeb ,_deagf =_fefcec .(*_fbg .PdfObjectInteger );if !_deagf {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fefcec );
return nil ,_fbg .ErrTypeError ;};_bbegd .BitsPerComponent =_eabeb ;_fefcec =_ffgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fefcec ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eabeb ,_deagf =_fefcec .(*_fbg .PdfObjectInteger );if !_deagf {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fefcec );
return nil ,_fbg .ErrTypeError ;};_bbegd .BitsPerComponent =_eabeb ;_fefcec =_ffgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fefcec ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgfgfc ,_deagf :=_fefcec .(*_fbg .PdfObjectArray );if !_deagf {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fefcec );
return nil ,_fbg .ErrTypeError ;};_bbegd .Decode =_dgfgfc ;if _cacfab :=_ffgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cacfab !=nil {_bbegd .Function =[]PdfFunction {};if _bfadf ,_ebecf :=_cacfab .(*_fbg .PdfObjectArray );_ebecf {for _ ,_aggfgc :=range _bfadf .Elements (){_adccf ,_cfege :=_aabg (_aggfgc );
if _cfege !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfege );return nil ,_cfege ;};_bbegd .Function =append (_bbegd .Function ,_adccf );
};}else {_eabca ,_bcec :=_aabg (_cacfab );if _bcec !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcec );return nil ,_bcec ;
};_bbegd .Function =append (_bbegd .Function ,_eabca );};};return &_bbegd ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fbg .PdfObject ;GetContainingPdfObject ()_fbg .PdfObject ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_bagfc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _bagfc ._acfag .(*PdfTilingPattern );};

// GetContentStream returns the XObject Form's content stream.
func (_badba *XObjectForm )GetContentStream ()([]byte ,error ){_baddc ,_acgfe :=_fbg .DecodeStream (_badba ._gcbcg );if _acgfe !=nil {return nil ,_acgfe ;};return _baddc ,nil ;};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_bggcg *PdfWriter )GetPageIndirectObject (pageNum int )(*_fbg .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_bggcg ._fefbb ){return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _bggcg ._fefbb [pageNum ],nil ;};func (_bbeca *PdfFunctionType0 )processSamples ()error {_acbed :=_gba .ResampleBytes (_bbeca ._gfeefe ,_bbeca .BitsPerSample );_bbeca ._caad =_acbed ;return nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_dgfb :=&PdfFilespec {};_dgfb ._efba =_fbg .MakeIndirectObject (_fbg .MakeDict ());_dgfb .Desc =_fbg .MakeString (file .Description );_dgfb .EF =file .ToPdfObject ();_dgfb .F =_fbg .MakeString (file .Name );
_dgfb .UF =_fbg .MakeEncodedString (file .Name ,true );_bbfb :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_bbfb ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_bbfb ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_bbfb ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_bbfb ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_dgfb .AFRelationship =_fbg .MakeName (_bbfb );return _dgfb ;
};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_acag []byte ;_beggbb []float64 ;};func _bddba ()string {_ecegc .Lock ();defer _ecegc .Unlock ();return _fcfe };func (_dagf *fontFile )loadFromSegments (_eacge ,_gdec []byte )error {_adc .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_eacge ),len (_gdec ));
_eafeb :=_dagf .parseASCIIPart (_eacge );if _eafeb !=nil {return _eafeb ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dagf );if len (_gdec )==0{return nil ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_dagf );
return nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cbcec *DSS )ToPdfObject ()_fbg .PdfObject {_eabd :=_cbcec ._gcdad .PdfObject .(*_fbg .PdfObjectDictionary );_eabd .Clear ();_dedb :=_fbg .MakeDict ();for _afbfa ,_dgdcc :=range _cbcec .VRI {_dedb .Set (*_fbg .MakeName (_afbfa ),_dgdcc .ToPdfObject ());
};_eabd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bbcgb (_cbcec .Certs ));_eabd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bbcgb (_cbcec .OCSPs ));_eabd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bbcgb (_cbcec .CRLs ));_eabd .Set ("\u0056\u0052\u0049",_dedb );
return _cbcec ._gcdad ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fbg .PdfObjectName ;};

// Clear clears the KValue.
func (_facd *KValue )Clear (){_facd ._daabc =nil ;_facd ._cfcg =nil ;_facd ._dcffg =nil };

// AddPages adds pages to be appended to the end of the source PDF.
func (_abcb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_aecfe :=range pages {_aecfe =_aecfe .Duplicate ();_cbeaf (_aecfe );_abcb ._efgd =append (_abcb ._efgd ,_aecfe );};};func (_eagd *PdfReader )loadAction (_cbcf _fbg .PdfObject )(*PdfAction ,error ){if _ddac ,_gad :=_fbg .GetIndirect (_cbcf );
_gad {_fcag ,_dfga :=_eagd .newPdfActionFromIndirectObject (_ddac );if _dfga !=nil {return nil ,_dfga ;};return _fcag ,nil ;}else if !_fbg .IsNullObject (_cbcf ){return nil ,_fd .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dac *PdfAnnotationSound )ToPdfObject ()_fbg .PdfObject {_dac .PdfAnnotation .ToPdfObject ();_dedg :=_dac ._ecfe ;_deed :=_dedg .PdfObject .(*_fbg .PdfObjectDictionary );_dac .PdfAnnotationMarkup .appendToPdfDictionary (_deed );_deed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u006f\u0075n\u0064"));
_deed .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dac .Sound );_deed .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dac .Name );return _dedg ;};

// NumCopies returns the value of the numCopies.
func (_dbddb *ViewerPreferences )NumCopies ()int {return _dbddb ._defcb };

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fbg .PdfObject ;AN _fbg .PdfObject ;OP _fbg .PdfObject ;JS _fbg .PdfObject ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_affde *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fbg .PdfObjectInteger ;BitsPerComponent *_fbg .PdfObjectInteger ;BitsPerFlag *_fbg .PdfObjectInteger ;Decode *_fbg .PdfObjectArray ;Function []PdfFunction ;};

// SetContext sets the sub annotation (context).
func (_fcg *PdfAnnotation )SetContext (ctx PdfModel ){_fcg ._cdc =ctx };func (_bfbga *PdfReader )loadPerms ()(*Permissions ,error ){if _eafd :=_bfbga ._ffcac .Get ("\u0050\u0065\u0072m\u0073");_eafd !=nil {if _bffad ,_bdbad :=_fbg .GetDict (_eafd );_bdbad {_eegcd :=_bffad .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _eegcd ==nil {return nil ,nil ;};if _ecbbc ,_fgcef :=_fbg .GetIndirect (_eegcd );_fgcef {_afgdd ,_bgggb :=_bfbga .newPdfSignatureFromIndirect (_ecbbc );if _bgggb !=nil {return nil ,_bgggb ;};return NewPermissions (_afgdd ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fbg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fbg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fbg .PdfObjectBool ;_bfffe PdfModel ;_gedcg _fbg .PdfObject ;};func (_cfead *PdfWriter )checkCrossReferenceStream ()bool {_gefcc :=_cfead ._bagfb .Major > 1||(_cfead ._bagfb .Major ==1&&_cfead ._bagfb .Minor > 4);
if _cfead ._cecc !=nil {_gefcc =*_cfead ._cecc ;};return _gefcc ;};type modelManager struct{_eggac map[PdfModel ]_fbg .PdfObject ;_ebada map[_fbg .PdfObject ]PdfModel ;_ccddd _g .RWMutex ;_bgdee _g .RWMutex ;};

// Write writes out the PDF.
func (_edcde *PdfWriter )Write (writer _gg .Writer )error {_adc .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _cafa ,_ebdaf :=writer .(*_aef .File );_ebdaf {_edcde .SetFileName (_cafa .Name ());};_ebaaa :=_edcde .checkLicense ();if _ebaaa !=nil {return _ebaaa ;
};if _ebaaa =_edcde .writeOutlines ();_ebaaa !=nil {return _ebaaa ;};if _ebaaa =_edcde .writeAcroFormFields ();_ebaaa !=nil {return _ebaaa ;};if _ebaaa =_edcde .writeNamesDictionary ();_ebaaa !=nil {return _ebaaa ;};_edcde .checkPendingObjects ();if _ebaaa =_edcde .writeOutputIntents ();
_ebaaa !=nil {return _ebaaa ;};_edcde .setCatalogVersion ();_edcde .copyObjects ();if _ebaaa =_edcde .optimize ();_ebaaa !=nil {return _ebaaa ;};if _ebaaa =_edcde .optimizeDocument ();_ebaaa !=nil {return _ebaaa ;};var _fdcdf _b .Hash ;if _edcde ._bcgag {_fdcdf =_fc .New ();
writer =_gg .MultiWriter (_fdcdf ,writer );};_edcde .setWriter (writer );_ebeag :=_edcde .checkCrossReferenceStream ();_bfgbf ,_ebeag :=_edcde .mapObjectStreams (_ebeag );_edcde .adjustXRefAffectedVersion (_ebeag );_edcde .writeDocumentVersion ();_edcde .updateObjectNumbers ();
_edcde .writeObjects ();if _ebaaa =_edcde .writeObjectsInStreams (_bfgbf );_ebaaa !=nil {return _ebaaa ;};_edbgb :=_edcde ._fbdga ;var _eeafa int ;for _cgede :=range _edcde ._baecgd {if _cgede > _eeafa {_eeafa =_cgede ;};};if _edcde ._bcgag {if _ebaaa =_edcde .setHashIDs (_fdcdf );
_ebaaa !=nil {return _ebaaa ;};};if _ebeag {if _ebaaa =_edcde .writeXRefStreams (_eeafa ,_edbgb );_ebaaa !=nil {return _ebaaa ;};}else {_edcde .writeTrailer (_eeafa );};_edcde .makeOffSetReference (_edbgb );if _ebaaa =_edcde .flushWriter ();_ebaaa !=nil {return _ebaaa ;
};return nil ;};var _cacff =false ;

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bfeg *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// RemoveStructParentsKey removes the StructParents key.
func (_gfbce *PdfPage )RemoveStructParentsKey (){_gfbce .StructParents =nil };

// Fill populates `form` with values provided by `provider`.
func (_dacf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dacf .fill (provider ,nil )};

// ToPdfObject converts the K dictionary to a PDF object.
func (_adgggd *KDict )ToPdfObject ()_fbg .PdfObject {_dgcfc :=_fbg .MakeDict ();if _adgggd .ID !=nil {_dgcfc .Set ("\u0049\u0044",_adgggd .ID );};if _adgggd .K !=nil {_dgcfc .Set ("\u004b",_adgggd .K );}else if len (_adgggd ._cgfe )> 0{if len (_adgggd ._cgfe )==1{_adgggd .K =_adgggd ._cgfe [0].ToPdfObject ();
}else {_gdag :=_fbg .MakeArray ();for _ ,_acgba :=range _adgggd ._cgfe {_gdag .Append (_acgba .ToPdfObject ());};_adgggd .K =_gdag ;};_dgcfc .Set ("\u004b",_adgggd .K );};if _adgggd .S !=nil {_dgcfc .Set ("\u0053",_adgggd .S );};if _adgggd .P !=nil {_dgcfc .Set ("\u0050",_adgggd .P );
};if _adgggd .Pg !=nil {_dgcfc .Set ("\u0050\u0067",_adgggd .Pg );};if _adgggd .C !=nil {_dgcfc .Set ("\u0043",_adgggd .C );};if _adgggd .R !=nil {_dgcfc .Set ("\u0052",_adgggd .R );};if _adgggd .T !=nil {_dgcfc .Set ("\u0054",_adgggd .T );};if _adgggd .Lang !=nil {_dgcfc .Set ("\u004c\u0061\u006e\u0067",_adgggd .Lang );
};if _adgggd .Alt !=nil {_dgcfc .Set ("\u0041\u006c\u0074",_adgggd .Alt );};if _adgggd .E !=nil {_dgcfc .Set ("\u0045",_adgggd .E );};if _adgggd .A !=nil {_dgcfc .Set ("\u0041",_adgggd .A );}else if _adgggd ._cdaba !=nil {_gdega :=_fbg .MakeArrayFromFloats ([]float64 {_adgggd ._cdaba .Llx ,_adgggd ._cdaba .Lly ,_adgggd ._cdaba .Urx ,_adgggd ._cdaba .Ury });
_babfgb :=_fbg .MakeDict ();_babfgb .Set ("\u0042\u0042\u006f\u0078",_gdega );_babfgb .Set ("\u004f",_fbg .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_dgcfc .Set ("\u0041",_fbg .MakeIndirectObject (_babfgb ));};if _adgggd .ActualText !=nil {_dgcfc .Set ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074",_adgggd .ActualText );
};if _adgggd .E !=nil {_dgcfc .Set ("\u0045",_adgggd .E );};if _adgggd .Alt !=nil {_dgcfc .Set ("\u0041\u006c\u0074",_adgggd .Alt );};return _dgcfc ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cbgcb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gdfgdg :=RC4_128bit ;if options !=nil {_gdfgdg =options .Algorithm ;};_eedada :=_abc .PermOwner ;if options !=nil {_eedada =options .Permissions ;};var _gdaga _ce .Filter ;
switch _gdfgdg {case RC4_128bit :_gdaga =_ce .NewFilterV2 (16);case AES_128bit :_gdaga =_ce .NewFilterAESV2 ();case AES_256bit :_gdaga =_ce .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gdceb ,_gcfad ,_afaaf :=_fbg .PdfCryptNewEncrypt (_gdaga ,userPass ,ownerPass ,_eedada );if _afaaf !=nil {return _afaaf ;};_cbgcb ._dbbgb =_gdceb ;if _gcfad .Major !=0{_cbgcb .SetVersion (_gcfad .Major ,_gcfad .Minor );};_cbgcb ._gdeaa =_gcfad .Encrypt ;
_cbgcb ._gebgg ,_cbgcb ._aecaf =_gcfad .ID0 ,_gcfad .ID1 ;_febag :=_fbg .MakeIndirectObject (_gcfad .Encrypt );_cbgcb ._edcbd =_febag ;_cbgcb .addObject (_febag );return nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fdfa :=NewPdfAnnotation ();_agd :=&PdfAnnotationPrinterMark {};_agd .PdfAnnotation =_fdfa ;_fdfa .SetContext (_agd );return _agd ;};

// SetLocation sets the `Location` field of the signature.
func (_geec *PdfSignature )SetLocation (location string ){_geec .Location =_fbg .MakeEncodedString (location ,true );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fbg .PdfIndirectObject )*PdfOutlineItem {_dffce :=PdfOutlineItem {};_dffce ._bfbgb =&_dffce ;_dffce .Title =_fbg .MakeString (title );_bbdcb :=_fbg .MakeArray ();_bbdcb .Append (page );_bbdcb .Append (_fbg .MakeName ("\u0046\u0069\u0074"));
_dffce .Dest =_bbdcb ;return &_dffce ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ac .PSProgram ;_gbcag *_ac .PSExecutor ;_bfdfd []byte ;_dbcba *_fbg .PdfObjectStream ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_baagf *PdfReader )GetTrailer ()(*_fbg .PdfObjectDictionary ,error ){_bgbfg :=_baagf ._eedad .GetTrailer ();if _bgbfg ==nil {return nil ,_fd .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bgbfg ,nil ;
};func (_dgba *PdfWriter )setDocumentIDs (_aafga ,_fefec string ){_dgba ._bacgfa =_fbg .MakeArray (_fbg .MakeHexString (_aafga ),_fbg .MakeHexString (_fefec ));};func (_aadfb *PdfReader )newPdfSignatureReferenceFromDict (_abgab *_fbg .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _daff ,_bbaeg :=_aadfb ._dccaf .GetModelFromPrimitive (_abgab ).(*PdfSignatureReference );
_bbaeg {return _daff ,nil ;};_fbgeagf :=&PdfSignatureReference {_agbdff :_abgab ,Data :_abgab .Get ("\u0044\u0061\u0074\u0061")};var _fgcd bool ;_fbgeagf .Type ,_ =_fbg .GetName (_abgab .Get ("\u0054\u0079\u0070\u0065"));_fbgeagf .TransformMethod ,_fgcd =_fbg .GetName (_abgab .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_fgcd {_adc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_fbgeagf .TransformParams ,_ =_fbg .GetDict (_abgab .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fbgeagf .DigestMethod ,_ =_fbg .GetName (_abgab .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _fbgeagf ,nil ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_aebcg *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_aebcg ._dedfe =printPageRange ;};

// AddCerts adds certificates to DSS.
func (_dfbeb *DSS )AddCerts (certs [][]byte )([]*_fbg .PdfObjectStream ,error ){return _dfbeb .add (&_dfbeb .Certs ,_dfbeb ._cbced ,certs );};func (_bgffb *pdfFontType0 )subsetRegistered ()error {_dgcd ,_baec :=_bgffb .DescendantFont ._fbff .(*pdfCIDFontType2 );
if !_baec {_adc .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bgffb .DescendantFont );return nil ;};if _dgcd ==nil {return nil ;
};if _dgcd ._bgbb ==nil {_adc .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bgffb ._cgbbg ==nil {_adc .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dfddd ,_baec :=_fbg .GetStream (_dgcd ._bgbb .FontFile2 );if !_baec {_adc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fd .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dbgdd ,_gbgcb :=_fbg .DecodeStream (_dfddd );if _gbgcb !=nil {_adc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gbgcb );
return _gbgcb ;};_feeb ,_gbgcb :=_cb .Parse (_fb .NewReader (_dbgdd ));if _gbgcb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dfddd .Stream ));
return _gbgcb ;};var _eadbc []rune ;var _ccaaf *_cb .Font ;switch _dcadg :=_bgffb ._cgbbg .(type ){case *_cf .TrueTypeFontEncoder :_eadbc =_dcadg .RegisteredRunes ();_ccaaf ,_gbgcb =_feeb .SubsetKeepRunes (_eadbc );if _gbgcb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbgcb );
return _gbgcb ;};_dcadg .SubsetRegistered ();case *_cf .IdentityEncoder :_eadbc =_dcadg .RegisteredRunes ();_cadbb :=make ([]_cb .GlyphIndex ,len (_eadbc ));for _bfaea ,_bfabd :=range _eadbc {_cadbb [_bfaea ]=_cb .GlyphIndex (_bfabd );};_ccaaf ,_gbgcb =_feeb .SubsetKeepIndices (_cadbb );
if _gbgcb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbgcb );return _gbgcb ;};case _cf .SimpleEncoder :_deebd :=_dcadg .Charcodes ();for _ ,_fgeac :=range _deebd {_abbd ,_bcbg :=_dcadg .CharcodeToRune (_fgeac );if !_bcbg {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fgeac );
continue ;};_eadbc =append (_eadbc ,_abbd );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bgffb ._cgbbg );
};var _effede _fb .Buffer ;_gbgcb =_ccaaf .Write (&_effede );if _gbgcb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbgcb );return _gbgcb ;};if _bgffb ._ceadf !=nil {_fggbf :=make (map[_ed .CharCode ]rune ,len (_eadbc ));for _ ,_gded :=range _eadbc {_febc ,_begf :=_bgffb ._cgbbg .RuneToCharcode (_gded );
if !_begf {continue ;};_fggbf [_ed .CharCode (_febc )]=_gded ;};_bgffb ._ceadf =_ed .NewToUnicodeCMap (_fggbf );};_dfddd ,_gbgcb =_fbg .MakeStream (_effede .Bytes (),_fbg .NewFlateEncoder ());if _gbgcb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbgcb );
return _gbgcb ;};_dfddd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fbg .MakeInteger (int64 (_effede .Len ())));if _ffgee ,_adffe :=_fbg .GetStream (_dgcd ._bgbb .FontFile2 );_adffe {*_ffgee =*_dfddd ;}else {_dgcd ._bgbb .FontFile2 =_dfddd ;};_badd :=_fafgb ();
if len (_bgffb ._daef )> 0{_bgffb ._daef =_ggged (_bgffb ._daef ,_badd );};if len (_dgcd ._daef )> 0{_dgcd ._daef =_ggged (_dgcd ._daef ,_badd );};if len (_bgffb ._abed )> 0{_bgffb ._abed =_ggged (_bgffb ._abed ,_badd );};if _dgcd ._bgbb !=nil {_dbea ,_ggeaa :=_fbg .GetName (_dgcd ._bgbb .FontName );
if _ggeaa &&len (_dbea .String ())> 0{_acdf :=_ggged (_dbea .String (),_badd );_dgcd ._bgbb .FontName =_fbg .MakeName (_acdf );};};return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fbg .PdfObject ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_afgc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject converts the ID tree to a PDF object.
func (_gdebg *IDTree )ToPdfObject ()_fbg .PdfObject {_bbceg :=_fbg .MakeDict ();if _gdebg .Names !=nil &&_gdebg .Names .Len ()> 0{_bbceg .Set ("\u004e\u0061\u006de\u0073",_gdebg .Names );_bbceg .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_gdebg .Limits );
};if len (_gdebg .Kids )> 0{_gfafa :=_fbg .MakeArray ();for _ ,_eagea :=range _gdebg .Kids {_gfafa .Append (_eagea .ToPdfObject ());};_dcef :=_fbg .MakeDict ();_dcef .Set ("\u004b\u0069\u0064\u0073",_gfafa );_bbceg .Set ("\u004b\u0069\u0064\u0073",_dcef );
};return _bbceg ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fbg .PdfObjectString ;Q *_fbg .PdfObjectInteger ;DS *_fbg .PdfObjectString ;RV _fbg .PdfObject ;MaxLen *_fbg .PdfObjectInteger ;};func (_fgddg *fontFile )parseASCIIPart (_egggb []byte )error {if len (_egggb )< 2||string (_egggb [:2])!="\u0025\u0021"{return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_eacbc ,_eafb ,_aeddg :=_gfgfg (_egggb );if _aeddg !=nil {return _aeddg ;};_ccfcfe :=_acaec (_eacbc );_fgddg ._gaad =_ccfcfe ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _fgddg ._gaad ==""{_adc .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _eafb !=""{_gdgf ,_badfg :=_ddged (_eafb );if _badfg !=nil {return _badfg ;};_bggee ,_badfg :=_cf .NewCustomSimpleTextEncoder (_gdgf ,nil );if _badfg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_badfg );
return nil ;};_fgddg ._gbcfa =_bggee ;};return nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fbg .PdfObject ;Flags _fbg .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fbg .PdfObject ;Sy _fbg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eec *PdfActionGoTo3DView )ToPdfObject ()_fbg .PdfObject {_eec .PdfAction .ToPdfObject ();_egc :=_eec ._gc ;_cede :=_egc .PdfObject .(*_fbg .PdfObjectDictionary );_cede .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeGoTo3DView )));_cede .SetIfNotNil ("\u0054\u0041",_eec .TA );
_cede .SetIfNotNil ("\u0056",_eec .V );return _egc ;};func (_fffb *PdfWriter )checkLicense ()error {_afbed :=_eef .GetLicenseKey ();if (_afbed ==nil ||!_afbed .IsLicensed ())&&!_cacff {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fd .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// SetContext set the sub annotation (context).
func (_dfcbe *PdfShading )SetContext (ctx PdfModel ){_dfcbe ._bfffe =ctx };func (_affedd *PdfWriter )copyObject (_dfda _fbg .PdfObject ,_gaagf map[_fbg .PdfObject ]_fbg .PdfObject ,_beffd map[_fbg .PdfObject ]struct{},_gagbc bool )_fbg .PdfObject {_adedc :=!_affedd ._aceab &&_beffd !=nil ;
if _ggecd ,_bgbfga :=_gaagf [_dfda ];_bgbfga {if _adedc &&!_gagbc {delete (_beffd ,_dfda );};return _ggecd ;};if _dfda ==nil {_babce :=_fbg .MakeNull ();return _babce ;};_gdggc :=_dfda ;switch _adcf :=_dfda .(type ){case *_fbg .PdfObjectArray :_egdc :=_fbg .MakeArray ();
_gdggc =_egdc ;_gaagf [_dfda ]=_gdggc ;for _ ,_aege :=range _adcf .Elements (){_egdc .Append (_affedd .copyObject (_aege ,_gaagf ,_beffd ,_gagbc ));};case *_fbg .PdfObjectStreams :_dgfdg :=&_fbg .PdfObjectStreams {PdfObjectReference :_adcf .PdfObjectReference };
_gdggc =_dgfdg ;_gaagf [_dfda ]=_gdggc ;for _ ,_abgg :=range _adcf .Elements (){_dgfdg .Append (_affedd .copyObject (_abgg ,_gaagf ,_beffd ,_gagbc ));};case *_fbg .PdfObjectStream :_aaadbd :=&_fbg .PdfObjectStream {Stream :_adcf .Stream ,PdfObjectReference :_adcf .PdfObjectReference ,Lazy :_adcf .Lazy ,TempFile :_adcf .TempFile };
_gdggc =_aaadbd ;_gaagf [_dfda ]=_gdggc ;_aaadbd .PdfObjectDictionary =_affedd .copyObject (_adcf .PdfObjectDictionary ,_gaagf ,_beffd ,_gagbc ).(*_fbg .PdfObjectDictionary );case *_fbg .PdfObjectDictionary :var _egcba bool ;if _adedc &&!_gagbc {if _ggceaf ,_ :=_fbg .GetNameVal (_adcf .Get ("\u0054\u0079\u0070\u0065"));
_ggceaf =="\u0050\u0061\u0067\u0065"{_ ,_daacc :=_affedd ._gegac [_adcf ];_gagbc =!_daacc ;_egcba =_gagbc ;};};_agecc :=_fbg .MakeDict ();_gdggc =_agecc ;_gaagf [_dfda ]=_gdggc ;for _ ,_ebdbef :=range _adcf .Keys (){_agecc .Set (_ebdbef ,_affedd .copyObject (_adcf .Get (_ebdbef ),_gaagf ,_beffd ,_gagbc ));
};if _egcba {_gdggc =_fbg .MakeNull ();_gagbc =false ;};case *_fbg .PdfIndirectObject :_ccea :=&_fbg .PdfIndirectObject {PdfObjectReference :_adcf .PdfObjectReference };_gdggc =_ccea ;_gaagf [_dfda ]=_gdggc ;_ccea .PdfObject =_affedd .copyObject (_adcf .PdfObject ,_gaagf ,_beffd ,_gagbc );
case *_fbg .PdfObjectString :_dgggd :=*_adcf ;_gdggc =&_dgggd ;_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectName :_dgcgc :=*_adcf ;_gdggc =&_dgcgc ;_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectNull :_gdggc =_fbg .MakeNull ();_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectInteger :_gbce :=*_adcf ;
_gdggc =&_gbce ;_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectReference :_adafc :=*_adcf ;_gdggc =&_adafc ;_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectFloat :_aadefc :=*_adcf ;_gdggc =&_aadefc ;_gaagf [_dfda ]=_gdggc ;case *_fbg .PdfObjectBool :_cdfgeb :=*_adcf ;
_gdggc =&_cdfgeb ;_gaagf [_dfda ]=_gdggc ;case *pdfSignDictionary :_geggd :=&pdfSignDictionary {PdfObjectDictionary :_fbg .MakeDict (),_dafgc :_adcf ._dafgc ,_fddbd :_adcf ._fddbd };_gdggc =_geggd ;_gaagf [_dfda ]=_gdggc ;for _ ,_ffbfg :=range _adcf .Keys (){_geggd .Set (_ffbfg ,_affedd .copyObject (_adcf .Get (_ffbfg ),_gaagf ,_beffd ,_gagbc ));
};default:_adc .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_dfda );
};if _adedc &&_gagbc {_beffd [_dfda ]=struct{}{};};return _gdggc ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _fbg .PdfObjectName ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_gggca *_fbg .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_fbg .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_fbg .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_fbg .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_fbg .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_fbg .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_fbg .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_fbg .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_fbg .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_fbg .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_fbg .PdfObjectDictionary ;};var (CourierName =_dg .CourierName ;CourierBoldName =_dg .CourierBoldName ;CourierObliqueName =_dg .CourierObliqueName ;CourierBoldObliqueName =_dg .CourierBoldObliqueName ;HelveticaName =_dg .HelveticaName ;HelveticaBoldName =_dg .HelveticaBoldName ;
HelveticaObliqueName =_dg .HelveticaObliqueName ;HelveticaBoldObliqueName =_dg .HelveticaBoldObliqueName ;SymbolName =_dg .SymbolName ;ZapfDingbatsName =_dg .ZapfDingbatsName ;TimesRomanName =_dg .TimesRomanName ;TimesBoldName =_dg .TimesBoldName ;TimesItalicName =_dg .TimesItalicName ;
TimesBoldItalicName =_dg .TimesBoldItalicName ;);

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ecegc .Lock ();defer _ecegc .Unlock ();_baae =subject };func (_fcdcf *PdfWriter )checkPendingObjects (){for _bfgeb ,_efedc :=range _fcdcf ._gfedad {if !_fcdcf .hasObject (_bfgeb ){_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_bfgeb ,_bfgeb ,_bfgeb );
for _ ,_dbfcc :=range _efedc {for _ ,_gdfae :=range _dbfcc .Keys (){_dddee :=_dbfcc .Get (_gdfae );if _dddee ==_bfgeb {_adc .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dbfcc .Set (_gdfae ,_fbg .MakeNull ());break ;};};};};};};

// SetPrintArea sets the value of the printArea.
func (_gbfea *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_gbfea ._aaaca =printArea };

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_defg :=NewPdfAnnotation ();_ece :=&PdfAnnotationSquare {};_ece .PdfAnnotation =_defg ;_ece .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_defg .SetContext (_ece );return _ece ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dca :=NewPdfAction ();_gbe :=&PdfActionLaunch {};_gbe .PdfAction =_dca ;_dca .SetContext (_gbe );return _gbe ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_egaba *Image )SetSamples (samples []uint32 ){if _egaba .BitsPerComponent < 8{samples =_egaba .samplesAddPadding (samples );};_bgdcd :=_gba .ResampleUint32 (samples ,int (_egaba .BitsPerComponent ),8);_cbgdd :=make ([]byte ,len (_bgdcd ));for _aeagb ,_bbcafc :=range _bgdcd {_cbgdd [_aeagb ]=byte (_bbcafc );
};_egaba .Data =_cbgdd ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dada ,_bcabb :=_ddbf (basefont );if _bcabb !=nil {return nil ,_bcabb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dada ._efbad =_cf .NewWinAnsiEncoder ();};return &PdfFont {_fbff :&_dada },nil ;
};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fbg .PdfObject ;IC _fbg .PdfObject ;BE _fbg .PdfObject ;RD _fbg .PdfObject ;};func (_beeb SignatureValidationResult )String ()string {var _faebd _fb .Buffer ;_faebd .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_beeb .Name ));
if _beeb .Date ._begdcd > 0{_faebd .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_beeb .Date .ToGoTime ().String ()));}else {_faebd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_beeb .Reason )> 0{_faebd .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_beeb .Reason ));}else {_faebd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_beeb .Location )> 0{_faebd .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_beeb .Location ));}else {_faebd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_beeb .ContactInfo )> 0{_faebd .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_beeb .ContactInfo ));}else {_faebd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_faebd .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_beeb .Fields )));if _beeb .IsSigned {_faebd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_faebd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _beeb .IsVerified {_faebd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_faebd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _beeb .IsTrusted {_faebd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_faebd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_beeb .GeneralizedTime .IsZero (){_faebd .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_beeb .GeneralizedTime .String ()));
};if _beeb .DiffResults !=nil {_faebd .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_beeb .DiffResults .IsPermitted ()));if len (_beeb .DiffResults .Warnings )> 0{_faebd .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_deafb :=range _beeb .DiffResults .Warnings {_faebd .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_deafb ));};};if len (_beeb .DiffResults .Errors )> 0{_faebd .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_cgded :=range _beeb .DiffResults .Errors {_faebd .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_cgded ));};};};if _beeb .IsCrlFound {_faebd .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_faebd .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _beeb .IsOcspFound {_faebd .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_faebd .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _faebd .String ();};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gcbfa *PdfWriter )SetRotation (rotate int64 )error {_cedcd ,_fceff :=_fbg .GetDict (_gcbfa ._caaebg );if !_fceff {return ErrTypeCheck ;};_cedcd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fbg .MakeInteger (rotate ));return nil ;};

// PrintClip returns the value of the printClip.
func (_gegeca *ViewerPreferences )PrintClip ()PageBoundary {return _gegeca ._abgbc };

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aebb :=map[rune ]int {};for _ ,_ggffb :=range text {_aebb [_ggffb ]++;};return _aebb ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dedcf *_fbg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fbg .PdfObjectName ;Filter *_fbg .PdfObjectName ;SubFilter *_fbg .PdfObjectName ;Contents *_fbg .PdfObjectString ;Cert _fbg .PdfObject ;ByteRange *_fbg .PdfObjectArray ;Reference *_fbg .PdfObjectArray ;Changes *_fbg .PdfObjectArray ;Name *_fbg .PdfObjectString ;
M *_fbg .PdfObjectString ;Location *_fbg .PdfObjectString ;Reason *_fbg .PdfObjectString ;ContactInfo *_fbg .PdfObjectString ;R *_fbg .PdfObjectInteger ;V *_fbg .PdfObjectInteger ;PropBuild *_fbg .PdfObjectDictionary ;PropAuthTime *_fbg .PdfObjectInteger ;
PropAuthType *_fbg .PdfObjectName ;};

// ViewArea returns the value of the viewArea.
func (_dbcgfc *ViewerPreferences )ViewArea ()PageBoundary {return _dbcgfc ._cgefba };func _adgeg (_fcfcg _fbg .PdfObject )(*PdfFunctionType2 ,error ){_efeb :=&PdfFunctionType2 {};var _gbbab *_fbg .PdfObjectDictionary ;if _degcc ,_ddbg :=_fcfcg .(*_fbg .PdfIndirectObject );
_ddbg {_bgfa ,_efea :=_degcc .PdfObject .(*_fbg .PdfObjectDictionary );if !_efea {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efeb ._ddgfg =_degcc ;_gbbab =_bgfa ;}else if _dgfe ,_aebcc :=_fcfcg .(*_fbg .PdfObjectDictionary );
_aebcc {_gbbab =_dgfe ;}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adc .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gbbab .String ());_bfdfa ,_caef :=_fbg .TraceToDirectObject (_gbbab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fbg .PdfObjectArray );
if !_caef {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bfdfa .Len ()< 0||_bfdfa .Len ()%2!=0{_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cbbdc ,_gdgfa :=_bfdfa .ToFloat64Array ();if _gdgfa !=nil {return nil ,_gdgfa ;};_efeb .Domain =_cbbdc ;_bfdfa ,_caef =_fbg .TraceToDirectObject (_gbbab .Get ("\u0052\u0061\u006eg\u0065")).(*_fbg .PdfObjectArray );if _caef {if _bfdfa .Len ()< 0||_bfdfa .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bcef ,_caeggf :=_bfdfa .ToFloat64Array ();if _caeggf !=nil {return nil ,_caeggf ;};_efeb .Range =_bcef ;};_bfdfa ,_caef =_fbg .TraceToDirectObject (_gbbab .Get ("\u0043\u0030")).(*_fbg .PdfObjectArray );if _caef {_ceed ,_cfeff :=_bfdfa .ToFloat64Array ();
if _cfeff !=nil {return nil ,_cfeff ;};_efeb .C0 =_ceed ;};_bfdfa ,_caef =_fbg .TraceToDirectObject (_gbbab .Get ("\u0043\u0031")).(*_fbg .PdfObjectArray );if _caef {_gfaadc ,_adbdg :=_bfdfa .ToFloat64Array ();if _adbdg !=nil {return nil ,_adbdg ;};_efeb .C1 =_gfaadc ;
};if len (_efeb .C0 )!=len (_efeb .C1 ){_adc .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fbg .ErrRangeError ;};N ,_gdgfa :=_fbg .GetNumberAsFloat (_fbg .TraceToDirectObject (_gbbab .Get ("\u004e")));
if _gdgfa !=nil {_adc .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gbbab .String ());return nil ,_gdgfa ;};_efeb .N =N ;
return _efeb ,nil ;};

// A returns the value of the A component of the color.
func (_gafa *PdfColorLab )A ()float64 {return _gafa [1]};func (_ebebd *PdfWriter )copyObjects (){_dccbd :=make (map[_fbg .PdfObject ]_fbg .PdfObject );_gdfab :=make ([]_fbg .PdfObject ,0,len (_ebebd ._ddeeb ));_abgdfd :=make (map[_fbg .PdfObject ]struct{},len (_ebebd ._ddeeb ));
_aecbg :=make (map[_fbg .PdfObject ]struct{});for _ ,_fecfa :=range _ebebd ._ddeeb {_fcfcbb :=_ebebd .copyObject (_fecfa ,_dccbd ,_aecbg ,false );if _ ,_bgdbb :=_aecbg [_fecfa ];_bgdbb {continue ;};_gdfab =append (_gdfab ,_fcfcbb );_abgdfd [_fcfcbb ]=struct{}{};
};_ebebd ._ddeeb =_gdfab ;_ebebd ._gcadf =_abgdfd ;_ebebd ._abfag =_ebebd .copyObject (_ebebd ._abfag ,_dccbd ,nil ,false ).(*_fbg .PdfIndirectObject );_ebebd ._bgbgb =_ebebd .copyObject (_ebebd ._bgbgb ,_dccbd ,nil ,false ).(*_fbg .PdfIndirectObject );
if _ebebd ._edcbd !=nil {_ebebd ._edcbd =_ebebd .copyObject (_ebebd ._edcbd ,_dccbd ,nil ,false ).(*_fbg .PdfIndirectObject );};if _ebebd ._aceab {_gfada :=make (map[_fbg .PdfObject ]int64 );for _befce ,_dgebg :=range _ebebd ._ccafa {if _baagff ,_abcf :=_dccbd [_befce ];
_abcf {_gfada [_baagff ]=_dgebg ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ebebd ._ccafa =_gfada ;};};func _dbced (_gfdb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gfdb }};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ecg :=NewPdfAnnotation ();_bad :=&PdfAnnotationSquiggly {};_bad .PdfAnnotation =_ecg ;_bad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecg .SetContext (_bad );return _bad ;};

// SetHideMenubar sets the value of the hideMenubar flag.
func (_caggc *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_caggc ._acefc =&hideMenubar };func (_fbbgb *LTV )getOCSPs (_bacaf []*_dd .Certificate ,_gadd map[string ]*_dd .Certificate )([][]byte ,error ){_feda :=make ([][]byte ,0,len (_bacaf ));
for _ ,_gfccfb :=range _bacaf {for _ ,_cbeab :=range _gfccfb .OCSPServer {if _fbbgb .CertClient .IsCA (_gfccfb ){continue ;};_dcgad ,_ffga :=_gadd [_gfccfb .Issuer .CommonName ];if !_ffga {_adc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_addbf ,_abaa :=_fbbgb .OCSPClient .MakeRequest (_cbeab ,_gfccfb ,_dcgad );if _abaa !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_abaa );
continue ;};_feda =append (_feda ,_addbf );};};return _feda ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_ceaac *PdfReader )GetOutlines ()(*Outline ,error ){if _ceaac ==nil {return nil ,_fd .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_adadbd :=_ceaac .GetOutlineTree ();if _adadbd ==nil {return nil ,_fd .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cafef func (_gaefeg *PdfOutlineTreeNode ,_gggad *[]*OutlineItem );_cafef =func (_dcfgc *PdfOutlineTreeNode ,_ddfb *[]*OutlineItem ){if _dcfgc ==nil {return ;};if _dcfgc ._bfbgb ==nil {_adc .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ebcda *OutlineItem ;if _aaddd ,_cacc :=_dcfgc ._bfbgb .(*PdfOutlineItem );_cacc {_bdeee :=_aaddd .Dest ;if (_bdeee ==nil ||_fbg .IsNullObject (_bdeee ))&&_aaddd .A !=nil {if _cegbe ,_agea :=_fbg .GetDict (_aaddd .A );_agea {if _fdffe ,_fbgf :=_fbg .GetArray (_cegbe .Get ("\u0044"));
_fbgf {_bdeee =_fdffe ;}else {_ebdfcf ,_ddbd :=_fbg .GetString (_cegbe .Get ("\u0044"));if !_ddbd {return ;};_bbeeb ,_ddbd :=_ceaac ._ffcac .Get ("\u004e\u0061\u006de\u0073").(*_fbg .PdfObjectReference );if !_ddbd {return ;};_gdgbe ,_ggaba :=_ceaac ._eedad .LookupByReference (*_bbeeb );
if _ggaba !=nil {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_ggaba .Error ());
return ;};_fgfac ,_ddbd :=_gdgbe .(*_fbg .PdfIndirectObject );if !_ddbd {return ;};_deab :=map[_fbg .PdfObject ]struct{}{};_ggaba =_ceaac .buildNameNodes (_fgfac ,_deab );if _ggaba !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_ggaba .Error ());
return ;};for _eaaaf :=range _deab {_abebb ,_eaadd :=_fbg .GetDict (_eaaaf );if !_eaadd {continue ;};_gfcee ,_eaadd :=_fbg .GetArray (_abebb .Get ("\u004e\u0061\u006de\u0073"));if !_eaadd {continue ;};for _efdg ,_dbgga :=range _gfcee .Elements (){switch _dbgga .(type ){case *_fbg .PdfObjectString :if _dbgga .String ()==_ebdfcf .String (){if _fage :=_gfcee .Get (_efdg +1);
_fage !=nil {if _ecbf ,_gbcb :=_fbg .GetDict (_fage );_gbcb {_bdeee =_ecbf .Get ("\u0044");break ;};};};};};};};};};var _afdgg OutlineDest ;if _bdeee !=nil &&!_fbg .IsNullObject (_bdeee ){if _cbafd ,_dfcg :=_gaefeb (_bdeee ,_ceaac );_dfcg ==nil {_afdgg =*_cbafd ;
}else {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bdeee ,_dfcg );
};};_ebcda =NewOutlineItem (_aaddd .Title .Decoded (),_afdgg );*_ddfb =append (*_ddfb ,_ebcda );if _aaddd .Next !=nil {_cafef (_aaddd .Next ,_ddfb );};};if _dcfgc .First !=nil {if _ebcda !=nil {_ddfb =&_ebcda .Entries ;};_cafef (_dcfgc .First ,_ddfb );
};};_beffge :=NewOutline ();_cafef (_adadbd ,&_beffge .Entries );return _beffge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbgb *PdfAnnotationHighlight )ToPdfObject ()_fbg .PdfObject {_gbgb .PdfAnnotation .ToPdfObject ();_dgcc :=_gbgb ._ecfe ;_beff :=_dgcc .PdfObject .(*_fbg .PdfObjectDictionary );_gbgb .PdfAnnotationMarkup .appendToPdfDictionary (_beff );_beff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_beff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gbgb .QuadPoints );return _dgcc ;};func _fafgb ()string {_baebc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _gcfg _fb .Buffer ;for _deda :=0;_deda < 6;_deda ++{_gcfg .WriteRune (rune (_baebc [_bc .Intn (len (_baebc ))]));};return _gcfg .String ();};

// ToPdfObject implements interface PdfModel.
func (_ccc *PdfActionNamed )ToPdfObject ()_fbg .PdfObject {_ccc .PdfAction .ToPdfObject ();_aed :=_ccc ._gc ;_bbd :=_aed .PdfObject .(*_fbg .PdfObjectDictionary );_bbd .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeNamed )));_bbd .SetIfNotNil ("\u004e",_ccc .N );
return _aed ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbfg *PdfColorspaceSpecialPattern )ToPdfObject ()_fbg .PdfObject {if _bbfg .UnderlyingCS ==nil {return _fbg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cgaf :=_fbg .MakeArray (_fbg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_cgaf .Append (_bbfg .UnderlyingCS .ToPdfObject ());if _bbfg ._cgee !=nil {_bbfg ._cgee .PdfObject =_cgaf ;return _bbfg ._cgee ;};return _cgaf ;};

// GetVersion gets the document version.
func (_aebcab *PdfWriter )GetVersion ()_fbg .Version {return _aebcab ._bagfb };

// GetOptimizer returns current PDF optimizer.
func (_fcfae *PdfWriter )GetOptimizer ()Optimizer {return _fcfae ._eagae };

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_caaeg :=&PdfSignature {Type :_fbg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gbcdb :=&pdfSignDictionary {PdfObjectDictionary :_fbg .MakeDict (),_dafgc :&handler ,_fddbd :_caaeg };
_caaeg ._dedcf =_fbg .MakeIndirectObject (_gbcdb );return _caaeg ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_agcd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bebef :=_agcd .actualFont ();if _bebef ==nil {_adc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_agcd ._fbff );
return _dg .CharMetrics {},false ;};if _dcba ,_ababa :=_bebef .GetRuneMetrics (r );_ababa {return _dcba ,true ;};if _afbb ,_cbgbc :=_agcd .GetFontDescriptor ();_cbgbc ==nil &&_afbb !=nil {return _dg .CharMetrics {Wx :_afbb ._ecbbd },true ;};_adc .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agcd );
return _dg .CharMetrics {},false ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_bcced :=&PdfPageResourcesColorspaces {};_bcced .Names =[]string {};_bcced .Colorspaces =map[string ]PdfColorspace {};_bcced ._edda =&_fbg .PdfIndirectObject {};return _bcced ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fbg .PdfObject ;};func _eaac (_dfedc _fbg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_adc .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dfedc .String (),_dfedc );
_aagge :=NewPdfColorspaceSpecialPattern ();if _gbbb ,_badfc :=_dfedc .(*_fbg .PdfIndirectObject );_badfc {_aagge ._cgee =_gbbb ;};_dfedc =_fbg .TraceToDirectObject (_dfedc );if _ddgd ,_gdccc :=_dfedc .(*_fbg .PdfObjectName );_gdccc {if *_ddgd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _aagge ,nil ;};_beab ,_bbaf :=_dfedc .(*_fbg .PdfObjectArray );if !_bbaf {_adc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dfedc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _beab .Len ()!=1&&_beab .Len ()!=2{_adc .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_beab );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dfedc =_beab .Get (0);if _gdcag ,_cbfc :=_dfedc .(*_fbg .PdfObjectName );_cbfc {if *_gdcag !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adc .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gdcag );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _beab .Len ()> 1{_dfedc =_beab .Get (1);_dfedc =_fbg .TraceToDirectObject (_dfedc );_abee ,_gfgg :=NewPdfColorspaceFromPdfObject (_dfedc );if _gfgg !=nil {return nil ,_gfgg ;
};_aagge .UnderlyingCS =_abee ;};_adc .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_aagge .UnderlyingCS );
return _aagge ,nil ;};

// GetNumComponents returns the number of color components.
func (_fecf *PdfColorspaceICCBased )GetNumComponents ()int {return _fecf .N };

// ValidateSignatures validates digital signatures in the document.
func (_eafc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _eafc .AcroForm ==nil {return nil ,nil ;};if _eafc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cgdfc *PdfSignature ;
_defeg *PdfField ;_bdbgf SignatureHandler ;};var _badde []*sigFieldPair ;for _ ,_cgaba :=range _eafc .AcroForm .AllFields (){if _cgaba .V ==nil {continue ;};if _afacb ,_abdfc :=_fbg .GetDict (_cgaba .V );_abdfc {if _gbgad ,_cgbgf :=_fbg .GetNameVal (_afacb .Get ("\u0054\u0079\u0070\u0065"));
_cgbgf &&(_gbgad =="\u0053\u0069\u0067"||_gbgad =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_ecdbc ,_edegb :=_fbg .GetIndirect (_cgaba .V );if !_edegb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_bgeb ,_ceeaa :=_eafc .newPdfSignatureFromIndirect (_ecdbc );if _ceeaa !=nil {return nil ,_ceeaa ;};var _cbdd SignatureHandler ;for _ ,_affff :=range handlers {if _affff .IsApplicable (_bgeb ){_cbdd =_affff ;break ;};};_badde =append (_badde ,&sigFieldPair {_cgdfc :_bgeb ,_defeg :_cgaba ,_bdbgf :_cbdd });
};};};var _edgaf []SignatureValidationResult ;for _ ,_fafdf :=range _badde {_bcbbd :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fafdf ._defeg }};if _fafdf ._bdbgf ==nil {_bcbbd .Errors =append (_bcbbd .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_edgaf =append (_edgaf ,_bcbbd );continue ;};_dfccg ,_cbaeb :=_fafdf ._bdbgf .NewDigest (_fafdf ._cgdfc );if _cbaeb !=nil {_bcbbd .Errors =append (_bcbbd .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cbaeb .Error ());_edgaf =append (_edgaf ,_bcbbd );
continue ;};_bcdeg :=_fafdf ._cgdfc .ByteRange ;if _bcdeg ==nil {_bcbbd .Errors =append (_bcbbd .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_edgaf =append (_edgaf ,_bcbbd );continue ;};for _bbfgb :=0;
_bbfgb < _bcdeg .Len ();_bbfgb =_bbfgb +2{_bfcb ,_ :=_fbg .GetNumberAsInt64 (_bcdeg .Get (_bbfgb ));_cdcba ,_ :=_fbg .GetIntVal (_bcdeg .Get (_bbfgb +1));if _ ,_dgcda :=_eafc ._fbgef .Seek (_bfcb ,_gg .SeekStart );_dgcda !=nil {return nil ,_dgcda ;};_aagaf :=make ([]byte ,_cdcba );
if _ ,_gaebb :=_eafc ._fbgef .Read (_aagaf );_gaebb !=nil {return nil ,_gaebb ;};_dfccg .Write (_aagaf );};var _ffcg SignatureValidationResult ;if _dbadg ,_eebeb :=_fafdf ._bdbgf .(SignatureHandlerDocMDP );_eebeb {_ffcg ,_cbaeb =_dbadg .ValidateWithOpts (_fafdf ._cgdfc ,_dfccg ,SignatureHandlerDocMDPParams {Parser :_eafc ._eedad });
}else {_ffcg ,_cbaeb =_fafdf ._bdbgf .Validate (_fafdf ._cgdfc ,_dfccg );};if _cbaeb !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cbaeb ,_fafdf ._bdbgf );_ffcg .Errors =append (_ffcg .Errors ,_cbaeb .Error ());
};_ffcg .Name =_fafdf ._cgdfc .Name .Decoded ();_ffcg .Reason =_fafdf ._cgdfc .Reason .Decoded ();if _fafdf ._cgdfc .M !=nil {_gdgbac ,_fedgb :=NewPdfDate (_fafdf ._cgdfc .M .String ());if _fedgb !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fedgb );
_ffcg .Errors =append (_ffcg .Errors ,_fedgb .Error ());continue ;};_ffcg .Date =_gdgbac ;};_ffcg .ContactInfo =_fafdf ._cgdfc .ContactInfo .Decoded ();_ffcg .Location =_fafdf ._cgdfc .Location .Decoded ();_ffcg .Fields =_bcbbd .Fields ;_edgaf =append (_edgaf ,_ffcg );
};return _edgaf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_cfacc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fafgf :=vals [0];if _fafgf < 0.0||_fafgf > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fafgf );
return nil ,ErrColorOutOfRange ;};_cfccf :=vals [1];if _cfccf < 0.0||_cfccf > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfccf );return nil ,ErrColorOutOfRange ;
};_eccf :=vals [2];if _eccf < 0.0||_eccf > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eccf );return nil ,ErrColorOutOfRange ;};_dbeg :=NewPdfColorCalRGB (_fafgf ,_cfccf ,_eccf );
return _dbeg ,nil ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_eeg *PdfAppender )SetDocInfo (info *PdfInfo ){_eeg ._baa =info };

// GetSubFilter returns SubFilter value or empty string.
func (_eggab *pdfSignDictionary )GetSubFilter ()string {_gdcb :=_eggab .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _gdcb ==nil {return "";};if _gdfgf ,_bgfd :=_fbg .GetNameVal (_gdcb );_bgfd {return _gdfgf ;};return "";};

// GetRefObject returns the reference object of the KValue.
func (_aafbc *KValue )GetRefObject ()_fbg .PdfObject {return _aafbc ._cfcg };func (_bcffb *LTV )validateSig (_fedfg *PdfSignature )error {if _fedfg ==nil ||_fedfg .Contents ==nil ||len (_fedfg .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fedfg );
};return nil ;};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_dgadf *PdfReader )GetCatalogViewerPreferences ()(_fbg .PdfObject ,bool ){if _dgadf ._ffcac ==nil {return nil ,false ;};_fbca :=_dgadf ._ffcac .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _fbca ,_fbca !=nil ;};

// String implements interface PdfObject.
func (_aaf *PdfAction )String ()string {_gf ,_df :=_aaf .ToPdfObject ().(*_fbg .PdfIndirectObject );if _df {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aaf ._ddb ,_gf .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_cdaa *PdfSignature )ToPdfObject ()_fbg .PdfObject {_gedccg :=_cdaa ._dedcf ;var _gdgc *_fbg .PdfObjectDictionary ;if _feae ,_cbbge :=_gedccg .PdfObject .(*pdfSignDictionary );_cbbge {_gdgc =_feae .PdfObjectDictionary ;}else {_gdgc =_gedccg .PdfObject .(*_fbg .PdfObjectDictionary );
};_gdgc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cdaa .Type );_gdgc .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cdaa .Filter );_gdgc .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cdaa .SubFilter );_gdgc .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cdaa .ByteRange );
_gdgc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cdaa .Contents );_gdgc .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cdaa .Cert );_gdgc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdaa .Name );_gdgc .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cdaa .Reason );
_gdgc .SetIfNotNil ("\u004d",_cdaa .M );_gdgc .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cdaa .Reference );_gdgc .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cdaa .Changes );_gdgc .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cdaa .ContactInfo );
_gdgc .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_cdaa .Location );return _gedccg ;};

// ToPdfObject implements interface PdfModel.
func (_fccg *PdfAnnotationRedact )ToPdfObject ()_fbg .PdfObject {_fccg .PdfAnnotation .ToPdfObject ();_cbb :=_fccg ._ecfe ;_cgdc :=_cbb .PdfObject .(*_fbg .PdfObjectDictionary );_fccg .PdfAnnotationMarkup .appendToPdfDictionary (_cgdc );_cgdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_cgdc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fccg .QuadPoints );_cgdc .SetIfNotNil ("\u0049\u0043",_fccg .IC );_cgdc .SetIfNotNil ("\u0052\u004f",_fccg .RO );_cgdc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fccg .OverlayText );
_cgdc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fccg .Repeat );_cgdc .SetIfNotNil ("\u0044\u0041",_fccg .DA );_cgdc .SetIfNotNil ("\u0051",_fccg .Q );return _cbb ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gfgbbe *PdfPageResources )SetFontByName (keyName _fbg .PdfObjectName ,obj _fbg .PdfObject )error {if _gfgbbe .Font ==nil {_gfgbbe .Font =_fbg .MakeDict ();};_fgfaca ,_dfgdf :=_fbg .TraceToDirectObject (_gfgbbe .Font ).(*_fbg .PdfObjectDictionary );
if !_dfgdf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fbg .TraceToDirectObject (_gfgbbe .Font ));
return _fbg .ErrTypeError ;};_fgfaca .Set (keyName ,obj );return nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_af :=NewPdfAction ();_fae :=&PdfActionHide {};_fae .PdfAction =_af ;_af .SetContext (_fae );return _fae ;};func (_eaab *PdfReader )newPdfAnnotationTrapNetFromDict (_abf *_fbg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_cffe :=PdfAnnotationTrapNet {};
return &_cffe ,nil ;};func _fafgc (_dcgge *_fbg .PdfObjectDictionary )(*PdfFieldButton ,error ){_ebagda :=&PdfFieldButton {};_ebagda .PdfField =NewPdfField ();_ebagda .PdfField .SetContext (_ebagda );_ebagda .Opt ,_ =_fbg .GetArray (_dcgge .Get ("\u004f\u0070\u0074"));
_bfaee :=NewPdfAnnotationWidget ();_bfaee .A ,_ =_fbg .GetDict (_dcgge .Get ("\u0041"));_bfaee .AP ,_ =_fbg .GetDict (_dcgge .Get ("\u0041\u0050"));_bfaee .SetContext (_ebagda );_ebagda .PdfField .Annotations =append (_ebagda .PdfField .Annotations ,_bfaee );
return _ebagda ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gbfdd int ,_egbcg *PdfPage )error ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_afbee *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetStructRoot gets the StructTreeRoot object
func (_bffce *PdfPage )GetStructTreeRoot ()(*_fbg .PdfObject ,bool ){_cceb ,_cdge :=_bffce ._fdfee .GetCatalogStructTreeRoot ();return &_cceb ,_cdge ;};

// ReplacePage replaces the original page to a new page.
func (_geab *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_aegcd :=pageNum -1;for _fbaef :=range _geab ._efgd {if _fbaef ==_aegcd {_bggb :=page .Duplicate ();_cbeaf (_bggb );_geab ._efgd [_fbaef ]=_bggb ;};};};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fda :=NewPdfAction ();_dbb :=&PdfActionGoToR {};_dbb .PdfAction =_fda ;_fda .SetContext (_dbb );return _dbb ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};func (_adebc *PdfWriter )makeOffSetReference (_abcab int64 ){_adfed :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_abcab );_adebc .writeString (_adfed );_adebc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};func _ebdc (_gbbd []byte )[]byte {const _dgcef =52845;const _gagd =22719;_fbdfa :=55665;for _ ,_adbe :=range _gbbd [:4]{_fbdfa =(int (_adbe )+_fbdfa )*_dgcef +_gagd ;};_fdea :=make ([]byte ,len (_gbbd )-4);for _fbbce ,_gfccf :=range _gbbd [4:]{_fdea [_fbbce ]=byte (int (_gfccf )^_fbdfa >>8);
_fbdfa =(int (_gfccf )+_fbdfa )*_dgcef +_gagd ;};return _fdea ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_gabaa *Image )Resample (targetBitsPerComponent int64 ){if _gabaa .BitsPerComponent ==targetBitsPerComponent {return ;};_abbff :=_gabaa .GetSamples ();if targetBitsPerComponent < _gabaa .BitsPerComponent {_ceeff :=_gabaa .BitsPerComponent -targetBitsPerComponent ;
for _dceea :=range _abbff {_abbff [_dceea ]>>=uint (_ceeff );};}else if targetBitsPerComponent > _gabaa .BitsPerComponent {_gccd :=targetBitsPerComponent -_gabaa .BitsPerComponent ;for _ddbc :=range _abbff {_abbff [_ddbc ]<<=uint (_gccd );};};_gabaa .BitsPerComponent =targetBitsPerComponent ;
if _gabaa .BitsPerComponent < 8{_gabaa .resampleLowBits (_abbff );return ;};_bgbgd :=_ced .BytesPerLine (int (_gabaa .Width ),int (_gabaa .BitsPerComponent ),_gabaa .ColorComponents );_aebee :=make ([]byte ,_bgbgd *int (_gabaa .Height ));var (_dggc ,_afega ,_dbcgf ,_cdagg int ;
_aaebg uint32 ;);for _dbcgf =0;_dbcgf < int (_gabaa .Height );_dbcgf ++{_dggc =_dbcgf *_bgbgd ;_afega =(_dbcgf +1)*_bgbgd -1;_ccfge :=_gba .ResampleUint32 (_abbff [_dggc :_afega ],int (targetBitsPerComponent ),8);for _cdagg ,_aaebg =range _ccfge {_aebee [_cdagg +_dggc ]=byte (_aaebg );
};};_gabaa .Data =_aebee ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_gb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_gb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_gb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_bdbe *PdfAppender ;_aeded *DSS ;};func _ddbf (_fcabd StdFontName )(pdfFontSimple ,error ){_ecab ,_aada :=_dg .NewStdFontByName (_fcabd );if !_aada {return pdfFontSimple {},ErrFontNotSupported ;};_ffbg :=_fbbeb (_ecab );return _ffbg ,nil ;
};

// Add appends an outline item as a child of the current outline item.
func (_bgfg *OutlineItem )Add (item *OutlineItem ){_bgfg .Entries =append (_bgfg .Entries ,item )};func (_ffff *PdfReader )newPdfOutlineItemFromIndirectObject (_eedac *_fbg .PdfIndirectObject )(*PdfOutlineItem ,error ){_fdcfe ,_addac :=_eedac .PdfObject .(*_fbg .PdfObjectDictionary );
if !_addac {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dcfd :=NewPdfOutlineItem ();_bgfad :=_fdcfe .Get ("\u0054\u0069\u0074l\u0065");
if _bgfad ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_effbg ,_ddab :=_fbg .GetString (_bgfad );if !_ddab {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bgfad );};_dcfd .Title =_effbg ;if _caaef :=_fdcfe .Get ("\u0043\u006f\u0075n\u0074");
_caaef !=nil {_eafaf ,_agec :=_caaef .(*_fbg .PdfObjectInteger );if !_agec {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_caaef );};_ccdcb :=int64 (*_eafaf );
_dcfd .Count =&_ccdcb ;};if _egddd :=_fdcfe .Get ("\u0044\u0065\u0073\u0074");_egddd !=nil {_dcfd .Dest =_fbg .ResolveReference (_egddd );if !_ffff ._cgfbeb {_egceg :=_ffff .traverseObjectData (_dcfd .Dest );if _egceg !=nil {return nil ,_egceg ;};};};if _gdggf :=_fdcfe .Get ("\u0041");
_gdggf !=nil {_dcfd .A =_fbg .ResolveReference (_gdggf );if !_ffff ._cgfbeb {_efbbc :=_ffff .traverseObjectData (_dcfd .A );if _efbbc !=nil {return nil ,_efbbc ;};};};if _cdae :=_fdcfe .Get ("\u0053\u0045");_cdae !=nil {_dcfd .SE =nil ;};if _dfgab :=_fdcfe .Get ("\u0043");
_dfgab !=nil {_dcfd .C =_fbg .ResolveReference (_dfgab );};if _baeca :=_fdcfe .Get ("\u0046");_baeca !=nil {_dcfd .F =_fbg .ResolveReference (_baeca );};return _dcfd ,nil ;};

// String returns a string representation of the field.
func (_agfba *PdfField )String ()string {if _egcee ,_efaa :=_agfba .ToPdfObject ().(*_fbg .PdfIndirectObject );_efaa {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_agfba ._becea ,_egcee .PdfObject .String ());};return "";};func (_bbee *pdfFontSimple )getFontEncoding ()(_ecdaf string ,_eece map[_cf .CharCode ]_cf .GlyphName ,_degga error ){_ecdaf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _debaf ,_caebd :=_ddbbb [_bbee ._daef ];_caebd {_ecdaf =_debaf ;}else if _bbee .fontFlags ()&_fede !=0{for _dbdec ,_beaa :=range _ddbbb {if _gdg .Contains (_bbee ._daef ,_dbdec ){_ecdaf =_beaa ;break ;};};};if _bbee .Encoding ==nil {return _ecdaf ,nil ,nil ;
};switch _fddcg :=_bbee .Encoding .(type ){case *_fbg .PdfObjectName :return string (*_fddcg ),nil ,nil ;case *_fbg .PdfObjectDictionary :_fbada ,_bade :=_fbg .GetName (_fddcg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _bade {_ecdaf =_fbada .String ();};if _dgab :=_fddcg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_dgab !=nil {_baaa ,_bfba :=_fbg .GetArray (_dgab );if !_bfba {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fddcg ,_fddcg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fbg .ErrTypeError ;};_eece ,_degga =_cf .FromFontDifferences (_baaa );};return _ecdaf ,_eece ,_degga ;default:_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bbee .Encoding ,_bbee .Encoding );
return "",nil ,_fbg .ErrTypeError ;};};

// ToPdfObject implements interface PdfModel.
func (_feg *PdfActionImportData )ToPdfObject ()_fbg .PdfObject {_feg .PdfAction .ToPdfObject ();_baf :=_feg ._gc ;_bed :=_baf .PdfObject .(*_fbg .PdfObjectDictionary );_bed .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeImportData )));if _feg .F !=nil {_bed .Set ("\u0046",_feg .F .ToPdfObject ());
};return _baf ;};func (_acga *LTV )buildCertChain (_eagg ,_fdgf []*_dd .Certificate )([]*_dd .Certificate ,map[string ]*_dd .Certificate ,error ){_egcad :=map[string ]*_dd .Certificate {};for _ ,_cgbgd :=range _eagg {_egcad [_cgbgd .Subject .CommonName ]=_cgbgd ;
};_dgaeg :=_eagg ;for _ ,_fgaf :=range _fdgf {_cfdg :=_fgaf .Subject .CommonName ;if _ ,_ffdee :=_egcad [_cfdg ];_ffdee {continue ;};_egcad [_cfdg ]=_fgaf ;_dgaeg =append (_dgaeg ,_fgaf );};if len (_dgaeg )==0{return nil ,nil ,ErrSignNoCertificates ;};
var _fgbga error ;for _dfcf :=_dgaeg [0];_dfcf !=nil &&!_acga .CertClient .IsCA (_dfcf );{_bcdg ,_dgee :=_egcad [_dfcf .Issuer .CommonName ];if !_dgee {if _bcdg ,_fgbga =_acga .CertClient .GetIssuer (_dfcf );_fgbga !=nil {_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_fgbga );
break ;};_egcad [_dfcf .Issuer .CommonName ]=_bcdg ;_dgaeg =append (_dgaeg ,_bcdg );};_dfcf =_bcdg ;};return _dgaeg ,_egcad ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acdaf *PdfShadingType2 )ToPdfObject ()_fbg .PdfObject {_acdaf .PdfShading .ToPdfObject ();_agfbf ,_aebca :=_acdaf .getShadingDict ();if _aebca !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _agfbf ==nil {_adc .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _acdaf .Coords !=nil {_agfbf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_acdaf .Coords );
};if _acdaf .Domain !=nil {_agfbf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acdaf .Domain );};if _acdaf .Function !=nil {if len (_acdaf .Function )==1{_agfbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdaf .Function [0].ToPdfObject ());
}else {_agege :=_fbg .MakeArray ();for _ ,_feaga :=range _acdaf .Function {_agege .Append (_feaga .ToPdfObject ());};_agfbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agege );};};if _acdaf .Extend !=nil {_agfbf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_acdaf .Extend );
};return _acdaf ._gedcg ;};func (_gfba *PdfReader )newPdfAnnotationStrikeOut (_eefg *_fbg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_degd :=PdfAnnotationStrikeOut {};_gaed ,_cfaf :=_gfba .newPdfAnnotationMarkupFromDict (_eefg );if _cfaf !=nil {return nil ,_cfaf ;
};_degd .PdfAnnotationMarkup =_gaed ;_degd .QuadPoints =_eefg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_degd ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gbde *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcce :=vals [0];if _fcce < 0.0||_fcce > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcce );
return nil ,ErrColorOutOfRange ;};_afac :=vals [1];if _afac < 0.0||_afac > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afac );return nil ,ErrColorOutOfRange ;
};_bfaad :=vals [2];if _bfaad < 0.0||_bfaad > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfaad );return nil ,ErrColorOutOfRange ;};_edgd :=vals [3];
if _edgd < 0.0||_edgd > 1.0{_adc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edgd );return nil ,ErrColorOutOfRange ;};_deaab :=NewPdfColorDeviceCMYK (_fcce ,_afac ,_bfaad ,_edgd );
return _deaab ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bgddf *PdfAppender )UpdatePage (page *PdfPage ){_bgddf .updateObjectsDeep (page .ToPdfObject (),nil );};func (_egbc *PdfReader )newPdfActionJavaScriptFromDict (_ada *_fbg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_ada .Get ("\u004a\u0053")},nil ;
};func (_cfa *PdfReader )newPdfActionURIFromDict (_fdg *_fbg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fdg .Get ("\u0055\u0052\u0049"),IsMap :_fdg .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ebdf *PdfAnnotation )GetContainingPdfObject ()_fbg .PdfObject {return _ebdf ._ecfe };

// ToPdfObject returns a PDF object representation of the outline.
func (_dfffc *Outline )ToPdfObject ()_fbg .PdfObject {return _dfffc .ToPdfOutline ().ToPdfObject ()};func (_dfbbg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _dfbbg ._eedad .GetCrypter ()!=nil &&!_dfbbg ._eedad .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ffgad :=_dfbbg ._ffcac ;_dggeda :=_ffgad .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dggeda ==nil {return nil ,nil ;};_adc .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bdfbf :=_fbg .ResolveReference (_dggeda );
_adc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bdfbf );if _bgda :=_fbg .IsNullObject (_bdfbf );_bgda {_adc .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_edddc ,_aaec :=_bdfbf .(*_fbg .PdfIndirectObject );if !_aaec {if _ ,_adfbd :=_fbg .GetDict (_bdfbf );!_adfbd {_adc .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_adc .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_edddc =_fbg .MakeIndirectObject (_bdfbf );};_bgfec ,_aaec :=_edddc .PdfObject .(*_fbg .PdfObjectDictionary );if !_aaec {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_adc .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bgfec );_ggdea ,_ ,_fecb :=_dfbbg .buildOutlineTree (_edddc ,nil ,nil ,nil );if _fecb !=nil {return nil ,_fecb ;};_adc .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ggdea );
return _ggdea ,nil ;};

// SetFillImage attach a model.Image to push button.
func (_caeb *PdfFieldButton )SetFillImage (image *Image ){if _caeb .IsPush (){_caeb ._egae =image ;};};func _cdbb (_adca _fbg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dfdd :=NewPdfColorspaceSpecialIndexed ();if _adbf ,_egcb :=_adca .(*_fbg .PdfIndirectObject );
_egcb {_dfdd ._eceadg =_adbf ;};_adca =_fbg .TraceToDirectObject (_adca );_gdaa ,_geea :=_adca .(*_fbg .PdfObjectArray );if !_geea {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdaa .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_adca =_gdaa .Get (0);_fdcb ,_geea :=_adca .(*_fbg .PdfObjectName );if !_geea {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fdcb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_adca =_gdaa .Get (1);_bfae ,_effbb :=DetermineColorspaceNameFromPdfObject (_adca );if _effbb !=nil {return nil ,_effbb ;};if _bfae =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bfae =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adc .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bfae );
return nil ,_dedd ;};_agab ,_effbb :=NewPdfColorspaceFromPdfObject (_adca );if _effbb !=nil {return nil ,_effbb ;};_dfdd .Base =_agab ;_adca =_gdaa .Get (2);_bggca ,_effbb :=_fbg .GetNumberAsInt64 (_adca );if _effbb !=nil {return nil ,_effbb ;};if _bggca > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_dfdd .HiVal =int (_bggca );_adca =_gdaa .Get (3);_dfdd .Lookup =_adca ;_adca =_fbg .TraceToDirectObject (_adca );var _fefe []byte ;if _fdb ,_bfegb :=_adca .(*_fbg .PdfObjectString );_bfegb {_fefe =_fdb .Bytes ();_adc .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fefe );
}else if _acc ,_ggaa :=_adca .(*_fbg .PdfObjectStream );_ggaa {_adc .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_adca .String ());_adc .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_acc .Stream ),_acc .Stream );
_gefdb ,_gdaag :=_fbg .DecodeStream (_acc );if _gdaag !=nil {return nil ,_gdaag ;};_adc .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gefdb ),_gefdb );_fefe =_gefdb ;}else {_adc .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_adca );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fefe )< _dfdd .Base .GetNumComponents ()*(_dfdd .HiVal +1){_adc .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_adc .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fefe ),_dfdd .Base .GetNumComponents (),_dfdd .HiVal );
}else {_fefe =_fefe [:_dfdd .Base .GetNumComponents ()*(_dfdd .HiVal +1)];};_dfdd ._dfab =_fefe ;return _dfdd ,nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fbg .PdfObject ;NewWindow _fbg .PdfObject ;};func _fedcg (_gcfa *_fbg .PdfObjectDictionary ,_ggef *fontCommon )(*pdfCIDFontType0 ,error ){if _ggef ._decd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ggef );
return nil ,_fbg .ErrRangeError ;};_edeab :=_dbced (_ggef );_bfabg ,_gdcfa :=_fbg .GetDict (_gcfa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gdcfa {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ggef );
return nil ,ErrRequiredAttributeMissing ;};_edeab .CIDSystemInfo =_bfabg ;_edeab .DW =_gcfa .Get ("\u0044\u0057");_edeab .W =_gcfa .Get ("\u0057");_edeab .DW2 =_gcfa .Get ("\u0044\u0057\u0032");_edeab .W2 =_gcfa .Get ("\u0057\u0032");_edeab ._egaee =1000.0;
if _faee ,_fdfgbb :=_fbg .GetNumberAsFloat (_edeab .DW );_fdfgbb ==nil {_edeab ._egaee =_faee ;};_eeggd ,_ddgf :=_ddcf (_edeab .W );if _ddgf !=nil {return nil ,_ddgf ;};if _eeggd ==nil {_eeggd =map[_cf .CharCode ]float64 {};};_edeab ._aaab =_eeggd ;return _edeab ,nil ;
};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fbg .PdfObject ;IC _fbg .PdfObject ;RO _fbg .PdfObject ;OverlayText _fbg .PdfObject ;Repeat _fbg .PdfObject ;DA _fbg .PdfObject ;Q _fbg .PdfObject ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fbg .PdfObject ;PreserveRB _fbg .PdfObject ;};func (_adff *PdfReader )newPdfActionImportDataFromDict (_bebec *_fbg .PdfObjectDictionary )(*PdfActionImportData ,error ){_ffdc ,_ffc :=_dae (_bebec .Get ("\u0046"));
if _ffc !=nil {return nil ,_ffc ;};return &PdfActionImportData {F :_ffdc },nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fbg .PdfObject ;IsMap _fbg .PdfObject ;};func _dbed (_baedb *_fbg .PdfObjectArray )(float64 ,error ){_ggac ,_befff :=_baedb .ToFloat64Array ();if _befff !=nil {_adc .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baedb ,_befff );
};switch len (_ggac ){case 1:return _ggac [0],nil ;case 3:_ggcedc :=PdfColorspaceDeviceRGB {};_gabge ,_gfadc :=_ggcedc .ColorFromFloats (_ggac );if _gfadc !=nil {return 0.0,_gfadc ;};return _gabge .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bfcgg :=PdfColorspaceDeviceCMYK {};
_gdecd ,_aadgd :=_bfcgg .ColorFromFloats (_ggac );if _aadgd !=nil {return 0.0,_aadgd ;};_eegde ,_aadgd :=_bfcgg .ColorToRGB (_gdecd .(*PdfColorDeviceCMYK ));if _aadgd !=nil {return 0.0,_aadgd ;};return _eegde .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_befff =_fd .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_adc .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baedb ,_befff );
return 0.0,_befff ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fbg .PdfObject ;Volume _fbg .PdfObject ;Synchronous _fbg .PdfObject ;Repeat _fbg .PdfObject ;Mix _fbg .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dgbe *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efdd ,_befab :=_fbg .GetNumbersAsFloat (objects );
if _befab !=nil {return nil ,_befab ;};return _dgbe .ColorFromFloats (_efdd );};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_fbee *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fbg .PdfObjectStream )(*XObjectImage ,error ){_daafg :=&XObjectImage {};_daafg ._cacd =stream ;_cgecgg :=*(stream .PdfObjectDictionary );_cecbe ,_degac :=_fbg .NewEncoderFromStream (stream );if _degac !=nil {return nil ,_degac ;
};_daafg .Filter =_cecbe ;if _dfbage :=_fbg .TraceToDirectObject (_cgecgg .Get ("\u0057\u0069\u0064t\u0068"));_dfbage !=nil {_bcfaf ,_cabg :=_dfbage .(*_fbg .PdfObjectInteger );if !_cabg {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cbddf :=int64 (*_bcfaf );_daafg .Width =&_cbddf ;}else {return nil ,_fd .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cfcaa :=_fbg .TraceToDirectObject (_cgecgg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cfcaa !=nil {_egeaed ,_gbdae :=_cfcaa .(*_fbg .PdfObjectInteger );if !_gbdae {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fdcgee :=int64 (*_egeaed );
_daafg .Height =&_fdcgee ;}else {return nil ,_fd .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bcbeg :=_fbg .TraceToDirectObject (_cgecgg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bcbeg !=nil {_ecca ,_fcbaf :=NewPdfColorspaceFromPdfObject (_bcbeg );if _fcbaf !=nil {return nil ,_fcbaf ;};_daafg .ColorSpace =_ecca ;}else {_adc .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_daafg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cabad :=_fbg .TraceToDirectObject (_cgecgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cabad !=nil {_gddfa ,_caaea :=_cabad .(*_fbg .PdfObjectInteger );
if !_caaea {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bfag :=int64 (*_gddfa );_daafg .BitsPerComponent =&_bfag ;};_daafg .Intent =_cgecgg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_daafg .ImageMask =_cgecgg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_daafg .Mask =_cgecgg .Get ("\u004d\u0061\u0073\u006b");_daafg .Decode =_cgecgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_daafg .Interpolate =_cgecgg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_daafg .Alternatives =_cgecgg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_daafg .SMask =_cgecgg .Get ("\u0053\u004d\u0061s\u006b");_daafg .SMaskInData =_cgecgg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_daafg .Matte =_cgecgg .Get ("\u004d\u0061\u0074t\u0065");_daafg .Name =_cgecgg .Get ("\u004e\u0061\u006d\u0065");_daafg .StructParent =_cgecgg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_daafg .ID =_cgecgg .Get ("\u0049\u0044");
_daafg .OPI =_cgecgg .Get ("\u004f\u0050\u0049");_daafg .Metadata =_cgecgg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_daafg .OC =_cgecgg .Get ("\u004f\u0043");_daafg .Stream =stream .Stream ;return _daafg ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fbg .PdfObject ,error );};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bbcc *PdfPage )error ;};func (_gfeb *PdfReader )newPdfActionTransFromDict (_dda *_fbg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dda .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cfff DefaultImageHandler )NewGrayImageFromGoImage (goimg _aa .Image )(*Image ,error ){_ecgea :=goimg .Bounds ();_fdefd :=&Image {Width :int64 (_ecgea .Dx ()),Height :int64 (_ecgea .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _cfcbe :=goimg .(type ){case *_aa .Gray :if len (_cfcbe .Pix )!=_ecgea .Dx ()*_ecgea .Dy (){_gfegg ,_dbgcd :=_ced .GrayConverter .Convert (goimg );
if _dbgcd !=nil {return nil ,_dbgcd ;};_fdefd .Data =_gfegg .Pix ();}else {_fdefd .Data =_cfcbe .Pix ;};case *_aa .Gray16 :_fdefd .BitsPerComponent =16;if len (_cfcbe .Pix )!=_ecgea .Dx ()*_ecgea .Dy ()*2{_facc ,_dggad :=_ced .Gray16Converter .Convert (goimg );
if _dggad !=nil {return nil ,_dggad ;};_fdefd .Data =_facc .Pix ();}else {_fdefd .Data =_cfcbe .Pix ;};case _ced .Image :_fgaef :=_cfcbe .Base ();if _fgaef .ColorComponents ==1{_fdefd .BitsPerComponent =int64 (_fgaef .BitsPerComponent );_fdefd .Data =_fgaef .Data ;
return _fdefd ,nil ;};_fdgdg ,_afccd :=_ced .GrayConverter .Convert (goimg );if _afccd !=nil {return nil ,_afccd ;};_fdefd .Data =_fdgdg .Pix ();default:_efdcf ,_cbbfg :=_ced .GrayConverter .Convert (goimg );if _cbbfg !=nil {return nil ,_cbbfg ;};_fdefd .Data =_efdcf .Pix ();
};return _fdefd ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fbdeg *Image )ColorAt (x ,y int )(_ec .Color ,error ){_dcga :=_ced .BytesPerLine (int (_fbdeg .Width ),int (_fbdeg .BitsPerComponent ),_fbdeg .ColorComponents );switch _fbdeg .ColorComponents {case 1:return _ced .ColorAtGrayscale (x ,y ,int (_fbdeg .BitsPerComponent ),_dcga ,_fbdeg .Data ,_fbdeg ._beggbb );
case 3:return _ced .ColorAtNRGBA (x ,y ,int (_fbdeg .Width ),_dcga ,int (_fbdeg .BitsPerComponent ),_fbdeg .Data ,_fbdeg ._acag ,_fbdeg ._beggbb );case 4:return _ced .ColorAtCMYK (x ,y ,int (_fbdeg .Width ),_fbdeg .Data ,_fbdeg ._beggbb );};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbdeg .ColorComponents ,_fbdeg .BitsPerComponent );
return nil ,_fd .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_ecac PdfFont )actualFont ()pdfFont {if _ecac ._fbff ==nil {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecac );
};return _ecac ._fbff ;};

// SetCatalogLanguage sets the catalog language.
func (_dbccd *PdfWriter )SetCatalogLanguage (lang _fbg .PdfObject )error {if lang ==nil {_dbccd ._gdgbee .Remove ("\u004c\u0061\u006e\u0067");return nil ;};if _ ,_gdgd :=lang .(*_fbg .PdfIndirectObject );_gdgd {_dbccd .addObject (lang );};_dbccd ._gdgbee .Set ("\u004c\u0061\u006e\u0067",lang );
return nil ;};func _baef (_aecde _fbg .PdfObject )(*PdfPattern ,error ){_bdag :=&PdfPattern {};var _cgbga *_fbg .PdfObjectDictionary ;if _bbbeb ,_ggcaf :=_fbg .GetIndirect (_aecde );_ggcaf {_bdag ._eadbd =_bbbeb ;_cafgd ,_agbcc :=_bbbeb .PdfObject .(*_fbg .PdfObjectDictionary );
if !_agbcc {_adc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_bbbeb .PdfObject );
return nil ,_fbg .ErrTypeError ;};_cgbga =_cafgd ;}else if _bacgd ,_fdcdg :=_fbg .GetStream (_aecde );_fdcdg {_bdag ._eadbd =_bacgd ;_cgbga =_bacgd .PdfObjectDictionary ;}else {_adc .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_aecde );
return nil ,_fbg .ErrTypeError ;};_dgdfc :=_cgbga .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _dgdfc ==nil {_adc .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgfcf ,_gdccf :=_dgdfc .(*_fbg .PdfObjectInteger );if !_gdccf {_adc .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dgdfc );
return nil ,_fbg .ErrTypeError ;};if *_dgfcf !=1&&*_dgfcf !=2{_adc .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_dgfcf );return nil ,_fbg .ErrRangeError ;
};_bdag .PatternType =int64 (*_dgfcf );switch *_dgfcf {case 1:_bgef ,_bggf :=_aaaad (_cgbga );if _bggf !=nil {return nil ,_bggf ;};_bgef .PdfPattern =_bdag ;_bdag ._acfag =_bgef ;return _bdag ,nil ;case 2:_eafed ,_bbbdf :=_abfac (_cgbga );if _bbbdf !=nil {return nil ,_bbbdf ;
};_eafed .PdfPattern =_bdag ;_bdag ._acfag =_eafed ;return _bdag ,nil ;};return nil ,_fd .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_dad *PdfReader )newPdfAnnotationProjectionFromDict (_gefb *_fbg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_aeb :=&PdfAnnotationProjection {};
_egaa ,_ccbf :=_dad .newPdfAnnotationMarkupFromDict (_gefb );if _ccbf !=nil {return nil ,_ccbf ;};_aeb .PdfAnnotationMarkup =_egaa ;return _aeb ,nil ;};

// ToInteger convert to an integer format.
func (_dfde *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_cedd :=_ab .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_cedd *_dfde .C ()),uint32 (_cedd *_dfde .M ()),uint32 (_cedd *_dfde .Y ()),uint32 (_cedd *_dfde .K ())};};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_fbg .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _fbg .PdfObject ;ClassMap *_fbg .PdfObjectDictionary ;_aeabc *_fbg .PdfIndirectObject ;_acbc []_ffa .UUID ;};

// SetVersion sets the PDF version of the output file.
func (_gefba *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gefba ._bagfb .Major =majorVersion ;_gefba ._bagfb .Minor =minorVersion ;};func (_acaeb *PdfWriter )optimizeDocument ()error {if _acaeb ._fffcf ==nil {return nil ;};_ccdef ,_facg :=_fbg .GetDict (_acaeb ._abfag );
if !_facg {return _fd .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_aeafbc :=_ff .Document {ID :[2]string {_acaeb ._gebgg ,_acaeb ._aecaf },Version :_acaeb ._bagfb ,Objects :_acaeb ._ddeeb ,Info :_ccdef ,Crypt :_acaeb ._dbbgb ,UseHashBasedID :_acaeb ._bcgag };
if _fdcgd :=_acaeb ._fffcf .ApplyStandard (&_aeafbc );_fdcgd !=nil {return _fdcgd ;};_acaeb ._gebgg ,_acaeb ._aecaf =_aeafbc .ID [0],_aeafbc .ID [1];_acaeb ._bagfb =_aeafbc .Version ;_acaeb ._ddeeb =_aeafbc .Objects ;_acaeb ._abfag .PdfObject =_aeafbc .Info ;
_acaeb ._bcgag =_aeafbc .UseHashBasedID ;_acaeb ._dbbgb =_aeafbc .Crypt ;_agedb :=make (map[_fbg .PdfObject ]struct{},len (_acaeb ._ddeeb ));for _ ,_badee :=range _acaeb ._ddeeb {_agedb [_badee ]=struct{}{};};_acaeb ._gcadf =_agedb ;return nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_daccg *PdfWriter )SetFileName (name string ){_daccg ._dbefd =name };

// A returns the value of the A component of the color.
func (_ggbc *PdfColorCalRGB )A ()float64 {return _ggbc [0]};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cdedg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fbg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cfdf :=&PdfColorPattern {};_daga ,_adfea :=objects [len (objects )-1].(*_fbg .PdfObjectName );if !_adfea {_adc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cfdf .PatternName =*_daga ;if len (objects )> 1{_facf :=objects [0:len (objects )-1];if _cdedg .UnderlyingCS ==nil {_adc .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_dbee ,_abeb :=_cdedg .UnderlyingCS .ColorFromPdfObjects (_facf );if _abeb !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_abeb );
return nil ,_abeb ;};_cfdf .Color =_dbee ;};return _cfdf ,nil ;};func _gbgcf (_ecbbf _fbg .PdfObject )*Names {_ebefg :=_egffa ();_bgcba :=_fbg .TraceToDirectObject (_ecbbf ).(*_fbg .PdfObjectDictionary );if _edafe :=_bgcba .Get ("\u0044\u0065\u0073t\u0073");
_edafe !=nil {_ebefg .Dests =_fbg .TraceToDirectObject (_edafe ).(*_fbg .PdfObjectDictionary );};if _edbafg :=_bgcba .Get ("\u0041\u0050");_edbafg !=nil {_ebefg .AP =_fbg .TraceToDirectObject (_edbafg ).(*_fbg .PdfObjectDictionary );};if _cfdfe :=_bgcba .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");
_cfdfe !=nil {_ebefg .JavaScript =_fbg .TraceToDirectObject (_cfdfe ).(*_fbg .PdfObjectDictionary );};if _dcece :=_bgcba .Get ("\u0050\u0061\u0067e\u0073");_dcece !=nil {_ebefg .Pages =_fbg .TraceToDirectObject (_dcece ).(*_fbg .PdfObjectDictionary );};
if _eggdc :=_bgcba .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_eggdc !=nil {_ebefg .Templates =_fbg .TraceToDirectObject (_eggdc ).(*_fbg .PdfObjectDictionary );};if _dgcg :=_bgcba .Get ("\u0049\u0044\u0053");_dgcg !=nil {_ebefg .IDS =_fbg .TraceToDirectObject (_dgcg ).(*_fbg .PdfObjectDictionary );
};if _bcgg :=_bgcba .Get ("\u0055\u0052\u004c\u0053");_bcgg !=nil {_ebefg .URLS =_fbg .TraceToDirectObject (_bcgg ).(*_fbg .PdfObjectDictionary );};if _gfggb :=_bgcba .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_gfggb !=nil {_ebefg .EmbeddedFiles =_fbg .TraceToDirectObject (_gfggb ).(*_fbg .PdfObjectDictionary );};if _gegaa :=_bgcba .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_gegaa !=nil {_ebefg .AlternatePresentations =_fbg .TraceToDirectObject (_gegaa ).(*_fbg .PdfObjectDictionary );
};if _gfcgf :=_bgcba .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_gfcgf !=nil {_ebefg .Renditions =_fbg .TraceToDirectObject (_gfcgf ).(*_fbg .PdfObjectDictionary );};return _ebefg ;};

// ToGoTime returns the date in time.Time format.
func (_cgcfd PdfDate )ToGoTime ()_dcc .Time {_faeec :=int (_cgcfd ._fcadaa *60*60+_cgcfd ._dcagd *60);switch _cgcfd ._fbgece {case '-':_faeec =-_faeec ;case 'Z':_faeec =0;};_cdgga :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cgcfd ._fbgece ,_cgcfd ._fcadaa ,_cgcfd ._dcagd );
_bgfece :=_dcc .FixedZone (_cdgga ,_faeec );return _dcc .Date (int (_cgcfd ._begdcd ),_dcc .Month (_cgcfd ._eeaag ),int (_cgcfd ._ffgfgg ),int (_cgcfd ._bdbgce ),int (_cgcfd ._bfaaa ),int (_cgcfd ._fdace ),0,_bgfece );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fbg .PdfObject )(_fbg .PdfObjectName ,error ){var _acdeg *_fbg .PdfObjectName ;var _ccaga *_fbg .PdfObjectArray ;if _ggdd ,_facb :=obj .(*_fbg .PdfIndirectObject );_facb {if _fgfba ,_gdb :=_ggdd .PdfObject .(*_fbg .PdfObjectArray );
_gdb {_ccaga =_fgfba ;}else if _cedca ,_afccc :=_ggdd .PdfObject .(*_fbg .PdfObjectName );_afccc {_acdeg =_cedca ;};}else if _ffad ,_dfff :=obj .(*_fbg .PdfObjectArray );_dfff {_ccaga =_ffad ;}else if _dgda ,_gcgb :=obj .(*_fbg .PdfObjectName );_gcgb {_acdeg =_dgda ;
};if _acdeg !=nil {switch *_acdeg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_acdeg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_acdeg ,nil ;
};};if _ccaga !=nil &&_ccaga .Len ()> 0{if _cac ,_bebc :=_ccaga .Get (0).(*_fbg .PdfObjectName );_bebc {switch *_cac {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ccaga .Len ()==1{return *_cac ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cac ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cac ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cac ,nil ;};};};return "",nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_fbbdg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _fbbdg ._eedad .GetRevisionNumber ()==0{return nil ,_fd .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fdeda ,_afegg :=_fbbdg ._gegfdd [_fbbdg ];_afegg {return _fdeda ,nil ;};_feadb ,_dbadc :=_fbbdg ._eedad .GetPreviousRevisionReadSeeker ();if _dbadc !=nil {return nil ,_dbadc ;};_cfddg ,_dbadc :=_dggcc (_feadb ,_fbbdg ._gcdfe ,_fbbdg ._gbfgc ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _dbadc !=nil {return nil ,_dbadc ;};_fbbdg ._eegc [_fbbdg ._eedad .GetRevisionNumber ()-1]=_cfddg ;_fbbdg ._gegfdd [_fbbdg ]=_cfddg ;_cfddg ._gegfdd =_fbbdg ._gegfdd ;return _cfddg ,nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fbg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fbg .PdfObject ;A _fbg .PdfObject ;SE _fbg .PdfObject ;C _fbg .PdfObject ;F _fbg .PdfObject ;
_bebdb *_fbg .PdfIndirectObject ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fbg .PdfObjectName ;Colorants _fbg .PdfObject ;Process _fbg .PdfObject ;MixingHints _fbg .PdfObject ;_fdce *_fbg .PdfIndirectObject ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_bdf :=NewPdfAnnotation ();_fedb :=&PdfAnnotationStamp {};_fedb .PdfAnnotation =_bdf ;_fedb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdf .SetContext (_fedb );return _fedb ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ddbe :=PdfColorCalRGB {a ,b ,c };return &_ddbe ;};

// GetContentStream returns the pattern cell's content stream
func (_baga *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ddaga ,_ ,_gadcg :=_baga .GetContentStreamWithEncoder ();return _ddaga ,_gadcg ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fbg .PdfObject )(*PdfFilespec ,error ){_bgdef :=&PdfFilespec {};var _caea *_fbg .PdfObjectDictionary ;if _afag ,_dafb :=_fbg .GetIndirect (obj );_dafb {_bgdef ._efba =_afag ;_gbaf ,_gdcg :=_fbg .GetDict (_afag .PdfObject );
if !_gdcg {_adc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fbg .ErrTypeError ;};_caea =_gbaf ;}else if _dcfca ,_addfd :=_fbg .GetDict (obj );
_addfd {_bgdef ._efba =_dcfca ;_caea =_dcfca ;}else {_adc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fbg .ErrTypeError ;};if _caea ==nil {_adc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gcde :=_caea .Get ("\u0054\u0079\u0070\u0065");_gcde !=nil {_ccfc ,_abeg :=_gcde .(*_fbg .PdfObjectName );if !_abeg {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gcde );
}else {if *_ccfc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_adc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ccfc );
};};};if _abde :=_caea .Get ("\u0046\u0053");_abde !=nil {_bgdef .FS =_abde ;};if _abbgg :=_caea .Get ("\u0046");_abbgg !=nil {_bgdef .F =_abbgg ;};if _ggbgc :=_caea .Get ("\u0055\u0046");_ggbgc !=nil {_bgdef .UF =_ggbgc ;};if _ccfcf :=_caea .Get ("\u0044\u004f\u0053");
_ccfcf !=nil {_bgdef .DOS =_ccfcf ;};if _fdda :=_caea .Get ("\u004d\u0061\u0063");_fdda !=nil {_bgdef .Mac =_fdda ;};if _adeef :=_caea .Get ("\u0055\u006e\u0069\u0078");_adeef !=nil {_bgdef .Unix =_adeef ;};if _dcddc :=_caea .Get ("\u0049\u0044");_dcddc !=nil {_bgdef .ID =_dcddc ;
};if _bfb :=_caea .Get ("\u0056");_bfb !=nil {_bgdef .V =_bfb ;};if _eecb :=_caea .Get ("\u0045\u0046");_eecb !=nil {_bgdef .EF =_eecb ;};if _ffba :=_caea .Get ("\u0052\u0046");_ffba !=nil {_bgdef .RF =_ffba ;};if _fcbd :=_caea .Get ("\u0044\u0065\u0073\u0063");
_fcbd !=nil {_bgdef .Desc =_fcbd ;};if _cbdce :=_caea .Get ("\u0043\u0049");_cbdce !=nil {_bgdef .CI =_cbdce ;};if _fddg :=_caea .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_fddg !=nil {_bgdef .AFRelationship =_fddg ;
};return _bgdef ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fggb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fggb .UnderlyingCS ==nil {return nil ,_fd .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fggb .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aegcfe *PdfShading )ToPdfObject ()_fbg .PdfObject {_eecac :=_aegcfe ._gedcg ;_adfeb ,_gdaae :=_aegcfe .getShadingDict ();if _gdaae !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aegcfe .ShadingType !=nil {_adfeb .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_aegcfe .ShadingType );};if _aegcfe .ColorSpace !=nil {_adfeb .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aegcfe .ColorSpace .ToPdfObject ());
};if _aegcfe .Background !=nil {_adfeb .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_aegcfe .Background );};if _aegcfe .BBox !=nil {_adfeb .Set ("\u0042\u0042\u006f\u0078",_aegcfe .BBox .ToPdfObject ());};if _aegcfe .AntiAlias !=nil {_adfeb .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_aegcfe .AntiAlias );
};return _eecac ;};func (_aafccf *PdfWriter )addObjects (_efeed _fbg .PdfObject )error {_adc .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _edgge ,_fadgda :=_efeed .(*_fbg .PdfIndirectObject );_fadgda {_adc .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_adc .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_efeed ,_edgge );_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_edgge .PdfObject );if _aafccf .addObject (_edgge ){_agbce :=_aafccf .addObjects (_edgge .PdfObject );if _agbce !=nil {return _agbce ;
};};return nil ;};if _feeegd ,_baeef :=_efeed .(*_fbg .PdfObjectStream );_baeef {_adc .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_adc .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_efeed ,_efeed );if _aafccf .addObject (_feeegd ){_cgacb :=_aafccf .addObjects (_feeegd .PdfObjectDictionary );
if _cgacb !=nil {return _cgacb ;};};return nil ;};if _ccfca ,_agee :=_efeed .(*_fbg .PdfObjectDictionary );_agee {_adc .Log .Trace ("\u0044\u0069\u0063\u0074");_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_efeed );for _ ,_adabc :=range _ccfca .Keys (){_gagb :=_ccfca .Get (_adabc );
if _bbcgc ,_ebcba :=_gagb .(*_fbg .PdfObjectReference );_ebcba {_gagb =_bbcgc .Resolve ();_ccfca .Set (_adabc ,_gagb );};if _adabc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gafgg :=_aafccf .addObjects (_gagb );_gafgg !=nil {return _gafgg ;};}else {if _ ,_defae :=_gagb .(*_fbg .PdfObjectNull );
_defae {continue ;};if _dgea :=_aafccf .hasObject (_gagb );!_dgea {_adc .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_gagb ,_gagb ,_gagb );
_aafccf ._gfedad [_gagb ]=append (_aafccf ._gfedad [_gagb ],_ccfca );};};};return nil ;};if _fcgdd ,_fceb :=_efeed .(*_fbg .PdfObjectArray );_fceb {_adc .Log .Trace ("\u0041\u0072\u0072a\u0079");_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_efeed );if _fcgdd ==nil {return _fd .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fafe ,_eaccb :=range _fcgdd .Elements (){if _gcegf ,_fbega :=_eaccb .(*_fbg .PdfObjectReference );_fbega {_eaccb =_gcegf .Resolve ();_fcgdd .Set (_fafe ,_eaccb );};if _debda :=_aafccf .addObjects (_eaccb );_debda !=nil {return _debda ;};};return nil ;
};if _ ,_dfbbc :=_efeed .(*_fbg .PdfObjectReference );_dfbbc {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_efeed );
return _fd .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_edbfed *PdfReader )lookupPageByObject (_aefa _fbg .PdfObject )(*PdfPage ,error ){return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns the PDF representation of the function.
func (_efcbb *PdfFunctionType3 )ToPdfObject ()_fbg .PdfObject {_fbdc :=_fbg .MakeDict ();_fbdc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fbg .MakeInteger (3));_fcdc :=&_fbg .PdfObjectArray {};for _ ,_bggce :=range _efcbb .Domain {_fcdc .Append (_fbg .MakeFloat (_bggce ));
};_fbdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcdc );if _efcbb .Range !=nil {_eddcb :=&_fbg .PdfObjectArray {};for _ ,_eabea :=range _efcbb .Range {_eddcb .Append (_fbg .MakeFloat (_eabea ));};_fbdc .Set ("\u0052\u0061\u006eg\u0065",_eddcb );};
if _efcbb .Functions !=nil {_bbcad :=&_fbg .PdfObjectArray {};for _ ,_gbbe :=range _efcbb .Functions {_bbcad .Append (_gbbe .ToPdfObject ());};_fbdc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bbcad );};if _efcbb .Bounds !=nil {_bfdgc :=&_fbg .PdfObjectArray {};
for _ ,_cbgbd :=range _efcbb .Bounds {_bfdgc .Append (_fbg .MakeFloat (_cbgbd ));};_fbdc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_bfdgc );};if _efcbb .Encode !=nil {_ebcaa :=&_fbg .PdfObjectArray {};for _ ,_gdeae :=range _efcbb .Encode {_ebcaa .Append (_fbg .MakeFloat (_gdeae ));
};_fbdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ebcaa );};if _efcbb ._dbaa !=nil {_efcbb ._dbaa .PdfObject =_fbdc ;return _efcbb ._dbaa ;};return _fbdc ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cage *PdfColorspaceCalRGB )ToPdfObject ()_fbg .PdfObject {_bgcb :=&_fbg .PdfObjectArray {};_bgcb .Append (_fbg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ggffa :=_fbg .MakeDict ();if _cage .WhitePoint !=nil {_eade :=_fbg .MakeArray (_fbg .MakeFloat (_cage .WhitePoint [0]),_fbg .MakeFloat (_cage .WhitePoint [1]),_fbg .MakeFloat (_cage .WhitePoint [2]));
_ggffa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_eade );}else {_adc .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cage .BlackPoint !=nil {_abgag :=_fbg .MakeArray (_fbg .MakeFloat (_cage .BlackPoint [0]),_fbg .MakeFloat (_cage .BlackPoint [1]),_fbg .MakeFloat (_cage .BlackPoint [2]));_ggffa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abgag );
};if _cage .Gamma !=nil {_cgef :=_fbg .MakeArray (_fbg .MakeFloat (_cage .Gamma [0]),_fbg .MakeFloat (_cage .Gamma [1]),_fbg .MakeFloat (_cage .Gamma [2]));_ggffa .Set ("\u0047\u0061\u006dm\u0061",_cgef );};if _cage .Matrix !=nil {_cadee :=_fbg .MakeArray (_fbg .MakeFloat (_cage .Matrix [0]),_fbg .MakeFloat (_cage .Matrix [1]),_fbg .MakeFloat (_cage .Matrix [2]),_fbg .MakeFloat (_cage .Matrix [3]),_fbg .MakeFloat (_cage .Matrix [4]),_fbg .MakeFloat (_cage .Matrix [5]),_fbg .MakeFloat (_cage .Matrix [6]),_fbg .MakeFloat (_cage .Matrix [7]),_fbg .MakeFloat (_cage .Matrix [8]));
_ggffa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cadee );};_bgcb .Append (_ggffa );if _cage ._cfge !=nil {_cage ._cfge .PdfObject =_bgcb ;return _cage ._cfge ;};return _bgcb ;};func _fbbeb (_gabe _dg .StdFont )pdfFontSimple {_gfdag :=_gabe .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_decd :"\u0054\u0079\u0070e\u0031",_daef :_gabe .Name ()},_ggcaa :_gabe .GetMetricsTable (),_dgddad :&PdfFontDescriptor {FontName :_fbg .MakeName (string (_gfdag .Name )),FontFamily :_fbg .MakeName (_gfdag .Family ),FontWeight :_fbg .MakeFloat (float64 (_gfdag .Weight )),Flags :_fbg .MakeInteger (int64 (_gfdag .Flags )),FontBBox :_fbg .MakeArrayFromFloats (_gfdag .BBox [:]),ItalicAngle :_fbg .MakeFloat (_gfdag .ItalicAngle ),Ascent :_fbg .MakeFloat (_gfdag .Ascent ),Descent :_fbg .MakeFloat (_gfdag .Descent ),CapHeight :_fbg .MakeFloat (_gfdag .CapHeight ),XHeight :_fbg .MakeFloat (_gfdag .XHeight ),StemV :_fbg .MakeFloat (_gfdag .StemV ),StemH :_fbg .MakeFloat (_gfdag .StemH )},_adec :_gabe .Encoder ()};
};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_aecbcf *PdfWriter )SetCatalogMarkInfo (info _fbg .PdfObject )error {if info ==nil {_aecbcf ._gdgbee .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _ffadf ,_degfe :=info .(*_fbg .PdfObjectReference );_degfe {info =_ffadf .Resolve ();
if info ==nil {_aecbcf ._gdgbee .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};if _ ,_gfddag :=info .(*_fbg .PdfIndirectObject );_gfddag {_aecbcf .addObject (info );};_aecbcf ._gdgbee .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );
return nil ;};

// Subtype returns the font's "Subtype" field.
func (_fgegg *PdfFont )Subtype ()string {_ddfc :=_fgegg .baseFields ()._decd ;if _eege ,_bgff :=_fgegg ._fbff .(*pdfFontType0 );_bgff {_ddfc =_ddfc +"\u003a"+_eege .DescendantFont .Subtype ();};return _ddfc ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bgdeg ,_eacaeg :=_aef .Open (filePath );if _eacaeg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_eacaeg );
return nil ,_eacaeg ;};defer _bgdeg .Close ();return NewPdfFontFromTTF (_bgdeg );};func _eedae (_fefce _fbg .PdfObject )(*PdfFunctionType3 ,error ){_dged :=&PdfFunctionType3 {};var _fabd *_fbg .PdfObjectDictionary ;if _cced ,_eggcf :=_fefce .(*_fbg .PdfIndirectObject );
_eggcf {_dcdba ,_fdbb :=_cced .PdfObject .(*_fbg .PdfObjectDictionary );if !_fdbb {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dged ._dbaa =_cced ;_fabd =_dcdba ;}else if _aeccf ,_aefd :=_fefce .(*_fbg .PdfObjectDictionary );
_aefd {_fabd =_aeccf ;}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdfbg ,_dbae :=_fbg .TraceToDirectObject (_fabd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fbg .PdfObjectArray );
if !_dbae {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bdfbg .Len ()!=2{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eefb ,_dbcce :=_bdfbg .ToFloat64Array ();
if _dbcce !=nil {return nil ,_dbcce ;};_dged .Domain =_eefb ;_bdfbg ,_dbae =_fbg .TraceToDirectObject (_fabd .Get ("\u0052\u0061\u006eg\u0065")).(*_fbg .PdfObjectArray );if _dbae {if _bdfbg .Len ()< 0||_bdfbg .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ggcefgg ,_ceede :=_bdfbg .ToFloat64Array ();if _ceede !=nil {return nil ,_ceede ;};_dged .Range =_ggcefgg ;};_bdfbg ,_dbae =_fbg .TraceToDirectObject (_fabd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fbg .PdfObjectArray );if !_dbae {_adc .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dged .Functions =[]PdfFunction {};
for _ ,_gegedg :=range _bdfbg .Elements (){_beabg ,_aeegc :=_aabg (_gegedg );if _aeegc !=nil {return nil ,_aeegc ;};_dged .Functions =append (_dged .Functions ,_beabg );};_bdfbg ,_dbae =_fbg .TraceToDirectObject (_fabd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fbg .PdfObjectArray );
if !_dbae {_adc .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_dgff ,_dbcce :=_bdfbg .ToFloat64Array ();if _dbcce !=nil {return nil ,_dbcce ;};_dged .Bounds =_dgff ;if len (_dged .Bounds )!=len (_dged .Functions )-1{_adc .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dged .Bounds ),len (_dged .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdfbg ,_dbae =_fbg .TraceToDirectObject (_fabd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fbg .PdfObjectArray );if !_dbae {_adc .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dcagaf ,_dbcce :=_bdfbg .ToFloat64Array ();
if _dbcce !=nil {return nil ,_dbcce ;};_dged .Encode =_dcagaf ;if len (_dged .Encode )!=2*len (_dged .Functions ){_adc .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dged .Encode ),len (_dged .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dged ,nil ;};func _ddged (_cdad string )(map[_cf .CharCode ]_cf .GlyphName ,error ){_gcedf :=_gdg .Split (_cdad ,"\u000a");_dabg :=make (map[_cf .CharCode ]_cf .GlyphName );
for _ ,_fecfg :=range _gcedf {_bgegc :=_cbdeg .FindStringSubmatch (_fecfg );if _bgegc ==nil {continue ;};_gfddg ,_fggbfb :=_bgegc [1],_bgegc [2];_aacag ,_gaefe :=_eg .Atoi (_gfddg );if _gaefe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fecfg );
return nil ,_fbg .ErrTypeError ;};_dabg [_cf .CharCode (_aacag )]=_cf .GlyphName (_fggbfb );};_adc .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dabg );
return _dabg ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// Width returns the width of `rect`.
func (_fefda *PdfRectangle )Width ()float64 {return _ab .Abs (_fefda .Urx -_fefda .Llx )};

// ToPdfObject implements interface PdfModel.
func (_adcc *PdfActionHide )ToPdfObject ()_fbg .PdfObject {_adcc .PdfAction .ToPdfObject ();_ecc :=_adcc ._gc ;_gfe :=_ecc .PdfObject .(*_fbg .PdfObjectDictionary );_gfe .SetIfNotNil ("\u0053",_fbg .MakeName (string (ActionTypeHide )));_gfe .SetIfNotNil ("\u0054",_adcc .T );
_gfe .SetIfNotNil ("\u0048",_adcc .H );return _ecc ;};func (_ccaa *PdfReader )newPdfActionHideFromDict (_bccf *_fbg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bccf .Get ("\u0054"),H :_bccf .Get ("\u0048")},nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dcff FieldFlag )Mask ()uint32 {return uint32 (_dcff )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_aade *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_edggf *PdfPage )SetContentStreams (cStreams []string ,encoder _fbg .StreamEncoder )error {if len (cStreams )==0{_edggf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fbg .NewRawEncoder ();};var _faggd []*_fbg .PdfObjectStream ;for _ ,_ggcedf :=range cStreams {_ebgd :=&_fbg .PdfObjectStream {};
_gcga :=encoder .MakeStreamDict ();_cbfdde ,_bgfea :=encoder .EncodeBytes ([]byte (_ggcedf ));if _bgfea !=nil {return _bgfea ;};_gcga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fbg .MakeInteger (int64 (len (_cbfdde ))));_ebgd .PdfObjectDictionary =_gcga ;
_ebgd .Stream =_cbfdde ;_faggd =append (_faggd ,_ebgd );};if len (_faggd )==1{_edggf .Contents =_faggd [0];}else {_bdeaa :=_fbg .MakeArray ();for _ ,_faecf :=range _faggd {_bdeaa .Append (_faecf );};_edggf .Contents =_bdeaa ;};return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fbg .PdfObjectArray ;Matrix *_fbg .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fbg .PdfObjectDictionary )(*PdfPageResources ,error ){_adbdgd :=NewPdfPageResources ();if _abgadf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_abgadf !=nil {_adbdgd .ExtGState =_abgadf ;};if _caff :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_caff !=nil &&!_fbg .IsNullObject (_caff ){_adbdgd .ColorSpace =_caff ;};if _becbbg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_becbbg !=nil {_adbdgd .Pattern =_becbbg ;};if _bdcbd :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bdcbd !=nil {_adbdgd .Shading =_bdcbd ;
};if _bfead :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bfead !=nil {_adbdgd .XObject =_bfead ;};if _egeaa :=_fbg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_egeaa !=nil {_adbdgd .Font =_egeaa ;};if _fgbfdf :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fgbfdf !=nil {_adbdgd .ProcSet =_fgbfdf ;};if _caebe :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_caebe !=nil {_adbdgd .Properties =_caebe ;};return _adbdgd ,nil ;};func (_cffba *PdfWriter )writeNamesDictionary ()error {if _cffba ._dafcg ==nil {return nil ;
};_cfbegg :=_cffba ._dafcg .ToPdfObject ();_cffba ._gdgbee .Set ("\u004e\u0061\u006de\u0073",_cfbegg );_afaefa :=_cffba .addObjects (_cfbegg );if _afaefa !=nil {return _afaefa ;};return nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_fac *PdfAppender )UpdateObject (obj _fbg .PdfObject ){_fac .replaceObject (obj ,obj );if _ ,_gefd :=_fac ._gbed [obj ];!_gefd {_fac ._cgddd =append (_fac ._cgddd ,obj );_fac ._gbed [obj ]=struct{}{};};};func (_aeefa *PdfPage )setContainer (_bgad *_fbg .PdfIndirectObject ){_bgad .PdfObject =_aeefa ._afab ;
_aeefa ._ecedg =_bgad ;};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_daabc *KDict ;_cfcg _fbg .PdfObject ;_dcffg *int ;};

// ToPdfObject implements interface PdfModel.
func (_ddfgf *PdfAnnotationSquare )ToPdfObject ()_fbg .PdfObject {_ddfgf .PdfAnnotation .ToPdfObject ();_eefgb :=_ddfgf ._ecfe ;_begd :=_eefgb .PdfObject .(*_fbg .PdfObjectDictionary );if _ddfgf .PdfAnnotationMarkup !=nil {_ddfgf .PdfAnnotationMarkup .appendToPdfDictionary (_begd );
};_begd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_begd .SetIfNotNil ("\u0042\u0053",_ddfgf .BS );_begd .SetIfNotNil ("\u0049\u0043",_ddfgf .IC );_begd .SetIfNotNil ("\u0042\u0045",_ddfgf .BE );
_begd .SetIfNotNil ("\u0052\u0044",_ddfgf .RD );return _eefgb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deffg *PdfShadingType3 )ToPdfObject ()_fbg .PdfObject {_deffg .PdfShading .ToPdfObject ();_egabg ,_bbegf :=_deffg .getShadingDict ();if _bbegf !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _deffg .Coords !=nil {_egabg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_deffg .Coords );};if _deffg .Domain !=nil {_egabg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_deffg .Domain );};if _deffg .Function !=nil {if len (_deffg .Function )==1{_egabg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deffg .Function [0].ToPdfObject ());
}else {_dcabe :=_fbg .MakeArray ();for _ ,_dcbbcc :=range _deffg .Function {_dcabe .Append (_dcbbcc .ToPdfObject ());};_egabg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcabe );};};if _deffg .Extend !=nil {_egabg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_deffg .Extend );
};return _deffg ._gedcg ;};

// SetStructParentsKey sets the StructParents key.
func (_ebbe *PdfPage )SetStructParentsKey (key int ){if key ==-1{_ebbe .StructParents =nil ;}else {_ebbe .StructParents =_fbg .MakeInteger (int64 (key ));};};func (_gacf *pdfFontSimple )addEncoding ()error {var (_gcfac string ;_edec map[_cf .CharCode ]_cf .GlyphName ;
_eedg _cf .SimpleEncoder ;);if _gacf .Encoder ()!=nil {_debg ,_dcbfd :=_gacf .Encoder ().(_cf .SimpleEncoder );if _dcbfd &&_debg !=nil {_gcfac =_debg .BaseName ();};};if _gacf .Encoding !=nil {_dacd ,_cafg ,_ebbca :=_gacf .getFontEncoding ();if _ebbca !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gacf ._daef ,_gacf ._decd ,_gacf .Encoding ,_gacf .Encoding ,_ebbca );
return _ebbca ;};if _dacd !=""{_gcfac =_dacd ;};_edec =_cafg ;_eedg ,_ebbca =_cf .NewSimpleTextEncoder (_gcfac ,_edec );if _ebbca !=nil {return _ebbca ;};};if _eedg ==nil {_gebb :=_gacf ._bgbb ;if _gebb !=nil {switch _gacf ._decd {case "\u0054\u0079\u0070e\u0031":if _gebb .fontFile !=nil &&_gebb .fontFile ._gbcfa !=nil {_adc .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_eedg =_gebb .fontFile ._gbcfa ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _gebb ._feagd !=nil {_adc .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gega ,_gddg :=_gebb ._feagd .MakeEncoder ();
if _gddg ==nil {_eedg =_gega ;};if _gacf ._ceadf ==nil {_gacf ._ceadf =_gebb ._feagd .MakeToUnicode ();};};};};};if _eedg !=nil {if _edec !=nil {_adc .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edec ,_gacf .baseFields ());
_eedg =_cf .ApplyDifferences (_eedg ,_edec );};_gacf .SetEncoder (_eedg );};return nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fbg .PdfObjectArray ;Domain *_fbg .PdfObjectArray ;Function []PdfFunction ;Extend *_fbg .PdfObjectArray ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cbecc *pdfCIDFontType0 )ToPdfObject ()_fbg .PdfObject {return _fbg .MakeNull ()};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dfed *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_eccc :=_gba .NewReader (img .getBase ());_agdc :=_ced .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aceg :=_gba .NewWriter (_agdc );
_aaba :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_bcgcg :=make ([]uint32 ,3);var (_bcdf error ;_fdge ,_bdfc ,_cgfg ,_fcca ,_dgaa ,_ggcef float64 ;);for {_bcdf =_eccc .ReadSamples (_bcgcg );if _bcdf ==_gg .EOF {break ;}else if _bcdf !=nil {return img ,_bcdf ;
};_fdge =float64 (_bcgcg [0])/_aaba ;_bdfc =float64 (_bcgcg [1])/_aaba ;_cgfg =float64 (_bcgcg [2])/_aaba ;_fcca =_dfed .Matrix [0]*_ab .Pow (_fdge ,_dfed .Gamma [0])+_dfed .Matrix [3]*_ab .Pow (_bdfc ,_dfed .Gamma [1])+_dfed .Matrix [6]*_ab .Pow (_cgfg ,_dfed .Gamma [2]);
_dgaa =_dfed .Matrix [1]*_ab .Pow (_fdge ,_dfed .Gamma [0])+_dfed .Matrix [4]*_ab .Pow (_bdfc ,_dfed .Gamma [1])+_dfed .Matrix [7]*_ab .Pow (_cgfg ,_dfed .Gamma [2]);_ggcef =_dfed .Matrix [2]*_ab .Pow (_fdge ,_dfed .Gamma [0])+_dfed .Matrix [5]*_ab .Pow (_bdfc ,_dfed .Gamma [1])+_dfed .Matrix [8]*_ab .Pow (_cgfg ,_dfed .Gamma [2]);
_fdge =3.240479*_fcca +-1.537150*_dgaa +-0.498535*_ggcef ;_bdfc =-0.969256*_fcca +1.875992*_dgaa +0.041556*_ggcef ;_cgfg =0.055648*_fcca +-0.204043*_dgaa +1.057311*_ggcef ;_fdge =_ab .Min (_ab .Max (_fdge ,0),1.0);_bdfc =_ab .Min (_ab .Max (_bdfc ,0),1.0);
_cgfg =_ab .Min (_ab .Max (_cgfg ,0),1.0);_bcgcg [0]=uint32 (_fdge *_aaba );_bcgcg [1]=uint32 (_bdfc *_aaba );_bcgcg [2]=uint32 (_cgfg *_aaba );if _bcdf =_aceg .WriteSamples (_bcgcg );_bcdf !=nil {return img ,_bcdf ;};};return _cgdba (&_agdc ),nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_edba *PdfColorspaceSpecialIndexed )ToPdfObject ()_fbg .PdfObject {_gdfd :=_fbg .MakeArray (_fbg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_gdfd .Append (_edba .Base .ToPdfObject ());_gdfd .Append (_fbg .MakeInteger (int64 (_edba .HiVal )));
_gdfd .Append (_edba .Lookup );if _edba ._eceadg !=nil {_edba ._eceadg .PdfObject =_gdfd ;return _edba ._eceadg ;};return _gdfd ;};

// B returns the value of the blue component of the color.
func (_acffd *PdfColorDeviceRGB )B ()float64 {return _acffd [2]};

// Encoder returns the font's text encoder.
func (_bbaaa pdfFontType0 )Encoder ()_cf .TextEncoder {return _bbaaa ._cgbbg };

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_becea PdfModel ;_gcad *_fbg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fbg .PdfObjectName ;T *_fbg .PdfObjectString ;TU *_fbg .PdfObjectString ;TM *_fbg .PdfObjectString ;Ff *_fbg .PdfObjectInteger ;
V _fbg .PdfObject ;DV _fbg .PdfObject ;AA _fbg .PdfObject ;VariableText *VariableText ;};